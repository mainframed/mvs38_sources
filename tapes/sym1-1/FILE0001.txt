./  ADD  SSI=63440084,NAME=AMDDATA
*                                                                       00050002
*        %GOTO PRIN1;              /*                                   00100002
         MACRO                                                          00150002
&LABEL   AMDDATA   &DSECT=YES                                        */ 00200002
*%PRIN1 : ;                                                             00250002
*                                                                       00300002
*/*      AMDPRDMP INPUT MAPPING MACRO                                */ 00310002
*/*      OS/VS2 RELEASE 2  -- 8/31/72 -- LEVEL 001                   */ 00350002
*/*                                                                  */ 00400002
*/*      THIS MACRO DEFINES THE VARIOUS FORMATS OF AMDPRDMP INPUTS.  */ 00450002
*/*                                                                  */ 00452002
*/*      TO USE THIS MACRO TO OBTAIN A DSECT OF AMDPRDMP INPUT       */ 00460002
*/*      IN A BAL MODULE, CODE:                                      */ 00470002
*/*         LABEL  AMDDATA                                           */ 00480002
*/*      ISSUE A USING ON EITHER LABEL OR PRDINPUT (IF LABEL IS      */ 00490002
*/*      OMITTED)  IN ORDER TO REFERENCE THE AREAS DEFINED IN THE    */ 00490402
*/*      DSECT.                                                      */ 00490802
*/*      TO USE THIS MACRO TO DEFINE AMDPRDMP INPUT IN A BAL         */ 00492002
*/*      MODULE WITHOUT GETTING A DSECT, CODE:                       */ 00494002
*/*         LABEL  AMDDATA  &DSECT=NO                                */ 00496002
*/*                                                                  */ 00498402
*/*      TO USE THIS MACRO IN PLS, DEFINE A POINTER, PRDINPTR,       */ 00498802
*/*      TO POINT TO EITHER:                                         */ 00499202
*/*         1. THE AREA OF STORAGE INTO WHICH AMDPRDMP INPUT WILL BE */ 00499602
*/*            READ. (SAME AS BAL DSECT FACILITY)                    */ 00499702
*/*         2. A 4104-BYTE AREA INTO WHICH DATA WILL BE MOVED TO     */ 00499802
*/*            CREATE AN AMDPRDMP INPUT RECORD.                      */ 00499902
*/*                                                                  */ 00500002
*/*A000000-999999                                              Y02006*/ 00510002
*                                                                       00550002
*%GOTO PRIN2;                      /*                                   00600002
         SPACE 1                                                        00650002
         AIF   ('&DSECT' EQ 'NO').PRIN010                               00700002
&LABEL   DSECT                                                          00750002
         AGO   .PRIN020                                                 00800002
.PRIN010 ANOP                                                           00850002
&LABEL   DS    0F                                                       00900002
.PRIN020 ANOP                                                           00950002
*********************************************************************** 01000002
*        AMDPRDMP HEADER RECORD FORMATS  --  COMMON FIELDS AND        * 01050002
*        FIELDS UNIQUE FOR DSS OR SVCDUMP INPUT                       * 01060002
*********************************************************************** 01100002
         SPACE 1                                                        01150002
PRDINPUT EQU   *                                                        01160002
PRDHDRID DS    CL1                 HEADER RECORD ID                     01200002
PRDHDR   EQU   X'FF'               HEADER ID                            01210002
PRDRECID DS    CL1                 RECORD ID                            01250002
PRDHDREC EQU   X'FF'               HEADER ID                            01260002
PRDSAWRK EQU   X'00'               AMDSADMP WORK RECORD ID              01270002
PRDASID  DS    CL2                 ASID OF MEMORY BEING DUMPED          01300002
PRDMODNM DS    CL8                 NAME OF PROGRAM THAT CREATED INPUT   01350002
PRDTODVL DS    CL8                 TOD CLOCK VALUE AT TIME OF DUMP      01400002
PRDTITLE DS    CL100               TITLE FOR DUMP                       01450002
PRDREGS  EQU   *                                                        01500002
PRDFPR   DS    CL32                FLOATING POINT REGISTERS             01750002
PRDGPR   DS    CL64                GENERAL PURPOSE REGISTERS            01800002
PRDCR    DS    CL64                CONTROL REGISTERS                    01850002
PRDPSW   DS    CL8                 CURRENT PSW AT TIME OF DUMP          01900002
PRDCVT   DS    CL4                 REAL ADDRESS OF CVT                  01950002
         DS   8F                 RESERVED FOR SVC DUMP USE     @Z81700  01960000
PRDERRID DS   CL10               ERROR ID                      @Z81700  01970000
         DS   CL48               RESERVED FOR SVC DUMP USE     UZ83300  01980000
         DS   CL3722             REMAINING BYTES IN RECORD     UZ83300  01990000
         SPACE 1                                                        02000002
*********************************************************************** 02050002
*        THE FOLLOWING FIELDS OVERLAY THE PRDFPR AND SUCCEEDING       * 02100002
*        FIELDS FOR AMDSADMP INPUT                                    * 02110002
*********************************************************************** 02150002
         SPACE 1                                                        02200002
         ORG   PRDFPR                                                   02250002
PRDFLC   EQU   *                                                        02260002
PRDCSW   DS    CL8                 CSW AT ABSOLUTE LOCATION 64          02300002
PRDCAW   DS    CL4                 CAW AT ABSOLUTE LOCATION 72          02350002
         DS    CL3972              RESERVED AREA                        02400002
         SPACE 1                                                        02450002
*********************************************************************** 02500002
*        AMDPRDMP DATA RECORD FORMAT                                  * 02550002
*********************************************************************** 02600002
         SPACE 1                                                        02650002
         ORG   PRDHDRID                                                 02700002
PRDKEY1  DS    CL1                 STORAGE KEY FOR 1ST 2K OF BLOCK      02750002
PRDKEY2  DS    CL1                 STORAGE KEY FOR 2ND 2K OF BLOCK      02800002
         DS    CL2                 NAME OF THIS FIELD IS SAME AS        02850002
*                                  CORRESPONDING FIELD IN HEADER  --    02900002
*                                  I.E.,PRDASID  -- CONTAINS ASID OF    02950002
*                                  MEMORY DUMPED                        03000002
PRDADDR  DS    CL4                 ADDRESS OF STORAGE DUMPED (ON 4K     03050002
*                                  BOUNDARY)                            03060002
PRDDATA  DS    CL4096              DATA FIELD  -- CONTAINS DATA THAT    03100002
*                                  WAS AT THE ADDRESS LISTED IN THE     03110002
*                                  PRDADDR FIELD                        03120002
         SPACE 1                                                        03150002
*********************************************************************** 03200002
*        AMDPRDMP CPU STATUS RECORD FORMAT                            * 03250002
*********************************************************************** 03300002
         SPACE 1                                                        03350002
         ORG   PRDHDRID                                                 03400002
         DS    CL1                 NAME OF THIS FIELD IS SAME AS        03450002
*                                  CORRESPONDING FIELD IN HEADER --     03500002
*                                  I.E., PRDHDRID  -- CONTAINS  ID OF   03550002
*                                  RECORD                               03600002
         DS    CL1                 NAME OF THIS FIELD IS SAME AS        03650002
*                                  CORRESPONDING FIELD IN HEADER --     03700002
*                                  I.E., PRDRECID  -- CONTAINS ID OF    03750002
*                                  RECORD                               03800002
PRDCPUID EQU   X'0F'               CPU STATUS RECORD ID                 03810002
PRDFLAGS DS    CL1                 FLAGS IN CPU STATUS RECORD           03900002
PRDUNIPR EQU   X'80'               UNIPROCESSOR FLAG                    03950002
PRDSSINV EQU   X'40'               STORE STATUS MAY BE INVALID FLAG     04000002
PRDGPRVL EQU   X'20'               GPRS VALID IF PRDSSINV ALSO =1       04050002
         DS    CL1                 RESERVED                             04052002
         DC    X'0000'             THIS FIELD MUST BE '0000'X           04054002
PRDCPUAD DS    CL2                 ADDR OF CPU WHOSE STATUS WAS STORED  04060002
         DS    CL4096              NAME OF THIS FIELD IS SAME AS        04150002
*                                  CORRESPONDING FIELD IN DATA RECORD   04200002
*                                  -- I.E., PRDDATA  -- CONTAINS CPU    04250002
*                                  STATUS DATA                          04300002
         SPACE 1                                                        04350002
         ORG                                                            04400002
*        RESTORE POINTER TO HIGHEST VALUE                               04410002
         MEND                                                        */ 04450002
*%PRIN2 : ;                                                             04500002
*                                                                       04550002
*/********************************************************************/ 04560002
*/*      AMDPRDMP HEADER RECORD FORMATS  --  COMMON FIELDS AND       */ 04600002
*/*      FIELDS UNIQUE FOR DSS OR SVCDUMP INPUT                      */ 04650002
*/********************************************************************/ 04700002
*                                                                       04750002
*DECLARE                                                                04800002
*  1 PRDINPUT BASED(PRDINPTR) BDY(WORD),                                04850002
*   2 PRDHDRID CHAR(1) BDY(WORD),      /* HEADER RECORD ID           */ 04900002
*   2 PRDRECID CHAR(1),                /* RECORD ID                  */ 04950002
*   2 PRDASID CHAR(2) BDY(HWORD),      /* ASID OF MEMORY DUMPED      */ 05000002
*   2 PRDMODNM CHAR(8) BDY(WORD),      /* PROGRAM THAT CREATED INPUT */ 05050002
*   2 PRDTODVL CHAR(8) BDY(WORD),      /* TOD CLOCK VALUE AT TIME OF    05100002
*                                         DUMP                       */ 05150002
*   2 PRDTITLE CHAR(100) BDY(WORD),    /* TITLE FROM DUMP            */ 05200002
*   2 PRDREGS CHAR(168) BDY(WORD),                                      05210002
*    3 PRDFPR CHAR(32) BDY(WORD),       /* FLOATING POINT REGISTERS  */ 05250002
*    3 PRDGPR CHAR(64) BDY(WORD),       /* GENERAL PURPOSE REGISTERS */ 05300002
*    3 PRDCR CHAR(64) BDY(WORD),        /* CONTROL REGISTERS         */ 05350002
*    3 PRDPSW CHAR(8) BDY(WORD),        /* CURRENT PSW AT TIME OF       05400002
*                                         DUMP                       */ 05410002
*   2 PRDCVT CHAR(4) BDY(WORD),        /* REAL ADDR OF CVT           */ 05450002
     2 *        CHAR(32),     /* RESERVED FOR SVC DUMP USE           */ 05500000
     2 PRDERRID CHAR(10),     /* ERROR ID                            */ 05510000
     2 *        CHAR(48),     /* RESERVED FOR SVC DUMP USE  UZ83300  */ 05520000
     2 *        CHAR(3722);   /* REMAINING BYTES IN RECORD  UZ83300  */ 05530000
*                                                                       05550002
*DECLARE                                                                05560002
*  PRDHDR BIT(8) CONSTANT('FF'X),      /* HEADER ID IN PRDHDRID FIELD*/ 05570002
*  PRDHDREC BIT(8) CONSTANT('FF'X),    /* HEADER ID IN PRDRECID         05580002
*                                         FIELD                      */ 05590002
*  PRDSAWRK BIT(8) CONSTANT('00'X);    /* AMDSADMP WORK RECORD ID IN    05592002
*                                         PRDRECID FIELD             */ 05594002
*                                                                       05596002
*/********************************************************************/ 05600002
*/*      THE FOLLOWING FIELDS OVERLAY THE PRDFPR AND SUCCEEDING      */ 05650002
*/*      FIELDS FOR AMDSADMP INPUT                                   */ 05700002
*/********************************************************************/ 05750002
*                                                                       05800002
*DECLARE                                                                05850002
*  1 PRDFLC DEF(PRDFPR) BDY(WORD),                                      05900002
*   2 PRDCSW CHAR(8) BDY(WORD),        /* CSW AT ABSOLUTE LOCATION 64   05950002
*                                                                    */ 05960002
*   2 PRDCAW CHAR(4) BDY(WORD),        /* CAW AT ABSOLUTE LOCATION 72   06000002
*                                                                    */ 06010002
*   2 * CHAR(3972) BDY(WORD);          /* RESERVED AREA              */ 06050002
*                                                                       06100002
*/********************************************************************/ 06150002
*/*      AMDPRDMP DATA RECORD FORMAT                                 */ 06200002
*/********************************************************************/ 06250002
*                                                                       06300002
*DECLARE                                                                06350002
*  1 * DEF(PRDHDRID) BDY(WORD),                                         06400002
*   2 PRDKEY1 CHAR(1) BDY(WORD),       /* STORAGE KEY FOR 1ST 2K OF     06450002
*                                         BLOCK                      */ 06500002
*   2 PRDKEY2 CHAR(1),                 /* STORAGE KEY FOR 2ND 2K OF     06550002
*                                         BLOCK                      */ 06600002
*   2 * CHAR(2) BDY(HWORD),            /* NAME OF THIS FIELD SAME AS    06650002
*                                         CORRESPONDING FIELD IN HEADER 06700002
*                                         I.E., PRDASID -- CONTAINS     06750002
*                                         ASID OF MEMORY DUMPED      */ 06800002
*   2 PRDADDR CHAR(4) BDY(WORD),       /* ADDRESS OF STORAGE DUMPED     06850002
*                                         (ON 4K BOUNDARY)           */ 06860002
*   2 PRDDATA CHAR(4096) BDY(WORD);    /* DATA FIELD  -- CONTAINS DATA  06900002
*                                         THAT WAS AT THE ADDRESS       06920002
*                                         LISTED IN THE PRDADDR FIELD*/ 06930002
*                                                                       06950002
*/********************************************************************/ 07000002
*/*      AMDPRDMP CPU STATUS RECORD FORMAT                           */ 07050002
*/********************************************************************/ 07100002
*                                                                       07150002
*DECLARE                                                                07200002
*  1 * DEF(PRDHDRID) BDY(WORD),                                         07250002
*   2 * CHAR(1) BDY(WORD),             /* NAME OF THIS FIELD SAME AS    07300002
*                                         CORRESPONDING FIELD IN HEADER 07350002
*                                         I.E., PRDHDRID -- CONTAINS    07450002
*                                         ID OF RECORD               */ 07500002
*   2 * CHAR(1),                       /* NAME OF THIS FIELD SAME AS    07550002
*                                         CORRESPONDING FIELD IN HEADER 07600002
*                                         I.E., PRDRECID -- CONTAINS    07650002
*                                         ID OF RECORD               */ 07700002
*   2 PRDFLAGS CHAR(1) BDY(HWORD),     /* FLAGS                      */ 07850002
*    3 PRDUNIPR BIT(1),                /* UNIPROCCESSOR FLAG         */ 07900002
*    3 PRDSSINV BIT(1),                /* STORE STATUS MAY BE INVALID   07950002
*                                         FLAG                       */ 08000002
*    3 PRDGPRVL BIT(1),                /* GPRS VALID IF PRDSSINV        08050002
*                                         ALSO =1                    */ 08100002
*    3 * BIT(5),                       /* UNUSED FLAGS               */ 08150002
*   2 * CHAR(1),                       /* RESERVED FIELD             */ 08200002
*   2 * CHAR(2),                       /* FIELD OF ZEROES            */ 08202002
*   2 PRDCPUAD CHAR(2) BDY(HWORD),     /* ADDR OF CPU WHOSE STATUS      08210002
*                                         WAS STORED                 */ 08220002
*   2 * CHAR(4096) BDY(WORD);          /* NAME OF THIS FIELD SAME AS    08250002
*                                         CORRESPONDING FIELD IN DATA   08300002
*                                         RECORD -- I.E., PRDDATA --    08400002
*                                         CONTAINS CPU STATUS DATA   */ 08450002
*                                                                       08500002
*DECLARE                                                                08550002
*  PRDCPUID BIT(8) CONSTANT('0F'X);    /* CPU STATUS RECORD ID IN       08600002
*                                         PRDRECID FIELD             */ 08650002
*                                                                       08700002
./  ADD  SSI=32281275,NAME=AMDPCBPL
*/********************************************************************/ 00050002
*/*      AMDPRPCB INPUT MAPPING MACRO                                */ 00350002
*/*      OS/VS2 RELEASE 2  --  12/5/72 -- LEVEL 001                  */ 00400002
*/*                                                                  */ 00450002
*/*      THIS MACRO MAPS THE PRINT CONTROL BLOCK PARAMETER LIST.     */ 00500002
*/*                                                                  */ 00700002
*/*      EITHER A BASED OR A NON-BASED STRUCTURE MAY BE              */ 00750002
*/*      OBTAINED. TO GET A NON-BASED STRUCTURE CODE:                */ 00800002
*/*         %INCLUDE SYSLIB(AMDPCBPL)                                */ 00850002
*/*                                                                  */ 00900002
*/*      TO GET A BASED STRUCTURE CODE THE FOLLOWING BEFORE          */ 00950002
*/*      THE INCLUDE                                                 */ 01000002
*/*      %PCBPLBAS = 'YES'                                           */ 01050002
*/*                                                                  */ 01100002
*/*A 0-999999                                                 @Y02006*/ 01150002
*/********************************************************************/ 01200002
*  DECLARE                         /*                                */ 01900002
*%IF PCBPLBAS = ''                                                      01950002
*%  THEN                                                                02000002
*%    GOTO PCBLABL1;                                                    02050002
*     1 PCBPL BASED,               /* PCB PARAMETER LIST             */ 02100002
*%GOTO PCBLABL2;                                                        02150002
*%PCBLABL1: ;                                                           02200002
*     1 PCBPL,                     /* PCB PARAMETER LIST             */ 02250002
*%PCBLABL2: ;                                                           02300002
*       2 PCBPBGN POINTER(31),     /* LOW ADDR OF BLOCK              */ 02350002
*       2 PCBPEND POINTER(31),     /* HIGH ADDR OF BLOCK             */ 02400002
*       2 PCBPASID BIT(16),        /* ID OF ADDRESS SPACE            */ 02450002
*       2 PCBPFLG1 CHARACTER(1),   /* OPTION FLAGS                   */ 02500002
*         3 PCBPVIRT BIT(1),       /* VIRTUAL ADDRESSES REQUES       */ 02550002
*         3 PCBPREAL BIT(1),       /* REAL ADDRESSES REQUESTED       */ 02600002
*         3 PCBPLOWC BIT(1),       /* PRINT ADDRESSES 0-4K           */ 02650002
*         3 PCBPTOPC BIT(1),       /* PROVIDE TOPIC HEADER           */ 02660002
*         3 * BIT(4),              /* RESERVED                       */ 02700002
*       2 PCBPFLG2 CHARACTER(1),   /* FLAGS                          */ 02750002
*         3 PCBPFUNC BIT(1),       /* FUNCTION FLAG                  */ 02800002
*         3 * BIT(7),              /* RESERVED                       */ 02850002
*                                                                       02900002
*     PCBPENQ BIT(1) CONSTANT('0'B), /* PCBPFUNC -- ENQUEUE REQUEST  */ 02950002
*     PCBPDEQ BIT(1) CONSTANT('1'B); /* PCBPFUNC -- DEQUEUE REQUEST  */ 03000002
./  ADD  SSI=60690097,NAME=AMDSARMK
                                                                        00120002
 % DEACTIVATE OFF,PUSH,POP,ON;                                          00120802
    /*****************************************************************/ 00124002
    /*                                                               */ 00128002
    /* VIRTUAL DUMP COMMON CONTROL BLOCKS -                          */ 00132002
    /*   EXPANDS INTO BASED CONTROL BLOCKS UNLESS %RMKINIT IS        */ 00136002
    /*   DECLARED AS CHAR AND INITIALIZED TO A NON-NULL CHARACTER    */ 00157602
    /*   STRING.                                                     */ 00158402
    /*                                                               */ 00161602
    /*****************************************************************/ 00168202
                                                                        00178802
    DCL                                                                 00189402
          1 ARB BASED,              /* ADDRESS RANGE BLOCK           */ 00200002
              3 ARBADDRB PTR(31),   /* BEGINNING ADDRESS OF RANGE    */ 00300002
              3 ARBADDRE PTR(31);   /* ENDING ADDRESS OF RANGE       */ 00400002
    %IF RMKINIT ¬= '' %THEN         /* INITIALIZATION REQUIRED       */ 00500002
      %GOTO BCTINIT;                /* YES - SKIP BASED CODE         */ 00600002
    DCL                                                                 00700002
          1 BCTH BDY(WORD) BASED(VCTBCTH), /* BUFFER CONTROL TABLE      00800002
                                       HEAD                          */ 00900002
              3 BCTHBCTH CHAR(4),   /* BCTH ACRONYM                  */ 01000002
              3 BCTHFRST PTR(31),   /* ADDRESS OF FIRST BCT          */ 01100002
              3 BCTHLAST PTR(31);   /* ADDRESS OF LAST BCT           */ 01200002
                                                                        01220002
 %BCTINIT:;                                                             01240002
    DCL                                                                 01300002
          1 BCT BDY(WORD) BASED,    /* BUFFER CONTROL TABLE ENTRY    */ 01400002
              3 BCTBCT CHAR(4),     /* EBCDIC ACRONYM                */ 01420002
              3 BCTNEXT PTR(31),    /* NEXT BCT ON I/O QUEUE         */ 01500002
              3 BCTKEY1 PTR(8),     /* STORAGE KEY OF FIRST 2K       */ 01600002
              3 BCTKEY2 PTR(8),     /* STORAGE KEY OF LAST 2K        */ 01700002
              3 BCTASID FIXED(16),  /* ASID OF DATA IN BUFFER        */ 01800002
              3 BCTVADDR PTR(31),   /* VIRTUAL ADDRESS OF DATA IN       01900002
                                       BUFFER                        */ 02000002
              3 BCTRADDR PTR(31),   /* REAL ADDRESS OF BUFFER        */ 02100002
              3 BCTPGTE PTR(31),    /* ADDRESS OF PAGE TABLE ENTRY   */ 02200002
              3 BCTMDCB PTR(31),    /* ADDRESS OF MDCB FOR BUFFER    */ 02300002
              3 * CHAR(8) BDY(WORD), /* UNUSED               @Z40WI3F*/ 02400040
              3 * PTR(31),          /* UNUSED                @Z40WI3F*/ 02460040
              3 BCTLSID FIXED(31),  /* LOGICAL SLOT IDENTIFIER - PAGE'S 02520040
                                       AUX STORAGE ID        @Z40WI3F*/ 02580040
                  5 * FIXED(8),     /* UNUSED                @Z40WI3F*/ 02640040
                  5 BCTINDEX FIXED(8), /* PART/SART ENTRY NUMBER        02700040
                                                             @Z40WI3F*/ 02760040
                  5 BCTRBA FIXED(16), /* RELATIVE BLOCK ADDR @Z40WI3F*/ 02820040
              3 BCTFLGT BIT(8),     /* BUFFER TYPE FLAGS             */ 02900002
                  5 * BIT(1),       /* RESERVED                      */ 03000002
                  5 BCTWKFLE BIT(1), /* WORKFILE                     */ 03100002
                  5 BCTPGT BIT(1),  /* PAGE TABLE                    */ 03150002
                  5 BCTASM BIT(1),  /* ASM                           */ 03200002
                  5 BCTLSQA BIT(1), /* LSQA                          */ 03460002
                  5 BCTDUMP BIT(1), /* DUMP                          */ 03520002
                  5 BCTPGTF BIT(1), /* FIXED PAGE TABLE              */ 03620002
                  5 * BIT(1),       /* RESERVED                      */ 03700002
              3 BCTFLGI BIT(8),     /* BUFFER STATUS FLAGS           */ 03800002
                  5 BCTCOMP BIT(1), /* I/O COMPLETE FOR BUFFER       */ 03900002
                  5 BCTALLOC BIT(1), /* BUFFER SCHEDULED FOR I/O     */ 04000002
                  5 BCTIOERR BIT(1), /* I/O ERROR PROCESSING BUFFER  */ 04100002
                  5 BCTRECLM BIT(1), /* VIRTUAL ADDRESS RECLAIMED FROM  04200002
                                       REAL STORAGE                  */ 04220002
                  5 BCTSWPDS BIT(1), /* PAGE FROM SWAP DATA SET         04240040
                                                             @Z40WI3F*/ 04260040
              3 * PTR(16);          /* RESERVED                      */ 04300002
    %IF RMKINIT = '' %THEN          /* INITIALIZATION REQUIRED       */ 04320002
      %GOTO CCTINIT;                /* NO - SKIP INITIALIZATION CODE */ 04400002
    DCL                                                                 04700002
          1 BCTH BDY(WORD),         /* BUFFER CONTROL TABLE HEAD     */ 04800002
              3 BCTHBCTH CHAR(4) INIT('BCTH'), /* BCTH ACRONYM       */ 04900002
              3 BCTHFRST PTR(31) INIT(ADDR(BCTI)), /* ADDRESS OF        05000002
                                       FIRST BCT                     */ 05100002
              3 BCTHLAST PTR(31) INIT(ADDR(BCTI) + 3 * LENGTH(BCT)); /* 05200002
                                       ADDRESS OF LAST BCT           */ 05300002
    DCL                                                                 05400002
          1 BCTI(20) BDY(WORD),     /* BUFFER CONTROL TABLE ENTRY    */ 05500002
              3 * CHAR(4) INIT((DIM(BCTI))'BCT '), /* EBCDIC ACRONYM */ 05520002
              3 * PTR(31) INIT((DIM(BCTI))0), /*NEXT BCT ON I/O QUEUE*/ 05600002
              3 * PTR(8) INIT((DIM(BCTI))0), /* STORAGE KEY OF 1ST 2K*/ 05800002
              3 * PTR(8) INIT((DIM(BCTI))0), /*STORAGE KEY OF LAST 2K*/ 06000002
              3 * FIXED(16) INIT((DIM(BCTI))0), /* ASID OF DATA      */ 06100002
              3 * PTR(31)                                               06300002
                      INIT(0,0,0,0,                                     06400002
 '010000'X,'011000'X,'012000'X,'013000'X,'014000'X,'015000'X,'016000'X, 06500002
 '017000'X,'018000'X,'019000'X,'01A000'X,'01B000'X,'01C000'X,'01D000'X, 06600002
                '01E000'X,'01F000'X), /* VIRTUAL ADDRESS OF DATA IN     06700002
                                       BUFFER                        */ 06800002
              3 * PTR(31)                                               06900002
                      INIT('3000'X,'4000'X,'5000'X,'6000'X,             07000002
 '010000'X,'011000'X,'012000'X,'013000'X,'014000'X,'015000'X,'016000'X, 07100002
 '017000'X,'018000'X,'019000'X,'01A000'X,'01B000'X,'01C000'X,'01D000'X, 07200002
                '01E000'X,'01F000'X), /* REAL ADDRESS OF BUFFER      */ 07300002
              3 * PTR(31) INIT((DIM(BCTI))0), /*ADDR OF PGE TBL ENTRY*/ 07400002
              3 * PTR(31) INIT((DIM(BCTI))0), /* ADDRESS OF MDCB     */ 07600002
              3 * CHAR(8) BDY(WORD) INIT((DIM(BCTI))'00'X), /* LPID OF  07800002
                                       DATA IN BUFFER                */ 07900002
              3 * PTR(31) INIT((DIM(BCTI))0), /* ADDRESS OF AMB      */ 08200002
              3 * PTR(31) INIT((DIM(BCTI))0), /*RBA OF PAGE IN BUFFER*/ 08300002
              3 * BIT(8) INIT((DIM(BCTI))0), /* BUFFER TYPE FLAGS    */ 08400002
              3 * BIT(8) INIT((DIM(BCTI))0), /* BUFFER STATUS FLAGS  */ 09300002
              3 * PTR(16) INIT((DIM(BCTI))0); /* RESERVED            */ 09800002
                                                                        09900002
 %CCTINIT:;                                                             10000002
    DCL                                                                 10100002
          1 CCT BDY(WORD) BASED(CCTADDR), /* COMMON COMMUNICATION       10200002
                                       TABLE                         */ 10300002
              3 CTWAIT PTR(8),      /* HIGHEST WAIT CODE             */ 10400002
              3 CTFLG1 BIT(8),      /* FLAGS                         */ 10500002
                  5 CTERROR BIT(1), /* CALLER PROCESSES ERROR           10600002
                                       RECOVERY                      */ 10700002
                  5 CTDEVICE BIT(1), /* DIRECT ACCESS I/O IN PROGRESS*/ 10800002
                  5 CTMORTPE BIT(1), /* END OF REEL                  */ 10900002
                  5 CTWORK BIT(1),  /* WORK RECORD IN PROCESS        */ 11000002
                  5 CTDEFO BIT(1),  /* DEFAULT ADDRESS USED FOR         11100002
                                       OUTPUT                        */ 11200002
                  5 * BIT(1),       /* RESERVED                      */ 11300002
                  5 CTMP BIT(1),    /* PROCESSING ON MP SYSTEM       */ 11500002
                  5 CTERREC BIT(1), /* IGNORE CATASTROPHIC ERROR     */ 11600002
              3 CTFLG2 BIT(8),      /* FLAGS                         */ 11700002
                  5 CTDUPSW BIT(1), /* DUPLICATE LINE                */ 11800002
                  5 CTSTOR BIT(1),  /* PROTECTION KEY IN PROCESS     */ 11900002
                  5 CTPGEFLT BIT(1), /* PAGE FAULT IN PROCESS        */ 12000002
                  5 CTNOSTAT BIT(1), /* STORE STATUS NOT PERFORMED   */ 12100002
                  5 CTVIRTR BIT(1), /* VIRTUAL DUMP REQUESTED        */ 12200002
                  5 CTWKDONE BIT(1), /* END OF WORK FILE PROCESSING  */ 12300002
                  5 CTALTCON BIT(1), /* ALTERNATE CONSOLE IN USE     */ 12400002
                  5 * BIT(1),       /* RESERVED                      */ 12500002
              3 CTDEVTYP PTR(8),    /* IPL DEVICE TYPE               */ 12600002
              3 CTSENSE FIXED(15),  /* SENSE INFORMATION AREA        */ 12700002
              3 CTINADDR FIXED(15), /* IPL DEVICE ADDRESS            */ 12800002
              3 CTCCHHR CHAR(7),    /* CCHHR FOR USE DURING IPL AND     12900002
                                       WORK RECORD PROCESSING        */ 13000002
              3 CTPGECNT CHAR(1),   /* NUMBER OF RECORDS IN AMDSAPGE    13100002
                                       (D.A. IPL)                    */ 13200002
              3 CTCCHHS FIXED(31),  /* STARTING CCHH OF SYS1.PAGEDUMP*/ 13300002
              3 CTCCHHE FIXED(31),  /* ENDING CCHH OF SYS1.PAGEDUMP  */ 13400002
              3 CTCCHHW FIXED(31),  /* BEGINNING CCHH FOR WORKFILE   */ 13500002
              3 CTERBDA FIXED(31),  /* DIRECT ACCESS ERROR RECOVERY     13600002
                                       BLOCK                         */ 13700002
 /* THE FOLLOWING IS THE CCT COMMON SECTION                          */ 13800002
              3 CTERBTPE FIXED(31), /* TAPE ERROR RECOVERY BLOCK     */ 13900002
              3 CTERBCON FIXED(31), /* CONSOLE ERROR RECOVERY BLOCK  */ 14000002
              3 CTCPUI FIXED(15),   /* IPL CPU ADDRESS               */ 14100002
              3 CTOUTAD FIXED(15),  /* OUTPUT DEVICE ADDRESS         */ 14200002
              3 CTCONTYP PTR(8),    /* CONSOLE TYPE                  */ 14300002
              3 CTEBCOPD CHAR(3),   /* DEFAULT OUTPUT DEVICE ADDRESS */ 14400002
              3 CTLOWFLG BIT(8),    /* FLAGS                         */ 14500002
                  5 CTVIRTD BIT(1), /* DEFAULT TO VIRTUAL DUMP       */ 14600002
                  5 CTFP BIT(1),    /* FILE PROTECT                  */ 14700002
                  5 CTINIT BIT(1),  /* RE-INITIALIZATION PERMITTED      14750002
                                       AFTER CHANNEL ERROR           */ 14760002
                  5 CTWKSTUS BIT(1), /* STATUS OF INCOMPLETE WORKFILE - 14770002
                                       ON MEANS INSUFFICIENT SPACE,     14780002
                                       OFF MEANS I/O ERROR OCCURRED  */ 14790002
                  5 * BIT(4),       /* RESERVED                      */ 14800002
              3 CTEBCOPR CHAR(3),   /* REPLIED OUTPUT DEVICE ADDRESS */ 14900002
 /* THE FOLLOWING IS THE DUMP TYPE SECTION OF THE CCT                */ 15000002
            2 CTDMPTYP,                                                 15100002
 /* HIGH SPEED DUMP -                                                */ 15200002
              3 CTIOTYPE BIT(8),    /* I/O REQUEST FLAGS             */ 15300002
                  5 CTIOTERM BIT(1), /* TERMINATE                    */ 15400002
                  5 CTIOOUT BIT(1), /* OUTPUT TAPE                   */ 15500002
                  5 CTIODA BIT(1),  /* DIRECT ACCESS                 */ 15600002
                  5 CTIOWK BIT(1),  /* WORKFILE                      */ 15700002
                  5 CTIOCON BIT(1), /* CONSOLE                       */ 15800002
                  5 CTIOINT BIT(1), /* RETURN ON ANY INTERRUPT       */ 15900002
                  5 CTIORSET BIT(1), /* RESET CPU ON CPU SWITCH      */ 15920002
                  5 * BIT(1),       /* RESERVED                      */ 16000002
              3 * BIT(8),           /* RESERVED                      */ 16100002
              3 CTCONFLG BIT(8),    /* CONSOLE FLAGS                 */ 16200002
                  5 CTMSGOUT BIT(1), /* MSG MUST COME OUT            */ 16300002
                  5 CTREAD BIT(1),  /* CONSOLE READ IN PROGRESS      */ 16400002
                  5 * BIT(6),       /* RESERVED                      */ 16500002
              3 CTBUFTYP BIT(8),    /* BUFFER TYPE FLAGS             */ 16600002
                  5 * BIT(1),       /* RESERVED                      */ 16700002
                  5 CTWKFLE BIT(1), /* WORKFILE                      */ 16800002
                  5 CTPGT BIT(1),   /* PAGE TABLE                    */ 16850002
                  5 CTASM BIT(1),   /* ASM                           */ 16900002
                  5 CTLSQA BIT(1),  /* LSQA                          */ 17160002
                  5 CTDUMP BIT(1),  /* DUMP BUFFER                   */ 17220002
                  5 * BIT(2),       /* RESERVED                      */ 17300002
              3 CTCONSOL PTR(31),   /* ADDRESS OF CONSOLE I/O ROUTINE*/ 17400002
              3 CTLWKAD PTR(31),    /* LAST ADDRESS ON WORKFILE      */ 17500002
              3 CTCOMMIO PTR(31),   /* ADDRESS OF DUMPSIO ROUTINE    */ 17600002
              3 CTEOR PTR(31),      /* ADDRESS OF END OF REEL ROUTINE*/ 17620002
              3 CTVCCT PTR(31),     /* ADDRESS OF VCCT               */ 17700002
              3 CTPRMT1 FIXED(15),  /* WRITE PROMPT POS. (3066 ONLY) */ 17710002
                  5 CTPRMT1Y FIXED(8), /* Y COORDINATE               */ 17720002
                  5 CTPRMT1X FIXED(8), /* X COORDINATE               */ 17730002
              3 CTPRMT2 FIXED(15),  /* READ PROMPT POS. (3066 ONLY)  */ 17740002
                  5 CTPRMT2Y FIXED(8), /* Y COORDINATE               */ 17750002
                  5 CTPRMT2X FIXED(8), /* X COORDINATE               */ 17760002
              3 CTHWM FIXED(8),     /* LOGICAL 3066 SCREEN LIMIT     */ 17770002
              3 CTHWMAX FIXED(8);   /* PHYSICAL 3066 SCREEN LIMIT    */ 17780002
    DCL                                                                 17800002
          1 CTLOWDMP DEFINED(CTDMPTYP), /* THIS IS THE LOW SPEED DUMP   17900002
                                       TYPE SECTION OF THE CCT       */ 18000002
              3 CTADDRS PTR(31),    /* STARTING ADDRESS OF RANGE TO     18100002
                                       BE DUMPED                     */ 18200002
              3 CTADDRE PTR(31);    /* ENDING ADDRESS OF RANGE TO BE    18300002
                                       DUMPED                        */ 18400002
    DCL                                                                 18500002
          1 CCW BDY(DWORD) BASED,   /* FORMAT OF CCW                 */ 18600002
              3 CCWCMD PTR(8),      /* COMMAND                       */ 18700002
              3 CCWDADDR PTR(24),   /* DATA ADDRESS                  */ 18800002
              3 CCWFLAGS BIT(8),    /* CCW FLAGS                     */ 18900002
                  5 CCWDC BIT(1),   /* DATA CHAINING                 */ 19000002
                  5 CCWCC BIT(1),   /* COMMAND CHAINING              */ 19100002
                  5 CCWSLI BIT(1),  /* SUPPRESS INCORRECT LENGTH        19200002
                                       INDICATOR                     */ 19300002
                  5 CCWSKIP BIT(1), /* SUPPRESS DATA TRANSFER        */ 19400002
                  5 CCWPCI BIT(1),  /* PROGRAM-CONTROLLED INTERRUPT  */ 19500002
                  5 CCWIDA BIT(1),  /* INDIRECT DATA ADDRESS         */ 19600002
                  5 * BIT(2),       /* RESERVED                      */ 19700002
              3 * PTR(8),           /* RESERVED                      */ 19800002
              3 CCWCNT FIXED(16);   /* BYTE COUNT                    */ 19900002
    DCL                                                                 20000002
          1 CSW BDY(WORD) BASED,    /* FORMAT OF CSW                 */ 20100002
              3 CSWKEY00 BIT(8),                                        20200002
                  5 CSWKEY BIT(4),  /* PROTECT KEY                   */ 20300002
                  5 * BIT(4),       /* RESERVED                      */ 20400002
              3 CSWCADDR PTR(24),   /* COMMAND ADDRESS               */ 20500002
              3 CSWUSTAT BIT(8),    /* CSW UNIT STATUS               */ 20600002
                  5 CSWATTN BIT(1), /* ATTENTION                     */ 20700002
                  5 CSWSTMOD BIT(1), /* STATUS MODIFIER              */ 20800002
                  5 CSWCUE BIT(1),  /* CONTROL UNIT END              */ 20900002
                  5 CSWBUSY BIT(1), /* BUSY                          */ 21000002
                  5 CSWCE BIT(1),   /* CHANNEL END                   */ 21100002
                  5 CSWDE BIT(1),   /* DEVICE END                    */ 21200002
                  5 CSWUC BIT(1),   /* UNIT CHECK                    */ 21300002
                  5 CSWUE BIT(1),   /* UNIT EXCEPTION                */ 21400002
              3 CSWCSTAT BIT(8),    /* CSW CHANNEL STATUS            */ 21500002
                  5 CSWPCI BIT(1),  /* PROGRAM-CONTROLLED INTERRUPT  */ 21600002
                  5 CSWIL BIT(1),   /* INCORRECT LENGTH              */ 21700002
                  5 CSWPGC BIT(1),  /* PROGRAM CHECK                 */ 21800002
                  5 CSWPTC BIT(1),  /* PROTECTION CHECK              */ 21900002
                  5 CSWCDC BIT(1),  /* CHANNEL DATA CHECK            */ 22000002
                  5 CSWCCC BIT(1),  /* CHANNEL CONTROL CHECK         */ 22100002
                  5 CSWICC BIT(1),  /* INTERFACE CONTROL CHECK       */ 22200002
                  5 CSWCHC BIT(1),  /* CHAINING CHECK                */ 22300002
              3 CSWCNT FIXED(16);   /* RESIDUAL BYTE COUNT           */ 22400002
    %IF RMKINIT ¬= '' %THEN         /* INITIALIZATION REQUIRED       */ 22500002
      %GOTO IODINIT;                /* YES - SKIP BASED CODE         */ 22600002
    DCL                                                                 22700002
          1 DSCE BDY(WORD) BASED(VCTDSCE), /* DYNAMIC STORAGE CONTROL   22800002
                                       ELEMENT                       */ 22900002
              3 DSCEDSCE CHAR(4),   /* DSCE ACRONYM                  */ 23000002
              3 DSCEBEGN PTR(31),   /* BEGINNING ADDRESS OF DYNAMIC     23100002
                                       STORAGE AREA                  */ 23200002
              3 DSCENEXT PTR(31),   /* ADDRESS OF NEXT AVAILABLE        23300002
                                       STORAGE                       */ 23400002
              3 DSCETBEG PTR(31),   /* ADDRESS OF FIRST TRACE ENTRY  */ 23404002
              3 DSCETCUR PTR(31),   /* CURRENT TRACE ENTRY ADDRESS   */ 23408002
              3 DSCETEND PTR(31);   /* END OF TRACE AND DYNAMIC AREA */ 23412002
                                                                        23420002
 %IODINIT:;                                                             23440002
    DCL                                                                 23500002
          1 IODB BDY(WORD) BASED,   /* INPUT/OUTPUT DEVICE BLOCK     */ 23600002
              3 IODBIODB CHAR(4),   /* IODB ACRONYM                  */ 23700002
              3 IODBIDEN CHAR(4),   /* IODB TYPE                     */ 23800002
              3 IODBFLAG BIT(16),   /* FLAGS                         */ 23900002
                  5 IODBTERM BIT(1), /* CATASTROPHIC ERROR           */ 24000002
                  5 IODBPTRM BIT(1), /* TERMINATE VIRTUAL DUMP       */ 24100002
                  5 IODBINT BIT(1), /* INTERRUPT PROCESSED           */ 24200002
                  5 IODBIOC BIT(1), /* I/O ERROR                     */ 24300002
                  5 IODBHALT BIT(1), /* DEVICE QUIESCED              */ 24400002
                  5 IODBACTV BIT(1), /* I/O ACTIVE ON DEVICE         */ 24450002
                  5 IODBCONW BIT(1), /* WAIT ON NEXT FULL SCREEN (3066  24460002
                                       CONSOLE ONLY)                 */ 24470002
                  5 IODBSTRT BIT(1), /* I/O STARTED BY ERROR RECOVERY   24480002
                                       ROUTINE                       */ 24490002
                  5 * BIT(8),       /* RESERVED                      */ 24500002
              3 IODBDEV FIXED(15),  /* DEVICE ADDRESS                */ 24600002
              3 IODBCLAS PTR(8),    /* DEVICE CLASS                  */ 24700002
              3 IODBTYPE PTR(8),    /* UNIT TYPE                     */ 24800002
              3 IODBCPU FIXED(15),  /* CPU ADDRESS                   */ 24900002
              3 IODBBCT PTR(31),    /* ADDRESS OF FIRST BCT ON I/O      25000002
                                       REQUEST QUEUE                 */ 25100002
              3 IODBCAW PTR(31),    /* CAW USED FOR CURRENT I/O         25200002
                                       OPERATION                     */ 25300002
              3 IODBCSW CHAR(8),    /* CSW FOR CURRENT OPERATION     */ 25400002
              3 IODBCCHH CHAR(8),   /* SEEK ADDRESS                  */ 25500002
                  5 IODBM CHAR(1),  /* 'M' VALUE                     */ 25600002
                  5 IODBSEEK CHAR(2), /* BEGINNING OF SEEK ADDRESS   */ 25700002
                  5 IODBSRCH CHAR(4), /* SEARCH ADDRESS              */ 25800002
                      7 IODBCC CHAR(2), /* CYLINDER NUMBER           */ 25804002
                      7 IODBHH CHAR(2), /* TRACK NUMBER              */ 25808002
                  5 IODBR CHAR(1),  /* RECORD NUMBER                 */ 25820002
              3 IODBSENS CHAR(24);  /* SENSE INFORMATION             */ 25900002
    %IF RMKINIT ¬= '' %THEN         /* INITIALIZATION REQUIRED       */ 25920002
      %GOTO DSCINIT;                /* YES - SKIP BASED CODE         */ 25940002
    DCL                                                                 26000002
          1 MDCE BDY(WORD) BASED(VCTMDCE), /* MEMORY DISPATCHING        26100002
                                       CONTROL ELEMENT               */ 26200002
              3 MDCEMDCE CHAR(4),   /* MDCE ACRONYM                  */ 26300002
              3 MDCEACTV PTR(31),   /* ACTIVE MDCB QUEUE             */ 26400002
              3 MDCEAVIL PTR(31);   /* AVAILABLE MDCB QUEUE          */ 26500002
    DCL                                                                 26600002
          1 MDCB BDY(WORD) BASED,   /* MEMORY DISPATCHING CONTROL       26700002
                                       BLOCK                         */ 26800002
              3 MDCBMDCB CHAR(4),   /* MDCB ACRONYM                  */ 26900002
              3 MDCBNEXT PTR(31),   /* NEXT MDCB                     */ 27000002
              3 MDCBPSW CHAR(8),    /* PSW AT TIME OF INTERRUPT      */ 27100002
              3 MDCBGRS BDY(WORD) CHAR(64), /* GENERAL REGISTERS     */ 27200002
                  5 MDCBGR0 PTR(31),                                    27300002
                  5 MDCBGR1 PTR(31),                                    27400002
                  5 MDCBGR2 PTR(31),                                    27500002
                  5 MDCBGR3 PTR(31),                                    27600002
                  5 MDCBGR4 PTR(31),                                    27700002
                  5 MDCBGR5 PTR(31),                                    27800002
                  5 MDCBGR6 PTR(31),                                    27900002
                  5 MDCBGR7 PTR(31),                                    28000002
                  5 MDCBGR8 PTR(31),                                    28100002
                  5 MDCBGR9 PTR(31),                                    28200002
                  5 MDCBGR10 PTR(31),                                   28300002
                  5 MDCBGR11 PTR(31),                                   28400002
                  5 MDCBGR12 PTR(31),                                   28500002
                  5 MDCBGR13 PTR(31),                                   28600002
                  5 MDCBGR14 PTR(31),                                   28700002
                  5 MDCBGR15 PTR(31),                                   28800002
              3 MDCBSTOR PTR(31),   /* CONTENTS OF CONTROL REGISTER 1*/ 28900002
              3 MDCBPI FIXED(15),   /* PROGRAM INTERRUPT CODE        */ 29000002
              3 MDCBFLGS BIT(8),    /* MDCB FLAGS                    */ 29100002
                  5 MDCBASMI BIT(1), /* ASM FUNCTION STATUS          */ 29200002
                  5 MDCBDUMP BIT(1), /* DUMP REQUEST STATUS          */ 29250002
                  5 * BIT(6),       /* RESERVED                      */ 29300002
              3 * BIT(8);           /* RESERVED                      */ 29400002
    %GOTO PSWCOM;                   /* SKIP INITIALIZATION CODE      */ 29500002
                                                                        29600002
 %DSCINIT:;                                                             29700002
    DCL                                                                 29800002
          1 DSCE BDY(WORD),         /* DYNAMIC STORAGE CONTROL          29900002
                                       ELEMENT                       */ 30000002
              3 DSCEDSCE CHAR(4) INIT('DSCE'), /* DSCE ACRONYM       */ 30100002
              3 DSCEBEGN PTR(31) INIT('1000'X), /* BEGINNING ADDRESS    30200002
                                       OF DYNAMIC STORAGE AREA       */ 30300002
              3 DSCENEXT PTR(31) INIT('1000'X), /* ADDRESS OF NEXT      30400002
                                       AVAILABLE STORAGE             */ 30500002
              3 DSCETBEG PTR(31) INIT('2F00'X), /* ADDRESS OF FIRST     30600002
                                       TRACE ENTRY                   */ 30700002
              3 DSCETCUR PTR(31) INIT('2F00'X), /* CURRENT TRACE ENTRY  30800002
                                       ADDRESS                       */ 30900002
              3 DSCETEND PTR(31) INIT('3000'X); /* END OF TRACE AND     31000002
                                       DYNAMIC AREA                  */ 31100002
    DCL                                                                 31800002
          1 IODBI BDY(WORD),        /* INPUT/OUTPUT DEVICE BLOCK     */ 31900002
              3 IODBDA,             /* DIRECT ACCESS IODB            */ 32000002
                  5 * CHAR(4) INIT('IODB'), /* IODB ACRONYM          */ 32100002
                  5 * CHAR(4) INIT('-DA '), /* IODB TYPE             */ 32200002
                  5 * (14) FIXED(31) INIT((14)0),                       32300002
              3 IODBOUT,            /* OUTPUT IODB                   */ 32400002
                  5 * CHAR(4) INIT('IODB'), /* IODB ACRONYM          */ 32500002
                  5 * CHAR(4) INIT('-OUT'), /* IODB TYPE             */ 32600002
                  5 * (14) FIXED(31) INIT((14)0),                       32700002
              3 IODBWORK,           /* WORKFILE IODB                 */ 32800002
                  5 * CHAR(4) INIT('IODB'), /* IODB ACRONYM          */ 32900002
                  5 * CHAR(4) INIT('-WK '), /* IODB TYPE             */ 33000002
                  5 * (14) FIXED(31) INIT((14)0),                       33100002
              3 IODBCON,            /* CONSOLE IODB                  */ 33200002
                  5 * CHAR(4) INIT('IODB'), /* IODB ACRONYM          */ 33300002
                  5 * CHAR(4) INIT('-CON'), /* IODB TYPE             */ 33400002
                  5 * (14) FIXED(31) INIT((14)0);                       33500002
    GENERATE DATA REFS(IODBDA,IODBOUT,IODBWORK,IODBCON);                33600002
          ENTRY IODBDA                                                  33700002
          ENTRY IODBOUT                                                 33720002
          ENTRY IODBWORK                                                33740002
          ENTRY IODBCON                                                 33760002
 @ENDGEN                                                                33800002
    DCL                                                                 34400002
          1 MDCE BDY(WORD),         /* MEMORY DISPATCHING CONTROL       34500002
                                       ELEMENT                       */ 34600002
              3 MDCEMDCE CHAR(4) INIT('MDCE'), /* MDCE ACRONYM       */ 34700002
              3 MDCEACTV PTR(31) INIT(0), /* ACTIVE MDCB QUEUE       */ 34800002
              3 MDCEAVIL PTR(31) INIT(ADDR(MDCB)); /* AVAILABLE         34900002
                                       MDCB QUEUE                    */ 35000002
    DCL                                                                 35100002
          1 MDCB(10) BDY(WORD),      /* MEMORY DISPATCHING CONTROL      35200002
                                       BLOCK                         */ 35300002
              3 MDCBMDCB CHAR(4) INIT((DIM(MDCB))'MDCB'), /* MDCB       35400002
                                       ACRONYM                       */ 35420002
              3 MDCBNEXT PTR(31) INIT(ADDR(MDCB) + LENGTH(MDCB),        35500002
               ADDR(MDCB) + 2*LENGTH(MDCB),ADDR(MDCB) + 3*LENGTH(MDCB), 35520002
               ADDR(MDCB) + 4*LENGTH(MDCB),ADDR(MDCB) + 5*LENGTH(MDCB), 35524002
               ADDR(MDCB) + 6*LENGTH(MDCB),ADDR(MDCB) + 7*LENGTH(MDCB), 35528002
               ADDR(MDCB) + 8*LENGTH(MDCB),ADDR(MDCB) + 9*LENGTH(MDCB), 35532002
               0),                   /* ADDRESS OF NEXT MDCB         */ 35540002
              3 MDCBPSW CHAR(8) INIT((DIM(MDCB))'00'X), /* PSW AT TIME  35600002
                                       OF INTERRUPT                  */ 35700002
              3 MDCBGRS BDY(WORD) CHAR(64) INIT((DIM(MDCB))'00'X), /*   36000002
                                       GENERAL REGISTERS             */ 36100002
              3 MDCBSTOR PTR(31) INIT((DIM(MDCB))0), /* CONTENTS OF     37700002
                                       CONTROL REGISTER 1            */ 37800002
              3 MDCBPI FIXED(15) INIT((DIM(MDCB))0), /* PROGRAM         37900002
                                       INTERRUPT CODE                */ 38000002
              3 MDCBFLGS BIT(8) INIT((DIM(MDCB))0), /* MDCB FLAGS    */ 38100002
                  5 MDCBASMI BIT(1), /* ASM FUNCTION STATUS          */ 38200002
                  5 MDCBDUMP BIT(1), /* DUMP REQUEST STATUS          */ 38250002
                  5 * BIT(6),       /* RESERVED                      */ 38300002
              3 * BIT(8) INIT((DIM(MDCB))0); /* RESERVED             */ 38400002
                                                                        38500002
 %PSWCOM:;                                                              38600002
    DCL                                                                 38620002
          1 PSW BASED,              /* OS/VS PSW (S/370 EC MODE)     */ 38640002
            2 PSWSM CHAR(1),        /* SYSTEM MASK                   */ 38644002
              3 * BIT(1),                                               38664002
              3 PSWPER BIT(1),      /* PROGRAM EVENT RECORDING       */ 38684002
              3 * BIT(1),                                               38688002
              3 * BIT(1),                                               38692002
              3 * BIT(1),                                               38696002
              3 PSWDAT BIT(1),      /* DYNAMIC ADDRESS TRANSLATION   */ 38696802
              3 PSWIO BIT(1),       /* INPUT / OUTPUT                */ 38697602
              3 PSWXTRNL BIT(1),    /* EXTERNAL                      */ 38698402
            2 * CHAR(1),                                                38699202
              3 PSWKEY BIT(4),      /* PROTECTION KEY                */ 38699302
              3 PSWMODE BIT(1),     /* EXTENDED CONTROL MODE         */ 38699402
              3 PSWMCH BIT(1),      /* MACHINE CHECK MASK            */ 38699502
              3 PSWAIT BIT(1),      /* WAIT STATE                    */ 38699602
              3 PSWPRBLM BIT(1),    /* PROBLEM STATE                 */ 38699702
            2 PSWCCPM CHAR(1),                                          38699802
              3 * BIT(2),           /* UNDEFINED                     */ 38699902
              3 * BIT(2),           /* CONDITION CODE                */ 38733202
              3 PSWFPO BIT(1),      /* FIXED POINT OVERFLOW          */ 38753202
              3 PSWDO BIT(1),       /* DIVIDE OVERFLOW               */ 38754002
              3 PSWEU BIT(1),       /* EXPONENT UNDERFLOW            */ 38757202
              3 PSWSIG BIT(1),      /* SIGNIFICANCE                  */ 38761202
            2 * CHAR(1),                                                38765202
              3 PSWSP BIT(1),       /* SEGMENT PROTECTION            */ 38766002
            2 PSWIA PTR(31),        /* INSTRUCTION ADDRESS           */ 38766102
            2 PSWEND CHAR(0);       /* END OF PSW                    */ 38766202
    DCL                                                                 38766302
          PTRTREAL PTR(31) CONSTANT(30712); /* PTRT LOCATION X'77F8' */ 38773302
    DCL                                                                 38780302
          1 PTRT BASED(PTRTREAL),   /* PTRT DEFINITION               */ 38787302
              3 PTRTPTRT CHAR(4),   /* EBCDIC ACRONYM                */ 38794302
              3 PTRTLGID CHAR(4),   /* LOGICAL GROUP FOR MEMORY      */ 38801302
              3 PTRTRS (NUMSEG) PTR(31), /* SEGMENT TABLE SECTION    */ 38811002
              3 PTRTVS (NUMSEG) PTR(31); /* VIRTUAL ADDR SECTION     */ 38831002
    DCL                                                                 38855602
          PTRTRSA PTR(31) BASED;    /* REAL STORAGE ADDRESS OF PAGE     38900002
                                       TABLE                         */ 39000002
    DCL                                                                 39100002
          PTRTVSA PTR(31) BASED(ADDR(PTRTRSA)+NUMSEG*LENGTH(PTRTRSA));  39240002
                                    /* VIRTUAL ADDR OF PAGE TABLE    */ 39260002
    DCL                                                                 39300002
          1 RCB BDY(WORD) BASED,    /* RECOVERY CONTROL BLOCK        */ 39400002
              3 RCBNEXT PTR(31),    /* NEXT HIGHER RCB               */ 39500002
              3 RCBSTOR PTR(31),    /* CONTROL REGISTER 1 FOR EXIT   */ 39600002
              3 RCBSAVE PTR(31),    /* ADDRESS OF RECOVERY ROUTINE      39700002
                                       REGISTER SAVE AREA            */ 39800002
              3 RCBEXIT PTR(31),    /* ADDRESS OF RECOVERY ROUTINE   */ 39900002
              3 RCBBASE PTR(31);    /* BASE ADDRESS OF RECOVERY         40000002
                                       ROUTINE                       */ 40100002
    %IF DEBUG ¬= 'YES' %THEN        /* DEBUG AREAS TO BE INCLUDED    */ 40120002
      %GOTO NODEBUG;                /* NO - SKIP DEBUG AREAS         */ 40140002
    DCL                                                                 40160002
          1 DEBUGLSD LOCATION(3286), /* LOW CORE DEBUG COUNTERS      */ 40180002
              3 PFTRCLM  FIXED(15), /* NUMBER OF PAGES RECLAIMED        40180102
                                       FROM REAL STORAGE             */ 40180202
              3 PFBUFWAT FIXED(15), /* NUMBER OF TIMES WAT ENTERED FROM 40180802
                                       BUF TO WAIT FOR OUTPUT BUFFERS*/ 40184802
              3 PFTAPCPU FIXED(15), /* NUMBER OF TIMES SWITCHED CPUS */ 40188802
              3 PFSIODA  FIXED(15), /* NUMBER OF TIMES SIO ENTERED FOR  40192802
                                       I/O TO D.A.                   */ 40196802
              3 PFSIOWK  FIXED(15), /* NUMBER OF TIMES SIO ENTERED FOR  40197602
                                       I/O TO WORKFILE               */ 40198402
              3 PFSIOOUT FIXED(15), /* NUMBER OF TIMES SIO ENTERED FOR  40199202
                                       I/O TO OUTPUT                 */ 40199302
              3 PFSIOPCI FIXED(15), /* NUMBER OF TIMES SIO QUEUED PCI   40199402
                                       CHANNEL PROGRAM TO OUTPUT     */ 40199502
              3 PFSIOWAT FIXED(15), /* NUMBER OF TIMES WAT ENTERED FROM 40199602
                                       SIO TO WAIT (CHANNEL PROGRAMS)*/ 40199702
              3 PFWATENW FIXED(15), /* NUMBER OF TIMES WAT ENTERED      40199802
                                       ENABLED WAIT STATE            */ 40199902
              3 PFWATEN  FIXED(15), /* NUMBER OF TIMES WAT ENABLED   */ 40219902
              3 PFWATDE  FIXED(15), /* NUMBER OF TIMES WAT RECEIVED     40239902
                                       DEVICE END FOR CHAIN          */ 40259902
              3 PFWATOIP FIXED(15), /* NUMBER OF TIMES WAT PROCESSED    40263902
                                       INTERRUPTS OTHER THAN REQUEST */ 40264702
              3 PFIOIRST FIXED(15); /* NUMBER OF TIMES IOI RESTARTED    40265502
                                       OUTPUT I/O FOLLOWING DEV END  */ 40266302
                                                                        40274702
 %NODEBUG:;                                                             40283202
    DCL                                                                 40291602
          1 SADMPLSD LOCATION(3312), /* SADMP LOW CORE STORAGE          40300002
                                       DEFINITIONS                   */ 40400002
              3 PSWSADMP CHAR(8),   /* EBCDIC IDENTIFIER             */ 40500002
              3 SVIRPSW CHAR(8) BDY(DWORD), /* RETURN PSW TO AMDSASVI   40600002
                                       FOLLOWING MEMORY SWITCH       */ 40604002
              3 AUDPSW CHAR(8) BDY(DWORD), /* AMDSAAUD PSW TO GIVE      40700002
                                    CONTROL TO RCB EXIT              */ 40720002
              3 SAVEDUMP CHAR(8),   /* EBCDIC IDENTIFIER OF SAVE        41400002
                                       AREAS                         */ 41500002
              3 LOWGRS CHAR(64),    /* SAVE AREA FOR GENERAL            41600002
                                       REGISTERS ACROSS CPU-CPU         41700002
                                       COMMUNICATIONS                */ 41800002
              3 LOWCRS CHAR(64),    /* SAVE AREA FOR CONTROL            41900002
                                       REGISTERS ACROSS CPU-CPU         42000002
                                       COMMUNICATIONS                */ 42100002
              3 SVINAME CHAR(4),    /* SAVE AREA ID                  */ 42200002
              3 SVISAVE CHAR(100),  /* REGISTER SAVE AREA            */ 42300002
              3 PGINAME CHAR(4),    /* SAVE AREA ID                  */ 42400002
              3 PGISAVE CHAR(100),  /* REGISTER SAVE AREA            */ 42500002
              3 IOINAME CHAR(4),    /* SAVE AREA ID                  */ 42600002
              3 IOISAVE CHAR(100),  /* REGISTER SAVE AREA            */ 42700002
              3 AUDNAME CHAR(4),    /* SAVE AREA ID                  */ 42800002
              3 AUDSAVE CHAR(100),  /* REGISTER SAVE AREA            */ 42900002
              3 FRMNAME CHAR(4),    /* SAVE AREA ID                  */ 43000002
              3 FRMSAVE CHAR(100),  /* REGISTER SAVE AREA            */ 43100002
              3 GTMNAME CHAR(4),    /* SAVE AREA ID                  */ 43200002
              3 GTMSAVE CHAR(100);  /* REGISTER SAVE AREA            */ 43300002
    %IF RMKINIT ¬= '' %THEN         /* INITIALIZATION REQUIRED       */ 43400002
      %GOTO VCTINIT;                /* YES - SKIP BASED CODE         */ 43500002
    DCL                                                                 43600002
          1 VCCT BDY(WORD) BASED(VCCTREG), /* VIRTUAL COMMON            43700002
                                       COMMUNICATION TABLE           */ 43800002
              3 VCTVCT CHAR(4),     /* VCCT ACRONYM                  */ 43900002
              3 VCTRCB PTR(31),     /* RCB QUEUE POINTER             */ 44000002
              3 VCTRECSN BIT(8),    /* RECURSION FLAGS               */ 44100002
                  5 VCTPGIR BIT(1), /* PROGRAM INTERRUPT RECURSION      44200002
                                       INVALID                       */ 44300002
                  5 VCTUPDR BIT(1), /* PROGRAM INTERRUPT RECURSION IN   44400002
                                       AMDSAUPD INVALID              */ 44500002
                  5 VCTEXIR BIT(1), /* RECURSION THROUGH TERMINATION    44600002
                                       ROUTINE INVALID               */ 44700002
                  5 VCTRSMR BIT(1), /* RECURSION THROUGH AMDSARSM       44720002
                                       INVALID                       */ 44740002
                  5 * BIT(4),       /* RESERVED                      */ 44800002
              3 VCTFLGS BIT(8),     /* FLAGS                         */ 44900002
                  5 VCTSADMP BIT(1), /* RECOVERY DUMP REQUESTED      */ 45000002
                  5 VCTMEMIN BIT(1), /* MEMORY IS IN STORAGE         */ 45100002
                  5 VCTASMIC BIT(1), /* ASM IN CONTROL               */ 45200002
                  5 VCTSARTB BIT(1), /* BAD SART             @Z40WI3F*/ 45220000
                  5 VCTLRCLM BIT(1), /* NO RECLAIM FOR LOCAL MEMORY  */ 45240002
                  5 VCTNOI22 BIT(1), /* INHIBIT I22 MSG      @YM5001 */ 45300002
                  5 * BIT(2),        /* RESERVED             @YM5001 */ 45350002
              3 VCTRECVA FIXED(16), /* SADMP RECOVERY DUMP ASID      */ 45400002
              3 VCTMDCE PTR(31),    /* MDCE PTR                      */ 45500002
              3 VCTSTOR PTR(31),    /* SEGMENT TABLE ORIGIN FOR         45600002
                                       MEMORY SWITCH                 */ 45700002
              3 VCTDSCE PTR(31),    /* DSCE PTR                      */ 45800002
              3 VCTBCTH PTR(31),    /* BCTH PTR                      */ 45900002
              3 VCTBCTC PTR(31),    /* CURRENT BCT PTR               */ 46000002
              3 VCTIODB PTR(31),    /* IODB PTR                      */ 46100002
              3 VCTARB PTR(31),     /* ARB PTR                       */ 46200002
              3 VCTSUBPL PTR(31),   /* SUBPOOL DUMP LIST POINTER     */ 46300002
              3 VCTWKHI PTR(8),     /* NUMBER OF RECORDS ON WORKFILE */ 46400002
              3 VCTWKC PTR(8),      /* CURRENT POSITION OF WORKFILE  */ 46500002
              3 VCTCPUC FIXED(15),  /* CURRENT CPU ADDRESS           */ 46600002
              3 VCTASCB PTR(31),    /* CURRENT ASCB ADDRESS IN          46700002
                                       PROCESS                       */ 46800002
              3 * PTR(31),          /* UNUSED                @Z40WI3F*/ 46820040
              3 VCTPTRT PTR(31),    /* ADDR OF PTRT                  */ 46900002
              3 VCTASID FIXED(16),  /* CURRENT ASID                  */ 47000002
              3 VCTAUDIT FIXED(15), /* ERROR CODE FOR INVOKING          47200002
                                       AMDSAAUD FOR A DUMP           */ 47220002
              3 VCTCBID CHAR(8),    /* SYSTEM CONTROL BLOCK IN USE   */ 47300002
                  5 * CHAR(7),                                          47320002
                  5 VCTCBIDN PTR(8), /* CONTROL BLOCK ID             */ 47340002
              3 VCTJBNME CHAR(8),   /* JOBNAME CURRENTLY BEING          47400002
                                       PROCESSED                     */ 47500002
              3 VCTCBADR PTR(31),   /* ADDRESS OF SYSTEM CONTROL        47600002
                                       BLOCK IN USE                  */ 47700002
              3 VCTLPA PTR(31),     /* ADDRESS OF LPA FOR RELOCATION */ 47800002
              3 VCTPGT PTR(31),     /* ADDRESS OF SADMP PAGE TABLE   */ 47900002
              3 VCTSVCTB PTR(31),   /* ADDRESS OF SVCSADMP TABLE     */ 48000002
              3 VCTCPOUT PTR(31),   /* ADDRESS OF CURRENT OUTPUT        48020002
                                       CHANNEL PROGRAM               */ 48040002
              3 VCTEXTRA FIXED(15), /* NUMBER OF PAGES USED ABOVE 1     48060002
                                       SEGMENT                       */ 48064002
              3 * FIXED(15),        /* RESERVED                      */ 48080002
              3 VCTCCTV PTR(31),    /* VIRTUAL ADDRESS OF CCT        */ 48100002
              3 VCTVCCTV PTR(31);   /* VIRTUAL ADDRESS OF VCCT       */ 48200002
    %GOTO COMMON;                   /* SKIP INITIALIZATION CODE      */ 48300002
                                                                        48400002
 %VCTINIT:;                                                             48500002
    DCL                                                                 48600002
          1 VCCT BDY(WORD) EXTERNAL LOCAL, /* VIRTUAL COMMON            48700002
                                       COMMUNICATION TABLE           */ 48800002
              3 VCTVCT CHAR(4) INIT('VCCT'), /* VCCT ACRONYM         */ 48900002
              3 VCTRCB PTR(31) INIT(0), /* RCB QUEUE POINTER         */ 49000002
              3 VCTRECSN BIT(8) INIT('00'X), /* RECURSION FLAGS      */ 49100002
                  5 VCTPGIR BIT(1), /* PROGRAM INTERRUPT RECURSION      49200002
                                       INVALID                       */ 49300002
                  5 VCTUPDR BIT(1), /* PROGRAM INTERRUPT RECURSION IN   49400002
                                       AMDSAUPD INVALID              */ 49500002
                  5 VCTEXIR BIT(1), /* RECURSION THROUGH TERMINATION    49600002
                                       ROUTINE INVALID               */ 49700002
                  5 VCTRSMR BIT(1), /* RECURSION THROUGH AMDSARSM       49720002
                                       INVALID                       */ 49740002
                  5 * BIT(4),       /* RESERVED                      */ 49800002
              3 VCTFLGS BIT(8) INIT('00'X), /* FLAGS                 */ 49900002
                  5 VCTSADMP BIT(1), /* RECOVERY DUMP REQUESTED      */ 50000002
                  5 VCTMEMIN BIT(1), /* MEMORY IS IN STORAGE         */ 50100002
                  5 VCTASMIC BIT(1), /* ASM IN CONTROL               */ 50200002
                  5 VCTSARTB BIT(1), /* BAD SART             @Z40WI3F*/ 50220000
                  5 VCTLRCLM BIT(1), /* NO RECLAIM FOR LOCAL MEMORY  */ 50240002
                  5 VCTNTERM BIT(1), /* NORMAL TERMINATION           */ 50270002
                  5 * BIT(2) ,      /* RESERVED                      */ 50300002
              3 VCTRECVA FIXED(16) INIT('FFFD'X), /* SADMP RECOVERY     50400002
                                       DUMP ASID                     */ 50500002
              3 VCTMDCE PTR(31) INIT(ADDR(MDCE)), /* MDCE PTR        */ 50600002
              3 VCTSTOR PTR(31) INIT(0), /* SEGMENT TABLE ORIGIN FOR    50700002
                                       MEMORY SWITCH                 */ 50800002
              3 VCTDSCE PTR(31) INIT(ADDR(DSCE)), /* DSCE PTR        */ 50900002
              3 VCTBCTH PTR(31) INIT(ADDR(BCTH)), /* BCTH PTR        */ 51000002
              3 VCTBCTC PTR(31) INIT(ADDR(BCTI)), /* CURRENT BCT PTR */ 51100002
              3 VCTIODB PTR(31) INIT(ADDR(IODBI)), /* IODB PTR       */ 51200002
              3 VCTARB PTR(31) INIT(ADDR(ARBH)), /* ARB PTR          */ 51300002
              3 VCTSUBPL PTR(31) INIT(ADDR(SDLH)), /* SUBPOOL DUMP      51400002
                                       LIST POINTER                  */ 51500002
              3 VCTWKHI PTR(8) INIT(0), /* NUMBER OF RECORDS ON         51600002
                                       WORKFILE                      */ 51700002
              3 VCTWKC PTR(8) INIT(0), /* CURRENT POSITION OF           51800002
                                       WORKFILE                      */ 51900002
              3 VCTCPUC FIXED(15) INIT(0), /* CURRENT CPU ADDRESS    */ 52000002
              3 VCTASCB PTR(31) INIT(0), /* CURRENT ASCB ADDRESS IN     52100002
                                       PROCESS                       */ 52200002
              3 * PTR(31),          /* UNUSED                @Z40WI3F*/ 52220040
              3 VCTPTRT PTR(31) INIT(PTRTREAL), /* ADDR OF PTRT      */ 52300002
              3 VCTASID FIXED(16) INIT(0), /* CURRENT ASID           */ 52400002
              3 VCTAUDIT FIXED(15) INIT(0), /* ERROR CODE FOR INVOKING  52500002
                                       AMDSAAUD FOR A DUMP           */ 52600002
              3 VCTCBID CHAR(8) INIT(' '), /* SYSTEM CONTROL BLOCK IN   52700002
                                       USE                           */ 52800002
                  5 * CHAR(7),                                          52820002
                  5 VCTCBIDN PTR(8), /* CONTROL BLOCK ID             */ 52840002
              3 VCTJBNME CHAR(8) INIT(' '), /* JOBNAME CURRENTLY        52900002
                                       BEING PROCESSED               */ 53000002
              3 VCTCBADR PTR(31) INIT(0), /* ADDRESS OF SYSTEM          53100002
                                       CONTROL BLOCK IN USE          */ 53200002
              3 VCTLPA PTR(31) INIT(0), /* ADDRESS OF LPA FOR           53300002
                                       RELOCATION                    */ 53400002
              3 VCTPGT PTR(31) INIT(ADDR(SADMPPGT)), /* ADDRESS OF      53500002
                                       SADMP PAGE TABLE              */ 53600002
              3 VCTSVCTB PTR(31) INIT(ADDR(SVCSADMP)), /* ADDRESS OF    53700002
                                       SVCSADMP TABLE                */ 53800002
              3 VCTCPOUT PTR(31) INIT(ADDR(OUTCCW)), /* ADDRESS OF      53820002
                                       CURRENT OUTPUT CHANNEL PROGRAM*/ 53840002
              3 VCTEXTRA FIXED(15) INIT(0), /* NUMBER OF PAGES USED     53860002
                                       ABOVE 1 SEGMENT               */ 53864002
              3 * FIXED(15) INIT(0), /* RESERVED                     */ 53880002
              3 VCTCCTV PTR(31) INIT(0), /* VIRTUAL ADDRESS OF CCT   */ 53900002
              3 VCTVCCTV PTR(31) INIT(0); /* VIRTUAL ADDRESS OF VCCT */ 54000002
                                                                        54100002
 %COMMON:;                                                              54200002
    DCL                                                                 54300002
          1 SDL BASED,              /* SUBPOOL DUMP LIST             */ 54400002
              3 SDLNUM PTR(8),      /* NUMBER OF ENTRIES             */ 54500002
              3 SDLSPN PTR(8);      /* SUBPOOL NUMBER TO BE DUMPED   */ 54600002
                                                                        54700002
    /*****************************************************************/ 54800002
    /*                                                               */ 54900002
    /* REGISTER DECLARES                                             */ 55000002
    /*                                                               */ 55100002
    /*****************************************************************/ 55200002
                                                                        55300002
    DCL                                                                 55400002
          RETREG REG(14) PTR(31);   /* RETURN REGISTER               */ 55500002
    DCL                                                                 55600002
          RETCODE REG(15) FIXED(31); /* RETURN CODE REGISTER         */ 55700002
    DCL                                                                 55800002
          BASEREG REG(11) PTR(31) RESTRICTED; /* BASE REGISTER       */ 55900002
    DCL                                                                 56000002
          VCCTREG REG(12) PTR(31) RESTRICTED; /* VCCT ADDRESS        */ 56100002
    DCL                                                                 56200002
          R0 REG(0) PTR(31);                                            56300002
    DCL                                                                 56400002
          R1 REG(1) PTR(31);                                            56500002
    DCL                                                                 56600002
          R2 REG(2) PTR(31);                                            56700002
    DCL                                                                 56800002
          R3 REG(3) PTR(31);                                            56900002
    DCL                                                                 57000002
          R4 REG(4) PTR(31);                                            57100002
    DCL                                                                 57200002
          R5 REG(5) PTR(31);                                            57300002
    DCL                                                                 57400002
          R6 REG(6) PTR(31);                                            57500002
    DCL                                                                 57600002
          R7 REG(7) PTR(31);                                            57700002
    DCL                                                                 57800002
          R8 REG(8) PTR(31);                                            57900002
    DCL                                                                 58000002
          R9 REG(9) PTR(31);                                            58100002
    DCL                                                                 58200002
          R10 REG(10) PTR(31);                                          58300002
    DCL                                                                 58400002
          R11 REG(11) PTR(31);                                          58500002
    DCL                                                                 58600002
          R12 REG(12) PTR(31);                                          58700002
    DCL                                                                 58800002
          R13 REG(13) PTR(31);                                          58900002
    DCL                                                                 59000002
          R14 REG(14) PTR(31);                                          59100002
    DCL                                                                 59200002
          R15 REG(15) PTR(31);                                          59300002
                                                                        59400002
    /*****************************************************************/ 59500002
    /*                                                               */ 59600002
    /* SAVE AREA FORMATS                                             */ 59700002
    /*                                                               */ 59800002
    /*****************************************************************/ 59900002
                                                                        60000002
    DCL                                                                 60100002
          1 REGLOCAL BDY(WORD) BASED, /* FORMAT OF LOW CORE SAVE        60200002
                                       AREAS                         */ 60300002
              3 REGL0 PTR(31),                                          60400002
              3 REGL1 PTR(31),                                          60500002
              3 REGL2 PTR(31),                                          60600002
              3 REGL3 PTR(31),                                          60700002
              3 REGL4 PTR(31),                                          60800002
              3 REGL5 PTR(31),                                          60900002
              3 REGL6 PTR(31),                                          61000002
              3 REGL7 PTR(31),                                          61100002
              3 REGL8 PTR(31),                                          61200002
              3 REGL9 PTR(31),                                          61300002
              3 REGL10 PTR(31),                                         61400002
              3 REGL11 PTR(31),                                         61500002
              3 REGL12 PTR(31),                                         61600002
              3 REGL13 PTR(31),                                         61700002
              3 REGL14 PTR(31),                                         61800002
              3 REGL15 PTR(31);                                         61900002
    DCL                                                                 62000002
          1 SAVEFORM BDY(WORD) BASED(R13), /* FORMAT OF STANDARD SAVE   62100002
                                       AREA                          */ 62200002
              3 SAVEID CHAR(1),                                         62300002
              3 SAVENAME CHAR(3),   /* MODULE NAME - LAST 3 CHARS    */ 62400002
              3 SAVEBACK PTR(31),   /* PREVIOUS SAVE AREA            */ 62500002
              3 SAVENEXT PTR(31),   /* NEXT SAVE AREA                */ 62600002
              3 SAVER14 PTR(31),                                        62700002
              3 SAVER15 PTR(31),                                        62800002
              3 SAVER0 PTR(31),                                         62900002
              3 SAVER1 PTR(31),                                         63000002
              3 SAVER2 PTR(31),                                         63100002
              3 SAVER3 PTR(31),                                         63200002
              3 SAVER4 PTR(31),                                         63300002
              3 SAVER5 PTR(31),                                         63400002
              3 SAVER6 PTR(31),                                         63500002
              3 SAVER7 PTR(31),                                         63600002
              3 SAVER8 PTR(31),                                         63700002
              3 SAVER9 PTR(31),                                         63800002
              3 SAVER10 PTR(31),                                        63900002
              3 SAVER11 PTR(31),                                        64000002
              3 SAVER12 PTR(31);                                        64100002
                                                                        64200002
    /*****************************************************************/ 64300002
    /*                                                               */ 64400002
    /* MISCELLANEOUS CONSTANTS                                       */ 64500002
    /*                                                               */ 64600002
    /*****************************************************************/ 64700002
                                                                        64800002
    DCL                                                                 64900002
          CCTADDR PTR(31) CONSTANT(28672); /* ADDR OF CCT ('7000'X)  */ 65000002
    DCL                                                                 65100002
          PGEMASK BIT(8) CONSTANT('01'X); /* SYSTEM MASK-ENABLED FOR    65200002
                                       EXTERNAL INTERRUPTS ONLY, DAT    65300002
                                       OFF                           */ 65400002
    DCL                                                                 65500002
          DATMASK BIT(8) CONSTANT('05'X); /* SYSTEM MASK-ENABLED FOR    65600002
                                       EXTERNAL INTERRUPTS ONLY, DAT    65700002
                                       ON                            */ 65800002
    DCL                                                                 65820002
          NUMSEG FIXED(31) CONSTANT(256); /* NUMBER OF SEGMENTS IN      65840002
                                       SYSTEM                        */ 65860002
    DCL                                                                 65900002
          ON BIT(1) CONSTANT('1'B); /* SWITCH ON                     */ 66000002
    DCL                                                                 66100002
          OFF BIT(1) CONSTANT('0'B); /* SWITCH OFF                   */ 66200002
                                                                        66300002
    /*****************************************************************/ 66400002
    /*                                                               */ 66500002
    /* SVC NUMBERS                                                   */ 66600002
    /*                                                               */ 66700002
    /*****************************************************************/ 66800002
                                                                        66900002
    DCL                                                                 67000002
          SIOSVC FIXED(15) CONSTANT(0); /* SVC NUMBER FOR AMDSASIO   */ 67100002
    DCL                                                                 67300002
          WATSVC FIXED(15) CONSTANT(1); /* SVC NUMBER FOR AMDSAWAT   */ 67400002
    DCL                                                                 67500002
          TAPSVC FIXED(15) CONSTANT(2); /* SVC NUMBER FOR AMDSATAP   */ 67600002
    DCL                                                                 67700002
          CONSVC FIXED(15) CONSTANT(3); /* SVC NUMBER FOR AMDSACON   */ 67800002
    DCL                                                                 67900002
          GTMSVC FIXED(15) CONSTANT(4); /* SVC NUMBER FOR AMDSAGTM   */ 68000002
    DCL                                                                 68100002
          FRMSVC FIXED(15) CONSTANT(5); /* SVC NUMBER FOR AMDSAFRM   */ 68200002
    DCL                                                                 68300002
          ASMSVC FIXED(15) CONSTANT(6); /* SVC NUMBER FOR AMDSAASM   */ 68400002
    DCL                                                                 68500002
          ERMSVC FIXED(15) CONSTANT(7); /* SVC NUMBER FOR AMDSAERM   */ 68600002
    DCL                                                                 68700002
          SINSVC FIXED(15) CONSTANT(8); /* SVC NUMBER FOR AMDSASIN   */ 68800002
    DCL                                                                 68900002
          UPDSVC FIXED(15) CONSTANT(9); /* SVC NUMBER FOR AMDSAUPD   */ 69000002
    DCL                                                                 69100002
          TERSVC FIXED(15) CONSTANT(10); /* SVC NUMBER FOR AMDSATER  */ 69200002
    DCL                                                                 69300002
          CSASVC FIXED(15) CONSTANT(11); /* SVC NUMBER FOR AMDSACSA  */ 69400002
    DCL                                                                 69500002
          AIDSVC FIXED(15) CONSTANT(12); /* SVC NUMBER FOR AMDSAAID  */ 69600002
    DCL                                                                 69700002
          AUDSVC FIXED(15) CONSTANT(13); /* SVC NUMBER FOR AMDSAAUD  */ 69800002
    DCL                                                                 69900002
          BUFSVC FIXED(15) CONSTANT(14); /* SVC NUMBER FOR AMDSABUF  */ 70000002
    DCL                                                                 70100002
          DERSVC FIXED(15) CONSTANT(15); /* SVC NUMBER FOR AMDSADER  */ 70200002
    DCL                                                                 70300002
          ARDSVC FIXED(15) CONSTANT(16); /* SVC NUMBER FOR AMDSAARD  */ 70400002
    DCL                                                                 70500002
          MDMSVC FIXED(15) CONSTANT(17); /* SVC NUMBER FOR AMDSAMDM  */ 70600002
    DCL                                                                 70700002
          RSMSVC FIXED(15) CONSTANT(18); /* SVC NUMBER FOR AMDSARSM  */ 70800002
    DCL                                                                 70900002
          AMRSVC FIXED(15) CONSTANT(19); /* SVC NUMBER FOR AMDSAAMR  */ 71000002
    DCL                                                                 71100002
          ERBSVC FIXED(15) CONSTANT(20); /* SVC NUMBER FOR AMDSAERB  */ 71200002
    DCL                                                                 71300002
          ERPSVC FIXED(15) CONSTANT(21); /* SVC NUMBER FOR AMDSAERP  */ 71400002
    DCL                                                                 71500002
          GTFSVC FIXED(15) CONSTANT(22); /* SVC NUMBER FOR AMDSAGTF  */ 71600002
    DCL                                                                 71700002
          ERISVC FIXED(15) CONSTANT(23); /* SVC NUMBER FOR AMDSAERI  */ 71800002
    DCL                                                                 71900002
          UCBSVC FIXED(15) CONSTANT(24); /* SVC NUMBER FOR AMDSAUCB  */ 72000002
    DCL                                                                 72100002
          VCKSVC FIXED(15) CONSTANT(25); /* SVC NUMBER FOR AMDSAVCK  */ 72200002
    DCL                                                                 72300002
          SPQSVC FIXED(15) CONSTANT(26); /* SVC NUMBER FOR AMDSASPQ  */ 72400002
    DCL                                                                 72500002
          IOBSVC FIXED(15) CONSTANT(27); /* SVC NUMBER FOR AMDSAIOB  */ 72600002
    DCL                                                                 72700002
          BINSVC FIXED(15) CONSTANT(28); /* SVC NUMBER FOR AMDSABIN  */ 72800002
    DCL                                                                 72900002
          INRSVC FIXED(15) CONSTANT(29); /* SVC NUMBER FOR AMDSAINR  */ 73000002
    DCL                                                                 73100002
          VRTSVC FIXED(15) CONSTANT(30); /* SVC NUMBER FOR AMDSAVRT  */ 73200002
                                                                        73700002
    /*****************************************************************/ 73800002
    /*                                                               */ 73900002
    /* MESSAGE IDS                                                   */ 74000002
    /*                                                               */ 74100002
    /*****************************************************************/ 74200002
                                                                        74300002
    DCL                                                                 74600002
          AMD002I BIT(8) CONSTANT('02'X); /* REFERENCE FOR MESSAGE   */ 74700002
    DCL                                                                 74800002
          AMD004A BIT(8) CONSTANT('04'X); /* REFERENCE FOR MESSAGE   */ 74900002
    DCL                                                                 75000002
          AMD010I BIT(8) CONSTANT('0A'X); /* REFERENCE FOR MESSAGE   */ 75100002
    DCL                                                                 75200002
          AMD012D BIT(8) CONSTANT('0C'X); /* REFERENCE FOR MESSAGE   */ 75300002
    DCL                                                                 75400002
          AMD014A BIT(8) CONSTANT('0E'X); /* REFERENCE FOR MESSAGE   */ 75500002
    DCL                                                                 75520002
          AMD015I BIT(8) CONSTANT('0F'X); /* REFERENCE FOR MESSAGE   */ 75540002
    DCL                                                                 75600002
          AMD016I BIT(8) CONSTANT('10'X); /* REFERENCE FOR MESSAGE   */ 75630002
    DCL                                                                 75660002
          AMD017I BIT(8) CONSTANT('11'X); /* REFERENCE FOR MESSAGE   */ 75700002
    DCL                                                                 75800002
          AMD018I BIT(8) CONSTANT('12'X); /* REFERENCE FOR MESSAGE   */ 75900002
    DCL                                                                 76000002
          AMD019A BIT(8) CONSTANT('13'X); /* REFERENCE FOR MESSAGE   */ 76100002
    DCL                                                                 76200002
          AMD020A BIT(8) CONSTANT('14'X); /* REFERENCE FOR MESSAGE   */ 76300002
    DCL                                                                 76400002
          AMD022I BIT(8) CONSTANT('16'X); /* REFERENCE FOR MESSAGE   */ 76500002
    DCL                                                                 76600002
          AMD023I BIT(8) CONSTANT('17'X); /* REFERENCE FOR MESSAGE   */ 76700002
    DCL                                                                 76800002
          AMD025I BIT(8) CONSTANT('19'X); /* REFERENCE FOR MESSAGE   */ 76900002
    DCL                                                                 76900602
          AMD029D BIT(8) CONSTANT('1D'X); /* REFERENCE FOR MESSAGE   */ 76901202
    DCL                                                                 76902002
          AMD030I BIT(8) CONSTANT('1E'X); /* REFERENCE FOR MESSAGE   */ 76902402
    DCL                                                                 76904002
          AMD031I BIT(8) CONSTANT('1F'X); /* REFERENCE FOR MESSAGE   */ 76908002
    DCL                                                                 76920002
          AMD032I BIT(8) CONSTANT('20'X); /* REFERENCE FOR MESSAGE   */ 76940002
    DCL                                                                 77000002
          AMD033I BIT(8) CONSTANT('21'X); /* REFERENCE FOR MESSAGE   */ 77100002
    DCL                                                                 77200002
          AMD034I BIT(8) CONSTANT('22'X); /* REFERENCE FOR MESSAGE   */ 77300002
    DCL                                                                 78100002
          MSGCR FIXED(8) CONSTANT(0); /* COMMAND REJECT ID           */ 78120002
    DCL                                                                 78200002
          MSGIR FIXED(8) CONSTANT(1); /* INTV REQUIRED ID            */ 78220002
    DCL                                                                 78300002
          MSGBOC FIXED(8) CONSTANT(2); /* BUS OUT CK ID              */ 78320002
    DCL                                                                 78400002
          MSGEC FIXED(8) CONSTANT(3); /* EQUIPMENT CK ID             */ 78420002
    DCL                                                                 78500002
          MSGDC FIXED(8) CONSTANT(4); /* DATA CK ID                  */ 78520002
    DCL                                                                 78600002
          MSGOR FIXED(8) CONSTANT(5); /* OVERRUN ID                  */ 78620002
    DCL                                                                 78700002
          MSGTCC FIXED(8) CONSTANT(6); /* TCC ID                     */ 78720002
    DCL                                                                 78800002
          MSGSCK FIXED(8) CONSTANT(7); /* SEEK CK ID                 */ 78820002
    DCL                                                                 78900002
          MSGPE FIXED(8) CONSTANT(8); /* PERMANENT ERR ID            */ 78920002
    DCL                                                                 79000002
          MSGEOC FIXED(8) CONSTANT(10); /* END OF CYL ID             */ 79120002
    DCL                                                                 79200002
          MSGEDP FIXED(8) CONSTANT(11); /* ENV DATA ID               */ 79220002
    DCL                                                                 79300002
          MSGNRF FIXED(8) CONSTANT(12); /* NO RCD FOUND ID           */ 79320002
    DCL                                                                 79400002
          MSGFP FIXED(8) CONSTANT(13); /* FILE PROT ID               */ 79420002
    DCL                                                                 79500002
          MSGOI FIXED(8) CONSTANT(14); /* OPER INCOMP ID             */ 79520002
    DCL                                                                 79600002
          MSGMAM FIXED(8) CONSTANT(15); /* MISS ADDR ID              */ 79620002
    DCL                                                                 79700002
          MSGATTN FIXED(8) CONSTANT(16); /* ATTENTION ID             */ 79720002
    DCL                                                                 79800002
          MSGSTM FIXED(8) CONSTANT(17); /* STATUS MOD ID             */ 79820002
    DCL                                                                 79900002
          MSGCUE FIXED(8) CONSTANT(18); /* CONTROL UNIT END ID       */ 79920002
    DCL                                                                 80000002
          MSGBUSY FIXED(8) CONSTANT(19); /* BUSY ID                  */ 80020002
    DCL                                                                 80100002
          MSGUE FIXED(8) CONSTANT(20); /* UNIT EXCEPTION ID          */ 80120002
    DCL                                                                 80200002
          MSGPCI FIXED(8) CONSTANT(21); /* PCI ID                    */ 80220002
    DCL                                                                 80300002
          MSGIL FIXED(8) CONSTANT(22); /* INCORRECT LNG ID           */ 80320002
    DCL                                                                 80400002
          MSGPCK FIXED(8) CONSTANT(23); /* PROG CK ID                */ 80420002
    DCL                                                                 80500002
          MSGPTK FIXED(8) CONSTANT(24); /* PROT CK ID                */ 80520002
    DCL                                                                 80600002
          MSGCDC FIXED(8) CONSTANT(25); /* CHAN DATA CK ID           */ 80620002
    DCL                                                                 80700002
          MSGCCC FIXED(8) CONSTANT(26); /* CHAN CTL CK ID            */ 80720002
    DCL                                                                 80800002
          MSGICC FIXED(8) CONSTANT(27); /* ICC ID                    */ 80820002
    DCL                                                                 80900002
          MSGCC FIXED(8) CONSTANT(28); /* CHAINING CK ID             */ 80920002
    DCL                                                                 81000002
          MSGUNK FIXED(8) CONSTANT(29); /* UNKNOWN ERR ID            */ 81020002
    DCL                                                                 81100002
          MSGERS FIXED(8) CONSTANT(30); /* ERR ON SENSE ID           */ 81120002
    DCL                                                                 81200002
          MSGERR FIXED(8) CONSTANT(31); /* ERR IN ERR REC ID         */ 81220002
    DCL                                                                 81300002
          MSGBLF FIXED(8) CONSTANT(32); /* BUFFERED LOG FULL ID      */ 81320002
    DCL                                                                 81340002
          MSGITF FIXED(8) CONSTANT(33); /* INVALID TRACK FORMAT ID   */ 81360002
    DCL                                                                 81400002
          MSGLP FIXED(8) CONSTANT(34); /* LOAD POINT ID              */ 81420002
    DCL                                                                 81500002
          MSGDCC FIXED(8) CONSTANT(35); /* DATA CONV CK ID           */ 81520002
    DCL                                                                 81600002
          MSGNC FIXED(8) CONSTANT(36); /* NOT CAPABLE ID             */ 81620002
    DCL                                                                 81700002
          MSGPEID FIXED(8) CONSTANT(37); /* PEID BURST CK ID         */ 81800002
                                                                        82000002
    /*****************************************************************/ 82100002
    /*                                                               */ 82200002
    /* CONTROL BLOCK IDS FOR VALIDITY CHECKING                       */ 82300002
    /*                                                               */ 82400002
    /*****************************************************************/ 82500002
                                                                        82600002
    DCL                                                                 82700002
          VSPCTID PTR(8) CONSTANT(1); /* SPCT ID             @Z40WI3F*/ 82800040
    DCL                                                                 82900002
          VASCBID PTR(8) CONSTANT(2); /* ASCB ID                     */ 83000002
    DCL                                                                 83200002
          VASXBID PTR(8) CONSTANT(3); /* ASXB ID                     */ 83300002
    DCL                                                                 83400002
          VASVTID PTR(8) CONSTANT(4); /* ASVT ID                     */ 83500002
    DCL                                                                 83600002
          VCVTID PTR(8) CONSTANT(5); /* CVT ID                       */ 83700002
    DCL                                                                 83800002
          VEDBID PTR(8) CONSTANT(6); /* EDB ID                       */ 83900002
    DCL                                                                 84000002
          VDQEID PTR(8) CONSTANT(7); /* DQE ID                       */ 84100002
    DCL                                                                 84200002
          VBCBID PTR(8) CONSTANT(8); /* GTFBCB ID                    */ 84300002
    DCL                                                                 84400002
          VMCCEID PTR(8) CONSTANT(9); /* MCCE ID                     */ 84500002
    DCL                                                                 84600002
          VMCQEID PTR(8) CONSTANT(10); /* MCQE ID                    */ 84700002
    DCL                                                                 84800002
          VSPQEID PTR(8) CONSTANT(11); /* SPQE ID                    */ 84900002
    DCL                                                                 85000002
          VPARTID PTR(8) CONSTANT(12); /* PART ID            @Z40WI3F*/ 85100040
    DCL                                                                 85200002
          VSGTID PTR(8) CONSTANT(13); /* SEGMENT TABLE ID            */ 85300002
    DCL                                                                 85400002
          VRSMHID PTR(8) CONSTANT(14); /* RSM HEADER ID              */ 85500002
    DCL                                                                 85600002
          VLPMBID PTR(8) CONSTANT(15); /* LPMB ID                    */ 85700002
    DCL                                                                 85800002
          VUCBID PTR(8) CONSTANT(16); /* UCB ID                      */ 85820002
    DCL                                                                 85900002
          VASMVTID PTR(8) CONSTANT(17); /* ASMVT ID                  */ 86000002
    DCL                                                                 86100002
          VTCBID PTR(8) CONSTANT(18); /* TCB ID                      */ 86200002
    DCL                                                                 86220002
          VSARTID PTR(8) CONSTANT(19); /* SART ID            @Z40WI3F*/ 86240040
    DCL                                                                 86260002
          VPVTID PTR(8) CONSTANT(20); /* PVT ID                      */ 86280002
                                                                        86300002
    /*****************************************************************/ 86400002
    /*                                                               */ 86500002
    /* SUPPORTED DEVICE TYPE IDENTIFIERS                             */ 86600002
    /*                                                               */ 86700002
    /*****************************************************************/ 86800002
                                                                        86900002
    DCL                                                                 87000002
          DT2314 BIT(8) CONSTANT('08'X); /* 2314                     */ 87100002
    DCL                                                                 87200002
          DT3330 BIT(8) CONSTANT('09'X); /* 3330                     */ 87300002
    DCL                                                                 87400002
          DT33301 BIT(8) CONSTANT('0D'X); /* 3330-1                  */ 87500002
    DCL                                                                 87600002
          DT23051 BIT(8) CONSTANT('06'X); /* 2305-1                  */ 87700002
    DCL                                                                 87800002
          DT23052 BIT(8) CONSTANT('07'X); /* 2305-2                  */ 87900002
    DCL                                                                 88000002
          DT3340 BIT(8) CONSTANT('0A'X); /* 3340                     */ 88100002
    DCL                                                                 88150000
          DT3350 BIT(8) CONSTANT('0B'X); /* 3350             @Z30RSTA*/ 88200000
./  ADD  SSI=43170087,NAME=ANYMOD
         MACRO                                                          10000000
&NAME    ANYMOD &LOAD=,&CALL=,&DELETE=,&LIST=,&C=8                      20000000
*/***********************************************************@ZM00952*/ 22000003
*/*           ANYMOD                                         @ZM00952*/ 24000003
*/*OLTEP VS2                                                 @ZM00952*/ 26000003
*/*                                                          @ZM00952*/ 28000003
&NAME    BRING LOAD=&LOAD,CALL=&CALL,DELETE=&DELETE,LIST=&LIST,C=&C     30000000
         MEND                                                           40000000
./  ADD  SSI=43170086,NAME=BRING
         MACRO                                                          01000000
&NAME    BRING &LOAD=,&CALL=,&DELETE=,&LIST=,&C=                        02000000
         LCLA  &A,&B,&K,&L                                              03000000
         LCLC  &MOD,&MOD1                                               04000000
&B       SETA  &C+1                                                     05000000
&L       SETA  0                                                        06000000
&A       SETA  &C/8*128                                                 07000000
*/*           TO LOAD, LOAD & CALL, OR DELETE A MODULE       @ZM00952*/ 07040003
*/*PARAMETERS-                                               @ZM00952*/ 07080003
*/*      LOAD=(MODNAME)                                      @ZM00952*/ 07120003
*/*      CALL=(MODNAME)                                      @ZM00952*/ 07160003
*/*      DELETE=(MODNAME)                                    @ZM00952*/ 07200003
*/*      LIST=(PARAMETER LIST)                               @ZM00952*/ 07240003
*/*      C=(N)                                               @ZM00952*/ 07280003
*/*           (MODNAME) IS THE EIGHT CHARACTER MODULE NAME   @ZM00952*/ 07320003
*/*                     FROM ANYMOD MACRO OR TWO CHAR SUFFIX @ZM00952*/ 07360003
*/*                     FROM IFDMOD MACRO. IT CAN BE A SYMBOL@ZM00952*/ 07400003
*/*                     THAT IS THE ADDR OF THE ITEM, THE    @ZM00952*/ 07440003
*/*                     ACTUAL NAME IN QUOTES, OR A REGISTER @ZM00952*/ 07480003
*/*                     IN PARENTHESIS CONTAINING THE ADDR.  @ZM00952*/ 07520003
*/*           (PARAMETER LIST) IS A PARAMETER LIST TO BE     @ZM00952*/ 07560003
*/*                     PASSED TO THE CALLED PROGRAM. IT CAN @ZM00952*/ 07600003
*/*                     BE A SYMBOL OR A REGISTER (IN        @ZM00952*/ 07640003
*/*                     PARENTHESIS) CONTAINING THE ADDR.    @ZM00952*/ 07680003
*/*           (N)       IS THE NUMBER OF CHARACTERS SENT     @ZM00952*/ 07720003
*/*                     BY THE IFDMOD AND ANYMOD MACROS.     @ZM00952*/ 07760003
*/*                     IT IS TWO FOR IFDMOD AND EIGHT       @ZM00952*/ 07800003
*/*                     FOR ANYMOD.                          @ZM00952*/ 07840003
*/***********************************************************@ZM00952*/ 07880003
         AIF   (T'&LOAD NE 'O').LD1                                     08000000
         AIF   (T'&CALL NE 'O').CL1                                     09000000
         AIF   (T'&DELETE NE 'O').DE1                                   10000000
         MNOTE 8,'KEYWORD LOAD, CALL, OR DELETE MISSING'                11000000
         MEXIT                                                          12000000
.LD1     ANOP                                                           13000000
&A       SETA  &A+32                                                    14000000
&MOD     SETC  '&LOAD'                                                  15000000
&K       SETA  K'&LOAD                                                  16000000
         AIF   (&K LT &B).OK                                            17000000
&L       SETA  &K-&C                                                    18000000
&MOD1    SETC  '&LOAD'(&B,&L)                                           19000000
         AGO   .OK                                                      20000000
.CL1     ANOP                                                           21000000
&MOD     SETC  '&CALL'                                                  22000000
&K       SETA  K'&CALL                                                  23000000
         AIF   (&K LT &B).OK                                            24000000
&L       SETA  &K-&C                                                    25000000
&MOD1    SETC  '&CALL'(&B,&L)                                           26000000
         AGO   .OK                                                      27000000
.DE1     ANOP                                                           28000000
&A       SETA  &A+16                                                    29000000
&MOD     SETC  '&DELETE'                                                30000000
&K       SETA  K'&DELETE                                                31000000
         AIF   (&K LT &B).OK                                            32000000
&L       SETA  &K-&C                                                    33000000
&MOD1    SETC  '&DELETE'(&B,&L)                                         34000000
.OK      AIF   (&L EQ 0).OKA                                            35000000
         AIF   ('&MOD'(1,1) EQ '(' OR '&MOD'(1,1) EQ '''').OKA1         36000000
         AIF   (&K LT 9).OKA                                            37000000
.ER1A    ANOP                                                           38000000
&MOD     SETC  '&MOD'(1,&C)                                             39000000
.ER1B    MNOTE 8,'TOO MANY CHARACTERS IN &MOD&MOD1'                     40000000
         MEXIT                                                          41000000
.OKA1    AIF   (&L LT 3).OKA                                            42000000
&MOD     SETC  '&MOD'(2,&C-1)                                           43000000
&MOD1    SETC  '&MOD1'(1,&L-1)                                          44000000
         AGO   .ER1B                                                    45000000
.OKA     ANOP                                                           46000000
&NAME    DS    0H                                                       47000000
         AIF   (T'&LIST EQ 'O').SKP1                                    48000000
         AIF   ('&LIST'(1,1) NE '(').SKP1                               49000000
         ST    &LIST.,L&SYSNDX .        STORE LIST ADDRESS              50000000
.SKP1    AIF   ('&MOD'(1,1) NE '(').SKP2                                51000000
         MVC   P&SYSNDX.+2(&C),0&MOD .   NAME INTO PARAMETER LIST       52000000
         AGO   .SKP3                                                    53000000
.SKP2    AIF   ('&MOD'(1,1) EQ '''').SKP3                               54000000
         MVC   P&SYSNDX.+2(&C),&MOD .    NAME INTO PARAMETER LIST       55000000
.SKP3    ANOP                                                           56000000
         LA    R14,R&SYSNDX .                                           57000000
         L     R15,TAB28 .              TRANSIENT MANAGER ENTRY POINT   58000000
         CNOP  2,4 .                                                    59000000
         BALR  R1,R15 .                                                 60000000
P&SYSNDX DC    AL1(&A) .         INDICATORS FOR TRANSIENT MANAGER       61000000
         DC    AL1(2) .                 MACRO LEVEL                     62000000
         AIF   ('&MOD'(1,1) EQ '''').SKP4                               63000000
         DC    CL&C.' ' .           MODULE                              64000000
         AGO   .SKP5                                                    65000000
.SKP4    AIF   (&L EQ 0).SKP4A                                          66000000
&MOD     SETC  '&MOD'(1,&C)                                             67000000
         DC    CL&C&MOD&MOD1 .             MODULE NAME                  68000000
         AGO   .SKP5                                                    69000000
.SKP4A   ANOP                                                           70000000
         DC    CL&C&MOD .    MODULE NAME                                71000000
.SKP5    ANOP                                                           72000000
         AIF   (T'&LIST EQ 'O').SKP3A                                   73000000
L&SYSNDX DC    A(&LIST) .                                               74000000
.SKP3A   ANOP                                                           75000000
R&SYSNDX DS    0H .               RETURN ADDRESS                        76000000
         MEND                                                           77000000
./  ADD  SSI=42271024,NAME=BRKELEM
         MACRO                                                          03000000
         BRKELEM                                                        06000000
*********************************************************************** 09000000
*                                                                     * 12000000
*        MAPPING DSECT FOR BREAK ELEMENTS AND ASSOCIATED FLAGS.       * 15000000
*                                                                     * 18000000
*        STATUS -- VERSION NO. 01 -  RELEASE NO. 01 - OS/VS2          * 21000000
*                                                                     * 24000000
*        CHANGE LEVEL -- 00 - DATE 03/09/72                           * 27000000
*                                                                     * 30000000
*********************************************************************** 33000000
BRKELEM  DSECT                                                          36000000
BRKLINK  DS    F -                POINTER TO NEXT BREAK ELEMENT.        39000000
BRKADDR  DS    F -                PROBLEM PROGRAM INSTRUCTION ADDRESS.  42000000
BRKINST  DS    2F -               ORIGINAL INSTRUCTION AND 2 BYTE SVC.  45000000
BRKFLGS  DS    1X -               ONE BYTE FOR FLAGS.                   48000000
BALSW    EQU   B'10000000' -      BAL OR BALR IN ORIGINAL INSTRUCTION.  51000000
BRKRANGE EQU   B'01000000' -      THIS BREAK ELEMENT IS ONE OF A RANGE. 54000000
BRKLIST  EQU   B'00100000' -      THIS BREAK ELEMENT IS ONE OF A LIST.  57000000
BRKNONOT EQU   B'00010000' -      USER IS NOT TO BE NOTIFIED IF THIS    60000000
*                                 BREAKPOINT IS ENCOUNTERED.            63000000
         DS    X -                RESERVED.                             66000000
BRKDISP  DS    H -                DISPLACEMENT FROM FIRST ADDRESS OF    69000000
*                                 A RANGE.                              72000000
BRKNAME  DS    F -                POINTER TO THE ADDRESS STRING.        75000000
BRKCHAIN DS    F -                POINTER TO THE SUB-COMMAND CHAIN.     78000000
BRKCOUNT DS    F -                COUNT INFORMATION.                    81000000
BRKRB    DS    F -                POINTER TO PROBLEM PROGRAM RB.        84000000
         DS    0D -               FORCE LENGTH EQUATE TO DOUBLE WORD.   87000000
BRKLEN   EQU   *-BRKELEM -        BREAK ELEMENT LENGTH.                 90000000
         MEND                                                           93000000
./  ADD  SSI=32281248,NAME=BRPRTMSG
         MACRO                                                          00050002
&NAME    BRPRTMSG &ADDR,&LN                                             00100002
.*A001200,008600-008920,009100                                   Y02006 00102002
.*C009500                                                        Y02006 00104002
.***  GLOBAL VARIABLE &BALMOD INDICATES IF BAL MODULE OR PLS MODULE **  00110002
         GBLB  &BALMOD                                           Y02006 00120002
         AIF   ('&LN'(1,1) EQ '(').LN1                                  00150002
&NAME    LA    R2,&LN              LOAD LENGTH TO R2                    00200002
         AGO   .LN2                                                     00250002
.LN1     AIF   ('&LN'(2,2) EQ 'R2').LN3                                 00300002
&NAME    LR    R2,&LN              LOAD LENGTH TO R2                    00350002
         AGO   .LN2                                                     00400002
.LN3     ANOP                                                           00450002
&NAME    DS    0H                                                       00500002
.LN2     AIF   ('&ADDR' EQ '').LOAD                                     00550002
         AIF   ('&ADDR'(1,1) EQ '(').ADDR2                              00600002
         LA    R1,&ADDR            LOAD ADDR TO R1                      00650002
         AGO   .LOAD                                                    00700002
.ADDR2   AIF   ('&ADDR'(2,2) EQ 'R1').LOAD                              00750002
         LR    R1,&ADDR(1)         LOAD ADDR TO R1                      00800002
.LOAD    ANOP                                                           00850002
         AIF   (&BALMOD).BALMSG    BRANCH IF BAL MODULE          Y02006 00860002
         L     R15,APRTMSG(,COMBASE) LOAD ADDR OF PRTMSG         Y02006 00870002
         AGO   .CALMSG                                           Y02006 00890002
.BALMSG  ANOP                                                    Y02006 00892002
         L     R15,APRTMSG         LOAD ADDR OF PRTMSG                  00900002
.CALMSG  ANOP                                                    Y02006 00910002
         BALR  R14,R15             LINK TO IT                    Y02006 00950002
         MEND                                                           01000002
./  ADD  SSI=32281249,NAME=BRREAD
         MACRO                                                          00050002
&LABEL   BRREAD  &REG,&TYPE,&ASID=                               Y02006 00100002
.*D026500-035000                                                 Y02006 00110002
.*C001000,014500,015500,020000-022000,023500,024500,026000       Y02006 00120002
.*C036000                                                        Y02006 00130002
.*A002700,003100-003492,027100-028100,035200-035300              Y02006 00140002
.*A035600-035920,036600,038600-039330                            Y02006 00142002
.***  GLOBAL VARIABLE &PLIST CONTROL GENERATION OF PARMETER LIST  ***   00150002
         GBLB  &PARMLST                                                 00200002
         GBLC  &PLIST                                                   00250002
.***  GLOBAL VARIABLE &BALMOD INDICATES IF BAL MODULE OR PLS MODULE **  00260002
         GBLB  &BALMOD                                           Y02006 00270002
         LCLC  &TLAB                                                    00300002
.***  TEST FOR INIT OR ADJUST FUNCTIONS  ***                     Y02006 00310002
         AIF    ('&SYSLIST(1)' EQ 'INIT').CALINIT                Y02006 00320002
         AIF    ('&SYSLIST(1)' EQ 'ADJUST').CALFREE              Y02006 00330002
.***  TEST IF DATA OR CPU CALL  ***                              Y02006 00340002
         AIF   ('&TYPE' EQ 'DATA' OR '&TYPE' EQ 'CPU').TESTNUM   Y02006 00342002
         AIF   ('&TYPE' EQ '').TESTNUM                           Y02006 00346002
         MNOTE 12,'INVALID READ FUNCTION'                        Y02006 00348002
         MEXIT                                                   Y02006 00348402
.***  TEST FOR TOO MANY PARAMETERS  ***                          Y02006 00348802
.TESTNUM AIF   (N'&SYSLIST GT 2).MANYMSG                         Y02006 00349202
.***  TEST FOR P-REG  ***                                               00350002
.TESTREG AIF   ('&REG' NE '').OK1                                       00400002
         MNOTE 12,'MISSING ADDR REG'                                    00450002
         MEXIT                                                          00500002
.OK1     ANOP                                                           00550002
.***  TEST FOR DEMAND P-LIST  ***                                       00600002
         AIF   (&PARMLST).EXTGEN                                        00650002
.***  TEST FOR FIRST CALL OF BRREAD IN THIS CSECT  ***                  00700002
         AIF   ('&PLIST' EQ 'RDL'.'&SYSECT'(4,5)).NOLIST                00750002
.***  IF FIRST CALL GENERATE PARAMETER LIST  ***                        00800002
&PLIST   SETC  'RDL'.'&SYSECT'(4,5)                                     00850002
         AGO   .NOEXTGN                                                 00900002
.EXTGEN  ANOP                                                           00950002
&PLIST   SETC  'TMP'.'&SYSNDX'                                          01000002
.NOEXTGN ANOP                                                           01050002
         CNOP  0,4                 ALLIGN ON WORD BOUNDARY              01100002
&LABEL   ST    &REG(1),&PLIST      STORE ADDRESS OF STORAGE REQUIRED    01150002
.ST11    ANOP                                                           01200002
.***  GENERATE STORE OF REQUESTED ADDRESS BEFORE POINT TO P-LIST  ***   01250002
&TLAB    SETC  'RDL'.'&SYSNDX'                                          01300002
         BAL   1,&TLAB             POINT TO PARAMETER LIST              01350002
&PLIST   DC    F'0'                ADDRESS OF STORAGE REQUIRED   Y01980 01400002
         DC    X'00'               DATA TYPE CODE FOR READ RTN   Y02006 01450002
         DC    X'00'               RESERVED                      Y01980 01500002
         DC    H'0'                ASID OF THIS STORAGE          Y02006 01550002
&TLAB    EQU   *                                                        01600002
         AGO   .TESTID                                                  01650002
.NOLIST  ANOP                                                           01700002
&LABEL   ST    &REG(1),&PLIST      STORE ADDRESS OF STORAGE REQUIRED    01750002
.ST12    ANOP                                                           01800002
         LA    1,&PLIST            POINT TO PARAMETER LIST              01850002
.TESTID  ANOP                                                           01900002
.**** IF ASID IS NOT SPECIFIED, LEAVE PARAMETER AS IT IS         Y02006 01950002
         AIF   ('&ASID' EQ '').TSTTYPE                           Y02006 02000002
.**** DISTINGUISH BETWEEN ASID REG AND ASID ABSOLUTE NUMBER      Y02006 02050002
         AIF   ('&ASID'(1,1) EQ '(').REG                         Y02006 02100002
         AIF   ('&ASID' EQ '0').GENSR                            Y02006 02150002
         MVC   &PLIST+6(2),&ASID .GET VALUE OF ASID FROM STORAGE Y02006 02200002
         AGO   .TSTTYPE                                          Y01980 02250002
.GENSR   ANOP .                                                  Y01980 02300002
         SR    15,15 .   SET ASID VALUE EQUAL ZERO               Y02006 02350002
.STORID  ANOP .                                                  Y01980 02400002
         STH   15,&PLIST+6 .  STORE ASID IN PARAMETER LIST       Y02006 02450002
         AGO  .TSTTYPE  .                                        Y01980 02500002
.REG     ANOP .                                                  Y01980 02550002
         STH   &ASID(1),&PLIST+6 . STORE ASID IN PARAMETER LIST  Y02006 02600002
.TSTTYPE AIF   ('&TYPE' EQ 'CPU').SETCPU                         Y02006 02710002
         MVI   &PLIST+4,X'00'      ZERO DATA TYPE CODE FOR DATA         02760002
*                                  REQUEST                       Y02006 02810002
         AGO   .CALL                                                    03350002
.SETCPU  ANOP                                                           03400002
         MVI   &PLIST+4,X'80'      INDICATE CPU STATUS DATA REQUIRED    03520002
*                                                                Y02006 03530002
.CALL    ANOP                                                           03550002
         AIF   (&BALMOD).BALDATA   CHECK IF BAL MODULE           Y02006 03560002
         L     R15,BRRDDATA(,COMBASE) FETCH READ ROUTINE ADDRESS FROM   03570002
*                                  COMMON CSECT                  Y02006 03580002
         AGO   .CALLD                                            Y02006 03590002
.BALDATA ANOP                                                    Y02006 03592002
         L     15,BRRDDATA         FETCH READ ROUTINE ADDRESS FROM      03600002
*                                  COMMON CSECT                         03650002
.CALLD   ANOP                                                    Y02006 03660002
         BALR  14,15               LINK TO READ                         03700002
         AIF   (NOT(&PARMLST)).OUT                                      03750002
&PLIST   SETC  'RDL'.'&SYSECT'(4,5)                                     03800002
&PARMLST SETB  0                                                        03850002
         AGO   .OUT                                              Y02006 03860002
.CALINIT ANOP                                                    Y02006 03870002
         AIF   (N'&SYSLIST GT 1).MANYMSG   CHECK # OF PARMS      Y02006 03880002
         AIF   ('&ASID' NE '').MANYMSG                           Y02006 03890002
         AIF   (&BALMOD).BALINIT   CHECK IF BAL MODULE           Y02006 03890402
&LABEL   L     R15,BRRDINIT(,COMBASE)  ADDRESS OF INITIALIZATION        03890802
*                                  ROUTINE                       Y02006 03891202
         AGO   .CALLI                                            Y02006 03891602
.BALINIT ANOP                                                    Y02006 03891702
&LABEL   L     R15,BRRDINIT        ADDRESS OF INITIALIZATION ROUTINE    03892002
*                                                                Y02006 03894002
.CALLI   ANOP                                                    Y02006 03894402
         BALR  R14,R15             LINK TO INIT                  Y02006 03896002
         AGO   .OUT                                              Y02006 03898002
.CALFREE ANOP                                                    Y02006 03898402
         AIF   (N'&SYSLIST GT 1).MANYMSG   CHECK # OF PARMS      Y02006 03898802
         AIF   ('&ASID' EQ '').OK2CALL                           Y02006 03898902
.MANYMSG MNOTE 12,'TOO MANY PARAMETERS SPECIFIED'                Y02006 03907402
         MEXIT                                                   Y02006 03909402
.OK2CALL ANOP                                                    Y02006 03916002
         AIF   (&BALMOD).BALADJ    BRANCH IF BAL MODULE          Y02006 03918002
&LABEL   L     R15,BRRDADJ(,COMBASE)  ADDRESS OF ADJUST ROUTINE  Y02006 03920002
         AGO   .CALLA                                            Y02006 03922002
.BALADJ  ANOP                                                    Y02006 03924002
&LABEL   L     R15,BRRDADJ         ADDRESS OF ADJUST ROUTINE     Y02006 03924502
.CALLA   ANOP                                                    Y02006 03926502
         BALR  R14,R15             LINK TO IT                    Y02006 03933002
.OUT     ANOP                                                           03941502
         MEND                                                           03950002
./  ADD  SSI=32281250,NAME=BRWRITE
         MACRO                                                          00050002
&NAME    BRWRITE &PARM,&MODE                                     S21014 00100002
.*A001200,014100-014400,014600                                   Y02006 00102002
.*C015000                                                        Y02006 00104002
.***  GLOBAL VARIABLE &BALMOD INDICATES IF BAL MODULE OR PLS MODULE **  00110002
         GBLB  &BALMOD                                           Y02006 00120002
         LCLA  &IMCT                                             S21014 00150002
         AIF   ('&MODE' EQ '').AFOP                              S21014 00200002
         AIF   ('&MODE' EQ 'AFT').AFOP                           S21014 00250002
         AIF   ('&MODE' EQ 'IMM').IMOP                           S21014 00300002
.*                                                               S21014 00350002
         MNOTE 12,'INVALID BRWRITE MODE - MUST BE ''IMM'' OR ''AFT'''   00400002
         MEXIT                                                          00450002
.IMOP    ANOP                                                    S21014 00500002
         AIF   ('&PARM' NE 'SKIP').IMLINE                        S21014 00550002
&NAME    LA    PREG,2 .            SET CODE FOR SKIP IMMEDIATELY S21014 00600002
         AGO   .COMPL                                            S21014 00650002
.IMLINE  ANOP                                                    S21014 00700002
&IMCT    SETA  &PARM                                             S21014 00750002
&IMCT    SETA  &IMCT+2                                           S21014 00800002
&NAME    LA    PREG,&IMCT .        SET SPACE IMMED. CODE         S21014 00850002
         AGO   .COMPL                                            S21014 00900002
.AFOP    ANOP                                                    S21014 00950002
         AIF   ('&PARM' EQ 'SKIP').NEXT                                 01000002
&NAME    LA    PREG,&PARM .        LOAD PARM FOR NUMB OF SPACES         01050002
         AGO   .NEXT1                                                   01100002
.NEXT    ANOP                                                           01150002
&NAME    LA    PREG,1 .            INDICATE SKIP TO                     01200002
.COMPL   ANOP                                                    S21014 01250002
         LCR   PREG,PREG .         COMPLEMENT TO INDICATE        S21014 01300002
*                                  IMMEDIATE OPERATION OR SKIP   S21014 01350002
.NEXT1   ANOP                                                           01400002
         AIF   (&BALMOD).BALWRT    BRANCH IF BAL MODULE          Y02006 01410002
         L     R15,AWRITE(,COMBASE)  LOAD ADDR OF WRITE ROUTINE  Y02006 01420002
         AGO   .CALWRT                                           Y02006 01430002
.BALWRT  ANOP                                                    Y02006 01440002
         L     R15,AWRITE .        LOAD ADDR OF WRITE ROUTINE           01450002
.CALWRT  ANOP                                                    Y02006 01460002
         BALR  R14,R15 .           LINK TO IT                    Y02006 01500002
         MEND                                                           01550002
./  ADD  SSI=21050421,NAME=CENXTR
         MACRO                                                          10000000
&NAME    CENXTR                                                         20000000
&NAME    IFDMOD LOAD='46'                                               30000000
         MEND                                                           40000000
./  ADD  SSI=21050425,NAME=CMWTO
         MACRO                                                          02000000
&NAME    CMWTO &MT=,&MSG=,&REG=,&WAIT=NO,&DISP=,&SIZE=                  04000000
         LCLA  &D                                                       06000000
         AIF   (T'&REG NE 'O').A1                                       08000000
         AIF   (T'&MT NE 'O' AND T'&MSG NE 'O').A4                      10000000
         MNOTE 8,'MT AND/OR MSG OPERANDS MISSING'                       12000000
         MEXIT                                                          14000000
.A4      ANOP                                                           16000000
&D       SETA  (&MSG-1)*4                                               18000000
&NAME    L     R1,&MT .                 MESSAGE MODULE ADDRESS          20000000
         L     R1,&D.(R1) .               MESSAGE ADDRESS               22000000
         AGO   .A5                                                      24000000
.A1      ANOP                                                           26000000
         AIF   ('&REG' EQ '(1)').A2                                     28000000
&NAME    LR    R1,&REG .                MESSAGE ADDRESS                 30000000
         AGO   .A5                                                      32000000
.A2      ANOP                                                           34000000
&NAME    DS    0H .                     NAME FIELD OF ROUTINE           36000000
.A5      ANOP                                                           38000000
         AIF   ('&DISP' EQ '6').A3                                      40000000
         AIF   ('&WAIT' EQ 'YES').A3                                    42000000
         OI    CESWT4,X'20' .           NO WAIT REQUESTED               44000000
.A3      ANOP                                                           46000000
         AIF   (T'&SIZE EQ 'O').A6                                      48000000
         AIF   ('&SIZE'(1,1) EQ '(').A7                                 50000000
         MVI   0(R1),&SIZE .               SIZE OF REPLY                52000000
         AGO   .A6                                                      54000000
.A7      ANOP                                                           56000000
         STC   &SIZE,0(R1) .               SIZE OF REPLY                58000000
.A6      ANOP                                                           60000000
         L     R15,PARPRADR .           ENTRY TO PARALLEL PRINT         62000000
         LA    R15,&DISP.(R15) .            ENTRY POINT IN DPRINT       64000000
         BALR  R14,R15 .                LINK TO MODULE                  66000000
         MEND                                                           68000000
./  ADD  SSI=32420027,NAME=COMCOM
         MACRO                                                          07000000
&NAME    COMCOM &RELEASE=MVM22                                   Y02008 12000002
         LCLC  &V,&X,&Z,&S                                      X01906  17000001
&S       SETC  '&RELEASE'                                       X01906  22000001
&V       SETC  'DC'                                                     28000000
&X       SETC  'XL1'                                                    35000000
&Z       SETC  '''00'''                                                 42000000
         EJECT                                                          49000000
         IFDPF1 &V,&X,&Z,&S                                     X01906  56000001
REPBUF   EQU   INBUFR                                                   63000000
         ENTRY REPBUF                                                   70000000
         EJECT                                                          77000000
         MEND                                                           84000000
./  ADD  SSI=61890089,NAME=COMMON
*                                                                       00060002
*        %GOTO COM1;               /*                                   00062002
         MACRO                                                          00070002
         COMMON  &MF=E                                                  00100002
         GBLB  &BALMOD             DEFINE GLOBAL SWITCH          Y02006 00110002
&BALMOD  SETB  1               INDICATE BAL MODULE ISSUED COMMON Y02006 00120002
         AIF   ('&MF' EQ 'E').GEND                                      00150002
         AIF   ('&MF' EQ 'L').GENC                                      00200002
         MNOTE 12,'INVALID MACRO FORMAT'                                00250002
         MEXIT                                                          00300002
.GEND    ANOP                                                           00350002
COMMON   DSECT                                                          00400002
         AGO   .GEN                                                     00450002
.GENC    ANOP                                                           00500002
AMDPRCOM CSECT                                                   Y01980 00550002
COMMON   EQU   AMDPRCOM .                                        Y01980 00600002
.GEN     ANOP                                                           00650002
         SPACE 1                                                     */ 00700002
*%COM1 : ;                                                              00750002
*                                                                       00800002
*/********************************************************************/ 00850002
*/*                                                                  */ 00900002
*/*      AMDPRDMP COMMON AREA MACRO                                  */ 00950002
*/*      OS/VS2 RELEASE 2  -- LEVEL 001                              */ 00960002
*/*                                                                  */ 00970002
*/*      THIS MACRO DEFINES CONSTANTS AND POINTERS COMMON TO ALL     */ 00980002
*/*      PRDMP ROUTINES                                              */ 00990002
*/*                                                                  */ 00992002
*/*      TO USE THIS MACRO TO OBTAIN A DSECT OF THE AMDPRDMP COMMON  */ 00994002
*/*      AREA IN A BAL MODULE, CODE:                                 */ 00996002
*/*            COMMON                                                */ 00998002
*/*      ISSUE A USING ON COMMON IN ORDER TO REFERENCE THE AREAS     */ 00998402
*/*      DEFINED IN THE DSECT.                                       */ 00998802
*/*                                                                  */ 00999202
*/*      TO USE THIS MACRO TO DEFINE THE COMMON AREA,CODE:           */ 00999602
*/*            COMMON  MF=L                                          */ 00999702
*/*      ONLY MODULE AMDPRCOM SHOULD USE THE MACRO IN THIS MANNER.   */ 00999802
*/*                                                                  */ 00999902
*/*      TO USE THIS MACRO IN A PLS2 MODULE,CODE:                    */ 01016602
*/*            % INCLUDE SYSLIB(COMMON)                              */ 01026602
*/*      SINCE THIS IS A BASED STRUCTURE, A RESPECIFY STATEMENT IS   */ 01028602
*/*      ALSO REQUIRED PRIOR TO REFERENCING FIELDS DEFINED HEREIN    */ 01030602
*/*      IN ORDER TO PROVIDE A POINTER VALUE FOR LOCATING THE DATA.  */ 01032602
*/*                                                                  */ 01032702
*/*C024000,053500,116000,144000                                Y02006*/ 01032802
*/*A001100-001200,086000-086480,146000-340443                  Y02006*/ 01032902
*/*D013500,014500-015500,017000-017500,020000,021000-023000    Y02006*/ 01041202
*/*D024000-024500,026000-031500,034000-039000,045000-046000    Y02006*/ 01043202
*/*D052000-053000,056000,057500,097500,101000-102500,115500    Y02006*/ 01045202
*/*D120000,124500-127000,136500,137500-140500,141500-143000    Y02006*/ 01047202
*/*D144500-149600,150000                                       Y02006*/ 01049202
*/*                                                                  */ 01050202
*/********************************************************************/ 01058502
*                                                                       01066802
*%GOTO COM2;                       /*                                   01075102
         SPACE                                                          01083402
* * * * * * * *  COMMON MACRO DEL IS D82   * * * * * * * * * *          01087400
ERRADDR  DC    F'0'                ERROR ROUTINE ADDRESS                01091702
VERBGN   DC    F'0'                                                     01100002
VERBEND  DC    F'0'                                                     01150002
KYWDBGN  DC    F'0'                                                     01200002
KYWDEND  DC    F'0'                                                     01250002
DELIMCD  DC    F'0'                                                     01300002
WORK1    DC    D'0'                                                     01400002
NUCTOP   DC    F'250000'                                                01600002
SIX      DC    F'6'                                                     01650002
LINECNT  DC    F'1'                                                     01800002
PAGENUMB DC    F'0'                                                     01850002
CURBUF   DC    F'0'                                                     01900002
TCBLIST  DC    F'0'                                                     01950002
CVTADDR  DC    F'0'                                                     02050002
PCBPTR   DC    F'0'                                                     02350002
STORSIZE DC    F'0'                      AVAILABLE STORAGE SIZE  Y02006 02400002
INDD     DC    CL8'TAPE'                                                02500002
FILESEQ  DC    H'0' .                                            X01980 02550002
RDENTRY  DC    F'0'                                                     03200002
READNO   DC    F'0'                                                     03250002
RDERCNT  DC    F'0'                                                     03300002
READTM   DC    F'0'                                                     03350002
ONEA     DC    H'1'                                                     03950002
TWO      DC    H'2'                                                     04000002
THREE    DC    H'3'                                                     04050002
FOUR     DC    H'4'                                                     04100002
FIVE     DC    H'5'                                                     04150002
SEVEN    DC    H'7'                                                     04200002
EIGHT    DC    H'8'                                                     04250002
HTEN     DC    H'10'                                                    04300002
ELEVEN   DC    H'11'                                                    04350002
TWELVE   DC    H'12'                                                    04400002
SIXTEEN  DC    H'16'                                                    04450002
LNCNT    EQU   58                                                       04650002
LINENUMB DC    AL2(LNCNT)                                               04700002
LINENUM  DC    AL2(LNCNT-2)                                             04750002
SWA      DC    X'00'                                                    04800002
SWB      DC    X'00'                                                    04850002
SWC      DC    X'00'                                                    04900002
SWD      DC    X'00'                                                    04950002
SWE      DC    X'00'                                                    05000002
SWF      DC    X'00'         ALWAYS RESET ON NEWDUMP OR NEWTAPE  Y01980 05050002
BUFSW    DC    X'00'                                                    05100002
PRSW     DC    X'00'                                                    05150002
         DC    CL3' '                                            Y02006 05350002
WTORMSG  DC    CL81' '                                                  05400002
BLANKS   DC    CL8' '                                                   05450002
TITLE    DC    C'TITLE'                                                 05500002
STOP     DC    C'STOP'                                                  05550002
MSG1     DC    C'AMD161I FORMAT ERROR      '                     Y01980 05650002
MSG2     DC    C'AMD158I I/O ERROR ON DUMP '                     Y01980 05700002
TITLEMSG DC    CL64' '                                                  05800002
TITLEMOD DC    CL15'MODULE' .      MODULE ISSUING DUMP                  05850002
         DC    CL2' '                                                   05900002
TITLEDTE DC    CL13'DATE'                                               05950002
         DC    CL2' '                                                   06000002
TITLETME DC    CL13'TIME'                                               06050002
         DC    CL2' '                                                   06100002
TITLEPGE DC    CL9'PAGE'                                                06150002
CAPTABL  DC    X'000102030405060708090A0B0C0D0E0F'                      06200002
         DC    X'101112131415161718191A1B1C1D1E1F'                      06250002
         DC    X'202122232425262728292A2B2C2D2E2F'                      06300002
         DC    X'303132333435363738393A3B3C3D3E3F'                      06350002
         DC    X'404142434445464748494A4B4C4D4E4F'                      06400002
         DC    X'505152535455565758595A5B5C5D5E5F'                      06450002
         DC    X'606162636465666768696A6B6C6D6E6F'                      06500002
         DC    X'707172737475767778797A7B7C7D7E7F'                      06550002
         DC    X'80C1C2C3C4C5C6C7C8C98A8B8C8D8E8F'                      06600002
         DC    X'90D1D2D3D4D5D6D7D8D99A9B9C9D9E9F'                      06650002
         DC    X'A0A1E2E3E4E5E6E7E8E9AAABACADAEAF'                      06700002
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'                      06750002
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'                      06800002
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'                      06850002
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'                      06900002
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'                      06950002
TABLE    DC    64C'.'                                                   07000002
         DC    C' '                                                     07050002
         DC    128C'.'                                                  07100002
         DC    C'ABCDEFGHI'                                             07150002
         DC    7C'.'                                                    07200002
         DC    C'JKLMNOPQR'                                             07250002
         DC    8C'.'                                                    07300002
         DC    C'STUVWXYZ'                                              07350002
         DC    6C'.'                                                    07400002
         DC    C'0123456789'                                            07450002
         DC    6C'.'                                                    07500002
         ORG   *-193                                                    07550002
HEXTABL  EQU   *                                                        07600002
         ORG   *+193                                                    07650002
         DC    X'FAFBFCFDFEFF'                                          07700002
         ORG   *+41                                                     07750002
         DC    C'0123456789'                                            07800002
         ORG   *-240                                                    07850002
EBCTABL  EQU   *                                                        07900002
         ORG   *+240                                                    07950002
         DC    C'0123456789ABCDEF'                                      08000002
BLNK     DC    64X'00'                                                  08050002
         DC    X'0C'               BLANK                                08100002
         DC    12X'00'                                                  08150002
         DC    X'10'               LEFT PAREN                           08200002
         DC    15X'00'                                                  08250002
         DC    X'14'               RIGHT PAREN                          08300002
         DC    13X'00'                                                  08350002
         DC    X'04'               COMMA                                08400002
         DC    18X'00'                                                  08450002
         DC    X'08'               EQUAL SIGN                           08500002
         DC    129X'00'                                                 08550002
NONBLNK  DC    193X'00'                                          Y02006 08600002
         DC    9C'*'                                             Y02006 08610002
         DC    7X'00'                                            Y02006 08620002
         DC    9C'*'                                             Y02006 08630002
         DC    8X'00'                                            Y02006 08640002
         DC    8C'*'                                             Y02006 08642002
         DC    6X'00'                                            Y02006 08644002
         DC    10C'*'                                            Y02006 08646002
         DC    6X'00'                                            Y02006 08648002
*********************************************************************** 08650002
*                                                                     * 08700002
*   COMMON A TYPE ADDRESS CONSTANTS                                   * 08750002
*                                                                     * 08800002
*********************************************************************** 08850002
         SPACE                                                          08900002
         AIF   ('&MF' EQ 'E').GENDS                                     08950002
AWRITE   DC    A(AMDPRWTR)         ADDRESS OF ROUTINE FOR OUTPUT        09000002
APRTMSG  DC    A(AMDPRMSG)         ADDR OF MESSAGE ON SYSPRINT RTN      09050002
ASYNTAX  DC    A(AMDPRSYN)         ADDR OF SYNTAX ERROR ROUTINE         09100002
AFMTLINE DC    A(AMDPRGFR)         ADDR OF LINE FORMAT ROUTINE          09150002
AADRCNVT DC    A(ADRCNVT)          ADDR OF 3 BYTE CONVERT ROUTINE       09200002
AWRDCNVT DC    A(WRDCNVT)          ADDR OF 4 BYTE CONVERT ROUTINE       09250002
         AGO   .NOGENDS                                                 09300002
.GENDS   ANOP                                                           09350002
AWRITE   DS    A                   ADRESS OF ROUTINE FOR OUTPUT         09400002
APRTMSG  DS    A                   ADDR OF MESSAGE ON SYSPRINT RTN      09450002
ASYNTAX  DS    A                   ADDR OF SYNTAX ERROR ROUTINE         09500002
AFMTLINE DS    A                   ADDR OF LINE FORMAT ROUTINE          09550002
AADRCNVT DS    A                   ADDR OF 3 BYTE CONVERT ROUTINE       09600002
AWRDCNVT DS    A                   ADDR OF 4 BYTE CONVERT ROUTINE       09650002
.NOGENDS ANOP                                                           09700002
ARGNBND  DS    A                   ADDRESS OF REGION BOUNDARY ROUTINE   09800002
STOPEXIT DS    A .                 ADDR STOP EXIT ROUTINE               09850002
SYNMSGA  DS    A                   ADDR OF SYNTAX ERROR MSG ARRAY       09900002
AEREXIT  DC    V(AMDPRXIT) .       ADDR OF ERROR EXIT ROUTINE           09950002
ALOADER  DC    V(AMDPRSEG)         ADDR SEGMENT LOAD ROUTINE            10000002
QATMERTN DC    V(TODCNVRT) .       ADDR OF TOD CLOCK CONVERT RTN Y01980 10050002
         AIF   ('&MF' EQ 'E').GENDS1                                    10300002
ATCBSAVE DC    A(AMDPRTSV) .       ADDR OF TCB SAVE ROUTINE             10350002
ATCBREMV DC    A(TCBREMV) .        ADDRESS OF ROUTINE FOR REMOVING TCBS 10400002
ATCBRTRV DC    A(TCBRTRV) .        ADDR OF TCB RETRIEVE ROUTINE         10450002
         AGO   .NGENDS1                                                 10500002
.GENDS1  ANOP                                                           10550002
ATCBSAVE DS    A .                 ADDR OF TCB SAVE ROUTINE             10600002
ATCBREMV DS    A .                 ADDRESS OF ROUTINE FOR REMOVING TCBS 10650002
ATCBRTRV DS    A .                 ADDR OF TCB RETRIEVE ROUTINE         10700002
.NGENDS1 ANOP                                                           10750002
APCBENQ  DS    A                   PCB Q MGMT.                          10800002
         AIF   ('&MF' EQ 'E').GENDS2                                    10850002
ASTPROUT DC    A(AMDPRSTP) .       ADDR OF THE STOP ROUTINE             10900002
         AGO   .NGENDS2                                                 10950002
.GENDS2  ANOP                                                           11000002
ASTPROUT DS    A .                 ADDR OF THE STOP ROUTINE             11050002
.NGENDS2 ANOP                                                           11100002
AFORMAT  DS    A                   ADDR OF ROUTINE THAT CONTROLS THE    11150002
*                                  FORMATTING OF THE CONTROL BLOCKS     11200002
APRTSTG  DS    A                   ADDR OF PRINT STORAGE SERVICE        11250002
*                                  ROUTINE                              11300002
BUFSUM   DC    F'0' .              TOTAL NUMBER OF BUFFERS FOR THIS     11350002
*                                  EXECUTION                            11400002
BUFREINT DC    F'0' .              NUMBER OF TIMES BUFFERS WERE         11450002
*                                  INITIALIZED                          11500002
AERRMSGA DC    A(MSG1)             ERROR MESSAGE ARRAY - MESSAGE        11600002
         DC    A(MSG2)             TEXT IS DEFINE IN COMMON CONSTANTS   11650002
*                                  ABOVE                                11700002
AEND     DC    V(AMDPREND)                                              11750002
ONGOPTR  DS    A .                 POINTER TO ONGO OPERAND              11800002
ATCBSMFR DS    A                   SUMMARY TABLE FREE ROUTINE           11850002
ATCBSMRY DS    A                   SUMMARY TABLE PRINT ROUTINE          11950002
DCBADDRS DS    0F                                                       12050002
AOUTDCB  DC    A(0) .              ADDR OF OUTPUT DCB (PRINTER)   M0732 12100002
APTRDCB  DC    A(0) .              ADDR OF MESSAGE DCB            M0732 12150002
*                                  (SYSPRINT)                     M0732 12200002
ARDRDCB  DC    A(0) .              ADDR OF CNTRL CARD INPUT DCB   M0732 12250002
*                                  (SYSIN)                        M0732 12300002
AINDCB   DC    A(0) .              ADDR OF DUMP TAPE INPUT DCB    M0732 12350002
*                                  (TAPE)                         M0732 12400002
         DC    AL1(X'80') .        END OF LIST INDICATOR          M1634 12750002
ASYSUDCB DC    AL3(0) .            ADDR OF UTILITY DA DCB         M1634 12800002
*                                  (SYSUT1 OR 2)                  M1634 12850002
*****************************************************************S21014 12900002
*                                                                S21014 12950002
*  AMDPRCOM CHANGES FOR GTF                                      S21014 13000002
*                                                                S21014 13050002
*****************************************************************S21014 13100002
         SPACE                                                          13150002
TRCCOUNT DC    F'0' .              COUNT OF ENTRIES TO AMDPRGET  S21014 13200002
AEDITCB  DC    A(0) .              ADDRESS OF EDIT COMMUNICATION S21014 13250002
*                                  AREA - AMDPRTAB               S21014 13300002
AROOT    DC    A(0) .              ADDRESS OF AMDPRTAB INIT RTN. S21014 13350002
EDITER   DC    X'02' .             VALUE OF ER PARAMETER OF      S21014 13400002
*                                  EXECUTE CARD                  S21014 13450002
*********************************************************************** 13500002
***        ADDITIONS FOR  X01980/Y01980  SUPPORT                    *** 13550002
*********************************************************************** 13600002
         SPACE                                                          13650002
REALMAP  DC    F'0' .              POINTER TO REAL DUMP MAP      X01980 13700002
SEGTABOR DC    F'0' .              SEGMENT TABLE ORIGIN          X01980 14100002
REALMAX  DC    X'00FFFFFF'         TOP OF REAL STORAGE         @OZ00404 14350003
         DC    F'0' .              SPARE WORD                    Y02006 14400002
QAPFT    DC    A(0) .              ADDRESS OF PFT IN DUMP        Y01980 14560002
*********************************************************************** 14600002
***        ADDITIONS FOR Y02006 SUPPORT                             *** 14650002
*********************************************************************** 14700002
         SPACE                                                          14750002
QASID    DC    H'0' .              ASID OF IPLED'ED CPU          Y02006 14900002
IPLCPU   DC    H'0' .              ADDRESS OF IPL'ED CPU         Y02006 14950002
*                                  CONTAINS 256 IF THE IPL'ED    Y02006 15000002
*                                  CPU STATUS WAS UNAVAILABLE -  Y02006 15010002
*                                  I.E. AN I/O ERROR OCCURRED    Y02006 15020002
*                                  WHEN THE CPU STATUS RECORD    Y02006 15030002
*                                  WAS BEING READ                Y02006 15040002
CURASCB  DC    F'0' .              ADDRESS OF CURRENT ASCB IN    Y02006 15042002
*                                  DUMPED SYSTEM                 Y02006 15044002
PREFXRGR DC    F'0' .              REAL ADDRESS IN PSA PREFIX    Y02006 15048402
*                                  REGISTER (SADMP INPUT ONLY)   Y02006 15048802
PREFXRGV DC    F'0' .              VIRTUAL ADDRESS IN PSA PREFIX Y02006 15049202
*                                  REGISTER (SADMP INPUT ONLY)   Y02006 15049602
ASVTADDR DC    F'0' .              ADDRESS OF ASVT IN DUMPED     Y02006 15049702
*                                  SYSTEM                        Y02006 15049802
SACSWCAW DC    3F'0' .             CSW (FIRST 8 BYTES) AND CAW   Y02006 15049902
*                                  (LAST 4 BYTES) FROM AMDSADMP  Y02006 15066602
*                                  HEADER RECORD                 Y02006 15076602
HDRREGS  DC    42F'0' .            REGISTERS AND CURRENT PSW     Y02006 15078602
*                                  FROM SVCDUMP OR DSS HEADER    Y02006 15080602
HDRTITLE DC    100C' ' .           TITLE FROM HEADER RECORD      Y02006 15081002
         DC    A(0) .              SPARE WORD                    Y02006 15082602
ASIDNDX  DC    A(0) .              POINTER TO ASID INDEX         Y02006 15083002
CPUMAP   DC    A(0) .              POINTER TO CPU STATUS RECORD  Y02006 15083102
*                                  MAPS                          Y02006 15083202
ASCBMAP  DC    A(0) .              POINTER TO ASCB MAP THAT IS   Y02006 15088802
*                                  CREATED BY AMDPRRDC           Y02006 15090802
BUFERMAP DC    A(0) .              ADDRESS OF FIRST PHYSICAL     Y02006 15092802
*                                  BUFFER MAP ENTRY IN RDC       Y02006 15093202
BRRDDATA DC    V(AMDPRRDD) .       ADDRESS OF AMDPRRDC READ DATA Y02006 15093302
*                                  ROUTINE                       Y02006 15093402
BRRDINIT DC    V(AMDPRRDC) .       ADDRESS OF BRREAD INIT        Y02006 15093502
*                                  ROUTINE                       Y02006 15096102
BRRDADJ  DC    V(AMDPRRDA) .       ADDRESS OF BRREAD ADJUST      Y02006 15098102
*                                  ROUTINE                       Y02006 15098502
AASCBFMT DC    A(0) .              ADDRESS OF AMDPRFAR           Y02006 15098802
ASRBFMT  DC    A(0) .              ADDRESS OF AMDPRSRB           Y02006 15101402
AUSRINIT DC    V(AMDPRUIM) .       ADDRESS OF USER INTERFACE MODULE     15104002
*                                  INITIALIZATION ROUTINE        Y02006 15114002
AUSREXIT DC    V(AMDUSRXT) .       MAIN ENTRY POINT TO AMDPRUIM  Y02006 15114102
AUSRDEL  DC    V(AMDUSRDL) .       ENTRY POINT FOR AMDPRUIM      Y02006 15114202
*                                  CLEAN-UP                      Y02006 15117502
AUSRTCBA DC    F'0' .              ADDR OF TCB CURRENTLY BEING   Y02006 15119902
*                                  PROCESSED BY FSR              Y02006 15120302
AUSRASID DC    H'0' .              ASID OF MEMORY CURRENTLY      Y02006 15120702
*                                  BEING PROCESSED BY FSR OR FAR Y02006 15120802
EXITFLAG DC    X'00' .             FLAGS INDICATING ACTION       Y02006 15120902
*                                  AMDPRUIM IS TO PERFORM        Y02006 15124202
RBMAX    DC    H'50' .             LOOP CONTROL VALUE            Y02006 15127702
PQEMAX   DC    H'50' .                                           Y02006 15131002
LLEMAX   DC    H'255' .                                          Y02006 15134302
JPQMAX   DC    H'256' .                                          Y02006 15144302
DEBMAX   DC    H'200' .                                          Y02006 15164302
DDMAX    DC    H'1635' .                                         Y02006 15174302
SRBMAX   DC    H'50' .                                           Y02006 15186702
TCBMAX   DC    H'256' .                                        @ZA00413 15186800
ASCBMAX  DC    H'200' .                                          Y02006 15186902
DQEMAX   DC    H'50' .                                           Y02006 15187002
XLMAX    DC    F'25' .                                           Y02006 15187102
DNUCTOP  DC    AL4(X'00200000') .  DEFAULT NUCTOP VALUE          Y02006 15188302
LPAMAX   DC    F'500' .            LOOP CONTROL VALUE            Y02006 15190302
DFLTCSA  DC    AL4(X'00B00000') .  DEFAULT CSA ADDRESS           Y02006 15192302
TOPICHDR DC    CL10' ' .           OPTIONAL PAGE HEADER          Y02006 15192702
CSADDR   DC    F'0'                CSA ADDRESS                   Y02006 15193502
I3800SW  DC    X'00'     SWITCHES FOR 3800 SUPPORT CODE        @Z40MI3F 15193700
TITLEKEY DC    CL16'STORAGE KEY     ' MSG IN PGE TITLE DURING  @Z40MI3F 15193900
*                                     CONDENSED DUMPING ONLY   @Z40MI3F 15194100
Z9SVCBUF DS    F'0'          ADDR OF SVC BUFFER MAP          OZ09006    15194200
Z9SUBITS DC    XL15'00'      SU BIT STRING                   OZ09006    15194300
Z9SUFLG  DC    XL1'00'       SU FLAG BYTE                    OZ09006    15204300
Z9ERRID  DS    CL12                 STORED FROM SVC DUMP        UZ81700 15209300
         EJECT                                                          15214300
         MEND                                                        */ 15244302
*%COM2 : ;                                                              15294302
*                                                                       15344302
*DECLARE                                                                15394302
*  1 COMMON BASED,                                                      15444302
*   2 ERRADDR PTR(31) BDY(WORD),       /* ERROR ROUTINE ADDRESS      */ 15494302
*   2 VERBGN PTR(31),                  /* BEGINNING ADDRESS OF VERB  */ 15544302
*   2 VERBEND PTR(31),                 /* ENDING ADDRESS OF VERB     */ 15594302
*   2 KYWDBGN PTR(31),                 /* BEGINNING ADDR OF KEYWORD  */ 15644302
*   2 KYWDEND PTR(31),                 /* ENDING ADDRESS OF KEYWORD  */ 15694302
*   2 DELIMCD FIXED(31),               /* CODE INDICATING TYPE OF       15744302
*                                         DELIMITER ENCOUNTERED DURING  15794302
*                                         CONTROL STATEMENT SCAN     */ 15844302
*   2 WORK1 CHAR(8) BDY(DWORD),        /* DOUBLEWORD WORK AREA       */ 15894302
*   2 NUCTOP FIXED(31),                /* TOP OF NUCLEUS             */ 15944302
*   2 SIX FIXED(31),                   /* CONSTANT 6                 */ 16094302
*   2 LINECNT FIXED(31),               /* CURRENT LINE NUMBER,USED TO   16144302
*                                         DETERMINE WHEN A NEW PAGE IS  16194302
*                                         NEEDED                     */ 16244302
*   2 PAGENUMB FIXED(31),              /* CURRENT PAGE NUMBER        */ 16294302
*   2 CURBUF PTR(31),                  /* ADDRESS OF CURRENT OUTPUT     16344302
*                                         BUFFER - SUPPLIED BY          16394302
*                                         AMDPRWTR                   */ 16444302
*   2 TCBLIST PTR(31),                 /* ORIGIN OF TCB LIST         */ 16494302
*   2 CVTADDR FIXED(31),               /* ADDRESS OF CVT IN DUMPED      16544302
*                                         SYSTEM                     */ 16594302
*   2 PCBPTR PTR(31),                  /* ORIGIN OF PCB QUEUE        */ 16644302
*   2 STORSIZE FIXED(31),              /* AVAILABLE STORAGE SIZE     */ 16694302
*   2 INDD CHAR(8),                    /* DDNAME ON INPUT DATA SET      16844302
*                                         DD STATEMENT - DEFAULT VALUE  16894302
*                                         IS 'TAPE'                  */ 16944302
*   2 FILESEQ FIXED(15),               /* VALUE OF FILESEQ PARAMETER    16994302
*                                         ON NEWDUMP CONTROL STMT    */ 17044302
*   2 * CHAR(2),                       /* UNUSED FIELD               */ 17094302
*   2 RDENTRY FIXED(31),               /* COUNT OF DATA ENTRIES TO      17144302
*                                         AMDPRRDC                   */ 17194302
*   2 READNO FIXED(31),                /* NUMBER OF BLOCKS READ      */ 17244302
*   2 RDERCNT FIXED(31),               /* NUMBER OF I/O ERRORS WHILE    17294302
*                                         ATTEMPTING TO READ SYSUT1 OR  17344302
*                                         DUMP DATA SET              */ 17394302
*   2 READTM FIXED(31),                /* NUMBER OF TIMES REQUESTED     17444302
*                                         DATA WAS NOT IN A BUFFER   */ 17494302
*   2 ONEA FIXED(15),                  /* CONSTANT: 1                */ 17544302
*   2 TWO FIXED(15),                   /* CONSTANT: 2                */ 17594302
*   2 THREE FIXED(15),                 /* CONSTANT: 3                */ 17644302
*   2 FOUR FIXED(15),                  /* CONSTANT: 4                */ 17694302
*   2 FIVE FIXED(15),                  /* CONSTANT: 5                */ 17744302
*   2 SEVEN FIXED(15),                 /* CONSTANT: 7                */ 17794302
*   2 EIGHT FIXED(15),                 /* CONSTANT: 8                */ 17844302
*   2 HTEN FIXED(15),                  /* CONSTANT: 10               */ 17894302
*   2 ELEVEN FIXED(15),                /* CONSTANT: 11               */ 17944302
*   2 TWELVE FIXED(15),                /* CONSTANT: 12               */ 17954302
*   2 SIXTEEN FIXED(15),               /* CONSTANT: 16               */ 17994302
*   2 LINENUMB FIXED(15),              /* VALUE OF LINECNT PARAMETER    18044302
*                                         IN PARM FIELD OF EXEC         18094302
*                                         STATEMENT OR DEFAULT OF 58 */ 18144302
*   2 LINENUM FIXED(15),               /* VALUE OF LINECNT PARAMETER    18194302
*                                         MINUS 2                    */ 18244302
*   2 SWA CHAR(1),                     /* SWITCHES                   */ 18294302
*    3 * BIT(1),                                                        18344302
*    3 * BIT(1),                                                        18394302
*    3 * BIT(1),                                                        18444302
*    3 * BIT(1),                                                        18494302
*    3 GOSW BIT(1),                    /* GO CONTROL STATEMENT          18544302
*                                         PROCESSING IN PROGRESS     */ 18594302
*    3 * BIT(1),                                                        18644302
*    3 SETCVTSW BIT(1),                /* CVTADDR FIELD HAS BEEN FILLED 18694302
*                                         BY CVT= CONTROL STATEMENT  */ 18744302
*    3 RDRSW BIT(1),                   /* CONTROL STATEMENTS COMING     18794302
*                                         FROM SYSIN DATA SET IF =1  */ 18844302
*   2 SWB CHAR(1),                                                      18894302
*    3 IOERR BIT(1),                   /* I/O ERROR WHILE READING FROM  18944302
*                                         SYSUT1 OR DUMP DATA SET    */ 18994302
*    3 FMTERR BIT(1),                  /* REQUESTED INFORMATION NOT IN  19044302
*                                         DUMP DATA SET              */ 19094302
*    3 * BIT(1),                                                        19144302
*    3 * BIT(1),                                                        19194302
*    3 ENDSW BIT(1),                   /* END CONTROL STATEMENT BEING   19244302
*                                         PROCESSED                  */ 19294302
*    3 QSYSUT2 BIT(1),                 /* IF =1, SYSUT2 EXISTS       */ 19344302
*    3 * BIT(1),                                                        19394302
*    3 * BIT(1),                                                        19444302
*   2 SWC CHAR(1),                                                      19494302
*    3 MSTRSW BIT(1),                  /* AMDPRMST HAS ATTEMPTED DUMP   19544302
*                                         DATA SET INITIALIZATION    */ 19594302
*    3 SETFLSH BIT(1),                 /* SET FLUSHMODE INDICATOR    */ 19644302
*    3 POSITSW BIT(1),                 /* POSITIONING OF DUMP DATA SET  19744302
*                                         MUST BE PERFORMED          */ 19794302
*    3 TREADIN BIT(1),                 /* AMDPREAD HAS BEEN LOADED   */ 19844302
*    3 EDITSW BIT(1),                  /* EDIT FUNCTION IS BEING        19894302
*                                         PERFORMED                  */ 19944302
*    3 * BIT(1),                                                        19994302
*    3 * BIT(1),                                                        20044302
*    3 * BIT(1),                                                        20094302
*   2 SWD CHAR(1),                                                      20144302
*    3 FLSHMODE BIT(1),                /* CONTROL STATEMENTS ARE BEING  20194302
*                                         SCANNED FOR SYNTAX ERRORS     20244302
*                                         ONLY                       */ 20294302
*    3 * BIT(1),                                                        20344302
*    3 * BIT(1),                                                        20394302
*    3 NOSTDMG BIT(1),                 /* DO NOT ISSUE MESSAGE AMD165I  20444302
*                                         BEFORE SERVICING CALLER'S     20494302
*                                         MESSAGE REQUEST            */ 20544302
*    3 NOLOADSW BIT(1),                /* IF =1, A VERB CAME BEFORE     20594302
*                                         END VERB                   */ 20644302
*    3 CONTSW BIT(1),                  /* CONTINUATION OF EDIT CONTROL  20694302
*                                         STATEMENT MUST BE OBTAINED */ 20744302
*    3 GPRSFND BIT(1),                 /* PRINT GENERAL REGISTERS       20794302
*                                         CONTENTS (SADMP INPUT)     */ 20844302
*    3 * BIT(1),                                                        20894302
*   2 SWE CHAR(1),                                                      20944302
*    3 STOPSW BIT(1),                  /* STOP OPTION SPECIFIED      */ 20994302
*    3 * BIT(1),                                                        21044302
*    3 RESPC BIT(1),                   /* USER MUST RESPECIFY EDIT      21094302
*                                         OPTIONS                    */ 21144302
*    3 TITLESW BIT(1),                 /* TITLE OPTION SPECIFIED     */ 21194302
*    3 BUILDMAP BIT(1),                /* AMDPREAD MUST SCAN DUMP TO    21244302
*                                         BUILD MAP(S)               */ 21294302
*    3 * BIT(1),                                                        21344302
*    3 * BIT(1),                                                        21644302
*    3 * BIT(1),                                                        21694302
*   2 SWF CHAR(1),                                                      21744302
*    3 QPRDINIT BIT(1),                /* AMDPREAD INIT. REQUIRED IF    21794302
*                                         =0                         */ 21844302
*    3 NUCTFRMC BIT(1),                /* IF 1 NUCTOP IS FROM CVT    */ 21894302
*    3 QSADMP BIT(1),                  /* INPUT IS FROM AMDSADMP     */ 21944302
*    3 DMPIC BIT(1),                   /* ENTIRE DUMP IN BUFFERS     */ 21994302
*    3 PAGEOK BIT(1),                  /* SWITCH FOR FCB             */ 22044302
*    3 * BIT(1),                                                        22094302
*    3 QUT1LOD BIT(1),                 /* SYSUT1 LOADED BY LOD       */ 22144302
*    3 * BIT(1),                                                        22194302
*   2 BUFSW CHAR(1),                                                    22244302
*    3 * BIT(1),                                                        22294302
*    3 * BIT(1),                                                        22344302
*    3 * BIT(1),                                                        22394302
*    3 * BIT(1),                                                        22444302
*    3 * BIT(1),                                                        22494302
*    3 * BIT(1),                                                        22594302
*    3 PREFM BIT(1),                   /* PREFORMATTED DUMP IS BEING    22644302
*                                         PROCESSED                  */ 22694302
*    3 * BIT(1),                                                        22744302
*   2 PRSW CHAR(1),                                                     22794302
*    3 * BIT(1),                                                        22844302
*    3 QSEGTBSW BIT(1),                /* SEGMENT TABLE ORIGIN GIVEN    22944302
*                                         BY USER                    */ 22994302
*    3 * BIT(1),                                                        23044302
*    3 TTLSW BIT(1),                   /* PRINT TITLE FROM HEADER       23094302
*                                         RECORD ON PRINTER DATA SET */ 23144302
*    3 PRNTRL BIT(1),                  /* PRINT REAL VERB IS CURRENT    23194302
*                                         VERB                       */ 23244302
*    3 PRNTREAL BIT(1),                /* REAL STORAGE DATA REQUESTED*/ 23294302
*    3 * BIT(1),                                                        23344302
*    3 * BIT(1),                                                        23394302
*   2 * CHAR(3),                       /* SPARE BYTES                */ 23894302
*   2 WTORMSG CHAR(81),                /* CONTROL STATEMENT INPUT       23994302
*                                         AREA                       */ 24044302
*   2 BLANKS CHAR(8),                  /* 8 BYTES OF BLANKS          */ 24094302
*   2 TITLE CHAR(5),                   /* CHARACTER STRING - TITLE   */ 24144302
*   2 STOP CHAR(4),                    /* CHARACTER STRING - STOP    */ 24194302
*   2 MSG1 CHAR(26),                   /* ID AND SKELETON OF MESSAGE    24294302
*                                         AMD161I                    */ 24344302
*   2 MSG2 CHAR(26),                   /* ID AND SKELETON OF MESSAGE    24394302
*                                         AMD158I                    */ 24444302
*   2 TITLEMSG CHAR(64),               /* TITLE AREA FOR USER-SUPPLIED  24494302
*                                         TITLE                      */ 24544302
*   2 TITLEMOD CHAR(15),               /* LABEL AND FIELD FOR MODULE    24594302
*                                         NAME FROM DUMP DATA SET       24644302
*                                         HEADER                     */ 24694302
*   2 * CHAR(2),                       /* 2 BLANKS                   */ 24744302
*   2 TITLEDTE CHAR(13),               /* LABEL AND FIELD FOR DATE ON   24794302
*                                         WHICH DUMP WAS TAKEN       */ 24844302
*   2 * CHAR(2),                       /* 2 BLANKS                   */ 24894302
*   2 TITLETME CHAR(13),               /* LABEL AND FIELD FOR TIME AT   24944302
*                                         WHICH DUMP WAS TAKEN       */ 24994302
*   2 * CHAR(2),                       /* 2 BLANKS                   */ 25044302
*   2 TITLEPGE CHAR(9),                /* LABEL AND FIELD FOR PAGE      25094302
*                                         NUMBER                     */ 25144302
*   2 CAPTABL CHAR(256),               /* TRANSLATE TABLE FOR TRANSLA-  25194302
*                                         TING EBCDIC LOWER CASE TO     25244302
*                                         UPPER CASE                 */ 25294302
*   2 TABLE CHAR(256),                 /* TRANSLATE TABLE TO FORM       25344302
*                                         EBCDIC PRINTOUT AT RIGHT      25394302
*                                         MARGIN OF GENERAL FORMAT   */ 25444302
*    3 * CHAR(63),                                                      25494302
*    3 HEXTABL CHAR(256),              /* TRANSLATE TABLE FOR 1ST STAGE 25544702
*                                         OF CONVERSION OF BINARY       25546302
*                                         NUMBER TO CHARACTER           25548302
*                                         HEXADECIMAL                */ 25550302
*     4 * CHAR(10),                                                     25554302
*     4 EBCTABL CHAR(256),             /* TRANSLATE TABLE FOR 2ND STAGE 25564302
*                                         OF CONVERSION OF BINARY       25566302
*                                         NUMBER TO CHARACTER           25568302
*                                         HEXADECIMAL                */ 25570302
*   2 * CHAR(57),                                                       25574302
*   2 * CHAR(16),                                                       25590302
*   2 BLNK CHAR(256),                  /* MAIN SCAN TABLE            */ 25593502
*   2 NONBLNK CHAR(256),               /* TABLE FOR NON-BLANK CHAR      25595502
*                                         SCAN                       */ 25597502
*                                                                       25598902
*/********************************************************************/ 25601302
*/*                                                                  */ 25603702
*/*      COMMON ADDRESS CONSTANTS                                    */ 25606102
*/*                                                                  */ 25608502
*/********************************************************************/ 25610902
*                                                                       25627602
*   2 AWRITE PTR(31) BDY(WORD),        /* ADDRESS OF PRINTER DATA SET   25644302
*                                         WRITE ROUTINE AMDPRWTR     */ 25694302
*   2 APRTMSG PTR(31),                 /* ADDRESS OF SYSPRINT DATA SET  25744302
*                                         WRITE ROUTINE AMDPRMSG     */ 25794302
*   2 ASYNTAX PTR(31),                 /* ADDRESS OF MESSAGE WRITER     25844302
*                                         ROUTINE, AMDPRSYN          */ 25894302
*   2 AFMTLINE PTR(31),                /* ADDRESS OF GENERAL FORMAT     25944302
*                                         ROUTINE, AMDPRGFR          */ 25994302
*   2 AADRCNVT PTR(31),                /* ADDRESS OF 3 BYTE BINARY TO   26044302
*                                         CHARACTER HEXADECIMAL CON-    26094302
*                                         VERSION ROUTINE IN CSECT      26144302
*                                         AMDPRSYN                   */ 26194302
*   2 AWRDCNVT PTR(31),                /* ADDRESS OF 4 BYTE CONVERSION  26244302
*                                         ROUTINE                    */ 26294302
*   2 ARGNBND PTR(31),                 /* ADDRESS OF REGION BOUNDARY    26404302
*                                         ROUTINE                    */ 26414302
*   2 STOPEXIT PTR(31),                /* ADDRESS OF CURRENT STOP EXIT  26444302
*                                         ROUTINE                    */ 26494302
*   2 SYNMSGA PTR(31),                 /* ADDRESS OF SYNTAX ERROR       26544302
*                                         MESSAGE ARRAY              */ 26594302
*   2 AEREXIT PTR(31),                 /* ADDRESS OF ERROR EXIT         26644302
*                                         (TERMINATION) ROUTINE      */ 26694302
*   2 ALOADER PTR(31),                 /* ADDRESS OF SEGMENT LOAD       26744302
*                                         ROUTINE,AMDPRSEG           */ 26794302
*   2 QATMERTN PTR(31),                /* ADDRESS OF TOD CLOCK CONVERT  26844302
*                                         ROUTINE                    */ 26894302
*   2 ATCBSAVE PTR(31),                /* ADDR OF TCB SAVE ROUTINE   */ 26944302
*   2 ATCBREMV PTR(31),                /* ADDR OF ROUTINE FOR REMOVING  26994302
*                                         TCBS FROM THE TCBLIST      */ 27044302
*   2 ATCBRTRV PTR(31),                /* ADDR OF TCB RETREIVE RTN   */ 27094302
*   2 APCBENQ PTR(31),                 /* PCB QUEUE MANAGEMENT RTN   */ 27144302
*   2 ASTPROUT PTR(31),                /* ADDR OF MAIN STOP ROUTINE  */ 27194302
*   2 AFORMAT PTR(31),                 /* ADDR OF ROUTINE THAT CONTROLS 27244302
*                                         THE FORMATTING OF CONTROL     27294302
*                                         BLOCKS                     */ 27344302
*   2 APRTSTG PTR(31),                 /* ADDR OF PRINT STORAGE SERVICE 27394302
*                                         ROUTINE                    */ 27444302
*   2 BUFSUM FIXED(31),                /* TOTAL NUMBER OF BUFFERS FOR   27494302
*                                         THIS EXECUTION             */ 27544302
*   2 BUFREINT FIXED(31),              /* NUMBER OF TIMES BUFFERS WERE  27594302
*                                         INITIALIZED                */ 27644302
*   2 AERRMSGA(2) PTR(31),             /* ERROR MESSAGE ARRAY        */ 27694302
*   2 AEND PTR(31),                    /* ADDR OF AMDPREND           */ 27744302
*   2 ONGOPTR PTR(31),                 /* POINTER TO ONGO OPERAND    */ 27794302
*   2 ATCBSMFR PTR(31),                /* ADDR OF TCB SUMMARY TABLE     27844302
*                                         FREE ROUTINE               */ 27894302
*   2 ATCBSMRY PTR(31),                /* ADDR OF TCB SUMMARY TABLE     28044302
*                                         PRINT ROUTINE              */ 28094302
*   2 DCBADDRS CHAR(20) BDY(WORD),     /* DCB ADDRESS ARRAY          */ 28144302
*    3 AOUTDCB PTR(31),                /* ADDR OF OUTPUT(PRINTER) DCB*/ 28194302
*    3 APTRDCB PTR(31),                /* ADDR OF MSG(SYSPRINT) DCB  */ 28244302
*    3 ARDRDCB PTR(31),                /* ADDR OF CONTROL CARD INPUT    28294302
*                                         DCB (SYSIN)                */ 28344302
*    3 AINDCB PTR(31),                 /* ADDR OF INPUT DUMP DATA SET   28394302
*                                         DCB (TAPE)                 */ 28444302
*    3 * PTR(31),                                                       28494302
*     4 * CHAR(1),                                                      28594302
*      5 ENDLIST BIT(1),               /* END OF LIST INDICATOR      */ 28644302
*     4 ASYSUDCB PTR(24),              /* ADDR OF SYSUT1 OR SYSUT2      28654302
*                                         DCB                        */ 28664302
*/********************************************************************/ 28694302
*/*                                                                  */ 28744302
*/*      AREAS NEEDED FOR GTF EDIT INTERFACE                         */ 28794302
*/*                                                                  */ 28844302
*/********************************************************************/ 28894302
*   2 TRCCOUNT FIXED(31),              /* COUNT OF ENTRIES TO           28944302
*                                         AMDPRGET                   */ 28994302
*   2 AEDITCB PTR(31),                 /* ADDR OF EDIT COMMUNICATION    29044302
*                                         AREA - AMDPRTAB            */ 29094302
*   2 AROOT PTR(31),                   /* ADDR OF AMDPRTAB INIT. RTN */ 29144302
*   2 EDITER CHAR(1),                  /* VALUE OF ER PARAMETER OF      29194302
*                                         EXECUTE STATEMENT          */ 29244302
*   2 * CHAR(3),                                                        29294302
*/********************************************************************/ 29344302
*/*                                                                  */ 29394302
*/*      ADDITIONS FOR X01980/Y01980 SUPPORT                         */ 29444302
*/*                                                                  */ 29494302
*/********************************************************************/ 29544302
*   2 REALMAP PTR(31) BDY(WORD),       /* POINTER TO REAL DUMP MAPS  */ 29594302
*   2 SEGTABOR PTR(31),                /* SEGMENT TABLE ORIGIN       */ 29644302
*   2 REALMAX FIXED(31),               /* TOP OF REAL STORAGE-CVTEORM*/ 29694302
*   2 * FIXED(31),                     /* SPARE WORD                 */ 29744302
*   2 QAPFT PTR(31),                   /* ADDRESS OF PFT IN DUMP     */ 29944302
*/********************************************************************/ 29994302
*/*                                                                  */ 30044302
*/*      ADDITIONS FOR Y02006 SUPPORT                                */ 30094302
*/*                                                                  */ 30144302
*/********************************************************************/ 30194302
*   2 QASID BIT(16),                   /* ASID OF IPL'ED CPU         */ 30344302
*   2 IPLCPU BIT(16),                  /* ADDRESS OF IPL'ED CPU -       30394302
*                                         CONTAINS 256 IF THE IPL'ED    30444302
*                                         CPU STATUS WAS UNAVAIBLE -    30494302
*                                         I.E. AN I/O ERROR OCCURRED    30544302
*                                         WHEN THE CPU STATUS RECORD    30594302
*                                         WAS BEING READ             */ 30644302
*   2 CURASCB PTR(31),                 /* ADDR OF CURRENT ASCB IN       30694302
*                                         DUMPED SYSTEM              */ 30744302
*   2 PREFXRGR PTR(31),                /* REAL ADDRESS IN PSA PREFIX    30894302
*                                         REGISTER (SADMP INPUT ONLY)*/ 30944302
*   2 PREFXRGV PTR(31),                /* VIRTUAL ADDRESS IN PSA PREFIX 30994302
*                                         REGISTER (SADMP INPUT ONLY)*/ 31044302
*   2 ASVTADDR PTR(31),                /* ADDR OF ASVT IN DUMPED SYS */ 31094302
*   2 SACSWCAW CHAR(12),               /* CSW (FIRST 8 BYTES) AND CAW   31144302
*                                         (LAST 4 BYTES) FROM AMDSADMP  31194302
*                                         HEADER RECORD              */ 31244302
*   2 HDRREGS CHAR(168),               /* REGISTERS AND CURRENT PSW     31294302
*                                         FROM SVCDUMP OR DSS HEADER */ 31344302
*   2 HDRTITLE CHAR(100),              /* TITLE FROM HEADER RECORD   */ 31354302
*   2 * PTR(31),                       /* SPARE WORD                 */ 31394302
*   2 ASIDNDX PTR(31),                 /* POINTER TO ASID INDEX      */ 31444302
*   2 CPUMAP PTR(31),                  /* POINTER TO CPU STATUS RECORD  31494302
*                                         MAPS                       */ 31544302
*   2 ASCBMAP PTR(31),                 /* POINTER TO THE ASCB MAP THAT  31594302
*                                         IS CREATED BY AMDPRRDC     */ 31644302
*   2 BUFERMAP PTR(31),                /* ADDRESS OF THE FIRST PHYSICAL 31694302
*                                         BUFFER MAP ENTRY IN RDC    */ 31744302
*   2 BRRDDATA PTR(31),                /* ADDRESS OF AMDPRRDC READ DATA 31754302
*                                         ROUTINE                    */ 31764302
*   2 BRRDINIT PTR(31),                /* ADDRESS OF BRREAD INIT        31774302
*                                         ROUTINE                    */ 31784302
*   2 BRRDADJ PTR(31),                 /* ADDRESS OF BRREAD ADJUST      31786302
*                                         ROUTINE                    */ 31788302
*   2 AASCBFMT PTR(31),                /* ADDRESS OF AMDPRFAR        */ 31794302
*   2 ASRBFMT PTR(31),                 /* ADDRESS OF AMDPRSRB        */ 31844302
*   2 AUSRINIT PTR(31),                /* ADDRESS OF AMDPRUIM INIT.     31854302
*                                         ROUTINE                    */ 31864302
*   2 AUSREXIT PTR(31),                /* MAIN ENTRY POINT TO AMDPRUIM  31874302
*                                                                    */ 31884302
*   2 AUSRDEL PTR(31),                 /* ENTRY POINT FOR AMDPRUIM      31886302
*                                         CLEAN-UP ROUTINE           */ 31888302
*   2 AUSRTCBA PTR(31),                /* ADDR OF TCB CURRENTLY BEING   31892302
*                                         PROCESSED BY FSR           */ 31892702
*   2 AUSRASID BIT(16),                /* ASID OF MEMORY CURRENTLY      31893102
*                                         BEING PROCESSED BY FSR OR     31893502
*                                         FAR                        */ 31893902
*   2 EXITFLAG CHAR(1),                /* FLAGS INDICATING ACTION       31894002
*                                         AMDPRUIM IS TO PERFORM     */ 31894102
*   2 * CHAR(1),                                                        31927402
*   2 RBMAX FIXED(15),                 /* LOOP CONTROL VALUE =50     */ 31927602
*   2 PQEMAX FIXED(15),                /* LOOP CONTROL VALUE =50     */ 31944302
*   2 LLEMAX FIXED(15),                /* LOOP CONTROL VALUE =255    */ 31994302
*   2 JPQMAX FIXED(15),                /* LOOP CONTROL VALUE =256    */ 32044302
*   2 DEBMAX FIXED(15),                /* LOOP CONTROL VALUE =200    */ 32144302
*   2 DDMAX FIXED(15),                 /* LOOP CONTROL VALUE =1635   */ 32194302
*   2 SRBMAX FIXED(15),                /* LOOP CONTROL VALUE =50     */ 32296302
    2 TCBMAX FIXED(15),            /* LOOP CONTROL VALUE=256 @ZA00413*/ 32298300
*   2 ASCBMAX FIXED(15),               /* LOOP CONTROL VALUE =200    */ 32298702
*   2 DQEMAX FIXED(15),                /* LOOP CONTROL VALUE =50     */ 32299102
*   2 XLMAX FIXED(31) BDY(WORD),       /* LOOP CONTROL VALUE =25     */ 32300302
*   2 DNUCTOP FIXED(31) BDY(WORD),     /* DEFAULT TOP OF NUCLEUS     */ 32304302
*   2 LPAMAX FIXED(31) BDY(WORD),      /* LOOP CONTROL VALUE = 500   */ 32314302
*   2 DFLTCSA PTR(31),                 /* DEFAULT CSA ADDRESS        */ 32324302
*   2 TOPICHDR CHAR(10),               /* OPTIONAL PAGE HEADER       */ 32334302
*   2 * CHAR(2),                       /* UNUSED FIELD               */ 32337302
*   2 CSADDR FIXED(31),                /* CSA ADDRESS                */ 32340300
*   2 I3800SW CHAR(1),                 /* SWITCHES FOR 3800 SUPPORT  */ 32340700
*    3 * BIT(1),                       /* UNUSED             @Z40MI3F*/ 32341100
*    3 * BIT(1),                       /* UNUSED             @Z40MI3F*/ 32341500
*    3 * BIT(1),                       /* UNUSED             @Z40MI3F*/ 32341900
*    3 * BIT(1),                       /* UNUSED             @Z40MI3F*/ 32342300
*    3 I3800KEY BIT(1),            /* KEY MSG NEEDED        @Z40MI3F */ 32342700
*    3 I3800ULN BIT(1),                 /* USER-SPEC-PAGE-LEN        */ 32343100
*    3 I380080  BIT(1),                 /* LONG PAGE FORMAT          */ 32343500
*    3 I3800204 BIT(1),            /* CONDENSED DUMP FORMAT @Z40MI3F */ 32343900
*   2 TITLEKEY CHAR(16),           /* KEY MSG IN PGE TITLE  @Z40MI3F */ 32344000
*    3 * CHAR(12),                 /* DURING CONDENSED ONLY @Z40MI3F */ 32344100
*    3 TITLESTK CHAR(2),    /* STORAGE KEY VALUE             @Z4OM13F*/ 32344200
*    2 Z9SVCBUF PTR(31),    /* ADDR OF SVC BUFFER            OZ09006 */ 32344300
*    2 Z9SUBITS CHAR(15),   /* SU BIT STRING                 OZ09006 */ 32346300
*   2 Z9SUFLG BIT(8),               /* SU FLAG               OZ09006 */ 32348300
*   2 Z9ERRID CHAR(12);             /* SET FROM SVC DUMP     UZ81700 */ 32349300
*                                                                       32350300
*/********************************************************************/ 32354302
*/*                                                                  */ 32364302
*/*       EXITFLAG VALUES                                            */ 32374302
*/*                                                                  */ 32384302
*/********************************************************************/ 32384702
*                                                                       32386302
*DECLARE                                                                32388302
*  ATCB BIT(8) CONSTANT('80'X),        /* ENTER FOR EACH TCB         */ 32390302
*  BASID BIT(8) CONSTANT('40'X),       /* ENTER FOR EACH ASID        */ 32392302
*  CFORMAT BIT(8) CONSTANT('20'X),     /* ENTER ON EACH FORMAT STMT  */ 32392702
*  DCURJOB BIT(8) CONSTANT('10'X),     /* ENTER FOR PRINT CURRENT AND   32393102
*                                         PRINT JOBNAME STMT'S       */ 32393202
*  ENUCLEUS BIT(8) CONSTANT('08'X),    /* ENTER FOR PRINT NUCLEUS       32393502
*                                         STMT                       */ 32393602
*  ZVERB BIT(8) CONSTANT('00'X);       /* ENTER TO DECODE VERB       */ 32393902
*                                                                       32394002
*/********************************************************************/ 32394102
*/*                                                                  */ 32394202
*/*       FMTPTRN FLAG BYTE VALUES                                   */ 32410902
*/*                                                                  */ 32420902
*/********************************************************************/ 32422902
*                                                                       32423302
*GEN DATA;                                                              32423702
DTAE     EQU   32                  DATA EBCDIC BIT                      32423802
DTAC     EQU   16                  DATA IN CORE BIT                     32423902
DTAP     EQU   8                   DATA PTR BIT                         32424002
DTA      EQU   4                   DATA INCLUDED BIT                    32428002
LBLP     EQU   2                   LABEL PTR BIT                        32430002
LBL      EQU   1                   LABEL INCLUDED BIT                   32432002
*@ENDGEN;                                                               32432302
*                                                                       32436302
*/********************************************************************/ 32440302
*/*                                                                  */ 32444302
*/*       REGISTER DEFINITIONS                                       */ 32494302
*/*                                                                  */ 32544302
*/********************************************************************/ 32594302
*                                                                       32644302
*DECLARE                                                                32694302
*  R0 REG(0) PTR(31),                  /* GENERAL REGISTER 0         */ 32744302
*  R1 REG(1) PTR(31),                  /* GENERAL REGISTER 1         */ 32794302
*  R2 REG(2) PTR(31),                  /* GENERAL REGISTER 2         */ 32844302
*  R3 REG(3) PTR(31),                  /* GENERAL REGISTER 3         */ 32894302
*  R4 REG(4) PTR(31),                  /* GENERAL REGISTER 4         */ 32944302
*  R5 REG(5) PTR(31),                  /* GENERAL REGISTER 5         */ 32994302
*  R6 REG(6) PTR(31),                  /* GENERAL REGISTER 6         */ 33044302
*  R7 REG(7) PTR(31),                  /* GENERAL REGISTER 7         */ 33094302
*  R8 REG(8) PTR(31),                  /* GENERAL REGISTER 8         */ 33144302
*  R9 REG(9) PTR(31),                  /* GENERAL REGISTER 9         */ 33194302
*  R10 REG(10) PTR(31),                /* GENERAL REGISTER 10        */ 33244302
*  R11 REG(11) PTR(31),                /* GENERAL REGISTER 11        */ 33294302
*  R12 REG(12) PTR(31),                /* GENERAL REGISTER 12        */ 33344302
*  R13 REG(13) PTR(31),                /* GENERAL REGISTER 13        */ 33394302
*  R14 REG(14) PTR(31),                /* GENERAL REGISTER 14        */ 33444302
*  R15 REG(15) PTR(31),                /* GENERAL REGISTER 15        */ 33494302
*  COMBASE REG(12) PTR(31),            /* COMMON AREA BASE REGISTER  */ 33594302
*  BASE1 REG(11) PTR(31),              /* BASE REGISTER              */ 33644302
*  BASE2 REG(10) PTR(31),              /* SECOND BASE REGISTER       */ 33694302
*  BASE3 REG(9) PTR(31),               /* THIRD BASE REGISTER        */ 33744302
*  STOPBASE REG(5) PTR(31),            /* STOP EXIT BASE REGISTER    */ 33794302
*  LINEREG REG(8) PTR(31),             /*                            */ 33844302
*  BUFREG REG(6) PTR(31),              /* POINTER TO OUTPUT BUFFER   */ 33894302
*  CNTREG REG(3) PTR(31),              /*                            */ 33944302
*  PREG REG(1) PTR(31);                /* PARAMETER REGISTER         */ 33994302
*                                                                       34044302
./  ADD  SSI=61280617,NAME=CONTIME
         MACRO                                                          00050041
&NAME    CONTIME &TIMER=,&LOCAL=YES,&STCLOCK=YES                        00100041
* MACCOMP-SC1CM                                                         00150041
* MACSTAT-@G17EP5W                                                      00200041
* MACMEAN-CONVERT TIMER TO BINARY NUMBER REPRESENTING HH.MM.SS.T        00250041
         LCLB   &B        FLAG TO DETERMINE CODE GENERATION             00300041
&NAME    DS     0H                                                      00350041
         AIF    ('&LOCAL' EQ 'YES' OR '&LOCAL' EQ 'NO').NEXT1           00400041
&B       SETB   (1)       SET FLAG TO TERMINATE                         00450041
         IHBERMAC 54,,&LOCAL                                            00500041
.NEXT1   AIF    ('&STCLOCK' EQ 'YES' OR '&STCLOCK' EQ 'NO').NEXT2       00550041
&B       SETB   (1)       SET FLAG TO TERMINATE                         00600041
         IHBERMAC 54,,&STCLOCK                                          00650041
.NEXT2   AIF   ('&TIMER' NE '').CONTNUE                                 00700041
&B       SETB  (1)        SET FLAG TO TERMINATE                         00750041
         MNOTE 12,'THE NAME OF AN EIGHT CHARACTER FIELD WHICH CONTAINS C00800041
                THE TIME VALUE TO BE CONVERTED MUST BE SPECIFIED.'      00850041
.CONTNUE AIF   (&B).EXIT  ANY ERRORS FOUND--EXIT                        00900041
         AIF   ('&LOCAL' NE 'YES').NOLOC   LOCAL TIME REQUIRED          00950041
         L     1,CVTPTR                GET ADDRESS OF CVT TO ACCESS     01000041
         L     0,CVTTZ(1)              LOCAL TIME DIFFERENCE            01050041
.NOLOC   IHBINNRA &TIMER               LOAD REG 1 WITH ADDRESS          01100041
         AIF   ('&STCLOCK' EQ 'NO').NEXT3 NEED TO GET TOD VALUE?        01150041
         STCK  0(1)                    GET TOD CLOCK VALUE              01200041
         BC    8,IHBA&SYSNDX           IF SUCCESSFUL,CONVERT VALUE      01250041
         LA    0,4                     UNSUCCESFUL, SET BAD RETURN CODE 01300041
         SR    1,1                     UNSUCCESSFUL,SET ANSWER TO ZERO  01350041
         B     IHBB&SYSNDX             AND EXIT                         01400041
.NEXT3   ANOP                                                           01450041
IHBA&SYSNDX  L  1,0(1)                 GET HIGH ORDER WORD FROM TOD     01500041
         AIF   ('&LOCAL' NE 'YES').GMEANTM LOCAL TIME REQUIRED          01550041
         AR    1,0                     CHANGE TO LOCAL TIME             01600041
.GMEANTM SR    0,0                     ZERO EVEN REGISTER               01650041
         SLDL  0,7                     MULTIPLY BY 2**7                 01700041
         CNOP  0,4                     BRANCH AROUND CONSTANTS          01750041
         B     *+8                     BRANCH AROUND CONSTANTS          01800041
         DC    F'10546875'             CONSTANT VALUE K                 01850041
         D     0,*-4                   EVEN REG HAS 2**7 * NBR 2**20    01900041
*                                      U-SEC SINCE MIDNIGHT             01950041
         SRL   0,7                     FACTOR OUT 2**7 VALUE            02000041
         IHBINNRA &TIMER               LOAD ADDRESS IN REG 1            02050041
         L     1,4(1)                  GET LOW ORDER TOD VALUE          02100041
         SRDL  0,12                    REMOVE LOW ORDER BITS TO GET     02150041
*                                      RESOLUTION TO 1 MICRO-SEC        02200041
         D     0,=F'100000'            GET RESOLUTION TO .1 SEC IN      02250041
*                                      REG 1                            02300041
         LTR   1,1                     IF RESULT ¬= EXACTLY MIDNIGHT    02350041
         BC    7,IHBC&SYSNDX           USE THAT VALUE, OTHERWISE        02400041
         LA    1,1                     SET TO 1 INCREMENT PAST MIDNITE  02450041
IHBC&SYSNDX SR    0,0                  SET RETURN CODE TO GOOD          02500041
IHBB&SYSNDX DS   0H                                                     02550041
.EXIT    MEXIT                                                          02600041
         MEND                                                           02650041
./  ADD  SSI=32820350,NAME=DEL
         MACRO                                                          00900002
&TAG     DEL   &TREE,&LV=,&T=,&TYPE=,&S=,&SP=,                         X01800002
               &FREE=,&RECL=                                            02700002
.*********************** SEPTEMBER 27, 1973. ************************** 03600002
.* THE DEL MACRO-INSTRUCTION IS USED TO DELETE A KEY-ADDRESS          * 04500002
.* ASSOCIATION PAIR FROM THE RADIX PARTITION TREE. THE MEANINGS OF THE* 05400002
.* PARAMETERS ARE AS FOLLOWS:                                         * 06300002
.********************************************************************** 07200002
.* TREE: THE TREE PARAMETER SPECIFIES THE ADDRESS OF THE RADIX        * 08100002
.*       PARTITION TREE, AS IT IS OBTAINED FROM USING THE STREE       * 09000002
.*       MACRO-INSTRUCTION. THE ADDRESS MAY EITHER BE IN MAIN STORAGE * 09900002
.*       OR IN A REGISTER. IF "LABEL" IS CODED FOR THE TREE PARAMETER,* 10800002
.*       THE ADDRESS IS IN A WORD IN MAIN STORAGE. IF "(TREE)" IS     * 11700002
.*       CODED, THE ADDRESS IS IN THE CORRESPONDING REGISTER.         * 12600002
.* LV:   LV MEANS "LENGTH VALUE", AND IS USED TO SPECIFY THE LENGTH OF* 13500002
.*       THE RECORD IF THE RECORD AREA IS TO BE RELEASED TO THE SYSTEM* 14400002
.*       VIA THE FSPACE MACRO-INSTRUCTION. IF THE LV PARAMETER IS NOT * 15300002
.*       CODED, THEN NO FSPACE OPERATION TAKES PLACE, BUT ONLY THE    * 16200002
.*       SPACE FOR THE RADIX PARTITION TREE ENTRY IS RELEASED.        * 17100002
.*       THE LV PARAMETER IS CODED EXACTLY THE SAME WAY AS IN THE     * 18000002
.*       FSPACE MACRO-INSTRUCTION. IF THE RECORD IS A VARIABLE LENGTH * 18900002
.*       RECORD WITH EITHER A ONE-BYTE OR HALFWORD COUNT AT THE FRONT * 19800002
.*       OF THE RECORD, THE LENGTH VALUE MAY BE CODED AS:             * 20700002
.*       LV=((15),1) FOR A ONE BYTE LENGTH;                           * 21600002
.*       LV=((15),2) FOR A HALFWORD LENGTH FIELD.                     * 22500002
.*       IF THE RECORD IS A FIXED LENGTH RECORD, THEN "LV=LENGTH"     * 23400002
.*       SHOULD BE CODED, WHERE "LENGTH" IS THE RECORD LENGTH.        * 24300002
.*                                                                    * 25200002
.* S,SP: THESE PARAMETERS ARE CODED EXACTLY THE SAME WAY AS IN THE    * 26100002
.*       FSPACE MACRO-INSTRUCTION; SEE THE DESCRIPTION OF FSPACE FOR  * 27000002
.*       DETAILS.                                                     * 27900002
.* FREE: THIS PARAMETER IS PRESENT ONLY FOR COMPATIBILITY WITH EARLIER* 28800002
.*       VERSIONS, AND SHOULD NOT BE USED.                            * 29700002
.* RECL: THIS PARAMETER IS PRESENT ONLY FOR COMPATIBILITY WITH EARLIER* 30600002
.*       VERSIONS, AND SHOULD NOT BE USED.                            * 31500002
.*       THE RETURN CODE IN REGISTER 15 IS THE ADDRESS THAT WAS       * 32400002
.*       ASSOCIATED WITH THE KEY BEFORE THE DELETE IF THE LENGTH VALUE* 33300002
.*       IS NOT CODED. THE CONDITION CODE SETTING DOES NOT ALWAYS     * 34200002
.*       AGREE WITH THE RETURN CODE IN THIS EVENT, SINCE THE CONDITION* 35100002
.*       CODE IS SET TO 01 (MINUS) WHEN THE DEL MACRO-INSTRUCTION     * 36000002
.*       DELETES THE LAST KEY-ADDRESS PAIR IN THE RPT. WHEN THE LV    * 36900002
.*       PARAMETER IS NOT CODED A BM INSTRUCTION WILL BRANCH WHEN THE * 37800002
.*       ADDRESS RETURNED IN REGISTER 15 IS THE LAST ADDRESS THAT WAS * 38700002
.*       IN THE RPT. A BNM INSTRUCTION WILL BRANCH WHEN THE ADDRESS   * 39600002
.*       RETURNED IN REGISTER 15 WAS NOT THE LAST ADDRESS IN THE RPT. * 40500002
.*       WHEN THE LENGTH VALUE IS CODED, THE CONDITION CODE SETTING IS* 41400002
.*       THE SAME AS ABOVE, BUT THE RETURN CODE IN REGISTER 15 IS SET * 42300002
.*       TO ZERO, SINCE THE FSPACE MACRO-INSTRUCTION SETS IT TO ZERO. * 43200002
.*       THE CONDITION CODE IS PRESERVED THROUGH THE FSPACE           * 44100002
.*       MACRO-INSTRUCTION, SO THAT IT IS THE SAME AS IT IS WHEN      * 45000002
.*       RETURNING FROM THE DEL SUBROUTINE IN THE MODULE IGARPT01.    * 45900002
.* AFTER THE DEL OPERATION, THE CURSOR IS SET BETWEEN THE TWO KEYS ON * 46800002
.* EITHER SIDE OF THE DELETED KEY, SO THAT IS A SCANL OR SCANR        * 47700002
.* MACRO-INSTRUCTION IS SUBSEQUENTLY EXECUTED THE CURSOR IS POSITIONED* 48600002
.* TO THE KEY LOWER OR HIGHER THAN THE DELETED KEY.                   * 49500002
.* THUS IT IS POSSIBLE TO PROCESS ALL THE ADDRESS IN THE RPT IN       * 50400002
.* ASCENDING ORDER, AND DELETE EACH PAIR AFTER IT HAS BEEN PROCESSED, * 51300002
.* BY USING ISCAN TO INITIALIZE THE CURSOR, AND THEN FOLLOWING EACH   * 52200002
.* SCANR BY A DEL, WHICH DELETES EACH ENTRY AFTER IT HAS BEEN         * 53100002
.* PROCESSED.                                                         * 54000002
.* A SAMPLE PROGRAM TO DO THIS IS AS FOLLOWS:                         * 54900002
.*       ISCAN TREE  SET THE CURSOR TO THE INITIAL STATE.             * 55800002
.* MORE: SCANR TREE,DONE=END  SET THE CURSOR TO THE NEXT.             * 56700002
.*       PROCESS THE RECORD AT THE ADDRESS IN REGISTER 15.            * 57600002
.*       DEL TREE,LV=80  DELETE THE CURSOR-SELECTED KEY-ADDRESS PAIR  * 58500002
.*                        FROM THE RADIX PARTITION TREE, AND RELEASE  * 59400002
.*                        THE 80-BYTE RECORD AREA TO THE SYSTEM VIA   * 60300002
.*                        THE FSPACE MACRO-INSTRUCTION.               * 61200002
.*       BNM MORE  BRANCH BACK TO SCAN MORE IF THERE IS STILL AT LEAST* 62100002
.*                        ONE ENTRY.                                  * 63000002
.********************************************************************** 63900002
         GBLC  &IGABLST  THE OFFSET INTO THE TREE HEADER FOR THE LIST  *64800002
                         OF RPT ENTRY POINTS.                           65700002
         GBLC  &IGADEL   INDEX OF THE ADDRESS OF THE DELETE ROUTINE    *66600002
                         ADDRESS IN THE LIST OF ENTRY POINTS IN THE    *67500002
                         TREE HEADER.                                   68400002
         GBLC  &IGADDR   THE ADDRESS OF THE MODULE IGARPTXX.            69300002
         GBLC  &IGARPT#  THE TYPE OF THE RADIX PARTITION TREE FROM ONE *70200002
               OF THE PARAMETERS T OR TYPE.                             71100002
         LCLC  &R,&Q                                                    72000002
.*A000000                                                        Y02147 72900002
.********************************************************************** 73800002
         AIF   (K'&RECL EQ 0).NEW  SEE IF THE OLD PARAMETER RECL IS    *74700002
                         CODED INSTEAD OF LV.                           75600002
&TAG     DEL   &TREE,T=&T,TYPE=&TYPE,LV=&RECL,S=&S,SP=&SP               76500002
         AGO   .FIN                                                     77400002
.NEW     ANOP                                                           78300002
      RPTDSECT T=5,DS=NO                                                79200002
      RPTDSECT T=8,DS=NO                                                80100002
.********************************************************************** 81000002
&R       SETC  'R'                                                      81900002
         AIF   (K'&TREE EQ K'&TREE(1)+2 AND N'&TREE EQ 1).LW2           82800002
&R       SETC  ' '                                                      83700002
.LW2     AIF   ('&TREE' NE '(1)').LW3  SEE IF THE TREE ADDRESS IS      *84600002
                         ALREADY IN R1.                                 85500002
         AIF   (K'&TAG EQ 0).LW4  SEE IF THERE IS NO TAG.               86400002
&TAG     EQU   *                                                        87300002
         AGO   .LW4      SKIP THE LR INSTRUCTION.                       88200002
.LW3     ANOP                                                           89100002
&TAG     L&R   1,&TREE(1)                                               90000002
.LW4     ANOP                                                           90900002
         L     15,(&IGABLST+&IGADEL)(,1)  ADDRESS OF THE DELETE ROUTINE 91800002
         BALR  14,15           LINK TO THE DELETE ROUTINE.              92700002
         AIF   (K'&LV EQ 0).FIN  SEE IF A LENGTH VALUE IS GIVEN.        93600002
         AIF   ('&LV' EQ '0').FIN  SEE IF THE LENGTH IS ZERO.           94500002
        FSPACE R,A=(15),S=&S,SP=&SP,LV=&LV  FREE THE RECORD AREA.       95400002
         SPM   14        RESTORE CONDITION CODE.                        96300002
FIN&SYSNDX EQU *                                                        97200002
.FIN     ANOP                                                           98100002
         MEND                                                           99000002
./  ADD  SSI=60690027,NAME=EQUATES
         MACRO                                                          05750002
         EQUATES                                                        05800002
.*A096000,109100-109480                                          Y02006 05810002
.*C080000,081000,082500,094000,095000,097000                     Y02006 05820002
.*D075500-076500,084500-085500,087000,090500,092500              Y02006 05830002
.*D096000-096500,097500,098500,099500,101500,102500-103500       Y02006 05840002
.*D105000-108500                                                 Y02006 05842002
         SPACE                                                          05850002
*********************************************************************** 05900002
*                                                                     * 05950002
**                    ****   E Q U A T E S   ****                    ** 06000002
*                                                                     * 06050002
*********************************************************************** 06100002
         SPACE                                                          06150002
R0       EQU   0                                                        06200002
R1       EQU   1                                                        06250002
R2       EQU   2                                                        06300002
R3       EQU   3                                                        06350002
R4       EQU   4                                                        06400002
R5       EQU   5                                                        06450002
R6       EQU   6                                                        06500002
R7       EQU   7                                                        06550002
R8       EQU   8                                                        06600002
R9       EQU   9                                                        06650002
R10      EQU   10                                                       06700002
R11      EQU   11                                                       06750002
R12      EQU   12                                                       06800002
R13      EQU   13                                                       06850002
R14      EQU   14                                                       06900002
R15      EQU   15                                                       06950002
RETREG   EQU   14                                                       07000002
COMBASE  EQU   12                                                       07050002
BASE1    EQU   11                                                       07100002
BASE2    EQU   10                                                       07150002
BASE3    EQU   9                                                        07200002
STOPBASE EQU   5                                                        07250002
LINEREG  EQU   8                                                        07300002
BUFREG   EQU   6                                                        07350002
CNTREG   EQU   3                                                        07400002
PREG     EQU   1                                                        07450002
**************************************                                  07500002
GOSW     EQU   8   *      ** SWA **                                     07700002
SETCVTSW EQU   2   *                                                    07750002
RDRSW    EQU   1   *                                                    07800002
**************************************                                  07850002
IOERR    EQU   128 *                                                    07900002
FMTERR   EQU   64  *                                                    07950002
*                         ** SWB **                                     08000002
ENDSW    EQU   8   *                                                    08050002
QSYSUT2  EQU   4   *               IF =1,SYSUT2 EXISTS           Y02006 08100002
**************************************                                  08150002
MSTRSW   EQU   128 *                                                    08200002
SETFLSH  EQU   64                  SET FLUSHMODE INDICATOR       Y02006 08250002
POSITSW  EQU   32                                                       08300002
TREADIN  EQU   16                                                       08350002
EDITSW   EQU   8   *      ** SWC **                              S21014 08400002
**************************************                                  08600002
FLSHMODE EQU   128 *                                                    08650002
NOSTDMG  EQU   16  *       ** SWD **                             S21014 08750002
NOLOADSW EQU   8 *          IF 1 A VERB CAME BEFORE END VERB     X01980 08800002
CONTSW   EQU   4 *                                               S21014 08850002
GPRSFND  EQU   2   *                                                    08900002
**************************************                                  08950002
STOPSW   EQU   128 *                                                    09000002
RESPC    EQU   32 *   INDICATES USER MUST RESPECIFY EDIT OPTIONS S01014 09100002
TITLESW  EQU   16  *      ** SWE **                                     09150002
BUILDMAP EQU   8   *  AMDPREAD MUST SCAN DUMP TO BUILD MAP(S)    X01980 09200002
**************************************                                  09300002
QPRDINIT EQU   128 *               IF 0 AMDPREAD INIT. REQUIRED  Y01980 09350002
NUCTFRMC EQU   64 *                IF 1 NUCTOP IS FROM CVT       Y02006 09400002
QSADMP   EQU   32 *                IF 1 INPUT IS FROM AMDSADMP   Y01980 09450002
DMPIC    EQU   16 *                IF 1 ENTIRE DUMP IS IN        Y02006 09500002
*                                  BUFFERS                       Y02006 09510002
*                                 ** SWF **                      Y01980 09550002
PAGEOK   EQU   8 *                SWITCH FOR FCB                 Y02006 09600002
QUT1LOD  EQU   2 *                SYSUT1 LOADED BY LOD           Y02006 09700002
***************************************                                 09800002
QSEGTBSW EQU   64 *          SEGMENT TABLE ORIGIN GIVEN BY USER  X01980 09900002
TTLSW    EQU   16  *        ** PRSW **                           S21016 10000002
PRNTRL   EQU   8 * *         PRINT REAL VERB CURRENT VERB        X01980 10050002
PRNTREAL EQU   4 * *         REAL STORAGE DATA REQUESTED         X01980 10100002
**************************************                                  10200002
*                         ** BUFSW **                                   10350002
PREFM    EQU   2   *                                                    10400002
**************************************                         @Z40MI3F 10404000
*                                                              @Z40MI3F 10408000
*        MASKS FOR I3800SW, THE BYTE OF SWITCHES FOR THE       @Z40MI3F 10412000
*        3800 SUPPORT CODE (CONDENSED DUMP)                    @Z40MI3F 10416000
*                                                              @Z40MI3F 10420000
I3800204 EQU   1                   CONDENSED DUMP REQUESTED    @Z40MI3F 10424000
I380080  EQU   2                   8 LINES/INCH REQUESTED      @Z40MI3F 10428000
I3800ULN EQU   4                   USER-SPEC-LINECNT           @Z40MI3F 10432000
I3800KEY EQU   8                   KEY MSG NEEDED IN PGE TITLE @Z40MI3F 10436000
**************************************                         @Z40MI3F 10440000
**************************************                                  10450002
ATCB     EQU   128                 ENTER FOR EACH TCB            Y02006 10910002
BASID    EQU   64                  ENTER FOR EACH ASID           Y02006 10920002
CFORMAT  EQU   32                  ENTER ON EACH FORMAT STMT     Y02006 10930002
DCURJOB  EQU   16                  ENTER FOR PRINT CURRENT/      Y02006 10940002
*                                  PRINT JOBNAME STMT'S          Y02006 10942002
*                   **  EXITFLAG  **                             Y02006 10944002
ENUCLEUS EQU   8                   ENTER FOR PRINT NUCLEUS STMT  Y02006 10946002
ZVERB    EQU   X'00'               ENTER TO DECODE VERB          Y02006 10948002
**************************************                                  10948402
*                  *      **  FMTPTRN FLAG BYTE EQU'S  **               10950002
DTAE     EQU   32  *              DATA EBCDIC BIT                       11000002
DTAC     EQU   16  *              DATA IN CORE BIT                      11050002
DTAP     EQU   8   *               DATA PTR BIT                         11100002
DTA      EQU   4   *               DATA INCLUDED BIT                    11150002
LBLP     EQU   2   *               LABEL PTR BIT                        11200002
LBL      EQU   1   *               LABEL INCLUDED BIT                   11250002
*************************************                                   11300002
DCBOPEN  EQU   16                                                       11350002
SISTER   EQU   128                                                      11400002
MOTHER   EQU   132                                                      11450002
DAUGHTER EQU   136                                                      11500002
TCBTIOT  EQU   12                                                       11550002
TCBPQE   EQU   152                                                      11600002
TCBSPQE  EQU   24                                                       11650002
TCBMSS   EQU   24                                                       11700002
TCBNEXT  EQU   116                                                      11750002
TCBFLGS  EQU   29                                                       11800002
SHRSPQE  EQU   128                                                      11850002
OWNSPQE  EQU   32                                                       11900002
LASTSPQE EQU   64                                                       11950002
MINCDE   EQU   4                                                        12000002
TCBLLEP  EQU   36                                                       12050002
JOBLAST  EQU   128                                                      12100002
JOBVALID EQU   64                                                       12150002
JSTCB    EQU   124                                                      12200002
JBFNDBIT EQU   32                                                       12250002
TIOTLNGH EQU   40                                                       12300002
TIMER    EQU   80                                                       12350002
BRWD1    EQU   128                                                      12400002
BRWD2    EQU   32                                                       12450002
RLD      EQU   64                                                       12500002
PQEFPQE  EQU   8                                                        12550002
PQESIZE  EQU   20                                                       12600002
PQEREGN  EQU   24                                                       12650002
PQERFLGS EQU   28                                                       12700002
IEAQQCBO EQU   20                                                       12750002
DCBIOB   EQU   68                                                       12800002
CMPLT    EQU   64                                                       12850002
BLKSIZE  EQU   62                                                       12900002
LRECL    EQU   82                                                       12950002
BUFNOA   EQU   20                                                       13000002
XFF      EQU   X'FF'               USED FOR A 255 BIT MASK       X01980 13050002
         EJECT                                                          13100002
         MEND                                                           13150002
./  ADD  SSI=32281251,NAME=FMTPTRN
         MACRO                                                          00050002
&NAME    FMTPTRN &CODE,&LN1,&LN2,&OFFS1,&OFFS2,&LPTR,&DPTR,&LAST        00100002
         LCLA  &A,&B                                                    00150002
&NAME    DS    0F                  TO ALIGN TO WORD BOUNDRY             00200002
         AIF   (N'&CODE EQ 1).CODE1                                     00250002
         AIF   (N'&CODE EQ 2).CODE2                                     00300002
         AIF   (N'&CODE EQ 3).CODE3                                     00350002
         AIF   (N'&CODE EQ 4).CODE4                                     00400002
         AIF   (N'&CODE EQ 5).CODE5                                     00450002
         DC    AL1(&CODE(1)+&CODE(2)+&CODE(3)+&CODE(4)+&CODE(5)+&CODE(6X00500002
               ))                  CODE BYTE                            00550002
         AGO   .LN                                                      00600002
.CODE1   DC    AL1(&CODE(1))       CODE BYTE                            00650002
         AGO   .LN                                                      00700002
.CODE2   DC    AL1(&CODE(1)+&CODE(2)) CODE BYTE                         00750002
         AGO   .LN                                                      00800002
.CODE3   DC    AL1(&CODE(1)+&CODE(2)+&CODE(3)) CODE BYTE                00850002
         AGO   .LN                                                      00900002
.CODE4   DC    AL1(&CODE(1)+&CODE(2)+&CODE(3)+&CODE(4)) CODE BYTE       00950002
         AGO   .LN                                                      01000002
.CODE5   DC    AL1(&CODE(1)+&CODE(2)+&CODE(3)+&CODE(4)+&CODE(5))       X01050002
                                   CODE BYTE                            01100002
.LN      AIF   (T'&LN1 EQ 'O').NOLN1                                    01150002
         AIF   (&LN1 EQ 0).NOLN1                                        01200002
         AIF   (T'&LN2 EQ 'O').NOLN2                                    01250002
         AIF   (&LN2 EQ 0).NOLN2                                        01300002
         DC    AL1(&LN1*16+&LN2-17) LENGTHS FOR LABEL AND DATA          01350002
         AGO   .OFF                                                     01400002
.NOLN1   AIF   (T'&LN2 EQ 'O').NOLN                                     01450002
         AIF   (&LN2 EQ 0).NOLN                                         01500002
         DC    AL1(&LN2-1)         LENGTH OF DATA                       01550002
         AGO   .OFF                                                     01600002
.NOLN2   DC    AL1(&LN1*16-16)     LENGTH OF LABEL                      01650002
         AGO   .OFF                                                     01700002
.NOLN    DC    AL1(0)              NO LABEL OR DATA LENGTHS             01750002
.OFF     AIF   (T'&OFFS1 EQ 'O').NOOFF1                                 01800002
         AIF   (T'&OFFS2 EQ 'O').NOOFF2                                 01850002
         DC    AL1(&OFFS1,&OFFS2)  LABEL AND DATA OFFSETS INTO LINE     01900002
         AGO   .PTRS                                                    01950002
.NOOFF1  AIF   (T'&OFFS2 EQ 'O').NOOFFS                                 02000002
         DC    AL1(0,&OFFS2)       OFFSET FOR DATA INTO LINE            02050002
         AGO   .PTRS                                                    02100002
.NOOFF2  DC    AL1(&OFFS1,0)       OFFSET OF LABEL INTO LINE            02150002
         AGO   .PTRS                                                    02200002
.NOOFFS  DC    AL1(0,0)            NO LABEL OR DATA OFFSETS             02250002
.PTRS    AIF   (T'&LPTR EQ 'O').DPTR NO LABEL PTR IF OMMITED            02300002
         AIF   (N'&LPTR GT 1).LPTR2 FIRST VAL IS LABEL FOR PTR          02350002
         DC    A(&LPTR(1))         ADDR OF LABEL                        02400002
         AGO   .DPTR                                                    02450002
.LPTR2   ANOP                                                           02500002
&LPTR(1) DC    A(&LPTR(2))         ADDR OF LABEL                        02550002
.DPTR    AIF   (T'&DPTR EQ 'O').END NO DATA PTR IF OMITTED              02600002
         AIF   (N'&DPTR GT 1).DPTR2 FIRST VAL IS LABEL FOR PTR          02650002
         DC    A(&DPTR(1))         ADDR OF DATA                         02700002
         AGO   .END                                                     02750002
.DPTR2   ANOP                                                           02800002
&DPTR(1) DC    A(&DPTR(2))         ADDR OF DATA                         02850002
.END     AIF   (T'&LAST EQ 'O').ENDA                                    02900002
         AIF   ('&LAST' NE 'LAST').ENDA                                 02950002
         DC    AL1(0)              TO END PATTERN                       03000002
.ENDA    MEND                                                           03050002
./  ADD  SSI=32111242,NAME=FREEJSCB
         MACRO                                                          06000001
&MACNAME FREEJSCB &SYSTEM=AOS2                                          12000001
.*                                                                      12010001
.*       THIS MACRO SHOULD BE USED TO FREE CORE FOR A JSCB BECAUSE      12020001
.*       IT ALLOWS FOR A LENGTH CHANGE OF THE JSCB WITHOUT CAUSING      12030001
.*       ANY RECODING IN A MODULE.  THIS MACRO DOES NOT NEED TO BE      12040001
.*       UPDATED IF THE JSCB LENGTH CHANGES BECAUSE IT USES SYMBOLS     12042001
.*       FOR THE LENGTH OF THE JSCB AND FOR THE DISPLACEMENT OF THE     12044001
.*       FIRST BYTE.  THESE SYMBOLS ARE EQU'S PUT OUT BY THE IEZJSCB    12046001
.*       MACRO SO THE IEZJSCB MACRO MUST BE USED IN ANY MODULE          12048001
.*       WHICH ISSUES A FREEJSCB.                                       12048401
.*                                                                      12048801
.*   OS/VS1 RELEASE 3, OS/VS2 RELEASE 2, 07/23/73, LEVEL=1              12050002
.*                                                                      12100001
&MACNAME LA    15,JSCBDISP(0,0) LOAD DISPLACEMENT OF FIRST BYTE  YM1995 18000002
         AR    1,15 -         COMPUTE ADDRESS OF BYTES TO BE FREED      24000001
         AIF   ('&SYSTEM' EQ 'AOS1' OR '&SYSTEM' EQ 'MFT').FREAOS1      36000001
         FREEMAIN R,LV=JSCBAOS2,A=(1),SP=253                            36050001
         MEXIT                                                          36100001
.FREAOS1 ANOP                                                           54000001
         FREEMAIN R,LV=JSCBAOS1,A=(1),SP=245                            60000001
         MEND                                                           90000001
./  ADD  SSI=33250485,NAME=FSPACE
             MACRO                                                      00050002
&NAME        FSPACE &R,&LV=,&A=                                         00100002
.*****************************************************************      00150002
.*                                                                      00200002
.* MACRO NAME - FSPACE                                                  00250002
.*                                                                      00300002
.* DESCRIPTIVE NAME -FREE SPACE MACRO (THIS IS FREEMAIN LIKE)           00350002
.*                                                                      00400002
.* COPYRIGHT - N/A                                                      00450002
.*                                                                      00500002
.* STATUS - OS/VS2 REL. 2.0                                             00550002
.*                                                                      00600002
.* FUNCTION -                                                           00650002
.*                                                                      00700002
.*   THE FUNCTION OF THIS MACRO IS TO SETUP THE INPUT REGS TO THE       00750002
.*   FSPACE SERVICE ROUTINE LOCATED IN MODULE IEFAB4F6.                 00800002
.*                                                                      00850002
.*   OPERATION -                                                        00900002
.*                                                                      00950002
.*      THIS MACRO REQUIRES - FSPACE R,LV=(0)                           01000002
.*      1) IF INVALID PARAMETERS PRINT MNOTE.                           01050002
.*      2) INSERT CODE                                                  01100002
.*      3) EXIT                                                         01150002
.*                                                                      01200002
.* NOTES -                                                              01250002
.*   DEPENDENCIES -                                                     01300002
.*      THIS MACRO IS CALLED BY USING THE PL/S STACK OPTION.            01350002
.*      THEREFORE CHANGES TO PL/S MAY IMPACT THIS MACRO                 01400002
.*      THE ONLY REGISTERS THE MACRO MAY ALTER ARE 0,1,14,15.           01450002
.*                                                                      01500002
.*   RESTRICTIONS                                                       01550002
.*      NONE.                                                           01600002
.*   REGISTER CONVENTIONS -                                             01650002
.*      MAY ONLY USE 14 THRU 1                                          01700002
.*                                                                      01750002
.*   PATCH LABEL - N/A                                                  01800002
.*                                                                      01850002
.* MODULE TYPE - MACRO                                                  01900002
.*                                                                      01950002
.*   PROCESSER - ASSEM                                                  02000002
.*   MODULE SIZE - N/A                                                  02050002
.*   ATTRIBUTES - EXECUTABLE MACRO                                      02100002
.*                                                                      02150002
.* ENTRY POINT - N/A                                                    02200002
.*                                                                      02250002
.* EXIT -                                                               02300002
.*   R0- UNPREDICTABLE                                                  02350002
.*   R1- UNPREDICTABLE                                                  02400002
.*   R2-R13 NOT CHANGED                                                 02450002
.*   R14 - UNPREDICTABLE                                                02500002
.*   R15 - UNPREDICTABLE                                                02550002
.*                                                                      02600002
.* EXTERNAL REFERENCES - NONE                                           02650002
.*                                                                      02700002
.* TABLES - NONE                                                        02750002
.* MACROS - NONE                                                        02800002
.*                                                                      02850002
.* CHANGE ACTIVITY - Y02670                                             02900002
.*                                                                      02950002
.* MESSAGES - SEE MNOTE IN MACRO CODE.                                  03000002
.*                                                                      06000002
.* ABEND CODES - NONE                                                   09000002
.*                                                                      12000002
.*****************************************************************      15000002
             AIF ('&R' EQ 'R' AND '&LV' EQ '(0)' AND '&A' EQ '(1)').OK  18000002
             MNOTE 4,'FSPACE PARAMETERS INVALID'                        21000002
.OK          ANOP                                                       24000002
&NAME        L     15,GS&SYSNDX.C      SET FSPACE EP IN REG 15          27000002
             CNOP  2,4                 *                                30000002
GS&SYSNDX.L  BALR  14,15               CALL FSPACE                      33000002
             B     GS&SYSNDX.E         +0 RETURN IS NORMAL RETURN       36000002
             B     GS&SYSNDX.D         +4 RETURN REQUIRES FREEMAIN      39000002
GS&SYSNDX.C  DC    V(FSPACE)           FSPACE ENTRY POINT               42000002
GS&SYSNDX.D  SVC   10                  FREEMAIN                         45000002
GS&SYSNDX.E  EQU   *                   *                                48000002
             MEND                                                       51000002
./  ADD  SSI=30791922,NAME=FTREE
         MACRO                                                          02000002
&TAG     FTREE &TREE,&TYPE=8                                            04000002
         GBLC  &IGAFTRE                                                 06000002
.*A000000                                                        Y02147 08000002
.********************************************************************** 10000002
      RPTDSECT TYPE=&TYPE                                               12000002
         AIF   (K'&TREE EQ K'&TREE(1)+2).LW0                            14000002
&TAG     L     1,&TREE                                                  16000002
         AGO   .LW1                                                     18000002
.LW0     AIF   ('&TREE' EQ '(1)').IFBR                                  20000002
&TAG     LR    1,&TREE(1)                                               22000002
         AGO   .LW1                                                     24000002
.IFBR    AIF   (K'&TAG EQ 0).LW1                                        26000002
&TAG     EQU   *                                                        28000002
.LW1     ANOP                                                           30000002
         L     15,0(0,1)  BASE ADDRESS OF PROGRAM IGARPT01.             32000002
         AIF   ('&TYPE' NE '5').NOT5                                    34000002
SRCH&SYSNDX SRCH (1),TYPE=5,SARG=((0))                                  36000002
         LTR   15,15                                                    38000002
         BC    4,OVER&SYSNDX                                            40000002
         DEL   (1),TYPE=5,FREE=NO                                       42000002
         BC    15,SRCH&SYSNDX                                           44000002
OVER&SYSNDX    EQU       *                                              46000002
         USING IGARPTH5,1                                               48000002
         L     2,IGAHVFC5                                               50000002
         IC    0,IGASP5                                                 52000002
         SLL   0,24                                                     54000002
         AL    0,=AL4(IGATYP5S)                                         56000002
     FREEMAIN R,LV=(0),A=(1)                                            58000002
         N     0,=XL4'FF000000'                                         60000002
         AL    0,=F'8'                                                  62000002
FREE&SYSNDX LTR 1,2                                                     64000002
         BC    8,DONE&SYSNDX                                            66000002
         L     2,0(2)                                                   68000002
     FREEMAIN R,LV=(0),A=(1)                                            70000002
         BC    15,FREE&SYSNDX                                           72000002
DONE&SYSNDX EQU *                                                       74000002
         DROP 1                                                         76000002
         MEXIT                                                          78000002
.NOT5    ANOP                                                           80000002
         AIF   ('&IGAFTRE' EQ '0').BALR                                 82000002
         BAL   14,&IGAFTRE.(0,15)  LINK TO FREE TREE IN IGARPT01.       84000002
         AGO   .NOTBALR                                                 86000002
.BALR    BALR  14,15     LINK TO FREE TREE IN IGARPT01.                 88000002
.NOTBALR ANOP                                                           90000002
         MEND                                                           92000002
./  ADD  SSI=32111246,NAME=GETJSCB
         MACRO                                                          00010001
&MACNAME GETJSCB &SYSTEM=AOS2                                           00020001
.*                                                                      00022001
.*       THIS MACRO SHOULD BE USED TO GET CORE FOR A JSCB BECAUSE       00024001
.*       IT ALLOWS FOR A LENGTH CHANGE OF THE JSCB WITHOUT CAUSING      00026001
.*       ANY RECODING IN A MODULE.  THIS MACRO DOES NOT NEED TO BE      00028001
.*       UPDATED IF THE JSCB LENGTH CHANGES BECAUSE IT USES SYMBOLS     00028401
.*       FOR THE LENGTH OF THE JSCB AND FOR THE DISPLACEMENT OF THE     00028801
.*       FIRST BYTE.  THESE SYMBOLS ARE EQU'S PUT OUT BY THE IEZJSCB    00029201
.*       MACRO SO THE IEZJSCB MACRO MUST BE USED IN ANY MODULE          00029601
.*       WHICH ISSUES A GETJSCB.                                        00032201
.*                                                                      00034801
.*   OS/VS1 RELEASE 3, OS/VS2 RELEASE 2, 07/20/73, LEVEL=1              00037402
.*                                                                      00039401
         AIF   ('&SYSTEM' EQ 'AOS1' OR '&SYSTEM' EQ 'MFT').GETAOS1      00040001
&MACNAME GETMAIN R,LV=JSCBAOS2,SP=253                                   00050001
         XC    0(JSCBAOS2,1),0(1)  CLEAR JSCB CORE                      00060001
         AGO   .SETADDR                                                 00062001
.GETAOS1 ANOP                                                           00070001
&MACNAME GETMAIN R,LV=JSCBAOS1,SP=245                                   00080001
         XC    0(JSCBAOS1,1),0(1)  CLEAR CORE OF JSCB                   00090001
.SETADDR ANOP                                                           00140001
         LA    15,JSCBDISP(0,0) LOAD DISPLACEMENT OF FIRST BYTE  YM1995 00150002
         SR    1,15 -           COMPUTE ADDR TO BE STORED IN TCB        00160002
         MEND                                                           00180001
./  ADD  SSI=61280618,NAME=GETSEQ
         MACRO                                                          00003041
&NAME    GETSEQ &SEQADDR                                                00006041
* MACCOMP-SC1CM                                                         00009041
* MACSTAT-@G17EP5W                                                      00012041
* MACMEAN-GET SEQUENCE NUMBER FOR ERROR ID                              00015041
         CNOP  0,4                     SET UP ALIGNMENT                 00018041
         L     2,CVTPTR                GET CVT ADDR                     00021041
         L     2,CVTRTMCT(2)           GET ADDR OF RTCT                 00024041
         L     0,RTCTRFLG(2)           GET ORIGINAL VALUE               00027041
IHBC&SYSNDX LR    1,0                  MOVE TO REGISTER FOR PROCESSING  00030041
         LR    2,0                     SAVE ORIGINAL VALUE              00033041
         SLDL  0,16                    MOVE HI-2 BYTES TO REG0          00036041
         SLL   0,16                    MOVE TO HI-ORDER BYTES IN REG0   00039041
         SRL   1,16                    PUT SEQ# IN LOW ORDER BYTES      00042041
         LA    1,1(1)                  INCREMENT COUNTER                00050041
         SLL   1,16                    SHIFT OUT ADD OVERFLOW FOR HALF  00052041
         SRL   1,16                    RETURN COUNTER TO ORIGINAL POS.  00054041
         OR    1,0                     PUT NEW VALUE IN REG1            00056041
         LR    0,2                     PUT ORIGINAL VALUE IN REG2       00058041
         L     2,CVTPTR                GET CVT ADDR                     00060041
         L     2,CVTRTMCT(2)           GET ADDR OF RTCT                 00062041
         CS    0,1,RTCTRFLG(2)         TRY TO SET NEW SEQ NUMBER        00064041
         BNE   IHBC&SYSNDX             IF NOT SUCCESSFUL--RETRY         00066041
         SLL   1,16                    MOVE OUT NON-SEQ# BYTES          00068041
         SRL   1,16                    RETURN SEQ TO ORIGINAL POS.      00070041
         AIF   ('&SEQADDR' EQ '').NOSTORE                               00072041
         LR    0,1                     SAVE ANSWER IN REG 0             00074041
         IHBINNRA &SEQADDR             PUT ANSWER ADDR IN REG 1         00076041
         STH   0,0(1)                SAVE SEQUENCE NUMBER VALUE         00078041
.NOSTORE MEXIT                                                          00080041
         MEND                                                           00082041
./  ADD  SSI=21050428,NAME=GLOBAL
         MACRO                                                          10000000
         GLOBAL                                                         20000000
         GBLB  &E536454                                                 30000000
&E536454 SETB  1                                                        40000000
         MEND                                                           50000000
./  ADD  SSI=80520091,NAME=GSPACE
             MACRO                                                      00050002
&NAME        GSPACE &R,&LV=                                             00070003
.*****************************************************************      00150002
.*                                                                      00200002
.* MACRO NAME - GSPACE                                                  00250002
.*                                                                      00300002
.* DESCRIPTIVE NAME -GET SPACE MACRO (THIS IS GETMAIN LIKE)             00350002
.*                                                                      00400002
.* COPYRIGHT - N/A                                                      00450002
.*                                                                      00500002
.* STATUS - OS/VS2 REL. 3.7 PTF                                @ZA28413 00550003
.*                                                                      00600002
.* FUNCTION -                                                           00650002
.*                                                                      00700002
.*   THE FUNCTION OF THIS MACRO IS TO SETUP THE INPUT REGS TO THE       00750002
.*   GSPACE SERVICE ROUTINE LOCATED IN MODULE IEFAB4F6.                 00800002
.*                                                                      00850002
.*   OPERATION -                                                        00900002
.*                                                                      00950002
.*      THIS MACRO REQUIRES - GSPACE R,LV=(0),A=(1)                     00970003
.*      1) IF INVALID PARAMETERS PRINT MNOTE.                           01050002
.*      2) INSERT CODE                                                  01100002
.*      3) EXIT                                                         01150002
.*                                                                      01200002
.* NOTES -                                                              01250002
.*   DEPENDENCIES -                                                     01300002
.*      THIS MACRO IS CALLED BY USING THE PL/S STACK OPTION.            01350003
.*      THEREFORE CHANGES TO PL/S MAY IMPACT THIS MACRO                 01380003
.*      THE ONLY REGISTERS THE MACRO MAY ALTER ARE 0,1,14,15.           01410003
.*      A CHANGE TO SVC99'S CSECT NAME MEANS A CHANGE TO GSPACE@YM05157 01440003
.*                                                                      01500002
.*   RESTRICTIONS                                                       01550002
.*      NONE.                                                           01600002
.*   REGISTER CONVENTIONS -                                             01650002
.*      MAY ONLY USE 14 THRU 1                                          01700002
.*                                                                      01750002
.*   PATCH LABEL - N/A                                                  01800002
.*                                                                      01850002
.* MODULE TYPE - MACRO                                                  01900002
.*                                                                      01950002
.*   PROCESSER - ASSEM                                                  02000002
.*   MODULE SIZE - N/A                                                  02050002
.*   ATTRIBUTES - EXECUTABLE MACRO                                      02100002
.*                                                                      02150002
.* ENTRY POINT - N/A                                                    02200002
.*                                                                      02250002
.* EXIT -                                                               02300002
.*   R0- UNPREDICTABLE                                                  02350002
.*   R1- ADDRESS RETURNED FROM GSPACE ROUTINE OR FROM GETMAIN           02400002
.*   R2-R13 NOT CHANGED                                                 02450002
.*   R14 - UNPREDICTABLE                                                02500002
.*   R15 - UNPREDICTABLE                                                02550002
.*                                                                      02600002
.* EXTERNAL REFERENCES - NONE                                           02650002
.*                                                                      02700002
.* TABLES - NONE                                                        02750002
.* MACROS - NONE                                                        02800002
.*                                                                      02850002
.* CHANGE ACTIVITY - Y02670                                             02900002
.*                 - OZ28413                                  @ZA28413  02920003
.*                                                                      02950002
.* MESSAGES - SEE MNOTE IN MACRO CODE.                                  03000002
.*                                                                      06000002
.* ABEND CODES - NONE                                                   09000002
.*                                                                      12000002
.*****************************************************************      15000002
.* GSPACE - C - MERGED BACK TO REL 3.7                         @ZA28413 15050003
             AIF   ('&R' EQ 'R' AND '&LV' EQ '(0)').OK                  18000002
             MNOTE 4,'GSPACE PARAMETERS INVALID'                        21000002
.OK          ANOP                                                       24000002
             AIF   ('&SYSECT' NE 'IEFDB400' AND '&SYSECT' NE 'IEFBB401'*24050003
                AND '&SYSECT' NE 'IEFBB410').OK1              @ZM41392  24100003
.* CSECTS IEFBB401, IEFBB410 HAVE UNPREDICTABLE REG 13.       @ZM41392  24150003
.* CSECT     IEFDB400(SVC99)  HAS AN UNPREDICTABLE REG 13     @YM05157  25000002
             SLR   1,1                                        @YM05157  25500002
             AGO   .OK2                                       @YM05157  26000002
.OK1         ANOP                                             @YM05157  26500002
             LR    1,13                SET ADDRESS IN REG 1             27000002
.OK2         ANOP                                             @YM05157  28000002
&NAME        L     15,GS&SYSNDX.C      SET GSPACE EP IN REG 15          30000002
             CNOP  2,4                 *                                33000002
GS&SYSNDX.L  BALR  14,15               CALL GSPACE                      36000002
             B     GS&SYSNDX.E         +0 RETURN IS NORMAL RETURN       39000002
             B     GS&SYSNDX.D         +4 RETURN REQUIRES GETMAIN       42000002
GS&SYSNDX.C  DC    V(GSPACE)           GSPACE PRIMARY ENTRY POINT       45000002
GS&SYSNDX.V  DC    V(GSPACE1)          GSPACE SECONDARY ENTRY POINT     48000002
GS&SYSNDX.D  SVC   10                  GETMAIN                          51000002
             LTR   0,14                Q. IS RETURN TO GSPACE NECESSARY 54000002
             L     15,GS&SYSNDX.V      GET SECONDARY ENTRY POINT        57000002
             BNZ   GS&SYSNDX.L         A. YES. RETURN TO GSPACE         60000002
GS&SYSNDX.E  EQU   *                   *                                63000002
             MEND                                                       66000002
./  ADD  SSI=32281252,NAME=HEXCNVT
         MACRO                                                          00050002
&NAME    HEXCNVT &OUT,&IN,&LN                                           00100002
         GBLC  &HEXSECT,&HEXTAB,&HEXWRD                                 00150002
         LCLA  &A,&B,&C,&D,&E,&F,&G                                     00200002
         LCLB  &REGSW,&RLNSW,&DFALTSW                                   00250002
         LCLB  &HEXSW                                                   00300002
         LCLC  &GNAME                                                   00350002
&GNAME   SETC  'HEX'.'&SYSNDX'                                          00400002
&DFALTSW SETB  (T'&LN EQ 'O')                                           00450002
         AIF   (&DFALTSW EQ 1).NEXT2                                    00500002
&RLNSW   SETB  ('&LN'(1,1) EQ '(')                                      00550002
.NEXT2   AIF   ('&OUT' EQ '' OR '&IN' EQ '').ERROR2                     00600002
&REGSW   SETB  ('&OUT'(1,1) EQ '(')                                     00650002
         AIF   (&DFALTSW EQ 0 AND T'&LN NE 'N').ERROR4                  00700002
         AIF   (&DFALTSW EQ 1).NEXT3                                    00750002
         AIF   (N'&LN NE 1).ERROR5                                      00800002
.NEXT3   AIF   (&RLNSW EQ 1 AND T'&LN(1) NE 'N').ERROR4 LN MUST BE     C00850002
               SELF DEFINING                                            00900002
         AIF   (&DFALTSW EQ 1).NEXT4                                    00950002
         AIF   (&RLNSW EQ 1 AND (&LN(1) LT 2 OR &LN(1) GT 12)).ERROR3  C01000002
               IF LN IS A REG IT MUST BE 2-12                           01050002
         AIF   (&RLNSW EQ 0 AND T'&LN(1) NE 'N').ERROR4 LN MUST BE     X01100002
               SELF DEFINING                                            01150002
         AIF   (&RLNSW EQ 1).NEXT4                                      01200002
         AIF   (&LN LT 1 OR &LN GT 112).ERROR6 LN MUST BE FROM 1-112    01250002
.NEXT4   AIF   (&REGSW EQ 0).NEXT9                                      01300002
         AIF   ('&IN'(1,1) NE '(').ERROR1 &IN MUST ALSO BE A REG        01350002
         AIF   (T'&OUT NE 'N').ERROR4                                   01400002
         AIF   (N'&OUT GT 1).ERROR3                                     01450002
         AIF   (&OUT(1) LE 1 OR &OUT(1) GT 12).ERROR3                   01500002
         AIF   (T'&IN NE 'N').ERROR4                                    01550002
         AIF   (N'&IN GT 1).ERROR3                                      01600002
         AIF   (&IN(1) LE 1 OR &IN(1) GT 12).ERROR3                     01650002
         AGO   .NEXT5                                                   01700002
.NEXT9   AIF   ('&IN'(1,1) EQ '(').ERROR1                               01750002
         AIF   (T'&OUT EQ 'N' OR T'&IN EQ 'N').ERROR4                   01800002
.NEXT5   ANOP                                                           01850002
&HEXSW   SETB  ('&HEXSECT' EQ '&SYSECT')                                01900002
         AIF   (&HEXSW EQ 1).NEXT6                                      01950002
&HEXSECT SETC  '&SYSECT'                                                02000002
&HEXWRD  SETC  '&GNAME'                                                 02050002
&HEXTAB  SETC  '&GNAME.A'                                               02100002
.NEXT6   ANOP                                                           02150002
         AIF   (&DFALTSW EQ 1).DFALT                                    02200002
         AIF   (&RLNSW EQ 1).REGLN                                      02250002
         AIF   (&LN GT 7).MULTI                                         02300002
&A       SETA  &LN*2+1             LENGTH FOR R1 OF UNPK                02350002
&B       SETA  &LN+1               LENGTH FOR R2 OF UNPK                02400002
.CONTA   AIF   (&REGSW EQ 1).ISAREG                                     02450002
&NAME    UNPK  &OUT.(&A),&IN.(&B)  UNPACK HEX DIGITS                    02500002
&A       SETA &A-1                                                      02550002
         MVI   &OUT+&A,X'40'       CLEAR SIGN BYTE                      02600002
.CONTB   L     1,&GNAME.B          SET ORIGIN OF TABLE                  02650002
         S     1,0(1)              BACK 240 BYTES                       02700002
         AIF   (&RLNSW EQ 1).CONTG                                      02750002
         AIF   (&REGSW EQ 1).CONTD                                      02800002
         TR    &OUT.(&A),0(1)      TRANSLATE FA-FF                      02850002
.CONTC   B     &GNAME.H            BR AROUND CONSTANTS                  02900002
         AIF   (&HEXSW EQ 1).ENDD  DON'T GENERATE TABLE IF SW ON        02950002
         AGO   .ENDC                                                    03000002
.ISAREG  ANOP                                                           03050002
&NAME    UNPK  0(&A,&OUT(1)),0(&B,&IN(1)) UNPACK HEX DIGITS             03100002
&A       SETA  &A-1                                                     03150002
         MVI   &A.(&OUT(1)),X'40'  CLEAR SIGN BYTE                      03200002
         AGO   .CONTB              SET REG 1 FOR TR                     03250002
.CONTD   TR    0(&A,&OUT(1)),0(1)  TRANSLATE FA-FF                      03300002
         AGO   .CONTC                                                   03350002
.DFALT   ANOP                                                           03400002
&A       SETA  9                   DFAULT TO 4 BYTES                    03450002
&B       SETA  5                                                        03500002
         AGO   .CONTA                                                   03550002
.MULTI   ANOP                                                           03600002
&C       SETA  (&LN/4)             TO UNPACK 4 AT A TIME                03650002
&D       SETA  &LN-&C*4            REMAINDER                            03700002
&A       SETA  9                                                        03750002
&B       SETA  5                                                        03800002
         AIF   (&REGSW EQ 0).MULTIB                                     03850002
&E       SETA  &OUT(1)                                                  03900002
&F       SETA  &IN(1)                                                   03950002
&G       SETA  1                                                        04000002
&NAME    LA    &G,&C               SET COUNT                            04050002
.MULTIA  ANOP                                                           04100002
&GNAME.E UNPK  0(&A,&E),0(&B,&F)   UNPACK HEX DIGITS                    04150002
&A       SETA  &A-1                                                     04200002
         MVI   &A.(&E),X'EF'       CLEAR SIGN BYTE                      04250002
         LA    &E,9(&E)            INCREMENT ADDRESSES                  04300002
         LA    &F,4(&F)                                                 04350002
         BCT   &G,&GNAME.E         LOOP                                 04400002
         AIF   (&D EQ 0).CONTH     NO REMAINDER                         04450002
&A       SETA  &D*2+1                                                   04500002
&B       SETA  &D+1                                                     04550002
         UNPK  0(&A,&E),0(&B,&F)   UNPACK HEX DIGITS                    04600002
&A       SETA  &A-1                                                     04650002
         MVI   &A.(&E),X'40'       CLEAR SIGN BYTE                      04700002
.CONTH   ANOP                                                           04750002
&C       SETA  &C+&LN*2                                                 04800002
&G       SETA  &C+&D*2             LENGTH OF FIELD TO BE TRANSLATED     04850002
         LA    1,&C                RE-ESTABLISH BEGINING                04900002
         SR    &E,1                OF FIELD                             04950002
         L     1,&GNAME.B          SET ORIGIN OF TABLE                  05000002
         S     1,0(1)              BACK 240 BYTES                       05050002
         TR    0(&G,&E),0(1)       TRANSLATE FA-FF                      05100002
         AGO   .CONTC                                                   05150002
.MULTIB  ANOP                                                           05200002
&NAME    LA    2,&OUT                                                   05250002
         LA    1,&IN                                                    05300002
         LA    3,&C                SET COUNT                            05350002
&E       SETA  2                                                        05400002
&F       SETA  1                                                        05450002
&G       SETA  3                                                        05500002
         AGO   .MULTIA                                                  05550002
.REGLN   ANOP                                                           05600002
         AIF   (&REGSW EQ 0).CONTI                                      05650002
&E       SETA  &OUT(1)                                                  05700002
&F       SETA  &IN(1)                                                   05750002
         AGO   .CONTJ                                                   05800002
.CONTI   ANOP                                                           05850002
&E       SETA  2                                                        05900002
&F       SETA  3                                                        05950002
&NAME    LA    2,&OUT                                                   06000002
         LA    3,&IN                                                    06050002
         LR    1,&LN(1)                                                 06100002
         AGO   .CONTK                                                   06150002
.CONTJ   ANOP                                                           06200002
&NAME    LTR   1,&LN(1)            LOAD LN TO REG 1 AND TEST            06250002
         BZ    &GNAME.H            DO NOTHING IF ZERO                   06300002
.CONTK   LA    0,3                 SET UP MASK                          06350002
         NR    0,1                 AND SAVE 2 LOW ORDER BITS            06400002
         SRL   1,2                 DIVIDE BY 4                          06450002
         LTR   1,1                 LENGTH LESS THAN 4                   06500002
         BZ    &GNAME.F            IF YES--BRANCH                       06550002
&GNAME.E UNPK  0(9,&E),0(5,&F)     UNPACK HEX DIGITS                    06600002
         MVI   8(&E),X'EF'         CLEAR SIGN BYTE                      06650002
         LA    &E,9(&E)            INCREMENT REGS                       06700002
         LA    &F,4(&F)                                                 06750002
         BCT   1,&GNAME.E          LOOP                                 06800002
&GNAME.F LTR   0,0                                                      06850002
         BZ    &GNAME.G            BRANCH IF SAVED BITS ARE 0           06900002
         LR    1,0                 ADJUST REG 1                         06950002
         AR    1,0                 FOR EXECUTE INSTRUCTION              07000002
         SLL   1,4                                                      07050002
         OR    1,0                                                      07100002
         EX    1,&GNAME.C          EXECUTE UNPK                         07150002
         SRL   1,4                                                      07200002
         AR    &E,1                                                     07250002
         MVI   0(&E),X'40'         CLEAR SIGN BYTE                      07300002
&GNAME.G LR    1,&LN(1)                                                 07350002
         SRL   1,2                 DIVIDE BY 4                          07400002
         AR    &LN(1),&LN(1)       SET UP LENGTH FOR                    07450002
         AR    &LN(1),1            TRANSLATE INSTRUCTION                07500002
         SR    &E,&LN(1)           RE-ESTABLISH BEGINING OF FIELD       07550002
         AGO   .CONTB              SET REG 1 FOR TR                     07600002
.CONTG   BCTR  &LN(1),0            DECR LN 1 FOR EXECUTE INST           07650002
         EX    &LN(1),&GNAME.D     EXECUTE TR                           07700002
         B     &GNAME.H            BRANCH AROUND CONSTANTS              07750002
         AGO   .ENDA                                                    07800002
.ERROR1  MNOTE 12,'INCONSISTANT PARAMETERS'                             07850002
         MEXIT                                                          07900002
.ERROR2  MNOTE 12,'PARAMETER MISSING'                                   07950002
         MEXIT                                                          08000002
.ERROR3  MNOTE 12,'REG PARMS CANNOT BE 0, 1, OR 13 THROUGH 15'          08050002
         MEXIT                                                          08100002
.ERROR4  MNOTE 12,'INVALID TYPE ATTRIBUTE SPECIFIED IN PARAMETERS'      08150002
         MEXIT                                                          08200002
.ERROR5  MNOTE 12,'&LN--MULTIPLE PARAMETERS INVALID'                    08250002
         MEXIT                                                          08300002
.ERROR6  MNOTE 12,'&LN INVALID--MUST BE FROM 1-112'                     08350002
         MEXIT                                                          08400002
.ENDA    ANOP                                                           08450002
&GNAME.C UNPK  0(0,&E),0(0,&F)     UNPACK HEX DIGITS                    08500002
&GNAME.D TR    0(0,&E),0(1)        TRANSLATE FA-FF                      08550002
         AIF   (&HEXSW EQ 0).ENDC                                       08600002
.ENDD    ANOP                                                           08650002
&GNAME.B DC    A(&HEXWRD)                                               08700002
         AGO   .ENDB                                                    08750002
.ENDC    ANOP                                                           08800002
&GNAME.B DC    A(&HEXWRD)                                               08850002
&GNAME   DC    F'234'                                                   08900002
         DC    C'  '                                                    08950002
&GNAME.A DC    C'0123456789ABCDEF'                                      09000002
.ENDB    ANOP                                                           09050002
&GNAME.H DS    0H                                                       09100002
         MEND                                                           09150002
./  ADD  SSI=40600889,NAME=ICFWORK
         MACRO                                                          00300000
         ICFWORK &GENCODE=NO                                        PWF 00600000
         AIF   ('&GENCODE' NE 'YES').DSECT                          PWF 00900000
ICFWORKA CSECT                                                      PWF 01200000
         AGO   .COM                                                 PWF 01500000
.DSECT   ANOP                                                       PWF 01800000
ICFWORKA DSECT                                                      PWF 02100000
.COM     ANOP                                                       PWF 02400000
ICFADR1  DC    F'0'          POINTER TO FOOTPRINT TABLE                 02700000
ICFADR2  DC    F'0'          *VS2-2 - REAL ADDR.OF PCCA VECTOR TABLE    03000000
ICFADR3  DC    F'0'          *VS2-2 - REAL ADDRESS OF CSD               03300000
ICFADR4  DC    F'0'     *POINTER TO ICFBIE00 - (ICFTIE00 FOR MVT ONLY)  03600000
         SPACE 3                                                        03900000
ICFSEK00 DC    X'07',AL3(ICFCHR00),X'60',XL3'6' *SEEK CCW TRK 00    PWF 04200000
ICFSRC00 DC    X'31',AL3(ICFCHR00+2),X'60',XL3'5' *SRC FOR TRK 00   PWF 04500000
ICFTIC00 DC    X'08',AL3(ICFSRC00),X'60',XL3'1'  *TIC CCW TRK 00    PWF 04800000
ICFWRD00 DC    X'05',AL3(0),X'40',XL3'3000'   *WRITE DATA TRK 00    PWF 05100000
         SPACE                                                          05400000
ICFSEK01 DC    X'07',AL3(ICFCHR01),X'60',XL3'6' *SEEK CCW TRK 01    PWF 05700000
ICFSRC01 DC    X'31',AL3(ICFCHR01+2),X'60',XL3'5' *SRC FOR TRK 01   PWF 06000000
ICFTIC01 DC    X'08',AL3(ICFSRC01),X'60',XL3'1'  *TIC CCW TRK 01    PWF 06300000
ICFWRD01 DC    X'05',AL3(0),X'40',XL3'3000'   *WRITE DATA TRK 01    PWF 06600000
         SPACE                                                          06900000
ICFSEK02 DC    X'07',AL3(ICFCHR02),X'60',XL3'6' *SEEK CCW TRK 02    PWF 07200000
ICFSRC02 DC    X'31',AL3(ICFCHR02+2),X'60',XL3'5' *SRC FOR TRK 02   PWF 07500000
ICFTIC02 DC    X'08',AL3(ICFSRC02),X'60',XL3'1'  *TIC CCW TRK 02    PWF 07800000
ICFWRD02 DC    X'05',AL3(0),X'40',XL3'3000'   *WRITE DATA TRK 02    PWF 08100000
         SPACE                                                          08400000
ICFSEK03 DC    X'07',AL3(ICFCHR03),X'60',XL3'6' *SEEK CCW TRK 03    PWF 08700000
ICFSRC03 DC    X'31',AL3(ICFCHR03+2),X'60',XL3'5' *SRC FOR TRK 03   PWF 09000000
ICFTIC03 DC    X'08',AL3(ICFSRC03),X'60',XL3'1'  *TIC CCW TRK 03    PWF 09300000
ICFWRD03 DC    X'05',AL3(0),X'40',XL3'3000'   *WRITE DATA TRK 03    PWF 09600000
         SPACE                                                          09900000
ICFSEK04 DC    X'07',AL3(ICFCHR04),X'60',XL3'6' *SEEK CCW TRK 04    PWF 10200000
ICFSRC04 DC    X'31',AL3(ICFCHR04+2),X'60',XL3'5' *SRC FOR TRK 04   PWF 10500000
ICFTIC04 DC    X'08',AL3(ICFSRC04),X'60',XL3'1'  *TIC CCW TRK 04    PWF 10800000
ICFWRD04 DC    X'05',AL3(0),X'40',XL3'3000'   *WRITE DATA TRK 04    PWF 11100000
         SPACE                                                          11400000
ICFSEK05 DC    X'07',AL3(ICFCHR05),X'60',XL3'6' *SEEK CCW TRK 05    PWF 11700000
ICFSRC05 DC    X'31',AL3(ICFCHR05+2),X'60',XL3'5' *SRC FOR TRK 05   PWF 12000000
ICFTIC05 DC    X'08',AL3(ICFSRC05),X'60',XL3'1'  *TIC CCW TRK 05    PWF 12300000
ICFWRD05 DC    X'05',AL3(0),X'40',XL3'3000'   *WRITE DATA TRK 05    PWF 12600000
         SPACE                                                          12900000
ICFSEK06 DC    X'07',AL3(ICFCHR06),X'60',XL3'6' *SEEK CCW TRK 06    PWF 13200000
ICFSRC06 DC    X'31',AL3(ICFCHR06+2),X'60',XL3'5' *SRC FOR TRK 06   PWF 13500000
ICFTIC06 DC    X'08',AL3(ICFSRC06),X'60',XL3'1'  *TIC CCW TRK 06    PWF 13800000
ICFWRD06 DC    X'05',AL3(0),X'40',XL3'3000'   *WRITE DATA TRK 06    PWF 14100000
         SPACE                                                          14400000
ICFSEK07 DC    X'07',AL3(ICFCHR07),X'60',XL3'6' *SEEK CCW TRK 07    PWF 14700000
ICFSRC07 DC    X'31',AL3(ICFCHR07+2),X'60',XL3'5' *SRC FOR TRK 07   PWF 15000000
ICFTIC07 DC    X'08',AL3(ICFSRC07),X'60',XL3'1'  *TIC CCW TRK 07    PWF 15300000
ICFWRD07 DC    X'05',AL3(0),X'40',XL3'3000'   *WRITE DATA TRK 07    PWF 15600000
         SPACE                                                          15900000
ICFSEK08 DC    X'07',AL3(ICFCHR08),X'60',XL3'6' *SEEK CCW TRK 08    PWF 16200000
ICFSRC08 DC    X'31',AL3(ICFCHR08+2),X'60',XL3'5' *SRC FOR TRK 08   PWF 16500000
ICFTIC08 DC    X'08',AL3(ICFSRC08),X'60',XL3'1'  *TIC CCW TRK 08    PWF 16800000
ICFWRD08 DC    X'05',AL3(0),X'40',XL3'3000'   *WRITE DATA TRK 08    PWF 17100000
         SPACE                                                          17400000
ICFSEK09 DC    X'07',AL3(ICFCHR09),X'60',XL3'6' *SEEK CCW TRK 09    PWF 17700000
ICFSRC09 DC    X'31',AL3(ICFCHR09+2),X'60',XL3'5' *SRC FOR TRK 09   PWF 18000000
ICFTIC09 DC    X'08',AL3(ICFSRC09),X'60',XL3'1'  *TIC CCW TRK 09    PWF 18300000
ICFWRD09 DC    X'05',AL3(0),X'40',XL3'3000'   *WRITE DATA TRK 09    PWF 18600000
         SPACE                                                          18900000
ICFSEK10 DC    X'07',AL3(ICFCHR10),X'60',XL3'6' *SEEK CCW TRK 10    PWF 19200000
ICFSRC10 DC    X'31',AL3(ICFCHR10+2),X'60',XL3'5' *SRC FOR TRK 10   PWF 19500000
ICFTIC10 DC    X'08',AL3(ICFSRC10),X'60',XL3'1'  *TIC CCW TRK 10    PWF 19800000
ICFWRD10 DC    X'05',AL3(0),X'40',XL3'3000'   *WRITE DATA TRK 10    PWF 20100000
         SPACE                                                          20400000
ICFSEK11 DC    X'07',AL3(ICFCHR11),X'60',XL3'6' *SEEK CCW TRK 11    PWF 20700000
ICFSRC11 DC    X'31',AL3(ICFCHR11+2),X'60',XL3'5' *SRC FOR TRK 11   PWF 21000000
ICFTIC11 DC    X'08',AL3(ICFSRC11),X'60',XL3'1'  *TIC CCW TRK 11    PWF 21300000
ICFWRD11 DC    X'05',AL3(0),X'40',XL3'3000'   *WRITE DATA TRK 11    PWF 21600000
         SPACE                                                          21900000
ICFSEK12 DC    X'07',AL3(ICFCHR12),X'60',XL3'6' *SEEK CCW TRK 12    PWF 22200000
ICFSRC12 DC    X'31',AL3(ICFCHR12+2),X'60',XL3'5' *SRC FOR TRK 12   PWF 22500000
ICFTIC12 DC    X'08',AL3(ICFSRC12),X'60',XL3'1'  *TIC CCW TRK 12    PWF 22800000
ICFWRD12 DC    X'05',AL3(0),X'40',XL3'3000'   *WRITE DATA TRK 12    PWF 23100000
         SPACE                                                          23400000
ICFSEK13 DC    X'07',AL3(ICFCHR13),X'60',XL3'6' *SEEK CCW TRK 13    PWF 23700000
ICFSRC13 DC    X'31',AL3(ICFCHR13+2),X'60',XL3'5' *SRC FOR TRK 13   PWF 24000000
ICFTIC13 DC    X'08',AL3(ICFSRC13),X'60',XL3'1'  *TIC CCW TRK 13    PWF 24300000
ICFWRD13 DC    X'05',AL3(0),X'40',XL3'3000'   *WRITE DATA TRK 13    PWF 24600000
         SPACE                                                          24900000
ICFSEK14 DC    X'07',AL3(ICFCHR14),X'60',XL3'6' *SEEK CCW TRK 14    PWF 25200000
ICFSRC14 DC    X'31',AL3(ICFCHR14+2),X'60',XL3'5' *SRC FOR TRK 14   PWF 25500000
ICFTIC14 DC    X'08',AL3(ICFSRC14),X'60',XL3'1'  *TIC CCW TRK 14    PWF 25800000
ICFWRD14 DC    X'05',AL3(0),X'40',XL3'3000'   *WRITE DATA TRK 14    PWF 26100000
         SPACE                                                          26400000
ICFSEK15 DC    X'07',AL3(ICFCHR15),X'60',XL3'6' *SEEK CCW TRK 15    PWF 26700000
ICFSRC15 DC    X'31',AL3(ICFCHR15+2),X'60',XL3'5' *SRC FOR TRK 15   PWF 27000000
ICFTIC15 DC    X'08',AL3(ICFSRC15),X'60',XL3'1'  *TIC CCW TRK 15    PWF 27300000
ICFWRD15 DC    X'05',AL3(0),X'40',XL3'3000'   *WRITE DATA TRK 15    PWF 27600000
         SPACE                                                          27900000
ICFSEK16 DC    X'07',AL3(ICFCHR16),X'60',XL3'6' *SEEK CCW TRK 16    PWF 28200000
ICFSRC16 DC    X'31',AL3(ICFCHR16+2),X'60',XL3'5' *SRC FOR TRK 16   PWF 28500000
ICFTIC16 DC    X'08',AL3(ICFSRC16),X'60',XL3'1'  *TIC CCW TRK 16    PWF 28800000
ICFWRD16 DC    X'05',AL3(0),X'40',XL3'3000'   *WRITE DATA TRK 16    PWF 29100000
         SPACE                                                          29400000
ICFSEK17 DC    X'07',AL3(ICFCHR17),X'60',XL3'6' *SEEK CCW TRK 17    PWF 29700000
ICFSRC17 DC    X'31',AL3(ICFCHR17+2),X'60',XL3'5' *SRC FOR TRK 17   PWF 30000000
ICFTIC17 DC    X'08',AL3(ICFSRC17),X'60',XL3'1'  *TIC CCW TRK 17    PWF 30300000
ICFWRD17 DC    X'05',AL3(0),X'00',XL3'3000'   *WRITE DATA TRK 17    PWF 30600000
         SPACE                                                          30900000
ICFSEK18 DC    X'07',AL3(ICFCHR18),X'60',XL3'6' *SEEK CCW TRK 18    PWF 31200000
ICFSRC18 DC    X'31',AL3(ICFCHR18+2),X'60',XL3'5' *SRC FOR TRK 18   PWF 31500000
ICFTIC18 DC    X'08',AL3(ICFSRC18),X'60',XL3'1'  *TIC CCW TRK 18    PWF 31800000
ICFWRD18 DC    X'05',AL3(0),X'00',XL3'3000'   *WRITE DATA TRK 18    PWF 32100000
         SPACE                                                          32400000
ICFSEK19 DC    X'07',AL3(ICFCHR19),X'60',XL3'6' *SEEK CCW TRK 19    PWF 32700000
ICFSRC19 DC    X'31',AL3(ICFCHR19+2),X'60',XL3'5' *SRC FOR TRK 19   PWF 33000000
ICFTIC19 DC    X'08',AL3(ICFSRC19),X'60',XL3'1'  *TIC CCW TRK 19    PWF 33300000
ICFWRD19 DC    X'05',AL3(0),X'00',XL3'3000'   *WRITE DATA TRK 19    PWF 33600000
         SPACE 3                                                        33900000
ICFWADEV DC    XL4'450'      *DEVICE ADDRESS OF PRIMARY DATA SET    PWF 34200000
ICFWAUCB DC    XL4'0'        *UCB ADDRESS OF PRIMARY DATA SET       PWF 34500000
ICFWACHR DC    X'00000000000001'  *START OF PRIMARY EXTENT          PWF 34800000
ICFFLAGA DC    X'00'         *FLAG A FIELD                          PWF 35100000
         SPACE                                                          35400000
ICFINOP  EQU   X'80'         *PWF FUNCTION INOPERATIVE              PWF 35700000
ICFCMTDM EQU   X'40'         *COMMIT TO DUMP                        PWF 36000000
ICFUSRC4 EQU   X'20'         *USER SET RETURN CODE OF 4                 36300000
         SPACE 3                                                        36600000
ICFWBDEV DC    XL4'457'      *DEVICE ADDRESS OF ALTRNT  DATA SET    PWF 36900000
ICFWBUCB DC    XL4'0'        *UCB ADDRESS OF ALTRNT  DATA SET       PWF 37200000
ICFWBCHR DC    X'00000000000001'  *START OF ALTRNT  EXTENT          PWF 37500000
ICFFLAGB DC    X'00'         *FLAG B FIELD                          PWF 37800000
         SPACE                                                          38100000
ICFMVT   EQU   X'10'         *SYSTEM TYPE - MVT                         38400000
ICFSVM   EQU   X'12'         *SYSTEM TYPE - VS2 R1                      38700000
ICFMVM   EQU   X'13'         *SYSTEM TYPE - VS2 R2                      39000000
ICFVS1   EQU   X'22'         *SYSTEM TYPE - VS1 R3                      39300000
         SPACE 3                                                        39600000
ICFTRSIZ DC    F'12288'      *NUMBER OF BYTES PER TRACK             PWF 39900000
ICFTPC   DC    F'19'         *NUMBER OF TRACKS PER CYLINDER         PWF 40200000
         SPACE 3                                                        40500000
ICFCHR00 DC    X'0000000000000100'     *SEEK/SRCH ADDR.FOR TRK 00   PWF 40800000
ICFCHR01 DC    X'0000000000010100'     *SEEK/SRCH ADDR.FOR TRK 01   PWF 41100000
ICFCHR02 DC    X'0000000000020100'     *SEEK/SRCH ADDR.FOR TRK 02   PWF 41400000
ICFCHR03 DC    X'0000000000030100'     *SEEK/SRCH ADDR.FOR TRK 03   PWF 41700000
ICFCHR04 DC    X'0000000000040100'     *SEEK/SRCH ADDR.FOR TRK 04   PWF 42000000
ICFCHR05 DC    X'0000000000050100'     *SEEK/SRCH ADDR.FOR TRK 05   PWF 42300000
ICFCHR06 DC    X'0000000000060100'     *SEEK/SRCH ADDR.FOR TRK 06   PWF 42600000
ICFCHR07 DC    X'0000000000070100'     *SEEK/SRCH ADDR.FOR TRK 07   PWF 42900000
ICFCHR08 DC    X'0000000000080100'     *SEEK/SRCH ADDR.FOR TRK 08   PWF 43200000
ICFCHR09 DC    X'0000000000090100'     *SEEK/SRCH ADDR.FOR TRK 09   PWF 43500000
ICFCHR10 DC    X'00000000000A0100'     *SEEK/SRCH ADDR.FOR TRK 10   PWF 43800000
ICFCHR11 DC    X'00000000000B0100'     *SEEK/SRCH ADDR.FOR TRK 11   PWF 44100000
ICFCHR12 DC    X'00000000000C0100'     *SEEK/SRCH ADDR.FOR TRK 12   PWF 44400000
ICFCHR13 DC    X'00000000000D0100'     *SEEK/SRCH ADDR.FOR TRK 13   PWF 44700000
ICFCHR14 DC    X'00000000000E0100'     *SEEK/SRCH ADDR.FOR TRK 14   PWF 45000000
ICFCHR15 DC    X'00000000000F0100'     *SEEK/SRCH ADDR.FOR TRK 15   PWF 45300000
ICFCHR16 DC    X'0000000000100100'     *SEEK/SRCH ADDR.FOR TRK 16   PWF 45600000
ICFCHR17 DC    X'0000000000110100'     *SEEK/SRCH ADDR.FOR TRK 17   PWF 45900000
ICFCHR18 DC    X'0000000000120100'     *SEEK/SRCH ADDR.FOR TRK 18   PWF 46200000
ICFCHR19 DC    X'0000000000130100'     *SEEK/SRCH ADDR.FOR TRK 19   PWF 46500000
         SPACE 3                                                        46800000
ICFSTSIZ DC    F'2097152'    *STORAGE SIZE                          PWF 47100000
ICFTME00 DC    F'2000'       *ORIGINAL TIME VALUE (IN MSEC)         PWF 47400000
ICFTME01 DC    XL8'200000000'     *ORIGINAL TIME IN TOD UNITS       PWF 47700000
ICFTOD00 DC    XL8'0'        *TIME AT ENTRY TO MCH APPENDAGE        PWF 48000000
ICFTOD01 DC    XL8'0'        *TIME AT INNER WARNING SIGNALS         PWF 48300000
ICFTOD99 DC    XL8'0'        *TIME TO COMMIT TO DUMP                PWF 48600000
ICFLRDAT DC    F'0'          *DATE OF DUMP FOR LOGREC                   48900000
ICFLRTIM DC    F'0'          *TIME OF DUMP FOR LOGREC                   49200000
ICFLRCPU DC    D'0'          *CPU ID FOR LOGREC                         49500000
ICFLRCHA DC    D'0'          *CHANNEL ASSIGNMENT FOR LOGREC             49800000
ICFRSVD1 DC    2D'0'         *RESERVED                                  50100000
ICFPXREG DC    F'0'          *PREFIX REGISTER CONTENTS AT DUMP TIME     50400000
ICFTRMSA DC    F'0'          *TRACE FLAGS FOR MSI APPENDAGE             50700000
ICFTRMCA DC    F'0'          *TRACE FLAGS FOR MCH APPENDAGE             51000000
ICFTRDMP DC    F'0'          *TRACE FLAGS FOR DUMP                      51300000
ICFIOMAP DC    9D'0'         *WORK AREA FOR IOSGEN                  PWF 51600000
         SPACE 3                                                        51900000
ICFCNTRK DS    0CL512        *BUFFER FOR CONTROL RECORD             PWF 52200000
ICFCTID  DC    CL4'CNTL'     *CONTROL TRACK IDENTIFIER              PWF 52500000
ICFCTCF  DC    128X'12'      *CYLINDER FLAGS FOR 128 CYLINDERS      PWF 52800000
ICFCTFLA DC    X'00'         *CONTROL TRACK FLAG A                  PWF 53100000
         SPACE                                                          53400000
ICFCTEMP EQU   X'00'         *DATA SET IS EMPTY                     PWF 53700000
ICFCTFUL EQU   X'80'         *DATA SET CONTAINS VALID DUMP          PWF 54000000
ICFCTINV EQU   X'08'         *DATA SET CONTAINS INVALID DUMP        PWF 54300000
ICFCTFBT EQU   X'84'         *DATA SET CONTAINS VALID DUMP BUT ONE  PWF 54600000
*                            *OR MORE TRACKS GAVE I/O ERRORS -      PWF 54900000
*                            *ALTERNATE TRACK(S) ARE IN USE         PWF 55200000
         SPACE 3                                                        55500000
ICFCTTS  DC    F'12288'      *NO OF BYTES PER TRACK                 PWF 55800000
ICFCTAWA DC    F'0'          *ADDRESS OF PWF WORK AREA              PWF 56100000
         SPACE                                                          56400000
ICFCTB11 DC    F'0'          *START OF STRG BLK ADDRESS             PWF 56700000
ICFCTB12 DC    X'00010000'   *TRK ADDR AT WHICH STRG BLK BEGINS     PWF 57000000
ICFCTB13 DC    F'2097152'    *END OF STRG BLK ADDRESS               PWF 57300000
ICFCTB14 DC    X'000A0008'   *TRK ADDR AT WHICH STRG BLK ENDS       PWF 57600000
         SPACE                                                          57900000
ICFCTB21 DC    X'FFFFFFFF'   *START OF STRG BLK ADDRESS             PWF 58200000
ICFCTB22 DC    X'FFFFFFFF'   *TRK ADDR AT WHICH STRG BLK BEGINS     PWF 58500000
ICFCTB23 DC    X'FFFFFFFF'   *END OF STRG BLK ADDRESS               PWF 58800000
ICFCTB24 DC    X'FFFFFFFF'   *TRK ADDR AT WHICH STRG BLK ENDS       PWF 59100000
         SPACE                                                          59400000
ICFCTB31 DC    X'FFFFFFFF'   *START OF STRG BLK ADDRESS             PWF 59700000
ICFCTB32 DC    X'FFFFFFFF'   *TRK ADDR AT WHICH STRG BLK BEGINS     PWF 60000000
ICFCTB33 DC    X'FFFFFFFF'   *END OF STRG BLK ADDRESS               PWF 60300000
ICFCTB34 DC    X'FFFFFFFF'   *TRK ADDR AT WHICH STRG BLK ENDS       PWF 60600000
         SPACE                                                          60900000
ICFCTB41 DC    X'FFFFFFFF'   *START OF STRG BLK ADDRESS             PWF 61200000
ICFCTB42 DC    X'FFFFFFFF'   *TRK ADDR AT WHICH STRG BLK BEGINS     PWF 61500000
ICFCTB43 DC    X'FFFFFFFF'   *END OF STRG BLK ADDRESS               PWF 61800000
ICFCTB44 DC    X'FFFFFFFF'   *TRK ADDR AT WHICH STRG BLK ENDS       PWF 62100000
         SPACE                                                          62400000
ICFCTB51 DC    X'FFFFFFFF'   *START OF STRG BLK ADDRESS             PWF 62700000
ICFCTB52 DC    X'FFFFFFFF'   *TRK ADDR AT WHICH STRG BLK BEGINS     PWF 63000000
ICFCTB53 DC    X'FFFFFFFF'   *END OF STRG BLK ADDRESS               PWF 63300000
ICFCTB54 DC    X'FFFFFFFF'   *TRK ADDR AT WHICH STRG BLK ENDS       PWF 63600000
         SPACE                                                          63900000
ICFCTB61 DC    X'FFFFFFFF'   *START OF STRG BLK ADDRESS             PWF 64200000
ICFCTB62 DC    X'FFFFFFFF'   *TRK ADDR AT WHICH STRG BLK BEGINS     PWF 64500000
ICFCTB63 DC    X'FFFFFFFF'   *END OF STRG BLK ADDRESS               PWF 64800000
ICFCTB64 DC    X'FFFFFFFF'   *TRK ADDR AT WHICH STRG BLK ENDS       PWF 65100000
         SPACE                                                          65400000
ICFCTB71 DC    X'FFFFFFFF'   *START OF STRG BLK ADDRESS             PWF 65700000
ICFCTB72 DC    X'FFFFFFFF'   *TRK ADDR AT WHICH STRG BLK BEGINS     PWF 66000000
ICFCTB73 DC    X'FFFFFFFF'   *END OF STRG BLK ADDRESS               PWF 66300000
ICFCTB74 DC    X'FFFFFFFF'   *TRK ADDR AT WHICH STRG BLK ENDS       PWF 66600000
         SPACE                                                          66900000
ICFCTB81 DC    X'FFFFFFFF'   *START OF STRG BLK ADDRESS             PWF 67200000
ICFCTB82 DC    X'FFFFFFFF'   *TRK ADDR AT WHICH STRG BLK BEGINS     PWF 67500000
ICFCTB83 DC    X'FFFFFFFF'   *END OF STRG BLK ADDRESS               PWF 67800000
ICFCTB84 DC    X'FFFFFFFF'   *TRK ADDR AT WHICH STRG BLK ENDS       PWF 68100000
         SPACE 3                                                        68400000
ICFCTST  DC    XL8'0'        *TOD AT ENTRY TO MCH APPENDAGE         PWF 68700000
ICFCTED  DC    XL8'0'        *TOD AT END OF DUMP                    PWF 69000000
ICFCTTPC DC    F'0'          *NO. TRKS PER CYLINDER                     69300000
ICFCTRDA DC    F'0'          *DEVICE ADDRESS FOR RESTORE                69600000
ICFCTPXR DC    F'0'          *PREFIX REGISTER CONTENTS AT DUMP TIME     69900000
ICFCTSTS DC    F'0'          *HIGHEST STORAGE ADDRESS FOR LOGREC        70200000
ICFCTDAT DC    F'0'          *DATE OF DUMP FOR LOGREC                   70500000
ICFCTTIM DC    F'0'          *TIME OF DUMP FOR LOGREC                   70800000
ICFCTCPU DC    D'0'          *CPU ID FOR LOGREC                         71100000
ICFCTCHA DC    D'0'          *CHANNEL ASSIGNMENT FOR LOGREC             71400000
ICFCTRSV DC    XL184'0'      *RESERVED                                  71700000
ICFCTEND EQU   *             *END OF CONTROL TRACK BUFFER               72000000
         SPACE 3                                                        72300000
ICFRSVD2 DC    2D'0'         *RESERVED                              PWF 72600000
ICFSAVE  DC    16F'0'        *REGISTER SAVE AREA FOR USER EXIT      PWF 72900000
ICFSNMCP DC    D'0'          * SA FOR HIS MCNPSW                    PWF 73200000
ICFMCOPS DC    D'0'          * SA FOR HIS MCOPSW                    PWF 73500000
ICFDMPWA DC    20D'0'        *WORK AREA FOR DUMP ROUTINE                73800000
ICFRSVD3 DC    32D'0'        *RESERVED                                  74100000
ICFWAEND EQU   *             *END OF PWF COMMUNICATION AREA             74400000
         MEND                                                           74700000
./  ADD  SSI=32820429,NAME=IEACIWA
*        %GOTO CIWAPLS;                                              /* 00050002
         MACRO                                                          00100002
         IEACIWA &DSECT=YES                                             00150002
         AGO  .CIWARND                                                  00200002
*********************************************************************** 00250002
*                                                                     * 00300002
* STATUS -                                                            * 00350002
*    CHANGE LEVEL 0 (OS/VS2 REL 2 VERSION)                            * 00400002
* FUNCTION -                                                          * 00450002
*    MAPPING MACRO FOR COMMON INTERNAL WORK AREA                      * 00500002
* ENTRY POINTS -                                                      * 00550002
*     IEACIWA MACRO CALL                                              * 00600002
* INPUT -                                                             * 00650002
*    SEE IEACIWA MACRO DEFINITION                                     * 00700002
* OUTPUT -                                                            * 00750002
*    COMMON INTERNAL WORK AREA MAPPING MACRO                          * 00800002
* EXTERNAL REFERENCES -                                               * 00850002
*    N/A                                                              * 00900002
* EXITS, NORMAL -                                                     * 00950002
*    N/A                                                              * 01000002
* EXITS, ERROR -                                                      * 01050002
*    N/A                                                              * 01100002
* TABLES/WORK AREAS -                                                 * 01150002
*    N/A                                                              * 01200002
* ATTRIBUTES -                                                        * 01250002
*    BILINGUAL MACRO                                                  * 01300002
* CHARACTER CODE DEPENDENCY -                                         * 01350002
*    NONE                                                             * 01400002
* NOTES -                                                             * 01450002
*    NONE                                                             * 01500002
*                                                                     * 01550002
*********************************************************************** 01600002
.CIWARND ANOP                                                           01650002
         IEZBITS                                                        01700002
*********************************************************************** 01750002
*                  CIWA MAPPING     9/17/73                           * 01760002
*********************************************************************** 01800002
         AIF   ('&DSECT' EQ 'NO').CIWA001                               01850002
CIWA     DSECT , CIWAPTR                                                01900002
         AGO   .CIWA002                                                 01950002
.CIWA001 ANOP                                                           02000002
CIWA     DS    0F                                                       02050002
.CIWA002 ANOP                                                           02100002
CIWFLG1  DS    BL1 -                FIRST INTERNAL FLAG FIELD           02110002
CIWSVC2  EQU   BIT0 -               PSI ENTERED AT IGC112               02120002
CIWSVC3  EQU   BIT1 -               PSI ENTERED AT IGC113               02130002
CIWBREX  EQU   BIT3 -               PSI ENTERED VIA BRANCH ENTRY        02140002
*                                   FROM NON-RSM ROUTINE AT             02140602
*                                   IEAVPSIB/IEAVPSIX/IEAVPSIF.         02141202
CIWBRIN  EQU   BIT4 -               PSI ENTERED AT IEAVPSII             02142002
CIWOUTKR EQU   BIT5 -               INTERNAL KEEPREAL FLAG (PGOUT)      02144002
CIWFIXC  EQU   BIT6 -               PGFIX IS CALLING PGFREE             02146002
CIWNOPST EQU   BIT7 -               DO NOT POST REQUESTOR ECB FLAG.     02146402
*                                   SET BY PGFIX/PGLOAD MODULE          02146802
CIWFLG2  DS    BL1 -                RESERVED FLAG FIELD                 02148002
CIWOPFL1 DS    BL1 -                FIRST BYTE OF INPUT VSL ENTRY       02148402
CIWCONT  EQU   BIT0 -               CONTINUATION/LIST FORM FLAG         02148802
CIWFIX   EQU   BIT1 -               PGFIX FLAG                          02149202
CIWFREE  EQU   BIT2 -               PGFREE FLAG                         02149602
CIWLOAD  EQU   BIT3 -               PGLOAD FLAG                         02149702
CIWRLS   EQU   BIT4 -               PGRLSE FLAG                         02149802
CIWLONG  EQU   BIT6 -               LONG-FIX OPTION FLAG                02149902
CIWOPFL2 DS    BL1 -                FIFTH BYTE OF INPUT VSL ENTRY       02166602
CIWLAST  EQU   BIT0 -               LAST ENTRY FLAG                     02176602
CIWNULL  EQU   BIT1 -               NULL ENTRY FLAG                     02178602
CIWRAO   EQU   BIT2 -               REAL ADDRESS OPTION FLAG            02180602
CIWERR   EQU   BIT3 -               ERROR FLAG                          02182602
CIWPGOUT EQU   BIT5 -               PGOUT FLAG                          02183002
CIWKEPRL EQU   BIT6 -               KEEPREAL OPTION FLAG                02183102
CIWEXTRS EQU   BIT7 -               RESERVED FOR EXTENDABILITY          02185102
CIWRETC  DS    FL1 -                RETURN CODE FIELD USED BY           02188202
*                                   SERVICE MODULES TO COMMUNICATE      02190202
*                                   RETURN CODES BACK TO PSI            02192202
CIWSAVRC DS    FL1 -                RETURN CODE SAVE AREA USED BY       02194202
*                                   PAGE SERVICES MODULES WHEN          02196202
*                                   CALLING ANOTHER PAGE SERVICES       02198202
*                                   MODULE                              02200202
CIWKEY   DS    FL1 -                THE CALLER'S PROTECTION KEY         02202202
         DS    FL1 -                RESERVED                            02204202
CIWINVSL DS    A -                  VSA OF THE REQUESTOR SUPPLIED       02206202
*                                   VSL. ZERO IF REGISTER FORM ENTRY    02208202
*                                   USED.                               02218202
CIWCUVSL DS    A -                  VSA OF THE CURRENT VSL ENTRY        02220202
*                                   BEING PROCESSED. ZERO FOR           02220602
*                                   REGISTER ENTRY REQUEST.             02221002
CIWVSL   DS    0D -                 INTERNAL VSL ENTRY WHERE CURRENT    02221402
*                                   VSL ENTRY IS PLACED WHILE BEING     02221802
*                                   PROCESSED.                          02221902
CIWSTRT  DS    0F -                 FULLWORD REFERENCE TO FIRST WORD    02222002
*                                   OF VSL                              02222102
CIWIFLG1 DS    BL1 -                FIRST BYTE OF VSL ENTRY             02226702
CIWICONT EQU   BIT0 -               CONTINUATION/LIST FORM FLAG         02228702
CIWIFIX  EQU   BIT1 -               PGFIX FLAG                          02230702
CIWIFREE EQU   BIT2 -               PGFREE FLAG                         02231102
CIWILOAD EQU   BIT3 -               PGLOAD FLAG                         02231202
CIWIRLS  EQU   BIT4 -               PGRLSE FLAG                         02231302
CIWILONG EQU   BIT6 -               LONG-FIX OPTION FLAG                02231402
CIWSTRTA DS    AL3 -                START ADDR OF VIRTUAL SUBAREA       02236002
CIWEND1  DS    0F -                 FULLWORD REFERENCE TO LAST WORD     02238002
*                                   OF VSL                              02240002
CIWIFLG2 DS    BL1 -                FIFTH BYTE OF VSL ENTRY             02240402
CIWILAST EQU   BIT0 -               LAST ENTRY FLAG                     02240502
CIWINULL EQU   BIT1 -               NULL ENTRY FLAG                     02240602
CIWIRAO  EQU   BIT2 -               REAL ADDRESS OPTION FLAG            02240702
CIWIERR  EQU   BIT3 -               ERROR FLAG                          02252502
CIWIOUT  EQU   BIT5 -               PGOUT FLAG                          02262502
CIWIKPRL EQU   BIT6 -               KEEPREAL OPTION FLAG                02264502
CIWEND1A DS    AL3 -                END ADDR+1 OF VIRTUAL SUBAREA       02268402
CIWTCB   DS    A -                  ADDRESS OF REQUESTOR TCB            02270402
CIWECB   DS    A -                  ADDRESS OF REQUESTOR SUPPLIED ECB   02272402
CIWCURPG DS    A -                  ADDRESS OF CURRENT VIRTUAL PAGE     02276302
*                                   BEING PROCESSED                     02278302
CIWLSTPG DS    A -                  ADDRESS OF LAST VIRTUAL PAGE TO     02280302
*                                   BE PROCESSED                        02284202
CIWRETRN DS    A -                  SAVE AREA FOR RETURN ADDR TO PSI.   02286202
*                                   USED BY SERVICE MODULES WHEN        02288202
*                                   CALLED BY PSI                       02291802
CIWWRK1  DS    F -                  FIRST WORK AREA                     02293802
CIWWRK2  DS    F -                  SECOND WORK AREA                    02294202
CIWWRK3  DS    F -                  THIRD WORK AREA                     02294602
CIWWRK4  DS    F -                  FOURTH WORK AREA                    02295002
CIWWRK5  DS    F -                  FIFTH WORK AREA                     02295402
CIWALEN  EQU   *-CIWA -             LENGTH OF CIWA                      02295602
         MEND  , */                                                     02299202
*%CIWAPLS :  ;                                                          02302802
* /*******************************************************************/ 02306402
* /*               CIWA MAPPING     9/17/73                          */ 02310002
* /*******************************************************************/ 02350002
*        %IF CIWA9999 ¬= ','        /* IF THIS IS LAST BLOCK         */ 02400002
*          %THEN %CIWA9999 = ';';   /* THEN CLOSE DCL STATEMENT      */ 02450002
*        %IF CIWALEVL ¬= ''         /* IF THIS IS CONCATENATED       */ 02500002
*          %THEN %GOTO CIWAPLS1;    /* THEN SKIP DCL                 */ 02550002
*DCL 1 CIWA BASED (CIWAPTR)         /* DECLARE CIWA LEVEL 1          */ 02600002
*        %GO TO CIWAPLS2;           /* AND SKIP LEVEL TWO DCL        */ 02650002
*%CIWAPLS1: CIWADUM=CIWALEVL ||' CIWA'; /* SET LEVEL FOR MINOR       */ 02700002
*    CIWADUM                        /* MINOR STRUCTURE NAME PARM     */ 02750002
*%CIWAPLS2:;                                                            02800002
*        BDY(WORD),                                                     02850002
*    3 CIWFLG1  BIT(8),             /* FIRST INTERNAL FLAG FIELD     */ 02860002
*        5 CIWSVC2  BIT(1),         /* PSI ENTERED AT IGC112         */ 02870002
*        5 CIWSVC3  BIT(1),         /* PSI ENTERED AT IGC113         */ 02890002
*        5 *        BIT(1),         /* RESERVED                      */ 02892002
*        5 CIWBREX  BIT(1),         /* PSI ENTERED VIA BRANCH ENTRY     02894002
*                                      FROM NON-RSM ROUTINE AT          02894602
*                                      IEAVPSIB/IEAVPSIX/IEAVPSIF.   */ 02895202
*        5 CIWBRIN  BIT(1),         /* PSI ENTERED AT IEAVPSII       */ 02896002
*        5 CIWOUTKR BIT(1),         /* INTERNAL KEEPREAL FLAG (PGOUT)*/ 02898002
*        5 CIWFIXC  BIT(1),         /* PGFIX IS CALLING PGFREE       */ 02898402
*        5 CIWNOPST BIT(1),         /* DO NOT POST REQUESTOR ECB        02898802
*                                      FLAG. SET BY PGFIX/PGLOAD MOD */ 02898902
*    3 CIWFLG2  BIT(8),             /* RESERVED FLAG FIELD           */ 02899202
*    3 CIWOPFL1 BIT(8),             /* FIRST BYTE OF INPUT VSL ENTRY */ 02899602
*        5 CIWCONT  BIT(1),         /* CONTINUATION FLAG             */ 02899702
*        5 CIWFIX   BIT(1),         /* PGFIX FLAG                    */ 02899802
*        5 CIWFREE  BIT(1),         /* PGFREE FLAG                   */ 02899902
*        5 CIWLOAD  BIT(1),         /* PGLOAD FLAG                   */ 02949902
*        5 CIWRLS   BIT(1),         /* PGRLSE FLAG                   */ 02959902
*        5 *        BIT(1),         /* RESERVED FOR VS1              */ 02969902
*        5 CIWLONG  BIT(1),         /* LONG-FIX OPTION FLAG          */ 02979902
*        5 *        BIT(1),         /* RESERVED FOR VS1              */ 02989902
*    3 CIWOPFL2 BIT(8),             /* FIFTH BYTE OF INPUT VSL ENTRY */ 02991902
*        5 CIWLAST  BIT(1),         /* LAST ENTRY FLAG               */ 02993902
*        5 CIWNULL  BIT(1),         /* NULL ENTRY FLAG               */ 02995902
*        5 CIWRAO   BIT(1),         /* REAL ADDRESS OPTION FLAG      */ 02997902
*        5 CIWERR   BIT(1),         /* ERROR FLAG                    */ 02998302
*        5 *        BIT(1),         /* RESERVED                      */ 02998702
*        5 CIWPGOUT BIT(1),         /* PGOUT FLAG                    */ 02999102
*        5 CIWKEPRL BIT(1),         /* KEEPREAL OPTION FLAG          */ 02999502
*        5 CIWEXTRS BIT(1),         /* RESERVED FOR EXTENDABILITY    */ 02999602
*    3 CIWRETC  FIXED(8),           /* RETURN CODE FIELD USED BY        02999702
*                                      SERVICE MODULES TO COMMUNICATE   02999802
*                                      RETURN CODES BACK TO PSI      */ 03049802
*    3 CIWSAVRC FIXED(8),           /* RETURN CODE SAVE AREA USED BY    03059802
*                                      PAGE SERVICES MODULES WHEN       03069802
*                                      CALLING ANOTHER PAGE SERVICES    03079802
*                                      MODULE                        */ 03089802
*    3 CIWKEY   FIXED(8),           /* THE CALLER'S PROTECTION KEY   */ 03091802
*    3 *        FIXED(8),           /* RESERVED                      */ 03093802
*    3 CIWINVSL PTR(31),            /* VSA OF THE REQUESTOR SUPPLIED    03095802
*                                      VSL. ZERO IF REGISTER FORM       03097802
*                                      ENTRY IS USED.                */ 03098202
*    3 CIWCUVSL PTR(31),            /* VSA OF THE CURRENT VSL ENTRY     03098602
*                                      BEING PROCESSED. ZERO FOR        03099002
*                                      REGISTER ENTRY REQUESTS.      */ 03099402
*    3 CIWVSL BDY(WORD)  CHAR(8),   /* INTERNAL VSL ENTRY WHERE         03099502
*                                      CURRENT VSL ENTRY IS PLACED      03099602
*                                      WHILE BEING PROCESSED.        */ 03099702
*        5 CIWSTRT BDY(WORD),       /* FULLWORD REFERNCE TO FIRST       03149702
*                                      WORD OF VSL                   */ 03159702
*          7 CIWIFLG1 BIT(8),       /* FIRST BYTE OF INPUT VSL ENTRY */ 03169702
*             9 CIWICONT  BIT(1),   /* CONTINUATION FLAG             */ 03179702
*             9 CIWIFIX   BIT(1),   /* PGFIX FLAG                    */ 03189702
*             9 CIWIFREE  BIT(1),   /* PGFREE FLAG                   */ 03191702
*             9 CIWILOAD  BIT(1),   /* PGLOAD FLAG                   */ 03193702
*             9 CIWIRLS   BIT(1),   /* PGRLSE FLAG                   */ 03195702
*             9 *         BIT(1),   /* RESERVED FOR VS1              */ 03197702
*             9 CIWILONG  BIT(1),   /* LONG-FIX OPTION FLAG          */ 03198102
*             9 *         BIT(1),   /* RESERVED FOR VS1              */ 03198502
*          7 CIWSTRTA PTR(24),      /* START ADDR OF VIRTUAL SUBAREA */ 03198602
*        5 CIWEND1 BDY(WORD),       /* FULLWORD REFERENCE TO LAST       03198702
*                                       WORD OF VSL                  */ 03198802
*          7 CIWIFLG2 BIT(8),       /* FIFTH BYTE OF INPUT VSL ENTRY */ 03198902
*             9 CIWILAST  BIT(1),   /* LAST ENTRY FLAG               */ 03199302
*             9 CIWINULL  BIT(1),   /* NULL ENTRY FLAG               */ 03199402
*             9 CIWIRAO   BIT(1),   /* REAL ADDRESS OPTION FLAG      */ 03199502
*             9 CIWIERR   BIT(1),   /* ERROR FLAG                    */ 03199602
*             9 *         BIT(1),   /* RESERVED                      */ 03249602
*             9 CIWIOUT   BIT(1),   /* PGOUT FLAG                    */ 03259602
*             9 CIWIKPRL  BIT(1),   /* KEAPREAL OPTION FLAG          */ 03269602
*             9 *         BIT(1),   /* RESERVED FOR EXTENDABILITY    */ 03279602
*          7 CIWEND1A PTR(24),      /* END ADDR+1 OF VIRTUAL AREA       03289602
*                                      SUBLIST                       */ 03291602
*    3 CIWTCB   PTR(31),            /* ADDRESS OF REQUESTOR TCB      */ 03293602
*    3 CIWECB   PTR(31),            /* ADDR OF REQUESTOR SUPPLIED       03295602
*                                      ECB                           */ 03297602
*    3 CIWCURPG PTR(31),            /* ADDR OF CURRENT VIRTUAL          03298002
*                                      PAGE BEING PROCESSED          */ 03298402
*    3 CIWLSTPG PTR(31),            /* ADDR OF LAST PAGE TO BE          03298802
*                                      PROCESSED                     */ 03299202
*    3 CIWRETRN PTR(31),            /* SAVE AREA FOR RETURN ADDR        03299302
*                                      TO PSI. USED BY SERVICE          03299402
*                                      MODULES WHEN CALLED BY PSI    */ 03299502
*    3 CIWWRK1  PTR(31),            /* FIRST  WORK AREA              */ 03349502
*    3 CIWWRK2  PTR(31),            /* SECOND WORK AREA              */ 03359502
*    3 CIWWRK3  PTR(31),            /* THIRD  WORK AREA              */ 03369502
*    3 CIWWRK4  PTR(31),            /* FOURTH WORK AREA              */ 03379502
*    3 CIWWRK5  PTR(31) CIWA9999    /* FIFTH  WORK AREA              */ 03389502
*        %CIWALEN = 'LENGTH(CIWA)'; /* OBTAIN LENGTH OF CIWA         */ 03399502
./  ADD  SSI=30861786,NAME=IEAMMB
*        %GOTO MMBL1;         /* BILINGUAL MAPPING                      01000002
         MACRO                                                          02000002
         IEAMMB &DSECT=YES                                           */ 03000002
*%MMBL1 : ;                                                             04000002
* /*******************************************************************/ 05000002
* /*                                                                 */ 06000002
* /* MACMEAN MMB MEANS MONITOR MESSAGE BLOCK                         */ 07000002
* /*                                                                 */ 08000002
* /* MACCOMP Y-2 SC1C5/PZD81                                         */ 09000002
* /*                                                                 */ 10000002
* /* MACSTAT Y-2 72245/TU015156                                      */ 11000002
* /*                                                                 */ 12000002
* /* METHOD OF ACCESS                                                */ 13000002
* /*     PL/S - DCL MMBPTR PTR                                       */ 14000002
* /*     BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */ 15000002
* /*            USING ON DSECT NAME GIVES ADDRESSABILITY FOR ALL     */ 16000002
* /*            SYMBOLS IN THAT DSECT.                               */ 17000002
* /*                                                                 */ 18000002
* /*******************************************************************/ 19000002
*%GOTO MMBL2;   /*                                                      20000002
         SPACE                                                          21000002
         IEZBITS , -          SYMBOLIC BIT DEFINITIONS                  22000002
         SPACE                                                          23000002
         AIF   ('&DSECT' EQ 'NO').MMB0000                               24000002
MMB      DSECT                                                          25000002
         AGO   .MMB0020                                                 26000002
.MMB0000 ANOP                                                           27000002
         DS    0D                                                       28000002
MMB      EQU   *                                                        29000002
.MMB0020 ANOP                                                           30000002
         SPACE                                                          31000002
MMBNAME  DS    CL4            BLOCK ID - MMB IN EBCDIC LEFT JUSTIFIED   32000002
MMBLINK  DS    AL4            POINTER TO NEXT MMB OR ZERO               33000002
MMBBKPTR DS    AL4            POINTER TO PREVIOUS MMB OR ZERO           33050002
MMBTXLN  DS    H              LENGTH OF TEXT                            34000002
         SPACE                                                          35000002
MMBTYPE  DS    0H             MONITOR TYPE FLAGS                        36000002
MMBTYPE1 DS    B -            FIRST BYTE OF MONITOR TYPE FLAGS          37000002
MMBJBNM  EQU   BIT0 -         MONITOR JOBNAMES                          38000002
MMBSTAT  EQU   BIT1 -         MONITOR STATUS                            39000002
MMBRSV01 EQU   BIT2 -         RESERVED                                  40000002
MMBRSV02 EQU   BIT3 -         RESERVED                                  41000002
MMBRSV03 EQU   BIT4 -         RESERVED                                  42000002
MMBSESS  EQU   BIT5 -         MONITOR SESSIONS                          43000002
MMBRSV04 EQU   BIT6 -         RESERVED                                  44000002
MMBRSV05 EQU   BIT7 -         RESERVED                                  45000002
         SPACE                                                          46000002
MMBTYPE2 DS    B -            SECOND BYTE OF MONITOR TYPE FLAGS         46050002
         SPACE                                                          46100002
MMBTEXT  DS    CL128 -        MESSAGE TEXT                              47000002
         SPACE                                                          48000002
MMBSIZE  EQU   *-MMB          LENGTH OF MMB                             49000002
         MEND                    */                                     50000002
*%MMBL2: ;                                                              51000002
*                                                                       52000002
*DECLARE                                                                53000002
*  1 MMB BASED(MMBPTR) BDY(WORD),       /* START OF MMB              */ 54000002
*   2 MMBNAME      CHAR(4),             /* BLOCK ID - MMB IN EBCDIC     55000002
*                                          LEFT JUSTIFIED            */ 56000002
*   2 MMBLINK      PTR(31),             /* POINTER TO NEXT MMB OR       57000002
*                                          ZERO                      */ 58000002
*   2 MMBBKPTR     PTR(31),             /* POINTER TO PREVIOUS MMB      58050002
*                                          OR ZERO                   */ 58100002
*   2 MMBTXLN      FIXED(15),           /* LENGTH OF MESSAGE TEXT    */ 59000002
*                                                                       60000002
*   2 MMBTYPE      CHAR(2),             /* MONITOR TYPE FLAGS        */ 61000002
*    3 MMBTYPE1     BIT(8),             /* FIRST BYTE OF MONITOR        62000002
*                                          TYPE FLAGS                */ 63000002
*     4 MMBJBNM    BIT(1),              /* MONITOR JOBNAMES          */ 64000002
*     4 MMBSTAT    BIT(1),              /* MONITOR STATUS            */ 65000002
*     4 MMBRSV01   BIT(1),              /* RESERVED                  */ 66000002
*     4 MMBRSV02   BIT(1),              /* RESERVED                  */ 67000002
*     4 MMBRSV03   BIT(1),              /* RESERVED                  */ 68000002
*     4 MMBSESS    BIT(1),              /* MONITOR SESSIONS          */ 69000002
*     4 MMBRSV04   BIT(1),              /* RESERVED                  */ 70000002
*     4 MMBRSV05   BIT(1),              /* RESERVED                  */ 71000002
*                                                                       72000002
*    3 MMBTYPE2     BIT(8),             /* SECOND BYTE OF MONITOR       73000002
*                                          TYPE FLAGS                */ 74000002
*                                                                       75000002
*   2 MMBTEXT CHAR(128) BDY(WORD);      /* MESSAGE TEXT              */ 76000002
*                                                                       77000002
*%MMBSIZE = 'LENGTH(MMB)';              /* GET SIZE OF MMB           */ 78000002
./  ADD  SSI=30381586,NAME=IEAMQE
 /********************************************************************/ 02000002
 /*                                                                  */ 04000002
 /* MACMEAN MQE MEANS MONITOR QUEUE ELEMENT                          */ 06000002
 /*                                                                  */ 08000002
 /* MACCOMP Y-2 SC1CK/PZD81                                          */ 10000002
 /*                                                                  */ 12000002
 /* MACSTAT Y-2 73046/TU015048                                       */ 14000002
 /*                                                                  */ 16000002
 /* METHOD OF ACCESS - DECLARE MQEPTR PTR                            */ 18000002
 /*                                                                  */ 20000002
 /********************************************************************/ 22000002
                                                                        24000002
 DECLARE                                                                26000002
   1 MQE BASED(MQEPTR) BDY(WORD),      /* MONITOR QUEUE ELEMENT      */ 28000002
    2 MQENAME      CHAR(4),            /* BLOCK ID - MQE IN EBCDIC      30000002
                                          LEFT JUSTIFIED             */ 32000002
    2 MQELINK      PTR(31),            /* POINTER TO NEXT MQE OR        34000002
                                          ZERO                       */ 36000002
    2 MQEID        CHAR(2),            /* ASID OF TSO USER           */ 38000002
    2 MQETYPE      CHAR(2),            /* MONITOR TYPE FLAGS         */ 40000002
                                                                        42000002
     3 MQETYPE1    BIT(8),             /* FIRST BYTE OF MONITOR         44000002
                                          TYPE FLAGS                 */ 46000002
      4 MQEJBNM    BIT(1),             /* MONITOR JOBNAMES           */ 48000002
      4 MQESTAT    BIT(1),             /* MONITOR STATUS             */ 50000002
      4 MQERSV01   BIT(1),             /* RESERVED                   */ 52000002
      4 MQERSV02   BIT(1),             /* RESERVED                   */ 54000002
      4 MQERSV03   BIT(1),             /* RESERVED                   */ 56000002
      4 MQESESS    BIT(1),             /* MONITOR SESSIONS           */ 58000002
      4 MQERSV04   BIT(1),             /* RESERVED                   */ 60000002
      4 MQERSV05   BIT(1),             /* RESERVED                   */ 62000002
                                                                        64000002
     3 MQETYPE2    BIT(8);             /* SECOND BYTE OF MONITOR        66000002
                                          TYPE FLAGS                 */ 68000002
                                                                        70000002
 %MQESIZE = 'LENGTH(MQE)';             /* GET SIZE OF MQE            */ 72000002
./  ADD  SSI=41900097,NAME=IEAPMNIP
*%GOTO MNIPBSL ;                      /*                                00050001
         MACRO                                                          00100001
&NAME    IEAPMNIP  &TYPE=,&MSGST=,&MSGEND=,&RMSGST=,&RMSGL=,&MOD=,     X00150002
               &ASYNCH=,&PARAM=,&BUFREL=,&OPT=,&CPUID=,&ADDR=           00200002
         LCLC  &NB,&LB,&LC,&SX,&LM,&LI,&AU,&RS,&US                      00250002
.********************************************************************** 00400001
.*           06/27/74   VS2-3 VERSION                                   00450003
.*       INITIALIZE ALL FLAG-SETTING SWITCHES TO ZERO                   00500001
.*                                                                      00550001
.********************************************************************** 00600001
&NB      SETC  '0'                    OPEN - NON-NUCLEUS DEB            00650001
&LB      SETC  '0'                    OPEN - END OF NUCLEUS DEB         00700001
.*                                    MOUNT - UCB ADDRESS GIVEN         00750001
&LC      SETC  '0'                    OPEN,MOUNT - CONDITIONAL REQUEST  00800001
&SX      SETC  '0'                    OPEN - SINGLE EXTENT              00850001
&LM      SETC  '0'                    OPEN - SUPPRESS OPEN MSGS         00900001
&LI      SETC  '0'                    OPEN,MOUNT - DS NAME PTR GIVEN    01000001
&AU      SETC  '0'                    OPEN - AUTHORINZED LIBRARY        01050002
&RS      SETC  '0'                    OPEN - PERMANENTLY RESIDENT DS    01100002
&US      SETC  '0'                    MOUNT- UCB SCAN ONLY              01150002
         AIF   ('&TYPE' EQ 'PLIST').LISTMAC                             01200002
         AIF   ('&TYPE' EQ 'MOUNTPL').LISTMAC                           01250002
         AIF   ('&TYPE' EQ 'OPENPL').LISTMAC                            01300002
         AIF   ('&TYPE' EQ 'SCHEDL').LISTMAC                            01400002
&NAME    DS    0H                                                       01450002
         AGO   .EXMACRO                                                 01500002
.LISTMAC ANOP                                                           01550002
&NAME    DS    0F                                                       01600002
.EXMACRO ANOP                                                           01650002
         AIF   ('&TYPE' NE 'MOUNTPL').NOMPL                             05800002
.**************                                                         05850001
.*                                                                      05900001
.*        NIPMOUNT  PARAMETER  LIST                                     05950001
.*                                                                      06000001
.**************                                                         06050001
         AIF   ('&OPT' NE 'PTR').MNOPTR                                 06100001
         AIF   (K'&PARAM EQ 0).MNOPRM                                   06150001
         DC    A(&PARAM)              DATA SET NAME ADDRESS             06200001
         AGO   .MZER                                                    06250001
.MNOPRM  ANOP                                                           06300001
         DC    A(0)                   DATA SET NAME ADDRESS             06350001
.MZER    ANOP                                                           06400001
         DC    XL8'0000000000000000'  RESERVED                          06450001
         AGO   .MPTR                                                    06500001
.MNOPTR  ANOP                                                           06550001
         DC    CL12'&PARAM '          DATASET NAME                      06600001
.MPTR    ANOP                                                           06650001
         DC    CL6' '                 VOLUME SERIAL OR UCB ADDRESS      06700001
         DC    XL2'0000'              DEVICE TYPE                       06750001
         DC    X'00'                  NIPMOUNT FLAGS                    06800001
         DC    XL3'000000'            UNASSIGNED                        06850001
         AGO   .MACEND                                                  06900001
.NOMPL   AIF   ('&TYPE' NE 'OPENPL').NOOPL                              06950001
.**************                                                         07000001
.*                                                                      07050001
.*        NIPOPEN  PARAMETER  LIST                                      07100001
.*                                                                      07150001
.**************                                                         07200001
         AIF   ('&OPT' NE 'PTR').ONOPTR                                 07250001
         AIF   (K'&PARAM EQ 0).ONOPRM                                   07300001
         DC    A(&PARAM)              DATA SET NAME ADDRESS             07350001
         AGO   .OZER                                                    07400001
.ONOPRM  ANOP                                                           07450001
         DC    A(0)                   DATA SET NAME ADDRESS             07500001
.OZER    ANOP                                                           07550001
         DC    XL8'0000000000000000'  RESERVED                          07600001
         AGO   .OPTR                                                    07650001
.ONOPTR  ANOP                                                           07700001
         DC    CL12'&PARAM '          DATASET NAME                      07750001
.OPTR    ANOP                                                           07800001
         DC    A(0)                   DCB ADDRESS                       07850001
         DC    A(0)                   UCB ADDRESS                       07900001
         DC    X'00'                  NIPOPEN FLAGS                     07950001
         DC    X'00'                  NIPOPEN RETURN CODE               08000001
         DC    XL2'0000'              UNASSIGNED                        08050001
         AGO   .MACEND                                                  08100001
.NOOPL   AIF   ('&TYPE' NE 'MOUNT').NOMNT                               08150001
.**************                                                         08200001
.*                                                                      08250001
.*        LINKAGE TO  NIPMOUNT                                          08300001
.*                                                                      08350001
.**************                                                         08400001
         AIF   ('&OPT(1)' NE 'LB').MNOLB                                08650001
&LB      SETC  '1'                                                      08700001
.MNOLB   AIF   ('&OPT(2)' NE 'LC').MNOLC                                08750001
&LC      SETC  '1'                                                      08800001
.MNOLC   AIF   ('&OPT(3)' NE 'LI').MNOLI                                08850001
&LI      SETC  '1'                                                      08900001
.MNOLI   AIF   ('&OPT(4)' NE 'US').MNOUS                                08910002
&US      SETC  '1'                                                      08920002
.MNOUS   ANOP                                                           08950002
         LA    RPARM,&PARAM           LOAD PARM LIST ADDRESS            09050001
         MVI   NMNTFL(RPARM),B'0000&US&LI&LC&LB'  SET FLAG BITS         09100002
         AGO   .ELOAD                                                   09160002
.NOMNT   AIF   ('&TYPE' NE 'OPEN').NOOPN                                09550001
.**************                                                         09600001
.*                                                                      09650001
.*        LINKAGE TO  NIPOPEN                                           09700001
.*                                                                      09750001
.**************                                                         09800001
         AIF   ('&OPT(1)' NE 'NB').NONB                                 10050001
&NB      SETC  '1'                                                      10100001
.NONB    AIF   ('&OPT(2)' NE 'LB').NOLB                                 10150001
&LB      SETC  '1'                                                      10200001
.NOLB    AIF   ('&OPT(3)' NE 'LC').NOLC                                 10250001
&LC      SETC  '1'                                                      10300001
.NOLC    AIF   ('&OPT(4)' NE 'SX').NOSX                                 10350001
&SX      SETC  '1'                                                      10400001
.NOSX    AIF   ('&OPT(5)' NE 'LM').NOLM                                 10450001
&LM      SETC  '1'                                                      10500001
.NOLM    AIF   ('&OPT(6)' NE 'LI').NOLI                                 10550001
&LI      SETC  '1'                                                      10600001
.NOLI    AIF   ('&OPT(7)' NE 'AU').NOAU                                 10610002
&AU      SETC  '1'                                                      10620002
.NOAU    AIF   ('&OPT(8)' NE 'RS').NORS                                 10630002
&RS      SETC  '1'                                                      10640002
.NORS    ANOP                                                           10650002
         LA    RPARM,&PARAM           LOAD PARM LIST ADDRESS            10750001
         MVI   NOPNFL(RPARM),B'&RS&AU&LM&LI&NB&LB&LC&SX' SET FLAG BITS  10800002
         AGO   .ELOAD                                                   10810002
.NOOPN   AIF   ('&TYPE' NE 'HEADER').NOHEAD                             11250001
.**************                                                         11300001
.*                                                                      11350001
.*        NIPWTO  MESSAGE  HEADER                                       11400001
.*                                                                      11450001
.**************                                                         11500001
         DC    Y(&MSGEND-&MSGST)      MESSAGE LENGTH                    11550001
         AIF   ('&OPT(1)' NE 'NHC').NONHC                               11600001
         AIF   ('&OPT(2)' NE 'NBC').NONBC1                              11610001
         DC    X'C0'                  FLAG BYTE 1                       11620001
         AGO   .HEADB2                                                  11630001
.NONBC1  DC    X'80'                  FLAG BYTE 1                       11640001
         AGO   .HEADB2                                                  11642001
.NONHC   AIF ('&OPT(2)' NE 'NBC').NONBC2                                11644001
         DC    X'40'                 FLAG BYTE 1                        11646001
         AGO   .HEADB2                                                  11648001
.NONBC2  DC    X'00'                 FLAG BYTE 1                        11648401
.HEADB2  DC    X'00'                 FLAG BYTE 2                        11648801
         AGO   .MACEND                                                  11650001
.NOHEAD  AIF   ('&TYPE' NE 'PLIST').NOLIST                              11700001
.**************                                                         11750001
.*                                                                      11800001
.*        NIPWTOR  PARAMETER  LIST                                      11850001
.*                                                                      11900001
.**************                                                         11950001
         AIF   ('&RMSGST' EQ 'SQARBUF').ZERRPA                          12000001
         DC    A(&RMSGST)             REPLY AREA ADDRESS                12050001
         DC    A(0)                   REPLY ECB ADDRESS                 12100001
         DC    H'&RMSGL'              REPLY AREA LENGTH                 12150001
         AIF   ('&ASYNCH' EQ 'YES').ASYN1                               12200001
         DC    XL1'00'                NIP WTOR FLAGS                    12250001
         AGO   .PARM1                                                   12300001
.ASYN1   DC    XL1'80'                NIP WTOR FLAGS                    12350001
         AGO   .PARM1                                                   12400001
.ZERRPA  DC    A(0)                   REPLY AREA ADDRESS                12450001
         DC    A(0)                   REPLY ECB ADDRESS                 12500001
         DC    H'0'                   REPLY AREA LENGTH                 12550001
         AIF   ('&ASYNCH' EQ 'YES').ASYN2                               12600001
         DC    XL1'08'                NIP WTOR FLAGS                    12650001
         AGO   .PARM1                                                   12700001
.ASYN2   DC    XL1'88'                NIP WTOR FLAGS                    12750001
.PARM1   DC    XL1'00'                RESERVED                          12800001
         DC    A(&MSGST)              WTOR MESSAGE ADDRESS              12850001
         AGO   .MACEND                                                  12852002
.********************                                                   12860002
.*                                                                      12870002
.*            NIPSCHED PARAMETER LIST                                   12880002
.*                                                                      12890002
.**********************                                                 12892002
.NOLIST  AIF   ('&TYPE' NE 'SCHEDL').NOSCHDL                            12894002
         AIF   (K'&ADDR EQ 0).SCHDL1                                    12896002
         DC    A(&ADDR)                                                 12898002
         AGO   .SCHDL2                                                  12898402
.SCHDL1  DC    A(0)                                                     12898802
.SCHDL2  AIF   (K'&PARAM EQ 0).SCHDL3                                   12898902
         DC     A(&PARAM)                                               12899002
         AGO    .SCHDL4                                                 12899102
.SCHDL3  DC     A(0)                                                    12899302
.SCHDL4  DC     XL2'0000'                                               12899702
         AGO   .MACEND                                                  12900002
.********************                                                   12949602
.*                                                                      12949702
.*       LINKAGE FOR THE NIPSCHED  ROUTINE                              12949802
.*                                                                      12949902
.*********************                                                  12966602
.NOSCHDL AIF   ('&TYPE' NE 'SCHED').NOSCHED                             12976602
         LA    RPARM,&PARAM                                             12978602
         MVC   8(2,RPARM),0(&CPUID)                                     12980602
         AIF   (K'&ADDR EQ 0).ELOAD                                     12982602
         ST    &ADDR,0(0,RPARM)                                @YM1995P 12983002
         AGO   .ELOAD                                                   12983102
.NOSCHED AIF   ('&TYPE' NE 'PRMPT').NOPRMPT                             12983202
.*******************************************                            12988802
.*                                                                      12990802
.*      LINKAGE FOR THE NIPPRMPT ROUTINE                                12992802
.*                                                                      12993202
.******************************************                             12993602
         LA     RPARM,&PARAM       ADDRESS OF PARAMETER FOR PROMPT      13018202
         AIF   ('&OPT' NE 'ERROR').PRMPT1                               13018602
         LCR   RPARM,RPARM         COMPLEMENT PARAM REGISTER (ERROR)    13019002
.PRMPT1  AGO   .ELOAD                                                   13019402
.**************                                                         13032602
.*                                                                      13036102
.*        LINKAGE  FOR:  NIPSENSE, NIPSWAIT,NIPTIME,NIPUCBFN,           13050001
.*                       NIPWTO, NIPWTOR, NIPWTOR2                      13100001
.*                       NIPOPIO,NIPVIRT,NIPREAL,NIPPRMPT               13110002
.*                                                                      13150001
.**************                                                         13200001
.NOPRMPT AIF   ('&TYPE' EQ 'SENSE').PLOAD                               13250002
         AIF   ('&TYPE' EQ 'SWAIT').ELOAD                               13300001
         AIF   ('&TYPE' EQ 'OPIO').ELOAD                                13310002
         AIF   ('&TYPE' EQ 'VIRT').ELOAD                                13320002
         AIF   ('&TYPE' EQ 'REAL').ELOAD                                13330002
         AIF   ('&TYPE' NE 'TIME').NTIME                                13350001
         AIF   ('&PARAM' NE 'DEC').BTIME                                13400001
         SR    RPARM,RPARM            REQUEST DECIMAL TIME              13450001
         AGO   .ELOAD                                                   13500001
.BTIME   LA    RPARM,4(0,0)           REQUEST BINARY TIME      @YM1995P 13550002
         AGO   .ELOAD                                                   13600001
.NTIME   AIF   ('&TYPE' EQ 'UCBFN').PLOAD                               13650001
         AIF   ('&TYPE' EQ 'WTOR2').WTOR2                               13700001
         LA    RPARM,&PARAM           LOAD PARM REGISTER                13750001
         AGO   .ELOAD                                                   13800001
.WTOR2   AIF   ('&BUFREL' NE 'YES').PLOAD                               13850001
         LCR   RPARM,&PARAM           INDICATE SQA RELEASE              13900001
         AGO   .ELOAD                                                   13950001
.PLOAD   AIF   ('&PARAM' EQ 'RPARM').ELOAD                              14000001
         LR    RPARM,&PARAM           LOAD PARM REGISTER                14050001
.ELOAD   AIF   ('&MOD' EQ 'NIPM').ELOAD1                                14050402
         L     RENTRY,NVT&TYPE.(0,RNVT)   LOAD BRANCH ADDRESS  @YM1995P 14050802
         BALR  REXIT,RENTRY               CALL THE ROUTINE              14051202
         AGO   .MACEND                                                  14051602
.ELOAD1  ANOP                                                           14052002
         L     RENTRY,NVT&TYPE        LOAD BRANCH ADDRESS               14100002
         BALR  REXIT,RENTRY           BRANCH TO ROUTINE                 14150001
.MACEND  ANOP                                                           14200001
         MEND  ,                      */                                14250001
*%MNIPBSL: ;                                                            14300001
*        /***             NIPWTO  MESSAGE  HEADER                  ***/ 14350001
*        /* THE FOLLOWING STRUCTURE MAPS THE NIPWTO MESSAGE HEADER   */ 14360002
*        /* THAT IS GENERATED BY THE BAL MACRO -IEAPMNIP TYPE=HEADER-*/ 14370002
*        /* AND IS USED TO PASS INFORMATION TO THE NIPWTO SERVICE    */ 14380002
*        /* ROUTINE. THE MESSAGE LENGTH FIELD, NWTOLNG, INCLUDES THE */ 14390002
*        /* LENGTH OF THE MESSAGE HEADER ITSELF.                     */ 14392002
*        DECLARE 1 NWTOHDR BASED ,        /* MESSAGE HEADER START    */ 14400001
*                 2 NWTOLNG  FIXED(15),   /* MESSAGE LENGTH          */ 14450001
*                 2 NWTOFL   CHAR(2),     /* NIP MESSAGE FLAGS       */ 14500001
*                  3 NWTOFLNH  BIT(1),    /* NOT TO BE HARDCOPIED    */ 14550001
*                  3 NWTOFLNC  BIT(1),    /* SUPRESS BLANK COMPRESS  */ 14560001
*                  3 *         BIT(14);   /* RESERVED                */ 14600001
*        /***        END  OF  NIPWTO  MESSAGE  HEADER              ***/ 14650001
*                                                                       14700001
*        /***             NIPWTOR  PARAMETER  LIST                 ***/ 14750001
*        /* THE FOLLOWING STRUCTURE MAPS THE NIPWTOR PARAMETER LIST  */ 14760002
*        /* THAT IS GENERATED BY THE BAL MACRO -IEAPMNIP TYPE=PLIST- */ 14770002
*        /* AND IS USED TO PASS INFORMATION TO THE NIPWTOR SERVICE   */ 14780002
*        /* ROUTINE.                                                 */ 14790002
*        DECLARE 1 NWTORLST BASED,        /* PARM LIST START         */ 14800001
*                 2 NWTORRPA PTR(31),     /* REPLY AREA ADDRESS      */ 14850001
*                 2 NWTORECB PTR(31),     /* REPLY ECB ADDRESS       */ 14900001
*                 2 NMTORRDL FIXED(15),   /* REPLY AREA LENGTH       */ 14950001
*                 2 NWTORFL  CHAR(1),     /* NIP WTOR FLAGS          */ 15000001
*                  3 NWTORFLA BIT(1),     /* ASYNCHRONOUS REQUEST    */ 15050001
*                  3 *        BIT(3),     /* RESERVED                */ 15100001
*                  3 NWTORFLB BIT(1),     /* PROVIDE SQA BUFFER      */ 15150001
*                  3 *        BIT(3),     /* RESERVED                */ 15200001
*                 2   *      CHAR(1),     /* RESERVED                */ 15250001
*                 2 NWTORMSG PTR(31);     /* WTOR MESSAGE HEADER        15300002
*                                            ADDRESS.                */ 15310002
*        /***        END  OF  NIPWTOR  PARAMETER  LIST             ***/ 15350001
*                                                                       15400001
*        /***        NIP SYSTEM PARAMETER QUEUE ENTRY              ***/ 15450001
*        /* THE FOLLOWING STRUCTURE MAPS THE NIP SYSTEM PARAMETER    */ 15460002
*        /* ENTRY WHICH IS AN INTERNAL CONTROL BLOCK USED BY NIP TO  */ 15470002
*        /* TRACK SQA BUFFERS USED TO CONTAIN WTOR REPLIES.  THIS    */ 15480002
*        /* IS DONE SO THAT IEAVNIPX CAN FREE THESE AREAS AT THE END */ 15490002
*        /* OF NIP PROCESSING.  ONE SPE IS CONTAINED IN THE NVTSPE   */ 15494002
*        /* FIELD OF THE NVT. IF OTHERS ARE REQUIRED, THEY ARE       */ 15496002
*        /* OBTAINED DYNAMICALLY FROM SQA AND CHAINED TO THE ONE IN  */ 15498002
*        /* THE NVT.                                                 */ 15498402
*        DECLARE 1 NIPSPE BASED ,         /* NIPSPE START            */ 15500001
*                 2 NIPSPEQ PTR(31),      /* CHAIN PTR               */ 15550001
*                 2 NIPSPEA PTR(31);      /* PARAMETER PTR           */ 15600001
*        /***                  END OF NIPSPE                       ***/ 15650001
*                                                                       15700001
*        /***              NIPMOUNT PARAMETER LIST                 ***/ 15750001
*        /* THE FOLLOWING STRUCTURE MAPS THE NIPMOUNT PARAMETER LIST */ 15760002
*        /* THAT IS GENERATED BY THE BAL MACRO -IEAPMNIP TYPE=MOUNTPL*/ 15770002
*        /* AND IS USED TO PASS INFORMATION TO THE NIPMOUNT SERVICE  */ 15780002
*        /* ROUTINE.  THIS MAPPING MUST BE INCLUDED IN ANY MODULE    */ 15790002
*        /* THAT USES THE NIPMOUNT SERVICE, SINCE IT IS REFERRED TO  */ 15792002
*        /* BY THE NIPMOUNT BAL CALL MACRO, IEAPMNIP TYPE=MOUNT.     */ 15794002
*                                                                       15796002
*        DECLARE 1 NIPMNTPL BASED,        /* PARM LIST START         */ 15800001
*               2 NMNTDS CHAR(12),        /* DATASET NAME  OR        */ 15850002
*                3 NMNTDSA PTR(31) BDY(BYTE), /* DS NAME ADDRESS     */ 15900001
*               2 NMNTVS CHAR(6),         /* VOLUME SERIAL  OR       */ 15950002
*                3 NMNTUCB FIXED(31) BDY(BYTE), /* UCB ADDRESS       */ 16000001
*               2 NMNTDT CHAR(2),         /* DEVICE TYPE             */ 16050001
*               2 NMNTFL CHAR(1),         /* NIPMOUNT FLAGS          */ 16100001
*                3 *        BIT(4),       /* ** RESERVED **          */ 16150002
*                3 NMNTFUS  BIT(1),       /* UCB SCAN ONLY REQUEST   */ 16160002
*                3 NMNTFLI  BIT(1),       /* DS NAME ADDR GIVEN      */ 16200001
*                3 NMNTFLC  BIT(1),       /* CONDITIONAL REQUEST     */ 16250001
*                3 NMNTFLB  BIT(1),       /* UCB ADDRESS GIVEN       */ 16300001
*               2 *      CHAR(3);         /* ** RESERVED **          */ 16350001
*        /***            END OF NIPMOUNT PARAMETER LIST            ***/ 16400001
*                                                                       16450001
*        /***                NIPOPEN PARAMETER LIST                ***/ 16500001
*        /* THE FOLLOWING STRUCTURE MAPS THE NIPOPEN PARAMETER LIST  */ 16510002
*        /* THAT IS GENERATED BY THE BAL MACRO -IEAPMNIP TYPE=OPENPL-*/ 16520002
*        /* AND IS USED TO PASS INFORMATION TO THE NIPOPEN SERVICE   */ 16530002
*        /* ROUTINE.  THIS MAPPING MUST BE INCLUDED IN ANY MODULE    */ 16540002
*        /* THAT USES THE NIPOPEN SERVICE, SINCE IT IS REFERRED TO BY*/ 16542002
*        /* THE NIPOPEN BAL CALL MACRO, IEAPMNIP TYPE=OPEN.          */ 16544002
*                                                                       16546002
*        DECLARE 1 NIPOPNPL BASED,        /* PARM LIST START         */ 16550001
*                 2 NOPNDS CHAR(12),      /* DATASET NAME OR         */ 16600002
*                  3 NOPNDSA PTR(31) BDY(BYTE), /* DS NAME ADDRESS   */ 16650001
*                 2 NOPNDCB PTR(31),      /* DCB ADDRESS             */ 16700001
*                 2 NOPNUCB PTR(32),      /* UCB ADDRESS     @Z30AAXC*/ 16750003
*                 2 NOPNFL CHAR(1),       /* NIPOPEN FLAGS           */ 16800001
*                  3 NOPNFRS  BIT(1),     /* PERMANENTLY RESIDENT DS */ 16850002
*                  3 NOPNFAU  BIT(1),     /* AUTHORIZED LIBRARY FLAG */ 16860002
*                  3 NOPNFLM  BIT(1),     /* SUPRESS DS NOT FOUND MSG*/ 16900001
*                  3 NOPNFLI  BIT(1),     /* DS NAME ADDR GIVEN      */ 16950001
*                  3 NOPNFLNB BIT(1),     /* INITIALIZE BASIC DEB    */ 17000002
*                  3 NOPNFLLB BIT(1),     /* END OF NUCLEUS DEB      */ 17050001
*                  3 NOPNFLLC BIT(1),     /* CONDITIONAL REQUEST     */ 17100001
*                  3 NOPNFLSX BIT(1),     /* FIRST EXTENT ONLY       */ 17150001
*                 2 NOPNRC   CHAR(1),     /* NIPOPEN RETURN CODE     */ 17200001
*                 2 *        CHAR(2);     /* ** RESERVED **          */ 17250001
*        /***           END OF NIPOPEN PARAMETER LIST              ***/ 17300001
*                                                                       17310002
*       /***     NIPSCHED    PARAMETER   LIST               *****/      17350002
*        /* THE FOLLOWING STRUCTURE MAPS THE NIPSCHED PARAMETER LIST */ 17360002
*        /* THAT IS GENERATED BY THE BAL MACRO -IEAPMNIP TYPE=SCHEDL-*/ 17370002
*        /* AND IS USED TO PASS INFORMATION TO THE NIPSCHED SERVICE  */ 17380002
*        /* ROUTINE.                                                 */ 17390002
*                                                                       17392002
*        DECLARE 1 NIPSCHDL BASED,                                      17400002
*                  2 NSCHDPTR PTR(31),  /*ADDRESS OF ROUTINE TO SCHED*/ 17450002
*                  2 NSCHDPRM PTR(31),  /* ADDRESS OF CALLERS AREA   */ 17460002
*                  2 NSCHDCPU CHAR(2);  /* CPU ADDRESS FOR SCHEDULE  */ 17500002
*      /*****  END OF NIPSCHED  PARAMETER  LIST             ********/   17550002
./  ADD  SSI=22491259,NAME=IEAPNPB
*/******************************************************************/   26960001
*/*                                                                */   26962001
*/*                         I E A P N P B                          */   26964001
*/*                     DATE=05/11/72,LEVEL=1                      */   26966001
*/*                                                                */   26968001
*/*   THIS BSL MACRO PROVIDES EXPANSIONS OF CONTROL BLOCKS         */   26968401
*/*   (IOB,ECB,DEB,DCB) INITIALIZED FOR I/O FOR DIRECT ACCESS      */   26968801
*/*   AND TAPE DATA SETS, INPUT OR OUTPUT CONSOLES OR FOR          */   26969201
*/*   CONSOLE TESTING.                                             */   26969301
*/*                                                                */   26969601
*/******************************************************************/   26969701
*                                                                       26969801
*                                                                       26969901
*     %IF  DASD ¬= 'YES'                                                26970001
*       %THEN                                                           27000001
*         %GOTO NPBNUC ;                                                27050001
*/******************************************************************/   27100001
*/*                                                                */   27150001
*/*              BLOCKS  FOR  DIRECT ACCESS I/O                    */   27200001
*/*                                                                */   27250001
*/******************************************************************/   27300001
*/*                                                                */   27350001
*/**                                                              **/   27400001
*/*               INPUT/OUTPUT  BLOCK   (IOB)                      */   27450001
*/**                                                              **/   27500001
*       DECLARE  1 * ,                                                  27550001
*                  2 NPBNIOBF  CHAR(4) ,    /* IOB PREFIX BYTES    */   27600001
*                    /* BYTE 0 - MAX RETRY                         */   27700001
*                    3 NPBNIFB0  PTR(8) INIT(0) ,                       27710001
*                    3 NPBNIFB1  CHAR(1) INIT('00'X) , /* BYTE 1 : */   27750001
*                      4 NIPDSTAT  BIT(1) , /*   DEVICE STATUS     */   27850001
*                      4 NIPDFEST  BIT(1) , /*   FEATURE TEST      */   27860001
*                      4 NIPDRTY   BIT(1) , /*   RETRY OPTION      */   27900001
*                      4 NIPDERR   BIT(1) , /*   REPORT ERROR      */   27910001
*                      4 NIPDMOD   BIT(1) , /*   TAPE MODE REQUIRED*/   27920001
*                      4 *         BIT(3) , /*   RESERVED          */   27950001
*                    3 NPBNIFB2  CHAR(1) INIT('00'X) , /* BYTE 2   */   28000001
*                    3 NPBNIFB3  CHAR(1) INIT('00'X) , /* BYTE 3 : */   28100001
*                      4 NIPDUNAV  BIT(1) , /*   UNAVAILABLE       */   28200001
*                      4 NIPDCREJ  BIT(1) , /*   COMMAND REJECT    */   28250001
*                      4 NIPDOFFL  BIT(1) , /*   OFF-LINE          */   28300001
*                      4 *         BIT(5) , /*   RESERVED          */   28350001
*                  2 NIPIOBSN ,                                         28400001
*                    3  NPBNIOB ,                                       28450001
*                      /* FLAG AND SENSE BYTES                     */   28550001
*                      4 NPBNFGSN  CHAR(4) INIT('42000000'X) ,          28560001
*                      /* IOBECBPT - ECB ADDRESS                   */   28650001
*                      4 NPBNECBA  PTR(31) INIT(ADDR(NPBNECB)) ,        28660001
*                      /* FLAGS AND CSW IMAGE                      */   28750001
*                      4 NPBNIOB1  CHAR(8) INIT('0000000000000000'X) ,  28760001
*                      /* IOBSTART - CHANNEL PROGRAM ADDRESS       */   28850001
*                      4 NPBNCPAD  PTR(31) INIT(0) ,                    28860001
*                      /* IOBDCBPT - DCB ADDRESS                   */   28950001
*                      4 NPBNDCBP  PTR(31) INIT(ADDR(NPBNDCB1)-40) ,    28960001
*                      /*     REST OF IOB COMMON                   */   29010001
*                      4 NPBNREST  CHAR(8) INIT('0000000000000000'X) ,  29012001
*                                                                       29014001
*/**                     DASD  EXTENSION                          **/   29020001
*                                                                       29022001
*                      /* IOBSEEK - MBBCCHHR                       */   29040001
*                      4 NPBNSEEK  CHAR(8) INIT('0000000000000000'X) ;  29042001
*/**                                                              **/   29050001
*/*               EVENT  CONTROL  BLOCK   (ECB)                    */   29100001
*/**                                                              **/   29150001
*     DECLARE 1  NIPECBSN ,                                             29200001
*             2  NPBNECB ,                                              29250001
*               /* EVENT COMPLETION CODE                           */   29350001
*               3 NPBNCPCD  CHAR(1) INIT('00'X),                        29360001
*               /* RB ADDR OR REST OF COMPLETION CODE              */   29450001
*               3 NPBNRBAD  PTR(24) INIT(0) ;                           29460001
*     %GOTO NPBNDEBN ;                                                  29500001
*%NPBNUC: ;                                                             29550001
*     %IF  NUCLEUS ¬= 'YES'                                             29600001
*       %THEN                                                           29650001
*         %GOTO NPBNUCX ;                                               29700001
*/******************************************************************/   29750001
*/*                                                                */   29800001
*/*                   BLOCKS  FOR  SYS1.NUCLEUS                    */   29850001
*/*                                                                */   29900001
*/******************************************************************/   29950001
*/*                                                                */   30000001
*%NPBNDEBN: ;                                                           30050001
*/**                                                              **/   30100001
*/*               DATA  EXTENT  BLOCK   (DEB)                      */   30150001
*/**                                                              **/   30200001
*/*                                                                */   30250001
*/**                    DEB  PREFIX                               **/   30300001
*                                                                       30310001
*     DECLARE 1  * BDY(DWORD,5) ,                                       30350001
*             /* DEBLNGTH - DEB LENGTH                             */   30450001
*             2  NPBNLNTH  CHAR(1) INIT('06'X) ,                        30460001
*             2  NPBNRSVD  PTR(24) INIT(0) , /* RESERVED           */   30500001
*                                                                       30510001
*/**               DEB  BASIC  SECTION                            **/   30550001
*                                                                       30560001
*             2  NIPDEBSN ,                                             30600001
*               3  NPBNDEB ,                                            30650001
*                 /* TCB ADDR - UNUSED                             */   30750001
*                 4 NPBNDEB1  PTR(31) INIT(0) ,                         30760001
*                 /* DEBAMLNG - ACSECT LENGTH                      */   30850001
*                 4 NPBNAMLN  CHAR(1) INIT('00'X) ,                     30860001
*                 4 NPBNDEB2  PTR(24) INIT(0) , /* 3 BYTES - UNUSED*/   30900001
*                 /* DEBOFLGS - DATA SET STATUS                    */   31000001
*                 4 NPBNOFLG  CHAR(1) INIT('00'X) BDY(WORD) ,           31010002
*                 /* FLAGS,ETC - UNUSED                            */   31100001
*                 4 NPBNDEB3  CHAR(7) INIT('00000000000000'X) ,         31110001
*                 /* DEBNMEXT - NO. OF EXTENTS                     */   31200001
*                 4 NPBNNMXT  CHAR(1) INIT('01'X) ,                     31210001
*                 /* IOB ADDRESS - UNUSED                          */   31300001
*                 4 NPBNDEB4  PTR(24) INIT(0) ,                         31310001
*                 /* DEBPRIOR -TASK PRIORITY                       */   31400001
*                 4 NPBNPRTY  CHAR(1) INIT('00'X) ,                     31410001
*                 /* ECB ADDRESS - UNUSED                          */   31500001
*                 4 NPBNDEB5  PTR(24) INIT(0) ,                         31510001
*                 /* DEBPROTG,DEBDEBID                             */   31600001
*                 4 NPBNKYID  CHAR(1) INIT('0F'X) ,                     31610001
*                 /* DEBDCBAD - DCB ADDRESS                        */   31700001
*                 4 NPBNDCBA  PTR(24) INIT(ADDR(NPBNDCB1)-40) ,         31710001
*                 /* DEBEXSCL - EXTENT SCALE                       */   31800001
*                 4 NPBNXSCL  CHAR(1) INIT('00'X) ,                     31810001
*                 /* DEBAPPAD - APPENDAGE ADDRESS                  */   31900001
*                 4 NPBNAPAD  PTR(24) INIT(0) ,                         31910001
*                                                                       31920001
*/**            DIRECT - ACCESS STORAGE DEVICE SECTION            **/   31950001
*                                                                       31960001
*                 /* DEBDVMOD - FILE MASK                          */   32050001
*                 4 NPBNDVMD  CHAR(1) INIT('18'X) ,                     32060001
*                 /* DEBUCBAD - UCB ADDRESS                        */   32150001
*                 4 NPBNUCBA  PTR(24) INIT(0) ,                         32160001
*                 /* DEBBINUM - BIN NUMBER                         */   32250001
*                 4 NPBNBINM  CHAR(2) INIT('0000'X) ,                   32260001
*                 /* DEBSTRCC - START CYLINDER                     */   32350001
*                 4 NPBNSTCC  CHAR(2) INIT('0000'X) ,                   32360001
*                 /* DEBSTRHH - START TRACK                        */   32450001
*                 4 NPBNSTHH  CHAR(2) INIT('0000'X) ,                   32460001
*                 /* DEBENDCC - END CYLINDER                       */   32550001
*                 4 NPBNNDCC  CHAR(2) INIT('FFFF'X) ,                   32560001
*                 /* DEBENDHH - END TRACK                          */   32650001
*                 4 NPBNNDHH  CHAR(2) INIT('FFFF'X) ,                   32660001
*                 /* DEBNMTRK - NUMBER OF TRACKS                   */   32750001
*                 4 NPBNNTRK FIXED(15) INIT('7FFF'X) ,                  32760001
*/**                                                              **/   32800001
*/*                DATA  CONTROL  BLOCK   (DCB)                    */   32850001
*/**                                                              **/   32900001
*                 4 NPBNDCB1 ,                                          32910001
*                   /* DCBMACRF - MACRO TYPE                       */   33000001
*                   5 NPBNMACR  CHAR(4) INIT('00008000'X) BDY(WORD) ,   33010002
*                   /* DCBIFLGS - FLAGS FOR IOS                    */   33100001
*                   5 NPBNIFGS  CHAR(1) INIT('00'X) ,                   33110001
*                   /* DCBDEBAD - DEB ADDRESS                      */   33200001
*                   5 NPBNDEBA  PTR(24) INIT(ADDR(NPBNDEB)) ,           33210001
*                   /* DCBOFLGS - FLAGS FOR OPEN                   */   33300001
*                   5 NPBNOFGS  CHAR(4) INIT('12000000'X) ;             33310001
*                                                                       33320001
*/*              DATA CONTROL BLOCK BASE                           */   33330001
*     DECLARE 1  NIPDCBSN DEFINED(NPBNOFLG) ,                           33350001
*               2  NPBNDCB ;                                            33400001
*                                                                       33450001
*%NPBNUCX: ;                                                            33500001
*     %IF  NPBIOB ¬= 'YES'                                              33550001
*       %THEN                                                           33600001
*         %GOTO NPBIOBX ;                                               33650001
*/******************************************************************/   33700001
*/*                                                                */   33750001
*/*              NIP  CONTROL  BLOCKS  FOR  I/O                    */   33800001
*/*                                                                */   33850001
*/******************************************************************/   33900001
*/*                                                                */   33950001
*/**                                                              **/   34000001
*/*               INPUT/OUTPUT  BLOCK   (IOB)                      */   34050001
*/**                                                              **/   34100001
*       DECLARE  1 * ,                                                  34150001
*                  2 NPBNIOBF  CHAR(4) ,    /* IOB PREFIX BYTES    */   34200001
*                    /* BYTE 0 - MAX RETRY                         */   34300001
*                    3 NPBNIFB0  PTR(8) INIT(0) ,                       34310001
*                    3 NPBNIFB1  CHAR(1) INIT('00'X) , /* BYTE 1 : */   34350001
*                      4 NIPDSTAT  BIT(1) , /*   DEVICE STATUS     */   34450001
*                      4 NIPDFEST  BIT(1) , /*   FEATURE TEST      */   34500001
*                      4 NIPDRTY   BIT(1) , /*   RETRY OPTION      */   34520001
*                      4 NIPDERR   BIT(1) , /*   REPORT ERRORS     */   34530001
*                      4 NIPDMOD   BIT(1) , /*   TAPE MODE REQUIRED*/   34540001
*                      4 *         BIT(3) , /*   RESERVED          */   34550001
*                    3 NPBNIFB2  CHAR(1) INIT('00'X) , /* BYTE 2   */   34600001
*                    3 NPBNIFB3  CHAR(1) INIT('00'X) , /* BYTE 3 : */   34700001
*                      4 NIPDUNAV  BIT(1) , /*   UNAVAILABLE       */   34800001
*                      4 NIPDCREJ  BIT(1) , /*   COMMAND REJECT    */   34850001
*                      4 NIPDOFFL  BIT(1) , /*   OFF-LINE          */   34900001
*                      4 *         BIT(5) , /*   RESERVED          */   34950001
*                  2 NIPIOBSN ,                                         35000001
*                    3  NPBNIOB ,                                       35050001
*                      /* FLAG AND SENSE BYTES                     */   35150001
*                      4 NPBNFGSN  CHAR(4) INIT('42000000'X) ,          35160001
*                      /* IOBECBPT - ECB ADDRESS                   */   35170001
* % IF NPBECB ¬= 'YES'                                                  35200001
*   % THEN                                                              35250001
*     %  GOTO NPBECBNA ;                                                35300001
*                      4 NPBNECBA  PTR(31) INIT(ADDR(NPBNECB)) ,        35350001
* % GOTO NPBECBYA ;                                                     35400001
* %NPBECBNA:;                                                           35450001
*                      4 NPBNECBA  PTR(31) INIT(0) ,                    35500001
* %NPBECBYA:;                                                           35550001
*                      /* FLAGS AND CSW IMAGE                      */   35700001
*                      4 NPBNIOB1  CHAR(8) INIT('0000000000000000'X) ,  35710001
*                      /* IOBSTART - CHANNEL PROGRAM ADDRESS       */   35800001
*                      4 NPBNCPAD  PTR(31) INIT(0) ,                    35810001
*                      /* IOBDCBPT - DCB ADDRESS                   */   35820001
* % IF NPBDCB ¬= 'YES'                                                  35850001
*   % THEN                                                              35900001
*     % GOTO NPBDCBNA ;                                                 35950001
*                      4 NPBNDCBP  PTR(31) INIT(ADDR(NPBNDCB1)-40) ,    36000001
* %GOTO NPBDCBYA ;                                                      36050001
* %NPBDCBNA:;                                                           36100001
*                      4 NPBNDCBP  PTR(31) INIT(0) ,                    36150001
* %NPBDCBYA:;                                                           36200001
*                      /*    REST OF IOB COMMON                    */   36310001
*                      4 NPBNREST  CHAR(8) INIT('0000000000000000'X) ,  36312001
*                                                                       36314001
*/**                       DASD  EXTENSION                        **/   36320001
*                                                                       36322001
*                      /* IOBSEEK - MBBCCHHR                       */   36340001
*                      4 NPBNSEEK  CHAR(8) INIT('0000000000000000'X) ;  36340401
* %NPBIOBX:;                                                            36342001
* % IF NPBECB ¬= 'YES'                                                  36344001
*   % THEN                                                              36346001
*     % GOTO NPBECBX ;                                                  36348001
*/**                                                              **/   36350001
*/*               EVENT  CONTROL  BLOCK   (ECB)                    */   36400001
*/**                                                              **/   36450001
*     DECLARE 1  NIPECBSN ,                                             36500001
*             2  NPBNECB ,                                              36550001
*               /* EVENT COMPLETION CODE                           */   36650001
*               3 NPBNCPCD  CHAR(1) INIT('00'X),                        36660001
*               /* RB ADDRESS OR REST OF COMPLETION CODE           */   36750001
*               3 NPBNRBAD  PTR(24) INIT(0) ;                           36752001
* %NPBECBX:;                                                            36760001
* % IF NPBDEB ¬= 'YES'                                                  36770001
*   % THEN                                                              36780001
*     % GOTO NPBDEBX ;                                                  36790001
*/**                                                              **/   37400001
*/*               DATA  EXTENT  BLOCK   (DEB)                      */   37450001
*/**                                                              **/   37500001
*/*                                                                */   37550001
*/**                    DEB  PREFIX                               **/   37600001
*                                                                       37610001
*     DECLARE 1  * BDY(DWORD,5) ,                                       37650001
*              /* DEBLNGTH - DEB LENGTH                            */   37750001
*              2 NPBNLNTH  CHAR(1) INIT('06'X) ,                        37760001
*              2 NPBNRSVD  PTR(24) INIT(0) , /* RESERVED           */   37800001
*                                                                       37810001
*/**               DEB  BASIC  SECTION                            **/   37850001
*                                                                       37860001
*              2 NIPDEBSN ,                                             37900001
*               3  NPBNDEB ,                                            37950001
*                 /* TCB ADDRESS - UNINITIALIZED                   */   38050001
*                 4 NPBNDEB1  PTR(31) INIT(0) ,                         38060001
*                 /* DEBAMLNG - ACCESS METHOD SECTION LENGTH       */   38150001
*                 4 NPBNAMLN  CHAR(1) INIT('00'X) ,                     38160001
*                 4 NPBNDEB2  PTR(24) INIT(0) , /* 3 BYTES - UNUSED*/   38200001
*                 /* DEBOFLGS - DATA SET STATUS                    */   38300001
*                 4 NPBNOFLG  CHAR(1) INIT('00'X) BDY(WORD) ,           38310002
*                 /* FLAGS,ETC - UNINITIALIZED                     */   38400001
*                 4 NPBNDEB3  CHAR(7) INIT('00000000000000'X) ,         38410001
*                 /* DEBNMEXT - NUMBER OF EXTENTS                  */   38500001
*                 4 NPBNNMXT  CHAR(1) INIT('01'X) ,                     38510001
*                 /* IOB ADDRESS - UNINITIALIZED                   */   38600001
*                 4 NPBNDEB4  PTR(24) INIT(0) ,                         38610001
*                 /* DEBPRIOR - TASK PRIORITY                      */   38700001
*                 4 NPBNPRTY  CHAR(1) INIT('00'X) ,                     38710001
*                 /* AN ECB ADDRESS - UNINITIALIZED                */   38800001
*                 4 NPBNDEB5  PTR(24) INIT(0) ,                         38810001
*                 /* DEBPROTG,DEBDEBID                             */   38900001
*                 4 NPBNKYID  CHAR(1) INIT('0F'X) ,                     38902001
*                 /* DEBDCBAD - DCB ADDRESS                        */   38904001
* % IF NPBDCB ¬= 'YES'                                                  38910001
*   % THEN                                                              38920001
*     % GOTO NPBDCBN1 ;                                                 38930001
*                 4 NPBNDCBA  PTR(24) INIT(ADDR(NPBNDCB1)-40) ,         38950001
* % GOTO NPBDCBY1 ;                                                     38960001
* %NPBDCBN1:;                                                           38970001
*                 4 NPBNDCBA  PTR(24) INIT(0) ,                         38972001
* %NPBDCBY1:;                                                           38980001
*                 /* DEBEXSCL - EXTENT SCALE                       */   39100001
*                 4 NPBNXSCL  CHAR(1) INIT('00'X) ,                     39110001
*                 /* DEBAPPAD - APPENDAGE ADDRESS                  */   39200001
*                 4 NPBNAPAD  PTR(24) INIT(0) ,                         39210001
*                                                                       39220001
*/**            DIRECT - ACCESS STORAGE DEVICE SECTION            **/   39250001
*                                                                       39252001
* % IF DEB16 ¬= 'YES'                                                   39260001
*   % THEN                                                              39270001
*     % GOTO NPBDEB1 ;                                                  39280001
*                 /* 16 DASD EXTENTS                               */   39284001
*                 4 *    (64) FIXED(31) INIT((64)0) ;                   39284401
*% GOTO NPBDEBX ;                                                       39286001
*%NPBDEB1: ;                                                            39290001
*                 /* DEBDVMOD - FILE MASK                          */   39350001
*                 4 NPBNDVMD  CHAR(1) INIT('18'X) ,                     39360001
*                 /* DEBUCBAD - UCB ADDRESS                        */   39450001
*                 4 NPBNUCBA  PTR(24) INIT(0) ,                         39460001
*                 /* DEBBINUM - BIN NUMBER                         */   39550001
*                 4 NPBNBINM  CHAR(2) INIT('0000'X) ,                   39560001
*                 /* DEBSTRCC - START CYL                          */   39650001
*                 4 NPBNSTCC  CHAR(2) INIT('0000'X) ,                   39660001
*                 /* DEBSTRHH - START TRACK                        */   39750001
*                 4 NPBNSTHH  CHAR(2) INIT('0000'X) ,                   39760001
*                 /* DEBENDCC - END CYL                            */   39850001
*                 4 NPBNNDCC  CHAR(2) INIT('FFFF'X) ,                   39860001
*                 /* DEBENDHH - END TRACK                          */   39950001
*                 4 NPBNNDHH  CHAR(2) INIT('FFFF'X) ,                   39960001
*                 /* DEBNMTRK - NUMBER OF TRACKS                   */   40050001
*                 4 NPBNNTRK FIXED(15) INIT('7FFF'X) ;                  40052001
* %NPBDEBX:;                                                            40060001
* % IF NPBDCB ¬= 'YES'                                                  40070001
*   % THEN                                                              40080001
*     % GOTO NPBDCBX ;                                                  40090001
*/**                                                              **/   40100001
*/*                DATA  CONTROL  BLOCK   (DCB)                    */   40150001
*/**                                                              **/   40200001
*     DECLARE 1 * ,                                                     40210001
*               2 NPBNDCB1 ,                                            40220001
*                 /* DCBMACRF - MACRO TYPE                         */   40300001
*                 4 NPBNMACR  CHAR(4) INIT('00008000'X) BDY(WORD) ,     40310002
*                 /* DCBIFLGS - FLAGS FOR IOS                      */   40400001
*                 4 NPBNIFGS  CHAR(1) INIT('00'X) ,                     40402001
*                 /* DCBDEBAD - DEB ADDRESS                        */   40404001
* % IF NPBDEB ¬= 'YES'                                                  40410001
*   % THEN                                                              40420001
*     % GOTO NPBDEBNA ;                                                 40430001
*                 4 NPBNDEBA  PTR(24) INIT(ADDR(NPBNDEB)) ,             40450001
* % GOTO NPBDEBYA ;                                                     40460001
* %NPBDEBNA:;                                                           40470001
*                 4 NPBNDEBA  PTR(24) INIT(0) ,                         40472001
* %NPBDEBYA:;                                                           40480001
*                 /* DCBOFLGS - FLAGS FOR OPEN                     */   40600001
*                 4 NPBNOFGS  CHAR(4) INIT('12000000'X) ;               40610001
*                                                                       40620001
*/*                     DATA CONTROL BLOCK BASE                    */   40630001
*     DECLARE 1  NIPDCBSN BASED(ADDR(NPBNMACR) - 40) ,                  40650001
*             2  NPBNDCB ;                                              40700001
*                                                                       40750001
*%NPBDCBX: ;                                                            40800001
*     %IF  INC ¬= 'YES'                                                 43650001
*       %THEN                                                           43700001
*         %GOTO NPBOUTC ;                                               43750001
*/******************************************************************/   43800001
*/*                                                                */   43850001
*/*               BLOCKS  FOR  INPUT  CONSOLE                      */   43900001
*/*                                                                */   43950001
*/******************************************************************/   44000001
*/*                                                                */   44050001
*/**                                                              **/   44100001
*/*               INPUT/OUTPUT  BLOCK   (IOB)                      */   44150001
*/**                                                              **/   44200001
*       DECLARE  1 * ,                                                  44250001
*                  2 NPBIIOBF  CHAR(4) ,                                44300001
*                    3 NPBIRSV1  CHAR(2) INIT('0000'X) ,                44350001
*                                       /* RESERVED BYTES          */   44400001
*                    3 NPBIIFB1  CHAR(1) INIT('00'X) ,                  44450001
*                                       /* IOB PREFIX FLAG BYTE 1  */   44500001
*                    3 NPBIIFB2  CHAR(1) INIT('00'X) ,                  44550001
*                                       /* IOB PREFIX FLAG BYTE 2  */   44600001
*                  2 NIPIOBIC ,                                         44650001
*                    3  NPBIIOB ,                                       44700001
*                      4 NPBIFGSN  CHAR(4) INIT('42000000'X) ,          44750001
*                                       /* FLAG AND SENSE BYTES    */   44800001
*                      4 NPBIECBA  PTR(31) INIT(ADDR(NPBIECB)) ,        44850001
*                                       /* IOBECBPT - ECB ADDRESS  */   44900001
*                      4 NPBIIOB1  CHAR(8) INIT('0000000000000000'X) ,  44950001
*                                       /* FLAGS AND CSW IMAGE     */   45000001
*                      4 NPBICPAD  PTR(31) INIT(0) ,                    45050001
*                                       /* IOBSTART -CHAN PROG ADDR*/   45100001
*                      4 NPBIDCBP  PTR(31) INIT(ADDR(NPBIDCB1)-40) ,    45150001
*                                       /* IOBDCBPT - DCB ADDRESS  */   45200001
*                      4 NPBIREST  CHAR(8) INIT('0000000000000000'X) ;  45250001
*/**                                                              **/   45300001
*/*               EVENT  CONTROL  BLOCK   (ECB)                    */   45350001
*/**                                                              **/   45400001
*     DECLARE 1  NIPECBIC ,                                             45450001
*             2  NPBIECB ,                                              45500001
*               3 NPBICPCD  CHAR(1) INIT('00'X),                        45550001
*                                       /* EVENT COMPLETION CODE   */   45600001
*               3 NPBIRBAD  PTR(24) INIT(0) ;                           45650001
*                                       /* RB ADDR OR REST OF C.C. */   45700001
*/**                                                              **/   45750001
*/*               DATA  EXTENT  BLOCK   (DEB)                      */   45800001
*/**                                                              **/   45850001
*/*                                                                */   45900001
*/**                    DEB  PREFIX                               **/   45950001
*     DECLARE 1  * BDY(DWORD,5) ,                                       46000001
*             2  NPBILNTH  CHAR(1) INIT('06'X) BDY(WORD) ,              46050002
*                                       /* DEBLNGTH - DEB LENGTH   */   46100001
*             2  NPBIRSVD  PTR(24) INIT(0) ,                            46150001
*                                       /* RESERVED                */   46200001
*/**               DEB  BASIC  SECTION                            **/   46250001
*             2  NIPDEBIC ,                                             46300001
*               3  NPBIDEB ,                                            46350001
*                 4 NPBIDEB1  PTR(31) INIT(0) ,                         46400001
*                                       /* TCB ADDR - UNUSED       */   46450001
*                 4 NPBIAMLN  CHAR(1) INIT('00'X) ,                     46500001
*                                       /* DEBAMLNG - ACSECT LENGTH*/   46550001
*                 4 NPBIDEB2  PTR(24) INIT(0) ,                         46600001
*                 4 NPBIOFLG  CHAR(1) INIT('00'X) ,                     46650001
*                                       /* DEBOFLGS - D.S. STATUS  */   46700001
*                 4 NPBIDEB3  CHAR(7) INIT('00000000000000'X) ,         46750001
*                                       /* FLAGS,ETC - UNUSED      */   46800001
*                 4 NPBINMXT  CHAR(1) INIT('00'X) ,                     46850001
*                                       /* DEBNMEXT -NO.OF EXTENTS */   46900001
*                 4 NPBIDEB4  PTR(24) INIT(0) ,                         46950001
*                                       /* IOB ADDRESS - UNUSED    */   47000001
*                 4 NPBIPRTY  CHAR(1) INIT('00'X) ,                     47050001
*                                       /* DEBPRIOR -TASK PRIORITY */   47100001
*                 4 NPBIDEB5  PTR(24) INIT(0) ,                         47150001
*                                       /* AN ECB ADDR - UNUSED    */   47200001
*                 4 NPBIKYID  CHAR(1) INIT('0F'X) ,                     47250001
*                                       /* DEBPROTG,DEBDEBID       */   47300001
*                 4 NPBIDCBA  PTR(24) INIT(ADDR(NPBIDCB1)-40) ,         47350001
*                                       /* DEBDCBAD - DCB ADDRESS  */   47400001
*                 4 NPBIXSCL  CHAR(1) INIT('00'X) ,                     47450001
*                                       /* DEBEXSCL - EXTENT SCALE */   47500001
*                 4 NPBIAPAD  PTR(24) INIT(0) ,                         47550001
*                                       /* DEBAPPAD -APPENDAGE ADDR*/   47600001
*/**                  UNIT RECORD DEVICE SECTION                  **/   47650001
*                 4 NPBIDVMD  CHAR(1) INIT('00'X) ,                     47700001
*                                       /* DEBDVMOD - FILE MASK    */   47750001
*                 4 NPBIUCBA  PTR(24) INIT(0) ,                         47800001
*                                       /* DEBUCBAD - UCB ADDRESS  */   47850001
*/**                                                              **/   48700001
*/*                DATA  CONTROL  BLOCK   (DCB)                    */   48750001
*/**                                                              **/   48800001
*                 4 NPBIDCB1 ,                                          48850001
*                   5 NPBIMACR  CHAR(4) INIT('00008000'X) ,             48900001
*                                       /* DCBMACRF - MACRO TYPE   */   48950001
*                   5 NPBIIFGS  CHAR(1) INIT('0C'X) ,                   49000001
*                                       /* DCBIFLGS - FOR IOS      */   49050001
*                   5 NPBIDEBA  PTR(24) INIT(ADDR(NPBIDEB)) ,           49250001
*                                       /* DCBDEBAD - DEB ADDRESS  */   49500001
*                   5 NPBIOFGS  CHAR(4) INIT('12000000'X) ;             49550001
*                                       /* DCBOFLGS - FOR OPEN     */   49600001
*     DECLARE 1  NIPDCBIC DEFINED(NPBILNTH) ,                           49650001
*             2  NPBIDCB ;                                              49700001
*                                                                       49750001
*%NPBOUTC: ;                                                            49800001
*     %IF  OUTC ¬= 'YES'                                                49850001
*       %THEN                                                           49900001
*         %GOTO NPBTSTC ;                                               49950001
*/******************************************************************/   50000001
*/*                                                                */   50050001
*/*               BLOCKS  FOR  OUTPUT  CONSOLE                     */   50100001
*/*                                                                */   50150001
*/******************************************************************/   50200001
*/*                                                                */   50250001
*/**                                                              **/   50300001
*/*               INPUT/OUTPUT  BLOCK   (IOB)                      */   50350001
*/**                                                              **/   50400001
*       DECLARE  1 * ,                                                  50450001
*                  2 NPBOIOBF  CHAR(4) ,                                50500001
*                    3 NPBORSV1  CHAR(2) INIT('0000'X) ,                50550001
*                                       /* RESERVED BYTES          */   50600001
*                    3 NPBOIFB1  CHAR(1) INIT('00'X) ,                  50650001
*                                       /* IOB PREFIX FLAG BYTE 1  */   50700001
*                    3 NPBOIFB2  CHAR(1) INIT('00'X) ,                  50750001
*                                       /* IOB PREFIX FLAG BYTE 2  */   50800001
*                  2 NIPIOBOC ,                                         50850001
*                    3  NPBOIOB ,                                       50900001
*                      4 NPBOFGSN  CHAR(4) INIT('42000000'X) ,          50950001
*                                       /* FLAG AND SENSE BYTES    */   51000001
*                      4 NPBOECBA  PTR(31) INIT(ADDR(NPBOECB)) ,        51050001
*                                       /* IOBECBPT - ECB ADDRESS  */   51100001
*                      4 NPBOIOB1  CHAR(8) INIT('0000000000000000'X) ,  51150001
*                                       /* FLAGS AND CSW IMAGE     */   51200001
*                      4 NPBOCPAD  PTR(31) INIT(0) ,                    51250001
*                                       /* IOBSTART -CHAN PROG ADDR*/   51300001
*                      4 NPBODCBP  PTR(31) INIT(ADDR(NPBODCB1)-40) ,    51350001
*                                       /* IOBDCBPT - DCB ADDRESS  */   51400001
*                      4 NPBOREST  CHAR(8) INIT('0000000000000000'X) ;  51450001
*/**                                                              **/   51500001
*/*               EVENT  CONTROL  BLOCK   (ECB)                    */   51550001
*/**                                                              **/   51600001
*     DECLARE 1  NIPECBOC ,                                             51650001
*             2  NPBOECB ,                                              51700001
*               3 NPBOCPCD  CHAR(1) INIT('00'X),                        51750001
*                                       /* EVENT COMPLETION CODE   */   51800001
*               3 NPBORBAD  PTR(24) INIT(0) ;                           51850001
*                                       /* RB ADDR OR REST OF C.C. */   51900001
*/**                                                              **/   51950001
*/*               DATA  EXTENT  BLOCK   (DEB)                      */   52000001
*/**                                                              **/   52050001
*/*                                                                */   52100001
*/**                    DEB  PREFIX                               **/   52150001
*     DECLARE 1  * BDY(DWORD,5) ,                                       52200001
*             2  NPBOLNTH  CHAR(1) INIT('06'X) BDY(WORD) ,              52250002
*                                       /* DEBLNGTH - DEB LENGTH   */   52300001
*             2  NPBORSVD  PTR(24) INIT(0) ,                            52350001
*                                       /* RESERVED                */   52400001
*/**               DEB  BASIC  SECTION                            **/   52450001
*             2  NIPDEBOC ,                                             52500001
*               3  NPBODEB ,                                            52550001
*                 4 NPBODEB1  PTR(31) INIT(0) ,                         52600001
*                                       /* TCB ADDR - UNUSED       */   52650001
*                 4 NPBOAMLN  CHAR(1) INIT('00'X) ,                     52700001
*                                       /* DEBAMLNG - ACSECT LENGTH*/   52750001
*                 4 NPBODEB2  PTR(24) INIT(0) ,                         52800001
*                 4 NPBOOFLG  CHAR(1) INIT('00'X) ,                     52850001
*                                       /* DEBOFLGS - D.S. STATUS  */   52900001
*                 4 NPBODEB3  CHAR(7) INIT('00000000000000'X) ,         52950001
*                                       /* FLAGS,ETC - UNUSED      */   53000001
*                 4 NPBONMXT  CHAR(1) INIT('00'X) ,                     53050001
*                                       /* DEBNMEXT -NO.OF EXTENTS */   53100001
*                 4 NPBODEB4  PTR(24) INIT(0) ,                         53150001
*                                       /* IOB ADDRESS - UNUSED    */   53200001
*                 4 NPBOPRTY  CHAR(1) INIT('00'X) ,                     53250001
*                                       /* DEBPRIOR -TASK PRIORITY */   53300001
*                 4 NPBODEB5  PTR(24) INIT(0) ,                         53350001
*                                       /* AN ECB ADDR - UNUSED    */   53400001
*                 4 NPBOKYID  CHAR(1) INIT('0F'X) ,                     53450001
*                                       /* DEBPROTG,DEBDEBID       */   53500001
*                 4 NPBODCBA  PTR(24) INIT(ADDR(NPBODCB1)-40) ,         53550001
*                                       /* DEBDCBAD - DCB ADDRESS  */   53600001
*                 4 NPBOXSCL  CHAR(1) INIT('00'X) ,                     53650001
*                                       /* DEBEXSCL - EXTENT SCALE */   53700001
*                 4 NPBOAPAD  PTR(24) INIT(0) ,                         53750001
*                                       /* DEBAPPAD -APPENDAGE ADDR*/   53800001
*/**                  UNIT RECORD DEVICE SECTION                  **/   53850001
*                 4 NPBODVMD  CHAR(1) INIT('00'X) ,                     53900001
*                                       /* DEBDVMOD - FILE MASK    */   53950001
*                 4 NPBOUCBA  PTR(24) INIT(0) ,                         54000001
*                                       /* DEBUCBAD - UCB ADDRESS  */   54050001
*/**                                                              **/   54100001
*/*                DATA  CONTROL  BLOCK   (DCB)                    */   54150001
*/**                                                              **/   54200001
*                 4 NPBODCB1 ,                                          54210001
*                   5 NPBOMACR  CHAR(4) INIT('00008000'X) ,             54250001
*                                       /* DCBMACRF - MACRO TYPE   */   54300001
*                   5 NPBOIFGS  CHAR(1) INIT('0C'X) ,                   54350001
*                                       /* DCBIFLGS - FOR IOS      */   54400001
*                   5 NPBODEBA  PTR(24) INIT(ADDR(NPBODEB)) ,           54450001
*                                       /* DCBDEBAD - DEB ADDRESS  */   54500001
*                   5 NPBOOFGS  CHAR(4) INIT('12000000'X) ;             54550001
*                                       /* DCBOFLGS - FOR OPEN     */   54600001
*     DECLARE 1  NIPDCBOC DEFINED(NPBOLNTH) ,                           54650001
*             2  NPBODCB ;                                              54700001
*                                                                       54750001
*%NPBTSTC: ;                                                            54800001
*     %IF  TESTC ¬= 'YES'                                               54850001
*       %THEN                                                           54900001
*         %GOTO NPBEND ;                                                54950001
*/******************************************************************/   55000001
*/*                                                                */   55050001
*/*               BLOCKS  FOR  CONSOLE  TESTING                    */   55100001
*/*                                                                */   55150001
*/******************************************************************/   55200001
*/*                                                                */   55250001
*/**                                                              **/   55300001
*/*               INPUT/OUTPUT  BLOCK   (IOB)                      */   55350001
*/**                                                              **/   55400001
*       DECLARE  1 * ,                                                  55450001
*                  2 NIPIOBTC ,                                         55850001
*                    3  NPBTIOB ,                                       55900001
*                      4 NPBTFGSN  CHAR(4) INIT('42000000'X) ,          55950001
*                                       /* FLAG AND SENSE BYTES    */   56000001
*                      4 NPBTECBA  PTR(31) INIT(ADDR(NPBTECB)) ,        56050001
*                                       /* IOBECBPT - ECB ADDRESS  */   56100001
*                      4 NPBTIOB1  CHAR(8) INIT('0000000000000000'X) ,  56150001
*                                       /* FLAGS AND CSW IMAGE     */   56200001
*                      4 NPBTCPAD  PTR(31) INIT(0) ,                    56250001
*                                       /* IOBSTART -CHAN PROG ADDR*/   56300001
*                      4 NPBTDCBP  PTR(31) INIT(ADDR(NPBTDCB1)-40) ,    56350001
*                                       /* IOBDCBPT - DCB ADDRESS  */   56400001
*                      4 NPBTREST  CHAR(8) INIT('0000000000000000'X) ;  56450001
*/**                                                              **/   56500001
*/*               EVENT  CONTROL  BLOCK   (ECB)                    */   56550001
*/**                                                              **/   56600001
*     DECLARE 1  NIPECBTC ,                                             56650001
*             2  NPBTECB ,                                              56700001
*               3 NPBTCPCD  CHAR(1) INIT('00'X),                        56750001
*                                       /* EVENT COMPLETION CODE   */   56800001
*               3 NPBTRBAD  PTR(24) INIT(0) ;                           56850001
*                                       /* RB ADDR OR REST OF C.C. */   56900001
*/**                                                              **/   56950001
*/*               DATA  EXTENT  BLOCK   (DEB)                      */   57000001
*/**                                                              **/   57050001
*/*                                                                */   57100001
*/**                    DEB  PREFIX                               **/   57150001
*     DECLARE 1  * BDY(DWORD,5) ,                                       57200001
*             2  NPBTLNTH  CHAR(1) INIT('06'X) BDY(WORD) ,              57250002
*                                       /* DEBLNGTH - DEB LENGTH   */   57300001
*             2  NPBTRSVD  PTR(24) INIT(0) ,                            57350001
*                                       /* RESERVED                */   57400001
*/**               DEB  BASIC  SECTION                            **/   57450001
*             2  NIPDEBTC ,                                             57500001
*               3  NPBTDEB ,                                            57550001
*                 4 NPBTDEB1  PTR(31) INIT(0) ,                         57600001
*                                       /* TCB ADDR - UNUSED       */   57650001
*                 4 NPBTAMLN  CHAR(1) INIT('00'X) ,                     57700001
*                                       /* DEBAMLNG - ACSECT LENGTH*/   57750001
*                 4 NPBTDEB2  PTR(24) INIT(0) ,                         57800001
*                 4 NPBTOFLG  CHAR(1) INIT('00'X) ,                     57850001
*                                       /* DEBOFLGS - D.S. STATUS  */   57900001
*                 4 NPBTDEB3  CHAR(7) INIT('00000000000000'X) ,         57950001
*                                       /* FLAGS,ETC - UNUSED      */   58000001
*                 4 NPBTNMXT  CHAR(1) INIT('00'X) ,                     58050001
*                                       /* DEBNMEXT -NO.OF EXTENTS */   58100001
*                 4 NPBTDEB4  PTR(24) INIT(0) ,                         58150001
*                                       /* IOB ADDRESS - UNUSED    */   58200001
*                 4 NPBTPRTY  CHAR(1) INIT('00'X) ,                     58250001
*                                       /* DEBPRIOR -TASK PRIORITY */   58300001
*                 4 NPBTDEB5  PTR(24) INIT(0) ,                         58350001
*                                       /* AN ECB ADDR - UNUSED    */   58400001
*                 4 NPBTKYID  CHAR(1) INIT('0F'X) ,                     58450001
*                                       /* DEBPROTG,DEBDEBID       */   58500001
*                 4 NPBTDCBA  PTR(24) INIT(ADDR(NPBTDCB1)-40) ,         58550001
*                                       /* DEBDCBAD - DCB ADDRESS  */   58600001
*                 4 NPBTXSCL  CHAR(1) INIT('00'X) ,                     58650001
*                                       /* DEBEXSCL - EXTENT SCALE */   58700001
*                 4 NPBTAPAD  PTR(24) INIT(0) ,                         58750001
*                                       /* DEBAPPAD -APPENDAGE ADDR*/   58800001
*/**                  UNIT RECORD DEVICE SECTION                  **/   58850001
*                 4 NPBTDVMD  CHAR(1) INIT('00'X) ,                     58900001
*                                       /* DEBDVMOD - FILE MASK    */   58950001
*                 4 NPBTUCBA  PTR(24) INIT(0) ,                         59000001
*                                       /* DEBUCBAD - UCB ADDRESS  */   59050001
*/**                                                              **/   59100001
*/*                DATA  CONTROL  BLOCK   (DCB)                    */   59150001
*/**                                                              **/   59200001
*                 4 NPBTDCB1 ,                                          59210001
*                   5 NPBTMACR  CHAR(4) INIT('00008000'X) ,             59250001
*                                       /* DCBMACRF - MACRO TYPE   */   59300001
*                   5 NPBTIFGS  CHAR(1) INIT('0C'X) ,                   59350001
*                                       /* DCBIFLGS - FOR IOS      */   59400001
*                   5 NPBTDEBA  PTR(24) INIT(ADDR(NPBTDEB)) ,           59450001
*                                       /* DCBDEBAD - DEB ADDRESS  */   59500001
*                   5 NPBTOFGS  CHAR(4) INIT('12000000'X) ;             59550001
*                                       /* DCBOFLGS - FOR OPEN     */   59600001
*     DECLARE 1  NIPDCBTC DEFINED(NPBTLNTH) ,                           59650001
*             2  NPBTDCB ;                                              59700001
*                                                                       59750001
*%NPBEND: ;                                                             59800001
./  ADD  SSI=23422251,NAME=IEAPXNIP
* %GOTO XNPBSL ;                                     /*                 00050001
         MACRO                                                          00100001
         IEAPXNIP  &TRACE=NOMAP,&IPLDATA=NOMAP,&SYSGEN=(NO,DUM1,DUM2)   00150001
         AIF   ('&TRACE' NE 'MAP').XNPTRCX                              00200001
*                                                                       00250001
***  SYSTEM TRACE HEADER                                                00300001
TRHDR    DSECT                                                          00350001
TRPTR    DS    F                   - NEXT ENTRY ADDRESS                 00400001
TRBEG    DS    F                   - FIRST ENTRY ADDRESS                00450001
TREND    DS    F                   - END OF TABLE ADDRESS               00500001
TRSIZE   DS    0F                  - SIZE OF AREA USED FOR TRACE FUNCT  00510002
TRSBPOOL DS    XL1                  - SUBPOOL CONTAINING TRACE TABLE    00520002
TRLEN    DS    XL3                 - LENGTH OF TOTAL TRACE ARE AND HDR  00530002
TRSIZ    EQU   32                  - TRACE TABLE ENTRY SIZE             00550001
.XNPTRCX AIF   ('&IPLDATA' NE 'MAP').XNPIPLX                            00600001
*                                                                       00650001
***  IPLDATA - IPL PARAMETER AREA                                       00700001
IPLDATA  DSECT                                                          00750001
IPLDVSER DS    6C                  IPL UNIT - VOLUME SERIAL             00800001
IPLDVTOC DS    5C                           - VTOC CCHHR                00850001
IPLDNUCM DS    C                   NUCLEUS MEMBER ID                    00900001
IPLDNUCS DS    F                   SYS1.NUCLEUS DS - START CCHH         00950001
IPLDNUCE DS    F                                   - END CCHH           01000001
.XNPIPLX AIF   ('&SYSGEN(1)' EQ 'NO').XNPGENX                           01050001
*                                                                       01100001
***  SYSGEN PARAMETER LIST                                              01150001
         DC    H'0'                *  RESERVED  *                       01200001
NIPTRACE DC    H'&SYSGEN(1)'       NO. OF TRACE TABLE ENTRIES           01250001
.XNPGENX ANOP                                                           01300001
         MEND                      */                                   01350001
*%XNPBSL: ;                                                             01400001
*                                                                       01450001
*/*****    SYSTEM TRACE HEADER     *****/                               01500001
*  DECLARE 1 TRHDR BASED,                                               01550001
*        2 TRPTR FIXED(31),        /* NEXT ENTRY ADDRESS             */ 01600001
*        2 TRBEG FIXED(31),        /* FIRST ENTRY ADDRESS            */ 01650001
*        2 TREND FIXED(31),        /* END OF TABLE ADDRESS           */ 01700002
*        2 TRSIZE FIXED(31),       /* SIZE OF AREA ALLOCATED TO TRACE*/ 01710002
*          3 TRSBPOOL PTR(8),      /* SUBPOOL CONTAINING TRACE TABLE */ 01720002
*          3 TRLEN    PTR(24);     /* LENGTH OF TRACE TABLE AND HDR  */ 01730002
* %DECLARE TRSIZ CHAR ;                                                 01750001
* %TRSIZ = '''20''X' ;             /* TRACE TABLE ENTRY SIZE         */ 01800001
*                                                                       01850001
*/*****    IPLDATA - IPL PARAMETER AREA  *****/                         01900001
*  DECLARE 1 IPLDATA BASED,                                             01950001
*        2 IPLDVSER CHAR(6),       /* IPL UNIT - VOLUME SERIAL       */ 02000001
*        2 IPLDVTOC CHAR(5),       /*          - VTOC CCHHR          */ 02050001
*        2 IPLDNUCM CHAR(1),       /* NUCLEUS MEMBER ID              */ 02100001
*        2 IPLDNUCS FIXED(31),     /* SYS1.NUCLEUS DS - START CCHH   */ 02150001
*        2 IPLDNUCE FIXED(31);     /*                 - END CCHH     */ 02200001
*                                                                       02250001
*/*****    SYSGEN PARAMETER LIST   *****/                               02300001
*  DECLARE 1 GENLIST BASED(ADDR(TCBGRS)),                               02350001
*        2 *        FIXED(15),     /* * RESERVED *                   */ 02400001
*        2 NIPTRACE FIXED(15);     /* NO. OF TRACE TABLE ENTRIES     */ 02450001
./  ADD  SSI=71530074,NAME=IEARCTD
*% GO TO PLSRCTDA; /*                                                   01000002
         MACRO                                                          02000000
         IEARCTD &DSECT=YES                                             03000000
         AIF ('&DSECT' EQ 'NO').RCTD10                                  04000000
RCTD     DSECT                                                          05000000
         AGO   .RCTD20                                                  06000000
.RCTD10  ANOP                                                           07000000
RCTD     EQU   *                                                        08000000
.RCTD20  ANOP                                                           09000000
RCTDBEGN DS    0D                        BEGINING OF RCTD               09050002
.*/ %PLSRCTDA:;                                                         09060002
*/********************************************************************/ 09070002
*/*                                                                  */ 09080002
*/*      MACMEAN               REGION CONTROL TASK DATA AREA         */ 09090002
*/*                                                                  */ 09094002
*/*      MACCOMP     Y1                  SC1CU / PZD81               */ 09096002
*/*                                                                  */ 09098002
*/*      MACSTAT     Y1                  73164 / Y02752              */ 09098402
*/*                                                                  */ 09098802
*/********************************************************************/ 09099202
*   %GO TO PLSRCTD; /*                                                  09099602
RCTDISAV DS    18F                       INTERNAL SAVE AREA             09100002
RCTDTCBD DS    A                         ADDRESS OF DUMP TCB            09150002
RCTDTCBS DS    A                         ADDRESS OF STC TCB             09200002
RCTDWORK DS    0F                        WORK AREA                      09250002
RCTDLMAC DS    0F                        LIST FORM MACROS               09260002
RCTDCLRL DS    0F                        CLEAR WORK AREA                09270002
RCTDTIME DS    0F                        CURRENT TIME                   09280002
RCTDTMLH DS    F                         LEFT HALF USED FOR             09290002
         DS    F                         CALCULATIONS                   09292002
RCTDPRG  DS    8F                        PURGE PARAMETER LIST           09294002
         DS    8F                                                       09296002
RCTDRES2 DS    H                         RESERVED FOR FUTURE USE        09296303
*                                                              @ZA08100 09296603
RCTDCLST DS    H                         COUNTER FOR ATTN STMT'S        09298003
*                                        IN NESTED CLISTS      @ZA08100 09299003
RCTDECBS DS    0F                        ECB LIST                       09400002
RCTDTPTR DS    A                         POINTER TO RCTDTECB            09450002
RCTDWPTR DS    A                         POINTER TO ASCBECB             09500002
RCTDECBE EQU   X'80'                     LAST ECB INDICATOR             09502002
*                                        END OF ECB LIST                09510002
RCTDTECB DS    A                         RCT TERMINATION ECB            09550002
RCTDPOST EQU   X'40'                     TERMINATION ECB'S POST BIT     09560002
RCTDRET@ DS    A                         AREA FOR SAVING INIT/TERM      09600002
*                                        CALLER'S RETURN ADDRESS        09650002
RCTDTAXE DS    A                         ADDRESS OF TAXE QUEUE          10000000
RCTDPIRL DS    0A                        ADDRESS OF PURGE I/O REQUEST   10400002
         DS    AL1                                                      10450002
RCTDBASE DS    AL3                       ANCHOR FOR PURGE I/O           11000002
*                                        REQUESTS                       11050002
RCTDRC   DS    A                         SAVE AREA FOR INVALID          40050002
*                                        RETURN CODES                   40100002
RCTDRTRY DS    A                         RECURSION INDICATOR            40150002
RCTDRTY@ DS    A                         POTENTIAL RETRY ADDRESS        40202002
RCTDSCLR DS    0F                        CLEAR LIST AREA                40202402
RCTDSLST DS    6F                        AREA TO CONTAIN LIST FORM OF   40204002
*                                        SDUMP MACRO                    40206002
*********************************************************************** 40218002
*                                                                       40220002
*        RECOVERY FOOTPRINTS                                            40230002
*                                                                       40240002
*********************************************************************** 40242002
RCTDRCTR DS    0F                        RECOVERY FOOTPRINTS            40250002
RCTDMOID DS    XL1                       MODULE IDENTIFIER              40300002
RCTDINIT EQU   X'80'                     INITIALIZATION                 40350002
RCTDCOMN EQU   X'40'                     COMMON PROCESSING              40400002
RCTDQUIS EQU   X'20'                     QUIESCE                        40450002
RCTDREST EQU   X'10'                     RESTORE                        40500002
RCTDATTN EQU   X'08'                     ATTENTION EXIT                 40550002
RCTDTERM EQU   X'04'                     TERMINATION                    40600002
RCTDDUMP EQU   X'02'                     DUMP REQUESTED BY RCT          40650002
*        EQU   X'01'                     RESERVED                       40660002
RCTDFLGS DS    XL3                       RECOVERY FLAGS                 40700002
*********************************************************************** 40710002
*                                                                       40720002
*        WHEN RCTDINIT MODULE FLAG IS ON                                40750002
*                                                                       40760002
*********************************************************************** 40770002
RCTDATTD EQU   X'80'                     DUMP TASK BEING ATTACHED       40800002
RCTDRES3 EQU   X'40'                     RESERVED FOR FUTURE USE        40850002
RCTDATTS EQU   X'20'                     STC BEING ATTACHED             40900002
RCTDBRCP EQU   X'10'                     BRANCHING TO COMMON PROC       40950002
*********************************************************************** 40960002
*                                                                       40970002
*        WHEN THE RCTDCOMN MODULE FLAG IS ON                            41000002
*                                                                       41000402
*********************************************************************** 41000802
RCTDWAIT EQU   X'80'                     PREPARING TO ISSUE WAIT        41002002
RCTDLOOP EQU   X'40'                     LOOKING FOR WORK REQUESTS      41010002
RCTDBR2T EQU   X'20'                     BRANCHING TO TERMINATION       41030002
RCTDBR2Q EQU   X'10'                     BRANCHING TO QUIESCE           41040002
RCTDBR2R EQU   X'08'                     BRANCHING TO RESTORE           41042002
RCTDBR2A EQU   X'04'                     BRANCHING TO ATTENTION EXIT    41044002
*********************************************************************** 41046202
*                                                                       41046602
*        WHEN THE RCTDTERM MODULE FLAG IS ON                            41047602
*                                                                       41047702
*********************************************************************** 41047802
RCTDRES4 EQU   X'80'                     RESERVED FOR FUTURE USE        41048002
RCTDDETS EQU   X'40'                     STC BEING DETACHED             41048402
RCTDDETD EQU   X'20'                     DUMP BEING DETACHED            41048802
RCTDCANE EQU   X'10'                     CANCEL ESTAE                   41049202
*********************************************************************** 41049302
*                                                                       41049402
*        WHEN THE RCTDATTN MODULE FLAG IS ON                            41049502
*                                                                       41049602
*********************************************************************** 41052402
RCTDAFPE EQU   X'80'                     ATTENTION SCHEDULING BEGUN     41054402
RCTDAFPC EQU   X'40'                     ATTENTION SCHEDULING ENDED     41054802
RCTDPMSG EQU   X'20'                     THE ATTENTION ERROR MESSAGE    41055202
*                                        SHOULD BE ISSUED               41055602
*********************************************************************** 41061902
*                                                                       41063102
*        WHEN THE RCTDQUIS MODULE FLAG IS ON                            41064302
*                                                                       41065502
*********************************************************************** 41066902
*        BYTE 1                                                         41068902
RCTDENQ  EQU   X'80'                     ENQ INVOKED                    41069302
RCTDOLL1 EQU   X'40'                     SETLOCK OBTAIN INVOKED         41070302
*                                        THE 1ST TIME FOR LOCAL LOCK    41070702
RCTDRLL1 EQU   X'20'                     SETLOCK RELEASE INVOKED        41071502
*                                        THE 1ST TIME FOR LOCAL LOCK    41071902
RCTDPSUB EQU   X'10'                     STATUS INVOKED TO STOP         41072702
*                                        SUBTASKS                       41073902
RCTDSY12 EQU   X'08'                     SYSEVENT 12 INVOKED            41075102
RCTDSV16 EQU   X'04'                     SVC 16 INVOKED                 41076302
RCTDDEQ  EQU   X'02'                     DEQ INVOKED                    41077502
RCTDPSRB EQU   X'01'                     STATUS INVOKED TO STOP         41078702
*                                        SUBTASKS                       41079902
*        BYTE2                                                          41081102
RCTDSY13 EQU   X'80'                     SYSEVENT 13 INVOKED            41082302
RCTDSSUB EQU   X'40'                     STATUS INVOKED TO START        41083502
*                                        SUBTASKS                       41084702
RCTDSSRB EQU   X'20'                     STATUS INVOKED TO START SRBS   41085902
RCTDSWOT EQU   X'10'                     SWAP-OUT INVOKED               41087102
RCTDQWAI EQU   X'08'                     WAIT INVOKED                   41088302
RCTDSLFL EQU   X'04'                     SETLOCK FAILED                 41089502
RCTDPRGF EQU   X'02'                     PURGE FAILED                   41089902
RCTDSYBC EQU   X'01'                     SRM PROCESSING COMPLETE        41090302
*                                        FOR BRANCH ENTRY               41090402
*        BYTE 3                                                         41090702
RCTDSWPF EQU   X'80'                     SWAP-OUT RETURN CODE NON ZERO  41091902
RCTDOLL2 EQU   X'40'                     SETLOCK OBTAIN INVOKED THE     41093102
*                                        2ND TIME FOR LOCAL LOCK        41093502
RCTDRLL2 EQU   X'20'                     SETLOCK RELEASE INVOKED THE    41094302
*                                        2ND TIME FOR LOCAL LOCK        41094702
RCTDOGL1 EQU   X'10'                     SETLOCK OBTAIN INVOKED THE     41095502
*                                        1ST TIME FOR GLOBAL DISPATCHER 41095902
*                                        LOCK                           41096302
RCTDRGL1 EQU   X'08'                     SETLOCK RELEASE INVOKED THE    41096702
*                                        1ST TIME FOR GLOBAL DISPATCHER 41098702
*                                        LOCK                           41098802
*********************************************************************   41099102
*                                                                       41100302
*        WHEN THE RCTDREST MODULE FLAG IS ON                            41101502
*                                                                       41102702
*********************************************************************** 41103902
*        BYTE 1                                                         41105102
RCTDRS17 EQU   X'80'                     SVC 17 BEING INVOKED           41106302
RCTDOBLK EQU   X'40'                     SETLOCK BEING INVOKED          41107502
RCTDSTAT EQU   X'20'                     STATUS BEING INVOKED           41108702
RCTDRLLK EQU   X'10'                     SETLOCK RELEASE INVOKED        41109902
RCTDSY19 EQU   X'08'                     SYSEVENT 19 INVOKED            41119902
RCTDSY18 EQU   X'04'                     SYSEVENT 18 INVOKED            41129902
RCTDFAIL EQU   X'02'                     SETLOCK FAILED                 41139902
RCTDRSLW EQU   X'01'                     RESTORE FOUND ADDRESS SPACE    41141902
*                                        IN LONG WAIT                   41143902
*        BYTE 2                                                         41145902
RCTDRIOC EQU   X'80'                     I/O PROCESSING COMPLETE        41147902
RCTDWTLB EQU   X'40'                     WAIT LIMIT PROCESSING          41148302
*                                        BEGINNING                      41148402
RCTDSTAC EQU   X'20'                     STATUS PROCESSING COMPLETE     41148702
RCTDRLWC EQU   X'10'                     LONG WAIT PROC COMPLETE        41149102
RCTDRLWB EQU   X'08'                     LONG WAIT PROC BEGINNING       41149502
*        EQU   X'04'                     RESERVED                       41149602
*        EQU   X'02'                     RESERVED                       41149702
*        EQU   X'01'                     RESERVED                       41199802
*        BYTE 3                                                         41219802
*        EQU   X'80'                     RESERVED                       41229802
RCTDWTLC EQU   X'40'                     WAIT LIMIT PROCESSING          41239802
*                                        COMPLETE                       41241802
RCTDOPTC EQU   X'20'                     SRM PROC COMPLETE              41243802
*                                                                       41243902
*********************************************************************** 41244002
*                                                                       41244102
*        RCT INTERNAL ACTION FLAGS                                      41260802
*                                                                       41270802
*********************************************************************** 41272802
RCTDINTF DS    0F                        RCT INTERNAL ACTION   @YM02646 41273802
*                                        FLAGS                 @YM02646 41274802
RCTDRCTF DS    XL1                       RCT'S CROSS           @YM02646 41277502
*                                        COMMUNICATIONS        @YM02646 41282502
*                                        RECOVERY FLAGS        @YM02646 41287502
RCTDRSBO EQU   X'80'                     QUIESCE BACKOUT INVOKED        41294202
RCTDSUBN EQU   X'40'                     WHEN ON (1) INDICATES QUIESCE  41294502
*                                        HAS MADE SUBTASKS              41304502
*                                        NON-DISPATCHABLE               41314502
RCTDPRGR EQU   X'20'                     WHEN ON (1) INDICATES THAT     41324502
*                                        RCT IS ENQUEUED ON PURGE       41334502
*                                        RESOURCE                       41336502
RCTDSRBN EQU   X'10'                     SRB'S STOPPED                  41338502
RCTDDLCK EQU   X'08'                     QUIESCE HAS DISPATCHER LOCK    41340502
RCTDRES5 DS    XL3                       RESERVED              @YM02646 41344502
RCTDRES1 DS    4F                        RESERVED                       41394502
RCTDEND  DS    0D                        END OF RCTD                    41444502
         MEND                                                           42000000
**/                                                                     43000000
*%PLSRCTD: ;                                                            44000000
*DCL 1 RCTD BASED(ASXBRCTD),           /* RCT DATA AREA              */ 45000000
*      2 RCTDBEGN  CHAR(0) BDY(DWORD), /* BEGINING OF RCTD           */ 45050002
*      2 RCTDISAV(18) FIXED(32),       /* INTERNAL SAVE AREA         */ 45100002
*      2 RCTDTCBD  PTR(31),            /* ADDRESS OF DUMP TCB        */ 45200002
*      2 RCTDTCBS  PTR(31),            /* ADDRESS OF STC TCB         */ 45250002
*      2 RCTDWORK CHAR(72)BDY(WORD),   /* WORK AREA                  */ 45300002
*        4 RCTDLMAC CHAR(60)BDY(WORD), /* LIST FORM MACROS           */ 45310002
*          6 RCTDCLRL BIT(480)BDY(WORD),/* CLEAR WORK AREA           */ 45320002
*            8 RCTDTIME BIT(64)BDY(WORD),/* CURRENT TIME             */ 45330002
*              10 RCTDTMLH FIXED(32),  /* LEFT HALF USED             */ 45340002
*                                      /* FOR CALCULATIONS           */ 45342002
*              10 *        FIXED(32),  /* RESERVED                   */ 45344002
*            8 RCTDPRG CHAR(32) BDY(WORD), /* PURGE PARAMETER LIST   */ 45346002
*      2 RCTDRES2  PTR(16),            /* RESERVED FOR FUTURE USE    */ 45350003
*      2 RCTDCLST FIXED(16),           /* COUNT OF CLIST ATTN STMT'S    45380003
                                       WITHIN NESTED CLISTS  @ZA08100*/ 45410003
*      2 RCTDECBS,                     /* ECB LIST                   */ 45500002
*        4 RCTDTPTR  PTR(31),          /* POINTER TO RCTDTECB        */ 45600002
*        4 RCTDWPTR  PTR(32),          /* POINTER TO ASCBECB         */ 45650002
*          6 RCTDECBE BIT(1),          /* LAST ECB INDICATOR         */ 45660002
*                                      /* END OF ECB LIST            */ 45670002
*      2 RCTDTECB  PTR(31),            /* RCT TERMINATION ECB        */ 45700002
*        4 *        BIT(1),            /* UNUSED                     */ 45710002
*        4 RCTDPOST BIT(1),            /* TERMINATION ECB'S POST BIT */ 45720002
*        4 *        BIT(30),           /* UNUSED                     */ 45730002
*      2 RCTDRET@ PTR(31),             /* AREA FOR SAVING INIT/TERM  */ 45780002
*                                      /* CALLER'S RETURN ADDRESS    */ 45792002
*      2 RCTDTAXE  PTR(31),            /* ADDRESS OF TAXE QUEUE      */ 46000000
*      2 RCTDPIRL  PTR(31),            /* ADDRESS OF PURGE I/O REQ   */ 47000000
*        4 *        CHAR(1),           /* RESERVED                   */ 47050002
*        4 RCTDBASE PTR(24),           /* ANCHOR FOR PURGE I/O       */ 47100002
*                                      /* REQUESTS                   */ 47150002
*      2 RCTDRC    PTR(31),            /* SAVE AREA FOR INVALID      */ 76050002
*                                      /* RETURN CODES               */ 76100002
*      2 RCTDRTRY  PTR(31),            /* RECURSION INDICATOR        */ 76150002
*      2 RCTDRTY@  PTR(31),            /* POTENTIAL RETRY ADDRESS    */ 76170002
*      2 RCTDSLST  CHAR(24),           /* AREA TO CONTAIN LIST FORM  */ 76180002
*                                      /* OF SDUMP MACRO             */ 76190002
*        4 RCTDSCLR  BIT(192),         /* CLEAR LIST AREA            */ 76202002
*/********************************************************************/ 76210002
*/*                                                                  */ 76220002
*/*         RECOVERY FOOTPRINTS                                      */ 76232002
*/*                                                                  */ 76240002
*/********************************************************************/ 76242002
*      2 RCTDRCTR  BIT(32),            /* RECOVERY FOOTPRINTS        */ 76250002
*        4 RCTDMOID  BIT(8),           /*  MODULE IDENTIFIER         */ 76300002
*          6 RCTDINIT  BIT(1),         /* INITIALIZATION             */ 76400002
*          6 RCTDCOMN  BIT(1),         /* COMMON PROCESSING          */ 76450002
*          6 RCTDQUIS  BIT(1),         /* QUIESCE                    */ 76500002
*          6 RCTDREST  BIT(1),         /* RESTORE                    */ 76550002
*          6 RCTDATTN  BIT(1),         /* ATTENTION EXIT             */ 76600002
*          6 RCTDTERM  BIT(1),         /* TERMINATION                */ 76650002
*          6 RCTDDUMP  BIT(1),         /* DUMP REQUESTED BY RCT      */ 76700002
*          6 *         BIT(1),         /* RESERVED                   */ 76710002
*        4 RCTDFLGS  BIT(24),          /* RECOVERY FLAGS             */ 76750002
*/********************************************************************/ 76760002
*/*                                                                  */ 76770002
*/*  WHEN RCTDINIT MODULE FLAG IS ON                                 */ 76800002
*/*                                                                  */ 76802002
*/********************************************************************/ 76810002
*          6 RCTDATTD  BIT(1),         /* DUMP TASK BEING ATTACHED   */ 76850002
*          6 RCTDRES3  BIT(1),         /* RESERVED FOR FUTURE USE    */ 76900002
*          6 RCTDATTS  BIT(1),         /* STC BEING ATTACHED         */ 76950002
*          6 RCTDBRCP  BIT(1),         /* BRANCHING TO COMMON PROC   */ 77000002
*          6 *         BIT(20),        /* RESERVED                   */ 77010002
*/********************************************************************/ 77010102
*/*                                                                  */ 77010202
*/*  RCT INTERNAL ACTION FLAGS                                       */ 77010302
*/*                                                                  */ 77011402
*/********************************************************************/ 77013402
*      2 RCTDINTF  BIT(32),            /* RCT INTERNAL       @YM02646*/ 77015902
*                                      /* ACTION FLAGS       @YM02646*/ 77016102
*        4 RCTDRCTF  BIT(8),           /* RCT'S CROSS        @YM02646*/ 77016302
*                                      /* COMMUNICATIONS     @YM02646*/ 77016502
*                                      /* RECOVERY FLAGS     @YM02646*/ 77017002
*          6 RCTDRSBO  BIT(1),         /* QUIESCE BACKOUT    @YM02646*/ 77017702
*                                      /* INVOKED            @YM02646*/ 77018402
*          6 RCTDSUBN  BIT(1),         /* RCT'S SUBTASKS     @YM02646*/ 77019202
*                                      /* STOPPED            @YM02646*/ 77019702
*          6 RCTDPRGR  BIT(1),         /* RCT OWNS PURGE     @YM02646*/ 77020302
*                                      /* RESOURCE           @YM02646*/ 77020802
*          6 RCTDSRBN  BIT(1),         /* SRB'S STOPPED      @YM02646*/ 77021402
*          6 RCTDDLCK  BIT(1),         /* QUIESCE HAS        @YM02646*/ 77022102
*                                      /* DISPATCHER LOCK    @YM02646*/ 77022802
*          6 *         BIT(3),         /* RESERVED           @YM02646*/ 77023602
*        4 RCTDRES5 BIT(24),           /* RESERVED           @YM02646*/ 77024102
*      2 RCTDRES1  CHAR(16),           /* RESERVED                   */ 77024702
*      2 RCTDEND   CHAR(0) BDY(DWORD); /* END OF RCTD                */ 77025802
*/********************************************************************/ 77026902
*/*                                                                  */ 77028002
*/*  WHEN THE RCTDCOMMON MODULE FLAG IS ON                           */ 77029102
*/*                                                                  */ 77031602
*/********************************************************************/ 77034402
*DCL  1   *          BIT(24)  DEF(RCTDFLGS),                            77037202
*          6 RCTDWAIT  BIT(1),         /* PREPARING TO ISSUE WAIT    */ 77040002
*          6 RCTDLOOP  BIT(1),         /* LOOKING FOR WORK REQUESTS  */ 77042002
*          6 RCTDBR2T  BIT(1),         /* BRANCHING TO TERMINATION   */ 77044002
*          6 RCTDBR2Q  BIT(1),         /* BRANCHING TO QUIESCE       */ 77046002
*          6 RCTDBR2R  BIT(1),         /* BRANCHING TO RESTORE       */ 77048002
*          6 RCTDBR2A  BIT(1),         /* BRANCHING TO ATTENTION EXIT*/ 77048402
*          6 *         BIT(18);        /* RESERVED                   */ 77048802
*/********************************************************************/ 77048902
*/*                                                                  */ 77049002
*/*  WHEN THE RCTDTERM FLAG IS ON                                    */ 77049202
*/*                                                                  */ 77049402
*/********************************************************************/ 77049502
*DCL  1     *          BIT(24)  DEF(RCTDFLGS),                          77049602
*          6 RCTDRES4  BIT(1),         /* RESERVED FOR FUTURE USE    */ 77049702
*          6 RCTDDETS  BIT(1),         /* STC BEING DETACHED         */ 77049802
*          6 RCTDDETD  BIT(1),         /* DUMP BEING DETACHED        */ 77050002
*          6 RCTDCANE  BIT(1),         /* CANCEL ESTAE               */ 77099902
*          6 *         BIT(20);        /* RESERVED                   */ 77109902
*/********************************************************************/ 77110002
*/*                                                                  */ 77110102
*/*  WHEN RCTDATTN MODULE FLAG IS ON                                 */ 77110202
*/*                                                                  */ 77110902
*/********************************************************************/ 77111302
*DCL  1  *             BIT(24)  DEF(RCTDFLGS),                          77112402
*          6 RCTDAFPE  BIT(1),         /* ATTENTION SCHEDULING BEGUN */ 77113302
*          6 RCTDAFPC  BIT(1),         /* ATTENTION SCHEDULING ENDED */ 77115302
*          6 RCTDPMSG  BIT(1),         /* THE ATTENTION ERROR MESSAGE*/ 77116902
*                                      /* SHOULD BE ISSUED           */ 77118902
*          6 *         BIT(21);        /* RESERVED                   */ 77121802
*/********************************************************************/ 77123402
*/*                                                                  */ 77125002
*/*  WHEN THE RCTDQUIS FLAG IS ON                                    */ 77126602
*/*                                                                  */ 77128202
*/********************************************************************/ 77129802
*DCL   1  *         BIT(24)  DEF(RCTDFLGS),                             77131402
*/*                                    BYTE 1                        */ 77133002
*          6 RCTDENQ  BIT(1),          /* ENQ INVOKED                */ 77134602
*          6 RCTDOLL1  BIT(1),         /* SETLOCK OBTAIN INVOKED     */ 77136202
*                                      /* THE 1ST TIME FOR LOCAL LOCK*/ 77136602
*          6 RCTDRLL1  BIT(1),         /* SETLOCK RELEASE INVOKED    */ 77137802
*                                      /* THE 1ST TIME FOR LOCAL LOCK*/ 77138202
*          6 RCTDPSUB  BIT(1),         /* STATUS INVOKED TO STOP     */ 77139402
*                                      /* SUBTASKS                   */ 77141002
*          6 RCTDSY12  BIT(1),         /* SYSEVENT 12 INVOKED        */ 77142602
*          6 RCTDSV16  BIT(1),         /* SVC 16 INVOKED             */ 77144202
*          6 RCTDDEQ   BIT(1),         /* DEQ INVOKED                */ 77145802
*          6 RCTDPSRB  BIT(1),         /* STATUS INVOKED TO STOP SRBS*/ 77147402
*/*                                    BYTE 2                        */ 77149002
*          6 RCTDSY13  BIT(1),         /* SYSEVENT 13 INVOKED        */ 77150602
*          6 RCTDSSUB  BIT(1),         /* STATUS INVOKED TO START    */ 77152202
*                                      /* SUBTASKS                   */ 77153802
*          6 RCTDSSRB  BIT(1),         /* STATUS INVOKED TO START SRB*/ 77155402
*          6 RCTDSWOT  BIT(1),         /* SWAP-OUT INVOKED           */ 77157002
*          6 RCTDQWAI  BIT(1),         /* WAIT INVOKED               */ 77158602
*          6 RCTDSLFL  BIT(1),         /* SETLOCK FAILED             */ 77160202
*          6 RCTDPRGF  BIT(1),         /* PURGE FAILED               */ 77160602
*          6 RCTDSYBC  BIT(1),         /* SRM PROCESSING             */ 77161802
*                                      /* COMPLETE FOR BRANCH ENTRY  */ 77162202
*/*                                    BYTE 3                        */ 77163402
*          6 RCTDSWPF  BIT(1),         /* SWAP-OUT RETURN CODE       */ 77165002
*                                      /* NON ZERO                   */ 77166602
*          6 RCTDOLL2  BIT(1),         /* SETLOCK OBTAIN INVOKED THE */ 77168202
*                                      /* 2ND TIME FOR THE LOCAL LOCK*/ 77168602
*          6 RCTDRLL2  BIT(1),         /* SETLOCK RELEASE INVOKED THE*/ 77169802
*                                      /* 2ND TIME FOR THE LOCAL LOCK*/ 77170202
*          6 RCTDOGL1  BIT(1),         /* SETLOCK OBTAIN INVOKED THE */ 77171402
*                                      /* 1ST TIME FOR THE GLOBAL    */ 77171802
*                                      /* DISPATCHER LOCK            */ 77172202
*          6 RCTDRGL1  BIT(1),         /* SETLOCK RELEASE INVOKED THE*/ 77173002
*                                      /* 1ST TIME FOR THE GLOBAL    */ 77174602
*                                      /* DISPATCHER LOCK            */ 77176602
*          6 *         BIT(3);         /* RESERVED                   */ 77177802
*/********************************************************************/ 77179402
*/*                                                                  */ 77181002
*/*  WHEN THE RCTDREST FLAG IS ON                                    */ 77182602
*/*                                                                  */ 77184202
*/********************************************************************/ 77185802
*DCL  1  *          BIT(24)  DEF(RCTDFLGS),                             77187402
*/*                                    BYTE 1                        */ 77189002
*          6 RCTDRS17  BIT(1),         /* SVC 17 BEING INVOKED       */ 77190602
*          6 RCTDOBLK  BIT(1),         /* SETLOCK OBTAIN INVOKED     */ 77192202
*          6 RCTDSTAT  BIT(1),         /* STATUS BEING INVOKED       */ 77193802
*          6 RCTDRLLK  BIT(1),         /* SETLOCK RELEASE INVOKED    */ 77195402
*          6 RCTDSY19  BIT(1),         /* SYSEVENT 19 INVOKED        */ 77197002
*          6 RCTDSY18  BIT(1),         /* SYSEVENT 18 INVOKED        */ 77198602
*          6 RCTDFAIL  BIT(1),         /* SETLOCK FAILED             */ 77200202
*          6 RCTDRSLW  BIT(1),         /* RESTORE FOUND ADDRESS SPACE*/ 77201802
*                                      /* IN LONG WAIT               */ 77203402
*/*                                    BYTE 2                        */ 77205002
*          6 RCTDRIOC  BIT(1),         /* I/O PROCESSING COMPLETE    */ 77206602
*          6 RCTDWTLB  BIT(1),         /* WAIT LIMIT PROCESSING      */ 77208202
*                                      /* BEGINNING                  */ 77208602
*          6 RCTDSTAC  BIT(1),         /* STATUS PROCESSING COMPLETE */ 77209802
*          6 RCTDRLWC  BIT(1),         /* LONG WAIT PROC COMPLETE    */ 77219802
*          6 RCTDRLWB  BIT(1),         /* LONG WAIT PROC BEGINNING   */ 77239802
*          6 *         BIT(3),         /* RESERVED                   */ 77241802
*/*                                    BYTE 3                        */ 77243802
*          6 *         BIT(1),         /* RESERVED                   */ 77249402
*          6 RCTDWTLC  BIT(1),         /* WAIT LIMIT PROCESSIMG      */ 77249502
*                                      /* COMPLETE                   */ 77249602
*          6 RCTDOPTC  BIT(1),         /* SRM PROC COMPLETE          */ 77249702
*          6 *         BIT(5);         /* RESERVED                   */ 77299702
./  ADD  SSI=23130731,NAME=IEARSMID
 %IEARSMID:MACRO ;                                                      00050002
 ANS ('GENERATE ;') SKIP ;                                              00100002
 ANS (MACLABEL(1:LENGTH(MACLABEL)-1)||' CSECT') COL(2) SKIP ;           00110002
 ANS ('USING *,15') COL (11) SKIP ;                                     00112002
 ANS ('MODID') COL (11) SKIP ;                                          00114002
 ANS ('@ENDGEN ;') SKIP ;                                               00120002
 %END ;                                                                 00400002
./  ADD  SSI=51840460,NAME=IEAVSPSA
 IEAVSPSA: PROC(FREEPTR) OPTIONS(NOSAVE(1,15),NOSAVEAREA);              00100002
 /********************************************************************/ 00150002
 /*                                                                  */ 00200002
 /*                                                                  */ 00250002
 /********************************************************************/ 00300002
 /*                                                                  */ 00350002
 /* STATUS:   CHANGE LEVEL=001  12/12/74                             */ 00400003
 /*                                                                  */ 00450002
 /* FUNCTION:  1) FOR GETMAIN REQUESTS, TO GET A SA/WA AND VECTOR    */ 00500002
 /*               TABLE AND INITIALIZE IT                            */ 00550002
 /*            2) FOR FREEMAIN REQUESTS, TO FREE A SA/WA AND VECTOR  */ 00600002
 /*               TABLE                                              */ 00650002
 /*            3) FOR FORMAT REQUESTS, TO FORMAT THE SA/WA VECTOR    */ 00700003
 /*               TABLE                                              */ 00710003
 /*                                                                  */ 00720003
 /* ENTRY POINT: IEAVSPSA                                            */ 00750002
 /*                                                                  */ 00800002
 /* INPUT:    REGISTER 1  CONTAINS: 1)ADDRESS TO FREEMAIN, OR        */ 00850002
 /*                                 2)ZERO IF REQUEST FOR GETMAIN    */ 00900002
 /*                                 3)COMPLEMENT FOR FORMAT          */ 00920003
 /*           REGISTER 13 POINTS TO A REGISTER SAVEAREA              */ 00950002
 /*           REGISTER 14 CONTAINS THE RETURN ADDRESS                */ 01000002
 /*           REGISTER 15 CONTAINS THE ENTRY POINT ADDRESS           */ 01050002
 /*                                                                  */ 01100002
 /* OUTPUT:   REGISTER 1  CONTAINS 1)ADDRESS OF VECTOR TABLE         */ 01150002
 /*                                2)ZERO - ON RETURN FROM FREEMAIN  */ 01200002
 /*                                         REQUEST                  */ 01250002
 /*           REGISTER 15 CONTAINS 1)A RETURN CODE OF ZERO, IF NO    */ 01300002
 /*                                  ERROR                           */ 01350002
 /*                                2)A RETURN CODE OF FOUR FOR ERRORS*/ 01400002
 /*                                   FROM AT LEAST ONE OF THESE     */ 01450002
 /*                                   SOURCES:                       */ 01500002
 /*                                  - ISSUING A GETMAIN             */ 01550002
 /*                                  - ISSUING A FREEMAIN            */ 01600002
 /*                                  - ISSUING A SETLOCK TO OBTAIN OR*/ 01650002
 /*                                    FREE SALLOC                   */ 01700002
 /*           REGISTER 14 CONTAINS THE RETURN ADDRESS                */ 01750002
 /*           REGISTER 13 POINTS TO A REGISTER SAVEAREA              */ 01800002
 /*                                                                  */ 01850002
 /* EXTERNAL REFERENCES: NONE.                                       */ 01900002
 /*                                                                  */ 01950002
 /* EXITS:    RETURN TO CALLER VIA A BR 14                           */ 02000002
 /*                                                                  */ 02050002
 /* ERROR CODES:                                                     */ 02100002
 /*           REGISTER 15 CONTAINS THE RETURN CODE                   */ 02150002
 /*                                                                  */ 02200002
 /* TABLES/WORK AREAS: IHAWSAVT                                      */ 02250002
 /* NOTE: THE ROUTINE THAT INCLUDES THIS ROUTINE MUST CONTAIN        */ 02300002
 /*       MAPPING MACROS FOR THE CVT (MARCO: CVT) AND THE PSA        */ 02310002
 /*       (MACRO: IHAPSA).                                           */ 02320002
 /*                                                                  */ 02350002
 /* ATTRIBUTES: SERIALLY REUSABLE                                    */ 02400002
 /*                                                                  */ 02450002
 /* RESOURCES:                                                       */ 02500002
 /*           NONE.                                                  */ 02550002
 /*                                                                  */ 02600002
 /* SVCS:     NONE.  BRANCH ENTRIES TO GETMAIN,FREEMAIN              */ 02650002
 /*                                                                  */ 02700002
 /* MESSAGES: NONE.                                                  */ 02750002
 /*                                                                  */ 02800002
 /* NOTES:                                                           */ 02850002
 /*    THIS ROUTINE INCLUDES THE MAPPING MACRO 'IHAWSAVT' AND        */ 02860002
 /*    SPECIFIES THE MAPPING OF THE GLOBAL WORK/SAVE AREAS, EVEN     */ 02870002
 /*    THOUGH THIS ROUTINE BUILDS THE WORK/SAVE AREAS FOR A CPU.     */ 02880002
 /*    THIS IS BECAUSE THIS ROUTINE USES 'GETMAIN' TO OBTAIN THE     */ 02890002
 /*    SPACE FOR THE WORK/SAVE AREA IT IS BUILDING BUT 'GETMAIN'     */ 02892002
 /*    ITSELF USES THE GLOBAL WORK/SAVE AREAS.                       */ 02894002
 /*    THE MAPPING MACRO FOR THE CPU RELATED WORK/SAVE AREA IS NOT   */ 02896002
 /*    USED IN BUILDING OR INITIALIZING THAT WORK/SAVE AREA BY THIS  */ 02898002
 /*    THIS ROUTINE, THUS THE MAPPING OF THE CPU RELATED WORK/SAVE   */ 02898402
 /*    AREA IS NOT NEEDED BY THIS ROUTINE BUT THE MAPPING OF THE     */ 02898802
 /*    GLOBAL WORK/SAVE AREA IS NEEDED.                              */ 02899202
 /*                                                                  */ 02900002
 /********************************************************************/ 02950002
 @LISTOFF;                                                              03040003
 %NONSENSE='X';                                                         03050002
 %WSALOCAL='NO';                                                        03250002
 %WSACPU='NO';                                                          03300002
 %INCLUDE SYSLIB(IHAWSAVT);                                             03350002
  @LISTON;                                                              03400003
         DCL REGSAPTR PTR(31) REG(13);      /* PTR. TO REGISTER         03450002
                                               SAVE AREAS            */ 03500002
         DCL PARMX FIXED(31) REG(1);  /* INPUT PARM @ZM30488*/          03520003
         DCL PARM POINTER(31) REG(1);       /*INPUT AND OUTPUT PARM  */ 03550002
         DCL RTCODE FIXED(31) REG(15);      /*RETURN CODE            */ 03600002
         DCL TBLPTR PTR(31) REG(1);         /*PTR TO VECTOR TABLE    */ 03650002
         DCL LNGREG FIXED(31) REG(0);       /*LENGTH TO GET OR FREE  */ 03750002
         DCL LOCKRC FIXED(31) REG(15);      /*RETURN CODE FROM          03800002
                                              SETLOCK                */ 03850002
         DCL GMREG FIXED(31) REG(3);        /*PARMS FOR GETMAIN      */ 03860002
         DCL 1 LGTHTBL BASED(CVTWSAC),      /*CPU SA/WA SIZES        */ 03900002
             (2 NUM,                        /*NUMBER OF ENTRIES      */ 03950002
              2 LGTH,                       /*VECTOR TBL + SAVEAREAS */ 04000002
              2 FSIZE)  FIXED(15);          /* SIZE OF FIRST SA/WA   */ 04050002
         DCL SVPTR BASED(P) PTR(31);        /*VECTOR TABLE           */ 04100002
         DCL P PTR(31);                     /*POINT TO VECTOR        */ 04200002
                                            /*ENTRIES                */ 04250002
         DCL SAPTR PTR(31);                 /*PTR TO SAVEAREAS       */ 04260002
  DCL NSIZEPTR PTR(31);                     /*POINTER TO SIZE ENTRIES*/ 04300002
         DCL 1 GMTBL FIXED(31),             /*GET/FREEMAIN PARMS     */ 04400002
              (2 RSVD,                      /*RESERVED BYTE          */ 04450002
               2 STKEY,                     /*STORAGE PROTECT KEY    */ 04500002
               2 SBPOOL,                    /*SUBPOOL REQUESTED      */ 04550002
               2 FLAGS)  FIXED(8);          /*TYPE OF GET/FREEMAIN   */ 04600002
         DCL HOLDRC FIXED(31);              /*RETAINER OF RETURN CODE*/ 04650002
         DCL CDGM FIXED(8) CONSTANT(0);     /*X'00' INDICATOR OF     */ 04700002
                                            /*CONDITIONAL GETMAIN    */ 04750002
         DCL CDFM FIXED(8) CONSTANT(1);     /*X'01' INDICATOR OF     */ 04800002
                                            /*CONDITIONAL FREEMAIN   */ 04850002
         DCL LUPONE FIXED(8) CONSTANT(1);   /*LOOP CONTROL CONSTANT  */ 04900002
         DCL ZZERO FIXED(8) CONSTANT(0);    /*ZERO RETURN CODE       */ 04950002
         DCL FFOUR FIXED(8) CONSTANT(4);    /*RETURN CODE FOUR       */ 05000002
         DCL SQAPOOL FIXED(8) CONSTANT(245);/*SUBPOOL 245            */ 05050002
         DCL KEYZERO FIXED(8) CONSTANT(0);  /*KEY                    */ 05100002
         DCL INCSIZE FIXED(8) CONSTANT(2);  /*INCREMENT VALUE        */ 05150002
         DCL GETID FIXED(8) CONSTANT(0);    /*R1=0 ON GETMAIN REQUEST*/ 05200002
         DCL LOOP FIXED(31);                /*LOOP INDEX             */ 05250002
     DCL R3SAVAR PTR(31);         /* SAVE AREA FOR REG. 3 ACROSS        05250402
                                     GET/FREEMAIN'S                  */ 05250802
         DCL SAVAREA PTR(31);        /* SAVE AREA FOR POINTER TO        05252002
                                        REGISTER SAVE AREAS          */ 05254002
         DCL 1 SETLOKSA BDY(WORD),  /* SETLOCK REG. SAVE AREA        */ 05260002
              2 * FIXED(31),        /* SAVE AREA FOR REG. 11         */ 05270002
              2 * FIXED(31),        /* SAVE AREA FOR REG. 12         */ 05280002
              2 * FIXED(31),        /* SAVE AREA FOR REG. 13         */ 05290002
              2 * FIXED(31),        /* SAVE AREA FOR REG. 14         */ 05292002
              2 * FIXED(31);        /* FIFTH WORD OF SAVE AREA       */ 05292402
  DCL NWSASIZE FIXED(15) BASED(NSIZEPTR);                               05294002
  RFY (PARM,RTCODE) RSTD;           /* THESE REG'S ARE RSTD THRUOUT     05300402
                                       THIS MODULE                   */ 05301202
  RFY (REGSAPTR,LOCKRC) RSTD;                                           05302402
    SAVAREA = REGSAPTR;             /* PRESERVE REG. 13              */ 05302802
     REGSAPTR = ADDR(SETLOKSA);     /* PUT ADDR. OF 5 WORD SAVE AREA    05304402
                                       FOR SETLOCK IN REG. 13        */ 05306402
 /* TRY TO GET SALLOC LOCK, MAKE SETLOCK SAVE REG'S 11-14 IN SAVE    */ 05308402
 /* AREA POINTED TO BY REG. 13,  RETURN CODE WILL BE IN REG. 15      */ 05308802
  GLOCK:  GEN REFS(FLC,PSALITA);                                        05310002
          SETLOCK   OBTAIN,TYPE=SALLOC,MODE=UNCOND,REGS=SAVE,          X05320002
                RELATED=('SALLOC LOCK, THIS SETLOCK IS ISSUED IN THIS  X05330002
                MACRO WHICH IS INCLUDED IN VARIOUS MODULES, THE LOCK   X05334002
                IS RELEASED AT THE LABEL: FLOCK, IN THIS MACRO')        05336002
 @ENDGEN                                                                05340002
   REGSAPTR = SAVAREA;              /* RESTORE REGISTER 13           */ 05350002
  RFY (REGSAPTR) UNRSTD;                                                05390002
  RFY (LNGREG) RSTD;                                                    05460002
         IF LOCKRC=ZZERO | LOCKRC=FFOUR THEN /*WAS LOCK SET?         */ 05500002
 LOCKSET:       DO;                         /*YES PROCEED FOR GM/FM  */ 05550002
     RFY (LOCKRC) UNRSTD;                                               05560002
                LNGREG = LGTH               /*LENGTH IN REGISTER 0   */ 05600002
                        * EIGHT;            /* LENGTH IN TABLE IS       05610002
                                               NUMBER OF DOUBLE WORDS*/ 05620002
                SBPOOL=SQAPOOL;             /* PUT SUBPOOL IN TABLE  */ 05650002
                STKEY=KEYZERO;              /*PROTECT KEY REQUESTED  */ 05700002
       /* CHECK FOR FORMAT REQUEST */                                   05707003
            IF PARMX<0 THEN  /* REGISTER NEGITIVE? @ZM30488*/           05714003
         DO;                                                            05721003
          TBLPTR=-PARMX; /* CORRECT ADDR @ZM30488*/                     05728003
          GOTO WSTFORMT;  /* GO FORMAT TABLE @ZM30488*/                 05735003
         END;                                                           05742003
                IF PARM=GETID  THEN         /*GETMAIN OR FREEMAIN    */ 05750002
                                                                        05800002
 /********************************************************************/ 05900002
 /*                                                                  */ 05950002
 /*                   GETMAIN PATH                                   */ 06000002
 /*  REGISTER ONE CONTAINS ZERO ON INPUT FOR A GETMAIN REQUEST.      */ 06050002
 /*  IF R1 IS ZERO, THEN SPACE IS OBTAINED FOR A SA/WA AND VECTOR    */ 06100002
 /*  TABLE.  AFTER A SUCCESSFUL RETURN FROM GETMAIN, THE TABLE       */ 06150002
 /*  IS INITIALIZED.                                                 */ 06200002
 /*                                                                  */ 06250002
 /********************************************************************/ 06300002
                                                                        06350002
                                                                        06400002
 GMAIN:                 DO;                 /*GETMAIN PATH           */ 06450002
                       FLAGS=CDGM;         /*CONDITIONAL GETMAIN    */  06500002
             RFY (GMREG,TBLPTR)RSTD;                                    06510002
      R3SAVAR = GMREG;            /* SAVE CONTENTS OF REG. 3         */ 06520002
                       GMREG=GMTBL;        /*PARMS IN REG. 3        */  06550002
 /* GETMAIN VECTOR TABLE AND SAVEAREAS FROM SUBPOOL 245             */  06560002
  SGTWSA: GEN  REFS(CVTSPSA,CVTGLMN,CVTPTR,CVTMAP,WSAGGMFM,WSAG);       06600002
          GETMAIN RC,LV=(0),BRANCH=(YES,GLOBAL),KEY=(3),SP=(3),        X06650002
                RELATED=('SUPERVISOR ROUTINE WORK/SAVE AREAS FOR A CPU.X06660002
                THIS GETMAIN IS ISSUED IN THIS MACRO WHICH IS INCLUDED X06670002
                IN VARIOUS MODULES.  THE CORRESPONDING FREEMAIN IS AT  X06680002
                LABEL: SFRWSA, IN THIS MACRO')                          06690002
 @ENDGEN                                                                06692002
  GMREG = R3SAVAR;  /* RESTORE REG. 3,                                  06880002
                       BRANCH ENTRY TO GETMAIN DESTROYS REG. 3       */ 06890002
                       IF RTCODE ¬= ZZERO   /*ERROR IN GETMAIN       */ 06900002
                         THEN               /*YES                    */ 06950002
                             HOLDRC=FFOUR;  /*RETAIN RETURN CODE     */ 07000002
                         ELSE                                           07050002
   WSTFORMT:   DO;          /*INITIALIZE VECTOR TABLE  @ZM30488 */      07100003
                             HOLDRC=ZZERO;  /*RETAIN RETURN CODE     */ 07150002
                             P=TBLPTR;      /*POINT TO START OF TABLE*/ 07200002
                             SAPTR=TBLPTR+(NUM*FFOUR);                  07250002
                                            /*GET PTR TO SAVEAREAS   */ 07300002
 /* ROUND ADDR. OF FIRST WORK/SAVE AREA UP TO AN 8-BYTE MULT.  ALL   */ 07300402
 /* WORK/SAVE AREAS MUST BEGIN ON DOUBLE WORD BOUNDARIES.  ALL WORK/ */ 07300802
 /* SAVE AREAS ARE MULTIPLES OF 8 BYTES IN SIZE.  THUS IF THE FIRST  */ 07301202
 /* WORK/SAVE AREA IS ON A DOUBLE WORD BOUNDARY, THEY ALL WILL BE.   */ 07301602
    SAPTR = ((SAPTR + SEVEN) | SEVEN) && SEVEN;                         07302002
          RFY (TBLPTR) UNRSTD;                                          07310002
   NSIZEPTR = ADDR(FSIZE);         /* PICK UP ADDR. OF FIELD            07320002
                                      CONTAINING FIRST WORK/SAVE        07330002
                                      AREA SIZE                      */ 07340002
 INTZE:                      DO LOOP = LUPONE TO NUM;                   07350002
                                            /*DO FOR EACH ENTRY IN   */ 07400002
                                            /*VECTOR TABLE           */ 07450002
                              SVPTR = SAPTR;/*SET PTR TO SAVEAREA    */ 07500002
                              SAPTR = SAPTR + NWSASIZE;                 07550002
                                            /*INCREMENT PTR BY SIZE  */ 07600002
                                            /* OF SAVEAREA           */ 07650002
                    P=P+ LENGTH(SVPTR);     /*POINT TO NEXT VECTOR   */ 07700002
                                            /*TABLE ENTRY            */ 07750002
          NSIZEPTR = NSIZEPTR               /*POINT TO NEXT SIZE     */ 07800002
                    + LENGTH(NWSASIZE);                                 07810002
                             END INTZE;                                 07850002
                         END;               /*END PROCESSING FROM    */ 07900002
                                            /*SUCCESSFUL GETMAIN     */ 07950002
                       END GMAIN;                                       08000002
                  ELSE                                                  08050002
 /********************************************************************/ 08200002
 /*                                                                  */ 08250002
 /*                  FREEMAIN PATH                                   */ 08300002
 /*  REGISTER ONE CONTAINS THE ADDRESS OF THE AREA TO BE FREE'D.     */ 08350002
 /*  THIS REQUEST IS ONLY FROM VARY CPU OFFLINE, OR IEAVNIP0         */ 08400002
 /*                                                                  */ 08450002
 /********************************************************************/ 08500002
                                                                        08550002
                                                                        08600002
 FMAIN:                DO;                  /*FREEMAIN PATH          */ 08650002
  RFY (GMREG,LNGREG) RSTD;                                              08660002
                        FLAGS=CDFM;         /*CONDITIONAL FREEMAIN   */ 08700002
      R3SAVAR = GMREG;            /* PRESERVE CONTENTS OF REG. 3     */ 08710002
                       GMREG=GMTBL;         /*PARMS IN REG. 3        */ 08750002
     /*FREEMAIN AREA PROVIDED BY CALLER (VARY CPU OFFLINE OR NIP)    */ 08790002
  SFRWSA:  GEN REFS(CVTSPSA,CVTGLMN,CVTPTR,CVTMAP,WSAGGMFM,WSAG);       08800002
          FREEMAIN      RC,LV=(0),BRANCH=(YES,GLOBAL),                 X08850002
                KEY=(3),A=(1),SP=(3),                                  X08900002
                RELATED=('SUPERVISOR ROUTINE WORK/SAVE AREAS FOR A CPU.X08902002
                THIS FREEMAIN IS ISSUED IN THIS MACRO WHICH IS INCLUDEDX08904002
                IN VARIOUS MODULES.  THE CORRESPONDING GETMAIN IS AT   X08906002
                LABEL: SGTWSA, IN THIS MACRO')                          08908002
 @ENDGEN                                                                08910002
  GMREG = R3SAVAR;  /* RESTORE REG. 3,                                  08960002
                       BRANCH ENTRY TO FREEMAIN DESTROYS REG. 3      */ 09010002
                       IF RTCODE ¬= ZZERO   /*ERROR                  */ 09100002
                         THEN               /*YES                    */ 09150002
                           HOLDRC=FFOUR;    /*SET RETURN CODE        */ 09200002
                         ELSE                                           09250002
                           HOLDRC=ZZERO;    /*SAVE 0 RETURN CODE     */ 09300002
   RFY (LNGREG,TBLPTR) UNRSTD;                                          09310002
                       PARM=ZZERO;          /*INDICATOR FOR FREEMAIN */ 09350002
                       END FMAIN;                                       09400002
  RFY (LOCKRC,REGSAPTR) RSTD;                                           09400802
   SAVAREA = REGSAPTR;              /* PRESERVE REGISTER 13          */ 09400902
     REGSAPTR = ADDR(SETLOKSA);     /* PUT ADDR. OF 5 WORD SAVE AREA    09401202
                                       FOR SETLOCK IN REG. 13        */ 09401602
 /* RELEASE SALLOC LOCK, MAKE SETLOCK SAVE REG'S 11-14 IN SAVE AREA  */ 09402802
 /* POINTED TO BY REG. 13, RETURN CODE WILL BE IN REG. 15            */ 09404802
  FLOCK: GEN REFS(FLC,PSALITA);                                         09410002
          SETLOCK RELEASE,TYPE=SALLOC,REGS=SAVE,                       *09420002
                RELATED=('SALLOC LOCK, THIS SETLOCK IS ISSUED IN THIS  X09430002
                MACRO WHICH IS INCLUDED IN VARIOUS MODULES, THE LOCK   X09432002
                IS OBTAINED AT THE LABEL: GLOCK, IN THIS MACRO')        09434002
 @ENDGEN                                                                09440002
   REGSAPTR = SAVAREA;              /* RESTORE REGISTER 13           */ 09450002
  RFY (REGSAPTR) UNRSTD;                                                09490002
                IF (LOCKRC=ZZERO) |                                     09600002
                (LOCKRC=FFOUR)              /*LOCK NOT RELEASED?     */ 09650002
                  THEN RTCODE=HOLDRC;       /*RETURN CODE INDICATOR  */ 09700002
                  ELSE RTCODE=FFOUR;        /*0 RETURN FROM SETLOCK  */ 09750002
                                            /*SET RETURN CODE TO THAT*/ 09800002
                                            /*FROM GET/FREEMAIN      */ 09850002
  RFY (LOCKRC) UNRSTD;                                                  09860002
                END LOCKSET;                                            09900002
                ELSE                        /*SETLOCK ERROR          */ 09950002
                  RTCODE = FFOUR;           /*RETURN CODE INDICATOR  */ 10000002
   RFY (PARM,RTCODE) UNRSTD;                                            10010002
   @LISTOFF;                                                            10030003
*/*IEAVSPSA: CHART (AMODE,SEQ,IBM68,AREF) */                            10050002
*/*IEAVSPSA: E ENTER */                                                 10100002
*/* N ON ENTRY IF REG. 1 IS ZERO, THE REQUEST IS TO ALLOCATE */         10110002
*/* N A CPU RELATED WORK/SAVE AREA.  IF REG. 1 IS NON-ZERO, */          10130002
*/* N THE REQUEST IS TO FREE A CPU RELATED WORK/SAVE AREA AND THE */    10140002
*/* N VIRT. ADDRESS OF THE AREA TO BE FREED IS IN REG. 1 */             10142002
*/* P SAVE REGS EXCEPT REG. 1 AND REG. 15 */                            10150002
*/* P SAVE REGISTER 13 */                                               10160002
*/* P PUT ADDR. OF 5 WORD SAVEAREA FOR SETLOCK IN REG. 13 */            10170002
*/* L SETLOCK TO OBTAIN 'SALLOC' LOCK*/                                 10200002
*/* P RESTORE REG. 13 */                                                10210002
*/* D (YES,,NO,P2A1) WAS LOCK OBTAINED ? */                             10250002
*/* P PUT SIZE OF AREA TO BE GOTTEN/FREED IN REG. 0 */                  10260002
*/* P INDICATE SUBPOOL 245 AND KEY 0 IN GET/FREEMAIN WORKAREA */        10300002
*/* D (YES,,NO,FMAIN) IS THIS A GETMAIN REQUEST ? */                    10400002
*/*GMAIN: P SET FLAGS IN GETMAIN WORKAREA FOR CONDITIONAL GETMAIN */    10450002
*/* P SAVE CONTENTS OF REGISTER 3 */                                    10462002
*/* N BRANCH ENTRY TO GET/FREEMAIN DESTROYS REG. 3 */                   10464002
*/* P PUT GETMAIN PARAMETERS IN REG. 3 */                               10470002
*/*SGTWSA: L BRANCH TO GETMAIN TO ALLOC. WORK/SAVE AREA*/               10500002
*/* N VIRT. ADDR. OF GOTTEN AREA IS IN REG. 1 */                        10510002
*/* P RESTORE CONTENTS OF REGISTER 3 */                                 10520002
*/* D (YES,,NO,P2A2) GETMAIN SUCCESSFUL ?*/                             10550002
*/* P SET UP A CODE OF ZERO, TO BE RETURNED BY THIS MODULE*/            10600002
*/* P CALC. VIRT. ADDR. OF FIRST SAVEAREA IN THE GOTTEN SPACE */        10650002
*/* P ROUND THIS ADDR. UP TO A DOUBLE WORD BOUNDARY */                  10660002
*/* P PICK UP ADDR. OF FIELD CONTAINING FIRST WORK/SAVE AREA SIZE */    10670002
*/* P PICK UP NUMBER OF SAVE AREAS TO BE BUILT */                       10700002
*/* P INITIALIZE A COUNTER OF SAVE AREAS BUILT TO 1 */                  10710002
*/*INTZE: D (YES,P2B1,NO,) ALL SAVE AREAS BUILT ? */                    10800002
*/* P SET CURR. VECTOR TABLE ENTRY TO POINT TO CURR. SAVE AREA */       10850002
*/* P UPDATE POINTER TO NEXT SAVE AREA */                               10860002
*/* P UPDATE POINTER TO NEXT VECTOR TABLE ENTRY */                      10870002
*/* P (,INTZE) INCREMENT COUNTER BY 1 */                                10900002
*/*P2A1: P SET UP A CODE OF 4, TO BE RETURNED BY THIS MODULE */         10950002
*/* P (,P2J5) PUT RETURN CODE FOR THIS MODULE IN REG. 15 */             10960002
*/*P2A2: P (,P2B1) SET UP A CODE OF 4, TO BE RETURNED BY THIS MODULE */ 11000002
*/*FMAIN: P SET FLAGS IN FREEMAIN WORKAREA FOR CONDITIONAL FREEMAIN */  11050002
*/* P SAVE CONTENTS OF REGISTER 3 */                                    11062002
*/* N BRANCH ENTRY TO GET/FREEMAIN DESTROYS REG. 3 */                   11064002
*/* P PUT FREEMAIN PARAMETERS IN REG. 3 */                              11070002
*/* N REG. 1 ALREADY CONTAINS THE VIRT. ADDR. OF AREA TO BE FREED */    11080002
*/*SFRWSA: L BRANCH TO FREEMAIN TO FREE WORK/SAVE AREA*/                11150002
*/* P RESTORE CONTENTS OF REGISTER 3 */                                 11160002
*/* D (YES,,NO,P2A3) FREEMAIN SUCCESSFUL ?*/                            11200002
*/* P SET UP A CODE OF 0, TO BE RETURNED BY THIS MODULE*/               11250002
*/*P2B1: P SAVE REG. 13 */                                              11260002
*/* P PUT ADDR. OF 5 WORD SAVEAREA FOR SETLOCK IN REG. 13 */            11270002
*/*FLOCK: L SETLOCK TO RELEASE 'SALLOC' LOCK*/                          11300002
*/* P RESTORE REG. 13 */                                                11310002
*/* D (YES,,NO,P2A4) WAS LOCK RELEASED ?*/                              11350002
*/* P PUT RETURN CODE FOR THIS MODULE IN REG. 15*/                      11400002
*/*P2J5: P RESTORE REGS EXCEPT REG. 1 AND REG. 15 */                    11450002
*/* R RETURN TO CALLER */                                               11500002
*/*P2A3: P (,P2B1) SET UP A CODE OF 4, TO BE RETURNED BY THIS MODULE*/  11550002
*/*P2A4: P (,P2J5) SET RETURN CODE FOR THIS MODULE (REG. 15) TO 4*/     11600002
*/*IEAVSPSA: END */                                                     11650002
  @LISTON;                                                              11670003
         END IEAVSPSA;                                                  11700002
./  ADD  SSI=32890495,NAME=IECDBEB
         MACRO                                                          00050021
         IECDBEB                                                        00100021
BEB      DSECT                                                          00150021
         SPACE 1                                                        00200021
**********************************************************************  00250021
*                                                                    *  00300021
*        THE BEB  CONTAINS POINTERS WHICH DESCRIBE THE REAL          *  00350002
*        CHANNEL PROGRAM SEGMENT (S) WHICH IT CONTAINS. TWO SETS     *  00400021
*        OF SUCH POINTERS ARE CONTAINED WITH ROOM FOR 15 CCWS.       *  00450021
*                                                                    *  00500021
**********************************************************************  00550021
         SPACE 1                                                        00600021
BEBCHAIN DS    A                   POINTER TO NEXT BEB                  00650021
BEBFLAG  DS    XL1                 FLAGS CONTAINED IN BEB               00700021
         SPACE 1                                                        00750021
*   BIT SETTINGS IN BEBFLAG                                             00800021
         SPACE 1                                                        00850021
BEB2INUS EQU   X'80'               SECOND SET OF POINTERS IN USE        00900021
BEBNOPTC EQU   X'40'               NOP TIC USED FOR TIC INSERTION       00950021
*                                  ALL OTHER FLAGS NOT USED             01000021
         SPACE 1                                                        01050021
         DS    AL3                 UNUSED                               01100021
BEBRLST  DS    A                   START OF REAL CHANNEL PGM SGMT       01150021
BEBRLEN  DS    A                   END OF REAL CHANNEL PGM SEGMENT      01200021
BEBVRST  DS    A                   START OF VIRTUAL CHANNEL PGM SGMT    01250021
BEBVREN  DS    A                   END OF VIRTUAL CHANNEL PGM SGMT      01300021
BEBRLST2 DS    A                   SECOND REAL START                    01350021
BEBRLEN2 DS    A                   SECOND REAL END                      01400021
BEBVRST2 DS    A                   SECOND VIRTUAL START                 01450021
BEBVREN2 DS    A                   SECOND VIRTUAL END                   01500021
BEBSCCW  DS    D                   FIRST CCW AREA                       01550021
BEBHL    EQU   BEBVREN2+L'BEBVREN2-BEB HEADER LENGTH                    01600021
BEBPTRLN EQU   BEBVREN+L'BEBVREN-BEBRLST SET OF POINTERS LENGTH         01650021
BEBEL    EQU   L'BEBSCCW           CCW LENGTH                           01700021
BEBNE    EQU   15                  NUMBER OF CCWS IN BEB                01750021
BEBBL    EQU   BEBHL+BEBEL*BEBNE   SIZE OF A BEB                        01800021
         MEND                                                           01850021
./  ADD  SSI=82380009,NAME=IECDCAT
*%       GOTO  CATPLS1;             /* BILINGUAL MACRO                  00050000
         MACRO                                                          00100000
         IECDCAT                                                        00150000
         DSECT                                                          00200000
CAT      DS    0F                                                       00250000
         SPACE 1                   */                                   00300000
*%CATPLS1 : ;                                                           00350000
*/* ******************************************************************/ 00400000
*/*                                                                  */ 00450000
*/*  THIS DSECT DESCRIBES AN ENTRY IN THE CHANNEL AVAILABILITY       */ 00500000
*/*  TABLE. THE TABLE IS CPU RELATED AND RESIDES IN THE PCCA.        */ 00550000
*/*  EACH PHYSICAL CHANNEL ATTACHED TO THE CPU CONTAINS AN ENTRY     */ 00600000
*/*  IN THE CAT AND IS INDEXED BY THAT CHANNEL NUMBER. THE ENTRY     */ 00650000
*/*  CONTAINS THE CHANNEL ID, CHANNEL STATUS, AND CHANNEL            */ 00700000
*/*  STATISTICS.                                                     */ 00750000
*/*  THE FOLLOWING FIELDS ARE MODIFIED BY  THE I/O SUPERVISOR.       */ 00800000
*/*  THE MODIFICATIONS ARE SERIALIZED VIA DISABLED STATE AND         */ 00850000
*/*  ALWAYS IN THE CPU OWNING THIS CAT.                              */ 00900000
*/*         CATFLA                                                   */ 00950000
*/*         CATSIOCT                                                 */ 01000000
*/*                                                                  */ 01050000
*/* ******************************************************************/ 01100000
* %      GOTO CATPLS2;             /*                                   01150000
         SPACE 1                                                        01200000
CATFLG   DS    XL1                 CAT ENTRY FLAG BYTE (NON-IOS)        01250000
CATRES1  EQU   X'80'               RESERVED                             01300000
CATNOP   EQU   X'40'               CHANNEL NOT OPERATIVE                01350000
CATNGEN  EQU   X'20'               CHANNEL NOT SYSGENNED                01400000
CATNCPU  EQU   X'10'               CHANNEL NOT ON THIS CPU              01450000
CATNID   EQU   X'08'               CHANNEL ID (CATCHID) INVALID         01500000
CATFLG5  EQU   X'04'               RESERVED                             01550000
CATFLG6  EQU   X'02'               RESERVED                             01600000
CATDSABL EQU   X'01'               CHANNEL DISABLED            @ZA30350 01650000
CATFLA   DS    XL1                 IOS FLAG BYTE                        01700000
CATBSY   EQU   X'80'               CHANNEL BUSY                         01750000
CATIORST EQU   X'40'               CHAN NEED I/O RESTART       @G552PLM 01770055
CATCCRST EQU   X'20'               CHAN ERR ON I/O INTERRUPT   @G51BPLM 01800051
CATMCRST EQU   X'10'               CHAN ERR ON MACH CHK INTRPT @G51BPLM 01810051
CATSOL   EQU   X'08'               SIO CC=0 DONE               @ZA30350 01820000
CATFLARS EQU   X'07'               RESERVED                    @ZA30350 01830000
CATSIOCT DS    XL2                 CHANNEL SIO COUNT                    01850000
CATCHID  DS    XL4                 CHANNEL ID                           01900000
CATELP2  EQU    3                  ENTRY LENGTH IN POWERS OF 2          01950000
CATEL    EQU   *-CAT               CHANNEL TABLE ENTRY LENGTH           02000000
         MEND  ,                   */                                   02050000
*%CATPLS2 : ;                                                           02100000
*   DCL 1 CAT  BASED(CATPTR),                                           02150000
*       2 CATENTRY CHAR(1),        /* ENTRY NAME              */        02200000
*         3 CATFLG CHAR(1),        /* CAT FLAG BYTE (NON-IOS) */        02250000
*          4 CATRES1 BIT(1),       /* RESERVED                */        02300000
*          4 CATNOP  BIT(1),       /* CHANNEL NOT OPERATIVE   */        02350000
*          4 CATNGEN BIT(1),       /* CHANNEL NOT SYSGENNED   */        02400000
*          4 CATNCPU BIT(1),       /* CHANNEL NOT ON THIS CPU */        02450000
*          4 CATNID  BIT(1),       /* CHANNEL ID INVALID      */        02500000
*          4 CATFLG5 BIT(1),       /* RESERVED                */        02550000
*          4 CATFLG6 BIT(1),       /* RESERVED                */        02600000
*          4 CATDSABL BIT(1),      /* CHANNEL DISABLED       @ZA30350*/ 02650000
*       2 CATFLA   BIT(8),         /* IOS FLAG BYTE           */        02700000
*         3 CATBSY  BIT(1),        /* CHANNEL BUSY            */        02750000
*         3 CATIORST BIT(1),       /* CHAN NEEDS I/O RESTART @G552PLM*/ 02770055
*         3 CATCCRST BIT(1),       /* CHAN ERR I/O INTRUPT   @G51BPLM*/ 02800051
*         3 CATMCRST BIT(1),       /* CHAN ERR ON MACH CHK   @G51BPLM*/ 02810051
*         3 CATSOL BIT(1),         /* SIO CC=0 DONE          @ZA30350*/ 02820000
*         3 CATFLARS BIT(3),       /* RESERVED               @ZA30350*/ 02830000
*       2 CATSIOCT  CHAR(2),       /* CHANNEL SIO COUNT       */        02850000
*       2 CATCHID   CHAR(4),       /* CHANNEL ID              */        02900000
*       2 CATEND  CHAR(0);         /* END OF CAT              */        02950000
*   DCL CATELP2 BIT(8) CONSTANT('03'X);  /*                             03000000
*                                     ENTRY LENGTH IN                   03050000
*                                     POWERS OF 2             */        03100000
*                                                                       03150000
*%DCL  CATEL  CHAR;                /* LENGTH OF CAT           */        03200000
*%CATEL='ADDR(CATEND)-ADDR(CATENTRY)';                                  03250000
./  ADD  SSI=50090417,NAME=IECDCRCA
*%GOTO CRCAPLS ;   /* BILINGUAL MAPPING */                              03000003
         MACRO                                                          03800003
         IECDCRCA   &DSECT=YES                                          04600003
.*A000000-999999                                                Y30CQLF 05400003
*%CRCAPLS: ;                                                            06200003
*              /* BILINGUAL MAPPING                                     07000003
*********************************************************************** 07800003
********************       OS/VS2 REL3             ******************** 08600003
*****     CHANNEL RECONFIGURATION HARDWARE COMMUNICATIONS AREA    ***** 09400003
********************        MAY 16, 1974           ******************** 10200003
**********************************************************************/ 11000003
*%GOTO CRCAPL2 ;   /*                                                   11800003
         AIF   ('&DSECT' EQ 'YES').DSECT                                12600003
IECVCRCA DS    0D                                                       13400003
         AGO   .NDSECT                                                  14200003
.DSECT   ANOP                                                           15000003
CRCA     DSECT                                                          15800003
         DS    0D                                                       16600003
.NDSECT  ANOP                                                           17400003
CRCAID   DC    CL4'CRCA'               CRCA IDENTIFIER                  18200003
*********************************************************************** 19000003
***                      CRCA FLAGS                                 *** 19800003
*********************************************************************** 20600003
CRCAFLGS DS    0F                      FLAGS                            21400003
CRCAFLG1 DC    X'00'                   FIRST FLAG BYTE                  22200003
CRCADIAG EQU   X'80'                   CRH CONNECTION OUTSTANDING       23000003
CRCADINT EQU   X'40'                   CRH INTERRUPT - FLAG FOR CCH     23800003
CRCACCH  EQU   X'20'                   CHANNEL BURP  - FLAG FOR IOS     24600003
CRCAHIO  EQU   X'10'                   CRH INTERRUPT - FLAG FROM HIO    25000003
CRCAFTIM EQU   X'08'                   CRHT 1ST TIME ENTERED   @ZM30496 25200003
*                                                                       25400003
CRCAFLG2 DC    X'00'                   SECOND FLAG BYTE                 26200003
CRCAFLG3 DC    X'00'                   RESERVED                         27000003
CRCAFLG4 DC    X'00'                   RESERVED                         27800003
*********************************************************************** 28600003
****              MAINTENANCE CONTROL WORD                         **** 29400003
*********************************************************************** 30200003
CRCAMCW  DS    0D                      USED BY ALL CRH ROUTINES TO      31000003
*                                      CONTROL THE HARDWARE             31800003
CRCAMCWZ DC    X'01'                   MCW CHANNEL FUNCTION BYTE        32000003
CRCAMCWY EQU   X'01'                   BIT ALWAYS ON IN MCW FOR CRH     32200003
         DC    XL2'00'                 UNUSED BY CRH                    32600003
CRCAMCWF DC    X'00'                   MCW CRH FUNCTION BYTE            33400003
CRCAMCWI EQU   X'20'                   MCW FOR CRH                      34200003
CRCAMCWM EQU   X'10'                   ORING FLAG-MAKE CRH CONNECTION   35000003
CRCAMCWB EQU   X'EF'                   ANDING FLAG-BREAK CRH CONNECTION 35800003
         DC    F'0'                    UNUSED BY CRH                    36600003
*********************************************************************** 37400003
***                         ADDRESSES                               *** 38200003
*********************************************************************** 39000003
CRCACRHT DC    V(IECVCRHT)             ADDRESS OF TIMER POP ROUTINE     39800003
CRCACRH1 DC    V(IECVCRH1)             ADDRESS OF TCH HOOK ROUTINE      40600003
CRCACRH2 DC    V(IECVCRH2)             ADDRESS OF SIO HOOK ROUTINE      41400003
CRCACRH3 DC    V(IECVCRH3)             ADDRESS OF SENSE HOOK ROUTINE    42200003
CRCACINT DC    V(IECVCINT)             ADDRESS OF CRH SLIH              43000003
CRCAPCCA DC    A(0)                    ADDRESS OF PCCA FOR DEAD CPU     43800003
CRCACAT  DC    A(0)                    ADDRESS OF CAT FOR DEAD CPU      44600003
CRCARSV1 DC    2F'0'                   RESERVED                         45400003
*********************************************************************** 46200003
****                        CRCA WORK AREAS                        **** 47000003
*********************************************************************** 47800003
CRCACHAN DC    H'0'                    CHANNEL ID OF CONNECTED CHANNEL  48600003
CRCARSV2 DC    H'0'                    RESERVED                         49400003
CRCACTIM DC    D'0'                    CURRENT TIME - USED BY IECVCRHT  50200003
CRCAITIM DC    D'0'                    TIME OF LAST I/O INTERRUPT       51000003
CRCARSV3 DC    2F'0'                   RESERVED                         51800003
CRCAEND  EQU   *                                                        52600003
*********************************************************************** 53400003
         MEND  ,                       */                               54200003
*%CRCAPL2: ;                                                            55000003
  DCL 1 CRCA BASED(CRCAPTR),                                            55800003
        2 CRCAID CHAR(4),              /* CRCA IDENTIFIER            */ 56600003
 /********************************************************************/ 57400003
 /*                         CRCA FLAGS                               */ 58200003
 /********************************************************************/ 59000003
        2 CRCAFLGS,                    /* FLAGS                      */ 59800003
          3 CRCAFLG1 CHAR(1),          /* FIRST FLAG BYTE            */ 60600003
            4 CRCADIAG BIT(1),         /* CRH CONNECTION OUTSTANDING */ 61400003
            4 CRCADINT BIT(1),         /* CRH INTERRUPT-FLAG FOR CCH */ 62200003
            4 CRCACCH  BIT(1),         /* CHANNEL BURP -FLAG FOR IOS */ 63000003
            4 CRCAHIO  BIT(1),         /* CRH INTERRUPT-FLAG FROM HIO*/ 63400003
            4 CRCAFTIM BIT(1),         /* CRHT 1ST TIME IN   @ZM30496*/ 63800003
            4 *        BIT(3),         /* RESERVED           @ZM30496*/ 64200003
          3 CRCAFLG2 CHAR(1),          /* SECOND FLAG BYTE           */ 64600003
          3 CRCAFLG3 CHAR(1),          /* RESERVED                   */ 65400003
          3 CRCAFLG4 CHAR(1),          /* RESERVED                   */ 66200003
 /********************************************************************/ 67000003
 /*                         MAINTENANCE CONTROL WORD                 */ 67800003
 /********************************************************************/ 68600003
        2 CRCAMCW CHAR(8) BDY(DWORD),  /* USED BY ALL CRH ROUTINES      69400003
                                          TO CONTROL THE HARDWARE    */ 70200003
          3 CRCAMCWZ CHAR(1),          /* CHANNEL FUNCTION BYTE      */ 70400003
            4 *        BIT(7),         /* UNUSED BY CRH              */ 70600003
            4 CRCAMCWY BIT(1),         /* BIT ALWAYS ON FOR CRH      */ 70800003
          3 *        CHAR(2),          /* UNUSED BY CRH              */ 71000003
          3 CRCAMCWF CHAR(1),          /* MCW CRH FUNCTION BYTE      */ 71800003
            4 *        BIT(2),         /* UNUSED BY CRH              */ 72600003
            4 CRCAMCWI BIT(1),         /* BIT ON-MCW FOR CRH         */ 73400003
            4 CRCAMCWM BIT(1),         /* BIT ON-MAKE CRH CONNECTION    74200003
                                         BIT OFF-BREAK CRH CONNECTION*/ 75000003
            4 CRCAMCWC BIT(4),         /* CHANNEL NUMBER OF CONNECTED   75800003
                                          CHANNEL                    */ 76600003
          3 *        CHAR(4),          /* UNUSED BY CRH              */ 77400003
 /********************************************************************/ 78200003
 /*                         ADDRESSES                                */ 79000003
 /********************************************************************/ 79800003
        2 CRCACRHT PTR(31),            /* ADDRESS OF TIMER POP RTN.  */ 80600003
        2 CRCACRH1 PTR(31),            /* ADDRESS OF TCH HOOK ROUTINE*/ 81400003
        2 CRCACRH2 PTR(31),            /* ADDRESS OF SIO HOOK ROUTINE*/ 82200003
        2 CRCACRH3 PTR(31),            /* ADDRESS OF SENSE HOOK RTN. */ 83000003
        2 CRCACINT PTR(31),            /* ADDRESS OF CRH SLIH        */ 83800003
        2 CRCAPCCA PTR(31),            /* ADDR OF PCCA FOR DEAD CPU  */ 84600003
        2 CRCACAT  PTR(31),            /* ADDRESS OF CAT FOR DEAD CPU*/ 85400003
        2 CRCARSV1 CHAR(8),            /* RESERVED                   */ 86400003
 /********************************************************************/ 87000003
 /*                         CRCA WORK AREAS                          */ 87800003
 /********************************************************************/ 88600003
        2 CRCACHAN CHAR(2) BDY(WORD),  /* CHANNEL ID OF CONNECTED       89400003
                                          CHANNEL                    */ 90200003
        2 CRCARSV2 CHAR(2),            /* RESERVED                   */ 91000003
        2 CRCACTIM CHAR(8) BDY(DWORD), /* CURRENT TIME - USED BY        91800003
                                          IECVCRHT                   */ 92600003
        2 CRCAITIM CHAR(8) BDY(DWORD), /* TIME OF LAST I/O INTERRUPT */ 93400003
        2 CRCARSV3 CHAR(8),            /* RESERVED                   */ 94200003
        2 CRCAEND  CHAR(*);                                             95000003
 /********************************************************************/ 95800003
./  ADD  SSI=42391340,NAME=IECDEPCB
         MACRO                                                          00050002
         IECDEPCB                                                       00100002
*********************************************************************** 00150002
*                  EXCP PURGE CONTROL BLOCK                           * 00200002
*                                                                     * 00250002
*        THE EXCP PURGE CONTROL BLOCK IS BUILT BY EXCP PURGE          * 00300002
*        SUBROUTINE AND IS USED BY EXCP RESTORE SUBROUTINE TO         * 00350002
*        RESTORE THE PURGED REQUESTS IN THE APPROPRIATE PROTECT       * 00400002
*        KEY AND UNDER THE APPROPRIATE TCB.                           * 00450002
*                                                                     * 00500002
*********************************************************************** 00550002
         SPACE 2                                                        00600002
EPCB     DSECT                                                          00650002
EPCBCHN  DS    F                   CHAIN TO NEXT EPCB BLOCK             00700002
EPCBRTCB DS    A                   1ST I/O REL REQ TCB ADDR    @YM06170 00705002
EPCBENT  DS    0F                  POINTER TO CURRENT ENTRY             00710002
EPCBNENT DS    XL1                 NUMBER OF FREE ENTRIES IN            00720002
*                                  TABLE                                00730002
EPCBENTY DS    AL3                 SAME AS EPCBENT                      00740002
* A SPECIFIC ENTRY IS DESCRIBED BELOW                                   00740102
EPCBIOB  DS    0F                  IOB ADDRESS OF THE REQUEST           00740402
EPCBPKEY DS    X                   PROTECT KEY OF THE REQUEST           00742002
*                                  ORIGINALLY ISSUED.                   00744002
EPCBIOBA DS    AL3                 IOB ADDRESS OF THE REQUEST           00746002
*                                  TO BE RESTORED                       00748002
EPCBTCB  DS    A                   ADDRESS OF THE TCB OR ZEROS          00750002
*                                  IF THE PURGE REQUEST WAS NOT         00800002
*                                  MEMORY QUIESCE OR ORIGINATING        00850002
*                                  TCB RESTORE WAS NOT SPECIFIED        00900002
*                                  THIS ADDRESS WILL BE ZERO TO         00950002
*                                  SPECIFY RESTORE TO TCB THAT          01000002
*                                  REQUESTED THE RESTORE.               01050002
EPCBENTL EQU   *-EPCBIOB           ENTRY LENGTH                         01100002
*        END OF ENTRIES IS DEPICTED AS A FULL WORD OF ZEROS             01650002
*        FOLLOWING THE LAST ENTRY.                                      01700002
EPCBHDRL EQU  EPCBIOB-EPCB        LENGTH OF HEADER             @ZA00884 01720003
*                                                          *   @ZA00884 01730003
EPCBBL   EQU   188                 SIZE OF A SPECIFIC EPCB BLK @YM06170 01750003
EPCBNE   EQU  (EPCBBL-EPCBHDRL)/EPCBENTL  NUMBER OF ENTRIES    @ZA00884 01800003
         MEND                                                           01850002
./  ADD  SSI=32890532,NAME=IECDFIX
         MACRO                                                          00050021
         IECDFIX                                                        00100021
FIX      DSECT                                                          00150021
         SPACE 1                                                        00200021
**********************************************************************  00250021
*                                                                    *  00300021
*        THIS DSECT DESCRIBES THE FIX LIST WHICH IS BUILT BY THE     *  00350021
*        CCW TRANSLATOR TO FIX DATA PAGES. THERE IS A CHAIN POINTER  *  00400021
*        AND ROOM FOR 19 FIX ENTRIES.                                *  00450021
*                                                                    *  00460021
**********************************************************************  00500021
         SPACE 1                                                        00550021
FIXCHAIN DS    A                   POINTER TO NEXT FIX LIST             00600021
FIXECB   DS    A                   FIX LIST ECB USED FOR PAGE FIX       00650021
FIXLSTST DS    A                   START ADDRESS OF AREA TO BE FIXE     00700021
FIXLSTEN DS    A                   END ADDRESS OF AREA TO BE FIXED      00800021
FIXHL    EQU   FIXLSTST-FIX        HEADER LENGTH                        00850021
FIXEL    EQU   FIXLSTEN+L'FIXLSTEN-FIXLSTST ENTRY LENGTH                00900021
FIXNE    EQU   19                  NUMBER OF FIX LIST ENTRIES           00950021
FIXBL    EQU   FIXHL+FIXEL*FIXNE   SIZE OF FIX LIST BLOCK               01000021
FIXCONT  EQU   X'80'               FIX CONTINUATION FLAG                01010021
LASTENT  EQU   X'80'               LAST ENTRY FLAG                      01020021
UNFIXIND EQU   X'20'               UNFIX INDICATOR                      01030002
         MEND                                                           01050021
./  ADD  SSI=82370188,NAME=IECDHIDT
*        %GOTO HIDT1;              /*HIDT MAPPING                       00050041
         MACRO                                                          00100041
         IECDHIDT                                                       00150041
*************** START OF SPECIFICATIONS ******************************* 00200041
*                                                                     * 00250041
* MODULE NAME - IECVHIDT                                              * 00300041
*                                                                     * 00350041
* DESCRIPTIVE NAME - HOT IO DETECTION THRESHOLDS                      * 00400041
*                                                                     * 00450041
* COPYRIGHT - NONE                                                    * 00500041
*                                                                     * 00550041
* STATUS -                                                            * 00600041
*                                                                     * 00650041
* FUNCTION -                                                          * 00700041
*   THIS NON-EXECUTABLE MODULE CONTAINS THE THRESHOLDS USED BY        * 00750041
*   IECVHDET TO DETERMINE IF HOT I/O IS OCCURRING. THE CONTENTS       * 00800041
*   OF THIS MODULE ARE MAPPED BY IECDHIDT.                            * 00850041
*                                                                     * 00900041
*   OPERATION - NA                                                    * 00950041
*                                                                     * 01000041
* METHOD OF ACCESS                                                    * 01050041
*   TO CREATE CSECT USE BAL:                                          * 01100041
*     IECDHIDT                                                        * 01150041
*   TO GET MAPPING USE PLS:                                           * 01200041
*     INCLUDE IECDHIDT FROM SYSLIB                                    * 01250041
*                                                                     * 01300041
* NOTES -                                                             * 01350041
*                                                                     * 01400041
*   DEPENDENCIES -                                                    * 01450041
*     NONE OF THE THRESHOLDS MAY BE CHANGED TO A VALUE SMALLER THAN 2 * 01500041
*                                                                     * 01550041
*   RESTRICTIONS - NONE                                               * 01600041
*                                                                     * 01650041
*   REGISTER CONVENTIONS - NA                                         * 01700041
*                                                                     * 01750041
*   PATCH LABEL - NONE                                                * 01800041
*                                                                     * 01850041
* MODULE TYPE - NON-EXECUTABLE                                        * 01900041
*                                                                     * 01950041
*   PROCESSOR - ASSEMBLER                                             * 02000041
*                                                                     * 02050041
*   MODULE SIZE - 4 BYTES                                             * 02100041
*                                                                     * 02150041
*   ATTRIBUTES - NUCLEUS RESIDENT, NON-EXECUTABLE                     * 02200041
*                                                                     * 02250041
* ENTRY POINT - N/A                                                   * 02300041
*                                                                     * 02350041
* EXIT-NORMAL - N/A                                                   * 02400041
*                                                                     * 02450041
* EXIT-ERROR - N/A                                                    * 02500041
*                                                                     * 02550041
* EXTERNAL REFERENCES - NONE                                          * 02600041
*                                                                     * 02650041
* TABLES - N/A                                                        * 02700041
*                                                                     * 02750041
* MACROS - NONE                                                       * 02800041
*                                                                     * 02850041
* SERIALIZATION - NONE                                                * 02900041
*                                                                     * 02950041
* CHANGE ACTIVITY - NONE                                              * 03000041
*   A000000-999999                                          @ZA30350  * 03050041
*                                                                     * 03100041
* MESSAGES - NONE                                                     * 03150041
*                                                                     * 03200041
********************* END OF SPECIFICATIONS *************************** 03250041
IECVHIDT CSECT                                                          03300041
         DC    XL2'64'             HOT CHANNEL THRESHOLD                03350041
         DC    XL2'64'             HOT DEVICE THRESHOLD                 03400041
         DC    XL2'0C'             TIMEOUT THRESHOLD                    03450041
         DC    XL2'04'             TIMEOUT INTERVAL IN SECONDS          03500041
         END                                                            03550041
         MEND                      */                                   03600041
*%HIDT1:  ;                                                             03650041
*                                                                       03700041
 /********************************************************************/ 03750041
 /*                                                                  */ 03800041
 /* CONTROL BLOCK NAME - HIDT                                        */ 03850041
 /*                                                                  */ 03900041
 /* DESCRIPTIVE NAME - HOT I/O DETECTION THRESHOLDS                  */ 03950041
 /*                                                                  */ 04000041
 /* FUNCTION -                                                       */ 04050041
 /*   THE HIDT CONTAINS THE THRESHOLDS WHICH ARE USED BY MODULE      */ 04100041
 /*   IECVHIDT TO DETERMINE IF HOT I/O IS OCCURRING.                 */ 04150041
 /*                                                                  */ 04200041
 /* CHANGE ACTIVITY -                                                */ 04250041
 /*   A000000-999999                                         @ZA30350*/ 04300041
 /*                                                                  */ 04350041
 /********************************************************************/ 04400041
 DCL                                                                    04450041
   1 HIDT BASED,                   /*HOT I/O DETECTION THRESHOLDS    */ 04500041
     3 HIDTCHAN FIXED(15),         /*HOT CHANNEL THRESHOLD           */ 04550041
     3 HIDTDEV FIXED(15),          /*HOT DEVICE THRESHOLD            */ 04600041
     3 HIDTTIME FIXED(15),         /*TIMEOUT DETECTION THRESHOLD     */ 04650041
     3 HIDTINTV FIXED(15);         /*TIMEOUT INTERVAL IN SECONDS     */ 04700041
./  ADD  SSI=32890550,NAME=IECDIDAL
         MACRO                                                          00050021
         IECDIDAL                                                       00100021
IDAL     DSECT                                                          00150021
         SPACE 1                                                        00200021
**********************************************************************  00250021
*                                                                    *  00300021
*        THIS DSECT DESCRIBES THE GETMAINED BLOCK OF CORE WHICH      *  00350021
*        CONTAINS INDIRECT ADDRESS LISTS FOR THE CCW TRANSLATOR.     *  00400021
*        THERE IS ROOM IN ONE IDAL FOR 38 ENTRIES.                   *  00450021
*                                                                    *  00500021
**********************************************************************  00550021
         SPACE 1                                                        00600021
IDALCHN  DS    A                   POINTER TO NEXT INDL                 00650021
         DS    A                   UNUSED                               00700021
IDALHL   EQU   *-IDAL              HEADER LENGTH                        00710021
IDALENTY DS    A                   INDIRECT ADDRESS LIST ENTRY          00750021
IDALEL   EQU   *-IDALENTY          ENTRY LENGTH                         00800021
IDALNE   EQU   38                  NUMBER OF ENTRIES                    00850021
IDALBL   EQU   IDALHL+IDALEL*IDALNE BLOCK LENGTH                        00900021
         MEND                                                           00950021
./  ADD  SSI=63340561,NAME=IECDIOQ
* %      GOTO IOQPLS;              /* GO TO THE PLS VERSION   */        00050021
         MACRO                                                          00100021
         IECDIOQ                                                        00110021
IOQ      DSECT                                                          00150021
         SPACE 1                                                        00200021
****************************************************************        00250021
*                                                              *        00300021
*   THIS DSECT DESCRIBES THE ELEMENT USED BY THE I/O           *        00350021
*   SUPERVISOR WHEN QUEUING I/O REQUESTS TO A LOGICAL          *        00400021
*   CHANNEL OR TO A DEVICE (UCB).                              *        00450021
*                                                              *        00500021
****************************************************************        00550021
         SPACE 1                                                        00600021
IOQLNK   DS    A                   LINK FIELD                           00650021
IOQFLA   DS    XL1                 IOQ FLAG BYTE A                      00660021
IOQSLCH  EQU   X'80'               IOQ ASSOC WITH A SENSE LCH           00662002
IOQENQ   EQU   X'40'               IOQ IS ENQUEUED                      00664002
IOQLBSY  EQU   X'20'               UPDATE LCHLGBSY COUNTER              00666021
IOQPBSY  EQU   X'10'               UPDATE LCHPYBSY COUNTER              00668021
*        EQU   X'08'               RESERVED                             00668421
*        EQU   X'04'               RESERVED                             00668821
*        EQU   X'03'               RESERVED                             00669221
IOQFLB   DS    XL1                 IOQ FLAG BYTE B                      00670002
IOQRESV  EQU   X'80'               RESERVE FLAG                         00672002
IOQRLSE  EQU   X'40'               RELEASE FLAG                         00674002
IOQALOC  EQU   X'3C'               ALLOCATED IND TO IECVSMGR            00676004
IOQHOLD  EQU   X'02'               3330V REQUEST HELD          @G24LPLN 00676300
*        EQU   X'01'               RESERVED                             00676600
IOQPRI   DS    XL1                 PRIORITY                             00680021
IOQPTH   DS    XL1                 CURRENT PATH MASK                    00690002
IOQIOSB  DS    A                   ADDRESS OF IOSB                      00700021
IOQL     EQU   *-IOQLNK            LENGTH OF IOQ                        00710021
         MEND                                                           00750021
*%IOQPLS: ;                                                             00800021
*                                                                       00850021
*/*************************************************************/        00900021
*/*                                                           */        00950021
*/*  THIS STRUCTURE DESCRIBES THE ELEMENT USED BY THE I/O     */        01000021
*/*  SUPERVISOR WHEN QUEUING  I/O REQUESTS  TO A  LOGICAL     */        01050021
*/*  CHANNEL OR TO A DEVICE (UCB).                            */        01100021
*/*                                                           */        01150021
*/*************************************************************/        01200021
*/*                                                           */        01250021
*/*   05/30/72  LEVEL=00                                      */        01300021
*/*                                                           */        01350021
*/*************************************************************/        01400021
*                                                                       01450021
*   DCL 1 IOQ  BDY(WORD)  BASED(IOQPTR),                                01460021
*       2 IOQLNK    PTR(31),       /* LINK FIELD              */        01500021
*       2 IOQFLAGS  PTR(31),       /* ADDRESS OF IOSB         */        01550021
*         3 IOQFLA  BIT(8),        /* IOQ FLAG BYTE A         */        01560021
*          4 IOQSLCH  BIT(1),      /* IOQ ASSOC WTH SENSE  LCH*/        01560402
*          4 IOQENQ   BIT(1),      /* IOQ IS ENQUEUED         */        01560802
*          4 IOQLBSY  BIT(1),      /* UPDATE LCHLGBSY COUNTER */        01561221
*          4 IOQPBSY  BIT(1),      /* UPDATE LCHPYBSY COUNTER */        01561621
*          4 *        BIT(4),      /* RESERVED                */        01561921
*         3 IOQFLB  BIT(8),        /* IOQ FLAG BYTE B         */        01562002
*           4 IOQRESV BIT(1),      /* RESERVE FLAG            */        01562402
*           4 IOQRLSE BIT(1),      /* RELEASE FLAG            */        01562802
*           4 IOQALOC BIT(4),      /* ALLOCATED IND TO        */        01563204
*                                  /* IECVSMGR                */        01563404
*           4 IOQHOLD BIT(1),      /* 3330V REQUEST HELD     @G24LPLN*/ 01563700
*         3 IOQPRI  CHAR(1),       /* PRIORITY                */        01564002
*         3 IOQPTH  CHAR(1),       /* CURRENT PATH MASK       */        01566002
*       2 IOQIOSB   PTR(31),       /* ADDRESS OF IOSB         */        01570021
*       2 IOQEND    CHAR(0);       /* END OF IOQ              */        01600021
*                                                                       01650021
*%DCL IOQL  CHAR;                  /* LENGTH OF IOQ           */        01700021
*%IOQL='ADDR(IOQEND)-ADDR(IOQLNK)';                                     01750021
./  ADD  SSI=80730519,NAME=IECDIPIB
* %      GOTO IPIBPLS;             /* GO TO PLS VERSION       */        00050021
         MACRO                                                          00100021
         IECDIPIB   &DSECT=YES                                          00150002
         AIF   ('&DSECT' EQ 'NO').IPIB1                                 00160002
IPIB     DSECT                                                          00200021
         AGO   .IPIB2                                                   00210002
.IPIB1   ANOP                                                           00220002
IPIB     DS    0D                                                       00230002
.IPIB2   ANOP                                                           00240002
         SPACE 1                                                        00250021
****************************************************************        00300021
*                                                              *        00350021
*   THIS DSECT DESCRIBES THE IOS PURGE INTERFACE BLOCK WHICH   *        00400021
*   IS BUILT IN THE PURGE WORK AREA. IT IS USED TO HOLD ALL    *        00420021
*   THE INFORMATION THAT IS COMMUNICATED BETWEEN PURGE AND     *        00430021
*   THE CHANNEL SCHEDULER AND ITS DRIVERS.                     *        00440021
*                                                              *        00450021
****************************************************************        00500021
         SPACE 1                                                        00550021
IPIBOPT  DS    XL1                 OPTIONS NEEDED BY DRIVERS            00600021
*                                  FOR CHANNEL SCHEDULER WHEN           00650021
*                                  PURGING THEIR QUEUES.                00700021
IPIBMEM  EQU   X'80'               ASID PURGE WAS SPECIFIED             00750002
IPIBTASK EQU   X'40'               TCB PURGE WAS SPECIFIED IF           00800021
*                                  ASID PURGE WAS NOT                   00850002
*                                  SPECIFIED                            00900021
IPIBRBP  EQU   X'20'               RB PURGE SPECIFIED                   00910002
IPIBPOST EQU   X'10'               POST THE ECBS RELATED TO THE         00950021
*                                  I/O REQUESTS THAT ARE PURGED         01000021
IPIBREL  EQU   X'08'               PURGE ONLY REQUESTS THAT ARE         01050021
*                                  MARKED RELATED                       01100021
IPIBHALT EQU   X'04'               HALT I/O REQUESTS - DO NOT           01150021
*                                  BUILD A CHAIN FOR RESTORE            01200021
IPIBOTCB EQU   X'02'               PURGE SO THAT I/O REQUESTS           01210021
*                                  MAY BE RESTORED TO THE               01230021
*                                  ORIGINATING TCB                      01240021
         SPACE 1                                                        01250021
IPIBDVID DS    XL1                 DRIVER ID FOR DSID PURGE  DCRR 21082 01260002
*                                  DEFAULT VALUE OF X'00'    DCRR 21082 01270002
*                                  IMPLIES EXCP              DCRR 21082 01280002
IPIBFLG1 DS    XL1                 FLAG BYTE                   @ZA12676 01284003
IPIBDQ   EQU   X'80'               INDICATES PURGEDQ ISSUED BY          01288003
*                                  IGC0001F                    @ZA12676 01292003
         DS    XL1                 RESERVED                    @ZA12676 01296003
IPIBCNT  DS    A                   COUNT OF I/O REQUESTS TO BE          01350021
*                                  COMPLETED. DECREMENTED BY            01400021
*                                  IOS DRIVERS WHEN I/O EVENT           01450021
*                                  COMPLETES                            01460021
IPIBECB  DS    A                   ECB TO BE POSTED WHEN IPIBCNT        01500021
*                                  GOES TO ZERO. PURGE WAITS ON         01550021
*                                  THIS ECB WHEN THE COUNT IS           01600021
*                                  ESTABLISHED.                         01650021
IPIBARG  DS    A                   PURGE ARGUMENT. IF ASID              01700002
*                                  PURGE, THE RIGHT TWO BYTES           01750021
*                                  CONTAIN THE ASID OF THE ASID         01800002
*                                  BEING PURGED AND THE LEFT            01850002
*                                  TWO BYTES CONTAIN THE SIGN           01860021
*                                  BIT OF THE ASID. IF TCB              01870021
*                                  PURGE, THEN THE TCB ADDRESS.         01900021
IPIBSRB  DS    A                   POINTER TO FIRST SRB ON CHAIN        01950021
*                                  OF SRBS THAT HAVE BEEN COL-          02000021
*                                  LECTED FOR RETURN TO THE             02050021
*                                  APPROPRIATE DRIVER OF THE            02100021
*                                  CHANNEL SCHEDULER.                   02150021
IPIBIO   DS    A                   POINTER TO I/O REQUEST CHAIN         02200021
*                                  RETURNED TO PURGE FOR PLACE-         02250021
*                                  MENT ON THE PIRL.                    02300021
IPIBDVRU DS    A                   POINTER TO ADDITIONAL INFOR-         02310021
*                                  MATION THE DRIVER MAINTAINS          02320021
*                                  INSURE TO THE PROPER RESTOR-         02340021
*                                  ATION OF ITS QUEUE OF I/O            02344021
*                                  REQUESTS (E.G.PROTECT KEYS           02346021
*                                  TCB ADDRESSES ETC)                   02348021
IPIBPIRL DS    A                   POINTER TO PIRL FOR THIS             02350021
*                                  PURGE REQUEST.                       02400021
IPIBPSQ  DS    A                   POINTER TO CHAIN OF I/O RE-          02450021
*                                  QUESTS INVOLVED WITH THIS            02500021
*                                  PURGE FOUND BY ROUTINES RUN-         02550021
*                                  NING ASYNCHRONOUSLY WITH THE         02600021
*                                  PURGE ROUTINE (E.G. THE IN-          02650021
*                                  TERRUPT HANDLER).                    02700021
IPIBLNK  DS    A                   MAY BE A MAX OF 2 IPIBS/ASID@YM07220 02710002
*                                  IF SO, THIS POINTS TO 2ND  @YM07220  02720002
*                                  IPIB WHICH MUST BE A HALT OR = 0     02730002
IPIBASCB DS    A                   ASCB ADDRESS FOR MEMORY IN  @ZA30265 02736003
*                                  WHICH PURGE WAS ISSUED      @ZA30265 02742003
         MEND                                                           02750021
*%IPIBPLS: ;                                                            02800021
*                                                                       02850021
* /************************************************************/        02900021
* /*                                                          */        02950021
* /*   THIS STRUCTURE DESCRIBES THE IOS PURGE INTERFACE BLOCK */        03000021
* /*   WHICH IS BUILT IN THE PURGE WORK AREA . IT IS USED TO  */        03002021
* /*   HOLD ALL THE INFORMATION THAT IS COMMUNICATED BETWEEN  */        03004021
* /*   PURGE AND THE CHANNEL SCHEDULER AND ITS DRIVERS.       */        03014021
* /*                                                          */        03050021
* /************************************************************/        03100021
*                                                                       03150021
*DCL 1 IPIB  BDY(WORD)  BASED(IPIBPTR),                                 03160021
*    2 IPIBOPT     BIT(8),         /* OPTIONS NEEDED BY DRVRS           03200002
*                                     OF CHANNEL SCHEDULR WHEN          03250002
*                                     PURGING THEIR QUEUES    */        03300002
*     3 IPIBMEM    BIT(1),         /* ASID   PURGE WAS SPECFD */        03350002
*     3 IPIBTASK   BIT(1),         /* TCB PURGE WAS SPECIFIED           03400002
*                                     IF ASID   PURGE WAS NOT */        03450002
*     3 IPIBRBP    BIT(1),         /* RB PURGE SPECIFIED      */        03500002
*     3 IPIBPOST   BIT(1),         /* POST THE ECBS RELATED TO          03550002
*                                     THE I/O REQUESTS THAT             03600002
*                                     ARE PURGED              */        03650002
*     3 IPIBREL    BIT(1),         /* PURGE ONLY REQUESTS THAT          03700002
*                                     ARE MARKED RELATED      */        03702002
*     3 IPIBHALT   BIT(1),         /* HALT I/O REQUESTS - DO            03710002
*                                     NOT BUILD A CHAIN FOR             03720002
*                                     RESTORE                 */        03722002
*     3 IPIBOTCB   BIT(1),         /* PURGE SO I/O REQUESTS             03730002
*                                     MAY BE RESTORED TO THE            03740002
*                                     ORIGINATING TCB         */        03750002
*     3 *          BIT(1),         /* RESERVED                */        03770021
*                                                                       03820021
*    2 IPIBDVID    CHAR(1),        /* DRIVER ID FOR DSID PURGE          03830002
*                                     DEFAULT VALUE OF X'00'            03840002
*                                     IMPLIES EXCP  DCRR 21082*/        03850002
*    2 IPIBFLG1    BIT(8),         /* FLAG BYTE              @ZA12676*/ 03854003
*     3 IPIBDQ     BIT(1),         /* IGC0001F ISSUED PURGEDQ@ZA12676*/ 03858003
*     3 *          BIT(7),         /* RESERVED               @ZA12676*/ 03862003
*    2 *           CHAR(1),        /* RESERVED               @ZA12676*/ 03866003
*    2 IPIBCNT     CHAR(4),        /* COUNT OF I/O REQUESTS TO          03920002
*                                     BE COMPLETED. DECREMENTD          03970002
*                                     BY IOS DRIVERS WHEN               04020002
*                                     I/O EVENT COMPLETES     */        04070002
*    2 IPIBECB     PTR(31),        /* ECB TO BE POSTED WHEN             04120002
*                                     IPIBCNT GOES TO ZERO.             04170002
*                                     PURGE WAITS ON THIS ECB           04220002
*                                     WHEN COUNT IS ESTABLISHD*/        04270002
*    2 IPIBARG     PTR(31),        /* PURGE ARGUMENT. IF ASID           04320002
*                                     PURGE, THE RIGHT 2 BYTES          04370002
*                                     CONTAIN THE ASID OF THE           04420002
*                                     ASID BEING PURGED AND             04470002
*                                     THE LEFT TWO BYTES HAVE           04480002
*                                     THE SIGN BIT OF THE ASID          04490002
*                                     IF TCB PURGE, THEN THE            04520002
*                                     TCB ADDRESS             */        04570002
*    2 IPIBSRB     PTR(31),        /* PTR TO FIRST SRB ON CHN           04620002
*                                     OF SRBS THAT HAVE BEEN            04670002
*                                     COLLECTED FOR RETURN TO           04720002
*                                     THE APPROPRIATE DRIVER            04770002
*                                     OF THE CHANNL SCHEDULER */        04820002
*    2 IPIBIO      PTR(31),        /* PTR TO I/O REQUEST CHAIN          04870002
*                                     RETURNED TO PURGE FOR             04920002
*                                     PLACEMENT ON THE PIRL   */        04970002
*    2 IPIBDVRU    PTR(31),        /* PTR TO ADTNL INFO EACH            04980002
*                                     DRIVER MAINTNS TO INSURE          04990002
*                                     PROPER RESTORATN OF ITS           05000002
*                                     QUEUE OF REQUESTS (E.G.           05012002
*                                     PROTECT KEYS - TCB ADDR)          05014002
*                                     RETURNED TO PURGE FOR             05016002
*                                     PLACEMENT ON THE PIRL   */        05018002
*    2 IPIBPIRL    PTR(31),        /* PTR TO PIRL FOR THIS              05020002
*                                     PURGE REQUEST           */        05070002
*    2 IPIBPSQ     PTR(31),        /* PTR TO CHAIN OF I/O REQ.          05120002
*                                     INVOLVED WITH THIS PURGE          05170002
*                                     FOUND BY ROUTINES RUNNG           05220002
*                                     ASYNCHRONOUSLY WITH THE           05270002
*                                     PURGE ROUTINE (E.G. THE           05320002
*                                     INTERRUPT HANDLER).     */        05370002
*    2 IPIBLNK    PTR(31),         /* PTS TO 2ND IPIB IF 2,  @YM07220*/ 05380002
*                                  /* EITHER PTS TO HALT IPIB@YM07220*/ 05390002
*                                  /* OR =0, MAX OF 2 IPIBS  @YM07220*/ 05400002
*    2 IPIBASCB   PTR(31),         /* ASCB ADDRESS FOR       @ZA30265*/ 05420003
*                                  /* MEMORY IN WHICH PURGE  @ZA30265*/ 05470003
*                                  /* WAS ISSUED             @ZA30265*/ 05520003
*                                                                       05570003
*    2 IPIBEND     CHAR(0);        /* END OF IPIB             */        05620003
./  ADD  SSI=82370190,NAME=IECDIRT
* %      GOTO IRTPLS;              /* GO TO THE PLS VERSION   */        00050021
*                                                                       00100021
         MACRO                                                          00150021
         IECDIRT                                                        00200021
         ORG   LCCAIRT                                                  00210021
IRT      DS    0D                                                       00250021
         SPACE 1                                                        00300021
****************************************************************        00350021
*                                                              *        00400021
*   THIS MACRO DSECT DESCRIBES THE IOS RECOVERY  TABLE.        *        00450021
*   THE TABLE IS RELATED TO A CPU AND IS LOCATED IN THE        *        00500021
*   LCCA.                                                      *        00550021
*                                                              *        00700021
****************************************************************        00750021
         SPACE 1                                                        00800021
IRTENTRY EQU   *                                                        00850021
IRTFLA   DS    XL1                 FLAG BYTE A                          00900021
         SPACE 1                                                        00950021
IRTULCK  EQU   X'80'               UCB LOCK HELD                        01000021
IRTLLCK  EQU   X'40'               LCH LOCK HELD                        01050021
IRTSLCK  EQU   X'20'               SYNCH LOCK HELD                      01100021
IRTCLCK  EQU   X'10'               CAT LOCK HELD                        01150021
IRTALCK  EQU   X'08'               SALLOC LOCK HLED                     01160021
IRTIOQA  EQU   X'04'               AN IOQ IS ACTIVE                     01200002
IRTSLISN EQU   X'02'               RECOVERY SENSE INDICATOR             01210002
IRTSSIGP EQU   X'01'               SHLDR TAP NEEDED FOR SENSE  @ZA16177 01260041
         SPACE 1                                                        01320002
IRTFLB   DS    XL1                 FLAG BYTE B                          01350021
IRTNRST  EQU   X'80'               SUPPRESS RESTART OF CURRENT          01360021
*                                  CHANNEL                              01370021
IRTSKRST EQU   X'40'               FIRST PASS OF CHAN. RESTART          01380021
IRTPCISW EQU   X'20'               FIRST PASS OF PCI                    01390021
IRTCHBSY EQU   X'10'               ALL CHANNELS BUSY                    01392021
IRTSMGR  EQU   X'08'               STORAGE MANAGER ENTERED              01392802
IRT12GT  EQU   X'04'               STORAGE MNGR - SMALL BLK GET         01393202
IRTCCHWA EQU   X'02'               SET IF CCH GETS EWA         @ZA18094 01393441
*        EQU   X'01'               RESERVED                    @ZA18094 01393641
         SPACE 1                                                        01396021
IRTENVR  DS    XL1                 ENVIRONMENT FLAGS                    01398021
IRTCHENT EQU   X'80'               CHAN SCHED ENTRANCE                  01398421
IRTSLIHA EQU   X'40'               I/O INT HNDLR ENTRANCE               01398821
IRTSHTP  EQU   X'20'               SHOULDER TAP ENTRANCE                01399221
IRTCRHIN EQU   X'10'               CRH INTERRUPT ON DEAD CPU   @ZA16177 01401241
IRTRSTI  EQU   X'08'               I/O RESTART IN PROGRESS              01405921
IRTHIO   EQU   X'04'               HIO IN PROCESS                       01407902
IRTPINT  EQU   X'02'               I/O RESTART PSEUDO INTERRUPT         01409902
IRTCSINT EQU   X'01'               CHANNEL SCHEDULER ENTRANCE           01411902
*                                  * INITIALIZATION COMPLETE            01413902
         SPACE 1                                                        01418521
         DS    XL1                 RESERVED                             01424802
         SPACE 1                                                        01431121
IRTSYMSK DS    XL1                 OLD SYSTEM MASK SET BY               01437421
*                                  CHANNEL SCHEDULER                    01443721
IRTCCH   DS    XL1                 CHANNEL CHECK HANDLER                01450021
*                                  COMMUNICATION BYTE                   01500021
IRTCMRST DS    XL1                 RESTART INDICATOR SET BY CHAN        01502021
*                                  SCHEDULER WHEN ENTERED. SET          01504021
*                                  IN THE OTHER CPU WHEN SHLDER         01506021
*                                  TAP IS TO BE DONE.                   01508021
*                                    FF = IOS ACTIVE AND RESTART        01508421
*                                       CAN BE DONE VIA RESTART         01508821
*                                       ROUTINE                         01509221
*                                    00 = IOS NOT ACTIVE. SHLDER        01509621
*                                       TAP TO BE USED TO RESTRT        01509721
IRTDETEC DS    XL1                 HOT I/O DETECTION FLAGS     @ZA30350 01510041
IRTDETR1 EQU   X'80'               RESERVED FOR HOT I/O DETEC  @ZA30350 01513041
IRTAVAIL EQU   X'40'               AVAILABILITY INTERRUPT      @ZA30350 01516041
IRTUNSOL EQU   X'20'               UNSOLICITED INTERRUPT       @ZA30350 01519041
IRTNOSYS EQU   X'10'               DEVICE NOT SYSGENED         @ZA30350 01522041
IRTHOTD  EQU   X'08'               HOT DEVICE DETECTION        @ZA30350 01525041
IRTINVDV EQU   X'04'               INVALID DEVICE ADDRESS AND  @ZA30350 01528041
*                                  CHANNEL ERROR               @ZA30350 01531041
IRTCUERR EQU   X'02'               CHANNEL ERROR-CONTROL UNIT  @ZA30350 01534041
*                                  PROBABLE CAUSE OF ERROR     @ZA30350 01537041
IRTCHERR EQU   X'01'               CHANNEL ERROR-CONTROL UNIT  @ZA30350 01540041
*                                  NOT PROBABLE CAUSE OF ERR   @ZA30350 01543041
IRTUCB   DS    A                   ADDRESS OF LOCKED UCB                01550021
IRTLCH   DS    A                   ADDRESS OF LOCKED LCH                01600021
IRTIOQ   DS    A                   ADDRESS OF ACTIVE IOQ                01650021
IRTCHNL  DS    A                   CURRENT CHANNEL USED BY TCH          01660021
IRTNIOQ  DS    A                   SAVED ADDRESS OF NEXT IOQ            01670021
IRTPSTSV DS    A                   IOQ SAVE AREA USED BY                01672002
*                                  CHANNEL SCHEDULER                    01674021
IRTCHMSK DS    A                   RESTART CHANNEL MASK THIS CPU        01680021
IRTRSV01 DS    A                   RESERVED                             01685041
IRTRTNSV DS    D                   USED BY CHAN SCHED AND SHLDR         01690021
*                                  TAP FOR REG 13 AND 14 SAVE           01692021
IRTTCHSV DS    A                   TCH ROUTINE LINK SAVE                01694021
IRTDDSV  DS    A                   DEVICE DEPENDENT SIO SUBROUTINE      01696002
IRTSIOSV DS    A                   POST SIO LINK SAVE                   01698021
IRTSTASV DS    A                   STATUS ROUTINE LINK SAVE             01700021
IRTRSTSV DS    A                   RESTART ROUTINE LINK SAVE            01750021
IRTDIESV DS    A                   DIE ROUTINE LINK SAVE                01760021
IRTSENSV DS    A                   SENSE ROUTINE LINK SAVE              01770021
IRTPCISV DS    A                   PCI ROUTINE LINK SAVE                01780021
IRTPRGSV DS    A                   CHECK PURGE ROUTINE LINK SAVE        01790021
IRTCSME  DS    A                   SAVED CHANNEL SEARCH MODULE          01792021
*                                  TABLE ENTRY ADDRESS                  01794021
IRTNSRB  DS    A                   ADDR OF SRB FOR NEW WORK             01794121
*                                  FROM DIE.                            01794221
IRTFRRWA DS    A                   ADDR OF FRR WORKAREA                 01794421
IRTATTSV DS    A                   ATTENTION ROUTINE LINK SAVE          01796021
IRTCCHSV DS    A                   CCH INTERFACE LINK SAVE              01798021
IRTINTSV DS    A                   SLIH ROUTINE LINK SAVE               01798421
IRTSTSSV DS    A                   TEST SCHEDULABILITY SAVE AREA        01798821
IRTLCHAD DS    A                   SAVED LCH ADDR FOR CHAN RSTRT        01799221
IRTSNSCT DS    A                   SENSE COUNTER               @ZA10792 01799400
IRTCHNSV DS    A                   SENSE CHAIN ROUTINE LINK SV @ZA16177 01799641
IRTRSV0B DS    A                   RESERVED                    @ZA10792 01799800
IRTEL    EQU   128                 ENTRY LENGTH                         01800021
         MEND                                                           01850021
*%IRTPLS: ;                                                             01900021
*                                                                       01950021
*/*************************************************************/        02000021
*/*                                                           */        02050021
*/*  THIS STRUCTURE DESCRIBES THE IOS  RECOVERY  TABLE.  THE  */        02100021
*/*  TABLE IS RELATED TO A CPU AND IS LOCATED  IN  THE  LCCA. */        02150021
*/*  A RESPECIFY SHOULD BE DONE ON IRT TO  BASE  IT  ON  THE  */        02200021
*/*  ADDRESS OF LCCAIRT.                                      */        02250021
*/*                                                           */        02350021
*/*************************************************************/        02400021
*/*                                                           */        02450021
*/*    05/30/72     LEVEL=00                                  */        02500021
*/*                                                           */        02550021
*/*************************************************************/        02600021
*                                                                       02650021
*   DCL 1 IRT  BDY(WORD)  BASED(IRTPTR),                                02660021
*                                                                       02700002
*       2 IRTENTRY  PTR(31),       /* LABEL IDENTIFICATION    */        02750002
*         3 IRTFLA  CHAR(1),       /* FLAG BYTE A             */        02800021
*           4 IRTULCK BIT(1),      /* UCB LOCK HELD           */        02850021
*           4 IRTLLCK BIT(1),      /* LCH LOCK HELD           */        02900021
*           4 IRTSLCK BIT(1),      /* SYNCH LOCK HELD         */        02950021
*           4 IRTCLCK BIT(1),      /* CAT LOCK HELD           */        02960021
*           4 IRTALCK BIT(1),      /* SALLOC LOCK HELD        */        03000021
*           4 IRTIOQA BIT(1),      /* AN IOQ  IS ACTIVE       */        03050002
*           4 IRTSLISN BIT(1),     /* RECOVERY SENSE IND      */        03060002
*           4 IRTSSIGP BIT(1),     /* SHLDR TAP NEEDED FOR SENSE        03110041
*                                                            @ZA16177*/ 03160041
*         3 IRTFLB  CHAR(1),       /* RESERVED                */        03450021
*           4 IRTNRST BIT(1),      /* SUPPRESS RESTART FOR              03460002
*                                     CURRENT CHANNEL         */        03470002
*           4 IRTSKRST BIT(1),     /* FIRST PASS OF CHAN RSTRT*/        03480021
*           4 IRTPCISW BIT(1),     /* FIRST PASS OF PCI       */        03490021
*           4 IRTCHBSY BIT(1),     /* ALL CHANNELS BUSY       */        03492021
*           4 IRTSMGR  BIT(1),     /* STORAGE MANAGER ENTERED */        03492102
*           4 IRT12GT  BIT(1),     /* SMALL BLK GET           */        03492402
*           4 IRTCCHWA BIT(1),     /* SET IF CCH GETS EWA    @ZA18094*/ 03492941
*           4 *        BIT(1),     /* RESERVED               @ZA18094*/ 03493441
*                                                                       03496021
*         3 IRTENVR CHAR(1),       /* ENVIRONMENT INDICATORS  */        03498021
*           4 IRTCHENT BIT(1),     /* CHAN. SCHED. ENTRANCE   */        03498421
*           4 IRTSLIHA BIT(1),     /* I/O INT HNDLR ENTRANCE  */        03498821
*           4 IRTSHTP  BIT(1),     /* SHOULDER TAP ENTRANCE   */        03499221
*           4 IRTCRHIN BIT(1),     /* CRH INTERRUPT          @ZA16177*/ 03501241
*           4 IRTRSTI  BIT(1),     /* I/O RESTART IN PROGRESS */        03501641
*           4 IRTHIO   BIT(1),     /* HIO IN PROCESS          */        03501702
*           4 IRTPINT  BIT(1),     /* I/O RESTART PSEUDO INT  */        03502102
*           4 IRTCSINT BIT(1),     /* CHAN SCHED INIT DONE    */        03503602
*                                                                       03504921
*         3 *         BIT(8),      /* RESERVED                */        03506602
*       2 IRTSYMSK  CHAR(1),       /* OLD SYSTEM MASK SET BY            03508302
*                                     CHANNEL SCHEDULER       */        03510002
*       2 IRTCCH    CHAR(1),       /* CCH COMMUNICATION BYTE  */        03550021
*       2 IRTCMRST  CHAR(1),       /* RESTRT IND. SET BY CHAN.          03552002
*                                     SCHED WHEN ENTERED. ALSO          03554002
*                                     SET IN THE OTHER CPU              03556002
*                                     WHEN SHOULDER TAP TO BE           03558002
*                                     DONE                              03558402
*                                     FF = IOS ACTIVE AND CAN           03558802
*                                       RESTART VIA RSTSRT RTN          03559202
*                                     00 = IOS NOT ACTIVE.              03559602
*                                     SHOULDER TAP TO BE USED           03559702
*                                     TO RESTART              */        03559802
*       2 IRTDETEC  BIT(8),        /* HOT I/O DETECTION FLAG            03560041
*                                                           @ZA30350*/  03562041
*        3 IRTDETR1 BIT(1),        /* RESVD FOR HOT I/O     @ZA30350*/  03564041
*        3 IRTAVAIL BIT(1),        /* AVAILABILITY INTERPT  @ZA30350*/  03566041
*        3 IRTUNSOL BIT(1),        /* UNSOLICITED INTERRUPT @ZA30350*/  03568041
*        3 IRTNOSYS BIT(1),        /* DEVICE NOT SYSGENED   @ZA30350*/  03572041
*        3 IRTHOTD BIT(1),         /* HOT DEVICE DETECTION  @ZA30350*/  03574041
*        3 IRTINVDV BIT(1),        /* CHANNEL ERROR AND INVALID         03576041
*                                     DEVICE ADDRESS        @ZA30350*/  03578041
*        3 IRTCUERR BIT(1),        /* CHANNEL ERROR-CONTROL UNIT        03580041
*                                     PROBABLE CAUSE OF ERR @ZA30350*/  03582041
*        3 IRTCHERR BIT(1),        /* CHANNEL ERROR-CONTROL UNIT NOT    03584041
*                                     PROBABLE CAUSE OF ERR @ZA30350*/  03586041
*       2 IRTUCB    PTR(31),       /* ADDRESS OF LOCKED UCB   */        03600021
*       2 IRTLCH    PTR(31),       /* ADDRESS OF LOCKED LCH   */        03650021
*       2 IRTIOQ    PTR(31),       /* ADDRESS OF ACTIVE IOQ   */        03700021
*       2 IRTCHNL   PTR(31),       /* TCH CURRENT CHANNEL     */        03710021
*       2 IRTNIOQ   PTR(31),       /* SAVED ADDR OF NEXT IOQ  */        03720021
*       2 IRTPSTSV  PTR(31),       /* IOQE SAVE AREA USED BY            03722002
*                                     CHANNEL SCHEDULER       */        03724002
*       2 IRTCHMSK  CHAR(4),       /* RESTART CHANNEL MASK FOR          03730002
*                                     THIS CPU                */        03740002
*       2 IRTRSV01  PTR(31),       /* RESERVED                */        03741041
*       2 IRTRTNSV  CHAR(8),       /* USED BY CHAN SCHED AND            03742002
*                                     SHLDR TAP FOR RG 13 & 14*/        03744002
*       2 IRTTCHSV  PTR(31),       /* TCH ROUTINE LINK SAVE   */        03746021
*       2 IRTDDSV   PTR(31),       /* DEVICE DEPENDENT SIO              03748002
*                                     SUBROUTINE LINK SAVE    */        03748402
*       2 IRTSIOSV  PTR(31),       /* POST SIO LINK SAVE      */        03748821
*       2 IRTSTASV  PTR(31),       /* STATUS SUBRTN LINK SAVE */        03750002
*       2 IRTRSTSV  PTR(31),       /* RESTART RTN LINK SAVE   */        03800021
*       2 IRTDIESV  PTR(31),       /* DIE ROUTINE LINK SAVE   */        03810021
*       2 IRTSENSV  PTR(31),       /* SENSE ROUTINE LINK SAVE */        03820021
*       2 IRTPCISV  PTR(31),       /* PCI ROUTINE LINK SAVE   */        03830021
*       2 IRTPRGSV  PTR(31),       /* CHECK PURGE ROUTINE               03840002
*                                     LINK SAVE               */        03840402
*       2 IRTCSME   PTR(31),       /* SAVED CHANNEL SEARCH              03842002
*                                     MODULE TABLE ENTRY ADDR */        03842402
*       2 IRTNSRB   PTR(31),       /* ADDR OF SRB FOR NEW WORK          03842502
*                                     FROM DIE.               */        03842602
*       2 IRTFRRWA  PTR(31),       /* ADDR OF FRR WORKAREA    */        03842821
*       2 IRTATTSV  PTR(31),       /* ATTN. ROUTINE LINK SAVE */        03844021
*       2 IRTCCHSV  PTR(31),       /* CCH INTERFACE LINK SAVE */        03846021
*       2 IRTINTSV  PTR(31),       /* SLIH ROUTINE LINK SAVE  */        03848021
*       2 IRTSTSSV  PTR(31),       /* TEST SCHEDULABILITY SAVE*/        03848421
*       2 IRTLCHAD  PTR(31),       /* LCH ADDR FOR CHAN RSTRT */        03848821
*       2 IRTSNSCT  FIXED(31),     /* SENSE COUNTER          @ZA10792*/ 03849100
*       2 IRTCHNSV  PTR(31),       /* SENSE CHAIN RTN LINK SV@ZA16177*/ 03849441
*       2 IRTRSV0B  PTR(31),       /* RESERVED               @ZA10792*/ 03849700
*       2 IRTEND    CHAR(0);       /* END OF IRT              */        03850021
*                                                                       03900021
*%DCL IRTEL CHAR;                  /* ENTRY LENGTH            */        03950021
*%IRTEL='ADDR(IRTEND)-ADDR(IRTENTRY)';                                  04000021
./  ADD  SSI=32890627,NAME=IECDLCH
* %      GOTO  LCHPLS;             /* GO TO THE PL/S VERSION   */       00050021
*                                                                       00100021
         MACRO                                                          00150021
         IECDLCH                                                        00200021
LCH      DSECT                                                          00250021
         SPACE 1                                                        00300021
*****************************************************************       00350021
*                                                               *       00400021
*   THIS MACRO DSECT DESCRIBES THE LOGICAL CHANNEL QUEUE TABLE. *       00450021
*                                                               *       00500021
*****************************************************************       00550021
         SPACE 1                                                        00600021
LCHENTRY DS    0D                  DOUBLEWORD ALIGNMENT                 00650021
LCHFST   DS    F                   FIRST IOQ ON LCH                     00700002
LCHLST   DS    F                   LAST IOQ ON LCH                      00750002
LCHLOCK  DS    F                   LOCKWORD ASSOCIATED WITH LCH YM3157P 00800002
LCHRSV01 DS    F                   RESERVED                     YM3157P 00810002
LCHTCH   DS    F                   TCH CHANNEL LIST                     00850021
LCHCHCNT DS    FL1                 NUMBER OF CHANNELS ON LCH            00900021
LCHFLA   DS    XL1                 FLAG BYTE                            00950021
         SPACE 1                                                        01000021
LCHLKHLD EQU   X'80'               LCHLOCK HELD ON ENTRY                01050021
*        EQU   X'7F'               RESERVED                             01100021
         SPACE 1                                                        01150021
LCHRSV02 DS    H                   RESERVED                     YM3157P 01160002
LCHTOTAL DS    H                   TOTAL REQUESTS STARTED OR            01200021
*                                  QUEUED                               01250021
LCHRSV03 DS    H                   RESERVED                     YM3157P 01260002
LCHLGBSY DS    H                   NUMBER REQUESTS QUEUED               01300021
*                                  BECAUSE LOGICALLY BUSY               01350021
LCHPYBSY DS    H                   NUMBER REQUESTS QUEUED               01400021
*                                  BECAUSE PHYSICALLY BUSY              01450021
LCHEL    EQU   *-LCHENTRY          ENTRY LENGTH                         01500021
LCHELP2  EQU   5                   LENGTH OF LCH IN POWERS OF TWO       01510021
         MEND                                                           01550021
*%LCHPLS: ;                                                             01600021
*                                                                       01650021
* /*************************************************************/       01700021
* /*                                                           */       01750021
* /* THIS STRUCTURE DESCRIBES THE LOGICAL CHANNEL QUEUE TABLE. */       01800021
* /* CALLERS OF THIS MACRO SHOULD RESPECIFY THE LCH BASED  ON  */       01850021
* /* THE ADDRESS GOTTEN FROM THE CVT.                          */       01900021
* /*                                                           */       01950021
* /*************************************************************/       02000021
* /*                                                           */       02050021
* /*     09/05/73     LEVEL=00                                 */       02100002
* /*                                                           */       02110021
* /*************************************************************/       02120021
*                                                                       02150021
*   DCL  1 LCH  BDY(DWORD)  BASED(LCHPTR),                              02160021
*        2  LCHENTRY  PTR(31),     /* LABEL IDENTIFICATION     */       02200002
*          3  LCHFST  PTR(31),     /* FIRST IOQ  ON LCH        */       02300002
*        2  LCHLST    PTR(31),     /* LAST IOQ  ON LCH         */       02350002
*        2  LCHLOCK   CHAR(4),     /* LOCKWORD FOR LCH YM3157P */       02400002
*        2  LCHRSV01  CHAR(4),     /* RESVERVED        YM3157P */       02410002
*        2  LCHTCH    PTR(31),     /* TCH CHANNEL LIST         */       02450021
*        2  LCHCHCNT  FIXED(8),    /* NUMBER OF CHANNELS IN             02500002
*                                     LIST                     */       02550002
*        2  LCHFLA    CHAR(1),     /* FLAG BYTE                */       02600021
*          3  LCHLKHLD  BIT(1),    /* LOCK HELD ON ENTRY       */       02650021
*          3  *         BIT(7),    /* RESERVED                 */       02700002
*                                                                       02750021
*        2  LCHRSV02    CHAR(2),   /* RESERVED         YM3157P */       02760002
*        2  LCHTOTAL  FIXED(15),   /* TOTAL REQUESTS STARTED            02800002
*                                     OR QUEUED                */       02850002
*        2  LCHRSV03  CHAR(2),     /* RESERVED         YM3157P */       02860002
*        2  LCHLGBSY  FIXED(15),   /* NUMBER OF RQSTS QUEUED            02900002
*                                     BECAUSE LOGICALLY BUSY   */       02950002
*        2  LCHPYBSY  FIXED(15),   /* NUMBER RQSTS QUEUED               03000002
*                                     BECAUSE PHYSICALLY BUSY  */       03050002
*        2  LCHEND    CHAR(0);     /* END OF LCH               */       03100021
*   DCL LCHELP2 BIT(8) CONSTANT('05'X);  /*                             03110002
*                                     LCH ELEM LNGTH POWER OF 2*/       03120002
*                                                                       03150021
*%DCL  LCHEL  CHAR;                /* LENGTH OF TABLE          */       03200021
*%LCHEL='ADDR(LCHEND)-ADDR(LCHENTRY)';                                  03250021
./  ADD  SSI=32890639,NAME=IECDPIRL
*  %    GOTO PIRPLS;               /* GO TO THE PLS VERSION   */        00050021
         MACRO                                                          00100021
         IECDPIRL   &DSECT=YES                                          00150002
         AIF   ('&DSECT' EQ 'NO').PIRL1                                 00160002
PIRL     DSECT                                                          00200021
         AGO   .PIRL2                                                   00210002
.PIRL1   ANOP                                                           00220002
PIRL     DS    0D                                                       00230002
.PIRL2   ANOP                                                           00240002
         SPACE 1                                                        00250021
****************************************************************        00300021
*                                                              *        00350021
*   THIS DSECT DESCRIBES THE PURGED I/O RESTORE LIST WHICH IS  *        00400002
*   BUILT IN SUBPOOL ZERO OF THE MEMORY OF THE REQUESTOR  OF   *        00450021
*   PURGE. PURGE OBTAINS THE SPACE FOR THE PIRL AND  RESTORE   *        00500021
*   RETURNS IT. THE POINTER TO THE PIRL IS PASSED TO RESTORE   *        00550021
*   AS A PARAMETER IN REGISTER 1.                              *        00600021
*                                                              *        00650021
****************************************************************        00700021
         SPACE 1                                                        00750021
         DS    0F                                                       00800021
PIROPT   DS    XL1                 RESTORE OPTION BYTE                  00850021
         SPACE 1                                                        00900021
*   BIT DEFINITIONS FOR PIROPT                                          00950021
         SPACE 1                                                        01000021
PIROTCB  EQU   X'80'               RESTORE REQUESTS TO THE TCB          01050021
*                                  THAT ORIGINATED THE REQUEST          01100021
*                                  INSTEAD OF THE TCB USED TO           01150021
*                                  RESTORE THEM.                        01200021
PIRSUPCK  EQU  X'40'               DO TCB VALIDITY CHECK REGARD         01210021
*                                  LESS OF THE STATE OF                 01220002
*                                  THE CALLER.                          01230021
*        EQU   X'7F'               RESERVED - MUST BE ZERO              01250021
PIRCNT   DS    XL1                 NUMBER OF PIRRSTR ENTRIES            01300021
*        DS    H                   RESERVED - MUST BE ZERO              01350021
PIRRSTR  DS    A                   POINTER TO I/O REQUEST LIST          01400021
*                                  FOR EACH DRIVER OF CHANNEL           01450021
*                                  SCHEDULER.                           01500021
PIRDVRU DS     A                   POINTER TO ADDITIONAL                01510021
*                                  INFORMATION THE DRIVER               01520021
*                                  MAINTAINS TO INSURE THE              01530021
*                                  PROPER RESTORATION OF ITS            01540021
*                                  QUEUE OF I/O REQUESTS                01542021
*                                  (E.G. PROTECT KEYS TCB               01544021
*                                  ADDRESSES ETC)                       01546021
PIRENTL  EQU   *-PIRRSTR           ENTRY LENGTH                         01550021
         MEND                                                           01600021
*%PIRPLS: ;                                                             01650021
* /************************************************************/        01800021
* /*                                                          */        01810021
* /*   THIS STRUCTURE DESCRIBES THE PURGED I/O RESTORE  LIST  */        01820002
* /*   WHICH IS BUILT IN SUBPOOL 0 OF THE MEMORY OF  THE  RE- */        01870021
* /*   QUESTOR OF PURGE. PURGE OBTAINS THE SPACE FOR THE PIRL */        01880021
* /*   AND RESTORE RETURNS IT.  THE POINTER  TO  THE PIRL IS  */        01890021
* /*   PASSED AS A PARAMETER TO RESTORE IN REGISTER 1.        */        01940021
* /*                                                          */        02100021
* /************************************************************/        02160021
*                                                                       02200021
*   DCL 1 PIRL  BDY(WORD)  BASED(PIRLPTR),                              02210021
*       2  PIROPT   BIT(8),        /* RESTORE OPTION BYTE     */        02250021
*       2 PIRCNT    CHAR(1),       /* NMBR OF PIRRSTR ENTRIES */        02500021
*       2 *         FIXED(15),     /* RESERVED - MUST BE 0    */        02550021
*       2 PIRRSTR   PTR(31),       /* POINTER TO I/O REQUEST            02600002
*                                     LIST FOR EACH DRIVER OF           02650002
*                                     THE CHANNEL SCHEDULER   */        02700002
*       2 PIRDVRU   PTR(31),       /* POINTER TO ADDITIONAL             02710002
*                                     INFORMATION THE DRIVER            02720002
*                                     MAINTAINS TO INSURE THE           02730002
*                                     PROPER RESTORATION OF             02740002
*                                     ITS QUEUE OF REQUESTS             02742002
*                                     (E.G. PROTECT KEYS TCB            02744002
*                                     ADDRESSES ETC )         */        02746002
*       2 PIREND    CHAR(0);       /* END OF PIRL             */        02750021
*                                                                       02760021
* /*  FOLLOWING ARE BIT DEFINITIONS OF PIROPT                 */        02770021
*                                                                       02780021
*   DCL PIROTCB BIT(8) CONSTANT('80'X);                                 02790021
*                                  /* RESTORE REQUEST TO THE            02792002
*                                     ORIGINATING TCB INSTEAD           02794002
*                                     OF THE RESTORING TCB    */        02796002
*   DCL PIRSUPCK BIT(8) CONSTANT('40'X);                                02798021
*                                  /* DO TCB VALIDITY CHECK             02798402
*                                     REGARDLESS OF THE STATE           02798802
*                                     OF THE CALLER           */        02799202
*%DCL PIRENTL  CHAR;               /* ENTRY LENGTH OF PIRRSTR */        02800021
*%PIRENTL='ADDR(PIREND)-ADDR(PIRRSTR)';                                 02850021
./  ADD  SSI=62440067,NAME=IECDRQE
*        %GOTO RQEL1; /*                                                00060021
         MACRO                                                          00070021
         IECDRQE                                                        00100021
RQE      DSECT                                                          00150021
         SPACE 1  */                                                    00200021
*%RQEL1 : ;                                                             00210021
*/********************************************************************/ 00250021
*/*                                                                  */ 00300021
*/* THIS DSECT DESCRIBES THE CONTROL BLOCK USED WITHIN THE EXCP PROC-*/ 00350021
*/* ESSOR TO DEFINE A SINGLE REQUEST. IT CONTAINS ALL INFORMATION    */ 00400021
*/* NECESSARY TO INITIATE AND TERMINATE I/O REQUESTS WITHIN THE EXCP */ 00450021
*/* PROCESSOR.                                                       */ 00500021
*/*                                                                  */ 00510021
*/********************************************************************/ 00550021
*%GOTO RQEL2; /*                                                        00560021
         SPACE 1                                                        00600021
RQEUCB   DS    A                   ADDRESS OF THE UNIT CONTROL BLOCK    00700021
RQEIOB   DS    A                   ADDRESS OF THE INPUT-OUTPUT BLOCK    00750021
RQEDEB   DS    A                   ADDRESS OF THE DATA EXTENT BLOCK     00800021
RQETCB   DS    A                   ADDRESS OF THE TASK CONTROL BLOCK    00850021
RQETCCW  DS    A                   ADDRESS OF TRANSLATION CONTROL       00860021
*                                  BLOCK - USED BY VIO                  00870002
*                                  AS A WORK AREA                       00880002
RQENRQE  DS    A                   ADDRESS OF THE NEXT RQE ON RELATED   00900021
*                                  REQUEST CHAIN - USED BY VIO          00902002
*                                  AS A WORK AREA                       00904002
RQERRQ   DS    A                   ADDRESS OF RELATED REQUEST QUEUE -   00910021
*                                  USED BY VIO                          00912002
*                                  AS A WORK AREA                       00914021
RQESRB   DS    A                   ADDRESS OF ASSOCIATED SRB - USED BY  00920021
*                                  VIO AS A WORK AREA                   00924002
RQEIPIB  DS    A                   ADDRESS OF PURGE IPIB                00930021
RQEPRT   DS    XL1                 PROTECT KEY FROM SVC OLD PSW@ZA06067 00980003
*                                  (BITS 0-3) AND FLAGS(4-7)   @ZA06067 00982003
RQEPKEY  EQU   X'F0'               PROTECT KEY - BITS 0-3      @ZA06067 00984003
RQEPRT4R EQU   X'08'               BIT4 - RESERVED             @ZA06067 00986003
RQEPRT5R EQU   X'04'               BIT5 - RESERVED             @ZA06067 00988003
RQEPRT6R EQU   X'02'               BIT6 - RESERVED             @ZA06067 00990003
RQESMFRQ EQU   X'01'               BIT7 - SMF RECORDING REQD   @ZA06067 00992003
         SPACE                                                          01001003
RQETYPE  DS    XL1                 REQUEST TYPE FLAGS                   01010021
         SPACE 1                                                        01050021
*   BIT SETTINGS FOR RQETYPE                                            01100021
         SPACE 1                                                        01150021
RQE114   EQU   X'80'               EXCPVR REQUEST                       01200021
RQEVIRT  EQU   X'40'               VIRTUAL EXCP REQUEST                 01250021
RQE1TO1  EQU   X'20'               VIRTUAL EQUAL REAL REQUEST           01300021
RQEVAM   EQU   X'10'               VIO RQE                              01310002
RQEEOEE  EQU   X'08'               END-OF-EXTENT-ERROR,TO BE   @YM04681 01320002
*                                  PURGED                               01330002
RQEDIE   EQU   X'04'               EXCP DIE GOING TO PCI APPEND@YM05537 01350002
RQERRTYP EQU   X'03'               RELATED REQUEST FLAGS                01500021
RQETYP3  EQU   X'03'               RELATED REQUEST TYPE 3               01550021
RQETYP2  EQU   X'02'               RELATED REQUEST TYPE 2               01600021
RQETYP1  EQU   X'01'               RELATED REQUEST TYPE 1               01650021
         SPACE 1                                                        01700021
RQEFLAG  DS    XL1                 FLAG BYTE IN RQE                     01850021
         SPACE 1                                                        01900021
*   BIT SETTINGS FOR RQEFLAG2                                           01950021
RQERETRY EQU   X'80'               RETRY REQUESTED                      02000021
RQENOPST EQU   X'40'               NO POST REQUESTED                    02050021
RQENOFRE EQU   X'20'               DONT FREE RQE                        02100021
RQEFIXST EQU   X'10'               FIX PROCESS HAS BEEN STARTED,        02250021
*                                  UNFIX REQUIRED                       02250421
RQESTBL  EQU   X'08'               THIS REQUEST IS STARTABLE - THAT IS  02252021
*                                  ALL FIXING AND TRANSLATION IS DONE   02254021
RQESRBS  EQU   X'04'               SRB SCHEDULED FOR THIS RQE           02260021
RQEPURGE EQU   X'02'               RQE UNDERGOING PURGE                 02310021
RQECHEAC EQU   X'01'               CHANNEL END APPENDAGE COMPLETE       02350021
*        BIT SETTINGS FOR RQEFLAG3                             @ZM32371 02351003
RQEFLAG3 DS    XL1                                             @ZM32371 02352003
RQEINIOS EQU   X'80'               REQUEST IN IOS              @ZM32371 02362003
RQECLEAR EQU   X'00'               RESET FLAG BYTES            @ZM32371 02372003
         SPACE 1                                                        02400021
RQEBL    EQU   *-RQE               RQE BLOCK LENGTH                     02550021
         MEND  , - */                                                   02600021
*%RQEL2 : ;                                                             02650021
* DECLARE 1 RQE BDY(WORD) BASED(RQEPTR), /* REQUEST QUEUE ELEMENT       02660021
*                                   FOR EXCP */                         02670021
*    2 RQEUCB  PTR(31),            /* ADDRESS OF THE UNIT CONTROL       02850021
*                                     BLOCK.                         */ 02900021
*    2 RQEIOB  PTR(31),            /* ADDRESS OF THE INPUT OUTPUT       02950021
*                                     BLOCK                          */ 03000021
*    2 RQEDEB  PTR(31),            /* ADDRESS OF THE DATA EXTENT        03050021
*                                     BLOCK                          */ 03100021
*    2 RQETCB  PTR(31),            /* ADDRESS OF THE TASK CONTROL       03150021
*                                     BLOCK                          */ 03200021
*    2 RQETCCW PTR(31),            /* ADDRESS OF THE TRANSLATION IS     03250021
*                                     CONTROL BLOCK - THIS FIELD        03300021
*                                     USED BY VIO                       03350002
*                                     AS A WORK AREA.                */ 03400021
*    2 RQENRQE PTR(31),            /* ADDRESS OF NEXT RQE ON RELATED    03450021
*                                     REQUEST QUEUE - THIS FIELD IS     03500021
*                                     USED BY VIO AS                    03550002
*                                     A WORK AREA.                   */ 03600021
*    2 RQERRQ  PTR(31),            /* ADDRESS OF THE RELATED REQUEST    03650021
*                                     QUEUE - USED BY VIO               03700002
*                                     AS A WORK AREA                 */ 03750002
*    2 RQESRB  PTR(31),            /* ADDRESS OF SRB - USED BY VIO      03800002
*                                     AS A WORK                         03850002
*                                     AREA.                          */ 03900021
*    2 RQEIPIB PTR(31),            /* ADDRESS OF IOS PURGE INTERFACE    03950021
*                                     BLOCK.                         */ 04050021
*    2 RQEPRT  BIT(8),             /* PROTECTION KEY USED IN THE     */ 04100021
*      3 RQEPKEY BIT(4),           /* PROTECTION KEY                 */ 04150021
*      3 *     BIT(3),             /* RESERVED-MUST BE ZERO  @ZA06067*/ 04170003
*      3 RQESMFRQ BIT(1),          /* SMF RECORDING REQUIRED @ZA06067*/ 04190003
*    2 RQETYPE BIT(8),             /* RQE TYPE FLAGS                 */ 04250021
*      3 RQE114  BIT(1),           /* EXCPVR REQUEST                 */ 04300021
*      3 RQEVIRT BIT(1),           /* VIRTUAL EXCP REQUEST           */ 04350021
*      3 RQE1TO1 BIT(1),           /* VIRTUAL = REAL EXCP REQUEST    */ 04400021
*      3 RQEVAM  BIT(1),           /* VIO REQUEST                    */ 04410002
*      3 RQEEOEE BIT(1),           /* END-OF-EXTENT-ERROR    @YM04681*/ 04420002
*                                  /* TO BE PURGED                   */ 04430002
*      3 RQEDIE  BIT(1),           /* EXCP DIE GOING TO PCI  @YM05537*/ 04450002
*      3 RQETYP3 BIT(2),           /* TYPE 3 RELATED REQUEST         */ 04500021
*        4 RQETYP2 BIT(1),         /* TYPE 2 RELATED REQUEST         */ 04550021
*        4 RQETYP1 BIT(1),         /* TYPE 1 RELATED REQUEST         */ 04600021
*    2 RQEFLAG BIT(8),             /* FLAGS INDICATING WORK TO DO       04650021
*                                     AND POSITION IN EXCP           */ 04700021
*      3 RQERETRY BIT(1),          /* RETRY REQUEST FROM APPENDAGE   */ 04750021
*      3 RQENOPST BIT(1),          /* NO POST REQUEST FROM APPEND    */ 04800021
*      3 RQENOFRE BIT(1),          /* NO FREE REQUEST FROM APPEND    */ 04850021
*      3 RQEFIXST BIT(1),          /* FIXING IS STARTED FOR REQUEST  */ 04900021
*      3 RQESTBL  BIT(1),          /* REQUEST IS STARTABLE           */ 04950021
*      3 RQESRBS  BIT(1),          /* REQUEST SENT TO IOS            */ 05000021
*      3 RQEPURGE BIT(1),          /* PURGE IN CONTROL               */ 05050021
*      3 RQECHEAC BIT(1),          /* CHANNEL END APPENDAGE COMPL    */ 05100021
*    2 RQEFLAG3  BIT(8),           /* FLAG BYTE 3            @ZM32371*/ 05150003
*      3 RQEINIOS BIT(1),          /* REQUEST IN IOS         @ZM32371*/ 05160003
*      3 * BIT(7),                 /* UNUSED                 @ZM32371*/ 05165003
*    2 RQEEND CHAR(0);             /* END OF RQE                     */ 05200021
*%DCL RQEBL CHAR;                                                       05250021
*%RQEBL='RQEEND-RQEUCB';           /* LENGTH OF RQE                  */ 05300021
./  ADD  SSI=82370191,NAME=IECDSCD
 /********************************************************************/ 00050041
 /*                                                                  */ 00100041
 /* CONTROL BLOCK NAME - SCD                                         */ 00150041
 /*                                                                  */ 00200041
 /* DESCRIPTIVE NAME - HOT I/O STATUS COLLECTION DATA                */ 00250041
 /*                                                                  */ 00300041
 /* MAPPING MACRO NAME - IECDSCD                                     */ 00350041
 /*                                                                  */ 00400041
 /* FUNCTION -                                                       */ 00450041
 /*   THE SCD IS USED TO MAINTAIN INFORMATION ON UNSOLICITED STATUS  */ 00500041
 /*   AND INTERRUPTS FOR THE PURPOSE OF DETERMINING IF HOT I/O IS    */ 00550041
 /*   OCCURRING. THERE IS ONE SCD PER CHANNEL PER PROCESSOR. THE     */ 00600041
 /*   SCDS ARE INDEXED BY CHANNEL NUMBER.                            */ 00650041
 /*                                                                  */ 00800041
 /* CHANGE ACTIVITY - NONE                                           */ 00850041
 /*   A000000-999999                                         @ZA30350*/ 00900041
 /*                                                                  */ 00950041
 /********************************************************************/ 01000041
 DCL                                                                    01050041
   1 SCD BASED(SCDPTR),            /*HOT I/O STATUS COLLECTION DATA  */ 01100041
    3 SCDCPUID FIXED(15),          /*CPU OF HOT CHANNEL OR DEVICE    */ 01150041
    3 SCDADDR FIXED(15),           /*CHANNEL/DEVICE ADDRESS          */ 01200041
    3 SCDFLG1 BIT(8),              /*FLAG BYTE 1                     */ 01250041
     5 SCDRECUR BIT(1),            /*HOT I/O RECURSION INDICATOR     */ 01300041
     5 * BIT(7),                   /*RESERVED                        */ 01350041
    3 SCDRSCDE,                    /*HOT I/O DETECTION FLAGS         */ 01400041
     5 SCDRSC1 BIT(8),             /*DETECTION FLAG BYTE 1           */ 01450041
      7 SCDTMOUT BIT(1),           /*TIME OUT HOT I/O                */ 01500041
      7 SCDAVAIL BIT(1),           /*AVAILABILITY INTERRUPT          */ 01550041
      7 SCDUNSOL BIT(1),           /*UNSOLICITED STATUS              */ 01600041
      7 SCDNOSYS BIT(1),           /*DEVICE NOT SYSGENED             */ 01650041
      7 SCDHOTD BIT(1),            /*IF SET-HOT DEVICE--OTHERWISE-HOT   01700041
                                     HOT CHANNEL                     */ 01750041
      7 SCDINVDV BIT(1),           /*CHANNEL ERROR AND INVALID DEVICE   01800041
                                     ADDR                            */ 01850041
      7 SCDCUERR BIT(1),           /*CHANNEL ERROR-CONTROL UNIT         01900041
                                     PROBABLE CAUSE                  */ 01950041
      7 SCDCHERR BIT(1),           /*CHANNEL ERROR-CONTROL UNIT NOT     02000041
                                     PROBABLE CAUSE                  */ 02050041
     5 SCDRSC2 BIT(8),             /*RESERVED                        */ 02100041
    3 * BIT(8),                    /*RESERVED                        */ 02150041
    3 SCDCSWST BIT(16),            /*CSW STATUS                      */ 02200041
    3 * FIXED(15),                 /*RESERVED                        */ 02250041
    3 SCDCNTS,                     /*HOT I/O COUNTERS                */ 02300041
     5 SCDRCNT FIXED(15),          /*STATUS REPEAT COUNT             */ 02350041
     5 SCDTRCNT FIXED(15),         /*TIMEOUT REPEAT COUNT            */ 02400041
    3 SCDTIME,                     /*TIME OF STATUS                  */ 02450041
     5 SCDTIME1 FIXED(32),         /*VALUE FOR CALCULATING SECONDS      02500041
                                     ELAPSED                         */ 02550041
     5 SCDTIME2 FIXED(32);         /*2ND WORD OF TIME VALUE          */ 02600041
./  ADD  SSI=63560500,NAME=IECDSFRR
         MACRO                                                          00002000
         IECDSFRR                                                       00003000
FRRSMGR  DSECT                                                 @ZA12704 00005000
         SPACE 1                                               @ZA12704 00006000
************************************************************** @ZA12704 00008000
*        IECVSMGR FRR PARM AREA DSECT.                       * @ZA12704 00010000
*        DSECT DESCRIBES USAGE OF THE 6 WORD FRR PARM AREA   * @ZA12704 00012000
*                                                            * @ZA12704 00014000
************************************************************** @ZA12704 00016000
         SPACE 1                                               @ZA12704 00018000
FRRSVA   DS    A         REGISTER 13 SAVE                      @ZA12704 00022000
FRRSVB   DS    A         REGISTER 14 SAVE                      @ZA12704 00024000
FRRASID  DS    H         ASID OF MEMORY REQUESTING LGE BLOCK   @ZA12704 00026000
         SPACE 1                                               @ZA12704 00028000
FRRFLA   DS    X         SMGR FLAG BYTE                        @ZA12704 00030000
FRRSYNCH EQU   X'80'     IOSYNCH LOCK HELD                     @ZA12704 00032000
FRRALLOC EQU   X'40'     SALLOC LOCK HELD - FOR 12 BYTE BLOCK  @ZA12704 00034000
*                             INDICATOR IS SET IN IRT          @ZA12704 00036000
FRRFAIL  EQU   X'20'     1ST LEVEL FRR FAILURE                 @ZA12704 00038000
FRRCURS  EQU   X'10'     RETRY RECURSION INDICATOR             @ZA12704 00040000
FRRGET   EQU   X'08'     GET BLOCK REQUEST                     @ZA12704 00042000
FRRSML   EQU   X'04'     SMALL BLOCK REQUEST                   @ZA12704 00044000
FRRMED   EQU   X'02'     MIDDLE BLOCK REQUEST                  @ZA12704 00050000
FRRLGE   EQU   X'01'     LARGE BLOCK REQUEST- FRR PROVIDED     @ZA12704 00100000
*                                                              @ZA12704 00150000
FRRGMDL  EQU   X'0A'     MIDDLE BLOCK GET REQUEST              @ZA12704 00200000
FRRGLGE  EQU   X'09'     LARGE BLOCK GET REQUEST               @ZA12704 00250000
         SPACE 1                                               @ZA12704 00300000
FRRFLB   DS    X         SMGR FLAG BYTE                        @ZA12704 00350000
FRRIOS   EQU   X'80'     ELEMENT VERIFICATION ROUTINE (EVR)    @ZA12704 00400000
FRRBCOM  EQU   X'40'     BRANCH ENTRY COMPRESS                 @ZA12704 00450000
FRRSCOM  EQU   X'20'     SRB ENTRY COMPRESS                    @ZA12704 00500000
FRRPURG  EQU   X'10'     PURGE/FREE INTERFACE ENTRY            @ZA12704 00550000
FRRCFLK  EQU   X'08'     COMPRESS ROUTINE PROCESSING FLAG      @ZA12704 00600000
FRRCSTP2 EQU   X'04'     COMPRESS ROUTINE PROCESSING FLAG      @ZA12704 00650000
FRRDFREE EQU   X'02'     COMPRESS ROUTINE PROCESSING FLAG      @ZA12704 00700000
FRRDEL   EQU   X'01'     MDL REQ- DELETE FRR IN FRR ROUTINE    @ZA12704 00750000
         SPACE 1                                               @ZA12704 00800000
FRRHDR   DS    A         POOL HEADER ADDRESS FOR EVR           @ZA12704 00850000
FRRRTM   DS    A         RTM/CALLER RETURN ADDRESS             @ZA12704 00900000
FRRWRK   DS    A         RTN 200B WORK AREA EXTENSION ADDRESS  @ZA12704 00950000
         SPACE 1                                               @ZA12704 01000000
FRRSLEN  EQU   *-FRRSMGR      FRR PARM AREA LENGTH             @ZA12704 01050000
         MEND                                                           01100000
./  ADD  SSI=32900235,NAME=IECDSIAB
*%GOTO SIABPLS1;                                                        00050021
         MACRO                                                          00100021
         IECDSIAB                                                       00150021
*%SIABPLS1: ;                                                           00200021
* /************************************************************/        00250021
* /*                                                          */        00300021
* /*           THIS IS THE DESCRIPTION OF HOW THE AREA        */        00350021
* /*           OF STORAGE RECIEVED FROM IOS STORAGE MANAGER   */        00400021
* /*           IS SUBDIVIDED INTO SRB AND IOSB.               */        00450021
* /*                                                          */        00500021
* /************************************************************/        00550021
*%GOTO SIABPLS2;                                                        00600021
SIAB     DSECT                                                          00650021
SIABCMCH DS    0F                  CHAIN POINTER FOR STORAGE MGR        00660021
SIABSRB  DS    12F                 THIS IS THE SRB AREA                 00700021
SIABIOSB DS    28F                 THIS IS THE IOSB AREA                00750021
SIABEL   EQU   *-SIABCMCH          SIAB LENGTH                          00760021
         MEND                                                           00800021
*%SIABPLS2: ;                                                           00850021
*   DCL 1 SIAB  BDY(WORD)  BASED(SIABPTR),                              00852021
*        2 SIABCMCH CHAR(0),       /*CHAIN PTR FOR STORAGE MGR*/        00860021
*        2 SIABSRB  CHAR(48),      /*THIS IS THE SRB AREA     */        00900021
*        2 SIABIOSB CHAR(112),     /*THIS IS THE IOSB AREA    */        00950021
*        2 SIABEND  CHAR(0);       /*THIS IS THE END OF SIAB  */        01000021
*%DCL SIABEL CHAR;                 /* SIAB LENGTH             */        01050021
*%SIABEL='ADDR(SIABEND)-ADDR(SIABCMCH)';                                01100021
./  ADD  SSI=72710140,NAME=IECDTCCW
*        %GOTO TCCWL1; /*                                               00060021
         MACRO                                                          00070021
         IECDTCCW                                                       00100021
TCCW     DSECT                                                          00150021
         SPACE 1  */                                                    00200021
*%TCCWL1 : ;                                                            00210021
*/********************************************************************/ 00250021
*/*                                                                  */ 00300021
*/*      THE TCCW BLOCK IS THE TRANSLATION CONTROL BLOCK WHICH       */ 00350021
*/*      CONTAINS ALL INFORMATION REQUIRED TO TRANSLATE CCWS,        */ 00400021
*/*      RE-TRANSLATE ADDRESSES OR UNFIX DATA AREAS. IT IS THE       */ 00450021
*/*      BLOCK THAT IS BASSED BY ROUTINES WHICH CALL THE CCW         */ 00500021
*/*      TRANSLATOR.                                                 */ 00550021
*/*                                                                  */ 00600021
*/********************************************************************/ 00650021
*%GOTO TCCWL2; /*                                                       00660021
         SPACE 1                                                        00700021
TCCWTCB  DS    A                   ADDRESS OF TCB FOR THIS REQUEST      00750021
TCCWOPTN DS    XL1                 OPTION BYTE DESCRIBING WORK          00800021
*                                  TO BE DONE BY CCW TRANSLATOR         00850021
TCCWXLAT EQU   0                   TRANSLATE CCWS                       01050021
TCCWCSWX EQU   4                   TRANSLATE CSW OR PASSES ADDRESS      01100021
TCCWUNFX EQU   8                   UNFIX DATA AREA - SET UP FREE LST    01150021
TCCWGTMN EQU   12                  RETURN FROM GETMAIN                  01250021
TCCWSATR EQU   16                  SINGLE ADDRESS TRANSLATION           01252021
TCCWPGER EQU   X'80'               PAGE FIX ERROR                       01260021
TCCWTRER EQU   X'90'               TRANSLATION ERROR                    01270021
TCCWIDAE EQU   X'A0'               IDA BIT ERROR IN VIRT CP    @ZA06069 01275003
TCCWVMER EQU   X'D0'               VALMAP ERROR                         01280021
         SPACE 1                                                        01300021
TCCWUCB  DS    AL3                 ADDRESS OF ASSOCIATED UCB            01350021
TCCWBEB  DS    A                   ADDRESS OF FIRST BEB                 01400002
TCCWFIX  DS    A                   ADDRESS OF FIRST FIX LIST            01450021
TCCWFVC  DS    A                   ADDRESS OF FIRST VIRTUAL CCW         01500021
TCCWFRC  DS    A                   ADDRESS OF FIRST REAL CCW            01550021
TCCWPLKR DS    A                   ADDRESS OF NEXT FIX LIST ENTRY       01600021
TCCWINDA DS    A                   ADDRESS OF FIRST IDAL                01650021
TCCWTICL DS    A                   ADDRESS OF UNRESOLVED TIC LIST       01700021
TCCWINDR DS    A                   ADDRESS OF NEXT IDAL POINTER         01750021
TCCWCCWR DS    A                   ADDRESS OF NEXT VIRTUAL CCW          01800021
         SPACE 1                                               @ZA16169 01820003
TCCWMODB DS    XL1                 TRANSLATOR FLAG BYTE        @ZA16169 01840003
TCCWFCHN EQU   X'80'               - FREE CHAIN CONSTRUCTED    @ZA26555 01860003
TCCWRSV2 EQU   X'40'               - RESERVED                  @ZA16169 01880003
TCCWRSV3 EQU   X'20'               - RESERVED                  @ZA16169 01900003
TCCWRSV4 EQU   X'10'               - RESERVED                  @ZA16169 01920003
TCCWRSV5 EQU   X'08'               - RESERVED                  @ZA16169 01940003
TCCWPC10 EQU   X'04'               - A ZERO IDAL ENTRY REQD    @ZA16169 01960003
TCCWPGCK EQU   X'02'               - PAGE FIX/UNFIXING ACTIVE. @ZA16169 01980003
TCCWECBU EQU   X'01'               - ECB IN USE.               @ZA16169 02000003
         EJECT                                                          02044003
TCCWCCWL DS    XL1                 NUMBER OF CCWS LEFT IN BEB           02100002
TCCWINDL DS    XL1                 NUMBER OF IDAS LEFT IN IDAL          02150002
TCCWEFOP DS    XL1                 NUMERIC PORTION OF CURRENT COMMAND   02200021
TCCWCCWA DS    A                   NEXT VIRTUAL CCW                     02250021
TCCWTICA DS    A                   TIC-ED TO ADDRESS                    02300021
TCCWLOCA DS    A                   LOW COMPARE ADDRESS                  02350021
TCCWHICA DS    A                   HIGH COMPARE ADDRESS                 02400021
TCCWCBEB DS    A                   CURRENT BEB POINTER                  02550002
TCCWOPBT DS    X                   PREVIOUS OP BYTE                     02600421
         ORG   *-1                 FULL WORD ALIGNMENT                  02600821
TCCWOPTR DS    A                   PREVIOUS CCW ADDRESS                 02602021
         SPACE 1                                               @ZA16169 02606003
TCCWSAVE DS    0XL32               160 BYTE BLK REG SAVE AREA  @ZA16169 02616003
TCCWSAVD DS    A                   - SAVE AREA FOR REG 13      @ZA16169 02626003
TCCWSAV4 DS    A                   - SAVE AREA FOR REG  4      @ZA16169 02636003
TCCWSAV5 DS    A                   - SAVE AREA FOR REG  5      @ZA16169 02646003
TCCWSAV6 DS    A                   - SAVE AREA FOR REG  6      @ZA16169 02656003
TCCWSAV7 DS    A                   - SAVE AREA FOR REG  7      @ZA16169 02666003
TCCWSAV8 DS    A                   - SAVE AREA FOR REG  8      @ZA16169 02676003
TCCWSAV9 DS    A                   - SAVE AREA FOR REG  9      @ZA16169 02686003
TCCWSAVA DS    A                   - SAVE AREA FOR REG  A      @ZA16169 02696003
TCCWRGSV DS    0XL56               TRANSLATOR REG SAVE AREA    @ZA16169 02706003
TCCWREG1 DS    A                   - SAVE AREA FOR REG 1                02731003
TCCWREG2 DS    A                   - SAVE AREA FOR REG 2                02750003
TCCWREG3 DS    A                   - SAVE AREA FOR REG 3                02800003
TCCWREG4 DS    A                   - SAVE AREA FOR REG 4                02850003
TCCWREG5 DS    A                   - SAVE AREA FOR REG 5                02900003
TCCWREG6 DS    A                   - SAVE AREA FOR REG 6                02950003
TCCWREG7 DS    A                   - SAVE AREA FOR REG 7                03000003
TCCWREG8 DS    A                   - SAVE AREA FOR REG 8                03050003
TCCWREG9 DS    A                   - SAVE AREA FOR REG 9                03100003
TCCWREGA DS    A                   - SAVE AREA FOR REG 10               03150003
TCCWREGB DS    A                   - SAVE AREA FOR REG 11               03200003
TCCWREGC DS    A                   - SAVE AREA FOR REG 12               03250003
TCCWREGD DS    A                   - SAVE AREA FOR REG 13               03300003
TCCWREGE DS    A                   - SAVE AREA FOR REG 14               03350003
         SPACE 1                                                        03400003
TCCWBL   EQU   *-TCCW              BLOCK LENGTH OF TCCW                 03500021
         MEND , */                                                      03550021
*%TCCWL2: ;                                                             03560021
* DECLARE 1 TCCW BDY(WORD) BASED(TCCWPTR), /* TRANSLATION CONTROL       03570002
*                                  BLOCK */                             03590021
*    2 TCCWTCB PTR(31),            /* ADDRESS OF TCB FOR REQUEST   */   03600021
*    2 TCCWOPTN BIT(8),            /* COMMUNICATION TO/FROM CALLER */   03650021
*    2 TCCWUCB PTR(24),             /* ADDRESS OF THE UCB */            03700021
*    2 TCCWBEB PTR(31),             /* ADDRESS OF THE BEGIN END BLK */  03750021
*    2 TCCWFIX PTR(31),             /* ADDRESS OF THE FIX LIST */       03800021
*    2 TCCWFVC PTR(31),             /* ADDR OF THE FST VIRTUAL CCW */   03850021
*    2 TCCWFRC PTR(31),             /* ADDRESS OF THE REAL CCW */       03900021
*    2 TCCWPLKR PTR(31),            /* ADDRESS OF CURRENT FIX ENTRY */  03950021
*    2 TCCWINDA PTR(31),            /* ADDRESS OF FIRST IDAL */         04000021
*    2 TCCWTICL PTR(31),            /* UNRESOLVED TIC LIST */           04050021
*    2 TCCWINDR PTR(31),            /* ADDRESS OF CURRENT IDAL ENTY */  04100021
*    2 TCCWCCWR PTR(31),            /* ADDRESS OF SLOT FOR REAL CCW */  04150021
*    2 TCCWMODB BIT(8),             /* FLAG BYTE FOR  TRANSLATION */    04200021
*      3 TCCWRSV1 BIT(1),           /* RESERVED              @ZA16169*/ 04210003
*      3 TCCWRSV2 BIT(1),           /* RESERVED              @ZA16169*/ 04220003
*      3 TCCWRSV3 BIT(1),           /* RESERVED              @ZA16169*/ 04230003
*      3 TCCWRSV4 BIT(1),           /* RESERVED              @ZA16169*/ 04240003
*      3 TCCWRSV5 BIT(1),           /* RESERVED              @ZA16169*/ 04250003
*      3 TCCWPC10 BIT(1),           /* A ZERO IDAL ENTRY RQD @ZA16169*/ 04260003
*      3 TCCWPGCK BIT(1),           /* PAGE FIX/UNFIX ACTIVE @ZA16169*/ 04270003
*      3 TCCWECBU BIT(1),           /* ECB IN USE            @ZA16169*/ 04280003
*    2 TCCWCCWL CHAR(1),            /* NUMBER OF CCWS LEFT IN BEB */    04350021
*    2 TCCWINDL CHAR(1),            /* NUMBER OF IDAL LEFT */           04400021
*    2 TCCWEFOP CHAR(1),            /* NUMERIC PORTION OF OP CODE */    04450021
*    2 TCCWCCWA PTR(31),            /* CURRENT VIRTUAL CCW ADDR */      04500021
*    2 TCCWTICA PTR(31),            /* ADDRESS PORTION OF TIC */        04550021
*    2 TCCWLOCA PTR(31),            /* LOW COMPARE ADDRESS */           04600021
*    2 TCCWHICA PTR(31),            /* HIGH COMPERE ADDRESS */          04650021
*    2 TCCWCBEB PTR(31),            /* CURRENT BEB POINTER */           04700021
*    2 TCCWOPTR PTR(31),            /* PREVIOUS CCW ADDR     @ZM30410*/ 04710003
*      3 TCCWOPBT CHAR(1),          /* PREVIOUS OP BYTE      @ZM30410*/ 04715003
*      3 *        CHAR(3),          /* ADDRESS PORTION       @ZM30410*/ 04720003
*    2 TCCWSAVE CHAR(32),           /* INTERNAL WORK AREA */            04750021
*      3 TCCWSAVD PTR(31),          /* SAVE AREA- REG D      @ZA16169*/ 04755003
*      3 TCCWSAV4 PTR(31),          /* SAVE AREA- REG 4      @ZA16169*/ 04760003
*      3 TCCWSAV5 PTR(31),          /* SAVE AREA- REG 5      @ZA16169*/ 04765003
*      3 TCCWSAV6 PTR(31),          /* SAVE AREA- REG 6      @ZA16169*/ 04770003
*      3 TCCWSAV7 PTR(31),          /* SAVE AREA- REG 7      @ZA16169*/ 04775003
*      3 TCCWSAV8 PTR(31),          /* SAVE AREA- REG 8      @ZA16169*/ 04780003
*      3 TCCWSAV9 PTR(31),          /* SAVE AREA- REG 9      @ZA16169*/ 04785003
*      3 TCCWSAVA PTR(31),          /* SAVE AREA- REG A      @ZA16169*/ 04790003
*    2 TCCWRGSV,                    /* REGISTER SAVE AREA */            04800021
*      3 TCCWREG1 PTR(31),          /* SAVE AREA FOR REGISTER 1 */      04850021
*      3 TCCWREG2 PTR(31),          /* SAVE AREA FOR REGISTER 2 */      04900021
*      3 TCCWREG3 PTR(31),          /* SAVE AREA FOR REGISTER 3 */      04950021
*      3 TCCWREG4 PTR(31),          /* SAVE AREA FOR REGISTER 4 */      05000021
*      3 TCCWREG5 PTR(31),          /* SAVE AREA FOR REGISTER 5 */      05050021
*      3 TCCWREG6 PTR(31),          /* SAVE AREA FOR REGISTER 6 */      05100021
*      3 TCCWREG7 PTR(31),          /* SAVE AREA FOR REGISTER 7 */      05150021
*      3 TCCWREG8 PTR(31),          /* SAVE AREA FOR REGISTER 8 */      05200021
*      3 TCCWREG9 PTR(31),          /* SAVE AREA FOR REGISTER 9 */      05250021
*      3 TCCWREGA PTR(31),          /* SAVE AREA FOR REGISTER 10 */     05300021
*      3 TCCWREGB PTR(31),          /* SAVE AREA FOR REGISTER 11 */     05350021
*      3 TCCWREGC PTR(31),          /* SAVE AREA FOR REGISTER 12 */     05400021
*      3 TCCWREGD PTR(31),          /* SAVE AREA FOR REGISTER 13 */     05450021
*      3 TCCWREGE PTR(31),          /* SAVE AREA FOR REGISTER 14 */     05500021
*    2 TCCWEND CHAR(0);             /* END OF STRUCTURE          */     05550021
*%DCL TCCWBL CHAR;                                                      05600021
*%TCCWBL='ADDR(TCCWEND)-ADDR(TCCWTCB)'; /* LENGTH OF TCCW        */     05650021
*                                                                       05654021
*/*      BITS DEFINED FOR TCCWOPTN                               */     05660021
*                                                                       05670021
* DCL TCCWXLAT BIT(8) CONSTANT('00'X); /* TRANSLATION REQUEST    */     05700021
* DCL TCCWCSWX BIT(8) CONSTANT('04'X); /* CSW TRANSLATION REQUEST */    05750021
* DCL TCCWUNFX BIT(8) CONSTANT('08'X); /* UNFIX PAGES REQUEST     */    05800021
* DCL TCCWSATR BIT(8) CONSTANT('10'X); /*SINGLE ADDRESS TRANSLATION*/   05850021
* DCL TCCWPGER BIT(8) CONSTANT('80'X); /* PAGING ERROR INDICATOR   */   05900021
* DCL TCCWTRER BIT(8) CONSTANT('90'X); /* TRANSLATION ERROR INDICATOR*/ 05950021
* DCL TCCWIDAE BIT(8) CONSTANT('A0'X); /* IDA BIT ERROR      @ZA06069*/ 05955003
./  ADD  SSI=63510375,NAME=IECDVOID
* %      GO TO VOIPLS;             /* GO TO THE PLS VERSION   */        00050021
         MACRO                                                          00100021
         IECDVOID  &CSECT=NO                                            00150021
         SPACE 1                                                        00152021
****************************************************************        00154021
*                                                              *        00156021
*    THIS IS THE VECTOR OF IOS DRIVERS CONTROL BLOCK. IT IS    *        00158021
*    ADDRESSABLE THROUGH THE IOCOM VIA IOCVOID.                *        00158421
*                                                              *        00158821
****************************************************************        00159221
         SPACE 1                                                        00159621
         AIF   ('&CSECT' NE 'YES').VOI001                               00160021
IECVOID  DS    0F                                                       00170021
*   DRIVER ID =0   RESERVED                                             00180021
         DC    A(IECVOB14)                                              00190002
         DC    A(IECVOB14)                                              00192002
         DC    A(IECVOB14)                                              00194002
IECVOENT EQU   *                                                        00195702
*   DRIVER ID =1  MISCELLANEOUS ID FOR I/O REQUESTS NOT NEEDING         00196021
*                 VOID SERVICES.                                        00198021
         DC    A(IECVOB14)                                              00198402
         DC    A(IECVOB14)                                              00198802
         DC    A(IECVOB14)                                              00199202
*   DRIVER ID =2  EXCP                                                  00199621
         DC    V(IECVXPUR)         EXCP PURGE SUBROUTINE ADDRESS        00199721
         DC    V(IECVXRES)         RESTORE SUBROUTINE                   00199821
         DC    V(IECVEXTC)         EXTENT CHECK SUBROUTINE              00199921
*   DRIVER ID =3  VSAM                                                  00216621
         DC    V(IDA121A6)         ABP PURGE SUBROUTINE                 00226602
         DC    A(IECVOB14)                                              00247002
         DC    A(IECVOB14)                                              00247402
*   DRIVER ID =4  VTAM                                                  00248602
         DC    A(IECVOB14)                                              00258602
         DC    A(IECVOB14)                                              00260602
         DC    A(IECVOB14)                                              00260702
*   DRIVER ID =5  TCAM                                                  00261002
         DC    A(IECVOB14)                                              00288602
         DC    A(IECVOB14)                                              00290602
         DC    A(IECVOB14)                                              00292602
*   DRIVER ID =6  OLTEP                                                 00296621
         DC    A(IECVOB14)                                              00298602
         DC    A(IECVOB14)                                              00299002
         DC    A(IECVOB14)                                              00299402
*   DRIVER ID =7  PCI FETCH                                             00299821
         DC    V(IEWFTPRG)                                              00299902
         DC    A(IECVOB14)                                              00318602
         DC    V(IEWFTXCK)                                              00326602
         WXTRN IEWFTPRG,IEWFTXCK                               @ZA11363 00329600
*   DRIVER ID =8  JES3                                                  00332600
         DC    A(IECVOB14)                                              00338602
         DC    A(IECVOB14)                                              00340602
         DC    A(IECVOB14)                                              00342602
*   DRIVER ID =9  SS1                                          @Y30LPLC 00349403
         DC    A(IECVOB14)                                              00368602
         DC    A(IECVOB14)                                              00370602
         DC    A(IECVOB14)                                              00372602
*   DRIVER ID =A  IECVIOPM PURGE                               @ZA04107 00373000
         DC    A(IECVOB14)         HI BYTE USED FOR USE COUNT  @ZA04107 00373400
         DC    A(IECVOB14)                                              00374200
         DC    A(IECVOB14)                                              00375000
*   DUMMY  ID =B  VPSS                                         @G29ANLO 00375800
         DC    A(IECVOB14)                                     @G29ANLO 00375900
         DC    A(IECVOB14)                                     @G29ANLO 00376000
         DC    A(IECVOB14)                                     @G29ANLO 00376100
*   DUMMY  ID =C  RESERVED                                              00376600
         DC    A(IECVOB14)                                              00376900
         DC    A(IECVOB14)                                              00377200
         DC    A(IECVOB14)                                              00377500
         SPACE 1                                                        00377800
IECVOEND EQU   *                                                        00378621
         SPACE 1                                                        00379002
*  DUMMY VOID TABLE ENTRY - ZERO REG 15 AND RETURN ON 14                00379402
*  MUST BE CONTIGUOUS TO LAST TABLE ENTRY FOR IOSGEN SETVOID FUNCTION   00379500
         SPACE 1                                                        00379802
IECVOB14 SLR   15,15               ZERO REG 15                          00380602
         BR    14                  RETURN TO CALLER                     00382602
         MEXIT                                                          00386621
.VOI001  ANOP                                                           00396621
VOID     DSECT                                                          00400021
VOIENTRY DS    0F                                                       00650021
VOIPRG   DS    A                   ADDR OF DRIVER PURGE SUBR            00700021
VOIRSTR  DS    A                   ADDR OF DRIVER RESTORE SUBR          00750021
VOIEXTNT DS    A                   ADDR OF DRIVER EXTENT CHECK          00800021
*                                  SUBROUTINE                           00850021
VOIEL    EQU   *-VOIENTRY          LENGTH OF VOID                       00900021
         MEND                                                           00950021
*%VOIPLS: ;                                                             01000021
*                                                                       01050021
*/*************************************************************/        01100021
*/*                                                           */        01150021
*/*  THIS IS THE VECTOR OF IOS DRIVERS CONTROL BLOCK. IT IS   */        01200021
*/*  ADDRESSABLE THROUGH THE IOCOM.                           */        01250021
*/*                                                           */        01300021
*/*************************************************************/        01350021
*/*                                                           */        01400021
*/*      08/22/72   LEVEL=00                                  */        01450021
*/*                                                           */        01500021
*/*************************************************************/        01550021
*                                                                       01600021
*   DCL 1 VOID(*)  BDY(WORD)  BASED(VOIDPTR),                           01610021
*       2  VOIENTRY PTR(31),       /* ENTRY NAME              */        01650021
*         3 VOIPRG  PTR(31),       /* ADDR OF DRIVR PURGE RTN */        01700021
*       2  VOIRSTR  PTR(31),       /* ADDR OF DRVR RESTORE RTN*/        01750021
*       2  VOIEXTNT PTR(31),       /* ADDR OF DRIVER EXTENT   */        01800021
*                                  /* CHECK SUBROUTINE        */        01850021
*       2  VOIEND   CHAR(0);       /* END OF VOID             */        01860021
*                                                                       01870021
*%DCL  VOIEL  CHAR;                /* LENGTH OF VOID          */        01900021
*%VOIEL='ADDR(VOIEND)-ADDR(VOIENTRY)';                                  01950021
./  ADD  SSI=70600158,NAME=IECDXDBA
         MACRO                                                          00050002
         IECDXDBA                                                       00100002
*********************************************************************** 00150002
*        EXCP PROVIDED DEBUGGING AREA - DATE 2/13/73 - LEVEL=1        * 00250002
*                                                                     * 00300002
*        THIS AREA IS PROVIDED FOR ABENDING TASKS TO AID THE          * 00350002
*        PROGRAMMER IN DEBUGGING. PROVIDED FOR HIS INFORMATION        * 00400002
*        IS THE ORIGINAL ABEND CODE, THE PSW, THE REGISTERS, THE      * 00450002
*        GENERAL VICINITY OF THE ERROR AND, IN THE CASE OF            * 00500002
*        TRANSLATION ERRORS, THE TRANSLATION BLOCKS.                  * 00550002
*                                                                     * 00600002
*        A POINTER TO THE AREA IS CONTAINED IN THE TCB CALLED         * 00650002
*        TCBEXCPD, OFFSET X'C0'. IF A FIELD IS ZERO, IT IS NOT VALID  * 00700002
*        OR CANNOT BE FOUND AT TIME OF ERROR.                         * 00750002
*                                                                     * 00800002
*********************************************************************** 00850002
XDBA     DSECT                                                          00950002
XDBACOMP DS    H                   ABEND COMPLETION CODE                01050002
XDBAFLAG DS    X                   FLAG DEPICTING WHERE THE PROBLEM     01100002
*                                  OCCURRED.                            01150002
XDBAFTE  EQU   X'80'               ERROR IN SVC PORTION OF EXCP         01200002
XDBABKE  EQU   X'40'               ERROR IN SRB PORTION OF EXCP         01250002
XDBAPCI  EQU   X'20'               ERROR IN PCI APPENDAGE               01300002
XDBACHE  EQU   X'10'               ERROR IN CHE APPENDAGE               01350002
XDBAABE  EQU   X'08'               ERROR IN ABE APPENDAGE               01400002
XDBAEOE  EQU   X'04'               ERROR IN EOE APPENDAGE               01450002
XDBAPGFX EQU   X'02'               ERROR IN PGFX APPENDAGE              01500002
XDBAAACT EQU   X'01'               APPENDAGE IS ACTIVE         @YM05509 01550002
XDBASIO  EQU   X'00'               ERROR IN SIO APPENDAGE      @YM05509 01570002
         SPACE 1                                                        01580003
XDBARV1  DS    X                   RESERVED                             01650002
XDBAPSW  DS    XL8                 PSW AT TIME OF ERROR                 01700002
         DS    XL2                 RESERVED                    @YM02855 01720002
XDBACC   DS    XL2                 ORIG. ABEND CODE            @YM02855 01760002
XDBARGSV DS    16F                 REGISTERS AT TIME OF ABEND           01800002
XDBATRAN DS    F                   TRANSLATION EXCEPTION ADDR  @ZA06070 01810003
XDBARQE  DS    XL40                RQE BLOCK                   @ZA06070 01820003
XDBACHAN DS    F                   XDBA CHAIN POINTER          @ZA15703 01860003
         SPACE 1                                               @ZA06070 01920003
*  THE 160 BYTE BLOCKS ARE MOVED INTO REMAINING DEBUGGING     *@ZA06070 01970003
*  AREA, IN FOLLOWING SEQUENCE (IF PRESENT) :                 *@ZA06070 01990003
*        EWA, SRB/IOSB, TCCW, IDAL, FIX AND BEB.              *@ZA06070 02050003
*  THE 1ST 160 BYTE FOLLOWING LAST ENTRY IS ZEROED.           *@ZA06070 02130003
*  THE SRB AND TCCW ARE VALID IF ADDR IN RQE IS VALID         *@ZA06070 02150003
***************************************************************@ZA06070 02170003
XDBAENT  DS    XL160               START OF 160B BLOCKS        @ZA06070 02190003
         SPACE 1                                               @ZA06070 02210003
XDBAEL   EQU   160                 ONE BLOCK ENTRY LENGTH      @ZA06070 02230003
XDBASIZE EQU   2048                SIZE OF XDBA                         02300002
XDBABLKS EQU   (XDBASIZE-(XDBAENT-XDBA))/XDBAEL  CNT 160B BLKS @ZA06070 02320003
         MEND                                                           02350002
./  ADD  SSI=63560502,NAME=IECDXFRR
         MACRO                                                          00002000
         IECDXFRR                                                       00003000
FRREXCP  DSECT                                                 @ZA12704 00005000
************************************************************** @ZA12704 00008000
*        IECVEXCP/IECVEXPR FRR PARM AREA DSECT.              * @ZA12704 00010000
*        DSECT DESCRIBES USAGE OF THE 6 WORD FRR PARM AREA   * @ZA12704 00012000
*                                                            * @ZA12704 00014000
************************************************************** @ZA12704 00016000
FRRCRQE  DS    A         CURRENT  RQE POINTER                  @ZA12704 00022000
FRRPRQE  DS    A         PREVIOUS RQE POINTER                  @ZA12704 00024000
FRRSTRG  DS    A         FREE 160B BLOCK POINTER               @ZA12704 00026000
         SPACE 1                                               @ZA12704 00028000
FRRFLAG  DS    X         EXCP PROCESSING FLAGS                 @ZA12704 00030000
FRRFTE   EQU   X'80'     FRONT END ENTRANCE                    @ZA12704 00032000
FRRBKE   EQU   X'40'     BACK END ENTRANCE                     @ZA12704 00034000
FRRPCI   EQU   X'20'     PCI APPENDAGE PROCESSING              @ZA12704 00036000
FRRCHE   EQU   X'10'     CHANNEL END APPENDAGE PROCESSING      @ZA12704 00038000
FRRABE   EQU   X'08'     ABNORMAL END APPENDAGE PROCESSING     @ZA12704 00040000
FRREOE   EQU   X'04'     END OF EXTEND APPENDAGE PROCESSING    @ZA12704 00042000
FRRPGFX  EQU   X'02'     PAGE FIX APPENDAGE PROCESSING         @ZA12704 00044000
FRRAACT  EQU   X'01'     APPENDAGE IS ACTIVE                   @ZA12704 00050000
FRRSIO   EQU   X'00'     START I/O APPENDAGE PROCESSING        @ZA12704 00100000
*                                                              @ZA12704 00150000
FRREXPR  EQU   X'3E'     EXPR ENTRY FOR PURGING OR FRR TERM    @ZA12704 00200000
         SPACE 1                                               @ZA12704 00250000
FRRTCNT  DS    X         RQE XLATE CTR AND SMGR INTF FLAGS     @ZA12704 00300000
*        EQU   X'80'     RESERVED                              @ZA12704 00350000
FRRXLTA  EQU   X'40'     RQE TRANSLATION ACTIVE                @ZA12704 00400000
FRRXLT   EQU   X'30'     2 BIT RQE XLATE COUNTER (0-3)         @ZA12704 00450000
FRRGETR  EQU   X'08'     STORAGE MANAGER GET REQUEST           @ZA12704 00500000
*        EQU   X'04'     STORAGE MANAGER RESERVED BIT          @ZA12704 00550000
FRR40    EQU   X'02'     STORAGE MANAGER 40B (MED) REQUEST     @ZA12704 00600000
FRR160   EQU   X'01'     STORAGE MANAGER 160B (LGE) REQUEST    @ZA12704 00650000
*                                                              @ZA12704 00700000
FRRG40   EQU   X'0A'     40 BYTE GET REQUEST                   @ZA12704 00750000
FRRF40   EQU   X'02'     40 BYTE FREE REQUEST                  @ZA12704 00800000
FRRG160  EQU   X'09'     160 BYTE GET REQUEST                  @ZA12704 00850000
FRRF160  EQU   X'01'     160 BYTE FREE REQUEST                 @ZA12704 00900000
         SPACE 1                                               @ZA12704 00950000
FRRFCNT  DS    X         COUNT OF CHAINED 160 B BLOCKS TO FREE @ZA12704 01000000
FRRWORK  DS    X         WORK BYTE AND FLAG DEFINITIONS        @ZA12704 01050000
*        EQU   X'F0'     WORK BITS                             @ZA12704 01100000
FRRPTERM EQU   X'08'     POST STATUS TERMINATION ENTRY         @ZA12704 01150000
FRRRRP   EQU   X'04'     PURGE REL REQ RQES TO CURRENT RQE     @ZA12704 01200000
FRRUNREL EQU   X'02'     IOBUNREL BIT                          @ZA12704 01250000
*        EQU   X'01'     RESERVED                              @ZA12704 01300000
         SPACE 1                                               @ZA12704 01350000
FRRRETR  DS    A         CALLERS RETURN ADDRESS                @ZA12704 01400000
FRRLLSA  DS    A         LOCAL LOCK SAVE AREA POINTER          @ZA12704 01450000
         SPACE 1                                               @ZA12704 01500000
FRRXLEN  EQU   *-FRREXCP      FRR PARM AREA LENGTH             @ZA12704 01550000
         MEND                                                           01600000
./  ADD  SSI=21460341,NAME=IECIOLTP
         MACRO                                                          00500020
         IECIOLTP                                                       01000020
*******************************************************$********  20102 01500020
*                                                                 20102 02000020
*                     IOS - OLTEP CLEANUP ROUTINES                20102 02500020
*                                                                 20102 03000020
*   FUNCTION   RESTORE SYSTEM TO NORMAL PROCESSING BY RESETTING   20102 03500020
*              THE IOS-OLTEP VECTOR TABLE FUNCTION SWITCH, AND    20102 04000020
*              RELEASING MAIN STORAGE WHICH WAS USED FOR CONTROL  20102 04500020
*              BLOCKS.  THE FUNCTIONS ARE SET UP IN IGC01059 AND  20102 05000020
*              IN IGC03059, AND ARE DEFINED IN FULL THERE.        20102 05500020
*                                                                 20102 06000020
*   ENTRY POINTS   CLEANCH FOR CLEANING UP CHANNEL FUNCTION       20102 06500020
*                  CLEANDE FOR CLEANING UP D.E. POSTING FUNCTION  20102 07000020
*                  CLEANAT FOR CLEANING UP ATT'N FUNCTION         20102 07500020
*                  CLEANBP FOR CLEANING UP BYPASS CP PREFIX       21051 07600021
*                  CLEANEX FOR CLEANING UP SPECIFIC EXPOSURE      21051 07700021
*                  CLEANSI FOR CLEANING UP 2ND SIO                21051 07800021
*                  FREEQUE IF FROM ABEND                          20102 08000020
*                                                                 20102 08500020
*   INPUT      ADDRESS OF TWO WORD PARAMETER LIST IN REGISTER 9.  20102 09000020
*              FOR DEVICE FUNCTIONS, THE UCB, DEB ADDRESSES       20102 09500020
*              FOR CHANNEL FUNCTION, THE DEB AND CHAN ADDRESSES   20102 10000020
*              IF REG9=0, OLTEP REQUIRES TOTAL CLEANUP            20067 10500020
*                                                                 20102 11000020
*   OUTPUT     N/A                                                      11500020
*                                                                 20102 12000020
*   EXTERNAL ROUTINES  FREEMAIN                                   20102 12500020
*                                                                 20102 13000020
*   EXITS      RETURN TO SYSTEM ON REGISTER 14                    20102 13500020
*                                                                 20102 14000020
*   TABLES/WORK AREAS  THE IOS V.T., THE IOS-OLTEP QUEUE          20102 14500020
*                                                                 20102 15000020
*   NOTES      THIS PART OF IGC0005I WAS WRITTEN AND IS           20102 15500020
*              MAINTAINED BY IOS.                                 20102 16000020
*                                                                 20102 16500020
*******************************************************$********  20102 17000020
         EJECT                                                    20102 17500020
*   REGISTER DEFINITIONS                                          20102 18000020
GMREG    EQU   1                        GETMAIN CORE ADDRESS      20102 18500020
VTREG    EQU   2                        VECTOR TABLE IN IOS       20102 19000020
MSTREG   EQU   5                        ADDRESS OF MASTER Q ENTRY 20102 19500020
SCBREG   EQU   6                        UCB OR DEB ADR            20102 20000020
LNKREG1  EQU   7                        LINK REGISTER             20102 20500020
SUBREG   EQU   8                        SUB-ENTRY ADDRESS         20102 21000020
WKREG1   EQU   10                       WORK REGISTER             20102 21500020
WKREG2   EQU   11                       WORK REGISTER             20102 22000020
WKREG3   EQU   13                       WORK REGISTER             20102 22500020
RETNREG  EQU   14                       RETURN TO THE SYSTEM      20102 23000020
         SPACE 1                                                  20102 23500020
*   OLTEP QUEUE ADDRESSING                                        20102 24000020
LOGDCB   EQU   116                      OFFSET TO LOGREC DCB      20102 24500020
OLTSW    EQU   0                        FUNCTION SWITCH           20102 25000020
OLTQUE   EQU   4                        ADR OF QUEUE ORIGIN       20102 25500020
         SPACE 1                                                  20102 26000020
*   OFFSETS IN QUEUE ENTRY                                        20102 26500020
LNKFLD   EQU   0                        LINK FIELD                20102 27000020
SUBSCB   EQU   4                        UCB OR DEB                20102 27500020
MSTRCH   EQU   7                        CHAN ADR IN MASTER ENTRY  20102 28000020
SUBOPT   EQU   8                        OPTION CODE FIELD         20102 28500020
SUBDTI   EQU   11                       TRUE DEVTAB INDEX         21051 28600021
SUBUCB   EQU   12                       UCB ADDRESS               21051 28700021
         SPACE 1                                                  20102 29000020
*   PARAMETER LIST OFFSETS                                        20102 29500020
OPTBYTE  EQU   0                        OPTION CODE BYTE          20102 30000020
SCBADR   EQU   0                        DEB OR UCB C.B.           20102 30500020
CHADR    EQU   7                        CHANNEL ADDRESS           20102 31000020
         SPACE 1                                                  20102 31500020
*   OPTION CODES                                                  20102 32000020
CHOPT    EQU   X'80'                    CHANNEL OPTION            20102 32500020
DEOPT    EQU   X'40'                    D.E. OPTION               20102 33000020
ATOPT    EQU   X'20'                    ATTENTION OPTION          20102 33500020
BPOPT    EQU   X'10'                    BYPASS OPTION             20102 34000020
EXPOPT   EQU   X'08'                    SPECIFIC EXPOSURE         21051 34100021
SIOOPT   EQU   X'02'                    2ND SIO                   21051 34200021
         SPACE 1                                                  20102 34500020
*   TCB FIELDS AND FLAGS                                          20067 35000020
TCBFLTRN EQU   20                       TCB FLAG BYTE             20102 35500020
TCBOLTFL EQU   X'02'                    TCB OLTEP FLAG            20102 36000020
TCBFLAG  EQU   29                       TCB FLAG BYTES            20102 36500020
ABND     EQU   X'80'                    TASK BEING ABENDED        20102 37000020
         SPACE 1                                                  20102 37500020
*   UCB OFFSETS                                                   21051 37600021
UCBDTI   EQU   7                        DEVICE TABLE INDEX        21051 37700021
UCBDUTYP EQU   18                       DEVICE CLASS/UNIT TYPE    21051 37800021
UCBWKADB EQU   60                       UCB EXTENSION             21051 37900021
*   MISCELLANEOUS                                                 20102 38000020
NEXAVL   EQU   X'7C'                    ADR OF NEXT AVAIL. RQE    20102 38500020
CHMSK    EQU   20                       CHANNEL MASK FOR RESTART  20102 39000020
ZERO     EQU   0                        ZERO                      20102 39500020
ADDONE   EQU   1                        ONE                       20102 40000020
HIBYTE   EQU   24                       SLL FACTOR                20067 40500020
VTLN     EQU   8                        LENGTH OF VECTOR TABLE    20067 41000020
EXPCHN   EQU   92                       CONTROL UCB PTR OFFSET    21051 41100021
NXTEXP   EQU   4                        EXP. UCB PTR OFFSET       21051 41200021
         SPACE 3                                                  20102 41500020
CLEANBP  DS    0H                       BYPASS FUNCTION           20102 42000020
         MVI   OPTBYTE(PARMREG),BPOPT   INDICATE BYPASS OPTION    20102 42500020
         BC    15,FREEQUE               GO CLEAN IT UP            20102 43000020
         SPACE 1                                                  20102 43500020
CLEANCH  DS    0H                       CHANNEL CLEANUP           20102 44000020
         MVI   OPTBYTE(PARMREG),CHOPT   SET UP CHAN OPTION CODE   20102 44500020
         BC    15,FREEQUE               GO CLEAN IT UP            20102 45000020
         SPACE 1                                                  20102 45500020
CLEANDE  DS    0H                       D.E. OPTION CLEANUP       20102 46000020
         MVI   OPTBYTE(PARMREG),DEOPT   INDICATE D.E. OPTION      20102 46500020
         BC    15,FREEQUE               GO CLEAN IT UP            20102 47000020
         SPACE 1                                                  20102 47500020
CLEANAT  DS    0H                                                 20102 48000020
         MVI   OPTBYTE(PARMREG),ATOPT   INDICATE ATT'N OPTION     20102 48500020
         B     FREEQUE                  CLEAN UP                  21051 48560021
         SPACE 1                                                  21051 48620021
CLEANEX  MVI   OPTBYTE(PARMREG),EXPOPT  INDICATE SPECIFIC EXP OPTN21051 48680021
         B     FREEQUE                  CLEAN UP                  21051 48740021
         SPACE 1                                                  21051 48800021
CLEANSI  MVI   OPTBYTE(PARMREG),SIOOPT  INDICATE 2ND SIO OPTION   21051 48860021
*****    B     FREEQUE                  CLEAN UP                  21051 48920021
         SPACE 1                                                  20102 49000020
*   SCAN THE IOS-OLTEP QUEUE AND FIND THE NUMBER OF SUB-ENTRIES   20102 49500020
*   FOR THE INPUT OPTION AND THE ENTRY FOR THE INPUT UCB OR DEB.  20102 50000020
         SPACE 1                                                  20102 50500020
FREEQUE  DS    0H                       ENTRY IF FROM ABEND       20102 51000020
         L     VTREG,LOGDCB(0,CVTREG)   LOG DCB ADR               20102 51500020
         SH    VTREG,TWELVE             BACK UP TWELVE            20102 52000020
         L     VTREG,ZERO(0,VTREG)      POINT AT VECTOR TABLE     20102 52500020
         L     MSTREG,OLTQUE(0,VTREG)   GET MASTER ENTRY          20102 53000020
         LTR   MSTREG,MSTREG            ANYTHING TO CLEAN UP      20102 53500020
         BCR   8,RETNREG                NO, RETURN                20102 54000020
         TM    TCBFLAG(TCBREG),ABND     IS TASK BEING ABENDED     20102 54500020
         BC    1,FREEQ1                 YES, CLEAN UP QUEUE       20102 55000020
         LTR   PARMREG,PARMREG          OLTEP WANT TOTAL CLEANUP  20102 55500020
         BC    8,FREEQ1                 YES, GO DO IT             20102 56000020
         L     SCBREG,SCBADR(0,PARMREG) GET INPUT C.B.            20102 56500020
         LA    SCBREG,ZERO(0,SCBREG)    CLEAR HIGH ORDER BYTE     20102 57000020
         SR    RCREG,RCREG              INITIALIZE COUNTER        20102 57500020
         SR    SUBREG,SUBREG            CLEAR FOR LATER COMPARE   20102 58000020
         LR    WKREG1,MSTREG            COPY MASTER ADDRESS       20102 58500020
FIND1    L     WKREG2,LNKFLD(0,WKREG1)  GET NEXT ENTRY            20102 59000020
         LTR   WKREG2,WKREG2            END OF QUEUE              20102 59500020
         BC    8,DEQNTRY                YES, GO DEQUE IT          20102 60000020
         LR    LNKREG1,WKREG1           SAVE BACK LINK POINTER    20102 60500020
         LR    WKREG1,WKREG2            COPY ENTRY ADDRESS        20102 61000020
         CLC   OPTBYTE(1,PARMREG),SUBOPT(WKREG1) FOR THIS OPTION  20102 61500020
         BC    7,FIND1                  NO, GET NEXT ENTRY        20102 62000020
         LA    RCREG,ADDONE(0,RCREG)    INCREMENT COUNTER         20102 62500020
         C     SCBREG,SUBSCB(0,WKREG1)  IS IT FOR INPUT SCB       20102 63000020
         BC    7,FIND1                  NO, GET NEXT ENTRY        20102 63500020
         LR    SUBREG,WKREG1            SAVE ENTRY ADDRESS        20102 64000020
         LR    WKREG3,LNKREG1           SAVE BACK LINK ENTRY      M1008 64200020
         BC    15,FIND1                 CONTINUE SCAN             20102 64500020
         SPACE 1                                                  20102 65000020
*   THE ENTRY ADDRESS IS IN SUBREG, THE ENTRY PRECEDING THIS      20102 65500020
*   ENTRY IS IN WKREG3.  THE LAST QUEUE ELEMENT IS IN WKREG1.     20102 66000020
*   THE NUMBER OF ENTRIES FOR THIS FUNCTION IS IN RCREG.          20102 66500020
*   IF ONLY ONE ENTRY IS FOUND FOR THIS FUNCTION, THE IOS-OLTEP   20102 67000020
*   SWITCH BIT FOR THIS FUNCTION IS TURNED OFF. IF NO OTHER       20102 67500020
*   FUNCTIONS ARE LEFT, THE ENTIRE QUEUE IS FREED AND THE IOS     20102 68000020
*   VECTOR TABLE IS RE-INITIALIZED.                               20102 68500020
         SPACE 1                                                  20102 69000020
DEQNTRY  LTR   SUBREG,SUBREG            WAS THE ENTRY FOUND       20102 69500020
         BCR   8,RETNREG                NO, RETURN                20102 70000020
         BCT   RCREG,DEQ2               SKIP AROUND IF ANY LEFT   20102 70500020
         XC    OLTSW(1,VTREG),OPTBYTE(PARMREG) TURN OFF SWITCH          71000020
         BC    8,DEQ4                   FREE Q IF NO FUNC IS LEFT 20102 71500020
         SPACE 1                                                  20102 72000020
*   DEQUE THE ENTRY FOR THIS FUNCTION                             20102 72500020
DEQ2     EQU   *                                                  21051 72540021
         CLI   SUBOPT(SUBREG),EXPOPT .  THIS A SPECIFIC EXP FUNC  21051 72580021
         BNE   ALLSET .                 BRANCH NO                 21051 72620021
         L     WKREG2,SUBUCB(0,SUBREG) .GET UCB ADDRESS           21051 72660021
         LA    LNKREG1,ALLSET                                     21051 72700021
         SPACE 1                                                  21051 72740021
***  IF DEVICE IS A MULTIPLE EXPOSURE DEVICE, RESET DTI IN ALL    21051 72780021
***  EXPOSURE UCB'S. IF NOT,RESET MAIN UCB DTI.                   21051 72820021
         SPACE 1                                                  21051 72860021
RESETRTN IC    GMREG,SUBDTI(0,SUBREG)   TRUE DEVTAB INDEX         21051 72900021
         STC   GMREG,UCBDTI(0,WKREG2)   SET TRUE INDEX IN UCB     21051 72940021
         CLC   UCBDUTYP(2,WKREG2),ZEUSCON                         21051 72950000
         BE    RESETALL                                           21051 72960000
         CLC   UCBDUTYP(2,WKREG2),ZEUSCN1                         21051 72970000
         BCR   7,LNKREG1                                          21051 72972000
RESETALL L     SCBREG,UCBWKADB(0,WKREG2) BASE UCB ENTENSION       21051 72980021
         L     RCREG,EXPCHN+NXTEXP(0,SCBREG) LAST EXP. STARTED    21051 73020021
         LR    WKREG2,RCREG             SAVE LAST EXP STARTED     21051 73060021
SETDTI   STC   GMREG,UCBDTI(0,WKREG2)   CHANGE EXP DTI            21051 73100021
         L     SCBREG,UCBWKADB(0,WKREG2) THIS EXPOSURE EXTENSION  21051 73140021
         L     WKREG2,EXPCHN+NXTEXP(0,SCBREG) NEXT EXP IN CHAIN   21051 73180021
         CR    WKREG2,RCREG             ALL EXPOSURES CHANGED     21051 73220021
         BNE   SETDTI                   BRANCH NO                 21051 73260021
         BR    LNKREG1                                            21051 73300021
         SPACE 1                                                  21051 73340021
ALLSET   L     WKREG1,LNKFLD(0,SUBREG)  RELINK REST OF THE        21051 73380021
         ST    WKREG1,LNKFLD(0,WKREG3)  OLTEP QUEUE               20102 73500020
         LR    GMREG,SUBREG             SET UP FREEMAIN PARAMETER 20102 74000020
         BAL   LNKREG1,FREENTRY         RELEASE CORE              20102 74500020
         CLI   OPTBYTE(PARMREG),CHOPT   IS THIS CHAN OPT          20102 75000020
         BCR   7,RETNREG                NO, RETURN TO SYSTEM      20102 75500020
         SPACE 1                                                  20102 76000020
*   IF CHANNEL OPTION, TELL IOS TO RESTART CHANNEL                20102 76500020
DEQ3     L     WKREG1,NEXAVL(0,CVTREG)  GET NEXT AVAIL. ADR       20102 77000020
         SR    WKREG2,WKREG2            CLEAR WORK REGISTER       20067 77500020
         IC    WKREG2,MSTRCH(0,MSTREG) GET CHANNEL ADR            20102 78000020
         LA    WKREG3,X'80'             SET UP MASK BIT           20102 78500020
         SLL   WKREG3,HIBYTE            SHIFT TO HIGH-ORDER BYTE  20102 79000020
         SRL   WKREG3,0(WKREG2)         SHIFT BIT TO CORRECT POS  20102 79500020
         O     WKREG3,CHMSK(0,WKREG1)   PICK UP ANY BITS THERE    20102 80000020
         ST    WKREG3,CHMSK(0,WKREG1)   ADD THIS CHAN TO MASK     20102 80500020
         BCR   15,RETNREG               RETURN TO SYSTEM          20102 81000020
         SPACE 1                                                  20102 81500020
DEQ4     OC    OLTSW(1,VTREG),OPTBYTE(PARMREG)     RESET SWITCH   20102 82000020
FREEQ1   TM    OLTSW(VTREG),CHOPT       NEED CHANNEL CLEANUP      20067 82500020
         BC    8,FREEQ1A                NO, CONTINUE              20067 83000020
         LR    RCREG,RETNREG            SAVE RETURN ADR           20067 83500020
         BAL   RETNREG,DEQ3             GO FORCE RESTART OF CHAN  20067 84000020
         LR    RETNREG,RCREG            RESTORE RETURN ADR        20067 84500020
FREEQ1A  LR    SUBREG,MSTREG            COPY MASTER ADR           20067 85000020
FREEQ2   LR    GMREG,SUBREG             SET UP REG1 FOR FREEMAIN  20102 85500020
         L     SUBREG,LNKFLD(0,SUBREG)  SAVE NEXT IN QUEUE        20102 86000020
         BAL   LNKREG1,FREENTRY         FREE ENTRY                20102 86500020
         LTR   SUBREG,SUBREG            ANY LEFT IN QUEUE         20102 87000020
         BZ    ENDALL                   BRANCH NO,ALL THROUGH     21051 87100021
         TM    SUBOPT(SUBREG),EXPOPT    EXP FUNCTION              21051 87200021
         BZ    FREEQ2                   BRANCH NO                 21051 87300021
         L     WKREG2,SUBUCB(0,SUBREG)  GET UCB ADDRESS           21051 87400021
         LA    LNKREG1,FREEQ2           RETURN ADDRESS            21051 87500021
         B     RESETRTN                 GO RESTORE DEVTAB INDEX   21051 87600021
         SPACE 1                                                  21051 87700021
ENDALL   XC    OLTSW(VTLN,VTREG),OLTSW(VTREG) ZERO OUT VECTOR TBL 21051 87800021
         BCR   15,RETNREG               RETURN TO SYSTEM          20102 89000020
         SPACE 1                                                  20102 89500020
FREENTRY L     REG0,SPL16               SET UP PARAMETER          20102 90000020
         FREEMAIN R,LV=(0),A=(1)                                        90500020
         BCR   15,LNKREG1                                         20102 91000020
         SPACE 1                                                  20102 91500020
***            CONSTANTS                                          20102 92000020
         SPACE 1                                                  20102 92500020
TWELVE   DC    H'12'                    TWELVE                    20102 93000020
ZEUSCON  DC    X'2006'                  2305-1                    21051 93050000
ZEUSCN1  DC    X'2007'                  2305-2                    21051 93100000
SPL16    DS    0F                       FREEMAIN PARAMETERS       20102 93500020
         DC    X'EA000010'              16 BYTES, SUBPOOL 234    X01906 94000000
         EJECT                                                          94500020
         MEND                                                           95000020
         END                                                            95500020
./  ADD  SSI=22761861,NAME=IEEBUFSC
          MACRO                                                         00050002
&NAME     IEEBUFSC                                                      00060002
.*******************************************************************    00100002
.*                                                                      00150002
.*     ROUTINE NAME        IEEBUFSC                                     00200002
.*                                                                      00250002
.*     FUNCTION            TO SCAN A BUFFER FOR A GIVEN KEYWORD OF      00300002
.*                         A GIVEN LENGTH AND TO RETURN A POINTER       00350002
.*                         TO THE KEYWORD VALUE AND THE LENGTH OF       00400002
.*                         THE VALUE                                    00450002
.*                                                                      00500002
.*     ENTRY POINT         IEEBUFSC                                     00550002
.*                                                                      00600002
.*     ATTRIBUTES          REFRESHABLE                                  00650002
.*                                                                      00700002
.*     OPERATION           1. SET UP PTR TO BUFFER -1 AND PTR           00750002
.*                            TO KEYWORD LENGTH                         00800002
.*                         2. IF BUFFER PTR = SPECIFIED KEYWORD         00850002
.*                            GO TO FOUND ROUTINE (3).                  00900002
.*                            A. IF NOT, INCREMENT BUFFER PTR           00950002
.*                               BY ONE.                                01000002
.*                            B. IF PTR IS AT END OF BUFFER SET         01050002
.*                               UP NOT FOUND RETURN CODE (8) IN        01100002
.*                               R15 AND EXIT.                          01150002
.*                            C. IF PTR IS AT A COMMA, GO BACK TO       01200002
.*                               OPERATION 2.                           01250002
.*                            D. IF PTR IS AT A BLANK SET UP NOT        01300002
.*                               FOUND RETURN CODE (8) IN R15 AND       01350002
.*                               EXIT.                                  01400002
.*                            E. OTHERWISE GO TO OPERATION 2.A.         01450002
.*                         3. AT FOUND ROUTINE SET UP R14 TO POINT      01500002
.*                            TO KEYWORD VALUE                          01550002
.*                         4. SCAN KEYWORD VALUE TO THE END OF          01600002
.*                            THE BUFFER, A COMMA OR A BLANK            01650002
.*                         5. CALCULATE LENGTH OF KEYWORD VALUE.        01700002
.*                         6. IF LENGTH IS < OR = ZERO, SET UP          01750002
.*                            AN INVALID KEYWORD VALUE LENGTH           01800002
.*                            RETURN CODE (4) IN R15 AND EXIT.          01850002
.*                         7. OTHERWISE, SET GOOD RETURN CODE           01900002
.*                            OF ZERO IN R15 AND EXIT.                  01950002
.*                                                                      02000002
.*     EXTERNAL REFS       NONE                                         02050002
.*                                                                      02100002
.*     SVCS                NONE                                         02150002
.*                                                                      02200002
.*     INPUT               R1 - PTR TO BEGINNING OF BUFFER              02250002
.*                         R0 - PTR TO LAST BYTE OF BUFFER + 1          02300002
.*                         R15- PTR TO KEYWORD WITH THE LENGTH          02350002
.*                              OF THE KEYWORD IN THE HIGH ORDER        02400002
.*                              BYTE.                                   02450002
.*                              EG. KEYWORD FORMAT 'DSNAME='            02500002
.*                                  R15 WOULD POINT TO THE 'D'          02550002
.*                                  WITH A 6 IN THE HIGH ORDER          02600002
.*                                  BYTE.                               02650002
.*                                                                      02700002
.*     OUTPUT              R14  PTR TO FIRST BYTE OF KEYWORD            02750002
.*                              VALUE IN BUFFER OR WORKAREA             02800002
.*                         R1   LENGTH OF KEYWORD VALUE                 02850002
.*                         R15  RETURN CODE OF ZERO.                    02900002
.*                                                                      02950002
.*     ERROR OUTPUT        R15  CONTAINS A FOUR IF KEYWORD              03000002
.*                              HAD AN INVALID LENGTH                   03050002
.*                         R15  CONTAINS AN EIGHT IF THE KEYWORD        03100002
.*                              WAS NOT FOUND IN THE BUFFER             03150002
.*                                                                      03200002
.*     EXIT                TO NEXT SEQUENTIAL INSTRUCTION AFTER         03250002
.*                         MACRO CALL                                   03300002
.*                                                                      03350002
.*     NOTES               LISTS OF OPERANDS IN PARENTHESES ARE         03360002
.*                         NOT PROCESSED; THIS MACRO IS INTENDED        03370002
.*                         TO PROCESS ONLY A SINGLE VALUE  FOR          03380002
.*                         A GIVEN KEYWORD                              03390002
.*******************************************************************    03400002
          BCTR  1,0                DEC. ADDRESS TO BEG. OF BUFFER       03500002
          SR    14,14              CLEAR LENGTH REGISTER                03550002
          SLDL  14,8               KEYWORD LENGTH TO LOW ORDER          03600002
          LTR   14,14              IS LENGTH ZERO?                      03650002
          BZ    NG&SYSNDX          YES, GO SET BAD R.C.                 03700002
          SRL   15,8               ADDRESS BACK TO LOW ORDER 3 BYTES    03750002
AB&SYSNDX EQU   *                                                       03800002
          EX    14,CO&SYSNDX       KEYWORD FOUND IN BUFFER?             03850002
          BE    FD&SYSNDX          YES, GO TO FOUND ROUTINE             03900002
CD&SYSNDX EQU   *                                                       03950002
          LA    1,1(1)             INCREMENT BUFFER POINTER             04000002
          CR    1,0                IS END OF BUFFER REACHED?            04050002
          BE    NF&SYSNDX          YES, KEYWORD NOT PRESENT             04100002
          CLI   0(1),MA&SYSNDX     IS IT A COMMA?                       04150002
          BE    AB&SYSNDX          YES,CHECK FOR KEYWORD AGAIN          04200002
          CLI   0(1),LK&SYSNDX     IS IT A BLANK?                       04250002
          BE    NF&SYSNDX          YES, GO SET BAD R.C.                 04300002
          B     CD&SYSNDX          NO, RETURN TO SEARCH                 04350002
FD&SYSNDX EQU   *                                                       04400002
          AR    1,14               ADD LENGTH TO KEYWORD PTR.           04450002
          LA    14,2(1)            SET PTR TO KEYWORD VALUE             04500002
SC&SYSNDX EQU   *                                                       04550002
          LA    1,1(1)             INCREMENT PTR TO = SIGN              04600002
          CR    1,0                IS END OF BUFFER REACHED?            04650002
          BE    LG&SYSNDX          YES,GO CALCULATE VALUE LENGTH        04700002
          CLI   0(1),MA&SYSNDX     NO, IS IT A COMMA?                   04750002
          BE    LG&SYSNDX          YES, CALCULATE VALUE LENGTH          04800002
          CLI   0(1),LK&SYSNDX     NO, IS IT A BLANK?                   04850002
          BE    LG&SYSNDX          YES, CALCULATE VALUE LENGTH          04900002
          B     SC&SYSNDX          NO RETURN TO SCAN                    04950002
LG&SYSNDX EQU   *                                                       05000002
          SR    1,14               SUBT. BEG. OF KEYWORD FROM END       05050002
          BC    12,NG&SYSNDX       IF < OR = ZERO, NOT FOUND            05100002
          SR    15,15              CLEAR RETURN CODE REG.               05150002
          B     OT&SYSNDX          LENGTH SET UP IN REG ZERO            05200002
NF&SYSNDX EQU   *                                                       05250002
          LA    15,8               SET NOT FOUND RETURN CODE            05300002
          B     OT&SYSNDX          RETURN TO END                        05350002
NG&SYSNDX EQU   *                                                       05400002
          LA    15,4               SET BAD LENGTH CODE                  05450002
          B     OT&SYSNDX          RETURN TO END                        05500002
CO&SYSNDX CLC   1(0,1),0(15)       INPUT KEYWORD = BUFFER WORD?         05550002
MA&SYSNDX EQU   C','               COMMA FOR COMPARES                   05600002
LK&SYSNDX EQU   C' '               BLANK FOR COMPARES                   05650002
OT&SYSNDX EQU   *                                                       05700002
          MEND                                                          05750002
./  ADD  SSI=30800470,NAME=IEECVMAP
         MACRO                                                          00050002
         IEECVMAP &REQUEST                                              00100002
*     02/14/72          LEVEL=01                                        00110002
.*                                                                      00150002
.*             MAPS USED FOR CRT AND STATUS DISPLAY SUPPORT             00200002
.*                                                                      00250002
.*                  &REQUEST                                            00300002
.*                  OPERAND        MAP GENERATED                        00350002
.*                                                                      00400002
.*                  KPARAM         ROUTED COMMAND PARAMETER LIST        00450002
.*                  RCT            ROUTING CONTROL TABLE                00500002
.*                                                                      00550002
         AIF   ('&REQUEST' EQ 'KPARAM').KPARAM                          00600002
         AIF   ('&REQUEST' EQ 'RCT').RCT                                00650002
         MNOTE *,'IMPROPER OPERAND, SPECIFY KPARAM OR RCT'              00700002
         MEXIT                                                          00750002
.KPARAM  ANOP                                                           00800002
*              ROUTED COMMAND PARAMETER LIST                            00850002
         SPACE                                                          00900002
KPARAM   DS    0F                                                       00950002
KMOD     DS    F         ADDRESS OF MODULE TO HANDLE COMMAND  MB Y02958 01050002
KOPN     DS    XL125     OPERAND FIELD OF COMMAND                       01100002
KFLGS    DS    X         FLAGS                                          01150002
KGM      EQU   X'80'     PARAMETER LIST WAS GETMAINED                   01200002
KSRVCD   EQU   X'40'     THIS COMMAND HAS BEEN SERVICED                 01250002
KK       EQU   X'08'     K COMMAND                                      01300002
KPT      EQU   X'04'     PT COMMAND                                     01350002
KAID     DS    C         TARGET AREA ID                                 01400002
KRES1    DS    X         RESERVED                                       01450002
* THE FOLLOWING WORD IS PRESENT ONLY IN GETMAINED PARAMETER LIST        01500002
KCHAIN   DS    A         POINTER TO NEXT K LIST FOR THIS CONSOLE        01550002
KPLLNGTH EQU   *-KPARAM  LENGTH OF A GETMAINED PARAMETER LIST           01600002
         MEXIT                                                          01650002
.RCT     ANOP                                                           01700002
*********************************************************************** 01750002
*                                                                     * 01800002
*   THE ROUTE COMMAND TABLE IS GOTTEN BY A GETMAIN AND EACH SECTION   * 01850002
*   IS MADE UP OF FIVE ENTRIES PLUS A POINTER TO THE THE NEXT SECTION.* 01900002
*   EACH ENTRY IS EIGHT BYTES LONG, THE FIRST BYTE IS A FLAG, THE NEXT* 01950002
*   TWO BYTES ARE THE OPERAND, THE NEXT TWO   BYTES ARE THE VERB, AND * 02000002
*   THE LAST TWO BYTES ARE THE CONSOLE ID IN BINARY PLUS THE AREA ID  * 02050002
*   IN EBCDIC. THE LAST BYTE IS UNUSED.                               * 02100002
*                                                                     * 02150002
*********************************************************************** 02200002
RCTBEG   EQU   *                   BEGINNING OF RCT SECTION             02250002
RCTCODE  DS    1C                  FLAGS INDICATING STATUS OF ENTRY     02300002
RCTCON   EQU   X'C0'               FLAG INDICATES END OF SECTION        02350002
RCTEND   EQU   X'80'               FLAG INDICATES LAST DEFINED ENTRY    02400002
RCTRES   EQU   X'02'               FLAG INDICATES NEXT ENTRY RESERVED   02450002
RCTACT   EQU   X'01'               FLAG INDICATES ENTRY IS DEFINED      02500002
RCTVER   DS    2C                  VERB FROM THE ROUTE COMMAND          02550002
RCTOPD   DS    2C                  OPERAND FROM THE ROUTE COMMAND       02600002
RCTCID   DS    1C                  CONSOLE ID FROM THE ROUTE COMMAND    02650002
RCTAID   DS    1C                  AREA ID FROM THE ROUTE COMMAND       02700002
RCTUNU   DS    1C                  UNUSED BYTE IN TABLE                 02750002
RCTLEN   EQU   8                   LENGHT OF ONE ENTRY IN THE RCT       02800002
RCTENT2  DS    8C                  SECOND ENTRY IN RCT                  02850002
RCTENT3  DS    8C                  THIRD ENTRY IN RCT                   02900002
RCTENT4  DS    8C                  FOURTH ENTRY IN RCT                  02950002
RCTENT5  DS    8C                  FIFTH ENTRY IN RCT                   03000002
RCTENT6  DS    8C                  CONTINUED OR ZERO IF LAST SECTION    03050002
RCTPTRN  EQU   RCTENT6             FIRST FULL WORD POINTER TO NEXT      03100002
*                                  SECTION OR ZERO IF THIS IS LAST      03150002
RCTTEND  EQU   *                   END OF ONE SECTION OF THE RCT        03200002
         MEND                                                           03250002
./  ADD  SSI=61730189,NAME=IEELCA
*/*******************************************************************/  00060002
*/*                                                                 */  00062002
*/*            LOG CONTROL TABLE  -  ( LCA )                        */  00064002
*/*                                                                 */  00066002
*/*      OS/VS2  RELEASE 3 , 4/7/76                                 */  00068003
*/*      CHANGE LEVEL = Y02669, @ZA05195, @ZA10123                   */ 00068203
*/*                                                                 */  00068802
*/*      METHOD OF ACCESS                                           */  00069202
*/*            THE LCA ADDRESS IS IN MASTER SCHEDULER RESIDENT DATA */  00069602
*/*            AREA - IEEBASEA , FIELD - BALOG .                    */  00069702
*/*      BAL -                                                      */  00069802
*/*            L    REGX,BALOG                                      */  00069902
*/*            USING  LCABASE,REGX                                  */  00079902
*/*      PLS -                                                      */  00089902
*/*            DCL  LCAPTR  PTR(31)  REGISTER(X)                    */  00093202
*/*            LCAPTR=BALOG                                         */  00093302
*/*                                                                 */  00093602
*/*******************************************************************/  00095202
*        %GOTO LCAPLS;   /*                                             00096702
         MACRO                                                          00100002
         IEELCA                                                         00150002
LCABASE  DSECT                                                          00200002
LCAQHEAD DS    0D                                                       00250002
LCAELCNT DS    F                  NUMBER OF ELEMENTS ON WTL QUEUE       00300002
LCAELPTR DS    0F                                                       00350002
LCAPTSW  DS    B                  FLAG FIELD                            00400002
LCAPOST  EQU   X'80'              HI-BIT POSTING SWITCH TO PUT RTN      00450002
LCAELEAD DS    AL3                QUEUE ELEMENT ADDRESS                 00500002
LCACPID  DS    F                  POOL ID FROM BLDCPOOL MACRO           00550002
LCALIMCT DS    F                  NUMBER OF WTLS PROCESSED              00600002
LCAASCB  DS    A                  PTR TO LOG ASCB                       00700002
LCACBONE DS    A                  CURRENT ACB PTR                       00750002
LCACBTWO DS    A                  PREVIOUS ACB PTR                      00800002
LCAELST  DS    0A                 LOG ECB LIST                          01460002
LCLOZPTR DS    A                  PTR TO TERMINATION ECB                01470002
LWLOGPTR DS    A                  PTR TO TASK SWITCH ECB                01480002
LWTRPTR  DS    0A                 PTR TO PUT RTN ECB                    01490002
LWTRBITS DS    B                                                        01492002
LECBEND  EQU   X'80'              END OF LIST INDICATOR                 01494002
         DS    AL3                PUT RTN ECB ADDRESS                   01496002
LCAPOSTT DS    B                                                        01602002
POSTCLOZ EQU   X'80'              TERMINATION IN PROCESS SWITCH         01610003
POSTWLOG EQU   X'40'              WRITELOG IN PROCESS SWITCH            01620003
LCASTAE  DS    FL1                ESTAE RECURSION SWITCH                01630002
LCADDONE DS    CL8                CURRENT LOG DDNAME                    01640002
LCADDTWO DS    CL8                PREVIOUS LOG DDNAME                   01642002
LCACLPTR DS    0CL2                                                     01644002
         DS    FL1                RESERVED                              01646002
LCCLASS  DS    FL1                VALUE OF WRITELOG CLASS PARM          01648002
LCARPLP  DS    A                  RPL PTR                      @ZA05195 01648103
LCASSIBP DS    A                  SSIB PTR                     @ZA05195 01650103
LCASSOBP DS    A                  SSOB PTR                     @ZA05195 01652103
LCASSOBR DS    A                  SSOBR PTR                    @ZA05195 01654103
LCACOREF DS    B                  GOTTEN RESOURCE FLAGS        @ZA05195 01656103
LCAFLG   EQU   X'80'              LCA GETMAIN FLAG             @ZA05195 01658103
LCAPOOLF EQU   X'40'              BLDCPOOL FLAG                @ZA05195 01660103
LCASSIBF EQU   X'20'              SSIB GETMAIN FLAG            @ZA05195 01662103
LCAJSCBF EQU   X'10'              GETJSCB MACRO FLAG           @ZA05195 01664103
LCASUBSF EQU   X'08'              SUBSYSTEM INTERFACE FLAG     @ZA05195 01666103
LCAACBF  EQU   X'04'              ACB GETMAIN FLAG             @ZA05195 01668103
WTLLMPTR DS    0CL2                                                     01680403
         DS    FL1                RESERVED                              01684403
WTLPLIM  DS    FL1                QUEUE LIMIT FOR POST OF PUT RTN       01688403
LCAX     DS    FL1                RESERVED                     @ZA10123 01690403
         MEND  ,    */                                                  01692403
*%LCAPLS:  ;                                                            01700002
*DECLARE                                                                01750002
*  1 LCABASE       BASED(LCAPTR) BDY(DWORD),                            01800002
*   2 LCAQHEAD,                                                         01850002
*    3 LCAELCNT  FIXED(31)BDY(WORD), /* NUMBER OF ELEMENTS ON WTL       01900002
*                                     QUEUE                         */  01910002
*    3 LCAELPTR,                                                        01950002
*     4 LCAPTSW    PTR(8),        /* FLAG FIELD                     */  02000002
*      5 LCAPOST   BIT(1),        /* HI-BIT POSTING SWITCH TO PUT       02050002
*                                    ROUTINE                        */  02100002
*      5 *         BIT(7),        /* RESERVED                       */  02150002
*     4 LCAELEAD   PTR(24),       /* QUEUE ELEMENT ADDRESS          */  02200002
*   2 LCACPID      FIXED(31),     /* POOL ID FROM BLDCPOOL MACRO    */  02250002
*   2 LCALIMCT FIXED(31)BDY(WORD), /* NUMBER OF WTLS PROCESSED      */  02300002
*   2 LCAASCB      PTR(31),       /* PTR TO LOG ASCB                */  02400002
*   2 LCACBONE     PTR(31),       /* CURRENT ACB PTR                */  02610002
*   2 LCACBTWO     PTR(31),       /* PREVIOUS ACB PTR               */  02620002
*   2 LCAELST,                                                          03410002
*    3 LCLOZPTR    PTR(31),       /* PTR TO TERMINATION ECB         */  03420002
*    3 LWLOGPTR    PTR(31),       /* PTR TO TASK SWITCH ECB         */  03430002
*    3 LWTRPTR     PTR(31),       /* PTR TO PUT RTN ECB             */  03440002
*     4 LWTRBITS   PTR(8),        /* HI-BYTE OF PTR                 */  03440402
*      5 LECBEND   BIT(1),        /* END OF LIST INDICATOR          */  03440802
*      5 *         BIT(7),        /* RESERVED                       */  03441202
*     4 *          PTR(24),       /* PUT ECB ADDRESS                */  03441602
*   2 LCAPOSTT,                                                         03450002
*    3 POSTCLOZ    BIT(1) ABNL,   /* CLOSE ECB POSTED BIT           */  03500002
*    3 POSTWLOG    BIT(1) ABNL,   /* DATA SET SWITCH ECB POSTED BIT */  03550002
*    3 *           BIT(6),        /* RESERVED                       */  03600002
*   2 LCASTAE       PTR(8),       /* STAE RECURSION FIELD           */  03650002
*   2 LCADDONE     CHAR(8),       /* CURRENT LOG DDNAME             */  03700002
*   2 LCADDTWO     CHAR(8),       /* PREVIOUS LOG DDNAME            */  03750002
*   2 LCACLPTR ,                                                        03800002
*    3 *           CHAR(1),       /* RESERVED                       */  03850002
*    3 LCCLASS     CHAR(1),       /* VALUE OF WRITELOG CLASS PARM   */  03900002
*   2 LCARPLP PTR(31),  /* RPL PTR                           @ZA05195*/ 03903003
*   2 LCASSIBP PTR(31), /* SSOB PTR                          @ZA05195*/ 03906003
*   2 LCASSOBP PTR(31), /* SSOB PTR                          @ZA05195*/ 03909003
*   2 LCASSOBR PTR(31), /* SSOBR PTR                         @ZA05195*/ 03912003
*   2 LCACOREF BIT(8),                                     /*@ZA05195*/ 03915003
*    3 LCAFLG BIT(1),   /* LCA GETMAIN FLAG                  @ZA05195*/ 03918003
*    3 LCAPOOLF BIT(1), /* BLDCPOOL FLAG                     @ZA05195*/ 03921003
*    3 LCASSIBF BIT(1), /* SSIB GETMAIN FLAG                 @ZA05195*/ 03924003
*    3 LCAJSCBF BIT(1), /* GETJSCB MACRO ISSUED              @ZA05195*/ 03927003
*    3 LCASUBSF BIT(1), /* SUBSYSTEM INTERFACE FLAG          @ZA05195*/ 03930003
*    3 LCAACBF BIT(1),  /* ACB GETMAIN FLAG                  @ZA05195*/ 03933003
*    3 * BIT(2), /* RESERVED BITS                            @ZA05195*/ 03936003
*   2 WTLLMPTR ,                                                        03950002
*    3 *           CHAR(1),       /* RESERVED                       */  04000002
*    3 WTLPLIM     CHAR(1),       /* QUEUE LIMIT FOR POST OF PUT    */  04050003
*   2 LCAX         CHAR(1);       /* RESERVED                @ZA10123*/ 04100003
./  ADD  SSI=30801099,NAME=IEERDCM
*        %GOTO DCMRBSL;                                              /* 00050002
         MACRO                                                          00100002
         IEERDCM                                                        00150002
*     01/15/73          LEVEL=05                              MB Y02958 00160002
DCMTSRT  DSECT DCMTSPTR                                                 00200002
DCMADTRN DS    A                   POINTER TO PAGABLE DCM               00250002
         DS    CL1                 RESERVED                             00300002
DCMRFLGS DS    BL1                 FLAGS                                00350002
DCMDOM   EQU   X'10'               DOM MUST BE TRIED                    00550002
DCMNIPP  EQU   X'08'               DCM WAS USED BY NIP                  00600002
DCMLEN   DS    H                   LENGTH OF PAGABLE DCM                00750002
DCMADKP  DS    A                   ADDRESS OF ROUTED K COMMAND          00800002
*                                   PARAMETER LIST                      00850002
DCMTOPAR DS    CL1                 TOP DISPLAY AREA DEFINED             00900002
DCMTOPDS DS    CL1                 TOP DISPLAY ON SCREEN                00950002
         DS    BL1                 RESERVED                             01000002
DCMDEVTY DS    BL1                 DEVICE TYPE FLAGS                    01150002
DCMTY60  EQU   X'80'               USABLE FOR SD                        01200002
DCMTY50  EQU   X'40'               NOT USABLE FOR SD                    01250002
DCMADSDS DS    A                   POINTER TO FIRST SDS SUPPORT AREA    01300002
DCMRMS   DS    CL1                 NUMBER OF CCWS TO WRITE              01350002
DCMADRMS DS    AL3                 POINTER TO RMS CCWS                  01400002
DCMWLAST DS    A                   PT CON Q ENTRY LAST OUT (O-O-L)      01450002
DCMRMSAL DS    H                   NUMBER LINES IN MSG AREA             01500002
DCMDOMKY DS    H                   CONSOLE DOM ELEMENT        MC XM5812 01550002
DCMSUBAD DS    A                   POINTER TO SUB CONTROL BLOCK         01600002
DCMADPFK DS    A                   POINTER TO RESIDENT PFK AREA         01650002
DCMINTVL DS    H                   INTERVAL FOR THIS DCM                01700002
DCMTMCTR DS    H                   TIME COUNTER FOR THIS DCM            01750002
DCMR2FLG DS    BL1                 TIMER FLAGS                          01800002
DCMRXSFL EQU   X'80'               FULL SCREEN FLAG                     01850002
DCMRXUNV EQU   X'40'               UNVIEWABLE MESSAGE DISPLAYED         01900002
DCMRXTMR EQU   X'20'               TIMER FLAG                           01950002
DCMRXRLL EQU   X'10'               READY TO ROLL                        02000002
DCMRXDEL EQU   X'08'               PENDING DELETE REQUEST               02050002
DCMRXTIM EQU   X'02'               TIMER ELAPSED FOR THIS DISPLAY       02100002
DCMR3FLG DS    BL1                 MISC FLAGS                           02200002
DCMSTSWT EQU   X'80'               CHANGING STATUS OF OUTPUT ONLY CON   02250002
DCMKVIP  EQU   X'40'               ENTRY FOR K VARY COMMAND             02300002
DCMCLPR  EQU   X'20'               CLOSE IN PROCESS                     02350002
DCMRXSCN EQU   X'10'               ASY ERROR MESSAGE ON SCREEN          02400002
DCMR3PKA EQU   X'08'               DA I/O COMPLETE                      02410002
DCMRXHMT EQU   X'04'               FULL SCREEN SIMULATED      MC YM4102 02420002
         DS    H                   RESERVED                             02450002
DCMRQDEL DS    A                   DELETE REQUEST BUFFER                02460002
         DS    A                   DELETE REQUEST BUFFER                02470002
DCMMSGSV DS    A                   POINTER TO SAVED NIP MESSAGES        02480002
DCMPACB  EQU   *                   SACB PREFIX                          02482002
DCMPLN   DS    FL2                 SYSGEN LENGTH OF AREA                02490002
DCMPLNPR DS    H                   LENGTH OF SACB PREFIX-IN BYTES       02492002
DCMPRSZ  EQU   *-DCMPACB           SIZE OF PREFIX                       02492402
DCMACB   EQU   *                   SACB                                 02492802
DCMACBNX DS    A                   POINTER TO NEXT SACB                 02494002
DCMAID   DS    CL1                 AREA ID                              02496002
DCMASACB DS    BL1                 SACB FLAGS                           02498002
DCMAUSE  EQU   X'80'               AREA PRESENTLY DEFINED     MB Y02958 02498402
*    IF DCMAUSE IS OFF, A SYSGEND AREA HAS BEEN FREED E.G. K A,NONE     02498502
DCMAGM   EQU   X'40'               GETMAINED SACB                       02498802
DCMALN   DS    FL2                 LENGTH OF AREA                       02499202
DCMATOP  DS    FL1                 TOP ROW OF AREA                      02499602
DCMACLR  EQU   *                   REINITIALIZED PORTION      MB Y02958 02503002
DCMAROW  DS    FL1                 ROW TO BE WRITTEN NEXT               02506402
DCMAFR   DS    H                   FRAME ON SCREEN                      02509802
DCMAMJWQ DS    A                   POINTER TO CON Q ENTRY FOR MAJOR     02513202
DCMAMIN  DS    A                   POINTER TO MINOR WQE                 02516602
DCMATIME DS    F                   TIME CONTROL LINE WAS WRITTEN        02526602
DCMAMT   DS    XL2                 RESERVED                   MB Y02958 02528602
DCMAFLG1 DS    XL1                 AREA FLAGS1                          02532602
DCMADISP EQU   X'40'               DISPLAY IN AREA                      02533002
DCMADEND EQU   X'20'               END OF DISPLAY ON SCREEN             02533102
DCMAFRPR EQU   X'10'               FRAMING IN PROGRESS                  02533202
DCMAFULL EQU   X'08'               FRAME FULL                           02538802
DCMABL   EQU   X'04'               BLANKING TO BE DONE                  02540802
DCMAFLG2 DS    XL1                 AREA FLAGS 2                         02542802
DCMALMIN EQU   X'80'               SAVED POINTER TO LAST MINOR OUTPUT   02543202
DCMAWCON EQU   X'40'               WRITE CONTROL LINE                   02543602
DCMARCON EQU   X'20'               REWRITE CONTROL LINE                 02544002
DCMAMJFR EQU   X'10'               MAJOR WQE HAS BEEN FOUND             02544102
DCMADFLG DS    XL1                 DYNAMIC DISPLAY FLAGS      MB Y02958 02544202
DCMADD   EQU   X'80'               TRACK IN AREA              MB Y02958 02544302
DCMAHOLD EQU   X'40'               TRACK IN HOLD MODE         MB Y02958 02558202
DCMACSIB EQU   X'20'               TRACK WITH CONTINUATION LINE IN     *02568202
                                   SCREEN IMAGE BUFFER        MB Y02958 02568602
DCMATRCK DS    X                   TRACK REQUEST INDICATORS   MB Y02958 02569002
DCMATJOB EQU   X'80'               TRACK JOBS                 MB Y02958 02569402
DCMATJBL EQU   X'40'               TRACK JOBS,LIST            MB Y02958 02569802
DCMATTS  EQU   X'08'               TRACK TS                   MB Y02958 02569902
DCMATTSL EQU   X'04'               TRACK TS,LIST              MB Y02958 02570002
DCMATA   EQU   X'88'               TRACK A                    MB Y02958 02570102
DCMATAL  EQU   X'44'               TRACK A,LIST               MB Y02958 02572702
DCMAUTME DS    XL2                 UTME=NNN VALUE             MB Y02958 02575702
DCMATECB DS    F                   TRACK CANCEL ECB ADDRESS   MB Y02958 02577702
DCMAPAD  DS    F                   RESERVED                   MB Y02958 02578102
DCMACBND EQU   *                   SACB END                             02578302
DCMCLRLN EQU   *-DCMACLR           LENGTH FOR REINITIALIZING  MB Y02958 02580302
DCMACBSZ EQU   *-DCMACB            SACB SIZE                            02580902
DCMREND  DS    0C                  END OF DCM                           02583502
         MEND  , */                                                     02586102
*%DCMRBSL  :  ;                                                         02600002
*/*   01/15/73          LEVEL=05                                     */ 02610002
*DECLARE                                                                02650002
*  1 DCMTSRT  BASED(DCMTSPTR),                                          02700002
*   2 DCMADTRN    PTR(31),               /* POINTER TO PAGABLE DCM   */ 02750002
*   2 *           CHAR(1),               /* RESERVED                 */ 02850002
*   2 DCMRFLGS    CHAR(1),               /* FLAGS                    */ 02950002
*    3 *        BIT(1),                  /* UNUSED                   */ 03000002
*    3 *        BIT(1),                  /* UNUSED                   */ 03050002
*    3 *        BIT(1),                  /* UNUSED                   */ 03100002
*    3 DCMDOM   BIT(1),                  /* DOM MUST BE TRIED        */ 03150002
*    3 DCMNIPP  BIT(1),                  /* DCM WAS USED BY NIP      */ 03200002
*    3 *        BIT(1),                  /* UNUSED                   */ 03250002
*    3 *        BIT(1),                  /* UNUSED                   */ 03300002
*    3 *        BIT(1),                  /* UNUSED                   */ 03350002
*   2 DCMLEN      FIXED(15),             /* LENGTH OF PAGABLE DCM    */ 03400002
*   2 DCMADKP     PTR(31),               /* ADDRESS OF ROUTED K         03450002
*                                           COMMAND  PARAMETER LIST  */ 03500002
*   2 DCMTOPAR    CHAR(1),               /* TOP DISPLAY AREA DEFINED */ 03550002
*   2 DCMTOPDS    CHAR(1),               /* TOP DISPLAY ON SCREEN    */ 03600002
*   2 *           CHAR(1),               /* RESERVED                 */ 03650002
*    3 *        BIT(1),                  /* UNUSED                   */ 03750002
*    3 *        BIT(1),                  /* UNUSED                   */ 03850002
*    3 *        BIT(1),                  /* UNUSED                   */ 03950002
*    3 *        BIT(1),                  /* UNUSED                   */ 04000002
*    3 *        BIT(1),                  /* UNUSED                   */ 04050002
*    3 *        BIT(1),                  /* UNUSED                   */ 04100002
*    3 *        BIT(1),                  /* UNUSED                   */ 04150002
*    3 *        BIT(1),                  /* UNUSED                   */ 04200002
*   2 DCMDEVTY    CHAR(1),               /* DEVICE TYPE FLAGS        */ 04250002
*    3 DCMTY60  BIT(1),                  /* USABLE FOR SD            */ 04300002
*    3 DCMTY50  BIT(1),                  /* UNUSABLE FOR SD          */ 04350002
*    3 *        BIT(1),                  /* UNUSED                   */ 04400002
*    3 *        BIT(1),                  /* UNUSED                   */ 04450002
*    3 *        BIT(1),                  /* UNUSED                   */ 04500002
*    3 *        BIT(1),                  /* UNUSED                   */ 04550002
*    3 *        BIT(1),                  /* UNUSED                   */ 04600002
*    3 *        BIT(1),                  /* UNUSED                   */ 04650002
*   2 DCMADSDS    PTR(31),               /* POINTER TO FIRST SDS        04700002
*                                           SUPPORT AREA             */ 04750002
*   2 DCMRMS      CHAR(1),               /* NUMBER OF CCWS TO WRITE  */ 04800002
*   2 DCMADRMS    PTR(24)  BDY(BYTE),    /* POINTER TO RMS CCWS      */ 04850002
*   2 DCMWLAST    PTR(31),               /* PT CON Q ENTRY LAST OUT     04900002
*                                           (O-O-L)                  */ 04950002
*   2 DCMRMSAL    FIXED(15),             /* NUMBER LINES IN MSG AREA */ 05000002
*   2 DCMDOMKY    FIXED(15),             /* CONSOLE DOM ELEMENT      */ 05050002
*   2 DCMSUBAD    PTR(31),               /* POINTER TO SUB CONTROL      05100002
*                                           BLOCK                    */ 05150002
*   2 DCMADPFK    PTR(31),               /* POINTER TO RESIDENT PFK     05200002
*                                           AREA                     */ 05250002
*   2 DCMINTVL    FIXED(15),             /* INTERVAL FOR THIS DCM    */ 05300002
*   2 DCMTMCTR    FIXED(15),             /* TIME COUNTER FOR THIS       05350002
*                                           DCM                      */ 05400002
*   2 DCMR2FLG    CHAR(1),               /* TIMER FLAGS              */ 05450002
*    3 DCMRXSFL BIT(1),                  /* FULL SCREEN FLAG         */ 05500002
*    3 DCMRXUNV BIT(1),                  /* UNVIEWABLE MESSAGE          05550002
*                                           DISPLAYED                */ 05600002
*    3 DCMRXTMR BIT(1),                  /* TIMER FLAG               */ 05650002
*    3 DCMRXRLL BIT(1),                  /* READY TO ROLL            */ 05700002
*    3 DCMRXDEL BIT(1),                  /* PENDING DELETE REQUEST   */ 05750002
*    3 *        BIT(1),                  /* UNUSED                   */ 05800002
*    3 DCMRXTIM BIT(1),                  /* TIMER ELAPSED FOR THIS      05850002
*                                           DISPLAY                  */ 05900002
*    3 *        BIT(1),                  /* UNUSED                   */ 05950002
*   2 DCMR3FLG    CHAR(1),               /* MISC FLAGS               */ 06000002
*    3 DCMSTSWT BIT(1),                  /* CHANGING STATUS OF          06050002
*                                           OUTPUT ONLY CON          */ 06100002
*    3 DCMKVIP  BIT(1),                  /* ENTRY FOR K VARY COMMAND */ 06150002
*    3 DCMCLPR  BIT(1),                  /* CLOSE IN PROCESS         */ 06200002
*    3 DCMRXSCN BIT(1),                  /* ASY ERROR MESSAGE ON        06250002
*                                           SCREEN                   */ 06300002
*    3 DCMR3PKA BIT(1),                  /* DCM I/O COMPLETE         */ 06350002
*    3 DCMRXHMT BIT(1),                  /* FULL SCREEN SIMULATED    */ 06400002
*    3 *        BIT(1),                  /* UNUSED                   */ 06450002
*    3 *        BIT(1),                  /* UNUSED                   */ 06500002
*   2 *           FIXED(15),             /* RESERVED                 */ 06550002
*   2 DCMRQDEL    PTR(31),               /* DELETE REQUEST BUFFER    */ 06560002
*   2 *           PTR(31),               /* DELETE REQUEST BUFFER    */ 06570002
*   2 DCMMSGSV    PTR(31),               /* POINTER TO NIPS MSGS.    */ 06580002
*   2 DCMPACB              ,             /* SACB PREFIX              */ 06582002
*    3 DCMPLN     FIXED(15),             /* SYSGEN LEN OF AREA.      */ 06590002
*    3 DCMPLNPR   FIXED(15);             /* PREFIX LENGTH OF AREA.   */ 06592002
* DECLARE                                /* SCREEN AREA CNTRL BLOCK  */ 06592102
*  1 DCMACB  BASED(SACBPTR),             /* SACB                     */ 06592402
*   2 DCMACBNX   PTR(31),                /* POINTER TO NEXT SACB.    */ 06594002
*   2 DCMAID     CHAR(1),                /* AREA I.D.                */ 06596002
*   2 DCMASACB   CHAR(1),                /* SACB FLAGS.              */ 06598002
*    3 DCMAUSE BIT(1),                   /* AREA PRESENTLY DEFINED   */ 06598402
*    3 DCMAGM  BIT(1),                   /* GETMAINED SACB.          */ 06598802
*   2 DCMALN     FIXED(15),              /* LENGTH OF AREA.          */ 06599202
*   2 DCMATOP    CHAR(1),                /* TOP ROW OF AREA.         */ 06599602
*   2 DCMACLR    BDY(WORD,2),            /* REINITIALIZED PORTION.   */ 06603002
*    3 DCMAROW    CHAR(1),               /* ROW FOR NEXT WRITE.      */ 06606402
*    3 DCMAFR     FIXED(15),             /* FRAME ON SCREEN.         */ 06609802
*    3 DCMAMJWQ   PTR(31),               /* PTR MAJOR CON Q ENTRY    */ 06613202
*    3 DCMAMIN    PTR(31),               /* PTR TO MINOR WQE.        */ 06616602
*    3 DCMATIME   FIXED(31),             /* TIME CONTROL LINE WRITN. */ 06626602
*    3 DCMAMT     CHAR(2),               /* RESERVED                 */ 06628602
*    3 DCMAFLG1   CHAR(1),               /* AREA FLAGS.              */ 06643602
*     4 *        BIT(1),                 /* RESERVED.                */ 06644002
*     4 DCMADISP BIT(1),                 /* DISPLAY IN AREA          */ 06653302
*     4 DCMADEND BIT(1),                 /* END OF DISP. ON SCREEN   */ 06655302
*     4 DCMAFRPR BIT(1),                 /* FRAMING IN PROGRESS      */ 06657302
*     4 DCMAFULL BIT(1),                 /* FRAME FULL               */ 06659302
*     4 DCMABL   BIT(1),                 /* BLANKING TO BE DONE      */ 06661302
*     4 *        BIT(1),                 /* RESERVED.                */ 06662802
*     4 *        BIT(1),                 /* RESERVED.                */ 06672102
*    3 DCMAFLG2   CHAR(1),               /* AREA FLAGS 2.            */ 06674102
*     4 DCMALMIN BIT(1),                 /* PTR TO LAST MINOR OUTPT. */ 06674502
*     4 DCMAWCON BIT(1),                 /* WRITE CONTROL LINE       */ 06674902
*     4 DCMARCON BIT(1),                 /* REWRITE CONTROL LINE     */ 06675302
*     4 DCMAMJFR BIT(1),                 /* MAJOR WQE HAS BEEN FOUND */ 06675702
*     4 *        BIT(1),                 /* RESERVED.                */ 06676102
*     4 *        BIT(1),                 /* RESERVED.                */ 06678102
*     4 *        BIT(1),                 /* RESERVED.                */ 06680102
*     4 *        BIT(1),                 /* RESERVED.                */ 06680502
*    3 DCMATFLG     CHAR(4) BDY(WORD),   /* FLAGS AND UTME VALUE     */ 06680602
*     4 DCMADFLG    CHAR(1),             /* DYNAMIC DISPLAY FLAGS    */ 06680902
*      5 DCMADD   BIT(1),                /* TRACK IN AREA            */ 06681302
*      5 DCMAHOLD BIT(1),                /* TRACK IN HOLD MODE       */ 06731302
*      5 DCMACSIB BIT(1),                /* TRACK WITH CONT LINE     */ 06741302
*      5 *        BIT(1),                /* RESERVED.                */ 06751302
*      5 *        BIT(1),                /* RESERVED.                */ 06761302
*      5 *        BIT(1),                /* RESERVED.                */ 06771302
*      5 *        BIT(1),                /* RESERVED.                */ 06773302
*      5 *        BIT(1),                /* RESERVED.                */ 06775302
*     4 DCMATRCK    CHAR(1),             /* TRACK REQUEST INDICATORS */ 06777702
*      5 DCMATJOB    BIT(1),             /* TRACK JOBS               */ 06778102
*      5 DCMATJBL    BIT(1),             /* TRACK JOBS,LIST          */ 06778502
*      5 *           BIT(1),             /* RESERVED                 */ 06778602
*      5 *           BIT(1),             /* RESERVED                 */ 06778702
*      5 DCMATTS     BIT(1),             /* TRACK TS                 */ 06778902
*      5 DCMATTSL    BIT(1),             /* TRACK TS,LIST            */ 06779002
*      5 *           BIT(1),             /* RESERVED                 */ 06779102
*      5 *           BIT(1),             /* RESERVED                 */ 06779202
*                        /* TO REFERENCE AND CHANGE THE ABOVE BITS   */ 06779602
*                        /* REFERENCE: IF DCMATJBL='1'B THEN ...     */ 06779702
*                        /* CHANGE: DCMATJBL='1'B                    */ 06779802
*%DCL DCMATA CHAR;       /* MASK FOR TRACK A                         */ 06779902
*%DCMATA='''88''X';      /* REFERENCE: IF DCMATRCK=DCMATA THEN ...   */ 06780002
*                        /* CHANGE: DCMATRCK=DCMATA                  */ 06780102
*%DCL DCMATAL CHAR;      /* MASK FOR TRACK A,LIST                    */ 06780202
*%DCMATAL='''44''X';     /* REFERENCE AND CHANGE AS FOR DCMATA       */ 06780302
*     4 DCMAUTME    FIXED(15),           /* UTME=NNN VALUE           */ 06781102
*    3 DCMATECB    PTR(31),              /* TRACK CANCEL ECB ADDRESS */ 06781302
*    3 DCMAPAD     FIXED(31),            /* RESERVED                 */ 06787802
*   2 DCMACBND    BDY(BYTE);             /* SACB END                 */ 06796902
* %DCMCLRLN='LENGTH(DCMACLR)';                                          06798902
* %DCMPRSZ='LENGTH(DCMPACB)';                                           06805502
* %DCMACBSZ='LENGTH(DCMACB)';                                           06814102
*DECLARE DCMREND (*) CHAR(1)   BASED                                    06822702
*  (ADDR(DCMTSRT )+LENGTH(DCMTSRT ));                                   06831302
*                                        /* END OF DCM               */ 06881302
./  ADD  SSI=23422254,NAME=IEESDT
         MACRO                                                          01000014
         IEESDT                                                         02000014
         SPACE                                                          03000014
.*  START DESCRIPTOR TABLE                                              04000014
.*                                                                      05000014
.*                                                                      06000014
.*                                                                      07000014
.*  THIS MACRO PROVIDES A MAPPING OF THE START DESCRIPTOR TABLE WHICH   08000014
.*  IS USED IN PROCESSING START AND MOUNT COMMANDS. THE TABLE CONTAINS  09000014
.*  JOB CONTROL LANGUAGE BUILT FROM THE PARAMETERS SPECIFIED ON THE     10000014
.*  COMMAND AND FOUND IN THE COMMAND SCHEDULING CONTROL BLOCK (CSCB).   11000014
.*  THIS JCL HAS BEEN SYNTAX CHECKED AND WILL BE MOVED TO THE JOB       12000014
.*  CONTROL LANGUAGE SET BY IEEVJCL IN THE L-SHAPED PROGRAM AND         13000014
.*  PASSED TO THE INTERPRETER FOR FURTHER CHECKING. THE SIZE OF THIS    14000014
.*  TABLE IS VARIABLE DEPENDING ON THE LENGTH OF THE COMMAND RECEIVED.  15000014
.*                                                                      16000014
.*                                                                      17000014
         SPACE                                                          18000014
*********************************************************************** 19000014
*                                                                     * 20000014
*                       START DESCRIPTOR TABLE                        * 21000014
*                                                                     * 22000014
*********************************************************************** 23000014
         SPACE                                                          24000014
*  FURTHER DOCUMENTATION OF THIS CONTROL BLOCK CAN BE OBTAINED BY       25000014
*  LISTING THE MACRO SINCE MANY OF THE COMMENTS ARE PRECEEDED BY .*,    26000014
*  WHICH DO NOT APPEAR DURING ASSEMBLY.                                 27000014
         SPACE 4                                                        28000014
SDTSDT   DS    0D                                                       29000014
SDTSIZE  DS    1H       SIZE OF START DESCRIPTOR TABLE.                 30000014
         SPACE                                                          31000014
SDTJCLS1 DS    1C       IDENTIFIER FLAGS FOR IN-CORE JCL.               32000014
SDTJOB1  EQU   128      BIT 0 - JOB STATEMENT.                          33000014
SDTEXEC1 EQU   64       BIT 1 - EXEC STATEMENT.                         34000014
SDTDD1   EQU   32       BIT 2 - DD STATEMENT.                           35000014
SDTCONT1 EQU   16       BIT 3 - DD STATEMENT CONTINUATION               36000014
SDTJCLL1 DS    1C                 RESERVED                              37000014
SDTJCL1  DS    72C      JCL STATEMENT.                                  38000014
         SPACE                                                          39000014
SDTJCLS2 DS    1C       IDENTIFIER FLAGS FOR IN-CORE JCL.               40000014
SDTJOB2  EQU   128      BIT 0 - JOB STATEMENT.                          41000014
SDTEXEC2 EQU   64       BIT 1 - EXEC STATEMENT.                         42000014
SDTDD2   EQU   32       BIT 2 - DD STATEMENT.                           43000014
SDTCONT2 EQU   16       BIT 3 - DD STATEMENT CONTINUATION               44000014
SDTJCLL2 DS    1C                 RESERVED                              45000014
SDTJCL2  DS    72C      JCL STATEMENT.                                  46000014
         SPACE                                                          47000014
SDTJCLS3 DS    1C       IDENTIFIER FLAGS FOR IN-CORE JCL.               48000014
SDTJOB3  EQU   128      BIT 0 - JOB STATEMENT.                          49000014
SDTEXEC3 EQU   64       BIT 1 - EXEC STATEMENT.                         50000014
SDTDD3   EQU   32       BIT 2 - DD STATEMENT.                           51000014
SDTCONT3 EQU   16       BIT 3 - DD STATEMENT CONTINUATION               52000014
SDTJCLL3 DS    1C                 RESERVED                              53000014
SDTJCL3  DS    72C      JCL STATEMENT.                                  54000014
         SPACE                                                          55000014
SDTJCLS4 DS    1C       IDENTIFIER FLAGS FOR IN-CORE JCL.               56000014
SDTJOB4  EQU   128      BIT 0 - JOB STATEMENT.                          57000014
SDTEXEC4 EQU   64       BIT 1 - EXEC STATEMENT.                         58000014
SDTDD4   EQU   32       BIT 2 - DD STATEMENT.                           59000014
SDTCONT4 EQU   16       BIT 3 - DD STATEMENT CONTINUATION               60000014
SDTJCLL4 DS    1C                 RESERVED                              61000014
SDTJCL4  DS    72C      JCL STATEMENT.                                  62000014
         SPACE                                                          63000014
SDTJCLS5 DS    1C       IDENTIFIER FLAGS FOR IN-CORE JCL.               64000014
SDTJOB5  EQU   128      BIT 0 - JOB STATEMENT.                          65000014
SDTEXEC5 EQU   64       BIT 1 - EXEC STATEMENT.                         66000014
SDTDD5   EQU   32       BIT 2 - DD STATEMENT.                           67000014
SDTCONT5 EQU   16       BIT 3 - DD STATEMENT CONTINUATION               68000014
SDTJCLL5 DS    1C                 RESERVED                              69000014
SDTJCL5  DS    72C      JCL STATEMENT.                                  70000014
         SPACE                                                          71000014
SDTJCLS6 DS    1C       IDENTIFIER FLAGS FOR IN-CORE JCL.               72000014
SDTJOB6  EQU   128      BIT 0 - JOB STATEMENT.                          73000014
SDTEXEC6 EQU   64       BIT 1 - EXEC STATEMENT.                         74000014
SDTDD6   EQU   32       BIT 2 - DD STATEMENT.                           75000014
SDTCONT6 EQU   16       BIT 3 - DD STATEMENT CONTINUATION               76000014
SDTJCLL6 DS    1C                 RESERVED                              77000014
SDTJCL6  DS    72C      JCL STATEMENT.                                  78000014
         SPACE                                                          79000014
SDTJCLS7 DS    1C   IDENTIFIER FLAGS FOR IN-CORE JCL            OCIP39A 79050018
SDTJOB   EQU   128  BIT 0 - JOB STATEMENT.                      OCIP39A 79100018
SDTEXEC  EQU   64   BIT 1 - EXEC STMT.                          OCIP39A 79150018
SDTDD    EQU   32   BIT 2 - DD STMT.                            OCIP39A 79200018
SDTCONT  EQU   16   BIT 3 - DD STMT. CONTINUATION               OCIP39A 79250018
SDTEXCON EQU   8    BIT 4 - EXEC STMT. CONTINUATION             OCIP39A 79300018
SDTJCLL7 DS    1C   RESERVED                                    OCIP39A 79350018
SDTJCL7  DS    72C  JCL STATEMENT                               OCIP39A 79400018
         SPACE                                                          79450018
** * * * * * WORK AREA FOR IEEVSTAR KEYWORD SCANNING* * * *     OCIP39A 79500018
SDTEXPT  DS    F  PT.TO NEXT SLOT WITHIN CURRENT SDT EXEC       OCIP39A 79550018
*                   STMT.-USED FOR KEYWORD SCAN                 OCIP39A 79600018
SDTDDPT  DS    F    PT. TO NEXT SLOT WITHIN CURRENT SDT DD      OCIP39A 79650018
*                     STMT.-USED FOR KEYWORD SCAN               OCIP39A 79700018
SDTPAREN DS    F     PT. TO MAJOR KEYWORD(IN START BUFFER)      OCIP39A 79750018
*                     THAT FOLLOWS A MAJOR DD KEYWORD           OCIP39A 79800018
*                      ENCLOSED IN PARENTHESES                  OCIP39A 79850018
*                       =0 IF VALUE NOT ENCLOSED IN PARENS.     OCIP39A 79900018
SDTWORK  DS    F                  SDT WORK SPACE                 Y02669 79910002
         SPACE                                                          79950018
SDTEND   EQU   *                                                        80000014
SDTLN    EQU   SDTEND-SDTSDT      SDT LENGTH                            80050002
         SPACE                                                          81000014
         MEND                                                           82000014
./  ADD  SSI=30801091,NAME=IEETDCM
*        %GOTO DCMPBSL;                                              /* 00050002
         MACRO                                                          00100002
         IEETDCM                                                        00150002
*     12/15/72          LEVEL=04                                        00160002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 00200002
*                                                                     * 00250002
*                         WORK AND SAVE AREAS                         * 00300002
*                                                                     * 00350002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 00400002
DCMSTRT  DSECT DCMSTPTR                                                 00450002
         DS    0F                  FULL WORD ALIGNMENT                  00500002
         DS    H                   DCM LENGTH                           00550002
         DS    H                   PADDING                              00600002
         SPACE 4                                                        00650002
DCMFLG1  DS    BL1                 DCM AREA INDICATORS                  00700002
         SPACE 2                                                        00750002
DCMOUTPT EQU   X'02'               DCM UPDATED FOR OUTPUT ONLY          00800002
         SPACE 4                                                        00850002
DCMATI   DC    X'00'               SAVED UCB ATTN INDEX      MC SA55058 00860002
         DC    AL2(0)              RESERVED                  MC SA55058 00870002
         SPACE 2                                                        00950002
DCMWTINT DS    A                   DCMWTINT INITIAL VALUE               01000002
DCMLNCNT DS    H                   NUMBER OF LINES TO BLANK  MC SA53462 01010002
DCMLNNUM DC    X'00'               FIRST LINE TO BLANK       MC SA53462 01020002
         DC    X'00'               RESERVED                  MC SA53462 01030002
DCMPACK  DS    F                   AREA TO PLACE NUMBER FOR PACKING     01100002
DCMCVBIN DS    F                   AREA FOR CONVERSION TO BINARY        01150002
         SPACE 2                                                        01200002
DCMTIMES DS    BL1                 TIME RTNS INDICATOR BYTE             01250002
         SPACE 2                                                        01300002
DCMTIMER EQU   X'80'               TIME ELAPSED FOR THIS DISPLAY        01350002
DCMOPTTI EQU   X'40'               OPTIONS TO TI RTN                    01400002
DCMOTTMM EQU   X'10'               OPTIONS OR TI RTNS TO MSG MODULE     01450002
DCMTASYN EQU   X'04'               TIMER SET FOR ASYNC ERROR MSG        01500002
DCMOCTTI EQU   X'02'               OPEN-CLOSE TO TI RTN                 01550002
DCMRMTTI EQU   X'01'               ROLL MODE TO TIMER ROUTINE           01600002
         EJECT                                                          01650002
         DS    XL1                 UNUSED                               01700002
         SPACE 2                                                        01750002
DCMELGN  DS    H                   ENTRY AREA LAST CHARACTER POINTER    01800002
         SPACE 2                                                        01850002
DCMBUFAD DS    A                   POINTER TO BUFFER ADDRESS TABLE      01900002
DCMDOMPK DS    A                   ADDRESS OF FIRST DOM NUMBER          01950002
DCMAMTAB DS    A                   ADDRESS OF FIRST SCT ENTRY           02000002
DCMADSEC DS    A                   ADDRESS OF FIRST SSCT ENTRY          02050002
DCMADDRL DS    A                   ADDRESS OF LAST SCT ENTRY            02100002
DCMASCRN DS    A                   POINTER TO SCREEN IMAGE BUFFER       02150002
DCMLSCRN DS    A                   POINTER TO LAST BUFFER LINE          02200002
DCMWTBUF DS    A                   SCREEN LENGTH POINTER                02250002
DCMAINS  DS    A                   POINTER TO INSTRUCTION LINE          02300002
DCMAENTR DS    A                   POINTER TO ENTRY AREA                02350002
DCMAWARN DS    A                   POINTER TO WARNING LINE              02400002
DCMADCHP DS    A                   ADDRESS OF CHANNEL PROGRAM AREA      02450002
DCMPFKLN DS    A                   POINTER TO PFK LINE                  02500002
DCMCXSVE DS    F                   CXSA SAVE AREA                       02550002
DCMADOPN DS    A                   ADDRESS OF COMMAND OPERAND           02600002
DCMDSAV  DS    5F                  SAVE AND WORK AREA                   02650002
         SPACE 2                                                        02700002
*           INPUT BUFFER FOR ISSUING SVC 34 AND SVC 35                * 02750002
*           FIELDS DCMWQEXP THROUGH DCMINPUT MUST REMAIN IN ORDER     * 02800002
DCMWQEXP DS    0F                  ENSURE FULL WORD BOUNDARY            02850002
DCMINLGN DS    H                   FIELD FOR INPUT LENGTH               02900002
DCMMCSFL DS    H                   MCS FLAGS FIELD                      02950002
DCMINPUT DS    32F                 INPUT MESSAGE TEXT                   03000002
         SPACE 2                                                        03050002
DCMLGNTH DS    H                   LENGTH OF A LINE                     03100002
DCMBAINC DS    H                   ADDRESS TO INSERT CURSOR             03150002
DCMIRCTR DS    H                   INTERVENTION REQ'D MSG COUNTER       03200002
DCMBADLN DS    H                   BUFFER ADDR TO BEGIN MSG WRITE       03250002
DCMBYTCT DS    H                   NUMBER OF BYTES TO WRITE             03300002
DCMADNUM DS    H                   NEXT LINE NUMBER                     03350002
DCMAXLGN DS    H                   MAXIMUM LINE LENGTH                  03400002
DCMMSGAL DS    H                   NUMBER OF LINES IN MESSAGE AREA      03450002
DCMRMINC DS    H                   INCREMENT INTO RMI                   03500002
DCMSCTCN DS    H                   LENGTH OF ONE SCT ENTRY              03550002
DCMCORLN DS    H                   LENGTH OF DCM LINE IN CORE           03600002
         DS    H                   TIME COUNTER                         03650002
DCMPFKNM DS    XL1                 NUMBER OF KEY BEING PROCESSED        03700002
DCMPFKKN DS    XL1                 LIST KEY NUMBER                      03750002
         EJECT                                                          03800002
DCMDEL   DS    CL2                 DEL VALUE                            03850002
DCMCON   DS    CL1                 CON VALUE                            03900002
DCMSEG   DS    FL1                 SEG VALUE                            03950002
DCMDL    DS    FL1                 DISPLAY AREA OPTION                  04000002
DCMRNUM  DS    FL1                 ROLL NUMBER VALUE                    04050002
DCMRTME  DS    H                   ROLL TIME VALUE                      04100002
         SPACE 2                                                        04150002
*  DEFAULT VALUES FOR OPTIONS                                           04200002
DCMSEGDF DS    FL1                 SEG DEFAULT                          04250002
DCMRNUMD DS    FL1                 RNUM DEFAULT                         04300002
DCMRTMED DS    H                   RTME DEFAULT                         04350002
         SPACE 2                                                        04400002
DCMASKEN DS    XL1                 ENTER MASK                           04450002
DCMASKCN DS    XL1                 CANCEL MASK                          04500002
DCMASKCR DS    XL1                 CURSOR MASK                          04550002
DCMASKLP DS    XL1                 LIGHT PEN MASK                       04600002
DCMASKPF DS    XL1                 PFK MASK                             04650002
         EJECT                                                          04700002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 04750002
*                                                                     * 04800002
*                         COMMUNICATIONS AREA                         * 04850002
*                                                                     * 04900002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 04950002
         SPACE 2                                                        05000002
DCMOPTST DS    BL1                 STATUS OF SCREEN CONTROL OPTIONS     05050002
         SPACE 2                                                        05100002
DCMOPTVR EQU   X'80'               DELETE VERIFICATION  CON=(Y=1,N=0)   05150002
DCMOPTAD EQU   X'40'               AUTOMATIC DELETION   DEL=(Y=1,N=0)   05200002
DCMOPTSG EQU   X'20'               DEFAULT SEGMENT SPECIFIED  SEG=(0=0) 05250002
DCMOPRLL EQU   X'10'               ROLL MODE  (Y=1,N=0)                 05300002
         SPACE 4                                                        05350002
DCMCS    DS    BL1                 OPEN/CLOSE REQUEST                   05400002
         SPACE 2                                                        05450002
DCMCSC   EQU   X'80'               CLOSE REQUEST                        05500002
DCMCSO   EQU   X'40'               OPEN REQUEST                         05550002
         SPACE 4                                                        05600002
DCMUTILT DS    BL1                 RESERVED                             05650002
         SPACE 2                                                        05700002
DCMUTILA EQU   X'80'               THESE BITS ARE                       05750002
DCMUTILB EQU   X'40'                 INITIALIZED AND USED               05800002
DCMUTILC EQU   X'20'                 SOLELY WITHIN                      05850002
DCMUTILD EQU   X'10'                 EACH MODULE                        05900002
DCMUTILE EQU   X'08'               THEY ARE NEVER                       05950002
DCMUTILF EQU   X'04'               USED FOR INTERFACE                   06000002
DCMTEST1 EQU   X'02'               FOR TESTING                          06050002
DCMTEST2 EQU   X'01'               FOR TESTING                          06100002
         SPACE 4                                                        06150002
DCMDSTAT DS    BL1                 CURRENT DISPLAY STATUS               06200002
         SPACE 2                                                        06250002
DCMDSTNM EQU   X'20'               MESSAGES ARE NUMBERED                06300002
DCMDSTNH EQU   X'10'               MSGS NUMBERED - HOLD OPTION          06350002
DCMDSINR EQU   X'08'               INTERVENTION REQ'D DELETION TRIED    06400002
DCMDSAUT EQU   X'04'               AUTOMATIC DELETION TRIED             06450002
         SPACE 4                                                        06500002
DCMMCSST DS    BL1                 MCS INTERFACE BYTE                   06550002
         SPACE 2                                                        06600002
DCMDUSE  EQU   X'80'               OUR SUPPORT IN CONTROL               06650002
DCMOOMSS EQU   X'04'               MESSAGE STREAM ENTRY                 06750002
DCMOOSDS EQU   X'01'               STATUS DISPLAY ENTRY                 06800002
         SPACE 4                                                        06850002
DCMIOUNQ DS    BL1                 UNIQUE IO BYTE                       06900002
         SPACE 2                                                        06950002
*  UNIQUE INTERFACE BITS FOR 2260                                       07000002
DCMIO226 EQU   X'80'               RMI PERFORMED                        07050002
DCMRPCUR EQU   X'40'               ADVANCE CURSOR TO BLANKS             07100002
DCMFRSCN EQU   X'20'               PUT OUTPUT IN HOLD MODE              07150002
*  UNIQUE INTERFACE BITS FOR 2250                                       07200002
DCMRDARM EQU   X'10'               PERFORM READ AFTER RMI               07250002
DCMW2250 EQU   X'08'               DEVICE IS 2250                       07300002
DCMINNOR EQU   X'04'               NORMAL INSTRUCTION LINE              07350002
DCMINERR EQU   X'02'               ERROR INSTRUCTION LINE               07400002
         SPACE 4                                                        07450002
DCMIOCM1 DS    BL1                 IO COMMUNICATIONS BYTE 1             07500002
         SPACE 2                                                        07550002
DCMDORMI EQU   X'80'               ISSUE RMI                            07600002
DCMSOUND EQU   X'40'               SOUND ALARM                          07650002
DCMWRWRN EQU   X'20'               WRITE WARNING LINE                   07700002
DCMWRMSG EQU   X'10'               WRITE FULL MESSAGE AREA              07750002
DCMWRPAR EQU   X'08'               WRITE PARTIAL MESSAGE AREA           07800002
DCMWRINS EQU   X'04'               WRITE INSTRUCTION LINE               07850002
DCMWRENT EQU   X'02'               WRITE ENTRY AREA                     07900002
DCMINSC  EQU   X'01'               INSERT CURSOR                        07950002
         EJECT                                                          08000002
DCMIOCM2 DS    BL1                 IO COMMUNICATIONS BYTE 2             08050002
         SPACE 2                                                        08100002
DCMBLENT EQU   X'80'               BLANK ENTRY AREA                     08150002
DCMBLWRL EQU   X'40'               BLANK LEFT HALF WARNING LINE         08200002
DCMBLWRR EQU   X'20'               BLANK RIGHT HALF WARNING LINE        08250002
DCMINSSH EQU   X'10'               INIT AND SHIFT INSTRUCTION LINE      08300002
DCMWINFD EQU   X'08'               WRITE INFORMATIONAL DISPLAY          08350002
DCMERASE EQU   X'04'               PERFORM ERASE                        08400002
DCMIOCRD EQU   X'02'               PERFORM READ (2250,22DOC)            08450002
DCMWRASY EQU   X'01'               WRITE ASYNC ERROR MSG TO MID-SCREEN  08500002
         SPACE 4                                                        08550002
DCMIOCM3 DS    BL1                 IO COMMUNICATIONS BYTE 3             08600002
         SPACE 2                                                        08650002
DCMOPRMI EQU   X'80'               RMI AFTER OPEN TO UNLOCK KEYBOARD    08700002
DCMSSRG  EQU   X'40'               SUPPRESS START REGENERATION          08750002
DCMWRPFK EQU   X'10'               DCM WRITE PFK AREA                   08800002
DCMPFKAT EQU   X'08'               PFK ATTENTION                        08850002
DCMRDPFK EQU   X'04'               PFK AREA READ                        08900002
DCMACPFK EQU   X'02'               TURN ACTIVE PFK LIGHTS ON            08950002
DCMLTPFK EQU   X'01'               TURN ALL PFK LIGHTS ON               09000002
         SPACE 4                                                        09050002
DCMLINEN DS    XL1                 LINE NUMBER TO BEGIN WRITE           09100002
         SPACE 2                                                        09150002
DCMCULNO DS    XL1                 LINE IN ENTRY AREA TO INSERT CURSOR  09200002
         SPACE 2                                                        09250002
DCMPOSCU DS    XL1                 POSITION TO INSERT CURSOR            09300002
         SPACE 4                                                        09350002
DCMASYNC DS    BL1                 ASYN ERROR COMMUNICATIONS/RETRY BYTE 09400002
         SPACE 2                                                        09450002
DCMASDA  EQU   X'40'               RETRY BIT                            09500002
DCMASIN  EQU   X'20'               RETRY BIT                            09550002
DCMASBA  EQU   X'10'               RETRY BIT                            09600002
DCMASLOG EQU   X'08'               LOG ASYNCHRONOUS ERROR               09650002
         EJECT                                                          09700002
DCMCOM1  DS    BL1                 COMMUNICATIONS BYTE                  09750002
         SPACE 2                                                        09800002
DCMLPENT EQU   X'80'               ENTER BY LP OR CURSOR                09850002
DCMIOPRD EQU   X'40'               READ PERFORMED                       09900002
DCMCOMRM EQU   X'20'               RMI PERFORMED                        09950002
DCMCOMAU EQU   X'10'               PERFORM AUTO DELETE                  10000002
DCMCOMRD EQU   X'08'               PERFORM REGULAR DELETE               10050002
DCMCOMNM EQU   X'04'               NUMBER MESSAGES                      10100002
DCMCANCL EQU   X'01'               INDICATE CANCEL TO COMMAND ROUTINE   10150002
         SPACE 3                                                        10200002
DCMCOM2  DS    BL1                 COMMUNICATIONS BYTE                  10250002
         SPACE 2                                                        10300002
DCMCM2I  EQU   X'80'               INPUT TO BE PROCESSED                10350002
DCMSPLIT EQU   X'40'               MSG TO BE SPLIT                      10400002
DCMCOMAR EQU   X'20'               ACCEPTED REPLY                       10450002
DCMERPF  EQU   X'08'               ERASE PERF-PROC CAN NOW CLOSE DEVICE 10500002
DCMCMIN5 EQU   X'04'               RETURN TO INTER. 5 FOR BLNK          10550002
DCMCBLNK EQU   X'02'               BLANKING REQUIRED                    10600002
DCMAE    EQU   X'01'               CLEANUP FOR ASY ERROR                10650002
         SPACE 3                                                        10700002
DCMCOM3  DS    BL1                 COMMUNICATIONS BYTE                  10750002
         SPACE 2                                                        10800002
DCMCDSP3 EQU   X'80'               DISPLAY 3 COMPLETED WORK             10850002
DCMRTPFK EQU   X'40'               RETURN TO PFK ROUTINE                10900002
DCMVLPFK EQU   X'20'               VERIFYING LAST COMMAND               10950002
DCMXINT1 EQU   X'10'               ENTRY FOR INTERFACE 1 ROUTINE        11000002
DCMOLUNV EQU   X'08'               O-O-L MSG CAUSED UNVIEW. MSG.        11050002
DCMPFKWR EQU   X'04'               WRITE PFK UPDATES TO LIB             11100002
DCMOLHLD EQU   X'02'               OUT OF LINE MESSAGES HELD  MB Y02958 11110002
DCMCMIN7 EQU   X'01'               RETURN TO INTER. 7 FOR BLANKING      11150002
         SPACE 3                                                        11200002
DCMCMSG1 DS    BL1                 MSG MODULE COMMUNICATIONS BYTE 1     11250002
         SPACE 2                                                        11300002
DCMMSGWT EQU   X'80'               MOVE IN MESSAGE WAITING              11350002
DCMUNMSG EQU   X'40'               MOVE IN UNVIEWABLE MESSAGE           11400002
DCMSTEX  EQU   X'20'               MOVE IN STATUS EXISTS                11450002
DCMCHOPT EQU   X'10'               MOVE IN CHANGE OPTIONS               11500002
DCMELONG EQU   X'08'               MOVE IN ENTRY TOO LONG               11550002
DCMWRCDL EQU   X'04'               MOVE IN CON=N,DEL=Y                  11600002
DCMDELNT EQU   X'02'               MOVE IN DEL UNCHANGED, NO TIMER      11650002
         EJECT                                                          11750002
DCMCMSG2 DS    BL1                 MSG MODULE COMMUNICATIONS BYTE 2     11800002
         SPACE 2                                                        11850002
DCMDLREQ EQU   X'80'               MOVE IN DELETION REQUESTED           11900002
DCMRQINC EQU   X'40'               MOVE IN REQUEST INCONSISTENT         11950002
DCMMSGCR EQU   X'20'               MOVE IN INVALID CURSOR OPERATION     12000002
DCMINVOP EQU   X'10'               MOVE IN INVALID OPERAND              12050002
DCMCILLP EQU   X'08'               MOVE IN ILLEGAL LP OPERATION         12100002
DCMDELRI EQU   X'04'               MOVE IN DELETE REQUEST INCONSISTANT  12150002
DCMASYRT EQU   X'02'               MOVE IN ASYN ERROR RETRYABLE         12200002
DCMASYCD EQU   X'01'               MOVE IN ASYN ERROR MAYBE RETRYABLE   12250002
         SPACE 4                                                        12300002
DCMCMSG3 DS    BL1                 MSG MODULE COMMUNICATIONS BYTE 3     12350002
         SPACE 2                                                        12400002
DCMCMRLL EQU   X'80'               MOVE IN ROLL MODE MESSAGE            12450002
DCMCDLR1 EQU   X'40'               NO DELETABLE MESSAGES                12500002
DCMCDLR2 EQU   X'20'               INVALID RANGE                        12550002
DCMCDLR3 EQU   X'10'               SEG EQU TO ZERO                      12600002
DCMCDLR4 EQU   X'08'               DISPLAY NOT ON SCREEN                12650002
DCMCDLR5 EQU   X'04'               INVALID OPERAND                      12700002
DCMDTBSY EQU   X'01'               COMMAND REJECTED - TASK BUSY         12800002
         SPACE 4                                                        12850002
DCMCMSG4 DS    BL1                 MSG MODULE COMMUNICATIONS BYTE 4     12900002
         SPACE 2                                                        12950002
DCMPFKNA EQU   X'80'               MOVE IN PFK NOT ALLOCATED FOR        13000002
DCMPFKND EQU   X'40'               MOVE IN PFK NOT DEFINED              13050002
DCMPFKNO EQU   X'20'               MOVE IN NO PFK ALLOCATION            13100002
DCMPFKIP EQU   X'10'               MOVE IN PFK IN PROCESS               13150002
         SPACE 4                                                        13200002
DCMSVC34 DS    BL1                 SVC 34 COMMUNICATION BYTE            13250002
         SPACE 2                                                        13300002
DCMMYCMD EQU   X'80'               COMMAND TO BE HANDLED BY THIS CONS   13350002
DCMINVLD EQU   X'40'               INVALID K COMMAND                    13400002
DCMTYPE1 EQU   X'20'               K COMMAND IS NOT ROUTABLE            13450002
         SPACE 2                                                        13500002
DCMPAD   DS    X                   RESERVED COMMUNICATION BYTE   Y02958 13550002
DCMIONDX DS    X                   INDEX FOR SELECTING THE    MB Y02958 13552002
*                                  APPROPRIATE I/O ROUTINE    MB Y02958 13554002
*                                  X'04' - M/165 CONSOLE      MB Y02958 13556002
*                                  X'08' - 2250               MB Y02958 13558002
*                                  X'0C' - 2260               MB Y02958 13558402
*                                  X'10' - 3277               MB Y02958 13558802
DCMTEST  DS    H                   RESERVED FOR TESTING       MB Y02958 13560002
         EJECT                                                          13600002
**                                                                   ** 13650002
*                        MODULE ADDRESSES                             * 13700002
**                                                                   ** 13750002
         SPACE 1                                              MB Y02958 13800002
DCMIORTN DS    F                   APPROIATE I/O ROUTINE      MB Y02958 13850002
*                  NAME   TRACE ID   DESCRIPTION              MB Y02958 13900002
*                 IEECVETH    EH   3066(M/165) IO ROUTINE     MB Y02958 13950002
*                 IEECVETP    EP   2250 IO ROUTINE            MB Y02958 13960002
*                 IEECVETR    ER   2260 IO ROUTINE            MB Y02958 13970002
*                 IEECVETU    EU   3277 IO ROUTINE            MB Y02958 13980002
         SPACE 1                                              MB Y02958 14000002
*                  NAME   TRACE ID   DESCRIPTION              MB Y02958 14010002
DCMNPRZ  DS    F  IEECVFT1    F1   PROCESSOR 0 LOAD ONE       MB Y02958 14050002
DCMNPROC DS    F  IEECVET1    E1   PROCESSOR ROUTINE LOAD ONE MB Y02958 14150002
DCMNDSP1 DS    F  IEECVET2    E2   DISPLAY ROUTINE 1          MB Y02958 14250002
DCMNDSP2 DS    F  IEECVET3    E3   DISPLAY ROUTINE 2          MB Y02958 14300002
DCMNDSP3 DS    F  IEECVFT2    F2   DISPLAY ROUTINE 3          MB Y02958 14350002
DCMNCMD1 DS    F  IEECVET4    E4   COMMAND ROUTINE 1          MB Y02958 14400002
DCMNDEL1 DS    F  IEECVET6    E6   DELETE ROUTINE 1           MB Y02958 14500002
DCMNDEL2 DS    F  IEECVET7    E7   DELETE ROUTINE 2           MB Y02958 14550002
DCMNDEL3 DS    F  IEECVET8    E8   DELETE ROUTINE 3           MB Y02958 14600002
DCMNDEL4 DS    F  IEECVET9    E9   DELETE ROUTINE 4           MB Y02958 14650002
DCMNOPT1 DS    F  IEECVETA    EA   OPTIONS ROUTINE 1          MB Y02958 14700002
DCMNPFK1 DS    F  IEECVFTA    FA   PFK ROUTINE 1              MB Y02958 14750002
DCMNPFK2 DS    F  IEECVFTB    FB   PFK ROUTINE 2              MB Y02958 14800002
DCMNERRO DS    F  IEECVETC    EC   ASYNCHRONOUS ERROR ROUTINE MB Y02958 14850002
DCMNMSG1 DS    F  IEECVETD    ED   MESSAGE ROUTINE 1          MB Y02958 14900002
DCMNMSG2 DS    F  IEECVETE    EE   MESSAGE ROUTINE 2          MB Y02958 14950002
DCMNMSG3 DS    F  IEECVFTD    FD   MESSAGE ROUTINE 3          MB Y02958 14960002
DCMNLPCR DS    F  IEECVETF    EF   LIGHT PEN/CURSOR SERVICE   MB Y02958 15000002
DCMNOPCL DS    F  IEECVETG    EG   OPEN-CLOSE ROUTINE         MB Y02958 15050002
DCMNCLN  DS    F  IEECVFTG    FG   CLEANUP MODULE             MB Y02958 15100002
DCMNROLL DS    F  IEECVETJ    EJ   ROLL MODE ROUTINE          MB Y02958 15150002
DCMNTIMR DS    F  IEECVETK    EK   TIMER INTERPRETER ROUTINE  MB Y02958 15200002
DCMNINT1 DS    F  IEECVFTL    FL   INTERFACE 1 ROUTINE        MB Y02958 15250002
DCMNINT2 DS    F  IEECVFTM    FM   INTERFACE 2 ROUTINE        MB Y02958 15300002
DCMNINT3 DS    F  IEECVFTN    FN   INTERFACE 3 ROUTINE        MB Y02958 15350002
DCMNINT4 DS    F  IEECVFTO    FO   INTERFACE 4 ROUTINE        MB Y02958 15400002
DCMNINT5 DS    F  IEECVFTP    FP   INTERFACE 5 ROUTINE        MB Y02958 15450002
DCMNINT6 DS    F  IEECVFTQ    FQ   INTERFACE 6 ROUTINE        MB Y02958 15500002
DCMNINT7 DS    F  IEECVFTT    FT   INTERFACE 7 ROUTINE        MB Y02958 15550002
         SPACE 2                                                        15560002
DCMTRACE DS    CL30                DIDOCS MODULE TRACE AREA   MB Y02958 15600002
DCMTRAC2 EQU   DCMTRACE+2          TRACE MOVE FROM-ADDRESS    MB Y02958 15650002
DCMTRLEN EQU   *-DCMTRACE          LENGTH FOR TRACE MOVE      MB Y02958 15700002
DCMTREN1 DS    C                   1ST BYTE OF TRACE ENTRY    MB Y02958 15750002
DCMTREN2 DS    C                   2ND BYTE OF TRACE ENTRY    MB Y02958 15760002
         EJECT                                                          15800002
*  FIRST BYTE OF SCT ENTRIES                                            15850002
DCMMSGWR EQU   X'80'               WTOR MESSAGE DISPLAYED IN LINE       15900002
DCMMSGIN EQU   X'40'               MESSAGE DISPLAYED IN LINE            15950002
DCMMSGCN EQU   X'20'               MESSAGE CONTINUED ON NEXT LINE       16000002
DCMMSGJK EQU   X'10'               TO WRITE OUT-OF-LINE DISPLAY FROM    16050002
*                                  MAY CONTAIN JUNK (SDS INTERFACE 2)   16100002
DCMMSGAD EQU   X'08'               MESSAGE CAN BE DELETED AUTOMATICALLY 16150002
DCMMSGRD EQU   X'04'               REQUEST HAS SPECIFIED MSG BE REMOVED 16200002
DCMMSGIF EQU   X'02'               INFORMATIONAL MESSAGE IN LINE        16250002
DCMMSGST EQU   X'01'               END OF TABLE INDICATOR               16300002
         SPACE 2                                                        16350002
*  SECOND BYTE OF SCT ENTRIES                                           16400002
DCMMSGAC EQU   X'80'               ACTION MESSAGE                       16450002
DCMMSGC7 EQU   X'40'               DESCRIPTOR CODE 7 MESSAGE            16500002
DCMMSGDM EQU   X'20'               MESSAGE HAS BEEN DOMMED              16550002
DCMMSGAR EQU   X'10'               MESSAGE IS AN ACCEPTED REPLY         16600002
DCMMSGIR EQU   X'08'               INTERVENTION REQUIRED MESSAGE        16650002
DCMMSGCT EQU   X'04'               CONTINUATION LINE                    16700002
DCMMSGPP EQU   X'02'               ISSUED BY PROBLEM PROGRAM            16750002
DCMMSGCL EQU   X'01'               CONTROL LINE OF IN LINE MLWTO        16800002
         SPACE 2                                                        16850002
*  SECONDARY SCT ENTRIES                                                16900002
DCMSECCL EQU   X'80'               CONTROL LINE OF OUT OF LINE DISPLAY  16950002
DCMSECLL EQU   X'40'               LABEL LINE OF OUT OF LINE DISPLAY    17000002
DCMSECDL EQU   X'20'               DATA LINE OF OUT OF LINE DISPLAY     17050002
DCMSECBL EQU   X'10'               THIS LINE IS BLANKED                 17100002
DCMSECDD EQU   X'02'               LINE RESERVED FOR DYNAMIC DISPLAY    17150002
DCMSECST EQU   X'01'               END OF TABLE INDICATOR               17200002
DCMEND   DS    0C                  END OF DCM                           17250002
         MEND  , */                                                     17300002
*%DCMPBSL  :  ;                                                         17350002
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  */ 17400002
*/*                                                                  */ 17450002
*/*                       WORK AND SAVE AREAS                        */ 17500002
*/*                                                                  */ 17550002
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  */ 17600002
*/*   12/15/72          LEVEL=04                                     */ 17610002
*DECLARE                                                                17650002
*  1 DCMSTRT  BASED(DCMSTPTR),                                          17700002
*                                                                       17750002
*   2 *           FIXED(15)  BDY(WORD),  /* DCM LENGTH               */ 17800002
*   2 *           FIXED(15),             /* PADDING                  */ 17850002
*                                                                       17900002
*                                                                       17950002
*                                                                       18000002
*                                                                       18050002
*   2 DCMFLG1     CHAR(1),               /* DCM AREA INDICATORS      */ 18100002
*                                                                       18150002
*                                                                       18200002
*    3 *        BIT(1),                  /* RESERVED                 */ 18250002
*    3 *        BIT(1),                  /* RESERVED                 */ 18300002
*    3 *        BIT(1),                  /* RESERVED                 */ 18350002
*    3 *        BIT(1),                  /* RESERVED                 */ 18400002
*    3 *        BIT(1),                  /* RESERVED                 */ 18450002
*    3 *        BIT(1),                  /* RESERVED                 */ 18500002
*    3 DCMOUTPT BIT(1),                  /* DCM UPDATED FOR OUTPUT      18550002
*                                           ONLY                     */ 18600002
*    3 *        BIT(1),                  /* RESERVED                 */ 18650002
*                                                                       18700002
*                                                                       18750002
*                                                                       18800002
*                                                                       18850002
*   2 DCMATI      CHAR(1),               /* SAVED UCB ATTN INDEX     */ 18900002
*   2 *           CHAR(2),               /* RESERVED                 */ 18910002
*                                                                       18950002
*                                                                       19000002
*   2 DCMWTINT    PTR(31),               /* DCMWTINT INITIAL VALUE   */ 19050002
*   2 DCMLNCNT    FIXED(15),             /* NUMBER OF LINES TO BLANK */ 19060002
*   2 DCMLNNUM    CHAR(1),               /* FIRST LINE TO BLANK      */ 19070002
*   2 *           CHAR(1),               /* RESERVED                 */ 19080002
*   2 DCMPACK     FIXED(31),             /* AREA TO PLACE NUMBER FOR    19150002
*                                           PACKING                  */ 19200002
*   2 DCMCVBIN    FIXED(31),             /* AREA FOR CONVERSION TO      19250002
*                                           BINARY                   */ 19300002
*                                                                       19350002
*   2 DCMTIMES    CHAR(1),               /* TIME RTNS INDICATOR BYTE */ 19400002
*                                                                       19450002
*                                                                       19500002
*    3 DCMTIMER BIT(1),                  /* TIME ELAPSED FOR THIS       19550002
*                                           DISPLAY                  */ 19600002
*    3 DCMOPTTI BIT(1),                  /* OPTIONS TO TI RTN        */ 19650002
*    3 *        BIT(1),                  /* RESERVED                 */ 19700002
*    3 DCMOTTMM BIT(1),                  /* OPTIONS OR TI RTNS TO       19750002
*                                           MSG MODULE               */ 19800002
*    3 *        BIT(1),                  /* RESERVED                 */ 19850002
*    3 DCMTASYN BIT(1),                  /* TIMER SET FOR ASYNC         19900002
*                                           ERROR MSG                */ 19950002
*    3 DCMOCTTI BIT(1),                  /* OPEN-CLOSE TO TI RTN     */ 20000002
*    3 DCMRMTTI BIT(1),                  /* ROLL MODE TO TIMER          20050002
*                                           ROUTINE                  */ 20100002
*@EJECT;                                                                20150002
*   2 *           CHAR(1),               /* UNUSED                   */ 20200002
*                                                                       20250002
*                                                                       20300002
*   2 DCMELGN     FIXED(15),             /* ENTRY AREA LAST             20350002
*                                           CHARACTER POINTER        */ 20400002
*                                                                       20450002
*                                                                       20500002
*   2 DCMBUFAD    PTR(31),               /* POINTER TO BUFFER           20550002
*                                           ADDRESS TABLE            */ 20600002
*   2 DCMDOMPK    PTR(31),               /* ADDRESS OF FIRST DOM        20650002
*                                           NUMBER                   */ 20700002
*   2 DCMAMTAB    PTR(31),               /* ADDRESS OF FIRST SCT        20750002
*                                           ENTRY                    */ 20800002
*   2 DCMADSEC    PTR(31),               /* ADDRESS OF FIRST SSCT       20850002
*                                           ENTRY                    */ 20900002
*   2 DCMADDRL    PTR(31),               /* ADDRESS OF LAST SCT         20950002
*                                           ENTRY                    */ 21000002
*   2 DCMASCRN    PTR(31),               /* POINTER TO SCREEN IMAGE     21050002
*                                           BUFFER                   */ 21100002
*   2 DCMLSCRN    PTR(31),               /* POINTER TO LAST BUFFER      21150002
*                                           LINE                     */ 21200002
*   2 DCMWTBUF    PTR(31),               /* SCREEN LENGTH POINTER    */ 21250002
*   2 DCMAINS     PTR(31),               /* POINTER TO INSTRUCTION      21300002
*                                           LINE                     */ 21350002
*   2 DCMAENTR    PTR(31),               /* POINTER TO ENTRY AREA    */ 21400002
*   2 DCMAWARN    PTR(31),               /* POINTER TO WARNING LINE  */ 21450002
*   2 DCMADCHP    PTR(31),               /* ADDRESS OF CHANNEL          21500002
*                                           PROGRAM AREA             */ 21550002
*   2 DCMPFKLN    PTR(31),               /* POINTER TO PFK LINE      */ 21600002
*   2 DCMCXSVE    FIXED(31),             /* CXSA SAVE AREA           */ 21650002
*   2 DCMADOPN    PTR(31),               /* ADDRESS OF COMMAND          21700002
*                                           OPERAND                  */ 21750002
*   2 DCMDSAV  (5) FIXED(31),            /* SAVE AND WORK AREA       */ 21800002
*                                                                       21850002
*                                                                       21900002
*/*         INPUT BUFFER FOR ISSUING SVC 34 AND SVC 35               */ 21950002
*/*         FIELDS DCMWQEXP THROUGH DCMINPUT MUST REMAIN IN ORDER    */ 22000002
*   2 DCMWQEXP    FIXED(31),             /* ENSURE FULL WORD            22050002
*                                           BOUNDARY                 */ 22100002
*    3 DCMINLGN    FIXED(15),            /* FIELD FOR INPUT LENGTH   */ 22150002
*    3 DCMMCSFL    FIXED(15),            /* MCS FLAGS FIELD          */ 22200002
*   2 DCMINPUT (32) FIXED(31),           /* INPUT MESSAGE TEXT       */ 22250002
*                                                                       22300002
*                                                                       22350002
*   2 DCMLGNTH    FIXED(15),             /* LENGTH OF A LINE         */ 22400002
*   2 DCMBAINC    FIXED(15),             /* ADDRESS TO INSERT CURSOR */ 22450002
*   2 DCMIRCTR    FIXED(15),             /* INTERVENTION REQ'D MSG      22500002
*                                           COUNTER                  */ 22550002
*   2 DCMBADLN    FIXED(15),             /* BUFFER ADDR TO BEGIN MSG    22600002
*                                           WRITE                    */ 22650002
*   2 DCMBYTCT    FIXED(15),             /* NUMBER OF BYTES TO WRITE */ 22700002
*   2 DCMADNUM    FIXED(15),             /* NEXT LINE NUMBER         */ 22750002
*   2 DCMAXLGN    FIXED(15),             /* MAXIMUM LINE LENGTH      */ 22800002
*   2 DCMMSGAL    FIXED(15),             /* NUMBER OF LINES IN          22850002
*                                           MESSAGE AREA             */ 22900002
*   2 DCMRMINC    FIXED(15),             /* INCREMENT INTO RMI       */ 22950002
*   2 DCMSCTCN    FIXED(15),             /* LENGTH OF ONE SCT ENTRY  */ 23000002
*   2 DCMCORLN    FIXED(15),             /* LENGTH OF DCM LINE IN       23050002
*                                           CORE                     */ 23100002
*   2 *           FIXED(15),             /* TIME COUNTER             */ 23150002
*   2 DCMPFKNM    CHAR(1),               /* NUMBER OF KEY BEING         23200002
*                                           PROCESSED                */ 23250002
*   2 DCMPFKKN    CHAR(1),               /* LIST KEY NUMBER          */ 23300002
*@EJECT;                                                                23350002
*   2 DCMDEL      CHAR(2),               /* DEL VALUE                */ 23400002
*   2 DCMCON      CHAR(1),               /* CON VALUE                */ 23450002
*   2 DCMSEG      PTR(8),                /* SEG VALUE                */ 23500002
*   2 DCMDL       PTR(8),                /* DISPLAY AREA OPTION      */ 23550002
*   2 DCMRNUM     PTR(8),                /* ROLL NUMBER VALUE        */ 23600002
*   2 DCMRTME     FIXED(15),             /* ROLL TIME VALUE          */ 23650002
*                                                                       23700002
*                                                                       23750002
*/*DEFAULT VALUES FOR OPTIONS                                        */ 23800002
*   2 DCMSEGDF    PTR(8),                /* SEG DEFAULT              */ 23850002
*   2 DCMRNUMD    PTR(8),                /* RNUM DEFAULT             */ 23900002
*   2 DCMRTMED    FIXED(15),             /* RTME DEFAULT             */ 23950002
*                                                                       24000002
*                                                                       24050002
*   2 DCMASKEN    CHAR(1),               /* ENTER MASK               */ 24100002
*   2 DCMASKCN    CHAR(1),               /* CANCEL MASK              */ 24150002
*   2 DCMASKCR    CHAR(1),               /* CURSOR MASK              */ 24200002
*   2 DCMASKLP    CHAR(1),               /* LIGHT PEN MASK           */ 24250002
*   2 DCMASKPF    CHAR(1),               /* PFK MASK                 */ 24300002
*@EJECT;                                                                24350002
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  */ 24400002
*/*                                                                  */ 24450002
*/*                       COMMUNICATIONS AREA                        */ 24500002
*/*                                                                  */ 24550002
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  */ 24600002
*                                                                       24650002
*                                                                       24700002
*   2 DCMOPTST    CHAR(1),               /* STATUS OF SCREEN CONTROL    24750002
*                                           OPTIONS                  */ 24800002
*                                                                       24850002
*                                                                       24900002
*    3 DCMOPTVR BIT(1),                  /* DELETE VERIFICATION         24950002
*                                           CON=(Y=1,N=0)            */ 25000002
*    3 DCMOPTAD BIT(1),                  /* AUTOMATIC DELETION          25050002
*                                           DEL=(Y=1,N=0)            */ 25100002
*    3 DCMOPTSG BIT(1),                  /* DEFAULT SEGMENT             25150002
*                                           SPECIFIED  SEG=(0=0)     */ 25200002
*    3 DCMOPRLL BIT(1),                  /* ROLL MODE (Y=1,N=0)      */ 25250002
*    3 *        BIT(1),                  /* RESERVED                 */ 25300002
*    3 *        BIT(1),                  /* RESERVED                 */ 25350002
*    3 *        BIT(1),                  /* RESERVED                 */ 25400002
*    3 *        BIT(1),                  /* RESERVED                 */ 25450002
*                                                                       25500002
*                                                                       25550002
*                                                                       25600002
*                                                                       25650002
*   2 DCMCS       CHAR(1),               /* OPEN/CLOSE REQUEST       */ 25700002
*                                                                       25750002
*                                                                       25800002
*    3 DCMCSC   BIT(1),                  /* CLOSE REQUEST            */ 25850002
*    3 DCMCSO   BIT(1),                  /* OPEN REQUEST             */ 25900002
*    3 *        BIT(1),                  /* RESERVED                 */ 25950002
*    3 *        BIT(1),                  /* RESERVED                 */ 26000002
*    3 *        BIT(1),                  /* RESERVED                 */ 26050002
*    3 *        BIT(1),                  /* RESERVED                 */ 26100002
*    3 *        BIT(1),                  /* RESERVED                 */ 26150002
*    3 *        BIT(1),                  /* RESERVED                 */ 26200002
*                                                                       26250002
*                                                                       26300002
*                                                                       26350002
*                                                                       26400002
*   2 DCMUTILT    CHAR(1),               /* RESERVED                 */ 26450002
*                                                                       26500002
*                                                                       26550002
*    3 DCMUTILA BIT(1),                  /* THESE BITS ARE           */ 26600002
*    3 DCMUTILB BIT(1),                  /* INITIALIZED AND USED     */ 26650002
*    3 DCMUTILC BIT(1),                  /* SOLELY WITHIN            */ 26700002
*    3 DCMUTILD BIT(1),                  /* EACH MODULE              */ 26750002
*    3 DCMUTILE BIT(1),                  /* THEY ARE NEVER           */ 26800002
*    3 DCMUTILF BIT(1),                  /* USED FOR INTERFACE       */ 26850002
*    3 DCMTEST1 BIT(1),                  /* FOR TESTING              */ 26900002
*    3 DCMTEST2 BIT(1),                  /* FOR TESTING              */ 26950002
*                                                                       27000002
*                                                                       27050002
*                                                                       27100002
*                                                                       27150002
*   2 DCMDSTAT    CHAR(1),               /* CURRENT DISPLAY STATUS   */ 27200002
*                                                                       27250002
*                                                                       27300002
*    3 *        BIT(1),                  /* RESERVED                 */ 27350002
*    3 *        BIT(1),                  /* RESERVED                 */ 27400002
*    3 DCMDSTNM BIT(1),                  /* MESSAGES ARE NUMBERED    */ 27450002
*    3 DCMDSTNH BIT(1),                  /* MSGS NUMBERED - HOLD        27500002
*                                           OPTION                   */ 27550002
*    3 DCMDSINR BIT(1),                  /* INTERVENTION REQ'D          27600002
*                                           DELETION TRIED           */ 27650002
*    3 DCMDSAUT BIT(1),                  /* AUTOMATIC DELETION TRIED */ 27700002
*    3 *        BIT(1),                  /* RESERVED                 */ 27750002
*    3 *        BIT(1),                  /* RESERVED                 */ 27800002
*                                                                       27850002
*                                                                       27900002
*                                                                       27950002
*                                                                       28000002
*   2 DCMMCSST    CHAR(1),               /* MCS INTERFACE BYTE       */ 28050002
*                                                                       28100002
*                                                                       28150002
*    3 DCMDUSE  BIT(1),                  /* OUR SUPPORT IN CONTROL   */ 28200002
*    3 *        BIT(1),                  /* RESERVED                 */ 28250002
*    3 *        BIT(1),                  /* RESERVED                 */ 28350002
*    3 *        BIT(1),                  /* RESERVED                 */ 28400002
*    3 *        BIT(1),                  /* RESERVED                 */ 28450002
*    3 DCMOOMSS BIT(1),                  /* MESSAGE STREAM ENTRY     */ 28500002
*    3 *        BIT(1),                  /* RESERVED                 */ 28550002
*    3 DCMOOSDS BIT(1),                  /* STATUS DISPLAY ENTRY     */ 28600002
*                                                                       28650002
*                                                                       28700002
*                                                                       28750002
*                                                                       28800002
*   2 DCMIOUNQ    CHAR(1),               /* UNIQUE IO BYTE           */ 28850002
*                                                                       28900002
*                                                                       28950002
*/* NIQUE INTERFACE BITS FOR 2260                                    */ 29000002
*    3 DCMIO226 BIT(1),                  /* RMI PERFORMED            */ 29050002
*    3 DCMRPCUR BIT(1),                  /* ADVANCE CURSOR TO BLANKS */ 29100002
*    3 DCMFRSCN BIT(1),                  /* PUT OUTPUT IN HOLD MODE     29150002
*                                           UNIQUE INTERFACE BITS       29200002
*                                           FOR 2250                 */ 29250002
*    3 DCMRDARM BIT(1),                  /* PERFORM READ AFTER RMI   */ 29300002
*    3 DCMW2250 BIT(1),                  /* DEVICE IS 2250           */ 29350002
*    3 DCMINNOR BIT(1),                  /* NORMAL INSTRUCTION LINE  */ 29400002
*    3 DCMINERR BIT(1),                  /* ERROR INSTRUCTION LINE   */ 29450002
*    3 *        BIT(1),                  /* RESERVED                 */ 29500002
*                                                                       29550002
*                                                                       29600002
*                                                                       29650002
*                                                                       29700002
*   2 DCMIOCM1    CHAR(1),               /* IO COMMUNICATIONS BYTE 1 */ 29750002
*                                                                       29800002
*                                                                       29850002
*    3 DCMDORMI BIT(1),                  /* ISSUE RMI                */ 29900002
*    3 DCMSOUND BIT(1),                  /* SOUND ALARM              */ 29950002
*    3 DCMWRWRN BIT(1),                  /* WRITE WARNING LINE       */ 30000002
*    3 DCMWRMSG BIT(1),                  /* WRITE FULL MESSAGE AREA  */ 30050002
*    3 DCMWRPAR BIT(1),                  /* WRITE PARTIAL MESSAGE       30100002
*                                           AREA                     */ 30150002
*    3 DCMWRINS BIT(1),                  /* WRITE INSTRUCTION LINE   */ 30200002
*    3 DCMWRENT BIT(1),                  /* WRITE ENTRY AREA         */ 30250002
*    3 DCMINSC  BIT(1),                  /* INSERT CURSOR            */ 30300002
*@EJECT;                                                                30350002
*   2 DCMIOCM2    CHAR(1),               /* IO COMMUNICATIONS BYTE 2 */ 30400002
*                                                                       30450002
*                                                                       30500002
*    3 DCMBLENT BIT(1),                  /* BLANK ENTRY AREA         */ 30550002
*    3 DCMBLWRL BIT(1),                  /* BLANK LEFT HALF WARNING     30600002
*                                           LINE                     */ 30650002
*    3 DCMBLWRR BIT(1),                  /* BLANK RIGHT HALF WARNING    30700002
*                                           LINE                     */ 30750002
*    3 DCMINSSH BIT(1),                  /* INIT AND SHIFT              30800002
*                                           INSTRUCTION LINE         */ 30850002
*    3 DCMWINFD BIT(1),                  /* WRITE INFORMATIONAL         30900002
*                                           DISPLAY                  */ 30950002
*    3 DCMERASE BIT(1),                  /* PERFORM ERASE            */ 31000002
*    3 DCMIOCRD BIT(1),                  /* PERFORM READ                31050002
*                                           (2250,22DOC)             */ 31100002
*    3 DCMWRASY BIT(1),                  /* WRITE ASYNC ERROR MSG TO    31150002
*                                           MID-SCREEN               */ 31200002
*                                                                       31250002
*                                                                       31300002
*                                                                       31350002
*                                                                       31400002
*   2 DCMIOCM3    CHAR(1),               /* IO COMMUNICATIONS BYTE 3 */ 31450002
*                                                                       31500002
*                                                                       31550002
*    3 DCMOPRMI BIT(1),                  /* RMI AFTER OPEN TO UNLOCK    31600002
*                                           KEYBOARD                 */ 31650002
*    3 DCMSSRG  BIT(1),                  /* SUPPRESS START              31700002
*                                           REGENERATION             */ 31750002
*    3 *        BIT(1),                  /* RESERVED                 */ 31800002
*    3 DCMWRPFK BIT(1),                  /* DCM WRITE PFK AREA       */ 31850002
*    3 DCMPFKAT BIT(1),                  /* PFK ATTENTION            */ 31900002
*    3 DCMRDPFK BIT(1),                  /* PFK AREA READ            */ 31950002
*    3 DCMACPFK BIT(1),                  /* TURN ACTIVE PFK LIGHTS      32000002
*                                           ON                       */ 32050002
*    3 DCMLTPFK BIT(1),                  /* TURN ALL PFK LIGHTS ON   */ 32100002
*                                                                       32150002
*                                                                       32200002
*                                                                       32250002
*                                                                       32300002
*   2 DCMLINEN    CHAR(1),               /* LINE NUMBER TO BEGIN        32350002
*                                           WRITE                    */ 32400002
*                                                                       32450002
*                                                                       32500002
*   2 DCMCULNO    CHAR(1),               /* LINE IN ENTRY AREA TO       32550002
*                                           INSERT CURSOR            */ 32600002
*                                                                       32650002
*                                                                       32700002
*   2 DCMPOSCU    CHAR(1),               /* POSITION TO INSERT          32750002
*                                           CURSOR                   */ 32800002
*                                                                       32850002
*                                                                       32900002
*                                                                       32950002
*                                                                       33000002
*   2 DCMASYNC    CHAR(1),               /* ASYN ERROR                  33050002
*                                           COMMUNICATIONS/RETRY        33100002
*                                           BYTE 09300000            */ 33150002
*                                                                       33200002
*                                                                       33250002
*    3 *        BIT(1),                  /* RESERVED                 */ 33300002
*    3 DCMASDA  BIT(1),                  /* RETRY BIT                */ 33350002
*    3 DCMASIN  BIT(1),                  /* RETRY BIT                */ 33400002
*    3 DCMASBA  BIT(1),                  /* RETRY BIT                */ 33450002
*    3 DCMASLOG BIT(1),                  /* LOG ASYNCHRONOUS ERROR   */ 33500002
*    3 *        BIT(1),                  /* RESERVED                 */ 33550002
*    3 *        BIT(1),                  /* RESERVED                 */ 33600002
*    3 *        BIT(1),                  /* RESERVED                 */ 33650002
*@EJECT;                                                                33700002
*   2 DCMCOM1     CHAR(1),               /* COMMUNICATIONS BYTE      */ 33750002
*                                                                       33800002
*                                                                       33850002
*    3 DCMLPENT BIT(1),                  /* ENTER BY LP OR CURSOR    */ 33900002
*    3 DCMIOPRD BIT(1),                  /* READ PERFORMED           */ 33950002
*    3 DCMCOMRM BIT(1),                  /* RMI PERFORMED            */ 34000002
*    3 DCMCOMAU BIT(1),                  /* PERFORM AUTO DELETE      */ 34050002
*    3 DCMCOMRD BIT(1),                  /* PERFORM REGULAR DELETE   */ 34100002
*    3 DCMCOMNM BIT(1),                  /* NUMBER MESSAGES          */ 34150002
*    3 *        BIT(1),                  /* RESERVED                 */ 34200002
*    3 DCMCANCL BIT(1),                  /* INDICATE CANCEL TO          34250002
*                                           COMMAND ROUTINE          */ 34300002
*                                                                       34350002
*                                                                       34400002
*                                                                       34450002
*   2 DCMCOM2     CHAR(1),               /* COMMUNICATIONS BYTE      */ 34500002
*                                                                       34550002
*                                                                       34600002
*    3 DCMCM2I  BIT(1),                  /* INPUT TO BE PROCESSED    */ 34650002
*    3 DCMSPLIT BIT(1),                  /* MSG TO BE SPLIT          */ 34700002
*    3 DCMCOMAR BIT(1),                  /* ACCEPTED REPLY           */ 34750002
*    3 *        BIT(1),                  /* RESERVED                 */ 34800002
*    3 DCMERPF  BIT(1),                  /* ERASE PERF-PROC CAN NOW     34850002
*                                           CLOSE DEVICE             */ 34900002
*    3 DCMCMIN5 BIT(1),                  /* RETURN TO INTER. 5 FOR      34950002
*                                           BLNK                     */ 35000002
*    3 DCMCBLNK BIT(1),                  /* BLANKING REQUIRED        */ 35050002
*    3 DCMAE    BIT(1),                  /* CLEANUP FOR ASY ERROR    */ 35100002
*                                                                       35150002
*                                                                       35200002
*                                                                       35250002
*   2 DCMCOM3     CHAR(1),               /* COMMUNICATIONS BYTE      */ 35300002
*                                                                       35350002
*                                                                       35400002
*    3 DCMCDSP3 BIT(1),                  /* DISPLAY 3 COMPLETED WORK */ 35450002
*    3 DCMRTPFK BIT(1),                  /* RETURN TO PFK ROUTINE    */ 35500002
*    3 DCMVLPFK BIT(1),                  /* VERIFYING LAST COMMAND   */ 35550002
*    3 DCMXINT1 BIT(1),                  /* ENTRY FOR INTERFACE 1       35600002
*                                           ROUTINE                  */ 35650002
*    3 DCMOLUNV BIT(1),                  /* O-O-L MSG CAUSED UNVIEW.    35700002
*                                           MSG.                     */ 35750002
*    3 DCMPFKWR BIT(1),                  /* WRITE PFK UPDATES TO LIB */ 35800002
*    3 DCMOLHLD BIT(1),                  /* OUT OF LINE MESSAGES HELD*/ 35850002
*    3 DCMCMIN7 BIT(1),                  /* RETURN TO INTER. 7 FOR      35900002
*                                           BLANKING                 */ 35950002
*                                                                       36000002
*                                                                       36050002
*                                                                       36100002
*   2 DCMCMSG1    CHAR(1),               /* MSG MODULE                  36150002
*                                           COMMUNICATIONS BYTE 1    */ 36200002
*                                                                       36250002
*                                                                       36300002
*    3 DCMMSGWT BIT(1),                  /* MOVE IN MESSAGE WAITING  */ 36350002
*    3 DCMUNMSG BIT(1),                  /* MOVE IN UNVIEWABLE          36400002
*                                           MESSAGE                  */ 36450002
*    3 DCMSTEX  BIT(1),                  /* MOVE IN STATUS EXISTS    */ 36500002
*    3 DCMCHOPT BIT(1),                  /* MOVE IN CHANGE OPTIONS   */ 36550002
*    3 DCMELONG BIT(1),                  /* MOVE IN ENTRY TOO LONG   */ 36600002
*    3 DCMWRCDL BIT(1),                  /* MOVE IN CON=N,DEL=Y      */ 36650002
*    3 DCMDELNT BIT(1),                  /* MOVE IN DEL UNCHANGED,      36700002
*                                           NO TIMER                 */ 36750002
*    3 *        BIT(1),                  /* RESERVED                 */ 36800002
*@EJECT;                                                                36900002
*   2 DCMCMSG2    CHAR(1),               /* MSG MODULE                  36950002
*                                           COMMUNICATIONS BYTE 2    */ 37000002
*                                                                       37050002
*                                                                       37100002
*    3 DCMDLREQ BIT(1),                  /* MOVE IN DELETION            37150002
*                                           REQUESTED                */ 37200002
*    3 DCMRQINC BIT(1),                  /* MOVE IN REQUEST             37250002
*                                           INCONSISTENT             */ 37300002
*    3 DCMMSGCR BIT(1),                  /* MOVE IN INVALID CURSOR      37350002
*                                           OPERATION                */ 37400002
*    3 DCMINVOP BIT(1),                  /* MOVE IN INVALID OPERAND  */ 37450002
*    3 DCMCILLP BIT(1),                  /* MOVE IN ILLEGAL LP          37500002
*                                           OPERATION                */ 37550002
*    3 DCMDELRI BIT(1),                  /* MOVE IN DELETE REQUEST      37600002
*                                           INCONSISTANT             */ 37650002
*    3 DCMASYRT BIT(1),                  /* MOVE IN ASYN ERROR          37700002
*                                           RETRYABLE                */ 37750002
*    3 DCMASYCD BIT(1),                  /* MOVE IN ASYN ERROR MAYBE    37800002
*                                           RETRYABLE                */ 37850002
*                                                                       37900002
*                                                                       37950002
*                                                                       38000002
*                                                                       38050002
*   2 DCMCMSG3    CHAR(1),               /* MSG MODULE                  38100002
*                                           COMMUNICATIONS BYTE 3    */ 38150002
*                                                                       38200002
*                                                                       38250002
*    3 DCMCMRLL BIT(1),                  /* MOVE IN ROLL MODE           38300002
*                                           MESSAGE                  */ 38350002
*    3 DCMCDLR1 BIT(1),                  /* NO DELETABLE MESSAGES    */ 38400002
*    3 DCMCDLR2 BIT(1),                  /* INVALID RANGE            */ 38450002
*    3 DCMCDLR3 BIT(1),                  /* SEG EQU TO ZERO          */ 38500002
*    3 DCMCDLR4 BIT(1),                  /* DISPLAY NOT ON SCREEN    */ 38550002
*    3 DCMCDLR5 BIT(1),                  /* INVALID OPERAND          */ 38600002
*    3 *        BIT(1),                  /* RESERVED                 */ 38650002
*    3 DCMDTBSY BIT(1),                  /* COMMAND REJECTED - TASK     38750002
*                                           BUSY                     */ 38800002
*                                                                       38850002
*                                                                       38900002
*                                                                       38950002
*                                                                       39000002
*   2 DCMCMSG4    CHAR(1),               /* MSG MODULE                  39050002
*                                           COMMUNICATIONS BYTE 4    */ 39100002
*                                                                       39150002
*                                                                       39200002
*    3 DCMPFKNA BIT(1),                  /* MOVE IN PFK NOT             39250002
*                                           ALLOCATED FOR            */ 39300002
*    3 DCMPFKND BIT(1),                  /* MOVE IN PFK NOT DEFINED  */ 39350002
*    3 DCMPFKNO BIT(1),                  /* MOVE IN NO PFK              39400002
*                                           ALLOCATION               */ 39450002
*    3 DCMPFKIP BIT(1),                  /* MOVE IN PFK IN PROCESS   */ 39500002
*    3 *        BIT(1),                  /* RESERVED                 */ 39550002
*    3 *        BIT(1),                  /* RESERVED                 */ 39600002
*    3 *        BIT(1),                  /* RESERVED                 */ 39650002
*    3 *        BIT(1),                  /* RESERVED                 */ 39700002
*                                                                       39750002
*                                                                       39800002
*                                                                       39850002
*                                                                       39900002
*   2 DCMSVC34    CHAR(1),               /* SVC 34 COMMUNICATION        39950002
*                                           BYTE                     */ 40000002
*                                                                       40050002
*                                                                       40100002
*    3 DCMMYCMD BIT(1),                  /* COMMAND TO BE HANDLED BY    40150002
*                                           THIS CONS                */ 40200002
*    3 DCMINVLD BIT(1),                  /* INVALID K COMMAND        */ 40250002
*    3 DCMTYPE1 BIT(1),                  /* K COMMAND IS NOT            40300002
*                                           ROUTABLE                 */ 40350002
*    3 *        BIT(1),                  /* RESERVED                 */ 40400002
*    3 *        BIT(1),                  /* RESERVED                 */ 40450002
*    3 *        BIT(1),                  /* RESERVED                 */ 40500002
*    3 *        BIT(1),                  /* RESERVED                 */ 40550002
*    3 *        BIT(1),                  /* RESERVED                 */ 40600002
*                                                                       40650002
*                                                                       40700002
*   2 DCMPAD      CHAR(1),               /* RESERVED COMMUNICATION      40750002
*                                           BYTES                    */ 40752002
*   2 DCMIONDX    CHAR(1),               /* INDEX FOR SELECTING THE     40754002
*                                           APPROPRIATE IO ROUTINE   */ 40756002
*/*              4=3066,IEECVETH          8=2250,IEECVETP               40758002
*               12=2260,IEECVETR         16=3277,IEECVETU            */ 40758402
*   2 DCMTEST     FIXED(15),             /* RESERVED FOR TESTING     */ 40760002
*@EJECT;                                                                40850002
*/*                                                                  */ 40900002
*/*                      MODULE ADDRESSES                            */ 40950002
*/*                                                                  */ 41000002
*                                                                       41050002
*                                                                       41100002
*   2 DCMIORTN    PTR(31),               /* APPROIATE I/O ROUTINE    */ 41150002
*                                                                       41400002
*                                                                       41450002
*   2 DCMNPRZ     PTR(31),               /* PROCESSOR 0 LOAD ONE     */ 41550002
*   2 DCMNPROC    PTR(31),               /* PROCESSOR ROUTINE LOAD      41750002
*                                           ONE                      */ 41800002
*   2 DCMNDSP1    PTR(31),               /* DISPLAY ROUTINE 1        */ 42050002
*   2 DCMNDSP2    PTR(31),               /* DISPLAY ROUTINE 2        */ 42150002
*   2 DCMNDSP3    PTR(31),               /* DISPLAY ROUTINE 3        */ 42250002
*   2 DCMNCMD1    PTR(31),               /* COMMAND ROUTINE 1        */ 42350002
*   2 DCMNDEL1    PTR(31),               /* DELETE ROUTINE 1         */ 42550002
*   2 DCMNDEL2    PTR(31),               /* DELETE ROUTINE 2         */ 42650002
*   2 DCMNDEL3    PTR(31),               /* DELETE ROUTINE 3         */ 42750002
*   2 DCMNDEL4    PTR(31),               /* DELETE ROUTINE 4         */ 42850002
*   2 DCMNOPT1    PTR(31),               /* OPTIONS ROUTINE 1        */ 42950002
*   2 DCMNPFK1    PTR(31),               /* PFK ROUTINE 1            */ 43050002
*   2 DCMNPFK2    PTR(31),               /* PFK ROUTINE 2            */ 43150002
*   2 DCMNERRO    PTR(31),               /* ASYNCHRONOUS ERROR          43250002
*                                           ROUTINE                  */ 43300002
*   2 DCMNMSG1    PTR(31),               /* MESSAGE ROUTINE 1        */ 43400002
*   2 DCMNMSG2    PTR(31),               /* MESSAGE ROUTINE 2        */ 43500002
*   2 DCMNMSG3    PTR(31),               /* MESSAGE ROUTINE 3        */ 43550002
*   2 DCMNLPCR    PTR(31),               /* LIGHT PEN/CURSOR SERVICE    43600002
*                                           ROUTINE                  */ 43650002
*   2 DCMNOPCL    PTR(31),               /* OPEN/CLOSE ROUTINE       */ 43750002
*   2 DCMNCLN     PTR(31),               /* CLEANUP MODULE           */ 43850002
*   2 DCMNROLL    PTR(31),               /* ROLL MODE ROUTINE        */ 43950002
*   2 DCMNTIMR    PTR(31),               /* TIMER INTERPRETER           44050002
*                                           ROUTINE                  */ 44100002
*   2 DCMNINT1    PTR(31),               /* INTERFACE 1 ROUTINE      */ 44200002
*   2 DCMNINT2    PTR(31),               /* INTERFACE 2 ROUTINE      */ 44300002
*   2 DCMNINT3    PTR(31),               /* INTERFACE 3 ROUTINE      */ 44400002
*   2 DCMNINT4    PTR(31),               /* INTERFACE 4 ROUTINE      */ 44500002
*   2 DCMNINT5    PTR(31),               /* INTERFACE 5 ROUTINE      */ 44600002
*   2 DCMNINT6    PTR(31),               /* INTERFACE 6 ROUTINE      */ 44700002
*   2 DCMNINT7    PTR(31),               /* INTERFACE 7 ROUTINE      */ 44800002
*                                        /* AREA FOR DIDOCS TRACE    */ 44802002
*%DCL DCMTRLEN CHAR;                     /* TRACE MOVE LENGTH        */ 44810002
*%DCMTRLEN='30';                         /* 2 LESS THAN WHOLE AREA   */ 44820002
*   2 DCMTRACE CHAR(DCMTRLEN),           /* TO-AREA FOR TRACE MOVE   */ 44850002
*    3 *        CHAR(2),                 /* OLDEST TRACE ENTRY       */ 44900002
*    3 DCMTRAC2 CHAR(DCMTRLEN),          /* FROM-AREA FOR TRACE MOVE */ 44910002
*   2 DCMTREN1 CHAR(1),                  /* 1ST BYTE OF NEW ENTRY    */ 44950002
*   2 DCMTREN2 CHAR(1);                  /* 2ND BYTE OF NEW ENTRY    */ 45000002
*                                                                       45050002
*                                                                       45100002
*                                                                       45150002
*                                                                       45200002
*@EJECT;                                                                45300002
*/* FIRST BYTE OF SCT ENTRIES                                        */ 45350002
*DECLARE                                                                45400002
*  1 DCMSCTA CHAR(2) BASED(DCMSCTB),                                    45450002
*   2 DCMMSGWR BIT(1),             /* WTOR MESSAGE DISPLAYED IN LINE */ 45500002
*   2 DCMMSGIN BIT(1),             /* MESSAGE DISPLAYED IN LINE      */ 45550002
*   2 DCMMSGCN BIT(1),             /* MESSAGE CONTINUED ON NEXT LINE */ 45600002
*   2 DCMMSGJK BIT(1),             /* TO WRITE O-O-L DISPLAY FROM    */ 45650002
*/*                                   MAY CONTAIN JUNK (SDS INTFCE 2)*/ 45700002
*   2 DCMMSGAD BIT(1),             /* MESSAGE CAN BE AUTO DELETED    */ 45750002
*   2 DCMMSGRD BIT(1),             /* REQUEST HAS SPEC. MSG BE REMV. */ 45800002
*   2 DCMMSGIF BIT(1),             /* INFORMATIONAL MESSAGE IN LINE  */ 45850002
*   2 DCMMSGST BIT(1),             /* END OF TABLE INDICATOR         */ 45900002
*/*                                                                  */ 45950002
*/* SECOND BYTE OF SCT ENTRIES                                       */ 46000002
*   2 DCMMSGAC BIT(1),             /* ACTION MESSAGE                 */ 46050002
*   2 DCMMSGC7 BIT(1),             /* DESCRIPTOR CODE 7 MESSAGE      */ 46100002
*   2 DCMMSGDM BIT(1),             /* MESSAGE HAS BEEN DOMMED        */ 46150002
*   2 DCMMSGAR BIT(1),             /* MESSAGE IS AN ACCEPTED REPLY   */ 46200002
*   2 DCMMSGIR BIT(1),             /* INTERVENTION REQUIRED MESSAGE  */ 46250002
*   2 DCMMSGCT BIT(1),             /* CONTINUATION LINE              */ 46300002
*   2 DCMMSGPP BIT(1),             /* ISSUED BY PROBLEM PROGRAM      */ 46350002
*   2 DCMMSGCL BIT(1);             /* CONTROL LINE OF I-L MLWTO      */ 46400002
*/*                                                                  */ 46450002
*/* FIRST BYTE OF SSCT ENTRIES                                       */ 46500002
*DECLARE                                                                46550002
*  1 DCMSCTC CHAR(1) BASED(DCMSCTD),                                    46600002
*   2 DCMSECCL BIT(1),             /* CONTROL LINE OF O-O-L DISPLAY  */ 46650002
*   2 DCMSECLL BIT(1),             /* LABEL LINE OF O-O-L DISPLAY    */ 46700002
*   2 DCMSECDL BIT(1),             /* DATA LINE OF O-O-L DISPLAY     */ 46750002
*   2 DCMSECBL BIT(1),             /* THIS LINE IS BLANKED           */ 46800002
*   2 DCMSECXX BIT(1),             /* UNUSED                         */ 46850002
*   2 DCMSECYY BIT(1),             /* UNUSED                         */ 46900002
*   2 DCMSECDD BIT(1),             /* LINE RESERVED FOR DYNAMIC DISP.*/ 46950002
*   2 DCMSECST BIT(1);             /* END OF TABLE INDICATOR         */ 47000002
*DECLARE DCMEND  (*) CHAR(1)   BASED                                    47050002
*  (ADDR(DCMSTRT )+LENGTH(DCMSTRT ));                                   47100002
*                                        /* END OF DCM               */ 47150002
./  ADD  SSI=43300681,NAME=IEEUCDX
         MACRO                                                          00050001
         IEEUCDX                                                        00100001
*        7/21/71                                                        00150001
*        11/4/74,OS/VS2 RELEASE 3                              @ZM30471 00160003
* D 008500                                                     @ZM30471 00170003
*              DATA MANAGEMENT AND I/O SUPERVISOR CONTROL               00200001
*              BLOCKS FOR VMS OPERATOR CONSOLE SUPPORT                  00250001
*              FOR THE 1052 USING EXCP.                                 00300001
*                                                                       00350001
*              1052 DCB (EXCP) DEFINITION.                              00400001
****************************************************************        00450001
         DS    0D            DOUBLE WORD ALIGNMENT                      00500001
DMDCB    DCB DDNAME=IEECVTSK,MACRF=(E),DSORG=PS                         00550001
****************************************************************        00600001
         ORG                                                            00650001
         SPACE                                                          00700001
*                                                                       00750001
*                            STATUS.                                    00800001
         DC    D'0'               WORK AREA.                            00900001
         SPACE                                                          00950001
*                            1052 IOB DEFINITION.                       01000001
         DS    0D                                                       01050001
         DC    BL1'01000010'      COMMAND CHAINING,UNRELATED(42).       01100001
         DC    X'00'              2ND FLAG BYTE                         01150001
         DC    H'0'               TWO SENSE BYTES.                      01200001
         DC    F'0'          (DYNAMIC) ECB CODE AND PTR.                01250001
         DC    D'0'               CHANNEL STATUS WORD.                  01300001
         DC    F'0'          (DYNAMIC) CHANNEL PROGRAM ADDRESS          01350001
         DC    F'0'          (DYNAMIC) DCB PTR.                         01400001
         DC    F'0'               RESTART POINTER.                      01450001
         DC    H'0'               BLOCK COUNT (UNUSED)                  01500001
         DC    H'0'               ERROR COUNT (UNUSED)                  01550001
         SPACE                                                          01600001
         DS    0D            1052 CCW DEFINITIONS.                      01650001
*                            READ                                       01700001
         DC    X'0A'         READ CODE.                                 01750001
         DC    FL3'0'        DATA PTR.                                  01800001
         DC    BL1'01100000' CC,SLI.                                    01850001
         DC    X'00'                                                    01900001
         DC    FL2'1'        COUNT FIELD.                               01950001
*                            TRANSFER TO NOP.                           02000001
         DC    X'08'         TRANSFER IN CHANNEL.                       02050001
         DC    FL3'0'        (DYNAMIC) TO NOP.                          02100001
         DC    F'0'          IGNORED.                                   02150001
*                            WRITE                                      02200001
         DC    X'09'         WRITE CODE.                                02250001
         DC    FL3'0'        DATA PTR.                                  02300001
         DC    BL1'01100000' CC,SLI.                                    02350001
         DC    X'00'                                                    02400001
         DC    FL2'1'             COUNT FIELD.                          02450001
*                            NOP.                                       02500001
*                                 ACTIVE COMMANDS CHAINED TO NOP FORCES 02550001
*                                 DEVICE END AND CHANNEL END TO OCCUR   02600001
*                                 TOGETHER,AVOIDING FUTURE INTERCEPTS,  02650001
*                                 ALLOWING CURRENT ERROR CHECK.         02700001
         DC    X'03'              NOP CODE                              02750001
         DC    FL3'0'             NO DATA                               02800001
         DC    BL1'00100000'      SLI                                   02850001
         DC    X'00'                                                    02900001
         DC    FL2'1'             NON-ZERO COUNT                        02950001
*                            ALARM.                                     03000001
         DC    X'0B'              GONG CODE                             03050001
         DC    FL3'0'             NO DATA                               03100001
         DC    BL1'00100000'      SLI.                                  03150001
         DC    X'00'                                                    03200001
         DC    FL2'1'             NON ZERO COUNT                        03250001
DMLAST   EQU   *                  END.                                  03300001
DMCORE   EQU   *-DMDCB            CORE REQUIREMENT.                     03350001
         IHADCB DSORG=XE                                                03400001
         ORG                                                            03450001
         SPACE                                                          03500001
*                                                                       03550001
*                            STATUS.                                    03600001
DMX      DC    D'0'               WORK AREA.                            03650001
DMXR     EQU   0                  READ LAST.                            03700001
DMXW     EQU   4                  WRITE LAST.                           03750001
DMXE     EQU   8                  GOING LAST.                           03800001
DMX4     EQU   DMX+4              TERMINAL FLAG BYTE                    03850001
DMX4C    EQU   X'80'              CLOSE                                 03900001
DMXERR   EQU   DMX+6                                                    03950001
         SPACE                                                          04000001
*                            1052 IOB DEFINITION                        04050001
DMIOB    DS    0D                                                       04100001
DMIF1    DC    BL1'01000010'      COMMAND CHAINING,UNRELATED(42).       04150001
DMIF2    DC    X'00'              2ND FLAG BYTE                         04200001
DMISNS   DC    H'0'               TWO SENSE BYTES.                      04250001
DMIECBP  DC    F'0'          (DYNAMIC) ECB CODE AND PTR.                04300001
DMIECBK  EQU   X'7F'                         7F  ERROR FREE             04350001
DMIECBX  EQU   X'41'                         41  PERMANENT ERROR        04400001
DMIECBR  EQU   X'44'                         44  INTERCEPT RETRY        04450001
DMIUX    EQU   1                  CANCEL, UNIT EXCEPTION.               04500001
DMICSW   DC    D'0'               CHANNEL STATUS WORD.                  04550001
DMISTUS  EQU   DMICSW+4           STATUS BYTE.                          04600001
DMICPA   DC    A(DMCCW)      (DYNAMIC) CHANNEL PROGRAM ADDRESS.         04650001
DMIDCB   DC    F'0'          (DYNAMIC) DCB PTR.                         04700001
DMIRST   DC    F'0'               RESTART POINTER.                      04750001
DMIBLK   DC    H'0'               BLOCK COUNT (UNUSED)                  04800001
DMIERR   DC    H'0'               ERROR COUNT (UNUSED)                  04850001
         SPACE                                                          04900001
DMCCW    DS    0D            1052 CCW DEFINITIONS.                      04950001
*                            READ                                       05000001
DMCREAD  DC    X'0A'         READ CODE.                                 05050001
DMCRDATA DC    FL3'0'        DATA PTR.                                  05100001
DMCRFLAG DC    BL1'01100000' CC,SLI.                                    05150001
         DC    X'00'                                                    05200001
DMCRNBR  DC    FL2'1'        COUNT FIELD.                               05250001
*                            TRANSFER TO NOP.                           05300001
DMCTRA   DC    X'08'         TRANSFER IN CHANNEL.                       05350001
         DC    AL3(DMCNOP)   TO NOP.                                    05400001
         DC    F'0'          IGNORED.                                   05450001
*                            WRITE                                      05500001
DMCWRITE DC    X'09'         WRITE CODE.                                05550001
DMCWDATA DC    FL3'0'        DATA PTR.                                  05600001
DMCWFLAG DC    BL1'01100000' CC,SLI.                                    05650001
         DC    X'00'                                                    05700001
DMCWNBR  DC    FL2'1'             COUNT FIELD.                          05750001
*                            NOP.                                       05800001
*                                 ACTIVE COMMANDS CHAINED TO NOP FORCES 05850001
*                                 DEVICE END AND CHANNEL END TO OCCUR   05900001
*                                 TOGETHER,AVOIDING FUTURE INTERCEPTS,  05950001
*                                 ALLOWING CURRENT ERROR CHECK.         06000001
DMCNOP   DC    X'03'              NOP CODE                              06050001
         DC    FL3'0'             NO DATA                               06100001
         DC    BL1'00100000'      SLI                                   06150001
         DC    X'00'                                                    06200001
         DC    FL2'1'             NON-ZERO COUNT                        06250001
*                            ALARM.                                     06300001
DMCGONG  DC    X'0B'              GONG CODE                             06350001
         DC    FL3'0'             NO DATA                               06400001
         DC    BL1'00100000'      SLI.                                  06450001
         DC    X'00'                                                    06500001
         DC    FL2'1'             NON ZERO COUNT                        06550001
         MEND                                                           06600001
./  ADD  SSI=30121687,NAME=IEEZB800
*        % GO TO STCPLS;          /*                                    00050002
         MACRO                                                          00100002
         IEEZB800                                                       00150002
*                                                                       00200002
*  STARTED TASK CONTROL INTERNAL PARAMETER AREA MAPPING                 00250002
*    -MAPS INTERFACE BETWEEN IEEVSTAR OR IEEVMNT1 AND IEEVJCL           00300002
*                                                                       00350002
STCPARM  DSECT                                                          00400002
STCBEGIN EQU   *                                                        00450002
STCSPNUM DS    X                  SUBPOOL NUMBER OF THIS PARM AREA      00500002
STCLEN   DC    AL3(STCSIZE)       PARAMETER AREA LENGTH                 00550002
STCASCB  DS    A                  ASCB POINTER                   Y02669 00600002
STCSDT   DS    A                  SDT POINTER                           00650002
STCRESV  DS    F                  RESERVED                              00700002
STCSIZE  EQU   *-STCBEGIN         PARAMETER AREA LENGTH                 00750002
         MEND                     */                                    00800002
* % STCPLS:;                                                            00850002
* /*                                                                 */ 00860002
* /*  STARTED TASK CONTROL INTERNAL PARAMETER AREA MAPPING           */ 00900002
* /*    -MAPS INTERFACE BETWEEN IEEVSTAR OR IEEVMNT1 AND IEEVJCL     */ 00950002
* /*                                                                 */ 01000002
*  DCL   1     STCPARM   BASED(STCPTR),                                 01050002
*          2   STCSPNUM  PTR(8),  /* SUBPOOL NUMBER OF THIS PARM AREA*/ 01100002
*          2   STCLEN    PTR(24), /* PARAMETER AREA LENGTH           */ 01150002
*          2   STCASCB   PTR(31), /* ASCB POINTER                    */ 01200002
*          2   STCSDT    PTR(31), /* SDT POINTER                     */ 01250002
*          2   STCRESV  FIXED(31);/* RESERVED                        */ 01300002
./  ADD  SSI=30121688,NAME=IEEZB801
*        % GO TO SWAEPLS;         /*                                    00050002
         MACRO                                                          00100002
         IEEZB801                                                       00150002
*                                                                       00200002
*  SWA ENVIRONMENT INITIALIZATION MAPPING                               00250002
*                                                                       00300002
*        MAPS THE PARAMETER LIST PASSED TO ROUTINE IEESB601             00350002
*        FOR CREATING OR DELETING A SWA, TIOT, JSCB CONTROL             00400002
*        BLOCK ENVIRONMENT.                                             00450002
*                                                                       00500002
SWAE     DSECT                                                          00550002
SWBEGIN  EQU   *                                                        00600002
SWOPTION DS    X                  OPTIONS FIELD THAT INDICATES          00650002
*                                 THE SERVICES TO BE PERFORMED.         00700002
SWCREATE EQU   X'80'              BUILD A CONTROL BLOCK STRUCTURE.      00750002
*                                 THIS OPTION MAY NOT BE SET WITH       00800002
*                                 ANY OF THE FOLLOWING OPTIONS.         00850002
         SPACE                                                          00900002
*                                                                       00950002
*  THE SETTING OF THE FOLLOWING 3 OPTIONS RESULT IN THE RESTORATION     01000002
*  OF THE ENVIRONMENT THAT EXISTED BEFORE IEESB601 WAS CALLED WITH      01050002
*  THE 'SWCREATE' OPTION.  ANY OR ALL OF THE FOLLOWING OPTIONS MAY      01100002
*  BE SET.                                                              01150002
*                                                                       01200002
SWDELETE EQU   X'40'              DELETE THE SWA ENVIRONMENT            01250002
SWRSTIOT EQU   X'20'              RESET CURRENT TIOT STRUCTURE          01300002
SWRSJSCB EQU   X'10'              RESET CURRENT JSCB STRUCTURE          01350002
SWRESV1  EQU   X'0F'              RESERVED OPTIONS                      01400002
SWRESV2  DS    3X                 RESERVED                              01450002
SWJOBNAM DS    A                  POINTER TO JOBNAME IF 'SWCREATE'      01500002
*                                 OPTION - OTHERWISE ZEROS              01550002
SWSTEPNM DS    A                  POINTER TO STEPNAME IF 'SWCREATE'     01600002
*                                 OPTION - OTHERWISE ZEROS              01650002
SWTIOTPT DS    A                  POINTER TO WORD CONTAINING            01700002
*                                 THE TIOT POINTER                      01750002
SWJSCBPT DS    A                  POINTER TO WORD CONTAINING            01800002
*                                 THE JSCB POINTER                      01850002
SWSIZE   EQU   *-SWBEGIN          SWAE SIZE                             01900002
         MEND                     */                                    01950002
*% SWAEPLS:;                                                            02000002
*  /*                                                                */ 02050002
*  /*  SWA ENVIRONMENT INITIALIZATION MAPPING -                      */ 02100002
*  /*                                                                */ 02150002
*  /*    MAPS THE PARAMETER LIST PASSED TO ROUTINE IEESB601          */ 02200002
*  /*    FOR CREATING OR DELETING A SWA, TIOT, JSCB CONTROL          */ 02250002
*  /*    BLOCK ENVIRONMENT.                                          */ 02300002
*  /*                                                                */ 02350002
*   DCL  1     SWAE     BASED(SWAEPTR),                                 02400002
*          2   SWOPTION BIT(8),   /* OPTIONS FIELD THAT INDICATES       02450002
*                                    THE SERVICES TO BE PERFORMED    */ 02500002
*            3 SWCREATE BIT(1),   /* BUILD A CONTROL BLOCK STRUCTURE.   02550002
*                                    THIS OPTION MAY NOT BE SET WITH    02600002
*                                    ANY OF THE FOLLOWING OPTIONS.   */ 02650002
*            /*  THE SETTING OF THE FOLLOWING 3 OPTIONS RESULT IN       02700002
*                THE RESTORATION OF THE ENVIRONMENT THAT EXISTED        02750002
*                BEFORE IEESB601 WAS CALLED WITH THE 'SWCREATE'         02800002
*                OPTION.  ANY OR ALL OF THE FOLLOWING OPTIONS MAY       02850002
*                BE SET.                                             */ 02900002
*            3 SWDELETE BIT(1),   /* DELETE THE SWA ENVIRONMENT      */ 02950002
*            3 SWRSTIOT BIT(1),   /* RESET CURRENT TIOT STRUCTURE    */ 03000002
*            3 SWRSJSCB BIT(1),   /* RESET CURRENT JSCB STRUCTURE    */ 03050002
*            3 *        BIT(4),   /* RESERVED OPTIONS                */ 03100002
*          2   *        PTR(24),  /* RESERVED                        */ 03150002
*          2   SWJOBNAM PTR(31),  /* POINTER TO JOBNAME IF 'SWCREATE'   03200002
*                                    OPTION - OTHERWISE ZEROS        */ 03250002
*          2   SWSTEPNM PTR(31),  /* POINTER TO STEPNAME IF 'SWCREATE'  03300002
*                                    OPTION - OTHERWISE ZEROS        */ 03350002
*          2   SWTIOTPT PTR(31),  /* POINTER TO WORD CONTAINING         03400002
*                                    THE TIOT POINTER                */ 03450002
*          2   SWJSCBPT PTR(31);  /* POINTER TO WORD CONTAINING         03500002
*                                    THE JSCB POINTER                */ 03550002
./  ADD  SSI=61280624,NAME=IEEZB906
 /********************************************************************/ 00050041
 /* IEEZB906                                                         */ 00090041
 /*           MACCOMP - SC1CM                                        */ 00130041
 /*           MACSTAT - AG17SP2F                                     */ 00170041
 /*           MACMEAN - INTERFACE TO IEECB906                        */ 00210041
 /*                                                                  */ 00250041
 /*      THIS MACRO MAPS THE INTERFACE TO IEECB906. IEECB906 IS THE  */ 00290041
 /*      ESTAE ROUTINE FOR SLIP COMMAND PROCESSORS IEECB905 AND      */ 00330041
 /*      IEECB907 (DISPLAY SLIP).                                    */ 00370041
 /********************************************************************/ 00410041
     DCL 1 SESTAE BASED(*),                                             00550041
           2 SESTFLG,                                                   00600041
             3 SESTSLP BIT(1),        /* ESTAE COVERS SLIP COMMAND   */ 00650041
             3 SESTDSLP BIT(1),       /* ESTAE COVERS DISPLAY SLIP   */ 00690041
             3 SESTSEQ BIT(1),        /* SHDRSEQ BYTE HELD BY PROC   */ 00730041
             3 SESTSET BIT(1),        /* SLIP SET COMMAND ENTERED    */ 00770041
             3 SESTMOD BIT(1),        /* SLIP MOD COMMAND ENTERED    */ 00810041
             3 SESTDEL BIT(1),        /* SLIP DEL COMMAND ENTERED    */ 00850041
             3 SESTCHN BIT(1),        /* SCE CHAIN BEING SCANNED     */ 00890041
             3 * BIT(1),                                                01000041
           2 SESTFLG2,                                                  01050041
             3 SEST503D BIT(1),       /* IEE0503D MUST BE DELETED    */ 01100041
             3 SESTVTSL BIT(1),       /* IEAVTSLP MUST BE DELETED    */ 01140041
             3 *        BIT(6),       /* RESERVED                    */ 01180041
           2 *          CHAR(2),      /* RESERVED                    */ 01220041
           2 SESTCSCB   PTR(31),      /* ADDR OF CSCB TO BE FREED    */ 01260041
           2 SESTSHDR   PTR(31),      /* ADDR OF SHDR TO BE FREED    */ 01300041
           2 SESTSCE    PTR(31),      /* ADDR OF SCE TO BE FREED     */ 01340041
           2 SESTWTOI   CHAR(4),      /* WTOID - ISSUE ENDLINE       */ 01500041
           2 SESTSCAN   PTR(31);      /* ADDR OF SCE CURRENTLY BEING    01550041
                                         SCANNED WHILE SCANNING THE     01600041
                                         SCE CHAIN                   */ 01650041
./  ADD  SSI=80240052,NAME=IEFCVRWA
*%GOTO CNVPROLG;                                                        00200002
         MACRO                                                          00400002
         IEFCVRWA                                                       00600002
*                                                                       00800002
*%CNVPROLG:;                                                            01000002
*/*                                                                     01200002
*   MACMEAN  IEFCVRWA MEANS CONVERTER WORK AREA                         01400002
*   MACCOMP  Y-2  SC1B9/PZD02                                  @G16APPK 01600003
*   MACSTAT  Y-2  76323/G16APPK                                @G16APPK 01650003
*            REL 037 MERGE SU4,10,16 CODE TO BASE PTF          @ZA27750 01700003
*                                                                       02000002
*********************************************************************** 02200002
*                                                                     * 02400002
*   IEFCVRWA MAPS DATA FIELDS AND SWITCHES UNIQUE TO THE CONVERTER.   * 02600002
*   IT MUST BE INVOKED IMMEDIATELY FOLLOWING IEFCOMWA, TO INSURE      * 02800002
*   CORRECT ADDRESSABILITY. REGISTER 12 IS THE BASE REGISTER ACROSS   * 03000002
*   THE ENTIRE WORK AREA MAPPED BY BOTH IEFCOMWA AND IEFCVRWA.        * 03200002
*   THEREFORE DISPLACEMENTS FOR THE CONVERTER WORK AREA MUST BE A     * 03400002
*   CONTINUATION OF THOSE FOR THE COMMON WORK AREA.                   * 03600002
*                                                                     * 03800002
*   THIS MACRO IS NEW FOR VS2/RELEASE 2.                        Y02668* 04000002
*                                                                     * 04200002
* STATUS - VS2 SU16 - IN THIS MACRO, SU 16 SUPPORTS           @G16APPK* 04240003
*          VPSS SUPPORT (SU 29 - @G29AN2E).                   @G16APPK* 04280003
*          MERGE SU4,10,16 CODE TO 037 BASE                   @ZA28955* 04320003
*                                                                     * 04360003
*********************************************************************** 04400002
**/                                                                     04600002
*%GOTO CNVWAPLS;                                                        04800002
*/*                                                                     05000002
*                                                                       05200002
CVRWA    DS    0F                  START OF CONVERTER WORK AREA. Y02668 05400002
*                                                                       05600002
*  POINTERS, WORK AND DATA AREAS.                                       05800002
*                                                                       06000002
PDCBP    DS    F                        PROCLIB DCB OR NOTED TTR        06200002
IWAINTS3 DS    F                   PTR TO EXIT LIST ACCT ENTRY     AABA 06400002
IWAINTS4 DS    F                   PTR TO BLOCKED PROCLIB BUFFER   AABA 06600002
CWABPROC EQU   IWAINTS4                                                 06800002
IWAINTS5 DS    F                   PTR TO JOB MNGMT RECORD         AABA 07000002
CWATXTEX DS    F                   PTR TO TEXT EXIT RTNE ADDR.          07200002
RSTMT    DS    F                        PTR TO RDR STMT                 07400002
         DS    CL1                      VERB #                          07600002
*                                          NULL=0                       07800002
*                                          JOB=1                        08000002
*                                          EXEC=2                       08200002
*                                          DD=4                         08400002
*                                          PROC=8                  AAAA 08600002
SSE      EQU   128                         DD STMT SEQUENCE ERROR       08800002
CRE      EQU   64   BIT 1         MISPLACED SYSCHK DD STMT         AACA 09000002
         DS    CL1                      NAME LENGTH                     09200002
         DS    CL1                      RELATIVE LIST PTR               09400002
         DS    CL1                 RESERVED.                            09600002
PSTMT    DS    2F                       SAME AS RDR PARM LIST           09800002
VERB     EQU   4                        OFFSET FOR VERB BYTE            10000002
NAMEL    EQU   5                        OFFSET FOR NAME LENGTH          10200002
LISTPTR  EQU   6                        OFFSET FOR REL LIST PTR         10400002
*                                  PROCLIB MERGE CONTROL DATA           10600002
PDNM     DS    CL8                      PROC DD NAME            YM02703 10800002
PSNM     DS    CL8                      PROC STEP NAME          YM02703 11000002
RDNM     DS    CL8                      RDR DD NAME             YM02703 11200002
RSNM     DS    CL8                      RDR STEP NAME           YM02703 11400002
PPSN     DS    CL8                      PREVIOUS PROC STEP NAME YM02703 11600002
IWAPARM  DS    F   ADDRESS OF THE PARAMETER LIST USED FOR          O106 11800002
*                     PROCESSING IN-LINE PROCEDURES                O106 12000002
*                     SET AND USED BY IEFVINA AND IEFVEA           O106 12200002
DREFB    DS    CL176        SYMBOLIC PARAMETER TABLE             Y02668 12400002
IWAJOBS5 DS    F                   CHKP/REST - PTR TO SYSCHK DD    AAAA 12600002
IWAWKBF  DS    F   ADDRESS OF THE WORK AREA GOTTEN BY IEFVHCB      O106 12800002
IWASTAPL DS    F         POINTER TO R/I STAE PARAMETER LIST      A39047 13000002
CWAJMRPT DS    F                   POINTER TO JMR.                      13200002
IWANELJC DS    F         NEL JCL POINTER FIELD.                    I272 13400002
*                        STORED BY IEFVH1. USED BY IEFVFA FOR      I272 13600002
*                            INPUT TO POST SCAN ROUTINE            I272 13800002
TBEGP    DS    F                        TEXT BEGIN POINTER              14000002
TKEYP    DS    F                        TEXT KEY POINTER                14200002
TNUMP    DS    F                        TEXT NUMBER POINTER             14400002
TLENP    DS    F                        TEXT LENGTH POINTER             14600002
TENDP    DS    F                        TEXT END POINTER                14800002
AODSPCSA DS    F                   SAVE RETURN REGISTER IN VFA.  Y02668 15000002
AOFDTMP1 DS    F                   ADDR OF SPECIAL FIND ROUTINE. Y02668 15200002
AOKSCHSA DS    8F                  AOKSRCHR REG SAVE AREA.       Y02668 15400002
AOGACSA  EQU   AOKSCHSA            GET AND CLEAR RTNE SAVE AREA. Y02668 15600002
*                                                                Y02668 15800002
AOKSR1SA DS    2F                  AOKSR1 REG SAVE AREA.         Y02668 16000002
AOHEBSA  DS    F                   VHEB RETURN REG SAVE AREA.    Y02668 16200002
AODFLTSA DS    7F                  AODFAULT REG SAVE AREA.       Y02668 16400002
AOBSKSA  DS    F                   AOBASEKY REG SAVE AREA.       Y02668 16600002
CWASAVPT DS    F                   PTR TO SAVE AREA OF CVR'S     Y02668*16800002
                                   CALLER - ALSO USED BY         Y02668*17000002
                                   SUBSYSTEM AT TEXT EXIT.       Y02668 17200002
AOFDPCSV DS    CL8                 PROCEDURE NAME.               Y02668 17400002
AOSCHKYS DS    CL8                 LIST OF KEYS FOR AOKSRCHR.    Y02668 17600002
IWABPAM  DS    CL3                 BPAM ACCESS METHOD ADDRESS M3739O106 17800002
*                       SET AND USED BY IEFVEA FOR PROCESSING      O106 18000002
*                       IN-LINE PROCEDURES                         O106 18200002
*                                                                       18400002
AOKSRPRM DS    CL3                 AOKSR1 PARM LIST.             Y02668 18600002
AOKSRNBR EQU   AOKSRPRM            NUMBER OF PARAMS THIS KEYWORD.Y02668 18800002
AOKSRSCT EQU   AOKSRPRM+1          LENGTH OF PARAM OR SUBLIST CT.       19000002
AOKSRBY3 EQU   AOKSRPRM+2          LENGTH OF PARAM IF AOKSRCT IS Y02668*19200002
                                   A SUBLIST COUNT.              Y02668 19400002
IWANLRC  DS    H                   NUMBER RECORDS (BLOCKED PROC)   AABA 19600002
CURLE    DS    H                        CURRENT LEVEL                   19800002
LASLE    DS    H                        LAST LEVEL                      20000002
AOSTRLTH DS    H                   LENGTH OF TEXT STRING.        Y02668 20200002
IWAWRNMS DS    CL1                 WARNING MESSAGE CODE.         Y02668 20400002
CWACHIDL DS    CL1                 CHECKID LENGTH.               Y02668 20600002
*                                                                       20800002
*  SWITCH BYTES.                                                        21000002
*                                                                       21200002
IWAJMSGL DS    CL1                 MSGLEVEL VALUE.               Y02668 21400002
AOMSGLV0 EQU   X'00'               BIT SETTING FOR MSGLEVEL=1.   Y02668 21600002
AOMSGLV1 EQU   X'10'               BIT SETTING FOR MSGLEVEL=1.   Y02668 21800002
AOMSGLV2 EQU   X'20'               BIT SETTING FOR MSGLEVEL=2.   Y02668 22000002
*                                                                       22200002
AOSW2    DS    CL1                 SWITCH BYTE.                         22400002
AOSWAWRT EQU   X'80'         SWA WRITE DONE FOR SYMBOLIC DICT  @ZA05366 22450003
AOPROCNM EQU   X'08'               PROCNAME POSITIONAL ON EXEC.  Y02668 22600002
AOSW3    DS    CL1                                               Y02668 22800002
AOBTCHSW EQU   X'01'               RETURN TO VHA FLAG.           Y02668 23000002
AOFDPCL  DS    CL1                 LENGTH OF PROCEDURE NAME.     Y02668 23200002
IWAEXTS  DS    CL1            SPECIAL CALLER EXITS                I171  23400002
IWASFIND EQU   2                        BIT-6 SPECIAL PROCLIB FINDI171  23600002
IWAFINDP DS    CL3                      ENTRY POINT FOR 'FIND' ISSI171  23800002
*                                       FOR SPECIAL PROCLIB ACCESSI171  24000002
OSW2     DS    CL1                 OPTION SWITCHES FROM PARM FIELD      24200002
CMAUTH   EQU   3                        BITS-6,7 COMMAND AUTHORIZATION  24400002
SWA      DS    CL1                 SWITCH A                             24600002
JTOP     EQU   128                      BIT-0  JOB TO PROCESS           24800002
JHS      EQU   64                       BIT-1 JOB HAS A STEP            25000002
EOFR     EQU   2                        BIT-6 EOF RECEIVED              25200002
DLM      EQU   1                        BIT-7 DLM KWD SPECIFIED YM03459 25300002
SWB      DS    CL1                 SWITCH B                             25400002
CXP      EQU   128                      BIT-0 CONTINUATION EXP BY SCAN  25600002
CXPN     EQU   64                       BIT-1 CONT EXP & NOT RECEIVED   25800002
CXPC     EQU   32                       BIT-2 CONT EXP & CANCELLED      26000002
CXPOP    EQU   16                       BIT-3 CONT EXP FOR              26050003
*                                       OPERAND FIELD          @ZA12458 26100003
FRCV     EQU   2                        BIT-6 1ST STMT RECEIVED         26200002
SWC      DS    CL1                 SWITCH C                             26400002
IOERR    EQU   64                       BIT-1 I/O ERROR ON INPUT        26600002
NRCV     EQU   32                       BIT-2 RDR NULL RECEIVED         26800002
PEXP     EQU   16                       BIT-3 PROCEDURE EXEC STMT EXPEC 27000002
SWD      DS    CL1                 SWITCH D                             27200002
FEXRCV   EQU   32                       BIT-2 1ST EXEC RCVD THIS JOB    27400002
SYMPRC   EQU   1                        BIT-7 FIRST ACCESS OF PROC AAAA 27600002
SWV      DS    CL1           SCAN SWITCHES     288               A24895 27800002
*                  THIS BYTE OF SWITCHES MOVED FROM SWA TO GIVE  A24895 28000002
*                            IT LIFE ACROSS CALLS OF IEFVFB.     A24895 28200002
OVKEYSWZ EQU   SWV           IF ON, THIS KEY OVERRIDDEN  187     A24895 28400002
OVKEYSW  EQU   128                                               A24895 28600002
PROCERRZ EQU   SWV           IF ON, ERROR THIS STATEMENT  187    A24895 28800002
PROCERR  EQU   64                                                A24895 29000002
VERBCSWZ EQU   SWV           187                                 A24895 29200002
VERBCSW  EQU   32                                                A24895 29400002
FBFLUSHZ EQU   SWV           SYMBOLIC PARM FLUSH INDICATOR       A24895 29600002
FBFLUSH  EQU   16                                                A24895 29800002
AMPSWZ   EQU   SWV           IF ON,TEXT DEFINES A SYMBOLIC PARM  A24895 30000002
AMPSW    EQU   8                                                 A24895 30200002
FBLITRLZ EQU   SWV    IF ON, TEXT IS LITERAL(ENCLOSED IN QUOTES) A24895 30400002
FBLITRL  EQU   4                                                 A24895 30600002
FPRNSWZ  EQU   SWV           IF ON, INDICATES LEFT PAREN         A24895 30800002
FPRNSW   EQU   2                                                 A24895 31000002
LPBYSWZ  EQU   SWV           IF ON, BYPASS LEFT PAREN CHECK      A24895 31200002
LPBYSW   EQU   1                                                 A24895 31400002
CLEARVZ  EQU   SWV           187                                 A24895 31600002
CLEARV   EQU   OVKEYSW+PROCERR+VERBCSW+FBFLUSH+AMPSW+FBLITRL+FPRNSW 895 31800002
*                                  PROC STATEMENT PARAM LIST            32000002
CRSW1    DS    CL1                CHECKPOINT RESTART SWITCHES      AACA 32200002
CPFLG    EQU   128  BIT 0         GET/FREE SYSCHK DD STMT CORE     AACA 32400002
CRRES1   EQU   16   BIT 3         RESERVED                         AACA 32600002
         DS    CL1                 RESERVED                      Y02668 32800002
SYMTTR   DS    F                   TTR OF FIRST SYMBUF                  33000002
IWANELEN DS    CL1      LENGTH OF NEL,SET BY IEFVH1,USED BY             33200002
*                           IEFVH2,IEFVHN,ETC.                          33400002
*                                                                       33600002
SWY      DS    CL1                 SCAN SWITCHES                        33800002
SWZ      DS    CL1                 CONTROL AND SCAN JOINT SWITCHES      34000002
CMT      EQU   128                      COMMENT SWITCH                  34200002
DDOV     EQU   64                       DD OVERRIDE SWITCH              34400002
ENDS     EQU   32                       END SCAN SWITCH                 34600002
COLST    EQU   16                       COLUMN 72 SWITCH                34800002
JOBSW    EQU   8                        JOB SWITCH                      35000002
EXECSW   EQU   4                        EXEC SWITCH                     35200002
DDSW     EQU   2                        DD SWITCH                       35400002
SNPSW    EQU   1                        STATEMENT SYSOUT SWITCH.        35600002
RCHAR1   DS    CL1                 RESERVED                     YM00373 35640002
CWALINK  DS    F                   PTR TO TEXT EXIT LINK AREA   YM00373 35680002
CWALINKL DS    F                   LTH OF LINK AREA             YM00373 35720002
CWAPSENM DS    CL8                 POST SCAN EXIT NAME          YM00373 35760002
CDAUTHWA DS    F                   COMD AUTH CONVERSION WK AREA.YM02718 35765002
SSNMWA   DS    F                   WORKAREA FOR SSNAME         @G29AN2E 35770003
RBLOCK   DS    19F                 BLOCK OF UNNAMED RES'D WDS.  YM02718 35771003
RFULLA   DS    F                   RESERVED                     YM02718 35775002
RFULLB   DS    F                   RESERVED                     YM02718 35780002
RFULLC   DS    F                   RESERVED                     YM02718 35785002
RFULLD   DS    F                   RESERVED                     YM02718 35790002
RFULLE   DS    F                   RESERVED                     YM02718 35795002
*          ********************************************************     35800002
*          *                                                      *     36000002
*          *             END OF CONVERTER WORK AREA.              *     36200002
*          *                                                      *     36400002
*          ********************************************************     36600002
*                                                                       36800002
CVRWAEND DS    0C                                               YM00373 37000002
CVRWALTH EQU   CVRWAEND-CVRWA      LTH OF CVR WORK AREA.         Y02668 37200002
WALTH    EQU   CVRWAEND-COMWA      LTH OF CVR+COMMON WORK AREAS. Y02668 37400002
         MEND                                                           37600002
**/                                                                     37800002
*%CNVWAPLS:;                                                            38000002
*DCL                                                                    38200002
* 1 CVRWA BASED(ADDR(COMWA)+LENGTH(COMWA)) BDY(WORD),        /*Y02668*/ 38400002
*                                                                       38600002
*/*  POINTERS, WORK AND DATA AREAS                             Y02668*/ 38800002
*                                                                       39000002
*   2 PDCBP    PTR(31),      /* PROCLIB DCB OR NOTED TTR       Y02668*/ 39200002
*   2 IWAINTS3 PTR(31),      /* PTR TO EXIT LIST ACCT ENTRY    Y02668*/ 39400002
*   2 IWAINTS4,              /*                                Y02668*/ 39600002
*     3 CWABPROC PTR(31),    /* PTR TO BLOCKED PROCLIB BUFFER  Y02668*/ 39800002
*   2 IWAINTS5 PTR(31),      /* PTR TO JOB MNGMT RECORD        Y02668*/ 40000002
*   2 CWATXTEX PTR(31),      /* PTR TO TEXT EXIT RTNE ADDRESS  Y02668*/ 40200002
*   2 RSTMT,                 /*                                Y02668*/ 40400002
*     3 RSTMTPTR PTR(31),    /* PTR TO RDR STMT                Y02668*/ 40600002
*     3 VERB,                /* VERB #                         Y02668*/ 40800002
*       4 SSE      BIT(1),   /* DD STMT SEQUENCE ERROR         Y02668*/ 41000002
*       4 CRE      BIT(1),   /* MISPLACED SYSCHECK DD STMT     Y02668*/ 41200002
*       4 *        BIT(6),   /* NULL=0 JOB=1 EXEC=2 DD=4 PROC=8Y02668*/ 41400002
*     3 NAMEL    FIXED(8),   /* LENGTH OF NAME                 Y02668*/ 41600002
*     3 LISTPTR  FIXED(8),   /* RELITIVE LIST POINTER          Y02668*/ 41800002
*     3 *        CHAR(1),    /* UNUSED                         Y02668*/ 42000002
*   2 PSTMT,                 /*                                Y02668*/ 42200002
*     3 STMTPTRP PTR(31),    /* PTR TO RDR STMT                Y02668*/ 42400002
*     3 VERBP,               /* VERB #                         Y02668*/ 42600002
*       4 SSEP     BIT(1),   /* DD STMT SEQUENCE ERROR         Y02668*/ 42800002
*       4 CREP     BIT(1),   /* MISPLACED SYSCHECK DD STMT     Y02668*/ 43000002
*       4 *        BIT(6),   /* NULL=0 JOB=1 EXEC=2 DD=4 PROC=8Y02668*/ 43200002
*     3 NAMELP   FIXED(8),   /* LENGTH OF NAME                 Y02668*/ 43400002
*     3 LISTPTRP FIXED(8),   /* RELITIVE LIST POINTER          Y02668*/ 43600002
*     3 *        CHAR(1),    /* UNUSED                         Y02668*/ 43800002
*                                                                       44000002
*/*  PROCLIB MERGE CONTROL DATA                                Y02668*/ 44200002
*                                                                       44400002
*   2 PDNM     CHAR(8),      /* PROC DD NAME                   Y02668*/ 44600002
*   2 PSNM     CHAR(8),      /* PROC STEP NAME                 Y02668*/ 44800002
*   2 RDNM     CHAR(8),      /* RDR DD NAME                    Y02668*/ 45000002
*   2 RSNM     CHAR(8),      /* RDR STEP NAME                  Y02668*/ 45200002
*   2 PPSN     CHAR(8),      /* PREVIOUS PROC STEP NAME        Y02668*/ 45400002
*   2 IWAPARM  PTR(31),      /* ADDRESS OF PARAMETER LIST USED Y02668*/ 45600002
*                            /* FOR PROCESSING IN-LINE PROCS   Y02668*/ 45800002
*   2 DREFB    CHAR(176) BDY(WORD), /* SYSMOLIC PARM TABLE     Y02668*/ 46000002
*   2 IWAJOBS5 PTR(31),      /* CHKP/REST - PTR TO SYSCHK DD   Y02668*/ 46200002
*   2 IWAWKBF  PTR(31),      /* PTR TO VHCB WORK AREA          Y02668*/ 46400002
*   2 IWASTAPL PTR(31),      /* PTR TO STAE PARAMETER LIST     Y02668*/ 46600002
*   2 CWAJMRPT PTR(31),      /* PTR TO JMR                     Y02668*/ 46800002
*   2 IWANELJC PTR(31),      /* PTR TO NEL JCL FIELD. PST/SCAN Y02668*/ 47000002
*   2 TBEGP    PTR(31),      /* TEXT BEGIN POINTER             Y02668*/ 47200002
*   2 TKEYP    PTR(31),      /* TEXT KEY POINTER               Y02668*/ 47400002
*   2 TNUMP    PTR(31),      /* TEXT NUMBER POINTER            Y02668*/ 47600002
*   2 TLENP    PTR(31),      /* TEXT LENGTH POINTER            Y02668*/ 47800002
*   2 TENDP    PTR(31),      /* TEXT END POINTER               Y02668*/ 48000002
*   2 AODSPCSA PTR(31),      /* SAVE RETURN REGISTER IN VFA    Y02668*/ 48200002
*   2 AOFDTMP1 PTR(31),      /* ADDR OF SPECIAL FIND ROUTINE   Y02668*/ 48400002
*   2 AOKSCHSA,              /* AOKSRCHR REG SAVE AREA.        Y02668*/ 48600002
*     3 AOGACSA  CHAR(32),   /* GET AND CLEAR RTNE SAVE AREA   Y02668*/ 48800002
*   2 AOKSR1SA CHAR(8),      /* AOKSR1 REG SAVE AREA           Y02668*/ 49000002
*   2 AOHEBSA  PTR(31),      /* VHEB RETURN REG SAVE AREA      Y02668*/ 49200002
*   2 AODFLTSA CHAR(28),     /* AODFAULT REG SAVE AREA         Y02668*/ 49400002
*   2 AOBSKSA  PTR(31),      /* AOBASEKY REG SAVE AREA         Y02668*/ 49600002
*   2 CWASAVPT PTR(31),      /* PTR TO SAVE AREA OF CVR'S      Y02668*/ 49800002
*                            /* CALLER - ALSO USED BY SUBSYSTEMY02668*/ 50000002
*                            /* AT TEXT EXIT                   Y02668*/ 50200002
*   2 AOFDPCSV CHAR(8),      /* PROCEDURE NAME                 Y02668*/ 50400002
*   2 AOSCHKYS CHAR(8),      /* LIST OF KEYS FOR AOKSRCHR      Y02668*/ 50600002
*   2 IWABPAM  CHAR(3),      /* BPAM ACCESS METHOD ADDRESS SET Y02668*/ 50800002
*                            /* AND USED BY IEFVEA FOR         Y02668*/ 51000002
*                            /* PROCESSING IN-LINE PROCEDURES  Y02668*/ 51200002
*                                                                       51400002
*   2 AOKSRPRM,              /* AOKSR1 PARM LIST               Y02668*/ 51600002
*     3 AOKSRNBR CHAR(1),    /* NUMBER OF PARMS IN KEYWORD     Y02668*/ 51800002
*     3 AOKSRSCT CHAR(1),    /* LENGTH OF PARM OR SUBLIST CNT  Y02668*/ 52000002
*     3 AOKSRBY3 CHAR(1),    /* LENGTH OF PARM IF AOKSRCT IS A Y02668*/ 52200002
*                            /* SUBLIST COUNT                  Y02668*/ 52400002
*   2 IWANLRC  FIXED(15),    /* NUMBER OF RECORDS (BLKED PROC) Y02668*/ 52600002
*   2 CURLE    FIXED(15),    /* CURRENT LEVEL                  Y02668*/ 52800002
*   2 LASLE    FIXED(15),    /* LAST LEVEL                     Y02668*/ 53000002
*   2 AOSTRLTH FIXED(15),    /* LENGTH OF TEXT STRING          Y02668*/ 53200002
*   2 IWAWRNMS CHAR(1),      /* WARNING MESSAGE CODE           Y02668*/ 53400002
*   2 CWACHIDL CHAR(1),      /* CHECKID LENGTH                 Y02668*/ 53600002
*                                                                       53800002
*/*  SWITCH BYTES                                              Y02668*/ 54000002
*                                                                       54200002
*   2 IWAJMSGL CHAR(1),      /* MSGLEVEL VALUE                 Y02668*/ 54400002
*                            /* '00'X FOR MSGLEVEL=1           Y02668*/ 54600002
*                            /* '10'X FOR MSGLEVEL=1           Y02668*/ 54800002
*                            /* '20'X FOR MSGLEVEL=2           Y02668*/ 55000002
*   2 AOSW2,                 /* SWITCH BYTE                    Y02668*/ 55200002
*     3 AOSWAWRT BIT(1),     /* SYMBOLIC DICTIONARY WRITTEN  @ZA05366*/ 55400003
*     3 *        BIT(3),     /* UNUSED                       @ZA05366*/ 55450003
*     3 AOPROCNM BIT(1),     /* PROCNAME POSITIONAL ON EXEC    Y02668*/ 55600002
*     3 *        BIT(3),     /* UNUSED                         Y02668*/ 55800002
*   2 AOSW3,                 /* SWITCH BYTE                    Y02668*/ 56000002
*     3 *        BIT(7),     /* UNUSED                         Y02668*/ 56200002
*     3 AOBTCHSW BIT(1),     /* RETURN TO VHA FLAG             Y02668*/ 56400002
*   2 AOFDPCL  CHAR(1),      /* LENGTH OF PROCEEDURE NAME      Y02668*/ 56600002
*   2 IWAEXTS,               /* SPECIAL CALLER EXITS           Y02668*/ 56800002
*     3 *        BIT(6),     /* UNUSED                         Y02668*/ 57000002
*     3 IWASFIND BIT(1),     /* BIT-6 SPECIAL PROCLIB FIND     Y02668*/ 57200002
*     3 *        BIT(1),     /* UNUSED                         Y02668*/ 57400002
*   2 IWAFINDP CHAR(3),      /* ENTRY POINT FOR 'FIND'FOR      Y02668*/ 57600002
*                            /* SPECIAL PROCLIB ACCESS         Y02668*/ 57800002
*   2 OSW2     CHAR(1),      /* OPTION SWITCHES FROM PARM FIELDY02668*/ 58000002
*                            /* BITS-6,7 COMMAND AUTHORIZATION Y02668*/ 58200002
*   2 SWA,                   /* SWITCH A                       Y02668*/ 58400002
*     3 JTOP     BIT(1),     /* JOB TO PROCESS                 Y02668*/ 58600002
*     3 JHS      BIT(1),     /* JOB HAS A STEP                 Y02668*/ 58800002
*     3 *        BIT(4),     /* UNUSED                         Y02668*/ 59000002
*     3 EOFR     BIT(1),     /* EOF RECIEVED                   Y02668*/ 59200002
*     3 DLM      BIT(1),     /* DLM KEYWORD SPECIFIED         YM03459*/ 59400002
*   2 SWB,                   /* SWITCH B                       Y02668*/ 59600002
*     3 CXP      BIT(1),     /* CONTINUATION EXPECTED BY SCAN  Y02668*/ 59800002
*     3 CXPN     BIT(1),     /* CONT EXP AND NOT RECEIVED      Y02668*/ 60000002
*     3 CXPC     BIT(1),     /* CONT EXP AND CANCELLED         Y02668*/ 60200002
*     3 CXPOP    BIT(1),     /* CONT EXP FOR OPERAND FIELD   @ZA12458*/ 60250003
*     3 *        BIT(2),     /* UNUSED                         Y02668*/ 60400003
*     3 FRCV     BIT(1),     /* FIRST STATEMENT RECEIVED       Y02668*/ 60600002
*     3 *        BIT(1),     /* UNUSED                         Y02668*/ 60800002
*   2 SWC,                   /* SWITCH C                       Y02668*/ 61000002
*     3 *        BIT(1),     /* UNUSED                         Y02668*/ 61200002
*     3 IOERR    BIT(1),     /* I/O ERROR ON INPUT             Y02668*/ 61400002
*     3 NRCV     BIT(1),     /* RDR NULL RECEIVED              Y02668*/ 61600002
*     3 PEXP     BIT(1),     /* PROC EXEC STMT EXPECTED        Y02668*/ 61800002
*     3 *        BIT(4),     /* UNUSED                         Y02668*/ 62000002
*   2 SWD,                   /* SWITCH D                       Y02668*/ 62200002
*     3 *        BIT(2),     /* UNUSED                         Y02668*/ 62400002
*     3 FEXRCV   BIT(1),     /* FIRST EXEC RECEIVED            Y02668*/ 62600002
*     3 *        BIT(4),     /* UNUSED                         Y02668*/ 62800002
*     3 SYMPRC   BIT(1),     /* FIRST ACCESS OF PROC           Y02668*/ 63000002
*   2 SWV,                   /* SCAN SWITCHES                  Y02668*/ 63200002
*     3 OVKEYSW  BIT(1),     /* THIS KEY OVERRIDDEN            Y02668*/ 63400002
*     3 PROCERR  BIT(1),     /* ERROR THIS STATEMENT           Y02668*/ 63600002
*     3 VERBCSW  BIT(1),     /*                                Y02668*/ 63800002
*     3 FBFLUSH  BIT(1),     /* SYMBOLIC PARM FLUSH INDICATOR  Y02668*/ 64000002
*     3 AMPSW    BIT(1),     /* TEXT DEFINES A SYMBOLIC PARM   Y02668*/ 64200002
*     3 FBLITRL  BIT(1),     /* TEXT IS LITERAL                Y02668*/ 64400002
*     3 FPRNSW   BIT(1),     /* INDICATES LEFT PAREN           Y02668*/ 64600002
*     3 LPBYSW   BIT(1),     /* BYPASS LEFT PAREN CHECK        Y02668*/ 64800002
*   2 CRSW1,                 /* CHECKPOINT RESTART SWITCHES    Y02668*/ 65000002
*     3 CPFLG    BIT(1),     /* GET/FREE SYSCHK DD STMT CORE   Y02668*/ 65200002
*     3 *        BIT(2),     /* UNUSED                         Y02668*/ 65400002
*     3 CRRES1   BIT(1),     /* RESERVED                       Y02668*/ 65600002
*     3 *        BIT(4),     /* UNUSED                         Y02668*/ 65800002
*   2 *        CHAR(1),      /* RESERVED                       Y02668*/ 66000002
*   2 SYMTTR   PTR(31),      /* TTR OF FIRST SYMBUF            Y02668*/ 66200002
*   2 IWANELEN FIXED(8),     /* LENGTH OF NEL                  Y02668*/ 66400002
*   2 SWY      CHAR(1),      /* SCAN SWITCHES                  Y02668*/ 66600002
*   2 SWZ,                   /* CONTROL AND SCAN SWITCHES      Y02668*/ 66800002
*     3 CMT      BIT(1),     /* COMMENT SWITCH                 Y02668*/ 67000002
*     3 DDOV     BIT(1),     /* DD OVERIDE SWITCH              Y02668*/ 67200002
*     3 ENDS     BIT(1),     /* END SCAN SWITCH                Y02668*/ 67400002
*     3 COLST    BIT(1),     /* COLUMN 72 SWITCH               Y02668*/ 67600002
*     3 JOBSW    BIT(1),     /* JOB SWITCH                     Y02668*/ 67800002
*     3 EXECSW   BIT(1),     /* EXEC SWITCH                    Y02668*/ 68000002
*     3 DDSW     BIT(1),     /* DD SWITCH                      Y02668*/ 68200002
*     3 SNPSW    BIT(1),     /* STATEMENT SYSOUT SWITCH        Y02668*/ 68400002
*   2 RCHAR1   CHAR(1),      /* RESERVED                      YM00373*/ 68440002
*   2 CWALINK  FIXED(31),    /* PTR TO TEXT EXIT LINK AREA    YM00373*/ 68480002
*   2 CWALINKL FIXED(31),    /* LTH OF LINK AREA              YM00373*/ 68520002
*   2 CWAPSENM CHAR(8),      /* POST SCAN EXIT NAME           YM02718*/ 68560002
*   2 CDAUTHWA FIXED(32),    /* COMD AUTH CONVERSION WRK AREA YM02718*/ 68565002
*   2 SSNMWA   FIXED(32),    /* WORKAREA FOR SSNAME          @G29AN2E*/ 68570003
*   2 RBLOCK   CHAR(76) BDY(WORD), /* BLOCK OF RESERVED WORDS YM02718*/ 68571003
*   2 RFULLA   FIXED(32),    /* RESERVED                      YM02718*/ 68575002
*   2 RFULLB   FIXED(32),    /* RESERVED                      YM02718*/ 68580002
*   2 RFULLC   FIXED(32),    /* RESERVED                      YM02718*/ 68585002
*   2 RFULLD   FIXED(32),    /* RESERVED                      YM02718*/ 68590002
*   2 RFULLE   FIXED(32);    /* RESERVED                      YM02718*/ 68595002
*                                                                       68600002
*/*************************************************************Y02668*/ 68800002
*/*                                                            Y02668*/ 69000002
*/*  END OF CONVERTER WORK AREA -                              Y02668*/ 69200002
*/*  TO GET LENGTH OF CONVERTER WORK AREA USE THE LENGTH       Y02668*/ 69400002
*/*  FUNCTION OF THE NAME  CVRWA                               Y02668*/ 69600002
*/*                                                            Y02668*/ 69800002
*/*************************************************************Y02668*/ 70000002
./  ADD  SSI=23422257,NAME=IEFJCLS
*%        GO TO JCLSLAB1;                                               00400020
* /*******************************************************************/ 00800020
* /*                                                                 */ 01200020
* /* STATUS --                                                       */ 01600020
* /*    RELEASE 20, MODIFICATION LEVEL 00                            */ 02000020
* /*    0-999999                                               20029 */ 02400020
* /*                                                                 */ 02800020
* /* FUNCTION --                                                     */ 03200020
* /*    DESCRIBE A JOB CONTROL LANGUAGE SET                          */ 03600020
* /*                                                                 */ 04000020
* /* ENTRY POINTS --                                                 */ 04400020
* /*         NONE                                                    */ 04800020
* /*                                                                 */ 05200020
* /* INPUT --                                                        */ 05600020
* /*    NONE                                                         */ 06000020
* /*                                                                 */ 06400020
* /* OUTPUT --                                                       */ 06800020
* /*    A BSL OR ASSEMBLER LANGUAGE DECLARATION A JOB CONTROL        */ 07200020
* /*    LANGUAGE SET                                                 */ 07600020
* /*                                                                 */ 08000020
* /* EXTERNAL REFERENCES --                                          */ 08400020
* /*         NONE                                                    */ 08800020
* /*                                                                 */ 09200020
* /* EXITS, NORMAL --                                                */ 09600020
* /*         NONE                                                    */ 10000020
* /*                                                                 */ 10400020
* /* EXITS, ERROR --                                                 */ 10800020
* /*         NONE                                                    */ 11200020
* /*                                                                 */ 11600020
* /* TABLE/WORK AREAS --                                             */ 12000020
* /*         NONE                                                    */ 12400020
* /*                                                                 */ 12800020
* /* ATTRIBUTES --                                                   */ 13200020
* /*         NOT APPLICABLE                                          */ 13600020
* /*                                                                 */ 14000020
* /* NOTES --                                                        */ 14400020
* /*    NONE                                                         */ 14800020
* /*                                                                 */ 15200020
* /*******************************************************************/ 15600020
* /* START OF SPECIFICATIONS ****                                       16000020
*1MODULE-NAME = IEFJCLS                                                 16400020
*  2PROCESSOR = ASSEMBLER, BSL                                          16800020
** THE RELEASE FOR WHICH THIS MODULE WAS MOST RECENTLY UPDATED          17200020
*1STATUS = 20                                                           17600020
**********************************************************************/ 18000020
* /******************************************************************** 18400020
*1DESCRIPTIVE-NAME = JOB CONTROL LANGUAGE SET MAPPING                   18800020
*1DESCRIPTION = PROVIDE A MAPPING OF THE CHAINED STRUCTURES USED BY  -  19200020
*THE SYSTEM TASK CONTROL ROUTINE AND TSO LOGON TO CONTAIN THE JOB    -  19600020
*CONTROL LANGUAGE REQUIRED TO PROCESS THE START AND MOUNT OPERATOR   -  20000020
*COMMANDS AND THE LOGON FOREGROUND COMMAND RESPECTIVELY.                20400020
*1FUNCTION = SEE DESCRIPTION                                            20800020
*1MODULE-TYPE = MACRO                                                   21200020
*1GLOBAL-ARITHMETIC-VARIABLES = LENJCLS                                 21600020
*1MACRO-SIZE = 188 STATEMENTS                                           22000020
*1PARAMETER-RECEIVED = NONE                                             22400020
*1SYSTEM-MACROS = NONE                                                  22800020
*1EXTERNAL-TABLE = JCLS                                                 23200020
*  2PURPOSE = PROVIDE A MAPPING OF A JOB CONTROL LANGUAGE SET           23600020
*  2REMARKS-ON-USE = AS OF RELEASE 20 ALL NEW USERS OF THE JOB       -  24000020
*  CONTROL LANGUAGE SET SHOULD UTILIZE THIS MACRO-INSTRUCTION. IN    -  24400020
*  THE FOLLOWING DISCUSSION 'REFERENCE-TYPE' REFERS TO THE TREATMENT -  24800020
*  GIVEN EACH INDIVIDUAL FIELD BY IEEVRJCL, THE PSEUDO-ACCESS METHOD -  25200020
*  NORMALLY USED TO PASS EACH JCLS TO THE READER/INTERPRETER            25600020
*  2SCOPE = EXTERNAL                                                    26000020
*  2TABLE-SIZE = 88 BYTES                                               26400020
*  2MAPPING-MACRO = IEFJCLS                                             26800020
*  *******************************************************************/ 27200020
*  /******************************************************************* 27600020
*  2FIELD = JCLSHDR                                                     28000020
*    3REFERENCE-TYPE = READ                                             28400020
*    3DISPLACEMENT = 0 BYTES                                            28800020
*    3TYPE = TABLE                                                      29200020
*    3SCOPE = EXTERNAL                                                  29600020
*    3TABLE-SIZE = 8 BYTES                                              30000020
*    3MAPPING-MACRO = IEFJCLS                                           30400020
*    *****************************************************************/ 30800020
*    /***************************************************************** 31200020
*    3FIELD = JCLSJCLS                                                  31600020
*      4REFERENCE-TYPE = READ                                           32000020
*      4DISPLACEMENT = 0 BYTES                                          32400020
*      4TYPE = ADDRESS                                                  32800020
*      4ADDRESS-LENGTH = 32 BITS                                        33200020
*      4ADDRESS-OF = JCLS                                               33600020
*        5REFERENCE-TYPE = READ                                         34000020
*        5TYPE-ADDRESSED = TABLE                                        34400020
*        5PURPOSE = NEXT JCLS IN STREAM                                 34800020
*        5REMARKS-ON-USE = IF JCLSJCLS POINTER IS ZERO, THE END OF   -  35200020
*        THE CHAIN IS INDICATED.                                        35600020
*        5SCOPE = EXTERNAL                                              36000020
*        5MAPPING-MACRO = IEFJCLS                                       36400020
*    *****************************************************************/ 36800020
*    /***************************************************************** 37200020
*    3FIELD = *                                                         37600020
*      4DISPLACEMENT = 4 BYTES                                          38000020
*      4TYPE = RESERVED                                                 38400020
*  *******************************************************************/ 38800020
*  /******************************************************************* 39200020
*  2FIELD = JCLSCARD                                                    39600020
*    3REFERENCE-TYPE = READ                                             40000020
*    3DISPLACEMENT = 8 BYTES                                            40400020
*    3TYPE = TABLE                                                      40800020
*    3PURPOSE = CONTAIN ONE JCL CARD IMAGE                              41200020
*    3SCOPE = EXTERNAL                                                  41600020
*    3TABLE-SIZE = 80 BYTES                                             42000020
*    3MAPPING-MACRO = IEFJCLS                                           42400020
*    *****************************************************************/ 42800020
*    /***************************************************************** 43200020
*    3FIELD = JCLSLASH                                                  43600020
*      4REFERENCE-TYPE = READ                                           44000020
*      4DISPLACEMENT = 0 BYTES                                          44400020
*      4TYPE = CHARACTER STRING                                         44800020
*      4LENGTH+MODE = 2 CHARACTERS                                      45200020
*      4VALUE = '//' OR '/*'                                            45600020
*    *****************************************************************/ 46000020
*    /***************************************************************** 46400020
*    3FIELD = JCLSLABL                                                  46800020
*      4REFERENCE-TYPE = READ                                           47200020
*      4DISPLACEMENT = 2 BYTES                                          47600020
*      4TYPE = CHARACTER STRING                                         48000020
*      4LENGTH+MODE = 8 CHARACTERS                                      48400020
*      4VALUE = LABEL OF JCL CARD                                       48800020
*    *****************************************************************/ 49200020
*    /***************************************************************** 49600020
*    3FIELD = JCLSTYPE                                                  50000020
*      4REFERENCE-TYPE = READ                                           50400020
*      4DISPLACEMENT = 10 BYTES                                         50800020
*      4TYPE = CHARACTER STRING                                         51200020
*      4LENGTH+MODE = 5 CHARACTERS                                      51600020
*      4VALUE = 'JOB', 'EXEC', 'DD', ...                                52000020
*    *****************************************************************/ 52400020
*    /***************************************************************** 52800020
*    3FIELD = JCLSBODY                                                  53200020
*      4REFERENCE-TYPE = READ                                           53600020
*      4DISPLACEMENT = 15 BYTES                                         54000020
*      4TYPE = CHARACTER STRING                                         54400020
*      4LENGTH+MODE = 56 CHARACTERS                                     54800020
*      4VALUE = BODY OF JCL CARD                                        55200020
*    *****************************************************************/ 55600020
*    /***************************************************************** 56000020
*    3FIELD = JCLSCNTN                                                  56400020
*      4REFERENCE-TYPE = READ                                           56800020
*      4DISPLACEMENT = 1 BYTE                                           57200020
*      4TYPE = CHARACTER STRING                                         57600020
*      4LENGTH+MODE = 71 CHARACTERS                                     58000020
*      4VALUE = CONTINUATION FIELD OF JCL CARD                          58400020
*    *****************************************************************/ 58800020
*    /***************************************************************** 59200020
*    3FIELD = JCLSSEQ                                                   59600020
*      4REFERENCE-TYPE = READ                                           60000020
*      4DISPLACEMENT = 8 BYTES                                          60400020
*      4TYPE = CHARACTER STRING                                         60800020
*      4LENGTH+MODE = 72 CHARACTERS                                     61200020
*      4VALUE = SEQUENCE FIELD OF JCL CARD                              61600020
*                                                                       62000020
**** END OF SPECIFICATIONS ***/                                         62400020
         MACRO                                                          62800020
         IEFJCLS                                                        63200020
JCLS     DS   CL88           DEFINE A JOB CONTROL LANGUAGE SET (JCLS)   63600020
         ORG  JCLS           MOVE BACK AND DEFINE THE FIELDS            64000020
JCLSHDR  DS   CL8            JCLS HEADER                                64400020
         ORG  JCLSHDR        STRUCTURE THE HEADER                       64800020
JCLSJCLS DS   AL4            POINTER TO NEXT JCLS                       65200020
         DS   1F             RESERVED                                   65600020
JCLSCARD DS   CL80           JCL CARD IMAGE                             66000020
         ORG  JCLSCARD       MOVE BACK AND STRUCTURE THE CARD           66400020
JCLSLASH DS   CL2            //                                         66800020
JCLSLABL DS   CL8            LABEL FIELD                                67200020
JCLSTYPE DS   CL5            JOB, EXEC, DD, ...                         67600020
JCLSBODY DS   CL56           BODY OF CARD IMAGE                         68000020
JCLSCNTN DS   1C             CONTINUATION COLUMN                        68400020
JCLSSEQ  DS   CL8            SEQUENCE NUMBER FIELD                      68800020
         MEND                                                           69200020
*%JCLSLAB1:;                                                            69600020
* /******************************************************************** 70000020
*         DEFINE A JOB CONTROL LANGUAGE SET                             70400020
* ********************************************************************/ 70800020
* DECLARE                                                               71200020
*         1     JCLS BASED(JCLSPTR) BOUNDARY(DWORD),                    71600020
*               /****************************************************** 72000020
*                  JCLS HEADER                                          72400020
*               ******************************************************/ 72800020
*               2  JCLSHDR,                                             73200020
*                  /*************************************************** 73600020
*                     POINTER TO NEXT JCLS -- ZERO FOR LAST             74000020
*                  ***************************************************/ 74400020
*                  3  JCLSJCLS POINTER(31),                             74800020
*                  /*************************************************** 75200020
*                     RESERVED                                          75600020
*                  ***************************************************/ 76000020
*                  3  * FIXED(31),                                      76400020
*               /****************************************************** 76800020
*                  JCL CARD IMAGE                                       77200020
*               ******************************************************/ 77600020
*               2  JCLSCARD CHARACTER(80),                              78000020
*                  /*************************************************** 78400020
*                     // OR /*                                          78800020
*                  ***************************************************/ 79200020
*                  3  JCLSLASH CHARACTER(2),                            79600020
*                  /*************************************************** 80000020
*                     LABEL FIELD                                       80400020
*                  ***************************************************/ 80800020
*                  3    JCLSLABL CHARACTER(8),                          81200020
*                  /*************************************************** 81600020
*                     JOB, EXEC, DD, ...                                82000020
*                  ***************************************************/ 82400020
*                  3    JCLSTYPE CHARACTER(5),                          82800020
*                  /*************************************************** 83200020
*                     BODY OF CARD IMAGE                                83600020
*                  ***************************************************/ 84000020
*                  3    JCLSBODY CHARACTER(56),                         84400020
*                  /*************************************************** 84800020
*                     CONTINUATION COLUMN                               85200020
*                  ***************************************************/ 85600020
*                  3    JCLSCNTN CHARACTER(1),                          86000020
*                  /*************************************************** 86400020
*                     SEQUENCE NUMBER FIELD                             86800020
*                  ***************************************************/ 87200020
*                  3    JCLSSEQ CHARACTER(8);                           87600020
*%/******************************************************************** 88000020
*         DEFINE THE LENGTH OF A JOB CONTROL LANGUAGE SET               88400020
**********************************************************************/ 88800020
*         DECLARE LENJCLS FIXED;                                        89200020
*%        LENJCLS = 88;                                                 89600020
./  ADD  SSI=22600574,NAME=IEFNELDF
     % DCL (IAMEXIT,QEPEXIT,RTNEXIT,TXTEXIT,FAMEXIT,SMFEXIT) CHAR;      07000002
*/********************************************************************/ 07010002
*/*  THIS MACRO, IEFNELDF DEFINES DEFAULT VALUES FOR THE PARMS PASSED*/ 07050002
*/*  TO THE IEFNEL MACRO.   IN A PLS MODULE THIS MACRO MUST BE       */ 07100002
*/*  INCLUDED PRIOR TO INCLUDING THE IEFNEL MACRO.   SINCE THERE     */ 07150002
*/*  IS NO DEFAULT VALUE FOR THE 'SUBCOM' PARAMETER, IT MUST BE      */ 07200002
*/*  GIVEN A VALUE FOLLOWING THE INCLUSION OF IEFNELDF BUT PRIOR     */ 07250002
*/*  TO THE INCLUSION OF IEFNEL.                                     */ 07300002
*/*      E.G.,     INCLUDE SYSLIB(IEFNELDF);                         */ 07350002
*/*                %SUBCOM='C';                                      */ 07400002
*/*                INCLUDE SYSLIB(IEFNEL);                           */ 07600002
*/********************************************************************/ 07650002
         % DCL SUBCOM CHAR;                                             14000002
         % DCL NELEXBAS CHAR;                                           35000001
         % NELEXBAS = 'NELEXLST';                                       42000001
         %IAMEXIT= ' ';                                                 49000001
         %QEPEXIT= ' ';                                                 56000001
         %RTNEXIT= ' ';                                                 63000001
         %SMFEXIT= ' ';                                                 70000001
         %TXTEXIT= ' ';                                                 77000001
         %FAMEXIT= ' ';                                                 84000001
         %SUBCOM='NO';                                                  91000002
./  ADD  SSI=30651580,NAME=IEFPTRS
*%GOTO TCBBSL;                                                          00050002
     MACRO                                                              00100002
     IEFPTRS                                                            00150002
*                                                                       00200002
*MACMEAN TCBASCB MEANS TCB,ASCB POINTERS                                00250002
*MACCOMP SC1B6/PZD11                                                    00300002
*MACSTAT 72.285/16216                                                   00350002
*     PURPOSE= TO STANDARDIZE THE CHAIN BETWEEN THE CVT TO TCB,         00400002
*              AND THE CVT TO ASCB.                                     00450002
*                                                                       00500002
TCBASCB  DSECT                                                          00550002
TCBNEXT  DS    A                  POINTER TO THE NEXT TCB               00600002
TCBPTR   DS    A                  POINTER TO THE CURRENT TCB            00650002
ASCBNEXT DS    A                  POINTER TO THE NEXT ASCB              00700002
ASCBPTR  DS    A                  POINTER TO THE CURRENT ASCB           00750002
         MEND ,  */                                                     00800002
*%TCBBSL:  ;                                                            00850002
*/*                                                                 */  00900002
*/*MACMEAN TCBASCB MEANS TCB,ASCB POINTERS                          */  00950002
*/*MACCOMP SC1B6/PZD11                                              */  01000002
*/*MACSTAT 72.285/16216                                             */  01050002
*/*     PURPOSE= TO STANDARDIZE THE CHAIN BETWEEN THE CVT TO TCB,   */  01100002
*/*              AND THE CVT TO ASCB.                               */  01150002
*/*                                                                 */  01200002
*DECLARE                                                                01250002
*   1  TCBASCB  BASED(CVTTCBP),    /* CVTTCBP POINTS TO THE 4 WORD      01300002
*                                     LIST DEFINED BELOW */             01350002
*     2  TCBNEXT  PTR(31),         /* POINTER TO THE NEXT TCB */        01400002
*     2  TCBPTR   PTR(31),         /* POINTER TO THE CURRENT TCB */     01450002
*     2  ASCBNEXT PTR(31),         /* POINTER TO THE NEXT ASCB */       01500002
*     2  ASCBPTR  PTR(31);         /* POINTER TO THE CURRENT ASCB */    01550002
./  ADD  SSI=20621018,NAME=IEFRELSE
         MACRO                                                          00020000
&LABEL   IEFRELSE    &P1                                                00040000
 AIF ('&LABEL' EQ '').A0                                                00060000
&LABEL   DS 0H                                                          00080000
.A0 ANOP                                                                00100000
         LR    1,13                     SET UP TO FREE AREA             00120000
         L     13,4(0,13)               RESTORE PTR TO PREV SAVE AREA   00140000
         AIF   ('&P1' EQ '').A                                          00160000
         ST    13,&P1                   PTR TO PREVIOUS SAVE AREA       00180000
.A       ANOP                                                           00200000
         FREEMAIN R,LV=72,A=(1)         RELEASE OLD SAVE AREA           00220000
         MEND                                                           00240000
./  ADD  SSI=20621022,NAME=IEFSAVER
         MACRO                                                          00020000
&LABEL   IEFSAVER    &P1                                                00040000
 AIF ('&LABEL' EQ '').A0                                                00060000
&LABEL   DS    0H                                                       00080000
.A0      ANOP                                                           00100000
         GETMAIN R,LV=72                GET NEW SAVE AREA               00120000
         XC    0(72,1),0(1)             ZERO SAVE AREA                  00140000
         ST    13,4(0,1)                CHAIN SAVE AREAS TOGETHER       00160000
         ST    1,8(0,13)                CHAIN SAVE AREAS TOGETHER       00180000
         LR    13,1                     PTR TO SAVE AREA                00200000
         AIF   ('&P1' EQ '').A                                          00220000
         ST    13,&P1                   PTR TO CURRENT SAVE AREA        00240000
.A       ANOP                                                           00260000
         MEND                                                           00280000
./  ADD  SSI=23422260,NAME=IEFVJSEL
*%        GO TO JSELPLS;                                                00400002
* /*******************************************************************/ 00500010
* /*                                                                 */ 00550010
* /* STATUS --                                                       */ 00600010
* /*    OS/VS2 RELEASE 2, MODIFICATION LEVEL 00                      */ 00650002
* /*                                                                 */ 00700010
* /* FUNCTION --                                                     */ 00750010
* /*    DEFINE THE PARAMETER LIST WHICH MUST BE PASSED TO THE JOB    */ 00760010
* /*    SCHEDULING SUBROUTINE, THE JOB SCHEDULING ENTRANCE LIST      */ 00762010
* /*    (JSEL)                                                       */ 00764010
* /*                                                                 */ 00770010
* /* ENTRY POINTS --                                                 */ 00780010
* /*         NONE                                                    */ 00790010
* /*                                                                 */ 00792010
* /* INPUT --                                                        */ 00794010
* /*    NONE                                                         */ 00796010
* /*                                                                 */ 00798010
* /* OUTPUT --                                                       */ 00798410
* /*    DATA CONTANTS (ASSEMBLER) OR DECLARATIONS (PLS) DEFINING THE */ 00798802
* /*    JSEL                                                         */ 00798910
* /*                                                                 */ 00799210
* /* EXTERNAL REFERENCES --                                          */ 00799610
* /*         NONE                                                    */ 00799710
* /*                                                                 */ 00799810
* /* EXITS, NORMAL --                                                */ 00799910
* /*         NONE                                                    */ 00849910
* /*                                                                 */ 00859910
* /* EXITS, ERROR --                                                 */ 00869910
* /*         NONE                                                    */ 00879910
* /*                                                                 */ 00889910
* /* TABLE/WORK AREAS --                                             */ 00891910
* /*         NONE                                                    */ 00893910
* /*                                                                 */ 00895910
* /* ATTRIBUTES --                                                   */ 00897910
* /*         NOT APPLICABLE                                          */ 00898310
* /*                                                                 */ 00898710
* /* NOTES --                                                        */ 00899110
* /*    NONE                                                         */ 00899510
* /*                                                                 */ 00899610
* /*******************************************************************/ 00899710
* /* START OF SPECIFICATIONS ****                                       00899910
*1MODULE-NAME = IEFVJSEL                                                01200020
*  2PROCESSOR = ASSEMBLER                                               01600001
**** END OF SPECIFICATIONS ***/                                         62000020
* /*******************************************************************/ 62050001
         MACRO                                                          62400002
&NAME    IEFVJSEL  &PREFIX=JSEL /*                                      62800020
&PREFIX.STRT DS   0F         ALIGN THE JSEL ON A FULLWORD BOUNDARY      63200001
             DC A(0)         RESERVED                                   63600001
&PREFIX.JSOL DC A(0)         ADDRESS OF JOB SCHEDULING OPTIONS LIST     64000020
&PREFIX.CSCB DC A(0)         ADDRESS OF CSCB FOR JOBS TO BE SCHEDULED   64400020
&PREFIX.JCL  DC A(0)         ADDRESS OF JOB CONTROL LANGUAGE SET (JCLS) 64800002
&PREFIX.JSXL DC A(0)         ADDRESS OF JOB SCHEDULING EXIT LIST        65200020
&PREFIX.ASCB DC A(0)              ASCB ADDRESS                   Y02669 65250002
&PREFIX.END  EQU   *         END OF JOB SCHEDULING ENTRANCE LIST        65600020
         ORG  &PREFIX.STRT                                              66000001
&PREFIX  DS   CL(&PREFIX.END-&PREFIX.STRT)                              66400001
         MEND                                                           66800002
**/ %    JSELPLS: ;                                                     67200002
* /*******************************************************************/ 67600020
* /*      DEFINE A JOB SCHEDULING ENTRANCE LIST                      */ 68000020
* /*******************************************************************/ 68400020
* DECLARE                                                               68800020
* 1       JSEL BASED( JSELPTR),                                         69200020
*                                                                       69600020
*         /*    RESERVED                                             */ 69650001
*         2     * POINTER(32),                                          87600001
*                                                                       88000020
*         /*    POINTER TO A JOB SCHEDULING OPTIONS LIST SPECIFYING  */ 88050001
*         /*    OPTIONS OF THE JOB SCHEDULING SUBROUTINE             */ 88850001
*         2     JSELJSOL POINTER(32),                                   89200020
*                                                                       89600020
*         /*    POINTER TO A CSCB TO BE USED DURING THE SCHEDULING   */ 90000020
*         /*    OF THE JOB                                           */ 90400020
*         2     JSELCSCB POINTER(32),                                   90800020
*                                                                       91200020
*         /*    POINTER TO JOB CONTROL LANGUAGE SET (JCLS)           */ 91600002
*         /*    DESCRIBING THE JOB TO BE SCHEDULED                   */ 92000020
*         2     JSELJCL POINTER(32),                                    92400020
*                                                                       92800020
*         /*    POINTER TO A JOB SCHEDULING EXIT LIST SPECIFYING ANY */ 93200020
*         /*    SPECIAL EXIT ROUTINES WHICH ARE TO BE INVOKED DURING */ 93600020
*         /*    JOB SCHEDULING SUBROUTINE PROCESSING.                */ 94000020
*         2     JSELJSXL POINTER(32),                                   94400020
*         2     JSELASCB PTR(32), /* ASCB ADDRESS              Y02669*/ 94450002
*                                                                       94800020
*               /* THIS IS A VARIABLE-LENGTH PARAMETER LIST, SO      */ 95200020
*               /* THE HIGH-ORDER BIT OF THE LAST POINTER MUST       */ 95600020
*               /* BE SET TO 1.                                      */ 96000020
*               3  JSELEOL BIT(1);                                      96400020
*%        /*    DEFINE THE LENGTH OF THE JSEL                        */ 96800020
*         DECLARE LENJSEL FIXED;                                        97200020
*%        LENJSEL = 24;                                                 97600002
./  ADD  SSI=80680186,NAME=IEFVJSOL
* %      GOTO JSOLPLS;                                                  00300002
* /*******************************************************************/ 00600020
* /*                                                                 */ 00900020
* /* STATUS --                                                       */ 01200020
* /*    RELEASE OS/VS2 RELEASE 4, MODIFICATION LEVEL 00              */ 01500003
* /*                                                                 */ 02100020
* /* FUNCTION --                                                     */ 02400020
* /*    DEFINE THE STRUCTURE AND PROPER USE OF THE JOB SCHEDULING    */ 02700020
* /*    OPTIONS LIST (JSOL)                                          */ 03000020
* /*                                                                 */ 03300020
* /* ENTRY POINTS --                                                 */ 03600020
* /*         NONE                                                    */ 03900020
* /*                                                                 */ 04200020
* /* INPUT --                                                        */ 04500020
* /*    NONE                                                         */ 04800020
* /*                                                                 */ 05100020
* /* OUTPUT --                                                       */ 05400020
* /*    DATA CONSTANTS (ASSEMBLER) OR DECLARATIONS OF THE VARIABLES  */ 05700020
* /*    WHICH CONSTITUTE THE JSOL.                                   */ 06000020
* /*                                                                 */ 06300020
* /* EXTERNAL REFERENCES --                                          */ 06600020
* /*         NONE                                                    */ 06900020
* /*                                                                 */ 07200020
* /* EXITS, NORMAL --                                                */ 07500020
* /*         NONE                                                    */ 07800020
* /*                                                                 */ 08100020
* /* EXITS, ERROR --                                                 */ 08400020
* /*         NONE                                                    */ 08700020
* /*                                                                 */ 09000020
* /* TABLE/WORK AREAS --                                             */ 09300020
* /*         NONE                                                    */ 09600020
* /*                                                                 */ 09900020
* /* ATTRIBUTES --                                                   */ 10200020
* /*         NOT APPLICABLE                                          */ 10500020
* /*                                                                 */ 10800020
* /* NOTES --                                                        */ 11100020
* /*    NONE                                                         */ 11400020
* /*                                                                 */ 11700020
* /*******************************************************************/ 12000020
* /* START OF SPECIFICATIONS ****                                       12300020
*1MODULE-NAME = IEFVJSOL                                                12600020
*  2PROCESSOR = ASSEMBLER                                               12900001
**** END OF SPECIFICATIONS ***/                                         66900020
* /*******************************************************************/ 66950001
         MACRO                                                          67200020
&NAME    IEFVJSOL &PREFIX=JSOL /*                                       67500020
&NAME    DS   0D             ALIGN THE JSOL ON A DOUBLEWORD BOUNDARY    67800020
&PREFIX.LGTH DC AL2(&PREFIX.END-&PREFIX)    LENGTH OF THE JSOL          68100020
&PREFIX.FLAG DC   X'00'      FLAG BYTE                                  68400002
&PREFIX.NSYS EQU  X'80'           NO SYSTEM TASKS                Y02669 68450002
&PREFIX.RAC  EQU  X'40'      BYPASS RACINIT                    @Z40RPSQ 68500003
*            EQU  X'20'           RESERVED                              68550002
*            EQU  X'10'           RESERVED                              68600002
&PREFIX.SMS1 EQU  X'08'      SUPPRESS SYSTEM TASK CONTROL MESSAGES      69900020
*            EQU  X'04'           RESERVED                              70200002
*            EQU  X'02'           RESERVED                              70400002
*            EQU  X'01'           RESERVED                              70600002
&PREFIX.OPTS DC AL1(0)       OPTIONS FOR THE JOB SCHEDULING SUBROUTINE  72500001
*                                                                 01012 72510001
&PREFIX.RCVY EQU X'80'       INDICATES ANY JOB REQUIRING ALLOCATION     72550001
*                            RECOVERY IS TO BE FAILED             01012 72552001
*            EQU X'40'            RESERVED                              72560002
*            EQU X'20'            RESERVED                              72570002
&PREFIX.ENQU EQU X'10'       INDICATES THE JOB IS TO BE FAILED IF THE   72580001
*                            DATA SETS WHICH ARE REQUIRED CANNOT BE     72582001
*                            OBTAINED IMMEDIATELY OR CANNOT BE OBTAINED 72584001
*                            AT ALL.                              01012 72586001
*            EQU  X'08'           RESERVED                              72588002
*            EQU  X'04'           RESERVED                              72638002
*            EQU  X'02'           RESERVED                        01018 72696002
*            EQU  X'01'           RESERVED                        01018 72698002
&PREFIX.RSV1 DC   F'0'            RESERVED                              72748002
&PREFIX.DEST DC  CL8' '           DEFAULT USERID FOR SYSOUT      Y02664 72800002
*                                 DESTINATION                    Y02664 72850002
&PREFIX.TPR  DS CL24         TIOT PROLOGUE TO BE SUBSTITUTED FOR THE   *72900020
                             PROLOGUE OF THE MODEL TIOT                 73200020
         ORG  &PREFIX.TPR                                               73500020
&PREFIX.TJOB DC CL8' '       JOBNAME FIELD FOR TIOT PROLOGUE            73800020
&PREFIX.TSTE DC CL8' '       STEPNAME FIELD FOR TIOT PROLOGUE           74100020
&PREFIX.TPRO DC CL8' '       PROCSTEPNAME FIELD FOR TIOT PROLOGUE       74400020
&PREFIX.END EQU *            END OF JOB SCHEDULING OPTIONS LIST         74700020
         ORG  &PREFIX.LGTH                                              75000020
&PREFIX  DS   CL(&PREFIX.END-&PREFIX.LGTH)                              75300020
         MEND                                                           75600020
**/ %    JSOLPLS: ;                                                     75900002
* /*******************************************************************/ 76200020
* /*      DEFINE THE JOB SCHEDULING OPTIONS LIST                     */ 76500020
* /*******************************************************************/ 76800020
* DECLARE                                                               77100020
* 1       IEFVJSOL BASED( JSOLPTR) BOUNDARY( DWORD),                    77400020
*                                                                       77700020
*         /*    HALFWORD BINARY INTEGER FIELD PROVIDING THE LENGTH   */ 78000020
*         /*    OF THE JSOL IN BYTES                                 */ 78300020
*         2     JSOLLGTH FIXED(15),                                     78600020
*                                                                       78900020
*         /*    EIGHT-BIT BIT STRING FIELD                           */ 79200020
*         2     JSOLFLAG BIT(8),                                        79500020
*                                                                       79800020
*               3 JSOLNSYS BIT(1),  /* NO SYSTEM TASKS        Y02669 */ 80400003
*               3 JSOLRAC  BIT(1),  /* BYPASS RACINIT        @Z40RPSQ*/ 80500003
*                                                                       80799901
*               3  *        BIT(2), /* RESERVED              @Z40RPSQ*/ 80849903
*                                                                       82580020
*               /* BIT INDICATING THAT SYSTEM TASK CONTROL MESSAGES  */ 82600020
*               /* ARE TO BE SUPPRESSED                              */ 82620020
*               3  JSOLSMS1 BIT(1),                                     82640020
*                                                                       82660020
*               3  *        BIT(3), /* RESERVED                      */ 83220002
*                                                                       83320020
*         /*    OPTIONS OF THE JOB SCHEDULING SUBROUTINE       01012 */ 84950001
*         2     JSOLOPTS BIT(8),                                        85000001
*                                                                       85050001
*         /*    INDICATES ANY JOB WHICH ALLOCATION RECOVERY IN       */ 85100001
*         /*       ORDER TO BE RUN IS TO BE FAILED.            01012 */ 85150001
*               3 JSOLRCVY BIT(1),                                      85160001
*                                                                       85170001
*               3 *        BIT(2),  /* RESERVED                      */ 85198402
*                                                                       85198801
*         /*    JOBS TO BE SCHEDULED BY THE JOB SCHEDULING SUBROUTINE*/ 85199201
*         /*       ARE TO BE FAILED IF THE DATA SETS WHICH THEY      */ 85199601
*         /*       REQUIRE CANNOT BE OBTAINED IMMEDIATELY      01012 */ 85199701
*               3 JSOLENQU  BIT(1),                                     85199802
*                                                                       85199901
*               3 *         BIT(4), /* RESERVED                      */ 85291902
*                                                                       85299901
*         2     *       FIXED(31),  /* RESERVED                      */ 86700002
*                                                                       86800002
*         2     JSOLDEST CHAR(8), /* DEFAULT USER ID FOR       Y02664   86850002
*                                    SYSOUT DESTINATION        Y02664*/ 86900002
*                                                                       87000020
*         /*    TIOT PROLOGUE FIELD                                  */ 87300020
*         2     JSOLTPR CHARACTER(24),                                  87600020
*                                                                       87900020
*               /*   TIOT PROLOGUE JOBNAME FIELD                     */ 88200020
*               3    JSOLTJOB CHARACTER(8),                             88500020
*                                                                       88800020
*               /*   TIOT PROLOGUE STEPNAME FIELD                    */ 89100020
*               3    JSOLTSTE CHARACTER(8),                             89400020
*                                                                       89700020
*               /* TIOT PROLOGUE PROCSTEPNAME FIELD   */                90000020
*               3  JSOLTPRO CHARACTER(8);                               90300020
*%        DECLARE                                                       90600020
*         LENJSOL FIXED;                                                90900020
*%        LENJSOL = 40;                                                 91200002
./  ADD  SSI=30121694,NAME=IEFVJSWA
*        % GO TO JSWAPLS;         /*                                    00050002
         MACRO                                                          00100002
         IEFVJSWA                                                       00150002
*                                                                       00200002
*  JOB SCHEDULING WORK AREA (JSWA) -                                    00250002
*    USED AS A PARAMETER AREA BY THE JOB SCHEDULING SUBROUTINE          00300002
*                                                                       00350002
JSWA     DSECT                                                          00400002
JSWABEGN EQU   *                                                        00450002
JSWALGTH DC    AL2(JSWASIZE)      JSWA LENGTH                           00500002
JSWAOPT  DS    X                  OPTIONS FLAGS                         00550002
JSWASUBS EQU   X'80'              JOB SCHEDULING SUBROUTINE IS   Y02668 00600002
*                                 PROCESSING A START SUBSYSTEM   Y02668 00610002
JSWASMS1 EQU   X'40'              SUPPRESS STARTED TASK CONTROL         00650002
*                                 MESSAGES                              00700002
*        EQU   X'20'              RESERVED                              00750002
JSWARSV1 EQU   X'1F'              RESERVED FLAGS                        00850002
JSWAJSSR DS    X                  JSS RESOURCES                  Y02653 00860002
JSWAJCLS EQU   X'80'              JCLS EXISTS                    Y02653 00870002
JSWASWA  EQU   X'40'              STC SWA EXISTS                 Y02653 00880002
JSWAIEL  EQU   X'20'              IEL EXISTS                     Y02653 00890002
JSWASSOB EQU   X'10'              SSOB EXISTS                    Y02653 00892002
JSWAJSOL EQU   X'08'              JSOL EXISTS                    Y02653 00894002
*        EQU   X'04'              RESERVED                              00896002
*        EQU   X'02'              RESERVED                              00898002
*        EQU   X'01'              RESERVED                              00898402
JSWAJSEL DS    A                  JOB SCHEDULING ENTRANCE LIST          00900002
*                                 (JSEL) POINTER                        00950002
JSWATIOT DS    A                  CURRENT TIOT POINTER           Y02670 01000002
JSWAJSCB DS    A                  CURRENT JSCB POINTER           Y02670 01100002
JSWAIELP DS    A                  IEL POINTER                    Y02653 01150002
JSWASOBP DS    A                  SSOB POINTER                   Y02653 01160002
JSWAB601 DS    A                  IEESB601 PARM AREA POINTER     Y02670 01170002
JSWAPARM DS    A                  JSS ESTAE PARM AREA POINTER    Y02653 01180002
JSWASWSP DS    X                  SWA SUBPOOL NUMBER             Y02668 01190002
JSWARSV2 DS    3X                 RESERVED                              01192002
JSWASIBP DS    A                  SSIB PTR FROM JSCB OF CALLER OF JSS   01194002
JSWASIZE EQU   *-JSWABEGN         JSWA SIZE                             01200002
         MEND                     */                                    01250002
*  % JSWAPLS:;                                                          01300002
*  /*                                                                */ 01350002
*  /*  JOB SCHEDULING WORK AREA (JSWA) -                             */ 01400002
*  /*    USED AS A PARAMETER AREA BY THE JOB SCHEDULING SUBROUTINE   */ 01450002
*  /*                                                                */ 01500002
*   DCL  1     JSWA      BASED(JSWAPTR),                                01550002
*          2   JSWALGTH  FIXED(15), /* JSWA LENGTH                   */ 01600002
*          2   JSWAOPT   BIT(8),    /* OPTIONS FLAGS                 */ 01650002
*            3 JSWASUBS  BIT(1),    /* JSS IS PROCESSING A              01700002
*                                      START SUBSYSTEM         Y02668*/ 01710002
*            3 JSWASMS1  BIT(1),    /* SUPPRESS STARTED TASK CONTROL    01750002
*                                      MESSAGES                      */ 01800002
*            3 *         BIT(6),    /* RESERVED FLAGS                */ 01950002
*          2   JSWAJSSR  BIT(8),    /* JSS RESOURCES           Y02653*/ 02000002
*            3 JSWAJCLS  BIT(1),    /* JCLS EXISTS             Y02653*/ 02020002
*            3 JSWASWA   BIT(1),    /* STC SWA EXISTS          Y02653*/ 02030002
*            3 JSWAIEL   BIT(1),    /* IEL EXISTS              Y02653*/ 02040002
*            3 JSWASSOB  BIT(1),    /* SSOB EXISTS             Y02653*/ 02042002
*            3 JSWAJSOL  BIT(1),    /* JSOL EXISTS             Y02653*/ 02044002
*            3 *         BIT(3),    /* RESERVED                      */ 02046002
*          2   JSWAJSEL  PTR(31),   /* JOB SCHEDULING ENTRANCE LIST     02050002
*                                      (JSEL) POINTER                */ 02100002
*          2   JSWATIOT  PTR(31),   /* CURRENT TIOT POINTER    Y02670*/ 02150002
*          2   JSWAJSCB  PTR(31),   /* CURRENT JSCB POINTER    Y02670*/ 02200002
*          2   JSWAIELP  PTR(31),   /* IEL POINTER             Y02653*/ 02250002
*          2   JSWASOBP  PTR(31),   /* SSOB POINTER            Y02653*/ 02300002
*          2   JSWAB601  PTR(31),   /* IEESB601 PARM AREA PTR  Y02670*/ 02350002
*          2   JSWAPARM  PTR(31),   /* JSS ESTAE PARM AREA PTR Y02653*/ 02400002
*          2   *         FIXED(31),                                     02450002
*            3 JSWASWSP  PTR(8),   /* SWA SUBPOOL NUMBER       Y02668*/ 02500002
*            3 *         FIXED(24),/* RESERVED                       */ 02550002
*          2   JSWASIBP  PTR(31)   /* SSIB PTR FROM JSCB OF             02600002
                                      CALLER OF JSS                 */; 02650002
./  ADD  SSI=31062227,NAME=IEFVJSXL
*%       GOTO JSXLPLS;                                                  00200002
* /*******************************************************************/ 00400020
* /*                                                                 */ 00600020
* /* MACRO NAME = IEFVJSXL                                           */ 00650002
* /*                                                                 */ 00700002
* /* STATUS --                                                       */ 00800020
* /*    OS/VS2 RELEASE 2, MODIFICATION LEVEL 00                      */ 01000002
* /*                                                                 */ 01400020
* /* FUNCTION --                                                     */ 01600020
* /*    DEFINE THE JOB SCHEDULING EXIT LIST (JSXL) WHICH SPECIFIES   */ 01800020
* /*    OPTIONAL EXITS TO BE GIVEN CONTROL DURING JOB SCHEDULING     */ 02000020
* /*    SUBROUTINE PROCESSING                                        */ 02200020
* /*                                                                 */ 02400020
* /* ENTRY POINTS --                                                 */ 02600020
* /*         NONE                                                    */ 02800020
* /*                                                                 */ 03000020
* /* INPUT --                                                        */ 03200020
* /*    NONE                                                         */ 03400020
* /*                                                                 */ 03600020
* /* OUTPUT --                                                       */ 03800020
* /*    DATA CONSTANTS (ASSEMBLER) OR DECLARATIONS (PLS) DEFINING    */ 04000002
* /*    THE JSXL                                                     */ 04200020
* /*                                                                 */ 04400020
* /* EXTERNAL REFERENCES --                                          */ 04600020
* /*         NONE                                                    */ 04800020
* /*                                                                 */ 05000020
* /* EXITS, NORMAL --                                                */ 05200020
* /*         NONE                                                    */ 05400020
* /*                                                                 */ 05600020
* /* EXITS, ERROR --                                                 */ 05800020
* /*         NONE                                                    */ 06000020
* /*                                                                 */ 06200020
* /* TABLE/WORK AREAS --                                             */ 06400020
* /*         NONE                                                    */ 06600020
* /*                                                                 */ 06800020
* /* ATTRIBUTES --                                                   */ 07000020
* /*         NOT APPLICABLE                                          */ 07200020
* /*                                                                 */ 07400020
* /* NOTES --                                                        */ 07600020
* /*    NONE                                                         */ 07800020
* /*                                                                 */ 08000020
* /*******************************************************************/ 08200020
         MACRO                                                          30200020
&NAME    IEFVJSXL &PREFIX,&COMM /*                                      30400020
         LCLA  &A,&B,&C,&D,&LENJSXL                                     30600020
         LCLB  &POST,&PRINI,&PTINI,&PRFRE                       YM00047 30800002
         LCLC  &P,&PL,&LINKAGE,&ROUTINE,&F1,&F2,&F3,&F4,&F5,&F6,&F7,&F8 31000020
         LCLC  &G1,&G2,&G3,&G4,&G5,&G6,&G7,&G8,&COMMUN                  31200020
&NAME    DS    0D                 ALIGN JSXL                            31400020
&LENJSXL SETA  8*N'&SYSLIST-8     COMPUTE LENGTH OF THIS JSXL           31600020
&P       SETC  'JSX'              ASSUME STANDARD PREFIX FOR LABELS     31800020
         AIF   (T'&PREFIX EQ 'O').JSX0010  TEST FOR SUPPLIED PREFIX     32000020
&P       SETC  '&PREFIX'          USE SUPPLIED PREFIX IF PRESENT        32200020
.JSX0010 ANOP                                                           32400020
&PL      SETC  '&P.L'             SET EXTENDED PREFIX                   32600020
&PL.BEGN EQU   *                                                 Y02939 32650002
&PL      DS    CL&LENJSXL         JOB SCHEDULING EXIT LIST (JSXL)       32800020
         ORG   &PL                                                      33000020
&PL.LGTH DC    AL2(&PL.SIZE)      LENGTH                                33200002
&PL.RCOD DC    AL1(0)             RETURN CODE                           33400020
&PL.RNRM    EQU  X'00'               NORMAL COMPLETION                  33450020
&PL.RAUT    EQU  X'04'               UNAUTHORIZED COMBINATION OF       *33500020
                                     PROGRAMS REFERENCED                33550020
&PL.PERR EQU   36                 PROGRAM ERROR                  Y02668 33560002
&PL.RCXT DC    AL1(0)             ORIGIN OF RETURN CODE          Y02668 33600002
*                                 IN JSXLRCOD                    Y02668 33650002
*  RETURN CODE ORIGIN VALUES (JSXLRCXT)                          Y02668 33700002
*    SAME ORIGIN VALUES ARE DEFINED IN THE IEL MAPPING           Y02668 33750002
&PL.JSS  EQU   0                  JOB SCHEDULING SUBROUTINE      Y02668 33800002
&PL.RI   EQU   2                  CONVERTER/SWA CREATE           Y02668 34200002
&PL.INIT EQU   3                  INITIATOR                             34400002
&PL.SSJS EQU   4                  SUBSYSTEM JOB SELECT           Y02668 34450002
&PL.SSI  EQU   5                  SUBSYSTEM INTERFACE            Y02668 34500002
&PL.SUBS EQU   6                  SUBSYSTEM                      Y02668 34550002
*        EQU   7-255              RESERVED                       Y02668 34600002
&COMMUN  SETC  '0'                ASSUME STANDARD VALUE FOR            *34800020
                                  COMMUNICATIONS POINTER                35000020
         AIF  (T'&COMM EQ 'O').JSX0020 TEST FOR SUPPLIED COMMUNICATIONS*35200020
                             POINTER                                    35400020
&COMMUN  SETC '&COMM'   USE SUPPLIED COMMUNICATIONS POINTER IF PRESENT  35600020
.JSX0020 ANOP                                                           35800020
&PL.COMM DC   A(&COMMUN)     COMMUNICATIONS POINTER BETWEEN EXIT       *36000020
                             ROUTINES                                   36200020
&PL.LDEF DS   1D             FIRST ELEMENT IN ARRAY OF EXIT DEFINITIONS 36400020
         ORG  &PL.LDEF                                                  36600020
&PL.LINK DS   XL1            LINKAGE INFORMATION                        36800020
&P.LNK   EQU  X'80'          CODE FOR LINKAGE TO NAME                   37000020
&P.XCTL  EQU  X'C0'          CODE FOR XCTL TO NAME                      37200020
&P.BR    EQU  X'40'          CODE FOR BRANCH TO ADDRESS                 37400020
&P.NULL  EQU  X'00'          CODE FOR NO EXIT SPECIFICATION             37600020
&PL.ID   DS   XL1            EXIT IDENTIFICATION                        37800020
&P.POST  EQU  X'80'          CODE FOR JOB SCHEDULING ROUTINE           *38000020
                             POST-PROCESSING EXIT ROUTINE               38200020
&P.PRINI EQU  X'40'          CODE FOR INITIATOR PRE-INVOCATION EXIT    *38400020
                             ROUTINE                                    38600020
&P.PTINI EQU  X'20'          CODE FOR INITIATOR POST-INVOCATION EXIT   *38800020
                             ROUTINE                                    39000020
&P.PRFRE EQU  X'10'          INITIATOR PRE-FREEPART EXIT        YM00047 39200002
*        EQU  X'08'          RESERVED                            Y02939 39600002
*        EQU  X'04'          RESERVED. MUST BE ZERO TO ASSURE           40200020
*                            COMPATIBILITY WITH FUTURE EXTENSIONS       40400020
*                            TO THE EXIT LIST FACILITY.                 40600020
*        EQU  X'02'          RESERVED. MUST BE ZERO TO ASSURE           40800020
*                            COMPATIBILITY WITH FUTURE EXTENSIONS       41000020
*                            TO THE EXIT LIST FACILITY.                 41200020
*        EQU  X'01'          RESERVED. MUST BE ZERO TO ASSURE           41400020
*                            COMPATIBILITY WITH FUTURE EXTENSIONS       41600020
*                            TO THE EXIT LIST FACILITY.                 41800020
&PL.DATA DS   CL6                                                       42000020
.********************************************************************** 42200020
.*       GENERATE AN INITIALIZED EXIT LIST IMAGE IF REQUESTED         * 42400020
.********************************************************************** 42600020
         ORG  &PL.LDEF                                                  42800020
         AIF  (N'&SYSLIST LT 3).J30 BY-PASS INITIALIZATION IF NOT      *43000020
                        REQUESTED                                       43200020
&A       SETA 3         START SCAN AT THE THIRD POSITIONAL OPERAND      43400020
&C       SETA 1         START WITH THE FIRST POSITIONAL SUBOPERAND      43600020
.J1      ANOP                                                           43800020
&LINKAGE SETC '&P.NULL' ASSUME NO LINKAGE HAS BEEN SPECIFIED            44000020
&B       SETA 3                                                         44200020
&D       SETA 1                                                         44400020
.*  MACRO VARIABLES USED TO GENERATE BYTE FOR EXIT TYPE                 44450002
&F1      SETC ''                                                        44600020
&F2      SETC ''                                                        44800020
&F3      SETC ''                                                        45000020
&F4      SETC ''                                                        45200020
&F5      SETC ''                                                        45400020
&F6      SETC ''                                                        45600020
&F7      SETC ''                                                        45800020
&F8      SETC ''                                                        46000020
&G1      SETC ''                                                        46200020
&G2      SETC ''                                                        46400020
&G3      SETC ''                                                        46600020
&G4      SETC ''                                                        46800020
&G5      SETC ''                                                        47000020
&G6      SETC ''                                                        47200020
&G7      SETC ''                                                        47400020
&G8      SETC ''                                                        47600020
.*                                                                      47650002
.*  -IF A JSXL EXIT HAS BEEN SPECIFIED, DETERMINE                       47700002
.*   THE TYPE OF EXIT LINKAGE.                                          47750002
.*  -GENERATE THE EXIT LINKAGE BYTE                                     47760002
.*                                                                      47770002
         AIF  (N'&SYSLIST(&A) LT 1).J6                                  47800020
         AIF  ('&SYSLIST(&A,1)' NE '').J2                               48000020
         AGO  .J6                                                       48200020
.J2      AIF  ('&SYSLIST(&A,1)' NE 'CALL').J3                           48400020
&LINKAGE SETC '&P.BR'                                                   48600020
         AGO  .J6                                                       48800020
.J3      AIF  ('&SYSLIST(&A,1)' NE 'LINK').J4                           49000020
&LINKAGE SETC '&P.LNK'                                                  49200020
         AGO  .J6                                                       49400020
.J4      AIF  ('&SYSLIST(&A,1)' NE 'XCTL').J5                           49600020
&LINKAGE SETC '&P.XCTL'                                                 49800020
         AGO  .J6                                                       50000020
.J5      MNOTE *,'INVALID LINKAGE FOR EXIT(&C) IN LIST'                 50200020
.J6      ANOP                                                           50400020
&P.X&C   DC   AL1(&LINKAGE)       SPECIFY EXIT LINKAGE                  50600020
.*                                                                      50650002
.*  -DETERMINE WHICH EXIT TYPE HAS BEEN SPECIFIED.                      50700002
.*  -GENERATE EXIT TYPE BYTE.                                           50750002
.*                                                                      50760002
.J7      AIF  (N'&SYSLIST(&A) LT &B).J25                                50800020
         AIF  ('&SYSLIST(&A,&B)' EQ '').J25                             51000020
         AIF  ('&SYSLIST(&A,&B)' NE 'POST').J9                          51200020
         AIF  (&POST EQ 0).J8                                           51400020
         MNOTE *,'POST-PROCESSING EXIT SPECIFIED BEFORE -- PROBABLE ERR*51600020
               OR'                                                      51800020
.J8      ANOP                                                           52000020
&POST    SETB 1                                                         52200020
&F1      SETC '+'                                                       52400020
&G1      SETC '&P.POST'                                                 52600020
         AGO  .J24                                                      52800020
.J9      AIF  ('&SYSLIST(&A,&B)' NE 'PRINI').J11                        53000020
         AIF  (&PRINI EQ 0).J10                                         53200020
         MNOTE *,'PRE-INVOCATION EXIT SPECIFIED BEFORE -- PROBABLE ERRO*53400020
               R'                                                       53600020
.J10     ANOP                                                           53800020
&PRINI   SETB 1                                                         54000020
&F2      SETC '+'                                                       54200020
&G2      SETC '&P.PRINI'                                                54400020
         AGO  .J24                                                      54600020
.J11     AIF  ('&SYSLIST(&A,&B)' NE 'PTINI').J13                        54800002
         AIF  (&PTINI EQ 0).J12                                         55000020
         MNOTE *,'POST-INVOCATION EXIT SPECIFIED BEFORE -- PROBABLE ERR*55200020
               OR'                                                      55400020
.J12     ANOP                                                           55600020
&PTINI   SETB 1                                                         55800020
&F3      SETC '+'                                                       56000020
&G3      SETC '&P.PTINI'                                                56200020
         AGO  .J24                                                      56400020
.J13     ANOP                                                   YM00047 56450002
         AIF   ('&SYSLIST(&A,&B)' NE 'PRFRE').J17               YM00047 56500002
         AIF   (&PRFRE EQ 0).J14                                YM00047 56550002
         MNOTE *,'PRE-FREEPART EXIT SPECIFIED BEFORE -- PROBABLE ERROR' 56600002
.J14     ANOP                                                   YM00047 56650002
&PRFRE   SETB  1                                                YM00047 56700002
&F4      SETC  '+'                                              YM00047 56750002
&G4      SETC  '&P.PRFRE'                                       YM00047 56800002
         AGO   .J24                                             YM00047 56850002
.J17     ANOP                                                     M0759 58596001
.J23     MNOTE *,'EXIT CODE(&D) INVALID FOR EXIT(&C) IN LIST'           58600020
.J24     ANOP                                                           58800020
&B       SETA &B+1                                                      59000020
&D       SETA &D+1                                                      59200020
         AGO  .J7                                                       59400020
.J25     DC   AL1(0&F1&G1&F2&G2&F3&G3&F4&G4&F5&G5&F6&G6&F7&G7&F8&G8)   *59600020
                             SPECIFY EXIT CODE                          59800020
         AIF  ('&LINKAGE' NE '&P.NULL' AND                             *60000020
               '&LINKAGE' NE '&P.BR').J27                               60200020
&ROUTINE SETC '0'                                                       60400020
         AIF  (N'&SYSLIST(&A) LT 2).J26                                 60600020
         AIF  ('&SYSLIST(&A,2)' EQ '').J26                              60800020
&ROUTINE SETC '&SYSLIST(&A,2)'                                          61000020
.J26     DC   XL2'0000'                                                 61200020
         DC   A(&ROUTINE)    ADDRESS OF EXIT ROUTINE                    61400020
         AGO  .J29                                                      61600020
.J27     ANOP                                                           61800020
&ROUTINE SETC ''                                                        62000020
         AIF  (N'&SYSLIST(&A) LT 2).J28                                 62200020
&ROUTINE SETC '&SYSLIST(&A,2)'                                          62400020
.J28     DC   CL6'&ROUTINE ' NAME OF EXIT ROUTINE                       62600020
.J29     ANOP                                                           62800020
&A       SETA &A+1                                                      63000020
&C       SETA &C+1                                                      63200020
         AIF  (&A LE N'&SYSLIST).J1                                     63400020
.J30     ANOP                                                           63600020
&PL.SIZE EQU   *-&PL.BEGN         JSXL SIZE                      Y02939 63650002
         MEND                                                           63800020
**/ %    JSXLPLS: ;                                                     64000002
* /******************************************************************** 64200020
*         DEFINE THE JOB SCHEDULING EXIT LIST                           64400020
* ********************************************************************/ 64600020
* DECLARE                                                               64800020
* 1       JSXL BASED(JSXLPTR) BOUNDARY(WORD),                           65000020
*      2     JSXLHDR,                                                   65050002
*         3     JSXLLGTH FIXED(15),  /* LENGTH OF JSXL               */ 65800002
*         3     JSXLRCOD POINTER(8), /* RETURN CODE                  */ 66600002
*%     DECLARE                                                          66620020
*      JSXLRNRM FIXED,                                                  66640020
*      JSXLRAUT FIXED,                                                  66660002
*      JSXLPERR FIXED;            /*                           Y02668*/ 66670002
*%     JSXLRNRM = 0;              /* NORMAL COMPLETION               */ 66700002
*%     JSXLRAUT = 4;              /* UNAUTHORIZED COMBINATION OF        66740002
*                                    PROGRAMS REFERENCED             */ 66790002
*%     JSXLPERR = 36;             /* PROGRAM ERROR             Y02668*/ 66840002
*         3     JSXLRCXT PTR(8),  /*ORIGIN OF RETURN CODE IN JSXLRCOD*/ 67600002
*         3     JSXLCOMM PTR(32), /*EXIT ROUTINES COMMUNICATION AREA */ 68600002
*         /***********************************************************/ 69200002
*       2     JSXLLDEF(256),         /* ARRAY OF EXIT DEFINITIONS    */ 69400002
*               /****************************************************** 69600020
*                 DEFINITION OF LINKAGE TO BE USED - THE FOLLOWING      69650002
*                 VALUES MAY BE USED IN JSXLLINK:                       69700002
*                   JSXNULL - NO EXIT SPECIFICATION                     69750002
*                   JSXBR   - BRANCH TO ADDRESS                         69800002
*                   JSXLNK  - LINK TO NAME                              69850002
*                   JSXXCTL - XCTL TO NAME                              69900002
*               ******************************************************/ 69950002
*               3  JSXLLINK PTR(8),   /* METHOD OF EXIT              */ 70000002
*               3  JSXLID BIT(8),     /* EXIT IDENTIFIER             */ 70050002
*                  4  JSXPOST BIT(1), /* POST-PROCESSING EXIT  Y02939*/ 72800002
*                  4  JSXPRINI BIT(1),/* PRE-INVOCATION EXIT   Y02939*/ 73600002
*                  4  JSXPTINI BIT(1),/* POST-INVOCATION EXIT  Y02939*/ 74400002
*                  4  JSXPRFRE BIT(1),/* PRE-FREEPART EXIT   @YM00047*/ 74450002
*                  4  * BIT(4),       /* RESERVED              Y02939*/ 76800002
*               /****************************************************** 77000020
*                  LINKAGE DATA -- THE FOLLOWING VALUES MAY BE USED IN  77200020
*                  JSXLDATA:                                            77400002
*                  1. IF THE SPECIFIED LINKAGE IS 'LINK' OR 'XCTL',     77600020
*                     THEN THE 6-BYTE EBCDIC NAME OF THE ROUTINE TO BE  77800020
*                     GIVEN CONTROL SHOULD BE PLACED IN THIS FIELD,     78000020
*                     LEFT-JUSTIFIED AND PADDED WITH BLANKS IF          78200020
*                     NECESSARY.                                        78400020
*                  2. IF THE SPECIFIED LINKAGE IS A 'BRANCH', THEN THE  78600020
*                     ADDRESS OF THE ROUTINE TO RECEIVE CONTROL SHOULD  78800020
*                     BE PLACED IN THIS FIELD, AND THE HIGH-ORDER       79000020
*                     BYTES OF THIS FIELD SHOULD BE SET TO HEXIDECIMAL  79200020
*                     ZEROS.                                            79400020
*               ******************************************************/ 79600020
*               3  JSXLDATA CHARACTER(6);                               79800020
*%        DECLARE   /* JSXLLINK CODE INDICATING XCTL LINKAGE */         80000020
*         JSXXCTL FIXED;                                                80200020
*%        JSXXCTL = 192;                                                80400020
*%        DECLARE  /* JSXLLINK CODE INDICATING LINK LINKAGE */          80600020
*         JSXLNK FIXED;                                                 80800020
*%        JSXLNK = 128;                                                 81000020
*%        DECLARE  /* JSXLLINK CODE INDICATING CALL LINKAGE */          81200020
*         JSXBR FIXED;                                                  81400020
*%        JSXBR = 64;                                                   81600020
*%        DECLARE  /* JSXLLINK CODE INDICATING NO LINKAGE */            81800020
*         JSXNULL FIXED;                                                82000020
*%        JSXNULL = 0;                                                  82200020
*%; /*  RETURN CODE ORIGIN VALUES (JSXLRCXT)                   Y02668*/ 82250002
*%; /*    SAME ORIGIN VALUES ARE DEFINED IN THE IEL MAPPING    Y02668*/ 82300002
*%  DCL  JSXLJSS  FIXED;          /* JOB SCHEDULING SUBROUTINE Y02668*/ 82400002
*%       JSXLJSS  = 0;                                                  82800002
*%  DCL  JSXLRI   FIXED;          /* CONVERTER/SWA CREATE      Y02668*/ 83600002
*%       JSXLRI   = 2;                                                  84000002
*%  DCL  JSXLINIT FIXED;          /* INITIATOR                 Y02668*/ 84200002
*%       JSXLINIT = 3;                                                  84600002
*%  DCL  JSXLSSJS FIXED;          /* SUBSYSTEM JOB SELECT      Y02668*/ 84650002
*%       JSXLSSJS = 4;            /*                           Y02668*/ 84700002
*%  DCL  JSXLSSI  FIXED;          /* SUBSYSTEM INTERFACE       Y02668*/ 84750002
*%       JSXLSSI  = 5;            /*                           Y02668*/ 84800002
*%  DCL  JSXLSUBS FIXED;          /* SUBSYSTEM                 Y02668*/ 84850002
*%       JSXLSUBS = 6;            /*                           Y02668*/ 84900002
./  ADD  SSI=80240056,NAME=IEFVMAWA
         MACRO                                                          00020000
         IEFVMAWA                                                       00040000
*                                                                       00040403
*          MACMEAN  AWA MEANS AUXILIARY WORK AREA              @G16APPK 00044403
*          MACCOMP  SC1B9/PZD02                                @G16APPK 00048403
*          MACSTAT  76322/G16APPK                              @G16APPK 00052403
*                                                              @G16APPK 00056403
* STATUS - VS2 SU16 - IN THIS MACRO, SU 16 SUPPORTS            @G16APPK 00060403
*          VPSS SUPPORT (SU 29 - @G29AN2E).                    @G16APPK 00064403
*          MERGE SU 4, 10, 16 CODE TO REL 37 BASE PTF          @ZA28955 00066403
*                                                                     * 00068403
*          ********************************************************     00080000
*          *                                                      *     00100000
*          *    THE FOLLOWING INFORMATION IS USED BY THE          *     00120020
*          *    INTERPRETER  ROUTINES AND IF REQUIRED             *     00140020
*          *    MUST APPEAR AT THE BEGINNING OF THE LOCAL WORK    *     00160000
*          *    AREA IMMEDIATELY FOLLOWING THE LOCAL WORK AREA    *     00180000
*          *     LENGTH. THERE ARE TWO ALTERNATE MAPPINGS FOR     *     00200000
*          *      MUTUALLY-EXCLUSIVE AUXILIARY ROUTINES. THE      *     00220000
*          *    FIRST IS FOR THE MESSAGE ROUTINE AND THE SECOND   *     00240000
*          *   FOR THE GET PARAMETER AND TEST & STORE ROUTINES    *     00260000
*          *                                                      *     00280000
*          ********************************************************     00300000
*                                                                       00320000
QLINKWA  DS    CL40                WORK AREA FOR Q LINKAGE ROUTINE      00340000
DICTDD   EQU   QLINKWA+26        AREA USED TO BUILD DICT. ENTRY YM01882 00350002
         ORG   QLINKWA                                         @G29AN2E 00350603
SUBSYSWA DS    0CL40               USED BY SUBSYS KYWD RTNE    @G29AN2E 00351203
SSEPA    DS    4F                  EXTERNAL PARM AREA          @G29AN2E 00351803
*                                  THE EXTERNAL PARM AREA IS   @G29AN2E 00352403
*                                  MAPPED BY IEFZB505          @G29AN2E 00353003
LOCPLIST DS    0CL8                PARM LIST FOR SWA LOCATE    @G29AN2E 00353603
SSEPAPTR DS    F                   PTR TO EPA PTR              @G29AN2E 00354203
LOCFNCP  DS    F                   PTR TO FUNCTION BYTE        @G29AN2E 00354803
LOCFNCD  DS    CL2                 FUNCTION BYTE FOR SWA LOCATE@G29AN2E 00355403
SSPRMNO  DS    CL1                 NUMBER OF SSPARMS           @G29AN2E 00356003
SSNML    DS    CL1                 LENGTH OF SSNAME            @G29AN2E 00356603
SSNMPTR  DS    F                   PTR TO SSNAME IN INT. TEXT  @G29AN2E 00357203
SSPRMPTR DS    F                   PTR TO FIRST LEN-SSPARM PAIR@G29AN2E 00357803
*                                  IN INTERNAL TEXT            @G29AN2E 00358403
SSEPAP   DS    F                   EPA PTR                     @G29AN2E 00359003
MSGSEC   DS    CL1                 PRIMARY ERROR MSG NUMBER             00360000
MSGKEY   DS    CL1                 SECONDARY ERROR MSG NUMBER           00380000
         DS    0D                       ALLIGNMENT.                     00400000
MSGWA    DS    CL128               WORK AREA FOR MESSAGE ROUTINE        00420000
         ORG   MSGWA                                                    00440000
*                                  WORK AREA FOR GP AND T&S ROUTINES    00460000
TRR1     DS    F                        TTR OF FIRST/NEXT SCAN BUFFER   00480000
TBEGPX   DS    F                        PTR TO START OF INTERNAL TEXT   00500000
TCLEANUP DS    F                        POINTER TO CLEANUP RETURN       00520000
TBRANCH  DS    F                        POINTER TO BRANCHING TABLE      00540000
TBASE    DS    CL1                      BASE KEY                        00560000
TSUBPARM DS    CL1                      SUBPARAMETER FLAG FIELD         00580000
TSP1     DS    CL1                      RESERVED                        00600000
TSP2     DS    CL1                      RESERVED                        00620000
TKEYPX   DS    F                        POINTER TO CURRENT KEY          00640000
TNUMPX   DS    F                        PTR TO CURRENT NBR PARAMETERS   00660000
TLEN     DS    F                        CURRENT LENGTH                  00680000
TLENPX   DS    F                        POINTER TO CURRENT LENGTH       00700000
TPDTSAVE DS    F                        GET SAVE PDT AREA               00720000
TNUM     DS    F                        TOTAL NMBR PARAMTRS THIS KEYWRD 00740000
TCT      DS    F                        NUMBER OF PARAMETERS PROCESSED  00760000
TNUM1    DS    F                        TOTAL NUMBER OF SUBPARAMETERS   00780000
TCT1     DS    F                        NMBR OF SUBPARAMETERS PROCESSED 00800000
TPDTP    DS    F                        PTR TO PDT FOR THIS/LAST KEY    00820000
TCPDTP   DS    F                        PTR TO CURRENT POSITION IN PDT  00840000
TWORK    DS    D                        INTERNAL GP/T&S WORK AREA       00860000
TSP3     DS    F                        WORK SPACE                      00880000
         SPACE 2                                                        00900000
*                                  WORK AREA FOR SEARCHING DICTIONARY.  00920000
SRCHSW1  DS    CL1                   SWITCHES                  @ZM30190 00940003
SRCHF1   EQU   128                      BIT0                            00960000
*                                          0 = MATCH OR ERROR.          00980000
*                                          1 = MATCH W OR W/O QUALIFIER 01000000
SRCHF2   EQU   64                       BIT 1                           01020000
*                                          0 = DDNAME SEARCH.           01040000
*                                          1 = SCT SEARCH.              01060000
SRCHF3   EQU   32                       BIT 2 - RETRY ON NOT FOUND.     01080000
SRCHF4   EQU   16                       BIT 3 - SEARCH FROM RELPROC.    01100000
SRCHF5   EQU   8                       BIT 4 - IF ON MEANS THAT  A37550 01101021
*                                      A SECOND SUBSTITUTION JCL A37550 01101421
*                                      MESSAGE IS NEEDED.USED BY A37550 01101821
*                                      MODULE IEFVFB.            A37550 01101921
SRCHF6   EQU   4                       BIT 5 - RESERVED          A32730 01102020
SRCHF7   EQU   2                       BIT 6 - RESERVED          A32730 01103020
SRCHF8   EQU   1                       BIT 7                     A32730 01104020
*                                      0 = ENTER SYMBOLIC TEXT   A32730 01105020
*                                      1 = DO NOT ENTER TEXT     A32730 01106020
*                                      BIT 7 SET BY IEFVFB TO    A32730 01107020
*                                      TELL IEFVFA NOT TO ENTER  A32730 01108020
*                                      SYMBOLIC TEXT INTO THE    A32730 01109020
*                                      INTERNAL TEXT BUFFER.     A32730 01110020
SRCHCLR  EQU   255              SUM OF SRCHF1 THROUGH SRCHF8   @ZM30190 01111003
*                                                                A32730 01112020
SRCHTTR  DS    CL3                 TTR OF DICT TO BE GOTTEN.            01120000
SRCHREL  DS    2F                  SAVE SPACE FOR RELPROC/RELPGM.       01140000
SRCHL1   DS    F                   LEVEL 1 RE SAVE AREA.                01160000
SRCHL2   DS    F                   LEVEL 2 RE SAVE AREA.                01180000
SRCHL3   DS    3F                  LEVEL 3 RE,RF & R0 SAVE AREA.        01200000
SRCHNBR  DS    CL1                 SLOT FOR NBR OF PARAMETERS.          01220000
         ORG   MSGWA+128                                                01240000
ENDAWA   DS    0D                                                       01260000
*                                                                       01280000
*          ********************************************************     01300000
*          *                                                      *     01320000
*          *              END OF AUXILIARY WORK AREA              *     01340000
*          *                                                      *     01360000
*          ********************************************************     01380000
*                                                                       01400000
         MEND                                                           01420000
./  ADD  SSI=23361881,NAME=IEFVMCWA
         MACRO                                                          00020000
         IEFVMCWA &X                                                    00040000
*                                                                       00060000
*          ********************************************************     00080000
*          *                                                      *     00100000
*          *   THE INFORMATION MAPPED BY THIS MACRO IS USED ONLY  *     00120000
*          *     BY THE INTERPRETER CONTROL ROUTINE AND IS NOT    *     00140000
*          *        PRESERVED BY OTHER INTERPRETER ROUTINES       *     00160000
*          *                                                      *     00180000
*          ********************************************************     00200000
*                                                                       00220000
CWA      DSECT                                                          00240000
         USING CWA,RA                                                   00260000
         AIF   ('&X' EQ 'NA').SKIP                                      00280000
         IEFVMAWA                                                       00300000
.SKIP    ANOP                                                           00320000
DDWA1    DS    CL1                                                      00340000
DDWA2    DS    CL1                                                      00360000
DDWA3    DS    CL3                                                      00380000
DDWA4    DS    CL3                                                      00400000
DDWA5    DS    CL8                                                      00420000
DDWA6    DS    CL1                                                      00440000
DDWA61   DS    CL1                                                      00460000
DDWA62   DS    CL1                                                      00480000
DDWA63   DS    CL1                                                      00500000
DDWA64   DS    F                                                        00520000
DDWA7    DS    D                                                        00540000
DDWA8    DS    0D                                                       00560000
SIOT     DS    CL176                                                    00580000
DDWA10   DS    0D                                                       00600000
JFCB     DS    CL176                                                    00620000
ENDCWA   DS    0D                                                       00640000
LCWA     EQU   ENDCWA-CWA          LENGTH OF CONTROL ROUTINE WORK AREA  00660000
         MEND                                                           00680000
./  ADD  SSI=80240057,NAME=IEFVMDWA
         MACRO                                                          00020000
         IEFVMDWA &X                                                    00040000
*                                                                       00060000
* MACMEAN  DWA MEANS IEFVDA LOCAL WORK AREA                    @Z40MPTH 00065003
* MACCOMP Y-3 SC1B9/PZD83                                      @Z40MPTH 00070003
* MACSTAT Y-3 74305/Z40MPTH                                    @Z40MPTH 00075003
*         MERGE SU4,10,16 CODE TO REL 037 BASE PTF             @ZA28955 00077003
*          ********************************************************     00080000
*          *                                                      *     00100000
*          *   THE INFORMATION MAPPED BY THIS MACRO IS USED ONLY  *     00120000
*          *       BY THE INTERPRETER DD ROUTINE AND IS NOT       *     00140000
*          *        PRESERVED BY OTHER INTERPRETER ROUTINES       *     00160000
*          *                                                      *     00180000
*          ********************************************************     00200000
*                                                                       00220000
DWA      DSECT                                                          00240000
         USING DWA,RA                                                   00260000
         DS    0D                                                       00280000
INAMDDWA EQU   *                                                        00300000
         AIF   ('&X' EQ 'NA').SKIP                                      00320000
         IEFVMAWA                                                       00340000
.SKIP    ANOP                                                           00360000
TTRS     DS    F SAVE FOR TTR                               289         00380000
DDSWA    DS    CL1 DD SWITCHES                              289         00400000
DDWAA    DS    CL3                                                      00420000
DDWAB    DS    0F ALIGNMENT                                             00440000
DDWA1    DS    CL1                                                      00460000
DDWA2    DS    CL1                                                      00480000
DDWA3    DS    CL3                                                      00500000
DDWA4    DS    CL3                                                      00520000
DDWA5    DS    CL8                                                      00540000
DDWA6    DS    CL1                                                      00560000
DDWA61   DS    CL1 *                   WORK AREA FOR BUFIN,BUFOUT 20002 00580000
DDWA62   DS    CL1                                                      00600000
DDWA63   DS    CL1                                                      00620000
DDWA64   DS    F                                                        00640000
DDWA7    DS    D                                                        00660000
DDWA8    DS    0D                                                       00680000
SIOT     DS    CL176                                                    00700000
DDWA10   DS    0D                                                       00720000
JFCB     DS    CL176                                                    00740000
DDWA12   DS    0D                                                       00760000
JFCBX    DS    CL176                                                    00780000
         DS    0D                                                       00800003
JFCBEX   DS    CL176        JFCB EXTENSION FOR 3800 DATA       @Z40MPTH 00850003
         MEND                                                           00900003
./  ADD  SSI=60630203,NAME=IEFVMEWA
         MACRO                                                          00020000
         IEFVMEWA &X                                                    00040000
.* C 005750                                                      Y01029 00040401
.* A 003700-003740                                               Y01113 00042001
.* DEFINED BIT-EAFRSTEP-SET WHEN PROCESSING 1ST SCT FOR RSTRT  @ZA07749 00046003
         SPACE                                                          00050002
*   MACMEAN   IEFVMEWA MEANS EXEC PROCESSOR WORK AREA           YM00368 00052002
*   MACCOMP   Y-2  SC1B9/PZD11                                  YM00368 00054002
*   MACSTAT   Y-2  73255/YM00368                                YM00368 00056002
         SPACE                                                          00058002
*                                                                       00060000
*          ********************************************************     00080000
*          *                                                      *     00100000
*          *   THE INFORMATION MAPPED BY THIS MACRO IS USED ONLY  *     00120000
*          *      BY THE INTERPRETER EXEC ROUTINE AND IS NOT      *     00140000
*          *        PRESERVED BY OTHER INTERPRETER ROUTINES       *     00160000
*          *                                                      *     00180000
*          ********************************************************     00200000
*                                                                       00220000
EWA      DSECT                                                          00240000
*                                                                A22206 00245018
*2362                                                              AACA 00250017
         USING EWA,RA                                                   00260000
         AIF   ('&X' EQ 'NA').SKIP                                      00280000
         IEFVMAWA                                                       00300000
.SKIP    ANOP                                                           00320000
EATEMP1  DS    F                  TEMPORARY SAVE ONE.                   00340000
EATEMP2  DS    F                  TEMPORARY SAVE TWO.                   00360000
EATEMP3  DS    F                  TEMPROARY AREA FOR JOBCAT TTR  Y01113 00370001
*                                 USED WHEN READING IN COPIES OF Y01113 00372001
*                                 CONCATENATED JOBCAT SIOTS.     Y01113 00374001
*                                                                       00380000
EASW1    DS    CL1           FLAGS (INTERNAL).                          00400000
EAPGMSDF EQU   128                PGM EQUAL *. FLAG.                    00420000
EAPGMEF  EQU   64                 PGM EQUAL FLAG.                       00440000
EAACTORF EQU   32                 PREVIOUS ACT O'RIDE FLAG INDICATION.  00460000
EACONORF EQU   16                 PREVIOUS COND O'RIDE INDICATION.      00480000
EACNDF1  EQU   8                  COND HSKPNG BIT 1.                    00500000
EACNDF2  EQU   4                  COND HSKPNG BIT 2.                    00520000
EAPARMF1 EQU   2                  PARM FIELD HSKPNG FLAG.               00540000
EAERLYER EQU   1                  EARLY ERROR FLAG. -OFF- FAKE SCT.     00560000
EASW2    DS    CL1           FLAGS 2 (INTERNAL).                        00565014
EAREGION EQU   128                REGION ON EXEC STMT.                  00570014
EAADDR   EQU   64                 ADDRSPC ON EXEC STMT.          Y01029 00575001
EAFONSTF EQU   32                 FOUND RESTARTING STEP.           AACA 00576017
EACLCOND EQU   16                CLEAR COND. CODES DEFERRED C/R    AACA 00577017
EAEACCTE EQU   08  ACCT=  ON EXEC PROC STATEMENT                 A22206 00578018
EAFRSTEP EQU   04                  FIRST STEP DEFERRED RESTART @ZA07749 00579003
*                                                                       00580000
EASNSVL  DS    C                  STEPNAME LENGTH.                      00600000
EASNSV   DS    8C                 STEPNAME TEMPORARY SAVE.              00620000
EAPCSVL  DS    C                  PROCNAME LENGTH.                      00640000
EAPCSV   DS    8C                 PROCNAME TEMPORARY SAVE.              00660000
EAPRSV   DS    8C                 OVERRIDDEN PROCSTEP TEMPORARY SAVE.   00680000
EAPRSVF  DS    C                  O'RIDE FLAG (USED BY EAORIDE).        00700000
EAPRSVF2 DS    C                   BYTE 2 OF O'RIDE FLAGS.      YM00368 00710002
EATTRSV  DS    F                  TEMPORARY TTR SAVE AREA.              00720000
*                                                                       00740000
EAREGSV  DS    10F                INTERNAL EXEC REG SAVE AND WORK AREA. 00760000
EAWKEND  EQU   *                  END OF EXECUTE WORK AREA.             00780000
*********************************************************************** 00800000
         SPACE 2                                                        00820000
*                                  TABLES                               00840000
ACT      DS    CL176                     ACCOUNT CONTROL TABLE (ACT)    00860000
EAORTABL DS    CL176              O'RIDE TABLE WORK SPACE.              00880000
EAAUXWK  DS    CL176              AUXILIARY TABLE WORK SPACE.           00900000
ENDEWA   DS    0D                                                       00920000
LEWA     EQU   ENDEWA-EWA          LENGTH OF EXEC ROUTINE WORK AREA     00940000
         MEND                                                           00960000
./  ADD  SSI=80240059,NAME=IEFVMIWA
*%GOTO INTPROLG;                                                        00300002
         MACRO                                                          00600002
         IEFVMIWA                                                       00900002
*%INTPROLG:;                                                            01200002
*/*                                                                     01500002
*                                                                       01800002
*   MACMEAN  IEFVMIWA MEANS INTERPRETER WORK AREA                       02100002
*   MACCOMP Y-3 SC1B9/PZD02                                    @G16AP2F 02400003
*   MACSTAT Y-3 76324/G16AP2F                                  @G16AP2F 02450003
*                                                              @G16AP2F 02500003
*   STATUS - VS2 SU16 - IN THIS MACRO, SU 16 SUPPORTS          @G16AP2F 02550003
*            VPSS SUPPORT (SU 29 - @G29AN2E).                  @G16AP2F 02600003
*            MERGE SU4,10,16 CODE TO REL 037 BASE PTF          @ZA28955 02650003
*                                                                       03000002
*********************************************************************** 03300002
*                                                                     * 03600002
*   IEFVMIWA MAPS DATA FIELDS AND SWITCHES UNIQUE TO THE INTERPRETER. * 03900002
*   IT MUST BE INVOKED IMMEDIATELY FOLLOWING IEFCOMWA, TO INSURE      * 04200002
*   CORRECT ADDRESSABILITY. REGISTER 12 IS THE BASE REGISTER ACROSS   * 04500002
*   THE ENTIRE WORK AREA MAPPED BY BOTH IEFCOMWA AND IEFVMIWA.        * 04800002
*   THEREFORE DISPLACEMENTS FOR THE INTERPRETER WORK AREA MUST BE A   * 05100002
*   CONTINUATION OF THOSE FOR THE COMMON WORK AREA.                   * 05400002
*                                                                     * 05700002
*********************************************************************** 06000002
**/                                                                     06300002
*%GOTO INTWAPLS;                                                        06600002
*/*                                                                     06900002
*                                                                       07200002
INTWA    DS    0F                  START OF INTRP WORK AREA.     Y02668 07500002
*                                                                       07800002
*  POINTERS, WORK AND DATA AREAS.                                       08100002
*                                                                       08400002
IWAINTS5 DS    F                   PTR TO JOB MNGMT RECORD         AABA 08700002
TSIOT    DS    F                        NEXT AVAIL SIOT TTR             09000002
*                                  TTR'S OF TABLES IN THE Q             09300002
TJOBLIB  DS    F                        TTR OF JOBLIB SIOT              09600002
TSREFB   DS    F                        TTR OF 1ST DICTIONARY           09900002
TACT     DS    F                        TTR OF O'RIDE ACT               10200002
TPROC    DS    F                        NEXT PROC STEP O'RIDE TABLE     10500002
RELPROC  DS    F                        OFFSET LAST PROC/ TTR DICT      10800002
RELPGM   DS    F                        OFFSET LAST PGM/ TTR DICT       11100002
DSENQTP  DS    F                   POINTER TO DSENQ TABLE (ZERO IN SSS) 11400002
IWAJOBS1 DS    2F                  CHKPT/REST - CALLING STEPNAME.  AAAA 11700002
IWAJOBS3 DS    2F                  CHKPT/REST - STEPNAME/PROCSTEP. AAAA 12000002
IWAJOBS6 DS    F                        REGION SIZE ON JOB STMT    AAAA 12300002
IWASTAPL DS    F         POINTER TO R/I STAE PARAMETER LIST      A39047 12600002
IWAEXPNO DS    F             EXEC PROC STMT NUMBER              YM02714 12900002
IWANXTSV DS    F                   SVA OF NEXT BLOCK IN CHAIN   YM02716 13200002
IWAJMRPT DS    F                   POINTER TO JMR.               Y02668 13500002
TSAVEP   DS    2F                  WORK AND REG SAVE AREA.              13800002
IWAJSIOT DS    F         TTR OF JOBCAT SIOT                      Y01113 14100002
IWASCTAD DS    F                   ADDRESS OF SCT.               Y02668 14700002
IWASIOTP DS    F                   ADDR OF SIOT.                 Y02668 15600002
IWAJFCBP DS    F                   ADDR OF JFCB.                 Y02668 15900002
DSNTPSA  DS    F                   DSNT PROCESSING RTNE REG SA.  Y02668 16200002
IWASAVPT DS    F                   PTR TO SAVEAREA OF INT CALLER.Y02668 16500002
AOJRNLEX DS    CL8                 JRNL/MERGE EXIT LIST ENTRY.   Y02668 16800002
ORIDSNM  DS    CL8                 NAME OF NEXT PROC STEP OVERRIDDEN    17100002
*                                  UNIQUE NAME QUALIFIER                17400002
UNQNAME  DS    CL23     SYSYYDDD.TTTTTTT.XYZZZ.JOBNAME.&NAME  OR   AADA 17700002
*                                                     .UNIQUE NO.  AADA 18000002
*                       SYSYYDDD - CONSTANT "SYS" FOLLOWED BY 5    AADA 18300002
*                                  NUMERIC CHARACTERS DENOTING DATEAADA 18600002
*                       TTTTTTT  - CONSTANT "T" FOLLOWED BY A 6    AADA 18900002
*                                  CHARACTER NUMERIC TIME STAMP    AADA 19200002
*                       XYZZZ      - X= ONE ALPHA CHARACTER        AADA 19500002
*                                      CURRENTLY SPECIFIED AS 'R'       19800002
*                                   -Y = ONE ALPHA CHARACTER       AADA 20100002
*        DENOTING SYSTEM VERSION. CURRENTLY SPECIFIED AS "A"            20400002
*                                      A = VS2/RELEASE 2                20700002
*                                  - ZZZ = 3 NUMERIC CHARACTERS    AADA 21000002
*                                          FOR UNIQUENESS          AADA 21300002
*                       JOBNAME - NAME OF JOB FOR WHICH THE DATA   AADA 21600002
*                                  SET WAS GENERATED               AADA 21900002
*                       &NAME - AN ALPHANUMERIC FIELD CONTAINING   AADA 22200002
*        THE "NAME" PORTION OF AN &NAME                            AADA 22500002
*                       UNIQUE NO. - A UNIQUE CHARACTER STRING BEGIN-   22800002
*        NING WITH "R" AND ENDING WITH A NUMERIC VALUE.                 23100002
         DS    CL1                 RESERVED                      Y02668 23400002
UNNU     DS    H                        UNIQUE NAME SERIAL IN BINARY    23700002
JEDSWS   DS    H                        JOB, EXEC, OR DD SWITCHES (LWA) 24000002
JCTS     DS    H                        JCT POINTER (IWA)               24300002
SCTS     DS    H                        SCT POINTER (IWA)               24600002
JACTS    DS    H                        JACT POINTER (LWA)              24900002
SIOTS    DS    H                        SIOT POINTER (LWA)              25200002
JFCBS    DS    H                        JFCB POINTER (LWA)              25500002
JFCBXS   DS    H                        JFCBX POINTER (LWA)             25800002
DSNAMES  DS    H                        DSNAME POINTER (IWA)            26100002
SREFBS   DS    H                        DICTIONARY 1 PTR (IWA)          26400002
DREFBS   DS    H                        DICTIONARY 2 PTR (IWA)          26700002
POVRRDS  DS    H                        POVRRD POINTER (IWA)            27000002
ACTS     DS    H                        ACT POINTER (IWA)               27300002
JFCBES   DS    H                       POINTER TO JFCBE (DWA)  @Z40MPTH 27350003
JCTXS    DS    H                       JCTX PTR (IWA)          @Z40RPSM 27400003
*                                                                       27600002
DDINTNO  DS    H                   INTERNAL DD SEQUENCE NBR.     Y02668 27900002
IWACATCT DS    CL1  COUNT OF CONCATENATED PVT.CATS.             Y01113  28200002
DJBCLAS  DS    CL1                 MAXIMUM JOBCLASS.                    28500002
DINBPLP1 DS    CL1                      BYPASS LABEL PROCESIONG DEFAULT 28800002
*                                                                       29100002
*  SWITCH BYTES.                                                        29400002
*                                                                       29700002
IWAEXTS  DS    CL1            SPECIAL CALLER EXITS                I171  30000002
IWAQENTR EQU   1                        BIT-7 SPECIAL QMNGR ENTRY I171  30300002
SWA      DS    CL1                 SWITCH A                             30600002
JHS      EQU   64                      BIT-1 JOB HAS STEP               30900002
JCTTQ    EQU   32                       BIT-2 JCT TO  PUT IN Q          31200002
SCTTQ    EQU   16                       BIT-3 SCT TO PUT IN Q           31500002
SWC      DS    CL1                 SWITCH C                             31800002
DSNTQ    EQU   4                        BIT-5 DSN TABLE TO PUT IN Q     32100002
VOLREF   EQU   2                        BIT-6 DSN VOL REF SW   @ZA01890 32200003
SWD      DS    CL1                 SWITCH D                             32400002
JOBADDRF EQU   128                      BIT-0 ADDRSPC ON JOB STMTY01029 32700002
JOBREGNS EQU   64                       BIT-1 REGION ON JOB STMT.   354 33000002
FEXRCV   EQU   32                       BIT-2 1ST EXEC RCVD THIS JOB    33300002
FDDRCV   EQU   16                       BIT-3 FIRST DD RCVD THIS STEP   33600002
DBFST    EQU   8                        BIT-4 FIRST ENTRY TO DSENQ      33900002
DCTFST   EQU   2                        BIT-6 FIRST DICT ENTRY RCVD     34200002
TIMDFPRC EQU   1                       BIT-7 PROCESS TIME DEFAULT       34500002
SWF      DS    CL1                 SWITCH F  PROCEDURE SWITCHES         34800002
ORPARMOR EQU   128                      BIT-0 PARM OVERRIDE.            35100002
ORPARMBL EQU   64                       BIT-1 PARM BLOCK.               35400002
ORCONDOR EQU   32                       BIT-2 COND OVERRIDE.            35700002
ORTIMEOR EQU   16                       BIT-3 TIME OVERRIDE.            36000002
ORTIME0  EQU   8                        BIT-4 TIME ZERO.                36300002
ORACTOR  EQU   4                        BIT-5 ACCT OVERRIDE.            36600002
ORREGOR  EQU   2                        BIT-6 REGION OVERRIDE.          36900002
ORADDROR EQU   1                        BIT-7 ADDRSPC OVERRIDE.  Y01029 37200002
*                                  TABLE PTRS (S-CONS) IN T&S ID ORDER  37500002
SWG      DS    CL1                 ADDITIONAL PROCEDURE SWITCHES.  AAAA 37800002
ORRDOR   EQU   128                      RD O'RIDE.                 AAAA 38100002
ORSDPOR  EQU   64   STEP DISPATCHING PRIORITY OVERRIDE -SET AND    I241 38400002
*                        TESTED IN IEFVEA                          I241 38700002
ORFLG2SW EQU   1                       SET BIT IN ORFLAGS2              39000002
IWAINTS8 DS    CL1                 FLAGS FOR CKCKPT/RESTART.       AAAA 39300002
*                                       BITS 0 AND 1 MUST BE ZERO. AAAA 39600002
JOBRDNR  EQU   32                       BIT-2 RD=NR                AAAA 39900002
JOBRDNC  EQU   16                       BIT-3 RD=NC OR RD=RNC      AAAA 40200002
JOBRDR   EQU   8                        BIT-4 RD=R OR RD=RNC       AAAA 40500002
*                                       BITS 5 THRU 7 MUST BE ZERO AAAA 40800002
JBCONCAT DS    CL1                 NBR OF JOBLIB SIOTS.                 41100002
IWAWRNMS DS    CL1                 WARNING MSG CODE.             Y02668 41400002
IWAJBADR DS    CL1                 ADDRSPC PARAM ON JOB STMT.    Y01029 41700002
CRSW1    DS    CL1                CHECKPOINT RESTART SWITCHES      AACA 42000002
CPDUM    EQU   32   BIT 2         DUMMY SCT REQUIRED-STEP FLUSH    AACA 42300002
IWANELEN DS    CL1                 LENGTH OF NEL.                       42600002
DDINO    DS    CL1                 DD INTERNAL NO. FOR SIOT             42900002
DDSWX1   DS    CL1                DD SWITCHES                    Y01113 43200002
SDDNSWA  EQU   DDSWX1              SWITCH FOR SEARCH DDNAME REF TABLE   43500002
SDDNSW   EQU   X'80'                                                    43800002
IWAJCAT  EQU   X'20'              JOB CAT SWITCH                 Y01113 44100002
IWASCAT  EQU   X'10'              STEP CAT SWITCH                Y01113 44400002
IWASCAT2 EQU   X'08'               STEPCAT FOUND SWITCH.                44700002
IWASNUMB DS    CL1                 NUMBER OF STEPS.              Y02668 45000002
*                                                                Y02668 45300002
AOSW2    DS    CL1                                               Y02668 45600002
AODFLTKW EQU   X'01'               DEFAULT OK THIS KEYWORD.      Y02668 45900002
AOMAXERR EQU   X'02'               STATIC DD MAX EXCEEDED.       Y02668 46200002
AONOREAD EQU   X'04'               BYPASS READ OF TEXT STRING.   Y02668 46500002
*                                  TABLES                               46800002
         DS    CL1                 RESERVED                      Y02668 47100002
         DS    0F                       ALLIGNMENT.                     47400002
SREFB    DS    CL176                    DICTIONARY 1 (INPUT)            47700002
         DS    0F                       ALLIGNMENT.                     48000002
DREFB    DS    CL176                    DICTIONARY 2 (SEARCH)           48300002
         DS    0F                       ALLIGNMENT.                     48600002
JCT      DS    CL176                     JOB CONTROL TABLE (JCT)        48900002
         DS    0F                                                       48950003
JCTX     DS    CL176     JOB CONTROL TABLE EXTENSION(JCTX).    @Z40RPSM 49000003
DNRT     DS    CL78                DDNAME REFERENCE TABLE               49200002
         DS    CL2                 RESERVED                      Y02668 49500002
         DS    0F                       ALLIGNMENT.                     49800002
SCT      DS    CL176                     STEP CONTROL TABLE (SCT)       50100002
         DS    0F                       ALLIGNMENT.                     50400002
DSNAME   DS    CL176                     DATA SET NAME TABLE (DSNAME)   50700002
SPSAV    DS    CL20                SPLIT PROCESSOR WORK AREA.   YM01325 50730002
RBLOCK   DS    20F                 BLOCK OF UNNAMED RES WORDS.  YM01325 50760002
IWAJSCBF DS    F             PTR TO FIRST JSCB IN JSCB CHAIN.   YM04108 50790002
IWAJSCBA DS    F             PTR TO ACTIVE JSCB.                YM04108 50820002
IWALWLGN DS    F             LENGTH OF LWA FOR IEFVHN TO FREE  @Z40MPTH 50850003
RFULLE   DS    F                   RESERVED                     YM01325 50880003
AOQLOCEX DS    CL8           ALT SWA LOC EXIT LIST ENTRY       @G29AN2E 50910003
*                                                                       51000002
*          ********************************************************     51300002
*          *                                                      *     51600002
*          *             END OF INTERPRETER WORK AREA             *     51900002
*          *                                                      *     52200002
*          ********************************************************     52500002
*                                                                       52800002
INTWAEND DS    0D                                                Y02668 53100002
INTWALTH EQU   INTWAEND-INTWA      LTH OF INT WORK AREA.         Y02668 53400002
WALTH    EQU   INTWAEND-COMWA      LTH OF INT+COMMON WORK AREAS. Y02668 53700002
         MEND                                                           54000002
**/                                                                     54300002
*%INTWAPLS:;                                                            54600002
*DCL                                                                    54900002
* 1 INTWA BASED(ADDR(COMWA)+LENGTH(COMWA)) BDY(WORD),        /*Y02668*/ 55200002
*   2 IWAINTS5 PTR(31),      /* PTR TO JOB MNGMT RECORD        Y02668*/ 55500002
*   2 TSIOT    PTR(31),      /* NEXT AVAILIBLE SIOT TTR        Y02668*/ 55800002
*                                                                       56100002
*/*  TTR'S OF TABLES IN THE QUEUE                              Y02668*/ 56400002
*                                                                       56700002
*   2 TJOBLIB  PTR(31),      /* TTR OF JOBLIB SIOT             Y02668*/ 57000002
*   2 TSREFB   PTR(31),      /* TTR OF FIRST DICTIONARY        Y02668*/ 57300002
*   2 TACT     PTR(31),      /* TTR OF OVERRIDE ACT            Y02668*/ 57600002
*   2 TPROC    PTR(31),      /* NEXT PROC OVERRIDE TABLE       Y02668*/ 57900002
*   2 RELPROC  PTR(31),      /* OFFSET LAST PROC/ TTR DICT     Y02668*/ 58200002
*   2 RELPGM   PTR(31),      /* OFFSET LAST PGM/ TTR DICT      Y02668*/ 58500002
*   2 DSENQTP  PTR(31),      /* POINTER TO DSENQ TABLE         Y02668*/ 58800002
*   2 IWAJOBS1 CHAR(8),      /* CHKPT/REST - CALLING STEPNAME  Y02668*/ 59100002
*   2 IWAJOBS3 CHAR(8),      /* CHKPT/REST - STEPNAME/PROCSTEP Y02668*/ 59400002
*   2 IWAJOBS6 FIXED(31),    /* REGION SIZE ON JOB STMT        Y02668*/ 59700002
*   2 IWASTAPL PTR(31),      /* PTR TO C/I STAE PARM LIST      Y02668*/ 60000002
*   2 IWAEXPNO FIXED(32),    /* EXEC PROC STMT NUMBER         YM02714*/ 60300002
*   2 IWANXTSV FIXED(32),    /* SVA OF NEXT BLOCK IN CHAIN    YM02716*/ 60600002
*   2 IWAJMRPT PTR(31),      /* POINTER TO JMR                 Y02668*/ 60900002
*   2 TSAVEP   CHAR(8),      /* WORK AND REG SAVE AREA         Y02668*/ 61200002
*   2 IWAJSIOT PTR(31),      /* TTR OF JOB CAT SIOT            Y02668*/ 61500002
*   2 IWASCTAD PTR(31),      /* ADDRESS OF SCT                 Y02668*/ 61800002
*   2 IWASIOTP PTR(31),      /* ADDRESS OF SIOT                Y02668*/ 62400002
*   2 IWAJFCBP PTR(31),      /* ADDRESS OF JFCB                Y02668*/ 62700002
*   2 DSNTPSA  PTR(31),      /* DSNT PROCESSING RTNE REG SA.   Y02668*/ 63000002
*   2 IWASAVPT PTR(31),      /* SAVE AREA OF INT. CALLER       Y02668*/ 63300002
*   2 AOJRNLEX CHAR(8),      /* JRNL/MERGE EXIT LIST ENTRY     Y02668*/ 63600002
*   2 ORIDSNM  CHAR(8),      /* NAME OF NEXT PROC STEP O'RIDDENY02668*/ 63900002
*   2 UNQNAME  CHAR(23),     /* UNIQUE NAME QUALIFIER          Y02668*/ 64200002
*/*                                                                     64500002
* SYSYYDDD.TTTTTTT.XYZZZ.JOBNAME.&NAME OR .UNIQUE NO.                   64800002
*                                                                       65100002
* SYSYYDDD - CONSTANT "SYS" FOLLOWED BY FIVE NUMERIC CHARACTERS         65400002
*            DENOTING DATE                                              65700002
* TTTTTTT  - CONSTANT "T" FOLLOWED BY A SIX CHARACTER NUMERIC           66000002
*            TIME STAMP                                                 66300002
* XYZZZ    - X= ONE ALPHA CHARACTER                                     66600002
*            Y= ONE ALPHA CHARACTER DENOTING SYSTEM VERSION AS          66900002
*               "A" - A= VS2/RELEASE 2                                  67200002
*            ZZZ= THREE NUMERIC CHARACTERS FOR UNIQUENESS               67500002
* JOBNAME  - NAME OF JOB FOR WHICH THE DATA SET WAS GENERATED           67800002
* &NAME    - AN ALPHANUMERIC FIELD CONTAINING THE "NAME"                68100002
*            PORTION OF AN &NAME                                        68400002
* UNIQUE # - A UNIQUE CHARACTER STRING BEGINNING WITH "R" AND           68700002
*            ENDING WITH A NUMERIC VALUE                       Y02668*/ 69000002
*   2 *        CHAR(1),      /* RESERVED                       Y02668*/ 69300002
*   2 UNNU     FIXED(16),    /* UNIQUE NAME SERIAL IN BINARY   Y02668*/ 69600002
*   2 JEDSWS   FIXED(16),    /* JOB,EXEC, OR DD SWITCHES (LWA) Y02668*/ 69900002
*   2 JCTS     FIXED(16),    /* JCT POINTER (IWA)              Y02668*/ 70200002
*   2 SCTS     FIXED(16),    /* SCT POINTER (IWA)              Y02668*/ 70500002
*   2 JACTS    FIXED(16),    /* JACT POINTER (LWA)             Y02668*/ 70800002
*   2 SIOTS    FIXED(16),    /* SIOT POINTER (LWA)             Y02668*/ 71100002
*   2 JFCBS    FIXED(16),    /* JFCB POINTER (LWA)             Y02668*/ 71400002
*   2 JFCBXS   FIXED(16),    /* JFCBX POINTER (LWA)            Y02668*/ 71700002
*   2 DSNAMES  FIXED(16),    /* DSNAME POINTER (IWA)           Y02668*/ 72000002
*   2 SREFBS   FIXED(16),    /* DICTIONARY 1 PTR (IWA)         Y02668*/ 72300002
*   2 DREFBS   FIXED(16),    /* DICTIONARY 2 PTR (IWA)         Y02668*/ 72600002
*   2 POVRRDS  FIXED(16),    /* POVRRD POINTER (IWA)           Y02668*/ 72900002
*   2 ACTS     FIXED(16),    /* ACT POINTER (WA)              Y02668*/ 73200002
*   2 JFCBES   FIXED(16),    /* JFCBE POINTER (LWA)          @Z40MPTH*/ 73250003
*   2 JCTXS    FIXED(16),    /* JCTX PTR (IWA).              @Z40RPSM*/ 73300003
*   2 DDINTNO  FIXED(15),    /* INTERNAL DD SEQUENCE NBR.      Y02668*/ 73500002
*   2 IWACATCT FIXED(8),     /* COUNT OF CONCATENATED PVT.CATS.Y02668*/ 73800002
*   2 DJBCLAS  FIXED(8),     /* MAXIMUM JOBCLASS               Y02668*/ 74100002
*   2 DINBPLP1 FIXED(8),     /* BYPASS LABLE PROCESSING DEFLT  Y02668*/ 74400002
*                                                                       74700002
*/*  SWITCH BYTES                                              Y02668*/ 75000002
*                                                                       75300002
*   2 IWAEXTS,               /* SPECIAL CALLER EXIT            Y02668*/ 75600002
*     3 *        BIT(7),     /* UNUSED                         Y02668*/ 75900002
*     3 IWAQENTR BIT(1),     /* SPECIAL QMNGR ENTRY            Y02668*/ 76200002
*                                                                       76500002
*   2 SWA,                   /* SWITCH A                       Y02668*/ 76800002
*     3 *        BIT(1),     /* UNUSED                         Y02668*/ 77100002
*     3 JHS      BIT(1),     /* JOB HAS STEP                   Y02668*/ 77400002
*     3 JCTTQ    BIT(1),     /* JCT TO PUT IN QUEUE            Y02668*/ 77700002
*     3 SCTTQ    BIT(1),     /* SCT TO PUT IN QUEUE            Y02668*/ 78000002
*     3 *        BIT(4),     /* UNUSED                         Y02668*/ 78300002
*   2 SWC,                   /* SWITCH C                       Y02668*/ 78600002
*     3 *        BIT(5),     /* UNUSED                         Y02668*/ 78900002
*     3 DSNTQ    BIT(1),     /* DSN TABLE TO PUT IN QUEUE      Y02668*/ 79200002
*     3 VOLREF   BIT(1),     /* DSN VOL REF SW ON            @ZA01890*/ 79500003
*     3 *        BIT(1),     /* UNUSED                       @ZA01890*/ 79600003
*   2 SWD,                   /* SWITCH D                       Y02668*/ 79800002
*     3 JOBADDRF BIT(1),     /* ADDRSPC ON JOB STMT            Y02668*/ 80100002
*     3 JOBREGNS BIT(1),     /* REGION ON JOB STMT             Y02668*/ 80400002
*     3 FEXRCV   BIT(1),     /* FIRST EXEC STMT RECEIVED       Y02668*/ 80700002
*     3 FDDRCV   BIT(1),     /* FIRST DD STMT RCVD THIS STEP   Y02668*/ 81000002
*     3 DBFST    BIT(1),     /* FIRST ENTRY TO DSENQ           Y02668*/ 81300002
*     3 *        BIT(1),     /* UNUSED                       @ZA01890*/ 81400003
*     3 DCTFST   BIT(1),     /* FIRST DICT ENTRY RCVD          Y02668*/ 81600002
*     3 TIMDFPRC BIT(1),     /* PROCESS TIME DEFAULT           Y02668*/ 81900002
*   2 SWF,                   /* SWITCH F                       Y02668*/ 82200002
*     3 ORPARMOR BIT(1),     /* PARM OVERRIDE                  Y02668*/ 82500002
*     3 ORPARMBL BIT(1),     /* PARM BLOCK                     Y02668*/ 82800002
*     3 ORCONDOR BIT(1),     /* COND OVERRIDE                  Y02668*/ 83100002
*     3 ORTIMEOR BIT(1),     /* TIME OVERRIDE                  Y02668*/ 83400002
*     3 ORTIME0  BIT(1),     /* TIME ZERO                      Y02668*/ 83700002
*     3 ORACTOR  BIT(1),     /* ACT OVERRIDE                   Y02668*/ 84000002
*     3 ORREGOR  BIT(1),     /* REGION OVERRIDE                Y02668*/ 84300002
*     3 ORADDROR BIT(1),     /* ADDRSPC OVERRIDE               Y02668*/ 84600002
*   2 SWG,                   /* ADDITIONAL PROCEEDURE SWITCHES Y02668*/ 84900002
*     3 ORRDOR   BIT(1),     /* RD OVERRIDE                    Y02668*/ 85200002
*     3 ORSDPOR  BIT(1),     /* STEP DISP. PRIORITY OVERRIDE   Y02668*/ 85500002
*     3 *        BIT(5),     /* UNUSED                         Y02668*/ 85800002
*     3 ORFLG2SW BIT(1),     /* SET BIT IN ORFLAGS2            Y02668*/ 86100002
*   2 IWAINTS8,              /* FLAGS FOR CHCKPT/RESTART       Y02668*/ 86400002
*     3 *        BIT(2),     /* UNUSED - MUST BE ZERO          Y02668*/ 86700002
*     3 JOBRDNR  BIT(1),     /* RD=NR                          Y02668*/ 87000002
*     3 JOBRDNC  BIT(1),     /* RD=NC OR RD=RNC                Y02668*/ 87300002
*     3 JOBRDR   BIT(1),     /* RD=R OR RD=RNC                 Y02668*/ 87600002
*     3 *        BIT(3),     /* UNUSED - MUST BE ZERO          Y02668*/ 87900002
*   2 JBCONCAT CHAR(1),      /* NBR OF JOBLIB SIOTS            Y02668*/ 88200002
*   2 IWAWRNMS CHAR(1),      /* WARNING MSG CODE               Y02668*/ 88500002
*   2 IWAJBADR CHAR(1),      /* ADDRSPC PARM ON JOB STMT       Y02668*/ 88800002
*   2 CRSW1,                 /* CHECKPOINT/RESTART SWITCHES    Y02668*/ 89100002
*     3 *        BIT(2),     /* UNUSED                         Y02668*/ 89400002
*     3 CPDUM    BIT(1),     /* DUMMY SCT REQUIRED-STEP FLUSH  Y02668*/ 89700002
*     3 *        BIT(5),     /* UNUSED                         Y02668*/ 90000002
*   2 IWANELEN CHAR(1),      /* LENGTH OF NEL                  Y02668*/ 90300002
*   2 DDINO    CHAR(1),      /* DD INTERNAL NO. FOR SIOT       Y02668*/ 90600002
*   2 DDSWX1,                /* DD SWITCHES                    Y02668*/ 90900002
*     3 SDDNSWA,             /* SW FOR SEARCH DDNAME REF TABLE Y02668*/ 91200002
*       4 SDDNSW   BIT(1),   /*                                Y02668*/ 91500002
*       4 *        BIT(1),   /* UNUSED                         Y02668*/ 91800002
*       4 IWAJCAT  BIT(1),   /* JOB CAT SWITCH                 Y02668*/ 92100002
*       4 IWASCAT  BIT(1),   /* STEP CAT SWITCH                Y02668*/ 92400002
*       4 IWASCAT2 BIT(1),   /* STEP CAT FOUND SWITCH          Y02668*/ 92700002
*       4 *        BIT(3),   /* UNUSED                         Y02668*/ 93000002
*   2 IWASNUMB FIXED(8),     /* NUMBER OF STEPS                Y02668*/ 93300002
*   2 AOSW2,                 /*                                Y02668*/ 93600002
*     3 *        BIT(5),     /* UNUSED                         Y02668*/ 93900002
*     3 AONOREAD BIT(1),     /* BYPASS READ OF TEXT STRING     Y02668*/ 94200002
*     3 AOMAXERR BIT(1),     /* STATIC DD MAX EXCEEDED         Y02668*/ 94500002
*     3 AODFLTKW BIT(1),     /* DEFAULT OK THIS KEY WORD       Y02668*/ 94800002
*   2 *        CHAR(1),      /* RESERVED                       Y02668*/ 95100002
*   2 SREF     CHAR(176) BDY(WORD),  /* DICTIONARY 1 (INPUT)   Y02668*/ 95400002
*   2 DREFB    CHAR(176) BDY(WORD),  /* DICTIONARY 2 (SEARCH)  Y02668*/ 95700002
*   2 JCT      CHAR(176) BDY(WORD),  /* JOB CTL TABLE (JCT)    Y02668*/ 96000002
*   2 JCTX     CHAR(176) BDY(WORD),  /*JOB CTL TBL EXT.(JCTX)@Z40RPSM*/ 96050003
*   2 DNRT     CHAR(78),             /* DD REFERENCE TABLE     Y02668*/ 96300002
*   2 *        CHAR(2),      /* RESERVED                       Y02668*/ 96600002
*   2 SCT      CHAR(176) BDY(WORD),  /* STEP CTL TABLE (SCT)   Y02668*/ 96900002
*   2 DSNAME   CHAR(176) BDY(WORD),  /* DS NAME TABLE (DSNAME)YM01325*/ 97200002
*   2 SPSAV    CHAR(20)  BDY(WORD),  /* SPLIT PROCESSOR WA    YM01325*/ 97230002
*   2 RBLOCK   CHAR(80)  BDY(WORD),  /* BLOCK OF RESERVED WDS YM01325*/ 97260002
*   2 IWAJSCBF   PTR(31),    /* PTR TO FIRST JSCB IN CHAIN    YM04108*/ 97290002
*   2 IWAJSCBA   PTR(31),    /* PTR TO ACTIVE JSCB            YM04108*/ 97320002
*   2 IWALWLGN FIXED(32),    /* LENGTH OF LWA FOR IEFVHN     @Z40MPTH*/ 97350003
*   2 RFULLE   FIXED(32),    /* RESERVED                      YM01325*/ 97380003
*   2 AOQLOCEX CHAR(8);      /* ALT SWA LOC EXIT LIST ENTRY  @G29AN2E*/ 97410003
*/*************************************************************Y02668*/ 97500002
*/*                                                            Y02668*/ 97800002
*/*  END OF INTERPRETER WORK AREA -                            Y02668*/ 98100002
*/*  TO GET THE LENGTH OF THE INTERPRETER WORK AREA USE THE    Y02668*/ 98400002
*/*  LENGTH FUNCTION OF THE NAME INTWA                         Y02668*/ 98700002
*/*                                                            Y02668*/ 99000002
*/*************************************************************Y02668*/ 99300002
./  ADD  SSI=23361885,NAME=IEFVMJWA
         MACRO                                                          00020000
         IEFVMJWA &X                                                    00040000
*                                                                       00060000
*          ********************************************************     00080000
*          *                                                      *     00100000
*          *   THE INFORMATION MAPPED BY THIS MACRO IS USED ONLY  *     00120000
*          *      BY THE INTERPRETER JOB ROUTINE AND IS NOT       *     00140000
*          *        PRESERVED BY OTHER INTERPRETER ROUTINES       *     00160000
*          *                                                      *     00180000
*          ********************************************************     00200000
*                                                                       00220000
JWA      DSECT                                                          00240000
         USING JWA,RA                                                   00260000
         AIF   ('&X' EQ 'NA').SKIP                                      00280000
         IEFVMAWA                                                       00300000
.SKIP    ANOP                                                           00320000
FF       EQU   X'FF'                 ALL ONES                           00340000
JASW1    DS    CL1                   JOB ROUTINE SWITCHES               00360000
JANOJBNM EQU   128                      NO JOBNAME SWITCH               00380000
JANOPGNM EQU   64                       NO PROGRAMMER NAME SWITCH       00400000
JANOACTN EQU   32                       NO ACCOUNT NUMBER SWITCH        00420000
JAACTPUT EQU   16                       NO ACT TO PUT OUT SWITCH        00440000
JACONDER EQU   8                        CONDITION ERROR FLAG            00460000
JATEMP1  DS    CL2                   TEMP SAVE FOR PRTY/COND            00480000
JATEMP2  DS    CL2                   TEMP SAVE FOR OPERATOR (COND)      00500000
*                                  TABLES                               00520000
JACT     DS    CL176                     JOB ACCOUNT CONTROL TBL (JACT) 00540000
ENDJWA   DS    0D                                                       00560000
LJWA     EQU   ENDJWA-JWA          LENGTH OF JOB ROUTINE WORK AREA      00580000
         MEND                                                           00600000
./  ADD  SSI=62640466,NAME=IEFVMSWA
         MACRO                                                          00020000
         IEFVMSWA  &X                                                   00040000
*                                                                       00060000
*          ********************************************************     00080000
*          *                                                      *     00100000
*          *   THE INFORMATION MAPPED BY THIS MACRO IS USED ONLY  *     00120000
*          *      BY THE INTERPRETER SCAN ROUTINE AND IS NOT      *     00140000
*          *        PRESERVED BY OTHER INTERPRETER ROUTINES       *     00160000
*          *                                                      *     00180000
*          ********************************************************     00200000
*                                                                       00220000
*   MACMEAN   IEFVMSWA MEANS SCAN WORK AREA                             00225002
*   MACCOMP   Y-2  SC1B9/PZD11                                          00230002
*   MACSTAT   Y-2  76258/ZA12458                               @ZA12458 00235003
SCWA     DSECT                                                          00240000
         USING SCWA,R8                                                  00260000
         AIF   ('&X' EQ 'NA').SKIP                                      00280000
         IEFVMAWA                                                       00300000
.SKIP    ANOP                                                           00320000
CBEGP    DS    F                  CHARACTER BEGIN POINTER.              00340000
CSTRP    DS    F                  CHARACTER STRING POINTER.             00360000
CBSYP    DS    F                  CHARACTER BEGIN SYMBOL POINTER.       00380000
CESYP    DS    F                  CHARACTER END SYMBOL POINTER.         00400000
CENDP    DS    F                  CHARACTER COLUMN 72 POINTER.          00420000
*                                                                       00440000
SAVEP    DS    F                   SAVE POINTER AREA.                   00460000
WORK1    DS    F                   SAVE KEYWORD ENTRY ADDRESS     19874 00461019
*                                                                       00480000
TTRS1    DS    F                   TTRS FOR CHAINING O'FLOW             00489014
TTRS2    DS    F                        TEXT BUFFERS.                   00498014
         DS    0D                                                 19874 00505019
DUPTAB   DS    CL32                DUPLICATE TABLE                19874 00511019
KEYTAB   DS    CL32                TABLE OF BITS FOR KEYWORDS     19874 00520019
SYMBUF   DS    CL176              SYMBOLIC PARAMETER TABLE BUFFER       00534014
FATRP    DS    F                  SCAN TRANSLATE TABLE POINTER          00543014
DELPTR   DS    F      POINTS TO EITHER 'RSTMT' OR 'PSTMT' IN IWA        00553018
FERRP    DS    F                  SCAN ERROR RTN PTR                    00570014
         DS    H  RESERVED                                       A28667 00579019
MSGSVE   DS    CL1                                                      00588014
FAWA1    DS    CL1 SCAN WORK AREA - SAVE FOR NON-BLANK COL 72    119    00597014
FAWA2    DS    CL1 SCAN WORK AREA                                       00606014
FAWA3    DS    CL1 SCAN WORK AREA                                       00615014
FAWA4    DS    CL1 FB WORK AREA FOR FIRST CHAR ALPHA CHECK              00624014
OVKEYSVE DS    CL1                 SAVE FOR O'RIDDEN KEY         288    00633014
ITBMSGL  EQU   27    LENGTH OF MESSAGE WHICH PRECEDES INTBUF     OCIP68 00642018
INTBUF   EQU   DREFB+ITBMSGL       INTERMEDIATE TEXT BUFFER             00651014
*                                                                       00653018
NOMORESW  DS  CL1  RESERVED  THIS REPLACES SWV, MOVED TO IWA     A24895 00717019
SYMPRCZ  EQU   SWD                BYTE FOR SW INDICATING ERROR DETECTED 00787014
PROCSWZ  EQU   SWH                BYTE FOR PROC STMT SW            AAAA 00788015
*                                                                       00840000
RPRSWW   EQU   SWY                 RIGHT PAREN SWITCH                   00860000
RPRSW    EQU   128                                                      00880000
PDELSWW  EQU   SWY                 PERIOD DELIMITER SWITCH              00900000
PDELSW   EQU   64                                                       00920000
ASTSWW   EQU   SWY                 ASTERICK SWITCH                      00940000
ASTSW    EQU   32                                                       00960000
FLUSHSWW EQU   SWY                 FLUSH SWITCH                         00980000
FLUSHSW  EQU   16                                                       01000000
LDLX     EQU   SWY                 LAST DELIMITER SWITCH                01020000
LDL      EQU   8                                                        01040000
DCBSWW   EQU   SWY                 DCB SWITCH.                          01060000
DCBSW    EQU   4                                                        01080000
JGCY     EQU   SWY                                                      01100000
JGC      EQU   2                                                        01120000
FERRORA  EQU   SWY                ERROR SWITCH.                         01140000
FERROR   EQU   1                                                        01160000
PDASSWW  EQU   SWY                 PERIOD AND ASTERICK SWITCH           01180000
PDASSW   EQU   PDELSW+ASTSW                                             01200000
RPASWW   EQU   SWY                 RT PAREN PERIOD AND AST SWITCH       01220000
RPASW    EQU   RPRSW+PDELSW+ASTSW                                       01240000
CLEARSWW EQU   SWY                 CLEAR SWITCH                         01260000
CLEARSW  EQU   RPRSW+PDELSW+ASTSW+FLUSHSW+LDL+DCBSW+JGC+FERROR          01280000
*                                                                       01300000
CMTZ     EQU   SWZ                 COMMENT SWITCH                       01320000
DDOVZ    EQU   SWZ                 DD OVER RIDE SWITCH                  01340000
ENDSZ    EQU   SWZ                 END SCAN SWITCH                      01360000
COLSTY   EQU   SWZ                 COLUMN 72 SWITCH                     01380000
JOBSWY   EQU   SWZ                 JOB SWITCH                           01400000
EXECSWY  EQU   SWZ                 EXEC SWITCH                          01420000
DDSWY    EQU   SWZ                 DD SWITCH                            01440000
VERBSWY  EQU   SWZ                 VERB SWITCH                          01460000
VERBSW   EQU   JOBSW+EXECSW+DDSW                                        01480000
SNPSWZ   EQU   SWZ                 FOR DEGUG SNAP.                      01500000
*                                                                       01520000
CXPZ     EQU   SWB                CONTINUATION EXP BY SCAN.             01540000
CXPNZ    EQU   SWB                CONT EXP & NOT RECEIVED BY INTERP.    01560000
CXPCZ    EQU   SWB                CON EXP & CANCELLED BY INTERP.        01580000
CXPOPZ   EQU   SWB                CONT EXP FOR OPERAND FIELD   @ZA12458 01590003
CANDDZ   EQU   SWB                CANNED DD * BY INTERP.                01600000
DDASTZ   EQU   SWB                DD * OR DD DATA BY INTERP.            01620000
DDATAZ   EQU   SWB                DD DATA BY INTERP.                    01640000
CXPNC    EQU   CXPN+CXPC          BOTH CXPN & CXPC.                     01660000
CXPNCZ   EQU   SWB                BOTH CXPNZ & CXPCZ.                   01680000
POVRDZ   EQU   SWE                OVER RIDE PROC DD STMT.               01700000
SYOUTSW  EQU   SNPSW              SWITCH FOR SYSOUT THIS STATEMENT      01720000
SYOUTSWZ EQU   SNPSWZ             BYTE FOR SYSOUT SWITCH                01740000
ENDKYSWP EQU   TSP1 SWITCH TO INDICATE END OF KEYWORD'S PARAMETERS      01745020
ENDKYSW  EQU   8    AND FOLLOWING COMMA. NEXT DELIMITER SHOULD   A28668 01750020
*                   BE FOR NEW KEYWORD. (EQUAL, PERIOD OR AMPERSAND)    01755020
*                                                                       01760000
HSS      EQU   176                LENGTH OF TEXT BUFFERS.               01780000
SVO      EQU   71                 CARD LENGTH.                          01800000
HONE     EQU   X'80'              HIGH ORDER ONE.                       01820000
OVER     EQU   1                       OVER.                            01840000
HIGH     EQU   2                       HIGH.                            01860000
LOW      EQU   4                       LOW.                             01880000
EQUAL    EQU  8                        EQUAL.                           01900000
NOT      EQU  15                       NOT.                             01920000
ZERO     EQU   8                                                        01940000
*                                                                       01960000
ERMES01  EQU   X'01' IEF601I INVALID STATEMENT IN PROCEDURE       M4397 01970019
ERMES1   EQU   X'10' IEF616I SUBLIST WITHIN SUBLIST INCORRECT           01980000
ERMES2   EQU   X'34' IEF652I MUTUALLY EXCLUSIVE KEYWORDS                02000000
ERMES2B  EQU   X'35' SECOND PART OF MUTUALLY EXCLUSIVE MSG         AABA 02005018
ERMES3   EQU   X'28' EXCESSIVE NUMBER OF POSITIONAL PARAMS              02010014
ERMES4   EQU   X'17' IEF623I SOURCE TEXT CONTAINS UNDEFINED CHARACTERS  02020000
ERMES5   EQU   X'14' IEF62OI CONTINUATION INVALID ON DD*                02040000
ERMES6   EQU   X'12' IEF618I OPERAND FIELD NOT TERM. IN COMMA OR BLANK  02060000
ERMES7   EQU   X'16' IEF622I UNBALANCED PARENTHESIS                     02080000
ERMES8   EQU   X'17' IEF623I SOURCE TEXT CONTAINS UNDEFINED CHARACTERS  02100000
ERMES9   EQU   X'13' IEF619I CONTIN INDICATED - COL 72 BLANK            02120000
ERMES10  EQU   X'18' IEF624I INCORRECT USE OF PERIOD                    02140000
ERMES11  EQU   X'19' IEF625I INCORRECT USE OF LEFT PAREN                02160000
ERMES12  EQU   X'1A' IEF626I INCORRECT USE OF PLUS                      02180000
ERMES13  EQU   X'1B' IEF627I INCORRECT USE OF AMPERSAND                 02200000
ERMES14  EQU   X'1C' IEF628I INCORRECT USE OF ASTERISK                  02220000
ERMES15  EQU   X'1D' IEF629I INCORRECT USE OF APOSTROPHE                02240000
ERMES16  EQU   X'1E' IEF630I UNIDENTIFIED KEYWORD                       02260000
ERMES17  EQU   X'32' IEF650I INCORRECT USE OF SLASH                     02280000
ERMES18  EQU   X'33' IEF651I INCORRECT USE OF MINUS                     02300000
ERMES19  EQU   X'20'      FORMAT ERROR                             AACA 02300518
*                                                                       02301018
PSECMSG  EQU   INTKEY3 PROCVERB SECONDARY 'ON THE PROC STATEMENT' 19874 02301619
DLMFBYTE EQU  FAWA3 THIS BYTE IS USED TO SAVE DELIMITER FUNCTION   7821 02302017
*                  BYTES ENCOUNTERED IN SCANNING THE JCL STATE-    7821 02304017
*                  MENT(FB1 RTN).  EACH SUCCEEDING DELIMITER       7821 02306017
*                  FUNCTION BYTE OVERLAYS THE PREVIOUS ONE.        7821 02308017
EQDELSW  EQU   X'80' EQUAL SIGN DELIMITER SWITCH.  THE HIGH ORDER  7821 02310017
*                  BIT OF 'DLMFBYTE' WILL BE USED AS A SWITCH FOR  7821 02312017
*                  INDICATING 'KEYWORD=KEYWORD=' SITUATION ON THE  7821 02314017
*                  JCL STATEMENT.                                  7821 02316017
INITVAL  EQU   X'7F' THIS IS THE INITIAL VALUE OF DLMFBYTE.        7821 02318017
ENDSCWA  DS    0D                                                       02320000
LSCWA    EQU   ENDSCWA-SCWA                                             02340000
         MEND                                                           02360000
./  ADD  SSI=30872092,NAME=IEFVORWA
         MACRO                                                          00020000
         IEFVORWA                                                       00040000
.* C-004700,008800                                               Y01029 00042001
* MACMEAN VORWA MEANS OVERRIDE TABLE                                    00050002
* MACCOMP Y-2 SC1B9/PZD11                                               00080002
* MACSTAT Y-2 73089/16251                                               00090002
*          ********************************************************     00100000
*          *                                                      *     00120000
*          *   OVERRIDE TABLE.                                    *     00140000
*          *                                                      *     00160000
*          ********************************************************     00180000
*                                                                       00200000
         SPACE                                                          00220000
ORTTR    DS    CL3                TTR OF THIS O'RIDE TABLE.             00240000
ORID     DS    CL1                ID OF O'RIDE TABLE.                   00260000
ORIDFLAG EQU   X'A'                                                     00280000
ORCHAIN  DS    CL3                TTR OF NEXT O'RIDE TABLE.             00300000
ORNMNXST DS    CL8                NAME OF NEXT STEP TO BE OVERRIDDEN.   00320000
         SPACE                                                          00340000
ORFLAGS  DS    CL1                O'RIDE FLAGS.                         00360000
EATIMEOR EQU   X'01'                   TIME O'RIDE.                     00380000
EAACCTOR EQU   X'02'                   ACT O'RIDE.                      00400000
EACONDOR EQU   X'04'                   COND O'RIDE.                     00420000
EAPARMOR EQU   X'08'                   PARM O'RIDE.                     00440000
EAREGOR  EQU   X'10'                   REGION O'RIDE.                   00460000
EAADDROR EQU   X'20'                   ADDRSPC O'RIDE.           Y01029 00470001
EARDOR   EQU   X'40'                   RD O'RIDE.                  AACA 00475017
EASDPOR  EQU   X'80'              STEP DISPATCHING PRIORITY        I241 00476018
*                                 OVERRIDE,SET AND TESTED          I241 00477018
*                                 IN IEFVEA                        I241 00478018
ORFLAGS2 DS    CL1                O'RIDE FLAGS                   Y02668 00478402
EAPRFMOR EQU   X'01'              PERFORM O'RIDE                 Y02668 00478802
EADYNMOR EQU   X'02'              DYNAMNBR O'RIDE                Y02668 00479202
         SPACE                                                          00480000
ORMAXTIM DS    CL3                MAXIMUM STEP RUN TIME.                00500000
ORACTTTR DS    CL3                TTR OF ACT FOR THIS STEP.             00520000
         SPACE                                                          00540000
ORCONDCD DS    CL2                CODE.                                 00560000
ORCONDOP DS    CL1                OPERATOR.                             00580000
ORCONDS  DS    CL8                STEPNAME OR TTR OF RESOLVED SCT.      00600000
ORCONDSL DS    CL1                LENGTH OF STEPNAME. (0 IF TTR OF SCT) 00620000
ORCONDSF EQU   128                FLAG TO INDICATE THAT ORSTEP HAS BEEN 00640000
*                                      CONDITIONALLY SET UP AS THE      00660000
*                                      QUALIFYING STEPNAME.             00680000
         DS    CL84               ROOM FOR 7 MORE COND ENTRIES.         00700000
ORCNDEND DS    CL3                MUST BE ZERO - INDICATES END COND FLD 00720000
         SPACE                                                          00740000
ORPARMSZ DS    CL2                PARM FIELD SIZE.                      00760000
ORPARM   DS    CL3                PARM TTR                         AACA 00770017
ORREG    DS    CL4                REGION PARAMETER SAVE SPACE      AACA 00780017
ORSDP    DS    CL2    STEP DISPATCHING PRIORITY OVERRIDE-          I241 00783018
*                        INITIALIZED AND SET IN IEFVEA             I241 00786018
ORPRMVAL DS    CL1                PERFORM VALUE                  Y02668 00792402
ORDYNVAL DS    CL2                DYNAMNBR VALUE                 Y02668 00792802
         DS    CL29   RESERVED                                   Y02668 00793002
         SPACE                                                          00800000
ORSTEPL  DS    CL1                LENGTH OF ORSTEP.                     00820000
ORSTEP   DS    CL8                NAME OF STEP CALLING PROCEDURE.       00840000
         SPACE                                                          00870000
ORADDR   DS    CL1                ADDRSPC FLAGS.                 Y01029 00880001
ORRD     DS    CL1                     RD FLAGS.                   AACA 00890017
ORTABEND EQU   *                                                        00900000
         MEND                                                           00920000
./  ADD  SSI=20720237,NAME=IEFWKTAB
         MACRO                                                          00020000
         IEFWKTAB                                                       00040000
* 002800                                                         A24901 00045020
*                                                                 19200 00050019
         EJECT                                                          00060000
*              MARCH 30,1965                                            00080000
         DS    0F                                                       00100000
AWTCTROL DSECT                                                          00120000
*                        ALLOCATE TABLES CONTROL                        00140000
AWTCCLTB DS    F         CHANNEL LOAD TABLE                             00160000
AWTCFEVS DS    F         FIRST EMPTY VOLUME SLOT IN AWT                 00180000
AWTCPUDT DS    F         POTENTIAL USER ON DEVICE TABLE                 00200000
AWTCWTST DS    F         START ADDRESS OF WORK TABLE                    00220016
AWTCSTVB DS    F         START OF WORK TABLE VOL BLOCK                  00240000
AWTCSCTV DS    F         START OF SCT VOL BLOCK                         00260000
AWTCSBIT DS    F             POINTER TO RECOVERY BIT PATTERN     A24901 00280020
AWTCCALE DS    H         COUNT OF ALLOCATED ENTRIES                     00300000
AWTCCUAE DS    H         COUNT OF UNALLOCATED ENTRIES                   00320000
AWTCWTSZ DS    H         SIZE OF WORK TABLE ENTRY (BYTES)               00340000
AWTCNSEP DS    H         NO. WORK TABLE ENTRIES WITH SEP.               00360000
AWTCNBPW DS    H         NO. OF BIT PATTERN WORDS                       00380000
AWTCNDDC DS    H         NO. OF DDS                                     00400000
AWTCNVAF DS    H        NUMBER OF VOL AFFINITY CHAINS                   00420000
AWTCNDEV DS    H         NUMBER OF DEVICES IN SYSTEM                    00440000
*   *    *    *    *    *    *    *    *    *    *    *    *    *    *  00460000
         EJECT                                                          00480000
         DS    0F                                                       00500000
AWT      EQU   *                                                        00520000
*                        ALLOCATE WORK TABLE                            00540000
AWTEPDEV DS    XL2       POSSIBLE NUMBER OF DEVICES IN PRIM BIT PAT000G 00560018
AWTEDPND DS    XL1       INTRASTEP SUBALLOCATE/POOL/SPLIT LINK          00580000
AWTERDEV DS    XL1       NUMBER OF REQUESTED DEVICES                    00600000
AWTESTTA DS    XL1       STATUS A                                       00640000
*                                                                       00660000
AWTDUMMY EQU   128       BIT 0 DUMMY DATA SET                           00680000
AWTSYSIN EQU   64        BIT 1 SYSIN DATA SET                           00700000
AWTSPLTP EQU   32        BIT 2 SPLIT (PRIMARY)                          00720000
AWTSPLTS EQU   16        BIT 3 SPLIT (SECONDARY)                        00740000
AWTSBALC EQU   8         BIT 4 SUBALLOCATE                              00760000
AWTPARMT EQU   4         BIT 5 PAR. MOUNT                               00780000
AWTUNAFF EQU   2         BIT 6 UNIT AFFINITY                            00800000
AWTUNSEP EQU   1         BIT 7 UNIT SEPARATION                          00820000
*                                                                       00840000
AWTESTTB DS    XL1       STATUS B                                       00860000
*                                                                       00880000
AWTCHAFF EQU   128       BIT 0 CHANNEL AFFINITY                         00900000
AWTCHSEP EQU   64        BIT 1 CHANNEL SEPARATION                       00920000
AWTVOLAF EQU   32        BIT 2 VOLUME AFFINITY                          00940000
AWTJOBLB EQU   16        BIT 3 JOBLIB DD STMNT                          00960000
AWTUNLBD EQU   8         BIT 4 UNLABELED                                00980000
AWTLABEL EQU   4         BIT 5 NON STANDARD LABEL                  000D 01000016
AWTDEFER EQU   2         BIT 6 DEFER MOUNTING                           01020000
AWTRECVD EQU   1         BIT 7 RECEIVED DATA SET                        01040000
*                                                                       01060000
AWTESTTC DS    XL1       STATUS C                                       01080000
*                                                                       01100000
AWTEBIT1 EQU   128       BIT 0 WORK                                     01120000
AWTRETAI EQU   64        BIT 1 RETAIN                                   01140000
AWTPRIV  EQU   32        BIT 2 PRIVATE                                  01160000
AWTPASS  EQU   16        BIT 3 PASS                                     01180000
AWTPOOLR EQU   8         BIT 4 POOL REFERENCE                           01200000
AWTDADSM EQU   4         BIT 5 DADSM REQUIRED                           01220000
AWTEBIT2 EQU   2         BIT 6 WORK                                     01240000
AWTEBIT3 EQU   1         BIT 7 WORK                                     01260000
*                                                                       01280000
AWTESTTD DS    XL1       STATUS D                                       01300000
*                                                                       01320000
AWTAVR0  EQU   128                 STORAGE VOLUME REQUESTED.            01330013
* NO STORAGE VOLUMES.  VOLUME=PRIVATE ASSUMED.                          01340013
AWTAVR1  EQU   64        BIT 1 PRIV. VOL. D.A.  NO.VOL SER (AVR)        01360000
AWTAVR2  EQU   32        BIT 2 SCRATCH TAPE REQUEST (AVR)               01380000
AWTEALOC EQU   16        BIT 3 ALLOCATED                                01400000
AWTESYSO EQU   8         BIT 4 SYSOUT                                   01420000
AWTEISSA EQU   2         BIT 6 INTRASTEP SUBALLOCATE                    01440000
*                                                                       01460000
AWTENVOL DS    XL1       NUMBER OF VOLUMES                         000G 01470018
AWTEADEV DS    XL1       NUMBER OF DEVICES ALLOCATED                    01480000
AWTESHDV DS    XL1       NUMBER OF DEVICES SHARED                       01500000
AWTEUDEV DS    XL1       NUMBER OF DEVICES USED                         01520000
AWTELINK DS    XL1       UNIT AFFINITY LINK                             01540000
AWTESTT1 DS    XL1                     STATUS BYTE 1              19200 01546019
AWTSASCI EQU   128                     USASI LABEL BIT           19200  01552019
AWTRECOV EQU   64                  HAVE RECOVERED BIT            A24901 01556020
AWTEFVOL DS    XL2       RELATIVE POINTER TO VOL BLOCK                  01560000
AWTESDEV DS    XL2       POSSIBLE NUMBER OF DEVICES IN SEC. BIT PAT000G 01580018
AWTEDDNM DS    XL1      INTERNAL DATA SET NUMBER                        01600000
         DS    XL1       RESERVED                                       01610018
AWTETYPE DS    XL4       DEVICE TYPE CODE                               01620000
AWTESRTS DS    XL4       PRIMARY BIT PATTERN                            01640000
AWTESBIT DS    XL4       SECONDARY BIT PATTERN                          01660000
*   *    *    *    *    *    *    *    *    *    *    *    *    *    *  01680000
         DS    0F                                                       01700000
AVT      EQU   *                             START OF VOL BLOCK ENTRIES 01720000
*                        ALLOCATE VOLUME TABLE                          01740000
AVTEDDNM DS    XL1       INTERNAL DD NUMBER                             01760000
AVTESTTE DS    XL1       STATUS E                                       01780000
*                                                                       01800000
AVTNOVID EQU   16        BIT 3 NO VOL ID IN SCT VOL BLOCK               01820000
AVTVOLAF EQU   1         BIT 7 VOL AFF - NO VOL ID IN SCT               01840000
*                                                                       01860000
AVTERSRT DS    XL2       RELATIVE SRT POINTER                           01880000
AVTEVPTR DS    XL2       RELATIVE VOL. SER. PTR.                        01900000
AVTEVAFL DS    XL2       RELATIVE VOL. AFF. PTR                         01920000
AVTESERP EQU   AVTEVPTR                                                 01940000
AVTEVOLK EQU   AVTEVAFL                                                 01960000
*   *    *    *    *    *    *    *    *    *    *    *    *    *    *  01980000
         MEND                                                           02000000
./  ADD  SSI=20880131,NAME=IEFWTPCB
* % GO TO BSLWTPCB; /*                                                  00400020
         MACRO                                                          00900019
         IEFWTPCB                                                       01800019
         DS    0F                                                       02700019
.*                                                                      03600019
.*       THE WTPCB IS USED BY MODULES IN RELEASE 19 FOR I/I 254         04500019
.*                                                                      05400019
*/*                                                  Y010001 02/16/72*/ 05450001
*********************************************************************** 06300019
*                                                                       07200019
*              FORMAT OF WTP CONTROL BLOCK                              08100019
*                                                                       09000019
*                         ********************************************* 09900019
*                         *                                *          * 10800019
*                         *                                *          * 11700019
*                         * WTPSMB                         * WTPFLGSA * 12600019
*                         *                                *          * 13500019
*                         *                              3 *        1 * 14400019
*                       0 ********************************************* 15300019
*                         *          *                                * 16200019
*                         *          *                                * 17100019
*                         * WTPBYTES * WTPQMPA                        * 18000019
*                         *          *                                * 18900019
*                         *         1*                               3* 19800019
*                       4 ********************************************* 20700019
*                         *                                *          * 21600019
*                         *                                *          * 22500019
*                         * WTPCRSMB                       * WTPCRCNT * 23400019
*                         *                                *          * 24300019
*                         *                              3 *        1 * 25200019
*                       8 ********************************************* 26100019
*                         *          *                                * 27000019
*                         *          *                                * 27900019
*                         * WTPLIMIT * WTPRSMBS                       * 28800019
*                         *          *                                * 29700019
*                         *        1 *                              3 * 30600019
*                      12 ********************************************* 31500019
*                                                                       32400019
**********************************************************************  33300019
*                                                                       34200019
WTPCB    DSECT                                                          35100019
WTPDSECT EQU   WTPCB                                                    36000019
*                                                                       36900019
WTPSMB   DS    CL3                     TTR USED BY WTP                  37800019
*                                                                       38700019
WTPFLGSA DS    CL1                     WTP FLAGS                        39600019
*                                                                       42300019
WTPIOERR EQU   X'80'         BIT 0 ON= SYSTEM LIMIT MSG PROCESSED  R384 43200001
*                                                                       44100019
WTPLMSGP EQU   X'40'         BIT 1 ON= LIMIT MESSAGE PROCESSED          45000019
*                                                                       45900019
WTPSSOUT EQU   X'20'         BIT 2 ON= STEP CONTAINS SYSOUT             46800019
*                                                                       47700019
WTPASGN  EQU   X'10'         BIT 3 ON= RETURN FROM 3RD LOAD OF WTP      48600019
*                                      TO 2ND LOAD OF WTP.              49500019
*                                                                       50400019
WTPNRMSG EQU   X'08'         BIT 4 ON= NO RECORD MSG PROCESSED          51300019
*                                                                       52200019
WTPSYSMB EQU   X'04'         BIT 5 ON= LAST SMB USED FOR JOB            53100019
*                                                                       54000019
WTPINVKD EQU   X'02'         BIT 6 ON= WTP INVOKED FOR THIS STEP        54900019
*                                                                       55800019
WTPTOWTO EQU   X'01'         BIT 7 ON= WTOR OR WTO WITH ADDITIONAL      56700019
*                                      ROUTING CODE                     57600019
*                                                                       58500019
WTPBYTES DS    CL1                     REMAINING BYTES IN WTP SMB       59400019
*                                      AVAILABLE FOR A WTP MESSAGE      60300019
*                                                                       61200019
WTPQMPAD DS    CL3                     ADDR OF MSGCLASS QMPA            62100019
*                                                                       63000019
WTPQMPA  EQU   WTPBYTES                                                 63900019
*                                                                       64800019
WTPCRSMB DS    CL3                     TTR OF 1ST WTP SMB. NEEDED       65700019
*                                      FOR AUTOMATIC CHECKPOINT         66600019
*                                      RESTART.                         67500019
*                                                                       68400019
WTPCRCNT DS    CL1                     NUMBER OF WTP SMBS USED IN STEP  69300019
*                                                                       70200019
WTPLIMIT DS    CL1                     WTP RECORD LIMIT COUNTER         71100019
*                                                                       72000019
WTPRSMBS DS    CL3                     TTR OF RESERVED WTP SMBS         72900019
*                                                                       73800019
WTPCBSIZ EQU   *-WTPCB                 SYMBOL USED FOR WTP CONTROL      74700019
*                                      BLOCK SIZE.                      75600019
*                                                                       76500019
**********************************************************************  77400019
         MEND                                                           90900019
 */ % BSLWTPCB: ;                                                       90990020
*/*                                                  Y010001 02/16/72*/ 91040000
          DCL 1 WTPCB BASED(WTPCBPTR),                                  91080020
              2 WTPDSECT,                                               91170020
              3 WTPSMB PTR(24) BDY(WORD), /*TTR USED BY WTP*/           91260020
              3 WTPFLGSA BIT(8), /*WTP FLAGS*/                          91350020
                  4 WTPIOERR BIT(1), /*BIT0 ON-SYSTEM LIMIT MESSAGE*/   91440001
                                         /*PROCESSED           R384*/   91490001
                  4 WTPLMSGP BIT(1), /*BIT1 ON-LIMIT MSG PROCESSED*/    91530020
                  4 WTPSSOUT BIT(1), /*BIT2 ON-STEP CONTAINS SYSOUT*/   91620020
                  4 WTPASGN BIT(1), /*BIT3 ON-RETURN FROM 3RD LOAD OF*/ 91710020
                                         /*WTP TO 2ND LOAD OF WTP*/     91800020
                  4 WTPNRMSG BIT(1), /*BIT4 ON-NO REC MSG PROCESSED*/   91890020
                  4 WTPSYSMB BIT(1), /*BIT5 ON-LAST SMB USED FOR JOB*/  91980020
                  4 WTPINVKD BIT(1), /*BIT6 ON-WTP INVOKED FOR STEP*/   92070020
                  4 WTPTOWTO BIT(1), /*BIT7 ON-WTO OR WTOR WITH*/       92160020
                                         /*ADDITIONAL ROUTING CODE*/    92250020
              3 WTPBYTES PTR(8), /*REMAINING BYTES IN WTP SMB */        92340020
                                     /*AVAILABLE FOR WTP MESSAGE*/      92430020
                  4 WTPQMPA PTR(8),                                     92520020
              3 WTPQMPAD PTR(24) BDY(BYTE), /*ADDR OF MSGCLASS QMPA*/   92610020
              3 WTPCRSMB PTR(24) BDY(WORD), /*TTR OF 1ST SMB NEEDED*/   92700020
                                                /*FOR CHKPT/RESTART*/   92790020
              3 WTPCRCNT PTR(8), /*NUMBER OF WTP SMBS USED IN STEP*/    92880020
              3 WTPLIMIT PTR(8), /*WTP RECORD LIMIT COUNTER*/           92970020
              3 WTPRSMBS PTR(24) BDY(BYTE); /*TTR OF RESERVED WTP*/     93060020
                                                /*SMBS*/                93150020
./  ADD  SSI=20680028,NAME=IEFWTPST
* % GO TO BSLWTPST; /*                                                  01000020
         MACRO                                                          02000000
          IEFWTPST                                                      03000000
         DS    0F                                                       04000000
MAINSTG  DSECT                                                          05000000
WTPCORAD DS    CL4                                                      06000000
WTPTTRAD DS    CL3                                                      07000000
         DS    CL1                                                      08000000
WTPSMBIO DS    CL176                                                    09000000
WTPSMBID EQU   WTPSMBIO+3                                               10000020
WTPSMBPT EQU   WTPSMBIO+4                                               11000020
WORKSIZE DS    CL4                                                      12000000
CORESIZE EQU   WORKSIZE+3                                               13000000
WTPEIA   DS    CL4                                                      14000000
         DS    CL40                                                     15000000
         DS    CL32  CCW'S                                       S20201 16000020
         DS    CL8   SECTOR AREA ADDRESS                         S20201 16050020
PCPQMPA  EQU   WTPEIA                                                   17000000
         MEND                                                           18000000
 */ % BSLWTPST: ;                                                       19000020
          DCL 1 MAINSTG BASED(MNSTGPTR), /*WTP WORKAREA*/               20000000
              2 WTPCORAD PTR(31), /*PTR TO SMB CORE ADDR FOR Q-MGR*/    21000000
              2 WTPTTRAD PTR(24) BDY(WORD), /*TTR OF SMB FOR Q-MGR*/    22000000
              2 * CHAR(1),                                              23000000
              2 WTPSMBIO, /*SMB READ/WRITE AREA*/                       24000000
                  3 * PTR(24) BDY(WORD), /*ADDR OF THIS SMB*/           25000000
                  3 WTPSMBID BIT(8), /*SMB IDENTIFIER*/                 26000000
                  3 WTPSMBPT PTR(24) BDY(WORD), /*ADDR OF NEXT SMB*/    27000000
                  3 * CHAR(5), /*RESERVED*/                             28000000
                  3 * BIT(8), /*LOGOUT BITS*/                           29000000
                  3 * PTR(8), /*PTR TO NEXT AVAILABLE BYTE*/            30000000
                  3 * PTR(8), /*WTP MESSAGE LENGTH*/                    31000000
                  3 * CHAR(161), /*SPACE FOR WTP MESSAGE TEXT*/         32000000
              2 WORKSIZE, /*WORKAREA SIZE*/                             33000000
                  3 * CHAR(3),                                          34000000
                  3 CORESIZE CHAR(1),                                   35000000
              2 WTPEIA, /*ECB*/                                         36000000
                  3 * BIT(8),                                           37000000
                  3 * PTR(24),                                          38000000
              2 WTPIOB, /*IOB*/                                         39000000
                  3 * BIT(8),                                           40000000
                  3 * PTR(24),                                          41000000
                  3 * CHAR(1),                                          42000000
                  3 * PTR(24),                                          43000000
                  3 * BIT(8),                                           44000000
                  3 * BIT(8),                                           45000000
                  3 * CHAR(1),                                          46000000
                  3 * CHAR(1),                                          47000000
                  3 * CHAR(1),                                          48000000
                  3 * PTR(24),                                          49000000
                  3 * BIT(8),                                           50000000
                  3 * PTR(24),                                          51000000
                  3 * BIT(16),                                          52000000
                  3 * FIXED(15),                                        53000000
                  3 * CHAR(1),                                          54000000
                  3 * PTR(24),                                          55000000
                  3 * CHAR(1),                                          56000000
                  3 * PTR(24),                                          57000000
                  3 * CHAR(1),                                          58000000
                  3 * PTR(24),                                          59000000
                  3 * FIXED(15),                                        60000000
                  3 * FIXED(15),                                        61000000
              2 WTPCCWS, /*CCWS*/                                       62000000
                  3 * BIT(8),                                           63000000
                  3 * PTR(24),                                          64000000
                  3 * BIT(8),                                           65000000
                  3 * CHAR(1),                                          66000000
                  3 * FIXED(15),                                        67000000
                  3 * BIT(8),                                           68000000
                  3 * PTR(24),                                          69000000
                  3 * BIT(8),                                           70000000
                  3 * CHAR(1),                                          71000000
                  3 * FIXED(15),                                        72000000
                  3 * BIT(8),                                           73000000
                  3 * PTR(24),                                          74000000
                  3 * BIT(8),                                           75000000
                  3 * CHAR(1),                                          76000000
                  3 * FIXED(15),                                        77000020
                  3 * BIT(8),                                           77050020
                  3 * PTR(24),                                          77100020
                  3 * BIT(8),                                           77150020
                  3 * CHAR(1),                                          77200020
                  3 * FIXED(15),                                        77250020
              2 WTPSECT CHAR(8);                                        77300020
         %DCL PCPQMPA CHAR;                                             78000000
         %DCL WTPQMERR CHAR;                                            79000000
         %DCL WTPCBSIZ CHAR;                                            80000000
         %PCPQMPA=WTPEIA;                                               81000000
         %WTPQMERR='''81''X'; /*USED BY WTP Q-MGR ERROR ROUTINE*/       82000000
         %WTPCBSIZ='LENGTH(WTPCB)'; /*SYMBOL USED FOR WTP CONTROL*/     83000000
                                      /*BLOCK SIZE*/                    84000000
./  ADD  SSI=30312114,NAME=IEFZB429
*/********************************************************************/ 00050002
*/* MACMEAN GDGNT MEANS GENERATION DATA GROUP NAME TABLE             */ 00100002
*/* MACCOMP Y-2 SCIB4/PZD82                                          */ 00150002
*/* MACSTAT Y-2 72145/016138                                         */ 00200002
*/********************************************************************/ 00250002
*        %GOTO GDGNTBSL;               /*                               00300002
*                                                                       00350002
         MACRO                                                          00400002
         IEFZB429                                                       00450002
GDGNT    DSECT                         GDG NAME TABLE                   00500002
GNTNEXTP DS    AL3                     POINTER TO RECORD PREFIX OF      00550002
*                                      NEXT GDGNT                       00600002
GNTID    DS    X                       GDG NAME TABLE ID                00650002
GNTNEXTR DS    A                       POINTER TO RECORD OF NEXT GDGNT  00700002
GNTNAME  DS    CL35                    GDG GROUP NAME                   00750002
GNTBASE  DS    CL4                     GENERATION BASE NUMBER           00800002
         DS    CL117                   THREE MORE ENTRIES FOR THE GDG   00850002
*                                      GROUP NAME AND GENERATION BASE   00900002
*                                      NUMBER                           00950002
GNTENT   DS    X                       NUMBER OF ENTRIES IN GDGNT       01000002
         DS    XL11                    RESERVED                         01050002
         MEND  */                                                       01100002
        %GDGNTBSL: ;                                                    01150002
  DCL 1 GDGNT BASED(GDGNTPTR),         /* GDG NAME TABLE             */ 01200002
       2 GNTNEXTP PTR(24)BDY(WORD) ,  /* POINTER TO RECORD PREFIX   */  01250002
                                       /* OF NEXT GDGNT              */ 01300002
       2 GNTID CHAR(1),                /* GDG NAME TABLE ID          */ 01350002
       2 GNTNEXTR PTR(31),             /* POINTER TO RECORD OF NEXT  */ 01400002
                                       /* GDGNT                      */ 01450002
       2 GNTGRPEN(4) CHAR(39),         /* GDG NAME TABLE ENTRIES     */ 01500002
        3 GNTNAME CHAR(35),            /* GDG GROUP NAME             */ 01550002
        3 GNTBASE CHAR(4),             /* GENERATION BASE NUMBER     */ 01600002
       2 GNTENT FIXED(8),              /* NUMBER OF OF ENTRIES IN    */ 01650002
                                       /* GDGNT                      */ 01700002
       2 * CHAR(11);                   /* RESERVED                   */ 01750002
./  ADD  SSI=32211269,NAME=IEFZB432
 /********************************************************************/ 00050002
 /*                                                                  */ 00060002
 /* NAME - IEFZB432                                                  */ 00070002
 /*                                                                  */ 00080002
 /* DESCRIPTIVE NAME - ALLOCATION COMMUNICATION AREA                 */ 00090002
 /*                                                                  */ 00100002
 /* SUPPORT CODE - YO2670                                            */ 00110002
 /*                                                                  */ 00120002
 /* FUNCTION -                                                       */ 00130002
 /*   THIS STRUCTURE MAPS THE NUCLEUS RESIDENT CSECT, QMWR (ASSEMBLY */ 00140002
 /*   MODULE IEFATECB), WHICH CONTAINS UNIVERSAL INFORMATION FOR ALL */ 00150002
 /*   ALLOCATIONS IN THE SYSTEM. SPECIFICALLY, IT IS USED BY THE     */ 00160002
 /*   VOLUME MOUNT AND VERIFY ROUTINES TO LOCATE THE MVCA CHAIN, AND */ 00170002
 /*   BY IEFAB424 (BUILD EDL) TO LOCATE THE NUCLEUS RESIDENT ROUTINE,*/ 00180002
 /*   IEFAB438 (DDR COUNT ROUTINE). THE CVT CONTAINS THE ADDRESS OF  */ 00190002
 /*   THE QMWR CSECT.                                                */ 00300002
 /*   NOTE: THIS STRUCTURE REPLACES THE ALLOCATION/TERMINATION       */ 00305002
 /*   COMMUNICATION AREA OF OS/VS2 RELEASE 1.                        */ 00310002
 /*                                                                  */ 00315002
 /* METHOD OF ACCESS                                                 */ 00320002
 /*   PL/S - DCL ACTAPTR PTR(31)                                     */ 00325002
 /*          OR RFY ATCA BASED(CVTQMWR)                              */ 00330002
 /*                                                                  */ 00335002
 /********************************************************************/ 00340002
 DCL                                                                    00900002
   1 ATCA BASED(ATCAPTR) BDY(WORD),    /*ATCA                        */ 03900002
     2 ATCA438P PTR(31),               /*PTR TO DDR COUNT ROUTINE    */ 06900002
     2 *        FIXED(31),             /*RESERVED                    */ 09900002
     2 *        PTR(31),               /*RESERVED                    */ 12900002
     2 ATCAMVCP PTR(31);               /*PTR TO FIRST MVCA ON CHAIN  */ 15900002
 DCL                                                                    18900002
   IEFAB438 ENTRY BASED(ATCA438P);                                      21900002
./  ADD  SSI=31062237,NAME=IEFZB435
*   %GOTO PDIBSL;       /* BILINGUAL MAPPING                            00100002
         MACRO                                                          00150002
         IEFZB435                                                       00200002
*                                                                       00250002
*        PASSED DATA SET INFORMATION                                    00300002
*                                                                       00350002
*        OS/VS2 REL.2     DATE: SEPTEMBER 12, 1972    VERSION: 001      00400002
*                                                                       00500002
PDI      DSECT                                                          00600002
*                                                                       01250002
*        PDI BLOCK(PDIB) - ID=21(HEX)                                   01300002
*                                                                       01350002
PDIBLOCK DS    0F                                                       01400002
PDINPDIP DS    CL3      DA ADDR OF NEXT PDQ DIRECTORY BLOCK,0 IF LAST   01410002
PDICTR   DS    1X       NUMBER OF PDI ENTRIES IN THIS PDI BLOCK         01440002
PDIBNXTP DS    1F       SVAB CHAIN POINTER                              01442002
PDIENTRY DS    CL168    FROM 1 TO 3 PDI ENTRIES                         01444002
PDIE     DSECT                                                          01452002
PDIDSNAM DS    CL44     DATA SET NAME                                   01460002
PDIUNWA  DS    CL1      STATUS BYTE                                     01600002
PDIISTAT EQU   128      INITIAL STATUS IS OLD                           01650002
PDICSTAT EQU   64       CURRENT STATUS IS OLD                           01700002
PDIPASIN EQU   32       PASS SATISFIED                                  01750002
PDIJOBLB EQU   2        DD THAT PASSED IS JOBLIB                        01760002
         DS    CL1      RESERVED                                        01800002
PDISTPNO DS    CL2      CURRENT STEP NUMBER                             01850002
PDISIOTA DS    CL3      PASS/RECEIVE SIOT SVA,DEPENDING ON PASS IND.    01900002
         DS    CL1      RESERVED                                        01910002
PDISIOTP DS    CL4      PASS SIOT SVAB, DURING UNALLOCATION.            01920002
PDIBLKID EQU   33       SWA BLOCK ID FOR PDIB                           01960002
PDIBLKLN EQU   176      PDIB LENGTH IN SWA                              02010002
         MEND           */                                              02550002
*%PDIBSL:;                                                              02600002
*/*      PASSED DATA SET INFORMATION.                                */ 02610002
*/*                                                                  */ 02620002
*/*      OS/VS2 REL.2    DATE: SEPTEMBER 12,1972     VERSION: 001    */ 02630002
*/*                                                                  */ 02640002
*/*      PDI BLOCK(PDIB) - ID = 21(HEX)                              */ 02642002
*/*                                                                  */ 02644002
*   DCL 1 PDIBLOCK BASED(PDIBLPTR),    /* PDI BLOCK (PDIB)           */ 02650002
*         2 PDINPDIP FIXED(24) BDY(WORD), /* SVA CHAIN POINTER.      */ 02700002
*         2 PDICTR FIXED(8),           /* N0. OF PDIES IN THIS PDIB  */ 02850002
*         2 PDIBNXTP PTR(31),          /* SVAB CHAIN POINTER         */ 02900002
*         2 PDIENTRY CHAR(168);        /* FROM 1 TO 3 PDI ENTRIES    */ 02950002
*/*                                                                  */ 03000002
*   DCL 1 PDIE(3) BASED(ADDR(PDIENTRY)), /* PDI ENTRY                */ 03050002
*         2 PDIDSNAM CHAR(44),         /* PASSED DATA SET NAME.      */ 03100002
*         2 PDIUNWA CHAR(1),           /* STATUS BYTE                */ 03150002
*           3 PDIISTAT BIT(1),         /* INITIAL STATUS IF ON=OLD   */ 03200002
*           3 PDICSTAT BIT(1),         /* CURRENT STATUS IF ON=OLD   */ 03250002
*           3 PDIPASIN BIT(1),         /* PASS INDICATOR 1=PASS,0=REC*/ 03300002
*           3 * BIT(3),                /* RESERVED                   */ 03350002
*           3 PDIJOBLB BIT(1),         /* DD THAT PASSED IS JOBLIB.  */ 03400002
*           3 * BIT(1),                /* RESERVED                   */ 03450002
*         2 * CHAR(1),                 /* RESERVED                   */ 03500002
*         2 PDISTPNO FIXED(15),        /* STEP NUMBER THAT PASSED.   */ 03510002
*         2 PDISIOTA FIXED(24) BDY(WORD), /* PASS/RECEIVE SIOT SVA,     03550002
*                                         DEPENDING ON PASS IND.     */ 03552002
*         2 * CHAR(1),                 /* RESERVED                   */ 03560002
*         2 PDISIOTP PTR(31);          /* SVAB OF PASS SIOT,            03610002
*                                         DURING UNALLOCATION.       */ 03620002
*   DCL PDIBLKID FIXED(8) CONSTANT(33); /* SWA PDIB IDENTIFIER.      */ 03650002
*   DCL PDIBLKLN FIXED(31) CONSTANT(176);/* PDIB LENGTH IN SWA.      */ 03700002
* /*                  END OF PDI                                     */ 04500002
./  ADD  SSI=22761859,NAME=IEFZB506
* /*     05/10/72                                                   */  00050002
*   %GOTO ZB506PLS;                                                 /*  00100002
         MACRO                                                          00150002
         IEFZB506                                                       00200002
ZB506    DSECT                                                          00250002
SWBUFPTR DS    0F                  FOR READ OR WRITE - BUFFER ADDRESS   00300002
SWASNVA  DS    CL3                 FOR ASSIGNS (SVA)                    00350002
SWASNZO  DS    CL1                 4TH BYTE OF SVA0 - FOR ASSIGNS       00400002
*                                  REMAINDER NOT USED FOR ASSIGNS       00450002
SWROWVA  DS    CL3                 SVA FOR READ OR WRITE                00500002
SWWRTID  DS    CL1                 BLOCK ID FOR WRITE                   00550002
         MEND                                                       */  00600002
*%ZB506PLS:;                                                            00650002
*   DCL                                                                 00700002
*         1 SWAMMEPA BASED(EPAPTR),        /* MOVE MODE EPA MAPPING */  00750002
*           2 SWBUFPTR PTR(31),            /* BUFFER ADDRESS FOR    */  00800002
*                                          /* READ OR WRITE         */  00850002
*             3 SWASNVA PTR(24) BDY(BYTE), /* 3 BYTE SVA FOR ASSIGN */  00900002
*             3 SWASNZO PTR(8),            /* SET TO 0 BY ASSIGN    */  00950002
*                                          /* REMAINDER NOT USED    */  01000002
*                                          /* FOR ASSIGNS           */  01050002
*           2 SWROWVA PTR(24) BDY(BYTE),   /* SVA FOR READ OR WRITE */  01100002
*           2 SWWRTID CHAR(1);             /* BLOCK ID FOR WRITE    */  01150002
./  ADD  SSI=60870138,NAME=IEFZB507
*    %GO TO JNLBSL;                /* BILINGUAL MAPPING                 00050002
           MACRO                                                        00100002
           IEFZB507                                                     00150002
*                                                                       00200002
*      JOURNAL WRITE PARAMETER LIST                                     00250002
*                                                                       00300002
*      SU 7 VS2,10/10/75,LEVEL=2                             @Z40FPPJ   00360040
*                                                                       00400002
JNLPARM   DSECT                                                         00450002
JNLPCALL  DS      CL1              CALLER INDICATOR                     00500002
JNLSWAMI  EQU     X'80'            SWA MOVE                             00550002
JNLSWALI  EQU     X'40'            SWA LOCATE                           00600002
JNLINIT   EQU     X'20'            INITIATOR CALL AFTER ALLOCATION      00650002
JNLDRCT   EQU     X'10'            DIRECT WRITE TO JOURNAL              00700002
JNLPRTCD  DS      CL1              RETURN CODE FIELD                    00750002
JNLERR    EQU     X'80'            JOURNAL ERROR RETURN CODE            00800002
JNLABSNT  EQU     X'40'            NO JOURNAL RETURN CODE               00810002
          DS      CL2              RESERVED                             00850002
JNLPPTRX  DS      CL4              PTR TO EXTENSION BLOCK      @Z40FPPJ 00900040
*                                                                       00957040
*                                                                       01006040
*                                                                       01020040
*   JOURNAL PARAMETER LIST EXTENSION                                    01027040
*                                                                       01034040
*   SU 7 VS2    ,10/10/75,LEVEL=2                              @Z40FPPJ 01041040
*                                                                       01042040
JNLPARMX DSECT                                                 @Z40FPPJ 01043040
JNLBLKAD DS    F          PTR TO NON-SWA BLOCK                 @Z4OFPPJ 01043840
JNLPID   DS    CL1        NON-SWA BLOCK ID                     @Z40FPPJ 01044640
JNLPRLNG DS    CL3        LENGTH OF BLOCK                      @Z40FPPJ 01045440
JNLRBN   DS    CL4         NON-SWA BLOCK RBN OR ZERO           @Z40FPPJ 01046240
JNLNBLK  DS    F           PTR TO NEXT PARMLIST EXTENTION OF ZERO       01048040
         MEND  */                                                       01050040
*%JNLBSL:;                                                              01100002
*/*                                                                  */ 01110002
*/*           JOURNAL WRITE PARAMETER LIST                           */ 01120002
*/*           VS2 SU 7       10/10/75, LEVEL=2                       */ 01130040
*/*                                                                  */ 01140002
* DCL 1 JNLPARM BASED(JNLPTR),                                          01150002
*       2 JNLPCALL PTR(8),      /* CALLER INDICATOR                  */ 01200002
*         3 JNLSWAMI BIT(1),    /* SWA MOVE                          */ 01250002
*         3 JNLSWALI BIT(1),    /* SWA LOCATE                        */ 01300002
*         3 JNLINIT BIT(1),     /* INITIATOR CALL AFTER ALLOCATION   */ 01350002
*         3 JNLDRCT BIT(1),     /* DIRECT WRITE TO JOURNAL           */ 01400002
*         3 * BIT(4),           /* RESERVED                          */ 01450002
*       2 JNLPRTCD PTR(8),      /* RETURN CODE FIELD                 */ 01500002
*         3 JNLERR BIT(1),      /* JOURNAL ERROR RETURN CODE         */ 01550002
*         3 JNLABSNT BIT(1),    /* NO JOURNAL RETURN CODE            */ 01560002
*         3 * BIT(6),           /* RESERVED                          */ 01600002
*       2 * CHAR(2),            /* RESERVED                          */ 01650002
*       2 JNLPPTRX PTR(31);     /* PTR TO EXTENSION BLOCK    @Z40FPPJ*/ 01700040
*/*                                                                  */ 01800040
*/* JOURNAL PARAMETER LIST EXTENSION                                 */ 01804040
*/*                                                                  */ 01808040
*/*   VS2 SU 7    10/10/75,LEVEL=2                           @Z40FPPJ*/ 01812040
*/*                                                                  */ 01816040
* DCL 1 JNLPARMX BASED(JNLPPTRX),                          /*@Z40FPPJ*/ 01819040
*      2 JNLBLKAD PTR(31),    /* PTR TO NON-SWA BLK          @Z40FPPJ*/ 01823040
*      2 JNLPID PTR(8),       /* NON-SWA BLOCK ID            @Z40FPPJ*/ 01827040
*      2 JNLPRLNG PTR(24),    /* BLOCK LENGTH                @Z40FPPJ*/ 01831040
*      2 JNLRBN CHAR(4),      /* NON-SWA BLOCK RBN OR ZERO   @Z40FPPJ*/ 01835040
*      2 JNLNBLK PTR(31);     /* NEXT BLOCK ADDR/ZERO        @Z40FPPJ*/ 01839040
*/*                                                                  */ 01850002
*/*                 END JNLPARM                                      */ 01900002
./  ADD  SSI=22511842,NAME=IEFZB600
*   %GOTO GPBSL;                                                        01000002
*                                  /*                                   02000001
         MACRO                                                          03000001
         IEFZB600                                                       03050001
*                                                                    */ 03060002
* /* MACMEAN GETPTWT MEANS GETPART WORK TABLE                        */ 03100002
* /* MACCOMP Y-2 SC1B6/PZD90                                         */ 03150002
* /* MACSTAT Y-2 72339/013400                                        */ 03200002
* /*                                                                    03250002
GETPTWT  DSECT                                                          04000001
GPSIZEA  DS    F -     ADDR OF REGION SIZE LIST                         05000001
GPADDLT  DS    F -     ADDR OF REGION ADDRESS LIST                      06000002
GPCODE   DS    X -     GETMAIN CODE FOR SUPERVISOR                      07000001
GPECBMOD EQU   X'81' - INDICATES ECB MODE                               07050001
GPSUBP   DS    X -     SUBPOOL                                          08000001
GPREAL   EQU   242 -   V=R SUBPOOL                                      08050002
GPVIRT   EQU   247 -   V=V SUBPOOL                                      08100002
         DS    H -     RESERVED                                         09000001
GPADDH0  DS    0F                                                       10000001
GPHIARC0 DS    X'00' - INDICATES H0                                     11000001
GPH0ADD  DS    AL3 -   SPECIFIC ADDRESS OR 0                            12000001
GPSIZEH0  DS   F -     REGION SIZE                                      12050002
GPENDLST EQU   X'80' - INDICATES END OF LIST                            16050001
GPFLGS   DS    X                                                        19000001
GPMSG    EQU   X'80' - CURRENT MODULE HAS ISSUED MSG IEF092I            20000001
GPREGION EQU   X'40' - A SPECIAL REGION IS REQUIRED              Y02669 20050002
GPERROR  DS    C     - RETURN CODE OR POST CODE FROM GETPART     Y02669 20100002
         DS    XL2 -                                             Y02669 21000002
GPECBLST DS    0F -    ECB LIST                                         24050001
GPGPECBP DS    F -     POINTER TO GETPART ECB                    Y02652 24100002
GPCECBP  DS    F -     POINTER TO CANCEL ECB                            24150001
GPBIT    EQU   X'80'   TO MARK END OF ECB LIST                          24200001
GPSIZE   EQU   *-GETPTWT - SIZE OF GWT                                  26000001
         MEND  , */                                                     27000001
*%GPBSL:                                                                28000001
*   ;                                                                   29000001
* /* MACMEAN GWT MEANS GETPART WORK TABLE                            */ 29050002
* /* MACCOMP Y-2 SC1B6/PZD90                                         */ 29100002
* /* MACSTAT Y-2 72339/013400                                        */ 29150002
*   DECLARE                                                             30000001
*         1 GWT BASED(GWTPTR),                                          31000001
*           2 GPSIZEA PTR(31),      /* ADDR OF REGION SIZE LIST      */ 32000001
*           2 GPADDLT PTR(31),      /* ADDR OF REGION ADDRESS LIST   */ 33000001
*           2 GPCODE PTR(8),        /* X'01' INDICATES ECB MODE      */ 34000001
*           2 GPSUBP PTR(8),        /* SUBPOOL 247 OR 242            */ 35000001
*           2 * PTR(16),            /* RESERVED                      */ 36000001
*           2 GPADDH0 PTR(31),                                          37000001
*             3 GPHIARC0 PTR(8),    /* INDICATES H0                  */ 38000001
*             3 GPH0ADD PTR(24),    /* SPECIFIC ADDRESS OR 0         */ 39000001
*           2 GPSIZEH0 PTR(31),     /* REGION SIZE                   */ 43000001
*             3 GPENDLST BIT(1),    /* INDICATES END OF LIST         */ 43050002
*           2 * PTR(31),                                                45000002
*             3 GPFLGS CHAR(1),                                         46000001
*               4 GPMSG BIT(1),     /* CURRENT MODULE HAS ISSUED        47000001
*                                      IEF092I                       */ 48000001
*               4 GPREGION BIT(1),  /* A SPECIAL REGION IS              48050002
*                                      REQUIRED                Y02669*/ 48100002
*             3 GPERROR CHAR(1),    /* A RETURN CODE OR POST CODE       48150002
*                                      FROM GETPART            Y02669*/ 48300002
*           2 GPECBLST CHAR(8) BDY (WORD), /* ECB LIST               */ 55050002
*             3 GPGPECBP PTR(31),   /* POINTER TO GETPART ECB  Y02652*/ 55100002
*             3 GPCECBP PTR(31),    /* POINTER TO CANCEL ECB         */ 55150001
*               4 GPBIT BIT(1);     /* TO MARK END OF ECB LIST       */ 55200002
./  ADD  SSI=52590416,NAME=IEFZB622
*        %GOTO STEPLBSL;           /*                                   00050002
         MACRO                                                          00100002
         IEFZB622                                                       00150002
STEPL    DSECT                                                          00200002
*                                                                    */ 00202002
* /* MACMEAN STEPL MEANS STAE EXIT PARAMETER LIST                    */ 00210002
* /* MACCOMP Y-2 SC1B6/PZD90                                         */ 00220002
* /* MACSTAT Y-2 72339/013400                                        */ 00230002
* /*     THIS MACRO CONTAINS INFORMATION REQUIRED BY THE         Y02653 00250002
*        INITIATOR TASK RECOVERY ROUTINE.                        Y02653 00300002
STELCT   DS    F -   POINTER TO LCT                                     00350002
STEPARAM DS    F -   POINTER TO IEFPARAM                                00400002
STEFLAGS DS    B -   FLAGS                                              00450002
STERETRY EQU   X'80' RETRY IS BEING ATTEMPTED. NEXT JOB MUST RUN.       00500002
STETJMR  EQU   X'40' RETRY IN PROGRESS. THIS JOB MUST RUN.              00550002
STEJOBLB EQU   X'20' JOBLIB WAS LAST LIB. OPENED                        00560002
STESTPLB EQU   X'10' STEPLIB WAS LAST LIB. OPENED                       00570002
STEFCHLB EQU   X'08' FETCHLIB WAS LAST LIB. OPENED                      00580002
         DS    XL3 - RESERVED                                           00600002
         DS    F -   RESERVED                                           00650002
STELEN   EQU   *-STEPL SIZE OF STEPL                                    00700002
         MEND , */                                                      00750002
*%STEPLBSL: ;                                                           00800002
* /* MACMEAN STEPL MEANS STAE EXIT PARAMETER LIST                    */ 00810002
* /* MACCOMP Y-2 SC1B6/PZD90                                         */ 00820002
* /* MACSTAT Y-2 72339/013400                                        */ 00830002
*   DECLARE                                                             00850002
*         1 STEPL BASED(STEPLPTR),                                      00900002
*        /*THE STEPL CONTAINS INFORMATION REQUIRED BY THE      Y02653   00950002
*          INITIATOR TASK RECOVERY ROUTINE.                    Y02653*/ 01000002
*           2 STELCT PTR(31),      /*POINTER TO LCT                  */ 01050002
*           2 STEPARAM PTR(31),    /*POINTER TO IEFPARAM             */ 01100002
*           2 *        PTR(31),                                         01150002
*             3 STEFLAGS BIT(8),                                        01200002
*               4 STERETRY BIT(1), /*RETRY IS BEING ATTEMPTED.          01250002
*                                    NEXT JOB MUST RUN.              */ 01300002
*               4 STETJMR BIT(1),  /*RETRY IN PROGRESS. THIS            01350002
*                                    JOB MUST RUN.                   */ 01400002
*               4 STEJOBLB BIT(1), /* JOBLIB WAS LAST LIB. OPENED    */ 01410002
*               4 STESTPLB BIT(1), /* STEPLIB WAS LAST LIB. OPENED   */ 01420002
*               4 STEFCHLB BIT(1), /* FETCHLIB WAS LAST LIB. OPENED  */ 01430002
*           2 *        PTR(31);                                         01450002
./  ADD  SSI=32820363,NAME=IEFZB630
*   %GOTO PARBSL; /*                                                    00050002
         MACRO                                                          00060002
         IEFZB630                                                       00070002
IEFPARAM DSECT                                                          00100002
*                                                                    */ 00102002
* /* MACMEAN IEFPARAM MEANS INTERNAL INITIATOR PARAMETER LIST        */ 00104002
* /* MACCOMP Y-2 SC1B6/PZD11                                         */ 00106002
* /* MACSTAT Y-2 73239/013400                                        */ 00107002
* /*                                                                    00108402
*        THIS MACRO REPRESENTS A PARAMETER LIST PASSED BETWEEN          00110002
*        SEVERAL INITIATOR MODULES. IT IS GOTTEN BY IEFSD162 AND        00120002
*        FREED BY IEFSD164.                                             00130002
IEFUSADD DS    0F                 ADDRESS OF USER PARMETERS             00150002
LCTADDR  DS    0F                 ADDR OF LCT FOR IEFSD164        M0138 00160002
JOBSTCB  DS    1F                 ADDRESS OF JOB STEP TCB               00200002
IEFDCBAD DS    0F                 ADDRESS OF FETCHLIB DCB               00350002
COMPCODE DS    1F                 COMPLETION CODE FOR SVC 34            00400002
IEFREMLS DS    F                  ADDRESS OF ATTACH LIST                00500002
IEFLCTAD DS    F                  ADDRESS OF LCT                        00550002
IEFTCBAD DS    0A                 INITIATOR TCB ADDRESS                 00600002
         DS    B                  RESERVED                       Y02652 00650002
INITTCB  DS    AL3                ADDRESS OF INIT TCB                   00750002
IEFTIOTA DS    F                  ADDRESS OF WORD WHICH POINTS   Y02669 00800002
*                                 TO JOB STEP'S TIOT             Y02669 00820002
IEFECBLT DS    0F                 ECB LIST                              00850002
ATTECBAD DS    F                  ADDRESS OF ATTACH ECB                 00900002
CANECBAD DS    F                  ADDRESS OF CANCEL ECB                 00950002
PAROMEMP DS    C                  INITIATOR MEMORY PRIORITY      Y02669 01000002
PARNMEMP DS    C                  STEP MEMORY PRIORITY           Y02669 01010002
PARPRFMF DS    C                  PERFORMANCE GROUP (FROM SCT)   Y02655 01020002
         DS    C                  RESERVED                       Y02652 01030002
IEFAECB  DS    F                  ATTACH ECB                            01050002
PARTIOTB DS    F                  ADDRESS OF INIT'S TIOT         Y02653 01060002
PARSRMEC DS    F                  ECB TO COMMUNICATE WITH SRM   YM03531 01070002
IEFPLEND EQU   *                                                   I270 01100002
IEFPSIZE EQU   IEFPLEND-IEFPARAM                                   I270 01150002
         MEND  , */                                                     01200002
*%PARBSL: ;                                                             01250002
* /* MACMEAN IEFPARAM MEANS INTERNAL INITIATOR PARAMETER LIST        */ 01260002
* /* MACCOMP Y-2 SC1B6/PZD11                                         */ 01270002
* /* MACSTAT Y-2 73239/013400                                        */ 01280002
*   DECLARE                                                             01300002
*         1 IEFPARAM BASED(PARPTR),                                     01350002
*        /*IEFPARAM REPRESENTS A PARAMETER LIST PASSED BETWEEN          01360002
*          SEVERAL INITIATOR MODULES. IT IS GOTTEN BY IEFSD162          01370002
*          AND FREED BY IEFSD164.                                    */ 01380002
*           2 IEFUSADD PTR(31),    /*ADDR OF USER PARMS              */ 01400002
*           2 IEFDCBAD PTR(31),    /*ADDR OF FETCHLIB DCB            */ 01500002
*           2 IEFREMLS PTR(31),    /*ADDR OF ATTACH LIST             */ 01550002
*           2 IEFLCTAD PTR(31),    /*ADDR OF LCT                     */ 01600002
*           2 IEFTCBAD PTR(31),    /*INITIATOR TCB ADDR              */ 01650002
*             3 *        BIT(8),   /*RESERVED                  Y02652*/ 01700002
*             3 INITTCB PTR(24),   /*ADDR OF INITIATOR TCB           */ 01800002
*           2 IEFTIOTA PTR(31),    /*ADDR OF WORD WHICH POINTS          01850002
                                     TO JOB STEP'S TIOT        Y02669*/ 01870002
*           2 IEFECBLT CHAR(8) BDY(WORD),  /*ECB LIST                */ 01900002
*             3 ATTECBAD PTR(31),  /*ADDR OF ATTACH ECB              */ 01950002
*             3 CANECBAD PTR(31),  /*ADDR OF CANCEL ECB              */ 02000002
*                                                                       02050002
*           2 * PTR(31),                                                02060002
*             3 PAROMEMP PTR(8),   /*INIT. MEMORY PRIORITY    Y02669*/  02070002
*             3 PARNMEMP PTR(8),   /*STEP MEMORY PRIORITY     Y02669*/  02080002
*             3 PARPRFMF PTR(8),   /*PERFORMANCE GROUP (FROM SCT)       02090002
*                                                              Y02655*/ 02092002
*           2 IEFAECB PTR(31),     /*ATTACH ECB                      */ 02100002
*           2 PARTIOTB PTR(31),    /*ADDR OF INITIATOR TIOT    Y02653*/ 02150002
*           2 PARSRMEC PTR(31);    /*ECB TO COMMUNICATE WITH SRM        02200002
                                                              YM03531*/ 02220002
*   DECLARE                        /*OVERLAY FIELDS IN IEFPARAM      */ 02250002
*         JOBSTCB  DEFINED(IEFUSADD), /*ADDR OF JOB STEP TCB         */ 02300002
*         LCTADDR DEFINED(IEFUSADD), /*ADDR OF LCT FOR IEFSD164      */ 02310002
*         COMPCODE DEFINED(IEFDCBAD); /*COMP CODE FOR SVC 34         */ 02350002
./  ADD  SSI=30661822,NAME=IEFZB9RD
* /* MACMEAN  ESTAE RECOVERY EXIT PARAMETER LIST */                     00100002
* /* MACCOMP Y-2 SCIB9/PZD90                     */                     00150002
* /* MACSTAT Y-2 72266/000000                    */                     00200002
* /* THIS MACRO CONTAINS INFORMATION REQUIRED BY THE CONVERTER          00250002
*    AND INTERPRETER ESTAE RECOVERY ROUTINES. */                        00300002
*        %GOTO EREPLBSL; /*                                             00350002
         MACRO                                                          00400002
         IEFZB9RD                                                       00450002
EREPL    DSECT                                                          00500002
*                                                                       00550002
EREPLCWA DS    F     POINTER TO CWA FOR CONVERTER ESTAE EXIT.           00600002
EREPLIWA DS    F     POINTER TO IWA FOR INTERPRETER ESTAE EXIT.         00650002
EREPLRSV DS    F     ADDRESS OF CALLER'S SAVEAREA                       00660002
EREPFLGS EQU   *     BEGINNING OF INDICATOR FLAGS.                      00700002
EREPFLG1 DS    B     FLAGS                                              00750002
EREPRCUR EQU   X'80' RECURSION BIT.IF ENTRY TO EXIT ROUTINE IS MADE     00800002
*                    WITH THIS BIT ON,THEN AN ABEND DURING RECOVERY     00850002
*                    ATTEMPT OCCURRED.                                  00900002
         DS    XL3   RESERVED                                           00950002
         DS    F     RESERVED                                           01000002
EREPLEN  EQU   *-EREPL  LENGTH OF PARAMETER LIST.                       01050002
         MEND  */                                                       01100002
*%EREPLBSL: ;                                                           01150002
*        DECLARE                                                        01200002
*        1 EREPL BASED(EREPLPTR),                                       01250002
*          2 EREPLCWA PTR(31),     /*POINTER TO CWA-CONVERTER*/         01300002
*          2 EREPLIWA PTR(31),     /*POINTER TO IWA-INTERPRETER*/       01350002
*          2 EREPLRSV PTR(31),     /*ADDRESS OF CALLER'S SAVEAREA*/     01360002
*          2 EREPFLGS,             /*BEGINNING OF FLAG FIELD  */        01400002
*            3 EREPFLG1 BIT(8),    /*FIRST FLAG FIELD */                01450002
*              4 EREPRCUR BIT(1),  /*RECURSION BIT-IF ENTRY IS          01500002
*                                    MADE TO EXIT ROUTINE WITH          01550002
*                                    THIS BIT ON,THEN ABEND OCCURRED    01600002
*                                    DURING RECOVERY PROCESSING. */     01650002
*              4 *        BIT(7),  /*RESERVED*/                         01700002
*            3 *         BIT(24),  /*RESERVED*/                         01750002
*          2 *        FIXED(31);   /*RESERVED*/                         01800002
./  ADD  SSI=21681462,NAME=IEFZGTWA
         MACRO                                                          00400000
         IEFZGTWA                                                       00900000
* 630000-639000                                                   M3759 01300019
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * O77 01800000
*                                                                   O77 02700000
*              TERMINATION WORK AREA                                O77 03600000
*                                                                   O77 04500000
* THIS MACRO IS USED IN TERMINATION BY:                             O77 05400000
*              IEFZGST1  STEP DISPOSITION PROCESSING                O77 06300000
*              IEFZGST2  STEP UNALLOCATION PROCESSING               O77 07200000
*              IEFZHMSG  DISPOSITION/UNALLOCATION MSG RTN           O77 08100000
*              IEFZGJB1  JOB DISPOSITION/UNALLOCATION PROC          O77 09000000
*                                                                   O77 09900000
*  CORE IS GOTTEN FOR:                                              O77 10800000
*              STEP TERMINATION BY IEFYPJB3                         O77 11700000
*              JOB TERMINATION BY IEFZAJB3                          O77 12600000
*                                                                   O77 13500000
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * O77 14400000
         DS    0D                                                       15300000
*                                  LCT SAVE AREA                    O77 16200000
WLCT1    DS    1F                                                   O77 17100000
CBDASW   EQU   32                  DIRECT ACCESS MASK               O77 18000000
UNALLOC  EQU   16                  IND FOR PASS THRU UNALLOC        O77 18900000
WLCT2    DS    1F                                                   O77 19800000
WLCT3    DS    1F                                                   O77 20700000
WLCT4    DS    1F                                                   O77 21600000
WQMPCA   DS    CL4                 Q-MGR PARM - CORE ADDR OF RCD TO O77 22500000
*                                  BE READ OR WRITTEN (R/W)         O77 23400000
WQMPEX   DS    CL4                 Q-MGR PARM - TTR OF RCD TO BE R/WO77 24300000
WVOLISTA DS    CL4                 STARTING ADDR OF VOLSER PARMLIST O77 25200000
WREGSAVE DS    15F                 IEFZHMSG'S REG SAVE AREA         O77 26100000
WR1      DS    3F                  REG SAVE AREA FOR S/R            O77 27000000
WR13     DS    1F                  SAVE AREA FOR R13                O77 27900000
WR14     DS    1F                  SAVE AREA FOR R14                O77 28800000
WPDQR0   DS    1F                  PDQ COUNTER SAVE AREA            O77 29700000
WPDQR5   DS    1F                  PDQ INDEX SAVE AREA              O77 30600000
WR2      DS    1F                  SAVE AREA FOR IEFZHMSG           O77 31500000
WPLISTSZ DS    CL2                 SIZE OF VOLSER PARM LIST         O77 32400000
WSWITCH1 DS    CL1                                                  O77 33300000
*                                                                   O77 34200000
*        BITS  0,4, AND 7 ARE STILL AVAILABLE                       O77 35100000
*                                                                   O77 36000000
CBREWIND EQU   64                  REWIND (DELETE RTN)              O77 36900000
CBTIOTSW EQU   32                  TIOT-FIRST                       O77 37800000
CBPDQFSW EQU   16                  PDQ-FIRST                        O77 38700000
CBNOVOLS EQU   4                   NO VOLUMES SWITCH                O77 39600000
CBMNTDSW EQU   1                   MOUNTED SWITCH                   O77 40500000
WSWITCH2 DS    CL1                                                  O77 41400000
*                                                                   O77 42300000
*        BITS  4, AND 7 ARE STILL AVAILABLE                         O77 43200000
*                                                                   O77 44100000
CBOVFLSW EQU   128                 OVERFLOW                         O77 45000000
CBPDQEND EQU   64                  PDQ END                          O77 45900000
CTIOTEND EQU   64                  TIOT END SWITCH                  O77 46800000
CNOCORE  EQU   32                  NO CORE SWITCH (P-LIST RTN)      O77 47700000
CJFCB1   EQU   16                  FIRST PASS SWITCH IN MOUNT       O77 48600000
CUCBSW   EQU   4                   UCB-FOUND                        O77 49500000
CBWTOSW  EQU   2                   WTO-ALSO                         O77 50400000
WSWITCH3 DS    CL1                 SWITCHES FOR SYSOUT              O77 51300000
*                                                                   O77 52200000
*                                                                   O77 54000000
CBMODIFY EQU   128                 FIRST LINE MODIFY SW             O77 54900000
CBNOTDEL EQU   64                  NOT DEL-PRINT RTN CODE           O77 55800000
CBPRIVAT EQU   32                  PRIVATE - DELETE RTN             O77 56700000
CBUNCAT  EQU   8                   UNCATLOG                         O77 57600000
CBZRTNCD EQU   4                   PRINT ZERO RTN CODES ONLY        O77 58500000
CBUNAL   EQU   2                   FIRST PASS SWITCH FOR UNALLOC    O77 59400000
CBMSGDUN EQU   2                   JOB TERM MSG SW                  O77 60300000
CBFAIL   EQU   1                   JOB FAILED FROM YPJB3         A47551 60350001
WSWITCH4 DS    CL1                                                  O77 61200000
CSIOTIN  EQU   128                 JOB TERMINATION BIT SIOT IN CORE O77 62100000
NONSUP   EQU   64                      MSG IS NON-SUPPRESSABLE    M3759 63000019
MSGABEND EQU   32                      MSGLEVEL=(X,1) OR ABEND    M3759 63900019
QMOPWRTE EQU   16                  WRITE INDICATOR FOR Q-MGR        O77 64800000
STASWTCH EQU   8                   PRESENCE OF DISPLAY STATUS       O77 65700000
ENQUCBQ5 EQU   4                   TERMINATION ENQ'ED ON Q5         O77 66600000
ENQINZH  EQU   2                   IEFZHMSG ENQ'ED ON Q5 ON ENTRY   O77 67500000
VOLBLKSW EQU   1                   CORE FOR EXT BLK OF JFCB GT 5 VOLO77 68400000
WVOLSAVE DS    CL2          SERIAL NUMBER                           O77 69300000
WPDQR7   DS    F             EXCHANGE AREA                          O77 70200000
*                                                                   O77 71100000
*                                  MACRO PARAMETER LIST             O77 72000000
WMACRPM1 DS    1F                  SPECIFIC MACRO PARM              O77 72900000
WMACRPM2 DS    AL4                 PTR TO DS NAME                   O77 73800000
WMACRPM3 DS    1F                  NOT USSED                        O77 74700000
WMACRPM4 DS    AL4                 PTR TO VOLUME PARM LIST          O77 75600000
WMACRPM5 DS    1F                  PTR TO DSCB TTR FOR CATLOG     M1836 75650001
*                                                                   O77 76500000
*                                  WTO PARAMETER AREA               O77 77400000
WPRIPARM DS    CL3                 HEADING FOR WTO                  O77 78300000
WPRINT   DS    CL121               BUFFER - STARTS AT WPRINT+1      O77 79200000
WJOBID   DS    CL1                 JOB ID SAVE AREA                 O77 80100000
WMVERBAS DS    1F                  MOUNT VERIFY BASE SAVE AREA      O77 81000000
WRETURNA DS    1F                  CALLER'S ADDR IN ZGLINK          O77 81900000
WREGADDR DS    1F                  ADDR OF REG SAVE AREA FOR ZHMSG  O77 82800000
WCOREMIN DS    1F                  MINIMUM AMOUNT WANTED            O77 83700000
WCOREMAX DS    1F                  MAXIMUM AMOUNT WANTED            O77 84600000
WCOREADR DS    1F                  ADDR OF SECONDARY CORE           O77 85500000
WGETCORE DS    1F                  AMOUNT ORE CORE OBTAINED         O77 86400000
WRWDR0   DS    2F                  REGISTER SAVE AREA               O77 87300000
DCELSAV1 EQU   WRWDR0              SAVE REG 6 FOR DATA CELL         O77 88200000
DCELSAV2 EQU   WRWDR0+4            SAVE REG 7 FOR DATA CELL         O77 89100000
WRWDR14  DS    2F                     FOR EXCP                      O77 90000000
DCELSAV3 EQU   WRWDR14             SAVE REG14                       O77 90900000
DCELNO   DS    X                                                    O77 91800000
DCELSW   DS    X                                                    O77 92700000
WSIOTCOR DS    1F                  ADDR OF SIOT FOR JOB TERM        O77 93600000
DISMOUNT DS    1F                  MULTIVOLUME UCB PTR              O77 94500000
PDQLOAD  EQU   *                   PDQ LOAD POINT (MUST BE LAST     O77 95400000
*                                    CARD OF THE WORKAREA)          O77 96300000
*              END  OF   WORKAREA  DSECT                            O77 97200000
         MEND                                                           98100000
./  ADD  SSI=20720205,NAME=IEZCOM
*        %GOTO COMBSL;        /* BILINGUAL MAPPING                   /* 01000000
         MACRO                                                          02000000
         IEZCOM                                                         03000000
*                                                                       04000000
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 05000000
*                                                                       06000000
*        COMMUNICATIONS PARAMETER LIST                                  07000000
*              MAPPING MACRO                                            08000000
*                                                                       09000000
*    AOS/1 RELEASE 1, 10/19/71, LEVEL=1                                 10000001
*                                                                       12000000
         DS    0D                                                       13000000
COMLIST  EQU   * COMPTR ->    COMMUNICATIONS PARAMETER LIST             14000000
*                                                                       15000000
COMECBPT DS    A -            PTR TO ECB FOR STOP OR MODIFY COMMAND     16000000
COMLAST  DS    0A -           LAST POINTER IN PARAMETER LIST            17000000
COMEND   EQU   X'80' -        HIGH ORDER BIT OF LAST PARAMETER POINTER  18000000
COMCIBPT DS    A -            PTR TO COMMAND INPUT BUFFER (CIB)         19000000
*                               MAPPED BY THE MACRO IEZCIB              20000000
*                                                                       21000000
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 22000000
*                                                                       23000000
         MEND  , */                                                     24000000
* %COMBSL  :  ;                                                         25000000
*                                                                       26000000
* /*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  */ 27000000
*                                                                       28000000
* /*     COMMUNICATIONS PARAMETER LIST                               */ 29000000
* /*           MAPPING MACRO                                         */ 30000000
*                                                                       31000000
* /* AOS/1 RELEASE 1, 10/19/71, LEVEL=1                              */ 32000001
*                                                                       34000000
* DECLARE                                                               35000000
*   1 COMLIST  BASED(COMPTR),                                           36000000
*                                                                       37000000
*    2 COMECBPT PTR(31),             /* PTR TO ECB FOR STOP OR          38000000
*                                       MODIFY COMMAND               */ 39000000
*    2 COMCIBPT PTR(31),             /* PTR TO COMMAND INPUT BUFFER     40000000
*                                       (CIB) MAPPED BY THE MACRO       41000000
*                                       IEZCIB                       */ 42000000
*                                                                       43000000
* /*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  */ 44000000
*                                                                       45000000
*     3 COMLAST  PTR(31),            /* LAST POINTER IN PARAMETER       46000000
*                                       LIST                         */ 47000000
*      4 COMEND   BIT(1),            /* HIGH ORDER BIT OF LAST          48000000
*                                       PARAMETER POINTER            */ 49000000
*      4 *        BIT(1),            /* RESERVED                     */ 50000000
*      4 *        BIT(1),            /* RESERVED                     */ 51000000
*      4 *        BIT(1),            /* RESERVED                     */ 52000000
*      4 *        BIT(1),            /* RESERVED                     */ 53000000
*      4 *        BIT(1),            /* RESERVED                     */ 54000000
*      4 *        BIT(1),            /* RESERVED                     */ 55000000
*      4 *        BIT(1);            /* RESERVED                     */ 56000000
./  ADD  SSI=60650606,NAME=IEZIEL
*        %GOTO IELBSL;    /*                                            00011001
         MACRO                                                          00012000
         IEZIEL &EXITS=                                                 00020000
         LCLA  &N,&IELDUM                                               00030000
.*  COMPUTE LENGTH OF NEL EXIT LIST                                     00040000
&IELDUM  SETA  N'&EXITS                                                 00050000
&IELDUM  SETA  8*&IELDUM                                                00060000
         AIF   (&IELDUM EQ 0).IELSTRT                                   00070000
&IELDUM  SETA  &IELDUM+8                                                00080000
.IELSTRT ANOP                                                           00090000
*********************************************************************** 00100000
*                                                                     * 00110000
*              INITIATOR CONTROL INTERFACE                            * 00120000
*                                                                     * 00130000
*    AOS/2 RELEASE 4, 09/13/74, LEVEL=1                       @Z40RPPJ* 00132040
*********************************************************************** 00140000
         SPACE                                                          00140100
*********************************************************************** 00141000
*                                                                     * 00150000
*                 INITIATOR ENTRANCE LIST (IEL)                       * 00160000
*                                                                     * 00170100
*********************************************************************** 00171000
IELLIST  DS    0D                                                       00180000
         SPACE                                                          00194002
IELSSOBA DS    A         ADDRESS OF SSOB HEADER                         00196002
IELCSCB  DS    A ------- ADDRESS OF CSCB                                00226002
IELOPLST DS    A ------- ADDRESS OF INITIATOR OPTION LIST               00230000
IELRTNA  DS    A         RETURN ADDRESS FOR INITIATOR                   00240402
IELSTEPL DS    A         ADDR OF INITS STAE EXIT PARM LIST              00242002
IELLAST  DS    0A ------ SYMBOL USED TO SET HIGH-ORDER BIT INDICATING   00260000
*                        END OF LIST                                    00270001
IELEXIT  DS    A ------- ADDRESS OF INITIATOR EXIT LIST                 00280000
         SPACE                                                          00290000
IELEND   EQU   X'80' -   SYMBOL TO SET HIGH-ORDER BIT OF IELLAST        00300001
IELLEND  EQU   *                                                        00302002
IELLEN   EQU   IELLEND-IELLIST LENGTH OF IEL                            00304002
         SPACE                                                          00310000
*********************************************************************** 00311000
*                                                                     * 00320000
*                     INITIATOR OPTION LIST                           * 00330000
*                                                                     * 00340000
*********************************************************************** 00341000
IELOPTS  DS    0D                                                       00350000
         SPACE                                                          00370000
IELOPLEN DS    H ------- LENGTH OF OPTION LIST                          00380000
IELOPSW1 DS    B ------- OPTION SWITCH ONE                              00390000
IELDPSWA EQU   X'80'     DON'T SHARE SWA OPTION ON ATTACH               00392002
IELDWFF  EQU   X'40' --- BYPASS USE OF DEDICATED WORK FILES             00410000
IELCANF  EQU   X'08' --- SUPPRESS CANCEL EXCEPT DURING ALLOCATION       00440000
IELONEJF EQU   X'04' --- PROCESS ONLY ONE JOB                           00450000
IELICMDF EQU   X'02' --- INITIATOR TASK INDICATOR                       00460002
         SPACE                                                          00490000
IELOPSW2 DS    B ------- OPTION SWITCH TWO                              00500000
IELTIMEF EQU   X'80' --- DO NOT TIME STEPS                              00510000
IELCRF   EQU   X'40' --- DO NOT PROCESS CHECKPOINT/RESTART              00520000
IELBPRAC EQU   X'04' --- BYPASS RACINIT                        @Z40RPPJ 00540040
IELONORC EQU   X'02' --- BYPASS ALLOCATION RECOVERY                     00570000
IELOENQU EQU   X'01' --- DO NOT WAIT FOR DATA SETS                      00580000
         SPACE                                                          00581000
IELTSIZ  DS    XL1       SIZE OF MASTER'S TIOT                          00591002
         SPACE                                                          00600100
IELOPSW3 DS    B ------- OPTION SWITCH THREE                            00601000
IELNSYS  EQU   32        DO NOT ASSIGN SPECIAL PROPERTIES               00601402
         SPACE                                                          00603000
IELSWAS  DS    XL1       SWA SUBPOOL NO. FOR SUBTASKS                   00605002
         DS    CL1 ----- RESERVED                                       00605402
IELOPEND EQU   *         END OF OPTIONS LIST                            00621202
IELOPTLN EQU   IELOPEND-IELOPTS LENGTH OF OPTIONS LIST                  00624802
         SPACE                                                          00628402
*********************************************************************** 00632002
*                                                                     * 00635602
*                        INITIATOR EXIT LIST                          * 00639202
*                                                                     * 00642802
*********************************************************************** 00646402
IELEXITS DS    0D                                                       00650000
IELEXTLN EQU   &IELDUM - SYMBOLIC LENGTH OF EXIT LIST                   00660000
*********************************************************************** 00661100
*   LINKAGE IDENTIFIERS                                               * 00662000
*********************************************************************** 00663100
IELEXNOP EQU   X'00' --- EXIT IS NO-OPED                                00664000
IELEXADD EQU   X'40' --- BRANCH TO ADDRESS                              00665000
IELEXLNK EQU   X'80' --- LINK TO NAME                                   00666000
IELEXXTL EQU   X'C0' --- XCTL TO NAME                                   00667000
*********************************************************************** 00668100
*   EXIT IDENTIFIERS                                                  * 00668400
*********************************************************************** 00668500
IELRTNEX EQU   X'80' --- RETURN EXIT AFTER TERMINATION                  00669000
IELPREIN EQU   X'40' --- PREINVOCATION EXIT                             00669100
IELPSTIN EQU   X'20' --- POSTINVOCATION EXIT                            00669200
IELPRFRE EQU   X'10' --- PRE FREEPART EXIT                      YM00047 00671302
*********************************************************************** 00673702
         SPACE                                                          00675802
&N       SETA  1                                                        00677902
         AIF   (N'&EXITS EQ 0).GENCON                                   00680000
         SPACE                                                          00690000
*********************************************************************** 00691000
*   EXIT LIST HEADER                                                  * 00691100
*********************************************************************** 00692000
IELXTLEN DS    H ------- LENGTH OF EXIT LIST                            00700000
IELRTNCD DS    CL1 ----- RETURN CODE                                    00710000
IELRTGD  EQU   X'00' --- GOOD RETURN CODE                               00712001
IELRTALC EQU   X'04' --- ALLOCATION UNSUCCESSFUL                        00714001
IELRTJCL EQU   X'04'   JCL ERROR FROM CONVERTER/INTERPRETER             00714402
IELRTJBQ EQU   X'08' --- I/O ERROR ON PROCLIB                           00716002
IELRTDSI EQU   X'0C' --- DATA SET INTEGRITY CANCELLED JOB               00718001
IELRTPRI EQU   X'10' --- PRE-INVOCATION EXIT ROUTINE REQUESTED          00718401
*                        JOB FLUSH                                      00718801
IELRTPTI EQU   X'14' --- POST-INVOCATION EXIT ROUTINE REQUESTED         00719201
*                        JOB FLUSH                                      00719601
IELRTJLB EQU   X'18' --- JOBLIB CANNOT BE OPENED                        00719701
IELRTSLB EQU   X'1C' --- STEPLIB CANNOT BE OPENED                       00719801
IELRTFLB EQU   X'20' --- FETCHLIB CANNOT BE OPENED                      00719901
IELPERR  EQU   X'24'   PROGRAM ERROR                                    00723202
IELRCXT  DS    XL1       CONTAINS RETURN CODE ORIGIN VALUE              00727202
* NOTE: THE FOLLOWING RETURN CODE ORIGINS HAVE THE SAME VALUE IN THE    00729202
* JSXL                                                                  00729602
IELCI    EQU   2       CONVERTER,SWA CREATE                             00729702
IELINIT  EQU   3       INITIATOR                                        00729802
IELSSJS  EQU   4       SUBSYSTEM JOB SELECT                             00729902
IELSSI   EQU   5       SUBSYSTEM INTERFACE                              00733202
IELSUBS  EQU   6       SUBSYSTEM                                        00735202
*                                                                       00735602
IELCOM   DS    A ------- ADDRESS OF COMMUNICATION LIST                  00736802
*********************************************************************** 00740102
         SPACE                                                          00743402
.NEXT    ANOP                                                           00746702
.*  EXIT ENTRY NUMBER &N                                                00750000
         AIF   ('&EXITS(&N)' EQ 'RTN').GENENTY                          00760000
         AIF   ('&EXITS(&N)' EQ 'PRE').GENENTY                          00761000
         AIF   ('&EXITS(&N)' EQ 'PST').GENENTY                          00762000
         AIF   ('&EXITS(&N)' EQ 'PRF').GENENTY                  YM00047 00764002
         MNOTE ,'INVALID IEL EXIT SPECIFIED'                            00770000
         MEXIT                                                          00780000
.GENENTY ANOP                                                           00790000
*********************************************************************** 00791000
&EXITS(&N).EXIT  DS    0CL8                                             00800000
&EXITS(&N).EXLK  DS    XL1 ----- LINKAGE DEFINITION                     00810000
&EXITS(&N).EXID  DS    XL1 ----- EXIT DEFINITION                        00820000
&EXITS(&N).EXNM  DS    CL6 ----- EXIT NAME                              00830000
         ORG   *-4                                                      00840000
&EXITS(&N).EXAD  DS    A ------- EXIT ADDRESS                           00850000
*********************************************************************** 00850100
         SPACE                                                          00851000
         AIF   (N'&EXITS EQ &N).GENCON                                  00860000
&N       SETA  &N+1                                                     00870000
         AGO   .NEXT                                                    00880000
.GENCON  ANOP                                                           00890000
         MEND  , */                                                     01000001
*********************************************************************** 01001000
*********************************************************************** 01002000
*%IELBSL:;                                                              01010001
*/*                                                                     01010100
*  USE OF THIS MAPPING MACRO IN BSL CAN BE FACILITATED BY USING         01010200
*     MACRO IEZIELDF WHICH DECLARES THE DEFAULT VALUES FOR THE IEL      01010300
*     EXITS.  THE CALLING SEQUENCE FOR IEZIELDF AND IEZIEL IS:          01010400
*            % INCLUDE SYSLIB(IEZIELDF),                                01010500
*       (SPECIFY EXIT LISTS TO BE GENERATED LEAVING OUT REFERENCES TO   01010900
*        EXITS WHICH ARE NOT TO BE GENERATED)                           01011000
*            % RTNEXIT = 'Y',   -  RETURN EXIT                          01011300
*            % PREEXIT = 'Y',   -  PRE INITIATION EXIT                  01011400
*            % PSTEXIT = 'Y',   -  POST INITIATION EXIT                 01011600
*            % PRFEXIT = 'Y',   -  PRE FREEPART EXIT            YM00047 01011702
*            % INCLUDE SYSLIB(IEZIEL),                                  01018402
*                                                                    */ 01020202
*/* **************************************************************** */ 01022002
*/*                                                                  */ 01023802
*/*                 INITIATOR CONTROL INTERFACE                      */ 01025602
*/*                                                                  */ 01027402
*/*  AOS/2 RELEASE 4, 09/13/74, LEVEL=1                      @Z40RPPJ*/ 01029240
*/* **************************************************************** */ 01031002
*   % DCL IELLEN CHAR;    /*LENGTH OF ENTRANCE LIST*/                   01032802
*   % IELLEN = 'LENGTH(IELLIST)';                                       01034602
* DECLARE                                                               01036402
* 1 IEL BASED (IELPTR) BDY(DWORD),                                      01038202
*  2 IELLIST CHAR(24) BDY(DWORD),                                       01040000
*/* **************************************************************** */ 01050000
*/*                                                                  */ 01051000
*/*                     INITIATOR ENTRANCE LIST                      */ 01051100
*/*                                                                  */ 01052000
*/* **************************************************************** */ 01060000
*   3 IELSSOBA PTR (31),     /* ADDRESS OF SSOB HEADER*/                01060402
*   3 IELCSCB PTR (31),      /* ADDRESS OF START COMMAND CSCB */        01060502
*   3 IELOPLST PTR (31),     /*ADDRESS OF INITIATOR OPTION LIST*/       01070000
*   3 IELRTNA PTR (31),      /* RETURN ADDRESS FOR INITIATOR*/          01080402
*   3 IELSTEPL PTR (31),     /* ADDR OF INITS STAE EXIT PARM LIST*/     01082002
*   3 IELEXIT PTR (31),      /*ADDRESS OF INITIATOR EXIT LIST*/         01100000
*    4 IELLAST CHAR (1),     /*SYMBOL USED TO SET HIGH ORDER BIT        01110000
*                              INDICATING END OF LIST*/                 01110101
*     5 IELEND BIT (1),      /*HIGH ORDER BIT*/                         01110200
*     5 * BIT (7);                                                      01110300
*/* **************************************************************** */ 01111000
*/*                                                                  */ 01112000
*/*                  INITIATOR OPTION LIST                           */ 01113000
*/*                                                                  */ 01114000
*/* **************************************************************** */ 01115000
*   % DCL IELOPTLN CHAR;                                                01115200
*   % IELOPTLN = '8';        /*SYMBOLIC LENGTH OF OPTION LIST*/         01115300
* DECLARE                                                               01115400
* 1 IELOPTS CHAR (8) BASED (IELOPBAS) BDY (DWORD),                      01115700
*   3 IELOPLEN FIXED (15),   /*LENGTH OF OPTION LIST*/                  01115800
*   3 IELOPSW1 CHAR (1),     /*OPTION SWITCH ONE*/                      01115900
*    4 IELDPSWA BIT (1),     /* DON'T SHARE SWA OPTION ON ATTACH*/      01116702
*    4 IELDWFF BIT (1),      /*DO NOT USE DEDICATED WORK FILES*/        01122602
*    4 * BIT (1),            /* RESERVED*/                              01123402
*    4 * BIT (1),            /* RESERVED*/                              01124202
*    4 IELCANF BIT (1),      /*SUPPRESS CANCEL EXCEPT DURING ALLOCATE*/ 01125002
*    4 IELONEJF BIT (1),     /*PROCESS ONLY ONE JOB*/                   01125802
*    4 IELICMDF BIT (1),     /* INITIATOR TASK INDICATOR */             01125902
*    4 * BIT (1),            /* RESERVED*/                              01126202
*                                                                       01128602
*   3 IELOPSW2 CHAR (1),     /*OPTION SWITCH TWO*/                      01129802
*    4 IELTIMEF BIT (1),     /*DO NOT TIME STEPS*/                      01130602
*    4 IELCRF BIT (1),       /*DO NOT PROCESS CHECKPOINT/RESTART*/      01131402
*    4 * BIT (1),            /* RESERVED*/                              01135002
*    4 * BIT (1),            /* RESERVED*/                              01135102
*    4 * BIT (1),            /* RESERVED*/                              01135202
*    4 IELBPRAC BIT (1),     /* BYPASS RACINIT               @Z40RPPJ*/ 01135340
*    4 IELONORC BIT (1),     /*BYPASS ALLOCATION RECOVERY*/             01135402
*    4 IELOENQU BIT (1),     /*DO NOT WAIT FOR DATA SETS*/              01136202
*                                                                       01137002
*   3 IELTSIZ PTR (8),       /* SIZE OF MASTER'S TIOT*/                 01137402
*                                                                       01138602
*   3 IELOPSW3 CHAR (1),     /*OPTION SWITCH THREE*/                    01139402
*        4 * BIT (1),        /*RESERVED*/                               01139802
*        4 * BIT (1),        /*RESERVED*/                               01140202
*        4 IELNSYS BIT (1),  /*DO NOT ASSIGN SPECIAL PROPERTIES*/       01140602
*                                                                       01141002
*   3 IELSWAS PTR (8),       /*SWA SUBPOOL NO. FOR SUBTASK*/            01141402
*   3 * CHAR (1);            /*RESERVED*/                               01141802
*/* **************************************************************** */ 01142602
*/*                                                                  */ 01143402
*/*                  INITIATOR EXIT LIST                             */ 01144202
*/*                                                                  */ 01145002
*/* **************************************************************** */ 01145802
*/* **************************************************************** */ 01146602
*/*    LINKAGE IDENTIFIERS                                           */ 01147402
*/* **************************************************************** */ 01148202
*  % DCL IELEXNOP CHAR;                                                 01149002
*  % IELEXNOP = '''00''X';   /*EXIT IS N0-0PED*/                        01149802
*  % DCL IELEXADD CHAR;                                                 01150602
*  % IELEXADD = '''40''X';   /*BRANCH TO ADDRESS*/                      01151402
*  % DCL IELEXLNK CHAR;                                                 01152202
*  % IELEXLNK = '''80''X';   /*LINK TO NAME*/                           01153002
*  % DCL IELEXXTL CHAR;                                                 01153802
*  % IELEXXTL = '''C0''X';   /*XCTL TO NAME*/                           01154602
*/* **************************************************************** */ 01155402
*/*    EXIT IDENTIFIERS                                              */ 01156202
*/* **************************************************************** */ 01157002
*  % DCL IELRTNEX CHAR;                                                 01157802
*  % IELRTNEX = '''80''X';   /*RETURN EXIT AFTER TERMINATION*/          01158602
*  % DCL IELPREIN CHAR;                                                 01159402
*  % IELPREIN = '''40''X';   /*PREINVOCATION EXIT*/                     01160202
*  % DCL IELPSTIN CHAR;                                                 01161002
*  % IELPSTIN = '''20''X';   /*POST INVOCATION EXIT*/                   01161802
*  % DCL IELPRFIN CHAR;      /*                              @YM00047*/ 01162202
*  % IELPRFIN = '''10''X';   /* PRE FREEPART EXIT  @YM00047 */          01162302
*/* **************************************************************** */ 01166702
*  % DCL IELDUM FIXED;                                                  01167802
*  % IELDUM=0;                                                          01168902
*  % IF RTNEXIT ¬= ' ' %THEN % IELDUM = IELDUM + 1;                     01170002
*  % IF PREEXIT ¬= ' ' %THEN % IELDUM = IELDUM + 1;                     01171102
*  % IF PSTEXIT ¬= ' ' %THEN % IELDUM = IELDUM + 1;                     01172202
*  % IF PRFEXIT ¬= ' ' %THEN % IELDUM = IELDUM + 1;  /* @YM00047*/      01173102
*  % IELDUM = 8*IELDUM;   /*8 BYTES PER EXIT ENTRY*/                    01173302
*  % IF IELDUM = 0 % THEN % GO TO ENDIEL; /* IF NO EXITS SPECIFIED,     01174402
*                                            DONT ADD HEADER LENGTH*/   01175502
*  % IELDUM = IELDUM + 8;    /* ADD HEADER LENGTH */                    01176602
*/* **************************************************************** */ 01177702
* DECLARE                                                               01178802
* 1 IELEXITS BDY(DWORD) BASED(IELEXBAS),                                01179902
*  2 IELEXHDR  BDY (WORD),   /*EXIT LIST HEADER*/                       01181002
*   3 IELXTLEN FIXED (15),   /*EXIT LIST LENGTH*/                       01182102
*   3 IELRTNCD PTR (8),      /*RETURN CODE*/                            01183202
*  %DCL IELRTGD CHAR;                                                   01184302
*  %IELRTGD='''00''X';       /* GOOD RETURN CODE                     */ 01185401
*  %DCL IELRTALC CHAR;                                                  01195401
*  %IELRTALC='''04''X';      /* ALLOCATION UNSUCCESSFUL              */ 01205401
* %DCL IELRTJCL CHAR;                                                   01205802
* %IELRTJCL='''04''X';        /* JCL ERROR FROM CONVERTER/INTERPRETER*/ 01207402
*  %DCL IELRTJBQ CHAR;                                                  01215401
*  %IELRTJBQ='''08''X';      /* I/O ERROR ON PROCLIB                 */ 01217402
*  %DCL IELRTDSI CHAR;                                                  01219401
*  %IELRTDSI='''0C''X';      /* DATA SET INTEGRITY CANCELLED JOB     */ 01221401
*  %DCL IELRTPRI CHAR;       /* PRE-INVOCATION EXIT ROUTINE          */ 01223401
*  %IELRTPRI='''10''X';      /* REQUESTED JOB FLUSH                  */ 01223801
*  %DCL IELRTPTI CHAR;       /* POST-INVOCATION EXIT ROUTINE         */ 01224201
*  %IELRTPTI='''14''X';      /* REQUESTED JOB FLUSH                  */ 01224601
*  %DCL IELRTJLB CHAR;                                                  01225001
*  %IELRTJLB='''18''X';      /* JOBLIB CANNOT BE OPENED              */ 01225101
*  %DCL IELRTSLB CHAR;                                                  01225201
*  %IELRTSLB='''1C''X';      /* STEPLIB CANNOT BE OPENED             */ 01225301
*  %DCL IELRTFLB CHAR;                                                  01242001
*  %IELRTFLB='''20''X';      /* FETCHLIB CANNOT BE OPENED            */ 01252001
*  %DCL IELPERR CHAR;                                                   01254002
*  %IELPERR='''24''X';        /* PROGRAM ERROR                       */ 01256002
* 3 IELRCXT PTR(8),            /* CONTAINS RETURN CODE ORIGIN VALUE */  01258602
*/* NOTE: THE FOLLOWING CODE ORIGINS HAVE THE SAME VALUE IN THE JSXL */ 01264202
* %DCL IELCI CHAR;                                                      01266202
* %IELCI='''02''X';            /* CONVERTER SWA CREATE              */  01268202
* %DCL IELINIT CHAR;                                                    01268602
* %IELINIT='''03''X';          /* INITIATOR                         */  01269002
* %DCL IELSSJS CHAR;                                                    01269402
* %IELSSJS='''04''X';          /* SUBSYSTEM JOB SELECT              */  01269502
* %DCL IELSSI CHAR;                                                     01269602
* %IELSSI='''05''X';           /* SUBSYSTEM INTERFACE               */  01269702
* %DCL IELSUBS CHAR;                                                    01283602
* %IELSUBS='''06''X';          /* SUBSYSTEM                         */  01293602
*   3 IELCOM PTR (31),       /*ADDRESS OF COMM LIST                */   01311502
*/* **************************************************************** */ 01325401
*  % IF RTNEXIT = ' ' % THEN % GO TO IELEX1;                            01375401
*/* **************************************************************** */ 01425401
*  2 RTNEXT CHAR (8) BDY (WORD)  ,                                      01475402
*   3 RTNEXLK CHAR (1),            /*LINKAGE DEFINITION*/               01525401
*   3 RTNEXID CHAR (1),            /*EXIT DEFINITION*/                  01575401
*   3 RTNEXNM CHAR (6)BDY(WORD,3), /*EXIT NAME*/                        01625401
*    4 * CHAR (2),                                                      01675401
*    4 RTNEXAD PTR (31),           /*EXIT ADDRESS*/                     01725402
*/* **************************************************************** */ 01775401
*  % IELEX1:;                                                           01825401
*  % IF PREEXIT = ' ' % THEN % GO TO IELEX2;                            01875401
*/* **************************************************************** */ 01925401
*  2 PREEXT CHAR (8) BDY (WORD),                                        01945402
*   3 PREEXLK CHAR (1),            /*LINKAGE DEFINITION*/               02025401
*   3 PREEXID CHAR (1),            /*EXIT DEFINITION*/                  02075401
*   3 PREEXNM CHAR (6)BDY(WORD,3), /*EXIT NAME*/                        02125401
*    4 * CHAR (2),                                                      02175401
*    4 PREEXAD PTR (31),           /*EXIT ADDRESS*/                     02225401
*/* **************************************************************** */ 02275401
*  % IELEX2:;                                                           02325401
*  % IF PSTEXIT = ' ' % THEN % GO TO IELEX3;                            02375401
*/* **************************************************************** */ 02425401
*  2 PSTEXT CHAR (8) BDY (WORD),                                        02445402
*   3 PSTEXLK CHAR (1),            /*LINKAGE DEFINITION*/               02525401
*   3 PSTEXID CHAR (1),            /*EXIT DEFINITION*/                  02575401
*   3 PSTEXNM CHAR (6)BDY(WORD,3), /*EXIT NAME*/                        02625401
*    4 * CHAR (2),                                                      02675401
*    4 PSTEXAD PTR (31),           /*EXIT ADDRESS*/                     02725401
*/* **************************************************************** */ 02775401
*  % IELEX3:;                                                           02825401
*  % IF PRFEXIT = ' ' % THEN % GO TO IELEX4;  /* @YM00047 */            02835402
*/* ***************************************************************  */ 02845402
*  2  PRFEXT CHAR(8) BDY (WORD),    /* @YM00047*/                       02855402
*        3 PRFEXLK CHAR(1),  /* LINKAGE DEFINITION @YM00047*/           02869402
*        3 PRFEXID CHAR(1),  /* EXIT DEFINITION @YM00047*/              02871402
*        3 PRFEXNM CHAR(6),  /* EXIT NAME @YM00047*/                    02873402
*          4 * CHAR(2),      /* @YM00047*/                              02873802
*          4 PRFEXAD PTR(31), /* EXIT ADDRESS @YM00047*/                02874202
*/* **************************************************************** */ 02874602
* % IELEX4:;    /* @YM00047*/                                           02875102
*         10 * CHAR(1);                                                 02875401
*  % ENDIEL:;                                                           02925401
./  ADD  SSI=31062245,NAME=IEZIELDF
* % DCL (RTNEXIT,PREEXIT,PSTEXIT,PRFEXIT) CHAR;                         00010002
* % DCL IELOPBAS CHAR;                                                  00020001
* % IELOPBAS = 'IELOPLST';                                              00030001
* % DCL IELEXBAS CHAR;                                                  00040001
* % IELEXBAS = 'IELEXIT';                                               00050001
* % RTNEXIT = ' ';                                                      00060001
* % PREEXIT = ' ';                                                      00070001
* % PSTEXIT = ' ';                                                      00080001
* % PRFEXIT = ' ';       /* @YM00047 */                                 00130002
./  ADD  SSI=30381602,NAME=IEZMPL
*        %GOTO MPLL1;         /* BILINGUAL MAPPING                      00900002
         MACRO                                                          01800002
         IEZMPL &DSECT=YES                                           */ 02700002
*%MPLL1: ;                                                              03600002
* /*******************************************************************/ 03650002
* /*                                                                 */ 03700002
* /* MACMEAN MPL MEANS MONITOR PARAMETER LIST                        */ 03750002
* /*                                                                 */ 03800002
* /* MACCOMP Y-2 SC1C5/PZD81                                         */ 03850002
* /*                                                                 */ 03900002
* /* MACSTAT Y-2 72245/TU015156                                      */ 03950002
* /*                                                                 */ 04000002
* /* METHOD OF ACCESS                                                */ 04050002
* /*     PL/S - DCL MPLPTR PTR                                       */ 04100002
* /*     BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */ 04150002
* /*            USING ON DSECT NAME GIVES ADDRESSABILITY FOR ALL     */ 04200002
* /*            SYMBOLS IN THAT DSECT.                               */ 04250002
* /*                                                                 */ 04300002
* /* USAGE                                                           */ 04310002
* /*     PL/S - A STRUCTURE LEVEL NUMBER MAY BE SPECIFIED BY SETTING */ 04320002
* /*            THE COMPILE-TIME VARIABLE %MPLLEVEL. IN THAT CASE,   */ 04330002
* /*            NO DECLARE STATEMENT IS PRODUCED.  THE STRUCTURE     */ 04340002
* /*            LEVEL NUMBER MUST BE LESS THAT 10.  THE DECLARE      */ 04342002
* /*            STATEMENT MAY BE LEFT OPENED BY SETTING              */ 04344002
* /*            %MPL9999=','.  OTHERWISE, IT IS CLOSED.              */ 04346002
* /*                                                                 */ 04348002
* /*******************************************************************/ 04350002
*%GOTO MPLL2; /*                                                        17100002
         SPACE                                                          18000002
         IEZBITS , -          SYMBOLIC BIT DEFINITIONS                  18900002
         SPACE                                                          19800002
         AIF    ('&DSECT' EQ 'NO').MPL0000                              20700002
MPL      DSECT                                                          21600002
         AGO   .MPL0020                                                 22500002
.MPL0000 ANOP                                                           23400002
         DS    0D                                                       24300002
MPL      EQU   *                                                        25200002
.MPL0020 ANOP                                                           26100002
         SPACE                                                          27000002
MPLPROC  DS    0H             PROCESSING FLAGS                          27900002
MPLPROC1 DS    B              FIRST BYTE OF PROCESSING FLAGS            28800002
MPLCONS  EQU   BIT0           MPLID IS A CONSOLE ID                     29700002
MPLTERM  EQU   BIT1           MPLID IS AN ASID FOR A TSO USER           30600002
MPLSTRT  EQU   BIT2           START MONITOR                             31500002
MPLSTOP  EQU   BIT3           STOP MONITOR                              32400002
MPLRSV01 EQU   BIT4,,C'X' -   RESERVED                                  33300002
MPLRSV02 EQU   BIT5,,C'X' -   RESERVED                                  34200002
MPLRSV03 EQU   BIT6,,C'X' -   RESERVED                                  35100002
MPLRSV04 EQU   BIT7,,C'X' -   RESERVED                                  36000002
         SPACE                                                          36900002
MPLPROC2 DS    B              SECOND BYTE OF PROCESSING FLAGS           37800002
         SPACE                                                          38700002
MPLID    DS    CL2            CONSOLE ID OR ASID                        39600002
         SPACE                                                          40500002
MPLTYPE  DS    0H -           MONITOR TYPE FLAGS                        41400002
MPLTYPE1 DS    B -            FIRST BYTE OF MONITOR TYPE FLAGS          42300002
MPLJBNM  EQU   BIT0 -         MONITOR JOBNAMES                          43200002
MPLSTAT  EQU   BIT1 -         MONITOR STATUS                            44100002
MPLRSV05 EQU   BIT2,,C'X' -   RESERVED                                  45000002
MPLRSV06 EQU   BIT3,,C'X' -   RESERVED                                  45900002
MPLRSV07 EQU   BIT4,,C'X' -   RESERVED                                  46800002
MPLSESS  EQU   BIT5 -         MONITOR SESSIONS                          47700002
MPLRSV08 EQU   BIT6,,C'X' -   RESERVED                                  48600002
MPLRSV09 EQU   BIT7,,C'X' -   RESERVED                                  49500002
         SPACE                                                          50400002
MPLTYPE2 DS    B              SECOND BYTE OF MONITOR TYPE FLAGS         51300002
         SPACE                                                          52200002
MPLALL   EQU   MPLJBNM+MPLSTAT+MPLSESS ALL MONITOR FUNCTIONS            53100002
         SPACE                                                          54000002
MPLRSV10 DS    CL2            RESERVED                                  54900002
         SPACE                                                          55800002
MPLSIZE  EQU   *-MPL -        LENGTH OF MPL                             56700002
         MEND  , -               */                                     57600002
*%MPLL2: ;                               /* PL/S COMPILE-TIME TARGET */ 58500002
*        % IF MPL9999¬=','               /* IF THIS IS THE LAST BLOCK*/ 58550002
*          % THEN %MPL9999=';';          /* THEN CLOSE DECLARE          58600002
*                                           STATEMENT                */ 58650002
*        % IF MPLLEVEL¬=''               /* IF THIS IS A CONCATENATED   58700002
*                                           BLOCK                    */ 58750002
*          % THEN %GOTO MPLL3;           /* THEN SKIP DECLARE           58800002
*                                           STATEMENT                */ 58850002
*                                                                       59400002
*DECLARE                                                                60300002
*  1 MPL BASED(MPLPTR)                   /* DECLARE MPL LEVEL ONE    */ 61200002
*        % GOTO MPLL4;                   /* SKIP LEVEL N DECLARE     */ 61250002
*%MPLL3:  MPLDUM=MPLLEVEL||' MPL';       /* SET LEVEL FOR MINOR         61300002
*                                           STRUCTURE                */ 61350002
*        MPLDUM                          /* MINOR STRUCTURE NAME     */ 61400002
*%MPLL4:;                                                               61450002
*          BDY(WORD),                                                   61500002
*   10 MPLPROC      CHAR(2) BDY(WORD),   /* PROCESSING FLAGS         */ 62100002
*     15 MPLPROC1    BIT(8),             /* FIRST BYTE OF PROCESSING    63000002
*                                           FLAGS                    */ 63900002
*      20 MPLCONS  BIT(1),               /* MPLID IS A CONSOLE ID    */ 64800002
*      20 MPLTERM  BIT(1),               /* MPLID IS AN ASID FOR A      65700002
*                                           TSO USER                 */ 66600002
*      20 MPLSTRT  BIT(1),               /* START MONITOR            */ 67500002
*      20 MPLSTOP  BIT(1),               /* STOP MONITOR             */ 68400002
*      20 MPLRSV01 BIT(1),               /* RESERVED                 */ 69300002
*      20 MPLRSV02 BIT(1),               /* RESERVED                 */ 70200002
*      20 MPLRSV03 BIT(1),               /* RESERVED                 */ 71100002
*      20 MPLRSV04 BIT(1),               /* RESERVED                 */ 72000002
*                                                                       72900002
*     15 MPLPROC2    BIT(8),             /* SECOND BYTE OF PROCESSING   73800002
*                                           FLAGS                    */ 74700002
*                                                                       75600002
*   10 MPLID CHAR(2),                    /* CONSOLE ID OR ASID       */ 76500002
*                                                                       77400002
*   10 MPLTYPE      CHAR(2) BDY(WORD),   /* MONITOR TYPE FLAGS       */ 78300002
*     15 MPLTYPE1    BIT(8),             /* FIRST BYTE OF MONITOR       79200002
*                                           TYPE FLAGS               */ 80100002
*      20 MPLJBNM  BIT(1),               /* MONITOR JOBNAMES         */ 81000002
*      20 MPLSTAT  BIT(1),               /* MONITOR STATUS           */ 81900002
*      20 MPLRSV05 BIT(1),               /* RESERVED                 */ 82800002
*      20 MPLRSV06 BIT(1),               /* RESERVED                 */ 83700002
*      20 MPLRSV07 BIT(1),               /* RESERVED                 */ 84600002
*      20 MPLSESS  BIT(1),               /* MONITOR SESSIONS         */ 85500002
*      20 MPLRSV08 BIT(1),               /* RESERVED                 */ 86400002
*      20 MPLRSV09 BIT(1),               /* RESERVED                 */ 87300002
*                                                                       88200002
*     15 MPLTYPE2    BIT(8),             /* RESERVED                 */ 89100002
*                                                                       90000002
*   10 MPLRSV10     CHAR(2) MPL9999      /* RESERVED                 */ 90900002
*                                                                       91800002
*%MPLALL = '''11000100''B';              /* BIT MASK FOR ALL MONITOR    92700002
*                                           FUNCTIONS                */ 93600002
*                                                                       94500002
*%MPLSIZE = 'LENGTH(MPL)';               /* GET SIZE OF MPL          */ 95400002
./  ADD  SSI=32420029,NAME=IFDCOM
         MACRO                                                          05000000
&NAME    IFDCOM &RELEASE=MVM22                                   Y02008 08000002
         LCLC  &V,&X,&Z,&S                                      X01906  11000001
&S       SETC  '&RELEASE'                                       X01906  14000001
&V       SETC  'DS'                                                     20000000
&X       SETC  'C'                                                      25000000
&Z       SETC  ' '                                                      30000000
         IFDPATCH                                                       32000002
         EJECT                                                          35000000
         AIF   (T'&NAME EQ 'O').SKP1                                    40000000
&NAME    DSECT                                                          45000000
         IFDPF1 &V,&X,&Z,&S                                     X01906  50000001
         EJECT                                                          55000000
         CSECT                                                          60000000
         MEXIT                                                          65000000
.SKP1    ANOP                                                           70000000
         MNOTE 8,'NAME FIELD MISSING, NO STATEMENTS GENERATED'          75000000
         MEND                                                           80000000
./  ADD  SSI=43160083,NAME=IFDEVTAB
*% GO TO DEVTAB1;                      /*                               00400002
         MACRO                                                          00800002
         IFDEVTAB                                                       01200002
DEVTABMP DSECT                                                          01600002
         DS    0D                                                       02000002
         DS    0CL56              MAP OF A DEVTAB ENTRY IN OLTEP COMMON 02400002
.CONT    ANOP  .                */                                      02800002
*%DEVTAB1 : ;                                                           03200002
*                                                                       03600002
*/*************************************************************Y02906*/ 04000002
*/*                 DEVTAB                                     Y02906*/ 04400002
*/*      DEVICE TABLE ENTRY MAP FOR OLTEP                      Y02906*/ 04800002
*/*                                                            Y02906*/ 05200002
*/* OLTEP/VS2 RELEASE 2                                        Y02906*/ 05600002
*/*                                                            Y02906*/ 06000002
*/* METHOD OF ACCESS                                           Y02906*/ 06400002
*/*    BAL - DSECT NAMED 'DEVTAB' IS PRODUCED                  Y02906*/ 06800002
*/*          A 'USING' ON SYMBOL 'DEVTAB' GIVES ADDRESSABILITY Y02906*/ 07200002
*/*           FOR ALL SYMBOLS.                                 Y02906*/ 07600002
*/*                                                            Y02906*/ 08000002
*/*    PL/S -   DECLARE DEVTABPT PTR,  IS NECESSARY FOR ADDRESSY02906*/ 08400002
*/*              ABILITY                                       Y02906*/ 08800002
*/*                                                            Y02906*/ 09200002
*/*************************************************************Y02906*/ 09600002
*        %GOTO DEVTAB2; /*                                     Y02906   10000002
         SPACE 2                                                        10400002
DEVEBCAD DS    CL8                EBCDIC DEVICE ADDRESS                 10800002
DEVUCBAD DS    F                  UCB ADDRESS FOR THIS DEVICE           11200002
DEVFLAG1 DS    CL1                FIRST FLAG BYTE                       11600002
ONLINE   EQU   X'80'              DEVICE IS ONLINE IF BIT = 1           12000002
PRIMARY  EQU   X'40'              DEVICE IS PRIMARY IF BIT =1           12400002
DPDONE   EQU   X'20'              DATA PROTECTION HAS BEEN DONE IF 1    12800002
ACTIVE   EQU   X'10'              DEVICE IS ACTIVE                      13200002
ALOCATED EQU   X'08'              DEVICE HAS HAD ALLOCATION             13600002
GRABED   EQU   X'04'              DEVICE IS A SECONDARY DEVICE          14000002
FILEPRT  EQU   X'02'              DEVICE IS FILE PROTECTED              14400002
SYMBSSID EQU   X'01'               SSID IN SYMBOLIC NAME FIELD @Y30LPAW 14800003
DEVFLAG2 DS    CL1                2ND DEVICE FLAG                       15200002
DSNAME   EQU   X'80'              DATA SET NAME FLIP-FLOP               15600002
SHARED   EQU   X'40'              DEVICE IS SHARED IF = 1               16000002
CEVOLUMN EQU   X'20'              A CE VOLUME IS MOUNTED ON THIS DEVICE 16400002
STANDLBL EQU   X'10'              DEVICE (TAPE) HAS A STANDARD LABEL    16800002
HIODONE  EQU   X'08'              DIO/HIO DONE TO THIS DEVICE           17200002
EXIOLVL3 EQU   X'04'              EXIO CALL FROM A LEVEL 3 MACRO        17600002
PCIIND   EQU   X'02'              A PCI EVENT HAS BEEN POSTED IN TECB   18000002
UNUSED1  EQU   X'01'               UNUSED                      @ZM00190 18400003
DEVFLAG3 DS    CL1                                                      18800002
ANRNOTST EQU   X'80'                                                    19200002
UNUSED2  EQU   X'40'               UNUSED                      @ZM00190 19600003
UNUSED3  EQU   X'20'               UNUSED                      @ZM00190 20000003
TAPEBIT  EQU   X'10'                                                    20400002
NOTEST   EQU   X'08'                                                    20800002
DEVALC   EQU   X'04'                                                    21200002
WAITPOST EQU   X'02'                                                    21600002
REIPSEUD EQU   X'01'                                                    22000002
DEVFLAG4 DS    CL1                4TH DEVICE FLAG BYTE                  22400002
DEVREMDA EQU   X'80'              REMOTE DEVICE DISABLED BY OLTEP       22800002
DEVREMEA EQU   X'40'              REMOTE DEVICE ENABLED BY OLTEP        23200002
RESERVD1 EQU   X'20'                                                    23600002
RESERVD2 EQU   X'10'              UNUSED                                24000002
UNUSED4  EQU   X'08'               UNUSED                      @ZM00190 24400003
UNUSED5  EQU   X'04'               UNUSED                      @ZM00190 24800003
UNUSED6  EQU   X'02'               UNUSED                      @ZM00190 25200003
UNUSED7  EQU   X'01'               UNUSED                      @ZM00190 25600003
DEVLOEXT DS    0CL6               LOW EXTENT ADDRESS FOR DASD           26000002
LOEXTBB  DS    CL2                LOW EXTENT BIN NUMBER                 26400002
LOEXTCC  DS    CL2                LOW EXTENT CYLINDER NUMBER            26800002
LOEXTHH  DS    CL2                LOW EXTENT HEAD NUMBER                27200002
DEVHIEXT DS    0CL6               HIGH EXTENT ADDRESS FOR DASD          27600002
HIEXTBB  DS    CL2                HIGH EXTENT BIN NUMBER                28000002
HIEXTCC  DS    CL2                HIGH EXTENT CYLINDER NUMBER           28400002
HIEXTHH  DS    CL2                HIGH EXTENT HEAD NUMBER               28800002
TAPELABL DS    CL1                DATA BYTE FOR TAPE LABEL SAVE         29200002
UNUSEDX  DS    CL1                UNUSED                                30400002
DEVMODE  DS    CL1                MODE SET SAVE AREA FOR TAPE           30800002
DEVEXPOS DS    CL1                EXPOSURE NUMBER FOR MULTI-EXPOSURE    31200002
*                                  TYPE DEVICE-2305.                    31600002
DEVHEXAD DS    0F                 HEX DEVICE ADDRESS                    32000002
DEVADPAD DS    CL2                PADDING FOR 2 BYTES                   32400002
DEVAD    DS    CL2                DEVICE ADDRESS                        32800002
DEVDESCR DS    0F                 DEVICE DESCRIPTORS FROM CDS           33200002
DEVMODEL DS    CL1                DEVICE MODEL                          33600002
DEVFEATR DS    CL1                DEVICE FEATURES FLAG                  34000002
DEVCLASS DS    CL1                DEVICE CLASS                          34400002
DEVUNTYP DS    CL1                DEVICE UNIT TYPE                      34800002
DEVCDSCT DS    CL1                DEVICE CDS BYTE COUNT                 35200002
DEVCDSFG DS    0CL2               FLAG BYTES FROM CDS                   35600002
CDSFLAG1 DS    CL1                CDS FLAG BYTE 1                       36000002
CDSFILPT EQU   X'80'              RUN FILE PROTECT MODE IF 1            36400002
CDSSHRED EQU   X'40'              DEVICE IS SHARED IF 1                 36800002
CDSCEMNT EQU   X'20'              CE VOLUME IS MOUNTED IF 1             37200002
CDSEXMSK EQU   X'10'              EXTERNAL SIGNAL MASK IN CDS BYTE      37600002
*                                   11 IF 1                             38000002
CDSYMBLC EQU   X'08'              SYMBOLIC NAME IN CDS BYTES 12-19      38400002
*                                   IF 1                                38800002
CDS2CHSW EQU   X'04'              2 CHANNEL SWITCH ON THIS DEVICE IF 1  39200002
CDSREMDV EQU   X'02'              THIS CDS FOR A REMOTE DEVICE IF 1     39600002
CDSLNCON EQU   X'01'              LINE CONNECTION REQUIRED FOR THIS     40000002
*                                   DEVICE IF 1                         40400002
CDSFLAG2 DS    CL1                CDS FLAG BYTE 2                       40800002
CDSNOPRI EQU   X'80'              DON'T ASSIGN THIS DEVICE AS PRIMARY   41200002
*                                   IF 1                                41600002
UNUSED8  EQU   X'40'               UNUSED                      @ZM00190 42000003
UNUSED9  EQU   X'20'               UNUSED                      @ZM00190 42400003
UNUSED10 EQU   X'10'               UNUSED                      @ZM00190 42800003
UNUSED11 EQU   X'08'               UNUSED                      @ZM00190 43200003
UNUSED12 EQU   X'04'               UNUSED                      @ZM00190 43600003
UNUSED13 EQU   X'02'               UNUSED                      @ZM00190 44000003
UNUSED14 EQU   X'01'               UNUSED                      @ZM00190 44400003
CDSEXTSG DS    CL1                DEVICE EXTERNAL SIGNAL MASK           44800002
DEVSYMAM DS    CL8                DEVICE SYMBOLIC NAME                  45200002
SAVMDMSK DS    CL1                SAVED MODESET/FILEMASK                45400002
DEVINTPT DS    CL1                COUNT OF INTERRUPTS POSTED FROM OECB  45450002
*                                  TO THIS POINT. USED TO SYNCHRONIZE   45500002
*                                  WAITIO-POLL POSTING AND THIS MODULE. 45550002
DEVEXPAN DS    CL2                UNUSED                                45600002
         MEND  . */                                                     46000002
*%DEVTAB2 : ;                                                           46400002
*                                                                       46800002
* DECLARE                                                               47200002
*   1 DEVTABMP CHAR(56) BASED(DEVTABPT) BDY(WORD),                      47600002
*     3 DEVEBCAD CHAR(8),         /* EBCDIC DEVICE ADDRESS           */ 48000002
*     3 DEVUCBAD PTR(31),         /* UCB POINTER FOR THIS DEVICE     */ 48400002
*     3 DEVFLAG1 CHAR(1),         /* DEVICE FLAG BYTE 1              */ 48800002
*       5 ONLINE BIT(1),          /* IF 1- DEVICE IS ONLINE          */ 49200002
*       5 PRIMARY BIT(1),         /* IF 1- DEVICE IS PRIMARY         */ 49600002
*       5 DPDONE BIT(1),          /* IF 1- DEVICE IS DATA PROTECTED  */ 50000002
*       5 ACTIVE BIT(1),          /* IF 1- DEVICE IS ACTIVE          */ 50400002
*       5 ALOCATED BIT(1),        /* IF 1- DEVICE IS ALOCATED        */ 50800002
*       5 GRABED BIT(1),          /* IF 1- DEVICE IS GRABBED 2NDARY  */ 51200002
*       5 FILEPRT BIT(1),         /* IF 1- DEVICE IS FILE PROTECTED  */ 51600002
*        5 SYMBSSID BIT(1),        /* SSID IN SYMB NAME FLD  @Y30LPAW*/ 52000003
*     3 DEVFLAG2 CHAR(1),         /* DEVICE FLAG BYTE 2              */ 52400002
*       5 DSNAME BIT(1),          /* IF 0 AND ALOCATED=1-DATA SET    */ 52800002
*                                 /*  NAME IS OSOLTEP1.              */ 53200002
*                                 /* IF 1 AND ALOCATED=1-DATA SET    */ 53600002
*                                 /*  NAME IS OSOLTEP2.              */ 54000002
*       5 SHARED BIT(1),          /* IF 1-DEVICE IS SHARED           */ 54400002
*       5 CEVOLUMN BIT(1),        /* IF 1-DASD   HAS A CE VOLUME ON  */ 54800002
*       5 STANDLBL BIT(1),        /* IF 1-TAPE   HAS A STANDARD LABLE*/ 55200002
*       5 HIODONE BIT(1),         /* IF 1-HALT I/O DONE TO THIS DEV  */ 55600002
*       5 EXIOLVL3 BIT(1),        /* IF 1-EXIO MACRO WAS A LEVEL 3   */ 56000002
*       5 PCIIND BIT(1),          /* IF 1-A PCI INTERRUPT OCCURRED   */ 56400002
*       5 *        BIT(1),        /* UNUSED                          */ 56800002
*     3 DEVFLAG3 CHAR(1),         /* DEVICE FLAG BYTE 3              */ 57200002
*       5 ANRNOTST BIT(1),        /*                                 */ 57600002
*       5 *        BIT(1),        /* UNUSED                          */ 58000002
*       5 *        BIT(1),        /* UNUSED                          */ 58400002
*       5 TAPEBIT  BIT(1),        /* UNUSED                          */ 58800002
*       5 NOTEST   BIT(1),        /* NOT TESTABLE                    */ 59200002
*       5 DEVALC   BIT(1),        /* ALLOCATED                       */ 59600002
*       5 WAITPOST BIT(1),        /* WAITIO IS POSTING               */ 60000002
*       5 REISPEUD BIT(1),        /* REI PSEUDO DEV TAB              */ 60400002
*     3 DEVFLAG4 CHAR(1),         /* DEVICE FLAG BYTE 4              */ 60800002
*       5 DEVREMDA BIT(1),        /*                                 */ 61200002
*       5 DEVREMEA BIT(1),        /*                                 */ 61600002
*       5 RESERVD1 BIT(1),        /*                                 */ 62000002
*       5 RESERVD2 BIT(1),        /* UNUSED                          */ 62400002
*       5 *        BIT(1),        /* UNUSED                          */ 62800002
*       5 *        BIT(1),        /* UNUSED                          */ 63200002
*       5 *        BIT(1),        /* UNUSED                          */ 63600002
*       5 *        BIT(1),        /* UNUSED                          */ 64000002
*     3 DEVLOEXT CHAR(6),         /* LOW EXTENT FOR THIS DEVICE      */ 64400002
*       5 LOEXTBB CHAR(2),        /* LOW EXTENT BB                   */ 64800002
*       5 LOEXTCC CHAR(2),        /* LOW EXTENT CC                   */ 65200002
*       5 LOEXTHH CHAR(2),        /* LOW EXTENT HH                   */ 65600002
*     3 DEVHIEXT CHAR(6),         /* HIGH EXTENT FOR THIS DEVICE     */ 66000002
*       5 HIEXTBB CHAR(2),        /* HIGH EXTENT BB                  */ 66400002
*       5 HIEXTCC CHAR(2),        /* HIGH EXTENT CC                  */ 66800002
*       5 HIEXTHH CHAR(2),        /* HIGH EXTENT BB                  */ 67200002
*     3 TAPELABL CHAR(1),         /* DATA BYTE FOR TAPE LABEL SAVE   */ 67600002
*     3 *        CHAR(1),         /* UNUSED                          */ 69200002
*     3 DEVMODE CHAR(1),          /* MODE SET SAVE AREA FOR TAPE     */ 69600002
*     3 DEVEXPOS CHAR(1),         /* EXPOSURE NUMBER FOR MULTI-EXPO- */ 70000002
*                                 /*  SURE TYPE DEVICE-2305.         */ 70400002
*     3 DEVHEXAD CHAR(4),         /* DEVICE ADDRESS IN HEX           */ 70800002
*       5 DEVADPAD CHAR(2),       /* 2 BYTES PADDING                 */ 71200002
*       5 DEVAD    CHAR(2),       /* 2 BYTE HEX DEVICE ADDRESS       */ 71600002
*         7 *        BIT(4),      /* NOT APPLICABLE                  */ 72000002
*         7 DEVCHANL BIT(4),      /* DEVICE CHANNEL ADDRESS          */ 72400002
*         7 DEVCTRLU BIT(4),      /* DEVICE CONTROL UNIT ADDRESS     */ 72800002
*         7 DEVADDR  BIT(4),      /* DEVICE ADDRESS                  */ 73200002
*     3 DEVDESCR CHAR(4),         /* DEVICE DESCRIPTORS              */ 73600002
*       5 DEVMODEL CHAR(1),       /* DEVICE MODEL NUMBER             */ 74000002
*       5 DEVFEATR CHAR(1),       /* DEVICE FEATURES                 */ 74400002
*       5 DEVCLASS CHAR(1),       /* DEVICE CLASS                    */ 74800002
*       5 DEVUNTYP CHAR(1),       /* DEVICE UNIT TYPE                */ 75200002
*     3 DEVCDSCT CHAR(1),         /* ACTUAL CDS INFORMATION BYTE CNT */ 75600002
*     3 DEVCDSFG CHAR(2),         /* FLAG BYTES FROM CDS             */ 76000002
*       5 CDSFLAG1 CHAR(1),       /* CDS FLAG BYTE 1                 */ 76400002
*         7 CDSFILPT BIT(1),      /* RUN FILE PROTECT MODE IF 1      */ 76800002
*         7 CDSSHRED BIT(1),      /* DEVICE IS SHARED IF 1           */ 77200002
*         7 CDSCEMNT BIT(1),      /* CE VOLUME IS MOUNTED IF 1       */ 77600002
*         7 CDSEXMSK BIT(1),      /* EXTERNAL SIGNAL MASK IN CDS BYTE*/ 78000002
*                                 /*  11 IF 1                        */ 78400002
*         7 CDSYMBLC BIT(1),      /* SYMBOLIC NAME IN CDS BYTES 12-19*/ 78800002
*                                 /*  IF 1                           */ 79200002
*         7 CDS2CHSW BIT(1),      /* 2 CHANNEL SWITCH ON THIS DEVICE */ 79600002
*                                 /*  IF 1                           */ 80000002
*         7 CDSREMDV BIT(1),      /* THIS CDS FOR A REMOTE DEVICE    */ 80400002
*                                 /*  IF 1                           */ 80800002
*         7 CDSLNCON BIT(1),      /* LINE CONNECTION REQUIRED FOR    */ 81200002
*                                 /*  THIS DEVICE IF 1               */ 81600002
*       5 CDSFLAG2 CHAR(1),       /* CDS FLAG BYTE 2                 */ 82000002
*         7 CDSNOPRI BIT(1),      /* DON'T ASSIGN THIS DEVICE AS     */ 82400002
*                                 /*  PRIMARY IF 1                   */ 82800002
*         7 *        BIT(1),      /* UNDEFINED                       */ 83200002
*         7 *        BIT(1),      /* UNDEFINED                       */ 83600002
*         7 *        BIT(1),      /* UNDEFINED                       */ 84000002
*         7 *        BIT(1),      /* UNDEFINED                       */ 84400002
*         7 *        BIT(1),      /* UNDEFINED                       */ 84800002
*         7 *        BIT(1),      /* UNDEFINED                       */ 85200002
*         7 *        BIT(1),      /* UNDEFINED                       */ 85600002
*     3 CDSEXTSG CHAR(1),         /* CDS EXTERNAL SIGNAL MASK IF FLAG*/ 86000002
*                                 /*  1 BIT 3 IS 1                   */ 86400002
*     3 CDSYMNAM CHAR(8),         /* SYMBOLIC NAME FOR THIS DEVICE   */ 86800002
*                                 /*  IF FLAG 1 BIT 4 IS ON          */ 87200002
*     3 SAVMDMSK CHAR(1),         /* SAVED MODESET/FILEMASK          */ 87400002
*     3 DEVINTPT CHAR(1),         /* COUNT OF INTERRUPTS POSTED IN   */ 87440002
*                                 /*  OECB TO THIS POINT. USED TO    */ 87480002
*                                 /*  SYNCHRONIZE WAITIO-POLL POSTING*/ 87520002
*                                 /*  AND NAPA-IFDOLT58              */ 87560002
*     3 DEVEXPAN CHAR(2);         /* 3 CHAR FOR EXPANSION            */ 87600002
./  ADD  SSI=43170089,NAME=IFDMOD
         MACRO                                                          10000000
&NAME    IFDMOD &LOAD=,&CALL=,&DELETE=,&LIST=,&C=2                      20000000
*/***********************************************************@ZM00952*/ 22000003
*/*           IFDMOD                                         @ZM00952*/ 24000003
*/*OLTEP VS2                                                 @ZM00952*/ 26000003
*/*                                                          @ZM00952*/ 28000003
&NAME    BRING LOAD=&LOAD,CALL=&CALL,DELETE=&DELETE,LIST=&LIST,C=&C     30000000
         MEND                                                           40000000
./  ADD  SSI=32550904,NAME=IFDPATCH
         MACRO                                                          03000002
         IFDPATCH                                                       06000002
         LCLA  &L                                                       09000002
         LCLC  &MOD,&N                                                  12000002
&N       SETC  '&SYSECT'                                                15000002
&L       SETA  K'&N-1                                                   18000002
&MOD     SETC  '&SYSECT'(&L,2)                                          21000002
**********************************************************************  27000002
*                                                                     * 30000002
* THIS MACRO IS USED TO PROVIDE UNIFORM PATCH AREAS FOR OLTEP         * 33000002
* IT WILL PROVIDE THE GREATER OF 50 BYTES OR FIVE PERCENT OF CODE     * 36000002
* THIS MACRO HAS BEEN UPDATED 7/10/73 TO PROVIDE IMPROVED FLEXIBILITY * 39000002
* THIS MACRO IS NEW FOR MVM                                           * 42000002
*                                                                     * 45000002
**********************************************************************  48000002
PATCH&MOD DC    ((*-&SYSECT)/40)S(*)         .   PATCH AREA             54000002
         ORG   PATCH&MOD           RETURN TO START OF PATCH AREA        57000002
         DC    24S(*)              AT LEAST 50 BYTES                    60000002
         ORG                                                            63000002
         DC    S(*)                LAST 2 BYTES OF PATCH AREA           66000002
         MEND                                                           69000002
./  ADD  SSI=33600398,NAME=IFDPF1
*                                                                       00100002
*        %GOTO LABEL1;                  /*                              00200002
         MACRO                                                          00300002
         IFDPF1 &V,&X,&Z,&S                                     X01906  00400002
         AIF   ('&V' EQ 'DS').SKP1                                      00500002
CHASCT   &V    F&Z .                    SECTION CONTROL TABLE           00600002
         DC    H'00' .                  ROUTINE MASKS                   00700002
         AIF   ('&S' NE 'AOS12').SK0                            X01906  00800002
.SK01    ANOP                                                           00900002
         DC    X'8601' .                OS DRIVER AND SCT LEVEL X01906  01000002
         &V    7F&Z .                   SCT WORD 2 THRU 8       X01906  01100002
         DC    X'08000000' .            SCT WORD 9             X02008   01200002
         &V    10F&Z .                  SCT WORD 10 THRU 19     X01906  01300002
         AGO   .SK0A                                            X01906  01400002
.SK0     ANOP                                                   X01906  01500002
         AIF   ('&S' EQ 'MVM22').SK01                                   01600002
         DC    X'8600' .                OS DRIVER               X01906  01700002
         &V    18F&Z .                  SCT CONTINUED                   01800002
.SK0A    ANOP                                                   X01906  01900002
         DC    A(OLTTAB) .              LINK TABLE ADDRESS              02000002
         DC    A(UTCOM) .               UNIT TEST PASSON AREA POINTER   02100002
         DC    A(EXTBUF) .              EXT BUFFER POINTER              02200002
         AIF   ('&S' NE 'AOS12').SKP2                                   02300002
.SK0B    ANOP                                                           02400002
         DC    V(IFDOLT00) .            INITIALIZATION MODULE  X02008   02500002
LGWRTCT  DC    10F'00' .                LAST SCT WORDS         X02008   02600002
         AGO   .SK1                                                     02700002
.SKP1    ANOP                                                           02800002
CHASCT   &V    23F&Z .                  SECTION CONTROL TABLE           02900002
.SKP2    ANOP                                                           03000002
         AIF   ('&S' EQ 'MVM22').SK0B                                   03100002
         &V    F&Z .                    POINTER FOR FUTURE EXPANSION    03200002
         AIF   ('&S' NE 'AOS12').SK1                            X01906  03300002
LGWRTCT  &V    10F&Z .                  LAST SCT WORDS         X02008   03400002
.SK1     ANOP                                                   X01906  03500002
INBUFPTR &V    F&Z .                    ADDRESS OF ITEM IN BUFFER       03600002
INBUFR   &V    72&X&Z .                 INPUT BUFFER                    03700002
PRTBUFR  &V    124&X&Z .                PRINTING BUFFER                 03800002
SECPTR   &V    F&Z .                    ACTIVE SECTION ENTRY POINT      03900002
UTENT    &V    F&Z .                    FIRST UTS INSTRUCTION           04000002
         AIF   ('&V' EQ 'DS').SKP6                                      04100002
DATPTR   DC    V(IFDOLT52) .            PTR TO DP ROOT MODULE           04200002
DATIND   DC    X'A404' .                OLTEP DATA INDICATOR            04300002
         AGO   .SKP7                                                    04400002
.SKP6    ANOP                                                           04500002
DATPTR   DS    F .                      PTR TO DP ROOT MODULE           04600002
DATIND   DS    2C .                     OLTEP DATA INDICATOR            04700002
.SKP7    ANOP                                                           04800002
PGMTAB   &V    8&X&Z .                  ACTIVE PROGRAM ID               04900002
SECLST   &V    138&X&Z .                SECTION LIST                    05000002
APPTRS   DS    0CL12 .                  APPENDAGE POINTERS       Y02008 05100002
PCIEXIT  &V    F&Z .                    PTR TO PCI EXIT          Y02008 05200002
NORMEXIT &V    F&Z .                    PTR TO NORMAL EXIT RTN   Y02008 05300002
ABNMEXIT &V    F&Z .                    PTR TO ABNORMAL EXIT RTN Y02008 05400002
DIEPTR   &V    F&Z .                    PTR TO DIS INT EXIT      Y02008 05500002
IOSCB    DS    0CL136 .                 IOS CONTROL BLOCK        Y02008 05600002
MODIOSB  DS    0CL108 .                 MODEL OF IOSB            Y02008 05700002
         &V    108&X&Z .                                         Y02008 05800002
MODUSECB DS    0CL24 .                  MODEL OF USE CONTROL BLK Y02008 05900002
         &V    24&X&Z .                                          Y02008 06000002
OECBWRD1 DS    0F .                     OECB WORD 1              Y02008 06100002
OECBSNSC &V    &X&Z .                   OECB SENSE COUNT         Y02008 06200002
OECBINCT &V    &X&Z .                   OECB INTERRUPT COUNT     Y02008 06300002
OECBX    &V    2&X&Z .                                           Y02008 06400002
EFCTRCB  DS    0CL20 .                  IO EFFECTOR CONTROL BLK  Y02008 06500002
CCWPTR   &V    F&Z .                    CCW PTR                  Y02008 06600002
DVTPTR   &V    F&Z .                    DEVICE TABLE PTR         Y02008 06700002
FLGA     &V    &X&Z .                   FLAG BYTE A              Y02008 06800002
BYPASPFX EQU   X'80' .                  BYPASS FUNCTION          Y02008 06900002
CEDEPOST EQU   X'40' .                  CE-DE SEPARATION         Y02008 07000002
GDP      EQU   X'20' .                  GUARANTEED DEVICE PATH   Y02008 07100002
SPEXPOS  EQU   X'10' .                  SPECIFIC EXPOSURE        Y02008 07200002
FLGB     &V    &X&Z .                   FLAG BYTE B              Y02008 07300002
INTERNAL EQU   X'80' .                  INTERNAL CALL FOR IO     Y02008 07400002
ATTNIN   EQU   X'40' .                  ATTENTION FUNCTION       Y02008 07500002
VIRTCCWS EQU   X'20' .                  VIRTUAL CCW CHAIN        Y02008 07600002
OLDTECBX EQU   X'10' .                  OLD TECB IS IN USE       Y02008 07700002
FILEMSK  &V    &X&Z .                   FILE M ASK               Y02008 07800002
SNSCNT   &V    &X&Z .                   SENSE COUNT              Y02008 07900002
TECBPTRX &V    F&Z .                    TECB POINTER             Y02008 08000002
SEEKPTR  &V    F&Z .                    PTR TO OLD OLT SEEK ADDR Y02008 08100002
         AIF   ('&V' EQ 'DS').SKP7A                                     08200002
IORTNADR DC    V(IOEFFCTR) .            PTR TO IO EFFECTOR       Y02008 08300002
         AGO   .SKP7B                                                   08400002
.SKP7A   ANOP                                                           08500002
IORTNADR &V    F&Z .                    PTR TO IO EFFECTOR       Y02008 08600002
.SKP7B   ANOP                                                           08700002
IODEVTAB DS    0CL36 .                  IO DEVICE TABLE          Y02008 08800002
IOENTRY1 DS    0CL12 .                  FIRST IO ENTRY           Y02008 08900002
IODEV1   &V    F&Z .                    PTR TO 1ST DEVICE        Y02008 09000002
IOSBPTR1 &V    F&Z .                    PTR TO IOSB FOR DEVICE 1 Y02008 09100002
IOECB1   &V    F&Z .                    ECB FOR DEVICE 1         Y02008 09200002
IOENTRY2 DS    0CL12 .                  SECOND IO ENTRY          Y02008 09300002
IODEV2   &V    F&Z .                    PTR TO 2ND DEVICE        Y02008 09400002
IOSBPTR2 &V    F&Z .                    PTR TO IOSB FOR DEVICE 2 Y02008 09500002
IOECB2   &V    F&Z .                    ECB FOR DEVICE 2         Y02008 09600002
IOENTRY3 DS    0CL12 .                  THIRD IO ENTRY           Y02008 09700002
IODEV3   &V    F&Z .                    PTR TO 3RD DEVICE        Y02008 09800002
IOSBPTR3 &V    F&Z .                    PTR TO IOSB FOR DEVICE 3 Y02008 09900002
IOECB3   &V    F&Z .                    ECB FOR DEVICE 3         Y02008 10000002
SELAFFN  &V    2&X&Z .                  SELECTED AFFN            Y02008 10100002
CHARAFFN &V    2&X&Z .                  CHAR REP OF SEL AFFN     Y02008 10130002
XXXXXXXX &V    36F&Z .                  NOT USED AT PRESENT      Y02008 10160002
         AIF   ('&V' EQ 'DS').SKP3                                      10200002
DEVTBPTR DC    A(DEVTAB) .              POINTER TO DEVICE TABLES 21050  10300002
TABLNGTH DC    AL2(56) .                LENGTH OF EACH DEVTABLE  21050  10400002
CESWT9   DC    X'00' .                  OLTEP SWITCHES                  10500002
CESWT10  DC    X'00' .                  OLTEP SWITCHES           Y02008 10600002
         AIF   ('&S' NE 'AOS12').SK2                            X01906  10700002
.SK1A    ANOP                                                           10800002
OPEN2    DC    F'0' .                   WAS PTR TO IOS MOD              10900002
OPEN3    DC    F'0' .                   WAS PTR TO APP. VECTOR TABLE    11000002
         AGO   .SK2A                                            X01906  11100002
.SK2     ANOP                                                   X01906  11200002
         AIF   ('&S' EQ 'MVM22').SK1A                                   11300002
OPEN2    DC    F'0' .                   WAS PTR TO IOS MOD              11400002
OPEN3    DC    F'0' .                   WAS PTR TO APP. VECTOR TABLE    11500002
.SK2A    ANOP                                                   X01906  11600002
PSCT     DC    A(CHASCT) .              ADDRESS OF CHASCT               11700002
DEVDEPAD &V    A(CHASCT+12) .           ACTIVE CHASCT ENTRY POINTER     11800002
TABAD    DC    A(OLTTAB) .              UNIT TEST LINK TABLE POINTER    11900002
#TABLE   EQU   TABAD .                  LABEL IN OLTEP MACROS           12000002
UTCOMAD  DC    A(UTCOM) .               UNIT TEST PASSON AREA POINTER   12100002
MCT      &V    C'1MCT' .                MODULE CONTROL TABLE            12200002
         AIF   ('&S' EQ 'MVM22').SK2A1                                  12300002
         DC    F'00' .                  PTR TO NEXT MCT                 12400002
         AGO   .SK2A2                                                   12500002
.SK2A1   ANOP                                                           12600002
         DC    A(NEXTMCT) .             PTR TO NEXT MCT          X03008 12700002
.SK2A2   ANOP                                                           12800002
         DC    X'8000' .                ROOT MODULE INDICATOR           12900002
         DC    C'00' .                  OLTEP ROOT                      13000002
         DC    XL2'00' .                MODULE LENGTH                   13100002
         AIF   ('&S' EQ 'AOS12').SK3A                                   13200002
         AIF   ('&S' EQ 'MVM22').SK3A                                   13300002
         DC    X'8000' .                ROOT MODULE INDICATOR           13400002
         DC    C'01' .                  TRANSIENT MANAGER ID            13500002
         DC    XL2'00' .                MODULE LENGTH                   13600002
.SK3A    ANOP                                                           13700002
         AIF   ('&S' NE 'MVM22').SK3C                                   13800002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 13900002
         DC    C'05' .                  OLD EXIO ID              X03008 14000002
         DC    XL2'00' .                MODULE LENGTH            X03008 14100002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 14200002
         DC    C'06' .                  OLD WAITIO ID            X03008 14300002
         DC    XL2'00' .                MODULE LENGTH            X03008 14400002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 14500002
         DC    C'08' .                  OLD DPRINT ID            X03008 14600002
         DC    XL2'00' .                MODULE LENGTH            X03008 14700002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 14800002
         DC    C'09' .                  COMPARE ID               X03008 14900002
         DC    XL2'00' .                MODULE LENGTH            X03008 15000002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 15100002
         DC    C'10' .                  OLD CONVERT ID           X03008 15200002
         DC    XL2'00' .                MODULE LENGTH            X03008 15300002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 15400002
         DC    C'11' .                  RANDOM DATA ID           X03008 15500002
         DC    XL2'00' .                MODULE LENGTH            X03008 15600002
         AGO   .SK3E                                                    15700002
.SK3C    ANOP                                                           15800002
         DC    X'0100' .                OLD MODULE INDICATOR            15900002
         DC    C'05' .                  OLD EXIO ID                     16000002
         DC    XL2'00' .                MODULE LENGTH                   16100002
         DC    X'0100' .                OLD MODULE INDICATOR            16200002
         DC    C'06' .                  OLD WAITIO ID                   16300002
         DC    XL2'00' .                MODULE LENGTH                   16400002
         DC    X'0100' .                OLD MODULE INDICATOR            16500002
         DC    C'08' .                  OLD DPRINT ID                   16600002
         DC    XL2'00' .                MODULE LENGTH                   16700002
         DC    X'0100' .                OLD MODULE INDICATOR            16800002
         DC    C'09' .                  OLD COMPARE ID                  16900002
         DC    XL2'00' .                MODULE LENGTH                   17000002
         DC    X'0100' .                OLD MODULE INDICATOR            17100002
         DC    C'10' .                  OLD CONVERT ID                  17200002
         DC    XL2'00' .                MODULE LENGTH                   17300002
         DC    X'0100' .                OLD MODULE INDICATOR            17400002
         DC    C'11' .                  OLD RDATA ID                    17500002
         DC    XL2'00' .                MODULE LENGTH                   17600002
         AIF   ('&S' NE 'AOS12').SK3G                                   17700002
.SK3E    ANOP                                                           17800002
         DC    X'8000' .                ROOT MODULE INDICATOR  X02008   17900002
         DC    C'12' .                  UTS LOADER ID          X02008   18000002
         DC    XL2'00' .                MODULE LENGTH          X02008   18100002
         AGO   .SK3H                                                    18200002
.SK3G    ANOP                                                           18300002
         AIF   ('&S' EQ 'MVM22').SK3E                                   18400002
.SK3H    ANOP                                                           18500002
         AIF   ('&S' NE 'MVM22').SK3J                                   18600002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 18700002
         DC    C'13' .                  OLD CECOM ID             X03008 18800002
         DC    XL2'00' .                MODULE LENGTH            X03008 18900002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 19000002
         DC    C'39' .                  NEW DPRINT ID            X03008 19100002
         DC    XL2'00' .                MODULE LENGTH            X03008 19200002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 19300002
         DC    C'16' .                  GETCONFG ID              X03008 19400002
         DC    XL2'00' .                MODULE LENGTH            X03008 19500002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 19600002
         DC    C'21' .                  GRAB ID                  X03008 19700002
         DC    XL2'00' .                MODULE LENGTH            X03008 19800002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 19900002
         DC    C'22' .                  ALLOCATE ID              X03008 20000002
         DC    XL2'00' .                MODULE LENGTH            X03008 20100002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 20200002
         DC    C'24' .                  READD ID                 X03008 20300002
         DC    XL2'00' .                MODULE LENGTH            X03008 20400002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 20500002
         DC    C'26' .                  LOGSCAN ID               X03008 20600002
         DC    XL2'00' .                MODULE LENGTH            X03008 20700002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 20800002
         DC    C'28' .                  PLINK ID                 X03008 20900002
         DC    XL2'00' .                MODULE LENGTH            X03008 21000002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 21100002
         DC    C'35' .                  NEW EXIO ID              X03008 21200002
         DC    XL2'00' .                MODULE LENGTH            X03008 21300002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 21400002
         DC    C'36' .                  NEW WAITIO ID            X03008 21500002
         DC    XL2'00' .                MODULE LENGTH            X03008 21600002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 21700002
         DC    C'37' .                  NEW CECOM ID             X03008 21800002
         DC    XL2'00' .                MODULE LENGTH            X03008 21900002
         AGO   .SK3K                                                    22000002
.SK3J    ANOP                                                           22100002
         DC    X'0100' .                OLD MODULE INDICATOR            22200002
         DC    C'13' .                  OLD CECOM ID                    22300002
         DC    XL2'00' .                MODULE LENGTH                   22400002
         DC    X'8000' .                ROOT MODULE INDICATOR           22500002
         DC    C'39' .                  DPRINT MODULE ID                22600002
         DC    XL2'00' .                MODULE LENGTH                   22700002
.SK3K    ANOP                                                           22800002
         AIF   ('&S' NE 'MVM22').SK3M                                   22900002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 23000002
         DC    C'41' .                  NEW CONVERT ID           X03008 23100002
         DC    XL2'00' .                MODULE LENGTH            X03008 23200002
         DC    V(IFDOLT00) .            OLTEP ADDRESS            X03008 23300002
         DC    V(IFDOLT05) .            OLD EXIO ADDRESS         X03008 23400002
         DC    V(IFDOLT06) .            OLD WAITIO ADDRESS       X03008 23500002
         DC    V(IFDOLT08) .            OLD DPRINT ADDRESS       X03008 23600002
         DC    V(IFDOLT09) .            COMPARE ADDRESS          X03008 23700002
         DC    V(IFDOLT10) .            OLD CONVERT ADDRESS      X03008 23800002
         DC    V(IFDOLT11) .            RANDOM DATA ADDRESS      X03008 23900002
         DC    V(IFDOLT12) .            LOADER ADDRESS           X03008 24000002
         DC    V(IFDOLT13) .            OLD CECOM ADDRESS        X03008 24100002
PARPRADR DC    V(IFDOLT39) .            NEW DPRINT ADDRESS       X03008 24200002
         DC    V(IFDOLT16) .            GETCONFG ADDRESS         X03008 24300002
         DC    V(IFDOLT21) .            GRAB ADDRESS             X03008 24400002
         DC    V(IFDOLT22) .            ALLOCATE ADDRESS         X03008 24500002
         DC    V(IFDOLT24) .            READD ADDRESS            X03008 24600002
         DC    V(IFDOLT26) .            LOGSCAN ADDRESS          X03008 24700002
         DC    V(IFDOLT28) .            PLINK ADDRESS            X03008 24800002
         DC    V(IFDOLT35) .            NEW EXIO ADDRESS         X03008 24900002
         DC    V(IFDOLT36) .            NEW WAITIO ADDRESS       X03008 25000002
         DC    V(IFDOLT37) .            NEW CECOM ADDRESS        X03008 25100002
         DC    V(IFDOLT41) .            NEW CONVERT ADDRESS      X03008 25200002
MCT1ADR  DC    A(MCT) .                 MCT ADDRESS              X03008 25300002
         AGO   .SKP4                                                    25400002
.SK3M    ANOP                                                           25500002
         DC    10XL6'00' .              REST OF MCT                     25600002
         DC    V(IFDOLT00) .            OLTEP ADDRESS                   25700002
         AIF   ('&S' NE 'AOS12').SK4                            X01906  25800002
         DC    6F'00' .                 MODULE ADDRESSES       X02008   25900002
         DC    V(IFDOLT12) .            UTS LOADER              X01906  26000002
         DC    F'00' .                  MODULE ADDRESS         X02008   26100002
         AGO   .SK4A                                            X01906  26200002
.SK4     ANOP                                                   X01906  26300002
         DC    8F'00' .                 MODULE ADDRESSES                26400002
.SK4A    ANOP                                                   X01906  26500002
PARPRADR DC    V(IFDOLT39) .            DPRINT MODULE ADDRESS           26600002
         DC    10F'00' .                MODULE ADDRESSES                26700002
MCT1ADR  DC    A(MCT) .                 MCT ADDRESS                     26800002
         AGO   .SKP4                                                    26900002
.SKP3    ANOP                                                           27000002
DEVTBPTR DS    F .                      POINTER TO DEVICE TABLES 21050  27100002
TABLNGTH DS    2C .                     LENGTH OF EACH DEVTABLE  21050  27200002
CESWT9   DS    C .                      OLTEP SWITCHES                  27300002
CESWT10  DS    C .                      OLTEP SWITCHES           Y02008 27400002
OPEN2    DS    F .                      WAS PTR TO IOS MOD       Y02008 27500002
OPEN3    DS    F .                      WAS PTR TO APP. VECTOR TABLE    27600002
PSCT     DS    F .                      ADDRESS OF CHASCT               27700002
DEVDEPAD DS    F .                      ACTIVE CHASCT ENTRY POINTER     27800002
TABAD    DS    F .                      UNIT TEST LINK TABLE POINTER    27900002
#TABLE   EQU   TABAD .                  LABEL IN OLTEP MACROS           28000002
UTCOMAD  DS    F .                      UNIT TEST PASSON AREA POINTER   28100002
MCT      DS    208C .                   MODULE CONTROL TABLE            28200002
PARPRADR EQU   MCT+164 .                DPRINT MODULE ADDRESS           28300002
MCT1ADR  DS    F .                      MCT ADDRESS                     28400002
.SKP4    ANOP                                                           28500002
WKSVC    &V    4F&Z .                   SVC WORK AREA                   28600002
ROPT     EQU   MCT1ADR+8 .              SVC PARAMETER LIST              28700002
OLTTAB   &V    10F&Z .                  LINK TABLE                      28800002
TAB28    EQU   OLTTAB+28 .              NEW MACRO ENTRY POINT           28900002
LOGADR   &V    F&Z .                    POINTER TO LOGSCAN MODULE       29000002
SCHEDSA  &V    F&Z .                    SAVE AREA IN SCHEDULER          29100002
SATAB    &V    3F&Z .                   SYSTEM ASSIGNMENT TABLE         29200002
PLKMOR   &V    4F&Z .                   PLINK AND MORECORE MANAGEMENT   29300002
REGX     &V    F&Z .                    ACTIVE UCB ADDRESS POINTER      29400002
TUCBAD1  &V    F&Z .                    FIRST ACTIVE UCB ADDRESS        29500002
TUCBAD2  &V    F&Z .                    SECOND ACTIVE UCB ADDRESS       29600002
TSTDEBAD &V    F&Z .                    TEST DEB ADDRESS                29700002
ECB3     &V    F&Z .                    ECB FOR DYN COMMUNICATIONS      29800002
UTCOM    &V    16F&Z .                  UNIT TEST PASSON AREA           29900002
EXTBUF   &V    14F&Z .                  EXT BUFFER                      30000002
DPRDEBAD &V    F&Z .                    DPRINT MODULE DEB ADDRESS       30100002
PRIDVPTR &V    F&Z .                    ACTIVE PRIME DEVTAB             30200002
SECDVPTR &V    F&Z .                    LAST GRAB DEVICE                30300002
         AIF   ('&V' EQ 'DS').SKP9                                      30400002
REDEFINE DC    V(CECINP03) .            CE COMM ENTRY IN IFDOLT30Y02906 30500002
COMMINT  DC    V(FISTERR) .             DYN COMM ENTRY - IFDOLT30Y02906 30600002
NEXTREC  DC    V(CECINP02) .            NEXT INPUT REC-IFDOLT30  Y02906 30700002
         AGO   .SK10                                                    30800002
.SKP9    ANOP                                                           30900002
REDEFINE &V    F&Z .                    CE COMM ENTRY IN IFDOLT30Y02906 31000002
COMMINT  &V    F&Z .                    DYN COMM ENTRY - IFDOLT30Y02906 31100002
NEXTREC  &V    F&Z .                    NEXT INPUT REC-IFDOLT30  Y02906 31200002
.SK10    ANOP                                                           31300002
ADSVAREA &V    F&Z .                 IFDOLT30 1ST SAVE ADDRESS          31400002
ECB37    &V    F&Z .                    CECOM ECB                       31500002
REPLY37  &V    18F&Z .                  CECOM INPUT BUFFER              31600002
MSGAD37  &V    F&Z .                    OLTS BUFFER ADDRESS             31700002
TPSAVE   &V    4&X&Z .                  TEST ID                         31800002
TLCOUNT  &V    H&Z .                    TEST LOOP COUNT                 31900002
HRTSEL   &V    2&X&Z .                  HIGHEST ROUTINE SELECTED        32000002
SAVECNT &V     H&Z .                    COUNTER FOR DEVICE DECODERS     32100002
         &V    H&Z .                    TEST LOOP RUN           X01906  32200002
SAVENT   &V    F&Z .                    LAST INCLUSIVE SERIES ENTRY     32300002
CESWT    &V    9&X&Z .                  OLTEP SWITCHES GROUPED          32400002
CESWT1   EQU   CESWT+1 .                OLTEP SWITCHES                  32500002
CESWT2   EQU   CESWT+2 .                OLTEP SWITCHES                  32600002
CESWT3   EQU   CESWT+3 .                OLTEP SWITCHES                  32700002
CESWT4   EQU   CESWT+4 .                OLTEP SWITCHES                  32800002
CESWT5   EQU   CESWT+5 .                OLTEP SWITCHES                  32900002
CESWT6   EQU   CESWT+6 .                OLTEP SWITCHES                  33000002
CESWT7   EQU   CESWT+7 .                OLTEP SWITCHES                  33100002
CESWT8   EQU   CESWT+8 .                OLTEP SWITCHES                  33200002
DYNCOM   &V    &X&Z .                   RESPONSE BUFFER DYN MSG         33300002
SECTUSE  &V    &X&Z .                   NUMBER OF SECTIONS RUN          33400002
UNICTR   &V    &X&Z .                   NUMBER OF UNITS TO RUN          33500002
UNITUSE  &V    &X&Z .                   NUMBER OF UNITS RUN             33600002
DPLEVEL  &V    &X&Z .                   MESSAGE PRINTING LEVEL          33700002
CNT37    &V    &X&Z .                   LENGTH OF CECOM REPLY           33800002
READDSV  &V    6&X&Z .                  READD SAVE AREA                 33900002
         &V    3&X&Z .                  NA                      X01906  34000002
         AIF   ('&V' EQ 'DS').SKP5                                      34100002
READDMOD &V    V(IFDOLT51) .            READD MODULE ADDRESS            34200002
RDCBPTR  &V    V(READDCB) .             READD DCB IN IFDOLT51    Y02906 34300002
MSGMOD   &V    V(IFDMSG00) .            RESIDENT MESSAGE MODULE         34400002
ENDJOB   &V    F&Z .                    INITIALIZATION SAVE AREA        34500002
MHRPTR   DC    V(IFDOLT55) .            POINTER TO MESSAGE HANDLER      34600002
RTALKBUF DC    V(DEDBUF) .              PTR TO DED BUFR-IFDOLT55 Y02906 34700002
RINBUF   DC    V(REMINBUF) .            PTR REMOTE INBUFRIFDOLT55Y02906 34800002
REIDCBPT DC    V(REIDCB) .              PTR TO REI DCB-IFDOLT55  Y02906 34900002
REIOBPTR DC    V(REIOB) .               PTR TO REI IOB-IFDOLT55  Y02906 35000002
         AGO   .SKP8                                                    35100002
.SKP5    ANOP                                                           35200002
READDMOD &V    F .                      READD MODULE ADDRESS            35300002
RDCBPTR  &V    F .                      READD DCB IN IFDOLT51    Y02906 35400002
MSGMOD   &V    F .                      RESIDENT MESSAGE MODULE         35500002
ENDJOB   &V    F&Z .                    INITIALIZATION SAVE AREA        35600002
MHRPTR   &V    F .                                                      35700002
RTALKBUF &V    F .                      PTR TO DED BUFR-IFDOLT55 Y02906 35800002
RINBUF   &V    F .                      PTR REMOTE INBUFRIFDOLT55Y02906 35900002
REIDCBPT &V    F .                      PTR TO REI DCB-IFDOLT55  Y02906 36000002
REIOBPTR &V    F .                      PTR TO REI IOB-IFDOLT55  Y02906 36100002
.SKP8    ANOP                                                           36200002
REIECB   &V    F&Z .                    ECB FOR REMOTE COMMUNICATIONS   36300002
TALKECB  &V    F&Z .                    ECB FOR ONSITE COMMUNICATIONS   36400002
RESPBUF  &V    F&Z .                    POINTER TO REPLY BUFFER         36500002
REIUCB   &V    F&Z .                    UCB ADDRESS FOR 2955            36600002
CESWTR   &V    &X&Z .                   RETAIN 370 SWITCHES             36700002
CESWTR1  &V    &X&Z .                                                   36800002
CESWTR2  &V    &X&Z .                                                   36900002
CESWTR3  &V    &X&Z .                                                   37000002
ZUESUCB  &V    H&Z . ACTIVE SPECIFIC EXPOSURE  BASE  UCB ADDRESS 2 BYTE 37100002
         &V    H&Z .                    NA                      X01906  37200002
EXPAND1  &V    F&Z .                    EXPANSION BYTES          21050  37300002
         AIF   ('&V' EQ 'DS').SK21                                      37400002
SYMPTR   &V    V(SYMLIB) .              SYMBOLIC LIB DCB-IFDOLT30Y02906 37500002
         AGO   .SK22                                                    37600002
.SK21    ANOP                                                           37700002
SYMPTR   &V    F .                      SYMBOLIC LIB DCB-IFDOLT30Y02906 37800002
.SK22    ANOP                                                           37900002
PGFXLIST &V   4F&Z .               PAGE FIX LIST                 X01019 38000002
         AIF   ('&S' NE 'AOS12').SK5                            X01906  38100002
.SK5A    ANOP                                                           38200002
PARTITEM &V    3F&Z .                   PARTITION ITEMS         X01906  38300002
PGFXOLT  &V    2F&Z .                   OLT PAGE FIX LIST        X03008 38400002
CORERSLT &V    2F&Z .                   GETMAIN CORE RESULTS     X03008 38500002
VRSIZE   &V    F&Z .                    REAL CORE AREA SIZE      X03008 38600002
         &V    2F&Z .                   NA                       X03008 38700002
         AGO   .SK5B                                                    38800002
.SK5     ANOP                                                   X01906  38900002
         AIF   ('&S' EQ 'MVM22').SK5A                                   39000002
.SK5B    ANOP                                                           39100002
         AIF   ('&S' NE 'MVM22').SK5D                                   39200002
         AIF   ('&V' EQ 'DS').SK5C                                      39300002
NEXTMCT  DC    A(MCT) .                 PTR TO PREVIOUS MCT      X03008 39400002
         DC    A(THIRDMCT) .            PTR TO NEXT MCT                 39500002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 39600002
         DC    C'42' .                  MORECORE ID              X03008 39700002
         DC    XL2'00' .                MODULE LENGTH            X03008 39800002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 39900002
         DC    C'43' .                  FREECORE ID              X03008 40000002
         DC    XL2'00' .                MODULE LENGTH            X03008 40100002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 40200002
         DC    C'44' .                  DIO ID                   X03008 40300002
         DC    XL2'00' .                MODULE LENGTH            X03008 40400002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 40500002
         DC    C'46' .                  EXTRACTOR ID             X03008 40600002
         DC    XL2'00' .                MODULE LENGTH            X03008 40700002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 40800002
         DC    C'AA' .                  DDATE ID                 X03008 40900002
         DC    XL2'00' .                MODULE LENGTH            X03008 41000002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 41100002
         DC    C'AB' .                  DTIME ID                 X03008 41200002
         DC    XL2'00' .                MODULE LENGTH            X03008 41300002
         DC    X'8000' .                ROOT MODULE INDICATOR    X03008 41400002
         DC    C'AJ' .                  CUTEST ID                X03008 41500002
         DC    XL2'00' .                MODULE LENGTH            X03008 41600002
         DC    X'0000' .                TRANSIENT MODULE         X03008 41700002
         DC    X'0000' .                MODULE ID                YM4982 41800002
         DC    XL2'00' .                MODULE LENGTH            X03008 41900002
         DC    X'0000' .                TRANSIENT MODULE         X03008 42000002
         DC    X'0000' .                MODULE ID                YM4982 42100002
         DC    XL2'00' .                MODULE LENGTH            X03008 42200002
         DC    X'0000' .                TRANSIENT MODULE         X03008 42300002
         DC    X'0000' .                MODULE ID                YM4982 42400002
         DC    XL2'00' .                MODULE LENGTH            X03008 42500002
         DC    X'0000' .                TRANSIENT MODULE         X03008 42600002
         DC    X'0000' .                MODULE ID                YM4982 42700002
         DC    XL2'00' .                MODULE LENGTH            X03008 42800002
         DC    X'0000' .                TRANSIENT MODULE         X03008 42900002
         DC    X'0000' .                MODULE ID                YM4982 43000002
         DC    XL2'00' .                MODULE LENGTH            X03008 43100002
         DC    X'0000' .                TRANSIENT MODULE         X03008 43200002
         DC    X'0000' .                MODULE ID                YM4982 43300002
         DC    XL2'00' .                MODULE LENGTH            X03008 43400002
         DC    X'0000' .                TRANSIENT MODULE         X03008 43500002
         DC    X'0000' .                MODULE ID                YM4982 43600002
         DC    XL2'00' .                MODULE LENGTH            X03008 43700002
         DC    X'0000' .                TRANSIENT MODULE         X03008 43800002
         DC    X'0000' .                MODULE ID                YM4982 43900002
         DC    XL2'00' .                MODULE LENGTH            X03008 44000002
         DC    X'0000' .                TRANSIENT MODULE         X03008 44100002
         DC    X'0000' .                MODULE ID                YM4982 44200002
         DC    XL2'00' .                MODULE LENGTH            X03008 44300002
         DC    X'0000' .                TRANSIENT MODULE         X03008 44400002
         DC    X'0000' .                MODULE ID                YM4982 44500002
         DC    XL2'00' .                MODULE LENGTH            X03008 44600002
         DC    X'0000' .                TRANSIENT MODULE         X03008 44700002
         DC    X'0000' .                MODULE ID                YM4982 44800002
         DC    XL2'00' .                MODULE LENGTH            X03008 44900002
         DC    X'0000' .                TRANSIENT MODULE         X03008 45000002
         DC    X'0000' .                MODULE ID                YM4982 45100002
         DC    XL2'00' .                MODULE LENGTH            X03008 45200002
         DC    X'0000' .                TRANSIENT MODULE         X03008 45300002
         DC    X'0000' .                MODULE ID                YM4982 45400002
         DC    XL2'00' .                MODULE LENGTH            X03008 45500002
         DC    V(IFDOLT42) .            MORECORE ADDRESS         X03008 45600002
         DC    V(IFDOLT43) .            FREECORE ADDRESSC        X03008 45700002
         DC    V(IFDOLT44) .            DIO ADDRESS              X03008 45800002
         DC    V(IFDOLT46) .            EXTRACTOR ADDRESS        X03008 45900002
         DC    V(IFDOLTAA) .            DDATE ADDRESS            X03008 46000002
         DC    V(IFDOLTAB) .            DTIME ADDRESS            X03008 46100002
         DC    V(IFDOLTAJ) .            CUTEST ADDRESS           X03008 46200002
         DC    A(0) .                   MODULE ADDRESS           YM4982 46300002
         DC    A(0) .                   MODULE ADDRESS           YM4982 46400002
         DC    A(0) .                   MODULE ADDRESS           YM4982 46500002
         DC    A(0) .                   MODULE ADDRESS           YM4982 46600002
         DC    A(0) .                   MODULE ADDRESS           YM4982 46700002
         DC    A(0) .                   MODULE ADDRESS           YM4982 46800002
         DC    A(0) .                   MODULE ADDRESS           YM4982 46900002
         DC    A(0) .                   MODULE ADDRESS           YM4982 47000002
         DC    A(0) .                   MODULE ADDRESS           YM4982 47100002
         DC    A(0) .                   MODULE ADDRESS           YM4982 47200002
         DC    A(0) .                   MODULE ADDRESS           YM4982 47300002
         DC    A(0) .                   MODULE ADDRESS           YM4982 47400002
         DC    A(0) .                   MODULE ADDRESS           YM4982 47500002
THIRDMCT DC    A(NEXTMCT) .             PTR TO PREVIOUS MCT             47600002
         DC    F'0' .                   PTR TO NEXT MCT          X03008 47700002
         DC    X'0000' .                TRANSIENT MODULE         X03008 47800002
         DC    X'0000' .                MODULE ID                YM4982 47900002
         DC    XL2'00' .                MODULE LENGTH            X03008 48000002
         DC    X'0000' .                TRANSIENT MODULE         X03008 48100002
         DC    X'0000' .                MODULE ID                YM4982 48200002
         DC    XL2'00' .                MODULE LENGTH            X03008 48300002
         DC    X'0000' .                TRANSIENT MODULE         X03008 48400002
         DC    X'0000' .                MODULE ID                YM4982 48500002
         DC    XL2'00' .                MODULE LENGTH            X03008 48600002
         DC    X'0000' .                TRANSIENT MODULE         X03008 48700002
         DC    X'0000' .                MODULE ID                YM4982 48800002
         DC    XL2'00' .                MODULE LENGTH            X03008 48900002
         DC    X'0000' .                TRANSIENT MODULE         X03008 49000002
         DC    X'0000' .                MODULE ID                YM4982 49100002
         DC    XL2'00' .                MODULE LENGTH            X03008 49200002
         DC    X'0000' .                TRANSIENT MODULE         X03008 49300002
         DC    X'0000' .                MODULE ID                YM4982 49400002
         DC    XL2'00' .                MODULE LENGTH            X03008 49500002
         DC    X'0000' .                TRANSIENT MODULE         X03008 49600002
         DC    X'0000' .                MODULE ID                YM4982 49700002
         DC    XL2'00' .                MODULE LENGTH            X03008 49800002
         DC    13XL6'00' .              REST OF MCT              X03008 49900002
         DC    A(0) .                   MODULE ADDRESS           YM4982 50000002
         DC    A(0) .                   MODULE ADDRESS           YM4982 50100002
         DC    A(0) .                   MODULE ADDRESS           YM4982 50200002
         DC    A(0) .                   MODULE ADDRESS           YM4982 50300002
         DC    A(0) .                   MODULE ADDRESS           YM4982 50400002
         DC    A(0) .                   MODULE ADDRESS           YM4982 50500002
         DC    A(0) .                   MODULE ADDRESS           YM4982 50600002
         DC    13F'0' .                 MODULE ADDRESSES         X03008 50700002
         AGO   .SK5D                                                    50800002
.SK5C    ANOP                                                           50900002
NEXTMCT  &V    208C .                   NEXT MCT                 X03008 51000002
THIRDMCT &V    208C .                   THIRD MCT                       51100002
.SK5D    ANOP                                                           51200002
DEVTAB   &V    224F&Z .                 START OF DEVICE TABLES   21050  51300002
ENDCOM   EQU   * .                      END OF COMMON AREA              51400002
         MEND                                                           51500002
                                        */                              51600002
*%LABEL1:  ;                                                            51700002
*/********************************************************************/ 51800002
*/*      COMMON AREA MAP                                             */ 51900002
*/********************************************************************/ 52000002
* DECLARE                                                               52200002
*  1 COMMAP BASED(COMMAPT) BDY(WORD),                                   52300002
*    3 CHASCT CHAR(92),                 /* SECTION CONTROL TABLE     */ 52400002
*    3 DOLT00PT PTR(31),                /* INITIALIZATION MODULE     */ 52500002
*    3 LGWRTCT CHAR(40),                /* LAST SCT WORDS            */ 52600002
*    3 INBUFPTR PTR(31),                /* ADDR OF ITEM IN BUFFER    */ 52700002
*    3 INBUFR CHAR(72),                 /* INPUT BUFFER              */ 52800002
*    3 PRTBUFR CHAR(124),               /* PRINTING BUFFER           */ 52900002
*    3 SECPTR PTR(31),                  /* ACTIVE SECTION ENTRY POINT*/ 53000002
*    3 UTENT PTR(31),                   /* 1ST UT INSTRUCTION        */ 53100002
*    3 DATPTR PTR(31),                  /* PTR TO DP ROOT MODULE     */ 53200002
*    3 DATIND CHAR(2),                  /* OLTEP DATA INDICATOR      */ 53300002
*    3 PGMTAB CHAR(8),                  /* ACTIVE PGM ID             */ 53400002
*    3 SECLST CHAR(138),                /* SECTION LIST              */ 53500002
*    3 PCIEXIT PTR(31),                 /* PTR TO PCI EXIT           */ 53600002
*    3 NORMEXIT PTR(31),                /* PTR TO NORMAL EXIT        */ 53700002
*    3 ABNMEXIT PTR(31),                /* PTR TO ABNORMAL EXIT      */ 53800002
*    3 DIEPTR PTR(31),                  /* PTR TO DISABLED INT HNDLR */ 53900002
*    3 IOSCB CHAR(136),                 /* CTRL BLK SET FOR IOS      */ 54000002
*      5 MODIOSB CHAR(108),             /* MODEL IOSB                */ 54100002
*      5 MODUSECB CHAR(24),             /* MODEL USE CONTROL BLOCK   */ 54200002
*      5 OECBWRD1 CHAR(4),              /* 1ST WORD OF OECB          */ 54300002
*        7 OECBSNSC CHAR(1),            /* SENSE COUNT FOR THIS REQ  */ 54400002
*        7 OECBINCT CHAR(1),            /* INTERRUPT COUNT FLD       */ 54500002
*        7 OECBX CHAR(2),               /* NOT USED                  */ 54600002
*    3 EFCTRCB CHAR(20) BDY(WORD),      /* IOEFFECTOR CNTRL BLOCK    */ 54700002
*      5 CCWPTR PTR(31),                /* PTR TO CCW LIST           */ 54800002
*      5 DVTPTR PTR(31),                /* PTR TO DEVTBLE ENTRY      */ 54900002
*      5 FLGA CHAR(1),                  /* FLAGS:                    */ 55000002
*        7 BYPASPFX BIT(1),             /*   BYPASS PREFIX           */ 55100002
*        7 CEDEPOST BIT(1),             /*   CE DE SEPERATION        */ 55200002
*        7 GDP BIT(1),                  /*   GUARANTEED DEV PATH     */ 55300002
*        7 SPEXPOS BIT(1),              /*   SPECIFIC EXPOSURE       */ 55400002
*        7 * BIT(1),                    /*   NOT USED                */ 55500002
*        7 * BIT(1),                    /*   NOT USED                */ 55600002
*        7 * BIT(1),                    /*   NOT USED                */ 55700002
*        7 * BIT(1),                    /*   NOT USED                */ 55800002
*      5 FLGB CHAR(1),                  /* FLAGS:                    */ 55900002
*        7 INTIRNAL BIT(1),             /*   INTERNAL CALL BY DP ETC.*/ 56000002
*        7 ATTNIN BIT(1),               /*   ATTENTION FUNCTION      */ 56100002
*        7 VIRTCCWS BIT(1),             /*   CCWS ARE VIRTUAL        */ 56200002
*        7 OLDTECBX BIT(1),             /*   P3116 TECB              */ 56300002
*        7 * BIT(1),                    /*   NOT USED                */ 56400002
*        7 * BIT(1),                    /*   NOT USED                */ 56500002
*        7 * BIT(1),                    /*   NOT USED                */ 56600002
*        7 * BIT(1),                    /*   NOT USED                */ 56700002
*      5 FILEMSK CHAR(1),               /*   FILEMASK OR MODE SET    */ 56800002
*      5 SNSCNT CHAR(1),                /*   SENSE BYTE COUNT        */ 56900002
*      5 TECBPTRX PTR(31),              /*   PTR TO TECB             */ 57000002
*      5 SEEKPTR PTR(31),               /*   PTR TO SEEK ADDR        */ 57100002
*    3 IOEFTRAD PTR(31),                /*   PTR TO IO EFFECTOR      */ 57200002
*    3 IODEVTAB(3) CHAR(12) BDY(WORD),  /* IO DEVICE TABLES          */ 57300002
*      5 IODEV1 PTR(31),                /*      PTR TO DEV TBLE NTRY */ 57400002
*      5 IOSBPTR1 PTR(31),              /*      PTR TO IOSB          */ 57500002
*      5 IOECB1 CHAR(4),                /*      ECB                  */ 57600002
*        7 CMPLT CHAR(1),               /*                           */ 57700002
*          9 WAITBIT BIT(1),            /* ECB WAITED ON             */ 57800002
*          9 POSTBIT BIT(1),            /* ECB POSTED                */ 57900002
*          9 CMPLCODE BIT(6),           /* SYSTEM COMPLETION CODE    */ 58000002
*        7 * CHAR(1),                   /* NOT USED                  */ 58100002
*        7 * CHAR(2),                   /*                           */ 58200002
*          9 PSUDPOST BIT(1),           /* SET BY NAPA               */ 58300002
*          9 * BIT(3),                  /* NOT USED                  */ 58400002
*          9 WTCMPCD BIT(12),           /* SET BY WAITIO ON TMOUT    */ 58500002
*    3 SELAFFN CHAR(2),                 /* SELECTED AFFN             */ 58600002
*    3 CHARAFFN CHAR(2),                /* CHAR REP OF SEL AFFN      */ 58630002
*    3 XXXXXXXX CHAR(144),              /* NOT USED                  */ 58660002
*    3 DEVTBPTR PTR(31),                /* PTR TO DEVICE TABLES      */ 58700002
*    3 TABLNGTH FIXED(15),              /* LENGTH OF EACH TABLE      */ 58800002
*    3 CESWT9 CHAR(1),                  /* SWITCHES:                 */ 58900002
*      5 CDSEQU BIT(1),                 /*   CDS EQUATE REQ          */ 59000002
*      5 RESTBENT BIT(1),               /*   RESIDENT TBL ENTRY      */ 59100002
*      5 VRCAP BIT(1),                  /*   VIRTUAL OR REAL OLT     */ 59200002
*      5 *  BIT(4),                     /*   NOT USED                */ 59300002
*    3 CESWT10 CHAR(1),                 /* SWITCHES OR FLAGS         */ 59400002
*      5 MPSYS BIT(1),                  /* MP SYSTEM                 */ 59420002
*      5 AFFNSET BIT(1),                /* AFFN SET                  */ 59440002
*      5 VERBCALL BIT(1),               /* VERB SELECTED             */ 59460002
*    3 OPEN2 PTR(31),                   /* NOT USED                  */ 59500002
*    3 OPEN3 PTR(31),                   /* NOT USED                  */ 59600002
*    3 PSCT PTR(31),                    /* PTR TO SCT                */ 59700002
*    3 DEVDEPAD PTR(31),                /* ACTIVE SCT ENTRY PTR      */ 59800002
*    3 TABAD PTR(31),                   /* UNIT TESTING TBLE PTR     */ 59900002
*    3 UTCOMAD PTR(31),                 /* POINTER TO PASSON AREA    */ 60100002
*    3 MCT CHAR(208) BDY(WORD),         /* MODULE CONTROL TABLE      */ 60200002
*      5 * CHAR(164),                   /*                           */ 60300002
*      5 PARPRADR PTR(31),              /* DPRINT MODULE ADDR        */ 60400002
*      5 * CHAR(40),                    /*                           */ 60500002
*    3 MCT1ADR PTR(31),                 /* PTR TO MCT                */ 60600002
*    3 WKSVC CHAR(16) BDY(WORD),        /* SVC WORK AREA             */ 60700002
*      5 * CHAR(4),                     /*                           */ 60800002
*      5 ROPT PTR(31),                  /* SVC PARM LIST             */ 60900002
*      5 * CHAR(8),                     /*                           */ 61000002
*    3 OLTTAB CHAR(40) BDY(WORD),       /* LINK TABLE                */ 61100002
*      5 * CHAR(28),                    /*                           */ 61200002
*      5 TAB28 PTR(31),                 /* NEW MACRO ENTRY POINT     */ 61300002
*      5 * CHAR(8),                     /*                           */ 61400002
*    3 LOGADR PTR(31),                  /* PTR TO LOGSCAN MODULE     */ 61500002
*    3 SCHEDSA PTR(31),                 /* PTR TO SCHEDULER SVAREA   */ 61600002
*    3 SATAB CHAR(12),                  /* SYSTEM ASSIGNMENT TABLE   */ 61700002
*    3 PLKMOR CHAR(16),                 /* PLINK AND MORECORE MNGMT  */ 61800002
*    3 REGX PTR(31),                    /* ACTIVE UCB ADDR PTR       */ 61900002
*    3 TUCBAD1 PTR(31),                 /* 1ST ACTIVE UCB ADDR       */ 62000002
*    3 TUCBAD2 PTR(31),                 /* 2ND ACTIVE UCB ADDR       */ 62100002
*    3 TSTDEBAD PTR(31),                /* TEST DEB ADDR             */ 62200002
*    3 ECB3 CHAR(4),                    /* DYNAMIC COMMUNICATION ECB */ 62300002
*    3 UTCOM CHAR(64),                  /* PASSON AREA               */ 62400002
*    3 EXTBUF CHAR(56),                 /* EXTERNAL BUFFER           */ 62500002
*    3 DPRDEBAD PTR(31),                /* PTR TO DPRINT DEB         */ 62600002
*    3 PRIDVPTR PTR(31),                /* PTR TO ACTIVE PRIME DEVTAB*/ 62700002
*    3 SECDVPTR PTR(31),                /* PTR TO LAST GRAB DEVICE   */ 62800002
*    3 REDEFINE PTR(31),                /* CE COMM ENTRY IN    Y02906*/ 62900002
*                                       /* IFDOLT30            Y02906*/ 62950002
*    3 COMMINT PTR(31),                 /* DYN COMM ENTRY IN   Y02906*/ 63000002
*                                       /* IFDOLT30            Y02906*/ 63050002
*    3 NEXTREC PTR(31),                 /* NEXT INPUT RECORD   Y02906*/ 63100002
*                                       /* ENTRY IN IFDOLT30   Y02906*/ 63150002
*    3 ADSVAREA PTR(31),                /* IFDOLT30 1ST SVAREA ADDR  */ 63200002
*    3 ECB37 CHAR(4),                   /* CECOM ECB                 */ 63300002
*    3 REPLY37 CHAR(72),                /* CECOM INPUT BUFFER        */ 63400002
*    3 MSGAD37 PTR(31),                 /* OLTS BUFFER ADDR          */ 63500002
*    3 TPSAVE CHAR(4),                  /* TEST ID                   */ 63600002
*    3 TLCOUNT FIXED(15),               /* TEST LOOP COUNT           */ 63700002
*    3 HRTSEL FIXED(15),                /* HIGHEST ROUTINE SELECTED  */ 63800002
*    3 SAVECNT CHAR(2),                 /* COUNTER FOR DEVICE DELODE */ 63900002
*    3 * CHAR(2),                       /* TEST LOOP RUN             */ 64000002
*    3 SAVENT CHAR(4),                  /* LAST INCLUSIVE SERIES     */ 64100002
*    3 CESWITCH CHAR(9),                /* OLTEP SWITCHES            */ 64200002
*      5 CESWT CHAR(1),                 /* CE SWITCH                 */ 64210002
*        7 LEGALTST BIT(1),             /* LEGAL TEST ENTRY          */ 64220002
*        7 SECDEV BIT(1),               /* DO DP FOR SEC DEV         */ 64230002
*        7 OUTS BIT(1),                 /* OLD OLT LOADED            */ 64240002
*        7 NUTS BIT(1),                 /* NEW OLT LOADED            */ 64250002
*        7 LEGALDEV BIT(1),             /* LEGAL DEVICE ENTRY        */ 64260002
*        7 REINT BIT(1),                /* NEW D/T/O/ ENTRY          */ 64270002
*        7 FERINT BIT(1),               /* COMMUNICATION INTERVAL    */ 64280002
*        7 * BIT(1),                    /*                           */ 64290002
*      5 CESWT1 CHAR(1),                /* SWITCH 1:                 */ 64300002
*        7 RTNFLD BIT(1),               /* ROUTINES SELECTED         */ 64400002
*        7 SKTST BIT(1),                /*                           */ 64500002
*        7 * BIT(1),                    /*                           */ 64600002
*        7 WAITFG BIT(1),               /* WAITIO NEEDED             */ 64700002
*        7 FILMSK BIT(1),               /* ALLOW MODESET CHANGE      */ 64800002
*        7 * BIT(1),                    /*                           */ 64900002
*        7 ONLINEOK BIT(1),             /* ONLINE TESTING OK         */ 65000002
*        7 TPFLAG BIT(1),               /* UNITS COUNTER GTR THEN 1  */ 65100002
*      5 CESWT2 CHAR(1),                /* SWITCH 2:                 */ 65200002
*        7 NDCFO BIT(1),                /* NO DYN COMM FOR OLTEP     */ 65300002
*        7 * BIT(1),                    /*                           */ 65400002
*        7 FECOND BIT(1),               /* FIRST ERROR CONDITION     */ 65500002
*        7 * BIT(1),                    /*                           */ 65600002
*        7 INITENT BIT(1),              /* OPTION ENTRY DECODED      */ 65700002
*        7 NDR BIT(1),                  /* NDR ENTRY                 */ 65800002
*        7 TAPEHDR BIT(1),              /* TAPE LABEL TO RESTORE     */ 65900002
*        7 * BIT(1),                    /*                           */ 66000002
*      5 CESWT3 CHAR(1),                /* SWITCH 3:                 */ 66100002
*        7 TALKVERB BIT(1),             /* TALK REQUESTED            */ 66200002
*        7 BYPALDEV BIT(1),             /* STOP SCHEDULING DEVICES   */ 66300002
*        7 BYPDEV BIT(1),               /* STOP TESTING CURRENT DEV  */ 66400002
*        7 GRBCNTL BIT(1),              /* GRAB MACRO ISSUED         */ 66500002
*        7 SUSDEL BIT(1),               /* MODULE CAN BE DELETED     */ 66600002
*        7 TP1419 BIT(1),               /* TP DEVICES IN SYSTEM      */ 66700002
*        7 CDEXIST BIT(1),              /* CDS LIBRARY EXISTS        */ 66800002
*        7 NODP BIT(1),                 /* CANT DO DATA PROJECT      */ 66900002
*      5 CESWT4 CHAR(1),                /* SWITCH 4:                 */ 67000002
*        7 RSTRFLG BIT(1),              /* PAGE RESTORE -BYPASS WTO  */ 67100002
*        7 DPRFLG BIT(1),               /* USE DPRINT 2ND SVAREA     */ 67200002
*        7 WAITFLG BIT(1),              /* BYPASS DPRINT INTRNL WAIT */ 67300002
*        7 WRTFLG BIT(1),               /* DPRINT WRITE REQUEST      */ 67400002
*        7 * BIT(1),                    /* NOT USED                  */ 67500002
*        7 WTORFLG BIT(1),              /* DPRINT WTOR REQUEST       */ 67600002
*        7 RPLYFLG BIT(1),              /* REPLY EXPECTED            */ 67700002
*        7 WTOFLG BIT(1),               /* DPRINT WTO REQUEST        */ 67800002
*      5 CESWT5 CHAR(1),                /* SWITCH 5:                 */ 67900002
*        7 HDRFLG BIT(1),               /* PRINT HEADER LINE         */ 68000002
*        7 RSLTFLG BIT(1),              /* PRINT RESULTS             */ 68100002
*        7 FFEFLG BIT(1),               /* 1ST ERROR HAS OCCURRED    */ 68200002
*        7 FCEFLG BIT(1),               /* 1ST CAT ERROR HAS OCCURRED*/ 68300002
*        7 PFEMSG BIT(1),               /* PRINT 1ST ERROR MSG       */ 68400002
*        7 PCEMSG BIT(1),               /* PRINT CAT ERROR MSG       */ 68500002
*        7 SYMBFLG BIT(1),              /* SYMBOLIC NAME IN HEADER   */ 68600002
*        7 PRNTOPTN BIT(1),             /* PRINT PRIOR OPTIONS MSG   */ 68700002
*      5 CESWT6 CHAR(1),                /* SWITCH 6:                 */ 68800002
*        7 UTSCAL BIT(1),               /* UNIT TEST MACRO CALL      */ 68900002
*        7 ATM BIT(1),                  /* PRINT * ON TERM MSG       */ 69000002
*        7 EOFBIT BIT(1),               /* RESET INTERNAL SWITCHES   */ 69100002
*        7 PFPMSG BIT(1),               /* PRINT FP MSG-CANCEL OLT   */ 69200002
*        7 CODE5 BIT(1),                /* REPEAT TESTS              */ 69300002
*        7 NORUN BIT(1),                /* DONT RUN SCHEDULED TEST   */ 69400002
*        7 SECRUN BIT(1),               /* SCHEDULED TEST DONE       */ 69500002
*        7 RTSTAE BIT(1),               /* ENTRY TO STAE             */ 69600002
*      5 CESWT7 CHAR(1),                /* SWITCH 7:                 */ 69700002
*        7 INCLST BIT(1),               /* INCLUSIVE DEVICE ENTRY    */ 69800002
*        7 RETTO31 BIT(1),              /* NOT ALL DEVICES VALID     */ 69900002
*       7 REMOTE BIT(1),                /* REMOTE TERM IN DEV ENTRY  */ 70000002
*        7 * BIT(1),                    /* NOT USED                  */ 70100002
*        7 * BIT(1),                    /* NOT USED                  */ 70200002
*        7 * BIT(1),                    /* NOT USED                  */ 70300002
*        7 VIRTUAL BIT(1),              /* RUNNING IN VIRTUAL        */ 70400002
*        7 GOTINPUT BIT(1),             /* ENTRY TO D/T/O            */ 70500002
*      5 CESWT8 CHAR(1),                /* SWITCH 8:                 */ 70600002
*        7 LISTFIX BIT(1),              /* PARMLIST FIXED            */ 70700002
*        7 * BIT(1),                    /* NOT USED                  */ 70800002
*        7 * BIT(1),                    /* NOT USED                  */ 70900002
*        7 READDCHK BIT(1),             /* READD ENTERED             */ 71000002
*        7 OLTINVV BIT(1),              /* OLT IN VIRTUAL            */ 71100002
*        7 SUTMSG BIT(1),               /* MSG 158I ISSUED           */ 71200002
*        7 SNEWRUN BIT(1),              /* NEW TEST RUN              */ 71300002
*        7 TALKHERE BIT(1),             /* TALK VERB ENTERED         */ 71400002
*    3 DYNCOM CHAR(1),                  /* RESPONSE BUFFER DYN MSG   */ 71500002
*    3 SECTUSE  CHAR(1),                /* NO. OF SECTIONS RUNYM03331*/ 71600002
*    3 UNICTR  CHAR(1),                 /* NO. OF UNITS TO RUNYM03331*/ 71700002
*    3 UNITUSE  CHAR(1),                /* NO.   OF UNITS RUN YM03331*/ 71800002
*    3 DPLEVEL CHAR(1),                 /* MSG PRINTING LEVEL        */ 71900002
*    3 CNT37  CHAR(1),                  /* CECOM REPLY LENGTH YM03331*/ 72000002
*    3 READDSV CHAR(6),                 /* READD SVAREA              */ 72100002
*    3 * CHAR(3),                       /* NOT USED                  */ 72200002
*    3 READDMOD PTR(31),                /* PTR TO READD MODULE       */ 72300002
*    3 RDCBPTR PTR(31),                 /* READD DCB PTRPTR -  Y02906*/ 72400002
*                                       /* DCB IN IFDOLT51     Y02906*/ 72450002
*    3 MSGMOD PTR(31),                  /* PTR TO RESIDENT MSG MODULE*/ 72500002
*    3 ENDJOB PTR(31),                  /* PTR TO INIT SVAREA        */ 72600002
*    3 MHRPTR PTR(31),                  /*                           */ 72700002
*    3 RTALKBUF PTR(31),                /* PTR TO TALK BUFFER- Y02906*/ 72800002
*                                       /* BUFFER IN IFDOLT55  Y02906*/ 72850002
*    3 RINBUF PTR(31),                  /* PTR TO REMOTE INBUFRY02906*/ 72900002
*                                       /* BUFR IN IFDOLT55    Y02906*/ 72950002
*    3 REIDCBPT PTR(31),                /* PTR TO REI DCB-     Y02906*/ 73000002
*                                       /* DCB IN IFDOLT55     Y02906*/ 73050002
*    3 REIOBPTR PTR(31),                /* PTR TO REI IOB-     Y02906*/ 73100002
*                                       /* IOB IN IFDOLT55     Y02906*/ 73150002
*    3 REIECB CHAR(4),                  /* REMOTE COMM ECB           */ 73200002
*    3 TALKECB CHAR(4),                 /* ONSITE COMM ECB           */ 73300002
*    3 RESPBUF PTR(31),                 /* PTR TO REPLY BUFR         */ 73400002
*    3 REIUCB PTR(31),                  /* 2955 UCB ADDR             */ 73500002
*    3 CESWTR CHAR(1),                  /* RETAIN SWITCHES:          */ 73600002
*      5 RETAINAC BIT(1),               /* RETAIN ACTIVE             */ 73700002
*      5 REMERR BIT(1),                 /* REMOTE ERROR              */ 73800002
*      5 REMONMSG BIT(1),               /* DONT SEND TO REMOTE       */ 73900002
*      5 CENOMSG BIT(1),                /* DONT SEND TO CONSOLE      */ 74000002
*      5 TRANSMSG BIT(1),               /* TRANSLATE MSG             */ 74100002
*      5 IMRESP BIT(1),                 /*  ATTACH 04 REPLY CODE     */ 74200002
*      5 EXECOUT BIT(1),                /*  SCCEPT 00 REPLY CODE     */ 74300002
*      5 * BIT(1),                      /*  NOT USED                 */ 74400002
*    3 CESWTR1 CHAR(1),                 /*  REMOTE SWITCH1:          */ 74500002
*      5 ILLRESP BIT(1),                /*  INVALID RESP BY REMOTE   */ 74600002
*      5 EXECANS BIT(1),                /*  REMOTE REPLIED TO 104E   */ 74700002
*      5 CECOMANS BIT(1),               /*  REMOTE REPLIED TO OUTSMSG*/ 74800002
*      5 INFOMSG BIT(1),                /*   3 MSG RCVD FROM REMOTE  */ 74900002
*      5 RETRIEVE BIT(1),               /*  REIECB POSTED            */ 75000002
*      5 REMANS BIT(1),                 /*  REMOTE CAN REPLY         */ 75100002
*      5 EDOTMSG BIT(1),                /*  ATTACH 01 REPLY CODE     */ 75200002
*      5 REIENTRY BIT(1),               /*  ENTRY FROM REI           */ 75300002
*    3 CESWTR2 CHAR(1),                 /*  REMOTE SWITCH2:          */ 75400002
*      5 REPLY00 BIT(1),                /*  ATTACH 00 REPLY CODE     */ 75500002
*      5 * BIT(1),                      /*  NOT USED                 */ 75600002
*      5 ONCOMM BIT(1),                 /*  ONSITE REPLIED           */ 75700002
*      5 COMLOOP BIT(1),                /*  105D ISSUED - TALK REPLY */ 75800002
*      5 WAIT BIT(1),                   /*  ISSUE WTOR               */ 75900002
*      5 OPTERR BIT(1),                 /*  RE AND MI OPTIONS SELECT */ 76000002
*      5 * BIT(1),                      /*  NOT USED                 */ 76100002
*      5 DPMSGREI BIT(1),               /* REI REPLY NOT ALLOWED     */ 76200002
*    3 CESWTR3 CHAR(1),                 /*  REMOTE SWITCH3           */ 76300002
*    3 ZUESUCB FIXED(15),               /*  SPEC EXP BASE UCB ADDR   */ 76400002
*    3 * CHAR(2),                       /*  NOT USED                 */ 76500002
*    3 EXPAND1 CHAR(4),                 /* EXPANSION BYTES           */ 76600002
*    3 SYMPTR PTR(31),                  /* SYMBOLIC LIB DCB PTRY02906*/ 76700002
*                                       /* DCB IN IFDOLT30     Y02906*/ 76750002
*    3 PGFXLIST CHAR(16),               /* PAGEFIX LIST              */ 76800002
*    3 PARTITEM CHAR(12),               /* PARTITION ITEMS           */ 76900002
*    3 PGFXOLT CHAR(8),                 /* OLT PAGEFIX LIST          */ 77000002
*    3 CORERSLT CHAR(8),                /* GETMAIN CORE RESULTS      */ 77100002
*    3 VRSIZE FIXED(31),                /* REAL CORE AREA SIZE       */ 77200002
*    3 * CHAR(8),                       /* NOT USED                  */ 77300002
*    3 NEXTMCT CHAR(208),               /* NEXT MCT                  */ 77400002
*    3 THIRDMCT CHAR(208),              /* THIRD MCT                 */ 77500002
*    3 DEVTAB CHAR(896);                /* START OF DEVICE TABLES    */ 77600002
./  ADD  SSI=71720458,NAME=IGFCDA
*         %GOTO CDA1;              /* BILINGUAL MAPPING MACRO           00050000
          MACRO                                                         00100000
          IGFCDA  &DSECT=YES         */                                 00150000
*%CDA1:   ;                                                             00200000
*/*******************************************************************   00250000
*                                                                       00300000
*         CHANNEL CHECK HANDLER DATA AREA                               00350000
*                                                                       00400000
*********************************************************************   00450000
*                                                                       00500000
*    STATUS                                                             00550000
*         OS/VS2 RELEASE 3.7, SU51                                      00600051
*                                                                       00650000
*    METHOD OF ACCESS                                                   00700000
*                                                                       00750000
*         PL/S - DCL CDAPTR PTR                                         00800000
*                                                                       00850000
*         BAL  - IGFCDA   (MACRO CALL)                                  00900000
*                DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED         00950000
*                USING CDA,REG                                          01000000
*                LOAD REG WITH CDA ADDRESS                              01050000
*                                                                       01100000
********************************************************************/   01150000
*%GOTO CDA2;                       /*                                   01250000
          SPACE 1                                                       01310000
          AIF   ('&DSECT' EQ 'NO').CDA001                               01350000
CDA       DSECT                                                         01400000
          AGO   .CDA002                                                 01450000
.CDA001   ANOP                                                          01500000
CDA       DS    0F                                                      01550000
.CDA002   ANOP                                                          01600000
CDACCH6A  DC    AL4(0)             ADDRESS OF IGFC60           @YM6840  01650000
CDACCH7A  DC    AL4(0)             ADDRESS OF IGFC70           @YM6840  01700000
CDACCH8A  DC    AL4(0)             ADDRESS OF IGFC80           @YM6840  01750000
CDACCHIA  DC    AL4(0)             ADDRESS OF IGFCIC           @YM6840  01800000
CDACCHSL  DS    CL1                RELEASE LEVEL FROM CVT               01850000
          DS    CL7                RESERVED                             01900000
          DS    0D                                                      01910000
          AIF   ('&DSECT' EQ 'NO').CDA003                               02052000
CDACCHM1  DS    CL64               MESSAGE BUFFER FORMAT       @G51BPLC 02060051
          AGO   .CDA007                                                 02210000
.CDA003   ANOP                                                          02220000
CDACCHM1  DS    0XL64                                                   02230000
          DC    X'0039'        MESSAGE LENGTH                           02248400
          DC    X'8000'        MCS FLAG FIELD                           02248800
          DC    C'IGF002I '    MESSAGE ID                               02249200
          DC    C'CHANNEL DETECTED ERROR ON '                           02249600
          DC    C'   '         UNIT ADDRESS                             02249700
          DC    C','                                                    02249800
          DC    C'  '          PROCESSOR ADDRESS                        02249900
          DC    C','                                                    02266600
          DC    C'    '        BLAME FIELD                              02276600
          DC    C','                                                    02278600
          DC    C'  '          CCW COMMAND CODE                         02280600
          DC    C','                                                    02282600
          DC    C'    '        CSW UNIT AND CHANNEL STATUS              02283000
          DC    X'1000'        DESCRIPTOR CODES                         02283100
          DC    X'4000'        ROUTING CODES                            02283200
          DC    X'000000'      RESERVED                                 02285200
.CDA007   ANOP                                                          02290800
*                                                                       02294400
*    END OF CHANNEL CHECK HANDLER DATA AREA                             02300000
*                                                                       02350000
          MEND                                                          02400000
*                                  */                                   02450000
*%CDA2:   ;                                                             02500000
*                                                                       02550000
   DCL 1  CDA BASED(CDAPTR),                                            02600000
         2 CDACCH6A PTR(31),       /* ADDRESS OF IGFC60               */02650000
         2 CDACCH7A PTR(31),       /* ADDRESS OF IGFC70               */02700000
         2 CDACCH8A PTR(31),       /* ADDRESS OF IGFC80               */02750000
         2 CDACCHIA PTR(31),       /* ADDRESS OF IGFCIC               */02800000
         2 CDACCHSL CHAR(1),       /* RELEASE LEVEL FROM CVT          */02850000
         2 CDACCHRS CHAR(7),       /* RESERVED                        */02900000
         2 CDACCHM1 CHAR(64);      /* MESSAGE BUFFER FORMAT   @G51BPLC*/03000051
          /* END OF CHANNEL CHECK HANDLER DATA AREA       */            03200000
./  ADD  SSI=31630820,NAME=IGFERPIB
         MACRO                                                          00050002
         IGFERPIB &WORK                                                 00100002
IGFERPIB DSECT                                                          00150002
*                                                                       00200002
*                                                                       00250002
*        ERROR RECOVERY PROCEDURE INFORMATION BLOCK (ERPIB)             00300002
*        DEFINITION                                                     00350002
*                                                                       00400002
*                                                                       00450002
IGUCB    DS    A .                 UCB FIELD                            00500002
IGPRGFLG DS    CL1 .               PROGRAM FLAG BITS                    00550002
IGBLAME  DS    CL1 .               PROBABLE SOURCE OF ERROR             00600002
IGVALIDB DS    CL1 .               VALIDITY INDICATOR BITS              00650002
IGTERMSQ DS    CL1 .               TERMINATION/SEQUENCE CODE BITS       00700002
         AIF   ('&WORK' EQ '1').A1                                      00750002
         MEXIT                                                          00800002
.A1      ANOP                                                           00850002
*                                                                       00900002
*        CCH WORK AREA AND INTERNAL SWITCHES                            00950002
*        AREA IMMEDIATELY FOLLOWS THE WORK ERPIB                        01000002
*                                                                       01050002
CCHSW1   DS    CL1 .               INTERNAL CCH SWITCH - BYTE 1         01100002
CCHSW2   DS    CL1 .               INTERNAL CCH SWITCH - BYTE 2         01150002
RECBYTE  DS    CL1 .               RECORD BYTE                          01200002
*                                                                       01250002
*        ERPIB DEFINITION MASKS                                         01300002
*                                                                       01350002
         SPACE 2                                                        01400002
*                                                                       01450002
*        PROGRAM FLAG BITS -- BYTE 4                                    01500002
*                                                                       01550002
CCHSIOB  EQU   X'80' .                  SIO BIT                         01600002
CCHINTB  EQU   X'40' .                  INTERRUPT BIT                   01650002
CCHTIOB  EQU   X'20' .                  TIO BIT                         01700002
CCHHIOB  EQU   X'10' .                  HIO BIT                         01750002
CCHSNSB  EQU   X'04' .                  SENSE DATA STORED BIT           01800002
CCHCNTB  EQU   X'02' .                  COUNT VALID BIT                 01850002
CCHNRYB  EQU   X'01' .                  NO RETRY BIT                    01900002
         SPACE 2                                                        01950002
*                                                                       02000002
*        PROBABLE SOURCE OF ERROR BITS -- BYTE 5                        02050002
*                                                                       02100002
CCHCPU   EQU   X'80' .             CPU IS SOURCE OF ERROR               02150002
CCHCHNL  EQU   X'40' .             CHANNEL IS SOURCE OF ERROR           02200002
CCHSCUB  EQU   X'20' .             STORAGE CONTROL UNIT SOURCE OF ERROR 02250002
CCHSTG   EQU   X'10' .             STORAGE IS SOURCE OF ERROR           02300002
CCHINTFC EQU   X'08' .             I/O INTERFACE IS SOURCE OF ERROR     02350002
         SPACE 2                                                        02400002
*                                                                       02450002
*       VALIDITY BITS -- BYTE 6                                         02500002
*                                                                       02550002
CCHRCV   EQU   X'10' .                  RETRY CODE VALID                02600002
CCHUSV   EQU   X'08' .                  UNIT STATUS VALID               02650002
CCHCMDV  EQU   X'04' .                  COMMAND ADDRESS VALID           02700002
CCHCAV   EQU   X'02' .                  CHANNEL ADDRESS VALID           02750002
CCHDAV   EQU   X'01' .                  DEVICE ADDRESS VALID            02800002
         SPACE 2                                                        02850002
*                                                                       02900002
*        TERMINATION CODE BITS -- BYTE 7                                02950002
*                                                                       03000002
COMPSYS  EQU   X'C0' .                  SYSTEM RESET                    03050002
COMPSEL  EQU   X'80' .                  SELECTIVE RESET                 03100002
COMPFES  EQU   X'40' .                  FORCED ENDING SEQUENCE          03150002
COMPID   EQU   X'00' .                  INTERFACE DISCONNECT            03200002
CCHDI    EQU   X'08' .             * DISCONNECT IN                      03250002
         SPACE 2                                                        03300002
*                                                                       03350002
*        SEQUENCE CODE BITS -- BYTE 7                                   03400002
*                                                                       03450002
RTCODE0  EQU   X'00' .           *      RETRY                           03500002
RTCODE1  EQU   X'01' .           *           CODE                       03550002
RTCODE2  EQU   X'02' .           *               VALUES                 03600002
RTCODE3  EQU   X'03' .           *                     FOR              03650002
RTCODE4  EQU   X'04' .           *                        ERPIB         03700002
RTCODE5  EQU   X'05' .           *                                      03750002
RTCODE6  EQU   X'06' .           *                                      03800002
RTCODE7  EQU   X'07' .           *                                      03850002
         SPACE 1                                                        03900002
*                                                                       03950002
*******************      CCH INTERNAL SWITCHES     ***************      04000002
*              SWITCH BYTE 1                                            04050002
*                                                                       04100002
CCHCMDRG EQU   X'80' .                  COMMAND REG PARITY VALID        04150002
CCHNORE  EQU   X'40' .                  NO RECORD ENTRY AVAILABLE       04200002
CCHERFRE EQU   X'20' .               ERQIB FREED FROM ACTIVE LIST       04250002
CCHNOLST EQU   X'10' .               RECORD ONLY-NO ERPIB TO LIST       04300002
*                                  DEVICE END OR                        04350002
CCHHAND  EQU   X'08' .               ATTENTION PRESENTED                04400002
CCHIBC   EQU   X'04' .               ERPIB ALREADY CREATED              04450002
UCBNVBIT EQU   X'02' .               UCB INVALID                        04500002
*                                                                       04550002
*                                                                       04600002
*        SWITCH BYTE 2                                                  04650002
*                                                                       04700002
SYSTERM  EQU   X'80' .               SIGNAL FOR SYSTEM TERMINATION      04750002
INTRN2   EQU   X'40' .               ALTERNATE RETURN SWITCH            04800002
NOMODEL  EQU   X'20' .               NO MODEL FOUND FOR LOGOUT          04850002
NOLOG    EQU   X'10' .                   MASK FOR NO CHANNEL LOGOUT     04900002
*                                                                       04950002
         MEND                                                           05000002
./  ADD  SSI=31320253,NAME=IGFMSG
*        %GOTO MSG1;               /* BILINGUAL MAPPING MACRO           00050002
         MACRO                                                          00100002
         IGFMSG                                                         00150002
*                                  */                                   00160002
*%MSG1: ;                                                               00200002
*/********************************************************************* 00250002
*                                                                       00350002
*  MCH MESSAGE CONTENT BLOCK                                            00360002
*                                                                       00370002
*  OS/VS2 RELEASE 2, 11/20/72                                           00380002
*                                                                       00390002
*  METHOD OF ACCESS:                                                    00392002
*                    BAL - DSECT ONLY.  USING ON 'MSG' ESTABLISHES      00394002
*                          ADDRESSABILITY.                              00398002
*                                                                       00398102
*                    PL/S - DCL MSGPTR PTR                              00398402
*                                                                       00398802
**********************************************************************/ 00398902
*%GOTO MSG2; /*                                                         00399202
         SPACE 1                                                        00399602
MSG      DSECT                                                          00450002
MSGCTL   DS    XL1 .               CONTROL BYTE USED BY IGFPMMSG TO     00900002
*                                    RESERVE MCH MSG BUFFER             00950002
MSGNUM   DS    XL1 .               MSG NUMBER TO BE CONVERTED TO        01000002
*                                    DECIMAL CHARACTERS TO REPLACE 'XX' 01050002
*                                    IN THE MSG PREFIX IGF9XXI (THE     01100002
*                                    VALUE X'00' INDICATES THAT THE MSG 01110002
*                                    BUFFER IS NOT READY FOR RECORDING) 01120002
MSGTAB1  DS    XL1 .               CODE USED TO LOCATE DATA FOR A 1ST   01170002
*                                    TABLE SUBSTITUTION INTO A MSG      01220002
MSGTAB2  DS    XL1 .               CODE USED TO LOCATE DATA FOR A 2ND   01270002
*                                    TABLE SUBSTITUTION INTO A MSG      01320002
MSGCHAR  DS    0XL8 .              EIGHT-BYTE FIELD OF CHARACTER DATA   01370002
*                                    TO BE MOVED INTO MSG FOR A         01420002
*                                    CHARACTER SUBSTITUTION             01470002
MSGVAR1  DS    XL4 .               FOUR-BYTE FIELD OF BINARY DATA TO BE 01520002
*                                    CONVERTED TO DECIMAL OR HEX        01530002
*                                    CHARACTERS AND TO BE MOVED INTO    01540002
*                                    MSG FOR 1ST DECIMAL OR HEX         01542002
*                                    SUBSTITUTION INTO A MSG            01544002
MSGVAR2  DS    XL4 .               FOUR-BYTE FIELD OF BINARY DATA TO BE 01546002
*                                    CONVERTED TO DECIMAL OR HEX        01548002
*                                    CHARACTERS AND TO BE MOVED INTO    01548402
*                                    MSG FOR 2ND DECIMAL OR HEX         01548802
*                                    SUBSTITUTION INTO A MSG            01549202
*                                                                     * 01550002
*    END OF MCH MESSAGE CONTENT BLOCK                                 * 01600002
*                                                                     * 01650002
         MEND                                                           01700002
*        */                                                             01750002
*%MSG2: ;                                                               01800002
*                                                                       01850002
* DECLARE                                                               01900002
*  1 MSG BASED (MSGPTR),                                                02000002
*   2 MSGCTL CHAR (1),             /* CONTROL BYTE USED BY IGFPMMSG     02050002
*                                     TO RESERVE MCH MSG BUFFER      */ 02100002
*   2 MSGNUM CHAR(1),              /* MSG NUMBER TO BE CONVERTED TO     02150002
*                                     DECIMAL CHARACTERS TO REPLACE     02200002
*                                     'XX' IN THE MSG PREFIX IGF9XXI    02250002
*                                     (THE VALUE X'00' INDICATES THAT   02300002
*                                     THE MSG BUFFER IS NOT READY FOR   02350002
*                                     RECORDING)                     */ 02400002
*   2 MSGTAB1 CHAR(1),             /* CODE USED TO LOCATE DATA FOR A    02450002
*                                     1ST TABLE SUBSTITUTION INTO A     02500002
*                                     MSG                            */ 02550002
*   2 MSGTAB2 CHAR(1),             /* CODE USED TO LOCATE DATA FOR A    02560002
*                                     2ND TABLE SUBSTITUTION INTO A     02570002
*                                     MSG                            */ 02580002
*   2 MSGCHAR CHAR(8),             /* EIGHT-BYTE FIELD OF CHARACTER     02600002
*                                     DATA TO BE MOVED INTO MSG FOR A   02650002
*                                     CHARACTER SUBSTITUTION         */ 02660002
*    3 MSGVAR1 CHAR(4),            /* FOUR-BYTE FIELD OF BINARY DATA TO 02670002
*                                     BE CONVERTED TO DECIMAL OR HEX    02680002
*                                     CHARACTERS AND TO BE MOVED INTO   02690002
*                                     MSG FOR 1ST DECIMAL OR HEX        02692002
*                                     SUBSTITUTION INTO A MSG        */ 02694002
*    3 MSGVAR2 CHAR(4);            /* FOUR-BYTE FIELD OF BINARY DATA TO 02696002
*                                     BE CONVERTED TO DECIMAL OR HEX    02698002
*                                     CHARACTERS AND TO BE MOVED INTO   02698402
*                                     MSG FOR 2ND DECIMAL OR HEX        02698802
*                                     SUBSTITUTION INTO A MSG        */ 02699202
*/*                                                                     02700002
*  END OF MCH MESSAGE CONTENT BLOCK                                     02750002
**/                                                                     02800002
./  ADD  SSI=70880257,NAME=IGFPWA
*        %GOTO PWA1;             /*  BILINGUAL MAPPING MACRO            00050002
         MACRO                                                          00100002
         IGFPWA                                                         00150002
*                                */                                     00160002
*%PWA1: ;                                                               00200002
*/********************************************************************* 00250002
*                                                                       00300002
*  MCH PROCESSOR WORK AREA                                              00310002
*                                                                       00320002
*  OS/VS2 RELEASE 2, 3/29/73                                            00330002
*                                                                       00340002
*  METHOD OF ACCESS:                                                    00342002
*                    BAL - DSECT ONLY.  USING ON 'PWA' ESTABLISHES      00344002
*                          ADDRESSABILITY.                              00348002
*                                                                       00348102
*                    PL/S - DCL PWAPTR PTR                              00348402
*                                                                       00348802
**********************************************************************/ 00349202
*%GOTO PWA2; /*                                                         00349602
         SPACE 1                                                        00349702
PWA      DSECT                                                          00400002
PWASA1   DS    XL72 .              STANDARD REGISTER SAVE AREA 1        00850002
PWASA2   DS    XL72 .              STANDARD REGISTER SAVE AREA 2        00900002
PWASA3   DS    XL72 .              STANDARD REGISTER SAVE AREA 3        00950002
PWASA4   DS    XL72 .              STANDARD REGISTER SAVE AREA 4        01000002
PWAESA   DS    XL72 .              EXTRA REGISTER SAVE AREA (FOR        01010002
*                                    IGFPEXIT)                          01020002
PWASRTHB DS    D .                 THRESHOLD BLOCK FOR SYSTEM RECOVERY  01070002
*                                    (SR) EVENTS                        01120002
PWADGTHB DS    D .                 THRESHOLD BLOCK FOR DEGRADATION      01130002
*                                    (DG) EVENTS                        01140002
PWAFRRCD DS    F .                 FRR ERROR CODE FIELD                 01150002
PWAFRRCT DS    F .                 FRR STACK INDEX                      01200002
*                                                                       01210002
PWAFRR1  DS    0XL16 .             FRR STACK ENTRY 1                    01250002
PWAFRR12 DS    F .                 FRR STACK REGISTER 12 FIELD          01300002
PWAFRR13 DS    F .                 FRR STACK REGISTER 13 FIELD          01350002
PWAFRR15 DS    F .                 FRR STACK REGISTER 15 FIELD          01400002
PWAFRR10 DS    F .                 FRR STACK REGISTER 0 FIELD           01450002
*                                                                       01460002
PWAFRR2  DS    0XL16 .             FRR STACK ENTRY 2                    01500002
PWAFRR22 DS    F .                 FRR STACK REGISTER 12 FIELD          01550002
PWAFRR23 DS    F .                 FRR STACK REGISTER 13 FIELD          01600002
PWAFRR25 DS    F .                 FRR STACK REGISTER 15 FIELD          01650002
PWAFRR20 DS    F .                 FRR STACK REGISTER 0 FIELD           01700002
*                                                                       01710002
PWAFRR3  DS    0XL16 .             FRR STACK ENTRY 3                    01750002
PWAFRR32 DS    F .                 FRR STACK REGISTER 12 FIELD          01800002
PWAFRR33 DS    F .                 FRR STACK REGISTER 13 FIELD          01850002
PWAFRR35 DS    F .                 FRR STACK REGISTER 15 FIELD          01900002
PWAFRR30 DS    F .                 FRR STACK REGISTER 0 FIELD           01950002
*                                                                       01960002
PWAFRR4  DS    0XL16 .             FRR STACK ENTRY 4                    02000002
PWAFRR42 DS    F .                 FRR STACK REGISTER 12 FIELD          02050002
PWAFRR43 DS    F .                 FRR STACK REGISTER 13 FIELD          02100002
PWAFRR45 DS    F .                 FRR STACK REGISTER 15 FIELD          02150002
PWAFRR40 DS    F .                 FRR STACK REGISTER 0 FIELD           02200002
*                                                                       02210002
PWASOSW  DS    XL8 .               AREA TO SAVE RECURSIVE OLD PSW IF    02220002
*                                    MACHINE CHECK, PROGRAM CHECK, OR   02230002
*                                    RESTART INTERRUPTION OCCURS IN MCH 02240002
PWAINTC  DS    XL8 .               AREA TO SAVE INTERRUPT CODE FROM     02242002
*                                    RECURSIVE MACHINE CHECK OR PROGRAM 02244002
*                                    CHECK IN MCH                       02246002
PWASFLC  DS    XL232 .             AREA TO SAVE FIXED LOGOUT AREA (FLC  02248002
*                                    LOCATIONS 0-231) FROM THE ORIGINAL 02248402
*                                    (NOT RECURSIVE) MACHINE CHECK      02248802
*                                    INTERRUPTION                       02249202
PWACR14  DS    F .                 RESUME CONTROL REG 14 IMAGE (INPUT   02249602
*                                    TO AND OUTPUT FROM MODEL DEPENDENT 02249702
*                                    CR MAINTENANCE RTN, IGF01MMM)      02249802
PWACR15  DS    F .                 RESUME CONTROL REG 15 IMAGE (INPUT   02249902
*                                    TO AND OUTPUT FROM MODEL DEPENDENT 02253202
*                                    CR MAINTENANCE RTN, IGF01MMM)      02255202
PWARGPR  DS    XL64 .              RESUME GPR'S (USED AT ENTRY POINT    02255602
*                                    IGFPEXI2 TO ACCOMPLISH RETURN FROM 02256002
*                                    IGFPEXIT)                          02256402
PWARPSW  DS    XL8 .               RESUME PSW (USED AT ENTRY POINT      02256502
*                                    IGFPEXI2 TO ACCOMPLISH RETURN FROM 02256602
*                                    IGFPEXIT)                          02259902
PWAMFAFL DS    XL1 .               MALFUNCTION ALERT RECEIVED FLAGS     02263402
PWAINIT  DS    XL1 .               CPU INITIALIZATION COMPLETE FLAGS    02266702
*                                    (INDICATES STIDC'S AND STIDP HAVE  02270002
*                                    BEEN EXECUTED ON THIS CPU)         02280002
PWAFLAGS DS    XL1 .               PROCESSOR FLAGS                      02290002
*                                                                       02292002
PWAREST  EQU   X'80' .             RESTART INTERRUPTION QUEUED          02294002
PWACCHED EQU   X'40' .             IGFPMSCA CALLED IGFCCHED,   @G552PLM 02294555
*                                  TURNED OFF ON RET           @G552PLM 02294855
*                                  BITS 2-7 RESERVED           @G552PLM 02295155
PWANRHED EQU X'20' .               IGFPNRFH SCHEDULED.         @G559P2L 02295255
PWAENABL EQU X'10' .               BUFFER/TLB  RESTORE         @G556P2P 02295655
*                                  REQUESTED                   @G556P2P 02295755
*                                  BITS 4-7 RESERVED           @G556P2P 02295855
*                                                                       02296055
PWAEDSRB DS    XL1 .               IGFCCHED SRB LOCK BYTE      @G552PLM 02296655
PWACNTR  DS    XL1 .               RECURSIVE MACHINE CHK COUNT @G551P2M 02297355
         DS    XL1 .               RESERVED FOR FUTURE USE     @G552PLM 02298055
PWACPUAD DS    H .                 AREA FOR IGFPTERM TO SAVE CPU ADDR   02310002
*                                    OF SIGNALLED CPU DURING PROCESSOR  02320002
*                                    TERMINATION                        02330002
         DS    0F                                                       02340002
PWATEST  DS    XL8 .               RESERVED FOR TESTING                 02350002
         DS    0D                                                       02360002
PWAWRK   DS    XL32 .              WORK AREA FOR TEMPORARY USE          02400002
PWACCSRB DS    XL44 .              IGFCCHED SRB                @G552PLM 02450055
PWANRSRB DS    XL44 .              IGFPNRFH SRB                @G559P2L 02470055
         DS    0D   .                                          @G55CP2P 02472055
PWAPDTHB DS    XL16 .              THRESHOLD BLOCK FOR         @G55CP2P 02473055
*                                  INSTRUCTION PROCESSING      @G55CP2P 02474055
*                                  DAMAGE   EVENTS             @G55CP2P 02475055
PWASDTHB DS    XL16 .              THRESHOLD BLOCK FOR         @G55CP2P 02476055
*                                  SYSTEM DAMAGE               @G55CP2P 02477055
*                                           EVENTS             @G55CP2P 02478055
PWAIVTHB DS    XL16 .              THRESHOLD BLOCK FOR         @G55CP2P 02479055
*                                  INVALID REGISTER OR PSW     @G55CP2P 02480055
*                                           EVENTS             @G55CP2P 02481055
PWATCTHB DS    XL16 .              THRESHOLD BLOCK FOR         @G55CP2P 02482055
*                                  TOD CLOCK DAMAGE EVENTS     @G55CP2P 02483055
PWAPTTHB DS    XL16 .              THRESHOLD BLOCK FOR         @G55CP2P 02484055
*                                  CPU TIMER DAMAGE EVENTS     @G55CP2P 02485055
PWACCTHB DS    XL16 .              THRESHOLD BLOCK FOR         @G55CP2P 02486055
*                                  CLOCK COMPARATOR DMG        @G55CP2P 02487055
*                                           EVENTS             @G55CP2P 02488055
*                                                                     * 02500002
*    END OF MCH PROCESSOR WORK AREA                                   * 02550002
*                                                                     * 02600002
         MEND                                                           02650002
*        */                                                             02700002
*%PWA2: ;                                                               02750002
*                                                                       02800002
* DECLARE                                                               02850002
*  1 PWA BASED(PWAPTR) BDY(DWORD),                                      02950002
*   2 PWASA1 (18) FIXED(31),       /* STANDARD REGISTER SAVE AREA 1  */ 03000002
*   2 PWASA2 (18) FIXED(31),       /* STANDARD REGISTER SAVE AREA 2  */ 03050002
*   2 PWASA3 (18) FIXED(31),       /* STANDARD REGISTER SAVE AREA 3  */ 03100002
*   2 PWASA4 (18) FIXED(31),       /* STANDARD REGISTER SAVE AREA 4  */ 03150002
*   2 PWAESA (18) FIXED(31),       /* EXTRA REGISTER SAVE AREA (FOR     03160002
*                                     IGFPEXIT                       */ 03170002
*   2 PWASRTHB CHAR(8) BDY(DWORD), /* THRESHOLD BLOCK FOR SYSTEM        03180002
*                                     RECOVERY (SR) EVENTS           */ 03190002
*   2 PWADGTHB CHAR(8) BDY(DWORD), /* THRESHOLD BLOCK FOR DEGRADATION   03192002
*                                     (DG) EVENTS                    */ 03194002
*   2 PWAFRRCD FIXED(31),          /* FRR ERROR CODE FIELD           */ 03300002
*   2 PWAFRRCT FIXED(31),          /* FRR STACK INDEX                */ 03350002
*   2 PWAFRR (4),                  /* FRR STACK ENTRIES              */ 03400002
*    3 PWAFRR12 FIXED(31),         /* FRR STACK REGISTER FIELD 12    */ 03450002
*    3 PWAFRR13 FIXED(31),         /* FRR STACK REGISTER FIELD 13    */ 03500002
*    3 PWAFRR15 FIXED(31),         /* FRR STACK REGISTER FIELD 15    */ 03550002
*    3 PWAFRR00 FIXED(31),         /* FRR STACK REGISTER FIELD 0     */ 03600002
*   2 PWASOSW CHAR(8) BDY(WORD),   /* AREA TO SAVE RECURSIVE OLD PSW IF 03610002
*                                     MACHINE CHECK, PROGRAM CHECH, OR  03620002
*                                     RESTART INTERRUPTION OCCURS IN    03630002
*                                     MCH                            */ 03640002
*   2 PWAINTC CHAR(8) BDY(WORD),   /* AREA TO SAVE INTERRUPT CODE FROM  03642002
*                                     RECURSIVE MACHINE CHECK OR        03644002
*                                     PROGRAM CHECK IN MCH           */ 03646002
*   2 PWASFLC CHAR(232) BDY(WORD), /* AREA TO SAVE FIXED LOGOUT AREA    03648002
*                                     (FLC LOCATIONS 0-231) FROM THE    03648402
*                                     ORIGINAL (NOT RECURSIVE) MACHINE  03648802
*                                     CHECK INTERRUPTION             */ 03649202
*   2 PWACR14 BIT(32) BDY(WORD),   /* RESUME CONTROL REG 14 IMAGE       03649602
*                                     (INPUT TO AND OUTPUT FROM MODEL   03649702
*                                     DEPENDENT CR MAINTENANCE RTN,     03649802
*                                     IGF01MMM)                      */ 03649902
*   2 PWACR15 BIT(32) BDY(WORD),   /* RESUME CONTROL REG 15 IMAGE       03666602
*                                     (INPUT TO AND OUTPUT FROM MODEL   03676602
*                                     DEPENDENT CR MAINTENANCE RTN,     03678602
*                                     IGF01MMM)                      */ 03680602
*   2 PWARGPR (16) FIXED(31),      /* RESUME GRP'S (USED AT ENTRY POINT 03682602
*                                     IGFPEXI2 TO ACCOMPLISH RETURN     03683002
*                                     FROM IGFPEXIT)                 */ 03683102
*   2 PWARPSW CHAR(8) BDY(WORD),   /* RESUME PSW (USED AT ENTRY POINT   03683202
*                                     IGFPEXI2 TO ACCOMPLISH RETURN     03688802
*                                     FROM IGFPEXIT)                 */ 03690802
*   2 PWAMFAFL CHAR(1),            /* MALFUNCTION ALERT RECEIVED        03694402
*                                     FLAGS                          */ 03700002
*   2 PWAINIT CHAR(1),             /* CPU INITIALIZATION COMPLETE FLAGS 03710002
*                                     (INDICATES STIDC'S AND STIDP HAVE 03720002
*                                     BEEN EXECUTED ON THIS CPU)     */ 03730002
*   2 PWAFLAGS BIT(8),             /* PROCESSOR FLAGS                */ 03740002
*    3 PWAREST BIT(1),             /* RESTART INTERRUPTION QUEUED    */ 03742002
*    3 PWACCHED BIT(1),            /* IGFPMSCA CALLED IGFCCHED          03742555
*                                     TURNED OF ON RETURN    @G552PLM*/ 03743055
*    3 PWANRHED BIT(1),            /* ON -IGFPNRFH SCHEDULED.@G559P2L*/ 03743255
*    3 PWAENABL BIT(1),            /* ON - BUFFER/TLB                   03744155
*                                     RESTORE REQUESTED      @G556P2P*/ 03744255
*    3 * BIT(4),                   /* RESERVD FOR FUTURE USE @G556P2P*/ 03744355
*   2 PWAEDSRB CHAR(1),            /* IGFCCHED SRB LOCK BYTE @G552PLM*/ 03744955
*   2 PWACNTR BIT(8),              /* RECURSIVE MCH CHK COUNT@G551P2M*/ 03745055
*   2 * CHAR(1),                   /* RESERVED FOR FUTURE USE        */ 03746055
*   2 PWACPUAD CHAR(2) BDY(HWORD), /* AREA FOR IGFPTERM TO SAVE CPU     03760002
*                                     ADDR OF SIGNALLED CPU DURING      03770002
*                                     PROCESSOR TERMINATION          */ 03780002
*   2 PWATEST CHAR(8) BDY(WORD),   /* RESERVED FOR TESTING           */ 03800002
*   2 PWAWRK CHAR (32) BDY(DWORD), /* WORK AREA FOR TEMP USE @G552PLM*/ 03820055
*   2 PWACCSRB CHAR(44),           /* IGFCCHED SRB           @G552PLM*/ 03850055
*   2 PWANRSRB CHAR(44),           /* IGFPNRFH SRB           @G559P2L*/ 03860055
*   2 PWAPDTHB CHAR(16) BDY(DWORD),/* THRESHOLD BLOCK FOR INSTRUCTION   03869055
*                                     PROCESSING      EVENTS @G55CP2P*/ 03871055
*   2 PWASDTHB CHAR(16) BDY(DWORD),/* THRESHOLD BLOCK FOR SYSTEM        03875055
*                                     DAMAGE     EVENTS      @G55CP2P*/ 03878055
*   2 PWAIVTHB CHAR(16) BDY(DWORD),/* THRESHOLD BLOCK INVALID PSW OR    03881055
*                                     REGISTER       EVENTS  @G55CP2P*/ 03884055
*   2 PWATCTHB CHAR(16) BDY(DWORD),/* THRESHOLD BLOCK FOR TOD CLOCK     03887055
*                                     DAMAGE EVENTS          @G55CP2P*/ 03889055
*   2 PWAPTTHB CHAR(16) BDY(DWORD),/* THRESHOLD BLOCK FOR CPU TIMER     03893055
*                                     DAMAGE EVENTS          @G55CP2P*/ 03894055
*   2 PWACCTHB CHAR(16) BDY(DWORD);/* THRESHOLD BLOCK CLOCK COM-        03895055
*                                     PARATOR DMG EVENTS     @G55CP2P*/ 03896055
*/*                                                                     03900002
*  END OF MCH PROCESSOR WORK AREA                                       03950002
**/                                                                     04000002
./  ADD  SSI=31040317,NAME=IGFRMS
*        %GOTO RMSPL0;       /* BILINGUAL RMSPL MACRO                   00050002
         MACRO                                                          00100002
         IGFRMS  &LIST=NO                                               00150002
         PUSH PRINT                                                 */  00200002
*%RMSPL0:  ;                                                            00400002
*/********************************************************************  00450002
*                                                                    *  00490002
*        RMS PARAMETER LIST MACRO                                    *  00540002
*                                                                    *  00590002
**********************************************************************  00640002
*                                                                    *  00690002
*    STATUS                                                          *  00740002
*        MVM RELEASE 1, LEVEL = 0                                    *  00790002
*                                                                    *  00840002
*    METHOD OF ACCESS                                                *  00890002
*                                                                    *  00940002
*        PL/S - DCL RMSPLPTR PTR                                     *  00990002
*                                                                    *  00992002
*        BAL  - IGFRMS  (MACRO CALL)                                 *  01042002
*        USING RMSPL,REG                                             *  01092002
*        LOAD REG WITH RMSPL ADDRESS                                 *  01094002
*                                                                    *  01144002
*    F.E.'S                                                          *  01194002
*        MICROFICHE LISTINGS - IGFRMS                                *  01244002
*                                                                    *  01294002
*    DEVELOPERS                                                      *  01344002
*        PL/S LISTING - SPECIFY %IHALIST='YES' BEFORE INCLUDE        *  01394002
*        BAL LISTING  - SPECIFY LIST=YES ON MACRO CALL               *  01444002
*                                                                    *  01446002
*        FOR INTEGRATION, A LIST MUST NOT BE REQUESTED UNLESS        *  01496002
*        YOUR MODULE CREATES THE MACRO                               *  01546002
*********************************************************************/  01596002
*                                                                       01646002
*                                                                       01696002
*%GOTO RMSPL1;               /*                                         01750002
         AIF ('&LIST' EQ 'YES').RMSPL1A                                 01760002
         PRINT OFF                                                      01770002
.RMSPL1A ANOP                                                           01780002
RMSPL    DSECT                                                          01800002
*                                                                       01850002
**********************************************************************  01900002
*                                                                    *  01950002
*              RMS PARAMETER LIST                                    *  02000002
*                                                                    *  02050002
**********************************************************************  02100002
*                                                                       02150002
RMSCID   DS    XL1           ID OF USER                                 02200002
*  EQUATES FOR RMSCID                                                   02250002
RMSNIP   EQU   X'80'         SET BY IGFRINIT                            02300002
RMSVCPU  EQU   X'40'         SET BY VARY CPU                            02350002
RMSMCH   EQU   X'20'         SET BY MCH                                 02400002
RMSACT   DS    XL1           ACTION REQUESTED                           02450002
*  EQUATES FOR RMSACT                                                   02500002
RMSBLDL  EQU   X'80'         SET BY IGFRINIT, BUILD BLDL                02550002
RMSLOAD  EQU   X'40'         SET BY IGFRINIT, LOAD                      02600002
RMSSINIT EQU   X'10'         SET BY IGFRINIT, SYSTEM INITIALIZATION     02650002
RMSALLOC EQU   X'08'         SET BY LOGICAL VARY, ALLOCATE MCEL/IOEL    02700002
RMSDALOC EQU   X'04'         SET BY LOGICAL VARY, DEALLOCATE MCEL/IOEL  02750002
RMSREGI  EQU   X'02'         SET BY LOGICAL VARY, INITIALIZE CONTROL    02800002
*                            REGISTERS                                  02850002
RMSREGD  EQU   X'01'         SET BY LOGICAL VARY, RESET CONTROL REGS.   02900002
*                                                                       02910002
*      NOTE:  LOGICAL VARY IS A NIP FUNCTION SIMILIAR TO VARY CPU       02950002
*                                                                       02960002
RMSPA    DS    XL2           PROCESSOR ADDRESS FOR WHICH ACTION IS      03000002
*                            REQUESTED (0000-003F)                      03050002
*            END OF RMS PARAMETER LIST                                  03100002
*                                                                       03150002
         POP  PRINT                                                     03200002
         MEND                                                           03250002
         EJECT                                                          03300002
*                                                                   */  03310002
*%RMSPL1:  ;                                                            03350002
*%DEACTIVATE   PUSH,POP,OFF;                                            03400002
*%IHALPUSH='@LIST PUSH';                                                03450002
*%IHALPOP='@LIST POP';                                                  03500002
*%IHALOFF='@LIST OFF';                                                  03550002
*IHALPUSH;                                                              03600002
*%IF IHALIST='YES'  %THEN                                               03650002
*            %GOTO RMSPL2;                                              03700002
*IHALOFF;                                                               03750002
*%RMSPL2:  ;                                                            03800002
*/********************************************************************  03910002
*                                                                    *  03920002
*              RMS PARAMETER LIST                                    *  03930002
*                                                                    *  03940002
**********************************************************************  03990002
*                                                                   */  04160002
     DCL 1 RMSPL BASED (RMSPLPTR) BDY (WORD),                           04170002
         2 RMSCID CHAR(1),        /* ID OF USER                     */  04210002
           3 RMSNIP BIT(1),       /* SET BY IGFRINIT                */  04260002
           3 RMSVCPU BIT(1),      /* SET BY VARY CPU                */  04310002
           3 RMSMCH BIT(1),       /* SET BY MCH                     */  04360002
           3 RMSRES1 BIT(5),      /* RESERVED                       */  04410002
         2 RMSACT CHAR(1),        /* ACTION REQUESTED               */  04460002
           3 RMSBLDL BIT(1),      /* SET BY IGFRINIT, BUILD BLDL    */  04510002
           3 RMSLOAD BIT(1),      /* SET BY IGFRINIT, LOAD          */  04560002
           3 RMSRES2 BIT(1),      /* RESERVED                       */  04610002
           3 RMSSINIT BIT(1),     /* SET BY IGFRINIT, SYSTEM            04660002
                                     INITIALIZATION                 */  04710002
           3 RMSALLOC BIT(1),     /* SET BY LOGICAL VARY, ALLOCATE      04760002
                                     MCEL/IOEL BUFFERS              */  04810002
           3 RMSDALOC BIT(1),     /* SET BY LOGICAL VARY, DEALLOCATE    04860002
                                     MCEL/IOEL BUFFERS              */  04910002
           3 RMSREGI BIT(1),      /* SET BY LOGICAL VARY, INITIALIZE    04960002
                                     CONTROL REGISTERS              */  05010002
           3 RMSREGD BIT(1),      /* SET BY LOGICAL VARY, RESET         05060002
                                     CONTROL REGISTERS              */  05110002
 /*       NOTE: LOGICAL VARY IS A NIP FUNCTION SIMILIAR TO VARY CPU */  05120002
         2 RMSPA CHAR(2);         /* PROCESSOR ADDRESS FOR WHICH        05220002
                                     ACTION IS REQUESTED (0000-003F)*/  05260002
 /*    END OF RMS PARAMETER LIST                                    */  05270002
*IHALPOP;                                                               05360002
*%ACTIVATE PUSH,POP,OFF;                                                05410002
./  ADD  SSI=70750423,NAME=IGFRWA
*        %GOTO RWA1;                     /* BILINGUAL MAPPING MACRO     00050002
         MACRO                                                          00100002
         IGFRWA  &DSECT=YES                                             00150002
.*A026100-026400,043600-043900                                 @YM05666 00152002
.*C026500,044000                                               @YM05666 00154002
.*A027100-027200,044600-044700                                 @YM00964 00160002
.*                                       */                             00200002
*%RWA1: ;                                                               00250002
*/********************************************************************* 00300002
*                                                                       00350002
*  MCH RECOVERY WORK AREA                                               00400002
*                                                                       00450002
*  OS/VS2 RELEASE 2, 12/13/73                                           00500002
*                                                                       00550002
*  METHOD OF ACCESS:                                                    00600002
*                    BAL - DSECT IS PRODUCED UNLESS DSECT=NO IS         00650002
*                          SPECIFIED. USING ON 'RWA' ESTABLISHES        00700002
*                          ADDRESSABILITY.                              00750002
*                                                                       00800002
*                    PL/S - DCL RWAPTR PTR                              00850002
*                                                                       00900002
**********************************************************************/ 00950002
*%GOTO RWA2; /*                                                         01000002
         SPACE 1                                                        01050002
         AIF   ('&DSECT' EQ 'NO').RWA001                                01100002
RWA      DSECT                                                          01150002
         AGO   .RWA002                                                  01200002
.RWA001  ANOP                                                           01250002
RWA      DS    0D                                                       01300002
.RWA002  ANOP                                                           01350002
RWATERM  DC    D'0' .              SYSTEM TERMINATION PARAMETERS        01400002
*                                    (A NON-ZERO VALUE INDICATES THAT   01450002
*                                    SYSTEM TERMINATION IS IN PROGRESS) 01500002
         ORG   RWATERM                                                  01550002
RWATWTO  DS    F .                 ADDR OF WTO PARM FOR SYSTEM TERM     01600002
RWATLRB  DS    F .                 ADDR OF LRB FOR SYSTEM TERM          01650002
RWASRDF  DC    XL8'2000000000000004' DEFAULT THRESHOLD BLOCK FOR SYSTEM 01700002
*                                      RECOVERY EVENTS                  01750002
RWADGDF  DC    XL8'2000000003000004' DEFAULT THRESHOLD BLOCK FOR        01770055
*                                      DEGRADATION EVENTS               01850002
RWACWRFL DC    X'00' .             CONSOLE WRITE IN PROGRESS FLAGS      01900002
RWAEMRFL DC    X'00' .             EMERGENCY RECORDING IN PROGRESS FLGS 01950002
RWAFLCFL DC    X'00' .             FIXED LOW CORE IN USE FLAGS          02000002
RWAMSGFL DC    X'00' .             LOST MESSAGE SUMMARY FLAGS           02050002
*                                                                       02100002
RWAMSG31 EQU   X'80' .             AT LEAST ONE IGF931I MSG LOST DUE TO 02150002
*                                    LACK OF MSG BUFFER SPACE           02200002
RWAMSG71 EQU   X'40' .             AT LEAST ONE IGF971I MSG LOST DUE TO 02250002
*                                    LACK OF MSG BUFFER SPACE           02300002
RWAMSG72 EQU   X'20' .             AT LEAST ONE IGF972I MSG LOST DUE TO 02350002
*                                    LACK OF MSG BUFFER SPACE           02400002
RWAMSG21 EQU   X'10' .             INDICATES ERROR IN THRESHOLD         02450002
*                                    ANALYSIS RTN                       02500002
RWAMSG56 EQU   X'08' .             AT LEAST ONE IGF956I MSG LOST DUE TO 02510055
*                                    LACK OF MSG BUFFER SPACE  @G556P2P 02520055
*                                  BITS 5-7 RESERVED FOR FUTURE USE     02530055
*                                                                       02600002
RWAFLAGS DC    X'00' .             MCH SYSTEM-WIDE FLAGS       @YM05666 02610002
*                                                                       02612002
RWAWNGQI EQU   X'80' .             WARNINGS TO BE DISABLED     @YM05666 02620002
*                                  BITS 1-7 RESERVED FOR       @YM05666 02630002
*                                    FUTURE USE                @YM05666 02640002
*                                                                       02642002
         DC    XL3'000000' .       RESERVED FOR FUTURE USE     @YM05666 02650002
RWATEST  DC    XL8'0000000000000000' RESERVED FOR TESTING               02700002
RWAPCCAR DC    2F'0' .             REAL ADDRESSES OF PCCA'S    @YM00964 02710002
*                                    FOR CPU 0 - CPU 1         @YM00964 02720002
RWAPDDF  DS    0XL16                 DEFAULT THRESHOLD         @G55CP2P 02722055
         DC    XL8'3000000000000005' BLOCK FOR INSTRUCTION     @G55CP2P 02723055
         DC    XL8'000000000000012C' PROCESSING DAMAGE EVENTS  @G55CP2P 02724055
RWASDDF  DS    0XL16                 DEFAULT THRESHOLD         @G55CP2P 02725055
         DC    XL8'3000000000000005' BLOCK FOR SYSTEM          @G55CP2P 02726055
         DC    XL8'000000000000012C' DAMAGE EVENTS             @G55CP2P 02727055
RWAIVDF  DS    0XL16                 DEFAULT THRESHOLD         @G55CP2P 02728055
         DC    XL8'3000000000000005' BLOCK FOR INVALID PSW OR  @G55CP2P 02729055
         DC    XL8'000000000000012C' REGISTER EVENTS           @G55CP2P 02730055
RWATCDF  DS    0XL16                 DEFAULT THRESHOLD         @G55CP2P 02731055
         DC    XL8'3000000000000005' BLOCK FOR TOD CLOCK       @G55CP2P 02732055
         DC    XL8'000000000000012C' DAMAGE EVENTS             @G55CP2P 02733055
RWAPTDF  DS    0XL16                 DEFAULT THRESHOLD         @G55CP2P 02734055
         DC    XL8'3000000000000005' BLOCK FOR CPU TIMER       @G55CP2P 02735055
         DC    XL8'000000000000012C' DAMAGE EVENTS             @G55CP2P 02736055
RWACCDF  DS    0XL16                 DEFAULT THRESHOLD         @G55CP2P 02737055
         DC    XL8'3000000000000005' BLOCK FOR  CLOCK          @G55CP2P 02738055
         DC    XL8'000000000000012C' COMPARATOR DAMAGE EVENTS  @G55CP2P 02739055
*                                                                     * 02750055
*    END OF MCH RECOVERY WORK AREA                                    * 02800002
*                                                                     * 02850002
         MEND                                                           02900002
*        */                                                             02950002
*%RWA2: ;                                                               03000002
*                                                                       03050002
* DECLARE                                                               03100002
*  1 RWA BASED(RWAPTR) BDY(DWORD),                                      03150002
*   2 RWATERM CHAR(8) BDY(DWORD),  /* SYSTEM TERMINATION PARAMETERS     03200002
*                                     (A NON-ZERO VALUE INDICATES THAT  03250002
*                                     SYSTEM TERMINATION IS IN          03300002
*                                     PROGRESS)                      */ 03350002
*    3 RWATWTO PTR(31),            /* ADDR OF WTO PARM FOR SYS TERM  */ 03400002
*    3 RWATLRB PTR(31),            /* ADDR OF LRB FOR SYS TERM       */ 03450002
*   2 RWASRDF CHAR(8) BDY(WORD),   /* DEFAULT THRESHOLD BLOCK FOR       03500002
*                                     SYSTEM RECOVERY EVENTS         */ 03550002
*   2 RWADGDF CHAR(8) BDY(WORD),   /* DEFAULT THRESHOLD BLOCK FOR       03600002
*                                     DEGRADATION EVENTS             */ 03650002
*   2 RWACWRFL CHAR(1),            /* CONSOLE WRITE IN PROGRESS FLAGS*/ 03700002
*   2 RWAEMRFL CHAR(1),            /* EMERGENCY RECORDING IN PROGRESS   03750002
*                                     FLAGS                          */ 03800002
*   2 RWAFLCFL CHAR(1),            /* FIXED LOW CORE IN USE FLAGS    */ 03850002
*   2 RWAMSGFL BIT(8),             /* LOST MESSAGE SUMMARY FLAGS     */ 03900002
*    3 RWAMSG31 BIT(1),            /* AT LEAST ONE IGF931I MSG LOST DUE 03950002
*                                     TO LACK OF MSG BUFFER SPACE    */ 04000002
*    3 RWAMSG71 BIT(1),            /* AT LEAST ONE IGF971I MSG LOST DUE 04050002
*                                     TO LACK OF MSG BUFFER SPACE    */ 04100002
*    3 RWAMSG72 BIT(1),            /* AT LEAST ONE IGF972I MSG LOST DUE 04150002
*                                     TO LACK OF MSG BUFFER SPACE    */ 04200002
*    3 RWAMSG21 BIT(1),            /* INDICATES ERROR IN THRESHOLD      04250002
*                                     ANALYSIS RTN                   */ 04300002
*    3 RWAMSG56 BIT(1),            /* AT LEAST ONE IGF956I MSG LOST DUE 04310055
*                                     TO LACK OF MSG BUFFER SPACE       04320055
*                                                            @G556P2P*/ 04330055
*    3 *        BIT(3),            /* RESERVED FOR FUTURE USE        */ 04340055
*   2 RWAFLAGS BIT(8) ABNORMAL,    /* MCH SYSTEM-WIDE FLAGS  @YM05666*/ 04360002
*    3 RWAWNGQI BIT(1),            /* WARNINGS TO BE DISABLED           04370002
*                                                            @YM05666*/ 04372002
*    3 *        BIT(7),            /* RESERVED FOR FUTURE USE           04380002
*                                                            @YM05666*/ 04390002
*   2 * CHAR(3),                   /* RESERVED FOR FUTURE USE           04400002
*                                                            @YM05666*/ 04410002
*   2 RWATEST CHAR(8) BDY(WORD),   /* RESERVED FOR TESTING           */ 04450002
*   2 RWAPCCAR (2)PTR(31),         /* REAL ADDRESSES OF PCCA'S FOR      04455055
*                                     CPU 0 - CPU 1          @YM00964*/ 04470002
*   2 RWAPDDF CHAR(16) BDY(WORD),  /* DEFAULT THRESHOLD BLOCK           04472055
*                                     FOR INSTRUCTION PROCESSING        04474055
*                                     DAMAGE EVENTS          @G55CP2P*/ 04476055
*   2 RWASDDF CHAR(16) BDY(WORD),  /* DEFAULT THRESHOLD BLOCK           04478055
*                                     FOR SYSTEM                        04480055
*                                     DAMAGE EVENTS          @G55CP2P*/ 04482055
*   2 RWAIVDF CHAR(16) BDY(WORD),  /* DEFAULT THRESHOLD BLOCK           04484055
*                                     FOR INVALID PSW OR                04486055
*                                     REGISTER EVENTS        @G55CP2P*/ 04488055
*   2 RWATCDF CHAR(16) BDY(WORD),  /* DEFAULT THRESHOLD BLOCK           04490055
*                                     FOR TOD CLOCK DAMAGE              04491055
*                                                    EVENTS  @G55CP2P*/ 04492055
*   2 RWAPTDF CHAR(16) BDY(WORD),  /* DEFAULT THRESHOLD BLOCK           04493055
*                                     FOR CPU TIMER DAMAGE              04494055
*                                                    EVENTS  @G55CP2P*/ 04495055
*   2 RWACCDF CHAR(16) BDY(WORD);  /* DEFAULT THRESHOLD BLOCK           04496055
*                                     FOR CLOCK                         04497055
*                                     COMPARATOR DMG EVENTS  @G55CP2P*/ 04498055
*/*                                                                     04500002
*  END OF MCH RECOVERY WORK AREA                                        04550002
**/                                                                     04600002
./  ADD  SSI=70760294,NAME=IGFTHB
*        %GOTO THB1;          /* BILINGUAL MAPPING MACRO                00050002
         MACRO                                                          00100002
         IGFTHB                                                         00150002
*                             */                                        00160002
*%THB1: ;                                                               00200002
*/********************************************************************* 00250002
*                                                                       00300002
*  MCH THRESHOLD BLOCK                                                  00350002
*                                                                       00360002
*  OS/VS2 RELEASE 2, 11/20/72                                           00370002
*                                                                       00380002
*  METHOD OF ACCESS:                                                    00390002
*                    BAL - DSECT ONLY.  USING ON 'THB' ESTABLISHES      00392002
*                          ADDRESSABILITY.                              00396002
*                                                                       00396402
*                    PL/S - DCL THBPTR PTR                              00398002
*                                                                       00398402
**********************************************************************/ 00398802
*%GOTO THB2; /*                                                         00399202
         SPACE 1                                                        00399602
THB      DSECT                                                          00450002
THBBASE  DS    0CL8 .              BADSE THRESHOLD BLOCK       @G55CP2P 00500055
THBMODE  DS    XL1 .               MODE SWITCHES                        01000002
*                                                                       01010002
THBQUI   EQU   X'80' .             QUIET MODE FLAG                      01050002
THBREC   EQU   X'40' .             RECORD=ALL MODE FLAG                 01100002
THBRCT   EQU   X'20' .             RECORD=N MODE FLAG                   01150002
THBEXT   EQU   X'10' .             EXTENDED THB FLAG           @G55CP2P 01180055
*                                  BITS 4-7 RESERVED FOR FUTURE USE     01210055
*                                                                       01260002
THBCNT   DS    XL3 .               EVENT COUNT FIELD                    01300002
THBENABL DS    XL1 .               BUFFER ENABLE THRESHOLD CT  @G556P2P 01320055
THBTHR   DS    XL3 .               THRESHOLD COUNT FIELD                01340055
*                                                                     * 01500002
THBEXTND DS    0CL8 .              THB ENTENSION (FOR HARD     @G55C52P 01507055
*                                  MACHINE CHECK THRESHOLDS)   @G55C52P 01512055
THBOTIME DS    XL4 .               BEGINNING OF TIMING INTERVL @G55C52P 01517055
         DS    XL1 .               RESERVED FOR FUTURE USE     @G55C52P 01522055
THBNTRVL DS    XL3 .               TIMING INTERVAL LENGTH      @G55C52P 01527055
*                                                                       01542055
*    END OF MCH THRESHOLD BLOCK                                       * 01550002
*                                                                     * 01600002
         MEND                                                           01650002
*        */                                                             01700002
*%THB2: ;                                                               01750002
*                                                                       01800002
* DECLARE                                                               01850002
*  1 THB BASED(THBPTR) BDY(DWORD),                                      01950002
*  2 THBBASE CHAR(8) BDY(DWORD),   /* BASE THRESHOLD BLOCK   @G55CP2P*/ 01960055
*   3 THBMODE BIT(8),              /* MODE SWITCHES                  */ 01970055
*    4 THBQUI BIT(1),              /* QUIET MODE FLAG                */ 02000055
*    4 THBREC BIT(1),              /* RECORD=ALL MODE FLAG           */ 02050055
*    4 THBRCT BIT(1),              /* RECORD=N MODE FLAG             */ 02100055
*    4 THBEXT BIT(1),              /* THB EXTENDED FLAG      @G55CP2P*/ 02180055
*    4 *      BIT(4),              /* RESERVED FOR FUTURE USE        */ 02200055
*   3 THBCNT FIXED(24),            /* EVENT COUNT FIELD              */ 02220055
*   3 THBENABL FIXED(8),           /* BUFFER ENABLE THRESHOLD COUNT     02320055
*                                                            @G556P2P*/ 02350055
*   3 THBTHR FIXED(24),            /* THRESHOLD COUNT FIELD  @G55CP2P*/ 02360055
*   2 THBEXTND CHAR(8) BDY(DWORD), /* THB EXTENSION          @G55CP2P*/ 02370055
*     3 THBOTIME CHAR(4),          /* BEGINNING OF TIMING               02408055
*                                     INTERVAL               @G55CP2P*/ 02416055
*     3 * CHAR(1),                 /* RESERVED FOR FUTURE USE@G55CP2P*/ 02424055
*     3 THBNTRVL FIXED(24);        /* TIMING INTERVAL LENGTH @G55CP2P*/ 02432055
*/*                                                                     02450002
*  END OF MCH THRESHOLD BLOCK                                           02500002
**/                                                                     02550002
./  ADD  SSI=72780097,NAME=IHAABDA
*        %GOTO ABDAPLS;                                              /* 00200002
         MACRO                                                          00600021
         IHAABDA &DSECT=YES                                             00800002
*        */                                                             00820002
*%ABDAPLS: ;                                                            00850002
* /*******************************************************************/ 00900002
* /* MACMEAN ABDA MEANS ABDUMP AREA                                  */ 00950002
* /* MACCOMP Y-1 SC1CM/PZD81                                         */ 00960002
* /* MACSTAT Y-1 73045/Y02705                                        */ 00970002
* /* UPDATED FOR SU 33 12/76 G33SPHW                                 */ 00975033
* /* APAR ZA16374 1/28/77                                            */ 00977033
* /* APAR ZA25122 9/10/77                                            */ 00983043
* /* IHAABDA IS A MAP OF THE WORK AREA USED BY SNAP MODULES. PRIOR   */ 00990002
* /* TO OS/VS2 RELEASE 2, SNAP WAS REFERRED TO AS ABDUMP.            */ 00992002
* /*******************************************************************/ 00994002
*        %GOTO ABDAPPLS;    /*                                          00996002
ABDAREA  DSECT                                                          01000021
         IEZBITS                                                        01050002
ABDTCB   DS    A                       ADDRESS OF TCB FOR TASK          01200021
*                                      TO BE DISPLAYED                  01400021
ABDCTCB  DS    A                       ADDRESS OF CURRENT TCB           01600021
ABDCRB   DS    A                       ADDRESS OF ABDUMPS SVRB          01800021
ABDPARMS DS    0CL24                   COPY OF ABDUMP PARAMETER LIST    01850033
ABDPID   DS    CL1                     USER SUPPLIED ID FOR DUMP        02200021
ABDFLAG  DS    B                       FLAG BYTE                        02400002
APFSNAP  EQU   BIT0                    0=SNAP REQUEST                   02600002
*                                      1=SVC DUMP REQUEST               02800002
APFVS2   EQU   BIT1                    0=OS/VS2 REL.1                   03000002
*                                      1=OS/VS2 REL.2                   03200002
APFENVS2 EQU   BIT2                    1=OS/VS2 ENHANCED SNAP   G33SPHW 03250033
APFABEND EQU   BIT3                    0=ABEND REQUEST                  03600002
*                                      1=SNAP REQUEST                   03800002
APFID    EQU   BIT4                    ID SPECIFIED                     04000002
APFTCB   EQU   BIT5                    TCB ADDRESS SPECIFIED BY USER    04200002
APFSNAPP EQU   BIT6                    STORAGE LIST PROVIDED            04400002
APFHDR   EQU   BIT7                    1=STORAGE HEADER SPECIFIED       04420033
*                                                               G33SPHW 04450033
         DS    H                       RESERVED                         04500002
APFSDATA DS    B                       SDATA OPTIONS                    04550002
APFNUC   EQU   BIT0                    DUMP PSA, NUCLEUS, LSQA, SQA     04560002
APFSQA   EQU   BIT1                    DUMP SQA                         04570002
APFLSQA  EQU   BIT2                    DUMP LSQA                        04580002
APFSWA   EQU   BIT3                    DUMP SWA                         04590002
APFTRACE EQU   BIT4                    INCLUDE TRACE TABLES(SUPERVISOR  04592002
*                                      OR GTF)                          04594002
APFSUPDA EQU   BIT5                    FORMAT CONTROL BLOCKS FOR TASK   04596002
APFQCB   EQU   BIT6                    FORMAT ENQ CONTROL BLOCKS FOR    04598002
*                                      TASK                             04598402
APFDM    EQU   BIT7                    FORMAT DATA MGT CONTROL BLOCKS   04598633
*                                                               G33SPHW 04598833
APFSDAT1 DS    B                       SDATA OPIONS             G33SPHW 04598933
APFIO    EQU   BIT0                    FORMAT IOS CONTROL BLOCKS        04599233
*                                                               G33SPHW 04599333
APFERR   EQU   BIT1                    FORMAT ERROR CONTROL BLKS        04613533
*                                                               G33SPHW 04616533
*        EQU   BIT2                    RESERVED                         04619533
*        EQU   BIT3                    RESERVED                         04639533
*        EQU   BIT4                    RESERVED                         04659533
*        EQU   BIT5                    RESERVED                         04760033
*        EQU   BIT6                    RESERVED                         04765033
*        EQU   BIT7                    RESERVED                         04770033
APFPDATA DS    B                       PDATA OPTIONS                    04780033
APFSAVE  EQU   BIT0                    DISPLAY SAVE AREA TRACE          04786033
APFSAVE2 EQU   BIT1                    0=DISPLAY ENTIRE SAVE AREA       04800002
*                                      1=DISPLAY HEADINGS ONLY          05000021
APFREGS  EQU   BIT2                    DISPLAY REGISTERS ON ENTRY       05200002
*                                      TO SNAP OR ABEND                 05400021
APFLPA   EQU   BIT3                    DISPLAY ACTIVE LPA MODULES       05600002
APFJPA   EQU   BIT4                    DISPLAY JPA MODULES              05800002
APFPSW   EQU   BIT5                    DISPLAY PSW,ILC,INTERRUPT CODE   06000002
APFSPALL EQU   BIT6                    DISPLAY ALL SUBPOOLS             06200002
*                                      LESS THAN SUBPOOL 128            06400021
*        EQU   BIT7                    RESERVED                         06410002
         DS    B                       RESERVED                         06450002
ABDPDCBP DS    A                       ADDRESS OF DCB FOR DUMP          06600021
*                                      DATA SET                         06800021
ABDPTCBP DS    A                       ADDRESS OF TCB TO BE DISPLAYED   07000021
ABDSNAPP DS    A                       ADDRESS OF SNAP LIST             07200021
ABDHDRAD DS    A                       ADDRESS OF HEADER LIST   G33SPHW 07240033
*        DS    CL2                     RESERVED                 ZA25122 07260043
ABDCTR   DS    CL2                     NUMBER OF INDEX ENTRIES  G33SPHW 07280033
ABDINXPT DS    A                       POINTER TO INDEX TABLE   G33SPHW 07300033
ABDTABPT DS    A                       POINTER TO MODULE TABLE  G33SPHW 07320033
ABDPARA  DS    A                       ADDRESS OF USER COPY OF          07400021
*                                      PARAMETER LIST                   07600021
ABDDECB  DS    A                       ADDRESS OF DCB IN SP0 FOR SNAP   09800021
ABDSAVE  DS    A                       ADDRESS OF SAVE AREA FOR USE     10000021
*                                      BY OUTPUT                        10200021
ABDECB   DS    F                       ECB FOR ABDUMP DECB              10400021
ABDTYPE  DS    CL2                     TYPE OF IO REQUEST               10600021
ABDLEN   DS    H                       LENGTH OF RECORD TO BE WRITTEN   10800021
ABDDCB   DS    A                       ADDRESS OF DCB FOR IO            11000021
ABDPTR   DS    A                       ADDRESS OF BUFFER TO BE WRITTEN  11200021
ABDIOBP  DS    A                       ADDRESS OF IOB                   11400021
ABDLCTR  DS    H                       LINE COUNTER                     11600021
ABDPCTR  DS    H                       PAGE COUNTER                     11800021
ABDPTRS  DS    0CL12                   BLOCKING BUFFER POINTERS         12000021
ABDPTRS1 DS    A                       START OF BUFFER                  12200021
ABDPTRS2 DS    A                       NEXT AVAILABLE BYTE OF BUFFER    12400021
ABDPTRS3 DS    A                       END OF BUFFER                    12600021
ABDCP    DS    A                       ADDRESS OF CURRENT TRACE TABLE   12800021
*                                      ENTRY IN GETMAINED USER CORE     13000021
*                                      AFTER MOVE OF TRACE TABLE        13200021
ABDFP    DS    A                       ADDRESS OF FIRST TRACE ENTRY     13400021
ABDLP    DS    A                       ADDRESS OF LAST TRACE ENTRY      13600021
ABDCP1   DS    A                       ADDRESS OF CURRENT TRACE TABLE   13800021
*                                      ENTRY IN GETMAINED USER CORE     14000021
*                                      BEFORE MOVE OF TRACE TABLE       14200021
ABDUPRXT DS    A                       ADDRESS OF SPECIFIC EXIT ROUTINE 14400021
*                                      IF UPR EXPECTED, OR ZERO         14600021
ABDRESV3 DS    CL4                     RESERVED                G33SPHW  14620033
ABDWORK1 DS    D                       CONVERT TO DECIMAL WORK AREA     14650002
ABDPGWK  DS    D                       INDEX WORKAREA          G33SPHW  14700033
ABDFLAG1 DS    B                       FLAG BYTE                        14800021
ABDQCBHD EQU   BIT0                    QUEUE CONTROL BLOCK HEADER HAS   15000002
*                                      BEEN PRINTED                     15200021
ABDQCBMJ EQU   BIT1                    MAJOR QCB HAS BEEN PRINTED       15400002
ABDQCBMN EQU   BIT2                    MINOR QCB HAS BEEN PRINTED       15600002
ABDLSTHD EQU   BIT3                    THE STORAGE LIST HEADING LINE    15800002
*                                      HAS BEEN PRINTED                 16000021
ABDSQSDM EQU   BIT4                    SQS HAS BEEN DUMPED              16200002
ABDSVCHD EQU   BIT5                    THE SVC HEADING LINE HAS         16400002
*                                      BEEN PRINTED                     16600021
ABDSPHD  EQU   BIT6                    THE SUBPOOL HEADER HAS BEEN      16800002
*                                      PRINTED                          17000021
*                                                                       17050033
ABDIDX   EQU   BIT7                    INDEX PROCESSING ACTIVE  G33SPHW 17100033
ABDFLAG2 DS    B                       FLAG BYTE                        17250002
ABDSUPER EQU   BIT0                    SUPERVISOR TRACE TO BE PROVIDED  17300002
ABDGTF   EQU   BIT1                    GTF TRACE TO BE PROVIDED         17350002
ABDTRBIT EQU   BIT2                    0=CORE FREED FOR SUPER TRACE     17400002
*                                      1=CORE ALLOCATED FOR SUPER TRACE 17450002
ABDTRNAV EQU   BIT3                    SUPER TRACE NOT AVAILABLE        17500002
ABDGTFCL EQU   BIT4                    IEAVAD08 ENTERED FOR GTF         17510002
ABDSWAP  EQU   BIT5                    USED BY IEAVAD0D TO DETERMINE    17520002
*                                      OWNERSHIP OF SWA SUBPOOLS        17530002
ABDSTAT  EQU   BIT6                    INDICATE STATUS ISSUED           17540002
ABDLSQA  EQU   BIT7                    IEAVAD0E ENTERED FOR SP229/230   17542033
ABDKEY   DS    B                       SAVE KEY FOR MODESET             17550002
ABDRES1  DS    B                       DISPLAY FLAGS           G33SPHW  17555033
ABDPSW   EQU   BIT0                    DISPLAY PSW             G33SPHW  17560033
ABDREGS  EQU   BIT1                    DISPLAY REGISTERS       G33SPHW  17610033
ABDOLSQA EQU   BIT2                    DISPLAY LSQA IEAVAD0A   G33SPHW  17660033
ABDSQA   EQU   BIT3                    DISPLAY SQA IEAVAD0A    G33SPHW  17710033
ABDFMTLD EQU   BIT4                    FORMATTER LOADED        G33SPHW  17760033
ABDPGHD  EQU   BIT5                    SKIP LINE AFTER HEADER  G33SPHW  17810033
ABDTRSV  EQU   BIT6                    SNAP OBTAINED TRACE COPY         17860033
*                                                              ZM45190  17910033
ABDWORK  DS    CL48                    GENERAL WORK AREA                18000021
ABDSSPAR DS    CL56                    WORKAREA FOR BUILDING PARAMETER  18200002
*                                      LISTS TO SUBSYSTEMS AND          18400021
*                                      FORMATTING ROUTINES OF OTHER     18600021
*                                      COMPONENTS                       18800021
ABDBPTR  DS    A                       ADDRESS OF CONTROL BLOCK TO      19000021
*                                      BE FORMATTED                     19200021
ABDLLINE DS    A                       ADDRESS OF LAYOUT LINE           19400021
ABDLPTR  DS    A                       ADDRESS OF NEXT AVAILABLE BYTE   19600021
*                                      OF ABDLINE                       19800021
ABDFMTWK DS    CL9                     WORK AREA FOR FORMAT SUBROUTINE  20000021
ABDUPRF  DS    B                       UNDEFINED PAGE REFERENCE FLAGS   20200021
UPRFMAT  EQU   BIT0                    UPR EXPECTED ON THIS CALL TO     20250033
*                                      FORMAT OR FORMAT01 SUBROUTINE    20600021
*                                                            @ZA15300   20650033
UPRFMET  EQU   BIT1                    UPR EXPECTED ON THIS CALL TO     20800002
*                                      FORMET                           21000021
UPRFMT20 EQU   BIT2                    UPR EXPECTED ON THIS CALL TO     21200002
*                                      FORMAT20 OR FORMAT22             21400021
ABDUPRFN DS    B                       ACTION REQUESTED BY CALLER IF    21600021
*                                      UPR ENCOUNTERED IN FORMET        21800021
ABDUPRPM EQU   BIT0                    PRINT A MESSAGE SPECIFYING       22000002
*                                      LOCATIONS X TO Y UNDEFINED,AND   22200021
*                                      CONTINUE WITH NEXT VALID PAGE    22400021
*                                      UNTIL COUNT RUNS OUT             22600021
ABDUPRSL EQU   BIT1                    SKIP A LINE AND FIND THE NEXT    22800002
*                                      VALID PAGE TO PRINT UNTIL        23000021
*                                      COUNT RUNS OUT.  IF ABDUPRPM AND 23200021
*                                      ABDUPRSL ARE BOTH 0, DISCONTINUE 23400021
*                                      PRINTING AND RETURN TO CALLER    23600021
ABDBLNKS DS    B                       BLANK CONTROL                    23800021
ABDBLKN3 EQU   BIT0                    IF ABDBLKN3=0 FORMAT01 WILL      24000002
*                                      PUT 3 BLANKS BETWEEN THE END OF  24200021
*                                      ONE FIELD AND THE BEGINNING      24400021
*                                      OF THE NEXT LABEL.IF ABDBLKN3=1  24600021
*                                      THE NUMBER OF BLANKS SPECIFIED   24800021
*                                      IN BITS 4 TO 7 WILL BE PLACED    25000021
*                                      BETWEEN THE END OF ONE FIELD AND 25200021
*                                      THE BEGINNING OF THE NEXT LABEL  25400021
ABDSTAD  DS    A                       LOCATION COUNTER FOR FORMAT20,   25600021
*                                      USED AS A WORK CELL BY FORMET    25800021
ABDBLOCK DS    A                       ADDRESS OF BLOCK OF STORAGE TO   26000021
*                                      BE DUMPED                        26200021
ABDLENTH DS    F                       NUMBER OF BYTES OF STORAGE TO    26400021
*                                      BE DUMPED                        26600021
ABDSIZE  DS    F                       USED TO SAVE SIZE OF BLOCK       26800021
ABDIND   DS    H                       INDENTATION FACTOR FOR FIRST     27000021
*                                      LINE TO BE PRINTED               27200021
ABDIDENT DS    H                       NUMBER OF IDENTICAL LINES        27400021
*                                      ENCOUNTERED                      27600021
ABDFWORK DS    A                       WORK CELL FOR FORMET ROUTINE     27800021
ABDINCPL DS    H                       LENGTH OF INCOMPLETE LINE        28000021
ABDLLNGH DS    B                       LENGTH OF THE PRINT LINE Z40MPXH 28050040
ABDPCAP  DS    B                       MAXIMUM LINES PER PAGE   Z40MPXH 28100040
ABDUPRID DS    A                       RETURN ADDRESS FOR IDENTICAL     28400021
*                                      LINE PROCESSING IN FORMET        28600021
ABDSTADS DS    A                       SAVE AREA FOR OLD VALUE OF       28800021
*                                      ABDSTAD                          29000021
ABSLCTSV DS    A                       SAVE AREA FOR OLD VALUE OF       29200021
*                                      LINES TO BE PRINTED              29400021
ABDBUFFS DS    0CL8                                                     29450002
ABDBUFAD DS    A                       ADDR OF OUTPUT BUFFER            29500002
ABDBUFS2 DS    F                       SIZE OF OUTPUT BUFFER            29550002
ABDGMA   DS    0CL16                   WORK AREA FOR BUILDING           29600002
*                                      CONDITIONAL GETMAIN LISTS        29800021
ABDAAREA DS    A                       PDINTER TO ACQUIRED AREA         29850002
ABDASIZE DS    F                       SIZE OF ACQUIRED AREA            29900002
ABDPAREA DS    A                       ADDRESS OF ABDAAREA              29950002
ABDCDID  DS    CL2                     CODE AND SUBPOOL ID              29960002
         DS    H                       UNUSED                           29970002
ABDSVCB  DS    A                       BASE FOR SVC 51                  29972002
ABDRTRN  DS    A                       ADDRESS OF SVC 51                29980002
ESPARM   DS    0CL28                   ESTAE PARAMLIST                  29985033
ESBSREG  DS    A                       BASE REG FOR IEAVAD01            29992002
ESBSREG2 DS    A                       SECOND BASE REG FOR IEAVAD01     29992633
*                                                              G33SPHW  29993233
ESAUTOP  DS    A                       ADDR OF AUTOMATIC DATA           29994002
EABDAREA DS    A                       ADDR OF SNAP WORK AREA           29996002
EMODNAME DS    CL8                     MODULE NAME             G33SPHW  29997033
ERESTART DS    A                       RESTART ADDR.                    29998402
ESTAEFLG DS    B                       FLAG BYTE                        29998802
ESUBSYT  EQU   BIT0                    1=SUBSYSTEM RTN. IN CNTRL        29999202
ETCB     EQU   BIT1                    1=TCB VALIDITY CHECK IN PROGRESS 29999602
EDCB     EQU   BIT2                    1=DCB VALIDITY CHECK IN PROGRESS 29999702
         DS    CL3                     RESERVED                         29999802
ABDLCNT  DS    F                       COUNT OF COMPLETE LINES  Z40MPXH 29999940
ABDPHY   DS    H                       BUFFER DESCRIPTOR LENGTH Z40MPXH 30003940
ABDSRC1  DS    H                       SYSTEM RESERVED CHARS    Z40MPXH 30007940
ABDLOG   DS    H                       RECORD DESCRIPTOR LENGTH Z40MPXH 30011940
ABDSRC2  DS    H                       SYSTEM RESERVED CHARS    Z40MPXH 30015940
ABDLINEA DS    0CL205                  205 CHARACTER REFERENCE FOR      30026040
*                                      ABDCC+ABDLINE            Z40MPXH 30030040
ABDCC    DS    CL1                     CARRIAGE CONTROL CHARACTER       30060040
ABDLINE  DS    CL204                   PRINT LINE FOR OUTPUT    Z40MPXH 30090040
ABDPADC  DS    CL3                     RESERVED CHARACTERS FOR UNPACK   30097040
*                                      TO END OF ABDLINE        Z40MPXH 30104040
ABDSAVHD DS    CL80                    SAVED HEADING USED TO SAVE A     30108033
*                                      A COPY OF SAVED HEADER PUT ON    30112033
*                                      TOP OF EACH PAGE OF DUMP G33SPHW 30116033
ABDSAVE1 DS    A                       ADDRESS OF SAVE AREA FOR USE     30117033
*                                      BY OUTPUT                ZA16374 30118033
ABDTRLN  DS    CL4                     LENGTH OF SAVED TRACE    ZA25122 30119043
         MEND  , */                                                     30120040
*%ABDAPPLS :  ;                                                         30200002
*%IF QZR ¬= ' ' %THEN                                                   30250002
*%ABD9999=',';                                                          30300002
*%ELSE                                                                  30350002
*%ABD9999=';';                                                          30360002
*DECLARE                                                                30400021
*  1 ABDAREA  BASED(ABDARPTR) BDY(DWORD),                               30600021
*   2 ABDTCB      PTR(31),               /* ADDRESS OF TCB FOR TASK     30800021
*                                           TO BE DISPLAYED          */ 31000021
*   2 ABDCTCB     PTR(31),               /* ADDRESS OF CURRENT TCB   */ 31200021
*   2 ABDCRB      PTR(31),               /* ADDRESS OF ABDUMPS SVRB  */ 31400021
*   2 ABDPARMS            ,              /* COPY OF ABDUMP PARAMETER    31600002
*                                           LIST                     */ 31800021
*    3 ABDPID      CHAR(1),              /* USER SUPPLIED ID FOR        32000021
*                                           DUMP                     */ 32200021
*    3 ABDFLAG     CHAR(1),              /* FLAG BYTE                */ 32400002
*     4 APFSNAP  BIT(1),                 /* 0=SNAP REQUEST              32600002
*                                           1=SVC DUMP REQUEST       */ 32650002
*     4 APFVS2   BIT(1),                 /* 0=OS/VS2 REL.1              32800002
*                                           1=OS/VS2 REL.2           */ 32850002
*     4 APFENVS2 BIT(1),                 /* 1=OS/VS2 ENHANCED SNAP      32900033
*                                                            @G33SPHW*/ 32950033
*     4 APFABEND BIT(1),                 /* 0=ABEND REQUEST             33400002
*                                           1=SNAP REQUEST           */ 33600002
*     4 APFID    BIT(1),                 /* ID SPECIFIED             */ 33650002
*     4 APFTCB   BIT(1),                 /* TCB ADDRESS SPECIFIED BY    33800002
*                                           USER                     */ 34000002
*     4 APFSNAPP BIT(1),                 /* STORAGE LIST PROVIDED    */ 34200002
*     4 APFHDR   BIT(1),                 /* 1=STORAGE HEADER            34250033
*                                           SPECIFIED        @G33SPHW*/ 34400033
*    3 *           CHAR(2),              /* RESERVED                 */ 34600002
*    3 APFSDATA    BIT(8),               /* SDATA OPTIONS            */ 34800002
*     4 APFNUC   BIT(1),                 /* DUMP PSA, NUCLEUS, LSQA     34850002
*                                           SQA                      */ 34900002
*     4 APFSQA BIT(1),                   /* DUMP SQA                 */ 34910002
*     4 APFLSQA  BIT(1),                 /* DUMP LSQA                */ 34950002
*     4 APFSWA   BIT(1),                 /* DUMP SWA                 */ 35000002
*     4 APFTRACE BIT(1),                 /* INCLUDE TRACE TABLE         35050002
*                                           (SUPERVISOR OR GTF)      */ 35100002
*     4 APFSUPDA BIT(1),                 /* FORMAT CONTROL BLOCKS FOR   35150002
*                                           TASK                     */ 35160002
*     4 APFQCB   BIT(1),                 /* FORMAT ENQ CONTROL BLOCKS   35170002
*                                           FOR TASK                 */ 35180002
*     4 APFDM    BIT(1),                 /* FORMAT DATA MGT CONTROL     35185033
*                                           BLOCKS           @G33SPHW*/ 35190033
*    3 APFSDAT1 BIT(8),                  /* SDATA OPTIONS    @G33SPHW*/ 35190133
*     4 APFIO   BIT(1),                  /* FORMAT DATA MGT CONTROL     35190433
*                                           BLOCKS           @G33SPHW*/ 35190633
*     4 APFERR  BIT(1),                  /* FORMAT ERROR CONTROL        35190833
*                                           BLOCKS           @G33SPHW*/ 35191033
*     4 *       BIT(6),                  /* RESERVED                 */ 35191233
*    3 APFPDATA BIT(8),                  /* PDATA OPTIONS            */ 35200002
*     4 APFSAVE  BIT(1),                 /* DISPLAY SAVE AREA TRACE  */ 35400021
*     4 APFSAVE2 BIT(1),                 /* 0=DISPLAY ENTIRE SAVE       35600021
*                                           AREA  1=DISPLAY HEADINGS    35800021
*                                           ONLY                     */ 36000021
*     4 APFREGS  BIT(1),                 /* DISPLAY REGISTERS ON        36200021
*                                           ENTRY  TO SNAP OR ABEND  */ 36400021
*     4 APFLPA   BIT(1),                 /* DISPLAY ACTIVE LPA          36600021
*                                           MODULES                  */ 36800021
*     4 APFJPA   BIT(1),                 /* DISPLAY JPA MODULES      */ 37000021
*     4 APFPSW   BIT(1),                 /* DISPLAY                     37200021
*                                           PSW,ILC,INTERRUPT CODE   */ 37400021
*     4 APFSPALL BIT(1),                 /* DISPLAY ALL SUBPOOLS        37600021
*                                           LESS THAN SUBPOOL 128    */ 37800021
*     4 *        BIT(1),                 /* RESERVED                 */ 38000021
*    3 *           BIT(8),               /* RESERVED                 */ 38050002
*    3 ABDPDCBP    PTR(31),              /* ADDRESS OF DCB FOR DUMP     38200021
*                                           DATA SET                 */ 38400021
*    3 ABDPTCBP    PTR(31),              /* ADDRESS OF TCB TO BE        38600021
*                                           DISPLAYED                */ 38800021
*    3 ABDSNAPP    PTR(31),              /* ADDRESS OF SNAP LIST     */ 39000021
*    3 ABDHDRAD    PTR(31),              /* ADDRESS OF HEADER LIST      39020033
*                                                            @G33SPHW*/ 39040033
*   2 *    FIXED(15),             /* RESERVED                @ZA25122*/ 39140043
*  2 ABDCTR FIXED(15),            /* NUMBER OF INDEX ENTRIES @G33SPHW*/ 39170033
*  2 ABDINXPT  PTR(31),           /* POINTER TO INDEX TABLE  @G33SPHW*/ 39180033
*   2 ABDTABPT PTR(31),           /* POINTER TO MODULE TABLE @G33SPHW*/ 39190033
*   2 ABDPARA     PTR(31),               /* ADDRESS OF USER COPY OF     39200021
*                                           PARAMETER LIST           */ 39400021
*   2 ABDDECB     PTR(31),               /* ADDRESS OF DCB IN SP0       42400021
*                                           FOR SNAP                 */ 42600021
*   2 ABDSAVE     PTR(31),               /* ADDRESS OF SAVE AREA FOR    42800021
*                                           USE  BY OUTPUT           */ 43000021
*   2 ABDECB      FIXED(31),             /* ECB FOR ABDUMP DECB      */ 43200021
*   2 ABDTYPE     CHAR(2),               /* TYPE OF IO REQUEST       */ 43400021
*   2 ABDLEN      FIXED(15),             /* LENGTH OF RECORD TO BE      43600021
*                                           WRITTEN                  */ 43800021
*   2 ABDDCB      PTR(31),               /* ADDRESS OF DCB FOR IO    */ 44000021
*   2 ABDPTR      PTR(31),               /* ADDRESS OF BUFFER TO BE     44200021
*                                           WRITTEN                  */ 44400021
*   2 ABDIOBP     PTR(31),               /* ADDRESS OF IOB           */ 44600021
*   2 ABDLCTR     FIXED(15),             /* LINE COUNTER             */ 44800021
*   2 ABDPCTR     FIXED(15),             /* PAGE COUNTER             */ 45000021
*   2 ABDPTRS             ,              /* BLOCKING BUFFER POINTERS */ 45200002
*    3 ABDPTRS1    PTR(31),              /* START OF BUFFER          */ 45400021
*    3 ABDPTRS2    PTR(31),              /* NEXT AVAILABLE BYTE OF      45600021
*                                           BUFFER                   */ 45800021
*    3 ABDPTRS3    PTR(31),              /* END OF BUFFER            */ 46000021
*   2 ABDCP       PTR(31),               /* ADDRESS OF CURRENT TRACE    46200021
*                                           TABLE  ENTRY IN             46400021
*                                           GETMAINED USER CORE         46600021
*                                           AFTER MOVE OF TRACE         46800021
*                                           TABLE                    */ 47000021
*   2 ABDFP       PTR(31),               /* ADDRESS OF FIRST TRACE      47200021
*                                           ENTRY                    */ 47400021
*   2 ABDLP       PTR(31),               /* ADDRESS OF LAST TRACE       47600021
*                                           ENTRY                    */ 47800021
*   2 ABDCP1      PTR(31),               /* ADDRESS OF CURRENT TRACE    48000021
*                                           TABLE  ENTRY IN             48200021
*                                           GETMAINED USER CORE         48400021
*                                           BEFORE MOVE OF TRACE        48600021
*                                           TABLE                    */ 48800021
*   2 ABDUPRXT    PTR(31),               /* ADDRESS OF SPECIFIC EXIT    49000021
*                                           ROUTINE IF UPR EXPECTED,    49200021
*                                           OR ZERO                  */ 49400021
*   2 ABDRESV3 CHAR(4),                  /* RESERVED         @G33SPHW*/ 49420033
*   2 ABDWORK1 CHAR(8) BDY(DWORD),       /* CONVERT TO DECIMAL WORK     49450002
*                                           AREA                     */ 49550002
*   2 ABDPGWK  CHAR(8) BDY(DWORD),       /* INDEX WORKAREA   @G33SPHW*/ 49570033
*   2 ABDFLAG1    CHAR(1),               /* FLAG BYTE                */ 49600021
*    3 ABDQCBHD BIT(1),                  /* QUEUE CONTROL BLOCK         49800021
*                                           HEADER HAS  BEEN PRINTED */ 50000021
*    3 ABDQCBMJ BIT(1),                  /* MAJOR QCB HAS BEEN          50200021
*                                           PRINTED                  */ 50400021
*    3 ABDQCBMN BIT(1),                  /* MINOR QCB HAS BEEN          50600021
*                                           PRINTED                  */ 50800021
*    3 ABDLSTHD BIT(1),                  /* THE STORAGE LIST HEADING    51000021
*                                           LINE  HAS BEEN PRINTED   */ 51200021
*    3 ABDSQSDM BIT(1),                  /* SQS HAS BEEN DUMPED      */ 51400021
*    3 ABDSVCHD BIT(1),                  /* THE SVC HEADING LINE HAS    51600021
*                                           BEEN PRINTED             */ 51800021
*    3 ABDSPHD  BIT(1),                  /* THE SUBPOOL HEADER HAS      52000021
*                                           BEEN  PRINTED            */ 52200021
*    3 ABDIDX   BIT(1),                  /* INDEX PROCESSING ACTIVE     52250033
*                                                            @G33SPHW*/ 52400033
*   2 ABDFLAG2     CHAR(1),              /* FLAG BYTE                */ 52600002
*    3 ABDSUPER BIT(1),                  /* SUPERVISOR TRACE TO BE      52800002
*                                           PROVIDED                 */ 52850002
*    3 ABDGTF   BIT(1),                  /* GTF TRACE TO BE PROVIDED */ 52900002
*    3 ABDTRBIT BIT(1),                  /* 0=CORE FREED FOR SUPER      52950002
*                                             TRACE                     52960002
*                                           1=CORE ALLOCATED FOR        52970002
*                                             SUPER TRACE            */ 52980002
*    3 ABDTRNAV BIT(1),                  /* SUPER TRACE NOT AVAILABLE*/ 52990002
*    3 ABDGTFCL BIT(1),                  /* IEAVAD08 ENTERED FOR GTF */ 52990402
*    3 ABDSWAP  BIT(1),                  /* USED BY IEAVAD0D TO         52990802
*                                           DETERMINE OWNERSHIP OF      52991002
*                                           SWA SUBPOOLS             */ 52991202
*    3 ABDSTAT  BIT(1),                  /* INDICATE STATUS ISSUED   */ 52991402
*    3 ABDLSQA BIT(1),                   /* IEAVAD0E ENTERED FOR        52991533
*                                           SP229/230                */ 52991802
*   2 ABDKEY       CHAR(1),              /* SAVE KEY FOR MODESET     */ 52992002
*   2 ABDRES1      CHAR(1),              /* DISPLAY FLAGS    @G33SPHW*/ 52993033
*     3 ABDPSW  BIT(1),                  /* DISPLAY PSW      @G33SPHW*/ 52994033
*     3 ABDREGS BIT(1),                  /* DISPLAY REGS     @G33SPHW*/ 53044033
*     3 ABDOLSQA BIT(1),                 /* DISPLAY LSQA     @G33SPHW*/ 53054033
*     3 ABDSQA BIT(1),                   /* DISPLAY SQA      @G33SPHW*/ 53064033
*     3 ABDFMTLD BIT(1),                 /* FORMATTER LOADED @G33SPHW*/ 53074033
*     3 ABDPGHD  BIT(1),                 /* HEADER PRINTED   @G33SPHW*/ 53084033
*     3 ABDTRSV  BIT(1),                 /* SNAP OBTAINED TRACE COPY    53086033
*                                                            @ZM45190*/ 53088033
*     3 *    BIT(1),                     /* RESERVED         @ZM45190*/ 53090033
*   2 ABDWORK     CHAR(48),              /* GENERAL WORK AREA        */ 53400021
*   2 ABDSSPAR    CHAR(56),              /* WORKAREA FOR BUILDING       53600002
*                                           PARAMETER  LISTS TO         53800021
*                                           SUBSYSTEMS AND              54000021
*                                           FORMATTING ROUTINES OF      54200021
*                                           OTHER  COMPONENTS        */ 54400021
*   2 ABDBPTR     PTR(31),               /* ADDRESS OF CONTROL BLOCK    54600021
*                                           TO  BE FORMATTED         */ 54800021
*   2 ABDLLINE    PTR(31),               /* ADDRESS OF LAYOUT LINE   */ 55000021
*   2 ABDLPTR     PTR(31),               /* ADDRESS OF NEXT             55200021
*                                           AVAILABLE BYTE  OF          55400021
*                                           ABDLINE                  */ 55600021
*   2 ABDFMTWK    CHAR(9),               /* WORK AREA FOR FORMAT        55800021
*                                           SUBROUTINE               */ 56000021
*   2 ABDUPRF     CHAR(1),               /* UNDEFINED PAGE REFERENCE    56200021
*                                           FLAGS                    */ 56400021
*    3 UPRFMAT  BIT(1),                  /* UPR EXPECTED ON THIS        56600021
*                                           CALL TO  FORMAT OR          56800021
*                                           FORMAT01 SUBROUTINE      */ 57000021
*    3 UPRFMET  BIT(1),                  /* UPR EXPECTED ON THIS        57200021
*                                           CALL TO  FORMET          */ 57400021
*    3 UPRFMT20 BIT(1),                  /* UPR EXPECTED ON THIS        57600021
*                                           CALL TO  FORMAT20 OR        57800021
*                                           FORMAT22                 */ 58000021
*    3 *        BIT(1),                  /* RESERVED                 */ 58200021
*    3 *        BIT(1),                  /* RESERVED                 */ 58400021
*    3 *        BIT(1),                  /* RESERVED                 */ 58600021
*    3 *        BIT(1),                  /* RESERVED                 */ 58800021
*    3 *        BIT(1),                  /* RESERVED                 */ 59000021
*   2 ABDUPRFN    CHAR(1),               /* ACTION REQUESTED BY         59200021
*                                           CALLER IF  UPR              59400021
*                                           ENCOUNTERED IN FORMET    */ 59600021
*    3 ABDUPRPM BIT(1),                  /* PRINT A MESSAGE             59800021
*                                           SPECIFYING  LOCATIONS X     60000021
*                                           TO Y UNDEFINED,AND          60200021
*                                           CONTINUE WITH NEXT VALID    60400021
*                                           PAGE  UNTIL COUNT RUNS      60600021
*                                           OUT                      */ 60800021
*    3 ABDUPRSL BIT(1),                  /* SKIP A LINE AND FIND THE    61000021
*                                           NEXT  VALID PAGE TO         61200021
*                                           PRINT UNTIL  COUNT RUNS     61400021
*                                           OUT. IF ABDUPRPM AND        61600021
*                                           ABDUPRSL ARE BOTH 0,        61800021
*                                           DISCONTINUE PRINTING AND    62000021
*                                           RETURN TO CALLER         */ 62200021
*    3 *        BIT(1),                  /* RESERVED                 */ 62400021
*    3 *        BIT(1),                  /* RESERVED                 */ 62600021
*    3 *        BIT(1),                  /* RESERVED                 */ 62800021
*    3 *        BIT(1),                  /* RESERVED                 */ 63000021
*    3 *        BIT(1),                  /* RESERVED                 */ 63200021
*    3 *        BIT(1),                  /* RESERVED                 */ 63400021
*   2 ABDBLNKS    CHAR(1),               /* BLANK CONTROL            */ 63600021
*    3 ABDBLKN3 BIT(1),                  /* IF ABDBLKN3=0 FORMAT01      63800021
*                                           WILL  PUT 3 BLANKS          64000021
*                                           BETWEEN THE END OF  ONE     64200021
*                                           FIELD AND THE BEGINNING     64400021
*                                           OF THE NEXT LABEL.IF        64600021
*                                           ABDBLKN3=1  THE NUMBER      64800021
*                                           OF BLANKS SPECIFIED  IN     65000021
*                                           BITS 4 TO 7 WILL BE         65200021
*                                           PLACED  BETWEEN THE END     65400021
*                                           OF ONE FIELD AND THE        65600021
*                                           BEGINNING OF THE NEXT       65800021
*                                           LABEL                    */ 66000021
*    3 *        BIT(1),                  /* RESERVED                 */ 66200021
*    3 *        BIT(1),                  /* RESERVED                 */ 66400021
*    3 *        BIT(1),                  /* RESERVED                 */ 66600021
*    3 *        BIT(1),                  /* RESERVED                 */ 66800021
*    3 *        BIT(1),                  /* RESERVED                 */ 67000021
*    3 *        BIT(1),                  /* RESERVED                 */ 67200021
*    3 *        BIT(1),                  /* RESERVED                 */ 67400021
*   2 ABDSTAD     PTR(31),               /* LOCATION COUNTER FOR        67600021
*                                           FORMAT20,  USED AS A        67800021
*                                           WORK CELL BY FORMET      */ 68000021
*   2 ABDBLOCK    PTR(31),               /* ADDRESS OF BLOCK OF         68200021
*                                           STORAGE TO  BE DUMPED    */ 68400021
*   2 ABDLENTH    FIXED(31),             /* NUMBER OF BYTES OF          68600021
*                                           STORAGE TO  BE DUMPED    */ 68800021
*   2 ABDSIZE     FIXED(31),             /* USED TO SAVE SIZE OF        69000021
*                                           BLOCK                    */ 69200021
*   2 ABDIND      FIXED(15),             /* INDENTATION FACTOR FOR      69400021
*                                           FIRST  LINE TO BE           69600021
*                                           PRINTED                  */ 69800021
*   2 ABDIDENT    FIXED(15),             /* NUMBER OF IDENTICAL         70000021
*                                           LINES   ENCOUNTERED      */ 70200021
*   2 ABDFWORK    PTR(31),               /* WORK CELL FOR FORMET        70400021
*                                           ROUTINE                  */ 70600021
*   2 ABDINCPL    FIXED(15),             /* LENGTH OF INCOMPLETE        70800021
*                                           LINE                     */ 71000021
*   2 ABDLLNGH    FIXED(8),              /* PRINT LINE LENGTH@Z40MPXH*/ 71050040
*   2 ABDPCAP     FIXED(8),              /* LINES PER PAGE  @Z40MPXH*/  71100040
*   2 ABDUPRID    PTR(31),               /* RETURN ADDRESS FOR          71400021
*                                           IDENTICAL  LINE             71600021
*                                           PROCESSING IN FORMET     */ 71800021
*   2 ABDSTADS    PTR(31),               /* SAVE AREA FOR OLD VALUE     72000021
*                                           OF  ABDSTAD              */ 72200021
*   2 ABSLCTSV    PTR(31),               /* SAVE AREA FOR OLD VALUE     72400021
*                                           OF  LINES TO BE PRINTED  */ 72410002
*   2 ABDBUFFS           ,                                              72450002
*    3 ABDBUFAD PTR(31),                 /* ADDR OF OUTPUT BUFFER    */ 72500002
*    3 ABDBUFSZ FIXED(31),               /* SIZE OF OUTPUT BUFFER    */ 72550002
*   2 ABDGMA             ,               /* WORK AREA FOR BUILDING      72800002
*                                           CONDITIONAL GETMAIN         73000021
*                                           LISTS                    */ 73200021
*    3 ABDAAREA PTR(31),                 /* POINTER TO ACQUIRED AREA */ 73250002
*    3 ABDASIZE FIXED(31),               /* SIZE OF ACQUIRED AREA    */ 73300002
*    3 ABDPAREA PTR(31),                 /* ADDRESS OF ABDAAREA      */ 73350002
*    3 ABDCDID  CHAR(2),                 /* CODE AND SUBPOOL ID      */ 73400002
*    3 *        CHAR(2),                 /* UNUSED                   */ 73450002
*   2 ABDSVCB  PTR(31),                  /* BASE FOR SVC 51          */ 73500002
*   2 ABDRTRN  PTR(31),                  /* ADDRESS OF SVC 51        */ 73550002
*   2 ESPARM,                            /* ESTAE PARMLIST           */ 73600002
*    3 ESBSREG PTR(31),                  /* BASE REG FOR IEAVAD01    */ 73600102
*    3 ESBSREG2 PTR(31),                 /* SECOND BASE REG FOR         73600433
*                                           IEAVAD01         @G33SPHW*/ 73600733
*    3 ESAUTOP PTR(31),                  /* ADDR OF AUTOMATIC DATA   */ 73601033
*    3 EABDAREA PTR(31),                 /* ADDR OF SNAP WORK AREA   */ 73601133
*    3 EMODNAME CHAR(8),                 /* MODULE NAME      @G33SPHW*/ 73601333
*    3 ERESTART PTR(31),                 /* RESTART ADDR             */ 73605102
*    3 ESTAEFLG CHAR(1),                 /* FLAGS BYTE               */ 73605502
*     4 ESUBSYT BIT(1),                  /* 1=SUBSYSTEM RTN IN CNTRL */ 73605902
*     4 ETCB BIT(1),                     /* 1=TCB VALIDITY CHECK IN     73606902
*                                             PROGRESS               */ 73608902
*     4 EDCB BIT(1),                     /* 1=DCB VALIDITY CHECK IN     73611502
*                                                 PROGRESS           */ 73613502
*     4 *    BIT(5),                     /* RESERVED                 */ 73613902
*    3 *     CHAR(3),                    /* RESERVED         @Z40MPXH*/ 73614340
*   2 ABDLCNT   PTR(31),                 /* COUNT OF CONPLETE LINES     73614440
*                                                            @Z40MPXH*/ 73614540
*   2 ABDPHY    FIXED(15),               /* BUFFER DESCRIPTOR           73614640
*                                           LENGTH           @Z40MPXH*/ 73614740
*   2 ABDSRC1   FIXED(15),               /* SYSTEM RESERVED             73614840
*                                           CHARACTERS       @Z40MPXH*/ 73614940
*   2 ABDLOG    FIXED(15),               /* RECORD DESCRIPTOR           73615040
*                                           LENGTH           @Z40MPXH*/ 73615140
*   2 ABDSRC2   FIXED(15),               /* SYSTEM RESERVED             73615240
*                                           CHARACTERS       @Z40MPXH*/ 73615340
*   2 ABDLINEA   CHAR(205),              /* 205 CHARACTER REFERENCE FOR 73615440
*                                           ABDCC+ABDLINE    @Z40MPXH*/ 73615540
*    3 ABDCC     CHAR(1),                /* CHARRIAGE CONTROL@Z40MPXH*/ 73615640
*    3 ABDLINE   CHAR(204),              /* PRINT LINE FOR              73615740
*                                           OUTPUT           @Z40MPXH*/ 73615840
*  2 ABDPADC     CHAR(3),               /* RESERVED CHARACTERS FOR      73616033
*                                           UNPACKING TO END OF         73616540
*                                           ABDLINE          @Z40MPXH*/ 73616740
*  2 ABDSAVHD    CHAR(80),              /* SAVED HEADING USED TO SAVE   73616933
*                                          HEADER PUT ON TOP OF EACH    73617733
*                                          PAGE OF DUMP      @ZA16374*/ 73618133
*   2 ABDSAVE1    PTR(31),               /* ADDRESS OF SAVE AREA FOR    73618643
*                                           USE  BY OUTPUT   @ZA16374*/ 73618743
*   2 ABDTRLN     FIXED(31)ABD9999       /* LENGTH OF TRACE TABLE       73618843
*                                                            @ZA25122*/ 73618943
*%IF QZR = ' ' %THEN                                                    73619133
*%GOTO ABDEND;                                                          73619233
*%IF NORTMLST = ' ' %THEN                                               73619602
*%GOTO ABDEND;                                                          73622202
*   2 TRKTBL           ,                                                73624802
*    3 SNAME    CHAR(8),                 /* SEGMENT NAME             */ 73627402
*    3 DADDR    PTR(31),                 /* ADDR OF DATA TO BE          73630002
*                                           TRCACKED                 */ 73632002
*    3 DLNTH  FIXED(31),                 /* LENGTH OF DATA TO BE        73640002
*                                           TRACKED                  */ 73640402
*    3 DNAME   CHAR(40),                 /* NAME OF DATA TO BE          73642002
*                                           TRACKED                  */ 73642402
*    3 DREGS   CHAR(64),                 /* REGISTERS AT TIME OF        73644002
*                                           REQUEST                  */ 73644102
*    3 TRKEP   PTR(31);                  /* RTMTRACK ENTRY ADDR      */ 73644402
*%ABDEND: ;                                                             73649640
*% ABDLNGTH = 'LENGTH(ABDAREA)';         /* LENGTH OF WORKAREA       */ 73650002
./  ADD  SSI=13140052,NAME=IHAAQE
*        %GOTO AQEBSL;       /* BILINGUAL MAPPING            /*     /*  00050021
         MACRO                                                          00100021
         IHAAQE   &TYPE                                                 00150021
*                                                                       00152021
*        RELEASE 1 AOS, 11/3/71, LEVEL=1                                00154021
*                                                                       00156021
         AIF   ('&TYPE' EQ 'INTERNAL').EQU                              00160021
AQESECT  DSECT ,TCBAQE               ALLOCATED QUEUE ELEMENT            00200021
AQEPTR   DS    A                     ADDRESS OF PREVIOUS AQE            00250021
AQELEN   DS    F                     LENGTH OF ALLOCATED AREA           00300021
         MEXIT                                                          00330021
.EQU     ANOP                                                           00330421
AQEPTR   EQU   0                     ADDRESS OF PREVIOUS AQE            00332021
AQELEN   EQU   4                     LENGTH OF ALLOCATED AREA           00334021
         MEND  , */                                                     00350021
*%AQEBSL:   ;                                                           00400021
* DECLARE                                                               00450021
*                                                                       00460021
*/*      RELEASE 1 AOS, 11/3/71, LEVEL=1                             */ 00470021
*                                                                       00480021
*   1 AQESECT  BASED(TCBAQE),        /* ALLOCATED QUEUE ELEMENT      */ 00500021
*   2 AQEPTR   PTR(31),              /* ADDRESS OF PREVIOUS AQE      */ 00550021
*   2 AQELEN   FIXED(31);            /* LENGTH OF ALLOCATED AREA     */ 00600021
./  ADD  SSI=50290232,NAME=IHACSD
*                                                                       00050002
*        %GOTO CSDL1;   /*                                              00100002
         MACRO                                                          00150002
         IHACSD &DSECT=YES    */                                        00200002
*%CSDL1 : ;                                                             00250002
*                                                                       00300002
*/* **************************************************************** */ 00350002
*/*                                                                  */ 00400002
*/*            COMMON SYSTEM DATA AREA                               */ 00450002
*/*                                                                  */ 00500002
*/*  OS/VS2 RELEASE 3, 07/23/74, LEVEL=1                             */ 00550003
*/*                                                                  */ 00600002
*/*  METHOD OF ACCESS                                                */ 00650002
*/*      BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */ 00700002
*/*             USING ON CSD GIVES ADDRESSABILITY FOR ALL SYMBOLS.   */ 00750002
*/*      PL/S - INCLUDE CVT TO DEFINE CVTCSD                         */ 00800002
*/*                                                                  */ 00850002
*/* **************************************************************** */ 00900002
*%GOTO CSDL2;  /*                                                       00950002
         SPACE 1                                                        01000002
         AIF   ('&DSECT' EQ 'NO').CSD0010                               01050002
CSD      DSECT                                                          01100002
         AGO   .CSD0020                                                 01150002
.CSD0010 ANOP                                                           01200002
         DS    0D                                                       01250002
CSD      EQU   *                                                        01300002
.CSD0020 ANOP                                                           01350002
CSDCSD   DC    CL4'CSD ' -    CONTROL BLOCK ACRONYM IN EBCDIC           01400002
CSDCPUJS DC    XL2'00' -      BIT MASK OF CPU'S AVAILABLE FOR JOB       01450002
*                             SCHEDULING                                01500002
CSDCHAD  DC    H'0' -         HIGHEST CHANNEL ADDRESS SYSGEN'ED  MDC014 01510002
CSDSAFF  DS    0XL2 -         BIT MASK OF CPU'S AVAILABLE TO PROCESS    01520002
*                             SERVICE REQUESTS (SRB'S)           MDC018 01530002
CSDCPUAL DC    XL2'00' -      BIT MASK OF CPU'S CURRENTLY ALIVE  MDC015 01550002
CSDCPUOL DC    H'0' -         NUMBER OF CPU'S CURRENTLY ALIVE    MDC016 01600002
CSDSCWRD DS    0BL4 -         SUPERVISOR CONTROL INFORMATION            01700002
CSDSCFL1 DC    XL1'00' -      FIRST BYTE OF CSDSCWRD                    01750002
CSDRV042 EQU   X'80',,C'X' -  RESERVED                           MDC011 01800002
CSDSYSND EQU   X'40' -        SYSTEM-WIDE NON-DISPATCHABILITY BIT.      02000002
*                             INDICATES ALL ADDRESS SPACES (SRB'S AND   02050002
*                             TASKS) ARE NON-DISPATCHABLE EXCEPT THOSE  02100002
*                             WITH EXEMPT STATUS (ASCBXMPT)             02150002
CSDRV001 EQU   X'20',,C'X' -  RESERVED                                  02200002
CSDRV002 EQU   X'10',,C'X' -  RESERVED                                  02250002
CSDRV003 EQU   X'08',,C'X' -  RESERVED                                  02300002
CSDRV004 EQU   X'04',,C'X' -  RESERVED                                  02350002
CSDRV005 EQU   X'02',,C'X' -  RESERVED                                  02400002
CSDRV006 EQU   X'01',,C'X' -  RESERVED                                  02450002
CSDSCFL2 DC    XL1'00' -      SECOND BYTE OF CSDSCWRD                   02500002
CSDRV007 EQU   X'80',,C'X' -  RESERVED                                  02550002
CSDRV008 EQU   X'40',,C'X' -  RESERVED                                  02600002
CSDRV009 EQU   X'20',,C'X' -  RESERVED                                  02650002
CSDRV010 EQU   X'10',,C'X' -  RESERVED                                  02700002
CSDRV011 EQU   X'08',,C'X' -  RESERVED                                  02750002
CSDRV012 EQU   X'04',,C'X' -  RESERVED                                  02800002
CSDRV013 EQU   X'02',,C'X' -  RESERVED                                  02850002
CSDRV014 EQU   X'01',,C'X' -  RESERVED                                  02900002
CSDSCFL3 DC    XL1'00' -      THIRD BYTE OF CSDSCWRD                    02950002
CSDRV015 EQU   X'80',,C'X' -  RESERVED                                  03000002
CSDRV016 EQU   X'40',,C'X' -  RESERVED                                  03050002
CSDRV017 EQU   X'20',,C'X' -  RESERVED                                  03100002
CSDRV018 EQU   X'10',,C'X' -  RESERVED                                  03150002
CSDRV019 EQU   X'08',,C'X' -  RESERVED                                  03200002
CSDRV020 EQU   X'04',,C'X' -  RESERVED                                  03250002
CSDRV021 EQU   X'02',,C'X' -  RESERVED                                  03300002
CSDRV022 EQU   X'01',,C'X' -  RESERVED                                  03350002
CSDSCFL4 DC    XL1'00' -      FOURTH BYTE OF CSDSCWRD                   03400002
CSDRV023 EQU   X'80',,C'X' -  RESERVED                                  03450002
CSDRV024 EQU   X'40',,C'X' -  RESERVED                                  03500002
CSDRV025 EQU   X'20',,C'X' -  RESERVED                                  03550002
CSDRV026 EQU   X'10',,C'X' -  RESERVED                                  03600002
CSDRV027 EQU   X'08',,C'X' -  RESERVED                                  03650002
CSDRV028 EQU   X'04',,C'X' -  RESERVED                                  03700002
CSDRV029 EQU   X'02',,C'X' -  RESERVED                                  03750002
CSDRV030 EQU   X'01',,C'X' -  RESERVED                                  03800002
CSDRV043 DC    F'0' -         RESERVED                    MDC012-MDC013 03850002
CSDMF1CP DC    XL2'00' -      BIT MASK OF CPU'S VARIED ONLINE OR        04050002
*                             OFFLINE.  MF/1 WILL TEST THESE FLAGS AT   04060002
*                             REPORTING INTERVALS FOR CPU VARY ACTIVITY 04070002
*                             AND THEN RESET HALFWORD TO ZERO    MDC007 04080002
CSDACR   DC    XL1'00' -      VALUE OF X'FF' MEANS ACR IS IN PROGRESS   04100002
*                             WITHIN SYSTEM                      MDC006 04150002
CSDFLAGS DC    XL1'00' -      FLAG BYTE                          MDC001 04350002
CSDMP    EQU   X'80' -        INDICATES MULTIPROCESSING SYSTEM          04360003
*                             INSTRUCTION SET IS AVAILABLE.  CSDCPUAL   04361003
*                             MUST BE EXAMINED TO DETERMINE WHETHER A   04362003
*                             MULTIPROCESSING SYSTEM IS RUNNING OR JUST 04363003
*                             HALF A MULTIPROCESSING SYSTEM.            04364003
*                             (MDC300)                         @Z30AQ9A 04365003
CSDRV032 EQU   X'40',,C'X' -  RESERVED                                  04370002
CSDRV033 EQU   X'20',,C'X' -  RESERVED                                  04380002
CSDRV034 EQU   X'10',,C'X' -  RESERVED                                  04390002
CSDRV035 EQU   X'08',,C'X' -  RESERVED                                  04392002
CSDRV036 EQU   X'04',,C'X' -  RESERVED                                  04394002
CSDRV037 EQU   X'02',,C'X' -  RESERVED                                  04396002
CSDRV038 EQU   X'01',,C'X' -  RESERVED                                  04398002
CSDMAFF  DC    XL80'00' -     CPU-AFFINITY FEATURE TABLE                04400002
*                             (TEN 8-BYTE ENTRIES)                      04450002
CSDRV044 DC    XL2'00' -      RESERVED                           MDC018 04500002
CSDDDRCT DC    H'0' -         DDR DEVICE ALLOCATION INTERFACE COUNT     04560002
*                             FIELD.  ACCESSED AND MODIFIED UNDER CMS   04570002
*                             LOCK.  INCREMENTED BY DDR TO INDICATE TO  04580002
*                             DYNAMIC ALLOCATION THAT DDR EXCHANGED     04590002
*                             ADDRESSES IN THE IOS LOOKUP TABLE. MDC008 04600002
CSDGDCC  DC    F'0' -         COUNT OF USABLE CLOCK COMPARATORS         04610002
*                             CURRENTLY IN THE CONFIGURATION     MDC003 04620002
CSDGDINT DC    F'0' -         COUNT OF USABLE CPU TIMERS CURRENTLY IN   04630002
*                             THE CONFIGURATION                  MDC004 04640002
CSDGDTOD DC    F'0' -         COUNT OF CPU'S WHICH HAVE ACCESS TO A     04642002
*                             GOOD TOD CLOCK                     MDC005 04644002
CSDTCNT  DC    F'0' -         COUNT OF TAPE ALLOCATIONS IN PROGRESS     04646002
*                                                                MDC009 04648002
CSDUCNT  DC    F'0' -         COUNT OF UNIT RECORD ALLOCATIONS IN       04648402
*                             PROGRESS                           MDC010 04648802
CSDMASK  DS    0XL32 -        TABLE OF BIT MASKS FOR TESTING BITS IN    04649202
*                             CSDCPUAL                           MDC017 04649602
         DC    X'8000' -      CPU 0                              MDC017 04649702
         DC    X'4000' -      CPU 1                              MDC017 04649802
         DC    X'2000' -      CPU 2                              MDC017 04649902
         DC    X'1000' -      CPU 3                              MDC017 04666602
         DC    X'0800' -      CPU 4                              MDC017 04676602
         DC    X'0400' -      CPU 5                              MDC017 04678602
         DC    X'0200' -      CPU 6                              MDC017 04680602
         DC    X'0100' -      CPU 7                              MDC017 04682602
         DC    X'0080' -      CPU 8                              MDC017 04683002
         DC    X'0040' -      CPU 9                              MDC017 04683102
         DC    X'0020' -      CPU A                              MDC017 04683202
         DC    X'0010' -      CPU B                              MDC017 04688802
         DC    X'0008' -      CPU C                              MDC017 04690802
         DC    X'0004' -      CPU D                              MDC017 04692802
         DC    X'0002' -      CPU E                              MDC017 04693202
         DC    X'0001' -      CPU F                              MDC017 04693602
         DC    XL152'00' -    RESERVED                                  04694402
         MEND  , -   */                                                 04700002
*%CSDL2 : ;                                                             04750002
*                                                                       04800002
*DECLARE                                                                04850002
*  1 CSD      BASED(CVTCSD)  BDY(DWORD),                                04900002
*   2 CSDCSD      CHAR(4) BDY(WORD),     /* CONTROL BLOCK ACRONYM IN    04950002
*                                           EBCDIC                   */ 05000002
*   2 CSDCPUJS    BIT(16) BDY(WORD),     /* BIT MASK OF CPU'S           05050002
*                                           AVAILABLE FOR JOB           05100002
*                                           SCHEDULING               */ 05150002
*   2 CSDCHAD     FIXED(15),             /* HIGHEST CHANNEL ADDRESS     05160002
*                                           SYSGEN'ED          MDC014*/ 05170002
*   2 CSDCPUAL    BIT(16) BDY(WORD),     /* BIT MASK OF CPU'S           05200002
*                                           CURRENTLY ALIVE    MDC015*/ 05250002
*    3 CSDSAFF     BIT(16),              /* BIT MASK OF CPU'S           05260002
*                                           AVAILABLE TO PROCESS        05270002
*                                           SERVICE REQUESTS (SRB'S)    05280002
*                                                              MDC018*/ 05290002
*   2 CSDCPUOL    FIXED(15),             /* NUMBER OF CPU'S CURRENTLY   05300002
*                                           ALIVE              MDC016*/ 05350002
*   2 CSDSCWRD    CHAR(4) BDY(WORD),     /* SUPERVISOR CONTROL          05500002
*                                           INFORMATION              */ 05550002
*    3 CSDSCFL1    BIT(8),               /* FIRST BYTE OF CSDSCWRD   */ 05600002
*     4 CSDRV042 BIT(1),                 /* RESERVED           MDC011*/ 05650002
*     4 CSDSYSND BIT(1),                 /* SYSTEM-WIDE NON-            06000002
*                                           DISPATCHABILITY BIT.        06050002
*                                           INDICATES ALL ADDRESS       06100002
*                                           SPACES (SRB'S AND TASKS)    06150002
*                                           ARE NON-DISPATCHABLE        06200002
*                                           EXCEPT THOSE WITH EXEMPT    06250002
*                                           STATUS (ASCBXMPT)        */ 06300002
*     4 CSDRV001 BIT(1),                 /* RESERVED                 */ 06350002
*     4 CSDRV002 BIT(1),                 /* RESERVED                 */ 06400002
*     4 CSDRV003 BIT(1),                 /* RESERVED                 */ 06450002
*     4 CSDRV004 BIT(1),                 /* RESERVED                 */ 06500002
*     4 CSDRV005 BIT(1),                 /* RESERVED                 */ 06550002
*     4 CSDRV006 BIT(1),                 /* RESERVED                 */ 06600002
*    3 CSDSCFL2    BIT(8),               /* SECOND BYTE OF CSDSCWRD  */ 06650002
*     4 CSDRV007 BIT(1),                 /* RESERVED                 */ 06700002
*     4 CSDRV008 BIT(1),                 /* RESERVED                 */ 06750002
*     4 CSDRV009 BIT(1),                 /* RESERVED                 */ 06800002
*     4 CSDRV010 BIT(1),                 /* RESERVED                 */ 06850002
*     4 CSDRV011 BIT(1),                 /* RESERVED                 */ 06900002
*     4 CSDRV012 BIT(1),                 /* RESERVED                 */ 06950002
*     4 CSDRV013 BIT(1),                 /* RESERVED                 */ 07000002
*     4 CSDRV014 BIT(1),                 /* RESERVED                 */ 07050002
*    3 CSDSCFL3    BIT(8),               /* THIRD BYTE OF CSDSCWRD   */ 07100002
*     4 CSDRV015 BIT(1),                 /* RESERVED                 */ 07150002
*     4 CSDRV016 BIT(1),                 /* RESERVED                 */ 07200002
*     4 CSDRV017 BIT(1),                 /* RESERVED                 */ 07250002
*     4 CSDRV018 BIT(1),                 /* RESERVED                 */ 07300002
*     4 CSDRV019 BIT(1),                 /* RESERVED                 */ 07350002
*     4 CSDRV020 BIT(1),                 /* RESERVED                 */ 07400002
*     4 CSDRV021 BIT(1),                 /* RESERVED                 */ 07450002
*     4 CSDRV022 BIT(1),                 /* RESERVED                 */ 07500002
*    3 CSDSCFL4    BIT(8),               /* FOURTH BYTE OF CSDSCWRD  */ 07550002
*     4 CSDRV023 BIT(1),                 /* RESERVED                 */ 07600002
*     4 CSDRV024 BIT(1),                 /* RESERVED                 */ 07650002
*     4 CSDRV025 BIT(1),                 /* RESERVED                 */ 07700002
*     4 CSDRV026 BIT(1),                 /* RESERVED                 */ 07750002
*     4 CSDRV027 BIT(1),                 /* RESERVED                 */ 07800002
*     4 CSDRV028 BIT(1),                 /* RESERVED                 */ 07850002
*     4 CSDRV029 BIT(1),                 /* RESERVED                 */ 07900002
*     4 CSDRV030 BIT(1),                 /* RESERVED                 */ 07950002
*   2 CSDRV043    FIXED(31),             /* RESERVED    MDC012-MDC013*/ 08000002
*   2 CSDMF1CP    BIT(16),               /* BIT MASK OF CPU'S VARIED    08250002
*                                           ONLINE OR OFFLINE.  MF/1    08252002
*                                           WILL TEST THESE FLAGS AT    08254002
*                                           REPORTING INTERVALS FOR     08256002
*                                           CPU VARY ACTIVITY AND       08258002
*                                           THEN RESET HALFWORD TO      08258402
*                                           ZERO               MDC007*/ 08258802
*   2 CSDACR      CHAR(1),               /* VALUE OF X'FF' MEANS ACR    08260002
*                                           IN IS PROGRESS WITHIN       08270002
*                                           SYSTEM             MDC006*/ 08280002
*   2 CSDFLAGS    BIT(8),                /* FLAG BYTE          MDC001*/ 08300002
*    3 CSDMP    BIT(1),                  /* INDICATES MULTIPROCESSING   08350002
*                                           SYSTEM INSTRUCTION SET IS   08400003
*                                           AVAILABLE.  CSDCPUAL MUST   08407003
*                                           BE EXAMINED TO DETERMINE    08414003
*                                           WHETHER A MULTIPROCESSING   08421003
*                                           SYSTEM IS RUNNING OR JUST   08428003
*                                           HALF A MULTIPROCESSING      08435003
*                                           SYSTEM. (MDC300) @Z30AQ9A*/ 08442003
*    3 CSDRV032 BIT(1),                  /* RESERVED                 */ 08450002
*    3 CSDRV033 BIT(1),                  /* RESERVED                 */ 08500002
*    3 CSDRV034 BIT(1),                  /* RESERVED                 */ 08550002
*    3 CSDRV035 BIT(1),                  /* RESERVED                 */ 08600002
*    3 CSDRV036 BIT(1),                  /* RESERVED                 */ 08650002
*    3 CSDRV037 BIT(1),                  /* RESERVED                 */ 08700002
*    3 CSDRV038 BIT(1),                  /* RESERVED                 */ 08750002
*   2 CSDMAFF   (10) CHAR(8),            /* CPU-AFFINITY FEATURE        08800002
*                                           TABLE                    */ 08850002
*   2 CSDRV044    BIT(16),               /* RESERVED           MDC018*/ 08900002
*   2 CSDDDRCT    FIXED(15),             /* DDR DEVICE ALLOCATION       09010002
*                                           INTERFACE COUNT FIELD.      09020002
*                                           ACCESSED AND MODIFIED       09030002
*                                           UNDER CMS LOCK.             09040002
*                                           INCREMENTED BY DDR TO       09050002
*                                           INDICATE TO DYNAMIC         09060002
*                                           ALLOCATION THAT DDR         09070002
*                                           EXCHANGED ADDRESSES IN      09080002
*                                           THE IOS LOOKUP TABLE.       09090002
*                                                              MDC008*/ 09092002
*   2 CSDGDCC     FIXED(31),             /* COUNT OF USABLE CLOCK       09100002
*                                           COMPARATORS CURRENTLY IN    09150002
*                                           THE CONFIGURATION  MDC003*/ 09200002
*   2 CSDGDINT    FIXED(31),             /* COUNT OF USABLE CPU         09250002
*                                           TIMERS CURRENTLY IN THE     09300002
*                                           CONFIGURATION      MDC004*/ 09350002
*   2 CSDGDTOD    FIXED(31),             /* COUNT OF CPU'S WHICH HAVE   09400002
*                                           ACCESS TO A GOOD TOD        09450002
*                                           CLOCK              MDC005*/ 09500002
*   2 CSDTCNT     FIXED(31),             /* COUNT OF TAPE ALLOCATIONS   09600002
*                                           IN PROGRESS        MDC009*/ 09650002
*   2 CSDUCNT     FIXED(31),             /* COUNT OF UNIT RECORD        09700002
*                                           ALLOCATIONS IN PROGRESS     09750002
*                                                              MDC010*/ 09800002
*   2 CSDMASK   (16) CHAR(2),            /* TABLE OF BIT MASKS FOR      09950002
*                                           TESTING BITS IN CSDCPUAL    10000002
*                                                              MDC017*/ 10050002
*   2 *           CHAR(152) BDY(DWORD);  /* RESERVED                 */ 10100002
T(1),                  /* INDICATES MULTIPROCESSING    *             40404040
                          SYSTEM INSTRUCTION SET IS     *             40404040
                          AVAILABLE.  CSDCPUAL MUST    ø*             40404040
                          BE EXAMINED TO DETERMINE      *             40404040
                          WHETHER A MULTIPROCESSING   â*             40404040
                          SYSTEM IS RUNNING OR JUST   âØ*             40404040
                          HALF A MULTIPROCESSING      ä&*             40404040
                          SYSTEM. (MDC300) @Z30AQ9A*/ à*    3 CSDRV03240Ü2Ü9
T(1),                  /* RESERVED                 */ á *    3 CSDRV03340Ü2Ü9
T(1),                  /* RESERVED                 */ & *    3 CSDRV03440Ü2Ü9
T(1),                  /* RESERVED                 */ í *    3 CSDRV03540Ü2Ü9
T(1),                  /* RESERVED                 */ - *    3 CSDRV03640Ü2Ü9
T(1),                  /* RESERVED                 */ Á *    3 CSDRV03740Ü2Ü9
T(1),                  /* RESERVED                 */ ø *    3 CSDRV03840Ü2Ü9
T(1),                  /* RESERVED                 */ Í *   2 CSDMAFF 40404Ù1
0) CHAR(8),            /* CPU-AFFINITY FEATURE        Ø *             40404040
                          TABLE                    */ e *   2 CSDRV04440404040
BIT(16),               /* RESERVED           MDC018*/ ° *   2 CSDDDRCT40404040
FIXED(15),             /* DDR DEVICE ALLOCATION        *             40404040
                          INTERFACE COUNT FIELD.       *             40404040
                          ACCESSED AND MODIFIED        *             40404040
                          UNDER CMS LOCK.              *             40404040
                          INCREMENTED BY DDR TO       	 *             40404040
                          INDICATE TO DYNAMIC          *             40404040
                          ALLOCATION THAT DDR          *             40404040
                          EXCHANGED ADDRESSES IN       *             40404040
                          THE IOS LOOKUP TABLE.        *             40404040
                                             MDC008*/ *   2 CSDGDCC 40404040
FIXED(31),             /* COUNT OF USABLE CLOCK        *             40404040
                          COMPARATORS CURRENTLY IN     *             40404040
                          THE CONFIGURATION  MDC003*/  *   2 CSDGDINT40404040
FIXED(31),             /* COUNT OF USABLE CPU         
 *             40404040
                          TIMERS CURRENTLY IN THE      *             40404040
                          CONFIGURATION      MDC004*/  *   2 CSDGDTOD40404040
FIXED(31),             /* COUNT OF CPU'S WHICH HAVE     *             40404040
                          ACCESS TO A GOOD TOD        á *             40404040
                          CLOCK              MDC005*/ & *   2 CSDTCNT 40404040
FIXED(31),             /* COUNT OF TAPE ALLOCATIONS   - *             40404040
                          IN PROGRESS        MDC009*/ Á *   2 CSDUCNT 40404040
FIXED(31),             /* COUNT OF UNIT RECORD        ø *             40404040
                          ALLOCATIONS IN PROGRESS     Í *             40404040
                                             MDC010*/ Ø *   2 CSDMASK 40404Ù1
6) CHAR(2),            /* TABLE OF BIT MASKS FOR      n *             40404040
                          TESTING BITS IN CSDCPUAL      *             40404040
                                             MDC017*/ 	 *   2 *       40404040
./  ADD  SSI=13140050,NAME=IHADQE
*        %GOTO DQEBSL;       /* BILINGUAL MAPPING           /*      /*  04000021
         MACRO                                                          08000021
         IHADQE   &TYPE                                                 12000021
*                                                                       12010021
*        RELEASE 1 AOS, 11/3/71, LEVEL=1                                12020021
*                                                                       12030021
         AIF   ('&TYPE' EQ 'INTERNAL').EQU                              12050021
DQESECT  DSECT      DESCRIPTOR QUEUE ELEMENT                            16000021
DQFQEPTR DS    A    PTR TO FIRST FREE AREA                              20000021
DQEPTR   DS    A    PTR TO NEXT DQE OR ZERO                             24000021
DQEHRID  DS    0C   HIERARCHY IDENTIFIER                                28000021
DQEBLKAD DS    A    ADDR FIRST 2K BLOCK DESCRIBED BY THIS DQE           32000021
DQELNTH  DS    F    LENGTH OF AREA DESCRIBED BY THIS DQE                36000021
         MEXIT                                                          36050021
.EQU     ANOP                                                           36100021
DQFQEPTR EQU      0    PTR TO FIRST FREE AREA                           36200021
DQEPTR   EQU      4    PTR TO NEXT DQE OR ZERO                          36250021
DQEHRID  EQU      4   HIERARCHY IDENTIFIER                              36300021
DQEBLKAD EQU      8    ADDR FIRST 2K BLOCK DESCRIBED BY THIS DQE        36350021
DQELNTH  EQU      12    LENGTH OF AREA DESCRIBED BY THIS DQE            36400021
         MEND  , */                                                     40000021
*%DQEBSL:   ;                                                           44000021
*                                                                       44050021
*/*      RELEASE 1 AOS, 11/3/71, LEVEL=1                             */ 44100021
*                                                                       44150021
* DECLARE                                                               48000021
*   1 DQESECT   BASED(DQESEPTR),     /*DESCRIPTOR QUEUE ELEMENT      */ 52000021
*    2 DQFQEPTR    PTR(31),          /* PTR TO FIRST FREE AREA       */ 56000021
*    2 DQEPTR      PTR(31),          /* PTR TO NEXT DQE OR ZERO      */ 60000021
*    2 DQEBLKAD    PTR(31),          /* ADDR FIRST 2K BLOCK             64000021
*                                       DESCRIBED BY THIS DQE        */ 68000021
*     3 DQEHRID     CHAR(1),         /* HIERARCHY IDENTIFIER         */ 72000021
*    2 DQELNTH     FIXED(31);        /* LENGTH OF AREA DESCRIBED BY     76000021
*                                       THIS DQE                     */ 80000021
./  ADD  SSI=22870912,NAME=IHAESTA
*        %GOTO ESTABSL1;                                             /* 00050002
         MACRO                                                          00100002
         IHAESTA &DSECT=YES                                          */ 00150002
*%ESTABSL1 : ;                                                          00160002
* /* MACMEAN ESTA MEANS EXTENDED STAE PARAMETER LIST                 */ 00170002
* /* MACCOMP Y-1 SC1C5/PZD81                                         */ 00180002
* /* MACSTAT Y-1 72245/Y02704                                        */ 00190002
*        %GOTO ESTABSL;                                             /*  00192002
         AIF  ('&DSECT' EQ 'YES').ESTA001                               00242002
ESTA     DS   0D -                                                      00244002
         AGO  .ESTA002                                                  00246002
.ESTA001 ANOP                                                           00248002
ESTA     DSECT                ESTAPTR                                   00250002
.ESTA002 SPACE 2                                                        00260002
ESTAEXT  DS    0A             FLAGS AND USER EXIT ADDRESS               00300002
ESTAFLG1 DS    B              OPTION FLAGS                              00350002
ESTASTAI EQU   X'80'          .(E)STAI REQUEST  (TCB SPECIFIED)         00400002
ESTASTAR EQU   X'40'          .ESTAR REQUEST                            00450002
*                             .(E)STAE REQUEST IF NEITHER ESTASTAI      00500002
*                              NOR ESTASTAR IS ON.                      00550002
*              X'20'          .(RESERVED)                               00600002
ESTAESTA EQU   X'10'          .ESTAR/ESTAI/ESTAE PARAMETER LIST         00650002
*                              OFF (0) INDICATES STAI/STAE PARM LIST    00700002
*              X'08'          .(RESERVED)                               00750002
ESTASYNC EQU   X'04'          .ALLOW ASYNCHRONOUS INTERRUPTS            00800002
ESTAIO   EQU   X'03'          .I/O PROCESSING OPTION, BITS 6 AND 7 -    00850002
*                                  00 - QUIESCE I/O                     00900002
*                                  01 - HALT I/O                        00950002
*                                  10 - BYPASS I/O INTERVENTION         01000002
*                                  11 - (RESERVED)                      01050002
ESTANOIO EQU   X'02'          BYPASS I/O INTERVENTION                   01100002
ESTAHALT EQU   X'01'          .HALT I/O                                 01150002
ESTAEXIT DS    AL3            ADDRESS OF USER EXIT ROUTINE              01200002
ESTAPARM DS    A              ADDRESS OF USER PARAMETER LIST            01250002
ESTAOWNR DS    A              TCB ADDRESS IF STAI REQUEST               01300002
*                             OTHERWISE, ZERO                           01350002
ESTAFGRS DS    0A             FLAGS AND RESERVED FIELD                  01400002
ESTAFLG2 DS    B              OPTION FLAGS                              01450002
*              X'80'          .(RESERVED)                               01500002
ESTATERM EQU   X'40'          .REQUEST FOR TERM PROCESSING              01550002
ESTAEREC EQU   X'20'          .REQUEST FOR ERROR RECORDING              01600002
*              X'10'          .(RESERVED)                               01650002
*              X'08'          .(RESERVED)                               01700002
ESTABRNT EQU   X'04'          .REQUEST FOR BRANCH ENTRY TO SVC 60       01750002
*              X'02'          .(RESERVED)                               01800002
*              X'01'          .(RESERVED)                               01850002
ESTARSVI DS    AL3            RESERVED                                  01900002
ESTALEN  EQU   *-ESTA         LENGTH OF (E)STA PARAMETER LIST           01950002
         MEND  , */                                                     02000002
*%ESTABSL :   ;                                                         02050002
*/*   6/6/72                                                         */ 02100002
*DECLARE                                                                02150002
*  1 ESTA     BASED(ESTAPTR),                                           02200002
*   2 ESTAEXT  PTR(31),            /* FLAGS AND USER EXIT ADDRESS    */ 02250002
*    3 ESTAFLG1 CHAR(1),           /* OPTION FLAGS                   */ 02300002
*     4 ESTASTAI BIT(1),           /* (E)STAI REQUEST (TCB SPECIFIED)*/ 02350002
*     4 ESTASTAR BIT(1),           /* ESTAR REQUEST                  */ 02400002
*                                  /* (E)STAE REQUEST IF NEITHER     */ 02450002
*                                  /* ESTASTAI NOR ESTASTAR IS ON    */ 02500002
*     4 *        BIT(1),           /* RESERVED                       */ 02550002
*     4 ESTAESTA BIT(1),           /* ESTAR/ESTAI/ESTAE PARAMETERS   */ 02600002
*                                  /* OFF, INDICATES STAI/STAE PARMS */ 02650002
*     4 *        BIT(1),           /* RESERVED                       */ 02700002
*     4 ESTASYNC BIT(1),           /* ALLOW ASYNCHRONOUS INTERRUPTS  */ 02750002
*     4 ESTAIO   BIT(2),           /* I/O PROCESSING OPTIONS            02800002
*                                       00 - QUIESCE I/O                02850002
*                                       01 - HALT I/O                   02900002
*                                       10 - BYPASS I/O INTERVENTION    02950002
*                                       11 - RESERVED                */ 03000002
*      5 ESTANOIO BIT(1),          /* BYPASS I/O INTERVENTION        */ 03050002
*      5 ESTAHALT BIT(1),          /* HALT I/O                       */ 03100002
*    3 ESTAEXIT PTR(24) BDY(BYTE), /* ADDRESS OF USER EXIT ROUTINE   */ 03150002
*   2 ESTAPARM PTR(31),            /* ADDRESS OF USER PARAMETER LIST */ 03200002
*   2 ESTAOWNR PTR(31),            /* TCB ADDRESS IF (E)STAI REQUEST,   03250002
*                                     OTHERWISE, ZERO                */ 03300002
*   2 ESTAFGRS PTR(31),            /* FLAGS AND RESERVED FIELD       */ 03350002
*    3 ESTAFLG2 CHAR(1),           /* OPTION FLAGS                   */ 03400002
*     4 *        BIT(1),           /* RESERVED                       */ 03450002
*     4 ESTATERM BIT(1),           /* REQUEST FOR TERM PROCESSING    */ 03500002
*     4 ESTAEREC BIT(1),           /* REQUEST FOR ERROR RECORDING    */ 03550002
*     4 *        BIT(2),           /* RESERVED                       */ 03600002
*     4 ESTABRNT BIT(1),           /* REQUEST BRANCH ENTRY TO SVC 60 */ 03650002
*     4 *        BIT(2),           /* RESERVED                       */ 03700002
*    3 ESTARSVI PTR(24) BDY(BYTE); /* RESERVED                       */ 03750002
*%ESTALEN='LENGTH(ESTA)';          /* LENGTH OF (E)STA PARAMETER        03900002
*                                     LIST                           */ 03950002
./  ADD  SSI=13140049,NAME=IHAFBQE
*        %GOTO FBQBSL;      /* BILINGUAL MAPPING        /*   /*         06000021
         MACRO                                                          12000021
         IHAFBQE  &TYPE                                                 18000021
*                                                                       18010021
*        RELEASE 1 AOS, 11/3/71, LEVEL=1                                18020021
*                                                                       18030021
         AIF   ('&TYPE' EQ 'INTERNAL').EQU                              18050021
FBQESECT DSECT      FREE BLOCK QUEUE ELEMENT                            24000021
FWDPTR   DS    A    PTR TO NEXT FBQE OR PQE                             30000021
BCKPTR   DS    A    PTR TO PREVIOUS FBQE OR PQE                         36000021
SIZE     DS    F    SIZE OF THIS FREE BLOCK                             42000021
FBQAREA  DS    A    LOW ADDRESS OF FREE BLOCK                           42050021
         MEXIT                                                          42100021
.EQU     ANOP                                                           42150021
FWDPTR   EQU      0    PTR TO NEXT FBQE OR PQE                          42200021
BCKPTR   EQU      4    PTR TO PREVIOUS FBQE OR PQE                      42250021
SIZE     EQU      8    SIZE OF THIS FREE BLOCK                          42300021
FBQAREA  EQU      12    LOW ADDRESS OF FREE BLOCK                       42350021
         MEND  , */                                                     48000021
*%FBQBSL:   ;                                                           54000021
*                                                                       54050021
*/*      RELEASE 1 AOS, 11/3/71, LEVEL=1                             */ 54100021
*                                                                       54150021
* DECLARE                                                               60000021
*   1 FBQESECT BASED(FBQESPTR),      /* BLOCK QUEUE ELEMENT          */ 66000021
*    2 FWDPTR      PTR(31),          /* PTR TO NEXT FBQE OR PQE      */ 72000021
*    2 BCKPTR      PTR(31),          /* PTR TO PREVIOUS FBQE OR PQE  */ 78000021
*    2 SIZE        FIXED(31),        /* SIZE OF THIS FREE BLOCK      */ 78050021
*    2 FBQAREA     PTR(31);          /* LOW ADDRESS OF FREE BLOCK    */ 78100021
./  ADD  SSI=13490782,NAME=IHAFOE
*        %GOTO FOEBSL;                                               /* 02000021
         MACRO                                                          04000021
         IHAFOE                                                         06000021
**             FIX OWNERSHIP ELEMENT                                    08000021
**                                                                      08050021
**       RELEASE 1 AOS, 11/4/71, LEVEL=1                                08100021
**                                                                      08150021
FOE      DSECT  , FOEPTR                                                10000021
FOEFLNKF DS    0F -             FULLWORD REFERENCE FOR FOEFLINK         12000021
FOEFLAG  DS    BL1 -            FLAG BYTE                               14000021
FOEINT   EQU   X'80' -          WHEN 1, FOE QUIESCED OR PURGED          16000021
FOEFLINK DS    AL3 -            FORWARD LINK-POINTER TO NEXT FOE OR     18000021
*                               0 IF THIS IS LAST FOE                   20000021
FOEVINDX DS    XL2 -            VIRTUAL INDEX OF PAGE REPRESENTED BY    22000021
*                               THIS FOE, 12 BIT VIRTUAL BLOCK NUMBER   24000021
*                               CONCATENATED TO 4 LOW ORDER 0 BITS      26000021
FOEFXCT  DS    H -              FIX COUNT ASSOCIATED WITH THIS FOE      28000021
FOEEND   DS    0C -             END OF FIX OWNERSHIP ELEMENT            30000021
FOELEN   EQU   FOEEND-FOE -     LENGTH OF FIX OWNERSHIP ELEMENT         32000021
         MEND  , */                                                     34000021
*%FOEBSL  :  ;                                                          36000021
*/*            FIX OWNERSHIP ELEMENT                                 */ 38000021
*                                                                       38050021
*/*      RELEASE 1 AOS, 11/4/71, LEVEL=1                             */ 38100021
*                                                                       38150021
*DECLARE                                                                40000021
*  1 FOE      BASED(FOEPTR),                                            42000021
*   2 FOEFLNKF    FIXED(31),             /* FULLWORD REFERENCE FOR      44000021
*                                           FOEFLINK                 */ 46000021
*    3 FOEFLAG     CHAR(1),              /* FLAG BYTE                */ 48000021
*     4 FOEINT   BIT(1),                 /* WHEN 1, FOE QUIESCED OR     50000021
*                                           PURGED                   */ 52000021
*     4 *        BIT(1),                 /* RESERVED                 */ 54000021
*     4 *        BIT(1),                 /* RESERVED                 */ 56000021
*     4 *        BIT(1),                 /* RESERVED                 */ 58000021
*     4 *        BIT(1),                 /* RESERVED                 */ 60000021
*     4 *        BIT(1),                 /* RESERVED                 */ 62000021
*     4 *        BIT(1),                 /* RESERVED                 */ 64000021
*     4 *        BIT(1),                 /* RESERVED                 */ 66000021
*    3 FOEFLINK    PTR(24)  BDY(BYTE),   /* FORWARD LINK-POINTER TO     68000021
*                                           NEXT FOE OR  0 IF THIS      70000021
*                                           IS LAST FOE              */ 72000021
*   2 FOEVINDX    CHAR(2),               /* VIRTUAL INDEX OF PAGE       74000021
*                                           REPRESENTED BY  THIS        76000021
*                                           FOE, 12 BIT VIRTUAL         78000021
*                                           BLOCK NUMBER                80000021
*                                           CONCATENATED TO 4 LOW       82000021
*                                           ORDER 0 BITS             */ 84000021
*   2 FOEFXCT     FIXED(15);             /* FIX COUNT ASSOCIATED        86000021
*                                           WITH THIS FOE            */ 88000021
*DECLARE 1 FOEEND  (*) CHAR(1)   BASED                                  90000021
*  (ADDR(FOE     )+LENGTH(FOE     ));                                   92000021
*                                        /* END OF FIX OWNERSHIP        94000021
*                                           ELEMENT                  */ 96000021
./  ADD  SSI=21460015,NAME=IHAFQE
*        %GOTO FQEBSL;       /* BILINGUAL MAPPING           /*      /*  07000001
         MACRO                                                          14000001
         IHAFQE   &TYPE                                                 21000001
*                                                                       21010001
*        RELEASE 1 AOS, 11/3/71, LEVEL=1                                21020001
*                                                                       21030001
         AIF   ('&TYPE' EQ 'INTERNAL').EQU                              21050001
FQESECT  DSECT      FREE QUEUE ELEMENT                                  28000001
FQTYPE   DS    0B   FLAG BYTE                                           28050001
FQERGNFL EQU   X'80' FQE REGION FLAG                                    28100001
FQECPB   EQU   X'40' FREE AREA CROSSES PAGE BOUNDARY - UNSUITABLE FOR   28150001
*                   L/SQA ALLOCATION                                    28200001
FQEPTR   DS    A    PTR TO NEXT LOWER FREE AREA                         35000001
FQELNTH  DS    F    NUMBER BYTES IN FREE AREA                           42000001
FQAREA   DS    A    HIGH ADDRESS OF FREE SPACE                          42050001
FQERSVD  DS    F    RESERVED                                            42060001
FQESLNTH EQU   8    L/SQA FQE LENGTH                                    42110001
FQERLNTH EQU   16   REGION FQE LENGTH                                   42160001
         MEXIT                                                          42210001
.EQU     ANOP                                                           42220001
FQTYPE   EQU      0   FLAG BYTE                                         42260001
FQERGNFL EQU   X'80' FQE REGION FLAG                                    42310001
FQECPB   EQU   X'40' FREE AREA CROSSES PAGE BOUNDARY - UNSUITABLE FOR   42320001
*                    L/SQA ALLOCATION                                   42330001
FQEPTR   EQU      0    PTR TO NEXT LOWER FREE AREA                      42360001
FQELNTH  EQU      4    NUMBER BYTES IN FREE AREA                        42410001
FQAREA   EQU      8    HIGH ADDRESS OF FREE SPACE                       42460001
FQERSVD  EQU      12    RESERVED                                        42510001
FQESLNTH EQU   8    L/SQA FQE LENGTH                                    42560001
FQERLNTH EQU   16   REGION FQE LENGTH                                   42610001
         MEND  , */                                                     49000001
*%FQEBSL:   ;                                                           56000001
*                                                                       56010001
* /*     RELEASE 1 AOS, 11/3/71, LEVEL=1                             */ 56020001
*                                                                       56030001
* /* THIS MACRO ASSUMES A REGION FQE. IF AN L/SQA FQE IS DESIRED,    */ 56050001
* /* SET MACRO VARIABLE FQETYPE TO 'FQELSQA' BEFORE THE INCLUDE FOR  */ 56100001
* /* THIS MACRO                                                      */ 56150001
* DECLARE                                                               63000001
*   1 FQESECT  BASED(FQESEPTR),      /* QUEUE ELEMENT                */ 70000001
*    2 FQEPTR      PTR(31),          /* PTR TO NEXT LOWER FREE AREA  */ 77000001
*       3 FQTYPE   BIT(8),           /* FLAG BYTE                    */ 77010001
*         4 FQERGNFL BIT(1),         /* FQE REGION FLAG              */ 77020001
*         4 FQECPB BIT(1),           /* FREE AREA CROSSES PAGE BOUN-    77022001
*                                       DARY - UNSUITABLE FOR L/SQA     77024001
*                                       ALLOCATION                   */ 77026001
*       3 FQEPTRA  PTR(24),          /* PTR TO NEXT LOWER FREE AREA  */ 77030001
*%IF FQETYPE='' %THEN                /* CHECK FOR REGION FQE         */ 77040001
*    %GOTO FQERGN1;                  /* BRANCH IF SO                 */ 77042001
*    2 FQELNTH     FIXED(31);        /* NUMBER BYTES IN FREE AREA    */ 77050001
*%GOTO FQELS1;                       /* END OF L/SQA FQE             */ 77060001
*%FQERGN1:   ;                       /* REGION FQE                   */ 77070001
*    2 FQELNTH     FIXED(31),        /* NUMBER BYTES IN FREE AREA    */ 77080001
*    2 FQAREA      PTR(31),          /* HIGH ADDRESS OF FREE SPACE   */ 77100001
*    2 FQERSVD     FIXED(31);        /* RESERVED                     */ 84200001
*%FQELS1:   ;                                                           84250001
./  ADD  SSI=31412420,NAME=IHAGSDA
*        %GOTO PLSGSDA1;    /*                                          00300002
         MACRO                                                          00302002
         IHAGSDA                                                        00304002
**/                                                                     00306002
*%PLSGSDA1 :    ;                                                       00308002
*/********************************************************************/ 00310002
*/*              GLOBAL SYSTEM DUPLEX AREA                           */ 00320002
*/*              OS/VS2 RELEASE 2,4/11/73,LEVEL 1                    */ 00330002
*/*                                                                  */ 00340002
*/********************************************************************/ 00342002
*        %GOTO PLSGSDA2;       /*                                       00392002
GSDA     DSECT                                                          00450002
*        THE FOLLOWING FIELDS DUPLEX CVT FIELDS                         00460002
GSDA001  EQU   *                       START LABEL FOR CVT DUPLEXING    00470002
GSDAASVT DS    A                       ASVT DUPLEXED ADDRESS            00500002
GSDAASVB EQU   X'80'                   IF ON DUPLEXED ASVT IS VALID     00550002
GSDAPCCT DS    A                       PCCAT DUPLEXED ADDRESS           00600002
GSDAPCCB EQU   X'80'                   IF ON DUPLEXED PCCAT IS VALID    00650002
GSDAGDA  DS    A                       GDA DUPLEXED ADDRESS             00700002
GSDAGDAB EQU   X'80'                   IF ON DUPLEXED GDA IS VALID      00750002
GSDACSD  DS    A                       CSD DUPLEXED ADDRESS             00800002
GSDACSDB EQU   X'80'                   IF ON DUPLEXED CSD IS VALID      00850002
GSDALCCT DS    A                       LCCAT DUPLEXED ADDRESS           00900002
GSDALCCB EQU   X'80'                   IF ON DUPLEXED LCCAT IS VALID    00950002
GSDA001E EQU   *                       END LABEL FOR CVT DUPLEXING      00960002
GSDA001N EQU   (GSDA001E-GSDA001)/4    NUMBER OF CVT ENTRIES            00970002
*        THE FOLLOWING FIELDS DUPLEX ASVT FIELDS                        00980002
GSDAMAX  DS    0F                      MAXUSER VALUE DUPLEX             01000002
         DS    H                       FIRST 2 BYTES ONLY USED FOR HIGH 01050002
*                                      BIT                              01100002
GSDAMAXB EQU   X'80'                   IF ON MAXUSER DUPLEX IS VALID    01150002
GSDAMAXU DS    H                       MAXUSER DUPLEX AREA              01200002
         DS    0D                      ASSURE DOUBLE WORD ALIGNMENT     01250002
GSDAEND  EQU   *                       END OF GSDA                      01300002
GSDALEN  EQU   GSDAEND-GSDA            LENGTH OF GSDA                   01350002
         MEND  ,    */                                                  01400002
*%PLSGSDA2 :    ;                                                       01450002
*DECLARE                               /* GLOBAL SYSTEM DUPLEX AREA  */ 01500002
*  1 GSDA BASED(CVTGSDA),                                               01550002
*    2 GSDAASVT PTR(31),               /* ASVT DUPLEXED ADDRESS      */ 01600002
*      3 GSDAASVB BIT(1),              /* IF ON THEN DUPLEX IS VALID */ 01650002
*      3 * BIT(31),                    /* ADDRESS                    */ 01700002
*    2 GSDAPCCT PTR(31),               /* PCCAT DUPLEXED ADDRESS     */ 01750002
*      3 GSDAPCCB BIT(1),              /* IF ON THEN DUPLEX IS VALID */ 01800002
*      3 * BIT(31),                    /* ADDRESS                    */ 01850002
*    2 GSDAGDA PTR(31),                /* GDA DUPLEXED ADDRESS       */ 01900002
*      3 GSDAGDAB BIT(1),              /* IF ON THEN DUPLEX IS VALID */ 01950002
*      3 * BIT(31),                    /* ADDRESS                    */ 02000002
*    2 GSDACSD PTR(31),                /* CSD DUPLEXED ADDRESS       */ 02050002
*      3 GSDACSDB BIT(1),              /* IF ON THEN DUPLEX IS VALID */ 02100002
*      3 * BIT(31),                    /* ADDRESS                    */ 02150002
*    2 GSDALCCT PTR(31),               /* LCCAT DUPLEXED ADDRESS     */ 02200002
*      3 GSDALCCB BIT(1),              /* IF ON THEN DUPLEX IS VALID */ 02250002
*      3 * BIT(31),                    /* ADDRESS                    */ 02300002
*    2 GSDAMAX FIXED(31),              /* MAXUSER VALUE DUPLEX AREA  */ 02350002
*      3 * FIXED(15),                  /* USED ONLY FOR HIGH BIT     */ 02400002
*        4 GSDAMAXB BIT(1),            /* IF ON THEN DUPLEX IS VALID */ 02500002
*        4 * BIT(15),                  /*RESERVED                    */ 02550002
*      3 GSDAMAXU FIXED(15),           /* MAXUSER DUPLEX AREA        */ 02600002
*    2 * CHAR(0) BDY(DWORD);           /* ASSURE DWORD ALIGNED       */ 02650002
./  ADD  SSI=73340150,NAME=IHAHDR
*        % GOTO HDRBSL1;                                             /* 00050002
         MACRO                                                          00100002
         IHAHDR  &DSECT=YES                                          */ 00150002
*%HDRBSL1 : ;                                                           00152002
* /* MACMEAN HDR MEANS AR149 HEADER                                  */ 00154002
* /* MACCOMP Y-1 SC1C5 PZD81                                         */ 00156002
* /* MACSTAT Y-1 72178/Y02701. OZ27936,11/11/77,G LUX.               */ 00158000
*        %GOTO HDRBSL;                                               /* 00158402
         AIF   ('&DSECT' EQ 'YES').HDR001                               00160002
HDR      DS    0D -                                                     00200002
         AGO   .HDR002                                                  00202002
.HDR001  ANOP                                                           00204002
HDR      DSECT , HDRPTR                                                 00210002
.HDR002  SPACE 1                                                        00250002
HDRTYP   DS    B -      RECORD TYPE                                     00600002
HDRMC0   EQU   X'13'    MCH,MCAR                                        00650002
HDRMC2   EQU   X'12'    CONVERTED MCH                                   00700002
HDRMC8   EQU   X'18'    SER 1                                           00750002
HDRMC9   EQU   X'19'    SER 0                                           00800002
HDRMCA   EQU   X'1A'    CONVERTED SER 1                                 00850002
HDRMCB   EQU   X'1B'    CONVERTED SER 0                                 00900002
HDRCC0   EQU   X'21'    CCH                                             00950002
HDRCC2   EQU   X'22'    CONVERTED CCH                                   01000002
HDRCC8   EQU   X'28'    SER 1                                           01050002
HDRCC9   EQU   X'29'    SER 0                                           01100002
HDRCCA   EQU   X'2A'    CONVERTED SER 1                                 01150002
HDRCCB   EQU   X'2B'    CONVERTED SER 0                                 01200002
HDRUC0   EQU   X'30'    OBR                                             01250002
HDRUC2   EQU   X'32'    CONVERTED OBR                                   01300002
HDRUC4   EQU   X'34'    TP ACCESS METHOD                                01350002
HDRSE0   EQU   X'40'    PROGRAM ISSUED SVC 13                           01400002
HDRSE1   EQU   X'41'    FORCED SVC 13                                   01450002
HDRSE2   EQU   X'42'    MACHINE CHECK                                   01500002
HDRSE4   EQU   X'44'    OPERATOR PRESSED RESTART                        01550002
HDRSE8   EQU   X'48'    PROGRAM CHECK OCCURRED                          01600002
HDRSEF   EQU   X'4F'    SHORT RECORD - LOST RECORD COUNT                01650002
HDRIPL   EQU   X'50'    IPL                                             01700002
HDRRCG   EQU   X'60'    RECONFIGURATION                                 01750002
HDREOD   EQU   X'80'    END OF DAY                                      01800002
HDRNS0   EQU   X'90'    NON-MDR RECORDED                                01850002
HDRNS1   EQU   X'91'    MISCELLANEOUS DATA RECORDER                     01900002
HDRNS3   EQU   X'93'    CONVERTED TPER                                  01950002
HDROPRN  DS    B -      OP SYSTEM AND RELEASE                           02000002
HDROS    EQU   X'15'    OS - RELEASE 21                                 02050002
HDRDOS   EQU   X'20'    DOS - OLD LEVELS                                02100002
HDRDOS1  EQU   X'21'    DOS - FIRST RELSE WITH RMSR                     02150002
HDRDOS2  EQU   X'22'    DOS - NXT RELSE AFTER RMSR                      02200002
HDRVS11  EQU   X'41'    VS/1 - RELEASE 1                                02250002
HDRVS12  EQU   X'42'    VS/1 - RELEASE 2                                02300002
HDRCP67  EQU   X'60'    CP67                                            02350002
HDRVS21  EQU   X'81'    VS/2 - RELEASE 1                                02400002
HDRVS22  EQU   X'82'    VS/2 - RELEASE 1                                02450002
HDRIS    DS    B -      RECORD INDEPENDENT SWITCHES                     02500002
HDRISMR  EQU   X'80'    MULTIPLE RECORD RECORDING                       02550002
HDRISNS  EQU   X'40'    NS MACHINE (NS CLOCK)                           02600002
HDRISTM  EQU   X'08'    TIME MACRO USED                                 02650002
HDRISMP  EQU   X'04'    MULTIPROCESSING                                 02700002
HDRISR   EQU   X'02'    RELOCATE                                        02750002
HDRISEC  EQU   X'01'    EC MODE                                         02800002
HDRDS    DS    0CL3     RECORD DEPENDENT SWITCHES                       02850002
HDRDS1   DS    B -      FIRST BYTE OF SWITCHES - MEANING DEPENDENT      02900002
*                       ON RECORD TYPE                                  02950002
HDRDS10  EQU   X'80'    SHORT RECORD (PER GC28-0772)           @ZA27936 03000000
HDRDS11  EQU   X'40'                                                    03050002
HDRDS12  EQU   X'20'    ERRORID PRESENT FOR SOFTWARE RECORDS   @G17EP5W 03070041
HDRDS13  EQU   X'10'    ERRORID PRESENT FOR HARDWARE RECORDS   @G17EP5W 03100041
HDRDS14  EQU   X'08'                                                    03200002
HDRDS15  EQU   X'04'                                                    03250002
HDRDS16  EQU   X'02'                                                    03300002
HDRDS17  EQU   X'01'                                                    03350002
HDRDS2   DS    B -      SECOND BYTE OF SWITCHES - USED BY MDR           03400002
HDRMDR1  EQU   X'01'    3330                                            03450002
HDRMDR2  EQU   X'02'    2305-2                                          03500002
HDRMDR4  EQU   X'04'    3211                                            03550002
HDRMDR8  EQU   X'08'    2715                                            03600002
HDRMDR12 EQU   X'12'    2305-1                                          03650002
HDRMDA0  EQU   X'F0'    2946 AIRLINE DEVELOPMENT                        03700002
HDRMDA1  EQU   X'F1'    2948 AIRLINE DEVELOPMENT                        03750002
HDRMDA2  EQU   X'F2'    1006 AIRLINE DEVELOPMENT                        03800002
HDRMDA3  EQU   X'F3'    2703 COMM LINE AIRLINE DEVELOPMENT              03850002
HDRMDA4  EQU   X'F4'    2969 COMM LINE AIRLINE DEVELOPMENT              03900002
HDRDS3   DS    B -      THIRD BYTE OF SWITCHES - RESERVED               03950002
HDRCNT   DS    B -      RECORD COUNT                                    04000002
HDRCNTS  EQU   X'F0'    SEQUENCE NUMBER OF PHYSICAL RECORD              04050002
HDRCNTT  EQU   X'0F'    TOTAL NUMBER OF PHYSICAL RECORDS                04100002
         DS    B -      RESERVED                                        04150002
HDRDTM   DS    CL8      DATE AND TIME                                   04200002
HDRCPID  DS    CL8      CPU ID AND SERIAL NUMBER                        04250002
         MEND  , */                                                     04300002
*%HDRBSL  :  ;                                                          04350002
*DECLARE                                                                04750002
*  1 HDR BASED(HDRPTR),                                                 04800002
*   2 HDRTYP CHAR(1),    /* RECORD TYPE                              */ 04850002
*     %HDRMC0='''13''X'; /* MCH,MCAR */                                 04900002
*     %HDRMC2='''12''X'; /* CONVERTED MCH */                            04950002
*     %HDRMC8='''18''X'; /* SER 1 */                                    05000002
*     %HDRMC9='''19''X'; /* SER 0 */                                    05050002
*     %HDRMCA='''1A''X'; /* CONVERTED SER 1 */                          05100002
*     %HDRMCB='''1B''X'; /* CONVERTED SER 0 */                          05150002
*     %HDRCC0='''21''X'; /* CCH */                                      05200002
*     %HDRCC2='''22''X'; /* CONVERTED CCH */                            05250002
*     %HDRCC8='''28''X'; /* SER 1 */                                    05300002
*     %HDRCC9='''29''X'; /* SER 0 */                                    05350002
*     %HDRCCA='''2A''X'; /* CONVERTED SER 1 */                          05400002
*     %HDRCCB='''2B''X'; /* CONVERTED SER 0 */                          05450002
*     %HDRUC0='''30''X'; /* OBR */                                      05500002
*     %HDRUC2='''32''X'; /* CONVERTED OBR */                            05550002
*     %HDRUC4='''34''X'; /* TP ACCESS METHOD */                         05600002
*     %HDRSE0='''40''X'; /* PROGRAM ISSUED SVC 13 */                    05650002
*     %HDRSE1='''41''X'; /* FORCED SVC 13 */                            05700002
*     %HDRSE2='''42''X'; /* MACHINE CHECK */                            05750002
*     %HDRSE4='''44''X'; /* OPERATOR PRESSED RESTART */                 05800002
*     %HDRSE8='''48''X'; /* PROGRAM CHECK OCCURRED */                   05850002
*     %HDRSEF='''4F''X'; /* SHORT RECORD - LOST RECORD COUNT */         05900002
*     %HDRIPL='''50''X'; /* IPL */                                      05950002
*     %HDRRCG='''60''X'; /* RECONFIGURATION */                          06000002
*     %HDREOD='''80''X'; /* END OF DAY */                               06050002
*     %HDRNS0='''90''X'; /* NON-MDR RECORDED */                         06100002
*     %HDRNS1='''91''X'; /* MISCELLANEOUS DATA RECORDER */              06150002
*     %HDRNS3='''93''X'; /* CONVERTED TPER */                           06200002
*   2 HDROPRN FIXED(8),  /* OP SYSTEM AND RELEASE            @Z40CPXH*/ 06220041
     3 HDROPSYS BIT(3),  /* OPERATING SYSTEM ID              @Z40CPXH*/ 06250041
     3 HDRRELN  BIT(5),  /* RELEASE NUMBER                   @Z40CPXH*/ 06260041
*     %HDROS ='''15''X'; /* OS RELEASE 21 */                            06300002
*     %HDRDOS='''20''X'; /* DOS - OLD LEVELS */                         06350002
*     %HDRDOS1='''21''X'; /* DOS - FIRST RELEASE WITH RMSR */           06400002
*     %HDRDOS2='''22''X'; /* DOS - NEXT RELEASE AFTER RMSR */           06450002
*     %HDRVS11='''41''X'; /* VS1 - RELEASE 1 */                         06500002
*     %HDRVS12='''42''X'; /* VS1 - RELEASE 2 */                         06550002
*     %HDRCP67='''60''X'; /* CP67 */                                    06600002
*     %HDRVS21='''81''X'; /* VS2 - RELEASE 1 */                         06650002
*     %HDRVS22='''82''X'; /* VS2 - RELEASE 2 */                         06700002
*   2 HDRIS CHAR(1),     /* RECORD INDEPENDENT SWITCHES              */ 06750002
*    3 HDRISMR BIT(1),   /* MULTIPLE RECORD RECORDING                */ 06800002
*    3 HDRISNS BIT(1),   /* NS MACHINE (NS CLOCK)                    */ 06850002
*    3 HDRTRUNC BIT(1),  /* RECORD TRUNCATED (VS2/2)                 */ 06900002
*    3 *       BIT(1),   /* RESERVED                                 */ 06950002
*    3 HDRISTM BIT(1),   /* TIME MACRO USED                          */ 07000002
*    3 HDRISMP BIT(1),   /* MULTIPROCESSING                          */ 07050002
*    3 HDRISR BIT(1),    /* RELOCATE                                 */ 07100002
*    3 HDRISEC BIT(1),   /* EC MODE                                  */ 07150002
*   2 HDRDS CHAR(3),     /* RECORD DEPENDENT SWITCHES                */ 07200002
*    3 HDRDS1 CHAR(1),   /* FIRST BYTE OF SWITCHES - MEANING         */ 07250002
*                        /* DEPENDENT ON RECORD TYPE                 */ 07300002
*     4 HDRDS10 BIT(1),  /* SHORT RECORD (PER GC28-0772)     @ZA27936*/ 07350000
*     4 HDRDS11 BIT(1),                                                 07400002
*     4 HDRDS12 BIT(1),  /*ERRORID PRESENT FOR SOFTWARE RECS @G17EP5W*/ 07420041
*     4 HDRDS13 BIT(1),  /*ERRORID PRESENT FOR HARDWARE RECS @G17EP5W*/ 07450041
*     4 HDRDS14 BIT(1),                                                 07550002
*     4 HDRDS15 BIT(1),                                                 07600002
*     4 HDRDS16 BIT(1),                                                 07650002
*     4 HDRDS17 BIT(1),                                                 07700002
*    3 HDRDS2 CHAR(1),   /* SECOND BYTE OF SWITCHES - USED BY MDR    */ 07750002
*     %HDRMDR1='''01''X'; /* 3330 */                                    07800002
*     %HDRMDR2='''02''X'; /* 2305-2 */                                  07850002
*     %HDRMDR4='''04''X'; /* 3211 */                                    07900002
*     %HDRMDR8='''08''X'; /* 2715 */                                    07950002
*     %HDRMDR12='''12''X'; /* 2305-1 */                                 08000002
*     %HDRMDA0='''F0''X'; /* 2946 AIRLINE DEVELOPMENT */                08050002
*     %HDRMDA1='''F1''X'; /* 2948 AIRLINE DEVELOPMENT */                08100002
*     %HDRMDA2='''F2''X'; /* 1006 AIRLINE DEVELOPMENT */                08150002
*     %HDRMDA3='''F3''X'; /* 2703 COMM LINE AIRLINE DEVELOPMENT */      08200002
*     %HDRMDA4='''F4''X'; /* 2969 COMM LINE AIRLINE DEVELOPMENT */      08250002
*    3 HDRDS3 CHAR(1),   /* THIRD BYTE OF SWITCHES - RESERVED        */ 08300002
*   2 HDRCNT CHAR(1),    /* RECORD COUNT                             */ 08350002
*    3 HDRCNTS BIT(4),   /* SEQUENCE NUMBER OF PHYSICAL RECORD       */ 08400002
*    3 HDRCNTT BIT(4),   /* TOTAL NUMBER OF PHYSICAL RECORDS         */ 08450002
*   2 * CHAR(1),         /* RESERVED                                 */ 08500002
*   2 HDRTM CHAR(8),     /* DATE AND TIME                            */ 08550002
*   2 HDRCPID CHAR(8);   /* CPU ID AND SERIAL NUMBER                 */ 08600002
./  ADD  SSI=31320079,NAME=IHAINF
*        %GOTO INFL1;        /*                                         00050002
         MACRO                                                          00100000
         IHAINF , */                                                    00150002
*%INFL1: ;                                                              00160002
*/*      IHAINF - TYPE 1 MESSAGE TABLE ENTRY MAPPING                 */ 00200002
*/*      RELEASE 2.0 VS2, 5/8/73, LEVEL=1                            */ 00250002
*/*                                                                  */ 00300002
*/*      THIS MAPS A SINGLE ENTRY OF THE TYPE 1 MESSAGE TABLE WHICH  */ 00310002
*/*      IS USED AS A DROP AREA FOR INFORMATION ASSOCIATED WITH A    */ 00320002
*/*      FAILURE IN A TYPE 1 SVC.  THE INFORMATION IN THE ENTRY IS   */ 00322002
*/*      PUT OUT VIA WTP BY RTM.  THE ONLY USER OF THIS TABLE        */ 00330002
*/*      CURRENTLY IS GETMAIN/FREEMAIN.                              */ 00340002
*/*                                                                  */ 00342002
*/*      THE COMPLETE TABLE CONSISTS OF A FOUR BYTE POINTER FOLLOWED */ 00344002
*/*      BY A NUMBER OF ENTRIES.  THE POINTER POINTS TO THE BYTE     */ 00346002
*/*      FOLLOWING THE END OF THE COMPLETE TABLE.                    */ 00348002
*/*                                                                  */ 00348402
*%GOTO INFL2; /*                                                        00348802
INFOLIST DSECT , INFPTR -     INFORMATION LIST                          00350000
INFASCB  DS    A -            ADDRESS ASCB                      @Y02702 00360002
INFOBODY DS    0CL32          MAIN BODY OF ENTRY                @Y02702 00370002
INFTCB   DS    A -            ADDRESS TCB                               00400000
INFBADDR DS    A -            REGISTER 14 IF A BRANCH ENTRY             00450000
INFRCL   DS    BL1 -          REASON CODE AND COUNT OF VARIABLE DATA.   00500000
INFCL    EQU   X'E0' -        REASON CODE ON BITS 0-2.                  00550000
INFVARCT EQU   X'1F' -        COUNT OF VARIABLE DATA IN BITS 3-7.       00600000
INFFLG   DS    BL1 -          FLAG BYTE                                 00650000
INFFLG0  EQU   X'80' -        WHEN 1, INDICATES BRANCH ENTRY            00700000
INFCC    DS    0H -           COMPLETION CODE                           00750000
         DS    C                                                        00800000
INFCCSVC DS    C -            SVC NUMBER                                00850000
INFVAR   DS    4F -           VARIABLE INFORMATION                      00900000
         ORG   INFVAR         ORG BACK FOR VARIABLE FIELDS              00950000
INFVAR1  DS    F -            VARIABLE WORD 1                           01000000
INFVAR2  DS    F -            VARIABLE WORD 2                           01050000
INFVAR3  DS    F -            VARIABLE WORD 3                           01100000
INFVAR4  DS    F -            VARIABLE WORD 4                           01150000
INFRSV01 DS    H              RESERVED FOR EXPANSION            @Y02702 01200002
INFRSV02 DS    H              RESERVED FOR EXPANSION            @Y02702 01250002
INFEND   DS    0C -           END OF INFOLIST                           01300000
INFLEN   EQU   INFEND-INFOLIST - LENGTH OF INFOLIST                     01350000
         MEND  , */                                                     01400000
*%INFL2 :  ;                                                            01450002
*DECLARE                                                                01700000
*  1 INFOLIST BASED(INFOPTR), /* INFORMATION LIST                    */ 01750000
*   2 INFASCB PTR(31),        /* ADDRESS ASCB                 @Y02702*/ 01760002
*   2 INFOBODY,               /* MAIN BODY OF ENTRY           @Y02702*/ 01770002
*    4 INFTCB PTR(31),        /* ADDRESS TCB                         */ 01800002
*    4 INFBADDR PTR(31),      /* REGISTER 14 IF BRANCH ENTRY         */ 01850002
*    4 INFRCL CHAR(1),        /* REASON CODE AND COUNT OF VARIABLE      01900002
*                                DATA.                               */ 01950000
*     8 INFCL BIT(3),         /* REASON CODE                         */ 02000002
*     8 INFVARCT BIT(5),      /* COUNT OF VARIABLE DATA.             */ 02050002
*    4 INFFLG CHAR(1),        /* FLAG BYTE                           */ 02100002
*     8 INFFLG0 BIT(1),       /* WHEN 1, INDICATES BRANCH ENTRY      */ 02150002
*    4 INFCC FIXED(15),       /* COMPLETION CODE                     */ 02200002
*     8 * PTR(8),                                                       02250002
*     8 INFCCSVC PTR(8),      /* SVC NUMBER                          */ 02300002
*    4 INFVAR,                /* VARIABLE INFORMATION                */ 02350002
*     8 INFVAR1 FIXED(31),    /* VARIABLE WORD 1                     */ 02400002
*     8 INFVAR2 FIXED(31),    /* VARIABLE WORD 2                     */ 02450002
*     8 INFVAR3 FIXED(31),    /* VARIABLE WORD 3                     */ 02500002
*     8 INFVAR4 FIXED(31),    /* VARIABLE WORD 4              Y00489 */ 02550002
*    4 INFRSV01 FIXED(15),    /* RESERVED                     @Y02702*/ 02600002
*    4 INFRSV02 FIXED(15);    /* RESERVED                     @Y02702*/ 02650002
*DECLARE INFEND CHAR(0) BASED(ADDR(INFOLIST)+LENGTH(INFOLIST));         02700002
./  ADD  SSI=20830507,NAME=IHAIQE
*        %GOTO IQEBSL;                                               /* 01550001
         MACRO                                                          02550001
         IHAIQE                                                         03550001
**             INTERRUPTION QUEUE ELEMENT - I.Q.E.       LEVEL=1        04550001
IQESECT  DSECT , IQEPTR                                                 05550001
IQELNK   DS    0AL4     .WORD REFERENCE FOR IQELNKA                     06550001
IQESTAT1 DS    B        .1 BYTE RESERVED                                07550001
IQELNKA  DS    AL3      .ADDR NEXT IQE                                  08550001
IQEPARAM DS    A        .PARMS TO BE PASSED TO ASYN EXIT RTN            09550001
IQEIRB   DS    0AL4     .WORD REFERENCE FOR IQEIRBA                     10550001
IQEFLAGS DS    B        .FLAG FIELD                                     11550001
IQEPURGE EQU   X'80'    .THIS IQE MUST NOT BE SCHEDULED                 12550001
IQEIRBA  DS    AL3      .ADDR IRB TO BE SCHEDULED                       13550001
IQETCB   DS    0AL4     .WORD REFERENCE FOR IQETCBA                     14550001
IQESTAT2 DS    B        .1 BYTE RESERVED                                15550001
IQETCBA  DS    AL3      .ADDR TCB ASSOCIATED WITH THIS IQE              16550001
**      THE FOLLOWING IS IN BEHALF OF S.M.F.                            17550001
IQEDCB   DS    A        .ADDR OF DCB                                    18550001
IQEOUTLM DS    A        .ADDR OF OUTPUT LIMIT                           19550001
IQEEND   DS    0C       .END OF IQE                                     20550001
IQELEN   EQU   IQEEND-IQESECT .LENGTH OF IQE                            21550001
         MEND  , */                                                     22550001
*%IQEBSL  :  ;                                                          23550001
*/*            INTERRUPTION QUEUE ELEMENT - I.Q.E.        LEVEL=1    */ 24550001
*DECLARE                                                                25550001
*  1 IQESECT  BASED(IQEPTR),                                            26550001
*   2 IQELNK      PTR(31)  BDY(BYTE),    /* .WORD REFERENCE FOR         27550001
*                                           IQELNKA                  */ 28550001
*    3 IQESTAT1    CHAR(1),              /* .1 BYTE RESERVED         */ 29550001
*    3 IQELNKA     PTR(24)  BDY(BYTE),   /* .ADDR NEXT IQE           */ 30550001
*   2 IQEPARAM    PTR(31),               /* .PARMS TO BE PASSED TO      31550001
*                                           ASYN EXIT RTN            */ 32550001
*   2 IQEIRB      PTR(31)  BDY(BYTE),    /* .WORD REFERENCE FOR         33550001
*                                           IQEIRBA                  */ 34550001
*    3 IQEFLAGS    CHAR(1),              /* .FLAG FIELD              */ 35550001
*     4 IQEPURGE BIT(1),                 /* .THIS IQE MUST NOT BE       36550001
*                                           SCHEDULED                */ 37550001
*     4 *        BIT(1),                 /* RESERVED                 */ 38550001
*     4 *        BIT(1),                 /* RESERVED                 */ 39550001
*     4 *        BIT(1),                 /* RESERVED                 */ 40550001
*     4 *        BIT(1),                 /* RESERVED                 */ 41550001
*     4 *        BIT(1),                 /* RESERVED                 */ 42550001
*     4 *        BIT(1),                 /* RESERVED                 */ 43550001
*     4 *        BIT(1),                 /* RESERVED                 */ 44550001
*    3 IQEIRBA     PTR(24)  BDY(BYTE),   /* .ADDR IRB TO BE             45550001
*                                           SCHEDULED                */ 46550001
*   2 IQETCB      PTR(31)  BDY(BYTE),    /* .WORD REFERENCE FOR         47550001
*                                           IQETCBA                  */ 48550001
*    3 IQESTAT2    CHAR(1),              /* .1 BYTE RESERVED         */ 49550001
*    3 IQETCBA     PTR(24)  BDY(BYTE),   /* .ADDR TCB ASSOCIATED        50550001
*                                           WITH THIS IQE            */ 51550001
*/*     THE FOLLOWING IS IN BEHALF OF S.M.F.                         */ 52550001
*   2 IQEDCB      PTR(31),               /* .ADDR OF DCB             */ 53550001
*   2 IQEOUTLM    PTR(31);               /* .ADDR OF OUTPUT LIMIT    */ 54550001
*DECLARE 1 IQEEND  (*) CHAR(1)   BASED                                  55550001
*  (ADDR(IQESECT )+LENGTH(IQESECT ));                                   56550001
*                                        /* .END OF IQE              */ 57550001
./  ADD  SSI=22702189,NAME=IHALCCAT
*                                                                       00050002
*        %GOTO LCCATL1;  /*                                             00100002
         MACRO                                                          00150002
         IHALCCAT &DSECT=YES   */                                       00200002
*%LCCATL1 : ;                                                           00250002
*                                                                       00300002
*/* **************************************************************** */ 00350002
*/*                                                                  */ 00400002
*/*            LCCA VECTOR TABLE                                     */ 00450002
*/*                                                                  */ 00500002
*/*  OS/VS2 RELEASE 2, 06/28/72, LEVEL=2                             */ 00550002
*/*                                                                  */ 00600002
*/*  METHOD OF ACCESS                                                */ 00650002
*/*      BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */ 00700002
*/*             USING ON LCCAVT GIVES ADDRESSABILITY FOR ALL SYMBOLS.*/ 00750002
*/*      PL/S - INCLUDE CVT TO DEFINE CVTLCCAT                       */ 00800002
*/*                                                                  */ 00850002
*/* **************************************************************** */ 00900002
*%GOTO LCCATL2;   /*                                                    00950002
         SPACE 1                                                        01000002
         AIF   ('&DSECT' EQ 'NO').LCCAT10                               01050002
LCCAVT   DSECT                                                          01100002
         AGO   .LCCAT20                                                 01150002
.LCCAT10 ANOP                                                           01200002
         DS    0D                                                       01250002
LCCAVT   EQU   *                                                        01300002
.LCCAT20 ANOP                                                           01350002
LCCAT00P DC    A(0) -         ADDRESS OF LCCA FOR CPU 0                 01400002
LCCAT01P DC    A(0) -         ADDRESS OF LCCA FOR CPU 1                 01450002
LCCAT02P DC    A(0) -         ADDRESS OF LCCA FOR CPU 2                 01500002
LCCAT03P DC    A(0) -         ADDRESS OF LCCA FOR CPU 3                 01550002
LCCAT04P DC    A(0) -         ADDRESS OF LCCA FOR CPU 4                 01600002
LCCAT05P DC    A(0) -         ADDRESS OF LCCA FOR CPU 5                 01650002
LCCAT06P DC    A(0) -         ADDRESS OF LCCA FOR CPU 6                 01700002
LCCAT07P DC    A(0) -         ADDRESS OF LCCA FOR CPU 7                 01750002
LCCAT08P DC    A(0) -         ADDRESS OF LCCA FOR CPU 8                 01800002
LCCAT09P DC    A(0) -         ADDRESS OF LCCA FOR CPU 9                 01850002
LCCAT10P DC    A(0) -         ADDRESS OF LCCA FOR CPU 10                01900002
LCCAT11P DC    A(0) -         ADDRESS OF LCCA FOR CPU 11                01950002
LCCAT12P DC    A(0) -         ADDRESS OF LCCA FOR CPU 12                02000002
LCCAT13P DC    A(0) -         ADDRESS OF LCCA FOR CPU 13                02050002
LCCAT14P DC    A(0) -         ADDRESS OF LCCA FOR CPU 14                02100002
LCCAT15P DC    A(0) -         ADDRESS OF LCCA FOR CPU 15                02150002
         MEND  , -   */                                                 02200002
*%LCCATL2 : ;                                                           02250002
*                                                                       02300002
*DECLARE                                                                02350002
*  1 LCCAVT   BASED(CVTLCCAT) BDY(DWORD),                               02400002
*   2 LCCAT00P  (16) PTR(31);            /* ADDRESSES OF LCCA'S FOR     02450002
*                                           CPU'S 0-15               */ 02500002
./  ADD  SSI=20350025,NAME=IHAMB
*        %GOTO MBBSL;                  /* BILIGUAL MAPPING              00050001
         MACRO                                                          00100001
         IHAMB                                                          00150001
MB       DSECT                                                          00200001
MBPARM   DS    F                       WTP PARAMETERS                   00250001
MBID     DS    7C                      MESSAGE ID                       00300001
         ORG   MBID                                                     00310001
         DS    5C                                                       00320001
MBIDSVC  DS    C                       CHNG MSG ID TO SVC NUMBER        00330001
         DS    C                                                        00340001
         DS    C                       BLANK                            00350001
MBCC     DS    3C                      COMPLETION CODE                  00400001
MBDASH   DS    C                       A DASH IF A REASON CODE EXISTS   00450001
*                                      OTHERWISE BLANK                  00500001
MBRC     DS    C                       REASON CODE OR BLANK             00550001
         DS    C                       BLANK                            00600001
MBJOB    DS    8C                      JOB NAME                         00650001
         DS    C                       BLANK                            00700001
MBSTEP   DS    8C                      STEP NAME                        00750001
         DS    C                       BLANK                            00800001
MBFLG    DS    2C                      FLAG FIELD                       00850001
         DS    C                       BLANK                            00900001
MBVAR    DS    35C                     VARIABLE DATA                    00950001
         ORG   MBVAR                                                    00960001
MBVAR1   DS    8C                      VARIABLE WORD 1                  00970001
         DS    C                       BLANK                            00980001
MBVAR2   DS    8C                      VARIABLE WORD 2                  00990001
         DS    C                       BLANK                            00992001
MBVAR3   DS    8C                      VARIABLE WORD 3                  00994001
         DS    C                       BLANK                            00996001
MBVAR4   DS    8C                      VARIABLE WORD 4                  00998001
MBEND    EQU   *                                                        01000001
MBLENGTH EQU   MBEND-MBPARM            LENGTH OF FULL MESSAGE           01050001
         MEND  ,  */                                                    01100001
*%MBBSL : ;                                                             01110001
*        DCL 1 MB BASED(MBPTR),                                         01150001
*              2 MBPARM CHAR(4),       /* WTP PARAMETERS             */ 01200001
*              2 MBID CHAR(7),         /* MESSAGE ID                 */ 01250001
*                3 * CHAR(5),                                           01300001
*                3 MBIDSVC CHAR(1),    /* CHNGE MSG ID TO SVC NUMBER */ 01350001
*                3 * CHAR(1),                                           01400001
*              2 * CHAR(1),            /* BLANK                      */ 01410001
*              2 MBCC CHAR(3),         /* COMPLETION CODE            */ 01450001
*              2 MBDASH CHAR(3),       /* DASH IF REASON CODE EXISTS    01500001
*                                         OTHERWISE BLANK            */ 01550001
*              2 MBRC CHAR(1),         /* REASON CODE OR BLANK       */ 01600001
*              2 * CHAR(1),            /* BLANK                      */ 01650001
*              2 MBJOB CHAR(8),        /* JOB NAME                   */ 01700001
*              2 * CHAR(1),            /* BLANK                      */ 01750001
*              2 MBSTEP CHAR(8),       /* STEP NAME                  */ 01800001
*              2 * CHAR(1),            /* BLANK                      */ 01850001
*              2 MBFLG CHAR(2),        /* FLAG FIELD                 */ 01950001
*              2 * CHAR(1),            /* BLANK                      */ 02000001
*              2 MBVAR CHAR(35),       /* VARIABLE FIELDS            */ 02050001
*                3 MBVAR1 CHAR(8),     /* VARIABLE FIELD 1           */ 02100001
*                3 * CHAR(1),          /* BLANK                      */ 02150001
*                3 MBVAR2 CHAR(8),     /* VARIABLE FIELD 2           */ 02200001
*                3 * CHAR(1),          /* BLANK                      */ 02250001
*                3 MBVAR3 CHAR(8),     /* VARIABLE FIELD 3           */ 02300001
*                3 * CHAR(1),          /* BLANK                      */ 02350001
*                3 MBVAR4 CHAR(8);     /* VARIABLE FIELD 4           */ 02400001
*                                                                       02450001
*/*                                                                  */ 02500001
*%MBLENGTH='LENGTH(MB)';                                                02550001
*                                                                       02600001
*/*                                                                  */ 02650001
./  ADD  SSI=60780531,NAME=IHAPCB
*        %GOTO PCBPLS;                                               /* 00050002
         MACRO                                                          00100002
         IHAPCB &DSECT=YES                                              00150002
         IEZBITS                                                        00200002
         AGO   .PCBARND                                                 00250002
*********************************************************************** 00300002
*                                                                     * 00350002
* STATUS -                                                            * 00400002
*    CHANGE LEVEL 1 - VS2 RELEASE 2 VERSION                           * 00450002
* FUNCTION -                                                          * 00500002
*    MAPPING MACRO FOR PAGE CONTROL BLOCK                             * 00550002
* ENTRY POINTS -                                                      * 00600002
*     IHAPCB MACRO CALL                                               * 00650002
* INPUT -                                                             * 00700002
*    SEE IHAPCB MACRO DEFINITION                                      * 00750002
* OUTPUT -                                                            * 00800002
*    PCB MAPPING MACRO                                                * 00850002
* EXTERNAL REFERENCES -                                               * 00900002
*    N/A                                                              * 00950002
* EXITS, NORMAL -                                                     * 01000002
*    N/A                                                              * 01050002
* EXITS, ERROR -                                                      * 01100002
*    N/A                                                              * 01150002
* TABLES/WORK AREAS -                                                 * 01200002
*    N/A                                                              * 01250002
* ATTRIBUTES -                                                        * 01300002
*    BILINGUAL MACRO                                                  * 01350002
* CHARACTER CODE DEPENDENCY -                                         * 01400002
*    NONE                                                             * 01450002
* NOTES -                                                             * 01500002
*    NONE                                                             * 01550002
*                                                                     * 01600002
*********************************************************************** 01650002
.PCBARND ANOP                                                           01700002
*********************************************************************** 01750002
**                        PAGE CONTROL BLOCK    4/11/75               * 01800040
**                                                                    * 01850002
**       ONE PCB EXISTS FOR EACH VIRTUAL PAGE FOR WHICH A PAGING I/O  * 01900002
**       OPERATION MAY BE REQUIRED.  PCB'S ARE ON QUEUES ANCHORED     * 01950002
**       IN THE PVT AND RSMHD.                                        * 02000002
*********************************************************************** 02050002
         AIF   ('&DSECT' EQ 'NO').PCB001                                02100002
PCB      DSECT , PCBPTR                                                 02150002
         AGO   .PCB002                                                  02200002
.PCB001  ANOP                                                           02250002
PCB      DS    0F                                                       02300002
.PCB002  ANOP                                                           02350002
PCBFQP   DS    0F -            FULLWORD REFERENCE FOR FORWARD POINTER   02400002
PCBCQN   DS    CL1 -           CURRENT QUEUE NUMBER                     02450002
PCBFREQN EQU   X'10' -         PCB ON FREE QUEUE                        02500002
PCBDEFRN EQU   X'18' -         PCB ON GFA DEFER QUEUE                   02550002
PCBCIOQN EQU   X'20' -         PCB ON COMMON I/O ACTIVE QUEUE           02600002
PCBLIOQN EQU   X'88' -         PCB ON LOCAL I/O ACTIVE QUEUE  @Z40WPYD  02650040
PCBDEQN  EQU   X'FF' -         NOT CURRENTLY QUEUED                     02700002
PCBFQPA  DS    AL3 -           FORWARD QUEUE POINTER                    02750002
PCBBQP   DS    0F -            FULLWORD REFERENCE FOR BACKWARD PTR      02800002
PCBBQPA  DS    A -             BACKWARD QUEUE POINTER                   02900002
PCBRTP   DS    0F -            FULLWORD REFERENCE FOR ROOT PCB PTR      02950002
PCBFL1   DS    BL1 -           FIRST FLAG FIELD                         03000002
*        EQU   BIT0 -          RESERVED.                       @Z40WPYD 03020040
PCBPEX   EQU   BIT1 -          PAGE EXCEPTION FLAG, WHEN 1 = THIS PCB   03200002
*                              IS FOR A PAGE FAULT INTERUPTION          03250002
PCBSRBMD EQU   BIT2 -          SRB MODE FLAG                            03300002
*                              WHEN = 1 PCB IS FOR SRB PAGE FAULT       03350002
*                              PROCESSING.  PCBSRB CONTAINS AN          03400002
*                              SRB ADDRESS.                             03450002
PCBLLHLD EQU   BIT3 -          THE LOCAL LOCK HELD FLAG.                03500002
*                              WHEN = 1 LOCAL LOCK WAS HELD WHEN        03550002
*                              PAGE FAULT OCCURRED.                     03600002
PCBLFR   EQU   BIT4 -          LONG FIX REQUEST FLAG                    03650002
PCBROOT  EQU   BIT5 -          WHEN 1 INDICATES THAT PCBRTPA IS A       03700002
*                              ROOT PCB POINTER, WHEN 0 INDICATES       03750002
*                              THAT PCBRTPA IS A TCB POINTER            03800002
PCBIOI   EQU   BIT6 -          INPUT-OUTPUT FLAG. WHEN 1 =              03850002
*                              PAGE OUT, WHEN 0 = PAGE IN               03900002
PCBIOCMP EQU   BIT7 -          WHEN 1 = PAGING I/O COMPLETE FOR THIS    03950002
*                              PCB.                                     04000002
PCBRTPA  DS    AL3 -           ROOT PCB POINTER/TCB POINTER             04050002
*                              CONTENTS DETERMINED BY PCBROOT FLAG      04100002
PCBRLP   DS    0F -            FULLWORD REFERENCE FOR RELATED           04150002
*                              PCB POINTER                              04200002
PCBFXC   DS    FL1 -           FIX COUNT                                04250002
PCBRLPA  DS    AL3 -           RELATED PCB POINTER                      04300002
PCBXPT   DS    0F -            FULLWORD REFERENCE FOR XPTE PTR          04350002
PCBFL2   DS    BL1 -           SECOND FLAG FIELD                        04400002
PCBFREAL EQU   BIT0 -          FREE REAL FLAG. WHEN 1, THIS FLAG        04450002
*                              INDICATES THAT THE REAL FRAME            04500002
*                              ASSOCIATED WITH THE PCB SHOULD BE        04550002
*                              BE FREED AT I/O COMPLETION.              04650002
PCBGFAD  EQU   BIT1 -          GFA DEFER PRCESSOR SCHEDULED FLAG        04750002
*                              WHEN 1, GFA DEFER PROCESSOR HAS BEEN     04800002
*                              SCHEDULED FOR THIS PCB.                  04850002
PCBIOERR EQU   BIT2 -          PERMANENT I/O ERROR FLAG.                04900002
*                              WHEN 1 A PAGING I/O OPERATION HAS        04950002
*                              FAILED BECAUSE OF A PERMANENT I/O        05000002
*                              ERROR                                    05050002
PCBRESET EQU   BIT3 -          RESET FLAG. WHEN 1, CALL RESET FOR PCB.  05100002
PCBSUPRS EQU   BIT4 -          SUPPRESS FRAME PROCESSING. IGNORE        05150002
*                              PCBFREAL,PCBRBN AND ASSOCIATED PFTE.     05160002
PCBVIO   EQU   BIT5 -          THIS PCB IS FOR A VIO MOVE-OUT.          05200040
*                                                             @Z40WPYD  05210040
*        EQU   BIT6 -          RESERVED                                 05250002
*        EQU   BIT7 -          RESERVED                                 05300002
PCBXPTA  DS    AL3 -           VIRTUAL MEMORY ADDRESS OF                05350002
*                              EXTERNAL PAGE TABLE ENTRY                05400002
PCBPGT   DS    0F              FULL WORD REFERENCE FOR PAGE TABLE ADDR  05450002
PCBFL3   DS    BL1 -           THIRD FLAG FIELD                         05500002
PCBSWPOT EQU   BIT0 -          SWAP-OUT FLAG                            05550002
PCBSWPIN EQU   BIT1 -          SWAP-IN PRIVATE AREA PAGE FLAG           05600002
PCBSWPS1 EQU   BIT2 -          STAGE 1 SWAP-IN FLAG                     05650002
PCBSWPLS EQU   BIT3 -          SWAP-IN LSQA PAGE FLAG                   05700002
PCBDFRLS EQU   BIT4 -          SWAP-IN DEFERRED RELEASE FLAG. THE       05710002
*                              SWIN ROOT EXIT MUST SET PFTDFRLS TO 1.   05720002
PCBNOREC EQU   BIT5 -          NO RECLAIM FLAG, VALID ONLY IF           05720540
*                              PCBIOI=1. WHEN 1, PAGE-OUT IS NOT TO     05721040
*                              BE RECLAIMED. WHEN 0, RECLAIM IS ALLOW-  05721540
*                              ED.                            @Z40WPYD  05722040
*        EQU   BIT6 -          RESERVED                      @Z40WPYD   05722540
PCBSWPS2 EQU   BIT7 -          WHEN 1, PCB IS FOR A STAGE 2 SWAP-IN.    05746040
*                                                              @Z40WPYD 05748040
PCBPGTA  DS    AL3 -           VIRTUAL MEMORY ADDRESS OF                05750002
*                              PAGE TABLE ENTRY                         05800002
PCBRBN   DS    AL2 -           REAL CORE BLOCK NUMBER  (LEFT            05850002
*                              ADJUSTED WITH 4 LOW ORDER ZEROES.)       05900002
PCBVBN   DS    AL2 -           VIRTUAL MEMORY BLOCK NUMBER (LEFT        05950002
*                              ADJUSTED WITH 4 LOW ORDER ZEROES.)       06000002
*                              IF THIS VALUE IS ZERO, NO PGTE           06050002
*                              VALIDATION WILL BE PERFORMED.            06100002
PCBBLOCK DS   0F -            MULTI USE FIELD, SEE BELOW.     @Z40WPYD  06104040
PCBSRB   DS   0F -             IF PCBSWPOT=1 AND PCBSRBMD=1 THEN FIELD  06108040
*                              CONTAINS ADDRESS OF PAGE FAULTING SRB.   06112040
*                                                              @Z40WPYD 06116040
PCBRB    DS   0F -             IF PCBPEX=1 AND PCBSRBMD=0 THEN FIELD    06120040
*                              CONTAINS ADDRESS OF PAGE FAULTING RB.    06124040
*                                                              @Z40WPYD 06128040
PCBSPCTE DS   AL4 -            IF PCBSWPOT=1 OR PCBSWPS1=1 AND VBN IN   06132040
*                              PRIVATE AREA,THEN FIELD CONTAINS ADDRESS 06136040
*                              OF A SPCTSWPE.                  @Z40WPYD 06140040
PCBASCB  DS    AL4 -           THE ADDRESS OF THE ADDRESS SPACE CONTROL 06500002
*                              BLOCK (ASCB) OF THE REQUESTOR WHO CAUSED 06550002
*                              THE PCB TO BE BUILT.                     06600002
PCBAIA   DS    CL28 -          THE ASM I/O REQUEST AREA (AIA)           06700040
*                              WHICH IS ALWAYS PART OF THE PCB. THE     06750002
*                              AREA IS MAPPED BY THE ILRAIA MACRO.      06800002
PCBEND   EQU   * -             END OF PCB.                     @Z40WPYD 06820040
PCBLEN   EQU   *-PCB           LENGTH OF PAGE CONTROL BLOCK             06850002
         MEND  , */                                                     06900002
*%PCBPLS : ;                                                            06950002
* /*******************************************************************/ 07000002
* /*                 PAGE CONTROL BLOCK     4/11/75                  */ 07050040
* /*                                                                 */ 07100002
* /* ONE PCB EXISTS FOR EACH VIRTUAL PAGE FOR WHICH A PAGING I/O     */ 07150002
* /* OPERATION MAY BE REQUIRED.  PCB'S ARE ON QUEUES ANCHORED        */ 07200002
* /* IN THE PVT AND RSMHD.                                           */ 07250002
* /*******************************************************************/ 07300002
*DCL                                /* DEFINE VALUES OF PCBCQN FIELD */ 07310002
*  PCBFREQN BIT(8) CONSTANT('10'X), /* PCB ON FREE QUEUE             */ 07320002
*  PCBDEFRN BIT(8) CONSTANT('18'X), /* PCB ON GFA DEFER QUEUE        */ 07330002
*  PCBCIOQN BIT(8) CONSTANT('20'X), /* PCB ON COMMON I/O QUEUE       */ 07340002
*  PCBLIOQN BIT(8) CONSTANT('88'X), /* PCB ON LOCAL I/O QUEUE           07342040
*                                                           @Z40WPYD */ 07342640
*  PCBDEQN  BIT(8) CONSTANT('FF'X); /* PCB IS NOT CURRENTLY QUEUED   */ 07344002
*        %IF PCB9999 ¬= ','         /* IF THIS IS LAST BLOCK         */ 07350002
*          %THEN %PCB9999 = ';';    /* THEN CLOSE DCL STATEMENT      */ 07400002
*        %IF PCBLEVEL ¬= ''         /* IF THIS IS CONCATENATED       */ 07450002
*          %THEN %GOTO PCBPLS1;     /* THEN SKIP DCL                 */ 07500002
*%PCBPLS0:;                                                             07505002
* /*******************************************************************/ 07510002
* /*                        PCB MAPPING                              */ 07520002
* /*******************************************************************/ 07530002
*DCL 1 PCB BASED (PCBPTR)           /* DECLARE PCB LEVEL 1           */ 07550002
*        %GO TO PCBPLS2;            /* AND SKIP LEVEL TWO DCL        */ 07600002
*%PCBPLS1: PCBDUM=PCBLEVEL||' PCB'; /* SET LEVEL FOR MINOR STRUCTURE */ 07650002
*    PCBDUM                         /* MINOR STRUCTURE NAME PARM     */ 07700002
*%PCBPLS2:;                                                             07750002
*        BDY(WORD),                                                     07800002
*      4 PCBFQP PTR(31),            /* FULLWORD REFERENCE FOR           07850002
*                                      FORWARD POINTER               */ 07900002
*        8 PCBCQN PTR(8),           /* CURRENT QUEUE NUMBER          */ 07950002
*        8 PCBFQPA PTR(24),         /* FORWARD QUEUE POINTER         */ 08500002
*      4 PCBBQP PTR(31),            /* BACKWARD QUEUE POINTER        */ 08550002
*        8 PCBBQPA PTR(31),         /* BACKWARD QUEUE POINTER        */ 08700002
*      4 PCBRTP PTR(31),            /* FULLWORD REFERENCE FOR           08750002
*                                      ROOT PCB PTR                  */ 08800002
*        8 PCBFL1  BIT(8),          /* FIRST FLAG FIELD              */ 08850002
*            12 *         BIT(1),   /* RESERVED             @Z40WPYD */ 08870040
*          12 PCBPEX   BIT(1),      /* PAGE EXCEPTION FLAG, WHEN 1,     09000002
*                                      THIS PCB  IS FOR A PAGE FAULT    09050002
*                                      INTERUPTION.                  */ 09150002
*          12 PCBSRBMD BIT(1),      /* SRB MODE FLAG                    09200002
*                                      WHEN 1, PCB IS FOR SRB PAGE      09250002
*                                      FAULT PROCESSING. PCBSRB         09300002
*                                      CONTAINS SRB ADDRESS.    */      09350002
*          12 PCBLLHLD BIT(1),      /* THE LOCAL LOCK HELD FLAG.        09400002
*                                      WHEN = 1 LOCAL LOCK WAS HELD     09410002
*                                      WHEN PAGE FAULT OCCURRED.     */ 09420002
*          12 PCBLFR   BIT(1),      /* LONG FIX REQUEST FLAG         */ 09450002
*          12 PCBROOT  BIT(1),      /* WHEN 1, INDICATES THAT PCBRTPA   09500002
*                                      IS A ROOT PCB POINTER, WHEN 0    09550002
*                                      INDICATES THAT PCBRTPA IS A TCB  09600002
*                                      POINTER OR 0.                 */ 09650002
*          12 PCBIOI   BIT(1),      /* INPUT-OUTPUT FLAG.               09700002
*                                      WHEN 1 =  PAGE OUT, WHEN         09750002
*                                      0 = PAGE IN                   */ 09800002
*          12 PCBIOCMP BIT(1),      /* WHEN 1 = PAGING I/O COMPLETE     09850002
*                                      FOR THIS PCB                  */ 09900002
*        8 PCBRTPA PTR(24),         /* ROOT PCB POINTER/TCB POINTER     09950002
*                                      CONTENTS DETERMINED BY PCBROOT   10000002
*                                      FLAG.                         */ 10050002
*      4 PCBRLP  PTR(31),           /* FULLWORD REFERENCE FOR           10100002
*                                      RELATED  PCB POINTER          */ 10150002
*        8 PCBFXC  FIXED(8),        /* FIX COUNT                     */ 10200002
*        8 PCBRLPA PTR(24),         /* RELATED PCB POINTER          */  10250002
*      4 PCBXPT PTR(31),            /* FULLWORD REFERENCE FOR           10300002
*                                      XPTE PTR                      */ 10350002
*        8 PCBFL2 BIT(8),           /* SECOND FLAG FIELD             */ 10400002
*          12 PCBFREAL BIT(1),      /* FREE REAL FLAG, THIS FLAG TELLS  10450002
*                                      WHETHER OR NOT THE REAL FRAME    10500002
*                                      ASSOCIATED WITH A COMPLETED      10550002
*                                      I/O OPERATION SHOULD BE FREED.   10600002
*                                      WHEN 1, FREE REAL FRAME       */ 10800002
*          12 PCBGFAD  BIT(1),      /* GFA DEFER PROCESSOR FLAG.        10850002
*                                      WHEN 1, GFA DEFER PROCESSOR HAS  10900002
*                                      BEEN SCHEDULED FOR THIS PCB.  */ 10950002
*          12 PCBIOERR BIT(1),      /* PERMANENT I/O ERROR FLAG.        11000002
*                                      WHEN 1 A PAGING I/O OPERATION    11050002
*                                      HAS FAILED BECAUSE OF A          11100002
*                                      PERMANENT I/O ERROR           */ 11150002
*          12 PCBRESET BIT(1),      /* RESET MUST BE CALLED FLAG.    */ 11200002
*          12 PCBSUPRS BIT(1),      /* SUPPRESS FRAME PROCESSING.       11250002
*                                      IGNORE PCBFREAL, PCBRBN, AND     11260002
*                                      ASSOCIATED PFTE.             */  11270002
*          12 PCBVIO BIT(1),        /* PCB IS FOR A VIO MOVE-OUT.       11280040
*                                                          @Z40WPYD */  11290040
*          12 *       BIT(1),       /* RESERVED                      */ 11350002
*          12 *       BIT(1),       /* RESERVED                      */ 11400002
*        8 PCBXPTA PTR(24),         /* VIRTUAL MEMORY ADDRESS OF        11450002
*                                      EXTERNAL PAGE TABLE ENTRY     */ 11500002
*      4 PCBPGT FIXED(31),          /* FULLWORD REFERENCE FOR           11550002
*                                      PAGE TABLE ENTRY              */ 11600002
*        8 PCBFL3  BIT(8),          /* THIRD FLAG FIELD              */ 11650002
*          12 PCBSWPOT BIT(1),      /* SWAP OUT FLAG                 */ 11700002
*          12 PCBSWPIN BIT(1),      /* SWAP IN PRIVATE AREA PAGE FLAG*/ 11750002
*          12 PCBSWPS1 BIT(1),      /* STAGE 1 SWAP-IN FLAG          */ 11800002
*          12 PCBSWPLS BIT(1),      /* SWAP-IN LSQA PAGE FLAG.       */ 11850002
*          12 PCBDFRLS BIT(1),      /* SWAP-IN DEFERRED RELEASE FLAG.   11900002
*                                      THE SWIN ROOT EXIT MUST SET      11910002
*                                      PFTDFRLS TO 1.                */ 11920002
*          12 PCBNOREC BIT(1),      /* NO RECLAIM FLAG, VALID ONLY IF   11920540
*                                      PCBIOI=1. WHEN 1, PAGE-OUT IS    11921040
*                                      NOT TO BE RECLAIMED. WHEN 0,     11921540
*                                      RECLAIM IS ALLOWED. @Z40WPYD */  11922040
*          12 *        BIT(1),      /* RESERVED.           @Z40WPYD */  11922540
*          12 PCBSWPS2 BIT(1),      /* WHEN 1, PCB IS FOR A STAGE 2     11967040
*                                      SWAP IN.            @Z40WPYD */  11987040
*        8 PCBPGTA PTR(24),         /* VIRTUAL MEMORY ADDRESS           12100002
*                                      OF PAGE TABLE ENTRY           */ 12150002
*      4 PCBRBN BIT(16),            /* REAL STORAGE BLOCK NUMBER        12200002
*                                      (LEFT  ADJUSTED WITH 4           12250002
*                                      LOW ORDER ZEROES.)            */ 12300002
*      4 PCBVBN BIT(16),            /* VIRTUAL MEMORY BLOCK             12350002
*                                      NUMBER (LEFT  ADJUSTED           12400002
*                                      WITH 4 LOW ORDER                 12450002
*                                      ZEROES.) IF THIS VALUE IS ZERO,  12500002
*                                      NO PGTE VALIDATION WILL BE       12550002
*                                      PERFORMED.                    */ 12600002
*      4 PCBBLOCK PTR(31),          /* MULTI USE FIELD, SEE BELOW       12603040
*                                                           @Z40WPYD */ 12606040
*        8 PCBSRB PTR(31),          /* IF PCBPEX=1 AND PCBSRBMD=1, THEN 12609040
*                                      FIELD CONTAINS ADDRESS OF PAGE   12612040
*                                      FAULTING SRB.        @Z40WPYD */ 12615040
*          12 PCBRB PTR(31),        /* IF PCBPEX=1 AND PCBSRBMD=0, THEN 12618040
*                                      FIELD CONTAINS ADDRESS OF PAGE   12621040
*                                      FAULTING RB.         @Z40WPYD */ 12624040
*             16 PCBSPCTE PTR(31),  /* IF PCBSWPOT=1 OR PCBSWPS1=1 AND  12627040
*                                      VBN IS IN PRIVATE AREA, THEN     12630040
*                                      FIELD CONTAINS ADDRESS OF A      12633040
*                                      SPCTSWPE.            @Z40WPYD */ 12636040
*      4 PCBASCB PTR(31),           /* ADDRESS OF THE ADDRESS SPACE     12900002
*                                      CONTROL BLOCK(ASCB)           */ 12950002
*      4 PCBAIA CHAR(28)BDY(WORD) , /* AN ASM I/O REQUEST               13000040
*                                      AREA (AIA) WHICH IS ALWAYS PART  13050002
*                                      OF THE PCB. THE AREA IS MAPPED   13100002
*                                      BY THE ILRAIA MACRO.          */ 13150002
*      4 PCBEND CHAR(0) PCB9999    /* END OF PCB      @Z40WPYD */       13155040
*        %PCBLEN = 'LENGTH(PCB)';   /* OBTAIN LENGTH OF PCB.         */ 13200002
./  ADD  SSI=60780532,NAME=IHAPCBR
*        %GOTO PCBRPLS;                                              /* 00050002
         MACRO                                                          00100002
         IHAPCBR &DSECT=YES                                             00150002
         AGO  .PCBRRND                                                  00200002
*********************************************************************** 00250002
*                                                                     * 00300002
* STATUS -                                                            * 00350002
*    CHANGE LEVEL 0 (OS/VS2 REL 2 VERSION)                            * 00400002
* FUNCTION -                                                          * 00450002
*    MAPPING MACRO FOR ROOT PCB                                       * 00500002
* ENTRY POINTS -                                                      * 00550002
*     IHAPCBR MACRO CALL                                              * 00600002
* INPUT -                                                             * 00650002
*    SEE IHAPCBR MACRO DEFINITION                                     * 00700002
* OUTPUT -                                                            * 00750002
*    ROOT PCB MAPPING MACRO                                           * 00800002
* EXTERNAL REFERENCES -                                               * 00850002
*    N/A                                                              * 00900002
* EXITS, NORMAL -                                                     * 00950002
*    N/A                                                              * 01000002
* EXITS, ERROR -                                                      * 01050002
*    N/A                                                              * 01100002
* TABLES/WORK AREAS -                                                 * 01150002
*    N/A                                                              * 01200002
* ATTRIBUTES -                                                        * 01250002
*    BILINGUAL MACRO                                                  * 01300002
* CHARACTER CODE DEPENDENCY -                                         * 01350002
*    NONE                                                             * 01400002
* NOTES -                                                             * 01450002
*    NONE                                                             * 01500002
*                                                                     * 01550002
*********************************************************************** 01600002
.PCBRRND ANOP                                                           01650002
         IEZBITS                                                        01700002
*********************************************************************** 01750002
*                        ROOT PAGE CONTROL BLOCK     4/11/75          * 01800040
*                                                                     * 01850002
*        A ROOT PCB IS USED TO CONTROL POSTING OF A LOGICALLY RELATED * 01900002
*        OPERATION CONSISTING OF RSM OPERATIONS FOR 'N' PAGES.  THE   * 01950002
*        POSTING CAN NOT TAKE PLACE UNTIL ALL 'N' PAGE OPERATIONS     * 02000002
*        HAVE COMPLETED.                                              * 02050002
*********************************************************************** 02100002
         AIF   ('&DSECT' EQ 'NO').PCBR001                               02150002
PCBR     DSECT , PCBRPTR                                                02200002
         AGO   .PCBR002                                                 02250002
.PCBR001 ANOP                                                           02300002
PCBR     DS    0F                                                       02350002
.PCBR002 ANOP                                                           02400002
PCBRTCB  DS    0F -            FULLWORD REFERENCE FOR TCB POINTER       02450002
PCBRFLAG DS    BL1 -           FLAG FIELD. THE EXACT MEANING OF EACH    02500002
*                              BIT MAY VARY SLIGHTLY DEPENDING ON WHICH 02510002
*                              ROOT EXIT OR COMPLETION ROUTINE IS       02520002
*                              PROCESSING THE ROOT PCB.                 02530002
PCBRINT  EQU   BIT0 -          INTERCEPTED ROOT FLAG .                  02550002
*                              FIX/LOAD ROOT EXIT SHOULD NOT PERFORM    02600002
*                              NORMAL COMPLETION NOTIFICATION OR A      02650002
*                              COMPLETION ROUTINE HAS BEEN SCHEDULED.   02700002
PCBRETRY EQU   BIT1 -          RETRY FLAG.  WHEN 1 INDICATES A SWAP-IN  02750002
*                              HAS FAILED BUT IS RETRYABLE              02770002
PCBRPB   EQU   BIT2 -          VEQRC OR SWAP ROOT SHOULD FREE ROOT PCB  02800002
PCBRFPCB EQU   BIT3 -          V=R ONLY. VRFREE SHOULD FREE ROOT PCB.   02850002
PCBRFAIL EQU   BIT4 -          ROOT FAILURE FLAG.                       02900002
*                              WHEN 1 PART OF REQUESTED FUNCTION        02950002
*                              ASSOCIATED WITH ROOT PCB HAS FAILED      03000002
PCBRLOAD EQU   BIT5 -          LOAD REQUEST FLAG FOR FIX/LOAD ROOTS.    03050002
*                              WHEN 1 ROOT PCB IS FOR A PGLOAD REQUEST  03100002
PCBRFECB EQU   BIT6 -          FREE ECB FLAG FOR FIX/LOAD ROOTS.        03150002
*                              WHEN 1, PGFREE THE ECB ADDRESSED BY      03200002
*                              PCBRECB. WHEN 0, DO NOT PGFREE THE ECB.  03250002
PCBRPOF  EQU   BIT7 -          FORCE PAGE OUT FLAG. WHEN 1, V=R FORCE   03300002
*                              PAGE OUT ROUTINE HAS BEEN SCHEDULED AND  03310002
*                              HAS NOT COMPLETED. DO NOT FREE THE ROOT  03320002
*                              PCB. THIS FLAG FOR V=R ROUTINES ONLY.    03330002
PCBRTCBA DS    AL3 -           TCB POINTER                              03350002
*                              THE VSA OF TCB FOR THE TASK REQUESTING   03400002
*                              RSM SERVICES REQUIRING A ROOT PCB.       03450002
PCBRGOTO DS    A -             VSA OF ROOT EXIT ROUTINE                 03500002
*                              THIS ROUTINE IS TO BE GIVEN CONTROL      03550002
*                              WHEN THE ROOT COUNT (PCBRCNT) IS         03600002
*                              DECREMENTED TO ZERO.                     03650002
PCBRECB  DS    A -             VSA OF REQUESTOR SUPPLIED ECB            03700002
*                              IF POSTING IS TO BE THE MODE OF          03750002
*                              COMPLETION NOTIFICATION.                 03800002
PCBRASCB DS    A -             VSA OF ASCB FOR THE ADDRESS SPACE        03850002
*                              IN WHICH THE REQUESTING TCB RESIDES.     03900002
PCBRCNT  DS    FL2 -           ROOT PCB COMPLETION COUNT                03950002
*                              THIS IS THE NUMBER OF PAGES ASSOCIATED   04000002
*                              WITH THE ROOT FOR WHICH PROCESSING HAS   04050002
*                              NOT  YET COMPLETED.                      04100002
PCBRRSV1 DS    FL2 -           RESERVED                                 04150002
PCBRWRK1 DS    F -             SCRATCH PAD                              04200002
PCBRWRK2 DS    F -             SCRATCH PAD                              04250002
PCBRWRK3 DS    F -             SCRATCH PAD                              04300002
PCBRWRK4 DS    F -             SCRATCH PAD                              04350002
PCBRWRK5 DS    F -             SCRATCH PAD                              04400002
PCBRWRK6 DS    F -             SCRATCH PAD                              04450002
PCBRWRK7 DS    F -             SCRATCH PAD                              04500002
PCBRWRK8 DS    F -             SCRATCH PAD                              04550002
PCBRWRK9 DS    F -             SCRATCH PAD                              04600002
PCBRWRKA DS    F -             SCRATCH PAD                    @Z40WPYD  04610040
PCBRWRKB DS    F -             SCRATCH PAD                    @Z40WPYD  04620040
PCBRLEN  EQU   *-PCBR          LENGTH OF ROOT PCB                       04750002
         MEND  , */                                                     04800002
*%PCBRPLS :  ;                                                          04850002
* /*******************************************************************/ 04900002
* /*               ROOT PAGE CONTROL BLOCK    4/11/75                */ 04950040
* /* A ROOT PCB IS USED TO CONTROL POSTING OF A LOGICALLY RELATED    */ 05000002
* /* OPERATION CONSISTING OF RSM OPERATIONS FOR 'N' PAGES.  THE      */ 05050002
* /* POSTING CAN NOT TAKE PLACE UNTIL ALL 'N' PAGE OPERATIONS HAVE   */ 05100002
* /* COMPLETED.                                                      */ 05150002
* /*******************************************************************/ 05200002
*        %IF PCBR9999 ¬= ','        /* IF THIS IS LAST BLOCK         */ 05250002
*          %THEN %PCBR9999 = ';';   /* THEN CLOSE DCL STATEMENT      */ 05300002
*        %IF PCBRLEVL ¬= ''         /* IF THIS IS CONCATENATED       */ 05350002
*          %THEN %GOTO PCBRPLS1;    /* THEN SKIP DCL                 */ 05400002
*DCL 1 PCBR BASED (PCBRPTR)         /* DECLARE PCBR LEVEL 1          */ 05450002
*        %GO TO PCBRPLS2;           /* AND SKIP LEVEL TWO DCL        */ 05500002
*%PCBRPLS1: PCBRDUM=PCBRLEVL ||' PCBR'; /* SET LEVEL FOR MINOR       */ 05550002
*    PCBRDUM                        /* MINOR STRUCTURE NAME PARM     */ 05600002
*%PCBRPLS2:;                                                            05650002
*        BDY(WORD),                                                     05700002
*      4 PCBRTCB  FIXED(31),        /* FULLWORD REFERENCE FOR           05750002
*                                      TCB POINTER                   */ 05800002
*        8 PCBRFLAG    BIT(8),      /* FLAG FIELD. THE EXACT MEANING OF 05850002
*                                      EACH BIT DEPENDS ON WHICH ROOT   05860002
*                                      EXIT OR COMPLETION ROUTINE IS    05860402
*                                      PROCESSING THE ROOT PCB.      */ 05862002
*          12 PCBRINT  BIT(1),      /* INTERCEPTED ROOT FLAG.           05900002
*                                      THE ROOT EXIT SHOULD NOT PERFORM 05950002
*                                      NORMAL COMPLETION NOTIFICATION   06000002
*                                      OR THE ROOT COMPLETION ROUTINE   06050002
*                                      HAS BEEN SCHEDULED. */           06150002
*          12 PCBRETRY BIT(1),      /* RETRY FLAG.  WHEN 1 INDICATES A  06200002
*                                      SWAP-IN HAS FAILED BUT IS        06210002
*                                      RETRYABLE                     */ 06220002
*          12 PCBRPB   BIT(1),      /* VEQRC OR SWAP ROOT EXITS         06250002
*                                      MUST FREE ROOT PCB.           */ 06260002
*          12 PCBRFPCB BIT(1),      /* V=R ONLY. VRFREE MUST FREE PCB*/ 06300002
*          12 PCBRFAIL BIT(1),      /* ROOT FAILURE FLAG. WHEN 1,       06350002
*                                      PART OF REQUESTED FUNCTION       06400002
*                                      ASSOCIATED WITH THE ROOT PCB     06450002
*                                      HAS FAILED.                   */ 06500002
*          12 PCBRLOAD BIT(1),      /* LOAD REQUEST FLAG                06550002
*                                      WHEN 1 ROOT PCB IS FOR A         06600002
*                                      PGLOAD REQUEST.               */ 06650002
*          12 PCBRFECB BIT(1),      /* FREE ECB FLAG FOR FIX/LOAD ROOTS 06700002
*                                      WHEN 1, FREE THE ECB.         */ 06750002
*          12 PCBRPOF BIT(1),       /* FORCE PAGE OUT FLAG. WHEN 1, V=R 06800002
*                                      FORCE PAGE OUT ROUTINE HAS BEEN  06810002
*                                      SCHEDULED AND HAS NOT COMPLETED. 06820002
*                                      DO NOT FREE THE ROOT PCB. THIS   06830002
*                                      FLAG FOR V=R ROUTINES ONLY.   */ 06840002
*        8 PCBRTCBA PTR(24),        /* TCB POINTER                   */ 06850002
*      4 PCBRGOTO PTR(31),          /* ADDRESS OF ROUTINE TO            06900002
*                                      BRANCH  TO WHEN ROOT             06950002
*                                      COUNT REACHES 0.              */ 07000002
*      4 PCBRECB  PTR(31),          /* THE VSA OF THE REQUESTOR         07050002
*                                      SUPPLIED ECB IF POSTING IS TO    07100002
*                                      BE THE MODE OF COMPLETION        07150002
*                                      NOTIFICATION.                 */ 07200002
*      4 PCBRASCB PTR(31),          /* THE VSA OF THE ASCB FOR THE      07250002
*                                      ADDRESS SPACE IN WHICH THE       07300002
*                                      REQUESTING TCB RESIDES.       */ 07350002
*      4 PCBRCNT  FIXED(15),        /* ROOT PCB COMPLETION COUNT. THE   07400002
*                                      NUMBER OF PAGES ASSOCIATED WITH  07450002
*                                      THE ROOT FOR WHICH PROCESSING    07500002
*                                      HAS NOT YET COMPLETED.        */ 07550002
*      4 PCBRRSV1 PTR(15),          /* RESERVED                      */ 07600002
*      4 PCBRWRK1 FIXED(31),        /* SCRATCH PAD                   */ 07650002
*      4 PCBRWRK2 FIXED(31),        /* SCRATCH PAD                   */ 07700002
*      4 PCBRWRK3 FIXED(31),        /* SCRATCH PAD                   */ 07750002
*      4 PCBRWRK4 FIXED(31),        /* SCRATCH PAD                   */ 07800002
*      4 PCBRWRK5 FIXED(31),        /* SCRATCH PAD                   */ 07850002
*      4 PCBRWRK6 FIXED(31),        /* SCRATCH PAD                   */ 07900002
*      4 PCBRWRK7 FIXED(31),        /* SCRATCH PAD                   */ 07950002
*      4 PCBRWRK8 FIXED(31),        /* SCRATCH PAD                   */ 08000002
*      4 PCBRWRK9 FIXED(31),        /* SCRATCH PAD                   */ 08050002
*      4 PCBRWRKA FIXED(31),        /* SCRATCH PAD          @Z40WPYD */ 08060040
*      4 PCBRWRKB FIXED(31) PCBR9999 /* SCRATCH PAD         @Z40WPYD */ 08070040
*        %PCBRLEN = 'LENGTH(PCBR)'; /* OBTAIN LENGTH OF ROOT PCB     */ 08200002
./  ADD  SSI=70830487,NAME=IHAPCCA
*                                                                       00050002
*        %GOTO PCCAL1;  /*                                              00100002
         MACRO                                                          00150002
         IHAPCCA &DSECT=YES   */                                        00200002
*%PCCAL1 : ;                                                            00250002
*                                                                       00300002
*/* **************************************************************** */ 00350002
*/*                                                                  */ 00400002
*/*            PHYSICAL CONFIGURATION COMMUNICATION AREA             */ 00450002
*/*                                                                  */ 00500002
*/*  OS/VS2 SU51, 02/17/77, LEVEL=4                                  */ 00501051
*/*                                                                  */ 00600002
*/*  METHOD OF ACCESS                                                */ 00650002
*/*      BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */ 00700002
*/*             USING ON PCCA GIVES ADDRESSABILITY FOR ALL SYMBOLS.  */ 00750002
*/*      PL/S - DCL PCCAPTR PTR                                      */ 00800002
*/*                                                                  */ 00850002
*/* **************************************************************** */ 00900002
*%GOTO PCCAL2;  /*                                                      00950002
         SPACE 1                                                        01000002
         AIF   ('&DSECT' EQ 'NO').PCCA010                               01050002
PCCA     DSECT                                                          01100002
         AGO   .PCCA020                                                 01150002
.PCCA010 ANOP                                                           01200002
         DS    0D                                                       01250002
PCCA     EQU   *                                                        01300002
.PCCA020 ANOP                                                           01350002
PCCAPCCA DC    CL4'PCCA' -    CONTROL BLOCK ACRONYM IN EBCDIC           01400002
PCCACPID DC    XL12'00' -     CPU ID (CONTAINS SERIAL NUMBER)           01450002
PCCACPUA DC    H'0' -         PHYSICAL CPU ADDRESS                      01500002
PCCACAFM DC    H'0' -         BIT MASK CORRESPONDING TO PHYSICAL CPU    01550002
*                             ADDRESS                                   01600002
PCCATQEP DC    A(0) -         TQE POINTER                               01650002
PCCAPSAV DC    A(0) -         VIRTUAL ADDRESS OF PSA                    01700002
PCCAPSAR DC    A(0) -         REAL ADDRESS OF PSA                       01750002
PCCARV81 DS    A -            RESERVED                           MDC005 01755002
PCCARV82 DS    A -            RESERVED                           MDC005 01760002
PCCARV83 DS    A -            RESERVED                           MDC005 01765002
PCCARV84 DS    A -            RESERVED                           MDC005 01770002
PCCARV85 DS    A -            RESERVED                           MDC005 01775002
PCCARV86 DS    A -            RESERVED                           MDC005 01780002
PCCARV87 DS    A -            RESERVED                           MDC005 01785002
PCCARV88 DS    A -            RESERVED                           MDC005 01790002
PCCARV89 DS    A -            RESERVED                           MDC005 01795002
PCCARV90 DS    A -            RESERVED                           MDC005 01800002
PCCARV91 DS    A -            RESERVED                           MDC005 01805002
PCCARV92 DS    A -            RESERVED                           MDC005 01810002
PCCARV93 DS    A -            RESERVED                           MDC005 01815002
PCCARV94 DS    A -            RESERVED                           MDC005 01820002
PCCARV95 DS    A -            RESERVED                           MDC005 01825002
PCCARV96 DS    A -            RESERVED                           MDC005 01830002
PCCARV97 DS    A -            RESERVED                           MDC005 01835002
PCCARV98 DS    A -            RESERVED                           MDC005 01840002
PCCARV99 DS    A -            RESERVED                           MDC005 01845002
PCCARV9A DS    A -            RESERVED                           MDC005 01850002
PCCARV9B DS    A -            RESERVED                           MDC005 01855002
PCCARV9C DS    A -            RESERVED                           MDC005 01860002
PCCARV9D DS    A -            RESERVED                           MDC005 01865002
PCCARV9E DS    A -            RESERVED                           MDC005 01870002
PCCATMST DS    0BL4 -         TIMER STATUS BYTES                        01900002
PCCATMFL DC    XL1'00' -      FIRST BYTE OF PCCATMST                    01950002
PCCAINIT EQU   X'80' -        ENTRY HAS BEEN INITIALIZED                02000002
PCCASYNC EQU   X'40' -        CLOCK OUT OF SYNCHRONIZATION              02050002
PCCAVKIL EQU   X'20' -        VARY CPU SHOULD BE CANCELLED              02100002
PCCAMCC  EQU   X'10' -        PROCESSING FOR PERMANENTLY DAMAGED CLOCK  02150002
*                             COMPARATOR MUST BE DONE                   02200002
PCCAMINT EQU   X'08' -        PROCESSING FOR CPU TIMER MUST BE DONE     02250002
PCCARV02 EQU   X'04',,C'X' -  RESERVED                                  02300002
PCCARV03 EQU   X'02',,C'X' -  RESERVED                                  02350002
PCCARV04 EQU   X'01',,C'X' -  RESERVED                                  02400002
PCCATODE DC    XL1'00' -      TOD CLOCK ERROR FLAGS                     02450002
PCCANUTD EQU   X'80' -        CLOCK CANNOT BE USED                      02500002
PCCANFTD EQU   X'40' -        CLOCK SHOULD NOT BE RESET                 02550002
PCCACTTD EQU   X'3F' -        ERROR COUNT (6 BITS)                      02600002
PCCACCE  DC    XL1'00' -      FLAGS FOR CLOCK COMPARATOR                02650002
PCCANUCC EQU   X'80' -        CLOCK COMPARATOR CANNOT BE USED           02700002
PCCANFCC EQU   X'40' -        CLOCK COMPARATOR SHOULD NOT BE RESET      02750002
PCCACTCC EQU   X'3F' -        ERROR COUNT (6 BITS)                      02800002
PCCAINTE DC    XL1'00' -      FLAGS FOR CPU TIMER                       02850002
PCCANUIN EQU   X'80' -        CPU TIMER CANNOT BE USED                  02900002
PCCANFIN EQU   X'40' -        CPU TIMER SHOULD NOT BE RESET             02950002
PCCACTIN EQU   X'3F' -        ERROR COUNT (6 BITS)                      03000002
PCCARPB  DC    F'0' -         EXTERNAL CALL SIGP BUFFER                 03050002
PCCAEMSB DS    0CL16 -        EMERGENCY SIGNAL SIGP BUFFER              03100002
PCCAEMSI DS    0BL4 -         FIRST WORD OF EMS BUFFER                  03150002
PCCARISP DC    XL1'00' -      CONTAINS PARALLEL/SERIAL REQUEST          03160002
*                             INDICATOR FOR REMOTE IMMEDIATE SIGNAL     03170002
PCCAPARL EQU   X'80' -        PARALLEL REQUEST                   MDC002 03171002
PCCASERL EQU   X'40' -        SERIAL REQUEST                     MDC003 03180002
PCCARV06 EQU   X'20',,C'X' -  RESERVED                                  03192002
PCCARV07 EQU   X'10',,C'X' -  RESERVED                                  03194002
PCCARV08 EQU   X'08',,C'X' -  RESERVED                                  03196002
PCCARV09 EQU   X'04',,C'X' -  RESERVED                                  03198002
PCCARV10 EQU   X'02',,C'X' -  RESERVED                                  03198402
PCCARV11 EQU   X'01',,C'X' -  RESERVED                                  03198802
PCCAEMS2 DC    XL1'00' -      SECOND BYTE OF PCCAEMSI                   03199202
PCCARV12 EQU   X'80',,C'X' -  RESERVED                                  03199602
PCCARV13 EQU   X'40',,C'X' -  RESERVED                                  03199702
PCCARV14 EQU   X'20',,C'X' -  RESERVED                                  03199802
PCCARV15 EQU   X'10',,C'X' -  RESERVED                                  03204002
PCCARV16 EQU   X'08',,C'X' -  RESERVED                                  03208202
PCCARV17 EQU   X'04',,C'X' -  RESERVED                                  03212402
PCCARV18 EQU   X'02',,C'X' -  RESERVED                                  03216602
PCCARV19 EQU   X'01',,C'X' -  RESERVED                                  03226602
PCCAEMS3 DC    XL1'00' -      THIRD BYTE OF PCCAEMSI                    03228602
PCCARV20 EQU   X'80',,C'X' -  RESERVED                                  03230602
PCCARV21 EQU   X'40',,C'X' -  RESERVED                                  03232602
PCCARV22 EQU   X'20',,C'X' -  RESERVED                                  03233002
PCCARV23 EQU   X'10',,C'X' -  RESERVED                                  03233102
PCCARV24 EQU   X'08',,C'X' -  RESERVED                                  03233202
PCCARV25 EQU   X'04',,C'X' -  RESERVED                                  03238802
PCCARV26 EQU   X'02',,C'X' -  RESERVED                                  03240802
PCCARV27 EQU   X'01',,C'X' -  RESERVED                                  03242802
PCCARMSB DC    XL1'00' -      CONTAINS RMS INDICATOR                    03243202
PCCARV28 EQU   X'80',,C'X' -  RESERVED                                  03243602
PCCARV29 EQU   X'40',,C'X' -  RESERVED                                  03244002
PCCARV30 EQU   X'20',,C'X' -  RESERVED                                  03244102
PCCARV31 EQU   X'10',,C'X' -  RESERVED                                  03244202
PCCARV32 EQU   X'08',,C'X' -  RESERVED                                  03244302
PCCARV33 EQU   X'04',,C'X' -  RESERVED                                  03258202
PCCARV34 EQU   X'02',,C'X' -  RESERVED                                  03268202
PCCARMS  EQU   X'01' -        SIGP WAS ISSUED VIA RMS                   03270202
PCCAEMSP DC    A(0) -         REMOTE IMMEDIATE SIGNAL PARAMETER ADDRESS 03272202
PCCAEMSE DC    A(0) -         REMOTE IMMEDIATE SIGNAL RECEIVING ROUTINE 03286102
*                             ENTRY POINT ADDRESS                       03296102
PCCAEMSA DC    A(0) -         PCCA ADDRESS OF THE RECEIVING ROUTINE     03300002
PCCAPWAV DC    A(0) -         VIRTUAL ADDRESS OF MCH PROCESSOR WORK     03350002
*                             AREA                                      03400002
PCCAPWAR DC    A(0) -         REAL ADDRESS OF MCH PROCESSOR WORK AREA   03450002
PCCALRBV DC    A(0) -         VIRTUAL ADDRESS OF MCH LOGREC BUFFER      03500002
PCCALRBR DC    A(0) -         REAL ADDRESS OF MCH LOGREC BUFFER         03550002
PCCAELAD DC    A(0) -         VIRTUAL ADDRESS OF I/O EXTENDED LOGOUT    03550551
*                             (IOEL) AREA  (MDC310)            @G51BP9A 03551051
PCCAELBA DC    A(0) -         VIRTUAL ADDRESS OF CCH LOGOUT BUFFER      03600051
*                             (MDC311)                         @G51BP9A 03601051
PCCACCHM DC    A(0) -         VIRTUAL ADDRESS OF CCH MESSAGE BUFFER     03602051
*                             (MDC312)                         @G51BP9A 03603051
PCCASRB  DC    XL44'00' -     SRB FOR CCH TO SCHEDULE IECVIRST TO       03604051
*                             PROCESS CHANNEL ERRORS  (MDC314) @G51BP9A 03605051
PCCACHAN DC    XL1'00' -      FLAG BYTE FOR CCH-IOS CHANNEL RECOVERY    03606051
*                             COMMUNICATION  (MDC315)          @G51BP9A 03607051
PCCAIRST EQU   X'80' -        IECVIRST IS PROCESSING CHANNEL ERRORS     03608051
*                             DETECTED DURING AN EXTERNAL MACHINE CHECK 03610051
*                             (MDC316)                         @G51BP9A 03611051
PCCAEXDM EQU   X'40' -        WHILE PCCAIRST BIT WAS SET, MORE CHANNEL  03612051
*                             ERRORS WERE DETECTED WHILE PROCESSING     03613051
*                             ANOTHER EXTERNAL DAMAGE MACHINE CHECK     03614051
*                             (MDC317)                         @G51BP9A 03615051
PCCAR107 EQU   X'20',,C'X' -  RESERVED                         @G51BP9A 03616051
PCCAR108 EQU   X'10',,C'X' -  RESERVED                         @G51BP9A 03617051
PCCAR109 EQU   X'08',,C'X' -  RESERVED                         @G51BP9A 03618051
PCCAR110 EQU   X'04',,C'X' -  RESERVED                         @G51BP9A 03619051
PCCAR111 EQU   X'02',,C'X' -  RESERVED                         @G51BP9A 03620051
PCCAR112 EQU   X'01',,C'X' -  RESERVED                         @G51BP9A 03621051
PCCASRBL DC    XL1'00' -      LOCK BYTE FOR COMMUNICATING CHANNEL       03622051
*                             ERRORS BETWEEN CCH AND IOS                03623051
*                             (MDC318)                         @G51BP9A 03624051
PCCASRBA EQU   X'00' -        SRB IS AVAILABLE FOR SCHEDULING           03625051
*                             (MDC319)                         @G51BP9A 03626051
PCCASRBN EQU   X'FF' -        SRB IS NOT AVAILABLE FOR SCHEDULING       03627051
*                             (MDC320)                         @G51BP9A 03628051
PCCAR113 DC    H'0' -         RESERVED  (MDC304)               @G51BP9A 03629051
PCCAR106 DC    52XL1'00' -    RESERVED  (MDC304)               @G51BP9A 03630051
         DS    0D -           ALIGN PCCAWERP TO DOUBLEWORD              03649051
PCCAWERP DS    0XL8 -         WORK ERPIB FOR CCH                        03650002
PCCACHUB DC    A(0) -         UCB ADDRESS OF THE DEVICE IN USE WHEN     03651002
*                             THE CHANNEL-DETECTED ERROR OCCURRED.      03652002
*                             THIS FIELD IS ZERO IF CCH HAS NOT         03654002
*                             CREATED AN ERPIB FOR THE ERP'S.           03654402
PCCACHPF DC    XL1'00' -      PROGRAM FLAGS.  INDICATES THE SELECTION   03655002
*                             OR INTERRUPTION SEQUENCE WHEN THE CSW WAS 03656002
*                             STORED.                                   03657002
PCCACSIO EQU   X'80' -        THE CSW WAS STORED AFTER A START I/O      03658002
*                             INSTRUCTION WAS EXECUTED.                 03659002
PCCACINT EQU   X'40' -        THE CSW WAS STORED AFTER AN I/O           03660002
*                             INTERRUPTION                              03661002
PCCACTIO EQU   X'20' -        THE CSW WAS STORED AFTER A TEST I/O       03662002
*                             INSTRUCTION WAS EXECUTED.                 03663002
PCCACHIO EQU   X'10' -        THE CSW WAS STORED AFTER A HALT I/O       03664002
*                             INSTRUCTION WAS EXECUTED                  03665002
PCCARV37 EQU   X'08',,C'X' -  RESERVED                                  03666002
PCCACSNS EQU   X'04' -        THE SENSE DATA WAS STORED                 03667002
PCCACCNT EQU   X'02' -        THE CSW COUNT IS VALID                    03668002
PCCACNOR EQU   X'01' -        NO RETRY IS TO BE ATTEMPTED UNDER ANY     03669002
*                             CONDITIONS                                03670002
PCCACHBL DC    XL1'00' -      PROBABLE SOURCE OF ERROR                  03671002
PCCACCPU EQU   X'80' -        CPU ERROR                                 03672002
PCCACCHA EQU   X'40' -        CHANNEL ERROR                             03673002
PCCACSCU EQU   X'20' -        STORAGE CONTROL UNIT ERROR                03674002
PCCACSTG EQU   X'10' -        STORAGE ERROR                             03675002
PCCACCUE EQU   X'08' -        CONTROL UNIT ERROR                        03676002
PCCARV38 EQU   X'04',,C'X' -  RESERVED                                  03677002
PCCARV39 EQU   X'02',,C'X' -  RESERVED                                  03678002
PCCARV40 EQU   X'01',,C'X' -  RESERVED                                  03679002
PCCACHVA DC    XL1'00' -      VALIDITY INDICATORS.  WHEN THE DESIGNATED 03680002
*                             FIELD IS STORED BY THE CHANNEL WITH THE   03681002
*                             CORRECT CONTENTS THE VALIDITY BIT IS ONE. 03682002
*                             THE VALIDITY BIT FOR NON-STORED FIELDS    03683002
*                             IS MEANINGLESS.                           03684002
PCCACITF EQU   X'80' -        INTERFACE ADDRESS IS VALID                03685002
PCCARV41 EQU   X'40',,C'X' -  RESERVED                                  03686002
PCCARV42 EQU   X'20',,C'X' -  RESERVED                                  03686202
PCCACSQV EQU   X'10' -        SEQUENCE CODE IS VALID                    03687002
PCCACUNS EQU   X'08' -        UNIT STATUS IS VALID                      03688002
PCCACCMD EQU   X'04' -        COMMAND ADDRESS IS VALID.  THE CSW        03689002
*                             CONTAINS A VALID COMMAND ADDRESS.         03690002
PCCACCHV EQU   X'02' -        CHANNEL ADDRESS IS VALID                  03691002
PCCACDAV EQU   X'01' -        DEVICE ADDRESS IS VALID                   03692002
PCCACHTS DC    XL1'00' -      TERMINATION AND SEQUENCE (RETRY) CODES    03693002
PCCACTEC EQU   X'C0' -        TWO-BIT TERMINATION CODE.  THIS CODE      03694002
*                             SPECIFIES THE TERMINATION SIGNALS USED ON 03695002
*                             THE I/O INTERFACE AFTER THE CHANNEL       03696002
*                             DETECTED THE ERROR.  THIS FIELD HAS       03697002
*                             MEANING ONLY WHEN ICC OR CCC IS INDICATED 03698002
*                             IN THE CSW.  THE FOLLOWING 4 EQU'S ARE    03699002
*                             THE VALUES FOR TERMINATION CODE.          03699402
PCCACTC0 EQU   X'00' -        INTERFACE DISCONNECT                      03699602
PCCACTC1 EQU   X'40' -        STOP, STACK OR NORMAL TERMINATION         03699802
PCCACTC2 EQU   X'80' -        SELECTIVE RESET                           03699902
PCCACTC3 EQU   X'C0' -        SYSTEM RESET                              03700902
PCCARV43 EQU   X'20',,C'X' -  RESERVED                                  03701102
PCCARV44 EQU   X'10',,C'X' -  RESERVED                                  03701302
PCCACDIN EQU   X'08' -        I/O ERROR ALERT                           03701502
PCCACSEQ EQU   X'07' -        THREE-BIT SEQUENCE CODE.  THESE CODES     03701702
*                             HAVE CHANNEL-DEPENDENT MEANINGS.          03701802
PCCACHS1 DC    XL1'00' -      CCH INTERNAL SWITCH 1                     03702802
PCCACCMP EQU   X'80' -        COMMAND REGISTER PARITY IS VALID          03702902
PCCACNRE EQU   X'40' -        CCH WILL NOT CREATE A RECORD FOR THIS     03703302
*                             ERROR                              MDC006 03703702
PCCACFRR EQU   X'20' -        THE CCH FRR IS IN THE STACK        MDC007 03704102
PCCACNLS EQU   X'10' -        CCH IS TO PERFORM THE RECORD FUNCTION     03704602
*                             ONLY.  AN ERPIB IS NOT TO BE PLACED IN    03704802
*                             THE EWA.                                  03705002
PCCACAND EQU   X'08' -        ATTENTION HAS BEEN PRESENTED              03705202
PCCACIBC EQU   X'04' -        AN ERPIB FOR THIS ERROR HAS ALREADY BEEN  03705302
*                             CREATED                                   03705602
PCCACUCB EQU   X'02' -        UCB INVALID BIT                           03705802
PCCARV47 EQU   X'01',,C'X' -  RESERVED                                  03706002
PCCACHS2 DC    XL1'00' -      CCH INTERNAL SWITCH 2                     03706102
PCCACIOR EQU   X'80' -        I/O RESTART FUNCTION REQUIRED             03706302
PCCACALT EQU   X'40' -        THE ALTERNATE RETURN TO IOS IS TO BE USED 03706602
PCCACMOD EQU   X'20' -        NO MODULE IS AVAILABLE TO ANALYZE THE     03706802
*                             CHANNEL LOGOUT                            03707002
PCCACNLG EQU   X'10' -        CCH DETECTED A FAILURE TO LOG OR FAILURE  03707102
*                             TO STORE AN ECSW CONDITION                03707202
PCCACURC EQU   X'08' -        THE STIDC FIELD OF THE CAT ENTRY IS       03707602
*                             VALID BUT NOT THAT OF A SUPPORTED         03710202
*                             CHANNEL                            MDC011 03712202
PCCACCRA EQU   X'04' -        CHANNEL RECONFIGURATION HARDWARE ACTIVE   03713603
*                             FOR THE CHANNEL  (MDC300)        @Y30CQ9A 03714603
PCCARV50 EQU   X'02',,C'X' -  RESERVED                                  03716202
PCCARV51 EQU   X'01',,C'X' -  RESERVED                                  03718802
PCCACHRB DC    XL1'00' -      CCH RECORD BYTE                           03721402
PCCACSIB EQU   X'80' -        ERROR ON SIO                              03724002
PCCACINB EQU   X'40' -        ERROR ON INTERRUPT                        03726602
PCCACTIB EQU   X'20' -        ERROR ON TIO                              03729202
PCCACHIB EQU   X'10' -        ERROR ON HIO                              03731802
PCCARV52 EQU   X'08',,C'X' -  RESERVED                                  03734402
PCCACSNB EQU   X'04' -        SENSE DATA STORED                         03737002
PCCACCVB EQU   X'02' -        COUNT VALID                               03739602
PCCACNRB EQU   X'01' -        NO RETRY                                  03742202
PCCAIOSI DC    XL1'00' -      IOS INTERCEPT BYTE                        03744802
PCCACHW1 DC    F'0' -         CCH WORK AREA 1                           03747402
PCCACHW2 DC    F'0' -         CCH WORK AREA 2                           03750002
PCCALOGL DC    H'0' -         LENGTH OF CHANNEL LOGOUT FOR CURRENT      03770051
*                             ERROR  (MDC305)                  @G51BP9A 03800051
PCCACELL DC    H'0' -         MAXIMUM LENGTH OF I/O EXTENDED LOGOUT     03810051
*                             (IOEL) AREA  (MDC313)            @G51BP9A 03850051
PCCALGP1 DC    XL1'00' -      LOGOUT PARITY AREA 1  (MDC306)   @G51BP9A 03860051
PCCALGP2 DC    XL1'00' -      LOGOUT PARITY AREA 2  (MDC307)   @G51BP9A 03900051
PCCACHPB DC    FL1'0' -       LOGOUT PARITY BYTE COUNT                  04200002
*                             (MDC308)                         @G51BP9A 04210051
PCCARV05 DC    XL1'00' -      RESERVED FOR CCH  (MDC309)       @G51BP9A 04220051
PCCACHF1 DC    XL1'00' -      CCH FOOTPRINT BYTE 1                      04251002
PCCACF11 EQU   X'80' -        IOS GPR'S SAVED                           04252002
PCCACF12 EQU   X'40' -        UCB ADDRESS IS ZERO                       04253002
PCCACF13 EQU   X'20' -        ERPIB EXISTS                              04254002
PCCACF14 EQU   X'10' -        IGFCCHSI ENTERED                          04255002
PCCACF15 EQU   X'08' -        IGFCCHII ENTERED                          04256002
PCCACF16 EQU   X'04' -        IGFCCHFE ENTERED                          04257002
PCCACF17 EQU   X'02' -        IGFC60 ENTERED                            04258002
PCCACF18 EQU   X'01' -        IGFC70 ENTERED                            04259002
PCCACHF2 DC    XL1'00' -      CCH FOOTPRINT BYTE 2                      04260002
PCCACF21 EQU   X'80' -        IGFC80 ENTERED                            04261002
PCCACF22 EQU   X'40' -        IGFCIC ENTERED                            04262002
PCCACF23 EQU   X'20' -        IGFCCHRD ENTERED                   MDC008 04263002
PCCACF24 EQU   X'10' -        IGFCCHMP ENTERED                          04264002
PCCACF25 EQU   X'08' -        IGFCCHUC ENTERED                          04265002
PCCACF26 EQU   X'04' -        IGFCCHAS ENTERED                   MDC009 04266002
PCCACF27 EQU   X'02' -        IGFCCHIO ENTERED                          04267002
PCCACF28 EQU   X'01' -        EXIT CCH                                  04268002
PCCACHF3 DC    XL1'00' -      CCH FOOTPRINT BYTE 3                      04269002
PCCAISRB EQU   X'80' -        SRB FOR IECVIRST SCHEDULED                04269151
*                             (MDC321)                         @G51BP9A 04269251
PCCASLCK EQU   X'40' -        SPACE ALLOCATION LOCK HELD BY CCH         04269351
*                             (MDC322)                         @G51BP9A 04269551
PCCARV66 EQU   X'20',,C'X' -  RESERVED                                  04269751
PCCARV67 EQU   X'10',,C'X' -  RESERVED                                  04269802
PCCARV68 EQU   X'08',,C'X' -  RESERVED                                  04269902
PCCARV69 EQU   X'04',,C'X' -  RESERVED                                  04270902
PCCARV70 EQU   X'02',,C'X' -  RESERVED                                  04271102
PCCARV71 EQU   X'01',,C'X' -  RESERVED                                  04271302
PCCACHF4 DC    XL1'00' -      CCH FOOTPRINT BYTE 4                      04271902
PCCARV72 EQU   X'80',,C'X' -  RESERVED                                  04272902
PCCARV73 EQU   X'40',,C'X' -  RESERVED                                  04273902
PCCARV74 EQU   X'20',,C'X' -  RESERVED                                  04274902
PCCARV75 EQU   X'10',,C'X' -  RESERVED                                  04275902
PCCARV76 EQU   X'08',,C'X' -  RESERVED                                  04276902
PCCARV77 EQU   X'04',,C'X' -  RESERVED                                  04277902
PCCARV78 EQU   X'02',,C'X' -  RESERVED                                  04278902
PCCARV79 EQU   X'01',,C'X' -  RESERVED                                  04279902
PCCACHSV DC    3F'0' -        CCH INTERNAL SAVE AREA.  FIRST WORD       04300002
*                             CONTAINS THE ADDRESS OF THE CURRENT CCH   04300402
*                             RECORD BUFFER                      MDC010 04300802
PCCACHID DC    XL8'00' -      STORE CHANNEL ID WORK AREA                04302002
PCCALOGA DC    A(0) -         ADDRESS OF CHANNEL LOGOUT          MDC004 04303002
PCCARV54 DC    A(0) -         RESERVED                                  04304002
PCCARV55 DC    A(0) -         RESERVED                                  04305002
PCCARV56 DC    A(0) -         RESERVED                                  04306002
PCCARV57 DC    A(0) -         RESERVED                                  04307002
PCCARV58 DC    A(0) -         RESERVED                                  04308002
PCCARV59 DC    A(0) -         RESERVED                                  04309002
PCCARV60 DC    A(0) -         RESERVED                                  04309202
PCCARV61 DC    A(0) -         RESERVED                                  04309402
PCCARV62 DC    A(0) -         RESERVED                                  04309602
PCCARV63 DC    A(0) -         RESERVED                                  04309802
PCCAATTR DC    XL1'00' -      PROCESSOR ATTRIBUTES  (MDC302)   @G47AN9A 04309947
PCCACPUM EQU   X'80' -        INDICATOR THAT DEAD CPU HAD A MALFUNCTION 04310047
*                             (MDC301)                         @G47AN9A 04310947
PCCAIO   EQU   X'40' -        PROCESSOR HAS I/O CAPABILITY              04311847
*                             (MDC303)                         @G47AN9A 04312747
PCCAR100 EQU   X'20',,C'X' -  RESERVED                         @G47AN9A 04313647
PCCAR101 EQU   X'10',,C'X' -  RESERVED                         @G47AN9A 04314547
PCCAR102 EQU   X'08',,C'X' -  RESERVED                         @G47AN9A 04315447
PCCAR103 EQU   X'04',,C'X' -  RESERVED                         @G47AN9A 04316347
PCCAR104 EQU   X'02',,C'X' -  RESERVED                         @G47AN9A 04317247
PCCAR105 EQU   X'01',,C'X' -  RESERVED                         @G47AN9A 04318147
PCCARV01 DC    XL1'00' -      RESERVED                                  04320002
PCCARV35 DC    H'0' -         RESERVED                                  04330002
PCCARV36 DC    F'0' -         RESERVED                                  04340002
PCCACAT  DC    XL128'00' -    CHANNEL AVAILABILITY TABLE (16 CHANNELS,  04341002
*                             8 BYTES PER CHANNEL)               MDC005 04342002
         DC    XL72'00' -     RESERVED                                  04350002
         MEND  , -   */                                                 04400002
*%PCCAL2 : ;                                                            04450002
*                                                                       04500002
*DECLARE                                                                04550002
*  1 PCCA     BASED(PCCAPTR) BDY(DWORD),                                04600002
*   2 PCCAPCCA    CHAR(4) BDY(WORD),     /* CONTROL BLOCK ACRONYM IN    04650002
*                                           EBCDIC                   */ 04700002
*   2 PCCACPID    CHAR(12) BDY(WORD),    /* CPU ID (CONTAINS SERIAL     04750002
*                                           NUMBER)                  */ 04800002
*   2 PCCACPUA    PTR(15),               /* PHYSICAL CPU ADDRESS     */ 04850002
*   2 PCCACAFM    BIT(16) BDY(WORD,3),   /* BIT MASK CORRESPONDING TO   04900002
*                                           PHYSICAL CPU ADDRESS     */ 04950002
*   2 PCCATQEP    PTR(31),               /* TQE POINTER              */ 05050002
*   2 PCCAPSAV    PTR(31),               /* VIRTUAL ADDRESS OF PSA   */ 05100002
*   2 PCCAPSAR    PTR(31),               /* REAL ADDRESS OF PSA      */ 05150002
*   2 PCCARV81    PTR(31),               /* RESERVED           MDC005*/ 05155002
*   2 PCCARV82    PTR(31),               /* RESERVED           MDC005*/ 05160002
*   2 PCCARV83    PTR(31),               /* RESERVED           MDC005*/ 05165002
*   2 PCCARV84    PTR(31),               /* RESERVED           MDC005*/ 05170002
*   2 PCCARV85    PTR(31),               /* RESERVED           MDC005*/ 05175002
*   2 PCCARV86    PTR(31),               /* RESERVED           MDC005*/ 05180002
*   2 PCCARV87    PTR(31),               /* RESERVED           MDC005*/ 05185002
*   2 PCCARV88    PTR(31),               /* RESERVED           MDC005*/ 05190002
*   2 PCCARV89    PTR(31),               /* RESERVED           MDC005*/ 05195002
*   2 PCCARV90    PTR(31),               /* RESERVED           MDC005*/ 05200002
*   2 PCCARV91    PTR(31),               /* RESERVED           MDC005*/ 05205002
*   2 PCCARV92    PTR(31),               /* RESERVED           MDC005*/ 05210002
*   2 PCCARV93    PTR(31),               /* RESERVED           MDC005*/ 05215002
*   2 PCCARV94    PTR(31),               /* RESERVED           MDC005*/ 05220002
*   2 PCCARV95    PTR(31),               /* RESERVED           MDC005*/ 05225002
*   2 PCCARV96    PTR(31),               /* RESERVED           MDC005*/ 05230002
*   2 PCCARV97    PTR(31),               /* RESERVED           MDC005*/ 05235002
*   2 PCCARV98    PTR(31),               /* RESERVED           MDC005*/ 05240002
*   2 PCCARV99    PTR(31),               /* RESERVED           MDC005*/ 05245002
*   2 PCCARV9A    PTR(31),               /* RESERVED           MDC005*/ 05250002
*   2 PCCARV9B    PTR(31),               /* RESERVED           MDC005*/ 05255002
*   2 PCCARV9C    PTR(31),               /* RESERVED           MDC005*/ 05260002
*   2 PCCARV9D    PTR(31),               /* RESERVED           MDC005*/ 05265002
*   2 PCCARV9E    PTR(31),               /* RESERVED           MDC005*/ 05270002
*   2 PCCATMST    CHAR(4) BDY(WORD),     /* TIMER STATUS BYTES       */ 05350002
*    3 PCCATMFL    BIT(8),               /* FIRST BYTE OF PCCATMST   */ 05400002
*     4 PCCAINIT BIT(1),                 /* ENTRY HAS BEEN              05450002
*                                           INITIALIZED              */ 05500002
*     4 PCCASYNC BIT(1),                 /* CLOCK OUT OF                05550002
*                                           SYNCHRONIZATION          */ 05600002
*     4 PCCAVKIL BIT(1),                 /* VARY CPU SHOULD BE          05650002
*                                           CANCELLED                */ 05700002
*     4 PCCAMCC  BIT(1),                 /* PROCESSING FOR              05750002
*                                           PERMANENTLY DAMAGED CLOCK   05800002
*                                           COMPARATOR MUST BE DONE  */ 05850002
*     4 PCCAMINT BIT(1),                 /* PROCESSING FOR CPU TIMER    05900002
*                                           MUST BE DONE             */ 05950002
*     4 PCCARV02 BIT(1),                 /* RESERVED                 */ 06000002
*     4 PCCARV03 BIT(1),                 /* RESERVED                 */ 06050002
*     4 PCCARV04 BIT(1),                 /* RESERVED                 */ 06100002
*    3 PCCATODE    PTR(8),               /* TOD CLOCK ERROR FLAGS    */ 06150002
*     4 PCCANUTD BIT(1),                 /* CLOCK CANNOT BE USED     */ 06200002
*     4 PCCANFTD BIT(1),                 /* CLOCK SHOULD NOT BE RESET*/ 06250002
*     4 PCCACTTD BIT(6),                 /* ERROR COUNT              */ 06300002
*    3 PCCACCE     PTR(8),               /* FLAGS FOR CLOCK             06350002
*                                           COMPARATOR               */ 06400002
*     4 PCCANUCC BIT(1),                 /* CLOCK COMPARATOR CANNOT     06450002
*                                           BE USED                  */ 06500002
*     4 PCCANFCC BIT(1),                 /* CLOCK COMPARATOR SHOULD     06550002
*                                           NOT BE RESET             */ 06600002
*     4 PCCACTCC BIT(6),                 /* ERROR COUNT              */ 06650002
*    3 PCCAINTE    PTR(8),               /* FLAGS FOR CPU TIMER      */ 06700002
*     4 PCCANUIN BIT(1),                 /* CPU TIMER CANNOT BE USED */ 06750002
*     4 PCCANFIN BIT(1),                 /* CPU TIMER SHOULD NOT BE     06800002
*                                           RESET                    */ 06850002
*     4 PCCACTIN BIT(6),                 /* ERROR COUNT              */ 06900002
*   2 PCCARPB     FIXED(31),             /* EXTERNAL CALL SIGP BUFFER*/ 06950002
*   2 PCCAEMSB    CHAR(16) BDY(DWORD),   /* EMERGENCY SIGNAL SIGP       07000002
*                                           BUFFER                   */ 07050002
*    3 PCCAEMSI    CHAR(4) BDY(WORD),    /* FIRST WORD OF EMS BUFFER */ 07100002
*     4 PCCARISP    BIT(8),              /* CONTAINS PARALLEL/SERIAL    07150002
*                                           REQUEST INDICATOR FOR       07200002
*                                           REMOTE IMMEDIATE SIGNAL  */ 07250002
*      5 PCCAPARL BIT(1),                /* PARALLEL REQUEST   MDC002*/ 07251002
*      5 PCCASERL BIT(1),                /* SERIAL REQUEST     MDC003*/ 07300002
*      5 PCCARV06 BIT(1),                /* RESERVED                 */ 07400002
*      5 PCCARV07 BIT(1),                /* RESERVED                 */ 07450002
*      5 PCCARV08 BIT(1),                /* RESERVED                 */ 07500002
*      5 PCCARV09 BIT(1),                /* RESERVED                 */ 07550002
*      5 PCCARV10 BIT(1),                /* RESERVED                 */ 07600002
*      5 PCCARV11 BIT(1),                /* RESERVED                 */ 07650002
*     4 PCCAEMS2    BIT(8),              /* SECOND BYTE OF PCCAEMSI  */ 07700002
*      5 PCCARV12 BIT(1),                /* RESERVED                 */ 07750002
*      5 PCCARV13 BIT(1),                /* RESERVED                 */ 07800002
*      5 PCCARV14 BIT(1),                /* RESERVED                 */ 07850002
*      5 PCCARV15 BIT(1),                /* RESERVED                 */ 07900002
*      5 PCCARV16 BIT(1),                /* RESERVED                 */ 07950002
*      5 PCCARV17 BIT(1),                /* RESERVED                 */ 08000002
*      5 PCCARV18 BIT(1),                /* RESERVED                 */ 08050002
*      5 PCCARV19 BIT(1),                /* RESERVED                 */ 08100002
*     4 PCCAEMS3    BIT(8),              /* THIRD BYTE OF PCCAEMSI   */ 08150002
*      5 PCCARV20 BIT(1),                /* RESERVED                 */ 08200002
*      5 PCCARV21 BIT(1),                /* RESERVED                 */ 08250002
*      5 PCCARV22 BIT(1),                /* RESERVED                 */ 08300002
*      5 PCCARV23 BIT(1),                /* RESERVED                 */ 08350002
*      5 PCCARV24 BIT(1),                /* RESERVED                 */ 08400002
*      5 PCCARV25 BIT(1),                /* RESERVED                 */ 08450002
*      5 PCCARV26 BIT(1),                /* RESERVED                 */ 08500002
*      5 PCCARV27 BIT(1),                /* RESERVED                 */ 08550002
*     4 PCCARMSB    BIT(8),              /* CONTAINS RMS INDICATOR   */ 08600002
*      5 PCCARV28 BIT(1),                /* RESERVED                 */ 08650002
*      5 PCCARV29 BIT(1),                /* RESERVED                 */ 08700002
*      5 PCCARV30 BIT(1),                /* RESERVED                 */ 08750002
*      5 PCCARV31 BIT(1),                /* RESERVED                 */ 08800002
*      5 PCCARV32 BIT(1),                /* RESERVED                 */ 08850002
*      5 PCCARV33 BIT(1),                /* RESERVED                 */ 08900002
*      5 PCCARV34 BIT(1),                /* RESERVED                 */ 08950002
*      5 PCCARMS  BIT(1),                /* SIGP WAS ISSUED VIA RMS  */ 09000002
*    3 PCCAEMSP    PTR(31),              /* REMOTE IMMEDIATE SIGNAL     09050002
*                                           PARAMETER ADDRESS        */ 09100002
*    3 PCCAEMSE    PTR(31),              /* REMOTE IMMEDIATE SIGNAL     09150002
*                                           RECEIVING ROUTINE ENTRY     09200002
*                                           POINT ADDRESS            */ 09250002
*    3 PCCAEMSA    PTR(31),              /* PCCA ADDRESS OF THE         09300002
*                                           RECEIVING ROUTINE        */ 09350002
*   2 PCCAPWAV    PTR(31),               /* VIRTUAL ADDRESS OF MCH      09400002
*                                           PROCESSOR WORK AREA      */ 09450002
*   2 PCCAPWAR    PTR(31),               /* REAL ADDRESS OF MCH         09500002
*                                           PROCESSOR WORK AREA      */ 09550002
*   2 PCCALRBV    PTR(31),               /* VIRTUAL ADDRESS OF MCH      09600002
*                                           LOGREC BUFFER            */ 09650002
*   2 PCCALRBR    PTR(31),               /* REAL ADDRESS OF MCH         09700002
*                                           LOGREC BUFFER            */ 09750002
*   2 PCCAELAD    PTR(31),               /* VIRTUAL ADDRESS OF I/O      09770051
*                                           EXTENDED LOGOUT (IOEL)      09800051
*                                           AREA  (MDC310)   @G51BP9A*/ 09850051
*   2 PCCAELBA    PTR(31),               /* VIRTUAL ADDRESS OF CCH      09855051
*                                           LOGOUT BUFFER               09860051
*                                           (MDC311)         @G51BP9A*/ 09865051
*   2 PCCACCHM    PTR(31),               /* VIRTUAL ADDRESS OF CCH      09870051
*                                           MESSAGE BUFFER              09875051
*                                           (MDC312)         @G51BP9A*/ 09880051
*   2 PCCASRB     CHAR(44) BDY(WORD),    /* SRB FOR CCH TO SCHEDULE     09880351
*                                           IECVIRST TO PROCESS         09880651
*                                           CHANNEL ERRORS              09880951
*                                           (MDC314)         @G51BP9A*/ 09881251
*   2 PCCACHAN    BIT(8),                /* FLAG BYTE FOR CCH-IOS       09881551
*                                           CHANNEL RECOVERY            09881851
*                                           COMMUNICATION               09882151
*                                           (MDC315)         @G51BP9A*/ 09882451
*    3 PCCAIRST BIT(1),                  /* IECVIRST IS PROCESSING      09882751
*                                           CHANNEL ERRORS DETECTED     09883051
*                                           DURING AN EXTERNAL          09883351
*                                           MACHINE CHECK               09883651
*                                           (MDC316)         @G51BP9A*/ 09883951
*    3 PCCAEXDM BIT(1),                  /* WHILE PCCAIRST BIT WAS      09884251
*                                           SET, MORE CHANNEL ERRORS    09885051
*                                           WERE DETECTED WHILE         09885251
*                                           PROCESSING ANOTHER          09885451
*                                           EXTERNAL DAMAGE MACHINE     09885651
*                                           CHECK  (MDC317)  @G51BP9A*/ 09885851
*    3 PCCAR107 BIT(1),                  /* RESERVED         @G51BP9A*/ 09886051
*    3 PCCAR108 BIT(1),                  /* RESERVED         @G51BP9A*/ 09886251
*    3 PCCAR109 BIT(1),                  /* RESERVED         @G51BP9A*/ 09886451
*    3 PCCAR110 BIT(1),                  /* RESERVED         @G51BP9A*/ 09886651
*    3 PCCAR111 BIT(1),                  /* RESERVED         @G51BP9A*/ 09886851
*    3 PCCAR112 BIT(1),                  /* RESERVED         @G51BP9A*/ 09887051
*   2 PCCASRBL    CHAR(1),               /* LOCK BYTE FOR               09887151
*                                           COMMUNICATING CHANNEL       09887451
*                                           ERRORS BETWEEN CCH AND      09887651
*                                           IOS  (MDC318)    @G51BP9A*/ 09887751
* %PCCASRBA='''00''X';                   /* SRB IS AVAILABLE FOR        09888051
*                                           SCHEDULING                  09888251
*                                           (MDC319)         @G51BP9A*/ 09888451
* %PCCASRBN='''FF''X';                   /* SRB IS NOT AVAILABLE FOR    09888651
*                                           SCHEDULING                  09888851
*                                           (MDC320)         @G51BP9A*/ 09889051
*   2 PCCAR113    FIXED(15),             /* RESERVED                    09889251
*                                           (MDC304)         @G51BP9A*/ 09889451
*   2 PCCAR106    CHAR(52) BDY(WORD),    /* RESERVED                    09889651
*                                           (MDC304)         @G51BP9A*/ 09890051
*   2 PCCAWERP    CHAR(8) BDY(DWORD),    /* WORK ERPIB FOR CCH       */ 09900002
*    3 PCCACHUB    PTR(31),              /* UCB ADDRESS OF THE DEVICE   09901002
*                                           IN USE WHEN THE CHANNEL-    09902002
*                                           DETECTED ERROR OCCURRED.    09903002
*                                           THIS FIELD IS ZERO IF CCH   09905002
*                                           HAS NOT CREATED AN ERPIB    09907002
*                                           FOR THE ERP'S.           */ 09907402
*    3 PCCACHPF    BIT(8),               /* PROGRAM FLAGS.  INDICATES   09908002
*                                           THE SELECTION OR            09909002
*                                           INTERRUPTION SEQUENCE       09910002
*                                           WHEN THE CSW WAS STORED. */ 09911002
*     4 PCCACSIO BIT(1),                 /* THE CSW WAS STORED AFTER    09912002
*                                           A START I/O INSTRUCTION     09913002
*                                           WAS EXECUTED             */ 09914002
*     4 PCCACINT BIT(1),                 /* THE CSW WAS STORED AFTER    09915002
*                                           AN I/O INTERRUPTION      */ 09916002
*     4 PCCACTIO BIT(1),                 /* THE CSW WAS STORED AFTER    09917002
*                                           A TEST I/O INSTRUCTION      09918002
*                                           WAS EXECUTED             */ 09919002
*     4 PCCACHIO BIT(1),                 /* THE CSW WAS STORED AFTER    09920002
*                                           A HALT I/O INSTRUCTION      09921002
*                                           WAS EXECUTED             */ 09922002
*     4 PCCARV37 BIT(1),                 /* RESERVED                 */ 09923002
*     4 PCCACSNS BIT(1),                 /* THE SENSE DATA WAS STORED*/ 09924002
*     4 PCCACCNT BIT(1),                 /* THE CSW COUNT IS VALID   */ 09925002
*     4 PCCACNOR BIT(1),                 /* NO RETRY IS TO BE           09926002
*                                           ATTEMPTED UNDER ANY         09927002
*                                           CONDITIONS               */ 09928002
*    3 PCCACHBL    BIT(8),               /* PROBABLE SOURCE OF ERROR */ 09929002
*     4 PCCACCPU BIT(1),                 /* CPU ERROR                */ 09930002
*     4 PCCACCHA BIT(1),                 /* CHANNEL ERROR            */ 09931002
*     4 PCCACSCU BIT(1),                 /* STORAGE CONTROL UNIT        09932002
*                                           ERROR                    */ 09933002
*     4 PCCACSTG BIT(1),                 /* STORAGE ERROR            */ 09934002
*     4 PCCACCUE BIT(1),                 /* CONTROL UNIT ERROR       */ 09935002
*     4 PCCARV38 BIT(1),                 /* RESERVED                 */ 09936002
*     4 PCCARV39 BIT(1),                 /* RESERVED                 */ 09937002
*     4 PCCARV40 BIT(1),                 /* RESERVED                 */ 09938002
*    3 PCCACHVA    BIT(8),               /* VALIDITY INDICATORS.  WHEN  09939002
*                                           THE DESIGNATED FIELD IS     09940002
*                                           STORED BY THE CHANNEL       09941002
*                                           WITH THE CORRECT CONTENTS   09942002
*                                           THE VALIDITY BIT IS ONE.    09943002
*                                           THE VALIDITY BIT FOR        09944002
*                                           NON-STORED FIELDS IS        09945002
*                                           MEANINGLESS.             */ 09946002
*     4 PCCACITF BIT(1),                 /* INTERFACE ADDRESS IS        09947002
*                                           VALID                    */ 09948002
*     4 PCCARV41 BIT(1),                 /* RESERVED                 */ 09949002
*     4 PCCARV42 BIT(1),                 /* RESERVED                 */ 09949202
*     4 PCCACSQV BIT(1),                 /* SEQUENCE CODE IS VALID   */ 09949402
*     4 PCCACUNS BIT(1),                 /* UNIT STATUS IS VALID     */ 09949602
*     4 PCCACCMD BIT(1),                 /* COMMAND ADDRESS IS VALID.   09949802
*                                           THE CSW CONTAINS A VALID    09949902
*                                           COMMAND ADDRESS.         */ 09950902
*     4 PCCACCHV BIT(1),                 /* CHANNEL ADDRESS IS VALID */ 09951102
*     4 PCCACDAV BIT(1),                 /* DEVICE ADDRESS IS VALID  */ 09951302
*    3 PCCACHTS    BIT(8),               /* TERMINATION AND SEQUENCE    09951502
*                                           (RETRY) CODES            */ 09951702
*     4 PCCACTEC BIT(2),                 /* TERMINATION CODE.  THIS     09951802
*                                           CODE SPECIFIES THE          09952802
*                                           TERMINATION SIGNALS USED    09953002
*                                           ON THE I/O INTERFACE        09953202
*                                           AFTER THE CHANNEL DETECTED  09953402
*                                           THE ERROR.  THIS FIELD      09954402
*                                           HAS MEANING ONLY WHEN ICC   09954602
*                                           OR CCC IS INDICATED IN      09954702
*                                           THE CSW.                 */ 09954902
*%PCCACTC0='''00''B';                    /* INTERFACE DISCONNECT     */ 09955102
*%PCCACTC1='''01''B';                    /* STOP, STACK OR NORMAL       09955302
*                                           TERMINATION              */ 09955502
*%PCCACTC2='''10''B';                    /* SELECTIVE RESET          */ 09955602
*%PCCACTC3='''11''B';                    /* SYSTEM RESET             */ 09956602
*     4 PCCARV43 BIT(1),                 /* RESERVED                 */ 09956802
*     4 PCCARV44 BIT(1),                 /* RESERVED                 */ 09957002
*     4 PCCACDIN BIT(1),                 /* I/O ERROR ALERT          */ 09957202
*     4 PCCACSEQ BIT(3),                 /* SEQUENCE CODE.  THESE       09957402
*                                           CODES HAVE CHANNEL-         09957502
*                                           DEPENDENT MEANINGS.      */ 09958502
*   2 PCCACHS1    BIT(8),                /* CCH INTERNAL SWITCH 1    */ 09958702
*    3 PCCACCMP BIT(1),                  /* COMMAND REGISTER PARITY     09958802
*                                           IS VALID                 */ 09959802
*    3 PCCACNRE BIT(1),                  /* CCH WILL NOT CREATE A       09960202
*                                           RECORD FOR THIS ERROR       09960302
*                                                              MDC006*/ 09961302
*    3 PCCACFRR BIT(1),                  /* THE CCH FRR IS IN THE       09963302
*                                           STACK              MDC007*/ 09963702
*    3 PCCACNLS BIT(1),                  /* CCH IS TO PERFORM THE       09965002
*                                           RECORD FUNCTION ONLY.       09966002
*                                           AN ERPIB IS NOT TO BE       09967002
*                                           PLACED IN THE EWA.       */ 09968002
*    3 PCCACAND BIT(1),                  /* ATTENTION HAS BEEN          09969002
*                                           PRESENTED                */ 09970002
*    3 PCCACIBC BIT(1),                  /* AN ERPIB FOR THIS ERROR     09971002
*                                           HAS ALREADY BEEN CREATED */ 09972002
*    3 PCCACUCB BIT(1),                  /* UCB INVALID BIT          */ 09973002
*    3 PCCARV47 BIT(1),                  /* RESERVED                 */ 09974002
*   2 PCCACHS2    BIT(8),                /* CCH INTERNAL SWITCH 2    */ 09975002
*    3 PCCACIOR BIT(1),                  /* I/O RESTART FUNCTION        09976002
*                                           REQUIRED                 */ 09977002
*    3 PCCACALT BIT(1),                  /* THE ALTERNATE RETURN TO     09978002
*                                           IOS IS TO BE USED        */ 09979002
*    3 PCCACMOD BIT(1),                  /* NO MODULE IS AVAILABLE TO   09980002
*                                           ANALYZE THE CHANNEL         09981002
*                                           LOGOUT                   */ 09982002
*    3 PCCACNLG BIT(1),                  /* CCH DETECTED A FAILURE TO   09983002
*                                           LOG OR FAILURE TO STORE     09983402
*                                           AN ECSW CONDITION        */ 09983802
*    3 PCCACURC BIT(1),                  /* THE STIDC FIELD OF THE      09985802
*                                           CAT ENTRY IS VALID BUT      09985902
*                                           NOT THAT OF A SUPPORTED     09989602
*                                           CHANNEL            MDC011*/ 09991602
*    3 PCCACCRA BIT(1),                  /* CHANNEL RECONFIGURATION     09994503
*                                           HARDWARE ACTIVE FOR THE     09995503
*                                           CHANNEL (MDC300) @Y30CQ9A*/ 09996503
*    3 PCCARV50 BIT(1),                  /* RESERVED                 */ 09998202
*    3 PCCARV51 BIT(1),                  /* RESERVED                 */ 10001902
*   2 PCCACHRB    BIT(8),                /* CCH RECORD BYTE          */ 10005602
*    3 PCCACSIB BIT(1),                  /* ERROR ON SIO             */ 10009302
*    3 PCCACINB BIT(1),                  /* ERROR ON INTERRUPT       */ 10013002
*    3 PCCACTIB BIT(1),                  /* ERROR ON TIO             */ 10016702
*    3 PCCACHIB BIT(1),                  /* ERROR ON HIO             */ 10020402
*    3 PCCARV52 BIT(1),                  /* RESERVED                 */ 10024102
*    3 PCCACSNB BIT(1),                  /* SENSE DATA STORED        */ 10027802
*    3 PCCACCVB BIT(1),                  /* COUNT VALID              */ 10031502
*    3 PCCACNRB BIT(1),                  /* NO RETRY                 */ 10035202
*   2 PCCAIOSI    CHAR(1),               /* IOS INTERCEPT BYTE       */ 10038902
*   2 PCCACHW1    FIXED(31),             /* CCH WORK AREA 1          */ 10042602
*   2 PCCACHW2    FIXED(31),             /* CCH WORK AREA 2          */ 10046302
*   2 PCCALOGL    FIXED(15),             /* LENGTH OF CHANNEL LOGOUT    10047351
*                                           FOR CURRENT ERROR           10050051
*                                           (MDC305)         @G51BP9A*/ 10060051
*   2 PCCACELL    FIXED(15),             /* MAXIMUM LENGTH OF I/O       10070051
*                                           EXTENDED LOGOUT (IOEL)      10100051
*                                           AREA  (MDC313)   @G51BP9A*/ 10110051
*   2 PCCALGP1    CHAR(1),               /* LOGOUT PARITY AREA 1        10120051
*                                           (MDC306)         @G51BP9A*/ 10150051
*   2 PCCALGP2    CHAR(1),               /* LOGOUT PARITY AREA 2        10160051
*                                           (MDC307)         @G51BP9A*/ 10200051
*   2 PCCACHPB    PTR(8),                /* LOGOUT PARITY BYTE COUNT    10250051
*                                           (MDC308)         @G51BP9A*/ 10450051
*   2 PCCARV05    CHAR(1),               /* RESERVED FOR CCH            10460051
*                                           (MDC309)         @G51BP9A*/ 10500051
*   2 PCCACHF1    BIT(8),                /* CCH FOOTPRINT BYTE 1     */ 10501002
*    3 PCCACF11 BIT(1),                  /* IOS GPR'S SAVED          */ 10502002
*    3 PCCACF12 BIT(1),                  /* UCB ADDRESS IS ZERO      */ 10503002
*    3 PCCACF13 BIT(1),                  /* ERPIB EXISTS             */ 10504002
*    3 PCCACF14 BIT(1),                  /* IGFCCHSI ENTERED         */ 10505002
*    3 PCCACF15 BIT(1),                  /* IGFCCHII ENTERED         */ 10506002
*    3 PCCACF16 BIT(1),                  /* IGFCCHFE ENTERED         */ 10507002
*    3 PCCACF17 BIT(1),                  /* IGFC60 ENTERED           */ 10508002
*    3 PCCACF18 BIT(1),                  /* IGFC70 ENTERED           */ 10509002
*   2 PCCACHF2    BIT(8),                /* CCH FOOTPRINT BYTE 2     */ 10510002
*    3 PCCACF21 BIT(1),                  /* IGFC80 ENTERED           */ 10511002
*    3 PCCACF22 BIT(1),                  /* IGFCIC ENTERED           */ 10512002
*    3 PCCACF23 BIT(1),                  /* IGFCCHRD ENTERED   MDC008*/ 10513002
*    3 PCCACF24 BIT(1),                  /* IGFCCHMP ENTERED         */ 10514002
*    3 PCCACF25 BIT(1),                  /* IGFCCHUC ENTERED         */ 10515002
*    3 PCCACF26 BIT(1),                  /* IGFCCHAS ENTERED   MDC009*/ 10516002
*    3 PCCACF27 BIT(1),                  /* IGFCCHIO ENTERED         */ 10517002
*    3 PCCACF28 BIT(1),                  /* EXIT CCH                 */ 10518002
*   2 PCCACHF3    BIT(8),                /* CCH FOOTPRINT BYTE 3     */ 10519002
*    3 PCCAISRB BIT(1),                  /* SRB FOR IECVIRST            10519551
*                                           SCHEDULED                   10520051
*                                           (MDC321)         @G51BP9A*/ 10520251
*    3 PCCASLCK BIT(1),                  /* SPACE ALLOCATION LOCK       10520451
*                                           HELD BY CCH                 10521051
*                                           (MDC322)         @G51BP9A*/ 10521351
*    3 PCCARV66 BIT(1),                  /* RESERVED                 */ 10522002
*    3 PCCARV67 BIT(1),                  /* RESERVED                 */ 10523002
*    3 PCCARV68 BIT(1),                  /* RESERVED                 */ 10524002
*    3 PCCARV69 BIT(1),                  /* RESERVED                 */ 10525002
*    3 PCCARV70 BIT(1),                  /* RESERVED                 */ 10526002
*    3 PCCARV71 BIT(1),                  /* RESERVED                 */ 10527002
*   2 PCCACHF4    BIT(8),                /* CCH FOOTPRINT BYTE 4     */ 10528002
*    3 PCCARV72 BIT(1),                  /* RESERVED                 */ 10529002
*    3 PCCARV73 BIT(1),                  /* RESERVED                 */ 10530002
*    3 PCCARV74 BIT(1),                  /* RESERVED                 */ 10531002
*    3 PCCARV75 BIT(1),                  /* RESERVED                 */ 10532002
*    3 PCCARV76 BIT(1),                  /* RESERVED                 */ 10533002
*    3 PCCARV77 BIT(1),                  /* RESERVED                 */ 10534002
*    3 PCCARV78 BIT(1),                  /* RESERVED                 */ 10535002
*    3 PCCARV79 BIT(1),                  /* RESERVED                 */ 10536002
*   2 PCCACHSV  (3) FIXED(31),           /* CCH INTERNAL SAVE AREA.     10550002
*                                           FIRST WORD CONTAINS THE     10600002
*                                           ADDRESS OF THE CURRENT      10600402
*                                           CCH RECORD BUFFER  MDC010*/ 10600802
*   2 PCCACHID    CHAR(8) BDY(WORD),     /* STORE CHANNEL ID WORK       10601002
*                                           AREA                     */ 10602002
*   2 PCCALOGA    PTR(31),               /* ADDRESS OF CHANNEL          10603002
*                                           LOGOUT             MDC004*/ 10603202
*   2 PCCARV54    PTR(31),               /* RESERVED                 */ 10604002
*   2 PCCARV55    PTR(31),               /* RESERVED                 */ 10605002
*   2 PCCARV56    PTR(31),               /* RESERVED                 */ 10606002
*   2 PCCARV57    PTR(31),               /* RESERVED                 */ 10607002
*   2 PCCARV58    PTR(31),               /* RESERVED                 */ 10608002
*   2 PCCARV59    PTR(31),               /* RESERVED                 */ 10609002
*   2 PCCARV60    PTR(31),               /* RESERVED                 */ 10609202
*   2 PCCARV61    PTR(31),               /* RESERVED                 */ 10609402
*   2 PCCARV62    PTR(31),               /* RESERVED                 */ 10609602
*   2 PCCARV63    PTR(31),               /* RESERVED                 */ 10609802
*   2 PCCAATTR    BIT(8),                /* PROCESSOR ATTRIBUTES        10609947
*                                           (MDC302)         @G47AN9A*/ 10610047
*    3 PCCACPUM BIT(1),                  /* INDICATOR THAT DEAD CPU     10620047
*                                           HAD A MALFUNCTION           10620747
*                                           (MDC301)         @G47AN9A*/ 10621447
*    3 PCCAIO   BIT(1),                  /* PROCESSOR HAS I/O           10622147
*                                           CAPABILITY                  10622847
*                                           (MDC303)         @G47AN9A*/ 10623547
*    3 PCCAR100 BIT(1),                  /* RESERVED         @G47AN9A*/ 10624247
*    3 PCCAR101 BIT(1),                  /* RESERVED         @G47AN9A*/ 10624947
*    3 PCCAR102 BIT(1),                  /* RESERVED         @G47AN9A*/ 10625647
*    3 PCCAR103 BIT(1),                  /* RESERVED         @G47AN9A*/ 10626347
*    3 PCCAR104 BIT(1),                  /* RESERVED         @G47AN9A*/ 10627047
*    3 PCCAR105 BIT(1),                  /* RESERVED         @G47AN9A*/ 10627747
*   2 PCCARV01    CHAR(1),               /* RESERVED                 */ 10630002
*   2 PCCARV35    FIXED(15),             /* RESERVED                 */ 10640002
*   2 PCCARV36    FIXED(31),             /* RESERVED                 */ 10642002
*   2 PCCACAT     CHAR(128) BDY(DWORD),  /* CHANNEL AVAILABILITY        10700002
*                                           TABLE  (16 CHANNELS,        10750002
*                                           8 BYTES PER CHANNEL)        10800002
*                                                              MDC005*/ 10850002
*   2 *           CHAR(72) BDY(DWORD);   /* RESERVED                 */ 10900002
./  ADD  SSI=22810469,NAME=IHAPCCAT
*                                                                       00050002
*        %GOTO PCCATL1;  /*                                             00100002
         MACRO                                                          00150002
         IHAPCCAT &DSECT=YES   */                                       00200002
*%PCCATL1 : ;                                                           00250002
*                                                                       00300002
*/* **************************************************************** */ 00350002
*/*                                                                  */ 00400002
*/*            PCCA VECTOR TABLE                                     */ 00450002
*/*                                                                  */ 00500002
*/*  OS/VS2 RELEASE 2, 06/28/72, LEVEL=2                             */ 00550002
*/*                                                                  */ 00600002
*/*  METHOD OF ACCESS                                                */ 00650002
*/*      BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */ 00700002
*/*             USING ON PCCAVT GIVES ADDRESSABILITY FOR ALL SYMBOLS.*/ 00750002
*/*      PL/S - INCLUDE CVT TO DEFINE CVTPCCAT                       */ 00800002
*/*                                                                  */ 00850002
*/* **************************************************************** */ 00900002
*%GOTO PCCATL2;   /*                                                    00950002
         SPACE 1                                                        01000002
         AIF   ('&DSECT' EQ 'NO').PCCAT10                               01050002
PCCAVT   DSECT                                                          01100002
         AGO   .PCCAT20                                                 01150002
.PCCAT10 ANOP                                                           01200002
         DS    0D                                                       01250002
PCCAVT   EQU   *                                                        01300002
.PCCAT20 ANOP                                                           01350002
PCCAT00P DC    A(0) -         ADDRESS OF PCCA FOR CPU 0                 01400002
PCCAT01P DC    A(0) -         ADDRESS OF PCCA FOR CPU 1                 01450002
PCCAT02P DC    A(0) -         ADDRESS OF PCCA FOR CPU 2                 01500002
PCCAT03P DC    A(0) -         ADDRESS OF PCCA FOR CPU 3                 01550002
PCCAT04P DC    A(0) -         ADDRESS OF PCCA FOR CPU 4                 01600002
PCCAT05P DC    A(0) -         ADDRESS OF PCCA FOR CPU 5                 01650002
PCCAT06P DC    A(0) -         ADDRESS OF PCCA FOR CPU 6                 01700002
PCCAT07P DC    A(0) -         ADDRESS OF PCCA FOR CPU 7                 01750002
PCCAT08P DC    A(0) -         ADDRESS OF PCCA FOR CPU 8                 01800002
PCCAT09P DC    A(0) -         ADDRESS OF PCCA FOR CPU 9                 01850002
PCCAT10P DC    A(0) -         ADDRESS OF PCCA FOR CPU 10                01900002
PCCAT11P DC    A(0) -         ADDRESS OF PCCA FOR CPU 11                01950002
PCCAT12P DC    A(0) -         ADDRESS OF PCCA FOR CPU 12                02000002
PCCAT13P DC    A(0) -         ADDRESS OF PCCA FOR CPU 13                02050002
PCCAT14P DC    A(0) -         ADDRESS OF PCCA FOR CPU 14                02100002
PCCAT15P DC    A(0) -         ADDRESS OF PCCA FOR CPU 15                02150002
         MEND  , -   */                                                 02200002
*%PCCATL2 : ;                                                           02250002
*                                                                       02300002
*DECLARE                                                                02350002
*  1 PCCAVT   BASED(CVTPCCAT) BDY(DWORD),                               02400002
*   2 PCCAT00P  (16) PTR(31);            /* ADDRESSES OF PCCA'S FOR     02450002
*                                           CPU'S 0-15               */ 02500002
./  ADD  SSI=81640001,NAME=IHAPFTE
*        %GOTO PFTEPLS;                                              /* 00050002
         MACRO                                                          00100002
         IHAPFTE &DSECT=YES                                             00150002
         AGO   .PFTBIT         DO NOT GENERATE PROLOGUE                 00200002
*********************************************************************** 00250002
*                                                                     * 00300002
* STATUS -                                                            * 00350002
*    CHANGE LEVEL 1                                                   * 00400003
* FUNCTION -                                                          * 00450002
*    MAPPING MACRO FOR PFTE                                           * 00500002
* ENTRY POINTS -                                                      * 00550002
*     IHAPFTE MACRO CALL                                              * 00600002
* INPUT -                                                             * 00650002
*    SEE IHAPFTE MACRO DEFINITION                                     * 00700002
* OUTPUT -                                                            * 00750002
*    PFTE MAPPING MACRO                                               * 00800002
* EXTERNAL REFERENCES -                                               * 00850002
*    N/A                                                              * 00900002
* EXITS, NORMAL -                                                     * 00950002
*    N/A                                                              * 01000002
* EXITS, ERROR -                                                      * 01050002
*    N/A                                                              * 01100002
* TABLES/WORK AREAS -                                                 * 01150002
*    N/A                                                              * 01200002
* ATTRIBUTES -                                                        * 01250002
*    BILINGUAL MACRO                                                  * 01300002
* CHARACTER CODE DEPENDENCY -                                         * 01350002
*    NONE                                                             * 01400002
* CHANGE-ACTIVITY -                                                   * 01410043
*    OZ31128                                                  @ZA31128* 01420043
* NOTES -                                                             * 01450002
*    NONE                                                             * 01500002
*                                                                     * 01550002
*********************************************************************** 01600002
.PFTBIT  ANOP                                                           01650002
         IEZBITS , -           DEFINE BITS                              01700002
*********************************************************************** 01750002
**                PAGE FRAME TABLE ENTRY       4/6/78                 * 01770043
**                                                                    * 01790043
**   THIS MACRO SUPPORTS: SU33                                @ZA31128* 01810043
**                                                                    * 01850002
**                                                                    * 01900002
**   ALL PFTES ARE CONTIGUOUS AND ARE LOCATED VIA DIRECT INDEX        * 01950002
**   ON THE HIGH ORDER 12 BITS OF ANY REAL ADDRESS. (THESE 12         * 02000002
**   BITS = PAGE FRAME NUMBER.) THE PAGE FRAME TABLE ENTRY            * 02050002
**   INDEX = PAGE FRAME NUMBER TIMES 16 (4 LOW ORDER BINARY ZEROS).   * 02100002
*********************************************************************** 02150002
         AIF   ('&DSECT' EQ 'YES').PFT001 IS DSECT WANTED               02200002
PFTE     DS    0F                                                       02250002
         AGO   .PFT002         BRANCH AROUND DSECT                      02300002
.PFT001  ANOP                  GEN THE DESECT                           02350002
PFTE     DSECT , PFTEPTR                                                02400002
.PFT002  ANOP                                                           02450002
PFTPGID  DS    0F              AN IDENTIFIER OF THE VIRTUAL PAGE        02500002
*                              CURRENTLY OCCUPYING THIS FRAME.          02550002
*                              IF PFTIRRG IS 0, THIS FIELD IS           02600002
*                              SUBDIVIDED INTO PFTASID AND PFTVBN.      02650002
PFTASID  DS    XL2 -           THE ASID OF THE PAGE CURRENTLY           02700002
*                              OWNING THE FRAME                         02750002
PFTVBN   DS    XL2 -           VIRTUAL BLOCK NUMBER  (HIGH              02800002
*                              ORDER 12 BITS OF 24 BIT VIRTUAL          02850002
*                              ADDRESS, LEFT ADJUSTED AND PADDED WITH   02900002
*                              4 LOW ORDER BINARY ZEROS) CURRENTLY      02950002
*                              OWNING THE REAL FRAME.                   03000002
PFTQPTRS DS    0F              WORD CONTAINING PFTFQPTR AND PFTBQPTR    03050002
PFTFQPTR DS    H -             FORWARD PAGE FRAME QUEUE POINTER         03100002
*                              - THE PFTE INDEX OF THE NEXT ENTRY       03150002
*                              ON THIS PFQ                              03200002
PFTBQPTR DS    H -             BACKWARD PAGE FRAME QUEUE POINTER        03250002
*                              - THE PFTE INDEX OF THE PREVIOUS         03300002
*                              ENTRY ON THIS PFQ                        03350002
PFTFXCT  DS    H -             FIX COUNT OF THIS FRAME                  03400002
PFTRSV1  DS    XL2 -           RESERVED                                 03450002
PFTFLAGS DS    0CL2 -          TWO PFTE FLAGS                  @G33VPOD 03460043
PFTFLAG1 DS    BL1 -           FIRST FLAG FIELD                         03500002
PFTONAVQ EQU   BIT0 -          AVAILABLE FRAME QUEUE FLAG. WHEN 1,      03550002
*                              THIS PFTE IS ON AVAILABLE PFQ            03600002
PFTVRINT EQU   BIT1 -          WHEN 1, PFTE INTERCEPTED FOR V=R         03650002
PFTLSQA  EQU   BIT2 -          SQA/LSQA FLAG, WHEN 1, PAGE FRAME        03700002
*                              CONTAINS AN LSQA OR SQA PAGE. IF         03750002
*                              PFTASID=X'FFFF' THE FRAME CONTAINS A     03800002
*                              SQA PAGE.                                03850002
PFTVRPLT EQU   BIT3 -          V=R AREA POLLUTED FLAG, WHEN 1, A        03900043
*                              REQUEST FOR A PREFERRED AREA FRAME WAS   03920043
*                              SATISFIED WITH THIS V=R FRAME.  @ZA31128 03940043
PFTPCBSI EQU   BIT4 -          PCB DEFINED FOR THIS PAGE FLAG, WHEN     04000002
*                              1, A PCB EXISTS FOR THIS PAGE.           04050002
PFTBADPG EQU   BIT5 -          BAD PAGE FRAME FLAG, WHEN 1, THIS PAGE   04100002
*                              FRAME MAY NOT BE ALLOCATED.              04150002
PFTVRALC EQU   BIT6 -          V = R ALLOCATED FLAG, WHEN 1, PFTE       04200002
*                              HAS BEEN ALLOCATED FOR A V=R REGION      04250002
PFTOFINT EQU   BIT7 -          WHEN 1, FRAME IS INTERCEPTED TO          04300002
*                              GO OFFLINE                               04350002
PFTFLAG2 DS    BL1 -           SECOND FLAG FIELD                        04400002
PFTDFRLS EQU   BIT0 -          DEFERRED RELEASE FLAG, WHEN 1, RELEASE   04450002
*                              HAS BEEN DEFERRED UNTIL THIS PAGE HAS    04500002
*                              BEEN FREED (PFTFXCT=0).                  04550002
PFTOFFLN EQU   BIT1 -          FRAME ONLINE/OFFLINE FLAG, WHEN 1,       04600002
*                              FRAME IS OFFLINE                         04650002
PFTVR    EQU   BIT2 -          V=R CANDIDATE, WHEN 1, FRAME MAY BE      04700002
*                              ALLOCATED TO A V=R REGION                04750002
PFTIRRG  EQU   BIT3 -          WHEN 1, INDICATES A VIO FRAME            04800002
PFTSTEAL EQU   BIT4 -          WHEN 1, INDICATES THIS PFTE SELECTED     04810002
*                              FOR STEALING, BUT HAS NOT BEEN STOLEN    04820002
*                              YET.                                     04830002
PFTPREF  EQU   BIT5 -          WHEN 1, INDICATES PFTE IN THE PREFERRED  04836003
*                              AREA                            @YD03005 04842003
PFTQNDX  DS    CL1 -           PFT QUEUE INDEX                          04850002
PFTAFQN  EQU   X'00' -         PFTE ON AVAILABLE QUEUE                  04900002
PFTSRQN  EQU   X'04' -         PFTE ON SQA RESERVED QUEUE               04950002
PFTCFQN  EQU   X'08' -         PFTE ON COMMON FRAME QUEUE               05000002
PFTSQAN  EQU   X'0C' -         PFTE ON SQA FRAME QUEUE                  05050002
PFTRSBQN EQU   X'10' -         PFTE ON REAL STORAGE BUFFER (RSB)        05060043
*                              FRAME QUEUE                    @G33VPOD  05070043
PFTLFQN  EQU   X'80' -         PFTE ON LOCAL FRAME QUEUE                05100002
PFTLSQAN EQU   X'84' -         PFTE ON LSQA FRAME QUEUE                 05150002
PFTNQN   EQU   X'FF' -         PFTE NOT QUEUED                          05250002
PFTUIC   DS    FL1 -           NUMBER OF STEAL INTERVALS DURING WHICH   05300002
*                              THIS FRAME WAS NOT REFERENCED            05350002
PFTEND   DS    0C -            END OF PAGE FRAME TABLE ENTRY            05400002
PFTLEN   EQU   PFTEND-PFTE -   LENGTH OF PAGE TABLE ENTRY               05450002
         MEND  , */                                                     05500002
*%PFTEPLS :  ;                                                          05550002
* /*******************************************************************/ 05600002
* /*                  PAGE FRAME TABLE ENTRY       4/6/78            */ 05620043
* /*                                                                 */ 05640043
* /* THIS MACRO SUPPORTS: SU33                               @ZA31128*/ 05660043
* /*                                                                 */ 05700002
* /*                                                                 */ 05750002
* /* ALL PFTES ARE CONTIGUOUS AND ARE LOCATED VIA DIRECT INDEX       */ 05800002
* /* ON THE HIGH ORDER 12 BITS OF ANY REAL ADDRESS. (THESE 12        */ 05850002
* /* BITS = PAGE FRAME NUMBER.) THE PAGE FRAME TABLE ENTRY           */ 05900002
* /* INDEX = PAGE FRAME NUMBER TIMES 16 (4 LOW ORDER BINARY ZEROS).  */ 05950002
* /*******************************************************************/ 06000002
*DCL                                                                    06005002
*  PFTAFQN  BIT(8) CONSTANT('00'X), /* PFTE ON AVAILABLE QUEUE       */ 06010002
*  PFTSRQN  BIT(8) CONSTANT('04'X), /* PFTE ON SQA RESERVE QUEUE     */ 06015002
*  PFTCFQN  BIT(8) CONSTANT('08'X), /* PFTE ON COMMON FRAME QUEUE    */ 06020002
*  PFTSQAN  BIT(8) CONSTANT('0C'X), /* PFTE ON SQA FRAME QUEUE       */ 06025002
*  PFTRSBQN BIT(8) CONSTANT('10'X), /* PFTE ON REAL STORAGE BUFFER      06026043
*                                      (RSB) FRAME QUEUE     @G33VPOD*/ 06027043
*  PFTLFQN  BIT(8) CONSTANT('80'X), /* PFTE ON LOCAL FRAME QUEUE     */ 06030002
*  PFTLSQAN BIT(8) CONSTANT('84'X), /* PFTE ON LSQA FRAME QUEUE      */ 06035002
*  PFTNQN   BIT(8) CONSTANT('FF'X); /* PFTE NOT QUEUED.              */ 06040002
*      %IF PFT9999¬=','             /* IS BLOCK PART OF STRUCTURE    */ 06050002
*          %THEN %PFT9999=';';      /* NO, END BLOCK NORMALLY        */ 06100002
*      %IF PFTLEVEL¬=''             /* INITIAL LEVEL NUMBER GIVEN    */ 06150002
*          %THEN %GOTO PFTPLS1;     /* YES THEN DO NOT GEN 1 LEVEL   */ 06200002
*%PFTPLS0: ;                                                            06206002
* /*******************************************************************/ 06212002
* /*                     PFTE MAPPING                                */ 06220002
* /*******************************************************************/ 06230002
*DECLARE                                                                06250002
*  1 PFTE BASED(PFTEPTR)                                                06300002
*      %GOTO PFTPLS2;               /*SKIP USER-GIVEN LEVEL          */ 06350002
*%PFTPLS1: PFTDUM=PFTLEVEL||' PFTE';                                    06400002
*  PFTDUM                                                               06450002
*%PFTPLS2:;                                                             06500002
*   BDY (WORD),                                                         06550002
*    4 PFTPGID  FIXED(32),          /* AN IDENTIFIER OF THE VIRTUAL     06600002
*                                      PAGE CURRENTLY OCCUPYING THIS    06650002
*                                      FRAME. IF PFTIRRG IS 0, THIS     06700002
*                                      FIELD IS SUBDIVIDED INTO         06750002
*                                      PFTASID AND PFTVBN.           */ 06800002
*      8 PFTASID FIXED(16),         /* THE ASID OF THE PAGE CURRENTLY   06850002
*                                      OWNING THIS FRAME             */ 06900002
*      8 PFTVBN BIT(16),            /* VIRTUAL BLOCK NUMBER (HIGH       06950002
*                                      ORDER 12 BITS OF 24 BIT VIRTUAL  07000002
*                                      ADDRESS, LEFT ADJUSTED AND       07050002
*                                      PADDED WITH 4 LOW-ORDER BINARY   07100002
*                                      ZEROES) CURRENTLY OWNING THE     07150002
*                                      FRAME.                        */ 07200002
*    4 PFTQPTRS BIT(32),            /* WORD CONTAINING PFTFQPTR AND     07250002
*                                      PFTBQPTR                      */ 07270002
*      8 PFTFQPTR BIT(16),          /* FORWARD PAGE FRAME QUEUE         07300002
*                                      POINTER  - THE PFTE INDEX OF     07350002
*                                      THE NEXT ENTRY ON THIS PFQ    */ 07400002
*      8 PFTBQPTR BIT(16),          /* BACKWARD PAGE FRAME QUEUE        07450002
*                                      POINTER  - THE PFTE INDEX OF     07500002
*                                      THE PREVIOUS FRAME            */ 07550002
*    4 PFTFXCT FIXED(15),           /* FIX COUNT OF THIS FRAME       */ 07600002
*    4 PFTRSV1 CHAR(2),             /* RESERVED                      */ 07650002
*    4 PFTFLAGS CHAR(2),            /* TWO FLAG FIELDS       @G33VPOD*/ 07655043
*    8 PFTFLAG1 BIT(8),             /* FIRST FLAG FIELD              */ 07670043
*     12 PFTONAVQ BIT(1),           /* AVAILABLE FRAME QUEUE FLAG.      07700043
*                                      WHEN 1, THIS PFTE IS ON          07800002
*                                      AVAILABLE PFQ                 */ 07850002
*     12 PFTVRINT BIT(1),           /* WHEN 1, PFTE INTERCEPTED FOR     07870043
*                                      USE IN A V=R REGION           */ 07950002
*     12 PFTLSQA BIT(1),            /* SQA/LSQA FLAG, WHEN 1, PAGE      07970043
*                                      FRAME  CONTAINS AN LSQA OR SQA   08050002
*                                      PAGE. IF PFTASID=X'FFFF' THE     08100002
*                                      FRAME CONTAINS A SQA PAGE.    */ 08150002
*     12 PFTVRPLT BIT(1),           /* V=R AREA POLLUTED FLAG, WHEN 1,  08170043
*                                      A REQUEST FOR A PREFERRED AREA   08190043
*                                      FRAME WAS SATISFIED WITH THIS    08210043
*                                      V=R FRAME.           @ZA31128*/  08230043
*     12 PFTPCBSI BIT(1),           /* PCB DEFINED FOR THIS PAGE        08270043
*                                      FLAG, WHEN  1, A PCB EXISTS      08350002
*                                      FOR THIS PAGE                 */ 08400002
*     12 PFTBADPG BIT(1),           /* BAD PAGE FRAME FLAG. WHEN 1,     08420043
*                                      THIS PAGE FRAME MAY NOT BE       08500002
*                                      ALLOCATED.                    */ 08550002
*     12 PFTVRALC BIT(1),           /* V = R ALLOCATED FLAG, WHEN 1,    08570043
*                                      FRAME IS ALLOCATED TO A          08650002
*                                      V=R REGION                    */ 08700002
*     12 PFTOFINT BIT(1),           /* OFFLINE INTERCEPT FLAG. WHEN     08720043
*                                      1, THE FRAME IS INTERCEPTED      08800002
*                                      TO GO OFFLINE                 */ 08850002
*    8 PFTFLAG2 BIT(8),             /* SECOND FLAG FIELD             */ 08870043
*     12 PFTDFRLS BIT(1),           /* DEFERRED RELEASE FLAG, WHEN 1,   08900043
*                                      RELEASE HAS BEEN DEFERRED        09000002
*                                      UNTIL THIS PAGE HAS BEEN FREED   09050002
*                                      (PFTFXCT=0).                  */ 09100002
*     12 PFTOFFLN BIT(1),           /* FRAME ONLINE/OFFLINE FLAG, WHEN  09120043
*                                      1, FRAME IS OFFLINE           */ 09200002
*     12 PFTVR BIT(1),              /* V=R CANDIDATE, WHEN 1, FRAME     09220043
*                                      MAY BE ALLOCATED TO A V=R        09300002
*                                      REGION                        */ 09350002
*     12 PFTIRRG BIT(1),            /* WHEN 1, INDICATES A VIO FRAME */ 09370043
*     12 PFTSTEAL BIT(1),           /* WHEN 1, THIS PFTE SELECTED FOR   09400043
*                                      STEALING, BUT HAS NOT BEEN       09460002
*                                      STOLEN YET.                   */ 09470002
*     12 PFTPREF BIT(1),            /* WHEN 1, PFTE IS IN THE PREFERRED 09480043
*                                      AREA                  @YD03005*/ 09520003
*     12 * BIT(1),                  /* RESERVED                      */ 09530043
*     12 * BIT(1),                  /* RESERVED                      */ 09550043
*    4 PFTQNDX CHAR(1),             /* PFT QUEUE INDEX               */ 09650002
*    4 PFTUIC FIXED(8) PFT9999      /* NUMBER OF STEAL INTERVALS        10550002
*                                      DURING WHICH THIS FRAME WAS      10600002
*                                      NOT REFERENCED                */ 10650002
*      %PFTLEN='LENGTH(PFTE)';      /* LENGTH OF PFTE                */ 10700002
./  ADD  SSI=20830511,NAME=IHAPICA
*        %GOTO PICABSL;                                              /* 00900001
         MACRO                                                          01800001
         IHAPICA                                                        02700001
PICA     DSECT                                                          03600001
         SPACE                                                          04500001
**********************************************************************  05400001
*                                                                       05450001
*        LEVEL=1                                                        05500001
*                                                                       06300001
*              PROGRAM INTERRUPTION CONTROL AREA (PICA)                 07200001
*                                                                       08100001
*        A PICA IS CREATED AND INITIALIZED BY THE EXECUTABLE CODE       09000001
*        PRODUCED BY THE EXPANSION OF THE SPIE MACRO DURING AN          09900001
*        ASSEMBLY OF THE SOURCE PROGRAM.  AT THIS TIME, THE PICA IS     10800001
*        INITIALIZED WITH THE PROGRAM MASK, THE ADDRESS OF THE USER     11700001
*        PROGRAM-INTERRUPTION EXIT ROUTINE, AND AN INTERRUPTION MASK.   12600001
*                                                                       13500001
**********************************************************************  14400001
         SPACE                                                          15300001
PICAEXIT DS    0F -                                                     16200001
PICAPRMK DS    B -            PROGRAM MASK TO BE USED IN THE PSW -      17100001
*                             BITS 0-3 ARE ZERO; BITS 4-7 CONTAIN MASK  18000001
PICEXITA DS    AL3 -          ADDRESS OF THE USER'S PROGRAM INTER-      18900001
*                             RUPTION EXIT RTN                          19800001
PICAITMK DS    0F -           MASK WHICH INDICATES ON WHICH PROGRAM     20700001
*                             INTERRUPTION TYPES THE EXIT RTN IS TO     21600001
*                             BE USED - LENGTH IS 4 BYTES.              22500001
PICITMK1 DS    BL1 -                                                    23400001
PICAEXT  EQU   X'80' -        AN EXTENDED PICA IS IN EFFECT             24300001
PICACD1  EQU   X'40' -        OPERATION                                 25200001
PICACD2  EQU   X'20' -        PRIVILEGED OPERATION                      26100001
PICACD3  EQU   X'10' -        EXECUTE                                   27000001
PICACD4  EQU   X'08' -        PROTECTION                                27900001
PICACD5  EQU   X'04' -        ADDRESSING                                28800001
PICACD6  EQU   X'02' -        SPECIFICATION                             29700001
PICACD7  EQU   X'01' -        DATA INTRPT HANDLED                       30600001
PICITMK2 DS    BL1 -                                                    31500001
PICACD8  EQU   X'80' -        FIXED-POINT OVERFLOW                      32400001
PICACD9  EQU   X'40' -        FIXED-POINT DIVIDE                        33300001
PICACD10 EQU   X'20' -        DECIMAL OVERFLOW                          34200001
PICACD11 EQU   X'10' -        DECIMAL DIVIDE                            35100001
PICACD12 EQU   X'08' -        EXPONENT OVERFLOW                         36000001
PICACD13 EQU   X'04' -        EXPONENT UNDERFLOW                        36900001
PICACD14 EQU   X'02' -        SIGNIFICANCE                              37800001
PICACD15 EQU   X'01' -        FLOATING-POINT DIVIDE                     38700001
PICITMK3 DS    BL1 -                                                    39600001
PICACD17 EQU   X'40' -        PAGE TRANSLATION                          40500001
PICITMK4 DS    BL1 -                                                    41400001
         MEND  , */                                                     42300001
*%PICABSL :  ;                                                          43200001
*DECLARE                                                                44100001
*  1 PICA     BASED(PICAPTR),                                           45000001
*                                                                       45900001
*/* **************************************************************** */ 46800001
*/*                                                                  */ 46850001
*/*      LEVEL=1                                                     */ 46900001
*/*                                                                  */ 47700001
*/*            PROGRAM INTERRUPTION CONTROL AREA (PICA)              */ 48600001
*/*                                                                  */ 49500001
*/*      A PICA IS CREATED AND INITIALIZED BY THE EXECUTABLE CODE    */ 50400001
*/*      PRODUCED BY THE EXPANSION OF THE SPIE MACRO DURING AN       */ 51300001
*/*      ASSEMBLY OF THE SOURCE PROGRAM.  AT THIS TIME, THE PICA IS  */ 52200001
*/*      INITIALIZED WITH THE PROGRAM MASK, THE ADDRESS OF THE USER  */ 53100001
*/*      PROGRAM-INTERRUPTION EXIT ROUTINE, AND AN INTERRUPTION MASK */ 54000001
*/*                                                                  */ 54900001
*/* **************************************************************** */ 55800001
*                                                                       56700001
*   2 PICAEXIT    FIXED(31),                                            57600001
*    3 PICAPRMK    CHAR(1),              /* PROGRAM MASK TO BE USED     58500001
*                                           IN THE PSW -  BITS 0-3      59400001
*                                           ARE ZERO; BITS 4-7          60300001
*                                           CONTAIN MASK             */ 61200001
*    3 PICEXITA    PTR(24)  BDY(BYTE),   /* ADDRESS OF THE USER'S       62100001
*                                           PROGRAM INTER-  RUPTION     63000001
*                                           EXIT RTN                 */ 63900001
*   2 PICAITMK    FIXED(31),             /* MASK WHICH INDICATES ON     64800001
*                                           WHICH PROGRAM               65700001
*                                           INTERRUPTION TYPES THE      66600001
*                                           EXIT RTN IS TO  BE USED     67500001
*                                           - LENGTH IS 4 BYTES.     */ 68400001
*    3 PICITMK1    CHAR(1),                                             69300001
*     4 PICAEXT  BIT(1),                 /* AN EXTENDED PICA IS IN      70200001
*                                           EFFECT                   */ 71100001
*     4 PICACD1  BIT(1),                 /* OPERATION                */ 72000001
*     4 PICACD2  BIT(1),                 /* PRIVILEGED OPERATION     */ 72900001
*     4 PICACD3  BIT(1),                 /* EXECUTE                  */ 73800001
*     4 PICACD4  BIT(1),                 /* PROTECTION               */ 74700001
*     4 PICACD5  BIT(1),                 /* ADDRESSING               */ 75600001
*     4 PICACD6  BIT(1),                 /* SPECIFICATION            */ 76500001
*     4 PICACD7  BIT(1),                 /* DATA INTRPT HANDLED      */ 77400001
*    3 PICITMK2    CHAR(1),                                             78300001
*     4 PICACD8  BIT(1),                 /* FIXED-POINT OVERFLOW     */ 79200001
*     4 PICACD9  BIT(1),                 /* FIXED-POINT DIVIDE       */ 80100001
*     4 PICACD10 BIT(1),                 /* DECIMAL OVERFLOW         */ 81000001
*     4 PICACD11 BIT(1),                 /* DECIMAL DIVIDE           */ 81900001
*     4 PICACD12 BIT(1),                 /* EXPONENT OVERFLOW        */ 82800001
*     4 PICACD13 BIT(1),                 /* EXPONENT UNDERFLOW       */ 83700001
*     4 PICACD14 BIT(1),                 /* SIGNIFICANCE             */ 84600001
*     4 PICACD15 BIT(1),                 /* FLOATING-POINT DIVIDE    */ 85500001
*    3 PICITMK3    CHAR(1),                                             86400001
*     4 *        BIT(1),                 /* RESERVED                 */ 87300001
*     4 PICACD17 BIT(1),                 /* PAGE TRANSLATION         */ 88200001
*     4 *        BIT(1),                 /* RESERVED                 */ 89100001
*     4 *        BIT(1),                 /* RESERVED                 */ 90000001
*     4 *        BIT(1),                 /* RESERVED                 */ 90900001
*     4 *        BIT(1),                 /* RESERVED                 */ 91800001
*     4 *        BIT(1),                 /* RESERVED                 */ 92700001
*     4 *        BIT(1),                 /* RESERVED                 */ 93600001
*    3 PICITMK4    CHAR(1);                                             94500001
./  ADD  SSI=42810007,NAME=IHAPIE
*                                                                       01000003
*        %GOTO PIEL1;       /*                                          01500003
         MACRO                                                          02000001
         IHAPIE &DSECT=YES       */                                     03000003
*%PIEL1: ;                                                              03060003
*                                                                       03120003
*/* **************************************************************** */ 03180003
*/*                                                                  */ 03240003
*/*            PROGRAM INTERRUPT ELEMENT (PIE)                       */ 03300003
*/*                                                                  */ 03360003
*/*      A PIE IS CREATED AFTER A PROGRAM CHECK HAS OCCURRED IF      */ 03420003
*/*      THERE IS A USER-SPECIFIED EXIT ROUTINE TO HANDLE PROGRAM    */ 03480003
*/*      CHECK INTERRUPTIONS.  A PIE IS USED TO PASS THE NECESSARY   */ 03540003
*/*      DATA TO THE USER-SPECIFIED EXIT ROUTINE.                    */ 03600003
*/*                                                                  */ 03660003
*/*  OS/VS2 RELEASE 3, OS/VS1 RELEASE 4, 09/30/74, LEVEL=1           */ 03720003
*/* **************************************************************** */ 03780003
*%GOTO PIEL2;    /*                                                     03840003
         SPACE 1                                                        03870003
         AIF   ('&DSECT' EQ 'NO').NODSCT                                04000001
PIE      DSECT                                                          05000001
         AGO   .CONT                                                    06000001
.NODSCT  ANOP                                                           07000001
         DS    0D -                                                     08000001
PIE      EQU   * -            PIEPTR                                    09000001
.CONT    ANOP                                                           10000001
         IEZBITS , -          SYMBOLIC BIT DEFINITIONS                  11000003
PIEPICA  DS    0F -           ADDRESS OF THE CURRENT PICA               24000001
PIEFLGS  DS    B -            FLAG BYTE                                 25000001
PIENOPI  EQU   BIT0 -         IF ONE, INDICATES THAT THE TASK CANNOT    26000001
*                             ACCEPT FURTHER PI'S                       27000001
PIEPICAA DS    AL3 -          ADDRESS OF THE CURRENT PICA               28000001
PIEPSW   DS    CL8 -          PI OLD PSW STORED AT PROGRAM INTERRUPT    29000001
*                             TIME                                      30000001
PIEGR14  DS    F -            SAVE AREA FOR REGISTER 14                 31000001
PIEGR15  DS    F -            SAVE AREA FOR REGISTER 15                 32000001
PIEGR0   DS    F -            SAVE AREA FOR REGISTER 0                  33000001
PIEGR1   DS    F -            SAVE AREA FOR REGISTER 1                  34000001
PIEGR2   DS    F -            SAVE AREA FOR REGISTER 2                  35000001
         MEND  , */                                                     36000001
*%PIEL2  :  ;                                                           37000003
*                                                                       38000001
*DECLARE                                                                50000001
*  1 PIE      BASED(PIEPTR) BDY(WORD),                                  51000003
*   2 PIEPICA     FIXED(31),             /* ADDRESS OF THE CURRENT      52000001
*                                           PICA                     */ 53000001
*    3 PIEFLGS     CHAR(1),              /* FLAG BYTE                */ 54000001
*     4 PIENOPI  BIT(1),                 /* IF ONE, INDICATES THAT      55000001
*                                           THE TASK CANNOT ACCEPT      56000003
*                                           FURTHER PI'S             */ 57000001
*     4 *        BIT(7),                 /* RESERVED                 */ 58000001
*    3 PIEPICAA    PTR(24),              /* ADDRESS OF THE CURRENT      59000003
*                                           PICA                     */ 60000001
*   2 PIEPSW      CHAR(8) BDY(WORD),     /* PI OLD PSW STORED AT        61000003
*                                           PROGRAM INTERRUPT TIME   */ 62000003
*   2 PIEGR14     FIXED(31),             /* SAVE AREA FOR REGISTER      63000001
*                                           14                       */ 64000001
*   2 PIEGR15     FIXED(31),             /* SAVE AREA FOR REGISTER      65000001
*                                           15                       */ 66000001
*   2 PIEGR0      FIXED(31),             /* SAVE AREA FOR REGISTER 0 */ 67000001
*   2 PIEGR1      FIXED(31),             /* SAVE AREA FOR REGISTER 1 */ 68000001
*   2 PIEGR2      FIXED(31);             /* SAVE AREA FOR REGISTER 2 */ 69000001
./  ADD  SSI=13140103,NAME=IHAPQE
*        %GOTO PQEBSL;      /* BILINGUAL MAPPING        /*   /*         04002021
         MACRO                                                          04010021
         IHAPQE   &TYPE                                                 06000021
*                                                                       06010021
*        RELEASE 1 AOS, 11/3/71, LEVEL=1                                06020021
*                                                                       06030021
         AIF   ('&TYPE' EQ 'INTERNAL').EQU                              06050021
PQESECT  DSECT      PARTITION QUEUE ELEMENT                             08000021
PQEFFBQE DS    A    PTR TO FIRST FBQE OR IF NONE TO PQE                 10000021
PQEBFBQE DS    A    PTR TO LAST FBQE OR IF NONE, TO PQE                 12000021
PQEFPQE  DS    A    ADDR NEXT PQE OR ZERO                               14000021
PQEBPQE  DS    A    ADDR PREVIOUS PQE OR ZERO                           16000021
PQETCB   DS    A    ADDR TCB FOR JOB STEP TO WHICH SPACE BELONGS        18000021
PQESIZE  DS    F    SIZE OF REGION DESCRIBED BY THIS PQE                20000021
PQEREGN  DS    A    ADDR FIRST BYTE OF REGION DESCRIBED BY THIS PQE     22000021
PQERFLGS DS    CL1  FLAG BYTE                                           24000021
PQEHRID  DS    CL1  HIERARCHY IDENTIFIER                                26000021
VMMFLGS  DS    BL1  SEVEN HIGH ORDER BITS ZERO                          26050021
VVVRFLG  EQU   X'01' REAL OR VIRTUAL REGION FLAG                        26100021
PQERSVD  DS    CL1  RESERVED                                            26150021
         MEXIT                                                          26200021
.EQU     ANOP                                                           26250021
PQEFFBQE EQU      0    PTR TO FIRST FBQE OR IF NONE TO PQE              26300021
PQEBFBQE EQU      4    PTR TO LAST FBQE OR IF NONE, TO PQE              26350021
PQEFPQE  EQU      8    ADDR NEXT PQE OR ZERO                            26400021
PQEBPQE  EQU      12    ADDR PREVIOUS PQE OR ZERO                       26450021
PQETCB   EQU      16    ADDR TCB FOR JOB STEP TO WHICH SPACE BELONGS    26500021
PQESIZE  EQU      20    SIZE OF REGION DESCRIBED BY THIS PQE            26550021
PQEREGN  EQU      24    ADDR FIRST BYTE OF REGION DESCRIBED BY THIS PQE 26600021
PQERFLGS EQU      28  FLAG BYTE                                         26650021
PQEHRID  EQU      29  HIERARCHY IDENTIFIER                              26700021
VMMFLGS  EQU      30  SEVEN HIGH ORDER BITS ZERO                        26750021
VVVRFLG  EQU   X'01' REAL OR VIRTUAL REGION FLAG                        26800021
PQERSVD  EQU      31  RESERVED                                          26850021
         MEND  , */                                                     30000021
*%PQEBSL:   ;                                                           32000021
*                                                                       32050021
*/*      RELEASE 1 AOS, 11/3/71, LEVEL=1                             */ 32100021
*                                                                       32150021
* DECLARE                                                               34000021
*   1 PQESECT   BASED(PQESEPTR),     /* PARTITION QUEUE ELEMENT      */ 36000021
*    2 PQEFFBQE    PTR(31),          /* PTR TO FIRST FBQE OR IF NONE    38000021
*                                       TO PQE                       */ 40000021
*    2 PQEBFBQE    PTR(31),          /* PTR TO LAST FBQE OR IF NONE,    42000021
*                                       TO PQE                       */ 44000021
*    2 PQEFPQE     PTR(31),          /* ADDR NEXT PQE OR ZERO        */ 46000021
*    2 PQEBPQE     PTR(31),          /* ADDR PREVIOUS PQE OR ZERO    */ 48000021
*    2 PQETCB      PTR(31),          /* ADDR TCB FOR JOB STEP TO        50000021
*                                       WHICH SPACE BELONGS          */ 52000021
*    2 PQESIZE     FIXED(31),        /* SIZE OF REGION DESCRIBED BY     54000021
*                                       THIS PQE                     */ 56000021
*    2 PQEREGN     PTR(31),          /* ADDR FIRST BYTE OF REGION       58000021
*                                       DESCRIBED BY THIS PQE        */ 60000021
*    2 PQERFLGS    CHAR(1),          /* FLAG BYTE                    */ 62000021
*    2 PQEHRID     CHAR(1),          /* HIERARCHY IDENTIFIER         */ 64000021
*    2 VMMFLGS     CHAR(1),          /* SEVEN HIGH ORDER BITS ZERO   */ 64050021
*    3 *           BIT(7),           /* ZERO BITS                    */ 64100021
*    3 VVVRFLG     BIT(1),           /* REAL OR VIRTUAL FLAG         */ 64150021
*    2 PQERSVD     CHAR(1);          /* RESERVED                     */ 64200021
./  ADD  SSI=22702193,NAME=IHAQDB
*                                                                       00100002
*        %GOTO QDBL1;  /*                                               00150002
         MACRO                                                          00200002
         IHAQDB &DSECT=YES    */                                        00250002
*%QDBL1 : ;                                                             00300002
*                                                                       00350002
*/* **************************************************************** */ 00400002
*/*                                                                  */ 00450002
*/*                         QUEUE DESCRIPTOR BLOCK                   */ 00500002
*/*                                                                  */ 00600002
*/*  OS/VS2 RELEASE 2, 08/02/72, LEVEL=1                             */ 00650002
*/*                                                                  */ 00700002
*/*  METHOD OF ACCESS                                                */ 00750002
*/*      BAL   - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.     */ 00800002
*/*              USING ON QDB GIVES ADDRESSABILITY FOR ALL SYMBOLS.  */ 00850002
*/*      PL/S  - DCL QDBPTR PTR                                      */ 00900002
*/*                                                                  */ 00950002
*/* **************************************************************** */ 01000002
*%GOTO QDBL2;  /*                                                       01050002
         SPACE 1                                                        01100002
         AIF ('DSECT' EQ 'NO').QDB10                                    01150002
QDB      DSECT                                                          01200002
         AGO   .QDB20                                                   01250002
.QDB10    ANOP                                                          01300002
         DS    0D                                                       01350002
QDB      EQU   *                                                        01400002
.QDB20   ANOP                                                           01450002
QDBQDB   DS    CL4 -          ACRONYM IN EBCDIC -QDB-                   01550002
QDBATTR  DS    BL2 -          QUEUE ATTRIBUTES                          01600002
QDBRV001 DS    H -            RESERVED                                  01650002
QDBNELMS DS    F -            NUMBER OF ELEMENTS ON QUEUE               01700002
QDBFELMP DS    A -            POINTER TO FIRST ELEMENT                  01750002
QDBLELMP DS    A -            POINTER TO LAST ELEMENT                   01800002
QDBFPTDS DS    H -            FORWARD POINTER DISPLACEMENT              01850002
QDBBPTDS DS    H -            BACKWARD POINTER DISPLACEMENT             01900002
QDBPRSZ  DS    H -            PRIORITY FIELD SIZE                       01950002
QDBPRDS  DS    H -            PRIORITY FIELD DISPLACEMENT               02000002
QDBRV002 DS    A -            RESERVED                                  02050002
         MEND  , -  */                                                  02100002
*%QDBL2 : ;                                                             02150002
*                                                                       02200002
*DECLARE                                                                02250002
*  1 QDB     BASED(QDBPTR)  BDY(WORD),                                  02300002
*   2 QDBQDB      CHAR(4) BDY(WORD),     /* ACRONYM IN EBCIDIC -QDB- */ 02350002
*   2 QDBATTR     CHAR(2),               /* QUEUE ATTRIBUTES         */ 02400002
*   2 QDBRV001    FIXED(15),             /* RESERVED                 */ 02450002
*   2 QDBNELMS    FIXED(31),             /* NUMBER OF ELEMENTS ON       02500002
*                                           QUEUE                    */ 02550002
*   2 QDBFELMP    PTR(31),               /* POINTER TO FIRST ELEMENT */ 02600002
*   2 QDBLELMP    PTR(31),               /* POINTER TO LAST ELEMENT  */ 02650002
*   2 QDBFPTDS    FIXED(15),             /* FORWARD POINTER             02700002
*                                           DISPLACEMENT             */ 02750002
*   2 QDBBPTDS    FIXED(15),             /* BACKWARD POINTER            02800002
*                                           DISPLACEMENT             */ 02850002
*   2 QDBPRSZ     FIXED(15),             /* PRIORITY FIELD SIZE      */ 02900002
*   2 QDBPRDS     FIXED(15),             /* PRIORITY FIELD              02950002
*                                           DISPLACEMENT             */ 03000002
*   2 QDBRV002    PTR(31);               /* RESERVED                 */ 03050002
./  ADD  SSI=20830055,NAME=IHAQIO
*        %GOTO  QIOPLS; /*                                              00700000
         MACRO                                                          01400000
         IHAQIO  &DSECT=YES                                             02100000
         AIF   ('&DSECT' EQ 'NO').DS0D                                  02800000
IHAQIO   DSECT                                                          03500000
         AGO   .BODY                                                    04200000
.DS0D    ANOP                                                           04900000
IHAQIO   DS    0D                                                       05600000
.BODY    ANOP                                                           06300000
*********************************************************************** 07000000
*                                                                     * 07700000
*   MAPPING OF WORKAREA SET UP BY QMNGRIO MACRO REQUEST               * 08400000
*                                                                     * 09100000
*        RELEASE 1 AOS/1       LAST UPDATE  06/04/71                  * 09800000
*                                                                     * 10500000
*        SPACE IS PASSED TO THE QMNGRIO MACRO HANDLER TO BE USED      * 11200000
*        TO SET UP ALL NECESSARY TABLES AND WORK AREAS FOR AN I/O     * 11900000
*        REQUEST TO THE QUEUE MANAGER. THIS MAPPING GIVES THE WAY     * 12600000
*        THAT SPACE IS BROKEN DOWN BY THE MODULE IEFQMMAC.            * 13300000
*                                                                     * 14000000
*********************************************************************** 14700000
QIOQMPA  DS    CL36 -              Q MGR PARAMETER AREA                 15400000
QIOECIOB DS    0CL76                    ECB/IOB SPACE                   16100000
QIOECB   DS    F -                 EVENT CONTROL BLOCK                  16800000
QIOIOB   DS    0D -                INPUT/OUTPUT BLOCK                   17500000
QIOIFLGS DS    CL2 -               IOB FLAG BYTES                       18200000
QIOISNS  DS    CL2 -               IOB SENSE BYTES                      18900000
QIOIECB  DS    0F -                                                     19600000
QIOICC   DS    CL1 -               IOB ECB COMPLETION CODE              20300000
QIOIECBA DS    AL3 -               IOB ECB ADDRESS                      21000000
QIOIFLG3 DS    CL1 -               IOB FLAG BYTE 3                      21700000
QIOICSW  DS    CL7 -               SEVEN LOW ORDER BYTES OF LAST CSW    22400000
QIOIST   DS    0F -                                                     23100000
QIOISIO  DS    CL1 -               SIO CONDITION CODE                   23800000
QIOISTRT DS    AL3 -               CCW CHAIN POINTER                    24500000
QIOIDCB  DS    0F -                                                     25200000
QIOIRSVD DS    CL1 -                                                    25900000
QIOIDCBA DS    AL3 -               IOB DCB ADDRESS                      26600000
QIOIREST DS    CL8 -               SPACE TO IOB END                     27300000
QIOISEEK DS    CL8 -               SEEK/SEARCH MBBCCHHR                 28000000
QIOISET  DS    0D -                SET SECTOR CCW                       28700000
QIOISETO DS    CL1 -               SET SECTOR OP CODE                   29400000
QIOISETA DS    AL3 -               SET SECTOR DATA ADDRESS              30100000
QIOISETF DS    CL1 -               SET SECTOR FLAGS                     30800000
QIOISETR DS    CL1 -               SET SECTOR RESERVED                  31500000
QIOISETL DS    H -                 SET SECTOR LENGTH                    32200000
QIOISCH  DS    0D -                SEARCH CCW                           32900000
QIOISCHO DS    CL1 -               SEARCH OP CODE                       33600000
QIOISCHA DS    AL3 -               SEARCH DATA ADDRESS                  34300000
QIOISCHF DS    CL1 -               SEARCH FLAGS                         35000000
QIOISCHR DS    CL1 -               SEARCH RESERVED                      35700000
QIOISCHL DS    H -                 SEARCH LENGTH                        36400000
QIOITIC  DS    0D -                TIC CCW                              37100000
QIOITICO DS    CL1 -               TIC OP CODE                          37800000
QIOITICA DS    AL3 -               TIC DATA ADDRESS                     38500000
QIOITICF DS    CL1 -               TIC FLAGS                            39200000
QIOITICR DS    CL1 -               TIC RESERVED                         39900000
QIOITICL DS    H -                 TIC LENGTH                           40600000
QIOIO    DS    0D -                I/O CCW                              41300000
QIOIOO   DS    CL1 -               I/O OP CODE                          42000000
QIOIOA   DS    AL3 -               I/O DATA ADDRESS                     42700000
QIOIOF   DS    CL1 -               I/O FLAGS                            43400000
QIOIOR   DS    CL1 -               I/O RESERVED                         44100000
QIOIOL   DS    H -                 I/O LENGTH                           44800000
QIOJOB   DS    0F -                QMPA JOB INFO LIST                   45500000
QIOFILL1 DS    F -                 FULL WORK OF ZEROS                   46200000
QIONAMEA DS    A -                 POINTER TO JOB NAME                  46900000
QIOSWADS DS    A -                 POINTER TO SWADS DCB                 47600000
QIOPREXP DS    0F -                QMPA EXTERNAL PARM AREA PREFIX       48300000
QIOFILL2 DS    H -                                                      49000000
QIORECL  DS    H -                 RECORD LENGTH                        49700000
QIOXPA   DS    0F -                QMPA EXTERNAL PARM AREA              50400000
QIOCOREA DS    A -                 IN-CORE ADDRESS OF RECORD            51100000
QIOTTR0  DS    CL4 -               RELATIVE DISK ADDRESS OF RECORD      51800000
QIOQMWRK DS    CL120               WORK SPACE FOR QUEUE MANAGER         52500000
         MEND    , */                                                   53200000
*%QIOPLS: ;                                                             53900000
*  DECLARE                                                              54600000
*    1 IHAQIO  BASED (QIOPTR) BDY (DWORD),   /* QMNGRIO WORK AREA    */ 55300000
*      4 QIOQMPA  CHAR (36) BDY (DWORD),     /* Q MGR PARAMETER AREA */ 56000000
*      4 QIOECIOB  CHAR (76) BDY (DWORD,5),  /* ECB/IOB/CCW CHAIN    */ 56700000
*        6 QIOECB  FIXED (31),               /* EVENT CONTROL BLOCK  */ 57400000
*        6 QIOIOB  BDY (DWORD),              /* INPUT/OUTPUT BLOCK   */ 58100000
*          8 QIOIFLGS  CHAR (2),             /* IOB FLAG BYTES       */ 58800000
*          8 QIOISNS  CHAR (2),              /* IOB SENSE BYTES      */ 59500000
*          8 QIOIECB  PTR (31),              /*                      */ 60200000
*            10 QIOICC  CHAR (1),            /* ECB COMPLETION CODE  */ 60900000
*            10 QIOIECBA  PTR (24),          /* ECB ADDRESS          */ 61600000
*          8 QIOIFLG3  CHAR (1),             /* IOB FLAG BYTE 3      */ 62300000
*          8 QIOICSW  CHAR (7),              /* CSW LOW ORDER 7 BYTES*/ 63000000
*          8 QIOIST  PTR (31),               /*                      */ 63700000
*            10 QIOISIO  CHAR (1),           /* SIO CONDITION CODE   */ 64400000
*            10 QIOSTRT  PTR (24),           /* CCW CHAIN POINTER    */ 65100000
*          8 QIOIDCB  PTR (31),              /*                      */ 65800000
*            10 *  CHAR (1),                 /*                      */ 66500000
*            10 QIOIDCBA  PTR (24),          /* DCB ADDRESS          */ 67200000
*          8 * CHAR (8),                     /*                      */ 67900000
*          8 QIOISEEK  CHAR (8),             /* SEEK/SEARCH MBBCCHHR */ 68600000
*          8 QIOISET,                        /* SET SECTOR CCW       */ 69300000
*            10 QIOISETO  CHAR (1),          /* SET SECTOR OP CODE   */ 70000000
*            10 QIOISETA  PTR (24),          /* SET SECTOR DATA ADDR */ 70700000
*            10 QIOISETF  CHAR (1),          /* SET SECTOR FLAGS     */ 71400000
*            10 QIOISETR  CHAR (1),          /* SET SECTOR RESERVED  */ 72100000
*            10 QIOISETL  FIXED (15),        /* STE SECTOR LENGTH    */ 72800000
*          8 QIOISCH,                        /* SERACH CCW           */ 73500000
*            10 QIOISCHO  CHAR (1),          /* SEARCH OP CODE       */ 74200000
*            10 QIOISCHA  PTR (24),          /* SEARCH DATA ADDRESS  */ 74900000
*            10 QIOISCHF  CHAR (1),          /* SEARCH FLAGS         */ 75600000
*            10 QIOISCHR  CHAR (1),          /* SEARCH RESERVED      */ 76300000
*            10 QIOISCHL  FIXED (15),        /* SEARCH LENGTH        */ 77000000
*          8 QIOITIC,                        /* TIC CCW              */ 77700000
*            10 QIOITICO  CHAR (1),          /* TIC OP CODE          */ 78400000
*            10 QIOITICA  PTR (24),          /* TIC DATA ADDRESS     */ 79100000
*            10 QIOITICF  CHAR (1),          /* TIC FLAGS            */ 79800000
*            10 QIOITICR  CHAR (1),          /* TIC RESERVED         */ 80500000
*            10 QIOITICL  FIXED (15),        /* TIC LENGTH           */ 81200000
*          8 QIOIO,                          /* I/O CCW              */ 81900000
*            10 QIOIOO  CHAR (1),            /* I/O OP CODE          */ 82600000
*            10 QIOIOA  PTR (24),            /* I/O DATA ADDRESS     */ 83300000
*            10 QIOIOF  CHAR (1),            /* I/O FLAGS            */ 84000000
*            10 QIOIOR CHAR  (1),            /* I/O RESERVED         */ 84700000
*            10 QIOIOL  FIXED (15),          /* I/O LENGTH           */ 85400000
*      4 QIOJOB  CHAR (12) BDY (WORD),       /* JOB INFORMATION LIST */ 86100000
*        6 *  FIXED (31),                    /*                      */ 86800000
*        6 QIONAMEA  PTR (31),               /* POINTER TO JOB NAME  */ 87500000
*        6 QIOSWADS  PTR (31),               /* SWADS DCB PTR OR ZERO*/ 88200000
*      4 QIOPREXP  CHAR (4) BDY (WORD),      /* EXT PARM AREA PREFIX */ 88900000
*        6 *  CHAR (2),                      /*                      */ 89600000
*        6 QIORECL  FIXED (15),              /* REC LENGTH FOR I/O   */ 90300000
*      4 QIOXPA  CHAR (8) BDY (WORD),        /* EXTERNAL PARM AREA   */ 91000000
*        6 QIOCOREA  PTR (31),               /* IN-CORE RECORD ADDR  */ 91700000
*        6 QIOTTR0  CHAR (4),                /* REL DISK ADDR OF REC */ 92400000
*      4 QIOQMWRK  CHAR (120);               /* WORK SPACE FOR Q MGR */ 93100000
./  ADD  SSI=81640003,NAME=IHARCA
*        %GOTO RCAPLS;                                               /* 00050002
         MACRO                                                          00100002
         IHARCA &DSECT=YES                                              00150002
         IEZBITS                                                        00200002
         AGO   .RCAARND                                                 00250002
*********************************************************************** 00300002
*                                                                     * 00350002
* STATUS -                                                            * 00400002
*    CHANGE LEVEL 0                                                   * 00450002
*    OZ28519                                                          * 00470043
* FUNCTION -                                                          * 00500002
*    MAPPING MACRO FOR RECOVERY COMMUNICATIONS AREA                   * 00550002
* ENTRY POINTS -                                                      * 00600002
*     IHARCA MACRO CALL                                               * 00650002
* INPUT -                                                             * 00700002
*    SEE IHARCA MACRO DEFINITION                                      * 00750002
* OUTPUT -                                                            * 00800002
*    RCA MAPPING MACRO                                                * 00850002
* EXTERNAL REFERENCES -                                               * 00900002
*    N/A                                                              * 00950002
* EXITS, NORMAL -                                                     * 01000002
*    N/A                                                              * 01050002
* EXITS, ERROR -                                                      * 01100002
*    N/A                                                              * 01150002
* TABLES/WORK AREAS -                                                 * 01200002
*    N/A                                                              * 01250002
* ATTRIBUTES -                                                        * 01300002
*    BILINGUAL MACRO                                                  * 01350002
* CHARACTER CODE DEPENDENCY -                                         * 01400002
*    NONE                                                             * 01450002
* NOTES -                                                             * 01500002
*    NONE                                                             * 01550002
*                                                                     * 01600002
*********************************************************************** 01650002
.RCAARND ANOP                                                           01700002
*********************************************************************** 01750002
**                   RECOVERY COMMUNICATIONS AREA    2/21/78         *  01770043
**                                                                    * 01780043
**  THIS MACRO SUPPORTS: SU33                                         * 01790043
**                                                                    * 01850002
**  THE RSM RCA CONTAINS INFORMATION REQUIRED BY THE RSM FUNCTIONAL   * 01900002
**  RECOVERY ROUTINE. THE RSM RCA IS MAPPED TO THE WORK AREA RETURNED * 01950002
**  BY SETFRR WHEN AN FRR IS ESTABLISHED.  EACH RSM ROUTINE           * 02000002
**  COMMUNICATES TO THE FRR VIA THIS AREA.                            * 02010002
**                                                                    * 02020002
*********************************************************************** 02050002
         AIF   ('&DSECT' EQ 'NO').RCA001                                02100002
RCA      DSECT , RCAPTR                                                 02150002
         AGO   .RCA002                                                  02200002
.RCA001  ANOP                                                           02250002
RCA      DS    0F                                                       02300002
.RCA002  ANOP                                                           02350002
*********************************************************************** 02374802
RCAPARM0 DS    F -           VALUE TO BE PLACED IN REGISTER 0 WHEN      02377402
*                            ROUTINE RETRY IS INVOKED.                  02378002
RCAPARM1 DS    F -           VALUE TO BE PLACED IN REGISTER 1 WHEN      02378602
*                            ROUTINE RETRY IS INVOKED.                  02379202
RCANAME7 DS    BL1           BIT MAP REPRESENTING RSM ENTRY POINTS      02381243
*                            SET TO 1 ON ENTRY. ZERO ON EXIT.  @Z40WPYD 02383243
RCAPIOI  EQU   BIT0 -        IEAVPIOI FLAG                     @Z40WPYD 02385243
RCAPSIY  EQU   BIT1 -                                          @G33VPOD 02386243
RCAPRSB  EQU   BIT2 -        IEAVPRSB FLAG                     @G33VPOD 02388243
RCAPRSR  EQU   BIT3 -        IEAVPRSR FLAG                     @G33VPOD 02389243
RCAPRSS  EQU   BIT4 -        IEAVPRSS FLAG                     @G33VPOD 02390243
RCACSECT DS    XL1 -         ID OF THE MODULE IN CONTROL                02394002
RCAC001  EQU   X'01'         RESERVED MODULE ID                         02394402
RCACRSB  EQU   X'02'         IEAVPRSB MODULE ID                @G33VPOD 02394643
RCACINIO EQU   X'03'         IEAVPIOI MODULE ID                @Z40WPYD 02395240
RCACSQA  EQU   X'04'         IEAVSQA  MODULE ID                         02395602
RCACVR   EQU   X'05'         IEAVEQR  MODULE ID                         02395702
RCACPS   EQU   X'06'         IEAVPSI  MODULE ID                         02395802
RCACPGRL EQU   X'07'         IEAVRELS MODULE ID                         02395902
RCACINIT EQU   X'08'         IEAVITAS MODULE ID                         02398002
RCACDELE EQU   X'09'         IEAVDLAS MODULE ID                         02400002
RCACREAT EQU   X'0A'         IEAVCSEG MODULE ID                         02400402
RCACDEST EQU   X'0B'         IEAVDSEG MODULE ID                         02400802
RCACREP  EQU   X'0C'         IEAVPCB  MODULE ID                @Z30GNYD 02400903
RCACPIX  EQU   X'0D'         IEAVPIX  MODULE ID                         02401402
RCACGFA  EQU   X'0E'         IEAVGFA  MODULE ID                         02401802
RCACREPL EQU   X'0F'         IEAVRFR  MODULE ID                         02403802
RCACRECF EQU   X'10'         IEAVRCF  MODULE ID                         02404102
RCACPTRM EQU   X'11'         IEAVTERM MODULE ID                         02404502
RCACSWPC EQU   X'12'         IEAVSWPC MODULE ID                @Z40WPYD 02404640
RCACPOST EQU   X'13'         IEAVPIOP MODULE ID                         02405140
RCACCOMP EQU   X'14'         IEAVIOCP MODULE ID                         02405240
RCACPGFR EQU   X'15'         IEAVFREE MODULE ID                         02405302
RCACPGFL EQU   X'16'         IEAVFXLD MODULE ID                         02405702
RCACPGOT EQU   X'17'         IEAVOUT  MODULE ID                         02406102
RCACVAM  EQU   X'18'         IEAVAMSI MODULE ID                         02406202
RCACSPIN EQU   X'19'         IEAVSWIN MODULE ID                         02406702
RCACSPOT EQU   X'1A'         IEAVSOUT MODULE ID                         02407102
RCAFLAGS DS    BL1 -         FLAG BYTE                                  02407902
RCALOCKS EQU   RCAFLAGS                                                 02408302
RCASAL   EQU   BIT0 -        1 - SALLOC LOCK AQUIRED                    02408402
RCALL    EQU   BIT1 -        1 - LOCAL LOCK AQUIRED                     02408902
RCAABEND EQU   BIT2 -        1 - RSM IS ABENDING CALLER                 02409302
RCAPSIER EQU   BIT3 -        1 - PSI ABENDED WITH INPUT ERROR           02411302
RCAQS    EQU   BIT4 -        1 - RSM QUEUES ARE BEING ALTERED           02413302
** BIT 5 IS USED BY SE1                                        @ZA28519 02415343
RCADISP  EQU   BIT6 -        1 - DISP LOCK ACQUIRED            @ZA28519 02416243
** BIT 7 IS RESERVED                                           @ZA28519 02417143
RCARCRD  DS    BL1 -         REASON CODE                                02419202
RCANAME1 DS    BL1 -         BIT MAP REPRESENTING RSM ENTRY POINTS     *02421202
                             SET TO 1 ON ENTRY.  SET TO 0 ON EXIT.      02423202
RCAVAMSI EQU   BIT0 -        IEAVAMSI FLAG                              02425202
RCACSEG  EQU   BIT1 -        IEAVCSEG FLAG                              02427202
RCADLAS  EQU   BIT2 -        IEAVDLAS FLAG                              02429202
RCADSEG  EQU   BIT3 -        IEAVDSEG FLAG                              02431202
RCAVEQR  EQU   BIT4 -        IEAVEQR  FLAG                              02433202
RCAFXLD  EQU   BIT5 -        IEAVFXLD FLAG                              02435202
RCAGFA   EQU   BIT6 -        IEAVGFA  FLAG                              02437202
RCAINV   EQU   BIT7 -        IEAVINV  FLAG                              02439202
RCANAME2 DS    BL1 -         BIT MAP REPRESENTING RSM ENTRY POINTS     *02441202
                             SET TO 1 ON ENTRY.  SET TO 0 ON EXIT.      02443202
RCAIOCP  EQU   BIT0 -        IEAVIOCP FLAG                              02445202
RCAITAS  EQU   BIT1 -        IEAVITAS FLAG                              02447202
RCAOUT   EQU   BIT2 -        IEAVOUT  FLAG                              02449202
RCAPCB   EQU   BIT3 -        IEAVPCB  FLAG                              02451202
RCAPFTE  EQU   BIT4 -        IEAVPFTE FLAG                              02453202
RCASWPP  EQU   BIT5 -        IEAVSWPP FLAG                     @Z40WPYD 02453840
RCASWPC  EQU   BIT6 -        IEAVSWPC FLAG                     @Z40WPYD 02454440
RCAPIOP  EQU   BIT7 -        IEAVPIOP FLAG                              02459202
RCANAME3 DS    BL1 -         BIT MAP REPRESENTING RSM ENTRY POINTS     *02461202
                             SET TO 1 ON ENTRY.  SET TO 0 ON EXIT.      02463202
RCAPIX   EQU   BIT0 -        IEAVPIX  FLAG                              02465202
RCAPS112 EQU   BIT1 -        IGC112   FLAG                              02467202
RCAPSIB  EQU   BIT2 -        IEAVPSIB FLAG                              02469202
RCAPSII  EQU   BIT3 -        IEAVPSII FLAG                              02471202
RCARCF   EQU   BIT4 -        IEAVRCF  FLAG                              02473202
RCARCFI  EQU   BIT5 -        IEAVRCFI FLAG                              02475202
RCARELS  EQU   BIT6 -        IEAVRELS FLAG                              02477202
RCARFR   EQU   BIT7 -        IEAVRFR  FLAG                              02479202
RCANAME4 DS    BL1 -         BIT MAP REPRESENTING RSM ENTRY POINTS     *02481202
                             SET TO 1 ON ENTRY.  SET TO 0 ON EXIT.      02483202
RCASOUT  EQU   BIT0 -        IEAVSOUT FLAG                              02485202
RCASWIN  EQU   BIT1 -        IEAVSWIN FLAG                              02487202
RCASQA   EQU   BIT2 -        IEAVSQA  FLAG                              02489202
RCATERM  EQU   BIT3 -        IEAVTERM FLAG                              02491202
RCAVEQRC EQU   BIT4 -        IEAVEQRC FLAG                              02493202
RCAVEQRF EQU   BIT5 -        IEAVEQRF FLAG                              02495202
RCAVEQRI EQU   BIT6 -        IEAVEQRI FLAG                              02497202
RCAGFAD  EQU   BIT7 -        IEAVGFAD FLAG                              02499202
RCANAME5 DS    BL1 -         BIT MAP REPRESENTING RSM ENTRY POINTS     *02501202
                             SET TO 1 ON ENTRY.  SET TO 0 ON EXIT.      02503202
RCARELF  EQU   BIT0 -        IEAVRELF FLAG                              02513202
RCARELV  EQU   BIT1 -        IEAVRELV FLAG                              02513302
RCASIRT  EQU   BIT2 -        IEAVSIRT FLAG                              02513402
RCASORT  EQU   BIT3 -        IEAVSORT FLAG                              02513502
RCAOPBR  EQU   BIT4 -        IEAVOPBR FLAG                              02515102
RCACPBR  EQU   BIT5 -        IEAVCPBR FLAG                              02517102
RCARFR2  EQU   BIT6 -        IEAVRFR2 FLAG                              02517202
RCAFREE  EQU   BIT7 -        IEAVFREE FLAG                              02517302
RCANAME6 DS    BL1 -         BIT MAP REPRESENTING RSM ENTRY POINTS     *02517402
                             SET TO 1 ON ENTRY. SET TO 0 ON EXIT.       02519502
RCAPS113 EQU   BIT0 -        IGC113 FLAG                                02521502
RCAFXL   EQU   BIT1 -        IEAVFXL FLAG                               02521602
RCACSGB  EQU   BIT2 -        IEAVCSGB FLAG                              02526402
RCARCFC  EQU   BIT3 -        IEAVRCFC FLAG                              02528402
RCAVEQRP EQU   BIT4 -        IEAVEQRP FLAG                              02530402
RCAPSIX  EQU   BIT5 -        IEAVFXLD FAST-PATH FOR IOS FLAG            02532402
RCAPSIF  EQU   BIT6 -        IEAVFREE FAST-PATH FOR IOS FLAG            02533402
RCAREP1  EQU   BIT7 -        IEAVREP1 FLAG                     @Z30GNYD 02534803
RCATASID DS    AL2                                             @G33VPOD 02534943
RCARETAD DS    F -           ADDRESS OF RETRY ROUTINE TO BE INVOKED IF  02577002
*                            AN UNEXPECTED ERROR OCCURS.                02579002
RCALENTH EQU   *-RCA -       LENGTH OF RCA                              02581602
         MEND  , */                                                     02586202
*%RCAPLS : ;                                                            02590802
* /*******************************************************************/ 02595402
* /*             RECOVERY COMMUNICATIONS AREA    2/21/78            */  02597443
* /*                                                                 */ 02604443
* /*THIS MACRO SUPPORTS: SU33                                        */ 02611443
* /*                                                                 */ 02650002
* /*THE RSM RCA CONTAINS INFORMATION REQUIRED BY THE RSM FUNCTIONAL  */ 02700002
* /*RECOVERY ROUTINE.  THE RSMRCA IS MAPPED TO THE WORK AREA RETURNED*/ 02750002
* /*BY SETFRR WHEN AN FRR IS ESTABLISHED.  EACH RSM ROUTINE          */ 02800002
* /*COMMUNICATES TO THE FRR VIA THIS AREA.                           */ 02810002
* /*******************************************************************/ 02850002
*        %IF RCALEVEL ¬= ''         /* IF THIS IS CONCATENATED       */ 03000002
*          %THEN %GOTO RCAPLS1;     /* THEN SKIP DCL                 */ 03050002
*DCL 1 RCA BASED (RCAPTR)           /* DECLARE RCA LEVEL 1           */ 03100002
*        %GO TO RCAPLS2;            /* AND SKIP LEVEL TWO DCL        */ 03150002
*%RCAPLS1: RCADUM=RCALEVEL||' RCA'; /* SET LEVEL FOR MINOR STRUCTURE */ 03200002
*    RCADUM                         /* MINOR STRUCTURE NAME PARM     */ 03250002
*%RCAPLS2:;                                                             03300002
*        BDY(WORD),                                                     03350002
*    4 RCAPARM0 PTR(32),  /* VALUE TO BE PLACED IN REG 0 IF RETRY       03377502
*                            IS ROUTINE INVOKED VIA RCARETAD. */        03380002
*    4 RCAPARM1 PTR(32),  /* VALUE TO BE PLACED IN REG 1 IF RETRY       03383002
*                            IS ROUTINE INVOKED VIA RCARETAD. */        03386002
*   4 RCANAME7 BIT(8), /* BIT REPRESENTING RSM ENTRY POINTS. SET TO 1   03386643
*                         ON ENTRY. SET TO 0 ON EXIT.      @Z40WPYD */  03387243
*    8 RCAPIOI   BIT(1),   /* IEAVPIOI FLAG                @Z40WPYD */  03388443
*    8 RCAPSIY   BIT(1),   /*                               @G33VPOD*/  03388543
*    8 RCAPRSB   BIT(1),   /* IEAVPRSB FLAG                 @G33VPOD*/  03389043
*    8 RCAPRSR   BIT(1),   /* IEAVPRSR FLAG                 @G33VPOD*/  03389843
*    8 RCAPRSS   BIT(1),   /* IEAVPRSS FLAG                 @G33VPOD*/  03390643
*    8 *         BIT(3),   /* RESERVED                      @G33VPOD*/  03391443
*    4 RCACSECT CHAR(1),   /* ID OF THE CSECT IN CONTROL             */ 03394002
*    4 RCAFLAGS BIT(8),    /* FLAG BYTE                              */ 03396002
*        8 RCASAL   BIT(1),/* SALLOC LOCK OBTAINED                   */ 03398002
*        8 RCALL    BIT(1),/* LOCAL LOCK OBTAINED                    */ 03398402
*        8 RCAABEND BIT(1),/* RSM IS ABENDING CALLER                 */ 03398502
*        8 RCAPSIER BIT(1),/* PSI ABENDED WITH INPUT ERROR.          */ 03398602
*        8 RCAQS    BIT(1),/* RSM QUEUES ARE BEING ALTERED           */ 03398802
*        8 *        BIT(1),/* USED BY SE1                    @ZA28519*/ 03410943
*        8 RCADISP  BIT(1),/* DISP LOCK OBTAINED             @ZA28519*/ 03411943
*        8 *        BIT(1),/* RESERVED                       @ZA28519*/ 03412943
*    4 RCARCRD  CHAR(1),   /* REASON CODE                            */ 03416902
*    4 RCANAMES BIT(48),   /* BIT MAP REPRESENTING RSM MODULES ENTERED  03422902
*                             SET TO 1 ON ENTRY. SET TO 0 ON EXIT.   */ 03428902
*      6 RCANAME1 BIT(8),  /* BIT MAP REPRESENTING RSM ENTRY POINTS.    03429940
*                             SET TO 1 ON ENTRY, SET TO 0 ON EXIT.      03430940
*                                                           @Z40WPYD */ 03431940
*        8 RCAVAMSI BIT(1),/* IEAVAMSI FLAG                          */ 03434902
*        8 RCACSEG  BIT(1),/* IEAVCSEG FLAG                          */ 03440902
*        8 RCADLAS  BIT(1),/* IEAVDLAS FLAG                          */ 03449902
*        8 RCADSEG  BIT(1),/* IEAVDSEG FLAG                          */ 03459902
*        8 RCAVEQR  BIT(1),/* IEAVEQR  FLAG                          */ 03469902
*        8 RCAFXLD  BIT(1),/* IEAVFXLD FLAG                          */ 03479902
*        8 RCAGFA   BIT(1),/* IEAVGFA  FLAG                          */ 03489902
*        8 RCAINV   BIT(1),/* IEAVINV  FLAG                          */ 03495902
*      6 RCANAME2 BIT(8),  /* BIT MAP REPRESENTING RSM ENTRY POINTS.    03496440
*                             SET TO 1 ON ENTRY, SET TO 0 ON EXIT.      03496940
*                                                           @Z40WPYD */ 03497440
*        8 RCAIOCP  BIT(1),/* IEAVIOCP FLAG                          */ 03497902
*        8 RCAITAS  BIT(1),/* IEAVITAS FLAG                          */ 03498302
*        8 RCAOUT   BIT(1),/* IEAVOUT  FLAG                          */ 03498702
*        8 RCAPCB   BIT(1),/* IEAVPCB  FLAG                          */ 03499102
*        8 RCAPFTE  BIT(1),/* IEAVPFTE FLAG                          */ 03499502
*        8 RCASWPP  BIT(1),/* IEAVSWPP FLAG                 @Z40WPYD */ 03499640
*        8 RCASWPC  BIT(1),/* IEAVSWPC FLAG                 @Z40WPYD */ 03509640
*        8 RCAPIOP  BIT(1),/* IEAVPIOP FLAG                          */ 03539840
*      6 RCANAME3 BIT(8),  /* BIT MAP REPRESENTING RSM ENTRY POINTS.    03541840
*                             SET TO 1 ON ENTRY, SET TO 0 ON EXIT.      03543840
*                                                           @Z40WPYD */ 03545840
*        8 RCAPIX   BIT(1),/* IEAVPIX  FLAG                          */ 03549802
*        8 RCAPS112 BIT(1),/* IGC112   FLAG                          */ 03559802
*        8 RCAPSIB  BIT(1),/* IEAVPSIB FLAG                          */ 03569802
*        8 RCAPSII  BIT(1),/* IEAVPSII FLAG                          */ 03579802
*        8 RCARCF   BIT(1),/* IEAVRCF  FLAG                          */ 03589802
*        8 RCARCFI  BIT(1),/* IEAVRCFI FLAG                          */ 03591802
*        8 RCARELS  BIT(1),/* IEAVRELS FLAG                          */ 03592202
*        8 RCARFR   BIT(1),/* IEAVRFR  FLAG                          */ 03592302
*      6 RCANAME4 BIT(8),  /* BIT MAP REPRESENTING RSM ENTRY POINTS.    03592440
*                             SET TO 1 ON ENTRY, SET TO 0 ON EXIT.      03592540
*                                                           @Z40WPYD */ 03592640
*        8 RCASOUT  BIT(1),/* IEAVSOUT FLAG                          */ 03592740
*        8 RCASWIN  BIT(1),/* IEAVSWIN FLAG                          */ 03592840
*        8 RCASQA   BIT(1),/* IEAVSQA  FLAG                          */ 03593240
*        8 RCATERM  BIT(1),/* IEAVTERM FLAG                          */ 03593302
*        8 RCAVEQRC BIT(1),/* IEAVEQRC FLAG                          */ 03593702
*        8 RCAVEQRF BIT(1),/* IEAVEQRF FLAG                          */ 03595702
*        8 RCAVEQRI BIT(1),/* IEAVEQRI FLAG                          */ 03597702
*        8 RCAGFAD  BIT(1),/* IEAVGFAD FLAG                          */ 03599702
*      6 RCANAME5 BIT(8),  /* BIT MAP REPRESENTING RSM ENTRY POINTS.    03609740
*                             SET TO 1 ON ENTRY, SET TO 0 ON EXIT.      03619740
*                                                           @Z40WPYD */ 03629740
*        8 RCARELF  BIT(1),/* IEAVRELF FLAG                          */ 03649702
*        8 RCARELV  BIT(1),/* IEAVRELV FLAG                          */ 03659702
*        8 RCASIRT  BIT(1),/* IEAVSIRT FLAG                          */ 03669702
*        8 RCASORT  BIT(1),/* IEAVSORT FLAG                          */ 03679702
*        8 RCAOPBR  BIT(1),/* IEAVOPBR FLAG                          */ 03689702
*        8 RCACPBR  BIT(1),/* IEAVCPBR FLAG                          */ 03691702
*        8 RCARFR2  BIT(1),/* IEAVRFR2 FLAG                          */ 03693702
*        8 RCAFREE  BIT(1),/* IEAVFREE FLAG                          */ 03695702
*      6 RCANAME6 BIT(8),  /* BIT MAP REPRESENTING RSM ENTRY POINTS.    03695840
*                             SET TO 1 ON ENTRY, SET TO 0 ON EXIT.      03695940
*                                                           @Z40WPYD */ 03696040
*        8 RCAPS113 BIT(1),/* IGC113   FLAG                          */ 03696102
*        8 RCAFXL   BIT(1),/* IEAVFXL  FLAG                          */ 03696502
*        8 RCACSGB  BIT(1),/* IEAVCSGB FLAG                          */ 03696602
*        8 RCARCFC  BIT(1),/* IEAVRCFC FLAG                          */ 03696902
*        8 RCAVEQRP BIT(1),/* IEAVEQRP FLAG                          */ 03697302
*        8 RCAPSIX  BIT(1),/* IEAVFXLD FAST-PATH FOR IOS FLAG        */ 03697502
*        8 RCAPSIF  BIT(1),/* IEAVFXLD FAST-PATH FOR IOS FLAG        */ 03703502
*        8 RCAREP1  BIT(1),/* IEAVREP1 FLAG                 @Z30GNYD */ 03709503
*    4 RCATASID CHAR(2),   /*                              @G33VPOD */  03709643
*    4 RCARETAD PTR(31) ;  /* ADDRESS OF A RETRY ROUTINE TO BE INVOKED  03759602
*                             IF AN UNEXPECTED ERROR OCCURS*/           03764602
*      /**************************************************************/ 03769602
*      /*               MODULE IDS FOR THE RCACSECT FIELD            */ 03771602
*      /**************************************************************/ 03773602
*      DCL RCAC001  BIT(8) CONSTANT('01'X), /* RESERVED MODULE ID    */ 03779640
*          RCACRSB  BIT(8) CONSTANT('02'X), /* IEAVPRSB MODULE ID       03780643
*                                                           @G33VPOD */ 03781643
*          RCACINIO BIT(8) CONSTANT('03'X), /* IEAVPIOI MODULE ID       03787640
*                                                           @Z40WPYD */ 03788640
*          RCACSQA  BIT(8) CONSTANT('04'X), /* IEAVSQA  MODULE ID    */ 03791640
*          RCACVR   BIT(8) CONSTANT('05'X), /* IEAVEQR  MODULE ID    */ 03795640
*          RCACPS   BIT(8) CONSTANT('06'X), /* IEAVPSI  MODULE ID    */ 03799640
*          RCACPGRL BIT(8) CONSTANT('07'X), /* IEAVRLSE MODULE ID    */ 03803640
*          RCACINIT BIT(8) CONSTANT('08'X), /* IEAVITAS MODULE ID    */ 03807640
*          RCACDELE BIT(8) CONSTANT('09'X), /* IEAVDLAS MODULE ID    */ 03811640
*          RCACREAT BIT(8) CONSTANT('0A'X), /* IEAVCSEG MODULE ID    */ 03815640
*          RCACDEST BIT(8) CONSTANT('0B'X), /* IEAVDSEG MODULE ID    */ 03819640
*          RCACREP  BIT(8) CONSTANT('0C'X), /* IEAVPCB  MODULE ID       03823640
*                                                           @Z30GNYD */ 03834503
*          RCACPIX  BIT(8) CONSTANT('0D'X), /* IEAVPIX  MODULE ID    */ 03839540
*          RCACGFA  BIT(8) CONSTANT('0E'X), /* IEAVGFA  MODULE ID    */ 03845540
*          RCACREPL BIT(8) CONSTANT('0F'X), /* IEAVRFR  MODULE ID    */ 03851540
*          RCACRECF BIT(8) CONSTANT('10'X), /* IEAVRCF  MODULE ID    */ 03857540
*          RCACPTRM BIT(8) CONSTANT('11'X), /* IEAVTERM MODULE ID    */ 03863540
*          RCACSWPC BIT(8) CONSTANT('12'X), /* IEAVSWPC MODULE ID       03869540
*                                                           @Z40WPYD */ 03875540
*          RCACPOST BIT(8) CONSTANT('13'X), /* IEAVPIOP MODULE ID    */ 03891540
*          RCACCOMP BIT(8) CONSTANT('14'X), /* IEAVIOCP MODULE ID    */ 03892340
*          RCACPGFR BIT(8) CONSTANT('15'X), /* IEAVFREE MODULE ID    */ 03893140
*          RCACPGFL BIT(8) CONSTANT('16'X), /* IEAVFXLD MODULE ID    */ 03893940
*          RCACPGOT BIT(8) CONSTANT('17'X), /* IEAVOUT  MODULE ID    */ 03894740
*          RCACVAM  BIT(8) CONSTANT('18'X), /* IEAVAMSI MODULE ID    */ 03895540
*          RCACSPIN BIT(8) CONSTANT('19'X), /* IEAVSWIN MODULE ID    */ 03896340
*          RCACSPOT BIT(8) CONSTANT('1A'X); /* IEAVSOUT MODULE ID    */ 03897140
*        %RCALEN = 'LENGTH(RCA)';   /* OBTAIN LENGTH OF RCA.         */ 03899502
./  ADD  SSI=20830508,NAME=IHARQE
*        %GOTO IHARQE  ;      /* BILINGUAL MAPPING           /*      /* 03000001
         MACRO                                                          06000001
         IHARQE                                                         09000001
RQESECT  DSECT      REQUEST QUEUE ELEMENT                  LEVEL=1      12000001
RQELNK   DS    AL2  PTR TO NEXT RQE                                     15000001
RQEUCB   DS    AL2  ADDR UCB ASSOC WITH QUEUED I/O REQUEST              18000001
RQEIDT   DS    0C   RQE IDENTITY FIELD                                  21000001
RQEIOB   DS    A    ADDR IOB ASSOC WITH REQUEST                         24000001
RQETJID1 DS    0C   1ST HALF TS JOB IDENTIFICATION                      27000001
RQEPRI   DS    CL1  DISPATCHING PRIORITY OF REQUESTOR'S TASK            30000001
RQEDEB   EQU   RQEPRI                                                   33000001
         DS    AL3  ADDR DEB FOR THIS REQUEST                           36000001
RQETJID2 DS    0C   2ND HALF TS JOB IDENTIFICATION                      39000001
RQETCB   DS    A    ADDR TCB ASSOCIATED WITH THIS RQE                   42000001
         MEND  , */                                                     45000001
* %IHARQE:    ;                                                         48000001
*/*            REQUEST QUEUE ELEMENT - R.Q.E.             LEVEL=1    */ 48050001
* DECLARE                                                               51000001
*  1 RQESECT  BASED(RQESEPTR),                                          54000001
*    2 RQELNK      PTR(15)  BDY(BYTE), /* PTR TO NEXT RQE            */ 57000001
*    2 RQEUCB      PTR(15)  BDY(BYTE), /* ADDR UCB ASSOC WITH QUEUED    60000001
*                                       I/O REQUEST                  */ 63000001
*    2 RQEIOB      PTR(31),          /* ADDR IOB ASSOC WITH REQUEST  */ 66000001
*     3 RQEIDT      CHAR(1),         /* RQE IDENTIFY FIELD           */ 69000001
*    2 RQEDEB      PTR(31),          /* ADDR DEB FOR THIS REQUEST    */ 72000001
*     3 RQETJID1    CHAR(1),         /* 1ST HALF TS JOB                 75000001
*                                       IDENTIFICATION               */ 78000001
*      4 RQEPRI      CHAR(1),        /* DISPATCHING PRIORITY OF         81000001
*                                       REQUESTOR'S TASK             */ 84000001
*    2 RQETCB      PTR(31),          /* ADDR TCB ASSOCIATED WITH        87000001
*                                       THIS RQE                     */ 90000001
*     3 RQETJID2    CHAR(1);         /* 2ND HALF TS JOB                 93000001
*                                       IDENTIFICATION               */ 96000001
./  ADD  SSI=31412421,NAME=IHARRRA
*        %GOTO PLSRRRA1;     /*                                         00400002
         MACRO                                                          00450002
         IHARRRA                                                        00500002
**/                                                                     00502002
*  %PLSRRRA1: ;                                                         00504002
*/********************************************************************/ 00510002
*/*            REPAIR ROUTINE RECOVERY AREA                          */ 00520002
*/*            OS/VS2 RELEASE 2,5/1/73,LEVEL 1                       */ 00530002
*/*                                                                  */ 00540002
*/********************************************************************/ 00542002
*  % GOTO PLSRRRA2 ; /*                                                 00544002
RRRA     DSECT                                                          00550002
RRRASTAT DS    0F                      STATUS INFORMATION WORD          00600002
RRRAFLG1 DS    B                       BYTE 1                           00650002
RRRALOCK EQU   X'80'                   SETLOCK FRR TO BE ENTERED        00700002
RRRAASVT EQU   X'40'                   ASVT RTN TO BE ENTERED           00750002
RRRAFLG2 DS    B                       BYTE 2 RESERVED                  00800002
RRRAFLG3 DS    B                       BYTE 3 RESERVED                  00850002
RRRAFLG4 DS    B                       BYTE 4 RESERVED                  00900002
RRRASA14 DS    A                       REGISTER 14 SAVE AREA            00950002
RRRASAV0 DS    F                       REGISTER 0 SAVE AREA             01000002
         DS    3F                      RESERVED FIELDS                  01050002
RRRAEND  DS    0F                      END OF RRRA                      01100002
RRRALEN  EQU   RRRAEND-RRRA            LENGTH OF RRRA                   01150002
         MEND                                                           01200002
**/                                                                     01210002
*%PLSRRRA2 :    ;                                                       01250002
*DECLARE                                                                01300002
*  1 RRRA BASED(SDWAPARM),             /* REPAIR ROUTINE REC AREA    */ 01350002
*    2 RRRASTAT BDY(WORD),             /* STATUS INFORMATION WORD    */ 01400002
*      3 RRRAFLG1 BIT(8),              /* BYTE 1                     */ 01450002
*        4 RRRALOCK BIT(1),            /* SETLOCK FRR TO BE ENTERED  */ 01500002
*        4 RRRAASVT BIT(1),            /* ASVT RTN TO BE ENTERED     */ 01550002
*        4 * BIT(6),                   /* RESERVED                   */ 01600002
*      3 RRRAFLG2 BIT(8),              /* BYTE 2 RESERVED            */ 01650002
*      3 RRRAFLG3 BIT(8),              /* BYTE 3 RESERVED            */ 01700002
*      3 RRRAFLG4 BIT(8),              /* BYTE 4 RESERVED            */ 01750002
*    2 RRRASA14 PTR(31),               /* REGISTER 14 SAVE AREA      */ 01800002
*    2 RRRASAV0 FIXED(31),             /* REGISTER 0 SAVE AREA       */ 01850002
*    2 * (3) FIXED(31),                /* RESERVED FIELDS            */ 01900002
*    2 RRRAEND CHAR(0) BDY(WORD);      /* END OF RRRA                */ 01950002
* % RRRALEN= 'LENGTH(RRRA)' ;                                           02000002
./  ADD  SSI=81880155,NAME=IHARTCT
*        %GOTO RTCTPLSH;           /* BILINGUAL MAPPING                 00020043
         MACRO                                                          00100002
         IHARTCT                                                        00120043
.*A-000000-999999                   ** NEW DUMP KEYWORDS       @G33CPHZ 00126043
.*                                     (INCOMPATIBLE OFFSETS   @G33CPHZ 00132043
.*                                      ON FIELDS ONLY USED    @G33CPHZ 00138043
.*                                      BY RTM DUMP ROUTINES   @G33CPHZ 00144043
.*                                      AND COMMANDS)          @G33CPHZ 00150043
         AGO   .RTCTBAL             ** SKIP PLS MACRO STATEMENT **   */ 00162043
*%RTCTPLSH: ;                       /* BAL/PLS HEADER                   00164043
.RTCTBAL ANOP                                                        */ 00166043
*                                                                       00170043
*/********************************************************************/ 00171043
*/*                                                                  */ 00172043
*/* MACRO NAME = RTCT OR RTMCT                                       */ 00173043
*/*                                                                  */ 00174043
*/* MICROFICHE NAME = IHARTCT                                        */ 00174343
*/*                                                                  */ 00174643
*/* DESCRIPTIVE NAME = RECOVERY/TERMINATION CONTROL TABLE            */ 00175043
*/*                                                                  */ 00176043
*/* STATUS = OS/VS2 RELEASE 3.7 PLUS SU 33       12/08/76    @G33VPHZ*/ 00177043
*/*                                                                  */ 00178043
*/* METHOD OF ACCESS =                                               */ 00179043
*/*   BAL  - DSECT IS ALWAYS PRODUCED.  USING ON RTCT GIVES          */ 00180043
*/*          ADDRESSABILITY FOR ALL SYMBOLS.  CVTRTMCT POINTS TO     */ 00181043
*/*          THE RTCT.                                               */ 00181343
*/*   PL/S - INCLUDE IHARTCT FROM SYSLIB.  ALSO INCLUDE CVT TO       */ 00182043
*/*          DEFINE BASE OF CVTRTMCT.                                */ 00183043
*/*                                                                  */ 00184043
*/* SIZE = DECIMAL 344, X'158'                                       */ 00184343
*/* CHANGE ACTIVITY = OZ27434 - DEFINE RTCTSDFX USED TO PROHIBIT     */ 00184643
*/*                             ASYNCRONOUS INTERRUPTS WHILE SDUMP   */ 00184743
*/*                             HAS THE SYSTEM SET NONDISPATCHABLE.  */ 00184843
*/*                                                                  */ 00185343
*/********************************************************************/ 00185843
*                                                                       00185943
*%GOTO RTCTPLS;     /*                                                  00186043
RTCT     DSECT , -                BAL MAPPING OF TABLE                  00200002
.********************************************************************** 00203043
.* KNOWN USERS OF THIS CONTROL BLOCK ARE:                               00206043
.*     RTM NIP RIM            - IEAVNPA6  (CREATES RTCT)                00209043
.*     RTM1 MAINLINE          - IEAVTRTM                                00212043
.*     RTM RECORDING          - IEAVTRER, IEAVTRET                      00215043
.*     RTM MEMORY TERMINATION - IEAVTMRM, IEAVTMTC             @G33SPHW 00218043
.*     RTM2 DUMP ROUTINES     - IEAVAD00, IEAVAD0D, IEAVTABD, IEAVTABI, 00221043
.*                              IEAVTFMT, IEAVTFSD, IEAVTSDI,           00222043
.*                              (MOST MODULES STARTING WITH IEAVTSD...) 00224043
.*                              IEAVTSSD, IEAVTSSE             @G33VPHZ 00226043
.*     CHNGDUMP COMMAND       - IEEMB815                                00230043
.*     DISPLAY DUMP COMMAND   - IEECB910                       @G33CPHE 00233043
.*     LOGDATA FORMATTER      - IFCERFMT                       @G33LPHP 00234043
.********************************************************************** 00236043
         IEZBITS , -              SYMBOLIC BIT NAMES                    00250002
RTCTNAME DS    CL4 -              CONTAINS C'RTCT' AS IDENTIFIER.       00300002
*********************************************************************** 00302043
* SNAP/ABEND PARMLIB VALUES                                           * 00304043
*********************************************************************** 00306043
RTCTPLIB DS    0CL12                                           @G33CPHE 00310043
*                                                                       00315043
RTCTSAP  DS    0BL4 -             **SYSABEND INITIAL PARMLIB VALUES**   00320043
RTCTSAP1 DS    B -                (BYTE 1 OF SDATA OPTIONS:)            00330043
RTCTSAB0 EQU   BIT0               1=DISPLAY NUCLEUS                     00410002
RTCTSAB1 EQU   BIT1               1=DISPLAY SQA                         00420002
RTCTSAB2 EQU   BIT2               1=DISPLAY LSQA                        00430002
RTCTSAB3 EQU   BIT3               1=DISPLAY SWA                         00440002
RTCTSAB4 EQU   BIT4               1=DISPLAY GTF OR SUPERVISOR TRACE     00442002
RTCTSAB5 EQU   BIT5               1=DISPLAY CONTROL BLOCKS FOR TASK     00443043
RTCTSAB6 EQU   BIT6               1=DISPLAY ENQUEUE CONTROL BLOCKS      00444043
RTCTSAB7 EQU   BIT7               1=FORMAT DATA MGMT C.B.S     @G33CPHE 00447043
*                                                                       00447243
RTCTSAP2 DS    B                  (BYTE 2 OF SDATA OPTIONS:)            00447343
RTCTSABG EQU   BIT0               1=FORMAT IOS CONTROL BLOCKS  @G33CPHE 00447443
RTCTSABH EQU   BIT1               1=FORMAT ERROR CONTROL BLKS  @G33CPHE 00447543
*        EQU   BIT2               RESERVED                              00448043
*        EQU   BIT3               RESERVED                              00448243
*        EQU   BIT4               RESERVED                              00448443
*        EQU   BIT5               RESERVED                              00448643
*        EQU   BIT6               RESERVED                              00448843
*        EQU   BIT7               RESERVED                              00449043
*                                                                       00449143
RTCTSAP3 DS    B -                (BYTE 1 OF PDATA OPTIONS:)            00449243
RTCTSAB8 EQU   BIT0               1=DISPLAY SAVE AREA TRACE(SA KEYWORD) 00452243
RTCTSAB9 EQU   BIT1               0=DISPLAY ENTIRE SAVE AREA            00470002
*                                 1=DISPLAY SAVE AREA HEADINGS(SAH KWD) 00475043
RTCTSABA EQU   BIT2               1=DISPLAY REGISTERS                   00490002
RTCTSABB EQU   BIT3               1=DISPLAY LINK PACK AREA              00492002
RTCTSABC EQU   BIT4               1=DISPLAY JOB PACK AREA               00494002
RTCTSABD EQU   BIT5               1=DISPLAY PSW                         00496002
RTCTSABE EQU   BIT6               1=DISPLAY USER SUBPOOLS: 0-127        00498002
RTCTSABF EQU   BIT7               RESERVED                              00498402
RTCTSAP4 DS    B                  RESERVED                              00540043
*                                                                       00542043
RTCTSUP  DS    0BL4 -             **SYSUDUMP INITIAL PARMLIB VALUES**   00544043
RTCTSUP1 DS    B -                (BYTE 1 OF SDATA OPTIONS:)            00554043
RTCTSUD0 EQU   BIT0               1=DISPLAY NUCLEUS                     00602002
RTCTSUD1 EQU   BIT1               1=DISPLAY SQA                         00610002
RTCTSUD2 EQU   BIT2               1=DISPLAY LSQA                        00620002
RTCTSUD3 EQU   BIT3               1=DISPLAY SWA                         00630002
RTCTSUD4 EQU   BIT4               1=DISPLAY GTF OR SUPERVISOR TRACE     00640002
RTCTSUD5 EQU   BIT5               1=DISPLAY CNTRL BLKS FOR TASK         00642002
RTCTSUD6 EQU   BIT6               1=DISPLAY ENQUEUE CNTRL BLKS          00644002
RTCTSUD7 EQU   BIT7               1=FORMAT DATA MGMT C.B.S     @G33CPHE 00645043
*                                                                       00645343
RTCTSUP2 DS    B                  (BYTE 2 OF SDATA OPTIONS:)            00645443
RTCTSUDG EQU   BIT0               1=FORMAT IOS CONTROL BLOCKS  @G33CPHE 00645743
RTCTSUDH EQU   BIT1               1=FORMAT ERROR CONTROL BLKS  @G33CPHE 00646043
*        EQU   BIT2               RESERVED                              00646643
*        EQU   BIT3               RESERVED                              00647043
*        EQU   BIT4               RESERVED                              00647443
*        EQU   BIT5               RESERVED                              00647843
*        EQU   BIT6               RESERVED                              00648243
*        EQU   BIT7               RESERVED                              00648643
*                                                                       00648843
RTCTSUP3 DS    B -                (BYTE 1 OF PDATA OPTIONS:)            00649043
RTCTSUD8 EQU   BIT0               1=DISPLAY SAVE AREA TRACE(SA KEYWORD) 00652043
RTCTSUD9 EQU   BIT1               0=DISPLAY ENTIRE SAVE AREA            00670002
*                                 1=DISPLAY SAVE AREA HEADINGS(SAH KWD) 00675043
RTCTSUDA EQU   BIT2               1=DISPLAY REGISTERS                   00690002
RTCTSUDB EQU   BIT3               1=DISPLAY LINK PACK AREA              00692002
RTCTSUDC EQU   BIT4               1=DISPLAY JOB PACK AREA               00694002
RTCTSUDD EQU   BIT5               1=DISPLAY PSW                         00696002
RTCTSUDE EQU   BIT6               1=DISPLAY USER SUBPOOLS: 0-127        00698002
RTCTSUDF EQU   BIT7               RESERVED                              00698402
RTCTSUP4 DS    B                  RESERVED                              00718443
*                                                                       00719443
RTCTSYD  DS    0BL4               **SYSMDUMP INITIAL PARMLIB VALUES**   00720443
RTCTSY01 DS    B                  (BYTE 1 OF SDATA OPTIONS:)   @G33CPHE 00722443
RTCTSYM0 EQU   BIT0               1=DISPLAY NUCLEUS            @G33CPHE 00724443
RTCTSYM1 EQU   BIT1               1=DISPLAY SQA                @G33CPHE 00726443
RTCTSYM2 EQU   BIT2               1=DISPLAY LSQA               @G33CPHE 00728443
RTCTSYM3 EQU   BIT3               1=DISPLAY SWA                @G33CPHE 00730443
RTCTSYM4 EQU   BIT4               1=DISPLAY GTF OR SUPV TRACE  @G33CPHE 00732443
RTCTSYM5 EQU   BIT5               1=DISPLAY REGION             @G33CPHE 00734443
RTCTSYM6 EQU   BIT6               1=DISPLAY LPA FOR REGION     @G33CPHE 00736443
RTCTSYM7 EQU   BIT7               1=DISPLAY CSA                @G33CPHE 00738443
RTCTSY02 DS    B                  RESERVED                              00748843
RTCTSY03 DS    B                  RESERVED                              00749043
RTCTSY04 DS    B                  RESERVED                              00750043
*********************************************************************** 00751043
* RTM AND LOGREC RECORDING INFORMATION                                * 00752043
*********************************************************************** 00753043
RTCTYYY1 DS    H                  **RESERVED**                 @G33CPHZ 00756443
RTCTSDID DS    H -                ASID OF MEMORY IN WHICH SVC DUMP IS   01348443
*                                  OR WILL BE RUNNING.                  01350002
RTCTMECB DS    XL4 -              ECB WAIT'ED ON BY MEMORY              01400002
*                                  TERMINATION CONTROLLER               01450002
RTCTFASB DS    A -                ADDRESS OF FIRST ASCB ON MEMORY       01500002
*                                  TERMINATION QUEUE.                   01550002
RTCTRECB DS    XL4 -              ECB WAIT'ED ON BY RECORDING TASK.     01600002
RTCTRCB  DS    A -                ADDRESS OF RECORDER'S BUFFER CONTROL  01630043
*                                  BLOCKS (CONTAIN LOGREC ENTRIES).     01660043
*********************************************************************** 01750043
* THE FOLLOWING TABLE IS COMPOSED OF TEN TWELVE-BYTE ENTRIES, EACH    * 01770043
* ONE CORRESPONDING TO AN SVC DUMP DATA SET.                          * 01800043
*********************************************************************** 01870043
RTCTSDDS DS    0CL120 -           TOTAL OF TEN TWELVE-BYTE ENTRIES      01950002
RTCTDSNM DS    CL3 -              NAME IDENTIFIER OF THIS DATA SET...   02000002
*                                  TAPE - EBCDIC UNIT ADDRESS,          02050002
*                                  DISK - EBCDIC 00-09 WITH TRAILING    02100002
*                                         BLANK.                        02150002
RTCTFLG  DS    B -                FLAG BYTE..........                   02170043
RTCTDSST EQU   BIT0               1-D.S. FULL, 0-D.S. AVAILABLE.        02205043
RTCTDSUS EQU   BIT1               1-D.S. USED, 0-D.S. NOT USED.         02220002
RTCTDETP EQU   BIT2               0-TAPE D.S., 1-DASD D.S.              02230002
RTCTDCB  DS    A -                DEB ADDRESS FOR THIS DATA SET.        02250002
RTCTDEV  DS    XL4 -              DEVICE TYPE CODE FOR THIS DATA SET.   02300002
RTCTBLEN EQU   *-RTCTDSNM         LENGTH OF ONE TABLE ENTRY.            02350002
         DS    CL108              REMAINING NINE ENTRIES.               02400002
*                                 *** END OF TABLE *****************    02450002
*                                                                       02460002
RTCTSDPL DS    A -                ADDRESS OF SVC DUMP PARAMETER LIST    02500002
*                                  FOR CROSS-MEMORY REQUEST.            02520043
RTCTSDIP EQU   BIT0               HIGH ORDER BIT IS SVC DUMP IN         02550043
*                                  PROGRESS FLAG.             @G33VPHZ  02560043
*                                                                       02600002
RTCTFMT  DS    A                  USED FOR TESTING RTM MODULES          02650043
RTCTMLCK DS    F                  LOCK FOR MEM TERM POST SRB            02908102
RTCTMSRB DS    F                  PTR TO MEM TERM POST SRB              02908202
RTCTTEST DS    F                  USED FOR TESTING RTM MODULES          02908302
RTCTRFLG DS    B                  RECORDING FLAGS                       02918402
RTCTRTER EQU   BIT0               RECORDING TEMPORARY ERROR             02918802
RTCTRPER EQU   BIT1               RECORDING PERMANENT ERROR             02918902
RTCTRSTF EQU   BIT2               INITIAL STF ENTRY                     02921402
RTCTXXX1 DS    BL1                RESERVED                              02922441
RTCTSEQ# DS    H                  ERRORID SEQUENCE NUMBER      @G17EP5W 02924141
RTCTSDSW DS    A                  ADDRESS OF SUMMARY SVC DUMP (SUMDUMP) 02926643
*                                  WORK AREA (IHASMWK)         @G33VPHD 02927443
RTCTTDCB DS    9F                 TAPE DCB FOR SVC DUMP                 02929102
RTCTSDWK DS    A                  ADDRESS OF SVC DUMP WORK AREA         02929202
RTCTERID DS    0CL10              ERRORID FOR THIS FAILURE'S SVC DUMP   02930243
*                                  HEADER                     @G17EP5W  02931243
RTCTESEQ DS    CL2                ERRORID SEQUENCE NUMBER     @G17EP5W  02933241
RTCTECPU DS    CL2                ERRORID LOGICAL CPU ID      @G17EP5W  02937741
RTCTEASD DS    CL2                ERRORID ASID                @G17EP5W  02938041
RTCTETIM DS    CL4                ERRORID TIMESTAMP           @G17EP5W  02938341
RTCTXXX2 DS    CL2                RESERVED                    @G17EP5W  02938641
*********************************************************************** 02938843
* DEFAULT DUMP OPTIONS, WHICH CAN BE CHANGED BY THE CHNGDUMP          * 02939243
* OPERATOR COMMAND                                                    * 02939343
*********************************************************************** 02939843
RTCTOPT  DS    0CL16                                           @G33CPHE 02939943
RTCTSAO  DS    0BL4               **SYSABEND EFFECTIVE OPTIONS**        02940243
RTCTSASD DS    0BL2                                                     02940343
RTCTSAO1 DS    B                  (BYTE 1 OF SDATA OPTIONS:)            02941243
RTCTSAD0 EQU   BIT0               1=DISPLAY NUCLEUS                     02941543
RTCTSAD1 EQU   BIT1               1=DISPLAY SQA                         02942543
RTCTSAD2 EQU   BIT2               1=DISPLAY LSQA                        02943543
RTCTSAD3 EQU   BIT3               1=DISPLAY SWA                         02944543
RTCTSAD4 EQU   BIT4               1=DISPLAY GTF OR SUPERVISOR TRACE     02945543
RTCTSAD5 EQU   BIT5               1=DISPLAY CONTROL BLOCKS FOR TASK     02946543
RTCTSAD6 EQU   BIT6               1=DISPLAY ENQUEUE CONTROL BLOCKS      02947443
RTCTSAD7 EQU   BIT7               1=FORMAT DATA MGMT C.B.S     @G33CPHE 02949443
*                                                                       02949643
RTCTSAO2 DS    B                  (BYTE 2 OF SDATA OPTIONS:)            02949843
RTCTSADG EQU   BIT0               1=FORMAT IOS CONTROL BLOCKS  @G33CPHE 02950243
RTCTSADH EQU   BIT1               1=FORMAT ERROR CONTROL BLKS  @G33CPHE 02950643
*              BIT3               RESERVED                              02951043
*              BIT4               RESERVED                              02951443
*              BIT5               RESERVED                              02951843
*              BIT6               RESERVED                              02952243
*              BIT7               RESERVED                              02952643
RTCTSAPD DS    0BL2                                                     02953043
RTCTSAO3 DS    B                  (BYTE 1 OF PDATA OPTIONS:)            02953243
RTCTSAD8 EQU   BIT0               1=DISPLAY SAVE AREA TRACE(SA KEYWORD) 02953843
RTCTSAD9 EQU   BIT1               0=DISPLAY ENTIRE SAVE AREA            02954243
*                                 1=DISPLAY SAVE AREA HEADINGS(SAH KWD) 02954643
RTCTSADA EQU   BIT2               1=DISPLAY REGISTERS                   02955043
RTCTSADB EQU   BIT3               1=DISPLAY LINK PACK AREA              02955443
RTCTSADC EQU   BIT4               1=DISPLAY JOB PACK AREA               02955843
RTCTSADD EQU   BIT5               1=DISPLAY PSW                         02956243
RTCTSADE EQU   BIT6               1=DISPLAY USER SUBPOOLS: 0-127        02956643
RTCTSADF EQU   BIT7               RESERVED                              02957043
*                                                                       02957243
RTCTSAO4 DS    B                  (BYTE 1 OF OTHER OPTIONS:)            02957443
RTCTSAMG EQU   BIT6               SEE RTCTSAOV                 @G33CPHZ 02957843
RTCTSAOV EQU   BIT6               1=OVER MODE  0=ADD MODE      @G33CPHZ 02958143
RTCTISAB EQU   BIT7               IGNORE REQUESTS FOR SYSABEND @G33CPHE 02958243
*                                                                       02958643
RTCTSUO  DS    0BL4               **SYSUDUMP EFFECTIVE OPTIONS**        02959043
RTCTSUSD DS    0BL2                                                     02959443
RTCTSUO1 DS    B                  (BYTE 1 OF SDATA OPTIONS:)            02959643
RTCTSYD0 EQU   BIT0               1=DISPLAY NUCLEUS                     02960243
RTCTSYD1 EQU   BIT1               1=DISPLAY SQA                         02960643
RTCTSYD2 EQU   BIT2               1=DISPLAY LSQA                        02961043
RTCTSYD3 EQU   BIT3               1=DISPLAY SWA                         02961443
RTCTSYD4 EQU   BIT4               1=DISPLAY GTF OR SUPERVISOR TRACE     02961843
RTCTSYD5 EQU   BIT5               1=DISPLAY CNTRL BLKS FOR TASK         02962243
RTCTSYD6 EQU   BIT6               1=DISPLAY ENQUEUE CNTRL BLKS          02962643
RTCTSYD7 EQU   BIT7               1=FORMAT DATA MGMT C.B.S     @G33CPHE 02963043
*                                                                       02963343
RTCTSUO2 DS    B                  (BYTE 2 OF SDATA OPTIONS:)            02963443
RTCTSYDG EQU   BIT0               1=FORMAT IOS CONTROL BLOCKS  @G33CPHE 02963743
RTCTSYDH EQU   BIT1               1=FORMAT ERROR CONTROL BLKS  @G33CPHE 02964043
*                                 RESERVED                              02964643
*        EQU   BIT4               RESERVED                              02965043
*        EQU   BIT5               RESERVED                              02965443
*        EQU   BIT6               RESERVED                              02965843
*        EQU   BIT7               RESERVED                              02966243
RTCTSUPD DS    0BL2                                                     02966643
RTCTSUO3 DS    B                  (BYTE 1 OF PDATA OPTIONS:)            02966843
RTCTSYD8 EQU   BIT0               1=DISPLAY SAVE AREA TRACE(SA KEYWORD) 02967443
RTCTSYD9 EQU   BIT1               0=DISPLAY ENTIRE SAVE AREA            02967843
*                                 1=DISPLAY SAVE AREA HEADINGS(SAH KWD) 02968243
RTCTSYDA EQU   BIT2               1=DISPLAY REGISTERS                   02968643
RTCTSYDB EQU   BIT3               1=DISPLAY LINK PACK AREA              02969043
RTCTSYDC EQU   BIT4               1=DISPLAY JOB PACK AREA               02969443
RTCTSYDD EQU   BIT5               1=DISPLAY PSW                         02969843
RTCTSYDE EQU   BIT6               1=DISPLAY USER SUBPOOLS: 0-127        02970243
RTCTSYDF EQU   BIT7               RESERVED                              02970643
*                                                                       02970843
RTCTSUO4 DS    B                  (BYTE 1 OF OTHER OPTIONS:)            02971043
RTCTSUMG EQU   BIT6               SEE RTCTSUOV                 @G33CPHZ 02971443
RTCTSUOV EQU   BIT6               1=OVER MODE  0=ADD MODE      @G33CPHZ 02971743
RTCTISYU EQU   BIT7               IGNORE REQUESTS FOR SYSUDUMP @G33CPHE 02971843
*                                                                       02972043
RTCTSYO  DS    0BL4               **SYSMDUMP EFFECTIVE OPTIONS**        02972243
RTCTSD01 DS    B                  (BYTE 1 OF SDATA OPTIONS:)   @G33CPHE 02972643
RTCTSDS0 EQU   BIT0               1=DISPLAY NUCLEUS            @G33CPHE 02973043
RTCTSDS1 EQU   BIT1               1=DISPLAY SQA                @G33CPHE 02973443
RTCTSDS2 EQU   BIT2               1=DISPLAY LSQA               @G33CPHE 02973843
RTCTSDS3 EQU   BIT3               1=DISPLAY SWA                @G33CPHE 02974243
RTCTSDS4 EQU   BIT4               1=DISPLAY GTF OR SPV.TRACE   @G33CPHE 02974643
RTCTSDS5 EQU   BIT5               1=DISPLAY REGION             @G33CPHE 02975043
RTCTSDS6 EQU   BIT6               1=DISPLAY ACTIVE LPA FOR RGN @G33CPHE 02975243
RTCTSDS7 EQU   BIT7               1=DISPLAY CSA                @G33CPHE 02975843
RTCTSD02 DS    B                  RESERVED                              02976243
RTCTSD03 DS    B                  RESERVED                              02976643
*                                                                       02976843
RTCTSD04 DS    B                  (BYTE 1 OF OTHER OPTIONS:)            02977043
RTCTSMMG EQU   BIT6               SEE RTCTSMOV                 @G33CPHZ 02977443
RTCTSMOV EQU   BIT6               1=OVER MODE  0=ADD MODE      @G33CPHZ 02977743
RTCTISYM EQU   BIT7               IGNORE REQUESTS FOR SYSMDUMP @G33CPHE 02977843
*                                                                       02978243
RTCTSDO  DS    0BL4               **SVC DUMP EFFECTIVE OPTIONS**        02978643
RTCTSDOD DS    0BL2                                            @G33CPHZ 02978743
RTCTSDO1 DS    B                  (BYTE 1 OF SDATA OPTIONS:)            02978843
RTCTSDP0 EQU   BIT0               1=DISPLAY ALL PSA'S IN SYSTEM         02979443
RTCTSDP1 EQU   BIT1               1=DISPLAY CURRENT PSA                 02979843
RTCTSDP2 EQU   BIT2               1=DISPLAY NUCLEUS                     02980243
RTCTSDP3 EQU   BIT3               1=DISPLAY SQA                         02980643
RTCTSDP4 EQU   BIT4               1=DISPLAY LSQA                        02981043
RTCTSDP5 EQU   BIT5               1=DISPLAY REGION (PRIVATE AREA)       02981443
RTCTSDP6 EQU   BIT6               1=DISPLAY ACTIVE LPA MODULES FOR RGN  02981643
RTCTSDP7 EQU   BIT7               1=DISPLAY GTF OR SUPERVISOR TRACE     02982243
RTCTSDO2 DS    B -                                                      02982643
RTCTSDP8 EQU   BIT0               1=DISPLAY CSA                         02983043
RTCTSDP9 EQU   BIT1               1=DISPLAY SWA                         02983443
RTCTSDPA EQU   BIT2               1=DISPLAY SUMMARY SVC DUMP            02983843
*                                  (SUMDUMP)                   @G33CPHE 02984043
RTCTSDPB EQU   BIT3               1=NO SUMMARY DUMP DISPLAY    @G33CPHE 02984643
RTCTSDPC EQU   BIT4               1=NO ALL PSA DISPLAY         @G33CPHE 02985043
RTCTSDPD EQU   BIT5               1=NO SQA DISPLAY             @G33CPHE 02985443
*        EQU   BIT6               RESERVED                              02985843
*        EQU   BIT7               RESERVED                              02986243
*                                                                       02986443
RTCTSDO3 DS    B                  (BYTE 1 OF OTHER OPTIONS:)            02986643
RTCTSDPG EQU   BIT0               1 MEANS QUIESCE=YES SPECIFIED ON      02987043
*                                  CHNGDUMP COMMAND                     02987443
RTCTSDPH EQU   BIT1               1 MEANS QUIESCE=NO SPECIFIED ON       02987843
*                                  CHNGDUMP COMMAND                     02988243
*        EQU   BIT3               RESERVED                              02988643
*        EQU   BIT4               RESERVED                              02989043
*        EQU   BIT5               RESERVED                              02989443
*        EQU   BIT6               RESERVED                              02989843
*        EQU   BIT7               RESERVED                              02999643
RTCTSDO4 DS    B                  (BYTE 2 OF OTHER OPTIONS:)            03000643
RTCTSDMG EQU   BIT6               SEE RTCTSDOV                 @G33CPHZ 03001643
RTCTSDOV EQU   BIT6               1=OVER MODE  0=ADD MODE      @G33CPHZ 03001943
RTCTISVC EQU   BIT7               IGNORE REQUESTS FOR SVCDUMP  @G33CPHE 03002643
*                                                                       03003643
*********************************************************************** 03003743
* ADDITIONAL SVC DUMP INFORMATION AND FLAGS                           * 03003843
*********************************************************************** 03004243
RTCTASO  DS    0BL2               **ACTUAL SVC DUMP OPTIONS FROM MERGER 03004343
*                                 OF DEFAULTS AND SDUMP MACRO OPTIONS** 03004443
*                                                              @G33VPHZ 03004543
RTCTASOD DS    0BL2                                            @G33VPHZ 03004643
RTCTASO1 DS    B                  (BYTE 1 OF SDATA:)           @G33VPHZ 03004743
RTCTASAL EQU   BIT0               1=DISPLAY ALL PSA'S          @G33VPHZ 03004943
RTCTASPS EQU   BIT1               1=DISPLAY CURRENT PSA        @G33VPHZ 03005043
RTCTASNU EQU   BIT2               1=DISPLAY NUCLEUS            @G33VPHZ 03005143
RTCTASSQ EQU   BIT3               1=DISPLAY SQA                @G33VPHZ 03005243
RTCTASLS EQU   BIT4               1=DISPLAY LSQA               @G33VPHZ 03005343
RTCTASRG EQU   BIT5               1=DISPLAY REGION (RGN)       @G33VPHZ 03005443
RTCTASLP EQU   BIT6               1=DISPLAY ACTIVE LPA         @G33VPHZ 03005543
RTCTASTR EQU   BIT7               1=DISPLAY GTF OR SUPV TRACE  @G33VPHZ 03005743
RTCTASO2 DS    B                  (BYTE 2 OF SDATA:)           @G33VPHZ 03005843
RTCTASCS EQU   BIT0               1=DISPLAY CSA                @G33VPHZ 03005943
RTCTASSW EQU   BIT1               1=DISPLAY SWA                @G33VPHZ 03006043
RTCTASSU EQU   BIT2               1=DISPLAY SUMMARY DUMP       @G33VPHZ 03006143
RTCTASNS EQU   BIT3               1=DISPLAY NO SUMDUMP         @G33VPHZ 03006243
RTCTASNA EQU   BIT4               1=DISPLAY NO ALLPSA          @G33VPHZ 03006343
RTCTASNQ EQU   BIT5               1=DISPLAY NO SQA             @G33VPHZ 03006443
*        EQU   BIT6               RESERVED                     @G33VPHZ 03006543
*        EQU   BIT7               RESERVED                     @G33VPHZ 03006643
RTCTSDI  DS    0BL2               **SVC DUMP INFORMATION**              03007343
RTCTSDNA DS    B                  NUMBER ADDR SPACES TO DUMP   @G33VPHD 03007443
RTCTINDX DS    B                  INDEX FOR ASID LIST ENTRY    @G33VPHD 03007543
RTCTSDPR DS    XL1                PERMANENT RETURN CODE        @G33VPHD 03007643
RTCTZZZ2 DS    BL7                RESERVED                     @G33VPHZ 03007943
*                                                                       03008743
RTCTSDF  DS    0BL4               **SVC DUMP FLAGS**                    03009043
RTCTSDF1 DS    B                  (BYTE 1 OF FLAGS:)                    03009343
RTCTSDNO EQU   BIT0               NO SYS1.DUMP DATASETS DEFINED         03009643
RTCTSDND EQU   BIT1               SVC DUMP SET SYSTEM NON-DISP          03010143
RTCTSDSH EQU   BIT2               SCHEDULE DUMP (IEAVTSDX) REQUEST      03010643
*                                                              @G33VPHZ 03011943
RTCTSDMA EQU   BIT3               MULTIPLE ADDR SPACE DUMP IN PROGRESS  03012643
*                                                              @G33VPHD 03013143
RTCTSDEP EQU   BIT4               CALLER'S ECB POSTED                   03013643
RTCTSDSD EQU   BIT5               SUMMARY DUMP (IEAVTSSD) RECEIVED      03014643
*                                  CONTROL                     @G33VPHZ 03014943
RTCTSDRS EQU   BIT6               REAL STORAGE BUFFER MGR (IEAVPRSB)    03015643
*                                  RECEIVED CONTROL            @G33VPHZ 03015943
RTCTSDSC EQU   BIT7               SUMMARY DUMP (IEAVTSSD) COMPLETED     03016643
*                                  PROCESSING                  @G33VPHZ 03016843
*                                                                       03017043
RTCTSDF2 DS    B                  (BYTE 2 OF FLAGS:)           @G33VPHZ 03017643
RTCTSDMR EQU   BIT0               DUMP MASTER ADDR SPACE REQD  @G33VPHD 03018243
RTCTSDTQ EQU   BIT1               TQE WAS ENQUEUED BY SETDIE   @G33VPHD 03019643
RTCTSDDI EQU   BIT2               TIMER DIE RECEIVED CONTROL (SCHDIE IN 03020643
*                                  IEAVTSDX)                   @G33VPHD 03020943
RTCTSDLA EQU   BIT3               LAST ASID BEING PROCESSED    @G33VPHD 03021643
RTCTSDWF EQU   BIT4               SUMDUMP WRITER (IEAVTSDW) HAS         03022643
*                                  COMPLETED                   @G33VPHD 03022943
RTCTSDSL EQU   BIT5               DUMP DATA SET WAS SELECTED   @G33VPHD 03023643
RTCTSDRW EQU   BIT6               SUMDUMP RECORDS (FROM                 03024643
*                                  IEAVTSSD) TO WRITE          @G33VPHD 03024943
RTCTSDFX EQU   BIT7               ASYNC EXIT FLAG              @ZA27434 03025643
RTCTR2D2 DS    B                  (BYTE 3 OF FLAGS:)                    03025943
RTCTC3PO DS    B                  (BYTE 4 OF FLAGS:)                    03026443
RTCTSDF3 DS    0CL64              **ARRAY OF INFO FOR SVC DUMP OF       03028243
*                                   MULTIPLE ADDRESS SPACES**  @G33VPHD 03029043
RTCTSDAS DS    BL2                ASID OF THIS ADDRESS SPACE (A.S.)     03029643
*                                                              @G33VPHZ 03030243
RTCTSDF4 DS    B                  (BYTE 1 OF FLAGS:)           @G33VPHZ 03031643
RTCTSDSS EQU   BIT0               GSRB IN ADDR SPACE SCHEDULED @G33VPHZ 03032143
RTCTSDNC EQU   BIT1               NON-DISPATCHABLE SRB RECEIVED CONTROL 03033243
*                                                              @G33VPHZ 03033643
RTCTSDAN EQU   BIT2               ADDRESS SPACE SET NON-DISPATCHABLE    03034043
*                                                              @G33VPHZ 03034843
RTCTSDRM EQU   BIT3               DUMP TASK HAS BEEN RESUMED   @G33VPHZ 03035643
RTCTSDTR EQU   BIT4               DUMP TASK RUNNING            @G33VPHZ 03036243
RTCTSDEQ EQU   BIT5               DUMP TASK ENQUEUED ON DUMP RESOURCE   03036843
*                                                              @G33VPHZ 03037443
RTCTSDEN EQU   BIT6               SVC DUMP (IEAVAD00 OR IEAVTSDT) IS    03038643
*                                  PROCESSING THIS A.S.        @G33VPHZ 03038943
RTCTSDDO EQU   BIT7               DUMP ATTEMPTED FOR THIS ASID @G33VPHZ 03039643
RTCTSDF5 DS    B                  RESERVED                              03040643
RTCTSDEL EQU   *-RTCTSDF3         LENGTH OF ELEMENT OF ADDR SPACE ARRAY 03041643
*                                                              @G33VPHZ 03042143
         DS    CL60               REMAINING 15 ASID ENTRIES    @G33VPHZ 03042643
*                                                                       03043643
*********************************************************************** 03043743
* RTM INFORMATION                                                     * 03043843
*********************************************************************** 03043943
RTCTMRMQ DS    A                  ADDRESS OF QUEUE OF STORAGE AREAS     03044043
*                                 (USED FOR SYSMDUMPS) TO BE FREED      03044343
*                                 AT MEMTERM                   @G33SPHZ 03044443
RTCTZZZ4 DS    F                  RESERVED                     @G33VPHZ 03044543
RTCTZZZ5 DS    F                  RESERVED                     @G33VPHZ 03044643
*                                                                       03045443
RTCTLEN  EQU   *-RTCT             TOTAL LENGTH OF RTM CONTROL TABLE.    03045543
         MEND                                                           03045643
*        */                                                             03049043
*%RTCTPLS: ;                                                            03050002
*DECLARE                                                                03070043
*  1 RTCT BASED(CVTRTMCT),        /* CVT HAS THE ADDRESS OF THE RTCT    03150043
*                                                            @G33CPHE*/ 03160043
*    2 RTCTNAME   CHAR(4),        /* EBCDIC NAME IS C'RTCT'          */ 03170043
*   /*****************************************************************/ 03202043
*   /* SNAP/ABEND PARMLIB VALUES                                     */ 03204043
*   /*****************************************************************/ 03206043
*    2 RTCTPLIB CHAR(12),         /*                         @G33CPHE*/ 03210043
*     3 RTCTSAP    BIT(32),       /* *** SYSABEND INITIAL PARMLIB       03220043
*                                    VALUES *********************** */  03223043
*      4 RTCTSAP1   BIT(8),       /* (BYTE 1 OF SDATA OPTIONS:)     */  03230043
*        6 RTCTSAB0 BIT(1),       /* 1=DISPLAY NUCLEUS              */  03300043
*        6 RTCTSAB1 BIT(1),       /* 1=DISPLAY SQA                  */  03310043
*        6 RTCTSAB2 BIT(1),       /* 1=DISPLAY LSQA                 */  03320043
*        6 RTCTSAB3 BIT(1),       /* 1=DISPLAY SWA                  */  03330043
*        6 RTCTSAB4 BIT(1),       /* 1=DISPLAY GTF OR SUPERVISOR        03340043
*                                    TRACE                          */  03344002
*        6 RTCTSAB5 BIT(1),       /* 1=DISPLAY CONTROL BLOCKS FOR       03345043
*                                    TASK                           */  03348002
*        6 RTCTSAB6 BIT(1),       /* 1=DISPLAY ENQUEUE CNTRL BLKS   */  03348243
*        6 RTCTSAB7 BIT(1),      /* 1=FORMAT DATA MGMT C.B.S @G33CPHE*/ 03348843
*                                                                       03349143
*      4 RTCTSAP2 BIT(8),         /* (BYTE 2 OF SDATA OPTIONS:)      */ 03349843
*        6 RTCTSABG BIT(1),       /* 1=FORMAT IOS CNTRL BLKS @G33CPHE*/ 03350343
*        6 RTCTSABH BIT(1),       /* 1=FORMAT ERROR C.B.S    @G33CPHE*/ 03351143
*        6 *        BIT(6),       /* RESERVED                       */  03352843
*                                                                       03353343
*      4 RTCTSAP3 BIT(8),         /* (BYTE 1 OF PDATA OPTIONS:)     */  03353843
*        6 RTCTSAB8 BIT(1),       /* 1=DISPLAY SAVE AREA TRACE (SA) */  03354843
*        6 RTCTSAB9 BIT(1),       /* 0=DISPLAY ENTIRE SAVE AREA         03360043
*                                    1=DISPLAY SAVE AREA HEADINGS       03366043
*                                      (SAH KEYWORD)                */  03369043
*        6 RTCTSABA BIT(1),       /* 1=DISPLAY REGISTERS            */  03385043
*        6 RTCTSABB BIT(1),       /* 1=DISPLAY LINK PACK AREA       */  03390043
*        6 RTCTSABC BIT(1),       /* 1=DISPLAY JOB PACK AREA        */  03392043
*        6 RTCTSABD BIT(1),       /* 1=DISPLAY PSW                  */  03394043
*        6 RTCTSABE BIT(1),       /* 1=DISPLAY USER SUBPOOLS:           03396043
*                                    0-127                          */  03398402
*        6 RTCTSABF BIT(1),       /* RESERVED                       */  03398643
*      4 RTCTSAP4   BIT(8),       /* RESERVED                       */  03398943
*                                                                       03401943
*    3 RTCTSUP    BIT(32),        /* *** SYSUDUMP INITIAL PARMLIB       03408943
*                                    VALUES *********************** */  03411943
*      4 RTCTSUP1   BIT(8),       /* (BYTE 1 OF SDATA OPTIONS:)     */  03418943
*        6 RTCTSUD0 BIT(1),       /* 1=DISPLAY NUCLEUS              */  03450043
*        6 RTCTSUD1 BIT(1),       /* 1=DISPLAY SQA                  */  03460043
*        6 RTCTSUD2 BIT(1),       /* 1=DISPLAY LSQA                 */  03470043
*        6 RTCTSUD3 BIT(1),       /* 1=DISPLAY SWA                  */  03480043
*        6 RTCTSUD4 BIT(1),       /* 1=DISPLAY GTF OR SUPERVISOR        03490043
*                                    TRACE                          */  03494002
*        6 RTCTSUD5 BIT(1),       /* 1=DISPLAY CONTROL BLOCKS FOR       03495043
*                                    TASK                           */  03498002
*        6 RTCTSUD6 BIT(1),       /* 1=DISPLAY ENQUEUE CONTROL BLKS */  03498243
*        6 RTCTSUD7 BIT(1),       /* 1=FORMAT DATA MANAGEMENT CONTROL   03498843
*                                    BLOCKS                 @G33CPHE*/  03499043
*                                                                       03499243
*      4 RTCTSUP2 BIT(8),         /* (BYTE 2 OF SDATA OPTIONS:)     */  03499843
*        6 RTCTSUDG BIT(1),       /* 1=FORMAT IOS C.B.S     @G33CPHE*/  03500843
*        6 RTCTSUDH BIT(1),       /* 1=FORMAT ERROR C.B.S   @G33CPHE*/  03501443
*        6 *        BIT(6),       /* RESERVED                       */  03502843
*                                                                       03503343
*      4 RTCTSUP3   BIT(8),       /* (BYTE 1 OF PDATA OPTIONS:)     */  03503843
*        6 RTCTSUD8 BIT(1),       /* 1=DISPLAY SAVE AREA TRACE (SA) */  03504843
*        6 RTCTSUD9 BIT(1),       /* 0=DISPLAY ENTIRE SAVE AREA         03510043
*                                    1=DISPLAY SAVE AREA HEADINGS       03516043
*                                      (SAH KEYWORD)                */  03519043
*        6 RTCTSUDA BIT(1),       /* 1=DISPLAY REGISTERS            */  03535043
*        6 RTCTSUDB BIT(1),       /* 1=DISPLAY LINK PACK AREA       */  03540043
*        6 RTCTSUDC BIT(1),       /* 1=DISPLAY JOB PACK AREA        */  03542043
*        6 RTCTSUDD BIT(1),       /* 1=DISPLAY PSW                  */  03544043
*        6 RTCTSUDE BIT(1),       /* 1=DISPLAY USER SUBPOOLS:           03546043
*                                    0-127                          */  03548402
*        6 RTCTSUDF BIT(1),       /* RESERVED                       */  03548643
*      4 RTCTSUP4 BIT(8),         /* RESERVED                       */  03549843
*                                                                       03550843
*    3 RTCTSYD BIT(32),           /* *** SYSMDUMP INITIAL PARMLIB       03552843
*                                    VALUES *********************** */  03553443
*      4 RTCTSY01 BIT(8),         /* (BYTE 1 OF SDATA OPTIONS:)     */  03554843
*        6 RTCTSYM0  BIT(1),      /* 1=DISPLAY NUCLEUS      @G33CPHE*/  03556843
*        6 RTCTSYM1  BIT(1),      /* 1=DISPLAY SQA          @G33CPHE*/  03558843
*        6 RTCTSYM2  BIT(1),      /* 1=DISPLAY LSQA         @G33CPHE*/  03560843
*        6 RTCTSYM3  BIT(1),      /* 1=DISPLAY SWA          @G33CPHE*/  03562843
*                                                                       03564843
*        6 RTCTSYM4  BIT(1),      /* 1=DISPLAY GTF OR SUPERVISOR        03570843
*                                    TRACE                  @G33CPHE*/  03571843
*        6 RTCTSYM5  BIT(1),      /* 1=DISPLAY REGION       @G33CPHE*/  03573843
*        6 RTCTSYM6  BIT(1),      /* 1=DISPLAY LPA FOR RGN  @G33CPHE*/  03575843
*        6 RTCTSYM7  BIT(1),      /* 1=DISPLAY CSA          @G33CPHE*/  03577843
*      4 RTCTSY02 BIT(8),         /* RESERVED                       */  03582843
*      4 RTCTSY03 BIT(8),         /* RESERVED                       */  03584843
*      4 RTCTSY04 BIT(8),         /* RESERVED                       */  03588843
*   /****************************************************************/  03589843
*   /* RTM AND LOGREC RECORDING INFORMATION                         */  03590843
*   /****************************************************************/  03591843
*    2 RTCTYYY1   FIXED(15),      /* **RESERVED**           @G33CPHZ*/  03592843
*    2 RTCTSDID   FIXED(15),      /* ASID OF MEMORY IN WHICH SVC        04048043
*                                    DUMP IS OR WILL BE RUNNING.    */  04050002
*    2 RTCTMECB   CHAR(4),        /* ECB WAITED ON BY MEMORY            04100002
*                                    TERMINATION CONTROLLER.        */  04120043
*    2 RTCTFASB   PTR(31),        /* ADDRESS OF FIRST ASCB ON MEMORY    04200002
*                                    TERMINATION QUEUE.             */  04250002
*    2 RTCTRECB   CHAR(4),        /* ECB WAITED ON BY RECORDING TASK*/  04300002
*    2 RTCTRCB    PTR(31),        /* ADDRESS OF RECORDER'S BUFFER       04310043
*                                    CONTROL BLOCKS (CONTAIN LOGREC     04320043
*                                    ENTRIES).  THIS FIELD MUST         04330043
*                                    REMAIN AT OFFSET X'20' FOR         04340043
*                                    COMPATIBILITY.                 */  04350043
*    /***************************************************************/  04450002
*    /* THE FOLLOWING ARRAY CONTAINS TEN TWELVE-BYTE ENTRIES, ONE   */  04500002
*    /* FOR EACH OF SVC DUMP'S TEN DATA SETS.                       */  04550002
*    /***************************************************************/  04600002
*    2 RTCTSDDS (10) CHAR(12) BDY(WORD), /* TEN 12-BYTE ELEMENTS.   */  04650002
*      3 RTCTDSNM   CHAR(3),      /* NAME OF THIS DATA SET........      04670043
*                                    TAPE- EBCDIC UNIT ADDRESS,         04750002
*                                    DISK- EBCDIC 00-09 WITH            04800002
*                                          TRAILING BLANK.          */  04820043
*      3 RTCTFLG    BIT(8),       /* FLAG BYTE...                   */  04840043
*        4 RTCTDSST   BIT(1),     /* 1-D.S. FULL, 0-D.S. AVAILABLE. */  04905043
*        4 RTCTDSUS   BIT(1),     /* 1-D.S. USED, 0-D.S. NOT USED.  */  04920002
*        4 RTCTDETP   BIT(1),     /* 0-TAPE D.S., 1-DASD D.S.       */  04922002
*        4 *          BIT(5),     /* RESERVED                       */  04930043
*      3 RTCTDCB    PTR(31),      /* DEB ADDRESS FOR THIS DATA SET. */  04950002
*      3 RTCTDEV    CHAR(4),      /* DEVICE TYPE CODE FOR DATA SET.     05000002
*                                   *** END OF TABLE *************  */  05020043
*    2 RTCTSDPL   PTR(31),        /* ADDRESS OF SVC DUMP PARAMETER      05100002
*                                    LIST FOR CROSS-MEMORY REQUEST. */  05120043
*      3 RTCTSDIP BIT(1),         /* HIGH ORDER BIT IS SVC DUMP IN      05150043
*                                    PROGRESS FLAG.         @G33VPHZ*/  05160043
*    2 RTCTFMT PTR(31),           /* USED FOR TESTING RTM MODULES   */  05170043
*    2 RTCTMLCK FIXED(31),        /*  LOCK FOR MEM TERM POST SRB    */  05409602
*    2 RTCTMSRB PTR(31),          /*  PTR TO MEM TERM'S POST SRB    */  05419602
*    2 RTCTTEST PTR(31),          /* USED FOR TESTING RTM MODULES   */  05429602
*    2 RTCTRFLG   BIT(8),         /* RECORDING FLAGS                */  05432002
*      3 RTCTRTER BIT(1),         /* RECORDING TEMPORARY ERROR      */  05434002
*      3 RTCTRPER BIT(1),         /* RECORDING PERMANENT ERROR      */  05436002
*      3 RTCTRSTF BIT(1),         /* INITIAL STF ENTRY              */  05436402
*      3 * BIT(5),                /* RESERVED                       */  05436802
*    2 RTCTXXX1 CHAR(1),          /* RESERVED                       */  05437441
*    2 RTCTSEQ# FIXED(16),        /* ERRORID SEQUENCE NBR   @G17EP5W*/  05437743
*    2 RTCTSDSW PTR(31),          /* ADDR OF SUMMARY SVC DUMP(SUMDUMP)  05440043
*                                    WORK AREA (IHASMWK)    @G33VPHZ*/  05440643
*    2 RTCTTDCB (9) PTR(31),      /* TAPE DCB FOR SVC DUMP          */  05442002
*    2 RTCTSDWK PTR(31),          /* ADDRESS OF SVC DUMP WORK AREA  */  05443041
*    2 RTCTERID CHAR(10),         /*ERRORID FOR THIS FAILURE'S SVC      05443543
*                                   DUMP HEADER             @G17EP5W*/  05443743
*      3 RTCTESEQ CHAR(2),        /*ERRORID SEQUENCE NUMBER @G17EP5W*/  05444243
*      3 RTCTECPU CHAR(2),        /*ERRORID LOGICAL CPU ID  @G17EP5W*/  05444343
*      3 RTCTEASD CHAR(2),        /*ERRORID ASID            @G17EP5W*/  05444643
*      3 RTCTETIM CHAR(4),        /*ERRORID TIME STAMP      @G17EP5W*/  05444743
*    2 RTCTXXX2 CHAR(2),          /*RESERVED                @G17EP5W*/  05444843
*   /****************************************************************/  05444943
*   /* DEFAULT DUMP OPTIONS, WHICH CAN BE CHANGED BY THE CHNGDUMP   */  05445043
*   /* OPERATOR COMMAND                                             */  05445443
*   /****************************************************************/  05445543
*    2 RTCTOPT CHAR(16),          /*                        @G33CPHE*/  05445643
*      3 RTCTSAO    BIT(32),      /* SYSABEND EFFECTIVE OPTIONS     */  05445943
*      3 RTCTSUO    BIT(32),      /* SYSUDUMP EFFECTIVE OPTIONS     */  05446043
*      3 RTCTSYO    BIT(32),      /* SYSMDUMP EFFECTIVE OPTIONS     */  05446143
*      3 RTCTSDO    BIT(32),      /* SVC DUMP EFFECTIVE OPTIONS     */  05446243
*   /****************************************************************/  05446343
*   /* ADDITIONAL SVC DUMP INFORMATION AND FLAGS                    */  05446443
*   /****************************************************************/  05447143
*   2 RTCTASO BIT(16),            /* ACTUAL SVC DUMP OPTIONS FROM       05447243
*                                    MERGER OF DEFAULTS AND SDUMP       05447343
*                                    MACRO OPTIONS *******   @G33VPHZ*/ 05447443
*      4 RTCTASO1 BIT(8),         /* (BYTE 1 OF SDATA:)      @G33VPHZ*/ 05448143
*        6 RTCTASAL BIT(1),       /* 1=DISPLAY ALL PSA'S     @G33VPHZ*/ 05448243
*        6 RTCTASPS BIT(1),       /* 1=DISPLAY CURRENT PSA   @G33VPHZ*/ 05448343
*        6 RTCTASNU BIT(1),       /* 1=DISPLAY NUCLEUS       @G33VPHZ*/ 05448443
*        6 RTCTASSQ BIT(1),       /* 1=DISPLAY SQA           @G33VPHZ*/ 05448543
*        6 RTCTASLS BIT(1),       /* 1=DISPLAY LSQA          @G33VPHZ*/ 05448643
*        6 RTCTASRG BIT(1),       /* 1=DISPLAY REGION (RGN)  @G33VPHZ*/ 05448743
*        6 RTCTASLP BIT(1),       /* 1=DISPLAY ACTIVE LPA    @G33VPHZ*/ 05448843
*        6 RTCTASTR BIT(1),       /* 1=DISPLAY TRACE         @G33VPHZ*/ 05448943
*                                                                       05449043
*      4 RTCTASO2 BIT(8),         /* (BYTE 2 OF SDATA:)      @G33VPHZ*/ 05450443
*        6 RTCTASCS BIT(1),       /* 1=DISPLAY CSA           @G33VPHZ*/ 05450543
*        6 RTCTASSW BIT(1),       /* 1=DISPLAY SWA           @G33VPHZ*/ 05450643
*        6 RTCTASSU BIT(1),       /* 1=DISPLAY SUMMARY DUMP  @G33VPHZ*/ 05450743
*        6 RTCTASNS BIT(1),       /* 1=DISPLAY NO SUMDUMP    @G33VPHZ*/ 05450843
*        6 RTCTASNA BIT(1),       /* 1=DISPLAY NO ALLPSA     @G33VPHZ*/ 05450943
*        6 RTCTASNQ BIT(1),       /* 1=DISPLAY NO SQA        @G33VPHZ*/ 05451043
*        6 *        BIT(2),       /* RESERVED                @G33VPHZ*/ 05451143
*                                                                       05451643
*    2 RTCTSDI,                   /* *** SVC DUMP INFORMATION ***    */ 05451743
*      3 RTCTSDNA BIT(8),         /* NUMBER OF ADDRESS SPACES TO        05451943
*                                    DUMP                    @G33VPHD*/ 05452043
*      3 RTCTINDX BIT(8),         /* INDEX FOR ASID LIST ENTRY          05452243
*                                                            @G33VPHD*/ 05452343
*      3 RTCTSDPR FIXED(8),       /* PERMANENT RETURN CODE   @G33VPHD*/ 05452443
*    2 RTCTZZZ2   CHAR(7),        /* RESERVED                @G33VPHZ*/ 05452543
*                                                                       05452843
*    2 RTCTSDF    BIT(32),        /* *** SVC DUMP FLAGS ***  @G33VPHD*/ 05452943
*      3 RTCTSDF1   BIT(8),       /* (BYTE 1 OF FLAGS:)      @G33VPHD*/ 05453143
*        4 RTCTSDNO   BIT(1),     /* NO SYS1.DUMP D.S. DEFINED          05453243
*                                                            @G33VPHD*/ 05453343
*        4 RTCTSDND   BIT(1),     /* SVC DUMP SET SYSTEM                05453643
*                                    NONDISPATCHABLE         @G33VPHD*/ 05453743
*        4 RTCTSDSH   BIT(1),     /* SCHEDULE DUMP (IEAVTSDX)           05453943
*                                    REQUEST                 @G33VPHD*/ 05454043
*        4 RTCTSDMA BIT(1),       /* MULTIPLE ADDRESS SPACE DUMP IN     05454343
*                                    PROCESS                 @G33VPHD*/ 05454443
*        4 RTCTSDEP BIT(1),       /* CALLER'S ECB POSTED     @G33VPHD*/ 05454543
*        4 RTCTSDSD BIT(1),       /* SUMMARY DUMP (IEAVTSSD) RECEIVED   05454843
*                                    CONTROL                 @G33VPHD*/ 05454943
*        4 RTCTSDRS BIT(1),       /* REAL STORAGE BUFFER MGR (IEAVPRSB) 05455043
*                                    RECEIVED CONTROL        @G33VPHD*/ 05455143
*        4 RTCTSDSC BIT(1),       /* SUMMARY DUMP (IEAVTSSD) COMPLETED  05455443
*                                    PROCESSING              @G33VPHD*/ 05455543
*                                                                       05456143
*      3 RTCTSDF2 BIT(8),         /* (BYTE 2 OF FLAGS:)      @G33VPHD*/ 05456243
*        4 RTCTSDMR BIT(1),       /* DUMP OF MASTER A.S. REQ @G33VPHD*/ 05456443
*        4 RTCTSDTQ BIT(1),       /* TQE WAS ENQD BY SETDIE  @G33VPHD*/ 05459443
*        4 RTCTSDDI BIT(1),       /* TIMER DIE RECEIVED CONTROL         05462443
*                                    (SCHDIE IN IEAVTSDX)    @G33VPHD*/ 05463443
*        4 RTCTSDLA BIT(1),       /* LAST ASID PROCESSING    @G33VPHD*/ 05465443
*        4 RTCTSDWF BIT(1),       /* SUMDUMP WRITER (IEAVTSDW)          05468443
*                                    COMPLETED               @G33VPHD*/ 05469443
*        4 RTCTSDSL BIT(1),       /* SDUMP SELECTED DUMP DS  @G33VPHD*/ 05471443
*        4 RTCTSDRW BIT(1),       /* SUMDUMP RECORDS (FROM              05472443
*                                    IEAVTSSD) TO WRITE      @G33VPHD*/ 05473043
*        4 RTCTSDFX BIT(1),       /* ASYNC EXIT FLAG         @ZA27434*/ 05474443
*      3 RTCTR2D2 BIT(8),         /* (BYTE 3 OF FLAGS:)              */ 05484643
*        4 * BIT(8),              /* RESERVED                        */ 05484743
*      3 RTCTC3PO BIT(8),         /* (BYTE 4 OF FLAGS:)              */ 05484843
*        4 * BIT(8),              /* RESERVED                        */ 05484943
*    /****************************************************************/ 05485343
*    /* ARRAY OF INFORMATION FOR SVC DUMP OF MULTIPLE ADDRESS SPACES */ 05485443
*    /****************************************************************/ 05485543
*    2 RTCTSDF3(16) BIT(32),      /*                         @G33VPHD*/ 05485643
*      3 RTCTSDAS BIT(16),        /* ASID OF THIS ADDRESS               05485743
*                                    SPACE                   @G33VPHZ*/ 05485843
*      3 RTCTSDF4 BIT(8),         /* (BYTE 1 OF FLAGS:)      @G33VPHD*/ 05485943
*        4 RTCTSDSS BIT(1),       /* GSRB IN ADDR SPACE SCHEDULED       05486243
*                                                            @G33VPHD*/ 05486543
*        4 RTCTSDNC BIT(1),       /* NON-DISPATCHABLE SRB RECEIVED      05487143
*                                     CONTROL                @G33VPHD*/ 05487243
*        4 RTCTSDAN BIT(1),       /* ADDR SPACE SET NON-DISPATCHABLE    05487643
*                                                            @G33VPHD*/ 05487743
*        4 RTCTSDRM BIT(1),       /* DUMP TASK HAS BEEN RESUMED         05488143
*                                                            @G33VPHD*/ 05488243
*        4 RTCTSDTR BIT(1),       /* DUMP TASK RUNNING       @G33VPHD*/ 05488643
*        4 RTCTSDEQ BIT(1),       /* DUMP TASK ENQUEUED ON SDUMP        05489043
*                                    RESOURCE                @G33VPHD*/ 05489443
*        4 RTCTSDEN BIT(1),       /* SVC DUMP (IEAVAD00 OR IEAVTSDT)    05490343
*                                    IS PROCESSING THIS ADDRESS SPACE   05490443
*                                    ENTRY                   @G33VPHD*/ 05490543
*        4 RTCTSDDO BIT(1),       /* DUMP ATTEMPTED FOR THIS ASID       05490743
*                                                            @G33VPHD*/ 05491043
*      3 RTCTSDF5   BIT(8),       /* RESERVED                @G33VPHD*/ 05491743
*   /*****************************************************************/ 05491843
*   /* RTM INFORMATION                                               */ 05491943
*   /*****************************************************************/ 05492043
*    2 RTCTMRMQ PTR(31),          /* ADDRESS OF QUEUE OF STORAGE AREAS  05492143
*                                    (FOR SYSMDUMPS) TO BE FREED AT     05492343
*                                    MEMTERM                 @G33SPHZ*/ 05492443
*    2 RTCTZZZ4 PTR(31),          /* RESERVED                @G33VPHZ*/ 05492543
*    2 RTCTZZZ5 PTR(31);          /* RESERVED                @G33VPHZ*/ 05493343
*   /*****************************************************************/ 05493543
*   /* THE FOLLOWING MAPS THE BITS OF THE DEFAULT (EFFECTIVE)        */ 05493743
*   /* DUMP OPTION WORDS (RTCTOPT) FROM IPL AND CHNGDUMP COMMAND     */ 05493943
*   /*****************************************************************/ 05494543
*DECLARE                                                                05494743
*  1 RTCTMOPT BASED(ADDR(RTCTOPT)),                      /*  @G33CPHE*/ 05494943
*    2 RTCTMSAO   BIT(32),        /* *** SYSABEND EFFECTIVE OPTIONS     05495243
*                                    *****************************   */ 05495343
*     3 RTCTSASD BIT(16),         /* SDATA BYTES                     */ 05495643
*      4 RTCTSAO1   BIT(8),       /* (BYTE 1 OF SDATA OPTIONS:)      */ 05495743
*        6 RTCTSAD0 BIT(1),       /* 1=DISPLAY NUCLEUS               */ 05495843
*        6 RTCTSAD1 BIT(1),       /* 1=DISPLAY SQA                   */ 05496043
*        6 RTCTSAD2 BIT(1),       /* 1=DISPLAY LSQA                  */ 05496243
*        6 RTCTSAD3 BIT(1),       /* 1=DISPLAY SWA                   */ 05496443
*        6 RTCTSAD4 BIT(1),       /* 1=DISPLAY GTF OR SUPERVISOR        05497343
*                                    TRACE                           */ 05497643
*        6 RTCTSAD5 BIT(1),       /* 1=DISPLAY CONTROL BLOCKS FOR       05507643
*                                    TASK                            */ 05517643
*        6 RTCTSAD6 BIT(1),       /* 1=DISPLAY ENQUEUE CONTROL BLKS  */ 05527643
*        6 RTCTSAD7 BIT(1),       /* 1=FORMAT DATA MANAGEMENT CONTROL   05547643
*                                    BLOCKS                  @G33CPHE*/ 05567643
*      4 RTCTSAO2 BIT(8),         /* (BYTE 2 OF SDATA OPTIONS:)      */ 05587643
*        6 RTCTSADG BIT(1),       /* 1=FORMAT IOS C.B.S      @G33CPHE*/ 05639643
*        6 RTCTSADH BIT(1),       /* 1=FORMAT ERROR C.B.S    @G33CPHE*/ 05649643
*        6 *        BIT(6),       /* RESERVED                        */ 05679643
*     3 RTCTSAPD BIT(16),                                               05749643
*      4 RTCTSAO3   BIT(8),       /* (BYTE 1 OF PDATA OPTIONS:)      */ 05779643
*        6 RTCTSAD8 BIT(1),       /* 1=DISPLAY SAVE AREA TRACE (SA)  */ 05829643
*        6 RTCTSAD9 BIT(1),       /* 0=DISPLAY ENTIRE SAVE AREA         05929643
*                                    1=DISPLAY SAVE AREA HEADINGS       05999643
*                                      (SAH KEYWORD)                 */ 06009643
*        6 RTCTSADA BIT(1),       /* 1=DISPLAY REGISTERS             */ 06029643
*        6 RTCTSADB BIT(1),       /* 1=DISPLAY LINK PACK AREA        */ 06059643
*        6 RTCTSADC BIT(1),       /* 1=DISPLAY JOB PACK AREA         */ 06089643
*        6 RTCTSADD BIT(1),       /* 1=DISPLAY PSW                   */ 06119643
*        6 RTCTSADE BIT(1),       /* 1=DISPLAY USER SUBPOOLS:           06209643
*                                    0-127                           */ 06299643
*        6 RTCTSADF BIT(1),       /* RESERVED                        */ 06329643
*      4 RTCTSAO4 BIT(8),                                               06389643
*        6 * BIT(6),              /* (BYTE 1 OF OTHER OPTIONS:)      */ 06429643
*        6 RTCTSAMG BIT(1),       /* SEE RTCTSAOV            @G33CPHZ*/ 06449643
*          7 RTCTSAOV BIT(1),     /* 1=OVER MODE  0=ADD MODE @G33CPHZ*/ 06469643
*        6 RTCTISAB BIT(1),  /* IGNORE REQUESTS FOR SYSABEND @G33CPHE*/ 06489643
*                                                                       06549643
*    2 RTCTMSUO   BIT(32),        /* *** SYSUDUMP EFFECTIVE OPTIONS     06599643
*                                    *****************************   */ 06609643
*     3 RTCTSUSD BIT(16),         /* SDATA BYTES             @G33CPHE*/ 06629643
*      4 RTCTSUO1   BIT(8),       /* (BYTE 1 OF SDATA OPTIONS:)      */ 06649643
*        6 RTCTSYD0 BIT(1),       /* 1=DISPLAY NUCLEUS               */ 06689643
*        6 RTCTSYD1 BIT(1),       /* 1=DISPLAY SQA                   */ 06719643
*        6 RTCTSYD2 BIT(1),       /* 1=DISPLAY LSQA                  */ 06749643
*        6 RTCTSYD3 BIT(1),       /* 1=DISPLAY SWA                   */ 06779643
*        6 RTCTSYD4 BIT(1),       /* 1=DISPLAY GTF OR SUPERVISOR        06859643
*                                    TRACE                           */ 06949643
*        6 RTCTSYD5 BIT(1),       /* 1=DISPLAY CONTROL BLOCKS FOR       06999643
*                                    TASK                            */ 07049643
*        6 RTCTSYD6 BIT(1),       /* 1=DISPLAY ENQUEUE CNTRL BLKS    */ 07069643
*        6 RTCTSYD7 BIT(1),       /* 1=FORMAT DATA MANAGEMENT CONTROL   07129643
*                                    BLOCKS                 @G33CPHE */ 07149643
*      4 RTCTSUO2 BIT(8),         /* (BYTE 2 OF SDATA OPTIONS:)      */ 07169643
*        6 RTCTSYDG BIT(1),       /* 1=FORMAT IOS C.B.S     @G33CPHE */ 07209643
*        6 RTCTSYDH BIT(1),       /* 1=FORMAT ERROR C.B.S   @G33CPHE */ 07239643
*        6 * BIT(6),              /* RESERVED                        */ 07269643
*     3 RTCTSUPD BIT(16),         /*                         @G33CPHE*/ 07299643
*      4 RTCTSUO3   BIT(8),       /* (BYTE 1 OF PDATA OPTIONS:)      */ 07329643
*        6 RTCTSYD8 BIT(1),       /* 1=DISPLAY SAVE AREA TRACE (SA)  */ 07359643
*        6 RTCTSYD9 BIT(1),       /* 0=DISPLAY ENTIRE SAVE AREA         07449643
*                                    1=DISPLAY SAVE AREA HEADINGS       07459643
*                                    (SAH KEYWORD)                   */ 07465643
*        6 RTCTSYDA BIT(1),       /* 1=DISPLAY REGISTERS             */ 07479643
*        6 RTCTSYDB BIT(1),       /* 1=DISPLAY LINK PACK AREA        */ 07499643
*        6 RTCTSYDC BIT(1),       /* 1=DISPLAY JOB PACK AREA         */ 07519643
*        6 RTCTSYDD BIT(1),       /* 1=DISPLAY PSW                   */ 07539643
*        6 RTCTSYDE BIT(1),       /* 1=DISPLAY USER SUBPOOLS:           07599643
*                                    0-127                           */ 07649643
*        6 RTCTSYDF BIT(1),       /* RESERVED                        */ 07679643
*      4 RTCTSUO4 BIT(8),                                               07749643
*        6 * BIT(6),              /* (BYTE 1 OF OTHER DATA:)         */ 07799643
*        6 RTCTSUMG BIT(1),       /* SEE RTCTSUOV            @G33CPHZ*/ 07819643
*          7 RTCTSUOV BIT(1),     /* 1=OVER MODE  0=ADD MODE @G33CPHZ*/ 07849643
*        6 RTCTISYU BIT(1),  /* IGNORE REQUESTS FOR SYSUDUMP @G33CPHE*/ 07879643
*                                                                       07949643
*    2 RTCTMSYO BIT(32),          /* *** SYSMDUMP EFFECTIVE OPTIONS     07999643
*                                    *****************************   */ 08009643
*      3 RTCTSD01 BIT(8),         /* (BYTE 1 OF SDATA OPTIONS:)      */ 08039643
*        4 RTCTSDS0 BIT(1),       /* 1=DISPLAY NUCLEUS       @G33CPHE*/ 08079643
*        4 RTCTSDS1 BIT(1),       /* 1=DISPLAY SQA           @G33CPHE*/ 08119643
*        4 RTCTSDS2 BIT(1),       /* 1=DISPLAY LSQA          @G33CPHE*/ 08159643
*        4 RTCTSDS3 BIT(1),       /* 1=DISPLAY SWA           @G33CPHE*/ 08199643
*        4 RTCTSDS4 BIT(1),       /* 1=DISPLAY GTF OR SUPERVISOR TRACE  08299643
*                                                            @G33CPHE*/ 08349643
*        4 RTCTSDS5 BIT(1),       /* 1=DISPLAY REGION        @G33CPHE*/ 08389643
*        4 RTCTSDS6 BIT(1),       /* 1=DISPLAY LPA FOR RGN   @G33CPHE*/ 08409643
*        4 RTCTSDS7 BIT(1),       /* 1=DISPLAY CSA           @G33CPHE*/ 08469643
*      3 RTCTSD02 BIT(8),         /* RESERVED                        */ 08509643
*      3 RTCTSD03 BIT(8),         /* RESERVED                        */ 08549643
*      3 RTCTSD04 BIT(8),                                               08649643
*        4 * BIT(6),              /* (BYTE 1 OF OTHER DATA:)         */ 08699643
*        4 RTCTSMMG BIT(1),       /* SEE RTCTSMOV            @G33CPHZ*/ 08719643
*          5 RTCTSMOV BIT(1),     /* 1=OVER MODE  0=ADD MODE @G33CPHZ*/ 08749643
*        4 RTCTISYM BIT(1),  /* IGNORE REQUESTS FOR SYSMDUMP @G33CPHE*/ 08779643
*                                                                       08849643
*    2 RTCTMSDO   BIT(32),        /* *** SVC DUMP EFFECTIVE OPTIONS     08899643
*                                   (ONLY SUPPLIED BY CHNGDUMP          08909643
*                                   COMMAND) ************    @G33CPHZ*/ 08919643
*      3 RTCTSDOD BIT(16),        /* SDATA BYTES             @G33CPHZ*/ 08929643
*        4 RTCTSDO1   BIT(8),     /* (BYTE 1 OF SDATA OPTIONS:)      */ 08949643
*          6 RTCTSDP0 BIT(1),     /* 1=DISPLAY ALL PSA'S IN             08979643
*                                    SYSTEM                          */ 09049643
*          6 RTCTSDP1 BIT(1),     /* 1=DISPLAY CURRENT PSA           */ 09089643
*          6 RTCTSDP2 BIT(1),     /* 1=DISPLAY NUCLEUS               */ 09129643
*          6 RTCTSDP3 BIT(1),     /* 1=DISPLAY SQA                   */ 09169643
*          6 RTCTSDP4 BIT(1),     /* 1=DISPLAY LSQA                  */ 09209643
*          6 RTCTSDP5 BIT(1),     /* 1=DISPLAY REGION (PRIVATE          09249643
*                                    AREA)                           */ 09349643
*          6 RTCTSDP6 BIT(1),     /* 1=DISPLAY ACTIVE LPA MODULES       09399643
*                                    FOR REGION                      */ 09429643
*          6 RTCTSDP7 BIT(1),     /* 1=DISPLAY GTF OR SUPERVISOR        09459643
*                                    TRACE                           */ 09549643
*                                                                       09599643
*        4 RTCTSDO2   BIT(8),     /* (BYTE 2 OF SDATA OPTIONS:)      */ 09649643
*          6 RTCTSDP8 BIT(1),     /* 1=DISPLAY CSA                   */ 09669643
*          6 RTCTSDP9 BIT(1),     /* 1=DISPLAY SWA                   */ 09689643
*          6 RTCTSDPA BIT(1),     /* 1=DISPLAY SUMMARY SVC DUMP         09709643
*                                    (SUMDUMP)               @G33CPHE*/ 09769643
*          6 RTCTSDPB BIT(1),     /* 1=NO SUMMARY DUMP DISPLAY          09849643
*                                                            @G33CPHE*/ 09899643
*          6 RTCTSDPC BIT(1),     /* 1=NO ALL PSA DISPLAY    @G33CPHE*/ 09939643
*          6 RTCTSDPD BIT(1),     /* 1=NO SQA DISPLAY        @G33CPHE*/ 09979643
*          6 *        BIT(2),     /* RESERVED                        */ 10019643
*                                                                       10099643
*      3 RTCTSDO3 BIT(8),         /* (BYTE 1 OF OTHER OPTIONS:)      */ 10149643
*        4 RTCTSDPG BIT(1),       /* 1 MEANS QUIESCE=YES SPECIFIED ON   10199643
*                                    CHNGDUMP COMMAND                */ 10249643
*        4 RTCTSDPH BIT(1),       /* 1 MEANS QUIESCE=NO SPECIFIED ON    10299643
*                                    CHNGDUMP COMMAND                */ 10349643
*        4 *        BIT(6),       /* RESERVED                        */ 10379643
*      3 RTCTSDO4 BIT(8),         /* (BYTE 2 OF OTHER OPTIONS:)      */ 10409643
*        4 * BIT(6),              /* RESERVED                        */ 10449643
*        4 RTCTSDMG BIT(1),       /* SEE RTCTSDOV            @G33CPHZ*/ 10549643
*          5 RTCTSDOV BIT(1),     /* 1=OVER MODE  0=ADD MODE @G33CPHZ*/ 10559643
*        4 RTCTISVC BIT(1); /* IGNORE REQUESTS FOR SVC DUMPS @G33CPHE*/ 10599643
*  %RTCTLEN='LENGTH(RTCT)';       /* TOTAL LENGTH OF RTCT            */ 10649643
./  ADD  SSI=70060425,NAME=IHASCE
*/*******************************************************************/  00020041
*/*   IHASCE                                                        */  00050041
*/*           MACCOMP - SC1CM                                       */  00130041
*/*           MACSTAT - @G17SP2F                                    */  00170041
*/*                     @G33NPHE    SLIP NODUMP 12/30/76            */  00190033
*/*           MACMEAN - SCE MEANS SLIP CONTROL ELEMENT              */  00210041
*/*     THIS MACRO MAPS THE SCE. THE SCE, WITH THE VARIABLE AREA    */  00250041
*/*     (SEE IHASCVA), IS THE INTERNAL REPRESENTATION OF THE SLIP   */  00330041
*/*     OPERATOR COMMAND.  SCE'S ARE MATCHED AGAINST SYSTEM         */  00370041
*/*     CONDITIONS IN ORDER TO DETERMINE SLIP TRAP QUALIFICATION.   */  00410041
*/*     THE MOST RECENTLY SET TRAP (SCE) IS MATCHED FIRST. STORAGE  */  00450041
*/*     IS FROM FIXED SQA (SP245). IEECB905 GETS, BUILDS, AND       */  00480041
*/*     FREES THE SCE.                                              */  00560041
*/*******************************************************************/  00580041
     DCL 1 SCE BASED(SCEPTR) BDY(DWORD),                                00800041
           2 SCECBID    CHAR(4),       /* CONTROL BLOCK ID = SCE     */ 00850041
           2 *          CHAR(4),       /* RESERVED                   */ 00860041
         2 SCECTRFW  CHAR(8) BDY(WORD),/* TO DELETE AN ENTRY,MUST CDS*/ 00870041
             3 SCECTR   PTR(31),       /* PROCESSOR SERIALIZATION CTR*/ 00900041
             3 SCEFWD   PTR(31),       /* FORWARD SCE CHAIN PRT      */ 00950041
           2 SCEBKWD    PTR(31),       /* BACKWARD SCE CHAIN PTR     */ 01000041
           2 SCEFLG1    BIT(8),        /* FLAGS                      */ 01050041
             3 SCEDSABL BIT(1),        /* OFF=ENABLED,ON=DISABLED    */ 01100041
             3 SCEDELP  BIT(1),        /* DELETE IS PENDG ON PREV SCE*/ 01120041
             3 SCEEVERY BIT(1),        /* OFF=MODE ANY,ON=MODE EVERY */ 01150041
             3 SCESVCD  BIT(1),        /* ACTION IS SVC DUMP         */ 01200041
             3 SCEWAIT  BIT(1),        /* ACTION IS WAIT             */ 01250041
             3 SCEIGNOR BIT(1),        /* ACTION IS IGNORE           */ 01300041
             3 SCENODMP BIT(1),        /* ACTION IS NODUMP   @G33NPHE*/ 01310033
             3 *        BIT(1),        /* RESERVED           @G33NPHE*/ 01320033
           2 SCERRTYP   BIT(8),        /* ERRTYP FLAGS               */ 01400041
             3 SCEMACH  BIT(1),        /* MACHINE CHECK              */ 01420041
             3 SCEPROG  BIT(1),        /* PROGRAM CHECK INTERRUPT    */ 01450041
             3 SCEREST  BIT(1),        /* RESTART INTERRUPT          */ 01500041
             3 SCEABEND BIT(1),        /* ABEND                      */ 01505041
             3 SCEMEMTM BIT(1),        /* MEMORY TERMINATION         */ 01510041
             3 SCESVCER BIT(1),        /* SVC ERROR                  */ 01550041
             3 SCEDAT   BIT(1),        /* DAT ERROR                  */ 01570041
             3 SCEPGIO  BIT(1),        /* PAGING I/O ERROR           */ 01600041
           2 SCEMODE    BIT(16),       /* MODE FLAGS                 */ 01850041
             3 SCEMODE1 BIT(8),        /* FIRST EIGHT                */ 01900041
               4 SCESUPR  BIT(1),      /* SUPERVISOR CONTROL MODE    */ 01908041
               4 SCEDIS   BIT(1),      /* DISABLED                   */ 01916041
               4 SCEGLSP  BIT(1),      /* GLOBAL SPIN LOCK           */ 01924041
               4 SCEGLSD  BIT(1),      /* GLOBAL SUSPEND LOCK        */ 01932041
               4 SCELLOC  BIT(1),      /* LOCAL LOCK                 */ 01940041
               4 SCETYP1  BIT(1),      /* TYPE 1 SVC                 */ 01950041
               4 SCESRB   BIT(1),      /* SRB                        */ 02000041
               4 SCETCB   BIT(1),      /* TCB                        */ 02050041
             3 SCEMODE2 BIT(8),        /* SECOND EIGHT               */ 02350041
               4 SCERECV  BIT(1),      /* RECOVERY IN CONTROL        */ 02360041
               4 SCEPP    BIT(1),      /* PROBLEM PROGRAM STATE      */ 02370041
               4 SCESUPER BIT(1),      /* SUPERVISOR STATE           */ 02380041
               4 SCESKEY  BIT(1),      /* SYSTEM KEY                 */ 02400041
               4 SCEPKEY  BIT(1),      /* PROBLEM PROGRAM KEY        */ 02450041
               4 SCEGLOC  BIT(1),      /* ANY GLOBAL LOCK            */ 02500041
               4 SCELOCK  BIT(1),      /* ANY LOCK                   */ 02550041
               4 *        BIT(1),      /* RESERVED                   */ 02750041
           2 *          CHAR(3),       /* RESERVED                   */ 02800041
           2 SCEUCMP    CHAR(1),       /* CONSOLE ID OF ISSUER       */ 02850041
           2 SCEID      CHAR(4),       /* TRAP IDENTIFIER            */ 02900041
           2 SCESCVA    PTR(31);       /* PTR TO THE SCVA            */ 02950041
./  ADD  SSI=31831861,NAME=IHASCRA
* % GOTO PLSSCRA1 ;  /*                                                 00090002
         MACRO                                                          00090402
         IHASCRA                                                        00090802
**/                                                                     00091202
* %PLSSCRA1:;                                                           00091602
*/********************************************************************/ 00091702
*/*  MACMEAN SCRA MEANS SUPERVISOR CONTROL RECOVERY AREA             */ 00092002
*/*  MACCOMP Y-2 SCIC5/PZD81                                         */ 00094002
*/*  MACSTAT Y-2 731161                                              */ 00096002
*/* MAPPING OF 6 WORD FRR PARAMETER AREA - POINTER IN SDWAPARM       */ 00096402
*/* BAL- DSECT ALWAYS PRODUCED - USING ON SCRA                       */ 00098002
*/* PLS- SCRA BASED ON SDWAPARM                                      */ 00100002
*/********************************************************************/ 00106002
* % GOTO PLSSCRA2; /*                                                   00146002
SCRA     DSECT                                                          00200002
         DS    0D            SUPERVISOR CONTROL RECOVERY AREA           00250002
SCRASCRA DS    CL4           ACRONYM FOR SCRA                           00300002
SCRARTNP DS    A             RTM RETURN POINT ADDRESS                   00350002
SCRACSTK DS    A             CURRENT STACK POINTER                      00400002
SCRAFLGS DS    0BL32         RECURSION AND ACTION FLAGS                 00800002
SCRARECF DS    0BL8          RECURSION FLAGS                            00850002
SCRAREC1 DS    B             FIRST LEVEL RECURSION                      00900002
SCRAREC2 DS    B             SECOND LEVEL RECURSION                     00950002
SCRARS02 DS    BL6           RESERVED                                   01000002
SCRAACTF DS    0BL8          ACTION FLAGS                               01050002
SCRAMTRM DS    B             MEMTERM INDICATOR                          01100002
SCRAABTM DS    B             ABTERM INDICATOR                           01150002
SCRARS03 DS    BL6           RESERVED                                   01200002
SCRARS04 DS    BL16          RESERVED                                   01250002
SCRAWORK DS    F             RECOVERY WORK AREA PTR                     01300002
SCRASUPR DS    F             SUPERVISOR CONTROL WORD FROM PSA           01310002
SCRAEND  DS    0D            END OF SCRA                                01350002
         MEND                                                           01360002
**/                                                                     01400002
*% PLSSCRA2: ;                                                          01450002
*  DCL 1 SCRA BASED (SDWAPARM)    /* SUP CNTRL RECOVERY AREA         */ 01650002
*        BDY(DWORD),                                                    01660002
*        2 SCRASCRA CHAR(4)       /* ACRONYM FOR SCRA                */ 01700002
*            BDY(WORD),                                                 01750002
*        2 SCRARTNP PTR(31),      /* RTM RETURN POINT ADDRESS        */ 01800002
*        2 SCRACSTK PTR(31),      /* CURRENT STACK POINTER           */ 01850002
*        2 SCRAFLGS BIT(32),      /* RECURSION AND ACTION FLAGS      */ 02300002
*          3 SCRARECF BIT(8),     /* RECURSION FLAGS                 */ 02350002
*            4 SCRAREC1 BIT(1),   /* FIRST LEVEL RECURSION           */ 02400002
*            4 SCRAREC2 BIT(1),   /* SECOND LEVEL RECURSION          */ 02450002
*            4 SCRARS02 BIT(6),   /* RESERVED                        */ 02500002
*          3 SCRAACTF BIT(8),     /* ACTION FLAGS                    */ 02550002
*            4 SCRAMTRM BIT(1),   /* MEMTERM INIDCATOR               */ 02600002
*            4 SCRAABTM BIT(1),   /* ABTERM INDICATOR                */ 02650002
*            4 SCRARS03 BIT(6),   /* RESERVED                        */ 02700002
*          3 SCRARS04 BIT(16),    /* RESERVED                        */ 02750002
*        2 SCRAWORK FIXED(31),    /* RECOVERY WORK AREA PTR          */ 02800002
*        2 SCRASUPR FIXED(31),    /* SUPERVISOR CONTROL WORD FROM PSA*/ 02810002
*        2 SCRAEND CHAR(0)        /* END OF SCRA                     */ 02850002
*            BDY(DWORD);                                                02900002
./  ADD  SSI=61590399,NAME=IHASCVA
*/*******************************************************************/  00050041
*/*   IHASCVA                                                       */  00080041
*/*           MACCOMP - SC1CM                                       */  00110041
*/*           MACSTAT - @G17SP2F                                    */  00140041
*/*           MACMEAN - SCVA MEANS SLIP CONTROL ELEMENT VARIABLE    */  00170041
*/*                     AREA                                        */  00200041
*/*                                                                 */  00230041
*/*       IHASCVA MAPS THE SCVA. THIS CONTROL BLOCK IS AN EXTENSION */  00260041
*/*       OF THE SLIP CONTROL ELEMENT (IHASCE) AND ALONG WITH THE   */  00290041
*/*       SCE INTERNALLY REPRESENT A SLIP OPERATOR COMMAND. THE SCVA*/  00320041
*/*       IS A VARIABLE AREA AND IT'S SIZE DEPENDS ON HOW MANY OF   */  00350041
*/*       OF THE FOLLOWING KEYWORDS ARE SPECIFIED:  COMP, ASID,     */  00380041
*/*       JOBNAME, LPAMOD, AND ADDRESS.  IF NONE ARE SPECIFIED, NO  */  00410041
*/*       SCVA IS OBTAINED.  THE SCE                                */  00440041
*/*       POINTS TO THIS CONTROL BLOCK. STORAGE IS FROM FIXED       */  00470041
*/*       SQA (SP245). IEECB905 GETS, BUILDS, AND FREES THE SCVA.   */  00500041
*/*******************************************************************/  00530041
     DCL 1 SCVA     BASED(SCESCVA),                                     00850041
           2 SCVAHDR,                  /* NON VARIABLE PORTION       */ 00870041
             3 SCVACBID   CHAR(4),     /* CONTROL BLOCK ID = SCVA    */ 00900041
             3 SCVALN   PTR(15),       /* LENGTH OF SCVA             */ 00950041
             3 *        CHAR(2),       /* RESERVED                   */ 01000041
           2 SCVADATA   CHAR(*);       /* VARIABLE AREA              */ 01400041
     DCL 1 SCVACOMP BASED(SCVAPTR),    /* SCVA COMP ENTRY MAPPING    */ 01450041
           2 SCVCCID    PTR(8),        /* ENTRY ID                   */ 01500041
           2 SCVCCB     BIT(8),        /* FLAGS                      */ 01550041
             3 SCVCCU   BIT(1),        /* ON=USER CODE, OFF=SYSTEM   */ 01600041
             3 *        BIT(7),        /* RESERVED                   */ 01650041
           2 SCVCCM  CHAR(3) BDY(BYTE),/* MASK FOR SIGNIFICANT DIGITS*/ 01850041
           2 SCVCCD  CHAR(3) BDY(BYTE);/* COMPLETION CODE            */ 01860041
     DCL 1 SCVAASID BASED(SCVAPTR),    /* SCVA ASID ENTRY MAPPING    */ 02000041
           2 SCVADHDR,                 /* NON VARIABLE PORTION       */ 02010041
            3 SCVADID    PTR(8),       /* ENTRY ID                   */ 02020041
            3 SCVADNO    PTR(8),       /* NUMBER OF ASID'S           */ 02050041
           2 SCVADD(*) CHAR(2) BDY(BYTE); /* ASIDS                   */ 02100041
     DCL 1 SCVAJOBN BASED(SCVAPTR),    /* SCVAJOBNAME-JSPGM ENTRY    */ 02200041
           2 SCVJNID    PTR(8),        /* ENTRY ID                   */ 02250041
           2 SCVJND  CHAR(8) BDY(BYTE);/* JOBNAME OR JSPGM           */ 02350041
     DCL 1 SCVAMOD  BASED(SCVAPTR),    /* SCVAPVTMOD-LPAMOD ENTRY    */ 02400041
           2 SCVMDID    PTR(8),        /* ENTRY ID                   */ 02450041
           2 SCVMDNM CHAR(8) BDY(BYTE),/* MODULE NAME                */ 02550041
           2 SCVMDA1 PTR(31) BDY(BYTE),/* FIRST ADDRESS              */ 02600041
           2 SCVMDA2 PTR(31) BDY(BYTE);/* SECOND ADDRESS             */ 02650041
     DCL 1 SCVAADDR BASED(SCVAPTR),    /* SCVA ADDRESS ENTRY MAPPING */ 02850041
           2 SCVARID    PTR(8),        /* ENTRY ID                   */ 02900041
           2 SCVARD1 PTR(31) BDY(BYTE),/* FIRST ADDRESS              */ 03000041
           2 SCVARD2 PTR(31) BDY(BYTE);/* SECOND ADDRESS             */ 03030041
     DCL   SCVIDLST     PTR(8) CONSTANT(1), /* LAST ENTRY ID         */ 03080041
           SCVIDCC      PTR(8) CONSTANT(2), /* COMP ENTRY ID         */ 03130041
           SCVIDAS      PTR(8) CONSTANT(3), /* ASID ENTRY ID         */ 03180041
           SCVIDJN      PTR(8) CONSTANT(4), /* JOBNAME ENTRY ID      */ 03230041
           SCVIDJS      PTR(8) CONSTANT(5), /* JSPGM ENTRY ID        */ 03280041
           SCVIDPVT     PTR(8) CONSTANT(6), /* PVTMOD ENTRY ID       */ 03330041
           SCVIDLPA     PTR(8) CONSTANT(7), /* LPAMOD ENTRY ID       */ 03380041
           SCVIDAD      PTR(8) CONSTANT(8); /* ADDRESS ENTRY ID      */ 03430041
./  ADD  SSI=61480307,NAME=IHASHDR
*/*******************************************************************/  00020041
*/*  IHASHDR                                                        */  00050041
*/*          MACCOMP - SC1CM                                        */  00130041
*/*          MACSTAT - @G17SP2F                                     */  00170041
*/*          MACMEAN - SHDR MEANS SLIP HEADER                       */  00190041
*/*    THE IHASHDR MAPS THE SLIP HEADER. THIS CONTROL BLOCK IS      */  00250041
*/*  POINTED TO BY THE CVTRTMS FIELD IN THE CVT. THE SHDR POINTS    */  00330041
*/*  TO THE FIRST AND LAST SLIP CONTROL ELEMENTS(SCE). STORAGE IS   */  00370041
*/*  FROM FIXED SQA (SP245). IEECB905 GETS, BUILDS, AND FREES THE   */  00390041
*/*  SHDR.                                                          */  00450041
*/*                                                                 */  00490041
*/*******************************************************************/  00540041
     DCL 1  SHDR        BASED(CVTRTMS) BDY(DWORD),                      00590041
           2  SHDRCBID   CHAR(4),      /* CONTROL BLOCK ID = SHDR    */ 00800041
           2  SHDRPFC    PTR(31),      /* IEAVTSLP USE COUNT         */ 00850041
         2  SHDRCTFW  CHAR(8) BDY(WORD),/*TO DELETE ENTRIES,MUST CDS */ 00855041
             3 SHDRCTR   PTR(31),      /* PROCESSOR SERIALIZATION CTR*/ 00860041
             3 SHDRFWD   PTR(31),      /* FORWARD PTR TO SCE CHAIN   */ 00890041
           2  SHDRBKWD   PTR(31),      /* BACKWARD PTR TO SCE CHAIN  */ 00950041
           2  SHDRFLGS   BIT(8),       /* FLAGS                      */ 01000041
             3 SHDRFRR    BIT(1),      /* IEAVTSLP FRR ENTERED       */ 01200041
             3  SHDRDELP  BIT(1),      /*DELETE IS PENDNG ON PREV SCE*/ 01250041
             3  *         BIT(6),      /* RESERVED                   */ 01270041
           2  SHDRSEQ    BIT(8),       /* SEQUENCE BYTE              */ 01300041
           2  SHDRIDCT   PTR(15),      /* CTR FOR GENERATING SCE ID  */ 01450041
           2  SHDRPROC   PTR(31);      /* SLIP PROCESSOR IEAVTSLP    */ 01500041
./  ADD  SSI=63620185,NAME=IHASNP
*        %GOTO SNAPLS; /*                                               00800003
         MACRO                                                          01600003
         IHASNP &DSECT=YES                                  @Y307PXE*/  02400003
*%SNAPLS:  ;                                                            03200003
* /* MACMEAN SNAP MEANS SNAP PARAMETER LIST                          */ 04000003
* /* MACCOMP Y-1 SC1C5/PZD81                                         */ 04800003
* /* MACSTAT Y-1 72245/Y02705                                        */ 05600003
* /* UPDATED FOR SU 33 3.7 BASE      9/23/76                 @G33SPHW*/ 05650043
*        %GOTO SNAPPLS;  /*                                             06400003
         AIF ('&DSECT' EQ 'YES').SNAP00                                 07200003
SNPPARMS EQU   *                                                        08000003
         AGO    .SNAP01                                                 08800003
.SNAP00  ANOP                                                           09600003
SNPPARMS DSECT                                                          10400003
.SNAP01  DS    0F                                                       11200003
         IEZBITS                                                        12000003
SNPIDENT DS    B                   DUMP ID SUPPLIED BY USER             12800003
SNPFLAG  DS    B                   FLAG BYTE                            13600003
SNPSNAP  EQU   BIT0                0=SNAP REQUEST                       14400003
*                                  1=SVC DUMP REQUEST                   15200003
SNPVS2   EQU   BIT1                0=OS/VS2 REL.1 PARAMETER LIST        16000003
*                                  1=OS/VS2 REL.2 PARAMETER LIST        16800003
SNPVS2EN EQU   BIT2                1=OS/VS2 ENHANCED SNAP               16850043
SNPABEND EQU   BIT3                0=ABEND IS CALLER                    18400003
*                                  1=SNAP REQUEST                       19200003
SNPID    EQU   BIT4                1=ID SPECIFIED                       20000003
SNPTCB   EQU   BIT5                1=TCB SPECIFIED                      20800003
SNPSLIST EQU   BIT6                1=STORAGE LIST SPECIFIED             21600003
SNPHDR   EQU   BIT7                1=HEADER LIST SPECIFIED              21650043
         DS    H                   RESERVED                             23200003
SNPSDATA DS    CL2                 SDATA OPTIONS                        23250043
SNPSDAT0 DS    0B                  SDATA OPTIONS FLAG ONE    @G33SPHW   24000043
SNPNUC   EQU   BIT0                1=DUMP NUCLEUS,PSA,SQA,LSQA          24800003
SNPSQA   EQU   BIT1                1=DUMP SQA                           25600003
SNPLSQA  EQU   BIT2                1=DUMP LSQA                          26400003
SNPSWA   EQU   BIT3                1=DUMP SWA                           27200003
SNPTRT   EQU   BIT4                1=INCLUDE TRACE TABLE (SUPERVISOR    28000003
*                                  OR GTF)                              28800003
SNPCB    EQU   BIT5                1=FORMAT CNTRL BLKS FOR TASK         29600003
SNPQCB   EQU   BIT6                1=FORMAT ENQUEUE CNTRL BLKS          30400003
*                                  FOR TASK                             31200003
SNPDM    EQU   BIT7                1=FORMAT DATA MGT. CONTROL BLKS.     31250043
*                                                             @G33SPHW  31270043
SNPSDAT1 DS    0B                  SDATA OPTIONS FLAG TWO     @G33SPHW  31300043
SNPIO    EQU   BIT0                1=FORMAT IOS CONTROL BLKS. @G33SPHW  32000043
SNPERR   EQU   BIT1                1=FORMAT ERROR CONTROL BLKS.@G33SPHW 32050043
*        EQU   BIT2                RESERVED                             32850043
*        EQU   BIT3                RESERVED                             32900043
*        EQU   BIT4                RESERVED                             32950043
*        EQU   BIT5                RESERVED                             33000043
*        EQU   BIT6                RESERVED                             33050043
*        EQU   BIT7                RESERVED                             33100043
SNPPDATA DS    B                   PDATA OPTIONS                        33600003
SNPSAVE  EQU   BIT0                1=DISPLAY SAVE AREA TRACE            34400003
SNPSAVE2 EQU   BIT1                0=DISPLAY ENTIRE SAVE AREA           35200003
*                                  1=DISPLAY SAVE AREA HEADS            36000003
SNPREGS  EQU   BIT2                1=DISPLAY REGS- ENTRY TO SNAP/ABEND  36800003
SNPLPA   EQU   BIT3                1=DISPLAY ACTIVE LPA MODULES         37600003
SNPJPA   EQU   BIT4                1=DISPLAY JPA MODULES                38400003
SNPPSW   EQU   BIT5                1=DISPLAY PSW, ILC, INTERRUPT CODE   39200003
SNPSPLS  EQU   BIT6                1=DISPLAY USER SUBPOOLS: 0-127       40000003
*        EQU   BIT7                RESERVED                             40800003
         DS    B                   RESERVED                             41600003
SNPDCB   DS    A                   ADDRESS OF DCB FOR DUMP DATA         42400003
*                                  SET                                  43200003
SNPTCBA  DS    A                   ADDRESS OF TCB TO BE DISPLAYED       44000003
SNPSTOR  DS    A                   ADDRESS OF STORAGE LIST              44800003
*                                  LIST CONTAINS BEGIN AND END          45600003
*                                  ADDR OF AREAS TO BE DUMPED           46400003
SNPHDRA  DS    A                   ADDRESS OF HEADER LIST     @G33SPHW  46450043
         MEND                                                           47200003
**/                                                                     48000003
*%SNAPPLS : ;                                                           48800003
*  %IF SNAP9999¬=',' %THEN                                              49600003
*    %SNAP9999=';';                                                     50400003
*  %IF SNAPLVL¬='' %THEN                                                51200003
*    %GOTO SNAPPLS1;                                                    52000003
*DECLARE                                                                52800003
*    1 SNPPARMS BASED (SNAPPTR) BDY(WORD),                              53600003
*  %GOTO SNAPPLS2;                                                      54400003
*%SNAPPLS1: ;                                                           55200003
*    SNAPLVL SNPPARMS BDY(WORD),                                        56000003
*%SNAPPLS2: ;                                                           56800003
*      6 SNPIDENT CHAR(1),         /* DUMP ID SUPPLIED BY USER       */ 57600003
*      6 SNPFLAG  CHAR(1),         /* FLAG BYTE                      */ 58400003
*        8 SNPSNAP  BIT(1),        /* 0=SNAP REQUEST                    59200003
*                                     1=SVC DUMP REQUEST             */ 60000003
*        8 SNPVS2   BIT(1),        /* 0=OS/VS2 REL.1 PARAMETER LIST     60800003
*                                     1=OS/VS2 REL.2 PARAMETER LIST  */ 61600003
*        8 SNPVS2EN BIT(1),        /* 1=OS/VS2 ENHANCED SNAP         */ 61650043
*        8 SNPABEND BIT(1),        /* 0=ABEND IS CALLER                 63200003
*                                     1=SNAP REQUEST                 */ 64000003
*        8 SNPID    BIT(1),        /* 1=ID SPECIFIED                 */ 64800003
*        8 SNPTCB   BIT(1),        /* 1=TCB SPECIFIED                */ 65600003
*        8 SNPSLIST BIT(1),        /* 1=STORAGE LIST SPECIFIED       */ 66400003
*        8 SNPHDR   BIT(1),        /* 1=STORAGE HEADER LIST             66450043
*                                     SPECIFIED                      */ 67200043
*      6 *        FIXED(15),       /* RESERVED                       */ 68000003
*      6 SNPSDATA BIT(16),         /* SDATA OPTIONS                  */ 68050043
*        7 SNPSDAT0 BIT(8),        /* SDATA OPTIONS FLAG ONE @G33SPHW*/ 68800043
*        8 SNPNUC   BIT(1),        /* 1=DUMP NUCLEUS, PSA, SQA, LSQA */ 69600003
*        8 SNPSQA   BIT(1),        /* 1=DUMP SQA                     */ 70400003
*        8 SNPLSQA  BIT(1),        /* 1=DUMP LSQA                    */ 71200003
*        8 SNPSWA   BIT(1),        /* 1=DUMP SWA                     */ 72000003
*        8 SNPTRT   BIT(1),        /* 1=INCLUDE TRACE TABLE(SUPER-      72800003
*                                       VISOR OR GTF)                */ 73600003
*        8 SNPCB    BIT(1),        /* 1=FORMAT CNTRL BLKS FOR TASK   */ 74400003
*        8 SNPQCB   BIT(1),        /* 1=FORMAT ENQUEUE CNTRL BLKS       75200003
*                                     FOR TASK                       */ 76000003
*        8 SNPDM    BIT(1),        /* 1=FORMAT DATA MGT. CONTROL        76050043
*                                     BLKS.                  @G33SPHW*/ 76100043
*        7 SNPSDAT1 BIT(8),        /* SDATA OPTIONS FLAG TWO @G33SPHW*/ 76150043
*        8 SNPIO    BIT(1),        /* 1=FORMAT IOS CONTROL BLKS.        76800043
*                                                            @G33SPHW*/ 76850043
*        8 SNPERR   BIT(1),        /* 1=FORMAT ERROR CONTROL BLKS.      76900043
*                                                            @G33SPHW*/ 76950043
*        8 *        BIT(6),        /* RESERVED               @G33SPHW*/ 77000043
*      6 SNPPDATA BIT(8),          /* PDATA OPTIONS                  */ 78400003
*        8 SNPSAVE  BIT(1),        /* 1=DISPLAY SAVE AREA TRACE      */ 79200003
*        8 SNPSAVE2 BIT(1),        /* 0=DISPLAY ENTIRE SAVE AREA        80000003
*                                     1=DISPLAY SAVE AREA HEADS      */ 80800003
*        8 SNPREGS  BIT(1),        /* 1=DISPLAY REGS- ENTRY TO          81600003
*                                     SNAP/ABEND                     */ 82400003
*        8 SNPLPA   BIT(1),        /* 1=DISPLAY ACTIVE LPA MODULES   */ 83200003
*        8 SNPJPA   BIT(1),        /* 1=DISPLAY JPA MODULES          */ 84000003
*        8 SNPPSW   BIT(1),        /* 1=DISPLAY PSW, ILC, INTERRUPT     84800003
*                                     CODE                           */ 85600003
*        8 SNPSPLS  BIT(1),        /* 1=DISPLAY USER SUBPOOLS: 0-127 */ 86400003
*        8 *        BIT(1),        /* RESERVED                       */ 87200003
*      6 * BIT(8),                 /* RESERVED                       */ 88000003
*      6 SNPDCB   PTR(31),         /* ADDRESS OF DCB FOR DUMP DATA      88800003
*                                     SET                            */ 89600003
*      6 SNPTCBA  PTR(31),         /* ADDRESS OF TCB TO BE DISPLAYED */ 90400003
*      6 SNPSTOR  PTR(31),         /* ADDRESS OF STORAGE LIST           90450043
*                                     LIST CONTAINS BEG AND END         92000003
*                                     ADDR OF AREAS TO BE DUMPED     */ 92800003
*      6 SNPHDRA  PTR(31) SNAP9999 /* ADDRESS OF HEADER LIST @G33SPHW*/ 92850043
*% SNAPLEN='LENGTH(SNPPARMS)';     /* LENGTH OF SNAP PARAMETER LIST  */ 93600003
./  ADD  SSI=81640004,NAME=IHASPCT
*          %GOTO SPCTPLS;                                              /00050002
*                                                                       00100002
*********************************************************************** 00250002
*                                                                     * 00300002
* STATUS -                                                            * 00350002
*    CHANGE LEVEL 0 (OS/VS2 REL 4 VERSION)                            * 00400040
* FUNCTION -                                                          * 00450002
*    MAPPING MACRO FOR SWAP CONTROL TABLE                             * 00500002
* ENTRY POINTS -                                                      * 00550002
*     IHASPCT MACRO CALL                                              * 00600002
* INPUT -                                                             * 00650002
*    SEE IHASPCT MACRO DEFINITION                                     * 00700002
* OUTPUT -                                                            * 00750002
*    SWAP CONTROL TABLE MAPPING MACRO                                 * 00800002
* EXTERNAL REFERENCES -                                               * 00850002
*    N/A                                                              * 00900002
* EXITS, NORMAL -                                                     * 00950002
*    N/A                                                              * 01000002
* EXITS, ERROR -                                                      * 01050002
*    N/A                                                              * 01100002
* TABLES/WORK AREAS -                                                 * 01150002
*    N/A                                                              * 01200002
* ATTRIBUTES -                                                        * 01250002
*    PLS ONLY MACRO                                                   * 01300002
* CHARACTER CODE DEPENDENCY -                                         * 01350002
*    NONE                                                             * 01400002
* NOTES -                                                             * 01450002
*    NONE                                                             * 01500002
*                                                                     * 01550002
**********************************************************************/ 02100002
*%SPCTPLS :  ;                                                          05000002
*/********************************************************************/ 05050002
*/*   SWAP COMMUNICATIONS TABLE MAPPING FOR VS2/4.   LEVEL  4/11/75. */ 05100040
*/********************************************************************/ 05350002
*        %IF SPCT9999 ¬= ','        /* IF THIS IS LAST BLOCK         */ 05400002
*          %THEN %SPCT9999 = ';';   /* THEN CLOSE DCL STATEMENT      */ 05450002
*        %IF SPCTLEVL ¬= ''         /* IF THIS IS CONCATENATED       */ 05500002
*          %THEN %GOTO SPCTPLS1;    /* THEN SKIP DCL                 */ 05550002
*DCL 1 SPCT BASED (SPCTPTR)         /* DECLARE SPCT LEVEL 1          */ 05600002
*        %GO TO SPCTPLS2;           /* AND SKIP LEVEL TWO DCL        */ 05650002
*%SPCTPLS1: SPCTDUM=SPCTLEVL ||' SPCT'; /* SET LEVEL FOR MINOR       */ 05700002
*    SPCTDUM                        /* MINOR STRUCTURE NAME PARM     */ 05750002
*%SPCTPLS2:;                                                            05800002
*        BDY(WORD),                                                     05850002
*    4 SPCTSWRT  PTR(31),   /* VSA OF THE SWAP IN ROOT PCB IF SPCTSWIN  05900002
*                             = 1. VSA OF SWAP OUT WORK PCB IF          05950040
*                             SPCTOUT = 1.                           */ 06000002
*    4 SPCTFIX  FIXED(15), /* NUMBER OF FIX ENTRIES IN THIS SPCT     */ 06050002
*    4 SPCTLSQA FIXED(15), /* NUMBER OF LSQA ENTRIES IN THIS SPCT    */ 06100002
*    4 SPCTNSEG FIXED(8),  /* NUMBER OF SEGMENT ENTRIES THAT CAN BE     06150002
*                             HELD IN THIS SPCT                      */ 06200002
*    4 SPCTSSEG FIXED(8),  /* NUMBER OF ACTIVE SEGMENT ENTRIES IN       06250002
*                             THIS SPCT. THERE IS ONE ENTRY FOR EACH    06300002
*                             ACTIVE PRIVATE AREA SEGMENT.           */ 06350002
*    4 SPCTFLG1 BIT(8),    /* SPCT FLAG BYTE                         */ 06400002
*        8 SPCTSWIN BIT(1),/* 1 - SWAP-IN IN PROGRESS                */ 06450002
*        8 SPCTOUT  BIT(1),/* 1 - SWAP OUT IN PROGRESS               */ 06500002
*        8 SPCTPURG BIT(1),/* 1 - PAGING WAS PURGED DURING SWAP OUT  */ 06650002
*        8 SPCTBIG  BIT(1),/* 1 - THERE EXISTS ONE OR MORE FIX ENTRIES  06660002
*                             WITH A FIX COUNT GREATER THAN 255      */ 06670002
*        8 SPCTPSET BIT(1),/* 1 - PAGE DATASET USED FOR LSQA PAGES ON   06677040
*                             LAST SWAP OUT. 0 - SWAP DATASET USED FOR  06684040
*                             LSQA PAGES ON LAST SWAP OUT.   @Z40WPYD*/ 06691040
*       8 SPCTVROT BIT(1), /*1 - SWAP OUT HAS BEEN REQUESTED            06694033
*                            BY VEQRP          @ZA10767*/               06697033
*        8 *        BIT(2),/* RESERVED BIT FLAGS @ZA10767            */ 06700033
*    4 SPCTIDEN CHAR(1),                /* IEAVITAS WILL SET TO SPCT ID 06705040
*                                          CHARACTER 'S'     @Z40WPYD*/ 06720040
*    4 SPCTWSSZ FIXED(15), /* WORKING SET SIZE                       */ 06850002
*    4 SPCTSIZE FIXED(15), /* THE SIZE IN BYTES OF THE SPCT          */ 07000002
*    4 SPCTSWAP CHAR(56),  /* THIS AREA AND EVERY EXTENSION IS MAPPED   07050040
*                             BY SPCTEXTM                    @Z40WPYD*/ 07060040
*                          /* SPCTSWAP CONTAINS A MAXIMUM OF 6 FIX SWAP 07080040
*                             ENTRIES OR 8 LSQA SWAP ENTRIES OR A       07100040
*                             COMBINATION OF THE TWO NOT EXCEEDING      07110040
*                             48 BYTES. ALL LSQA ENTRIES PRECEDE ALL    07140040
*                             FIX ENTRIES.                   @Z40WPYD*/ 07160040
*    4 SPCTSEGS(*) CHAR(96) SPCT9999 /* AN AREA CONTAINING A LIST OF    07200002
*                             SEGMENT ENTRIES FOR THE ADDRESS SPACE.    07250002
*                             AS SEGMENTS ARE CREATED OR DESTROYED FOR  07300002
*                             THE ADDRESS SPACE THIS AREA EXPANDS OR    07350002
*                             CONTRACTS AS REQUIRED IN INCREMENTS OF    07400002
*                             96 BYTES (6 BYTES PER ACTIVE SEGMENT). */ 07450002
*        %SPCTLEN = 'LENGTH(SPCT)'; /* OBTAIN LENGTH OF SPCT         */ 08550002
*%SPCTPLS3: ;                                                           08555002
* /*******************************************************************/ 08560002
* /*                     SEGMENT ENTRY MAPPING                       */ 08570002
* /*******************************************************************/ 08580002
* DCL 1 SPCTSEGE CHAR(6) BDY(HWORD) BASED(SEGSPTR),/* DECLARE BASE FOR  08600002
*                             ENTRY  */                                 08620002
*    4 SPCTSEGX PTR(8),    /* CORRESPONDING INDEX INTO SEGMENT TABLE    08650002
*                             FOR THIS ENTRY.                        */ 08700002
*    4 SPCTPGT  BIT(24),   /* VSA OF PAGE TABLE FOR SEGMENT IDENTIFIED  08750002
*                             IN INDEX.                              */ 08800002
*    4 SPCTBITM BIT(16);   /* BIT MAP REPRESENTING PRIVATE AREA SEGMENT 08850002
*                             EACH PAGE MAPS TO A UNIQUE FLAG BIT.      08900002
*                             1 - PAGE IS TO BE SWAPPED IN.          */ 08950002
*%SPCTPLS4: ;                                                           08955002
* /*******************************************************************/ 08960002
* /*                  FIX OR LSQA ENTRY MAPPING                      */ 08970002
* /*******************************************************************/ 08980002
* DCL 1 SPCTSWPE CHAR(8) BDY(HWORD) BASED(SWAPPTR),/* DECLARE BASE      09000040
*                                   FOR ENTRY                        */ 09010002
*    4 SPCTLS,                  /* REFERENCE TO BEGINNING OF A LSQA     09020002
*                                  ENTRY.                            */ 09030002
*         8 SPCTFLAG BIT(8), /* SPCT FLAG BITS.              @Z40WPYD*/ 09031040
*           12 SPCTLVAL BIT(1), /*1=LSID IN SPCTSSID IS VALID  @Z40WPYD 09032040
*                                                                    */ 09032340
*           12 SPCTLSQ  BIT(1), /*1=THIS IS A 6 BYTE LSQA ENTRY, ELSE,  09033040
*                                 THIS IS AN 8 BYTE FIXED ENTRY.        09033640
*                                                            @Z40WPYD*/ 09035040
*           12 SPCTCOMM BIT(1), /*1=VBN IS FOR COMMON AREA   @Z40WPYD*/ 09036040
*           12 SPCTDEFR BIT(1), /*1=PAGE WAS FLAGGED DEFER RELEASE AT   09037040
*                                 SWAP TIME.                 @Z40WPYD*/ 09038040
*           12 *        BIT(4), /*RESERVED                   @Z40WPYD*/ 09039040
*         8 SPCTSSID CHAR(3),   /*THREE BYTE LSID            @Z40WPYD*/ 09040040
*         8 SPCTVBN  BIT(16),   /*VBN AND RESERVED BITS      @Z40WPYD*/ 09041040
*    4 SPCTFIXC FIXED(15); /* FIX COUNT ASSOCIATED WITH FIX ENTRY.      09400002
*                             THIS FIELD DOESN'T EXIST FOR LSQA ENTRY*/ 09450002
*%SPCTPLS5: ;                                                           09455002
* /*******************************************************************/ 09460002
* /*              SPCTSWAP AND SPCT EXTENSION MAPPING                */ 09470002
* /*******************************************************************/ 09480002
* DCL 1 SPCTEXTM CHAR(56) BDY(WORD) BASED,/* DECLARE STRUCTURE BASED    09500040
*                                                            @Z40WPYD*/ 09520040
*         4 SPCTEXT PTR(31),    /* ADDRESS OF NEXT EXTENSION         */ 09560002
*         4 *       CHAR(4),    /* RESERVED                  @Z40WPYD*/ 09565040
*         4 SPCTENT CHAR(48),   /* FIX AND LSQA ENTRIES              */ 09570040
*             8 SPCTENTS(8)CHAR(6), /* LSQA AND FIXED SWAP ENTRIES.     09600040
*                                                            @Z40WPYD*/ 09640040
*             8 SPCTXEND CHAR(0); /* END OF EXTENSION                */ 10210002
./  ADD  SSI=50060368,NAME=IHASSRB
*        %GOTO PLSSSRB;                                              /* 00050002
         MACRO                                                          00100002
         IHASSRB                                                        00150002
         IHASRB                                                         00160002
SSRBSECT EQU   SRBSECT                 SET LABEL TO BEGINNING           00170002
SSRB     DS    0D                      START OF SAVE AREA PORTION       00200002
SSRBCPSW DS    D                       VALUE OF CURRENT TCB             00400002
SSRBFPRS DS    0CL32                   FLOATING POINT REG SAVE AREA     00450002
SSRBFPR0 DS    D                       FLOATING POINT REG 0             00500002
SSRBFPR2 DS    D                       FLOATING POINT REG 2             00550002
SSRBFPR4 DS    D                       FLOATING POINT REG 4             00600002
SSRBFPR6 DS    D                       FLOATING POINT REG 6             00650002
SSRBGPRS DS    CL64                    GENERAL REGISTER SAVE AREA       00700002
SSRBTRAN DS    F                       PAGE FAULT ADDRESS(FLIH ONLY)    00710002
SSRBFRRS DS    CL596                   FRR STACK SAVE AREA   @ZM02352   00750003
SSRBFLG1 DS    XL1                     STATUS ATTRIBUTES                00760002
SSRBLLH  EQU   X'80'                   LOCAL LOCK WAS HELD BY SRB       00770002
SSRBMAIN EQU   X'40'                   SSRB MUST BE FREEMAINED          00780002
SSRBEND  EQU   *                                                        00800002
SSRBLEN  EQU   SSRBEND-SRBSECT         LENGTH OF SSRB AREA              00850002
         MEND  , */                                                     00900002
*%PLSSSRB :  ;                                                          00950002
*%SRBLEVEL='2';                        /* PASS DCL AND LEVEL 1 IN SRB*/ 00952002
*%SRB9999=',';                         /*END SRB WITH COMMA          */ 00954002
*DECLARE                               /* SUSPENDED SRB              */ 00956002
*  1 SSRBSECT BASED(SRBPTR),           /* LABEL OF MAPPING           */ 01006002
*%INCLUDE SYSLIB(IHASRB);                                               01100002
*    2 SSRB BDY(DWORD),                /* START OF SAVE AREA PORTION */ 01150002
*      3 SSRBCPSW CHAR(8) BDY(DWORD),  /* VALUE OF CURRENT PSW       */ 01250002
*      3 SSRBFPRS CHAR(32) BDY(DWORD), /* FLOATING POINT REG SAVE       01300002
*                                         AREA                       */ 01350002
*        4 SSRBFPR0 CHAR(8),           /* FLOATING POINT REG 0       */ 01400002
*        4 SSRBFPR2 CHAR(8),           /* FLOATING POINT REG 2       */ 01450002
*        4 SSRBFPR4 CHAR(8),           /* FLOATING POINT REG 4       */ 01500002
*        4 SSRBFPR6 CHAR(8),           /* FLOATING POINT REG 6       */ 01550002
*      3 SSRBGPRS CHAR(64),            /* GENERAL REGISTER SAVE AREA */ 01600002
*      3 SSRBTRAN PTR(31),             /* PAGE FAULT ADDR(FLIH ONLY) */ 01610002
*      3 SSRBFRRS CHAR(596),           /* FRR STACK SAVE AREA@ZM02352*/ 01650003
*      3 SSRBFLG1 BIT(8),              /* STATUS ATTRIBUTES          */ 01700002
*        4 SSRBLLH BIT(1),             /* LOCAL LOCK WAS HELD        */ 01750002
*        4 SSRBMAIN BIT(1),            /* SSRB MUST BE FREEMAINED    */ 01760002
*        4 * BIT(6);                   /* RESERVED                   */ 01800002
./  ADD  SSI=60780539,NAME=IHASVC
*        %GOTO PLSSVC;                                               /* 00050002
         MACRO                                                          00100002
         IHASVC                                                         00150002
SVCENTRY DSECT                                                          00200002
SVCEP    DS    A                       SVC ENTRY POINT ADDRESS          00250002
SVCATTR1 DS    H                       ATTRIBUTES                       00300002
SVCTP1   EQU   X'00'                   TYPE 1 SVC                       00350002
SVCTP2   EQU   X'80'                   TYPE 2 SVC                       00400002
SVCTP34  EQU   X'C0'                   TYPE 3 OR 4 SVC                  00450002
SVCTP6   EQU   X'20'                   TYPE  6 SVC             @Z40FPYK 00470040
SVCAPF   EQU   X'08'                   APF AUTHORIZED 1-AUTHORIZED      00500002
SVCESR   EQU   X'04'                   SVC IS A PART OF THE ESR         00520003
SVCNP    EQU   X'02'                   NON-PREEMPTIVE SVC      @Z40FPYK 00530040
SVCLOCKS DS    H                       LOCK ATTRIBUTES                  00550002
SVCLL    EQU   X'80'                   LOCAL LOCK NEEDED                00600002
SVCCMS   EQU   X'40'                   CMS LOCK NEEDED                  00650002
SVCOPT   EQU   X'20'                   OPT LOCK NEEDED                  00700002
SVCALLOC EQU   X'10'                   SALLOC LOCK NEEDED               00750002
SVCDISP  EQU   X'08'                   DISP LOCK NEEDED                 00800002
         MEND ,                                                      */ 00850002
*%PLSSVC : ;                                                            00900002
*DECLARE                               /* SVC TABLE ENTRY            */ 00950002
*  1 SVCENTRY BASED,                                                    01000002
*    2 SVCEP PTR(31),                  /* SVC ENTRY POINT ADDRESS    */ 01050002
*    2 SVCATTR1 BIT(16),               /* ATTRIBUTES                 */ 01100002
*      3 * BIT(4),                     /* TYPE BITS                  */ 01150002
*      3 SVCAPF BIT(1),                /* APF AUTHORIZED 1-AUTHORIZED*/ 01200002
*      3 SVCESR BIT(1),                /* SVC IS A PART OF THE ESR   */ 01220003
*      3 SVCNP BIT(1),                 /* NON-PREEMPTIVE SVC @Z40FPYK*/ 01230040
*      3 * BIT(9),                     /* RESERVED           @Z40FPYK*/ 01250040
*    2 SVCATTR2 BIT(16),               /* LOCK ATTRIBUTES            */ 01300002
*      3 SVCLL BIT(1),                 /* LOCAL LOCK NEEDED          */ 01350002
*      3 SVCCMS BIT(1),                /* CMS LOCK NEEDED            */ 01400002
*      3 SVCOPT BIT(1),                /* OPT LOCK NEEDED            */ 01450002
*      3 SVCALLOC BIT(1),              /* SALLOC LOCK NEEDED         */ 01500002
*      3 SVCDISP BIT(1),               /* DISP LOCK NEEDED           */ 01550002
*      3 * BIT(11);                    /* RESERVED                   */ 01600002
* DECLARE SVCLOCKS BIT(16) DEF(SVCATTR2); /* LOCK ATTRIBUTES @Z40FPYK*/ 01620040
*%DECLARE SVCTP1 CHAR;                 /* TYPE 1 SVC                 */ 01650002
*% SVCTP1 = '''00''X';                 /* TYPE 1 SVC         @Z40FPYK*/ 01700040
*%DECLARE SVCTP2 CHAR;                 /* TYPE 2 SVC                 */ 01750002
*% SVCTP2 = '''80''X';                 /* TYPE 2 SVC         @Z40FPYK*/ 01800040
*%DECLARE SVCTP34 CHAR;                /* TYPE 3 OR 4 SVC            */ 01850002
*% SVCTP34 = '''C0''X';                /* TYPE 3 OR 4 SVC    @Z40FPYK*/ 01900040
*%DECLARE SVCTP6 CHAR;                 /* TYPE 6 SVC         @Z40FPYK*/ 01950040
*% SVCTP6 = '''20''X';                 /* TYPE 6 SVC         @Z40FPYK*/ 02000040
./  ADD  SSI=60780540,NAME=IHATQE
*        %GOTO TQEPLS1;                                              /* 00050002
         MACRO                                                          00100002
         IHATQE                                                         00150002
*                                                                   */  00152002
*%TQEPLS1 : ;                                                           00160002
* /*******************************************************************/ 00170002
* /*                                                                 */ 00180002
* /* MACCOMP        OS/VS2,RELEASE 4   SC1CV/PZD81                   */ 00190040
* /*                                                                 */ 00190402
* /* MACSTAT        OS/VS2,RELEASE 4   73090/Y02759                  */ 00192040
* /*                                                                 */ 00194002
* /* MACMEAN        TQE MEANS TIMER QUEUE ELEMENT                    */ 00194102
* /*                                                                 */ 00194402
* /*******************************************************************/ 00196002
*         %GOTO TQEPLS2;                                             /* 00198002
TQE      DSECT ,TQEPTR                 TIMER QUEUE ELEMENT              00200002
         DS    0D                                                       00250002
TQETQE   DS    CL4                     TQE IDENTIFICATION               00300002
TQEFLNK  DS    AL4(0)                  ADDRESS OF NEXT TQE              00350002
TQEBLNK  DS    AL4(0)                  ADDRESS OF PREVIOUS TQE          00400002
TQEAID   DS    H                       REQUESTORS ASID                  00450002
TQEFLGS  DS    BL1                     TQE FLAG BYTE 1                  00500002
TQEOFF   EQU   X'80'                   TQE IS OFF TIMER QUEUE           00550002
TQETOD   EQU   X'40'                   TOD OPTION SPECIFIED             00600002
TQEWLIM  EQU   X'10'                   WAIT LIMIT EXCEEDED              00650002
TQEINCOM EQU   X'08'                   INTERVAL IS COMPLETE             00700002
TQEXITSP EQU   X'04'                   AN EXIT WAS SPECIFIED            00750002
TQETYPE  EQU   X'03'                   TQE TYPE     00=TASK TYPE        00800002
*                                                   01=WAIT TYPE        00850002
*                                                   11=REAL TYPE        00900002
TQEFLGS2 DS    BL1                     TQE FLAG BYTE 2                  00950002
TQECOMP  EQU   X'80'                   REAL TQE IS BEING TIMED          01000002
TQEUSER  EQU   X'40'                   NON SYSTEM TQE                   01010002
TQECRH   EQU   X'20'                   CHNL RECONFIG HDWE TQE  @ZM30496 01030003
TQEDUM   EQU   X'10'                   DUMMY SYSTEM TQE                 01050002
TQELM    EQU   X'08'                   TIME LIMIT CHECKING SYSTEM TQE   01100002
TQEOPT   EQU   X'04'                   SYSTEM RESOURCES MANAGER TQE     01150002
TQEMF1   EQU   X'02'                   MF/1 SYSTEM TQE                  01200002
TQEMIDN  EQU   X'01'                   MIDNIGHT SYSTEM TQE              01250002
TQEVAL   DS    2F                      EXPIRATION TIME OR TIME LEFT     01300002
TQESADDR DS    AL4(0)                  ADDRESS OF PP SAVE AREA          01350002
TQEEXIT  DS    AL4(0)                  ADDRESS OF USER EXIT RTN         01400002
TQEECB   EQU   TQEEXIT                 ECB IF WAIT TYPE TQE             01450002
TQETCB   DS    AL4(0)                  ADDRESS OF USER TCB              01550002
TQEASCB  DS    AL4(0)                  ADDRESS OF USER ASCB             01560002
TQELHPSW DS    F                       FIRST WORD OF CURRENT PSW        01600002
TQESRB   DS    CL44                    SRB                              01700002
         ORG   TQESRB                  REGISTERS 2-12 FOR      @Z40FPYB 01710040
TQEDREGS DS    11F                     DIE ENTRY.              @Z40FPYB 01715040
TQEFLGS3 DS    BL1                     TQE FLAG BYTE 3         @Z40FPYB 01726040
TQEDIE   EQU   X'80'                   DIE TQE                 @Z40FPYB 01734040
         DS    CL27                    RESERVED                         01750040
TQERSAVE DS    F                       REG SAVE AREA -SETDIE   @Z40FPYB 01760040
TQESTCK  DS    2F                      STCK AREA FOR SETDIE    @Z40FPYB 01770040
TQESTCKL EQU   TQESTCK                 STCK AREA-LEFT HALF     @Z40FPYB 01780040
TQESTCKR EQU   TQESTCK+4               STCK AREA-RIGHT HALF    @Z40FPYB 01790040
TQEEND   DS    0C                      END OF TQE                       01800002
TQELEN   EQU   TQEEND-TQE              LENGTH OF TQE                    01850002
         MEND  , */                                                     01900002
*%TQEPLS2 :     ;                                                       01950002
*DECLARE                                                                02000002
*  1 TQE   BASED(TQEPTR) BDY(DWORD),   /* TIMER QUEUE ELEMENT        */ 02050002
*    3 TQETQE  CHAR(4) BDY(WORD),      /* TQE IDENTIFICATION         */ 02100002
*    3 TQEFLNK POINTER(31),       /* ADDRESS OF NEXT TQE             */ 02150002
*    3 TQEBLNK POINTER(31),       /* ADDRESS OF PREVIOUS TQE         */ 02200002
*    3 TQEAID  FIXED(16) UNSIGNED,     /* REQUESTORS ASID            */ 02250002
*    3 TQEFLGS BIT(8),            /* TQE FLAG BYTE 1                 */ 02300002
*      5 TQEOFF   BIT(1),         /* TQE IS OFF TIMER QUEUE          */ 02350002
*      5 TQETOD   BIT(1),         /* TOD OPTION SPECIFIED            */ 02400002
*      5 *        BIT(1),         /* RESERVED                        */ 02450002
*      5 TQEWLIM  BIT(1),         /* WAIT LIMIT EXCEEDED             */ 02500002
*      5 TQEINCOM BIT(1),         /* INTERVAL IS COMPLETE            */ 02550002
*      5 TQEXITSP BIT(1),         /* AN EXIT WAS SPECIFIED           */ 02600002
*      5 TQETYPE  BIT(2),         /* TQE TYPE  00=TASK REQUEST          02650002
*                                              01=WAIT REQUEST          02700002
*                                              11=REAL REQUEST       */ 02750002
*    3 TQEFLGS2 BIT(8),           /* TQE FLAG BYTE 2                 */ 02800002
*      5 TQECOMP  BIT(1),         /* REAL TQE IS BEING TIMED         */ 02850002
*      5 TQEUSER  BIT(1),         /* NON SYSTEM TQE                  */ 02900002
*      5 TQECRH   BIT(1),         /* CHNL RECONFIG HDWE TQE  @ZM30496*/ 02950003
*      5 TQEDUM   BIT(1),         /* DUMMY SYSTEM TQE                */ 03000002
*      5 TQELM    BIT(1),         /* TIME LIMIT CHECKING SYSTEM TQE  */ 03050002
*      5 TQEOPT   BIT(1),         /* SYSTEM RESOURCES MANAGER TQE    */ 03100002
*      5 TQEMF1   BIT(1),         /* MF/1 SYSTEM TQE                 */ 03150002
*      5 TQEMIDN  BIT(1),         /* MIDNIGHT SYSTEM TQE             */ 03200002
*    3 TQEVAL   BIT(64) BDY(DWORD),    /* EXPIRATION TIME/TIME LEFT  */ 03250002
*      5 TQEVALLH  FIXED(32) UNSIGNED,                                  03260002
*      5 TQEVALRH  FIXED(32) UNSIGNED,                                  03270002
*    3 TQESADDR POINTER(31),           /* ADDRESS OF PP SAVE AREA    */ 03300002
*    3 TQEEXIT  POINTER(31),           /* ADDRESS OF USER EXIT RTN   */ 03350002
*    3 TQETCB   POINTER(31),           /* ADDRESS OF USER TCB        */ 03450002
*    3 TQEASCB  POINTER(31),           /* ADDRESS OF USER ASCB       */ 03460002
*    3 TQELHPSW FIXED(32) UNSIGNED,    /* FIRST WORD OF CURRENT PSW  */ 03500002
*    3 TQESRB   CHAR(44) BDY(WORD),    /* SRB                        */ 03600002
*      5 TQEDREGS(11) FIXED(32),      /* DIE REGS 2-12       @Z40FPYB*/ 03610040
*    3 TQEFLGS3 BIT(8),               /* TQE FLAG BYTE 3     @Z40FPYB*/ 03620040
*      5 TQEDIE    BIT(1),            /* DIE TQE             @Z40FPYB*/ 03630040
*      5 *         BIT(7),            /* RESERVED            @Z40FPYB*/ 03640040
*    3 *        CHAR(27),              /* RESERVED                   */ 03650040
*    3 TQERSAVE FIXED(32),             /* REG SAVE -SETDIE   @Z40FPYB*/ 03660040
*    3 TQESTCK  BIT(64) BDY(DWORD),     /* STCK AREA-SETDIE  @Z40FPYB*/ 03670040
*      5 TQESTCKL  BIT(32),             /* STCK AREA-LEFT    @Z40FPYB*/ 03677040
*      5 TQESTCKR  BIT(32);             /* STCK AREA-RIGHT   @Z40FPYB*/ 03684040
*DECLARE TQEECB DEFINED(TQEEXIT)                                        03700002
*        FIXED(32) UNSIGNED;        /* ECB IF WAIT TYPE TQE       */    03750002
./  ADD  SSI=60780541,NAME=IHAVCB
*        %GOTO VCBPLS;                                              /*  00100002
         MACRO                                                          00150002
         IHAVCB &DSECT=YES                                              00200002
         AGO   .VCBBIT         DO NOT GENERATE PROLOGUE                 00250002
*********************************************************************** 00300002
*                                                                     * 00350002
* STATUS -                                                            * 00400002
*    CHANGE LEVEL 0                                                   * 00450002
* FUNCTION -                                                          * 00500002
*    MAPPING MACRO FOR VCB                                            * 00550002
* ENTRY POINTS -                                                      * 00600002
*     IHAVCB MACRO CALL                                               * 00650002
* INPUT -                                                             * 00700002
*    SEE IHAVCB MACRO DEFINITION                                      * 00750002
* OUTPUT -                                                            * 00800002
*    VCB MAPPING MACRO                                                * 00850002
* EXTERNAL REFERENCES -                                               * 00900002
*    N/A                                                              * 00950002
* EXITS, NORMAL -                                                     * 01000002
*    N/A                                                              * 01050002
* EXITS, ERROR -                                                      * 01100002
*    N/A                                                              * 01150002
* TABLES/WORK AREAS -                                                 * 01200002
*    N/A                                                              * 01250002
* ATTRIBUTES -                                                        * 01300002
*    BILINGUAL MACRO                                                  * 01350002
* CHARACTER CODE DEPENDENCY -                                         * 01400002
*    NONE                                                             * 01450002
* NOTES -                                                             * 01500002
*    NONE                                                             * 01550002
*                                                                     * 01600002
*********************************************************************** 01650002
.VCBBIT  ANOP                                                           01700002
         IEZBITS , -           DEFINE BITS                              01750002
*********************************************************************** 01800002
**                          VIO CONTROL BLOCK     4/11/75   @Z40WPYD *  01850040
**                                                                    * 01900002
**                                                                    * 01950002
**       THE VCB IS A PARAMETER LIST USED BY THE VIRTUAL BLOCK        * 02000002
**       PROCESSOR WHEN CALLING VIO SERVICES INTERFACE. EACH VCB      * 02050040
**       DEFINES WHAT FUNCTIONS ARE TO BE PERFORMED BY RSM FOR A      * 02100002
**       SINGLE VIRTUAL ADDRESS PAGE.                                 * 02150002
*********************************************************************** 02200002
         AIF   ('&DSECT' EQ 'YES').VCB001 DOES USER WANT DSECT          02250002
VCB      DS    0F                                                       02300002
         AGO   .VCB002         BRANCH AROUND DSECT                      02350002
.VCB001  ANOP                  GEN THE DSECT                            02400002
VCB      DSECT , VCBPTR                                                 02450002
.VCB002  ANOP                                                           02500002
VCBLINK  DS    AL4 -           VIRTUAL ADDR. OF NEXT VCB IN A           02550002
*                              CHAINED REQUEST                          02600002
VCBVSA   DS    AL4 -           VIRTUAL ADDR. OF A PAGE IN THE VIO       02650040
*                              WINDOW. THIS PAGE IS THE SOURCE PAGE     02700002
*                              FOR A MOVE-OUT OR THE TARGET ADDRESS     02750002
*                              FOR AN ASSIGN                            02800002
VCBLPID  DS    CL8 -           THE LPID USED TO REQUEST A PAGE-OUT      02900002
VCBOPFLG DS    BL1 -           OPERATION FLAGS                          02950002
VCBMVOUT EQU   BIT0 -          DENOTES A MOVE-OUT IS TO BE PERFORMED    03000002
VCBRSV1  EQU   BIT1 -          RESERVED                                 03050002
VCBASIGN EQU   BIT2 -          DENOTES AN ASSIGN IS TO BE PERFORMED     03100002
VCBINSTG EQU   BIT3 -          THE REAL FRAME ASSIGNED TO A DATA SET    03150002
*                              PAGE REMAINS ASSIGNED TO THAT PAGE       03200002
*                              AFTER THE PAGE HAS BEEN REMOVED FROM     03250002
*                              THE VIRTUAL WINDOW AND COPIED TO         03260002
*                              AUX. STORAGE. THIS FLAG VALID ONLY IF    03300002
*                              VCBMVOUT=1.                              03310002
*                              THIS FLAG IS VALID ONLY IF VCBMVOUT=1.   03350002
VCBNDISC EQU   BIT4 -          THE DATA SET PAGE WILL NOT BE REMOVED    03400002
*                              FROM ITS FRAME WHEN THE PAGE-OUT         03450002
*                              COMPLETES. VALID ONLY IF VCBMVOUT=1.     03500002
VCBLOAD  EQU   BIT5 -          A PGLOAD WILL BE MADE UPON COMPLETION    03550002
*                              OF THE ASSIGN FUNCTION. VALID ONLY       03600002
*                              IF VCBASIGN=1.                           03650002
VCBRSV2  EQU   BIT6 -          RESERVED                                 03700002
VCBRSV3  EQU   BIT7 -          RESERVED                                 03750002
VCBCPFLG DS    BL1 -           COMPLETION FLAGS                         03800002
VCBNOVAC EQU   BIT0 -          IF VCBASIGN=1 AND THE PGTE FOR VCBVSA    03850002
*                              IS NOT ZERO, AN ERROR HAS OCCURRED. A    03900002
*                              MOVE-OUT WAS NOT REQUESTED FOR THE VSA   03950002
*                              IN ERROR.                                04000002
VCBINVSA EQU   BIT1 -          VCBVSA DOES NOT CONTAIN A VALID VSA      04050002
VCBELPID EQU   BIT2 -          AN UNEXPECTED LPID WAS RECEIVED BY       04100002
*                              THE MOVE-OUT PROCESSOR.                  04150002
VCBNOAUX EQU   BIT3 -          FOR A MOVE-OUT, NO AUX. STORAGE          04200002
*                              EXISTED OR WAS CREATED AND NO REAL       04250002
*                              STORAGE EXISTED FROM WHICH TO PAGE-OUT.  04300002
VCBEFIX  EQU   BIT4 -          MOVE-OUT REQUESTED FOR A FIXED PAGE.     04350002
VCBRSN   DS    AL2 -           THE RSN TO BE SAVED BY VIO WHEN          04550040
*                              VCBINSTG=1.                              04600002
VCBDSPID DS    CL4 -           THE DATA SET PAGE ID USED WHEN           04650002
*                              ATTEMPTING VIO RECLAIM.                  04700040
VCBEND   DS    0C -            END OF VIO CONTROL BLOCK                 04730040
VCBLEN   EQU   VCBEND-VCB -    LENGTH OF VIO CONTROL BLOCK              04760040
         MEND  , */                                                     04850002
*%VCBPLS :  ;                                                           04900002
* /*******************************************************************/ 04910002
* /*                        VIO CONTROL BLOCK     4/11/75   @Z40WPYD */ 04912040
* /*                                                                 */ 04914002
* /*                                                                 */ 04916002
* /*     THE VCB IS A PARAMETER LIST USED BY THE VIRTUAL BLOCK       */ 04918002
* /*     PROCESSOR WHEN CALLING VIO SERVICES INTERFACE. EACH VCB     */ 04918440
* /*     DEFINES WHAT FUNCTIONS ARE TO BE PERFORMED BY RSM FOR A     */ 04918802
* /*     SINGLE VIRTUAL ADDRESS PAGE.                                */ 04919202
* /*******************************************************************/ 04969202
*      %IF VCB9999¬=','             /* IS BLOCK PART OF STRUCTURE    */ 05400002
*          %THEN %VCB9999=';';      /* NO, END BLOCK NORMALLY        */ 05450002
*      %IF VCBLEVEL¬=''             /* INITIAL LEVEL NUMBER GIVEN    */ 05500002
*          %THEN %GOTO VCBPLS1;     /* YES THEN DO NOT GEN 1 LEVEL   */ 05550002
*DECLARE                                                                05600002
*  1 VCB BASED(VCBPTR)                                                  05650002
*      %GOTO VCBPLS2;               /*SKIP USER-GIVEN LEVEL          */ 05700002
*%VCBPLS1: VCBDUM=VCBLEVEL||' VCB';                                     05750002
*  VCBDUM                                                               05800002
*%VCBPLS2:;                                                             05850002
*    BDY (WORD),                                                        05900002
*    4 VCBLINK PTR(31),             /* VIRTUAL ADDR OF NEXT VCB IN A    05950002
*                                      CHAINED REQUEST               */ 06000002
*    4 VCBVSA PTR(31),              /* VIRTUAL ADDR. OF A PAGE IN       06050002
*                                      THE VIO WINDOW. THE PAGE IS      06100040
*                                      THE SOURCE PAGE FOR A MOVE-OUT   06110002
*                                      OR THE TARGET PAGE FOR AN        06120002
*                                      ASSIGN.                       */ 06150002
*    4 VCBLPID CHAR(8),             /* THE LPID USED TO REQUEST A       06160002
*                                      PAGE-OUT.                     */ 06170002
*    4 VCBOPFLG BIT(8),             /* OPERATION FLAGS               */ 06200002
*      8 VCBMVOUT BIT(1),           /* WHEN 1, A MOVE-OUT IS            06300002
*                                      REQUESTED.                    */ 06350002
*      8 VCBRSV1 BIT(1),            /* RESERVED                      */ 06400002
*      8 VCBASIGN BIT(1),           /* WHEN 1, AN ASSIGN IS REQUESTED*/ 06450002
*      8 VCBINSTG BIT(1),           /* WHEN 1, THE REAL FRAME           06500002
*                                      ASSIGNED TO A DATA SET PAGE      06550002
*                                      REMAINS ASSIGNED TO THAT PAGE    06600002
*                                      AFTER THE PAGE HAS BEEN REMOVED  06650002
*                                      FROM THE VIRTUAL WINDOW AND      06660002
*                                      COPIED TO AUX. STORAGE. THIS     06670002
*                                      FLAG IS VALID ONLY IF            06700002
*                                      VCBMVOUT=1.                   */ 06750002
*      8 VCBNDISC BIT(1),           /* THE DATA SET PAGE WILL NOT BE    06800002
*                                      REMOVED FROM ITS FRAME WHEN      06850002
*                                      THE PAGE-OUT COMPLETES. VALID    06900002
*                                      ONLY IF VCBMVOUT=1.           */ 06950002
*      8 VCBLOAD BIT(1),            /* A PGLOAD WILL BE MADE UPON       06960002
*                                      COMPLETION OF THE ASSIGN         07000002
*                                      FUNCTION. VALID ONLY IF          07010002
*                                      VCBASIGN=1.                   */ 07050002
*      8 VCBRSV2 BIT(1),            /* RESERVED                      */ 07100002
*      8 VCBRSV3 BIT(1),            /* RESERVED                      */ 07150002
*    4 VCBCPFLG BIT(8),             /* COMPLETION FLAGS              */ 07200002
*      8 VCBNOVAC BIT(1),           /* IF VCBASIGN=1 AND THE PGTE FOR   07250002
*                                      VCBVSA IS NOT ZERO, AN ERROR     07300002
*                                      HAS OCCURRED. A MOVE-OUT WAS     07350002
*                                      NOT REQUESTED FOR THE VSA IN     07400002
*                                      ERROR.                        */ 07450002
*      8 VCBINVSA BIT(1),           /* VCBVSA DOES NOT CONTAIN A        07500002
*                                      VALID VSA.                    */ 07550002
*      8 VCBELPID BIT(1),           /* AN UNEXPECTED LPID WAS RECEIVED  07600002
*                                      BY THE MOVE-OUT PROCESSOR.    */ 07650002
*      8 VCBNOAUX BIT(1),           /* FOR A MOVE-OUT, NO AUX.          07700002
*                                      STORAGE EXISTED OR WAS CREATED   07750002
*                                      AND NO REAL STORAGE EXISTED      07800002
*                                      FROM WHICH TO PAGE-OUT.       */ 07850002
*      8 VCBEFIX BIT(1),            /* MOVE-OUT REQUESTED FOR A FIXED   07900002
*                                      PAGE                          */ 07910002
*      8 * BIT(1),                  /* RESERVED                      */ 08000002
*      8 * BIT(1),                  /* RESERVED                      */ 08050002
*      8 * BIT(1),                  /* RESERVED                      */ 08100002
*    4 VCBRSN FIXED(16),            /* THE REAL STORAGE NUMBER TO BE    08150002
*                                      SAVED BY VIO WHEN VCBINSTG=1. */ 08200040
*    4 VCBDSPID CHAR(4) VCB9999     /* THE DATA SET ID USED WHEN        08300002
*                                      ATTEMPTING VIO RECLAIM.       */ 08350040
*     %VCBLEN='LENGTH(VCB)';        /* LENGTH OF VCB                 */ 08400002
./  ADD  SSI=22841708,NAME=IHAVSL
*        %GOTO VSLPLS;                                               /* 01000002
         MACRO                                                          02000002
         IHAVSL &DSECT=YES                                              03000002
         AGO   .VSLBIT         DO NOT GENERATE PROLOGUE                 03050002
*********************************************************************** 03100002
*                                                                     * 03150002
* STATUS -                                                            * 03200002
*    CHANGE LEVEL 0                                                   * 03250002
* FUNCTION -                                                          * 03300002
*    MAPPING MACRO FOR VSL                                            * 03350002
* ENTRY POINTS -                                                      * 03400002
*     IHAVSL MACRO CALL                                               * 03450002
* INPUT -                                                             * 03500002
*    SEE IHAVSL MACRO DEFINITION                                      * 03550002
* OUTPUT -                                                            * 03600002
*    VSL MAPPING MACRO                                                * 03650002
* EXTERNAL REFERENCES -                                               * 03700002
*    N/A                                                              * 03750002
* EXITS, NORMAL -                                                     * 03800002
*    N/A                                                              * 03850002
* EXITS, ERROR -                                                      * 03900002
*    N/A                                                              * 03950002
* TABLES/WORK AREAS -                                                 * 03960002
*    N/A                                                              * 03970002
* ATTRIBUTES -                                                        * 03980002
*    BILINGUAL MACRO                                                  * 03990002
* CHARACTER CODE DEPENDENCY -                                         * 03992002
*    NONE                                                             * 03994002
* NOTES -                                                             * 03996002
*    NONE                                                             * 03998002
*                                                                     * 03998402
*********************************************************************** 03998802
.VSLBIT  ANOP                                                           03999202
         IEZBITS , -           DEFINE BITS                              03999602
*********************************************************************** 03999702
**                     VIRTUAL SUBAREA LIST ENTRY     9/27/72         * 04009702
**                                                                    * 04019702
**                                                                    * 04029702
**   A VIRTUAL SUBAREA LIST IS THE PARAMETER LIST TO PSI WHICH        * 04031702
**   DESCRIBES A VIRTUAL SUBAREA THAT IS TO BE PROCESSED AND WHAT     * 04032102
**   PROCESSING IS TO BE DONE.                                        * 04032502
*********************************************************************** 04033002
         AIF   ('&DSECT' EQ 'YES').VSL001 DOES USER WANT DSECT          04033102
VSL      DS    0F                                                       04033202
         AGO   .VSL002         BRANCH AROUND DSECT                      04038802
.VSL001  ANOP                  GEN THE DSECT                            04040802
VSL      DSECT , VSLPTR                                                 05000002
.VSL002  ANOP                  GEN MAPPING MACRO                        05050002
VSLSTRT  DS    0A -            FULL WORD REFERENCE TO VSLSTRTA          05100002
VSLFLAG1 DS    BL1 -           FIRST FLAG FIELD                         07000002
VSLCONT  EQU   BIT0 -          CONTINUATION FLAG.  IF ON, VSLSTRTA      10000002
*                              POINTS TO THE NEXT VSL ENTRY. OTHERWISE, 11000002
*                              THIS IS A NORMAL VSL.                    11050002
VSLFIX   EQU   BIT1 -          PGFIX OPTION FLAG                        12000002
VSLFREE  EQU   BIT2 -          PGFREE OPTION FLAG                       13000002
VSLOAD   EQU   BIT3 -          PGLOAD OPTION FLAG                       14000002
VSLRLS   EQU   BIT4 -          PGRLSE OPTION FLAG                       15000002
VSLRSV1  EQU   BIT5 -          RESERVED                                 15050002
VSLONG   EQU   BIT6 -          LONG-TERM FIX OPTION FLAG FOR PGFIX      16000002
VSLRSV2  EQU   BIT7 -          RESERVED                                 16050002
VSLSTRTA DS    AL3 -           START ADDRESS OF THE VIRTUAL SUBAREA     17000002
*                              TO BE PROCESSED                          18000002
VSLEND   DS    0A -            FULL WORD REFERENCE FOR VSLENDA          18050002
VSLFLAG2 DS    BL1 -           SECOND FLAG FIELD                        20000002
VSLAST   EQU   BIT0 -          LAST ENTRY IN LIST OF REQUESTS FLAG      21000002
VSLNULL  EQU   BIT1 -          NULL ENTRY FLAG.  IF ON, INDICATES       22000002
*                              THAT THE ENTRY IS TO BE IGNORED.         23000021
VSLRAO   EQU   BIT2 -          REAL ADDRESS OPTION FLAG.  IF ON,        24000002
*                              THE REAL STORAGE ADDRESS ASSIGNED TO     25000021
*                              THE VIRTUAL AREA WILL BE STORED IN       26000002
*                              VSLENDA. NOT SUPPORTED IN VS2/2.         27000002
VSLERR   EQU   BIT3 -          ERROR FLAG FOR UNDEFINED VIRTUAL SPACE.  28000002
VSLRSV3  EQU   BIT4 -          RESERVED                                 29000002
VSLPGOUT EQU   BIT5 -          PERFORM A PAGE-OUT OPERATION             29050002
VSLKEPRL EQU   BIT6 -          KEEP REAL FRAME AFTER PAGE-OUT           29100002
VSLEXTRS EQU   BIT7 -          RESERVED FOR EXPANSION                   29150002
VSLEND1A DS    AL3 -           END ADDRESS PLUS 1 OF THE VIRTUAL        33000002
*                              SUBAREA DESCRIBED BY THIS ENTRY.         34000021
VSLENDPT DS    0C -            END OF VIRTUAL SUBAREA LIST ENTRY        35000002
VSLLEN   EQU   VSLENDPT-VSL -  LENGTH OF VSL ENTRY                      36000002
         MEND  , */                                                     37000021
*%VSLPLS  :  ;                                                          38000002
* /*******************************************************************/ 38010002
* /*                   VIRTUAL SUBAREA LIST ENTRY     9/27/72        */ 38012002
* /*                                                                 */ 38014002
* /*                                                                 */ 38016002
* /* A VIRTUAL SUBAREA LIST IS THE PARAMETER LIST TO PSI WHICH       */ 38018002
* /* DESCRIBES A VIRTUAL SUBAREA THAT IS TO BE PROCESSED AND WHAT    */ 38018402
* /* PROCESSING IS TO BE DONE.                                       */ 38020002
* /*******************************************************************/ 38070002
*      %IF VSL9999¬=','             /* IS BLOCK PART OF STRUCTURE    */ 39250002
*          %THEN %VSL9999=';';      /* NO, SET UP NORMAL END         */ 39300002
*      %IF VSLLEVEL¬=''             /* DID USER SUPPLY LEVEL NUMBER  */ 39350002
*          %THEN %GOTO VSLPLS1;     /* YES, DO NOT GEN 1 LEVEL       */ 39400002
*DECLARE                                                                40000021
*  1 VSL BASED(VSLPTR)                                                  41000002
*      %GOTO VSLPLS2;               /* SKIP GEN FOR USER-GIVEN LEVEL */ 41050002
* %VSLPLS1: VSLDUM=VSLLEVEL||' VSL'; /* SET UP USER-SUPPLIED LEVELS  */ 41100002
*  VSLDUM                                                               41150002
* %VSLPLS2:;                                                            41200002
*      BDY(WORD),                                                       41250002
*    4 VSLSTRT PTR(31),             /* FULL WORD REFERENCE TO           41300002
*                                      VSLSTRTA.                     */ 41350002
*      8 VSLFLAG1 BIT(8),           /* FIRST FLAG FIELD              */ 44000002
*        12 VSLCONT BIT(1),         /* CONTINUATION FLAG. IF ON,        48000002
*                                      VSLSTRTA POINTS TO THE NEXT      49000002
*                                      VSL ENTRY. OTHERWISE, THIS IS    50000002
*                                      A NORMAL VSL.                 */ 50050002
*        12 VSLFIX BIT(1),          /* PGFIX OPTION FLAG             */ 51000002
*        12 VSLFREE BIT(1),         /* PGFREE OPTION FLAG            */ 52000002
*        12 VSLOAD BIT(1),          /* PGLOAD OPTION FLAG            */ 53000002
*        12 VSLRLS BIT(1),          /* PGRLSE OPTION FLAG            */ 54000002
*        12 VSLRSV1 BIT(1),         /* RESERVED                      */ 55000002
*        12 VSLONG BIT(1),          /* LONG-TERM FIX OPTION FLAG FOR    56000002
*                                      PGFIX.                        */ 56010002
*        12 VSLRSV2 BIT(1),         /* RESERVED                      */ 56050002
*      8 VSLSTRTA PTR(24),          /* START ADDRESS OF THE VIRTUAL     58000002
*                                      SUBAREA DESCRIBED BY THIS        59000002
*                                      ENTRY.                        */ 60000002
*    4 VSLEND PTR(31),              /* FULL WORD REFERENCE FOR          60050002
*                                      VSLENDA.                      */ 60100002
*      8 VSLFLAG2 BIT(8),           /* SECOND FLAG FIELD             */ 63000002
*        12 VSLAST BIT(1),          /* LAST ENTRY IN LIST OF REQUESTS*/ 64000002
*        12 VSLNULL BIT(1),         /* NULL ENTRY FLAG. IF ON,          65000002
*                                      INDICATES THAT THE ENTRY IS TO   66000002
*                                      BE IGNORED.                   */ 67000002
*        12 VSLRAO BIT(1),          /* REAL ADDRESS OPTION FLAG.        68000002
*                                      IF ON, THE REAL STORAGE ADDRESS  69000002
*                                      ASSIGNED TO THE VIRTUAL AREA     70000002
*                                      WILL BE STORED IN VSLENDA.       73000002
*                                      NOT SUPPORTED IN VS2/2.       */ 73050002
*        12 VSLERR BIT(1),          /* ERROR FLAG FOR UNDEFINED         75000002
*                                      VIRTUAL SPACE.                */ 76000002
*        12 VSLRSV3 BIT(1),         /* RESERVED                      */ 77000002
*        12 VSLPGOUT BIT(1),        /* PERFORM A PAGEOUT OPERATION   */ 77050002
*        12 VSLKEPRL BIT(1),        /* KEEP REAL FRAME AFTER PAGEOUT */ 77100002
*        12 VSLEXTRS BIT(1),        /* RESERVED FOR EXPANSION        */ 77150002
*      8 VSLEND1A PTR(24) VSL9999   /* END ADDRESS PLUS 1 OF THE        86000002
*                                      VIRTUAL SUBAREA DESCRIBED BY     87000002
*                                      THIS ENTRY.                   */ 88000002
*      %VSLLEN='LENGTH(VSL)';       /*GET LENGTH OF THE VSL          */ 88050002
./  ADD  SSI=60900265,NAME=IHAXPTE
*        %GOTO XPTEPLS ;                                             /* 02050002
         MACRO                                                          02100002
         IHAXPTE &DSECT=YES                                             03000002
         AGO   .XPTBIT         DO NOT GENERATE PROLOGUE                 03000402
*********************************************************************** 03002002
*                                                                     * 03004002
* STATUS -                                                            * 03006002
*    CHANGE LEVEL 0                                                   * 03008002
* FUNCTION -                                                          * 03008402
*    MAPPING MACRO FOR XPTE                                           * 03008802
* ENTRY POINTS -                                                      * 03009202
*     IHAXPTE MACRO CALL                                              * 03009602
* INPUT -                                                             * 03009702
*    SEE IHAXPTE MACRO DEFINITION                                     * 03009802
* OUTPUT -                                                            * 03009902
*    XPTE MAPPING MACRO                                               * 03023202
* EXTERNAL REFERENCES -                                               * 03033202
*    N/A                                                              * 03035202
* EXITS, NORMAL -                                                     * 03035602
*    N/A                                                              * 03036002
* EXITS, ERROR -                                                      * 03036402
*    N/A                                                              * 03036502
* TABLES/WORK AREAS -                                                 * 03036602
*    N/A                                                              * 03041002
* ATTRIBUTES -                                                        * 03043002
*    BILINGUAL MACRO                                                  * 03045002
* CHARACTER CODE DEPENDENCY -                                         * 03045402
*    NONE                                                             * 03045502
* NOTES -                                                             * 03095502
*    NONE                                                             * 03105502
*                                                                     * 03115502
*********************************************************************** 03125502
.XPTBIT  ANOP                                                           03135502
         IEZBITS , -           DEFINE BITS                              03145502
*********************************************************************** 03195502
**                   EXTERNAL PAGE TABLE ENTRY      4/11/75           * 04000040
**                                                                    * 04050002
**                                                                    * 04150002
**       ONE EXTERNAL PAGE TABLE CONTAINING SIXTEEN EXTERNAL          * 05000002
**       PAGE TABLE ENTRIES IS ASSOCIATED WITH EVERY PAGE TABLE       * 06000002
**       REPRESENTING A PAGEABLE SEGMENT OF VIRTUAL STORAGE           * 06050002
**       I.E., THERE ARE SIXTEEN XPTES FOR EACH SEGMENT.              * 07000002
*********************************************************************** 08050002
         AIF   ('&DSECT' EQ 'YES').XPT001 DOES USER WANT DSECT          08100002
XPTE     DS    0F                                                       08150002
         AGO   .XPT002         BRANCH AROUND DSECT                      08200002
.XPT001  ANOP                  GEN THE DSECT                            08250002
XPTE     DSECT , XPTEPTR                                                11000002
.XPT002  ANOP                                                           11050002
XPTPROT  DS    CL1 -           PROTECTION KEY                           18000002
XPTRSV1  DS    CL1 -           RESERVED                                 19000002
XPTFLAGS DS    BL1 -           FLAG FIELD                               19050002
XPTVIOLP EQU   BIT0 -          XPTLPID CONTAINS A VIO LPID. THE AUX-    19100040
*                              ILIARY STORAGE REPRESENTED BY XPTLPID    19150040
*                              SHOULD NOT BE DESTROYED- A LSID MUST BE  19200040
*                              OBTAINED FOR A PAGE-OUT. 1=SAVE EXIST    19250040
*                              ING AUXILIARY STORAGE. 0=EXISTING AUX    19300040
*                              ILIARY STORAGE MAY BE DISCARDED.@Z40WPYD 19350040
XPTXAV   EQU   BIT1 -          EXTERNAL STORAGE ADDRESS VALID FLAG      26150002
*                              WHEN 1, EXT. ADDR. IS VALID              26200002
XPTCKF   EQU   BIT2 -          CHANGE KEY FLAG; IF 1, KEY FOR THIS PAGE 26250040
*                              HAS BEEN CHANGED BY IEAVCKEY    @Z40EPYG 29250040
XPTTAKE  EQU   BIT3 -          RESERVED. WAS USED IN VS2/REL1           33000002
XPTVIO   EQU   BIT4 -          WHEN 1, PAGE IS PART OF A VIO WINDOW     33100040
*                                                              @Z40WPYD 33110040
XPTRES2  EQU   BIT4 -          RESERVED.                       @Z40WPYD 33130040
XPTDEFER EQU   BIT6 -          ALLOCATION DEFERRED FLAG; WHEN 1,        33200002
*                              ALLOCATION DEFERRED FOR THIS PAGE        33220002
XPTRSV4  EQU   BIT7 -          RESERVED                                 33250002
XPTFLAG2 DS    CL1 -           SECOND FLAG BYTE.               @Z40WPYD 33300040
*                                                                       33350040
XPTVALID EQU   BIT0 -          1=LSID IN XPTLSID IS VALID.     @Z40WPYD 33400040
XPTRES1  EQU   BIT1 -          RESERVED                        @Z40WPYD 33450040
XPTPOINP EQU   BIT2 -          PAGE-OUT IN PROGRESS FLAG. 1=PAGE-OUT IN 33500040
*                              PROGRESS. (IMPLIES THAT XPTVALID='0'B    33600040
*                                                              @Z40WPYD 33650040
XPTIOERR EQU   BIT3 -          I/O ERROR FLAG. 1=A PERMANENT READ I/O   33700040
*                              ERROR WAS SUFFERED BY THIS PAGE.@Z40WPYD 33750040
XPTLPID  DS    0CL8 -          THE LPID OF THE EXTERNAL STORAGE         35050002
*                              LOCATION OF THE VIRTUAL PAGE             35100002
XPTLGN    DS   0F -            LOGICAL GROUP NUMBER PORTION OF LPID IF  35105040
*                              VIO PAGE.                      @Z40WPYD  35110040
XPTLSID  DS    CL4 -           AUX. STORAGE ADDRESS OF SLOT IF NOT VIO  35115040
*                              PAGE.                           @Z40WPYD 35120040
XPTLPN   DS    0F -            LOGICAL PAGE NUMBER PORTION OF LPID IF   35125040
*                              VIO PAGE.                       @Z40WPYD 35130040
XPTLSID2 DS    CL4 -           AUX. STORAGE ADDRESS OF SLOT IF NOT VIO  35135040
*                              PAGE AND DUPLEXED PAGE.         @Z40WPYD 35140040
XPTEND   DS    0C                                                       35250002
XPTLEN   EQU   XPTEND-XPTE -   LENGTH OF EXTERNAL PAGE TABLE ENTRY      37000002
         MEND  , */                                                     37050002
*%XPTEPLS :  ;                                                          39000002
* /*******************************************************************/ 39010002
* /*                 EXTERNAL PAGE TABLE ENTRY      4/11/75          */ 39012040
* /*                                                                 */ 39014002
* /*                                                                 */ 39016002
* /*     ONE EXTERNAL PAGE TABLE CONTAINING SIXTEEN EXTERNAL         */ 39018002
* /*     PAGE TABLE ENTRIES IS ASSOCIATED WITH EVERY PAGE TABLE      */ 39020002
* /*     REPRESENTING A PAGEABLE SEGMENT OF VIRTUAL STORAGE          */ 39070002
* /*     I.E., THERE ARE SIXTEEN XPTES FOR EACH SEGMENT.             */ 40200002
* /*******************************************************************/ 40250002
*      %IF XPT9999¬=','             /* IS BLOCK PART OF STRUCTURE    */ 46100002
*          %THEN %XPT9999=';';      /* NO, SET UP NORMAL END         */ 46150002
*      %IF XPTLEVEL¬=''             /* DID USER SUPPLY LEVEL NUMBER  */ 46200002
*          %THEN %GOTO XPTPLS1;     /* YES, DO NOT GEN 1 LEVEL       */ 46250002
*DECLARE                                                                46300002
*  1 XPTE BASED(XPTEPTR)                                                48000002
*      %GOTO XPTPLS2;               /* SKIP GEN FOR USER-GIVEN LEVEL */ 48050002
* %XPTPLS1: XPTDUM=XPTLEVEL||' XPTE'; /* SET UP USER-SUPPLIED LEVELS */ 48100002
*  XPTDUM                                                               48150002
* %XPTPLS2:;                                                            48152002
*   BDY(WORD),                                                          48160002
*    4 XPTPROT CHAR(1),             /* PROTECTION KEY                */ 57000002
*    4 XPTRSV1 CHAR(1),             /* RESERVED                      */ 58000002
*    4 XPTFLAGS CHAR(1),            /* FLAG FIELD                    */ 59000002
*      8 XPTVIOLP BIT(1),           /* SAVE AUXILIARY STORAGE FLAG      60000040
*                                      WHEN 1, INDICATES VIO DATA       60050002
*                                      SET PAGE TO BE SAVED          */ 60100002
*      8 XPTXAV BIT(1),             /* EXTERNAL STORAGE ADDRESS VALID   67000002
*                                      FLAG. WHEN 1, EXTERNAL ADDRESS   68000002
*                                      IS VALID.                     */ 69000002
*      8 XPTCKF BIT(1),             /* CHANGE KEY FLAG: IF 1, KEY FOR   71000040
*                                      THIS PAGE HAS BEEN CHANGED BY    73000040
*                                      IEAVCKEY            @Z40EPYG */  75000040
*      8 *       BIT(1),            /* RESERVED                      */ 78000002
*      8 XPTVIO BIT(1),             /* WHEN 1, PAGE IS PART OF A VIO    80000040
*                                      WINDOW               @Z40WPYD*/  80050040
*      8 XPTRES2 BIT(1),            /* RESERVED.            @Z40WPYD*/  80100040
*      8 XPTDEFER BIT(1),           /* ALLOCATION DEFERRED FLAG         83050002
*                                      WHEN 1, ALLOCATION DEFERRED FOR  83060002
*                                      THIS PAGE.                    */ 83070002
*      8 XPTRSV4 BIT(1),            /* RESERVED                      */ 83100002
*    4 XPTFLAG2 CHAR(1),            /* SECOND FLAG BYTE     @Z40WPYD */ 83104040
*      8 XPTVALID BIT(1),           /* 1=LSID IN XPTE IS VALID.         83108040
*                                                           @Z40WPYD */ 83112040
*      8 XPTRES1  BIT(1),           /* RESERVED             @Z40WPYD */ 83114040
*      8 XPTPOINP BIT(1),           /* 1=PAGE-OUT IN PROGRESS.(IMPLIES  83124040
*                                      XPTVALID='0'B.       @Z40WPYD */ 83128040
*      8 XPTIOERR BIT(1),          /* 1=A PERMANENT READ I/O ERROR WAS  83132040
*                                     SUFFERED BY THIS PAGE.@Z40WPYD */ 83136040
*      8 *        BIT(4),          /* RESERVED              @Z40WPYD */ 83140040
*    4 XPTLPID CHAR(8) BDY(WORD),     /* THE LPID OF THE EXTERNAL       83200002
*                                      STORAGE LOCATION OF THE          83250002
*                                      VIRTUAL PAGE                  */ 83300002
*      8 XPTLGN FIXED(32),           /* LGN PORTION OF LPID IF VIO      83305040
*                                       PAGE.               @Z40WPYD */ 83310040
*        12 XPTLSID FIXED(32),       /* AUX. STORAGE ADDRESS OF SLOT    83315040
*                                       IF NOT VIO PAGE.    @Z40WPYD */ 83320040
*      8 XPTLPN FIXED(32),           /* LPN PORTION OF LPID IF VIO      83325040
*                                       PAGE.               @Z40WPYD */ 83330040
*        12 XPTLSID2 FIXED(32);          /* AUX. STORAGE ADDR OF SLOT   83335040
*                                       IF NOT VIO AND DUPLEXED PAGE.   83340040
*                                                           @Z40WPYD */ 83345040
*       %XPTELEN='LENGTH(XPTE)';    /* LENGTH OF XPTE                */ 87000002
./  ADD  SSI=50030620,NAME=IHAYSTAK
*%        GOTO    YSTAKL1;  /*                                          00050002
         MACRO                                                          00100002
         IHAYSTAK &STKLENS=      */                                     00150002
*%YSTAKL1: ;                                                            00200002
*                                                                       00250002
* /* *************************************************************** */ 00300002
* /*                                                                 */ 00350002
* /*             IHAYSTAK-DESCRIBE THE ATTRIBUTES OF THE             */ 00400002
* /*                      FRR RECOVERY STACK AREA                    */ 00450002
* /*                                                                 */ 00500002
* /*             OS/VS2 RELEASE 2, 10/27/72 LEVEL=1                  */ 00550002
* /*                                                                 */ 00600002
* /*  METHOD OF ACCESS                                               */ 00650002
* /*         BAL - DC'S FOR THE INDIVIDUAL LENGTHS OF EACH FRR       */ 00700002
* /*               STACK IS PRODUCED IF STKLENS=YES ALONG WITH A     */ 00750002
* /*               SERIES OF EQUATES DESCRIBING ATTRIBUTES OF THE    */ 00800002
* /*               RECOVERY STACK AREA                               */ 00850002
* /*               IF STKLENS IS NOT SPECIFIED OR IS SPECIFIED       */ 00900002
* /*               OTHER THAN YES, JUST THE EQUATES DESCRIBING       */ 00950002
* /*               THE ATTRIBUTES OF THE RECOVERY STACK AREA         */ 01000002
* /*               ARE PRODUCED                                      */ 01050002
* /*                                                                 */ 01100002
* /*         PLS - AN ARRAY OF FIXED VARIABLES FOR THE LENGTHS       */ 01150002
* /*               OF EACH FRR STACK IS PRODUCED IF %STKLENS IS SET  */ 01200002
* /*               TO 'YES' ALONG WITH FIXED VARIABLE CONSTANTS      */ 01250002
* /*               DESCRIBING THE ATTRIBUTES OF THE RECOVERY STACK   */ 01300002
* /*               AREA                                              */ 01350002
* /*               IF %STKLENS IS NOT SPECIFIED OR IS SPECIFIED OTHER*/ 01400002
* /*               THAN 'YES', JUST THE FIXED VARIABLE CONSTANTS     */ 01450002
* /*               DESCRIBING THE RECOVERY STACK AREA ARE PRODUCED   */ 01500002
* /*                                                                 */ 01550002
* /* *************************************************************** */ 01600002
*                                                                       01650002
*%GOTO YSTAKL2 ;  /*                                                    01700002
         SPACE 1                                                        01750002
         AIF   ('&STKLENS' NE 'YES').YSTAK01                            01800002
YSTAK    DS    0F                     NUMBER OF ENTRIES IN THE          01850002
         DC    F'16'                  SVC-I/O-DISPATCHER FRR STACK      01950003
*                                                             @ZM02352  01970003
         DC    F'4'                   MCH FRR STACK                     02000002
         DC    F'16'                  PCFLIH FRR STACK        @ZM02352  02050003
         DC    F'16'                  EXTERNAL FLIH FRR STACK @ZM02352  02100003
*                                     (NON-RECURSIVE ENTRY)             02150002
         DC    F'4'                   EXTERNAL FLIH FRR STACK           02200002
*                                     (FIRST LEVEL-RECURSIVE ENTRY)     02250002
         DC    F'4'                   EXTERNAL FLIH FRR STACK           02300002
*                                     (SECOND LEVEL-RECURSIVE ENTRY)    02350002
         DC    F'16'                  RESTART FLIH FRR STACK  @ZM02352  02400003
*                                     RESPECTIVELY                      02450002
         DC    F'16'                  NORMAL FRR STACK        @ZM02352  02460003
.YSTAK01 ANOP                                                           02500002
YSTAKLEN EQU   9324                   TOTAL LENGTH OF RECOVERY STACK    02550003
*                                     AREA IN BYTES           @ZM02352  02600003
YSTAKBEG EQU   1                      INDEX FOR FIRST FRR STACK         02650002
YSTAKZRO EQU   0                      ADDRESS ZEROING CONSTANT          02660002
YSTAKTWO EQU   2                      MULTIPIER FOR INDEXING YSTAK      02670002
YSTAKMXV EQU   256                    MAX MOVE CHARACTER LENGTH         02680002
YSTAKSMV EQU   1                      STARTING INDEX FOR MOVE           02690002
         MEND          */                                               02700002
*%YSTAKL2 : ;                                                           02750002
*%DECLARE YSTAKMXV CHAR;                /* MAX MOVE CHARACTER LENGTH */ 02760002
*%YSTAKMXV = '256' ;                    /* OF 256                    */ 02770002
*%DECLARE YSTAKSMV CHAR;                /* STARTING INDEX FOR MOVE   */ 02780002
*%YSTAKSMV = '1';                       /* IS SET TO 1               */ 02790002
*                                                                       02800002
*%IF STKLENS ¬= 'YES' %THEN                                             02850002
*%    GOTO  YSTAKL3 ;                                                   02900002
*DECLARE                                                                03000002
*  YSTAK(8) FIXED(31) BDY(WORD) INIT(   /*ENTRIES IN THE             */ 03050002
*                                  16,  /* SVC-I/O-DISPATCHER           03200003
*                                          FRR STACK,        @ZM02352*/ 03250003
*                                   4,  /* MCH FRR STACK,            */ 03300002
*                                  16,  /* PCFLIH FRR STACK, @ZM02352*/ 03350003
*                                  16,  /* EXTERNAL FLIH FRR STACK      03380003
*                                          (NON-RECURSIVE ENTRY),       03410003
*                                                            @ZM02352*/ 03440003
*                                   4,  /* EXTERNAL FLIH FRR STACK      03500002
*                                          (FIRST LEVEL-RECURSIVE       03550002
*                                          ENTRY),                   */ 03600002
*                                   4,  /* EXTERNAL FLIH FRR STACK      03650002
*                                          (SECOND LEVEL-RECURSIVE      03700002
*                                          ENTRY),                   */ 03750002
*                                  16,  /*  RESTART FLIH FRR STACK,     03800003
*                                          RESPECTIVELY      @ZM02352*/ 03830003
*                                  16); /* NORMAL FRR STACK  @ZM02352*/ 03860003
*%YSTAKL3: ;                                                            03900002
*DECLARE                                                                03950002
*   YSTAKLEN FIXED(31) CONSTANT(9324),  /* TOTAL LENGTH OF RECOVERY     04000003
*                                          STACK IN BYTES    @ZM02352*/ 04050003
*   YSTAKBEG FIXED(31) CONSTANT(1),     /* INDEX FOR FIRST FRR STACK */ 04100002
*   YSTAKZRO FIXED(31) CONSTANT(0),     /* ADDRESS ZEROING CONSTANT  */ 04150002
*   YSTAKTWO FIXED(31) CONSTANT(2);     /* MULTIPLIER FOR INDEXING      04200002
*                                          YSTAK                     */ 04250002
./  ADD  SSI=30470325,NAME=IKJEBEMB
         MACRO                                                          02000020
&NAME    IKJEBEMB &L2,&TEXT                                             04000020
         LCLC  &GNAME,&MNAME,&ID,&INAME,&JNAME                          06000020
&GNAME   SETC  'MSG'.'&SYSNDX'                                          08000020
&ID      SETC  '''IKJ52'''                                              10000020
          AIF ('&TEXT'(2,1) NE ' ').TAG6  CHECK FOR MSG 0               12000020
          AIF (N'&L2 EQ 0).TAG9  BRANCH IF NO LEVEL 2                   14000020
&MNAME    SETC   '000'                                                  16000020
          AGO   .TAG7                                                   18000020
.TAG9      ANOP                                                         20000020
          DS    0F                                                      22000020
          AGO   .TAG10                                                  24000020
.TAG6      ANOP                                                         26000020
&MNAME   SETC  '&TEXT'(2,3)                                             28000020
.TAG7    ANOP                                                           30000020
&INAME   SETC  'M'.'&MNAME'                                             32000020
&JNAME   SETC  '&INAME'.'&SYSNDX'                                       34000020
&JNAME   DS    0F                                                       36000020
.TAG10   ANOP                                                           38000020
         AIF   (N'&L2 EQ 0).TAG1                                        40000020
&NAME    DC    A(&L2) PTR TO LEVEL 2 MESSAGE                            42000020
         AGO   .TAG3                                                    44000020
.TAG1    ANOP                                                           46000020
&NAME    DC    A(0) NO SECOND LEVEL MESSAGES                            48000020
.TAG3    ANOP                                                           50000020
         DC    AL2(&GNAME-*) LENGTH OF RECORD                           52000020
         DC    AL2(0) ALWAYS 0                                          54000020
         AIF ('&TEXT'(2,1) EQ ' ').TAG8                                 56000020
         DC    C&ID MESSAGE ID                                          58000020
.TAG8    ANOP                                                           60000020
         DC    C&TEXT MESSAGE TEXT                                      62000020
&GNAME   EQU   *                                                        64000020
         SPACE 2                                                        66000020
         MEND                                                           68000020
./  ADD  SSI=30470354,NAME=IKJEBEMT
         MACRO                                                          04000020
         IKJEBEMT &N                                                    08000020
.*THE OPERAND DETERMINES HOW MANY ENTRIES ARE IN THE TABLE              12000020
         LCLA  &END,&CTL                                                16000020
         LCLC  &MNUM                                                    20000020
&END     SETA  &N                                                       24000020
MSGPTTBL DS    0F                                                       28000020
.LOOP1   ANOP                                                           32000020
&MNUM    SETC  'M0'.'&CTL'                                              36000020
         DC    A(&MNUM)                                                 40000020
&CTL     SETA  &CTL+1                                                   44000020
         AIF   ('&CTL' EQ '&END').OUT                                   48000020
         AIF   (&CTL GT 9).LOOP2                                        52000020
         AGO   .LOOP1                                                   56000020
.LOOP2   ANOP                                                           60000020
&MNUM    SETC  'M'.'&CTL'                                               64000020
         DC    A(&MNUM)                                                 68000020
&CTL     SETA  &CTL+1                                                   72000020
         AIF   ('&CTL' EQ '&END').OUT                                   76000020
         AGO   .LOOP2                                                   80000020
.OUT     ANOP                                                           84000020
         MEND                                                           88000020
./  ADD  SSI=30512292,NAME=IKJEBEST
         MACRO                                                          01000020
         IKJEBEST &CSECT=IBM                                            02000020
         LCLA  &A,&B,&C,&D,&E                                           03000020
         LCLA  &F                                                A42956 03500020
         LCLC  &CNAME,&SCNAME,&ABBR,&LDMOD,&LABEL,&LABEL1,&LABEL2,&NMBR 04000020
.*A035000,185000,230600-239000,255000                            A42956 04500020
         AIF   ('&CSECT' NE 'IBM').CONT0                                05000020
&CNAME   SETC  'IKJEBMA8'     DEFINE CSECT NAME FOR IBM TABLE.          06000020
IKJEBMA8 CSECT                                                          07000020
         ENTRY MA8IP002                                                 08000020
         ENTRY MA8LI002                                                 09000020
         AGO   .CONT1                                                   10000020
.CONT0   ANOP                                                           11000020
         AIF   ('&CSECT' NE 'USER').ERROR2                              12000020
&CNAME   SETC  'IKJEBMA9'     DEFINE CSECT NAME FOR USER TABLE.         13000020
IKJEBMA9 CSECT                                                          14000020
.CONT1   ANOP                                                           15000020
&A       SETA  N'&SYSLIST                                               16000020
         AIF   (&A EQ 0).END                                            17000020
&B       SETA  1                                                        18000020
&F       SETA  1                                                 A42956 18500020
.CONT2   ANOP                                                           19000020
&C       SETA  N'&SYSLIST(&B)                                           20000020
         AIF   (&C LT 2 OR &C GT 3).ERROR1                              21000020
&E       SETA  K'&SYSLIST(&B,&C)                                        22000020
&D       SETA  &E-1                                                     23000020
.*  THE FOLLOWING FLAGED INSTRUCTIONS WERE ADDED TO PROVIDE      A42956 23060020
.*  UNIQUE LABELS, EVEN IF MODULES HAVE IDENTICAL LAST TWO       A42956 23120020
.*  CHARACTERS IN ENTRY POINT NAMES.  THE LABELS FOR MODULES     A42956 23180020
.*  IKJEBELI AND IKJEBEIP ARE UNCHANGED, SINCE THEY ARE          A42956 23240020
.*  REFERENCED WITHIN IKJEBEMA.                                  A42956 23300020
         AIF   ('&CSECT' NE 'IBM').CONT10                        A42956 23360020
         AIF   ('&SYSLIST(&B,&C)'(&D,&E) EQ 'LI' OR                    X23420020
                '&SYSLIST(&B,&C)'(&D,&E) EQ 'IP' ).CONT11        A42956 23480020
.CONT10  ANOP                                                    A42956 23540020
&LABEL1  SETC  '&CNAME'(6,8).'@'.'&F'                            A42956 23600020
&F       SETA  &F+1                                              A42956 23660020
&LABEL2  SETC  '&CNAME'(6,8).'@'.'&F'                            A42956 23720020
&F       SETA  &F+1                                              A42956 23780020
         AGO   .CONT12                                           A42956 23840020
.CONT11  ANOP                                                    A42956 23900020
&LABEL1  SETC  '&CNAME'(6,8).'&SYSLIST(&B,&C)'(&D,&E).'001'             24000020
&LABEL2  SETC  '&CNAME'(6,8).'&SYSLIST(&B,&C)'(&D,&E).'002'             25000020
.CONT12  ANOP                                                    A42956 25500020
&SCNAME  SETC  '&SYSLIST(&B,1)'                                         26000020
         SPACE 2                                                        27000020
         DC    AL1(&LABEL1-*-1) LENGTH OF SUBCOMMAND NAME.              28000020
         DC    C'&SCNAME' SUBCOMMAND NAME.                              29000020
&LABEL1  EQU   *                                                        30000020
         DC    AL1(&LABEL2-*-1) LENGTH OF ABBREVIATION.                 31000020
         AIF   (K'&SYSLIST(&B,2) EQ 0).CONT5                            32000020
&ABBR    SETC '&SYSLIST(&B,2)'                                          33000020
         DC    C'&ABBR' ABBREVIATION FOR SUBCOMMAND.                    34000020
.CONT5   ANOP                                                           35000020
&LABEL2  EQU   *                                                        36000020
&LDMOD   SETC  '&SYSLIST(&B,&C)'                                        37000020
         DC    CL8'&LDMOD' LOAD MODULE NAME.                            38000020
         AIF   (&B EQ &A).END                                           39000020
&B       SETA  &B+1                                                     40000020
         AGO   .CONT2                                                   41000020
.END     ANOP                                                           42000020
         SPACE 2                                                        43000020
         DC    AL1(255)       END OF TABLE MARKER.                      44000020
         MEXIT                                                          45000020
.ERROR1  MNOTE 12,'INVALID TABLE ENTRY'                                 46000020
         MEXIT                                                          47000020
.ERROR2  MNOTE 12,'INVALID KEYWORD VALUE'                               48000020
         MEND                                                           49000020
./  ADD  SSI=41691266,NAME=IKJEBEUW
         MACRO                                                          00500003
         IKJEBEUW                                                       00510003
*C0-999999                                                     @Y30NQKG 00520003
         SPACE                                                          00530003
*****************************************************************       00540003
*    THIS MACRO CONTAINS ALL THE MAPPING DSECTS FOR THE EDIT            00550003
*   ACCESS METHOD.  THEY ARE AS FOLLOWS-                                00560003
*                                                                       00570003
*        VECTABLE                      ROUTINE ADDRESSES                00580003
*        IHADCB                        DCB FOR UTIL. DATASET            00590003
*        UTILDCB                           "                            00600003
*        UTILWORK                      DCB/WORKAREA                     00610003
*        BUFFER                        BUFFER CONTROL FIELDS            00620003
*        DATA                          MAPS THE BUFFER BLOCKS           00630003
*********************************************************************** 00640003
         SPACE 3                                                        00650003
*                                                                       00660003
*   THIS DSECT MAPS THE VCONS THAT ARE LOCATED IN CSECT IKJEBEAA        00670003
*   WHICH IS LOCATED IN LOAD-MODULE IKJEBEAA.  ALL ROUTINE CALLS        00680003
*   IN LOAD MODULES IKJEBEUT AND IKJEBEAA USE THESE LABELS TO           00690003
*   SECURE THE DESIRED FACILITIES.                                      00700003
*                                                                       00710003
VECTABLE DSECT                                                          00720003
AD       DS    1F                      ADD A BLOCK                      00730003
AS       DS    1F                      BUFFER ASSIGNMENT                00740003
DL       DS    1F                      REMOVE A RECORD                  00750003
DR       DS    1F                      DELETE A RECORD                  00760003
DS       DS    1F                      DIRECTORY SEARCH                 00770003
DU       DS    1F                      DIRECTORY UPDATE                 00780003
LO       DS    1F                      FIND A RECORD                    00790003
MV       DS    1F                      MOVE DATA                        00800003
RB       DS    1F                      READ A BLOCK                     00810003
RR       DS    1F                      READ A RECORD                    00820003
WA       DS    1F                      WAIT ON I/O                      00830003
WB       DS    1F                      WRITE A BLOCK                    00840003
WP       DS    1F                      WRITE PURGE                      00850003
WR       DS    1F                      WRITE A RECORD                   00860003
WS       DS    1F                      WRITE SEQUENTIAL                 00870003
SY       DS    1F                      SYNAD ROUTINE                    00880003
         EJECT                                                          00890003
*********************************************************************** 00900003
*   START OF UTILITY WORKAREA --- UTILWORK                              00910003
*    THIS AREA IS INITIALLY OBTAINED BY THE INITIALIZATION              00920003
*   ROUTINE, IKJEBEUI.                                                  00930003
*   THE WORKAREA CONTAINS THE FOLLOWING ITEMS-                          00940003
*        BSAM DCB                                                       00950003
*        CONTROL INFORMATION AND SWITCHES                               00960003
*        PARM LIST AREA                                                 00970003
*        SAVE AREAS                                                     00980003
*        BUFFER CONTROL FIELDS                                          00990003
*        INITIALLY A DIRECTORY BLOCK IS ADJACENT                        01000003
*          TO THIS AREA BUT MAY BE RELEASED IF                          01010003
*          A LARGER ONE IS NECESSARY.                                   01020003
         SPACE 3                                                        01030003
         DCBD  DSORG=BS,DEVD=DA                                         01040003
UTILWORK EQU   IHADCB                  WORK AREA.                       01050003
UTILDCB  EQU   UTILWORK                DCB FOR UTILITY DATA SET.        01060003
         EJECT                                                          01070003
*********************************************************************** 01080003
         SPACE 2                                                        01090003
*   POINTER TO ACCESS METHOD(VECTOR TABLE) AND BUFFER INFORMATION       01100003
VTABLE   DS    1F                      ADDRESS OF VECTOR TABLE          01110003
UWSIZE   DS    1H                      SIZE OF WORKAREA                 01120003
*                                      BUFFER CNTRL AND DSDB            01130003
DCBBFNO  DS    1H                      NO. OF BUFFERS                   01140003
DBUFBLCK DS    1F                      DSDB ADDRESS                     01150003
DBUFREF  DS    1F                      FOUND ENTRY ADDRESS              01160003
DCBEBQX  DS    F                       FIRST TTR OF EMPTY BLOCK QUEUE   01170003
BUFCURNT DS    1F                      CURRENT BUFFER                   01180003
DSDBSIZE DS    1H                      DIRECTORY BLOCK SIZE             01190003
DCBRECNO DS    F                       DYNAMIC COUNT OF RECORDS         01200003
BUFCTR   DS    H                       COUNT OF BUFFERS WRITTEN         01210003
         DS    XL1                     RESERVED                         01220003
DCBSTATS DS    XL1                     STATUS OF DATA SET               01230003
*        EQU   X'80'                   RESERVED                         01240003
*        EQU   X'40'                   RESERVED                         01250003
NBLK     EQU   X'20'                   NEW BLOCK ADDED                  01260003
*        EQU   X'10'                   RESERVED                         01270003
DCBSEQ   EQU   X'08'                   SEQUENTIAL WRITE                 01280003
*        EQU   X'04'                   RESERVED                         01290003
DSEMPTY  EQU   X'02'                   EMPTY DATA SET INDICATOR         01300003
ERROR    EQU   X'01'                   DATA SET HAD I/O ERROR           01310003
         SPACE 2                                                        01320003
*   KEY AND DIRECTORY INFORMATION                                       01330003
PRIMEKEY DS    F                       CURRENT REFERENCE KEY            01340003
SAVEKEY  DS    F                       TEMPORARY STORAGE OF PRIMARY KEY 01350003
HIGHKEY  DS    F                       HIGH BOUND KEY,READ PREV         01360003
LOWKEY   DS    F                       LOW BOUND KEY, READ PREV         01370003
         SPACE 2                                                        01380003
*   PARAMETER LIST AREA                                                 01390003
PARM     EQU   *                       PASSED PARAMETER LIST            01400003
PARM1    DS    F                       WORD ONE                         01410003
PARM2    DS    F                       WORD TWO                         01420003
PARM3    DS    F                       WORD THREE                       01430003
K        EQU   X'00'                   READ CURRENT REFERENCE           01440003
P        EQU   X'01'                   READ PREVIOUS BEFORE CURRENT     01450003
N        EQU   X'02'                   READ NEXT AFTER CURRENT          01460003
B        EQU   X'04'                   READ FIRST RECORD IN DATA SET    01470003
E        EQU   X'05'                   READ LAST RECORD IN DATA SET     01480003
BE       EQU   X'04'                   THIS BIT INDICATES EITHER        01490003
*                                      THE BEGINNING OR THE END         01500003
DELETE   EQU   X'10'                   DELETE OPERATION CODE            01510003
WRITE    EQU   X'20'                   WRITE OPERATION CODE             01520003
WRITEHS  EQU   X'21'                   WRITE SEQ. CODE                  01530003
         SPACE 2                                                        01540003
         SPACE 2                                                        01550003
*   TEMPORARY WORK SPACE // ALSO USED FOR BUILDING MESSAGES             01560003
TEMPAREA DS    16D                     TEMPORARY WORKAREA               01570003
TEMP1      EQU   TEMPAREA                ONE WORD WORK SPACE            01580003
TEMP2      EQU   TEMPAREA+4              ONE WORD WORK SPACE            01590003
TEMP3    EQU     TEMPAREA+8              ONE WORD WORKSPACE             01600003
TEMPWRD1 EQU   TEMPAREA+12                                              01610003
TEMPWRD2 EQU   TEMPAREA+16                                              01620003
TEMPREGS   EQU   TEMPAREA+20           REGISTERS FOR TTR CONVERTS       01630003
MSGAREA  EQU   TEMPAREA                USED FOR MESSAGE INSERTIONS      01640003
MGBUILD  EQU   TEMPAREA+40             MESSAGE INSERT CONTROL BLOCK     01650003
MGBUILDL EQU   MGBUILD+5               LENGTH OF MESSAGE INSERT         01660003
IOMSG    EQU   TEMPAREA+48             BUFFER FOR SYNAD MESSAGE         01670003
MGBUILDO EQU   MGBUILD+6               2ND LEVEL OFFSET                 01680003
MGBUILD2 EQU   TEMPAREA+56             START OF NEXT MESSAGE AREA       01690003
MGBLD2O2 EQU   MGBUILD2+6              OFFSET FOR NEXT INSERTION        01700003
IOMSG2   EQU   MGBUILD2+8              TEXT FOR 2ND LEVEL-2ND INSERTION 01710003
MGBLD2L  EQU   MGBUILD2+5              2ND LEVEL-2ND INSERTION LENGTH   01720003
         SPACE 2                                                        01730003
*   STACKED SAVE AREAS //  ALL PRE-CHAINED BY 'IKJEBEUI'.               01740003
SAVEAREA DS    90F                     REGISTER SAVEAREA                01750003
         SPACE 2                                                        01760003
UTILEND  EQU   *                       END OF DCB/WORKAREA              01770003
UTILSIZE EQU   UTILEND-UTILWORK        WORKAREA/DCB SIZE                01780003
         SPACE 2                                                        01790003
*   BUFFER CONTROL AREA                                                 01800003
*        THE DEFAULT IS 3 DATA BUFFERS.                                 01810003
*        THE MAXIMUM IS 10 DATA BUFFERS.                                01820003
         DS    0D                                                       01830003
BUF1     DS    CL192                   CONTROLS AND CCWS                01840003
BUF2     DS    CL192                   CONTROLS AND CCWS                01850003
BUF3     DS    CL192                   CONTROLS AND CCWS                01860003
BUFS     DS    7CL192                  CONTROLS AND CCWS                01870003
BUFEND   EQU   *-BUF1                  LENGTH OF BUFFER CONTROL         01880003
         SPACE 2                                                        01890003
         SPACE 2                                                        01900003
*   DIRECTORY STARTS HERE IF MAXIMUM OF 10 BUFFERS IS USED              01910003
*        THE  ADDRESS OF THIS AREA(BLOCK) IS FOUND IN                   01920003
*        'DBUFBLCK'. THIS AREA IS MAPPED BY 'DATA' DSECT.               01930003
DSDB     EQU   *                       DIRECTORY BLOCK                  01940003
         SPACE 2                                                        01950003
*********************************************************************** 01960003
         EJECT                                                          01970003
*********************************************************************** 01980003
BUFFER   DSECT                         I/O BUFFER DESCRIPTION           01990003
*   THIS BUFFER CONTROL FIELD DESCRIPTION CONTAINS-                     02000003
*        CHAIN FIELDS, DOUBLE THREADED.                                 02010003
*        STATUS FIELDS                                                  02020003
*        ADDRESS OF DATA BLOCK                                          02030003
*        I/O FIELDS (XDAP AND BSAM BLOCKS AND CCWS)                     02040003
         SPACE 2                                                        02050003
*   BUFFER CONTROL FIELDS                                               02060003
BUFCHAIN DS    1F                      BUFFER CHAIN FIELD               02070003
BBKCHAIN DS    1F                      BUFFER BACK CHAIN FIELD          02080003
BUFSTATS EQU   BBKCHAIN                BUFFER STATUS FIELD              02090003
UPDATED  EQU   X'80'                   BLOCK HAS BEEN UPDATED           02100003
BLKINBUF EQU   X'40'                   KEEP THIS BUFFER/BLOCK IN CORE   02110003
*        EQU   X'20'                   RESERVED                         02120003
*        EQU   X'10'                   RESERVED                         02130003
NEWBLK   EQU   X'08'                   NEW BLOCK REQUIRES FORMATTING    02140003
WAITB    EQU   X'04'                   BSAM OPERATION                   02150003
WAITXR   EQU   X'02'                   XDAP READ OPERATION              02160003
WAITXW   EQU   X'01'                   XDAP WRITE OPERATION             02170003
BUFTTR   DS    F                       TTR OF BLOCK IN BUFFER           02180003
BUFREF   DS    F                       LOCATOR OR DIRECTORY ENTRY ADDR. 02190003
BUFBLOCK DS    F                       ADDRESS OF DATA BLOCK            02200003
         DS    1F                      RESERVED                         02210003
BXDAPW   DS    F                       IOB PREFIX                       02220003
XDAPWLST XDAP  XWECB,WI,0,0,0,MF=L LIST FORM                            02230003
XWIOB    EQU   XWECB+4                 IOB FOR XDAP WRITE               02240003
XWCCWAD  EQU   XWIOB+16                IOB POINTER TO CCWS              02250003
WBLKREF  EQU   XWIOB+32                TRACK ADDRESS-MBBCCHHR           02260003
WCCHHR   EQU   WBLKREF+3               SEARCH ADDRESS-CCHHR             02270003
XWCCWS   EQU   XWIOB+40                START OF CCWS                    02280003
XWBLKSIZ EQU   XWCCWS+22               BLKSIZE FOR WRITES               02290003
         SPACE 1                                                        02300003
*    BSAM WRITE MACRO                                                   02310003
WRITLIST WRITE WRDECB,SF,MF=L                                           02320003
         SPACE 1                                                        02330003
*     XDAP READ MACRO                                                   02340003
         CNOP  0,8                                                      02350003
BXDAPR   DS    F                       IOB PREFIX                       02360003
XDAPRLST XDAP  XRECB,RI,0,0,0,MF=L                                      02370003
XRIOB    EQU   XRECB+4                 IOB FOR XDAP READ                02380003
XRCCWAD  EQU   XRIOB+16                IOB POINTER TO CCWS              02390003
RBLKREF  EQU   XRIOB+32                TRACK ADDRESS-MBBCCHHR           02400003
RCCHHR   EQU   RBLKREF+3               SEARCH ADDRESS-CCHHR             02410003
XRCCWS   EQU   XRIOB+40                START OF CCWS                    02420003
XRBLKSIZ EQU   XRCCWS+22               BLKSIZE FOR READS                02430003
BUFSIZE  EQU   *-BUFFER                LENGTH OF EACH BUFFER            02440003
         EJECT                                                          02450003
*****************************************************************       02460003
DATA     DSECT                         START OF DATA                    02470003
         SPACE 2                                                        02480003
*   MAPS THE DATA BLOCKS WHICH CONTAIN THE RECORDS.                     02490003
EBTTR    EQU   *                       TTR OF NEXT EMPTY BLOCK,         02500003
*                                      IF THIS BLOCK IS IN THE          02510003
*                                      EMPTY BLOCK QUEUE.               02520003
NUMREC   DS    H                       NUMBER OF RECORDS IN DATA BLOCK  02530003
DATASTRT DS    H                       RELATIVE POSITION OF 1ST RECORD  02540003
RECVSP   DS    H                       RECOVERABLE SPACE BYTES          02550003
CTRLEND  EQU   *                       END OF CONTROL FIELDS            02560003
LOCATORS EQU   *                       LOCATORS START HERE              02570003
LOCL     EQU   2                       LENGTH OF EACH LOCATOR           02580003
         SPACE 2                                                        02590003
*   MAPS THE DSDB, WHICH CONTAINS THE INDEX ENTRIES.                    02600003
         ORG   DATA                    DIRECTORY BLOCK START            02610003
*   DESCRIPTION OF DIRECTORY BLOCK // CONTROL FIELDS                    02620003
         DS    1H                      RESERVED                         02630003
NUMINDEX DS    H                       NUMBER OF ENTRIES IN DIR. BLOCK  02640003
DCTRLEND EQU   *                       CONTROL FIELD END                02650003
         SPACE 2                                                        02660003
*   START OF INDICES AND DESCRIPTION OF ENTRIES                         02670003
INDICES  EQU   *                       4-BYTE BINARY KEY+TTR PER ENTRY  02680003
KEYL     EQU   4                       LENGTH OF BINARY KEY IN INDICES  02690003
TTR      EQU   3                       LENGTH OF TTR FIELD IN INDICES   02700003
         SPACE 2                                                        02710003
*********************************************************************** 02720003
*********************************************************************** 02730003
         MEND                                                           02740003
         END                                                            02750003
./  ADD  SSI=20720268,NAME=IKJEFA3A
            %GOTO  A3AGO;                                               00020000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00040000
* /*                                                                 */ 00060000
* /*                       I K J E F A 3 A                           */ 00080000
* /*                                                                 */ 00100000
* /*             ACCOUNT/DELETE DEFINE CONSTANTS MACRO               */ 00120000
* /*                                                                 */ 00140000
* /*   STATUS                                                        */ 00160021
* /*   CHANGE LEVEL 000                                              */ 00180021
* /*   PTMS INCLUDED: 2582,4175,4478,4483,5522                       */ 00181021
* /*   CHANGE LEVEL 001                                              */ 00182021
* /*   APARS INCLUDED: 45306                                         */ 00182221
* /*   PTMS INCLUDED: 1850,1859                                      */ 00183021
* /*   C    285104,288304,291304                              A45306 */ 00186821
* /*   C    254588-254695                                      M1850 */ 00187821
* /*   C    267394,162240                                      M1859 */ 00188821
* /*   D    162280-162368,162744-162820                        M1859 */ 00189821
* /*   C    83200,83800,85800,89800,90400,93200,96700,97600,   21974 */ 00190821
* /*   C    98200,101000,105600,106200,122600,125000,128200,   21974 */ 00191821
* /*   C    130200,132400,135600,142146,142150,142194,146200,  21974 */ 00192821
* /*   C    149000,185800,193726-193732,193864,193865,193997,  21974 */ 00193821
* /*   C    193998,198600-199000,221800-222200,235200,236200,  21974 */ 00194821
* /*   C    237200,238124,276522,276530,276574,276575          21974 */ 00195821
* /*   D    183880-183984,276208-276394,279544-279837          21974 */ 00196021
* /*                                                                 */ 00196700
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00200000
* /*                                                                 */ 00220000
 %A3AGO:     ;                                                          00240000
           %IF XSECT = 'CSECT'                                          00244000
             %THEN                                                      00248000
               %GOTO  TARG2;                                            00252000
             %ELSE    %;                                                00256000
           GENERATE DATA;                                               00256800
&SECTN1  DSECT                                                          00257600
 @ENDGEN                                                                00258400
             %GOTO  TARG2A;                                             00259200
 %TARG2:     ;                                                          00259300
           GENERATE DATA;                                               00259400
&SECTN1  CSECT                                                          00259500
 @ENDGEN                                                                00259600
 %TARG2A:    ;                                                          00259700
 /*                     DEFINE ROUTINE NAMES                         */ 00260000
                                                                        00280000
           DECLARE                                                      00300000
                 /* IDENTIFY EXTERNAL ENTRIES AND NAMES              */ 00320000
                 IKJEFA31  ENTRY EXTERNAL,  /* DELETE MESSAGES       */ 00340000
                 ANDXL  NONLOCAL EXTERNAL ; /* MESSAGE INDEX         */ 00360000
                                                                        00380000
                                                                        00400000
           DECLARE                                                      00420000
                 /* REGISTER ASSIGNMENTS                             */ 00440000
                 R0   REG(0)  PTR(31),/* GP REGISTER 0               */ 00460000
                 R1   REG(1)  PTR(31),/* GP REGISTER 1               */ 00480000
                   POSTR  PTR(31) REG(1),  /* PTR TO ECB FOR POST    */ 00500000
                 R2   REG(2)  PTR(31), /* GP REGISTER 2              */ 00540000
                   PLPTR PTR(31) REG(2),/* PTR TO ACCOUNT PARM LIST  */ 00560000
                   IOPLPTR PTR(31) REG(2), /* PTR TO SERV RTN PL     */ 00564000
                 R3   REG(3)  PTR(31),/* GP REGISTER 3               */ 00580000
                   RECBP PTR(31) REG(3), /* PTR TO ECB FOR WAIT      */ 00600000
                   CHRPTR  PTR(31)  REG(3),  /* PTR TO SCAN CHAR     */ 00624000
                 R4   REG(4)  PTR(31),/* GP REGISTER 4               */ 00640000
                   PDLPTR  PTR(31) REG(4), /* PTR TO PARSE DESC LIST */ 00660000
                   GMSPP   PTR(31)  REG(4),  /* PTR TO GOTMAIN AREA  */ 00700000
                 R5   REG(5)  PTR(31),/* GP REGISTER 5               */ 00720000
                   PDLPTRA PTR(31) REG(5), /* PTR TO PARSE DESC LIST */ 00740000
                   QLNGR   PTR(31) REG(5),  /* ENQUEUE NAME LENGTH   */ 00744000
                 R6   REG(6)  PTR(31),/* GP REGISTER 6               */ 00780000
                   QNAMR   PTR(31) REG(6),  /* PTR TO ENQUEUE NAME   */ 00784000
                   CHRCTR  PTR(31)  REG(6),  /* SCAN COUNTER         */ 00788000
                 R7   REG(7)  PTR(31),/* GP REGISTER 7               */ 00800000
                 R8   REG(8)  PTR(31),/* GP REGISTER 8               */ 00820000
                 R9   REG(9)  PTR(31),/* GP REGISTER 9               */ 00840000
                 R10  REG(10) PTR(31),/* GP REGISTER 10              */ 00860000
                 R11  REG(11) PTR(31),/* GP REGISTER 11              */ 00880000
                 R12  REG(12) PTR(31),/* GP REGISTER 12              */ 00900000
                 R13  REG(13) PTR(31),/* GP REGISTER 13              */ 00920000
                 R14  REG(14) PTR(31),/* GP REGISTER 14              */ 00940000
                 R15  REG(15) PTR(31);/* GP REGISTER 15              */ 00960000
                                                                        00980000
           RESTRICT  (PLPTR);         /* RESERVE FOR POINTER SERVICE */ 01000000
           RESTRICT  (R8);            /* BASE PTR FOR STATIC DATA    */ 01020000
           RESTRICT  (R9);            /* BASE PTR FOR IKJDEL2        */ 01040000
           RESTRICT  (R7);            /* 2ND BASE PTR FOR IKJDEL2    */ 01044000
                                                                        01060000
                                                                        01080000
           DECLARE                                                      01100000
                 /* SAVE AREAS FOR LINK REGISTER                     */ 01120000
                 SAV14A  PTR(31),                                       01140000
                 SAV14AB PTR(31),                                       01150000
                 SAV14CL PTR(31),                                       01160000
                 SAV14DC PTR(31),                                       01180000
                 SAV14DL PTR(31),                                       01200000
                 SAV14DS PTR(31),                                       01220000
                 SAV14FM PTR(31),                                       01240000
                 SAV14FR PTR(31),                                       01260000
                 SAV14GB PTR(31),                                       01280000
                 SAV14GL PTR(31),                                       01280800
                 SAV14LC PTR(31),                                       01284000
                 SAV14MF PTR(31),                                       01300000
                 SAV14PT PTR(31),                                       01320000
                 SAV14SP PTR(31),                                       01340000
                 SAV14V  PTR(31);                                       01360000
                                                                        01380000
           DECLARE                                                      01384000
                 /* PROCESSOR FLOW POINTERS                          */ 01388000
                 1 FLOPTRS BDY(WORD), /* FLOW POINTER AREA           */ 01392000
                   2 SAV14E  PTR(31), /* FOR ERRFLO                  */ 01392800
                   2 SAV14DR PTR(31), /* FOR DRDFLO                  */ 01396000
                   2 SAV14NC PTR(31), /* FOR FOR RD DIREC FLOW M     */ 01396400
                   2 SAV14NQ PTR(31); /* FOR ENQUEUE FLOW      M2582 */ 01404000
                                                                        01407600
           DECLARE                                                      01411200
                 /* PSEUDO-LABEL FLOW SWITCHES                       */ 01414800
                 ERRFLO  LABEL BASED(SAV14E),                           01418400
                 DRDFLO  LABEL BASED(SAV14DR),                          01422000
                 INCFLO  LABEL BASED(SAV14NC),  /*             M     */ 01425600
                 NQFLO   LABEL BASED(SAV14NQ);  /*             M2582 */ 01427600
                                                                        01429200
           DECLARE                                                      01432800
                 /* LOCATE RETURN CODE                               */ 01436400
                 RCPTR  PTR(31),      /* PTR TO RTN CODE LIST        */ 01438400
                 1 RTCLIST  BASED(RCPTR),  /* NAME OF RTN CODE LIST  */ 01438800
                   2 RCLRES  CHAR(3), /* RESERVED                    */ 01439200
                   2 RCLC1  PTR(8),   /* 1ST RETURN CODE             */ 01439600
                 SAVAR  PTR(31) BASED(R13+4),    /* CALLER'S SAVE PTR*/ 01440000
                 RETRNCD PTR(31) BASED(SAVAR+16); /* RETURN CODE     */ 01460000
                                                                        01560000
           DECLARE                                                      01580000
                 DPLPTR  PTR(31),     /* FOR DELETE POINT LIST       */ 01600000
                 DNMIDP  PTR(31),     /* FOR DPL ENTRY               */ 01620000
                 DPLNDP  PTR(31),     /* FOR END OF DPL              */ 01640000
                 NAMPTR  PTR(31);     /* FOR CURRENT PDE             */ 01660000
                                                                        01680000
           DECLARE                                                      01700000
                 /* SAVE AREA FOR NODELIST PARSE VALIDITY CHK EXIT   */ 01720000
                 SVCHKPS  CHAR(72) BDY(WORD);                           01740000
                                                                        01760000
                                                                        01780000
           DECLARE                                                      01800000
                 /* POINTERS FOR MAPPING FORMATS                     */ 01820000
                 HEDBPTR  PTR(31),    /* HEADER BLOCK                */ 01840000
                 UADSNPTR PTR(31),    /* PROTOTYPE OFFSET BLOCK      */ 01860000
                 DPOBPTR  PTR(31),    /* PASSWORD OFFSET BLOCK       */ 01880000
                 DNOBPTR  PTR(31),    /* ACCOUNT NUMBER OFFSET BLOCK */ 01900000
                 DROBPTR  PTR(31),    /* PROCEDURE NAME OFFSET BLOCK */ 01920000
                 UADSPPTR PTR(31),    /* PASSWORD DATA BLOCK         */ 01940000
                 UADSAPTR PTR(31),    /* ACCOUNT NUMBER DATA BLOCK   */ 01960000
                 UADSRPTR PTR(31),    /* PROCEDURE NAME DATA BLOCK   */ 01980000
                 UADSDPTR PTR(31),    /* PROTOTYPE NAME DATA BLOCK   */ 01984000
                 FSQEPTR  PTR(31),    /* FREE SPACE QUEUE ELEMENT    */ 02000000
                 UIDLPTR  PTR(31);    /* DELETE POINT LIST           */ 02020000
                                                                        02040000
 @EJECT                                                                 02060000
   %INCLUDE SYSLIB(IKJEFUAD);                                           02080000
 @EJECT                                                                 02100000
*        %GOTO ACTMC3;                                               /* 02140000
         MACRO                                                          02160000
         IKJEFDPL                                                       02180000
         EJECT                                                          02200000
** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  02220000
**                                                                   *  02240000
**                D E L E T E   P O I N T   L I S T                  *  02260000
**                                                                   *  02280000
** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  02300000
**                                                                   *  02320000
./  ADD  SSI=81730275,NAME=IKJEFLWA
*      %GOTO LWAPLS;  /*                                                00100002
          MACRO                                                         00150002
          IKJEFLWA                                                      00200002
LWA       DSECT                                                         00250002
LWAPPTR  DS  A                          ADDRESS OF THE LOGON WORK       00300000
*                                       AREA                            00300700
LWALWA   DS  CL8                        EBCDIC '  LWA   '               00301400
LWATEST  DS  A                          PTR FOR TEST     @ZA06226       00302100
LWAPASCB DS  A                          ADDRESS OF ASCB                 00302800
*                                       FOR USER MEMORY                 00303500
LWAACCT  DS  A                          OFFSET TO ACCT FIELD IN         00304200
*                                       UADS                            00304900
LWAPSCB  DS  A                          ADDRESS OF THE PROTECTED        00306300
*                                       STEP CONTROL BLOCK              00307000
LWAJSEL  DS  A                          ADDRESS OF THE JOB              00307700
*                                       SCHEDULING ENTRANCE LIST        00308400
LWAPECT  DS  A                          ADDRESS OF THE ECT              00309100
LWAAECB  DS  A                          EVENT CONTROL BLOCK FOR         00309800
*                                       THE LOGON/LOGOFF                00310500
*                                       PROMPTING TASK                  00311900
*        BIT(24)                        NOT REFERENCED BY LOGON/        00312600
         ORG LWAAECB+3                  LOGOFF CODE                     00313300
LWAABCE  DS  X                          COMPLETION CODE BYTE            00314000
LWAPECB  DS  F                          COMMUNICATIONS ECB              00314700
*                                       FOR COMMUNICATION FROM          00315400
*                                       THE PROMPTING TASK TO           00316100
*                                       THE SCHEDULING TASK             00317500
*        BIT(24)                        NOT REFERENCED BY LOGON/        00318200
         ORG LWAPECB+3                  LOGOFF CODE                     00318900
LWAPBCE  DS  X                          COMPLETION CODE BYTE            00319600
LWASECB  DS  F                          COMMUNICATIONS ECB              00320300
*                                       FOR COMMUNICATION FROM          00321000
*                                       THE SCHEDULING TASK TO          00321700
*                                       THE PROMPTING TASK              00323100
*        BIT(24)                        NOT REFERENCED BY LOGON/        00323800
         ORG LWASECB+3                  LOGOFF CODE                     00324500
LWASBCE  DS  X                          COMPLETION CODE BYTE            00325200
LWALPCNT DS  F                          LOOP CONTROL FOR                00325900
*                                       STAI EXIT RETRY.                00326600
*                                       WHEN COUNTER REACHES            00327300
*                                       GIVEN VALUE, SESSION            00328700
*                                       IS TERMINATED.                  00329400
LWAPDCB  DS  A                          ADDRESS OF UADS                 00330100
*                                       DCB - USED BY STAI              00330800
*                                       RETRY.                          00331500
LWAFLGS  DS 0F                          FLAGS FOR USE BY LOGON          00332200
         DS  X                                                          00332900
LWALA    EQU X'80'                      IKJEFLA INDICATOR               00334300
LWALB    EQU X'40'                      IKJEFLB INDICATOR               00335000
LWALC    EQU X'20'                      IKJEFLC INDICATOR               00335700
LWALE    EQU X'10'                      IKJEFLE INDICATOR               00336400
LWALEA   EQU X'08'                      IKJEFLEA INDICATOR              00337100
LWALI    EQU X'04'                      IKJEFLI INDICATOR               00337800
LWALH    EQU X'02'                      IKJEFLH INDICATOR               00338500
LWALL    EQU X'01'                      IKJEFLL INDICATOR               00339900
         DS  X                                                          00340600
LWALGM   EQU X'80'                      IKJEFLGM INDICATOR              00341300
LWALJ    EQU X'40'                      IKJEFLJ INDICATOR               00342000
LWALK    EQU X'20'                      IKJEFLK INDICATOR               00342700
LWALG    EQU X'10'                      IKJEFLG INDICATOR               00343400
LWALGB   EQU X'08'                      IKJEFLGB INDICATOR              00344100
LWALS    EQU X'04'                      IKJEFLS INDICATOR               00344800
*        BIT(2)                         RESERVED                        00345500
         DS  X                                                          00346200
*        BIT(1)                         RESERVED                        00346900
LWARACF  EQU X'40'                      -> USER IS...      @Z40RQKC     00347600
*                                       ...RACF DEFINED                 00348300
LWAVTAM  EQU X'20'                      -> VTAM/SNA        @Z40DQKC     00350000
LWAPHASE EQU X'10'                      CONTROL SWITCH                  00350700
*                                       FOR STAI EXIT.                  00351400
*                                       IF 0 - PHASE I                  00352100
*                                       ACTIVE. IF 1 -                  00353500
*                                       PHASE II ACTIVE                 00354200
LWAPSW   EQU X'08'                      IF 1, LAST ABEND IN             00354900
*                                        PROMPTER WAS PSW RESTART       00355600
LWAPCK   EQU X'04'                      IF 1, LAST ABEND IN             00356300
*                                       PROMPTER WAS PGM CHECK          00357000
LWAMCK   EQU X'02'                      IF 1, LAST ABEND IN             00357700
*                                       PROMPTER WAS MACH CHECK         00359100
LWABND   EQU X'01'                      IF 1, LAST ABEND IN             00359800
*                                       PROMPTER WAS OTHER THAN PROG    00360500
*                                       CHK, PSW RESTART OR MACH CHK    00361200
LWAFLGS4 DS  X                                                          00361900
*        BIT(1)                                                         00362600
LWANORDR EQU X'40'                      USER ON TERMINAL                00363300
*                                       THAT DOES NOT                   00364700
*                                       SUPPORT OIDCARD                 00365400
*                                       READER      @G32OPKU            00366100
LWAQTIP  EQU X'20'                      SET BY SIC SO LOGON             00366800
*                                       WILL DO QTIP 24 IN              00367500
*                                       IKJEFLK     @ZA02119            00368200
LWASICSP EQU X'10'                      SET BY LOGON IN                 00368900
*                                       IKJEFLJ AND SET                 00370300
*                                       TO 0 IN IKJEFLK                 00371000
*                                       TELLS SICS NOT TO DO            00371700
*                                       QTIP 24     @ZA02119            00372400
LWALTBC  EQU X'08'                      LIST BC IN CONTROL              00373100
LWATNBT  EQU X'04'                      USED TO INDICATE CANCEL         00373800
*                                       BY THE ATTENTION EXIT           00374500
*                                       ROUTINE.                        00375900
LWAINX1  EQU X'02'                      INSTALLATION EXIT               00376600
*                                       ROUTINE IN CONTROL              00377300
LWAILGN  EQU X'01'                      INITIAL LOGON INDICATOR         00378000
LWAPTID  DS  A                          PROMPTING TASK IDENTIFIER       00378700
*                                       RETURNED BY ATTACH              00379400
LWACTLS  DS  0F                         CONTROL BIT STRING FOR          00380100
         DS  X                          LOGON PROMPTING TASK            00381500
*                                                                       00382200
LWAUFAI  EQU X'80'                      INDICATES UNSUCCESSFUL ENQ      00382900
*                                       ON THE RESOURCE ' SYSUADS       00383600
*                                       USERID '                        00384300
LWAMOUNT EQU X'40'                      SET BY LD & PROPOGATED          00385000
*                                       TO PSCB BY LI                   00385700
LWAFAIL  EQU X'20'                      INDICATES AN UNSUCCESSFUL       00387100
*                                       ATTEMPT TO OBTAIN A SYSTEM      00387800
*                                       RESOURCE.IDENTIFIED BY ANY      00388500
*                                       OTHER BIT.                      00389200
LWADISC  EQU X'10'                      INDICATES THAT LOGON IS TO      00389900
*                                       TERMINATE AND DISCONNECT        00390600
*                                       THE TERMINAL.                   00391300
LWANOPR  EQU X'08'                     IF BIT IS ONE AN INSTALLATION    00392700
*                                      EXIT ROUTINE HAS                 00393400
*                                      PROVIDED USERID,PASSWORD,        00394100
*                                      ACCOUNT,PROCEDURE CHARACTER      00394800
*                                      STRINGS, A REGION                00395500
*                                      SIZE, AND A PERFORMANCE          00396200
*                                      GROUP FOR USE IN                 00396900
*                                      SCHEDULING A TERMINAL JOB        00397600
LWANUAD  EQU X'04'                     IF THIS BIT IS ONE AND THE       00398300
*                                      BIT LWANOPR IS ALSO ONE NO       00400000
*                                      ACCESS OF THE UADS SHOULD        00400700
*                                      BE MADE FOR THIS TERMINAL JOB    00401400
LWAJJCL  EQU X'02'                     JCL FOR TERMINAL JOB WAS         00402100
*                                      SUPPLIED BY AN INSTALLATION      00402800
*                                      EXIT ROUTINE.                    00403500
*        BIT(1)                        RESERVED                         00404200
         DS  X                                                          00404900
LWAATR1  EQU X'80'                     INFORMATION FOR THE ATR1         00406300
*                                      FIELD OF THE PSCB WAS SUPPLIED   00407000
*                                      BY AN INSTALLATION               00407700
*                                      EXIT ROUTINE.                    00408400
LWAATR2  EQU X'40'                     INFORMATION FOR THE ATR2         00409100
*                                      FIELD OF THE PSCB WAS SUPPLIED   00409800
*                                      BY AN INSTALLATION               00410500
*                                      EXIT ROUTINE.                    00411900
LWAUNIT  EQU X'20'                     INFORMATION FOR PSCBGPNM         00412600
*                                      FIELD OF THE PSCB WAS SUPPLIED   00413300
*                                      BY AN INSTALLATION               00414000
*                                      EXIT ROUTINE.                    00414700
LWABUPT  EQU X'10'                     INFORMATION FOR USER PROFILE     00415400
*                                      TABLE WAS SUPPLIED BY            00416100
*                                      AN INSTALLATION EXIT RTN.        00417500
LWANONQ  EQU X'08'                     LOGON WILL NOT MAINTAIN AN       00418200
*                                      ENQ ON THE RESOURCE'SYSUAD       00418900
*                                      USERID' DURING THE USER'S        00419600
*                                      SESSION.                         00420300
LWADEST  EQU X'04'                     IF 1, INSTALLATION               00421000
*                                      EXIT HAS SUPPLIED                00421700
*                                      DEFAULT DEST.                    00423100
LWABEND  EQU X'02'                     IF 1, INSTALLATION               00423800
*                                      EXIT IS GETTING                  00424500
*                                      CONTROL AFTER ABEND              00425200
         DS  2X                        RESERVED FLAGS                   00425900
LWARTCD  DS  F                         RETURN CODE SET BY IKJEFLK       00426600
LWANAME  DS  0F                        EPLOC FOR ATTACH/XCTL            00427300
*                                      NAME                             00428700
LWARNML  DS  CL1                       USED FOR MINOR                   00429400
*                                      RESOURCE NAME                    00430100
*                                      LENGTH TO ENQ/DEQ                00430800
LWARNM   DS  CL7                       USED FOR MINOR                   00431500
*                                      RESOURCE NAME                    00432200
*                                      IMAGE                            00432900
LWANQDQ  DS  CL12                      USED FOR ENQ/DEQ                 00434300
*                                      PARAMETER LIST                   00435000
LWAELST  DS  0F                        ECB LIST HEADER                  00435700
LWAAECBP DS  F                         PTR TO LWAAECB                   00436400
LWAPECBP DS  F                         PTR TO LWAPECB                   00437100
LWAEOEL  EQU X'80'                     END OF LIST BIT                  00437800
LWARCDE  DS  F                         RTN CODE SET BY IKJEFLJ          00438500
LWATCPU  DS  F                         2 WORDS USED FOR                 00439900
LWATCPU1 DS  F                         TOTAL CPU TIME USED              00440600
*                                      FOR THIS ACCOUNTING              00441300
*                                      PERIOD.                          00442000
LWATSRU  DS  F                         2 WORDS USED FOR                 00442700
LWATSRU1 DS  F                         TOTAL SERVICE UNITS              00443400
*                                      USED DURING THIS                 00444100
*                                      ACCT PERIOD.                     00444800
LWATCON  DS  F                         2 WORDS USED FOR                 00445500
LWATCON1 DS  F                         TOTAL CONNECT TIME               00446200
*                                      USED DURING THIS                 00446900
*                                      ACCT PERIOD.                     00447600
LWASTCB  DS  A                         TCB ADDR IKJEFLA                 00448300
LWADEST2 DS  CL8                       USERID FOR SYSOUT                00450000
*                                      TO REMOTE ENTRY-                 00450700
*                                      STATION.                         00451400
LWAGBWKA DS  A                         POINTER TO WORK                  00452100
*                                      AREA FOR IKJEFLGB                00453500
LWASWKA  DS  A                         POINTER TO WORK                  00454200
*                                      AREA FOR IKJEFLS                 00454900
LWASPF   DS  A                         POINTER TO WORK         @ZA30872 00455600
*                                      AREA FOR SPF SUPPORT    @ZA30872 00456300
         DS  5F                        RESERVED                         00457000
LENLWA   EQU *-LWA                     LENGTH OF LWA                    00457700
**********************************************************************  00458400
***                                                                  *  00460000
***    I K J E F L J  R E T U R N  C O D E S                         *  00460300
***                                                                  *  00460900
**********************************************************************  00461800
LWASWAR EQU 4                          SWA MANAGER ERROR                00462700
LWAMSPE EQU 16                         MULTI-STEP PROC                  00463600
**********************************************************************  00464500
***                                                                  *  00465400
***    P O S T  C O D E S  F O R  P E C B  E C B                     *  00466300
***                                                                  *  00467200
**********************************************************************  00467500
INITDONE EQU 4                         INIT PHASE DONE POST CODE        00468100
NQUSERID EQU 8                         ENQ ON USERID POST CODE          00469000
DQUSERID EQU 12                        DQ ON USERID                     00469900
SCHEDULE EQU 16                        PHASE ONE PROMPTING DONE POST    00470800
BCDONE   EQU 20                        MSG BRODCASTING DONE POST CODE   00471700
TERMINAT EQU 24                        TERMINATE THE JOB POST CODE      00472600
**********************************************************************  00473500
***                                                                  *  00474400
***         P O S T  C O D E S  F O R  S E C B  E C B                *  00474700
***                                                                  *  00475300
**********************************************************************  00476200
NQDQ0    EQU 0                         ENQ DEQUE RETURN CODES           00477100
NQDQ4    EQU 4                         DITTO                            00478000
NQDQ8    EQU 8                         DITTO                            00478900
STARTP2  EQU 16                        START PHASE TWO PROMPTING        00479800
INITRDY  EQU 20                        INIT READY TO POST               00480700
ENDTASK  EQU 24                        TERMINATE PROMPTING TASK         00481600
*                                                                       00481900
*                                                                       00482500
**/                                                                     00491902
         MEND                                                           00541902
* %LWAPLS:   ;                                                          00551902
*@EJECT;                                                                00601902
*/********************************************************************/ 00641902
*/*      THE LOGON WORK AREA WILL CONTAIN INFORMATION WHICH IS       */ 01000002
*/*      NECESSARY FOR THE LOGON/LOGOFF PROCESSING ROUTINES.  IT     */ 01500002
*/*      WILL CONTAIN CONTROL BLOCK POINTERS, ENTRANCE LISTS AND     */ 02000002
*/*      PARAMETER LISTS.                                            */ 02500002
*/*    A 000000-999999                                         20032 */ 02510002
*/*    A                                                      Y02669 */ 02560002
*? DOCUMENT TITLE(CHANGE ACTIVITY);                                     03000000
*? DOCUMENT TITLE(#05: @Z40DQKC)                                        03040000
*  TEXT(SUPPORT FOR SNA. IF LWAVTAM=YES=1 THEN EXTENDED LOGON, IKTXINIT,03080000
*    SUCCESSFULLY RETURNED TO IKJEFLA.                                  03120000
*    FOR LWAVTAM=YES IKJEFLB AND IKJEFLS WILL CALL EXTENDED LOGOFF-     03160000
*    IKTLOGFF);                                                         03200000
*? DOCUMENT TITLE(#05: @Z40RQKC)                                        03240000
*  TEXT(SUPPORT FOR VS2 RELEASE 4 RACF. THE LOGON WORK AREA INDICATES   03280000
*    WHETHER THE USER IS RACF DEFINED OR NOT--LWARACF)                  03320000
*  POSITION(END);                                                       03360000
*        DECLARE                                                        03500002
*        1    LWA  BASED(LWAPTR),                                       04000002
*             2    LWAPPTR POINTER,    /*   ADDRESS OF THE LOGON WORK*/ 04010002
*                                      /*   AREA                     */ 04020002
*             2    LWALWA CHAR(8),     /*   EBCDIC '  LWA   '  Y02669*/ 04050002
*             2    LWATEST  POINTER,   /*   PTR FOR TEST     @ZA06226*/ 05520000
*             2    LWAPASCB POINTER,   /*   ADDRESS OF ASCB    Y02669*/ 05620002
*                                      /*   FOR USER MEMORY    Y02669*/ 05670002
*             2    LWAACCT POINTER,    /*   OFFSET TO ACCT FIELD IN  */ 07000002
*                                      /*   UADS                     */ 07500002
*             2    LWAPSCB POINTER,    /*   ADDRESS OF THE PROTECTED */ 08000002
*                                      /*   STEP CONTROL BLOCK       */ 08500002
*             2    LWAJSEL POINTER,    /*   ADDRESS OF THE JOB       */ 09000002
*                                      /*   SCHEDULING ENTRANCE LIST */ 09500002
*             2    LWAPECT POINTER,    /*   ADDRESS OF THE ECT       */ 10200002
*             2    LWAAECB BDY(WORD),  /*   EVENT CONTROL BLOCK FOR  */ 11000002
*                                      /*   THE LOGON/LOGOFF         */ 11500002
*                                      /*   PROMPTING TASK           */ 12000002
*                  3    * BIT(24),     /*   NOT REFERENCED BY LOGON/ */ 12500002
*                                      /*   LOGOFF CODE              */ 13000002
*                  3    LWAABCE BIT(8),/*   COMPLETION CODE BYTE     */ 13500002
*             2    LWAPECB BDY(WORD),  /*   COMMUNICATIONS ECB       */ 14000002
*                                      /*   FOR COMMUNICATION FROM   */ 14500002
*                                      /*   THE PROMPTING TASK TO    */ 15000002
*                                      /*   THE SCHEDULING TASK      */ 15500002
*                  3    * BIT(24),     /*   NOT REFERENCED BY LOGON/ */ 16000002
*                                      /*   LOGOFF CODE              */ 16500002
*                  3    LWAPBCE BIT(8),/*   COMPLETION CODE BYTE     */ 17000002
*             2    LWASECB BDY(WORD),  /*   COMMUNICATIONS ECB       */ 17500002
*                                      /*   FOR COMMUNICATION FROM   */ 18000002
*                                      /*   THE SCHEDULING TASK TO   */ 18500002
*                                      /*   THE PROMPTING TASK       */ 19000002
*                  3    * BIT(24),     /*   NOT REFERENCED BY LOGON/ */ 19500002
*                                      /*   LOGOFF CODE              */ 20000002
*                  3    LWASBCE BIT(8),/*   COMPLETION CODE BYTE     */ 20500002
*             2    LWALPCNT FIXED(31), /*   LOOP CONTROL FOR   Y02653*/ 20550002
*                                      /*   STAI EXIT RETRY.   Y02653*/ 20600002
*                                      /*WHEN COUNTER REACHES  Y02653*/ 20650002
*                                      /*GIVEN VALUE, SESSION  Y02653*/ 20700002
*                                      /*IS TERMINATED.        Y02653*/ 20750002
*             2    LWAPDCB POINTER,    /*   ADDRESS OF UADS    Y02653*/ 20800002
*                                      /*   DCB - USED BY STAI Y02653*/ 20850002
*                                      /*   RETRY.             Y02653*/ 20900002
*             2    LWAFLGS BIT(32),    /*   FLAGS FOR USE BY LOGON   */ 21000002
*                  3    * BIT(8),                                       21500002
*                       4 LWALA BIT(1),/* IKJEFLA INDICATOR    Y02669*/ 21550002
*                       4 LWALB BIT(1),/* IKJEFLB INDICATOR    Y02669*/ 21600002
*                       4 LWALC BIT(1),/* IKJEFLC INDICATOR    Y02669*/ 21650002
*                       4 LWALE BIT(1),/* IKJEFLE INDICATOR    Y02669*/ 21700002
*                       4 LWALEA BIT(1),/* IKJEFLEA INDICATOR  Y02669*/ 21750002
*                       4 LWALI BIT(1),/* IKJEFLI INDICATOR    Y02669*/ 21800002
*                       4 LWALH BIT(1),/* IKJEFLH INDICATOR    Y02669*/ 21850002
*                       4 LWALL BIT(1),/* IKJEFLL INDICATOR    Y02669*/ 21900002
*                  3    * BIT(8),                                       22000002
*                       4 LWALGM BIT(1),/* IKJEFLGM INDICATOR  Y02669*/ 22050002
*                       4 LWALJ BIT(1),/* IKJEFLJ INDICATOR    Y02669*/ 22100002
*                       4 LWALK BIT(1),/* IKJEFLK INDICATOR    Y02669*/ 22150002
*                       4 LWALG BIT(1),/* IKJEFLG INDICATOR    Y02669*/ 22200002
*                       4 LWALGB BIT(1),/* IKJEFLGB INDICATOR  Y02669*/ 22250002
*                       4 LWALS BIT(1),/* IKJEFLS INDICATOR    Y02669*/ 22300002
*                       4 * BIT(2),                                     22350002
*                  3    * BIT(8),                                       22500002
*                       4    * BIT(1),                                  22550002
*                       4  LWARACF  BIT(1), /* -> USER IS... @Z40RQKC*/ 22600000
*                                           /* ...RACF DEFINED       */ 22650000
*                       4  LWAVTAM  BIT(1), /* -> VTAM/SNA   @Z40DQKC*/ 22700000
*                       4  LWAPHASE BIT(1), /*CONTROL SWITCH  Y02653*/  22960002
*                                           /*FOR STAI EXIT.  Y02653*/  22970002
*                                           /*IF 0 - PHASE I  Y02653*/  22980002
*                                           /*ACTIVE. IF 1 -  Y02653*/  22990002
*                                           /*PHASE II ACTIVE Y02653*/  22992002
*                       4  LWAPSW BIT(1),   /*IF 1, LAST      Y02653*/  22994002
*                                           /*ABEND IN        Y02653*/  22996002
*                                           /*PROMPTER WAS    Y02653*/  22998002
*                                           /*PSW RESTART.    Y02653*/  22998402
*                       4  LWAPCK BIT(1),   /*IF 1, LAST      Y02653*/  22998802
*                                           /*ABEND IN        Y02653*/  22999202
*                                           /*PROMPTER WAS    Y02653*/  22999602
*                                           /*PROGRAM CHECK.  Y02653*/  22999702
*                       4  LWAMCK BIT(1),   /*IF 1, LAST      Y02653*/  22999802
*                                           /*ABEND IN        Y02653*/  22999902
*                                           /*PROMPTER WAS    Y02653*/  23003202
*                                           /*MACHINE CHECK.  Y02653*/  23005202
*                       4  LWABND BIT(1),   /*IF 1, LAST      Y02653*/  23005602
*                                           /*ABEND IN        Y02653*/  23006002
*                                           /*PROMPTER WAS    Y02653*/  23006402
*                                           /*OTHER THAN PROG Y02653*/  23006502
*                                           /*CHK, PSW RESTRT Y02653*/  23006602
*                                           /*OR MACHINE CHK. Y02653*/  23017402
*                  3    LWAFLGS4 BIT(8),                                23028403
*                       4    * BIT(1),                                  25050002
*                       4    LWANORDR BIT(1), /* USER ON TERMINAL    */ 25060000
*                                             /* THAT DOES NOT       */ 25062000
*                                             /* SUPPORT OIDCARD     */ 25064000
*                                             /* READER      @G32OPKU*/ 25066000
*                       4    LWAQTIP BIT(1),  /* SET BY SIC SO LOGON */ 25070003
*                                             /* WILL DO QTIP 24 IN  */ 25073003
*                                             /* IKJEFLK     @ZA02119*/ 25076003
*                                                                       25079003
*                       4    LWASICSP BIT(1), /* SET BY LOGON IN ... */ 25082003
*                                             /* ...IKJEFLJ AND SET..*/ 25085003
*                                             /* ...TO 0 IN IKJEFLK. */ 25088003
*                                             /* TELLS SICS NOT TO DO*/ 25091003
*                                             /* QTIP 24     @ZA02119*/ 25094003
*                       4    LWALTBC BIT(1),/* LIST BC IN CONTROL    */ 25100002
*                       4    LWATNBT BIT(1),/*USED TO INDICATE CANCEL*/ 25500002
*                                           /*BY THE ATTENTION EXIT  */ 25550002
*                                           /*ROUTINE.               */ 25600002
*                       4    LWAINX1 BIT(1),/*INSTALLATION EXIT      */ 26500002
*                                           /*ROUTINE IN CONTROL     */ 26550002
*                       4    LWAILGN BIT(1),/*INITIAL LOGON INDICATOR*/ 27000002
*             2    LWAPTID POINTER,      /* PROMPTING TASK IDENTIFIER*/ 27500002
*                                        /* RETURNED BY ATTACH       */ 28000002
*             2    LWACTLS BIT(32),      /* CONTROL BIT STRING FOR   */ 28500002
*                                        /* LOGON PROMPTING TASK     */ 29000002
*                                                                       29500002
*                  3    LWAUFAI BIT(1),  /*INDICATES UNSUCCESSFUL ENQ*/ 30000002
*                                        /*ON THE RESOURCE ' SYSUADS */ 30500002
*                                        /*USERID '                  */ 31000002
*                  3    LWAMOUNT BIT(1), /*SET BY LD & PROPOGATED    */ 31500002
*                                        /*TO PSCB BY LI       Y02669*/ 31550002
*                  3    LWAFAIL BIT(1),  /*INDICATES AN UNSUCCESSFUL */ 33500002
*                                        /*ATTEMPT TO OBTAIN A SYSTEM*/ 34000002
*                                        /*RESOURCE.IDENTIFIED BY ANY*/ 34500002
*                                        /*OTHER BIT.                */ 35000002
*                  3    LWADISC BIT(1),  /*INDICATES THAT LOGON IS TO*/ 35500002
*                                        /*TERMINATE AND DISCONNECT  */ 36000002
*                                        /*THE TERMINAL.             */ 36500002
*                  3    LWANOPR BIT(1),  /*IF BIT IS ONE AN INSTALLA-*/ 37000002
*                                        /*TION EXIT ROUTINE HAS     */ 37500002
*                                        /*PROVIDED USERID,PASSWORD, */ 38000002
*                                        /*ACCOUNT,PROCEDURE CHARAC- */ 38500002
*                                        /*TER STRINGS, A REGION     */ 39000002
*                                        /*SIZE, AND A PERFORMANCE   */ 39500002
*                                        /*GROUP FOR USE IN          */ 40000002
*                                        /*SCHEDULING A TERMINAL JOB.*/ 40050002
*                  3    LWANUAD BIT(1),  /*IF THIS BIT IS ONE AND THE*/ 40500002
*                                        /*BIT LWANOPR IS ALSO ONE NO*/ 41000002
*                                        /*ACCESS OF THE UADS SHOULD */ 41500002
*                                        /*BE MADE FOR THIS TERMINAL */ 42000002
*                                        /*JOB.                      */ 42500002
*                  3    LWAJJCL BIT(1),  /*JCL FOR TERMINAL JOB WAS  */ 43000002
*                                        /*SUPPLIED BY AN INSTALLA-  */ 43500002
*                                        /*TION EXIT ROUTINE.        */ 44000002
*                  3    * BIT(1),                                       44500002
*                  3    LWAATR1 BIT(1),  /*INFORMATION FOR THE ATR1  */ 46000002
*                                        /*FIELD OF THE PSCB WAS SUP-*/ 46500002
*                                        /*PLIED BY AN INSTALLATION  */ 47000002
*                                        /*EXIT ROUTINE.             */ 47500002
*                  3    LWAATR2 BIT(1),  /*INFORMATION FOR THE ATR2  */ 48000002
*                                        /*FIELD OF THE PSCB WAS SUP-*/ 48500002
*                                        /*PLIED BY AN INSTALLATION  */ 49000002
*                                        /*EXIT ROUTINE.             */ 49500002
*                  3    LWAUNIT BIT(1),  /*INFORMATION FOR PSCBGPNM  */ 50000002
*                                        /*FIELD OF THE PSCB WAS SUP-*/ 50500002
*                                        /*PLIED BY AN INSTALLATION  */ 51000002
*                                        /*EXIT ROUTINE.             */ 51500002
*                  3    LWABUPT BIT(1),  /*INFORMATION FOR USER PRO- */ 52000002
*                                        /*FILE TABLE WAS SUPPLIED BY*/ 52500002
*                                        /*AN INSTALLATION EXIT RTN. */ 53000002
*                  3    LWANONQ BIT(1),  /*LOGON WILL NOT MAINTAIN AN*/ 55500002
*                                        /*ENQ ON THE RESOURCE'SYSUAD*/ 56000002
*                                        /*USERID' DURING THE USER'S */ 56500002
*                                        /*SESSION.                  */ 57000002
*                  3    LWADEST BIT(1),  /*IF 1, INSTALLATION  Y02664*/ 57050002
*                                        /*EXIT HAS SUPPLIED   Y02664*/ 57100002
*                                        /*DEFAULT DEST.       Y02664*/ 57150002
*                  3    LWABEND BIT(1),  /*IF 1, INSTALLATION  Y02653*/ 57200002
*                                        /*EXIT IS GETTING     Y02653*/ 57250002
*                                        /*CONTROL AFTER ABEND Y02653*/ 57300002
*                  3    *       BIT(17), /*THESE BITS ARE RESERVED   */ 57500002
*             2    LWARTCD FIXED(31),    /*RETURN CODE SET BY IKJEFLK*/ 58000003
*             2    LWANAME BDY(WORD),     /* EPLOC FOR ATTACH/XCTL    */68500002
*                                        /* NAME                     */ 69000002
*                  3    LWARNML CHAR(1), /* USED FOR MINOR           */ 69500002
*                                        /*   RESOURCE NAME          */ 70000002
*                                        /*   LENGTH TO ENQ/DEQ      */ 70500002
*                  3    LWARNM CHAR(7),  /*   USED FOR MINOR         */ 71000002
*                                        /*   RESOURCE NAME          */ 71500002
*                                        /*   IMAGE                  */ 72000002
*             2    LWANQDQ CHAR(12),     /*   USED FOR ENQ/DEQ       */ 73500002
*                                        /*   PARAMETER LIST         */ 74000002
*             2    LWAELST,              /* ECB LIST HEADER          */ 74030002
*                  3    LWAAECBP PTR(31), /* PTR TO LWAAECB          */ 74040002
*                  3    LWAPECBP PTR(31), /* PTR TO LWAPECB          */ 74041002
*                       4    LWAEOEL BIT(1), /* END OF LIST BIT      */ 74050002
*             2    LWARCDE FIXED(31),    /* RTN CODE SET BY IKJEFLJ  */ 76000002
*             2    LWATCPU FIXED(32),    /*2 WORDS USED FOR    Y02669*/ 76100002
*             2    LWATCPU1 FIXED(32),   /*TOTAL CPU TIME USED Y02669*/ 76150002
*                                        /*FOR THIS ACCOUNTING Y02669*/ 76160002
*                                        /*PERIOD.             Y02669*/ 76170002
*             2    LWATSRU FIXED(32),    /*2 WORDS USED FOR    Y02669*/ 76220002
*             2    LWATSRU1 FIXED(32),   /*TOTAL SERVICE UNITS Y02669*/ 76270002
*                                        /*USED DURING THIS    Y02669*/ 76320002
*                                        /*ACCT PERIOD.        Y02669*/ 76370002
*             2    LWATCON FIXED(32),    /*2 WORDS USED FOR    Y02669*/ 76380002
*             2    LWATCON1 FIXED(32),   /*TOTAL CONNECT TIME  Y02669*/ 76390002
*                                        /*USED DURING THIS    Y02669*/ 76392002
*                                        /*ACCT PERIOD.        Y02669*/ 76394002
*             2    LWASTCB PTR(31),      /*TCB ADDR IKJEFLA    Y02669*/ 76396002
*             2    LWADEST2 CHAR(8),     /*USERID FOR SYSOUT-  Y02664*/ 76400002
*                                        /*TO REMOTE ENTRY-    Y02664*/ 76500002
*                                        /*STATION.            Y02664*/ 76550002
*             2    LWAGBWKA PTR(31),     /*POINTER TO WORK     Y02669*/ 76600002
*                                        /*AREA FOR IKJEFLGB   Y02669*/ 76650002
*             2    LWASWKA PTR(31),      /*POINTER TO WORK     Y02669*/ 76700000
*                                        /*AREA FOR IKJEFLS    Y02669*/ 76750000
*             2    LWASPF  PTR(31),      /*POINTER TO WORK   @ZA30872*/ 76800000
*                                        /*AREA FOR SPF      @ZA30872*/ 76850000
*             2    *(5)  FIXED(31);      /* RESERVED                 */ 76900000
*%          DCL    LENLWA FIXED;    /* NOTE ---  THIS VALUE MUST   */   76950000
*%                 LENLWA = 172;    /* CHANGE WHEN NEW FIELDS ADDED*/   77000000
*@EJECT;                                                                78510002
*/********************************************************************/ 78520002
*/*                                                                  */ 78540002
*/*    I K J E F L J  R E T U R N  C O D E S                         */ 78560002
*/*                                                                  */ 78580002
*/********************************************************************/ 78600002
*                             /* SWA MANAGER ERROR                   */ 78660002
*LWASWAR:    GEN(EQU   4);                                              78680002
*                             /* MULTI-STEP PROC                     */ 78700002
*LWAMSPE:    GEN(EQU   16);                                             78720002
*/********************************************************************/ 79000002
*/*                                                                  */ 79500002
*/*    P O S T  C O D E S  F O R  P E C B  E C B                     */ 80000002
*/*                                                                  */ 80500002
*/********************************************************************/ 81000002
*                             /* INIT PHASE DONE POST CODE           */ 81500002
*INITDONE:   GEN(EQU  4);                                               82000002
*                             /* ENQ ON USER ID POST CODE            */ 82500002
*NQUSERID:   GEN(EQU  8);                                               83000002
*                             /* DQ ON USER ID                       */ 83500002
*DQUSERID:   GEN(EQU  12);                                              84000002
*                             /* PHASE ONE PRONPTING DONE POST CODE  */ 84500002
*SCHEDULE:   GEN(EQU  16);                                              85000002
*                             /* MESSAGE BROADCASTING DONE POST CODE */ 85500002
*BCDONE:     GEN(EQU  20);                                              86000002
*                             /* TERMINATE THE JOB POST CODE         */ 86500002
*TERMINAT:   GEN(EQU  24);                                              87000002
*/********************************************************************/ 87500002
*/*                                                                  */ 88000002
*/*         P O S T  C O D E S  F O R  S E C B  E C B                */ 88500002
*/*                                                                  */ 89000002
*/********************************************************************/ 89500002
*                             /* NQDQ RETURN CODES                   */ 90000002
*NQDQ0:      GEN(EQU  0);                                               90500002
*                             /* NQDQ RETURN CODES                   */ 91000002
*NQDQ4:      GEN(EQU  4);                                               91500002
*                             /* NQDQ RETURN CODES                   */ 92000002
*NQDQ8:      GEN(EQU  8);                                               92500002
*                             /* START PHASE 2 PROMPTING             */ 94000002
*STARTP2:    GEN(EQU  16);                                              94500002
*                             /* INITATOR READY TO POST              */ 95000002
*INITRDY:    GEN(EQU  20);                                              95500002
*                             /* TERMINATE PROMPTING TASK            */ 96000002
*ENDTASK:    GEN(EQU  24);                                              96500002
* ? DOCUMENT TITLE(DECLARE) POSITION(BOTH) TEXT(LOGON VARIABLES);       98800003
*                                                                       98900003
* DECLARE                                                               99000003
*   SYSIKJUA INIT('SYSIKJUA')        /* MAJOR NAME FOR ...          */  99100003
*            CHAR(8),                                                   99200003
*   LOGONTCB CHAR(1) BASED,          /* USED FOR ENQ/DEQ ...        */  99300000
*                                    /* ... WITH TCB OPTION         */  99309000
* ? DOCUMENT TITLE(DECLARE) POSITION(BOTH) TEXT(MESSAGE NUMBERS);       99318000
*                                                                       99327000
*  MSG56413 CONSTANT(15),  /* RACINIT FAILED BY RACINIT      @Z40RQKC*/ 99336000
*                          /* INSTALLATION EXIT        RC=24 @Z40RQKC*/ 99345000
*  MSG56414 CONSTANT(13),  /* NEW-PSWD FOR RACINIT INVALID   @Z40RQKC*/ 99354000
*                          /*                          RC=16 @Z40RQKC*/ 99363000
*  MSG56415 CONSTANT(52),  /* PSWD EXPIRED AND NO NEW-PSWD   @Z40RQKC*/ 99372000
*                          /*                          RC=12 @Z40RQKC*/ 99381000
*  MSG56416 CONSTANT(53),  /* RACINIT ERROR            RC=XX @Z40RQKC*/ 99400000
*                                                                       99410000
*  MSG56417 CONSTANT(54),  /* GROUP NOT DEFINED TO USER      @Z40RQKC*/ 99420000
*                          /*                          RC=20 @Z40RQKC*/ 99430000
*  MSG56419 CONSTANT(55),  /* GROUP, NEW PSWD IGNORED        @Z40RQKC*/ 99440000
*                          /* FOR NON RACF USER              @Z40RQKC*/ 99450000
*  MSG56421 CONSTANT(8),   /* PSWD NOT AUTHORIZED      RC= 8 @Z40RQKC*/ 99460000
*                                                                       99470000
*  MSG56425 CONSTANT(51),  /* RACINIT TEMPORARILY NOT        @Z40RQKC*/ 99480000
*                          /* ALLOWING USER TO LOGON   RC=28 @Z40RQKC*/ 99490000
*  MSG56426 CONSTANT(56),  /* GROUP/NEWPSWD IGNORED          @Z40NQKC*/ 99500000
*                          /* RACF NOT IN SYSTEM             @Z40NQKC*/ 99510000
*                                                                       99520000
*  /* FOLLOWING MESSAGES ARE FOR RACF V2  8/30/76     */                99530000
*                                                                       99540000
*  MSG56431 CONSTANT(57),  /* LOGON TERMINATED. NOT AUTH     @G32OPKU*/ 99550000
*                          /* TO THIS TERMINAL               @G32OPKU*/ 99560000
*  MSG56432 CONSTANT(58),  /* RECONNECT REJECTED - NOT       @G32OPKU*/ 99570000
*                          /* AUTHORIZED TO THIS TERMINAL    @G32OPKU*/ 99580000
*  MSG56433 CONSTANT(59),  /* OIDCARD IS NOT AUTHORIZED      @G32OPKU*/ 99590000
*  MSG56434 CONSTANT(60),  /* OIDCARD IS REQUIRED            @G32OPKU*/ 99600000
*  MSG56435 CONSTANT(61),  /* NOT A VALID OIDCARD            @G32OPKU*/ 99610000
*  MSG56436 CONSTANT(62),  /* LOGON TERMINATED- OIDCARD NOT  @G32OPKU*/ 99620000
*                          /* SUPPORTED FOR THIS TERMIN TYPE @G32OPKU*/ 99630000
*  MSG56437 CONSTANT(63),  /* ENTER OIDCARD                  @G32OPKU*/ 99640000
*  MSG56438 CONSTANT(64),  /* USE OF GROUP HAS BEEN REVOKED  @G32OPKU*/ 99650000
*  MSG56439 CONSTANT(65),  /* ENTER NEW GROUP NAME           @G32OPKU*/ 99660000
*  MSG56440 CONSTANT(66),  /* RECONNECT REJECTED- PSWD       @G32OPKU*/ 99670000
*                          /* INVALID FOR RACF               @G32OPKU*/ 99680000
*  MSG56441 CONSTANT(67),  /* RECONNECT REJECTED- GROUP NOT  @G32OPKU*/ 99690000
*                          /* AUTHORIZED                     @G32OPKU*/ 99700000
*  MSG56442 CONSTANT(68),  /* RECONNECT REJECTED BY RACF     @G32OPKU*/ 99710000
*                          /* INSTALLATION EXIT              @G32POKU*/ 99720000
*  MSG56443 CONSTANT(69),  /* RECONNECT REJECTED- USER ACCESS@G32OPKU*/ 99730000
*                          /* REVOKED BY RACF                @G32OPKU*/ 99740000
*  MSG56444 CONSTANT(70);  /* RECONNECT REJECTED- USE OF     @G32OPKU*/ 99750000
*                          /* GROUP HAS BEEN REJECTED        @G32OPKU*/ 99760000
./  ADD  SSI=81730276,NAME=IKJEFLWP
 ? DOCUMENT TITLE(DESCRIPTION) POSITION(BEGIN)                          00050000
   TEXT(LOGON DATA PARAMETER LIST);                                     00100000
 ? DOCUMENT TITLE(LEVEL) TEXT(10/06/75 OS/VS2 RELEASE 4.0);             00150000
 ? DOCUMENT TITLE(PURPOSE)                                              00200000
   TEXT(THE FOLLOWING ITEMS ARE USED IN THE LOGON VERIFICATION PROCESS  00250000
   AND ARE ALSO PASSED TO THE SUBMIT COMMAND WHEN SUBMIT USES THE LOGON 00300000
   ENTRY POINT IKJEFLES.                                                00350000
   WHEN SUBMIT FINDS A LOGON COMMAND IN ITS INPUT DATA SET IT GOES TO   00400000
   LOGON TO PARSE THE COMMAND, THEN SUBMIT BUILDS JCL TO EXECUTE TSO    00450000
   COMMANDS IN THE BACKGROUND.);                                        00500000
 ? DOCUMENT TITLE(FORMAT);                                              00550000
 ? DOCUMENT TITLE(#05: LWPXXXXS)                                        00600000
   TEXT(SOME INPUT FOR IKJEFLD IS IN THE FORMAT OF STRING DOPE VECTORS. 00650000
     THIS IS THE BEGINNING OF A STRING DOPE VECTOR.);                   00700000
 ? DOCUMENT TITLE(#05: LWPXXXXP)                                        00750000
   TEXT(USED BY IKJEFLD ONLY, THIS POINTS TO THE ACTUAL ITEM);          00800000
 ? DOCUMENT TITLE(#05: LWPXXXXI)                                        00850000
   TEXT(THIS DENOTES THE BEGINNING OF A TEXT INSERT FOR THIS ITEM);     00900000
 ? DOCUMENT TITLE(#05: LWPXXXXM)                                        00950000
   TEXT(FOR IKJEFLD THIS IS THE MAXIMUM LENGTH OF THE ITEM. OTHERWISE   01000000
     THIS IS THE ITEM LENGTH PLUS FOUR, FOR A TEXT INSERT);             01050000
 ? DOCUMENT TITLE(#05: LWPXXXXL)                                        01100000
   TEXT(THIS IS THE CURRENT LENGTH OF THE ITEM, EXCEPT WHEN USED FOR A  01150000
     TEXT INSERT, THEN IT IS THE OFFSET INTO THE MAIN SEGMENT);         01200000
 ? DOCUMENT TITLE(#05: LWPXXXX)                                         01250000
   TEXT(THIS IS THE ACTUAL ITEM AS RECEIVED FROM THE LOGON COMMAND OR   01300000
     IKJEFLD, THE LOGON INSTALLATION EXIT);                             01350000
 ? DOCUMENT TITLE(MICROFICHE LISTING) TEXT(IKJEFLWP);                   01400000
 ? DOCUMENT TITLE(CHANGE ACTIVITY);                                     01450000
 ? DOCUMENT TITLE(#05: @Z40RQKC)                                        01500000
   TEXT(SUPPORT FOR /NEWPASSWORD AND GROUP-ID FOR RACF)                 01550000
   POSITION(END);                                                       01600000
 @EJECT;                                                                01650000
 DECLARE                                                                01700000
   1 IKJEFLWP BASED(LWPPTR),                                            01750000
                                                                        01800000
     2 LWPUSERS,                     /* USERID STRING DOPE VECTOR    */ 01850000
       3 LWPUSERP PTR(31),           /* POINT TO THE USERID          */ 01900000
       3 LWPUSERI,                   /* USERID TEXT INSERT           */ 01950000
         4 LWPUSERM FIXED(15),       /* MAXIMUM LENGTH OF USERID     */ 02000000
         4 LWPUSERL FIXED(15),       /* CURRENT LENGTH OF USERID     */ 02050000
         4 LWPUSER  CHAR(7),         /* THE USERID                   */ 02100000
         4 *        CHAR(1),                                            02150000
                                                                        02200000
     2 LWPPSWDS,                     /* PSWD STRING DOPE VECTOR      */ 02250000
       3 LWPPSWDP PTR(31),           /* POINTER TO THE PASSWORD      */ 02300000
       3 LWPPSWDI,                   /* PASSWORD TEXT INSERT         */ 02350000
         4 LWPPSWDM FIXED(15),       /* MAXIMUM LENGTH OF PASSWORD   */ 02400000
         4 LWPPSWDL FIXED(15),       /* CURRENT LENGTH OF PASSWORD   */ 02450000
         4 LWPPSWD  CHAR(8),         /* THE PASSWORD                 */ 02500000
                                                                        02550000
     2 LWPPROCS,                     /* PROCNAME STRING DOPE VECTOR  */ 02600000
       3 LWPPROCP PTR(31),           /* POINTER TO THE PROC NAME     */ 02650000
       3 LWPPROCI,                   /* TEXT INSERT FOR PROC NAME    */ 02700000
         4 LWPPROCM FIXED(15),       /* MAXIMUM LENGTH OF PROC NAME  */ 02750000
         4 LWPPROCL FIXED(15),       /* CURRENT LENGTH OF PROC NAME  */ 02800000
         4 LWPPROC  CHAR(8),         /* THE PROC NAME                */ 02850000
                                                                        02900000
     2 LWPACCTS,                     /* ACCT# STRING DOPW VECTOR     */ 02950000
       3 LWPACCTP PTR(31),           /* POINTER TO THE ACCOUNT NUMBER*/ 03000000
       3 LWPACCTI,                   /* TEXT INSERT FOR ACCOUNT NUM  */ 03050000
         4 LWPACCTM FIXED(15),       /* MAXIMUM LENGTH FOR ACCT NUM  */ 03100000
         4 LWPACCTL FIXED(15),       /* CURRENT LENGTH OF ACCOUNT NUM*/ 03150000
         4 LWPACCT  CHAR(40),        /* THE ACCOUNT NUMBER           */ 03200000
                                                                        03250000
     2 *,                                                               03300000
       3 LWPREGNP PTR(31),           /* POINT TO REGION SIZE         */ 03350000
       3 LWPREGNI,                   /* TEXT INSERT FOR REGION SIZE  */ 03400000
         4 LWPREGNM FIXED(15),       /* MAXIMUM LENGTH OF REGION SIZE*/ 03450000
         4 LWPREGNL FIXED(15),       /* CURRENT LENGTH OF REGION SIZE*/ 03500000
         4 LWPREGN  CHAR(8),         /* THE REGION REGN IN EBCDIC    */ 03550000
         4 LWPREGNX FIXED(31),       /* THE REGION REGN IN HEX       */ 03600000
                                                                        03650000
     2 *,                                                               03700000
       3 LWPPERFP PTR(31),           /* POINTER TO PERFORMANCE GROUP  */03750000
       3 LWPPERFI,                   /* TEXT INSERT FOR PERF GROUP    */03800000
         4 LWPPERFM FIXED(15),       /* MAXIMUM LENGTH OF PERF GROUP  */03850000
         4 LWPPERFL FIXED(15),       /* CURRENT LENGTH OF PERF GROUP  */03900000
         4 LWPPERF  CHAR(8),         /* THE PERFORMANCE GROUP-EBCDIC */ 03950000
         4 LWPPERFX FIXED(31),       /* THE PERFORMANCE GROUP IN HEX */ 04000000
                                                                        04050000
     2 LWPDESTS,                     /* DEFAULT DEST STRING DOPE VECT*/ 04100000
       3 LWPDESTP PTR(31),           /* POINTER TO DEST USERID       */ 04150000
       3 LWPDESTI,                   /* TEXT INSERT FOR DEST USERID  */ 04200000
         4 LWPDESTM FIXED(15),       /* MAXIMUM LENGTH OF DEST USERID*/ 04250000
         4 LWPDESTL FIXED(15),       /* CURRENT LENGTH OF DEST USERID*/ 04300000
         4 LWPDEST  CHAR(8),         /* THE DEST USERID              */ 04350000
 ? DOCUMENT TITLE(DESCRIPTION) POSITION(BOTH)                           04400000
   TEXT(LOGON DATA PARAMETER LIST - CONTINUED);                         04450000
                                                                        04500000
     2 LWPNPSWS,                     /* NEW PSWD-DOPE VECTOR @Z40RQKC*/ 04550000
       3 LWPNPSWP PTR(31),           /* PTR TO NEW PSWD      @Z40RQKC*/ 04600000
       3 LWPNPSWI,                   /* NEW PSWD TEXT INSERT @Z40RQKC*/ 04650000
         4 LWPNPSWM FIXED(15),       /* MAX LEN OF NEW PSWD  @Z40RQKC*/ 04700000
         4 LWPNPSWL FIXED(15),       /* CUR LEN OF NEW PSWD  @Z40RQKC*/ 04750000
         4 LWPNPSWD CHAR(8),         /* THE NEW PSWD         @Z40RQKC*/ 04800000
                                                                        04850000
     2 LWPGRPS,                      /* GROUP ID             @Z40RQKC*/ 04900000
       3 LWPGRPP  PTR(31),           /* PTR TO GROUP ID      @Z40RQKC*/ 04950000
       3 LWPGRPI,                    /* GROUP ID TEXT INSERT @Z40RQKC*/ 05000000
         4 LWPGRPM  FIXED(15),       /* MAX LEN OF GROUP ID  @Z40RQKC*/ 05050000
         4 LWPGRPL  FIXED(15),       /* CUR LEN OF GROUP ID  @Z40RQKC*/ 05100000
         4 LWPGRP   CHAR(8),         /* THE GROUP ID         @Z40RQKC*/ 05150000
     2 LWPFLAGS     CHAR(4),         /* FLAG AREA            @G32OPKU*/ 05200000
       3 LWPFLGS1  BIT(8),           /*                      @G32OPKU*/ 05250000
         4 LWPRECON BIT(1),          /* SET TO ONE WHEN      @G32OPKU*/ 05300000
                                     /* RECONNECT REQUESTED AND IT IS*/ 05350000
                                     /* NOT SUBMIT           @G32OPKU*/ 05400000
         4 LWPMAIL  BIT(1),          /* MAIL OR NOMAIL WAS   @G32OPKU*/ 05450000
                                     /* REQUESTED ON LOGON   @G32OPKU*/ 05500000
         4 LWPNOTIC BIT(1),          /* NOTICES OR NONOTICES         */ 05550000
                                     /* REQUESTED ON LOGON   @G32OPKU*/ 05600000
         4 LWPOIDCD BIT(1),          /* OIDCARD KEYWORD USED ON      */ 05650000
                                     /* LOGON COMMAND        @G32OPKU*/ 05700000
         4 *        BIT(4),          /* RESERVED             @G32OPKU*/ 05750000
       3 *          CHAR(3);         /* RESERVED             @G32OPKU*/ 05800000
./  ADD  SSI=53300368,NAME=IKJEFPWA
*         %  GOTO  PWABSL;      /*                               F41448 00020501
         MACRO                                                          00020901
&WORK    IKJEFPWA                                                       00021000
.* OS RELEASE 20 SUPPORT CODE -- 20035                                  00021101
.*                                                                      00021501
.*A 000205,015620-015640,023400-082372                           F41448 00021901
.*                                                                      00023901
.* VS RELEASE 1.6 - SUPPORT CODE -- Y01156                              00025301
.* VS RELEASE 2.0 - SUPPORT CODE -- Y02666                              00026303
.* VS RELEASE 3.0 SUPPORT CODE --Y30NQJN                                00027303
.*                                                                      00029403
*********************************************************************** 00032803
*                                                                     * 00039603
         AIF  ('&WORK' NE 'CSWORK').PWA                                 00043003
*                     COMMAND SCAN WORKSPACE                          * 00046403
         AGO  .CSWA                                                     00049803
.PWA     ANOP                                                           00053203
*                     PARSE PERMANENT WORKSPACE                       * 00056603
.CSWA    ANOP                                                           00060003
*                                                                     * 00063003
*********************************************************************** 00066003
         SPACE                                                          00070000
&WORK    DSECT                                                          00080000
         SPACE                                                          00090000
         DS    18F                     SAVE AREA                        00100000
ADDRSAVE DS    4F                      SAVEAREA FOR ADDRESS RTN.Y30NQJN 00101003
P20SAVE  DS    4F                      SAVE AREA FOR IKJEFP20    Y02666 00102002
INTEGER  DS    4D                      WORKAREA FOR P20 CONVERT RTN.    00104002
*                                                                YM5578 00107002
         SPACE                                                          00110000
PDWORD   DS    D                       SCRATCH/SAVE/CONVERT AREA        00120000
*                                                                       00130000
ENDINPUT DS    A                       LAST INPUT CHARACTER ADDRESS -   00160000
*                                         USED TO DETERMINE END OF DATA 00170000
*                                                                       00180000
* POINTER TO START OF DATA BEING SCANNED SET BY SKIPB SUBROUTINE. ALSO  00181000
* LENGTH OF DATA FIELD. THESE AREAS MUST BE CONTIGUOUS.                 00182000
*                                                                       00183000
PPOINTR  DS    A                       LAST ENTITY START                00184000
*                                                                       00185000
PLENGTH  DS    H                       LAST ENTITY LENGTH               00186000
*                                                                       00186100
RETCODE  DS    X                       RETURN CODE AREA                 00186400
         SPACE                                                          00186500
         AIF  ('&WORK' NE 'CSWORK').GO                                  00186700
CSWORKSZ EQU  *-CSWORK   SIZE OF COMMAND SCAN WORKAREA                  00186800
         MEXIT                                                          00186900
.GO      ANOP                                                           00187000
SUBRWORK DS    D                       SCRATCH/SAVE AREA FOR SUBROUTINE 00187300
*                                                                       00188000
XPDL     DS    A                       ADDRESS OF PDL                   00190000
         SPACE                                                          00200000
TEMPSAVE DS    A                       USED TO TEMPORARILY STORE R1     00270000
*                                      BEFORE LINKING TO TRANSLATE      00280000
*                                      ROUTINE                          00290000
         SPACE                                                          00300000
*                                                                       00310000
* PERMANENT WORKSPACE FLAGS.                                            00320000
*                                                                       00330000
PFLAGS   DS    X                       FIRST FLAG BYTE                  00340000
*                                                                       00350000
PFLAGS2  DS    X                       SECOND FLAG BYTE                 00360000
*                                                                       00370000
PFLAGS3  DS    X                       THIRD FLAG BYTE                  00380000
*                                                                       00381000
PFLAGS4  DS    X                       FORTH FLAG BYTE                  00382000
*                                                                       00384001
PFLAGS5  DS    X                       FIFTH FLAG BYTE           S21105 00386001
PFLAGS6  DS    X                       SIXTH FLAG BYTE           Y01156 00388001
PFLAGS7  DS    X                       SEVENTH FLAG BYTE         Y02666 00388402
PFLAGS8  DS    X                       EIGHTH FLAG BYTE          Y02666 00388802
         SPACE                                                          00390000
*                                                                       00470000
* WORKSPACE NEEDED FOR STORAGE ALLOCATION SUBROUTINE.                   00480000
*                                                                       00490000
PANCHOR  DS    A                       ANCHOR FOR STORAGE CHAIN         00500000
*                                                                       00510000
PANCHORT DS    A                       INTERAL MSS CHAIN FREE Q ANCHOR  00520000
         SPACE                                                          00530000
*                                                                       00540000
* PARAMETER LIST FOR CONDITIONAL GETMAIN SUBROUTINE.                    00550000
*                                                                       00560000
PGETLIST DS    0F                      * * * *                          00570000
*                                                                       00580000
PGETLNTH DS    F                       LENGTH REQUESTED                 00590000
*                                                                       00600000
PGETRADR DS    F                       ADDR IN WHICH ALLOCATED SPACE    00610000
*                                         ADDR IS PLACED                00620000
*                                                                       00630000
PGETMDSP DS    H                       MODE AND SUBPOOL                 00640000
         SPACE                                                          00650000
*                                                                       00660000
* THE FIRST INPUT PUSHDOWN STACK. IF THIS STACK FILLS UP A GETMAIN IS   00670000
* ISSUED FOR AN ADDITIONAL STACK, HIS PROCESS CONTINUES INDEFINITLY.    00680000
* THE STACKS ARE BACKWARD CHAINED WITH THE FIRST STACKS CHAIN WORD      00690000
* REMAINING ZERO. EACH NEW ENTRY IN THE STACK CONSISTS OF TWO WORDS,    00700000
* THE FIRST IS THE CONTENTS OF XINPUT, THE SECOND THE CONTENTS OF       00710000
* ENDINPUT. THE NEXT FREE AREA IN THE STACK IS FOUND BY USING PIPDLX    00720000
* AS AN INDEX INTO THE STACK.                                           00730000
*                                                                       00740000
PIPDLCUR DS    A                       ADDRESS OF CURRENT INPUT         00750000
*                                         PUSHDOWN STACK                00760000
*                                                                       00770000
PIPDLCHN DS    A                       STORAGE CHAIN - SHOULD BE ZERO   00780000
*                                                                       00790000
         DS    (2*IPDLMAXE)A           FIRST INPUT PUSHDOWN STACK       00800000
*                                                                       00810000
PIPDLX   DS    X                       INDEX TO NEXT FREE AREA IN THE   00820000
*                                         CURRENT PUSHDOWN STACK        00830000
         SPACE                                                          00840000
PLINKSV1 DS    A                       SAVE AREA FOR RETURN ADDRESS OF  00850000
*                                         LINK1 ROUTINES WHICH USE      00860000
*                                         LINK2 ROUTINES AS SUBROUTINES 00870000
         SPACE                                                          00880000
INVPSAVE DS    A                       BEGINNING ADDR OF PARM           00890000
*                                         USED IF PARM IS INVALID       00900000
*                                                                       00910000
* ADDRESSES FOR KEYWORD SCANS.                                          00920000
*                                                                       00930000
PKEYWDPS DS    A                       POINTER TO CURRENT NAME ENTRY    00940000
*                                                                       00950000
PKEYWDPC DS    A                       POINTER TO CURRENT IKJKEYWD PCE  00960000
*                                                                       00970000
PKEYWDPX DS    A                       TO SAVE IKJKEYWD PCE ADDRESS     00980000
*                                                                       00990000
PKEYWDTB DS    A                       PCL RESULT DURING KEYWORD        01000000
*                                         PROCESSING                    01010000
*                                                                       01020000
PKEYWDPM DS    A                       SAVE AREA FOR PDE DURING         01030000
*                                         KEYWORD SCAN                  01040000
         SPACE                                                          01050000
*                                                                       01060000
PTABLEAD DS    A                       START OF PCL ADDRESS             01070000
         SPACE                                                          01080000
PTABLEND DS    A                       END OF PCL ADDRESS               01090000
         EJECT                                                          01100000
*                                                                       01110000
* THE FOLLOWING FIELDS ARE USED AS A TEMPORARY POSITIONAL PDE. THE      01120000
* FIELDS ARE MOVED FROM HERE TO THE ACTUAL PDE BY THE POSITIONAL EXIT   01130000
* ROUTINE. THE AREAS MUST BE CONTIGUOUS.                                01140000
*                                                                       01150000
TEMPPDE  DS    0F                      NAME TEMPORARY AREA              01160000
*                                                                       01170000
DATAPTR1 DS    A                       POINTER TO STRING, PSTRING,      01180000
*                                         QSTRING, PASSWORD, DSNAME,    01190000
*                                         LOADNAME OR VALUE             01200000
*                                                                       01210000
DATALEN1 DS    H                       LENGTH OF ABOVE DATA             01220000
*                                                                       01230000
DATAFLA1 DS    X                       FLAG BYTE                        01240000
*                                                                       01250000
DATAFLB1 DS    X                       TYPE CODE FOR VALUE              01260000
*                                                                       01270000
DATAPTR2 DS    A                       POINTER TO MEMBER OR ENTRY NAME  01280000
*                                                                       01290000
DATALEN2 DS    H                       LENGTH OF ABOVE DATA             01300000
*                                                                       01310000
DATAFLA2 DS    X                       FLAG BYTE                        01320000
*                                                                       01330000
DATAFLB2 DS    X                       RESERVED BYTE                    01340000
*                                                                       01350000
DATAPTR3 DS    A                       POINTER TO PASSWORD OR ADDRESS   01360000
*                                                                       01370000
DATALEN3 DS    H                       LENGTH OF ABOVE DATA             01380000
*                                                                       01390000
DATAFLA3 DS    X                       FLAG BYTE                        01400000
*                                                                       01410000
DATAFLB3 DS    X                       RESERVED BYTE                    01420000
*                                                                       01430000
*                                      FOLLOWING FIELDS USED BY ADDRESS 01440000
DATAFLG  DS    X                       REGISTER NOTATION FLAGS          01450000
*                                                                       01460000
DATASGN  DS    X                       SIGN OF FIRST VALUE              01470000
*                                                                       01480000
DATAICT  DS    H                       INDIRECT ADDRESSING COUNT        01490000
*                                                                       01500000
DATAEXP  DS    A                       POINTER TO NEXT EXPRESSION VALUE 01510000
*                                         PDE                           01520000
*                                                                       01530000
DATAUSER DS    F                       USER WORD                        01540000
*                                                                       01550000
LTPDE    EQU   *-TEMPPDE               LENGTH OF TEMPORARY PDE          01560000
CBADD    DS    11F                     COBOL SUPPORT ADDITIONS   F41448 01562001
CBLTPDE  EQU   *-TEMPPDE               LEN OF TEMPPDE FOR COBOL  F41448 01564001
         EJECT                                                          01570000
         SPACE                                                          01580000
ENDBAKUP DS    A                       BACKUP FOR ENDINPUT IF PFSCANX   01590000
*                                         FLAG IS ON                    01600000
         SPACE                                                          01610000
PDELIM   DS    C                       SELF-DEFINED DELIMITER STORED BY 01620000
*                                         DELIMITR PCE ROUTINE          01630000
         SPACE                                                          01640000
*                                                                       01650000
         SPACE                                                          01660000
PPCOUNT  DS    PL1                     POSITIONAL DATA SIZE             01670000
         SPACE                                                          01680000
PPDESIZE DS    PL1                     POSITIONAL PDE SIZE              01690000
         SPACE                                                          01700000
PERRCODE DS    AL1                     INDEX TO RESCAN ADDRESS TABLE    01710000
         SPACE                                                          01720000
PKEYWDVL DS    AL2                     TO SAVE VALUE DURING KEYWORD     01730000
*                                         LOOKUP                        01740000
         SPACE                                                          01750000
RNG2ADDR DS    A                       ADDR OF 2ND PDE FOR A RANGE      01760000
         SPACE                                                          01770000
SEGLIST  DS    5F                      LIST OF MESSAGE SEGMENTS FOR     01780000
*                                         I/O SERVICE ROUTINES          01790000
         SPACE                                                          01800000
PREVPDEL DS    F                       USED TO CONTAIN THE PREVIOUS PDE 01810000
*                                         ADDRESS SO THAT THE VALIDITY  01820000
*                                         CHECK ROUTINE CAN FETCH IT    01830000
*                                         WHEN A RETURN CODE OF 4 OR 8  01840000
*                                         IS RETURNED TO IT BY THE USER 01850000
         SPACE                                                          01860000
VCEPARAM DS    0F                      VALIDITY CHECK EXIT PARAMETERS   01870000
PDEADR   DS    A                       ADDRESS OF PDE JUST CONSTRUCTED  01880000
*                                                                       01890000
USERWORD DS    F                       USER DATA PASSED IN PARSE INPUT  01900000
*                                         PARAMETER LIST                01910000
VALMSG   DS    F                       ADDRESS OF SECOND LEVEL MESSAGE  01912000
*                                        FROM VALIDITY CHECK            01914000
         SPACE                                                          01920000
MSGCODE  DS    X                       OFFSET TO MESSAGE ADDRESS        01930000
         SPACE                                                          01940000
*                                                                       01950000
* MESSAGE SEGMENT CONTAINING THE LAST PRIMARY MESSAGE ID. THIS IS USED  01960000
* AS SEGMENT ONE OF HELP MESSAGES PASSED TO THE I/O SERVICE ROUTINES.   01970000
* IT INCLUDES THE FOUR BYTE HEADER REQUIRED BY THE I/O ROUTINES AND     01980000
* THE WORD 'ENTER'.                                                     01990000
*                                                                       02000000
PRIMSGID DS    CL20                    PRIMARY MESSAGE SEGMENT          02010000
         SPACE                                                          02020000
SAVLSLEN DS    H                       USED TO SAVE THE CORE SIZE       02030000
*                                         REQUESTED BY THE HELP MESSAGE 02040000
*                                         ROUTINE                       02050000
         SPACE                                                          02060000
PLUSSEG  DS    CL5                     PLUS SIGN MESSAGE SEGMENT        02090000
         SPACE                                                          02100000
*                                                                       02110000
* SAVE AREAS FOR ADDRESSES OF I/O SERVICE ROUTINES 'LOADED' DURING      02120000
* INITIALIZTION.                                                        02130000
*                                                                       02140000
PUTLPTR  DS    A                       PUTLINE SERVICE ROUTINE ADDRESS  02150000
*                                                                       02160000
PUTGPTR  DS    A                       PUTGET SERVICE ROUTINE ADDRESS   02170000
         SPACE                                                          02180000
*                                                                       02190000
* SAVE AREA FOR PART OF INPUT PARAMETER LIST PASSED TO THE I/O SERVICE  02200000
* ROUTINES. THESE FIELDS MUST BE CONTIGUOUS.                            02210000
*                                                                       02220000
SRPARAMS DS    0F                      NAME THE LIST                    02230000
*                                                                       02240000
UPTADDR  DS    F                       FIRST WORD OF INPUT PARAMETERS   02250000
*                                                                       02260000
ECTADDR  DS    F                       SECOND WORD OF INPUT PARAMETERS  02270000
*                                                                       02280000
ECBADDR  DS    F                       THIRD WORD OF INPUT PARAMETERS   02290000
*                                                                       02300000
         DS    F                       FOURTH WORD OF INPUT PARAMETERS  02310000
         SPACE                                                          02320000
*********************************************************************** 02340001
*                                                              F41448 * 02360001
*          ADDITIONS TO PARSE PERMANENT WORKSPACE FOR COBOL    F41448 * 02380001
*                     SYMBOLIC DEBUG SUPPORT                   F41448 * 02400001
*                                                              F41448 * 02404001
*********************************************************************** 02404801
OPEREND  DS    A                       PTR TO LAST PCE UNDER OPER       02404901
*                                                                F41448 02405001
RSVWDPCE DS    A                       PTR - PCE BEING USED BY IKJRSVWD 02405101
*                                                                F41448 02405201
TERMXPCE DS    A                       PTR TO MAJOR TERM PCE     F41448 02406001
*                                                                F41448 02406801
OPERPCE  DS    A                       PTR TO PCE FOR THIS EXPRESSION   02406901
*                                                                F41448 02407001
OPERSVE  DS    A                       PTR TO LEFT PAREN OF EXPRESSION  02407101
*                                                                F41448 02407201
RSVWDSV1 DS    A                       SAVE AREA USED BY IKJRSVWD       02407301
*                                                                F41448 02407401
RSVWDSV2 DS    A                       SAVE AREA USED BY IKJRSVWD       02407501
*                                                                F41448 02409301
CBLNKSV1 DS    A                       LINK SAVE AREA FOR RETURN ADDRS  02410101
*                                                                F41448 02410901
CBLNKSV2 DS    A                       LINK SAVE AREA FOR RETURN ADDRS  02411701
*                                                                F41448 02411801
ENDNMPTR DS    A                       PTR TO END OF CURRENT DATANAME   02411901
*                                                                F41448 02412201
CHAINPTR DS    A                       PTR TO CHAIN POINTERS OF  F41448 02412301
*                                       DATANAME QUALIFIER PDE'S F41448 02412401
*                                                                F41448 02412501
PDEPTR   DS    A                       PTR TO NEXT AVAIL. SLOT   F41448 02412601
*                                       IN TEMPPDE               F41448 02412701
*                                                                F41448 02413101
AANC     DS    A                       STORAGE ANCHORS USED TO   F41448 02413901
TANC     DS    A                        CONTROL ALLOCATION OF    F41448 02414001
OANC     DS    A                        PDE'S FOR DATANAME QUAL  F41448 02414101
ENDANC   DS    A                        IN COR GOTTEN VIA STALOC F41448 02414501
*                                                                F41448 02415301
PRMTPTR  DS    A                       PTR TO FIRST CHAR OF INV  F41448 02415401
*                                       DATA FOR SPEC MSG FORMAT F41448 02415501
*                                                                F41448 02415901
OPERLL   DS    H                       LEN OF PDE FIELDS UNDER OPER     02416701
*                                                                F41448 02416801
MSGAREA  EQU   *                       PARMS PASSED TO PROMPT FOR       02416901
*                                       SPECIAL MSG FORMATTING   F41448 02417301
MSGLEN   DS    H                       LEN OF 1ST SEG FOR SPCMSG F41448 02418101
MSGADDR  DS    A                       ADDR OF 1ST SEGMENT FOR SPECMSG  02418201
*                                                                F41448 02418301
DIGITCT  DS    X                       DIGIT COUNTER FOR STRING LEN     02423001
*                                                                F41448 02427001
ELEMNCT  DS    X                       NUMBER OF SUBSCRIPTS      F41448 02427801
*                                                                F41448 02427901
QUALCT   DS    X                       NUMBER OF DATANAME QUALIFIERS    02428001
*                                                                F41448 02428101
CBFLAGS1 DS    X                       FLAG BYTE ONE             F41448 02428201
*                                                                F41448 02428301
COBOLMOD EQU   X'80'                   A COBOL MACRO PROCESSOR IS       02428801
*                                       PROCESSING               F41448 02429601
OPERMODE EQU   X'40'                   PROCESSING UNDER AN OPER PCE     02429701
SUBSMODE EQU   X'20'                   TERM SUBSCRIPT MODE BIT   F41448 02429801
NAMEREQD EQU   X'10'                   TERM - DATANAME EXPECTED NEXT    02429901
ERRORBIT EQU   X'08'                   TERM - ERROR HAS OCCURED  F41448 02431801
*                                                                F41448 02431901
RSVDPRMT EQU   X'04'                   RSVWD HAS BEEN PROMPTED FOR      02432601
*                                                                F41448 02432701
OPERPRMT EQU   X'02'                   EXPRESSION HAS BEEN PROMPTED FOR 02433401
*                                                                F41448 02433501
RC16     EQU   X'01'                   A 16 RETURN CODE FROM VALIDITY   02433601
*                                                                F41448 02433901
*                                       CHECK HAS BEEN ENCOUNTERED      02446301
*                                                                F41448 02446701
CBFLAGS2 DS    X                       SECOND FLAG BYTE          F41448 02447101
*                                                                F41448 02447501
SPECMSG  EQU   X'80'                   SPECIAL FORMAT MSG TO BE  F41448 02447901
*                                                                F41448 02448001
LFTPAREN EQU   X'40'                   A LEFT PAREN IS TO BE ADDED      02448301
*                                                                F41448 02448701
RHTPAREN EQU   X'20'                   A RIGHT PAREN IS TO BE ADDED     02448801
*                                                                F41448 02449101
CHAINTRM EQU   X'10'                   A TERM CHAINED UNDER AN OPER     02449201
PARS2IN  EQU   X'08'                   IKJPARS2 HAS BEEN LOADED  F41448 02449501
*                                                                F41448 02449801
PRMTSCAN EQU   X'04'                   USED BY IKJTERM FOR PRMT DATA    02449901
*                                                                F41448 02450001
BUFPOPED EQU   X'02'                   FLAG FOR SCANF TO SHOW RECURSION 02450301
*                                                                F41448 02450701
RNGADDED EQU   X'01'                   1ST VALUE OF RNGE HAS BEEN ADDED 02450901
*                                                                F41448 02451101
*                                                                F41448 02451501
CBFLAGS3 DS    X                       THIRD FLAG BYTE - RESERVED       02451901
*                                                                F41448 02452301
FIRSTNAM EQU   X'80'                   1ST D.N. OF VAR. ENCOUNTERED     02452701
*                                                                F41448 02452801
CTFOUND  EQU   X'40'                   BEGIN. OF CHN TRM SBSCRPT FND    02453101
*                                                                F41448 02453301
BLNKFLAG EQU   X'20'                   OPER PTING TO BLNK FOR INVALID   02453501
*                                      MESSAGE FOR MSGSETUP      F41448 02453901
*                                                                F41448 02454301
CBFLAGS4 DS    X                       FOURTH FLAG BYTE          F41448 02454701
*                                                                F41448 02455101
TRANAREA DS    H                       TERM TRANSLATE AREA FOR OF/IN    02455501
*                                                                F41448 02455901
CORELEN  DS    H                       LEN OF AREA GOTTEN FOR SPEC MSG  02456301
*                                                                F41448 02456701
PARS2ADR DS    A                       ADDR OF IKJPARS2 LOAD MODULE     02457101
*                                                                F41448 02457501
VCONAD   DS    A                       ADDR OF VCON TABLE IN IKJPARS    02457901
*                                                                F41448 02458301
GOREGSV  DS    A                       RETURN ADDR FROM SUBROUTINES     02458701
*                                                                F41448 02459101
TERMBASE DS    A                       SAVE AREA FOR TERM BASEREG       02459501
*                                                                F41448 02459901
OPERBASE DS    A                       SAVE AREA FOR OPER BASEREG       02460301
*                                                                F41448 02460701
BASE3SV  DS    A                       SAVE AREA - PARSE BASE REG 3     02461101
*                                                                F41448 02461501
BASE2SV  DS    A                       SAVE AREA - PARSE BASE REG 2     02461901
*                                                                F41448 02462301
BASE1SV  DS    A                       SAVE AREA - PARSE BASE REG 1     02462701
*                                                                F41448 02463101
RBASESV1 DS    A                       SAVE AREA - PARSE RBASE   F41448 02463501
*                                                                F41448 02463901
CBLRET   DS    A                       POINT TO RETURN TO IN THE NEW    02464301
*                                                                F41448 02464701
*                                       IKJPARS2 LOAD MODULE AFTER      02465001
*                                                                F41448 02465101
*                                      EXECUTION OF A PARSE SUBROUTINE  02465201
*                                                                F41448 02465501
COREADDR DS    A                       ADDR OF AREA GOTTEN FOR SPECMSG  02465901
*                                                                F41448 02466301
AUTOBASE DS    A                       SAVE AREA FOR DATAREG (FOR BSL)  02466701
*                                                                F41448 02467101
WORKSAVE DS    4A                      WORKREG SAVE AREA FOR LINKAGE    02467501
*                                                                F41448 02467901
PLINKSV2 DS    A                       SAVE AREA FOR RETURN ADDR FROM   02468301
*                                      VALIDITY CHECK AND CODE4  F41448 02468701
*                                                                       02468801
*  INFORMATION NEEDED TO SET UP THE MESSAGE FOR SPECIFYING THE          02468901
*  KEYWORD FOR WHICH THE SUBFIELD IS BEING PROMPTED FOR          Y01156 02469001
*                                                                       02469601
KEYPTR   DS    A                       KEYWORD PTR               Y01156 02470001
KEYLEN   DS    H                       KEYWORD LENGTH            Y01156 02470101
KEYBUF   EQU   *                       KEYWORD MSG BUFFER        Y01156 02470201
KEYBUFLN DS    H                       LENGTH OF BUFFER          Y01156 02470301
KEYBUFOF DS    H                       OFFSET TO KEYWORD         Y01156 02471501
KEYDATA  DS    CL33                    ACTUAL USER KEYWORD       Y01156 02473501
         DS    0F                                                       02475601
*                                                                       02475701
* ALLOCATE SPACE IN WHICH TO MOVE THE L FORM OF THE I/O SERVICE ROUTINE 02476201
* MACROS.                                                               02476701
*                                                                       02477201
PUTLINE  PUTLINE ,MF=L                 * * * *                          02477701
         SPACE                                                          02478201
PUTGET   PUTGET ,MF=L                  * * * *                          02478701
         SPACE                                                          02479201
         DS    0D                      ALIGN FOR FREEMAIN OF RWORK      02479701
*                                                                       02480201
WORKSZ EQU   *-&WORK                   LENGTH OF COBOL WORK AREA +      02480701
*                                       PARSE PREMANENT WORKAREA        02481201
         MEND                                                 F41448 */ 02481701
 %     PWABSL:    ;                                                     02482201
 %   DCL WORKSZ CHAR;                                                   02482701
 %   WORKSZ='LENGTH(PWORK)';                                            02483201
 %   DCL CBLTPDE CHAR;                                                  02483701
 %   CBLTPDE='LENGTH(TEMPPDE)';                                         02484201
 %   DCL LTPDE CHAR;                                                    02484701
 %   LTPDE='LENGTH(TEMPPDE2)';                                          02485201
 /*                                                           F41448 */ 02485701
 DCL   1 PWORK BASED(PWRKBASE) BDY(DWORD),  /*                F41448 */ 02486201
 /*                                                           F41448 */ 02486701
                                       /* PARSE PERMANENT WORKSPACE  */ 02487201
 /*                                                           F41448 */ 02487701
         2 DUMMY1,                     /* USED TO FIND LEN OF CSWORK */ 02488201
           4 SAVE1(18) PTR(31),        /* SAVE AREA           F41448 */ 02488701
           4 ADDRSAVE(4) PTR(31),      /* SAVEAREA FOR ADDRESS RTN./-*/ 02488803
 /*                                      -IKJEFP03            Y30NQJN*/ 02488903
           4 P20SAVE(4) PTR(31),       /* IKJEFP20 SAVE AREA  Y02666 */ 02489102
           4 INTEGER(8) PTR(31) BDY(DWORD),  /* P20 WORK AREA YM5578 */ 02489402
           4 PDWORD(2) PTR(31) BDY(DWORD), /* SCRATCH/SAVE/CONVERT*/    02489701
             6 PDWORD1 CHAR(4),                                         02490102
             6 PDWORD2 PTR(31),                                         02497102
               8 PDWD CHAR(1),                                          02497302
 /*                                                           F41448 */ 02497702
           4 ENDINPUT PTR(31),         /* LAST INPUT CHAR. ADDRESS   */ 02498002
 /*                                                           F41448 */ 02498802
                                       /*USED TO DETERMINE END OF DAT*/ 02499602
 /*                                                           F41448 */ 02500402
 /* POINTER TO START OF DATA BEING SCANNED SET BY SKIPB SUBROUTINE   */ 02501202
 /* ALSO LENGTH OF DATA FIELD. THESE AREAS MUST BE CONTIGUOUS F41448 */ 02502002
 /*                                                           F41448 */ 02502802
           4 PPOINTR PTR(31),          /* LAST ENTITY START   F41448 */ 02503602
                                                                        02504402
           4 PLENGTH FIXED(15),        /* LAST ENTITY LENGTH  F41448 */ 02505202
 /*                                                           F41448 */ 02506002
           4 RETCODE PTR(8),           /* RETURN CODE AREA           */ 02506802
 /*                                                           F41448 */ 02507602
         2 DUMMY2  BDY(DWORD),         /* TO PUT SUBRWORK ON DWRD BDY*/ 02508402
 /*                                                           F41448 */ 02509202
           3 SUBRWORK(2) PTR(31),      /*       SCRATCH/SAVE AREA    */ 02510002
 /*                                                           F41448 */ 02510802
         2 XPDL PTR(31),               /* ADDRESS OF PDL             */ 02511602
 /*                                                           F41448 */ 02512402
         2 TEMPSAVE PTR(31),           /*USED TO TEMPORARILY SAVE R1 */ 02513202
 /*                                                           F41448 */ 02514002
                                       /*BEFORE LINKING TO TRANSLATE */ 02514802
                                       /* ROUTINE             F41448 */ 02515602
                                                                        02516402
 /*          PREMANENT WORKSPACE FLAGS                        F41448 */ 02517202
                                                                        02518002
         2 PFLAGS BIT(8),              /* FIRST FLAG BYTE     F41448 */ 02518802
 /*                                                           F41448 */ 02519602
           3 PFLIST BIT(1),            /* CURRENTLY PROCESSING LIST */  02520402
 /*                                                           F41448 */ 02521202
           3 PFDEFLT BIT(1),           /* INDICATES A DEFAULT TAKEN  */ 02522002
 /*                                                           F41448 */ 02522802
           3 PFENDF BIT(1),            /* END OF INPUT AREA HAS BEEN */ 02523602
                                       /* REACHED             F41448 */ 02524402
 /*                                                           F41448 */ 02525202
           3 ADREXP BIT(1),            /* INDICATE ADDRESS EXPRESSION*/ 02526002
 /*                                                           F41448 */ 02526802
           3 HEXBIT BIT(1),            /* ADDRESS EXPRESSION CONTAINS*/ 02527602
                                       /* A HEX CHARACTER     F41448 */ 02528402
 /*                                                           F41448 */ 02529202
           3 PFBYPAS BIT(1),           /* BYPASS MODE IS TO BE ESTAB*/  02530002
 /*                                                           F41448 */ 02530802
           3 PFNEW BIT(1),             /* USED BY ADDRESS ROUTINE TO */ 02531602
 /*                                                           F41448 */ 02532402
                                       /* DENOTE A NEW VALID ADDRESS */ 02533202
 /*                                                           F41448 */ 02534002
                                       /* ENTRYNAME (WITH OR WITHOUT */ 02534802
 /*                                                           F41448 */ 02535602
                                       /* LOADNAME QUALIFICATION     */ 02536402
 /*                                                           F41448 */ 02537202
           3 DECBIT BIT(1),            /* ADDR EXPRESSION IS DECIMAL */ 02538002
 /*                                                           F41448 */ 02538802
         2 PFLAGS2 BIT(8),             /* SECOND FLAG BYTE           */ 02539602
 /*                                                           F41448 */ 02540402
           3 PFSKPINV BIT(1),          /* VALIDITY CHECK ROUTINE     */ 02541202
 /*                                                           F41448 */ 02542002
                                       /* REQUESTED A REENTER MESSAGE*/ 02542802
                                       /* ONLY                F41448 */ 02543602
 /*                                                           F41448 */ 02544402
           3 RNGEVAL1 BIT(1),          /* ADDRESS ROUTINE PROCESSED  */ 02545202
                                       /* FIRST VAL  OF RANGE F41448 */ 02546002
                                       /* PARAMETER           F41448 */ 02546802
 /*                                                           F41448 */ 02547602
           3 ONERBIT BIT(1),           /* CONTROL BIT USED DURING    */ 02548402
 /*                                                           F41448 */ 02549202
                                       /* SCAN BY ADDRESS ROUTINE    */ 02550002
 /*                                                           F41448 */ 02550802
           3 TWORBIT BIT(1),           /* CONTROL BIT USED DURING    */ 02551602
 /*                                                           F41448 */ 02552402
                                       /* SCAN BY ADDRESS ROUTINE    */ 02553202
 /*                                                           F41448 */ 02554002
           3 RNGEVAL2 BIT(1),          /* ADDRESS ROUTINE PROCESSED  */ 02554802
 /*                                                           F41448 */ 02555602
                                       /* SECOND VALUE OF RANGE      */ 02556402
                                       /* PARAMETER           F41448 */ 02557202
 /*                                                           F41448 */ 02558002
           3 REGBIT BIT(1),            /* CONTROL BIT USED DURING    */ 02558802
 /*                                                           F41448 */ 02559602
                                       /* SCAN BY ADDRESS ROUTINE    */ 02560402
 /*                                                           F41448 */ 02561202
           3 FLTERBIT BIT(1),          /* CONTROL BIT USED DURING    */ 02562002
 /*                                                           F41448 */ 02562802
                                       /* SCAN BY ADDRESS ROUTINE    */ 02563602
 /*                                                           F41448 */ 02564402
           3 BREAKBIT BIT(1),          /* USED BY ADDRESS ROUTINE TO */ 02565202
 /*                                                           F41448 */ 02566002
         2 PFLAGS3 BIT(8),             /* THIRD FLAG BYTE            */ 02566802
           3 PFSTPRMT BIT(1),          /* PROMPT FOR STRING   F41448 */ 02567602
 /*                                                           F41448 */ 02568402
           3 PFONE BIT(1),             /* INDICATES AT LEAST ONE PDE */ 02569202
                                       /* HAS BEEN BUILT      F41448 */ 02570002
 /*                                                           F41448 */ 02570802
           3 LOADBIT BIT(1),           /* CONTROL BIT USED BY ADDRESS*/ 02571602
 /*                                                           F41448 */ 02572402
                                       /* RTN DENOTING LOADNAME DATA */ 02573202
 /*                                                           F41448 */ 02574002
           3 ENTRYBIT BIT(1),          /* CONTROL BIT USED BY ADDRESS*/ 02574802
 /*                                                           F41448 */ 02575602
                                       /* RTN DENOTING ENTRYNAME DATA*/ 02576402
 /*                                                           F41448 */ 02577201
           3 PFNULL BIT(1),            /* INDICATES A NULL LINE WAS  */ 02597201
 /*                                                           F41448 */ 02601201
                                       /* ENTERED AFTER A PROMPT     */ 02605201
 /*                                                           F41448 */ 02617201
           3 LPRNFND BIT(1),           /* USED TO INDICATE A LEFT    */ 02637201
 /*                                                           F41448 */ 02641201
                                       /* PAREN WAS FND BY THE ERROR */ 02645201
                                       /* ROUTINE             F41448 */ 02649201
 /*                                                           F41448 */ 02657201
           3 PFSPACE BIT(1),           /* USED TO INDICATE A  F41448 */ 02677201
 /*                                                           F41448 */ 02681201
                                       /* POSITIONAL SPACE PARAMETER */ 02685201
 /*                                                           F41448 */ 02689201
                                       /* WAS ENCOUNTERED SO THAT THE*/ 02693201
 /*                                                           F41448 */ 02694001
                                       /* SO THAT THE POSITIONAL     */ 02694801
 /*                                                           F41448 */ 02695601
                                       /* STRING RTN KNOWS WHEN TO   */ 02696401
                                       /* END THE STRING      F41448 */ 02696601
 /*                                                           F41448 */ 02697201
           3 PFMORE BIT(1),            /* USED TO INDICATE IF THE    */ 02717201
 /*                                                           F41448 */ 02721201
                                       /* LEFT PAREN OF A SUBFIELD   */ 02725201
 /*                                                           F41448 */ 02729201
                                       /* WAS ALSO USED AS THE LEFT  */ 02733201
 /*                                                           F41448 */ 02734001
                                       /* PAREN OF THE LIST WITHIN   */ 02734801
                                       /* THE SUBFIELD        F41448 */ 02736401
 /*                                                           F41448 */ 02737201
         2 PFLAGS4 BIT(8),             /* FOURTH FLAG BYTE           */ 02757201
 /*                                                           F41448 */ 02761201
           3 PFENDLIM BIT(1),          /* INDICATES END DILIMETER FOR*/ 02777201
 /*                                                           F41448 */ 02781201
                                       /* SELF-DILIMITING STRING HAS */ 02785201
                                       /* BEEN FOUND          F41448 */ 02789201
           3 PFLSTEND BIT(1),          /* INDICATES LIST END  F41448 */ 02797201
 /*                                                           F41448 */ 02798001
                                       /* DILIMETER HAS BEEN FOUND   */ 02798801
 /*                                                           F41448 */ 02801201
           3 PFVCMSG BIT(1),           /* INDICATES A VALIDITY CHECK */ 02817201
 /*                                                           F41448 */ 02818001
                                       /* ROUTINE HAS SUPPLIED A     */ 02818801
                                       /* SECOND LEVEL MESSAG F41448 */ 02820401
 /*                                                           F41448 */ 02821201
           3 PFPDDATA BIT(1),          /* INDICATE PROCESSING PROMPT */ 02837201
                                       /* OR DEFAULT DATA     F41448 */ 02838801
 /*                                                           F41448 */ 02841201
           3 PFSLASH BIT(1),           /* INDICATE DSNAME/USERID RTN */ 02857201
 /*                                                           F41448 */ 02858001
                                       /* IS SCANNING FOR PASSWORD   */ 02858801
 /*                                                           F41448 */ 02861201
           3 PFENDSET BIT(1),          /* INDICATES BACKUP POINTER   */ 02877201
 /*                                                           F41448 */ 02877301
                                       /* FOR ENDINPUT HAS BEEN SET  */ 02878001
 /*                                                           F41448 */ 02881201
           3 PFNOPOP BIT(1),           /* INDICATES STACK IS NOT TO  */ 02897201
 /*                                                           F41448 */ 02897301
                                       /* BE POPPED IF ALL SEPARATORS*/ 02898001
                                       /* IN PROMPT BUFFER    F41448 */ 02898801
 /*                                                           F41448 */ 02901201
           3 CKRANGE BIT(1),           /* ADDR RTN SHOULD CHECK FOR  */ 02917201
                                       /* RANGE               F41448 */ 02918001
 /*                                                           F41448 */ 02921201
         2 PFLAGS5 BIT(8),             /* FIFTH FLAG BYTE            */ 02937202
 /*                                                           F41448 */ 02941201
           3 PFSQSTR BIT(1),           /* SPECIAL QSTRING HANDLING   */ 02957201
                                       /* DONE AT LEAST ONCE  F41448 */ 02958001
 /*                                                           F41448 */ 02961201
           3 INVPRMPT BIT(1),          /* CHECK FOR INVALID MSG PRMT */ 02977201
 /*                                                           F41448 */ 02981201
           3 SUBFLG BIT(1),           /*CHECK FOR SUBFIELD PROCESSING*/ 02997202
 /*                                                           F41448 */ 03001201
           3 INVFLG BIT(1),            /* CHECK FOR INVALID INPUT FOR   03017202
                                          USER IN NOPROMPT MODE      */ 03019602
 /*                                                           F41448 */ 03021201
           3 BYPASFLG BIT(1),           /*PREVIOUS PCE SPECIFIED BYPAS  03037202
                                          OR PRINT INHIBIT MODE      */ 03039602
 /*                                                           F41448 */ 03041201
           3 RD4 BIT(1),               /* RESERVED                   */ 03057201
 /*                                                           F41448 */ 03061201
           3 RD5 BIT(1),               /* RESERVED                   */ 03077201
 /*                                                           F41448 */ 03081201
           3 RD6 BIT(1),               /* RESERVED                   */ 03097201
                                                                        03117201
         2 PFLAGS6 BIT(8),             /* SIXTH FLAG BYTE      Y01156*/ 03119201
         2 PFLAGS7 BIT(8),             /* SEVENTH FLAG BYTE    Y02666*/ 03119602
         2 PFLAGS8 BIT(8),             /* EIGHTH FLAG BYTE     Y02666*/ 03120002
 /*                                                           F41448 */ 03121201
 /*        WORKSPACE NEEDED FOR STORAGE ALLOCATION SUBROUTINE        */ 03137201
 /*                                                           F41448 */ 03161201
         2 STORANC CHAR(8),                                             03171202
           4 PANCHOR PTR(31),          /* ANCHOR FOR STORAGE CHAIN   */ 03177202
 /*                                                           F41448 */ 03181201
                                                                        03185201
 /*                                                           F41448 */ 03189201
           4 PANCHORT PTR(31),         /* INTERNAL MSS CHAIN FREE    */ 03197202
 /*                                                           F41448 */ 03201201
                                       /*  Q ANCHOR                  */ 03217201
                                                                        03237201
 /*                                                           F41448 */ 03241201
 /*   PARAMETER LIST FOR CONDITIONAL GETMAIN SUBROUTINE              */ 03257201
                                                                        03277201
 /*                                                           F41448 */ 03281201
         2 PGETLIST,                                                    03297201
 /*                                                           F41448 */ 03301201
           5 PGETLNTH FIXED(31),       /* LENGTH REQUESTED           */ 03317201
 /*                                                           F41448 */ 03321201
           5 PGETRADR PTR(31),         /* ADDR IN WHICH ALLOCATED    */ 03337201
 /*                                                           F41448 */ 03341201
                                       /* SPACE ADDR IS PLACED       */ 03357201
 /*                                                           F41448 */ 03361201
           5 PGETMDSP FIXED(15),       /* MODE AND SUBPOOL           */ 03377201
                                                                        03397201
 /*  THE FIRST INPUT PUSHDOWN STACK. IF THIS STACK FILLS UP A F41448 */ 03417201
 /*  GETMAIN IS ISSUED FOR AN ADDITIONAL STACK. THIS PROCESS  F41448 */ 03437201
 /*  CONTINUES INDEFINITELY.  THE STACKS ARE BACKWARD CHAINED F41448 */ 03457201
 /*  WITH THE FIRST STACKS CHAIN WORD REMAINING ZERO.EACH NEW F41448 */ 03477201
 /*  ENTRY IN THE STACK CONSISTS OF TWO WORDS.  THE FIRST IS  F41448 */ 03497201
 /*  THE CONTENTS OF XINPUT,AND THE SECOND IS THE CONTENTS OF F41448 */ 03517201
 /*  ENDINPUT.  THE NEXT FREE AREA IN THE STACK IS FOUND BY   F41448 */ 03537201
 /*  USING PIPDLX AS AN INDEX INTO THE STACK.                 F41448 */ 03557201
                                                                        03577201
 /*                                                           F41448 */ 03581201
         2 PIPDLCUR PTR(31),           /* ADDRESS OF CURRENT INPUT   */ 03597201
                                       /* PUSHDOWN STACK      F41448 */ 03617201
 /*                                                           F41448 */ 03621201
         2 PIPDLCHN PTR(31),           /* STORAGE CHAIN - SHOULD     */ 03637201
         2 NME(20) PTR(31),            /*FIRST INPUT PUSHDOWN F41448 */ 03657201
                                       /* STACK               F41448 */ 03677201
 /*                                                           F41448 */ 03681201
         2 PIPDLX PTR(8),              /*INDEX TO NEXT FREE AREA IN  */ 03697201
 /*                                                           F41448 */ 03701201
                                       /*CURRENT PUSHDOWN STACK      */ 03717201
 /*                                                           F41448 */ 03721201
         2 PLINKSV1 PTR(31),           /*SAVE AREA FOR RETURN ADDRESS*/ 03737201
 /*                                                           F41448 */ 03741201
                                       /*OF LINK1 ROUTINES WHICH USE */ 03757201
 /*                                                           F41448 */ 03761201
                                       /*LINK2 ROUTINES AS SUBRTNS   */ 03777201
 /*                                                           F41448 */ 03781201
         2 INVPSAVE PTR(31),           /*BEGINNING ADDR OF PARM -USED*/ 03797201
                                       /*IF PARM IS INVALID   F41448 */ 03817201
 /*  ADDRESSES FOR KEYWORD SCANS                              F41448 */ 03837201
 /*                                                           F41448 */ 03857201
         2 PKEYWDPS PTR(31),           /*PTR TO CURRENT NAME ENTRY   */ 03877201
 /*                                                           F41448 */ 03897201
         2  PKEYWDPC PTR(31),          /*PTR TO CURRENT IKJKEYWD PCE */ 03917201
 /*                                                           F41448 */ 03921201
         2 PKEYWDPX PTR(31),           /*TO SAVE IKJKEYWD PCE ADDR   */ 03937201
 /*                                                           F41448 */ 03941201
         2 PKEYWDTB PTR(31),           /*PCL RESULT DURING KEYWORD   */ 03957201
                                       /*PROCESSING           F41448 */ 03977201
 /*                                                           F41448 */ 03981201
         2 PKEYWDPM PTR(31),           /*SAVE AREA FOR PDE DURING    */ 03997201
                                       /*KEYWORD PROCESSING   F41448 */ 04017201
         2 PTABLEAD PTR(31),           /*START OF PCL ADDRESS F41448 */ 04037201
         2 PTABLEND PTR(31),           /*END OF PCL ADDRESS   F41448 */ 04057201
 /*                                                           F41448 */ 04077201
 /* THE FOLLOWING FIELDS ARE USED AS TEMPORARY POSITIONAL PDE.F41448 */ 04097201
 /* THE FIELDS ARE MOVED FROM HERE TO THE ACTUAL PDE BY THE   F41448 */ 04117201
 /* POSITIONAL EXIT ROUTINE. THE AREAS MUST BE CONTIGUOUS     F41448 */ 04137201
 /*                                                           F41448 */ 04157201
         2 TEMPPDE,                    /* NAME OF TEMPORARY AREA     */ 04177201
           4 TEMPPDE2,                 /*LEN FOR NORMAL PARSE F41448 */ 04197202
 /*                                                           F41448 */ 04201201
             7 TEMPFLD1,                                                04211202
               9 DATAPTR1 PTR(31),     /*PTR TO STRING, PSTRING      */ 04217202
 /*                                                           F41448 */ 04221201
                                       /*QSTRING,PASSWORD,DSNAME     */ 04237202
                                       /*LOADNAME, OR VALUE   F41448 */ 04257202
               9 DATALEN1 FIXED(15),   /*LENGTH OF ABOVE DATA F41448 */ 04277202
               9 DATAFLA1 BIT(8),      /*FLAG BYTE            F41448 */ 04297202
               9 DATAFLB1 BIT(8),      /*TYPE CODE FOR VALUE  F41448 */ 04317202
 /*                                                           F41448 */ 04321201
             7 TEMPFLD2,                                                04331202
               9 DATAPTR2 PTR(31),     /*PTR TO MEMBER OR ENTRY NAME */ 04337202
               9 DATALEN2 FIXED(15),   /*LENGTH OF ABOVE DATA F41448 */ 04357202
               9 DATAFLA2 BIT(8),      /*FLAG BYTE            F41448 */ 04377202
               9 DATAFLB2 BIT(8),      /*RESERVED BYTE        F41448 */ 04397202
 /*                                                           F41448 */ 04401201
             7 TEMPFLD3,                                                04411202
               9 DATAPTR3 PTR(31),     /*PTR TO PASSWORD OR ADDRESS  */ 04417202
               9 DATALEN3 FIXED(15),   /*LENGTH OF ABOVE DATA F41448 */ 04437202
               9 DATAFLA3 BIT(8),      /*FLAG BYTE            F41448 */ 04457202
               9 DATAFLB3 BIT(8),      /*RESERVED BYTE        F41448 */ 04477202
 /*                                                           F41448 */ 04481201
               9 DATAFLG BIT(8),       /*REGISTER NOTATION FLAGS     */ 04497202
               9 DATASGN BIT(8),       /*SIGN OF FIRST VALUE  F41448 */ 04517202
 /*                                                           F41448 */ 04521201
               9 DATAICT FIXED(15),    /*INDIRECT ADDRESSING COUNT   */ 04537202
 /*                                                           F41448 */ 04541201
               9 DATAEXP PTR(31),      /*PTR TO NEXT EXPRESSION      */ 04557202
                                       /* VALUE PDE           F41448 */ 04577202
               9 DATAUSER FIXED(31),   /*USER WORD            F41448 */ 04597202
 /*                                                           F41448 */ 04601201
           4 CBADD(11) PTR(31),        /*COBOL ADDITIONS TO PARSE    */ 04617202
                                       /*TEMPORARY PDE        F41448 */ 04637201
 /*                                                           F41448 */ 04641201
         2 ENDBAKUP PTR(31),           /*BACKUP FOR ENDINPUT IF      */ 04657201
                                       /* PFSCANX FLAG IS ON  F41448 */ 04677201
 /*                                                           F41448 */ 04681201
         2 PDELIM CHAR(1),             /*SELF-DEFINED DELIMETER      */ 04697201
 /*                                                           F41448 */ 04701201
                                       /*STORED BY DELIMETER ROUTINE */ 04717201
         2 PPCOUNT PTR(8),             /*POSITIONAL DATA SIZE F41448 */ 04737201
         2 PPDESIZE PTR(8),            /*POSIITONAL PDE SIZE  F41448 */ 04757201
 /*                                                           F41448 */ 04761201
         2 PERRCODE PTR(8),            /*INDEX TO RESCAN ADDR TABLE  */ 04777201
         2 PKEYWDVL FIXED(15),         /*TO SAVE VALUE DURING F41448 */ 04797201
                                       /* KEYWORD LOOKUP      F41448 */ 04817201
 /*                                                           F41448 */ 04821201
         2 RNG2ADDR PTR(31),           /*ADDR OF 2ND PDE FOR A RANGE */ 04837201
 /*                                                           F41448 */ 04841201
         2 SEGLIST(5) PTR(31),         /*LIST OF MESSAGE SEGMENTS    */ 04857201
 /*                                                           F41448 */ 04861201
                                       /* FOR I/O SERVICE ROUTINES   */ 04877201
 /*                                                           F41448 */ 04881201
         2 PREVPDEL PTR(31),           /*USED TO CONTAIN THE PREV-   */ 04897201
 /*                                                           F41448 */ 04901201
                                       /*IOUS PDE ADDRESS SO THAT    */ 04917201
 /*                                                           F41448 */ 04921201
                                       /*THE VALIDITY CHECK ROUTINE  */ 04937201
 /*                                                           F41448 */ 04941201
                                       /*CAN FETCH IT WHEN A RETURN  */ 04957201
 /*                                                           F41448 */ 04961201
                                       /*CODE OF 4 OR 8 IS RETURNED  */ 04977201
                                       /*TO IT BY THE USER    F41448 */ 04997201
 /*                                                           F41448 */ 05001201
         2 VCEPARAM,                   /*VALIDITY CHECK EXIT PARAM-  */ 05017201
                                       /* ETERS               F41448 */ 05037201
           11 PDEADR PTR(31),          /*ADDRESS OF PDE JUST  F41448 */ 05057201
                                       /* CONSTRUCTED         F41448 */ 05077201
 /*                                                           F41448 */ 05081201
           11 USERWORD FIXED(31),      /*USER DATA PASSED IN PARSE   */ 05097201
 /*                                                           F41448 */ 05101201
                                       /* INPUT PARAMETER LIST       */ 05117201
 /*                                                           F41448 */ 05121201
           11 VALMSG PTR(31),          /*ADDRESS OF SECOND LEVEL MSG */ 05137201
                                       /* FROM VALIDITY CHECK F41448 */ 05157201
           11 MSGCODE PTR(8),          /*OFFSET TO MSG ADDRES F41448 */ 05177201
 /*  MESSAGE SEGMENT CONTAINING THE LAST PRIMARY MESSAGE ID.  F41448 */ 05197201
 /*  THIS IS USED AS SEGMENT 1 OF HELP MESSAGES PASSED TO THE F41448 */ 05217201
 /*  I/O SERVICE ROUTINES. IT INCLUDES THE FOUR BYTE HEADER   F41448 */ 05237201
 /*  REQUIRED BY THE I/O ROUTINES, AND THE WORD 'ENTER'.      F41448 */ 05257201
 /*                                                           F41448 */ 05277201
         2 PRIMSGID CHAR(20),          /* PRIMARY MESSAGE SEGMENT    */ 05297201
 /*                                                           F41448 */ 05301201
         2 SAVLSLEN FIXED(15),         /* USED TO SAVE THE CORE SIZE */ 05317201
 /*                                                           F41448 */ 05321201
                                       /* REQUESTED BY THE HELP      */ 05337201
                                       /* MESSAGE ROUTINE.    F41448 */ 05357201
 /*                                                           F41448 */ 05361201
         2 PLUSSEG CHAR(5),            /* PLUS SIGN MESSAGE SEGMENT  */ 05377201
 /*                                                           F41448 */ 05397201
 /*                                                           F41448 */ 05417201
 /*  SAVE AREAS FOR ADDRESSES OF I/O SERVICE ROUTINES 'LOADED' DURING*/ 05437201
 /*  INITIALIZATION                                           F41448 */ 05457201
 /*                                                           F41448 */ 05477201
 /*                                                                  */ 05497201
         2 PUTLPTR PTR(31),            /* NAME THE LIST              */ 05517201
         2 PUTGPTR PTR(31),            /* PTR TO IKJPTGT RTN F41448  */ 05537201
 /*                                                           F41448 */ 05541201
         2 UPTADDR PTR(31),            /* FIRST WORD OF INPUT PARMS  */ 05557201
 /*                                                           F41448 */ 05561201
         2 ECTADDR PTR(31),            /* SECOND WORD OF INPUT PARMS */ 05577201
 /*                                                           F41448 */ 05581201
         2 ECBADDR PTR(31),            /* THIRD WORD OF INPUT PARMS  */ 05597201
 /*                                                           F41448 */ 05601201
         2 * PTR(31),                  /* FOURTH WORD OF INPUT PARMS */ 05617201
                                                                        05637201
 /*                                                           F41448 */ 05641201
         2 OPEREND  PTR(31),           /* PTR TO LAST PCE UNDER OPER */ 05657201
                                                                        05677201
 /*                                                           F41448 */ 05681201
         2 RSVWDPCE  PTR(31),          /*  PTR TO PCE BEING USED BY  */ 05697201
                                       /* IKJRSVWD            F41448 */ 05717201
                                                                        05737201
 /*                                                           F41448 */ 05741201
         2 TERMXPCE  PTR(31),          /*  PTR TO MAJOR TERM         */ 05757201
                                                                        05777201
 /*                                                           F41448 */ 05781201
         2 OPERPCE  PTR(31),           /*  PTR TO CURRENT OPER PCE   */ 05797201
                                                                        05817201
 /*                                                           F41448 */ 05821201
         2 OPERSVE  PTR(31),           /*  PTR TO LEFT PAREN OF EXPR.*/ 05837201
                                                                        05857201
         2 RSVWDSV1  PTR(31),          /*  LINK REG. SAV AREA F41448 */ 05877201
                                                                        05897201
         2 RSVWDSV2  PTR(31),          /* LINK REG. SAVE AREA F41448 */ 05917201
                                                                        05937201
         2 CBLNKSV1  PTR(31),          /* LINK REG. SAVE AREA F41448 */ 05957201
                                                                        05977201
         2 CBLNKSV2  PTR(31),          /* LINK REG. SAVE AREA F41448 */ 05997201
                                                                        06017201
 /*                                                           F41448 */ 06021201
         2 ENDNMPTR  PTR(31),          /* PTR TO END OF CURRENT      */ 06037201
 /*                                                           F41448 */ 06041201
                                       /* DATANAME BEING SCANNED     */ 06057201
                                                                        06077201
 /*                                                           F41448 */ 06081201
         2 CHAINPTR  PTR(31),          /*PTR TO CHAIN WD FOR DATANAME*/ 06097201
                                       /* QUALIFIER PDE'S     F41448 */ 06117201
                                                                        06137201
 /*                                                           F41448 */ 06141201
         2 PDEPTR  PTR(31),            /* PTR TO NEXT AVAIL. SPACE IN*/ 06157201
                                       /* THE TEMPPDE         F41448 */ 06177201
                                                                        06197201
 /*                                                           F41448 */ 06201201
         2 AANC  PTR(31),              /* ANCHORS TO CONTROL THE     */ 06217201
 /*                                                           F41448 */ 06221201
         2 TANC  PTR(31),              /* ALLOCATION OF DATANAME     */ 06237201
 /*                                                           F41448 */ 06241201
         2 OANC  PTR(31),              /* QUALIFIER PDE'S - IN CORE  */ 06257201
 /*                                                           F41448 */ 06261201
         2 ENDANC  PTR(31),            /* GOTTEN VIA STALOC ROUTINE  */ 06277201
                                                                        06297201
 /*                                                           F41448 */ 06301201
         2 PRMTPTR  PTR(31),           /* PTR TO START OF INVALID    */ 06317201
 /*                                                           F41448 */ 06321201
                                       /* DATA FOR SPECIAL MSG.      */ 06337201
                                                                        06357201
 /*                                                           F41448 */ 06361201
         2 OPERLL  FIXED(15),          /*LEN OF PDE FLDS UNDER OPER  */ 06377201
                                                                        06397201
 /*                                                           F41448 */ 06401201
         2 MSGAREA BDY(BYTE),          /* PARMS PASSED TO PROMPT FOR */ 06417201
 /*                                                           F41448 */ 06421201
                                       /* SPECIAL MSG. CONSTRUCTION  */ 06437201
 /*                                                           F41448 */ 06441201
           7  MSGLEN  FIXED(15),       /* LENGTH OF FIRST SEGMENT    */ 06457201
 /*                                                           F41448 */ 06461201
           7  MSGADDR PTR(31),         /* ADDR OF FIRST SEGMENT      */ 06477201
                                                                        06497201
 /*                                                           F41448 */ 06501201
         2 DIGITCT  PTR(8),            /* DIGIT COUNTER FOR STRINGS  */ 06517201
                                                                        06537201
 /*                                                           F41448 */ 06541201
         2 ELEMNCT  PTR(8),            /* NUMBER OF SUBSCRIPTS       */ 06557201
                                                                        06577201
 /*                                                           F41448 */ 06581201
         2 QUALCT  PTR(8),             /* NUMBER OF QUALIFIERS       */ 06597201
                                                                        06617201
         2  CBFLAGS1 BIT(8),           /* FIRST FLAG BYT      F41448 */ 06637201
 /*                                                           F41448 */ 06641201
            7  COBOLMOD BIT(1),        /* COBOL PROCESSING SWITCH    */ 06657201
 /*                                                           F41448 */ 06661201
            7  OPERMODE BIT(1),        /* EXPRESSION PROCESSING SW   */ 06677201
 /*                                                           F41448 */ 06681201
            7  SUBSMODE BIT(1),        /* TERM - SUBSCRIPT MODE SW   */ 06697201
 /*                                                           F41448 */ 06701201
            7  NAMEREQD BIT(1),        /* TERM - DATANAME EXPECTED   */ 06717201
 /*                                                           F41448 */ 06721201
            7  ERRORBIT BIT(1),        /* TERM - ERROR HAS OCCURED   */ 06737201
 /*                                                           F41448 */ 06741201
            7  RSVDPRMT BIT(1),        /* RSVWD HAS BEEN PRMPTED FOR */ 06757201
            7  OPERPRMT BIT(1),        /* EXPRESSION HAS BEEN F41448 */ 06777201
 /*                                                           F41448 */ 06781201
                                       /* PROMPTED FOR BY OPER       */ 06797201
 /*                                                           F41448 */ 06801201
            7  RC16     BIT(1),        /* A 16 RETURN CODE HAS BEEN  */ 06817201
 /*                                                           F41448 */ 06821201
                                       /* ENCOUNTERED FROM VALIDITY  */ 06837201
                                       /* CHECK ROUTINE       F41448 */ 06857201
                                                                        06877201
         2  CBFLAGS2 BIT(8),           /* SECOND FLAG BYTE    F41448 */ 06897201
 /*                                                           F41448 */ 06901201
            7  SPECMSG BIT(1),         /* SPECIAL MSG. FORMAT IS TO  */ 06917201
 /*                                                           F41448 */ 06921201
                                       /* BE USED IN PROMPTING       */ 06937201
 /*                                                           F41448 */ 06941201
            7  LFTPAREN BIT(1),        /* A LEFT PAREN IS TO BE      */ 06957201
 /*                                                           F41448 */ 06961201
                                       /* ADDED TO SPECIAL MSG       */ 06977201
 /*                                                           F41448 */ 06981201
            7  RHTPAREN BIT(1),        /* A RIGHT PAREN IS TO BE     */ 06997201
 /*                                                           F41448 */ 07001201
                                       /* ADDED TO SPECIAL MSG. TEXT */ 07017201
 /*                                                           F41448 */ 07021201
            7  CHAINTRM BIT(1),        /* A TERM CHAINED FROM AN     */ 07037201
 /*                                                           F41448 */ 07041201
                                       /* OPER IS BEING PROCESSED    */ 07057201
 /*                                                           F41448 */ 07061201
            7  PARS2IN BIT(1),         /* PARS2 HAS BEEN LOADED      */ 07077201
 /*                                                           F41448 */ 07081201
            7  PRMTSCAN BIT(1),        /* USED BY TERM FOR PRMT DATA */ 07097201
 /*                                                           F41448 */ 07101201
            7  BUFPOPED BIT(1),        /* RECURSION IN SCANF ROUTINE */ 07117201
 /*                                                           F41448 */ 07121201
            7  RNGADDED BIT(1),        /* 1ST VALUE OF RNG ADDED     */ 07137201
                                                                        07157201
         2  CBFLAGS3 BIT(8),           /* FLAG BYTE THREE     F41448 */ 07177201
 /*                                                           F41448 */ 07181201
            7  FIRSTNAM BIT(1),        /* 1ST DN. OF VAR ENCOUNTERED */ 07197201
 /*                                                           F41448 */ 07201201
            7 CTFOUND BIT(1),          /*BEGIN. OF CHNTRM SBSCRPT FND*/ 07217201
 /*                                                           F41448 */ 07221201
            7 BLNKFLAG BIT(1),         /* OPER PTING AT BLNK FOR     */ 07237201
                                       /* INVALID MSG. FORMAT F41448 */ 07257201
                                                                        07277201
 /*                                                           F41448 */ 07281201
         2  CBFLAGS4 BIT(8),           /* FLAG BYTE FOUR - RSVD      */ 07297201
                                                                        07317201
 /*                                                           F41448 */ 07321201
         2 TRANAREA CHAR(2) BDY(HWORD),/* TRANSLATE AREA FOR TERM    */ 07337201
                                                                        07357201
         2 CORELEN FIXED(15),          /* RESERVED            F41448 */ 07377201
                                                                        07397201
 /*                                                           F41448 */ 07401201
         2 PARS2ADR PTR(31),           /* ADDR OF IKJPARS2 LOAD MOD  */ 07417201
                                                                        07437201
 /*                                                           F41448 */ 07441201
         2 VCONAD PTR(31),             /*ADDR OF VCON TAB IN IKJPARS */ 07457201
                                                                        07477201
 /*                                                           F41448 */ 07481201
         2 GOREGSV PTR(31),            /*RETURN ADDR FROM SUBROUTINE */ 07497201
                                                                        07517201
 /*                                                           F41448 */ 07521201
         2 TERMBASE PTR(31),           /*TERM BASE REG SAVE AREA     */ 07537201
                                                                        07557201
 /*                                                           F41448 */ 07561201
         2 OPERBASE PTR(31),           /*OPER BASE REG SAVE AREA     */ 07577201
                                                                        07597201
 /*                                                           F41448 */ 07601201
         2 BASE3SV  PTR(31),           /*SAVE AREA - PARSE BASE REG3 */ 07617201
                                                                        07637201
 /*                                                           F41448 */ 07641201
         2 BASE2SV  PTR(31),           /*SAVE AREA - PARSE BASE REG2 */ 07657201
                                                                        07677201
 /*                                                           F41448 */ 07681201
         2 BASE1SV  PTR(31),           /*SAVE AREA - PARSE BASE REG1 */ 07697201
                                                                        07717201
 /*                                                           F41448 */ 07721201
         2 RBASESV  PTR(31),           /*SAVE AREA - PARSE RBASE     */ 07737201
                                                                        07757201
 /*                                                           F41448 */ 07761201
         2 CBLRET PTR(31),             /* POINT TO RETURN TO IN THE  */ 07777201
 /*                                                           F41448 */ 07781201
                                       /* NEW IKJPARS2 LOAD          */ 07797201
 /*                                                           F41448 */ 07801201
                                       /* AFTER EXECUTION OF ANY     */ 07817201
 /*                                                           F41448 */ 07821201
                                       /* SUBROUTINE IN IKJPARS      */ 07837201
 /*                                                           F41448 */ 07841201
         2 COREADDR PTR(31),           /* ADDR OF CORE GOTTEN FOR MSG*/ 07857201
                                                                        07877201
 /*                                                           F41448 */ 07881201
         2 AUTOBASE PTR(31),           /*SAVE AREA FOR DATAREG (BSL) */ 07897201
                                                                        07917201
 /*                                                           F41448 */ 07921201
         2 WORKSAVE(4) PTR(31),        /* WORKREG SAVE AREA -LINKAGE */ 07937201
                                                                        07957201
 /*                                                           F41448 */ 07961201
         2 PLINKSV2 PTR(31),           /* RETURN ADDR SAVE AREA FROM */ 07977201
 /*                                                           F41448 */ 07981201
                                       /* VALIDITY CHECK AND CODE4   */ 07997201
 /*                                                           F41448 */ 08017201
         2 KEYPTR PTR(31),             /* KEYWORD PTR          Y01156*/ 08027201
         2 KEYLEN FIXED(15),           /* USER KEYWORD LENGTH  Y01156*/ 08029201
         2 KEYBUF CHAR(37) BDY(HWORD), /* 2ND SEGMENT FOR SUBFIELD-     08031203
                                          PROMPT               Y01156*/ 08031601
          6 KEYBUFLN FIXED(15),        /* ENTIRE SEGMENT LENGTHY01156*/ 08033201
          6 KEYBUFOF FIXED(15),        /* OFFSET IN PRIMARY MSGY01156*/ 08035201
          6 KEYDATA CHAR(33);          /* USER ENTERED KEYWORD Y01156*/ 08035601
 /*  ALLOCATE SPACE IN WHICH TO MOVE THE L FORM OF THE I/O    F41448 */ 08037201
 /*  SERVICE ROUTINE MACROS.                                  F41448 */ 08057201
 /*                                                           F41448 */ 08077201
 GENERATE DATA;                                                         08097201
         DS   0F                                                        08107201
PUTLINE  PUTLINE ,MF=L                 * * * *                   F41448 08117201
         SPACE                                                          08137201
PUTGET   PUTGET ,MF=L                  * * * *                   F41448 08157201
         SPACE                                                          08177201
         DS    0D                      ALIGN FOR FREEMAIN OF RWORK      08197201
 @ENDGEN                                                                08217201
 /*  END OF IKJEFPWA                                          F41448 */ 08237201
./  ADD  SSI=81730325,NAME=IKJEFUAD
*          %GOTO  UADGO;                                                30050002
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   30100002
*                                                                       30150002
*                       I K J E F U A D                                 30200002
*                UADS STRUCTURE MAPPING MACR0                           30250002
*                                                                       30300002
*    USE OF THE COMPILE VARIABLES MAKES POSSIBLE THE SELECTIVE          30350002
*    INCLUSION OF THE INDIVIDUAL AREAS OF MAPPING                       30400002
*                                                                       30450002
* STATUS -- CHANGE LEVEL --   02-000               12-15-1972           30500002
*                                                                       30550002
*           CHANGE LEVEL --   04-000               04/25/1975           30558003
*                                                                       30566003
*   A 355010-355040,569010-569040                               DZ04005 30574003
*   A 350550,564510,564910 RE-STRUCTURE FOR CORRECT BIT SET    @ZA18185 30582003
*                                                                       30590003
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/ 30600002
*%UADGO:     ;                                                          30650002
*        %GOTO ACTMC1;                                               /* 30700002
         MACRO                                                          30750002
         IKJEFUAD  &DSPL,&ALL,&HDR,&POB,&AOB,&ROB,&PDB,&ADB,&RDB,      S30800002
               &FSQ,&GNL                                                30850002
         SPACE 3                                                        30900003
         AIF   (&ALL EQ 'ALL').HDR1   CHK TO DO ALL                     31050002
         AIF   (&HDR EQ 'HDR').HDR1   CHK TO DO HEADER BLOCK            31100002
         AIF   (&GNL EQ 'GNL').GOB1   CHK TO DO GENERAL OFFSET          31150002
         AIF   (&POB EQ 'POB').POB1   CHK TO DO PASSWD OFFSET           31200002
         AIF   (&AOB EQ 'AOB').AOB1   CHK TO DO ACCTNM OFFSET           31250002
         AIF   (&ROB EQ 'ROB').ROB1   CHK TO DO PROCNAME OFFSET         31300002
         AIF   (&PDB EQ 'PDB').PDB1   CHK TO DO PASSWD DATA             31350002
         AIF   (&ADB EQ 'ADB').ADB1   CHK TO DO ACCTNM DATA             31400002
         AIF   (&RDB EQ 'RDB').RDB1   CHK TO DO PROCNAME DATA           31450002
         AIF   (&FSQ EQ 'FSQ').FSQ1   CHK TO DO FREE SPACE ELEMENT      31500002
&ALL     SETC  'ALL'                                                    31550002
         SPACE 1                                                        31600002
.HDR1    ANOP                                                           31650002
         AIF   (&DSPL NE 'DSPL').HDRA CHK TO DISPLAY FORMAT             31700002
         EJECT                                                          31750002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 31800002
*                                                                     * 31850002
*                     H E A D E R   B L O C K                         * 31900002
*                                                                     * 31950002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 32000002
*                                                                     * 32050002
*                                                                     * 32100002
*               I---------------------I---------------------I         * 32150002
*          0    I UADSBLNG            I UADSFSQP            I         * 32200002
*               I---------------------I---------------------I         * 32250002
*          4    I UADSUSER                                  I         * 32300002
*               I                                           I         * 32350002
*               I---------------------I---------------------I         * 32400002
*          12   I UADSBN01            I UADSMAXC            I         * 32450002
*               I---------------------I---------------------I         * 32500002
*          16   I UADSATTR            I UADSINST            I         * 32550002
*               I---------------------I---------------------I         * 32600002
*          20   I UADSUPTP                                  I         * 32650002
*               I-------------------------------------------I         * 32700002
*          24   I UADSPWD1                                  I         * 32750002
*               I-------------------------------------------I         * 32800002
*          28   I UADSPERP                                  I         * 32850002
*               I-------------------------------------------I         * 32900002
*          32   I UADSDEST                                  I         * 32950002
*               I                                           I         * 33000002
*               I----------I----------I----------I----------I         * 33050003
*          40   I UADSSUBH I UADSSUBC I UADSSUBM I UADSSOUT I         * 33070003
*               I----------I----------I----------I----------I         * 33090003
*          44   I RESERVED                                  I         * 33110003
*               I                                           I         * 33150002
*               I                                           I         * 33200002
*               I                                           I         * 33250002
*               I                                           I         * 33300002
*               I                                           I         * 33350002
*               I-------------------------------------------I         * 33400002
*                                                                     * 33450002
         SPACE 1                                                        33500002
.HDRA    ANOP                                                           33550002
         SPACE 1                                                        33600002
DHED     DSECT ,HEDBPTR                                                 33650002
         SPACE 1                                                        33700002
         DS    0F                      ALIGN TO WORD BOUNDARY           33750002
UADSMHDR DS    0CL16                   COMMON HEADER AREA               33800002
UADSBLNG DS    AL2                     BLOCK LENGTH                     33850002
UADSFSQP DS    AL2                     OFFSET TO INITIAL FSQE (FREE     33900002
**                                     ..SPACE QUEUE ELEMENT)           33950002
UADSUSER DS    0CL8                    USERID                           34000002
UADSBN01 DS    0BL2                    FLAGS                            34050002
         DS    BL1                     FIRST BYTE OF FLAGS -- RESERVED  34060002
         DS    BL1                     SECOND BYTE OF FLAGS             34100002
UADSNUSP EQU   X'80'                   ..0 -- NO NON-USABLE SPACE       34150002
**                                     ..1 -- ONLY NON-USABLE SPACE     34200002
**                                     .......EXISTS IN THIS BLOCK      34250002
UADSEXPF EQU   X'40'                   ..0 -- OLD FORMAT UADS           34300002
**                                     ..1 -- NEW EXPANDED FORMAT UADS  34350002
**                                     .......EXISTS IN THIS BLOCK      34400002
UADSXBLK EQU   X'20'                   ..0 -- EXTRA BLOCK NOT AVAILABLE 34420003
**                                     ..1 -- EXTRA BLOCK IS AVAILABLE  34440003
UADSXUSD EQU   X'10'                   ..0 -- EXTRA BLOCK NOT USED      34460003
**                                     ..1 -- EXTRA BLOCK IS USED       34480003
UADSMAXC DS    AL2                     MAXIMUM CORE SIZE ALLOTTABLE     34500002
**                                     ..TO THIS USER                   34550002
UADSATTR DS    0BL2                    SYSTEM ATTRIBUTES OF USERID      34600002
         DS    BL1                     FIRST BYTE OF IBM FLAGS          34650002
USATR00  EQU   X'80'                   ..0 -- NO OPERATOR CAPABILITY    34700002
**                                     ..1 -- OPERATOR CAPABILITY       34750002
USATR01  EQU   X'40'                   ..0 -- NO ACCOUNT CAPABILITY     34800002
**                                     ..1 -- ACCOUNT CAPABILITY        34850002
USATR02  EQU   X'20'                   ..0 -- NO JCL CAPABILITY         34900002
**                                     ..1 -- JCL CAPABILITY            34950002
USATR03  EQU   X'10'                   ..0 -- NO MOUNT CAPABILITY       35000002
**                                     ..1 -- MOUNT CAPABILITY          35050002
USATR04  EQU   X'04'                   ..0 -- EDIT RECOVER CAPABILTY    35100003
**                                     ..1 -- NORECOVER CAPIBILTY       35107003
**                                     THIS WAS A 08 EQU      @ZA18185  35114003
**     NOTE--  BIT USATR04 IS USED DIFFERENTLY                          35121003
**             1 MEANS NO EDIT RECOVERY CAPABILTY FOR THE USER          35128003
**                                     FLAGS 5 THROUGH 15 ARE           35135003
**                                     ..RESERVED FOR IBM USE           35150002
         DS    BL1                     SECOND BYTE OF FLAGS, 8 -- 15    35200002
         SPACE 1                                                        35250002
UADSINST DS    BL2                     FOR INSTALLATION USE             35300002
UADSUPTP DS    AL4                     OFFSET TO CURRENT UPT            35350002
UADSPWD1 DS    AL4                     OFFSET TO FIRST PASSWORD OFFSET  35400002
UADSPERP DS    AL4                     OFFSET TO PERFORMANCE GROUP      35450002
UADSDEST DS    CL8                     DESTINATION                      35500002
UADSSUBH DS    CL1                     HOLD CLASS              @DZ04005 35550003
UADSSUBC DS    CL1                     JOB CLASS               @DZ04005 35558003
UADSSUBM DS    CL1                     MESSAGE CLASS           @DZ04005 35566003
UADSSOUT DS    CL1                     SYSOUT CLASS            @DZ04005 35574003
         DS    CL20                    RESERVED                         35582003
         SPACE 1                                                        35600002
         SPACE 1                                                        35650002
         SPACE 1                                                        35700002
         AIF   (&ALL EQ 'ALL').GOB1   CHK TO DO ALL                     35750002
         AIF   (&GNL NE 'GNL').DOPOB  CHK TO DO GENERAL OFFSET          35800002
.GOB1    ANOP                                                           35850002
         AIF   (&DSPL NE 'DSPL').GOBA CHK TO DISPLAY FORMAT             35900002
         EJECT                                                          35950002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 36000002
*                                                                     * 36050002
*             G E N E R A L   O F F S E T   B L O C K                 * 36100002
*                                                                     * 36150002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 36200002
*                                                                     * 36250002
*                                                                     * 36300002
*               I----------I--------------------------------I         * 36350002
*          0    I UADSNNFL I UADSNNEX                       I         * 36400002
*               I----------I--------------------------------I         * 36450002
*          4    I UADSNSUB                                  I         * 36500002
*               I-------------------------------------------I         * 36550002
*          8    I UADSNDAT                                  I         * 36600002
*               I-------------------------------------------I         * 36650002
*                                                                     * 36700002
         SPACE 1                                                        36750002
.GOBA    ANOP                                                           36800002
         SPACE 1                                                        36850002
UADSNODE DSECT ,UADSNPTR                                                36900002
         SPACE 1                                                        36950002
UADSNNFL DS    BL1                    GENERAL OFFSET BLOCK              37000002
**                                     ..INDICATORS                     37050002
UADSNFLG EQU   X'80'                   ..0 -- CONTINUE CHAINING         37100002
**                                     ..1 -- LAST OFFSET BLOCK FOR     37150002
**                                     .......THIS OFFSET CHAIN         37200002
**                                     .. FLAGS 1 THRU 7 ARE RESERVED   37250002
UADSNNEX DS    AL3                    OFFSET TO NEXT OFFSET BLOCK       37300002
UADSNSUB DS    AL4                    OFFSET TO ASSOCIATED OFFSET       37350002
UADSNDAT DS    AL4                    OFFSET TO DATA BLOCK              37400002
         SPACE 1                                                        37450002
.DOPOB   ANOP                                                           37500002
         AIF   (&ALL EQ 'ALL').POB1   CHK TO DO ALL                     37550002
         AIF   (&POB NE 'POB').DOAOB  CHK TO DO PASSWORD OFFSET         37600002
.POB1    ANOP                                                           37650002
         AIF   (&DSPL NE 'DSPL').POBA CHK TO DISPLAY FORMAT             37700002
         EJECT                                                          37750002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 37800002
*                                                                     * 37850002
*            P A S S W O R D   O F F S E T   B L O C K                * 37900002
*                                                                     * 37950002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 38000002
*                                                                     * 38050002
*                                                                     * 38100002
*               I----------I--------------------------------I         * 38150002
*          0    I UADSPFLG I UADSPNEX                       I         * 38200002
*               I----------I--------------------------------I         * 38250002
*          4    I UADSPSUB                                  I         * 38300002
*               I-------------------------------------------I         * 38350002
*          8    I UADSPDAT                                  I         * 38400002
*               I-------------------------------------------I         * 38450002
*                                                                     * 38500002
         SPACE 1                                                        38550002
.POBA    ANOP                                                           38600002
         SPACE 1                                                        38650002
DPOB     DSECT ,DPOBPTR                                                 38700002
         SPACE 1                                                        38750002
UADSPFLG DS    BL1                     PASSWORD BLOCK INDICATORS        38800002
PFLG01   EQU   X'80'                   ..0 -- CONTINUE CHAINING         38850002
**                                     ..1 -- LAST PASSWORD FOR THIS    38900002
**                                     .......USERID                    38950002
**                                     ..FLAGS 1 THRU 7 ARE RESERVED    39000002
UADSPNEX DS    AL3                     OFFSET TO NEXT PASSWD OFFSET     39050002
**                                     ..BLOCK                          39100002
UADSPSUB DS    AL4                     OFFSET TO ASSOCIATED ACCOUNT     39150002
**                                     ..NUMBER OFFSET BLOCK            39200002
UADSPDAT DS    AL4                     OFFSET TO PASSWORD DATA BLOCK    39250002
         SPACE 1                                                        39300002
.DOAOB   ANOP                                                           39350002
         AIF   (&ALL EQ 'ALL').AOB1   CHK TO DO ALL                     39400002
         AIF   (&AOB NE 'AOB').DOROB  CHK TO DO ACCT NO. OFFSET         39450002
.AOB1    ANOP                                                           39500002
         AIF   (&DSPL NE 'DSPL').AOBA CHK TO DISPLAY FORMAT             39550002
         EJECT                                                          39600002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 39650002
*                                                                     * 39700002
*                   A C C O U N T   N U M B E R                       * 39750002
*                     O F F S E T   B L O C K                         * 39800002
*                                                                     * 39850002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 39900002
*                                                                     * 39950002
*                                                                     * 40000002
*               I----------I--------------------------------I         * 40050002
*          0    I UADSAFLG I UADSANEX                       I         * 40100002
*               I----------I--------------------------------I         * 40150002
*          4    I UADSASUB                                  I         * 40200002
*               I-------------------------------------------I         * 40250002
*          8    I UADSADAT                                  I         * 40300002
*               I-------------------------------------------I         * 40350002
*                                                                     * 40400002
         SPACE 1                                                        40450002
.AOBA    ANOP                                                           40500002
         SPACE 1                                                        40550002
DNOB     DSECT ,DNOBPTR                                                 40600002
         SPACE 1                                                        40650002
UADSAFLG DS    BL1                    ACCOUNT NUMBER OFFSET BLOCK       40700002
**                                     ..INDICATORS                     40750002
AFLG01   EQU   X'80'                   ..0 -- CONTINUE CHAINING         40800002
**                                     ..1 -- LAST ACCOUNT NUMBER FOR   40850002
**                                     .......THIS PASSWORD CHAIN       40900002
**                                     .. FLAGS 1 THRU 7 ARE RESERVED   40950002
UADSANEX DS    AL3                     OFFSET TO NEXT ACCOUNT NUMBER    41000002
**                                     ..OFFSET BLOCK                   41050002
UADSASUB DS    AL4                     OFFSET TO ASSOCIATED PROCNAME    41100002
**                                     ..OFFSET BLOCK                   41150002
UADSADAT DS    AL4                     OFFSET TO ACCOUNT NUMBER DATA    41200002
**                                     ..BLOCK                          41250002
         SPACE 1                                                        41300002
.DOROB   ANOP                                                           41350002
         AIF   (&ALL EQ 'ALL').ROB1   CHK TO DO ALL                     41400002
         AIF   (&ROB NE 'ROB').DOPDB  CHK TO DO PROCNAME OFFSET         41450002
.ROB1    ANOP                                                           41500002
         AIF   (&DSPL NE 'DSPL').ROBA CHK TO DISPLAY FORMAT             41550002
         EJECT                                                          41600002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 41650002
*                                                                     * 41700002
*                   P R O C E D U R E   N A M E                       * 41750002
*                     O F F S E T   B L O C K                         * 41800002
*                                                                     * 41850002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 41900002
*                                                                     * 41950002
*                                                                     * 42000002
*               I----------I--------------------------------I         * 42050002
*          0    I UADSRFLG I UADSRNEX                       I         * 42100002
*               I----------I--------------------------------I         * 42150002
*          4    I UADSRSUB                                  I         * 42200002
*               I-------------------------------------------I         * 42250002
*          8    I UADSRDAT                                  I         * 42300002
*               I-------------------------------------------I         * 42350002
*                                                                     * 42400002
         SPACE 1                                                        42450002
.ROBA    ANOP                                                           42500002
         SPACE 1                                                        42550002
DROB     DSECT ,DROBPTR                                                 42600002
         SPACE 1                                                        42650002
UADSRFLG DS    BL1                     PROCNAME OFFSET BLOCK            42700002
**                                     ..INDICATORS                     42750002
FLGR01   EQU   X'80'                   ..0 -- CONTINUE CHAINING         42800002
**                                     ..1 -- LAST PROCNAME FOR THIS    42850002
**                                     .......ACCOUNT NUMBER            42900002
**                                     ..FLAGS 1 THRU 7 ARE RESERVED    42950002
UADSRNEX DS    AL3                     OFFSET TO NEXT PROCNAME          43000002
**                                     ..OFFSET BLOCK                   43050002
UADSRSUB DS    AL4                     RESERVED BY ACCOUNT              43100002
UADSRDAT DS    AL4                     OFFSET TO PROCNAME DATA BLOCK    43150002
         SPACE 1                                                        43200002
.DOPDB   ANOP                                                           43250002
         AIF   (&ALL EQ 'ALL').PDB1   CHK TO DO ALL                     43300002
         AIF   (&PDB NE 'PDB').DOADB  CHK TO DO PASSWORD DATA           43350002
.PDB1    ANOP                                                           43400002
         AIF   (&DSPL NE 'DSPL').PDBA CHK TO DISPLAY FORMAT             43450002
         EJECT                                                          43500002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 43550002
*                                                                     * 43600002
*              P A S S W O R D   D A T A   B L O C K                  * 43650002
*                                                                     * 43700002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 43750002
*                                                                     * 43800002
*                                                                     * 43850002
*               I----------I--------------------------------I         * 43900002
*          0    I UADSPCTR I RESERVED                       I         * 43950002
*               I----------I--------------------------------I         * 44000002
*          4    I UADSPPWD                                  I         * 44050002
*               I                                           I         * 44100002
*               I-------------------------------------------I         * 44150002
*                                                                     * 44200002
         SPACE 1                                                        44250002
.PDBA    ANOP                                                           44300002
         SPACE 1                                                        44350002
DPOBD    DSECT ,UADSPPTR                                                44400002
         SPACE 1                                                        44450002
UADSPCTR DS    AL1                     COUNT OF REFERENCES TO THIS      44500002
**                                     ..DATA BLOCK                     44550002
         DS    XL3                     RESERVED FOR ACCOUNT             44600002
UADSPPWD DS    CL8                     PASSWORD                         44650002
         SPACE 1                                                        44700002
.DOADB   ANOP                                                           44750002
         AIF   (&ALL EQ 'ALL').ADB1   CHK TO DO ALL                     44800002
         AIF   (&ADB NE 'ADB').DORDB  CHK TO DO ACCT NO. DATA           44850002
.ADB1    ANOP                                                           44900002
         AIF   (&DSPL NE 'DSPL').ADBA CHK TO DISPLAY FORMAT             44950002
         EJECT                                                          45000002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 45050002
*                                                                     * 45100002
*                   A C C O U N T   N U M B E R                       * 45150002
*                      D A T A     B L O C K                          * 45200002
*                                                                     * 45250002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 45300002
*                                                                     * 45350002
*                                                                     * 45400002
*               I----------I--------------------------------I         * 45450002
*          0    I UADSACTR I RESERVED                       I         * 45500002
*               I----------I--------------------------------I         * 45550002
*          4    I UADSADRF (40 BYTES)                       I         * 45600002
*               I                                           I         * 45650002
*               I                                           I         * 45700002
*               I                                           I         * 45750002
*               I                                           I         * 45800002
*               I                                           I         * 45850002
*               I                                           I         * 45900002
*               I                                           I         * 45950002
*               I                                           I         * 46000002
*               I                                           I         * 46050002
*               I----------I--------------------------------I         * 46100002
*          44   I UADSALEN I UADSANUM (MAX OF 40 BYTES)     I         * 46150002
*               I----------I                                I         * 46200002
*               =                                           =         * 46250002
*               I-------------------------------------------I         * 46300002
*                                                                     * 46350002
         SPACE 1                                                        46400002
.ADBA    ANOP                                                           46450002
         SPACE 1                                                        46500002
DNOBD    DSECT ,UADSAPTR                                                46550002
         SPACE 1                                                        46600002
UADSACTR DS    AL1                     COUNT OF REFERENCES TO THIS      46650002
**                                     ..DATA BLOCK                     46700002
         DS    XL3                     RESERVED FOR ACCOUNT             46750002
UADSADRF DS    CL40                    DRIVER DATA FIELD                46800002
UADSALEN DS    AL1                     LENGTH OF FOLLOWING ACCOUNT      46850002
**                                     ..NUMBER DATA FIELD              46900002
UADSANUM DS    CL40                    ACCT NMBR DATA FIELD             46950002
                                       ..NOTE -- USE SPECIFIC           47000002
                                       .....LENGTH REFERENCES           47050002
         SPACE 1                                                        47100002
.DORDB   ANOP                                                           47150002
         AIF   (&ALL EQ 'ALL').RDB1   CHK TO DO ALL                     47200002
         AIF   (&RDB NE 'RDB').DOFSQ  CHK TO DO PROCNAME DATA           47250002
.RDB1    ANOP                                                           47300002
         AIF   (&DSPL NE 'DSPL').RDBA CHK TO DISPLAY FORMAT             47350002
         EJECT                                                          47400002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 47450002
*                                                                     * 47500002
*                   P R O C E D U R E   N A M E                       * 47550002
*                      D A T A     B L O C K                          * 47600002
*                                                                     * 47650002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 47700002
*                                                                     * 47750002
*                                                                     * 47800002
*               I----------I--------------------------------I         * 47850002
*          0    I UADSRCTR I RESERVED                       I         * 47900002
*               I----------I--------------------------------I         * 47950002
*          4    I UADSRNAM                                  I         * 48000002
*               I                                           I         * 48050002
*               I----------I----------I---------------------I         * 48100002
*          12   I RESERVED            I UADSRSIZ            I         * 48150002
*               I----------I----------I---------------------I         * 48200002
*          16   I UADSUNAM                                  I         * 48250002
*               I                                           I         * 48300002
*               I-------------------------------------------I         * 48350002
*                                                                     * 48400002
         SPACE 1                                                        48450002
.RDBA    ANOP                                                           48500002
         SPACE 1                                                        48550002
DROBD    DSECT ,UADSRPTR                                                48600002
         SPACE 1                                                        48650002
UADSRCTR DS    AL1                     COUNT OF REFERENCES TO THIS      48700002
**                                     DATA BLOCK                       48750002
         DS    XL3                     RESERVED FOR ACCOUNT             48800002
UADSRNAM DS    CL8                     LOGON PROCEDURE NAME             48850002
         DS    XL2                     RESERVED                         48900002
UADSRSIZ DS    AL2                     REGION SIZE SPECIFIED IN THE     48950002
**                                     ..NAMED PROCEDURE                49000002
UADSUNAM DS    CL8                     ESOTERIC GROUP UNIT NAME         49050002
         SPACE 1                                                        49100002
.DOFSQ   ANOP                                                           49150002
         AIF   (&ALL EQ 'ALL').FSQ1   CHK TO DO ALL                     49200002
         AIF   (&FSQ NE 'FSQ').DONE   CHK TO DO FSQE DATA               49250002
.FSQ1    ANOP                                                           49300002
         AIF   (&DSPL NE 'DSPL').FSQEA CHK TO DISPLAY FORMAT            49350002
         EJECT                                                          49400002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 49450002
*                                                                     * 49500002
*                F R E E   S P A C E   Q U E U E                      * 49550002
*                         E L E M E N T                               * 49600002
*                                                                     * 49650002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 49700002
*                                                                     * 49750002
*                                                                     * 49800002
*               I---------------------I---------------------I         * 49850002
*          0    I FSQELNTH            I FSQENEXT            I         * 49900002
*               I---------------------I---------------------I         * 49950002
*                                                                     * 50000002
         SPACE 1                                                        50050002
.FSQEA   ANOP                                                           50100002
         SPACE 1                                                        50150002
UADSFSQE DSECT ,FSQEPTR                                                 50200002
         SPACE 1                                                        50250002
FSQELNTH DS    AL2                     LENGTH OF FREE SPACE AREA        50300002
FSQENEXT DS    AL2                     OFFSET TO NEXT FSQE              50350002
.DONE    ANOP                                                           50400002
         MEND  , */                                                     50450002
*%ACTMC1 :  ;                                                           50500002
*%IF ALL¬='ALL'  %THEN               /* CHK TO DO ALL                */ 50550002
*   %GOTO UADL0001;                                                     50600002
*%ELSE                                                                  50650002
*   %GOTO HDR1    ;                                                     50700002
*%UADL0001:  ;                                                          50750002
*%IF HDR¬='HDR'  %THEN               /* CHK TO DO HEADER BLOCK       */ 50800002
*   %GOTO UADL0002;                                                     50850002
*%ELSE                                                                  50900002
*   %GOTO HDR1    ;                                                     50950002
*%UADL0002:  ;                                                          51000002
*%IF GNL¬='GNL'  %THEN               /* CHK TO DO GENERAL OFFSET     */ 51050002
*   %GOTO UADL0003;                                                     51100002
*%ELSE                                                                  51150002
*   %GOTO GOB1    ;                                                     51200002
*%UADL0003:  ;                                                          51250002
*%IF POB¬='POB'  %THEN               /* CHK TO DO PASSWD OFFSET      */ 51300002
*   %GOTO UADL0004;                                                     51350002
*%ELSE                                                                  51400002
*   %GOTO POB1    ;                                                     51450002
*%UADL0004:  ;                                                          51500002
*%IF AOB¬='AOB'  %THEN               /* CHK TO DO ACCTNM OFFSET      */ 51550002
*   %GOTO UADL0005;                                                     51600002
*%ELSE                                                                  51650002
*   %GOTO AOB1    ;                                                     51700002
*%UADL0005:  ;                                                          51750002
*%IF ROB¬='ROB'  %THEN               /* CHK TO DO PROCNAME OFFSET    */ 51800002
*   %GOTO UADL0006;                                                     51850002
*%ELSE                                                                  51900002
*   %GOTO ROB1    ;                                                     51950002
*%UADL0006:  ;                                                          52000002
*%IF PDB¬='PDB'  %THEN               /* CHK TO DO PASSWD DATA        */ 52050002
*   %GOTO UADL0007;                                                     52100002
*%ELSE                                                                  52150002
*   %GOTO PDB1    ;                                                     52200002
*%UADL0007:  ;                                                          52250002
*%IF ADB¬='ADB'  %THEN               /* CHK TO DO ACCTNM DATA        */ 52300002
*   %GOTO UADL0008;                                                     52350002
*%ELSE                                                                  52400002
*   %GOTO ADB1    ;                                                     52450002
*%UADL0008:  ;                                                          52500002
*%IF RDB¬='RDB'  %THEN               /* CHK TO DO PROCNAME DATA      */ 52550002
*   %GOTO UADL0009;                                                     52600002
*%ELSE                                                                  52650002
*   %GOTO RDB1    ;                                                     52700002
*%UADL0009:  ;                                                          52750002
*%IF FSQ¬='FSQ'  %THEN               /* CHK TO DO FREE SPACE ELEMENT */ 52800002
*   %GOTO UADL0010;                                                     52850002
*%ELSE                                                                  52900002
*   %GOTO FSQ1    ;                                                     52950002
*%UADL0010:  ;                                                          53000002
*%ALL='ALL';                                                            53050002
*%HDR1   :  ;                                                           53100002
*%IF DSPL='DSPL'  %THEN              /* CHK TO DISPLAY FORMAT        */ 53150002
*   %GOTO UADL0011;                                                     53200002
*%ELSE                                                                  53250002
*   %GOTO HDRA    ;                                                     53300002
*%UADL0011:  ;                                                          53350002
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 53400002
*                                                                     * 53450002
*                     H E A D E R   B L O C K                         * 53500002
*                                                                     * 53550002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 53600002
*                                                                     * 53650002
*                                                                     * 53700002
*               I---------------------I---------------------I         * 53750002
*          0    I UADSBLNG            I UADSFSQP            I         * 53800002
*               I---------------------I---------------------I         * 53850002
*          4    I UADSUSER                                  I         * 53900002
*               I                                           I         * 53950002
*               I---------------------I---------------------I         * 54000002
*          12   I UADSBN01            I UADSMAXC            I         * 54050002
*               I---------------------I---------------------I         * 54100002
*          16   I UADSATTR            I UADSINST            I         * 54150002
*               I---------------------I---------------------I         * 54200002
*          20   I UADSUPTP                                  I         * 54250002
*               I-------------------------------------------I         * 54300002
*          24   I UADSPWD1                                  I         * 54350002
*               I-------------------------------------------I         * 54400002
*          28   I UADSPERP                                  I         * 54450002
*               I-------------------------------------------I         * 54500002
*          32   I UADSDEST                                  I         * 54550002
*               I                                           I         * 54600002
*               I----------I----------I----------I----------I         * 54650003
*          40   I UADSSUBH I UADSSUBC I UADSSUBM I UADSSOUT I         * 54670003
*               I----------I----------I----------I----------I         * 54690003
*          44   I RESERVED                                  I         * 54710003
*               I                                           I         * 54750002
*               I                                           I         * 54800002
*               I                                           I         * 54850002
*               I                                           I         * 54900002
*               I                                           I         * 54950002
*               I-------------------------------------------I         * 55000002
*                                                                    */ 55050002
*%HDRA   :  ;                                                           55100002
*                                                                       55150002
*DECLARE                                                                55200002
*  1 DHED     BASED(HEDBPTR),                                           55250002
*   2 UADSMHDR,                      /* COMMON HEADER AREA           */ 55300002
*    3 UADSBLNG PTR(15),             /* BLOCK LENGTH                 */ 55350002
*                                                                       55400002
*    3 UADSFSQP PTR(15),             /* OFFSET TO INITIAL FSQE (FREE    55450002
*                                      ..SPACE QUEUE ELEMENT)        */ 55500002
*    3 UADSUSER CHAR(8),             /* USERID                       */ 55550002
*    3 UADSBN01 FIXED(16),           /* FLAGS                        */ 55600002
*     4 *        BIT(8),             /* RESERVED                     */ 55610002
*     4 UADSNUSP BIT(1),             /*..0 -- USABLE SPACE EXISTS       55650002
*                                      ..1 -- ONLY NON-USABLE SPACE     55700002
*                                      .......EXISTS IN THIS BLOCK   */ 55750002
*     4 UADSEXPF BIT(1),             /*..0 -- OLD FORMAT                55800002
*                                      ..1 -- EXPANDED FORMAT        */ 55850002
*     4 UADSXBLK BIT(1),             /*..0 -- EXTRA BLOCK NOT AVAILABLE 55900003
*                                      ..1 -- EXTRA BLOCK IS AVAILABLE  55906003
*                                                               @APAR*/ 55912003
*     4 UADSXUSD BIT(1),             /*..0 -- EXTRA BLOCK NOT USED      55918003
*                                      ..1 -- EXTRA BLOCK HAS BEEN USED 55924003
*                                                               @APAR*/ 55930003
*     4 *        BIT(4),             /* RESERVED                     */ 55936003
*    3 UADSMAXC FIXED(16),           /* MAXIMUM CORE SIZE ALLOTTABLE    55950002
*                                         TO THIS USER.              */ 56000002
*   2 UADSATTR BIT(16),              /* SYSTEM ATTRIBUTES OF USERID  */ 56050002
*     3 USATR00  BIT(1),             /* ..0 -- NO OPERATOR CAPABILITY   56100002
*                                       ..1 -- OPERATOR CAPABILITY   */ 56150002
*     3 USATR01  BIT(1),             /* ..0 -- NO ACCOUNT CAPABILITY    56200002
*                                       ..1 -- ACCOUNT CAPABILITY    */ 56250002
*     3 USATR02  BIT(1),             /* ..0 -- NO JCL CAPABILITY        56300002
*                                       ..1 -- JCL CAPABILITY        */ 56350002
*     3 USATR03  BIT(1),             /* ..0 -- NO MOUNT CAPABILITY      56400002
*                                       ..1 -- MOUNT CAPABILITY     */  56450003
*     3   *      BIT(1),            /* USED BY LOGON,PROFILE @ZA18185*/ 56460003
*     3 USATR04  BIT(1),            /* ..0 -- EDIT RECOVER CAPABILTY    56470003
*                                      ..1 -- NO RECOVER CAPABILTY  */  56480003
*    /*    NOTE--  USATR04 BIT USAGE IS DIFFERENT...                    56490003
*                  1 MEANS THE USER HAS NO EDIT RECOVER CAPABILTY   */  56500003
*     3 *        BIT(10),            /* RESERVED FOR IBM USE @ZA18185*/ 56510003
*                                                                       56550002
*    2 UADSINST BIT(16),             /* FLAGS 16 THROUGH 31 ARE         56600002
*                                       ..RESERVED FOR INSTALLATION     56650002
*                                       ..USE                        */ 56700002
*   2 UADSUPTP PTR,                  /* PTR TO USER PROFILE TABLE    */ 56750002
*   2 UADSPWD1 PTR,                  /* OFFSET TO 1ST PASSWD OFFSET  */ 56800002
*   2 UADSPERP PTR,                  /* OFFSET TO PERFORMANCE GROUP  */ 56850002
*   2 UADSDEST CHAR(8),              /* DESTINATION                  */ 56900002
*   2 UADSSUBH CHAR(1),              /* HOLD CLASS           @DZ04005*/ 56950003
*   2 UADSSUBC CHAR(1),              /* JOB CLASS            @DZ04005*/ 56958003
*   2 UADSSUBM CHAR(1),              /* MESSAGE CLASS        @DZ04005*/ 56966003
*   2 UADSSOUT CHAR(1),              /* SYSOUT CLASS         @DZ04005*/ 56974003
*   2 *        CHAR(20);             /* RESERVED                     */ 56982003
*%IF ALL¬='ALL'  %THEN               /* CHK TO DO ALL                */ 57000002
*   %GOTO DHEL0001;                                                     57050002
*%ELSE                                                                  57100002
*   %GOTO GOB1    ;                                                     57150002
*%DHEL0001:  ;                                                          57200002
*%IF GNL='GNL'  %THEN                /* CHK TO DO GENERAL OFFSET     */ 57250002
*   %GOTO DHEL0002;                                                     57300002
*%ELSE                                                                  57350002
*   %GOTO DOPOB   ;                                                     57400002
*%DHEL0002:  ;                                                          57450002
*%GOB1   :  ;                                                           57500002
*%IF DSPL='DSPL'  %THEN              /* CHK TO DISPLAY FORMAT        */ 57550002
*   %GOTO DHEL0003;                                                     57600002
*%ELSE                                                                  57650002
*   %GOTO GOBA    ;                                                     57700002
*%DHEL0003:  ;                                                          57750002
*@EJECT;                                                                57800002
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 57850002
*                                                                     * 57900002
*             G E N E R A L   O F F S E T   B L O C K                 * 57950002
*                                                                     * 58000002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 58050002
*                                                                     * 58100002
*                                                                     * 58150002
*               I----------I--------------------------------I         * 58200002
*          0    I UADSNNFL I UADSNNEX                       I         * 58250002
*               I----------I--------------------------------I         * 58300002
*          4    I UADSNSUB                                  I         * 58350002
*               I-------------------------------------------I         * 58400002
*          8    I UADSNDAT                                  I         * 58450002
*               I-------------------------------------------I         * 58500002
*                                                                    */ 58550002
*%GOBA   :  ;                                                           58600002
*                                                                       58650002
*DECLARE                                                                58700002
*  1 UADSNODE BASED(UADSNPTR),                                          58750002
*                                                                       58800002
*   2 UADSNWD1 PTR,                  /* CHAIN POINTER                */ 58850002
*     3 UADSNFLG BIT(1),             /* ..0 -- CONTINUE CHAINING        58900002
*                                       ..1 -- LAST OFFSET BLOCK FOR    58950002
*                                       .......THIS OFFSET CHAIN     */ 59000002
*     3 *        BIT(7),             /* FLAGS 1 THRU 7 ARE RESERVED  */ 59050002
*     3 UADSNNEX PTR(24),            /* OFFSET TO NEXT OFFSET BLOCK  */ 59100002
*                                                                       59150002
*   2 UADSNSUB PTR,                  /* OFFSET TO ASSOCIATED OFFSET  */ 59200002
*                                                                       59250002
*   2 UADSNDAT PTR;                  /* OFFSET TO DATA BLOCK         */ 59300002
*%DOPOB  :  ;                                                           59350002
*%IF ALL¬='ALL'  %THEN               /* CHK TO DO ALL                */ 59400002
*   %GOTO UADLX001;                                                     59450002
*%ELSE                                                                  59500002
*   %GOTO POB1    ;                                                     59550002
*%UADLX001:  ;                                                          59600002
*%IF POB='POB'  %THEN                /* CHK TO DO PASSWORD OFFSET    */ 59650002
*   %GOTO UADLX002;                                                     59700002
*%ELSE                                                                  59750002
*   %GOTO DOAOB   ;                                                     59800002
*%UADLX002:  ;                                                          59850002
*%POB1   :  ;                                                           59900002
*%IF DSPL='DSPL'  %THEN              /* CHK TO DISPLAY FORMAT        */ 59950002
*   %GOTO UADLX003;                                                     60000002
*%ELSE                                                                  60050002
*   %GOTO POBA    ;                                                     60100002
*%UADLX003:  ;                                                          60150002
*@EJECT;                                                                60200002
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 60250002
*                                                                     * 60300002
*            P A S S W O R D   O F F S E T   B L O C K                * 60350002
*                                                                     * 60400002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 60450002
*                                                                     * 60500002
*                                                                     * 60550002
*               I----------I--------------------------------I         * 60600002
*          0    I UADSPFLG I UADSPNEX                       I         * 60650002
*               I----------I--------------------------------I         * 60700002
*          4    I UADSPSUB                                  I         * 60750002
*               I-------------------------------------------I         * 60800002
*          8    I UADSPDAT                                  I         * 60850002
*               I-------------------------------------------I         * 60900002
*                                                                    */ 60950002
*%POBA   :  ;                                                           61000002
*                                                                       61050002
*DECLARE                                                                61100002
*  1 DPOB     BASED(DPOBPTR),                                           61150002
*                                                                       61200002
*   2 PFLG01   BIT(1),               /* ..0 -- CONTINUE CHAINING        61250002
*                                       ..1 -- LAST PASSWORD FOR THIS   61300002
*                                       .......USERID                */ 61350002
*   2 *        BIT(7),               /* FLAGS 1 THRU 7 ARE RESERVED  */ 61400002
*                                                                       61450002
*   2 UADSPNEX PTR(24),              /* OFFSET TO NEXT PASSWD OFFSET    61500002
*                                       ..BLOCK                      */ 61550002
*   2 UADSPSUB PTR,                  /* OFFSET TO ASSOCIATED ACCOUNT    61600002
*                                       ..NUMBER OFFSET BLOCK        */ 61650002
*   2 UADSPDAT PTR;                  /* OFFSET TO PASSWORD DATA         61700002
*                                       BLOCK                        */ 61750002
*%DOAOB  :  ;                                                           61800002
*%IF ALL¬='ALL'  %THEN               /* CHK TO DO ALL                */ 61850002
*   %GOTO DPOL0001;                                                     61900002
*%ELSE                                                                  61950002
*   %GOTO AOB1    ;                                                     62000002
*%DPOL0001:  ;                                                          62050002
*%IF AOB='AOB'  %THEN                /* CHK TO DO ACCTNMBR OFFSET    */ 62100002
*   %GOTO DPOL0002;                                                     62150002
*%ELSE                                                                  62200002
*   %GOTO DOROB   ;                                                     62250002
*%DPOL0002:  ;                                                          62300002
*%AOB1   :  ;                                                           62350002
*%IF DSPL='DSPL'  %THEN              /* CHK TO DISPLAY FORMAT        */ 62400002
*   %GOTO DPOL0003;                                                     62450002
*%ELSE                                                                  62500002
*   %GOTO AOBA    ;                                                     62550002
*%DPOL0003:  ;                                                          62600002
*@EJECT;                                                                62650002
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 62700002
*                                                                     * 62750002
*                   A C C O U N T   N U M B E R                       * 62800002
*                     O F F S E T   B L O C K                         * 62850002
*                                                                     * 62900002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 62950002
*                                                                     * 63000002
*                                                                     * 63050002
*               I----------I--------------------------------I         * 63100002
*          0    I UADSAFLG I UADSANEX                       I         * 63150002
*               I----------I--------------------------------I         * 63200002
*          4    I UADSASUB                                  I         * 63250002
*               I-------------------------------------------I         * 63300002
*          8    I UADSADAT                                  I         * 63350002
*               I-------------------------------------------I         * 63400002
*                                                                    */ 63450002
*%AOBA   :  ;                                                           63500002
*                                                                       63550002
*DECLARE                                                                63600002
*  1 DNOB     BASED(DNOBPTR),                                           63650002
*                                                                       63700002
*   2 AFLG01   BIT(1),               /* ..0 -- CONTINUE CHAINING        63750002
*                                       ..1 -- LAST ACCOUNT NUMBER FOR  63800002
*                                       .......THIS PASSWORD CHAIN   */ 63850002
*   2 *        BIT(7),               /* FLAGS 1 THRU 7 ARE RESERVED  */ 63900002
*                                                                       63950002
*   2 UADSANEX PTR(24),              /* OFFSET TO NEXT ACCOUNT          64000002
*                                        NUMBER OFFSET BLOCK         */ 64050002
*                                                                       64100002
*   2 UADSASUB PTR,                  /* OFFSET TO ASSOCIATED PROCNAME   64150002
*                                       ..OFFSET BLOCK               */ 64200002
*   2 UADSADAT PTR;                  /* OFFSET TO ACCOUNT NUMBER DATA   64250002
*                                       ..BLOCK                      */ 64300002
*%DOROB  :  ;                                                           64350002
*%IF ALL¬='ALL'  %THEN               /* CHK TO DO ALL                */ 64400002
*   %GOTO DNOL0001;                                                     64450002
*%ELSE                                                                  64500002
*   %GOTO ROB1    ;                                                     64550002
*%DNOL0001:  ;                                                          64600002
*%IF ROB='ROB'  %THEN                /* CHK TO DO PROCNAME OFFSET    */ 64650002
*   %GOTO DNOL0002;                                                     64700002
*%ELSE                                                                  64750002
*   %GOTO DOPDB   ;                                                     64800002
*%DNOL0002:  ;                                                          64850002
*%ROB1   :  ;                                                           64900002
*%IF DSPL='DSPL'  %THEN              /* CHK TO DISPLAY FORMAT        */ 64950002
*   %GOTO DNOL0003;                                                     65000002
*%ELSE                                                                  65050002
*   %GOTO ROBA    ;                                                     65100002
*%DNOL0003:  ;                                                          65150002
*@EJECT;                                                                65200002
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 65250002
*                                                                     * 65300002
*                   P R O C E D U R E   N A M E                       * 65350002
*                     O F F S E T   B L O C K                         * 65400002
*                                                                     * 65450002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 65500002
*                                                                     * 65550002
*                                                                     * 65600002
*               I----------I--------------------------------I         * 65650002
*          0    I UADSRFLG I UADSRNEX                       I         * 65700002
*               I----------I--------------------------------I         * 65750002
*          4    I UADSRSUB                                  I         * 65800002
*               I-------------------------------------------I         * 65850002
*          8    I UADSRDAT                                  I         * 65900002
*               I-------------------------------------------I         * 65950002
*                                                                    */ 66000002
*%ROBA   :  ;                                                           66050002
*                                                                       66100002
*DECLARE                                                                66150002
*  1 DROB     BASED(DROBPTR),                                           66200002
*                                                                       66250002
*   2 FLGR01   BIT(1),               /* ..0 -- CONTINUE CHAINING        66300002
*                                       ..1 -- LAST PROCNAME FOR        66350002
*                                       .......THIS ACCOUNT NUMBER   */ 66400002
*   2 *        BIT(7),               /* FLAGS 1 THRU 7 ARE RESERVED  */ 66450002
*                                                                       66500002
*   2 UADSRNEX PTR(24),              /* OFFSET TO NEXT PROCNAME         66550002
*                                       ..OFFSET BLOCK               */ 66600002
*   2 *        PTR,                  /* RESERVED BY ACCOUNT          */ 66650002
*   2 UADSRDAT PTR;                  /* OFFSET TO PROCNAME DATA         66700002
*                                       BLOCK                        */ 66750002
*%DOPDB  :  ;                                                           66800002
*%IF ALL¬='ALL'  %THEN               /* CHK TO DO ALL                */ 66850002
*   %GOTO DROL0001;                                                     66900002
*%ELSE                                                                  66950002
*   %GOTO PDB1    ;                                                     67000002
*%DROL0001:  ;                                                          67050002
*%IF PDB='PDB'  %THEN                /* CHK TO DO PASSWORD DATA      */ 67100002
*   %GOTO DROL0002;                                                     67150002
*%ELSE                                                                  67200002
*   %GOTO DOADB   ;                                                     67250002
*%DROL0002:  ;                                                          67300002
*%PDB1   :  ;                                                           67350002
*%IF DSPL='DSPL'  %THEN              /* CHK TO DISPLAY FORMAT        */ 67400002
*   %GOTO DROL0003;                                                     67450002
*%ELSE                                                                  67500002
*   %GOTO PDBA    ;                                                     67550002
*%DROL0003:  ;                                                          67600002
*@EJECT;                                                                67650002
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 67700002
*                                                                     * 67750002
*              P A S S W O R D   D A T A   B L O C K                  * 67800002
*                                                                     * 67850002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 67900002
*                                                                     * 67950002
*                                                                     * 68000002
*               I----------I--------------------------------I         * 68050002
*          0    I UADSPCTR I RESERVED                       I         * 68100002
*               I----------I--------------------------------I         * 68150002
*          4    I UADSPPWD                                  I         * 68200002
*               I                                           I         * 68250002
*               I-------------------------------------------I         * 68300002
*                                                                    */ 68350002
*%PDBA   :  ;                                                           68400002
*                                                                       68450002
*DECLARE                                                                68500002
*  1 DPOBD    BASED(UADSPPTR),                                          68550002
*                                                                       68600002
*   2 UADSPCTR PTR(8),               /* COUNT OF REFERENCES TO THIS     68650002
*                                       ..DATA BLOCK                 */ 68700002
*   2 *        PTR(24),              /* RESERVED FOR ACCOUNT         */ 68750002
*   2 UADSPPWD CHAR(8);              /* PASSWORD                     */ 68800002
*%DOADB  :  ;                                                           68850002
*%IF ALL¬='ALL'  %THEN               /* CHK TO DO ALL                */ 68900002
*   %GOTO DPOLX001;                                                     68950002
*%ELSE                                                                  69000002
*   %GOTO ADB1    ;                                                     69050002
*%DPOLX001:  ;                                                          69100002
*%IF ADB='ADB'  %THEN                /* CHK TO DO ACCT NO. DATA      */ 69150002
*   %GOTO DPOLX002;                                                     69200002
*%ELSE                                                                  69250002
*   %GOTO DORDB   ;                                                     69300002
*%DPOLX002:  ;                                                          69350002
*%ADB1   :  ;                                                           69400002
*%IF DSPL='DSPL'  %THEN              /* CHK TO DISPLAY FORMAT        */ 69450002
*   %GOTO DPOLX003;                                                     69500002
*%ELSE                                                                  69550002
*   %GOTO ADBA    ;                                                     69600002
*%DPOLX003:  ;                                                          69650002
*@EJECT;                                                                69700002
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 69750002
*                                                                     * 69800002
*                   A C C O U N T   N U M B E R                       * 69850002
*                      D A T A     B L O C K                          * 69900002
*                                                                     * 69950002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 70000002
*                                                                     * 70050002
*                                                                     * 70100002
*               I----------I--------------------------------I         * 70150002
*          0    I UADSACTR I RESERVED                       I         * 70200002
*               I----------I--------------------------------I         * 70250002
*          4    I UADSADRF (40 BYTES)                       I         * 70300002
*               I                                           I         * 70350002
*               I                                           I         * 70400002
*               I                                           I         * 70450002
*               I                                           I         * 70500002
*               I                                           I         * 70550002
*               I                                           I         * 70600002
*               I                                           I         * 70650002
*               I                                           I         * 70700002
*               I                                           I         * 70750002
*               I----------I--------------------------------I         * 70800002
*          44   I UADSALEN I UADSANUM (MAX OF 40 BYTES)     I         * 70850002
*               I----------I                                I         * 70900002
*               =                                           =         * 70950002
*               I-------------------------------------------I         * 71000002
*                                                                    */ 71050002
*%ADBA   :  ;                                                           71100002
*                                                                       71150002
*DECLARE                                                                71200002
*  1 DNOBD    BASED(UADSAPTR),                                          71250002
*                                                                       71300002
*   2 UADSACTR PTR(8),               /* COUNT OF REFERENCES TO THIS     71350002
*                                       ..DATA BLOCK                 */ 71400002
*   2 *        PTR(24),              /* RESERVED FOR ACCOUNT         */ 71450002
*   2 UADSADRF CHAR(40),             /* DRIVER DATA FIELD            */ 71500002
*   2 UADSALEN FIXED(8),             /* LENGTH OF FOLLOWING ACCOUNT     71550002
*                                       ..NUMBER DATA FIELD          */ 71600002
*   2 UADSANUM CHAR(40);             /* ACCT NMBR DATA FIELD         */ 71650002
*%DORDB  :  ;                                                           71700002
*%IF ALL¬='ALL'  %THEN               /* CHK TO DO ALL                */ 71750002
*   %GOTO DNOLX001;                                                     71800002
*%ELSE                                                                  71850002
*   %GOTO RDB1    ;                                                     71900002
*%DNOLX001:  ;                                                          71950002
*%IF RDB='RDB'  %THEN                /* CHK TO DO PROCNAME DATA      */ 72000002
*   %GOTO DNOLX002;                                                     72050002
*%ELSE                                                                  72100002
*   %GOTO DOFSQ   ;                                                     72150002
*%DNOLX002:  ;                                                          72200002
*%RDB1   :  ;                                                           72250002
*%IF DSPL='DSPL'  %THEN              /* CHK TO DISPLAY FORMAT        */ 72300002
*   %GOTO DNOLX003;                                                     72350002
*%ELSE                                                                  72400002
*   %GOTO RDBA    ;                                                     72450002
*%DNOLX003:  ;                                                          72500002
*@EJECT;                                                                72550002
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 72600002
*                                                                     * 72650002
*                   P R O C E D U R E   N A M E                       * 72700002
*                      D A T A     B L O C K                          * 72750002
*                                                                     * 72800002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 72850002
*                                                                     * 72900002
*                                                                     * 72950002
*               I----------I--------------------------------I         * 73000002
*          0    I UADSRCTR I RESERVED                       I         * 73050002
*               I----------I--------------------------------I         * 73100002
*          4    I UADSRNAM                                  I         * 73150002
*               I                                           I         * 73200002
*               I----------I----------I---------------------I         * 73250002
*          12   I RESERVED            I UADSRSIZ            I         * 73300002
*               I----------I----------I---------------------I         * 73350002
*          16   I UADSUNAM                                  I         * 73400002
*               I                                           I         * 73450002
*               I-------------------------------------------I         * 73500002
*                                                                    */ 73550002
*%RDBA   :  ;                                                           73600002
*                                                                       73650002
*DECLARE                                                                73700002
*  1 DROBD    BASED(UADSRPTR),                                          73750002
*                                                                       73800002
*   2 UADSRCTR PTR(8),               /* COUNT OF REFERENCES TO THIS     73850002
*                                         DATA BLOCK                 */ 73900002
*   2 *        PTR(24),              /* RESERVED FOR ACCOUNT         */ 73950002
*   2 UADSRNAM CHAR(8),              /* LOGON PROCEDURE NAME         */ 74000002
*   2 *        CHAR(2),              /* RESERVED                     */ 74050002
*   2 UADSRSIZ FIXED(16),            /* REGION SIZE SPECIFIED IN THE    74100002
*                                       ..NAMED PROCEDURE            */ 74150002
*   2 UADSUNAM CHAR(8);              /* ESOTERIC GROUP UNIT NAME     */ 74200002
*%DOFSQ  :  ;                                                           74250002
*%IF ALL¬='ALL'  %THEN               /* CHK TO DO ALL                */ 74300002
*   %GOTO DUDL0001;                                                     74350002
*%ELSE                                                                  74400002
*   %GOTO FSQ1    ;                                                     74450002
*%DUDL0001:  ;                                                          74500002
*%IF FSQ='FSQ'  %THEN                /* CHK TO DO FSQE DATA          */ 74550002
*   %GOTO DUDL0002;                                                     74600002
*%ELSE                                                                  74650002
*   %GOTO DONE    ;                                                     74700002
*%DUDL0002:  ;                                                          74750002
*%FSQ1   :  ;                                                           74800002
*%IF DSPL='DSPL'  %THEN              /* CHK TO DISPLAY FORMAT        */ 74850002
*   %GOTO DUDL0003;                                                     74900002
*%ELSE                                                                  74950002
*   %GOTO FSQEA   ;                                                     75000002
*%DUDL0003:  ;                                                          75050002
*@EJECT;                                                                75100002
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 75150002
*                                                                     * 75200002
*                F R E E   S P A C E   Q U E U E                      * 75250002
*                         E L E M E N T                               * 75300002
*                                                                     * 75350002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 75400002
*                                                                     * 75450002
*                                                                     * 75500002
*               I---------------------I---------------------I         * 75550002
*          0    I FSQELNTH            I FSQENEXT            I         * 75600002
*               I---------------------I---------------------I         * 75650002
*                                                                    */ 75700002
*%FSQEA  :  ;                                                           75750002
*                                                                       75800002
*DECLARE                                                                75850002
*  1 UADSFSQE BASED(FSQEPTR),                                           75900002
*   2 FSQELNTH PTR(15),              /* LENGTH OF FREE SPACE AREA    */ 75950002
*                                                                       76000002
*   2 FSQENEXT PTR(15);              /* OFFSET TO NEXT FSQE          */ 76050002
*%DONE   :  ;                                                           76100002
./  ADD  SSI=40241340,NAME=IKJEFUDL
*          %GOTO  UDLGO;                                                00020000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00040000
* /*                                                                 */ 00044000
* /*                       I K J E F U D L                           */ 00048000
* /*                                                                 */ 00048800
* /*             USER IDENTITY DATA LIST MAPPING MACRO               */ 00049600
* /*                                                                 */ 00049700
* /* STATUS -- CHANGE --   02-000                   12-02-1972       */ 00049802
* /*                                                                 */ 00049900
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00050000
* /*                                                                 */ 00070000
*%UDLGO:     ;                                                          00090000
*        %GOTO ACTMC2;                                              /*  00110000
         MACRO                                                          00130000
         IKJEFUDL   &MAP                                                00150001
         SPACE 1                                                        00170000
         AIF   (&MAP NE 'MAP').UDLA                                     00190000
**  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 00230000
**  *                                                                 * 00250000
**  *                U S E R I D   D A T A   L I S T                  * 00270000
**  *                                                                 * 00290000
**  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 00310000
**  *                                                                 * 00330000
**  *               I-------------------------------------------I     * 00350000
**  *          0    I UIDLNEX                                   I     * 00370000
**  *               I---------------------I---------------------I     * 00390000
**  *          4    I UIDLSWS             I UIDLCT              I     * 00410000
**  *               I---------------------I---------------------I     * 00430000
**  *          8    I UIDUSER(1)                                I     * 00450002
**  *               I                                           I     * 00470000
**  *               I-------------------------------------------I     * 00510000
**  *          16   I UIDUSER(2)                                I     * 00530002
**  *               I                                           I     * 00550000
**  *               I-------------------------------------------I     * 00590000
**  *                                                                 * 00690000
**  *                                                                 * 00710000
.UDLA    ANOP                                                           00730000
         SPACE 1                                                        00750000
DUIDL    DSECT ,UIDLPTR                                                 00770000
         SPACE 1                                                        00790000
UIDLNEX  DS    AL4                     PTR TO  NEXT UIDL ENTRY          00810000
UIDLSWS  DS    0BL2                    UIDL FLAGS                       00830000
         DS    BL1                     FIRST BYTE OF FLAGS              00850000
UIDADD   EQU   X'80'                   ..1 = RESULT OF ADD CMD          00870000
UIDDEL   EQU   X'40'                   ..1 = RESULT OF DELETE CMD       00890000
UIDCHG   EQU   X'20'                   ..1 = RESULT OF CHANGE CMD       00910000
         DS    BL1                     SECOND BYTE OF FLAGS             00930000
**                                     ..RESERVED                       00950000
UIDLCT   DS    AL2                     NUMBER OF USERID ENTRIES IN      00970000
**                                     ..THIS LIST.  ADD AND DELETE     00990000
**                                     ..COUNT IS 1 FOR EACH 8 BYTE     01010000
**                                     ..USERID FIELD IN LIST.          01030000
**                                     ..CHANGE COUNT IS 2 FOR EACH     01050000
**                                     ..16 BYTE, 2 USERID FIELD        01070000
**                                     ..IN LIST                        01090000
UIDUSER  DS    CL8                     7 BYTE USERID NAME PLUS A        01110002
**                                     ..RIGHTMOST BLANK                01130000
**                                     ..(OLD USERID FOR CHANGE)        01150000
         DS    CL8                     2ND USERID NAME                  01170002
**                                     ..(NEW USERID FOR CHANGE)        01190000
         SPACE 1                                                        01210000
         MEND  , */                                                     01230000
*%ACTMC2  :  ;                                                          01250000
*%IF MAP='MAP'  %THEN                                                   01270000
*   %GOTO UDLL0001;                                                     01290000
*%ELSE                                                                  01310000
*   %GOTO UDLA    ;                                                     01330000
*%UDLL0001:  ;                                                          01350000
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  */ 01390000
*/* *                                                                */ 01410000
*/* *                U S E R I D   D A T A   L I S T                 */ 01430000
*/* *                                                                */ 01450000
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  */ 01470000
*/* *                                                                */ 01490000
*/* *               I-------------------------------------------I    */ 01510000
*/* *          4    I UIDLNEX                                   I    */ 01530000
*/* *               I---------------------I---------------------I    */ 01550000
*/* *          4    I UIDLSWS             I UIDLCT              I    */ 01570000
*/* *               I---------------------I---------------------I    */ 01590000
*/* *          8    I UIDUSER(1)                                I    */ 01610002
*/* *               I                                           I    */ 01630000
*/* *               I-------------------------------------------I    */ 01670000
*/* *          16   I UIDUSER(2)                                I    */ 01690002
*/* *               I                                           I    */ 01710000
*/* *               I-------------------------------------------I    */ 01750000
*/* *                                                                */ 01850000
*/* *                                                                */ 01870000
*%UDLA   :  ;                                                           01890000
*DECLARE                                                                01910000
*  1 DUIDL    BASED(UIDLPTR),                                           01930000
*   2 UIDLNEX  PTR,                  /* PTR TO NEXT UIDL ENTRY       */ 01950002
*   2 UIDLSWS  CHAR(2),              /* UIDL FLAGS                   */ 01970000
*     3 UIDADD   BIT(1),             /* ..1 = RESULT OF ADD CMD      */ 02010002
*     3 UIDDEL   BIT(1),             /* ..1 = RESULT OF DELETE CMD   */ 02030002
*     3 UIDCHG   BIT(1),             /* ..1 = RESULT OF CHANGE CMD   */ 02050002
*     3 *        BIT(13),            /* RESERVED                     */ 02070002
*   2 UIDLCT   PTR(16)  BDY(BYTE),   /* NUMBER OF USERID ENTRIES        02210002
*       NOTE:  ADD AND DELETE COUNT IS 1 FOR EACH 8-BYTE USERID         02240002
*              FIELD IN THIS LIST.   CHANGE COUNT IS 2 FOR EACH         02242002
*              16-BYTE, 2-USERID FIELD                               */ 02252002
*   2 UIDUSER(2) CHAR(8);            /* ARRAY OF USERID NAMES           02310002
*                                       7 BYTE USERID NAME PLUS A       02330002
*                                      ..RIGHTMOST BLANK                02340002
*                                        1ST USERID NAME                02340502
*                                      ..(OLD USERID FOR CHANGE)        02341002
*                                        2ND USERID NAME                02390002
*                                      ..(NEW USERID FOR CHANGE)     */ 02400002
./  ADD  SSI=42271025,NAME=IKJEGDBE
         MACRO                                                          03000000
         IKJEGDBE                                                       06000000
*********************************************************************** 09000000
*                                                                     * 12000000
*        MAPPING DSECT FOR DEFERRED BREAK ELEMENT                     * 15000000
*                                                                     * 18000000
*        STATUS -- VERSION NO. 01 - RELEASE NO. 01 - OS/VS2           * 21000000
*                                                                     * 24000000
*        CHANGE LEVEL -- 00 - DATE 03/09/72                           * 27000000
*                                                                     * 30000000
*********************************************************************** 33000000
DBE      DSECT                                                          36000000
DBEDBE   DS    F -                      ADDRESS OF NEXT DBE ON CHAIN    39000000
DBEPDL   DS    F -                      ADDRESS OF PDL                  42000000
DBEINBUF DS    F -                      ADDRESS OF INPUT BUFFER         45000000
         DS    0D -                     ROUND TO DOUBLE WORD            48000000
DBELNH   EQU   *-DBE -                                                  51000000
         MEND                                                           54000000
./  ADD  SSI=42271029,NAME=IKJEGDME
         MACRO                                                          03000000
         IKJEGDME                                                       06000000
*********************************************************************** 09000000
*                                                                     * 12000000
*        MAPPING DSECT FOR DEFERRED MODULE ELEMENT                    * 15000000
*                                                                     * 18000000
*        STATUS -- VERSION NO. 01 - RELEASE NO. 01 - OS/VS2           * 21000000
*                                                                     * 24000000
*        CHANGE LEVEL -- 00 - DATE 03/09/72                           * 27000000
*                                                                     * 30000000
*********************************************************************** 33000000
DME      DSECT                                                          36000000
DMEDME   DS    F -                      ADDRESS OF NEXT DME ON CHAIN    39000000
DMEDBE   DS    F -                      ADDRESS OF FIRST DBE ON CHAIN   42000000
DMELOAD  DS    CL8 -                    LOAD MODULE NAME                45000000
DMELNH   EQU   *-DME -                  LENGTH OF DME                   48000000
         MEND                                                           51000000
./  ADD  SSI=53150206,NAME=IKJEGSIO
**********************************************************************  00100000
*                                                                    *  00200000
*        IKJEGSIO IS A SET OF STRUCTURED MACROS THAT BUILD THE       *  00300000
*        ASSEMBLER INSTRUCTIONS TO PREPARE A PERSONALIZED PARM       *  00400000
*        LIST AND THE BRANCH TO IKJEGIO FOR I/O SERVICES.  THE       *  00500000
*        SET OF MACROS ARE INCLUDED; HOWEVER, THE MACRO SOURCE       *  00600000
*        IS SUPPRESSED.                                              *  00700000
*                                                                    *  00800000
*        STATUS -- VERSION NO. 01 - OS/VS2 RELEASE NO. 02            *  00900000
*        CHANGE LEVEL -- 01 - DATE 2-2-73                            *  01000000
*                                                                    *  01100000
**********************************************************************  01200000
         PRINT OFF                                                      01300000
         MACRO                                                          01400000
&LABEL   IKJEGSIO                                                      *01500000
               &TYPEREQ,               TYPE SERVICE REQUESTED          *01600000
               &FIRST=,                FIRST MESSAGE TO BE ISSUED      *01700000
               &INST11=,               FIRST INSERT OF THE 1ST MSG     *01800000
               &INST12=,               SECOND INSERT OF THE 1ST MSG    *01900000
               &INST13=,               THIRD INSERT OF THE 1ST MSG     *02000000
               &INST14=,               FOURTH INSERT OF THE 1ST MSG    *02100000
               &INST15=,               FIFTH INSERT OF THE 1ST MSG     *02200000
               &INST16=,               SIXTH INSERT OF THE 1ST MSG     *02300000
               &SECOND=,               FIRST MESSAGE TO BE ISSUED      *02400000
               &INST21=,               FIRST INSERT OF THE 2ND MSG     *02500000
               &INST22=,               SECOND INSERT OF THE 2ND MSG    *02600000
               &INST23=,               THIRD INSERT OF THE 2ND MSG     *02700000
               &INST24=,               FOURTH INSERT OF THE 2ND MSG    *02800000
               &INST25=,               FIFTH INSERT OF THE 2ND MSG     *02900000
               &INST26=,               SIXTH INSERT OF THE 2ND MSG     *03000000
               &ID=,                   MODULE CALLING ID NUMBER        *03100000
               &MF=,                   TYPE MACRO TO EXPAND            *03200000
               &DATAPTR=,              ADDRESS OF DATA LINE            *03300000
               &DSNAME=,               ADDRESS OF OPEN DCB             *03400000
               &SVC=,                  SVC NUMBER                      *03500000
               &ABENDRG=,              REGISTER CONTAINING ABEND NUM   *03600000
               &RC=,                   REGISTER CONTAINING ABEND CODE  *03700003
               &VCONBR=            BRANCH TO VCON NOT TO TSTIO @ZA04126 03730003
.*********************************************************************  03800000
.**                                                                  *  03900000
.**                HEADER                                            */ 04000000
.**DRIVER:                                                              04100000
.**                E  MAIN DRIVER                                    */ 04200000
.**                                                                  *  04300000
.*********************************************************************  04400000
         GBLB  &LISTSW                 SWITCH TO INDICATE LIST FORM     04500000
         GBLB  &STORESW                SW TO INDICATE PARM STRIPPING    04600000
         LCLC  &ADDRESS                VARIABLE TO CONTAIN THE STORE AD 04700000
         LCLC  &NUMID                  VARIABLE TO STRIP ID NUMBER      04800000
         LCLA  &IDCON                  VARIABLE TO CONTAIN THE ID NUM   04900000
         LCLA  &LENGTH                 VARIABLE TO COUNT CHARS IN PARM  05000000
&LISTSW  SETB  0                       INITIALIZE LIST SWITCH OFF       05100000
&STORESW SETB  0                       INITIALIZE STORE SWITCH OFF      05200000
&NUMID   SETC  '&ID'(4,2)              STRIP OFF THE LETTERS FROM ID NO 05300000
&IDCON   SETA  &NUMID                  TRANSFER VALUE FOR LATER USE     05400000
.*********************************************************************  05500000
.**                                                                  *  05600000
.**                D  (NO,,YES,%CONT1)                                  05700000
.**                   HAS THE 'MF' PARAMETER BEEN CODED PROPERLY ?   */ 05800000
.**                                                                  *  05900000
.*********************************************************************  06000000
         AIF   ('&MF(1)' EQ '').ERRORMF                                 06100000
         AIF   ('&MF(1)' EQ 'E').MFE                                    06200000
         AIF   ('&MF(1)' EQ 'L').MFL                                    06300000
.*********************************************************************  06400000
.**                                                                  *  06500000
.**                P  ISSUE AN ERROR MESSAGE                         */ 06600000
.**                P  (,END)                                            06700000
.**                   SET CONDITION CODE = 12                        */ 06800000
.**                                                                  */ 06900000
.**                                                                  *  07000000
.*********************************************************************  07100000
         MNOTE 12,'SYNTAX ERROR ENCOUNTERED IN MF= PARM'                07200000
         AGO   .NOLINK                                                  07300000
.ERRORMF MNOTE 12,'MF= PARAMETER OMITTED, BUT IS REQUIRED'              07400000
         AGO   .NOLINK                                                  07500000
.ERORMFE MNOTE 12,'THE ADDRESS PORTION IS REQUIRED WITH THE EXECUTABLE *07600000
               FORM'                                                    07700000
         AGO   .NOLINK                                                  07800000
.ERORMFA MNOTE 4,'THE ADDRESS PORTION IS INVALID WITH THE LIST FORM AND*07900000
                IS IGNORNED'                                            08000000
         AGO   .IDROUT                                                  08100000
.*********************************************************************  08200000
.**                                                                  *  08300000
.**%CONT1:                                                              08400000
.**                P  SET THE MF TYPE SWITCHES ON                    */ 08500000
.**                                                                  *  08600000
.*********************************************************************  08700000
.MFE     AIF   ('&MF(2)' EQ '').ERORMFE GO TO ERROR EXIT WITH MSG       08800000
&ADDRESS SETC  '&MF(2)'                PREPARE TO PROCESS ADDRESS       08900000
         AIF   ('&ADDRESS'(1,1) EQ '(').MFADREG TEST FOR REG NOT.       09000000
&LABEL   LA    1,&ADDRESS              ESTABLISH ADDRESSABILITY TO PARM 09100000
         AGO   .IDROUT                 CONTINUE PROCESSING NEXT OPERAND 09200000
.MFADREG ANOP                          LABEL FOR REG NOTATION OF ADDR   09300000
&LABEL   LR    1,&ADDRESS              ESTABLISH ADDRESSABILITY TO PARM 09400000
         AGO   .IDROUT                 CONTINUE PROCESSING NEXT OPERAND 09500000
.MFL     ANOP                          ROUTINE BRANCHED TO IF LIST FORM 09600000
&LISTSW  SETB  1                       TURN ON THE LIST FORM SWITCH     09700000
         DS    0H                      ALIGN TO HALFWORD BOUNDRY        09800000
         B     *+88                    BRANCH AROUND PARM LIST          09900000
         AIF   ('&MF(2)' NE '').ERORMFA  TEST FOR ADDR WITH L FORM      10000000
.*********************************************************************  10100000
.**                                                                  *  10200000
.**                D  (NO,,YES,%CONT2)                                  10300000
.**                   IS THE USER'S ID NUMBER CODED CORRECTLY ?      */ 10400000
.**                                                                  *  10500000
.*********************************************************************  10600000
.IDROUT  ANOP                          LABEL FOR 'ID=' OPERAND PROC     10700000
         AIF   ('&ID' EQ '').ERRORID   TEST FOR NULL PARM               10800000
&LENGTH  SETA  K'&ID                   COUNT LENGTH OF I.D. PARM        10900000
         AIF   (&LENGTH NE 5).ERRIDSZ  PUT OUT ERROR MESSAGE            11000000
         AIF   (&LISTSW EQ 1).IDLIST TEST IF THIS SHOULD BE DC OR MVI   11100000
         AGO   .IDE                    BRANCH TO MOVE ID INTO P.L. ROUT 11200000
.*********************************************************************  11300000
.**                                                                  *  11400000
.**                P  ISSUE A WARNING MESSAGE                        */ 11500000
.**                P  (,%CONT3)                                         11600000
.**                   SET CONDITION CODE = 4 IF LIST FORM            */ 11700000
.**                                                                  *  11800000
.*********************************************************************  11900000
.ERRIDSZ ANOP                          BRANCH HERE IF ID PARM HAS ERROR 12000000
         MNOTE 12,'THERE IS A SYNTAX ERROR IN THE ID= PARM'             12100000
         AGO   .NOLINK                 BRANCH TO RETURN TO THE USER     12200000
.ERRORID ANOP                          ROUTINE IF ID INCORRECT          12300000
         AIF   (&LISTSW EQ 1).ID4    IF THIS IS A LIST FORM SET CC=4    12400000
         MNOTE 4,'THE ID= PARM IS MISSING OR INCORRECT'                 12500000
         AGO   .SELECT                 BRANCH TO CONTINUE PROCESSING    12600000
.ID4     MNOTE 0,'THE ID= PARM IS MISSING OR INCORRECT'                 12700000
         AGO   .SELECT                 BRANCH TO CONTINUE PROCESSING    12800000
.*********************************************************************  12900000
.**                                                                  *  13000000
.**%CONT2:                                                              13100000
.**                P  GENERATE THE INSTRUCTIONS NECESSARY TO            13200000
.**                   STORE THE USERS ID# IN THE P.L.                */ 13300000
.**                                                                  *  13400000
.*********************************************************************  13500000
.IDE     ANOP                          ROUTINE TO MOVE ID # IN P.L.     13600000
         MVI   1(1),&IDCON             SET UP MOVE INSTRUCTION          13700000
         AGO   .SELECT                 CONTINUE PROCESSING              13800000
.IDLIST  ANOP                          ROUTINE TO CREATE 'DC'S FOR ID   13900000
&LABEL   DC    AL1(0)                  FILLER                           14000000
         DC    AL1(&IDCON)             DC FOR CALLER'S ID # IN P.L.     14100000
.*********************************************************************  14200000
.**                                                                  *  14300000
.**%CONT3:                                                              14400000
.**                D  (YES,,NO,%CONT4)                                  14500000
.**                   IS THIS REQUEST FOR DATA ?                     */ 14600000
.**                                                                  *  14700000
.*********************************************************************  14800000
.SELECT  ANOP                          DETERMINE WHICH SERVICE REQ'D    14900000
         AIF   ('&TYPEREQ' NE 'DATA').SELECT2 TEST IF DATA REQUEST      15000000
.*********************************************************************  15100000
.**                                                                  *  15200000
.**                S  (,END)                                            15300000
.**                   CALL DATA: GENERATE INSTRUCIONS FOR DATA       */ 15400000
.**                                                                  *  15500000
.*********************************************************************  15600000
         DATA  &DATAPTR,&DSNAME        CALL DATA REQ'T ROUTINE          15700000
         AGO   .END                    EXIT                             15800000
.*********************************************************************  15900000
.**                                                                  *  16000000
.**%CONT4:                                                              16100000
.**                D  (YES,,NO,%CONT5)                                  16200000
.**                   IS THIS REQUEST FOR AN SVC ERROR MESSAGE ?     */ 16300000
.**                                                                  *  16400000
.*********************************************************************  16500000
.SELECT2 ANOP                          TEST FOR SVCERR REQUEST ROUT     16600000
         AIF   ('&TYPEREQ' NE 'SVCERR').SELECT3 CONTINUE IF NOT SVCERR  16700000
.*********************************************************************  16800000
.**                                                                  *  16900000
.**                S  (,END)                                            17000000
.**                   CALL SVCMSG: GENERATE INSTRUCTIONS FOR SVC MSG */ 17100000
.**                                                                  *  17200000
.*********************************************************************  17300000
         SVCERR &SVC,&ABENDRG,&RC,&INST11 CALL SVCERR REQ'T ROUTINE     17400000
         AGO   .END                    EXIT                             17500000
.*********************************************************************  17600000
.**                                                                  *  17700000
.**%CONT5:                                                              17800000
.**                D  (YES,,NO,%CONT6)                                  17900000
.**                   IS THIS REQUEST FOR A MESSAGE ?                */ 18000000
.**                                                                  *  18100000
.*********************************************************************  18200000
.SELECT3 ANOP                          TEST FOR MSG REQUEST ROUTINE     18300000
         AIF   ('&TYPEREQ' NE 'MSG').SELECT4 CONTINUE IF NOT MSG        18400000
.*********************************************************************  18500000
.**                                                                  *  18600000
.**                S  (,END)                                            18700000
.**                   CALL MSG: GENERATE INSTRUCTIONS FOR MSG        */ 18800000
.**                                                                  *  18900000
.*********************************************************************  19000000
         MSG   &FIRST,&SECOND,&INST11,&INST12,&INST13,&INST14,&INST15, *19100000
               &INST16,&INST21,&INST22,&INST23,&INST24,&INST25,&INST26  19200000
         AGO   .END                    EXIT                             19300000
.*********************************************************************  19400000
.**                                                                  *  19500000
.**%CONT6:                                                              19600000
.**                D  (YES,,NO,%CONT7)                                  19700000
.**                   IS THIS REQUEST FOR A PROMPTING MESSAGE ?      */ 19800000
.**                                                                  *  19900000
.*********************************************************************  20000000
.SELECT4 ANOP                          TEST FOR PTGT REQUEST ROUTINE    20100000
         AIF   ('&TYPEREQ' NE 'PTGT').ERSLECT CONTINUE IF NOT MSG       20200000
.*********************************************************************  20300000
.**                                                                  *  20400000
.**                S  (,END)                                            20500000
.**                   CALL PTGT: GENERATE INSTRUCTIONS FOR PTGT MSG  */ 20600000
.**                                                                  *  20700000
.*********************************************************************  20800000
         PTGT  &FIRST                  INVOKE THE INTERNAL SUBROUTINE   20900000
         AGO   .END                    EXIT                             21000000
.*********************************************************************  21100000
.**                                                                  *  21200000
.**%CONT7:                                                              21300000
.**                P  ISSUE AN ERROR MESSAGE                         */ 21400000
.**                P  (,NOLINK)                                         21500000
.**                   SET CONDITION CODE TO 12                       */ 21600000
.**                                                                  *  21700000
.*********************************************************************  21800000
.ERSLECT ANOP                          COME HERE IF SYNTAX IN &TYPEREQ  21900000
         MNOTE 12,'MISSING OR SYNTAX ERROR IN OPTION KEYWORD'           22000000
         AGO   .NOLINK                 BRANCH TO EXIT                   22100000
.*********************************************************************  22200000
.**                                                                  *  22300000
.**END:                                                                 22400000
.**                D  (NO,,YES,NOLINK)                                  22500000
.**                   HAS THE LIST FORM BEEN REQUESTED ?             */ 22600000
.**                                                                  *  22700000
.*********************************************************************  22800000
.END     ANOP                          ENDING ROUTINE FOR ENTIRE MACRO  22900000
         AIF   (&LISTSW EQ 1).NOLINK   BRANCH AROUND THE BRANCH & LINK  23000000
.*********************************************************************  23100000
.**                                                                  *  23200000
.**                P  GENERATE THE BRANCH & LINK INSTRUCTION TO I/O  */ 23300000
.**                                                                  *  23400000
.*********************************************************************  23500000
         AIF   ('&VCONBR' NE 'YES').BALR                                23510003
         L     15,@IOVCON               ADDR TO BR TO        @ZA04126   23550003
         BALR  14,15                    ENTER THE IO ROUTINE @ZA04126   23556003
         AGO      .NOLINK                                               23570003
.BALR    ANOP                                                           23580003
         L     15,TSTIO                ESTABLISH THE ADDRESS TO IO      23600000
         BALR  14,15                   BRANCH TO I/O                    23700000
.*********************************************************************  23800000
.**                                                                  *  23900000
.**NOLINK:                                                              24000000
.**                R  RETURN CONTROL                                 */ 24100000
.**                                                                  *  24200000
.*********************************************************************  24300000
.NOLINK  MEND                          RETURN CONTROL TO USER           24400000
         MACRO                                                          24500000
         DATA  &DATAPTR,&DSNAME                                         24600000
.*********************************************************************  24700000
.**                                                                  *  24800000
.**DATA:                                                                24900000
.**                E  DATA REQUEST ROUTINE                           */ 25000000
.**                                                                  *  25100000
.*********************************************************************  25200000
         GBLB  &LISTSW                                                  25300000
.*********************************************************************  25400000
.**                                                                  *  25500000
.**                P  SET UP INSTRUCTION NECESSARY TO STORE          */ 25600000
.**                   DATA REQUEST # IN P.L.                         */ 25700000
.**                                                                  *  25800000
.*********************************************************************  25900000
         AIF   (&LISTSW EQ 1).LISTTYP  FIND OUT WHICH FORM E OR L       26000000
         MVI   0(1),1                  STORE TYPE REQT IN P. L. (DATA)  26100000
         AGO   .NEXTSTP                BRANCH AND CONTINUE              26200000
.LISTTYP ANOP                          LABEL FOR DC TYPE INSTRUCTION    26300000
         DC    AL2(0)                  FILLER                           26400000
.*********************************************************************  26500000
.**                                                                  *  26600000
.**                D  (YES,,NO,%CONT8)                                  26700000
.**                   IS THE 'DATAPTR' PARAMETER NULL                */ 26800000
.**                                                                  *  26900000
.*********************************************************************  27000000
.NEXTSTP ANOP                          LABEL USED TO SKIP DC TYPE INST  27100000
         AIF   ('&DATAPTR' NE '').STOREDP  TEST FOR REQD PARM DATAPTR   27200000
.*********************************************************************  27300000
.**                                                                  *  27400000
.**                P  ISSUE WARNING MESSAGE                          */ 27500000
.**                                                                  *  27600000
.*********************************************************************  27700000
         MNOTE 0,'THE DATAPTR KEYWORD IS REQUIRED, UNLESS A NULL LINE  *27800000
               HAS BEEN REQUESTED'                                      27900000
.*********************************************************************  28000000
.**                                                                  *  28100000
.**%CONT8:                                                              28200000
.**                S  CALL STORE: TO INSERT DATAPTR, DSNAME             28300000
.**                   AND FILLER INTO P.L.                           */ 28400000
.**                                                                  *  28500000
.*********************************************************************  28600000
.STOREDP ANOP                          BRANCH HERE IF &DATAPTR CODED    28700000
         STORE 4,&DATAPTR,4            PREPARE INST TO INSERT INTO P.L. 28800000
         STORE 8,&DSNAME,4             PREPARE INST TO INSERT INTO P.L. 28900000
         STORE 12,,72                  IF LIST FORM PREPARE DC'S ZERO   29000000
.*********************************************************************  29100000
.**                                                                  *  29200000
.**%CONT9:                                                              29300000
.**                R  RETURN TO THE DRIVER                           */ 29400000
.**                                                                  *  29500000
.*********************************************************************  29600000
         MEND                                                           29700000
         MACRO                                                          29800000
         SVCERR &SVC,&ABENDRG,&RC,&INST11                               29900000
.*********************************************************************  30000000
.**                                                                  *  30100000
.**SVC:                                                                 30200000
.**                E  SVC BUILD PARM ROUTINE                         */ 30300000
.**                                                                  *  30400000
.*********************************************************************  30500000
         GBLB  &LISTSW                 SWITCH FOR LIST FORM OF MF       30600000
         GBLB  &STORE                  SW FOR STORE TO STRIP NUM DOWN   30700000
.*********************************************************************  30800000
.**                                                                  *  30900000
.**                P  SET UP INST NECESSARY TO STORE                    31000000
.**                   SVC REQUEST # IN P.L.                          */ 31100000
.**                                                                  *  31200000
.*********************************************************************  31300000
         AIF   (&LISTSW EQ 1).NEXTSTP  TEST FOR LIST FORM INST          31400000
         MVI   0(1),3                  STORE SVCERR REQUEST NUM IN P.L. 31500000
.*********************************************************************  31600000
.**                                                                  *  31700000
.**                D  (YES,,NO,%CONT10)                                 31800000
.**                   ARE THE PARAMETERS CODED CORRECTLY ?           */ 31900000
.**                P  ISSUE WARNING MESSAGE IF INCORRECT             */ 32000000
.**                                                                  *  32100000
.*********************************************************************  32200000
.NEXTSTP ANOP                          THIS PORTION CHECKS PARMS        32300000
         AIF   ('&ABENDRG' EQ '').CONT1  BRANCH TO CONTINUE IF NULL     32400000
         AIF   ('&ABENDRG'(1,1) EQ '(').CONT1  BRANCH TO CONTINUE IF OK 32500000
         MNOTE 12,'REGISTER NOTATION IS REQUIRED WITH THE ABENDRG PARM' 32600000
.CONT1   ANOP                          BRANCH HERE IF ABENDRG OK        32700000
         AIF   ('&RC' EQ '').CONT2     BRANCH TO CONTINUE IF NULL       32800000
         AIF   ('&RC'(1,1) EQ '(').CONT2  BRANCH TO CONTINUE IF OK      32900000
         MNOTE 12,'REGISTER NOTATION IS REQUIRED WITH THE RC PARM'      33000000
.CONT2   ANOP                          BRANCH HERE IF RC PARM OK        33100000
         AIF   ('&SVC' NE '').STORSVC  TEST FOR NULL PARM               33200000
         MNOTE 0,'THE SVC KEYWORD IS REQUIRED WITH THE SVCERR OPTION'   33300000
.*********************************************************************  33400000
.**                                                                  *  33500000
.**%CONT10:                                                             33600000
.**                S  CALL STORE:  TO INSERT &ABENDRG, &SVC,            33700000
.**                   &RC AND FILLER INTO P.L.                       */ 33800000
.**                                                                  *  33900000
.*********************************************************************  34000000
.STORSVC ANOP                          BRANCH HERE IF &SVC CODED        34100000
         STORE 2,,2                    PREPARE FILLER IF LIST FORM      34200000
         STORE 4,&ABENDRG,4            PREPARE INST TO INSERT INTO P.L. 34300000
         STORE 8,&RC,4                 PREPARE INST TO INSERT INTO P.L. 34400000
         STORE 12,,4                   PREPARE FILLER IF LIST FORM      34500000
         STORE 16,&SVC,4               PREPARE INST TO INSERT INTO P.L. 34600000
         STORE 20,,26                  PREPARE FILLER IF LIST FORM      34700000
.*********************************************************************  34800000
.**                                                                  *  34900000
.**                S  CALL INSTTYP: PROCESS TYPE INSERT              */ 35000000
.**                                                                  *  35100000
.*********************************************************************  35200000
         TYPE 46,&INST11                                                35300000
.*********************************************************************  35400000
.**                                                                  *  35500000
.**                S  CALL STORE: PREPARE INST TO STORE                 35600000
.**                   FILLER INTO P.L.                               */ 35700000
.**                                                                  *  35800000
.*********************************************************************  35900000
         STORE 52,,8                   PREPARE FILLER IF LIST FORM      36000000
.*********************************************************************  36100000
.**                                                                  *  36200000
.**                S  CALL INSTWHR: PROCESS WHERE PORTION OF INSERT  */ 36300000
.**                                                                  *  36400000
.*********************************************************************  36500000
         WHERE 60,&INST11                                               36600000
.*********************************************************************  36700000
.**                                                                  *  36800000
.**%CONT13:                                                             36900000
.**                R  RETURN TO DRIVER                               */ 37000000
.**                                                                  *  37100000
.*********************************************************************  37200000
         MEND                          END OF SVCERR ROUTINE            37300000
         MACRO                                                          37400000
         MSG   &FIRST,&SECOND,&INST11,&INST12,&INST13,&INST14,&INST15, *37500000
               &INST16,&INST21,&INST22,&INST23,&INST24,&INST25,&INST26  37600000
.*********************************************************************  37700000
.**                                                                  *  37800000
.**MSG:                                                                 37900000
.**                E  MSG ROUTINE                                    */ 38000000
.**                                                                  *  38100000
.*********************************************************************  38200000
         GBLB  &LISTSW                 SWITCH IF LIST FORM USED         38300000
         GBLB  &STORESW                SW INDICATES TO STORE STRIP NUM  38400000
.*********************************************************************  38500000
.**                                                                  *  38600000
.**                P  SET UP INST NECESSARY TO                          38700000
.**                   STORE MSG REQ # IN P.L.                        */ 38800000
.**                                                                  *  38900000
.*********************************************************************  39000000
         AIF   (&LISTSW EQ 1).LISTTYP  TEST WHICH FORM MACRO L OR E     39100000
         MVI   0(1),2                  MOVE CODE FOR MSG INTO P.L.      39200000
.*********************************************************************  39300000
.**                                                                  *  39400000
.**                D  (YES,,NO,%CONT14)                                 39500000
.**                   IS THE 'FIRST' PARAMETER NULL ?                */ 39600000
.**                                                                  *  39700000
.*********************************************************************  39800000
.LISTTYP ANOP                          LABEL USED BRANCH AROUND E INST  39900000
         AIF   ('&FIRST' NE '').NEXTSTP TEST IF USER CODED FIRST PARM   40000000
.*********************************************************************  40100000
.**                                                                  *  40200000
.**                P  ISSUE AN WARNING MSG                           */ 40300000
.**                                                                  *  40400000
.*********************************************************************  40500000
         MNOTE 0,'THE FIRST PARM IS REQUIRED WITH THE MSG OPTION'       40600000
.*********************************************************************  40700000
.**                                                                  *  40800000
.**%CONT14:                                                             40900000
.**                S  CALL INSTTYP: SET UP INST TO INSERT               41000000
.**                   TYPES INTO P. L.                               */ 41100000
.**                                                                  *  41200000
.*********************************************************************  41300000
.NEXTSTP ANOP                          ROUTINE TO PLACE TYPES IN LIST   41400000
         INSTTYP 2,&INST11,&INST12,&INST13,&INST14,&INST15,&INST16      41500000
         STORE 8,,8                    PREPARE FILLER IF LIST FORM      41600000
.*********************************************************************  41700000
.**                                                                  *  41800000
.**%CONT17:                                                             41900000
.**                S  CALL STORE: STORE &FIRST INTO PARM LIST        */ 42000000
.**                                                                  *  42100000
.*********************************************************************  42200000
&STORESW SETB  1                       TURN ON STRIP SWITCH FOR STORE   42300000
         STORE 16,&FIRST,4             PREPARE INST TO STORE IN LIST    42400000
.*********************************************************************  42500000
.**                                                                  *  42600000
.**                S  CALL INSTWHR: PROCESS WHERE PORTION OF INSERTS */ 42700000
.**                                                                  *  42800000
.*********************************************************************  42900000
         INSTWHR 20,&INST11,&INST12,&INST13,&INST14,&INST15,&INST16     43000000
         STORE 44,,2                   PREPARE FILLER IF LIST FORM      43100000
.*********************************************************************  43200000
.**                                                                  *  43300000
.**                S  CALL INSTTYP: PROCESS TYPE INSERT OF 2ND LEV   */ 43400000
.**                                                                  *  43500000
.*********************************************************************  43600000
         INSTTYP 46,&INST21,&INST22,&INST23,&INST24,&INST25,&INST26     43700000
.*********************************************************************  43800000
.**                                                                  *  43900000
.**                S  CALL STORE: PREPARE INST TO STORE                 44000000
.**                   &SECOND AND FILLER INTO P.L.                   */ 44100000
.**                                                                  *  44200000
.*********************************************************************  44300000
         STORE 52,,4                   PREPARE FILLER IF LIST FORM      44400000
&STORESW SETB  1                       TURN ON STRIP SWITCH FOR STORE   44500000
         STORE 56,&SECOND,4            PREPARE INST TO STORE &SECOND    44600000
.*********************************************************************  44700000
.**                                                                  *  44800000
.**                S  CALL INSTWHR: PROCESS WHERE PORTION OF INSERTS */ 44900000
.**                                                                  *  45000000
.*********************************************************************  45100000
         INSTWHR 60,&INST21,&INST22,&INST23,&INST24,&INST25,&INST26     45200000
.*********************************************************************  45300000
.**                                                                  *  45400000
.**%CONT18:                                                             45500000
.**                R  RETURN TO DRIVER                               */ 45600000
.**                                                                  *  45700000
.*********************************************************************  45800000
         MEND                          END OF MESSAGE PROCESSOR ROUTINE 45900000
         MACRO                                                          46000000
         PTGT  &FIRST                                                   46100000
.*********************************************************************  46200000
.**                                                                  *  46300000
.**                E  PTGT ROUTINE                                   */ 46400000
.**                                                                  *  46500000
.*********************************************************************  46600000
         GBLB  &LISTSW                 SWITCH FOR LIST FORM             46700000
         GBLB  &STORESW                SWITCH FOR STORE TO STRIP NUM    46800000
.*********************************************************************  46900000
.**                                                                  *  47000000
.**                P  SET NECESSARY INST TO STORE                       47100000
.**                   PTGT # INTO P.L.                               */ 47200000
.**                                                                  *  47300000
.*********************************************************************  47400000
         AIF   (&LISTSW EQ 1).LISTTYP  TEST FOR LIST FORM               47500000
         MVI   0(1),4                  STORE CODE NUM FOR PTGT REQT     47600000
.*********************************************************************  47700000
.**                                                                  *  47800000
.**                D  (YES,,NO,%CONT19)                                 47900000
.**                   IS THE 'FIRST' PARAMETER NULL ?                */ 48000000
.**                                                                  *  48100000
.*********************************************************************  48200000
.LISTTYP ANOP                          BRANCH TO IF LIST FORM           48300000
         AIF   ('&FIRST' NE '').STOR1ST TEST FOR NULL PARM              48400000
.*********************************************************************  48500000
.**                                                                  *  48600000
.**                P  ISSUE AN WARNING MESSAGE                       */ 48700000
.**                                                                  *  48800000
.*********************************************************************  48900000
         MNOTE 0,'THE FIRST KEYWORD IS REQUIRED WITH THE PTGT OPTION'   49000000
.*********************************************************************  49100000
.**                                                                  *  49200000
.**%CONT19:                                                             49300000
.**                S  CALL STORE: STORE PARMS AND FILLERS INTO P.L.  */ 49400000
.**                                                                  *  49500000
.*********************************************************************  49600000
.STOR1ST ANOP                          ROUTINE TO PREPARE P.L.          49700000
         STORE 2,,14                   PREPARE FILLER IF LIST FORM      49800000
&STORESW SETB  1                       TURN ON STRIP SWITCH             49900000
         STORE 16,&FIRST,4             PREPARE INST TO STORE &FIRST     50000000
         STORE 20,,64                  PREPARE FILLER IF LIST FORM      50100000
.*********************************************************************  50200000
.**                                                                  *  50300000
.**%CONT20:                                                             50400000
.**                R  RETURN TO DRIVER                               */ 50500000
.**                                                                  *  50600000
.*********************************************************************  50700000
         MEND                          END OF PTGT PROCESSOR ROUTINE    50800000
         MACRO                                                          50900000
         INSTTYP &START,&IN1,&IN2,&IN3,&IN4,&IN5,&IN6                   51000000
.*********************************************************************  51100000
.**                                                                  *  51200000
.**INSTTYP:                                                             51300000
.**                E  ROUTINE FOR INSERT TYPE PORTION                */ 51400000
.**                                                                  *  51500000
.*********************************************************************  51600000
         LCLA  &DISP                   VARIABLE TO CONTAIN DISPLACEMENT 51700000
&DISP    SETA  &START                  INITIALIZE DISPLACEMENT COUNTER  51800000
.*********************************************************************  51900000
.**                                                                  *  52000000
.**                P  PREPARE EACH INSERT TO BE PROCESSED               52100000
.**                   BY TYPE PROCESSOR                              */ 52200000
.**                                                                  *  52300000
.*********************************************************************  52400000
         TYPE  &DISP,&IN1              CALL TYPE ROUTINE TO STORE PARM  52500000
&DISP    SETA  &DISP+1                 INCREMENT DISPLACEMENT COUNTER   52600000
         TYPE  &DISP,&IN2              CALL TYPE ROUTINE TO STORE PARM  52700000
&DISP    SETA  &DISP+1                 INCREMENT DISPLACEMENT COUNTER   52800000
         TYPE  &DISP,&IN3              CALL TYPE ROUTINE TO STORE PARM  52900000
&DISP    SETA  &DISP+1                 INCREMENT DISPLACEMENT COUNTER   53000000
         TYPE  &DISP,&IN4              CALL TYPE ROUTINE TO STORE PARM  53100000
&DISP    SETA  &DISP+1                 INCREMENT DISPLACEMENT COUNTER   53200000
         TYPE  &DISP,&IN5              CALL TYPE ROUTINE TO STORE PARM  53300000
&DISP    SETA  &DISP+1                 INCREMENT DISPLACEMENT COUNTER   53400000
         TYPE  &DISP,&IN6              CALL TYPE ROUTINE TO STORE PARM  53500000
.*********************************************************************  53600000
.**                                                                  *  53700000
.**                R  RETURN TO CONTINUE PROCESSING                  */ 53800000
.**                                                                  *  53900000
.*********************************************************************  54000000
         MEND                          END OR TYPE PROCESSOR OF INSERTS 54100000
         MACRO                                                          54200000
         TYPE  &DISP,&IN               INTERNAL ROUTINE / TYPE PORTION  54300000
.*********************************************************************  54400000
.**                                                                  *  54500000
.**TYPE:           E  ROUTINE TO DETERMINE WHICH TYPE                */ 54600000
.**                                                                  *  54700000
.*********************************************************************  54800000
         LCLA  &TYINST                 VARIABLE FOR CODE OF INSERT      54900000
.*********************************************************************  55000000
.**                                                                  *  55100000
.**                D  (NO,,YES,NULLTYP)                                 55200000
.**                   IS THIS INSERT NULL ?                          */ 55300000
.**                                                                  *  55400000
.*********************************************************************  55500000
         AIF   ('&IN' EQ '').NULLTYP   BRANCH TO NULL PROCESSING        55600000
.*********************************************************************  55700000
.**                                                                  *  55800000
.**                P  DETERMINE WHICH TYPE REQ'T (PDE,NUM,ETC)       */ 55900000
.**                                                                  *  56000000
.*********************************************************************  56100000
         AIF   ('&IN(1)' NE 'APDE').CONT1 TEST IF APDE TYPE INSERT      56200000
&TYINST  SETA  6                       SET CODE VARIABLE / INDICATE PDE 56300000
         AGO   .PROCESS                BRANCH TO STORE INTO LIST        56400000
.CONT1   ANOP                          BRANCHED TO IF NOT PDE           56500000
         AIF   ('&IN(1)' NE 'NUM').CONT2 TEST IF NUM TYPE INSERT        56600000
&TYINST  SETA  5                       SET CODE VARIABLE / INDICATE PDE 56700000
         AGO   .PROCESS                BRANCH TO STORE INTO LIST        56800000
.CONT2   ANOP                          BRANCHED TO IF NOT PDE           56900000
         AIF   ('&IN(1)' NE 'REG').CONT3 TEST IF REG TYPE INSERT        57000000
&TYINST  SETA  1                       SET CODE VARIABLE / INDICATE REG 57100000
         AIF   ('&IN(2)'(1,1) EQ '(').CONT21  TEST FOR REG NOTATION     57200000
         MNOTE 12,'WITH THE REG TYPE INSERT ONLY REG NOTATION ALLOWED'  57300000
.CONT21  ANOP                          BRANCH HERE IF SYNTAX OK         57400000
         AGO   .PROCESS                BRANCH TO STORE INTO LIST        57500000
.CONT3   ANOP                          BRANCH TO IF NOT REG TYPE        57600000
         AIF   ('&IN(1)' NE 'ADDR').CONT4 TEST IF ADDR TYPE INSERT      57700000
&TYINST  SETA  2                       SET CODE VAR / INDICATE ADDR     57800000
         AGO   .PROCESS                BRANCH TO STORE INTO LIST        57900000
.CONT4   ANOP                          BRANCH TO IF NOT ADDR TYPE       58000000
         AIF   ('&IN(1)' NE 'ADDRCONX').CONT5 TEST ADDRCONX TYPE INSERT 58100000
&TYINST  SETA  3                       SET CODE VAR / INDICATE ADDR     58200000
         AGO   .PROCESS                BRANCH TO STORE INTO LIST        58300000
.CONT5   ANOP                          BRANCH TO IF NOT ADDR TYPE       58400000
         AIF   ('&IN(1)' NE 'ADDRCOND').CONT6 TEST ADDRCOND TYPE INSERT 58500000
&TYINST  SETA  4                       SET CODE VAR / INDICATE ADDR     58600000
         AGO   .PROCESS                BRANCH TO STORE INTO LIST        58700000
.CONT6   ANOP                          BRANCH TO IF NOT ADDRCONX TYPE   58800000
         AIF   ('&IN(1)' NE 'VPDE').ERROR TEST VPDE TYPE INSERT         58900000
&TYINST  SETA  7                       SET CODE VAR / INDICATE ADDR     59000000
         AGO   .PROCESS                BRANCH TO STORE INTO LIST        59100000
.*********************************************************************  59200000
.**                                                                  *  59300000
.**                P  IF THERE IS A SYNTAX ERROR - ISSUE WARNING MSG */ 59400000
.**                                                                  *  59500000
.*********************************************************************  59600000
.ERROR   ANOP                          COME HERE IF SYNTAX ERROR FOUND  59700000
         MNOTE 12,'THE TYPE PORTION OF AN INSERT HAS A SYNTAX ERROR'    59800000
&TYINST  SETA  0                       SET CODE TO NULL VALUE           59900000
.PROCESS ANOP                          THIS PORTION CALLS STORE         60000000
.*********************************************************************  60100000
.**                                                                  *  60200000
.**                S  (,ENDTYP)                                         60300000
.**                   CALL STORE: STORE CODE INTO P. L.              */ 60400000
.**                                                                  *  60500000
.*********************************************************************  60600000
         STORE &DISP,&TYINST,1         CALL STORE TO PREPARE INST       60700000
         AGO   .ENDTYP                 BRANCH TO END TO RETURN          60800000
.*********************************************************************  60900000
.**                                                                  *  61000000
.**NULLTYP:                                                             61100000
.**                S  CALL STORE: STORE FILLER ZEROS IF L FORM       */ 61200000
.**                                                                  *  61300000
.*********************************************************************  61400000
.NULLTYP ANOP                          BRANCH HERE IF INSERT PARM NULL  61500000
         STORE &DISP,,1                CALL STORE FOR FILLER            61600000
.*********************************************************************  61700000
.**                                                                  *  61800000
.**ENDTYP:         R  RETURN TO INSTTYP                              */ 61900000
.**                                                                  *  62000000
.*********************************************************************  62100000
.ENDTYP  ANOP                          BRANCH HERE TO EXIT ROUTINE      62200000
         MEND                          END OF TYPE ROUTINE              62300000
         MACRO                                                          62400000
         INSTWHR &START,&IN1,&IN2,&IN3,&IN4,&IN5,&IN6                   62500000
.*********************************************************************  62600000
.**                                                                  *  62700000
.**INSTWHR:                                                             62800000
.**                E  ROUTINE FOR INSERT WHERE PORTION               */ 62900000
.**                                                                  *  63000000
.*********************************************************************  63100000
         LCLA  &DISP                   VARIABLE TO CONTAIN DISPLACEMENT 63200000
&DISP    SETA  &START                  INITIALIZE DISPLACEMENT COUNTER  63300000
.*********************************************************************  63400000
.**                                                                  *  63500000
.**                P  PREPARE EACH INSERT TO BE PROCESSED               63600000
.**                   BY WHERE PROCESSOR                             */ 63700000
.**                                                                  *  63800000
.*********************************************************************  63900000
         WHERE &DISP,&IN1              CALL TYPE ROUTINE TO STORE PARM  64000000
&DISP    SETA  &DISP+4                 INCREMENT DISPLACEMENT COUNTER   64100000
         WHERE &DISP,&IN2              CALL TYPE ROUTINE TO STORE PARM  64200000
&DISP    SETA  &DISP+4                 INCREMENT DISPLACEMENT COUNTER   64300000
         WHERE &DISP,&IN3              CALL TYPE ROUTINE TO STORE PARM  64400000
&DISP    SETA  &DISP+4                 INCREMENT DISPLACEMENT COUNTER   64500000
         WHERE &DISP,&IN4              CALL TYPE ROUTINE TO STORE PARM  64600000
&DISP    SETA  &DISP+4                 INCREMENT DISPLACEMENT COUNTER   64700000
         WHERE &DISP,&IN5              CALL TYPE ROUTINE TO STORE PARM  64800000
&DISP    SETA  &DISP+4                 INCREMENT DISPLACEMENT COUNTER   64900000
         WHERE &DISP,&IN6              CALL TYPE ROUTINE TO STORE PARM  65000000
.*********************************************************************  65100000
.**                                                                  *  65200000
.**                R  RETURN TO CONTINUE PROCESSING                  */ 65300000
.**                                                                  *  65400000
.*********************************************************************  65500000
         MEND                                                           65600000
         MACRO                                                          65700000
         WHERE &DISP,&IN                                                65800000
.*********************************************************************  65900000
.**                                                                  *  66000000
.**WHERE:          E  ROUTINE PROCESS WHERE PORTION OF ONE INSERT    */ 66100000
.**                                                                  *  66200000
.*********************************************************************  66300000
         GBLB  &STORESW                SWITCH - INDICATE STRIP NUM      66400000
         LCLC  &WHERE                  LABEL USED TO OBTAIN WHERE PARM  66500000
&WHERE   SETC  '&IN(2)'                STRIP OFF WHERE PORTION OF INST  66600000
.*********************************************************************  66700000
.**                                                                  *  66800000
.**                D  (NO,,YES,NULLWHR)                                 66900000
.**                   IS THIS INSERT NULL ?                          */ 67000000
.**                                                                  *  67100000
.*********************************************************************  67200000
         AIF   ('&IN' EQ '').NULLWHR   BRANCH TO NULL PROCESSING        67300000
.*********************************************************************  67400000
.**                                                                  *  67500000
.**                P  ISSUE A WARNING MSG IF WHERE PORTION IS NULL   */ 67600000
.**                                                                  *  67700000
.*********************************************************************  67800000
         AIF   ('&WHERE' NE '').CONT   TEST FOR NULL PORTION            67900000
         MNOTE 12,'AN INSERT WHERE PORTION IS MISSING OR MISSPELLED'    68000000
.*********************************************************************  68100000
.**                                                                  *  68200000
.**                P  TURN ON THE STRIP SW IF 'NUM' IS THE TYPE      */ 68300000
.**                                                                  *  68400000
.*********************************************************************  68500000
.CONT    ANOP                          THIS PORTION PREPARE TO STORE    68600000
&STORESW SETB  ('&IN(1)' EQ 'NUM')     TURN ON STRIP SWITCH IF I/O NUM  68700000
.*********************************************************************  68800000
.**                                                                  *  68900000
.**                S  (,ENDWHR)                                         69000000
.**                   CALL STORE: HAVE WHERE PORTION PLACED IN P.L.  */ 69100000
.**                                                                  *  69200000
.*********************************************************************  69300000
         STORE &DISP,&WHERE,4          CALL STORE - STORE WHERE PORTION 69400000
         AGO   .ENDWHR                 BRANCH TO END FOR RETURN         69500000
.*********************************************************************  69600000
.**                                                                  *  69700000
.**NULLWHR:                                                             69800000
.**                S  CALL STORE: STORE FILLER ZEROS IF L FORM       */ 69900000
.**                                                                  *  70000000
.*********************************************************************  70100000
.NULLWHR ANOP                          BRANCH HERE IF INSERT PARM NULL  70200000
         STORE &DISP,,4                CALL STORE FOR FILLER            70300000
.*********************************************************************  70400000
.**                                                                  *  70500000
.**ENDWHR:         R  RETURN TO PROCESSING                           */ 70600000
.**                                                                  *  70700000
.*********************************************************************  70800000
.ENDWHR  ANOP                          BRANCH HERE TO EXIT              70900000
         MEND                          END OF INSTWHR ROUTINE           71000000
         MACRO                                                          71100000
         STORE &DISP,&PARM,&LEN        ROUT. TO PREPARE INST FOR LIST   71200000
.*********************************************************************  71300000
.**                                                                  *  71400000
.**STORE:                                                               71500000
.**                E  STORE DATA IN PARM LIST                        */ 71600000
.**                                                                  *  71700000
.*********************************************************************  71800000
         GBLB  &STORESW                SW TO INDICATE STRIPPING         71900000
         GBLB  &LISTSW                 SW TO INDICATE USER USED L FORM  72000000
         LCLC  &PARMC                  VARIABLE TO STRIP PARM DOWN      72100000
         LCLA  &PARMN                  VARIABLE TO CHANGE ATTRIBUTES    72200000
         LCLA  &LENGTH                 VARIABLE TO COUNT CHARS IN PARM  72300000
.*********************************************************************  72400000
.**                                                                  *  72500000
.**                D  (NO,,YES,START)                                   72600000
.**                   IS THIS A LIST FORM ?                          */ 72700000
.**                                                                  *  72800000
.*********************************************************************  72900000
         AIF   (&LISTSW EQ 1).START    AVOID NEXT TEST IF LIST FORM     73000000
.*********************************************************************  73100000
.**                                                                  *  73200000
.**                D  (NO,,YES,RETURN)                                  73300000
.**                   IS THIS A NULL PARM ?                          */ 73400000
.**                                                                  *  73500000
.*********************************************************************  73600000
         AIF   ('&PARM' EQ '').RETURN  TEST FOR NULL PARM (ONLY E FORM) 73700000
.*********************************************************************  73800000
.**                                                                  *  73900000
.**START:          D  (YES,,NO,PROCESS)                                 74000000
.**                   IS STRIP SWITCH ON ?                           */ 74100000
.**                                                                  *  74200000
.*********************************************************************  74300000
.START   ANOP                          BRANCH HERE IF LIST FORM         74400000
         AIF   (&STORESW NE 1).PROCESS SEE IF THERE IS NO NEED TO STRIP 74500000
         AIF   ('&PARM' EQ '').PROCESS IF NULL DO NOT PREPARE TO STRIP  74600000
.*********************************************************************  74700000
.**                                                                  *  74800000
.**                D  (NO,,YES,PROCESS)                                 74900000
.**                   TEST FOR REGISTER NOTATION                     */ 75000000
.**                                                                  *  75100000
.*********************************************************************  75200000
         AIF   ('&PARM'(1,1) EQ '(').PROCESS TEST FOR REGISTER NOTATION 75300000
.*********************************************************************  75400000
.**                                                                  *  75500000
.**                P  ISSUE A WARNING MESSAGE IF                        75600000
.**                   ERROR FOUND IN NUMBER TO BE STRIPPED           */ 75700000
.**                                                                  *  75800000
.*********************************************************************  75900000
&LENGTH  SETA  K'&PARM                 COUNT PARM LENGTH FOR POSS ERROR 76000000
         AIF   (&LENGTH EQ 5).OK       TEST FOR SYNTAX ERROR BY USER    76100000
         MNOTE 12,'A SYNTAX ERROR FOUND IN A MESSAGE OR INSERT NUMBER'  76200000
.*********************************************************************  76300000
.**                                                                  *  76400000
.**OK:             P  STRIP OFF NUMBER PORTION OF PARM               */ 76500000
.**                                                                  *  76600000
.*********************************************************************  76700000
.OK      ANOP                          BRANCH HERE IF NUM SEEMS CORRECT 76800000
&PARMC   SETC  '&PARM'(3,3)            STRIP OF NUM PORTION             76900000
&PARMN   SETA  &PARMC                  CHANGE ATTRIBUTE / CHAR TO ARTH  77000000
.*********************************************************************  77100000
.**                                                                  *  77200000
.**                D  (YES,,NO,BLDINST)                                 77300000
.**                   IS THIS THE LIST FORM WHICH REQS DC'S          */ 77400000
.**                                                                  *  77500000
.*********************************************************************  77600000
         AIF   (&LISTSW NE 1).BLDINST  SEE IF PL IN DYNAMIC STORAGE     77700000
.*********************************************************************  77800000
.**                                                                  *  77900000
.**                P  (,RETURN)                                         78000000
.**                   BUILD DC FOR LIST FORM P.L.                    */ 78100000
.**                                                                  *  78200000
.*********************************************************************  78300000
         DC    AL&LEN.(&PARMN)         PLACEMENT OF PARAMETER INTO LIST 78400000
         AGO   .RETURN                 BRANCH TO EXIT                   78500000
.*********************************************************************  78600000
.**                                                                  *  78700000
.**BLDINST:        P  (,RETURN)                                         78800000
.**                   BUILD THE INSTURCTION NECESSARY TO STORE          78900000
.**                   INTO A DYNAMIC AREA                            */ 79000000
.**                                                                  *  79100000
.*********************************************************************  79200000
.BLDINST ANOP                          BRANCH HERE FOR EXECUTABLE FORM  79300000
         AIF   (&LEN EQ 1).BLDMVI1     SEE IF ONE BYTE TYPE INST NEEDED 79400000
         LA    14,&PARMN               GET PARAMETER INTO WORK REGISTER 79500000
         ST    14,&DISP.(1)            STORE PARAMETER INTO PARM LIST   79600000
         AGO   .RETURN                 BRANCH TO EXIT                   79700000
.BLDMVI1 ANOP                          BRANCH HERE IF ONE BYTE LENGTH   79800000
         MVI   &DISP.(1),&PARMN        MOVE PARM INTO PARAMETER LIST    79900000
         AGO   .RETURN                 BRANCH TO EXIT                   80000000
.*********************************************************************  80100000
.**                                                                  *  80200000
.**PROCESS:        P  PREPARE DC OR INSTRUCTIONS TO BUILD P.L.       */ 80300000
.**                                                                  *  80400000
.*********************************************************************  80500000
.PROCESS ANOP                          BRANCH HERE / STANDARD STORE REQ 80600000
         AIF   (&LISTSW NE 1).INSTBLD  TEST FOR EXECUTABLE FORM REQT    80700000
         AIF   ('&PARM' NE '').DCPARM  TEST FOR FILLER REQUEST          80800000
         DC    &LEN.AL1(0)             FILLER OF HEX ZEROS              80900000
         AGO   .RETURN                 BRANCH TO EXIT                   81000000
.DCPARM  ANOP                          BRANCH HERE FOR PREPARATION DC'S 81100000
         AIF   ('&PARM'(1,1) NE '(').CONTDC ENSURE USER HAS NOT USED RG 81200000
         MNOTE 12,'REGISTER NOTATION IS NOT PERMITTED WITH THE LIST FOR*81300000
               M (MF=L)'                                                81400000
.CONTDC  DC    AL&LEN.(&PARM)          PLACEMENT OF PARAMETER INTO LIST 81500000
         AGO   .RETURN                 BRANCH TO EXIT                   81600000
.INSTBLD ANOP                          BRANCH HERE FOR DYNAMIC LIST     81700000
         AIF   (&LEN NE 1).CONTI2      TEST FOR ONE BYTE TYPE INST      81800000
         AIF   ('&PARM'(1,1) NE '(').CONTI1 TEST FOR REG NOTATION       81900000
         STC   &PARM,&LEN.(1)          STORE PARM INTO LIST             82000000
         AGO   .RETURN                 BRANCH TO EXIT                   82100000
.CONTI1  ANOP                          BRANCH HERE FOR MVI TYPE INST    82200000
         MVI   &DISP.(1),&PARM         MOVE VALUE INTO LIST             82300000
         AGO   .RETURN                 BRANCH TO EXIT                   82400000
.CONTI2  ANOP                          BRANCH HERE IF NOT ONE BYTE      82500000
         AIF   ('&PARM'(1,1) EQ '(').REGPARM  IF REG USE STORE INST     82600000
         LA    14,&PARM                GET PARM INTO WORK REGISTER      82700000
         ST    14,&DISP.(1)            STORE PARM INTO PARAMETER LIST   82800000
         AGO   .RETURN                 BRANCH TO EXIT                   82900000
.REGPARM ANOP                          BRANCH HERE IF REG NOTATION      83000000
         ST    &PARM,&DISP.(1)         STORE PARM INTO PARAMETER LIST   83100000
.*********************************************************************  83200000
.**                                                                  *  83300000
.**RETURN:         R  RETURN TO CALLER AND CONTINUE PROCESSING       */ 83400000
.**                                                                  *  83500000
.*********************************************************************  83600000
.RETURN  ANOP                          EXIT ROUTINE FOR STORE           83700000
&STORESW SETB  0                       TURN OFF STRIP SW FOR NEXT PARM  83800000
         MEND                          END OF STORE ROUTINE             83900000
         PRINT ON                                                       84000000
./  ADD  SSI=42271034,NAME=IKJEGSPL
         MACRO                                                          02000000
&NAME    IKJEGSPL &RTRY=,&ABNTB=,&MODNM=,&TNM=*                         04000000
.********************************************************************** 06000000
.*                                                                    * 08000000
.*  IKJEGSPL IS USED TO GENERATE A LIST OF INFORMATION TO BE USED BY  * 10000000
.*  THE ESTAE EXIT ROUTINE IN AN ABEND SITUATION.  THIS LIST WILL     * 12000000
.*  CONTAIN THE FOLLOWING INFORMATION:                                * 14000000
.*       RETRY ROUTINE ADDRESS;                                       * 16000000
.*       ABEND IC TABLE ADDRESS;                                      * 18000000
.*       MODULE ENTRY POINT;                                          * 20000000
.*       MODULE NAME;                                                 * 22000000
.*       MODULE TEXT NAME.                                            * 24000000
.*                                                                    * 26000000
*   STATUS -- VERSION NO. 1 - OS/VS2 RELEASE NO. 02                   * 28000000
*   CHANGE LEVEL -- 01 - DATE 1-1-73                                  * 30000000
.*                                                                    * 32000000
.********************************************************************** 34000000
         SPACE 1                                                        36000000
         LCLA  &LENTNM                                                  38000000
         LCLC  &A1                                                      40000000
&LENTNM  SETA  K'&TNM                                                   42000000
&A1      SETC  '*'                                                      44000000
         AIF   (T'&RTRY EQ 'O').MSG1                                    46000000
         AIF   (T'&ABNTB EQ 'O').MSG2                                   48000000
         AIF   (T'&MODNM EQ 'O').MSG3                                   50000000
         AIF   (T'&MODNM NE 'J').MSG3                                   52000000
&NAME    DS    0F                 EXIT ROUTINE PARAM LIST               54000000
         DC    A(&RTRY)           RETRY ROUTINE ADDRESS                 56000000
         DC    A(&ABNTB)          ABEND IC TABLE ADDRESS                58000000
         DC    A(&MODNM)          ENTRY POINT FOR THIS MODULE           60000000
         DC    CL8'&MODNM'        MODULE NAME                           62000000
         DS    0X   **THE FOLLOWING IS AN INSERT FOR THE EXIT RTN MSG** 64000000
         DC    AL2(&LENTNM+5)     LENGTH OF MODULE TEXT NAME + 5        66000000
         DC    AL2(0)             THIS FIELD IS REQUIRED BY I/O         68000000
         DC    C'&TNM '      MODULE TEXT NAME                           70000000
         MEXIT                                                          72000000
.MSG1    MNOTE 12,'SET ***RTRY&A1 EQUAL TO YOUR RETRY RTN  ADDR'        74000000
         MEXIT                                                          76000000
.MSG2    MNOTE 12,'SET ***ABNTB&A1 EQUAL TO YOUR ABEND TABLE ADDR'      78000000
         MEXIT                                                          80000000
.MSG3    MNOTE 12,'SET ***MODNM&A1 EQUAL TO YOUR MODULE CSECT NAME'     82000000
.END     MEND                                                           84000000
./  ADD  SSI=42271035,NAME=IKJEGSUB
         MACRO                                                          00700000
         IKJEGSUB &CSECT=IBM                                            01400000
         LCLA  &A,&B,&C,&D,&E,&F,&G                                     02100000
         LCLC  &CSNAM,&SUBCMD,&ABBR,&LDNAM,&LABEL,&LABEL1,&LABEL2,&NMBR 02800000
         LCLC  &LABEL0,&INDEX                                           03500000
&F       SETA  1              INDICATE FIRST SUBCOMMAND ID.             04200000
         AIF   ('&CSECT' NE 'IBM').CONT0                                04900000
&CSNAM   SETC  'IKJEGSCD'     DEFINE CSECT NAME FOR IBM TABLE.          05600000
IKJEGSCD CSECT                                                          06300000
         ENTRY IKJEGAID                                                 07000000
         ENTRY IKJEGEID                                                 07700000
         ENTRY IKJEGPID                                                 08400000
         AGO   .CONT1         BRANCH TO GENERATE COMMENTS.              09100000
.CONT0   ANOP                                                           09800000
         AIF   ('&CSECT' NE 'USER').ERROR2                              10500000
&CSNAM   SETC  'IKJEGSCU'     DEFINE CSECT NAME FOR USER TABLE.         11200000
IKJEGSCU CSECT                                                          11900000
&F       SETA  &F+128         INDICATE USER SUBCOMMAND ID.              12600000
.CONT1   ANOP                                                           13300000
         SPACE 2                                                        14000000
*********************************************************************** 14700000
*                                                                     * 15400000
*        THE IKJEGSUB MACRO IS USED TO GENERATE THE TABLE OF IBM      * 16100000
*        SUPPLIED SUBCOMMAND PROCESSORS AND/OR THE TABLE OF USER      * 16800000
*        WRITTEN SUBCOMMAND PROCESSORS.  BOTH TABLES, EVEN THOUGH     * 17500000
*        THE USER TABLE MAY BE EMPTY, MUST BE LINKAGE EDITED WITH     * 18200000
*        IKJEGMNL.                                                    * 18900000
*                                                                     * 19600000
*        THE FORMAT OF A TABLE ENTRY IS AS FOLLOWS--                  * 20300000
*                                                                     * 21000000
*        .......................................................      * 21700000
*        .        .        .        .        .        .        .      * 22400000
*        .  NAME  . SUBCMD .  ABBR  .  ABBR  . LDMOD  . SUBCMD .      * 23100000
*        . LENGTH .  NAME  . LENGTH .  NAME  .  NAME  .   ID   .      * 23800000
*        .        .        .        .        .        .        .      * 24500000
*        .......................................................      * 25200000
*        +0       +1       +(M+1)   +(M+2)   +(M+N+2) +(M+N+10)       * 25900000
*                                                                     * 26600000
         AIF   ('&CSNAM' EQ 'IKJEGSCU').CONT2                           27300000
*        STATUS -- VERSION NO. 01 - OS/VS2 RELEASE NO. 01             * 28000000
*                                                                     * 28700000
*        CHANGE LEVEL -- 04 - DATE 04/25/72                           * 29400000
*                                                                     * 30100000
.CONT2   ANOP                                                           30800000
*********************************************************************** 31500000
&A       SETA  N'&SYSLIST     DETERMINE NUMBER OF SUBCOMMANDS.          32200000
         AIF   (&A EQ 0).CONT6 IF NO SUBCOMMANDS, BRANCH TO             32900000
.*                            GENERATE END OF TABLE INDICATOR.          33600000
&B       SETA  1              SUBLIST INDEX.                            34300000
.CONT3   ANOP                                                           35000000
&C       SETA  N'&SYSLIST(&B)                                           35700000
         AIF   (&C NE 3).ERROR1 VERIFY THAT SUBCMD                      36400000
.*                            NAME AND LOAD NAME SPECIFIED.             37100000
         AIF   ('&CSNAM' EQ 'IKJEGSCD').CONT33                          37800000
&INDEX   SETC  '&F'                                                     38500000
&LABEL0  SETC  '&CSNAM'(6,3).'&INDEX'.'00'                              39200000
&LABEL1  SETC  '&CSNAM'(6,3).'&INDEX'.'01'                              39900000
&LABEL2  SETC  '&CSNAM'(6,3).'&INDEX'.'02'                              40600000
         AGO   .CONT37                                                  41300000
.CONT33  ANOP                                                           42000000
&E       SETA  K'&SYSLIST(&B,&C)                                        42700000
&D       SETA  &E-2                                                     43400000
&G       SETA  3                                                        44100000
         AIF   (&E EQ 8).CONT35                                         44800000
&G       SETA  2                                                        45500000
&D       SETA  &E-1                                                     46200000
.CONT35  ANOP                                                           46900000
&LABEL0  SETC  '&CSNAM'(6,3).'&SYSLIST(&B,&C)'(&D,&G).'00'              47600000
&LABEL1  SETC  '&CSNAM'(6,3).'&SYSLIST(&B,&C)'(&D,&G).'01'              48300000
&LABEL2  SETC  '&CSNAM'(6,3).'&SYSLIST(&B,&C)'(&D,&G).'02'              49000000
.CONT37  ANOP                                                           49700000
&SUBCMD  SETC  '&SYSLIST(&B,1)'                                         50400000
         SPACE 2                                                        51100000
&LABEL0  EQU   *                                                        51800000
         DC    AL1(&LABEL1-*-1) - LENGTH OF SUBCOMMAND NAME.            52500000
         DC    C'&SUBCMD' -   SUBCOMMAND NAME.                          53200000
&LABEL1  EQU   *                                                        53900000
         DC    AL1(&LABEL2-*-1) - LENGTH OF ABBREVIATION.               54600000
         AIF   (K'&SYSLIST(&B,2) EQ 0).CONT4                            55300000
&ABBR    SETC  '&SYSLIST(&B,2)'                                         56000000
         DC    C'&ABBR' -     ABBREVIATION FOR SUBCOMMAND NAME.         56700000
.CONT4   ANOP                                                           57400000
&LABEL2  EQU   *                                                        58100000
&LDNAM   SETC  '&SYSLIST(&B,3)'                                         58800000
         DC    CL8'&LDNAM' -  LOAD MODULE NAME.                         59500000
         DC    AL1(&F) -      MODULE IDENTIFICATION BYTE.               60200000
         AIF   (&B EQ &A).CONT6                                         60900000
&B       SETA  &B+1                                                     61600000
&F       SETA  &F+1           INCREMENT IDENTIFICATION NUMBER.          62300000
         AGO   .CONT3                                                   63000000
.CONT6   ANOP                                                           63700000
         SPACE 2                                                        64400000
         DC    AL1(255) -     END OF TABLE INDICATOR.                   65100000
         AIF   ('&CSNAM' EQ 'IKJEGSCU').CONT7                           65800000
         SPACE 5                                                        66500000
SCDNXTNM EQU   10 -           LENGTH OF ABBREVIATION LENGTH FIELD,      67200000
*                             LOAD MODULE NAME LENGTH AND ID            67900000
*                             LENGTH.                                   68600000
SCDNXTAB EQU   1 -            LENGTH OF NAME LENGTH FIELD.              69300000
SCDTBEND EQU   255 -          END OF TABLE INDICATOR.                   70000000
SCDABBRL EQU   1 -            LENGTH OF ABBREVIATION LENGTH FIELD       70700000
SCDABBR  EQU   0 -            OFFSET TO ABBREVIATION LENGTH FIELD       71400000
*                             FROM POINTER TO ABBREVIATION              72100000
*                             SUBFIELD.                                 72800000
SCDNAME  EQU   0 -            OFFSET TO SUBCOMMAND NAME LENGTH          73500000
*                             FIELD FROM POINTER TO SUBCOMMAND          74200000
*                             ENTRY.                                    74900000
SCDSCPPN EQU   1 -            OFFSET FROM BEGINNING OF ENTRY TO         75600000
*                             COMMON NAME OF SUBCOMMAND PROCESSOR.      76300000
IKJEGAID EQU   SCDAT00 -      ENTRY NAME FOR AT SUBCOMMAND.             77000000
IKJEGEID EQU   SCDEND00 -     ENTRY NAME FOR END SUBCOMMAND.            77700000
IKJEGPID EQU   SCDPCH00 -     ENTRY NAME FOR ASSIGN SUBCOMMAND.         78400000
SCDATLD  EQU   SCDAT02-SCDAT00 OFFSET TO LOAD MODULE NAME FOR           79100000
*                             AT SUBCOMMAND.                            79800000
SCDENDLD EQU   SCDEND02-SCDEND00 OFFSET TO LOAD MODULE NAME FOR         80500000
*                             END SUBCOMMAND.                           81200000
SCDPCHLD EQU   SCDPCH02-SCDPCH00 OFFSET TO LOAD MODULE NAME FOR         81900000
*                             ASSIGN SUBCOMMAND.                        82600000
.CONT7   ANOP                                                           83300000
         MEXIT                                                          84000000
.ERROR1  MNOTE 12,'INVALID TABLE ENTRY'                                 84700000
         MEXIT                                                          85400000
.ERROR2  MNOTE 12,'INVALID KEYWORD VALUE'                               86100000
         MEXIT                                                          86800000
         MEND                                                           87500000
./  ADD  SSI=42271037,NAME=IKJEGSVB
         MACRO                                                          01000000
         IKJEGSVB                                                       02000000
IKJEGSVB DSECT                                                          03000000
         SPACE 1                                                        04000000
*********************************************************************** 05000000
*                                                                     * 06000000
*        THIS MACRO MAPS THE SVC INFORMATION BLOCK CONSTRUCTED BY     * 07000000
*        THE TEST SVC (SVC 61) AND REFERENCED BY THE TSO/TEST         * 08000000
*        COMMAND PROCESSOR.                                           * 09000000
*                                                                     * 10000000
* STATUS -- VERSION NO. 01 - AOS/2 RELEASE NO. 01                     * 11000000
*                                                                     * 12000000
* CHANGE LEVEL -- 00 - DATE 09/17/71                                  * 13000000
*                                                                     * 14000000
*********************************************************************** 15000000
         SPACE 1                                                        16000000
SVBLDNAM DS    CL8 -          EBCDIC LOAD NAME OF MODULE.               17000000
SVBEP    DS    A -            ADDRESS AT WHICH MODULE IS FETCHED.       18000000
SVBTTR   DS    F -            BEGINNING TTR.                            19000000
SVBATTR1 DS    X -            BYTE 1 OF MODULE ATTRIBUTES.              20000000
SVBRENT  EQU   B'10000000' -  REENTERABLE.                              21000000
SVBREUS  EQU   B'01000000' -  REUSABLE.                                 22000000
SVBOVLY  EQU   B'00100000' -  OVERLAY.                                  23000000
SVBTEST  EQU   B'00010000' -  MODULE IS TO BE TESTED.                   24000000
SVBOL    EQU   B'00001000' -  ONLY LOADABLE.                            25000000
SVBSCTR  EQU   B'00000100' -  SCATTER FORMAT.                           26000000
SVBEXEC  EQU   B'00000010' -  EXECUTABLE.                               27000000
SVB1BLK  EQU   B'00000001' -  MODULE HAS NO RLD AND ONLY ONE TEXT       28000000
*                             BLOCK.                                    29000000
SVBATTR2 DS    X -            BYTE 2 OF MODULE ATTRIBUTES.              30000000
SVBLKEDF EQU   B'10000000' -  MODULE CAN BE PROCESSED BY LINKAGE        31000000
*                             EDITOR F ONLY.                            32000000
SVBTEXT0 EQU   B'01000000' -  FIRST TEXT BLOCK ORIGIN IS ZERO.          33000000
SVBEP0   EQU   B'00100000' -  ENTRY POINT IS ZERO.                      34000000
SVBNORLD EQU   B'00010000' -  MODULE CONTAINS NO RLD ITEMS.             35000000
SVBNOLE  EQU   B'00001000' -  MODULE CAN NOT BE REPORCESSED BY          36000000
*                             LINKAGE EDITOR.                           37000000
SVBSYM   EQU   B'00000100' -  MODULE CONTAINS SYMBOL CARDS.             38000000
SVBLEVF  EQU   B'00000010' -  MODULE CREATED BY LINKAGE EDITOR F.       39000000
SVBREFR  EQU   B'00000001' -  REFRESHABLE.                              40000000
SVBFLGS1 DS    X -            BYTE 1 OF FLAGS.                          41000000
SVBDDNME EQU   B'10000000' -  DDNAME IS PRESENT.                        42000000
SVBLNKLB EQU   B'01000000' -  DATA SET IS LINKLIB.                      43000000
*              B'00XXXXXX' -  RESERVED BITS.                            44000000
SVBCNCAT DS    X -            CONCATENATION NUMBER.                     45000000
SVBDDNAM DS    CL8 -          DDNAME OF DATA SET FROM WHICH             46000000
*                             MODULE IS FETCHED.                        47000000
SVBTCBPT DS    A -            TCB ADDRESS FOR MODULE BEING              48000000
*                             FETCHED.                                  49000000
SVBLNKPT DS    A -            ADDRESS OF NEXT SVC INFORMATION           50000000
*                             BLOCK, OR ZERO IF NO OTHER BLOCKS         51000000
*                             EXIST.                                    52000000
         MEND                                                           53000000
./  ADD  SSI=42271039,NAME=IKJEGSVQ
         MACRO                                                          03000000
         IKJEGSVQ                                                       06000000
IKJEGSVQ DSECT                                                          09000000
         SPACE 1                                                        12000000
*********************************************************************** 15000000
*                                                                     * 18000000
*        THIS MACRO MAPS THE SVC INFORMATION BLOCK QUEUE ELEMENT      * 21000000
*        CONSTRUCTED BY THE TEST SVC (SVC 61) AND REFERENCED BY       * 24000000
*        THE TSO/TEST COMMAND PROCESSOR.                              * 27000000
*                                                                     * 30000000
* STATUS -- VERSION NO. 01 - AOS/2 RELEASE NO. 01                     * 33000000
*                                                                     * 36000000
* CHANGE LEVEL -- 00 - DATE 09/17/71                                  * 39000000
*                                                                     * 42000000
*********************************************************************** 45000000
         SPACE 1                                                        48000000
SVQLNKPT DS    A -            ADDRESS OF NEXT SVC INFORMATION           51000000
*                             BLOCK QUEUE ELEMENT, OR ZERO IF NO        54000000
*                             OTHER QUEUE ELEMENTS EXIST.               57000000
SVQTCBPT DS    A -            ADDRESS OF TCB FOR WHICH THIS QUEUE       60000000
*                             ELEMENT EXISTS.                           63000000
SVQBLKPT DS    A -            ADDRESS OF THE QUEUE OF SVC INFOR-        66000000
*                             MATION BLOCKS FOR THIS TCB.               69000000
         MEND                                                           72000000
./  ADD  SSI=42271040,NAME=IKJEGS6A
         MACRO                                                          02000000
&LABEL   IKJEGS6A &CALLER,&PARAM=O                                      04000000
         LCLA  &A                                                       06000000
         LCLC  &I                                                       08000000
         AIF   ('&CALLER' EQ 'CNTSUP').C1                               10000000
         AIF   ('&CALLER' NE 'OVLYSUP').E2                              12000000
.*       OVERLAY SUPERVISOR SECTION.                                  * 14000000
.O1      ANOP                                                           16000000
         SR    1,1 -          INDICATE CALL BY OVERLAY SUPERVISOR       18000000
         AIF   ('&PARAM' EQ 'O').S1                                     20000000
         MNOTE *,'PARAM OPERAND IGNORED'                                22000000
         AGO   .S1                                                      24000000
.*       CONTENTS SUPERVISOR SECTION.                                 * 26000000
.C1      ANOP                                                           28000000
         AIF   ('&LABEL' EQ '').C15                                     30000000
&LABEL   EQU   *                                                        32000000
.C15     ANOP                                                           34000000
         AIF   (N'&PARAM NE 1).E3                                       36000000
         AIF   ('&PARAM(1)'(1,1) EQ '(' OR '&PARAM(1)' EQ 'O').C2       38000000
         LA    1,&PARAM(1) -  LOAD DCB POINTER                          40000000
.C175    ANOP                                                           42000000
&I       SETC  '1'                                                      44000000
         AGO   .C3                                                      46000000
.C2      ANOP                                                           48000000
         AIF   ('&PARAM(1)' EQ '(1)' OR '&PARAM(1)' EQ 'O').C175        50000000
.C25     ANOP                                                           52000000
&A       SETA  K'&PARAM(1)                                              54000000
         AIF   (&A LT 3 OR &A GT 10).E3                                 56000000
         AIF   ('&PARAM(1)'(&A,1) NE ')').E3                            58000000
&I       SETC  '&PARAM(1)'(2,&A-2)                                      60000000
.C3      ANOP                                                           62000000
         LNR   1,&I -         INDICATE CALL BY CONTENTS SUPERVISOR      64000000
.S1      ANOP                                                           66000000
         SVC   61 -           ISSUE CALL TO TSO TEST                    68000000
         MEXIT                                                          70000000
.E1      MNOTE 12,'INVALID NUMBER OF MACRO OPERANDS'                    72000000
         MEXIT                                                          74000000
.E2      MNOTE 12,'INVALID POSITIONAL OPERAND'                          76000000
         MEXIT                                                          78000000
.E3      MNOTE 12,'INVALID PARAM OPERAND'                               80000000
         MEXIT                                                          82000000
         MEND                                                           84000000
./  ADD  SSI=81730774,NAME=IKJEGS9G
         MACRO                                                          00600000
&SYMBOL  IKJEGS9G &OPRN,&TCBADDR=,&VALUE=O,&REGNO=P,&MF=D               01200000
         LCLB  &B(12),&SW(2)                                            01800003
         LCLA  &FLGS1,&FLGS2,&LEN                                       02400000
         LCLC  &REGNAM                                                  03000000
         AIF   ('&MF' NE 'D').CONT1 CHECK IF DSECT REQUESTED.           03600000
         AIF   ('&SYMBOL' EQ '').DGEN1 CHECK FOR LABEL.                 04200000
         MNOTE *,'LABEL IGNORED'                                        04800000
.DGEN1   ANOP                                                           05400000
IKJEGS9G DSECT                                                          06000000
         SPACE 1                                                        06600000
*********************************************************************** 07200000
*                                                                     * 07800000
*        THIS MACRO MAPS THE INPUT PARAMETER LIST TO THE              * 08400000
*        BREAKPOINT SVC (SVC 97).                                     * 09000000
*                                                                     * 09600000
* STATUS -- VERSION NO. 01 - OS/VS2 RELEASE NO. 01                    * 10200000
*                                                                     * 10800000
* CHANGE LEVEL -- 03 - DATE 04/25/71                                  * 11400000
*                                                                     * 12000000
*********************************************************************** 12600000
         SPACE 1                                                        13200000
S9GTCBPT DS    A -            TARGET TCB ADDRESS, OR PRB OR IRB         13800000
*                             ADDRESS.                                  14400000
S9GVALUE DS    A -            ADDRESS OF VALUE, OR VALUE.               15000000
*                             DEPENDING ON FUNCTION REQUESTED.          15600000
S9GFLGS1 DS    X -            FLAGS, BYTE 1.                            16200000
S9GMACRO EQU   B'10000000' -  MACRO FLAG.                               16800000
S9GTCPON EQU   B'01000000' -  SET TCBTCP BIT TO '1'B.                   17400000
S9GTCPOF EQU   B'00100000' -  SET TCBTCP BIT TO '0'B.                   18000000
S9GTRN   EQU   B'00010000' -  ALTER TCBTRN FIELD.                       18600000
S9GOPSW  EQU   B'00001000' -  ALTER RBOPSW FIELD.                       19200000
S9GGPR   EQU   B'00000100' -  ALTER SPECIFIED GPR.                      19800000
S9GAGPR  EQU   B'00000010' -  ALTER ALL GPRS.                           20400000
S9GFPR   EQU   B'00000001' -  ALTER SPECIFIED FPR.                      21000000
S9GFLGS2 DS    X -            FLAGS, BYTE 2.                            21600000
S9GWCF   EQU   B'10000000' -  SET RBWCF TO ZERO.                        22200000
S9GACHK  EQU   B'01000000' -  VALIDITY CHECK SPECIFIED ADDRESS.         22800000
S9GDEQ   EQU   B'00100000' -  ISSUE DEQ FOR IKJEFT04 AFTER ABEND.       23400003
S9GFREE  EQU   B'00010000' -  FREE SP 255 CORE FOR IGC0006A             24000003
*              B'0000XXXX' - RESERVED BITS                              24050003
S9GREGNO DS    H -            REGISTER NUMBER TO BE ALTERED.            24600000
         SPACE 1                                                        25200000
         AGO   .EXIT                                                    25800000
.*                                                                      26400000
.* FUNCTION VALIDATION SECTION.                                         27000000
.*                                                                      27600000
.CONT1   ANOP                                                           28200000
&B(1)    SETB  1                                                        28800000
&B(2)    SETB  ('&OPRN' EQ 'TCPON')                                     29400000
&B(3)    SETB  ('&OPRN' EQ 'TCPOFF')                                    30000000
&B(4)    SETB  ('&OPRN' EQ 'TRN')                                       30600000
&B(5)    SETB  ('&OPRN' EQ 'OPSW')                                      31200000
&B(6)    SETB  ('&OPRN' EQ 'GPR')                                       31800000
&B(7)    SETB  ('&OPRN' EQ 'AGPR')                                      32400000
&B(8)    SETB  ('&OPRN' EQ 'FPR')                                       33000000
&B(9)    SETB  ('&OPRN' EQ 'WCF')                                       33600000
&B(10)   SETB  ('&OPRN' EQ 'ADDRCHK')                                   34200000
&B(11)   SETB  ('&OPRN' EQ 'DEQ')                                       34800003
&B(12)   SETB  ('&OPRN' EQ 'FREE')                                      34850003
         AIF   (&B(2)+&B(3)+&B(4)+&B(5)+&B(6)+&B(7)+&B(8)+&B(9)+&B(10)+*35400000
               &B(11)+&B(12) NE 1).ERROR1                               36000003
&FLGS1   SETA  128*&B(1)+64*&B(2)+32*&B(3)+16*&B(4)+8*&B(5)+4*&B(6)+2*&*36600000
               B(7)+&B(8)                                               37200000
&FLGS2   SETA  128*&B(9)+64*&B(10)+32*&B(11)+16*&B(12)                  37800003
         AIF   ('&MF' NE 'L').EXEC1                                     38400000
.*                                                                      39000000
.* LIST SECTION.                                                        39600000
.*                                                                      40200000
&SYMBOL  DS    0F -           ALIGN ON WORD BOUNDARY.                   40800000
        AIF ('&TCBADDR' EQ '').NOTCB                                    40850003
         DC    A(&TCBADDR) -  TARGET TCB ADDRESS, OR PRB OR IRB         41400000
*                             ADDRESS.                                  42000000
        AGO   .CHKVAL                                                   42050003
.NOTCB   ANOP                                                           42100003
         DC    A(0)        -  NO  TCB ADDR SUPPLIED                     42150003
.CHKVAL  ANOP                                                           42200003
         AIF   ('&VALUE' EQ 'O').SKIP1 CHECK IF VALUE SPECIFIED.        42600000
         DC    A(&VALUE) -    VALUE, OR ADDRESS OF VALUE.               43200000
         AGO   .SKIP2                                                   43800000
.SKIP1   ANOP                                                           44400000
         DC    A(0) -         VALUE NOT SPECIFIED.                      45000000
.SKIP2   ANOP                                                           45600000
         DC    AL1(&FLGS1) -  FLAGS, BYTE 1.                            46200000
         DC    AL1(&FLGS2) -  FLAGS, BYTE 2.                            46800000
         AIF   ('&REGNO' EQ 'P').SKIP3 CHECK IF REG SPECIFIED.          47400000
         DC    AL2(&REGNO) -  REGISTER NUMBER.                          48000000
         AGO   .EXIT                                                    48600000
.SKIP3   ANOP                                                           49200000
         DC    AL2(0) -       REGISTER NOT SPECIFIED.                   49800000
         AGO   .EXIT                                                    50400000
.*                                                                      51000000
.* EXECUTE FORM                                                         51600000
.*                                                                      52200000
.EXEC1   ANOP                                                           52800000
&SW(2)   SETB  0                                                        53400000
         AIF   ('&MF(1)' NE 'E').ERROR2                                 54000000
         AIF   ('&MF(2)' EQ '(1)').R1SET                                54600000
         AIF   ('&MF(2)'(1,1) EQ '(').REG                               55200000
&SYMBOL  LA    1,&MF(2) -     LOAD LIST ADDRESS.                        55800000
         AGO   .R1SET                                                   56400000
.REG     ANOP                                                           57000000
&LEN     SETA  K'&MF(2)                                                 57600000
&REGNAM  SETC  '&MF(2)'(2,&LEN-2)                                       58200000
&SYMBOL  LR    1,&REGNAM - LOAD LIST ADDRESS.                           58800000
.R1SET   ANOP                                                           59400000
         MVI   8(1),&FLGS1 -  SET FLAG BYTE 1.                          60000000
         MVI   9(1),&FLGS2 -  SET FLAG BYTE 2.                          60600000
         AIF   ('&TCBADDR' EQ '').ERROR3                                61200000
&SW(1)   SETB  ('&VALUE' EQ 'O')                                        61800000
         AIF   ('&TCBADDR'(1,1) EQ '(').REGT                            62400000
         LA    14,&TCBADDR -  GET TCB, PRB, OR IRB ADDRESS.             63000000
&SW(2)   SETB  1                                                        63600000
.REGT    ANOP                                                           64200000
         AIF   (&SW(1) EQ 1).STREGS                                     64800000
         AIF   (&SW(2) EQ 1).VALUE                                      65400000
&LEN     SETA  K'&TCBADDR                                               66000000
&REGNAM  SETC  '&TCBADDR'(2,&LEN-2)                                     66600000
         LR    14,&REGNAM - COPY TCB, PRB, OR IRB ADDRESS.              67200000
.VALUE   ANOP                                                           67800000
         AIF   ('&VALUE'(1,1) EQ '(').REGV                              68400000
         LA    15,&VALUE -    GET VALUE, OR ADDRESS OF VALUE.           69000000
         AGO   .STBOTH                                                  69600000
.REGV    ANOP                                                           70200000
&LEN     SETA  K'&VALUE                                                 70800000
&REGNAM  SETC  '&VALUE'(2,&LEN-2)                                       71400000
         LR    15,&REGNAM - COPY VALUE, OR ADDRESS OF VALUE.            72000000
.STBOTH  ANOP                                                           72600000
         STM   14,15,0(1) -   STORE INTO PARAMETER LIST.                73200000
         AGO   .REGNO                                                   73800000
.STREGS  ANOP                                                           74400000
         AIF   (&SW(2) EQ 1).ST1                                        75000000
&LEN     SETA  K'&TCBADDR                                               75600000
&REGNAM  SETC  '&TCBADDR'(2,&LEN-2)                                     76200000
         ST    &REGNAM,0(,1) - STORE INTO LIST.                         76800000
         AGO   .REGNO                                                   77400000
.ST1     ANOP                                                           78000000
         ST    14,0(,1) -     STORE INTO PARAMETER LIST.                78600000
.REGNO   ANOP                                                           79200000
         AIF   ('&REGNO' EQ 'P').SVC                                    79800000
         AIF   ('&REGNO'(1,1) EQ '(').REGR                              80400000
         LA    0,&REGNO -     GET REGISTER NUMBER.                      81000000
         STH   0,10(,1) -     STORE REGISTER NUMBER IN LIST.            81600000
         AGO   .SVC                                                     82200000
.REGR    ANOP                                                           82800000
&LEN     SETA  K'&REGNO                                                 83400000
&REGNAM  SETC  '&REGNO'(2,&LEN-2)                                       84000000
         STH   &REGNAM,10(,1) - STORE REGISTER NUMBER.                  84600000
.SVC     ANOP                                                           85200000
         SVC   97 -           PASS CONTROL TO BREAKPOINT SVC.           85800000
.EXIT    ANOP                                                           86400000
         MEXIT                                                          87000000
.ERROR1  MNOTE 12,'INVALID OPTION OR OPTION NOT SPECIFIED'              87600000
         MEXIT                                                          88200000
.ERROR2  MNOTE 12,'INVALID MACRO FORM SPECIFIED'                        88800000
         MEXIT                                                          89400000
.ERROR3  MNOTE 12,'TCBADDR NOT SPECIFIED, BUT REQUIRED'                 90000000
         MEXIT                                                          90600000
         MEND                                                           91200000
./  ADD  SSI=43640038,NAME=IKJOCMTB
         %GOTO OUTGOTO;             /* THIS IS A BI-LINGUAL MACRO       00050002
         MACRO                                                          00100002
         IKJOCMTB &DSECT=                                               00150002
         AIF   ('&DSECT' EQ 'NO').NODSECT                               00200002
OUTCOMTB DSECT                                                          00250002
         AGO   .ADSECT                                                  00300002
.NODSECT ANOP                                                           00350002
OUTCOMTB EQU   *                                                        00400002
.ADSECT  ANOP                                                           00450002
*                                                                       00500002
*   THIS IS A BILINGUAL MAPPING MACRO OF OUTCOMTB. IT IS THE ONLY       00550002
*        INTERFACE BETWEEN ALL OF THE MODULES IN THE                    00600002
*        'OUTPUT' CP.                                                   00650002
*                                                                       00700002
*  CHANGE ACTIVITY                                                      00706000
*   A 083700,087600-087700,089700                              @ZM30982 00712000
*   A 097250-097350,181100-181200,181700                       @ZM30982 00718000
*   A 184900-185100,187100-187200                              @ZM30982 00724000
*   A 187700,196440-196480                                     @ZM30982 00730000
*   C 084000,090000,181500,187500                              @ZM30982 00736000
*   D 081500                                                   @ZM30982 00742000
OUTCPPL  DS    A .                  ADDR OF COPY OF CPPL                00750002
OUTMSGID DS    CL1                  INDICATE MSG TO ISSUE               00800002
OUTFLAGS DS    BL1                  FLAGS REQUIRED IN 67                00850002
KEY1     EQU   X'80'                RUNNING IN KEY 1 SUPR STATE         00900002
OUTRTCD  DS    XL2                  RETURN CODE PASSED TO MSG RTN       00950002
OUTMACN  DS    CL8   .              NAME OF SVC100'S FAILING MACRO      01000002
OUTCMDNM DS    CL8   .              COMMAND NAME FROM ECT VIA SVC100    01050002
OUTATTN  DS    F     .              ECB, POSTED BY ATTENTION EXIT       01100002
POSTED   EQU   X'40' .              VALUE TO TEST IF ECB POSTED         01150002
OUTEXTRA DS    CL4   .              FOR FUTURE USE (RESERVED)           01200002
OUTEMPMN DS    CL8   .              TEMPNAME FOR PO DS                  01220002
OUTSOBH  DS    A     .              ADDR OF SSOB HEADER                 01250002
OUTSOBSO DS    A     .              ADDR OF SSSO FUNCTION SECTION       01300002
OUTRPL   DS    A     .              ADDRESS OF RPL                      01350002
OUTRPLL  DS    F     .              RPL LENGTH                          01400002
OUTACB   DS    A     .              ADDRESS OF ACB, TO BE PUT INTO RPL  01450002
OUTACBL  DS    F     .              ACB LENGTH                          01500002
OUTEMPSB DS    A     .              SAVE PTR TO SUBCMD FROM ATTN        01550002
OUTHOLD  DS    2F    .              CURRENT RBA OF SYSOUT D.S.          01600002
*                                                                       01650002
*        THESE FIELDS ARE USED TO MAINTAIN THE SYSOUT RBA               01700002
*        CORRESPONDING TO APPROXIMATELY 10 'PUT' LINES BACK.            01720002
*        THIS IS USED FOR RESUMING TERMINAL PRINTING (C HERE)           01750002
*        AFTER AN ATTENTION THUS MAKING UP FOR LOST TCAM BUFFERS.       01760002
*        IT'S ALSO USED FOR CHKPTING THE CURRENT SYSOUT DS AFTER        01770002
*        AN ATTN/END, ATTN/NEXT, OR TERMINATING ERROR.                  01800002
OUTBKNEW DS    CL8   .          RBA OF SYSOUT CORRESPONDING TO THE      01820002
*                                 LATEST 10TH RCD PUT. IT'S UPDATED     01840002
*                                 EVERY 10 'PUTS'                       01860002
OUTBKAPX DS    CL8   .          RBA OF SYSOUT CORRESPONDING TO AT       01900002
*                                 LEAST 10 'PUT' LINES BACK. IT'S SET   01908002
*                                 EQUAL TO OUTBKNEW BEFORE OUTBKNEW     01916002
*                                 IS UPDATED. THIS IS THE OFFICIAL      01924002
*                                 RBA FOR CKPTING AND POINTING IN       01932002
*                                 IN CERTAIN CASES.                     01940002
OUTBKCNT DS    F     .          COUNT OF LINES 'PUT' SINCE LAST         01950002
*                                 APPROXIMATION OF SYSOUT RBA           01970002
*                                                                       02000002
*     STRUCTURE CONTAINING SIMILAR DATA FOR PRINT AND SAVE DATASETS     02050002
*                                                                       02100002
STRCTNUM DS    FL4   .          STRUCTURE ELEMENT NUMBER                02150002
O73PARM  DS    CL40  .                                                  02190002
         ORG   O73PARM+0                                                02230002
OUTDCB   DS    AL4   .          DCB ADDR FOR '71                        02270002
PRINTDDN DS    CL8   .          DDNAME OF DATASET ALLOCATED BY '73      02310002
OUTBUFA  DS    AL4   .          ADDR OF 'PUT' BUFFER IN '71             02350002
NONAME   DS    FL4   .          PLACE HOLDER IN STRUCTURE               02390002
         ORG   NONAME+0                                                 02430002
NONAME1  DS    CL1   .          PLACE HOLDER                            02470002
NONAME2  DS    BL1   .          PLACE HOLDER                            02510002
DSALLOC  EQU   X'40' .          DATASET IS ALLOCATED  FLAG              02550002
DSOPEN   EQU   X'20' .          DATASET IS OPENED                       02590002
OUTRECV  EQU   X'10' .          INDICATES VARIABLE FORMAT OF OUTPUT DS  02630002
NEEDFREE EQU   X'08' .          FREEMAIN NEEDED FOR BUFFER ('71)        02670002
NEWDS    EQU   X'04' .          NEW DATASET ALLOCATED BY DAIR           02710002
NOMEMNAM EQU   X'02' .          NO MEMBER NAME PRESENT FOR PO DS        02750002
OUTRECUN EQU   X'01' .          RECFM IS UNDEFINED                      02790002
OUTBUFL  DS    FL2   .          LENGTH OF 'PUT' BUFFER FOR '71          02830002
         ORG   O73PARM+20                                               02910002
NONAME3  DS    CL20  .          PLACE HOLDER FOR SECOND PLACE IN STRUC  02950002
*                                                                       02990002
OUTRECA  DS    A     .          ADDR OF SYSOUT RCD FOR '71 TO 'PUT'     03030002
OUTRECL  DS    H     .          LENGTH OF SYSOUT RCD TO BE 'PUT'        03130002
*                                                                       03450002
OUTKEYWD DS    XL1   .              SWITCHES FOR KEYWORDS ENTERED       03500002
PAUSE    EQU   X'80' .              PAUSE KEYWORD ENTERED               03550002
HOLD     EQU   X'40' .              HOLD KEYWORD ENTERED                03600002
HERE     EQU   X'20' .              HERE KEYWORD ENTERED                03650002
BEGIN    EQU   X'10' .              BEGIN KEYWORD ENTERED               03700002
NEXT     EQU   X'08' .              NEXT KEYWORD ENTERED                03750002
DELETE   EQU   X'04' .              DELETE KEYWORD ENTERED              03800002
PRINT    EQU   X'02' .              PRINT KEYWORD ENTERED OR DEFAULTED  03850002
NEWCLASS EQU   X'01' .              NEWCLASS KEYWORD ENTERED            03900002
OUTKEYW2 DS    XL1   .                                                  03950002
KEEP     EQU   X'80' .              KEEP KEYWORD ENTERED                04000002
DEST     EQU   X'40' .              DEST KEYWORD ENTERED                04050002
SUBCONT  EQU   X'20' .              CONTINUE SUBCMD ENTERED             04100002
SUBHERE  EQU   X'10' .              CONTINUE HERE SUBCMD ENTERED        04150002
SUBBEGN  EQU   X'08' .              CONTINUE BEGIN SUBCMD ENTERED       04200002
SUBNEXT  EQU   X'04' .              CONTINUE NEXT SUBCMD ENTERED        04250002
*                                                                       04300002
OUTSW    DS    XL1   .              INTER-MODULE SWITCHES               04350002
SUBSYS   EQU   X'80' .              SUBSYS PROCESSING A SET OF DATASETS 04400002
SUBCMODE EQU   X'40' .              IN SUBCOMMAND MODE                  04450002
UNALCALL EQU   X'20' .              IKJCT473 IS BEING CALL FOR          04500002
*                                   CLOSE/UNALLOCATION ONLY             04550002
ENDSW    EQU   X'10' .              QUIT COMMAND DUE TO  'END'          04600002
ERROR    EQU   X'08' .              QUIT CMD - CRITICAL ERROR           04650002
ENDKEEP  EQU   X'04' .              OVERIDE NOKEEP ON CMD IF END        04700002
*                                   SUBCMD IN MIDDLE OF PROCESSING      04750002
NOWORK   EQU   X'02' .              NO MORE JOBS OR CLASSES TO PROCESS  04760002
HASPABND EQU   X'01' .              ABEND OCCURED IN HASP               04800002
OUTSW2   DS    XL1   .              INTER-MODULE SWITCHES               04850002
SYNADERR EQU   X'80'                SYNAD ERROR OCCURRED                04870002
OPENED   EQU   X'40' .              SYSOUT DATASET OPENED BY '62        04900002
NONTERM  EQU   X'20' .              CLIST - NON TERMINAL INPUT          04950002
WORKDONE EQU   X'10' .              IF ANY ACTION TAKEN FOR A           05000002
*                                   JOB/CLASSLIST                       05050002
ENDLIST  EQU   X'08' .              LAST CALL FOR A GIVEN JOBNAME       05100002
*                                   IF DELETE OR ROUTING SPECIFIED      05150002
OUTIDSSW DS    XL1   .              INPUT (I.E. SYSOUT) DATA SET FLAGS  05200002
POINT    EQU   X'80' .              FORCE IKJCT470 TO ISSUE POINT       05250002
EODSW    EQU   X'10' .              EOD REACHED, USED BY IKJCT463       05280002
TERM     EQU   X'08' .              TERMINAL IS ALLOCATED               05320002
ALLOC    EQU   X'04' .              SYSOUT DATASET ALLOCATED            05360002
INTRPMSG EQU   X'02' .              NEED MSG - INTERRUPTED OUTPUT       05400002
*                                   RESUMED                             05450002
OUTDARB  DS    A     .              ADDR OF DYN ALLOC REQ BLOCK FOR '67 05500002
OUTDAIR  DS    A     .              ADDR OF DAIR PARM LIST FOR '67      05550002
OUTPDL   DS    A     .              ADDR OF PDL OF ORIGINAL CMD         05600002
*                                                                       05650002
OUTXMSG  DS    A     .              ADDR OF USER SUPPLIED MSG           05700002
OUTSYNMS EQU   OUTXMSG              ADDR OF SYNAD MSG - PRINT/SAVE DS   05720002
OUTXRPLY DS    A     .              ADDR OF REPLY TO USER MSG           05750002
*                                                                       05800002
OUTTCBH  DS    A     .              ADDR OF HELP TCB                    05850002
OHELPECB  DS   A     .              ADDR OF HELP ECB                    05900002
*                                                                       05950002
OUTSBPDL  DS   A     .              ADDR OF SUBCOMMAND PDL              06000002
OUTSBBUF  DS   A     .              ADDR OF SUBCOMMAND BUFFER           06050002
*                                                                       06100002
OUTSTAE  DS    2F    .              SAVE R13 & R14 IN ESTAE EXIT        06150002
*                                                                       06200002
OUTWORK  DS    12F   .              MISC WORK AREA                      06250002
CLASBUFF DS    CL8   .              ZERO OR ONE CLASS FOR PRINT OR      06300002
*                                     ZERO TO EIGHT CLASSES FOR DELETE  06350002
*                                     OR ROUTING                        06400002
OSYSODDN DS    CL8                  SYSOUT DDNAME                       06450002
*                                                                       06500002
*              POINTERS TO VARIOUS PDE'S (OR THE 1ST OF A CHAIN)        06550002
OUTPLIST EQU   *                                                        06600002
CPDE     DS    A                    FIRST 'CLASS' PDE                   06650002
OUTCPDE1 EQU   CPDE                                                     06700002
PPDE     DS    A                    ADDR OF 'PRINT' PDE                 06750002
OPRDSPDE EQU   PPDE                                                     06800002
NPDE     DS    A                    ADDR OF 'NEWCLASS' PDE              06850002
ONEWCPDE EQU   NPDE                                                     06900002
DPDE     DS    A .                  ADDR OF THE 'DEST' PDE              06950002
ODESTPDE EQU   DPDE                                                     07000002
OUTJBPDE DS    A                    ADDR OF 'JOB' PDE                   07050002
OUTCLPDE DS    A                    ADDR OF 'CLASS' PDE                 07100002
OSVDSPDE DS    A                    ADDR OF 'SAVE DATASET' PDE          07150002
EWAPTR    DS    A                   PTR TO ESTAE WORK AREA              07200002
*                                                                       07250002
*                                                                       07300002
IOPLPTR  DS    A .                  ADDR OF IOPL, NEEDED BY CSECTS      07350002
*                                   THE BELOW MAKES THE IOPL CONTIG.    07400002
IOPL     DS    0F .                 IOPL (LABELS SAME AS MACRO)         07450002
IOPLUPT  DS    A                    PTR TO UPT                          07500002
IOPLECT  DS    A                    PTR TO ECT                          07550002
IOPLECB  DS    A                    PTR TO ECB                          07600002
IOPLIOPB DS    A                    PTR TO I/O SERVICE RTN PARM BLK     07650002
*                                                                       07700002
*        M S G I D   E Q U ' S                                          07750002
*                                                                       07800002
M300A   EQU  0   .  MODE MSG                                            07850002
M309I   EQU  106 .  OPEN FAILED - PRINT/SAVE                            07900002
M310I   EQU  110 .  INVALID DSNAME EXCEEDS 44 CHAR                      07950002
M312I   EQU  112 .  NOT ENOUGH VIRTUAL STORAGE                          08000002
M312A   EQU  111 .  NOT ENOUGH VIRTUAL STORAGE                          08050002
M313I   EQU  113 .  COMMAND SYSTEM ERROR                                08100002
M318A   EQU  114 .  OUTPUT ENDED    B37 ABEND                           08200002
M318B   EQU  115 .  HELP ABENDED, CODE IN ECB                           08250002
M318C   EQU  116 .  OUTPUT ENDED    913 ABEND                           08300002
M318D   EQU  117 .  OUTPUT ENDED  SYS ABEND CODE XXX                    08350002
M320A   EQU  120 .  NO CLASS(CLASSNAME) OUTPUT FOR JOB         @ZM30982 08370000
M320I   EQU  118 .  NO CLASS(CLASSNAME) OUTPUT FOR JOB(JOBID)  @ZM30982 08400000
M321I   EQU  119 .  CMD NOT AUTHORIZED                                  08450002
M323I   EQU  128 .  INVALID SUB CMD                                     08500002
M325I   EQU  122 .  DSNAME SAVED  (SEQUENTIAL DATASET)                  08550002
M325A   EQU  121 .  DSNAME SAVED  (PARTITIONED DATASET)                 08600002
M330I   EQU  126 .  DSORG OF (DSNAME) UNACCEPTABLE                      08650002
M332I   EQU  142 .  UNKNOWN INSTALLATION EXIT RETURN CODE               08700002
M333I   EQU  143 .  MISSING REPLY FOR MSG                               08750002
M339A   EQU  109 .  NO HELD OUTPUT FOR JOB                     @ZM30982 08760000
M339I   EQU  108 .  NO HELD OUTPUT FOR JOB(JOBID)              @ZM30982 08770000
M340I   EQU  102 .  JOB NOT FOUND                                       08800002
M341I   EQU  145 .  CMD INVALID   CONFLICTING KEYWORDS                  08850002
M342A   EQU  103 .  FIB/SVC MACRO ERROR                                 08900002
M342B   EQU  104 .  FIB/SVC ERROR                                       08950002
M343A   EQU  127 .  NO OUTPUT FOR JOB IN REQ CLASS(ES)         @ZM30982 08970000
M343I   EQU  131 .  NO OUTPUT FOR JOB(JOBID) IN REQ CLASS(ES)  @ZM30982 09000000
M344I   EQU  132 .  DS SKIPPED                                          09050002
M345I   EQU  133 .  SUBSYSTEM INTERFACE ERROR                           09100002
M346I   EQU  134 .  SUBSYSTEM ERROR                                     09150002
M347I   EQU  135 .  CMD FAILED - SUB SYSTEM NOT ACTIVE                  09200002
M348I   EQU  136 .  DUPLICATE JOBNAME                                   09250002
M349I   EQU  137 .  JOBNAME/JOBID  INVALID                              09300002
M350I   EQU  129 .  UNABLE TO PROCESS JOB NOW                           09340002
M351I   EQU  130 .  INVALID DEST ID                                     09380002
M353I   EQU  138 .  UNKNOWN SSOBRETN CODE                               09420002
M355I   EQU  140 .  SYNAD MSG - PRINT/SAVE                              09440002
M357I   EQU  107 .  NO MEMBER NAME FOR PO DATASET                       09460002
M358I   EQU  146 .  INVALID SEARCH ARG RETURN CODE FROM SUBSYS          09500002
ATTCHERR  EQU  4  . ERROR FROM ATTACHING HELP MODULE                    09540002
MDYNALC   EQU  8 .  DYN ALC FAIL MSG NEEDED                             09580002
MPARSERR  EQU 12  . PARSE ERROR MSG                                     09585002
MDAIRF    EQU 16 .  DAIR FAIL MSG NEEDED                                09590002
CMDSCAN   EQU 20  . COMMAND SCAN FAILURE                                09595002
MPTGTERR  EQU 24 .  PUTGET FAILURE                                      09600002
POINTERR  EQU 28  . ERROR RETURN CODE RECEIVED FROM 'POINT'             09606002
GETERR    EQU 32  . ERROR RETURN CODE RECEIVED FROM 'GET'               09612002
HELPFAIL  EQU 36 .  HELP MODULE FAILED                                  09620002
ESTAERR   EQU 40  . NONZERO RETURN CODE FROM SVC60                      09660002
STAXERR   EQU 44  . ERROR FROM STAX MACRO                               09700002
STATERR   EQU 48  . ERROR RETURN CODE FROM STATUS MACRO                 09710002
OPENERR   EQU 52  . OPEN FAILURE                                        09720002
JESM320   EQU 56  . MSG320 NEEDED                              @ZM30982 09725000
JESM339   EQU 60  . MSG339 NEEDED                              @ZM30982 09730000
JESM343   EQU 64  . MSG443 NEEDED                              @ZM30982 09735000
MSECXP    EQU 123 . PUTGET FOR SEC EXIT  (GET REPLY)                    09740002
MSECXM    EQU 124 . PUTLINE FOR SEC EXIT ( WITH NO REPLY)               09780002
*                                                                       10350002
*                                                                       10400002
OUTTOTLN EQU   *-OUTCOMTB .         TOTAL LENGTH FOR GETMAIN            10450002
         MEND , */                                                      10500002
*%OUTGOTO: ;                                                            10550002
* /*******************************************************************/ 10555002
* /*THIS IS AN INTERNAL MACRO FOR THE TSO OUTPUT COMMAND PROCESSOR.  */ 10560002
* /*IT IS THE ONLY INTERFACE FROM ONE MODULE (CSECT) TO ANOTHER      */ 10565002
* /* USAGE                                                           */ 10570002
* /*     %NOBASE='1' --------  FOR AN UNBASED EXPANSION              */ 10575002
* /*******************************************************************/ 10580002
*  DCL 1   OUTCOMTB                                                     10590002
*  %IF NOBASE = '1'  %THEN                                              10950002
*  %GOTO SKIPBASE;                                                      11000002
*             BASED(OCMTBPTR)                                           11050002
*  %SKIPBASE: ;                                                         11100002
*            ,                     /* OUTPUT'S COMMUNICATIONS TABLE  */ 11200002
*        2  OUTCPPL  PTR(31),      /* ADDR OF COPY OF CPPL           */ 11250002
*        2  OUTMSGID CHAR(1),      /* ID OF MESSAGE FOR '67 TO WRITE */ 11300002
*        2  OUTFLAGS CHAR(1),      /* FLAGS REQUIRED IN 67           */ 11350002
*         3   KEY1     BIT(1),     /* RUNNING IN KEY 1 SUPR STATE    */ 11400002
*        2  OUTRTCD  FIXED(15),    /* RETN CODE PASSED TO MSG WRITER */ 11450002
*        2  OUTMACN  CHAR(8),      /* NAME OF SVC100'S FAILING MACRO */ 11500002
*        2  OUTCMDNM CHAR(8),      /*COMMAND NAME FROM ECT VIA SVC100*/ 11550002
*        2  OUTATTN  PTR(31),      /* ECB, POSTED BY ATTENTION EXIT  */ 11600002
*         3  *        BIT(1),      /* RESERVED                       */ 11650002
*         3  POSTED   BIT(1),      /* 1 - POSTED BY EXIT             */ 11700002
*        2  OUTEXTRA CHAR(4),      /* FOR FUTURE USE (RESERVED)      */ 11750002
*        2  OUTEMPMN CHAR(8),      /* TEMPNAME FOR PO DS             */ 11770002
*        2  OUTSOBH  PTR(31),      /* ADDR OF SSOB HEADER            */ 11800002
*        2  OUTSOBSO PTR(31),      /* ADDR OF SSSO CTL BLOCK         */ 11850002
*        2  OUTRPL   PTR(31),      /* ADDR OF RPL                    */ 11890002
*        2  OUTRPLL  FIXED(31),    /* RPL LENGTH                     */ 11930002
*        2  OUTACB   PTR(31),      /* ADDR OF ACB,  TO BE PUT IN RPL */ 11970002
*        2  OUTACBL  FIXED(31),    /* ACB LENGTH                     */ 12010002
*        2  OUTEMPSB  PTR(31),     /* SAVE PTR TO SUBCMD FROM ATTN   */ 12100002
*        2  OUTHOLD  CHAR(8),      /* CURRENT RBA OF SYSOUT D.S.     */ 12150002
*     /***************************************************************/ 12200002
*     /* THESE FIELDS ARE USED TO MAINTAIN THE SYSOUT RBA            */ 12250002
*     /* CORRESPONDING TO APPROXIMATELY 10 'PUT' LINES BACK.         */ 12258002
*     /* THIS IS USED FOR RESUMING TERMINAL PRINTING (C HERE)        */ 12266002
*     /* AFTER AN ATTENTION THUS MAKING UP FOR LOST TCAM BUFFERS.    */ 12274002
*     /* IT'S ALSO USED FOR CHKPTING THE CURRENT SYSOUT DS AFTER     */ 12282002
*     /* AN ATTN/END, ATTN/NEXT, OR TERMINATING ERROR.               */ 12290002
*     /***************************************************************/ 12300002
*        2  OUTBKNEW CHAR(8),      /* RBA OF SYSOUT CORRESPONDING TO    12350002
*                                     THE LATEST 10TH RCD PUT. IT'S     12360002
*                                     UPDATED EVERY 10 'PUTS'        */ 12370002
*        2  OUTBKAPX CHAR(8),      /* RBA OF SYSOUT CORRESPONDING TO    12400002
*                                     AT LEAST 10 'PUT' LINES BACK.     12408002
*                                     IT'S SET EQUAL TO OUTBKNEW BEFORE 12416002
*                                     OUTBKNEW IS UPDATED. THIS IS THE  12424002
*                                     OFFICIAL RBA FOR CKPTING AND      12432002
*                                     POINTING IN CERTAIN CASES.     */ 12440002
*        2  OUTBKCNT FIXED(31),    /* COUNT OF LINES 'PUT' SINCE LAST   12450002
*                                     APPROXIMATION OF SYSOUT RBA    */ 12500002
*        2  STRCTNUM FIXED(31),    /* COUNTER FOR ELEMENT IN STRUCT  */ 12550002
*        2  O73PARM  (2),          /*PARAMETERS FOR PRINT/SAVE IN '71*/ 12600002
*         3   OUTDCB   PTR(31),   /* ADDR OF PRINT OR SAVE DCB       */ 12650002
*         3   PRINTDDN CHAR(8),   /* DDNAME OF DATASET ALLOC BY '73  */ 12700002
*         3   OUTBUFA  PTR(31),   /* ADDR OF BUFFER FOR '71'S 'PUT'  */ 12750002
*         3   *        FIXED(31),                                       12800002
*          4   *        CHAR(1),  /* RESERVED                        */ 12850002
*          4   *        BIT(1),   /* RESERVED                        */ 12900002
*          4   DSALLOC  BIT(1),   /* 1 - DATASET ALLOCATED           */ 12950002
*          4   DSOPEN   BIT(1),   /* 1 - DATASET OPENED              */ 13000002
*          4   OUTRECV  BIT(1),   /* 1 - RECFMT IS VARIABLE FOR 'PUT'*/ 13050002
*          4   NEEDFREE BIT(1),   /* FREEMAIN NEEDED FOR 'PUT' BUF   */ 13100002
*          4   NEWDS    BIT(1),   /* NEW DATASET ALLOCATED BY DAIR   */ 13150002
*          4   NOMEMNAM BIT(1),   /* NO MEMBER NAME FOR PO DS        */ 13200002
*          4   OUTRECUN BIT(1),   /* 1 - RECFMT IS UNDEFINED         */ 13240002
*          4   OUTBUFL FIXED(15), /* LENGTH OF 'PUT' BUFFER          */ 13280002
*                                                                       13320002
*        2  OUTRECA  PTR(31),     /* ADDR SYSOUT RCD FOR '71 TO PUT  */ 13360002
*        2  OUTRECL  FIXED(15),    /* LTH SYSOUT RCD FOR '71 TO PUT  */ 13400002
*                                                                       13520002
*        2  OUTKEYWD CHAR(2),      /* FLAGS FOR KEYWORDS ENTERED     */ 13560002
*         3   PAUSE    BIT(1),     /* 1 - 'PAUSE' WAS ENTERED        */ 13600002
*         3   HOLD     BIT(1),     /* 1 - 'HOLD' WAS ENTERED         */ 13640002
*         3   HERE     BIT(1),     /* 1 - 'HERE' WAS ENTERED         */ 13680002
*         3   BEGIN    BIT(1),     /* 1 - 'BEGIN' WAS ENTERED        */ 13720002
*         3   NEXT     BIT(1),     /* 1 - 'NEXT' WAS ENTERED         */ 13760002
*         3   DELETE   BIT(1),     /* 1 - 'DELETE' WAS ENTERED       */ 13800002
*         3   PRINT    BIT(1),     /* 1 - 'PRINT' WAS ENTERED        */ 13840002
*         3   NEWCLASS BIT(1),     /* 1 - 'NEWCLASS' WAS ENTERED     */ 13880002
*         3   KEEP     BIT(1),     /* 1 - 'KEEP' WAS ENTERED         */ 13920002
*         3   DEST     BIT(1),     /* 1 - 'DEST' WAS ENTERED         */ 13960002
*         3   SUBCONT  BIT(1),     /* 1 - 'CONTINUE' WAS ENTERED     */ 14200002
*         3   SUBHERE  BIT(1),     /* 1 - 'HERE' WAS ENTERED         */ 14250002
*         3   SUBBEGN  BIT(1),     /* 1 - 'BEGIN WAS ENTERED         */ 14300002
*         3   SUBNEXT  BIT(1),     /* 1 - 'NEXT' WAS ENTERED         */ 14350002
*        2  OUTSW    BIT(16),      /* INTER-MODULE SWITCHES          */ 14400002
*         3   SUBSYS   BIT(1),     /* SUBSYSTEM  OPEN FOR PROCESSING */ 14450002
*         3   SUBCMODE BIT(1),     /* 1 - IN SUBCOMMAND MODE         */ 14500002
*         3   UNALCALL BIT(1),     /* 1 - IKJCT473 IS BEING CALLED FOR  14550002
*                                         CLOSE/UNALLOCATION ONLY    */ 14600002
*         3   ENDSW    BIT(1),     /* 1 - QUIT COMMAND DUE TO 'END'  */ 14650002
*         3   ERROR    BIT(1),     /* 1 - QUIT CMD DUE TO CRITICAL      14700002
*                                          ERROR                     */ 14750002
*         3   ENDKEEP  BIT(1),     /* SET TO OVERRIDE NOKEEP ON CMD IF  14800002
*                                  END SUBCMD IN MIDDLE OF PROCESSING*/ 14850002
*         3   NOWORK   BIT(1),     /* NO MORE JOBS OR CLASSES TO        14900002
*                                     PROCESS                        */ 14920002
*         3   HASPABND BIT(1),     /* ABEND IN HASP                  */ 14950002
*         3   SYNADERR BIT(1),     /* SYNAD ERROR OCCURRED           */ 15000002
*         3   OPENED   BIT(1),     /* SYSOUT DATASET OPENED          */ 15050002
*         3   NONTERM  BIT(1),     /* 1 -  CLIST ISSUING CMDS        */ 15100002
*         3   WORKDONE BIT(1),     /* 1 - IF ANY ACTION TAKEN FOR A     15150002
*                                     JOB / CLASSLIST                */ 15200002
*         3   ENDLIST  BIT(1),     /* LAST CALL FOR A GIVEN JOBNAME     15250002
*                                     IF DELETING OR ROUTING         */ 15300002
*        2  OUTIDSSW BIT(8),       /* INPUT (SYSPOOL) DATA SET FLAGS */ 15350002
*         3   POINT    BIT(1),     /* 1 - DO A POINT BEFORE NEXT GET */ 15400002
*         3   *        BIT(1),     /* RESERVED                       */ 15450002
*         3   *        BIT(1),     /* RESERVED                       */ 15500002
*         3   EODSW    BIT(1),     /* EOD REACHED                    */ 15550002
*         3   TERM     BIT(1),     /* 1 - PRINT(*) WAS ENTERED       */ 15600002
*         3   ALLOC    BIT(1),     /* INDICATE SYSOUT HAS BEEN ALLOC */ 15650002
*         3   INTRPMSG BIT(1),     /* NEED MSG - INTERRUPTED OUTPUT     15700002
*                                     RESUMED                        */ 15750002
*         3   *        BIT(1),     /* RESERVED                       */ 15800002
*                                                                       15850002
*        2  OUTDARB  PTR(31),      /*ADDR OF DYNALLOC REQ BLK FOR '67*/ 15900002
*        2  OUTDAIR  PTR(31),      /* PTR TO DAIR PARM LIST FOR '67  */ 15950002
*        2  OUTPDL   PTR(31),      /* ADDR OF COMMAND PDL            */ 16000002
*                                                                       16050002
*        2  OUTXMSG  PTR(31),      /* ADDR OF USER SUPPLIED MSG      */ 16100002
*           3  OUTSYNMS PTR(31),   /* ADDR SYNAD MSG                 */ 16120002
*        2  OUTXRPLY PTR(31),      /* ADDR OF REPLY TO USER MSG      */ 16150002
*                                                                       16200002
*        2  OUTTCBH  PTR(31),      /* ADDR OF THE 'HELP' TCB         */ 16250002
*        2  OHELPECB PTR(31),      /* ADDR OF HELP ECB               */ 16300002
*                                                                       16350002
*        2  OUTSBPDL PTR(31),      /* ADDR OF SUBCOMMAND PDL         */ 16400002
*        2  OUTSBBUF PTR(31),      /* ADDR OF SUBCOMMAND BUFFER      */ 16450002
*                                                                       16500002
*        2  OUTSTAE  (2)PTR(31),   /* SAVE R13, R14 IN ESTAE EXIT    */ 16550002
*        2  OUTWORK  (12)FIXED(31),/* MISC WORK AREA                 */ 16600002
*        2  CLASBUFF CHAR(8),      /* 0 OR 1 CLASS FOR PRINT OR         16650002
*                                     0 - 8 CLASSES FOR DELETE OR       16700002
                                      ROUTING                        */ 16750002
*        2  OSYSODDN CHAR(8),      /* SYSOUT DDNAME                  */ 16800002
*                                                                       16850002
*        2  OUTPLIST,              /* PTRS FOR THE SECURITY EXIT     */ 16900002
*          3  OUTCPDE1 PTR(31),    /* FIRST CLASS PDE ON CHAIN       */ 16950002
*          3  OPRDSPDE PTR(31),    /* ADDR OF THE 'PRINT' PDE        */ 17000002
*          3  ONEWCPDE PTR(31),    /* ADDR OF THE 'NEWCLASS' PDE     */ 17050002
*          3  ODESTPDE PTR(31),    /* ADDR OF THE 'DEST' PDE         */ 17100002
*        2  OUTJBPDE PTR(31),      /* ADDR OF THE 'JOBNAME' PDE      */ 17150002
*        2  OUTCLPDE PTR(31),      /* ADDR OF 1ST 'CLASS' PDE        */ 17200002
*        2  OSVDSPDE PTR(31),      /* ADDR 'SAVE DATASET' PDE        */ 17250002
*        2  EWAPTR    PTR(31),     /* PTR TO ESTAE WORK AREA         */ 17300002
*                                                                       17350002
*        2  IOPLPTR  PTR(31),      /* ADDR OF IOPL                   */ 17400002
*        2  IOPLAREA CHAR(16);     /* IOPL CONTIG. TO OUTCOMTB       */ 17450002
*%GOTO SKIPMSG;                                                         17500002
*        /* M E S S A G E   I D   V A L U E S                        */ 17550002
*%SKIPMSG: ;                                                            17600002
*        %M300A = '0';            /* MODE MSG                       */  17650002
*        %M309I = '106';          /* OPEN FAILED - PRINT/SAVE       */  17700002
*        %M310I = '110';          /* INVALID DSNAME EXCEEDS 44 CHAR */  17750002
*        %M312I = '112';          /* NOT ENOUGH VIRTUAL STORAGE     */  17800002
*        %M312A = '111';          /* NOT ENOUGH VIRTUAL STORAGE     */  17850002
*        %M313I = '113';          /* COMMAND SYSTEM ERROR           */  17900002
*        %M318A = '114';          /* OUTPUT ENDED - B37 ABEND       */  17950002
*        %M318B = '115';          /* HELP ABENDED, CODE IN ECB      */  18000002
*        %M318C = '116';          /* OUTPUT ENDED - 913 ABEND       */  18050002
*        %M318D = '117';          /* OUTPUT ENDED- SYSABEND CODE XX */  18100002
*        %M320A = '120';          /* NO CLASS(CLNAM) OUTPUT FOR         18110000
*                                    JOB                     @ZM30982*/ 18120000
*        %M320I = '118';          /* NO CLASS (CLNAM) OUTPUT FOR        18150000
*                                    JOB(JOBID)              @ZM30982*/ 18170000
*        %M321I = '119';          /* CMD NOT AUTHORIZED             */  18200002
*        %M323I = '128';          /* INVALID SUBCOMMAND             */  18250002
*        %M325I = '122';          /* DSNAME SAVED (SEQUENTIAL)      */  18300002
*        %M325A = '121';          /* DSNAME SAVED (PARTITIONED)     */  18350002
*        %M330I = '126';          /* DSORG OF DSNAME UNACCEPTABLE   */  18400002
*        %M332I = '142';          /* UNKNOWN INSTALLATION EXIT RC   */  18440002
*        %M333I = '143';          /* MISSING REPLY FOR MSG          */  18480002
*        %M339A = '109';          /* NO HELD OUTPUT FOR JOB  @ZM30982*/ 18490000
*        %M339I = '108';          /* NO HELD OUTPUT FOR                 18500000
*                                    JOB(JOBID)              @ZM30982*/ 18510000
*        %M340I = '102';          /* JOB NOT FOUND                  */  18520002
*        %M341I = '145';          /* CMD INVALID CONFLICTING KEYWDS */  18560002
*        %M342A = '103';          /* FIB/SVC MACRO ERROR            */  18650002
*        %M342B = '104';          /* FIB/SVC ERROR                  */  18700002
*        %M343A = '127';          /* NO OUTPUT FOR JOB IN               18710000
*                                    REQ CLASS(ES)           @ZM30982*/ 18720000
*        %M343I = '131';          /* NO OUTPUT FOR JOB(JOBID) IN        18750000
*                                    REQUESTED CLASS(ES)     @ZM30982*/ 18770000
*        %M344I = '132';          /* DS SKIPPED                     */  18800002
*        %M345I = '133';          /* SUBSYS INTERFACE ERROR         */  18850002
*        %M346I = '134';          /* SUBSYS ERROR                   */  18900002
*        %M347I = '135';          /* CMD FAILED SUBSYS NOT ACTIVE   */  18950002
*        %M348I = '136';          /* DUPLICATE JOBNAMES             */  19000002
*        %M349I = '137';          /* JOBNAME/JOBID INVALID          */  19050002
*        %M350I = '129';          /* UNABLE TO PROCESS JOB NOW      */  19100002
*        %M351I = '130';          /* INVALID DEST ID                */  19150002
*        %M353I = '138';          /* UNKNOWN SSOBRETN CODE          */  19200002
*        %M355I = '140';          /* SYNAD MSG ID - PRINT/SAVE DS   */  19220002
*        %M357I = '107';          /* NO MEMBER NAME FOR PO DATASET  */  19250002
*        %M358I = '146';          /* INV SEARCH ARG RC FROM SUBSYS  */  19300002
*        %ATTCHERR = '4';         /* ERROR WHILE ATTACHING 'HELP'   */  19350002
*        %MDYNALC  = '8';         /* DYNALC FAIL MSG NEEDED         */  19390002
*        %MPARSERR = '12';        /* PARSE ERROR                    */  19430002
*        %MDAIRF   = '16';        /* DAIR FAIL MSG NEEDED           */  19470002
*        %CMDSCAN  = '20';        /* COMMAND SCAN FAILURE           */  19510002
*        %MPTGTERR = '24';        /* PUTGET FAILURE                 */  19550002
*        %POINTERR = '28';        /* ERROR RETURN CODE FROM 'POINT' */  19600002
*        %GETERR   = '32';        /* ERROR RC FROM 'GET'            */  19607002
*        %HELPFAIL = '36';        /* HELP MOD FAILED                */  19614002
*        %ESTAERR  = '40';        /* NONZERO RC FROM SVC 60         */  19621002
*        %STAXERR  = '44';        /* ERROR FROM STAX MACRO          */  19628002
*        %STATERR  = '48';        /* ERROR FROM STATUS MACRO        */  19635002
*        %OPENERR  = '52';        /* OPEN FAILURE                   */  19642002
*        %JESM320  = '56';        /* MSG 320 NEEDED          @ZM30982*/ 19644000
*        %JESM339  = '60';        /* MSG 339 NEEDED          @ZM30982*/ 19646000
*        %JESM343  = '64';        /* MSG 443 NEEDED          @ZM30982*/ 19648000
*        %MSECXP   = '123';       /* PUTGET SEC EXIT (GET REPLY)    */  19650002
*        %MSECXM   = '124';       /* PUTLINE SEC EXIT(W/NO REPLY)   */  19700002
./  ADD  SSI=42271042,NAME=IKJPARMA
         MACRO                                                          01000000
         IKJPARMA                                                       02000000
IKJPARMA DSECT                DESCRIPTION OF ADDRESS PDE.               03000000
         SPACE                                                          04000000
PDELDNAM DS    A              POINTER TO LOAD NAME.                     05000000
PDELEN1  DS    H              LENGTH OF LOAD NAME.                      06000000
PDEFLG1  DS    X              FLAGS FOR LOAD NAME.                      07000000
LDNAMFLG EQU   B'10000000'    INDICATES PRESENCE OF LOAD NAME.          08000000
PDERSV1  DS    X              RESERVED.                                 09000000
PDECTNAM DS    A              POINTER TO ENTRY NAME.                    10000000
PDELEN2  DS    H              LENGTH OF ENTRY NAME.                     11000000
PDEFLG2  DS    X              FLAGS FOR ENTRY NAME.                     12000000
CTNAMFLG EQU   B'10000000'    INDICATES PRESENCE OF ENTRY NAME.         13000000
PDERSV2  DS    X              RESERVED.                                 14000000
PDEADRPT DS    A              POINTER TO ADDRESS STRING.                15000000
PDELEN3  DS    H              LENGTH OF ADDRESS STRING.                 16000000
PDEFLG3  DS    X              FLAGS FOR ADDRESS STRING.                 17000000
AFLG     EQU   B'10000000'    INDICATES PRESENCE OF ADDRESS STRING.     18000000
PDERSV3  DS    X              RESERVED.                                 19000000
         SPACE                                                          20000000
PDEFLG4  DS    X              ADDRESS TYPE FLAGS.                       21000000
ABSADDR  EQU   B'00000000'    ABSOLUTE ADDRESS.                         22000000
SYMADDR  EQU   B'10000000'    SYMBOLIC ADDRESS.                         23000000
RELADDR  EQU   B'01000000'    RELATIVE ADDRESS.                         24000000
GENR     EQU   B'00100000'    GENERAL REGISTER.                         25000000
LFPR     EQU   B'00010000'    DOUBLE PREC. FLT. PT. REGISTER.           26000000
SFPR     EQU   B'00001000'    SINGLE PREC. FLT. PT. REGISTER.           27000000
CTONLY   EQU   B'00000100'    ENTRY NM NOT FOLLOWED BY SYM OR REL.      28000000
ABSCOMPL EQU   B'11111111'    COMPLEMENT FOR ABSOLUTE TEST.             29000000
         SPACE                                                          30000000
PDESIGN  DS    C              EXPRESSION SIGN.                          31000000
PDEINDCT DS    H              INDIRECT COUNT.                           32000000
PDEEXPTR DS    A              PTR TO 1ST EXPRESSION PDE.                33000000
PDEFLG5  DS    0X             FLAG BYTE, PDE USER WORD.                 34000000
PURESYM  EQU   B'10000000'    INDICATES PDE USER WORD POINTS TO SIB.    35000000
PDEUSER  DS    A              RESOLVED ADDR OR SIB POINTER.             36000000
PDESIB   EQU   X'80'          INDICATES USER WORD POINTS TO SIB.        37000000
PDECONVD EQU   X'40'          INDICATES ADDRESS IS CONVERTED.           38000000
PDEADLST EQU   X'20'          INDICATES PDE IS ONE OF A LIST.           39000000
PDEYECH  EQU   X'10'          INDICATES PDE IS USELESS.                 40000000
PDEWRITE EQU   X'08'          INDICATES ADDRESS IS WRITABLE.            41000000
         SPACE                                                          42000000
PDECHAIN DS    A              CHAIN PTR FIELD FOR ADDRESS LIST.         43000000
         SPACE                                                          44000000
         ORG   PDECHAIN       IN ADDR RANGE, ADDR2 FOLLOWS ADDR1.       45000000
PDE2LDNA DS    A              POINTER TO LOAD NAME.                     46000000
PDE2LEN1 DS    H              LENGTH OF LOAD NAME.                      47000000
PDE2FLG1 DS    X              FLAGS FOR LOAD NAME.                      48000000
PDE2RSV1 DS    X              RESERVED.                                 49000000
PDE2CTNA DS    A              POINTER TO ENTRY NAME.                    50000000
PDE2LEN2 DS    H              LENGTH OF ENTRY NAME.                     51000000
PDE2FLG2 DS    X              FLAGS FOR ENTRY NAME.                     52000000
PDE2RSV2 DS    X              RESERVED.                                 53000000
PDE2ADRP DS    A              POINTER TO ADDRESS STRING.                54000000
PDE2LEN3 DS    H              LENGTH OF ADDRESS STRING.                 55000000
PDE2FLG3 DS    X              FLAGS FOR ADDRESS STRING.                 56000000
PDE2RSV3 DS    X              RESERVED.                                 57000000
         SPACE                                                          58000000
PDE2FLG4 DS    X              ADDRESS TYPE FLAGS.                       59000000
PDE2SIGN DS    C              EXPRESSION SIGN.                          60000000
PDE2INDC DS    H              INDIRECT COUNT.                           61000000
PDE2EXPT DS    A              PTR TO 1ST EXPRESSION PDE.                62000000
PDE2FLG5 DS    0X             FLAG BYTE, PDE USER WORD.                 63000000
PDE2USER DS    A              RESOLVED ADDR OR SIB POINTER.             64000000
         SPACE                                                          65000000
PDE2CHAI DS    A              CHAIN POINTER FOR ADDR LIST.              66000000
         MEND                                                           67000000
./  ADD  SSI=33330576,NAME=IKJWHEN
 %IKJWHENM:  ;                         /* WHEN WORK AREA MACRO       */ 00080002
 /********************************************************************/ 00160002
 /* THE WHEN WORK AREA IS USED ONLY BY THE WHEN COMMAND. IT CONTAINS */ 00240002
 /* A REGISTER SAVE AREA AND OTHER MISCELLANEOUS INFORMATION USED BY */ 00320002
 /* A WHEN PROCESSORS AND MESSAGE MODULE                             */ 00400002
 /********************************************************************/ 00480002
 %IF WHENBASE='' %THEN                                                  00560002
    %WHENBASE='BASED(WAPTR)';                                           00640002
         DCL  1 IKJWHEN  WHENBASE,                                      00720002
                2 WHPL       CHAR(28), /* GENERAL PARM LIST          */ 00800002
                2 WHPBLOCK   CHAR(20), /* GENERAL PARM BLOCK         */ 00880002
                2 WHPARANS   PTR(31),  /* PTR TO PARSE DESCRIP LIST  */ 00960002
                2 WHATTECB   CHAR(4),  /* SERV RTN ATTN RTN ECB      */ 01040002
                2 WHMSG      PTR(16),  /* MESSAGE OFFSETS            */ 01120002
                  3 WHMSG1    PTR(8),  /* OFFSET FOR MESSAGE MODULE  */ 01200002
                  3 WHMSG2    PTR(8),  /* SECONDARY MESSAGE INDEX    */ 01280002
                2 WHSWI       BIT(8),  /* STATUS BYTE                */ 01360002
                  3 WHEND     BIT(1),  /* END COMMAND IN CONTROL     */ 01440002
                  3 WHRET     BIT(1),  /* SET TMP RET CODE TO ERROR  */ 01520002
                  3 WHBYPASS BIT(1),   /* ON IF NO ERROR MSG SHOULD BE  01600002
                                          ISSUED AT WHEN EXIT TO TMP    01680002
                                                               YM4908*/ 01720002
                2 WHCHAR     CHAR(1),  /* FIRST CHARACTER OF NEXT    */ 01760002
                                       /* COMMAND IN CASE DELIMETER  */ 01840002
                                       /* WAS OMMITTED               */ 01920002
                2 WHENWAS    PTR(31),  /* NOT USED                   */ 02000002
                2 WHRCODE    PTR(31),  /* SERV RTN RETURN CODE       */ 02080002
                2 WHCOMM     PTR(31),  /* POINTER TO COMMAND TO BE   */ 02160002
                                       /* ADDED TO INPUT STACK       */ 02240002
                2 WHCMD      CHAR(8),  /*NAME OF COMMAND FOR         */ 02320002
                                       /* MESSAGE MODULE             */ 02400002
                2 WHGETM     PTR(31),  /* GETMAIN SIZE AND SUBPOOL   */ 02480002
                  3 WHSUBP    PTR(8),  /* SUBPOOL                    */ 02560002
                  3 WHFILL    PTR(8),  /* FILLER                     */ 02640002
                  3 WHLEN     PTR(15), /* LENGTH                     */ 02720002
                2 WHWASIZ    PTR(31);  /* WORK AREA SP AND SIZE      */ 02800002
./  ADD  SSI=22641167,NAME=IKJZBBMB
* DECLARE                                                               00050002
*   1  BBMB BASED(BBMBPTR),                                             00100002
*  /*  THE BACKGROUND PARAMETER BLOCK (BBMB) IS BUILT BY THE         */ 00150002
*  /*  BACKGROUND MONITOR PROGRAM.  IT CONTAINS ADDRESSES OF         */ 00200002
*  /*  BACKGROUND I/O INFORMATION.                                   */ 00300002
*      2  BBMBKGET PTR(31),          /* ADDR OF BKGRD INPUT INFO     */ 00350002
*      2  BBMBKPUT PTR(31),          /* ADDR OF BKGRD OUTPUT INFO    */ 00400002
*      2  BBMBSTAT PTR(31),          /* ADDR OF BKGRD I/O STAT CODES */ 00450002
*      2  BBMBPARM PTR(31);          /* RESERVED FOR FUTURE USE      */ 00500002
./  ADD  SSI=22761872,NAME=IKJZT301
*        %GOTO R1BCBSL;       /* BILINGUAL MAPPING                      00100000
         MACRO                                                          00150000
         IKJZT301  &DSECT=YES                                           00200000
*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01                      00250002
*********************************************************************** 00300000
*********************************************************************** 00350000
*                                                                     * 00400000
*                         SYS1.BRODCAST DATA SET                      * 00450000
*                                RECORD 1                             * 00500000
*                                                                     * 00550000
*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    * 00600000
*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    * 00650000
*        CONCERNING THE DATA SET.                                     * 00700000
*                                           10/1/72    LEVEL=1        * 00750002
*********************************************************************** 00800000
*********************************************************************** 00850000
         AIF   ('&DSECT' EQ 'NO').NODSECT                               00900000
R1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET        00950000
         AGO   .SKIP                                                    01000000
.NODSECT ANOP                                                           01050000
R1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET        01100000
.SKIP    ANOP                                                           01150000
R1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW                     01160000
R1BCFLGS DS    B -            NOTICES FLAGS - NOT USED                  01200000
R1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST     01250000
*                               NOTICES DIRECTORY RECORD                01300000
R1USPTRP DS    0A -           SAME AS R1USPTR BELOW                     01310000
R1USFLGS DS    B -            USER MAIL FLAGS - NOT USED                01350000
R1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD   01400000
R1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS  01450000
R1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -                01500000
*                               FROM MASTER SCHEDULER BASEA, BABCMAX    01550000
*                                                                     * 01600000
R1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =                 01650000
*                               ' SYS1.BRODCAST DATA SET '              01700000
R1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS       01750000
*                               A 1-DIGIT NUMBER                        01800000
         DS    CL84 -         RESERVED                                  01850000
         MEND  , */                                                     01900000
*%R1BCBSL : ;                                                           01950000
* /*     IKJZT301       RELEASE=OS/VS2.2  LEVEL=01                   */ 02000002
*DECLARE                                                                02050000
*  1 R1BC     BASED(R1PTR),              /* RECORD 1 SYS1.BRODCAST DS*/ 02100000
* /*******************************************************************/ 02150000
* /*******************************************************************/ 02200000
* /*                                                                 */ 02250000
* /*                       SYS1.BRODCAST DATA SET                    */ 02300000
* /*                             RECORD 1                            */ 02350000
* /*                                                                 */ 02400000
* /*     THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS   */ 02450000
* /*     POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO   */ 02500000
* /*     CONCERNING THE DATA SET.                                    */ 02550000
* /*                                        10/1/72    LEVEL=1       */ 02600002
* /*******************************************************************/ 02650000
* /*******************************************************************/ 02700000
*   3 R1BCPTRP PTR(31),                  /* SAME AS R1BCPTR BELOW    */ 02710000
*    4 R1BCFLGS BIT(8),                  /* NOTICES FLAGS - NOT USED */ 02750000
*    4 R1BCPTR  PTR(24),                 /* RELATIVE BLOCK ADDR (RBA)   02800000
*                                            FIRST NOTICES DIRECTORY    02850000
*                                            RCD                     */ 02900000
*   3 R1USPTRP PTR(31),                  /* SAME AS R1USPTR BELOW    */ 02910000
*    4 R1USFLGS BIT(8),                  /* USER MAIL FLAGS- NOT USED*/ 02950000
*    4 R1USPTR  PTR(24),                 /* RBA OF FIRST USER MAIL      03000000
*                                            DIRECTORY RECORD        */ 03050000
*   3 R1RECNUM FIXED(31),                /* TOTAL NO. OF RECORDS IN     03100000
*                                            SYS1.BRODCAST DATA SET  */ 03150000
*   3 R1BCMAX  FIXED(15),                /* MAXIMUM BRODCAST MSG NO.-   03200000
*                                            FROM MASTER SCHED BASEA */ 03250000
*   3 R1DSN    CHAR(24),                 /* DATA SET NAME IN EBCDIC =   03300000
*                                          ' SYS1.BRODCAST DATA SET '*/ 03350000
*   3 R1LEVEL  CHAR(7),                  /* LEVEL NO.= 'LEVEL N', WHERE 03400000
*                                           'N' IS A 1-DIGIT NUMBER  */ 03450000
*   3 *        CHAR(84);                 /* RESERVED                 */ 03500000
./  ADD  SSI=30270132,NAME=IKJZT302
*        %GOTO BCDBSL;        /* BILINGUAL MAPPING                      00050000
         MACRO                                                          00100000
         IKJZT302  &DSECT=YES                                           00150002
*        IKJZT302      RELEASE=OS/VS2.2   LEVEL=01                      00200002
*********************************************************************** 00250000
*********************************************************************** 00300000
*                                                                     * 00350000
*                         SYS1.BRODCAST DATA SET                      * 00400000
*                        NOTICES DIRECTORY RECORD                     * 00450000
*                                                                     * 00500000
*        THE BROADCAST NOTICES DIRECTORY RECORD (BCDIR) HAS BROADCAST * 00550000
*        MESSAGE NUMBERS AND A POINTER TO THE MESSAGE RECORD          * 00600000
*        ASSOCIATED WITH EACH MSG. NUMBER.                            * 00650000
*                                                                     * 00650400
*        NOTE: THIS MACRO USES EQUATES GENERATED BY 'IEZBITS' MACRO.  * 00652000
*              THEREFORE, THE IEZBITS MACRO MUST BE CODED             * 00652100
*              PREVIOUS TO CALLING THIS MACRO.                        * 00654000
*                                           10/1/72    LEVEL=1        * 00704002
*********************************************************************** 00750000
*********************************************************************** 00800000
         AIF   ('&DSECT' EQ 'NO').NODSECT                               00810002
BCDIR    DSECT , -                                                      00850000
         AGO   .SKIP                                                    00860002
.NODSECT ANOP                                                           00870002
BCDIR    DS    0F                                                       00880002
.SKIP    ANOP                                                           00890002
BCDNENT  EQU   25             NUMBER OF ENTRIES                         00892002
BCDENTRY DS    0CL5 -         ENTRY FOR 1 BROADCAST MSG NO.             00900000
BCDMFLG  DS    0BL1 -         BROADCAST DIRECTORY MSG. FLAG:            01000000
BCDNOMSG EQU   BIT0                                                     01050000
*                               '1' = NO NOTICES MSG ASSIGNED           01100000
*                                     TO THIS MSG NUMBER                01150000
*                               '0' = NOTICES MSG FOR THIS NUMBER       01200000
*                                     IS ASSIGNED                       01250000
BCDMSGNO DS    FL2 -          BROADCAST NOTICES MSG NO. IN HEX          01260002
BCDMRBA  DS    AL3 -          RELATIVE BLOCK ADDR OF NOTICE MSG RCD     01270002
         DS    24CL5 -        RESERVE SPACE FOR 24 MORE ENTRIES         01300000
*                               IDENTICAL IN FORMAT TO 'BCDENTRY'       01350000
BCDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'           01450000
BCDNEXT  DS    AL3 -          CHAIN PTR TO NEXT NOTICE DIRECTORY RCD    01500002
*                               (ZERO IF LAST)                          01550000
         MEND  , */                                                     01600000
*%BCDBSL : ;                                                            01650000
* /*     IKJZT302       RELEASE=0S/VS2.2  LEVEL=01                   */ 01700002
*DECLARE                                                                01750000
*  1 BCDIR    BASED(BCDPTR),             /* NOTICES DIRECTORY RECORD */ 01800000
* /*******************************************************************/ 01850000
* /*******************************************************************/ 01900000
* /*                                                                 */ 01950000
* /*                      SYS1.BRODCAST DATA SET                     */ 02000000
* /*                     NOTICES DIRECTORY RECORD                    */ 02050000
* /*                                                                 */ 02100000
* /*    THE BROADCAST NOTICES DIRECTORY RECORD (BCDIR) HAS BROADCAST */ 02150000
* /*    MESSAGE NUMBERS AND A POINTER TO THE MESSAGE RECORD          */ 02200000
* /*    ASSOCIATED WITH EACH MSG. NUMBER.                            */ 02250000
* /*                                        10/1/72    LEVEL=1       */ 02300002
* /*******************************************************************/ 02350000
* /*******************************************************************/ 02400000
*    3 BCDENTRY(25) CHAR(5),             /* ENTRY FOR 1 BROADCAST       02450000
*                                            MSG NO.                 */ 02500000
*      5 BCDMSGNO PTR(16) BDY(BYTE),     /* BROADCAST NOTICES MSG NO.   02550000
*                                            IN HEX                  */ 02600000
*        7 BCDNOMSG BIT(1),              /* '1' = NO NOTICES MESSAGE    02650000
*                                                 ASSIGNED TO THIS NO.  02700000
*                                           '0' = NOTICES MSG FOR THIS  02750000
*                                                 NO. IS ASSIGNED    */ 02800000
*      5 BCDMRBA PTR(24) BDY(BYTE),      /* RELATIVE BLOCK ADDR OF      02850000
*                                            NOTICE MSG RCD          */ 02900000
*   3  BCDREND  CHAR(1),                 /* END-OF-RECORD INDICATOR =   02950000
*                                            X'7F'                   */ 03000000
*   3  BCDNEXT  PTR(24) BDY(BYTE);       /* CHAIN PTR TO NEXT NOTICES   03050000
*                                            DIRECTORY RCD (ZERO IF     03100000
*                                            LAST)                   */ 03150000
./  ADD  SSI=22761874,NAME=IKJZT303
*        %GOTO BCMBSL;        /* BILINGUAL MAPPING                      00050000
         MACRO                                                          00100000
         IKJZT303   &DSECT=YES                                          00150000
*        IKJZT303      RELEASE=OS/VS2.2  LEVEL=01                       00200002
*********************************************************************** 00250000
*********************************************************************** 00300000
*                                                                     * 00350000
*                         SYS1.BRODCAST DATA SET                      * 00400000
*                         NOTICES MESSAGE RECORD                      * 00450000
*                                                                     * 00500000
*          THE BRODCAST NOTICES MESSAGE RECORD (BCMSG) IS A           * 00550000
*          RECORD IN THE SYS1.BRODCAST DATA SET WHICH CONTAINS A      * 00600000
*          NOTICES MESSAGE INTENDED FOR ALL USERS.                    * 00650000
*                                           10/1/72     LEVEL=1       * 00700002
*********************************************************************** 00750000
*********************************************************************** 00800000
         AIF   ('&DSECT' EQ 'NO').NODSECT                               00850000
BCMSG    DSECT , -            BRODCAST NOTICES MESSAGE RECORD           00900000
         AGO   .SKIP                                                    00950000
.NODSECT ANOP                                                           01000000
BCMSG    DS    0F -           BRODCAST NOTICES MESSAGE RECORD           01050000
.SKIP    ANOP                                                           01100000
BCMLNG   DS    FL1 -          LENGTH OF BRODCAST NOTICES MSG TEXT       01150000
BCMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)         01200000
         DS    XL3 -          RESERVED                                  01250000
         MEND  , */                                                     01300000
*%BCMBSL : ;                                                            01350000
* /*     IKJZT303       RELEASE=OS/VS2.2  LEVEL=01                   */ 01400002
*DECLARE                                                                01450000
*  1 BCMSG    BASED(BCMPTR),             /* BRODCAST NOTICES MESSAGE    01500000
*                                            RECORD                  */ 01550000
* /*******************************************************************/ 01600000
* /*******************************************************************/ 01650000
* /*                                                                 */ 01700000
* /*                   SYS1.BRODCAST DATA SET                        */ 01750000
* /*                   NOTICES MESSAGE RECORD                        */ 01800000
* /*                                                                 */ 01850000
* /*     THE BRODCAST NOTICES MESSAGE RECORD (BCMSG) IS A            */ 01900000
* /*     RECORD IN THE SYS1.BRODCAST DATA SET WHICH CONTAINS A       */ 01950000
* /*     NOTICES MESSAGE INTENDED FOR ALL USERS.                     */ 02000000
* /*                                        10/1/72     LEVEL=1      */ 02050002
* /*******************************************************************/ 02100000
* /*******************************************************************/ 02150000
*    3 BCMLNG   PTR(8),                  /* LENGTH OF BRODCAST          02200000
*                                            NOTICES MSG TEXT        */ 02250000
*    3 BCMTEXT  CHAR(125),               /* MESSAGE TEXT (PADDED        02300000
*                                            WITH BLANKS)            */ 02350000
*    3 *        CHAR(3);                 /* RESERVED                 */ 02400000
./  ADD  SSI=22771762,NAME=IKJZT304
*        %GOTO USDBSL;        /* BILINGUAL MAPPING                      00050000
         MACRO                                                          00100000
         IKJZT304  &DSECT=YES                                           00150000
*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01                      00200002
*********************************************************************** 00250000
*********************************************************************** 00300000
*                                                                     * 00350000
*                         SYS1.BRODCAST DATA SET                      * 00400000
*                       USER MAIL DIRECTORY RECORD                    * 00450000
*                                                                     * 00500000
*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          * 00550000
*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              * 00600000
*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     * 00650000
*        LAST MESSAGE FOR EACH USERID.                                * 00700000
*                                           10/1/72    LEVEL=1        * 00750002
*********************************************************************** 00800000
*********************************************************************** 00850000
         AIF   ('&DSECT' EQ 'NO').NODSECT                               00900000
USDIR    DSECT , -            USER MAIL DIRECTORY RECORD                00950000
         AGO   .SKIP                                                    01000000
.NODSECT ANOP                                                           01050000
USDIR    DS    0F -           USER MAIL DIRECTORY RECORD                01100000
.SKIP    ANOP                                                           01150000
USDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID              01200000
USDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS) 01250000
USDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST     01300000
*                               MESSAGE FOR THIS USERID (ZERO IF NONE)  01350000
USDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID       01400000
*                               (ZERO IF NONE)                          01450000
         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY        01500000
*                               ENTRIES IDENTICAL IN FORMAT TO THE      01550000
*                               PRECEDING 'USDENTRY'                    01600000
         DS    XL8 -          RESERVED                                  01650000
USDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'           01700000
USDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY     01750000
*                               RECORD (ZERO IF LAST)                   01800000
         MEND  , */                                                     01850000
*%USDBSL : ;                                                            01900000
* /*     IKJZT304       RELEASE=OS/VS2.2  LEVEL=01                   */ 01950002
*DECLARE                                                                02000000
*  1 USDIR    BASED(USDPTR),             /* USER MAIL DIRECTORY RCD  */ 02050000
* /*******************************************************************/ 02100000
* /*******************************************************************/ 02150000
* /*                                                                 */ 02200000
* /*                      SYS1.BRODCAST DATA SET                     */ 02250000
* /*                    USER MAIL DIRECTORY RECORD                   */ 02300000
* /*                                                                 */ 02350000
* /*     THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL         */ 02400000
* /*     DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.             */ 02450000
* /*     THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND    */ 02500000
* /*     LAST MESSAGE FOR EACH USERID.                               */ 02550000
* /*                                        10/1/72    LEVEL=1       */ 02600002
* /*******************************************************************/ 02650000
* /*******************************************************************/ 02700000
*    3 USDENTRY(9) CHAR(13),             /* DIRECTORY ENTRY FOR         02750000
*                                            1 USERID                */ 02800000
*      5 USDID    CHAR(7),               /* USERID (LEFT JUSTIFIED,     02850000
*                                            PADDED WITH BLANKS)     */ 02900000
*      5 USDRBA   PTR(24) BDY(BYTE),     /* RELATIVE BLOCK ADDR (RBA)   02950000
*                                            OF FIRST MESSAGE FOR THIS  03000000
*                                            USERID (ZERO IF NONE)   */ 03050000
*      5 USDEND   PTR(24) BDY(BYTE),     /* RBA OF LAST MSG FOR THIS    03100000
*                                            USERID (ZERO IF NONE)   */ 03150000
*    3 *        CHAR(8),                 /* RESERVED                 */ 03200000
*    3 USDREND  CHAR(1),                 /* END-OF-RECORD INDICATOR =   03250000
*                                            X'7F'                   */ 03300000
*    3 USDNEXT  PTR(24) BDY(BYTE);       /* CHAIN PTR TO NEXT USER MAIL 03350000
*                                            DIRECTORY RECORD (ZERO     03400000
*                                            IF LAST)                */ 03450000
./  ADD  SSI=22761876,NAME=IKJZT305
*        %GOTO USMBSL;        /* BILINGUAL MAPPING                      00050000
         MACRO                                                          00100000
         IKJZT305     &DSECT=YES                                        00150000
*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01                      00200002
*********************************************************************** 00250000
*********************************************************************** 00300000
*                                                                     * 00350000
*                         SYS1.BRODCAST DATA SET                      * 00400000
*                        USER MAIL MESSAGE RECORD                     * 00450000
*                                                                     * 00500000
*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          * 00550000
*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     * 00600000
*        INTENDED FOR A PARTICULAR USERID.                            * 00650000
*                                           10/1/72    LEVEL=1        * 00700002
*********************************************************************** 00750000
*********************************************************************** 00800000
         AIF   ('&DSECT' EQ 'NO').NODSECT                               00810000
USMSG    DSECT , -            USER MAIL MESSAGE RECORD                  00850000
         AGO   .SKIP                                                    00860000
.NODSECT ANOP                                                           00870000
USMSG    DS    0F -           USER MAIL MESSAGE RECORD                  00880000
.SKIP    ANOP                                                           00890000
USMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT                   00900000
USMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)         00950000
USMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD     01000000
*                               FOR THIS USERID (ZERO IF LAST)          01050000
         MEND  , */                                                     01100000
*%USMBSL : ;                                                            01150000
* /*     IKJZT305       RELEASE=OS/VS2.2  LEVEL=01                   */ 01200002
*DECLARE                                                                01250000
*  1 USMSG    BASED(USMPTR),             /* USER MAIL MESSAGE RECORD */ 01300000
* /*******************************************************************/ 01350000
* /*******************************************************************/ 01400000
* /*                                                                 */ 01450000
* /*                      SYS1.BRODCAST DATA SET                     */ 01500000
* /*                     USER MAIL MESSAGE RECORD                    */ 01550000
* /*                                                                 */ 01600000
* /*     THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN         */ 01650000
* /*     THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE    */ 01700000
* /*     INTENDED FOR A PARTICULAR USERID.                           */ 01750000
* /*                                        10/1/72    LEVEL=1       */ 01800002
* /*******************************************************************/ 01850000
* /*******************************************************************/ 01900000
*    3 USMLNG   PTR(8),                  /* LENGTH OF MAIL MSG TEXT  */ 01950000
*    3 USMTEXT  CHAR(125),               /* MESSAGE TEXT (PADDED        02000000
*                                            WITH BLANKS)            */ 02050000
*    3 USMNEXT  PTR(24) BDY(BYTE);       /* CHAIN PTR TO NEXT MAIL      02100000
*                                            MESSAGE RECORD FOR THIS    02150000
*                                            USERID (ZERO IF LAST)   */ 02200000
./  ADD  SSI=63560448,NAME=ILRASMHD
* /* MACMEAN ASMH MEANS AUXILIARY STORAGE MANAGEMENT HEADER          */ 00001040
* /* MACCOMP Y-4SC1CW/PZD81                                          */ 00002040
* /* MACSTAT Y-475078/415304                                         */ 00003040
*/*A-000000-999999                                           @Z40WPWK*/ 00005040
*/********************************************************************/ 00010040
*/*                                                                  */ 00015040
*/*  NAME: ILRASMHD                                                  */ 00020040
*/*                                                                  */ 00025040
*/*  FUNCTION:  AUXILIARY STORAGE MANAGEMENT HEADER                  */ 00030040
*/*                                                                  */ 00035040
*/*  STATUS:  OS/VS2 RELEASE 4.1, LEVEL 0                            */ 00040040
*/*                                                                  */ 00045040
*/*  EXTERNAL REFERENCES:  ASMHDPTR - USER DEFINED POINTER TO ASMHD  */ 00050040
*/*                                                                  */ 00055040
*/*  REGISTERS USED:  N/A                                            */ 00060040
*/*                                                                  */ 00065040
*/*  REGISTERS CLOBBERED: N/A                                        */ 00070040
*/*                                                                  */ 00075040
*/*  NOTES:  THE ASMHD IS USED BY I/O CONTROL TO MANAGE PAGING I/O   */ 00080040
*/*          AND SWAP OPERATIONS FOR EACH PRIVATE ADDRESS SPACE.  VIO*/ 00085040
*/*          CONTROL ALSO USES THE ASMHD TO CONTROL ALL OPERATIONS   */ 00090040
*/*          FOR VIO DATA SETS OWNED BY A PRIVATE ADDRESS SPACE.  AN */ 00095040
*/*          ASMHD EXISTS FOR EACH ACTIVE ADDRESS SPACE.  IT IS BUILT*/ 00100040
*/*          IN SQA AND REFERENCED VIA A POINTER IN THE ASCB.  THE   */ 00105040
*/*          FIELD NAMES ARE PREFIXED WITH ASH BECAUSE THE ASM PREFIX*/ 00110040
*/*          IS ALREADY USED FOR THE ASMVT.                          */ 00115040
*/*                                                                  */ 00120040
*/*  METHOD OF ACCESS:                                               */ 00125040
*/*          PL/S - DECLARE ASMHDPTR PTR                             */ 00130040
*/*                 % INCLUDE SYSLIB(ILRASMHD)                       */ 00131040
*/*                 TO INCLUDE THE ASMHD IN ANOTHER STRUCTURE -      */ 00135840
*/*                 %ASH9999=','                                     */ 00136640
*/*                 %ASHLEVEL='N'                                    */ 00137140
*/*                 WHERE N IS THE NUMBER TO BE USED AS THE          */ 00138240
*/*                 STRUCTURE LEVEL NUMBER.                          */ 00139040
*/*                 THE LENGTH OF THE ASMHD MAY BE OBTAINED BY       */ 00139340
*/*                 REFERENCING THE MACRO VARIABLE ASHLEN.           */ 00139640
*/*          BAL  - DSECT=NO   SHOULD BE SPECIFIED ON THE MACRO CALL */ 00140040
*/*                 TO AVOID CREATING A DSECT.  A USING ON ASMHD WILL*/ 00145040
*/*                 ESTABLISH ADDRESSIBILITY FOR ALL SYMBOLS.        */ 00150040
*/*                                                                  */ 00155040
*/********************************************************************/ 00160040
*           %GOTO   ASHPLS;           /* BILINGUAL HEADER               00165040
            MACRO                                                       00170040
            ILRASMHD    &DUMMY,&DSECT=YES                               00175040
            AIF         ('&DSECT' EQ 'YES').ASMHD01                     00180040
ASMHD       DS          0F            ASMHD CONTROL BLOCK               00185040
            AGO         .ASMHD02      CALL FOR BIT DEFINITION           00190040
.ASMHD01    ANOP                                                        00195040
ASMHD       DSECT       , ASMHDPTR                                      00200040
.ASMHD02    SPACE       2                                               00205040
            IEZBITS     ,                                               00210040
ASHFLAG1    DS          B             I/O CONTROL FLAGS                 00225040
ASHSWPOT    EQU         BIT0          SWAP-OUT FLAG                     00230040
*                                     1 = SWAP-OUT OPERATION IN         00235040
*                                     PROGRESS                          00240040
*                                     0 = NO SWAP-OUT IN PROGRESS       00245040
ASHCAPER    EQU         BIT1          SWAP CAPTURE QUEUE ERROR          00250040
*                                     1 = ONE OR MORE SWAP-OUT CAPTURE  00255040
*                                     AIAS ON SWAP CAPTURE HAS SUFFERED 00260040
*                                     AN I/O ERROR                      00265040
*                                     0 = ALL AIAS ON SWAP CAPTURE      00270040
*                                     QUEUE HAVE COMPLETED SUCCESSFULLY 00275040
ASHPERME    EQU         BIT2          PERMANENT SOFTWARE ERROR FLAG     00280040
*                                     1 = ONE OR MORE SWAP-OUT AIAS     00280640
*                                     ON THE SWAP CAPTURE Q HAS AN      00281240
*                                     UNRESTARTABLE SOFT ERROR          00281840
*                                     0 = ALL AIAS ON THE SWAP          00282440
*                                     CAPTURE Q HAVE NO LOGICAL         00283040
*                                     ERRORS                            00283640
ASHRSV2     EQU         BIT3          RESERVED                          00285040
ASHRSV3     EQU         BIT4          RESERVED                          00290040
ASHRSV4     EQU         BIT5          RESERVED                          00295040
ASHRSV5     EQU         BIT6          RESERVED                          00300040
ASHRSV6     EQU         BIT7          RESERVED                          00305040
ASHFLAG2    DS          B             VIO CONTROL FLAGS                 00310040
ASHSCHED    EQU         BIT0          SRB CONTROLLER SCHEDULED FLAG     00315040
*                                     1 = SRB CONTROLLER HAS BEEN       00320040
*                                     SCHEDULED, BUT NOT DISPATCHED     00325040
*                                     SRB FOR ADDRESS SPACE NOT         00330040
*                                     AVAILABLE                         00335040
*                                     0 = SRB FOR ADDRESS SPACE         00340040
*                                     AVAILABLE                         00345040
ASHRSV13    EQU         BIT1          RESERVED                          00350040
ASHRSV7     EQU         BIT2          RESERVED                          00375040
ASHRSV8     EQU         BIT3          RESERVED                          00380040
ASHRSV9     EQU         BIT4          RESERVED                          00385040
ASHRSV10    EQU         BIT5          RESERVED                          00390040
ASHRSV11    EQU         BIT6          RESERVED                          00395040
ASHRSV12    EQU         BIT7          RESERVED                          00400040
ASHSWPCT    DS          H             COUNT OF STARTED BUT NOT COMPLETE 00405040
*                                     LSQA SWAP-OUT AIAS                00410040
ASHBKSLT    DS          F             NUMBER OF AUXILIARY STORAGE SLOTS 00411040
*                                     RESERVED FOR THIS ADDRESS SPACE   00412040
ASHIOCNT    DS          F             COUNT OF PRIVATE AREA AIA I/O     00415040
*                                     REQUEST STARTED BUT NOT COMPLETE  00420040
ASHSWAPQ    DS          A             SWAP QUEUE FOR AIAS, THIS QUEUE   00425040
*                                     IS A HOLD QUEUE FOR LSQA AIAS     00430040
*                                     DURING SWAP-OUT PROCESSING OF     00431040
*                                     NON-LSQA I/O.                     00432040
ASHCAPQ     DS          A             SWAP CAPTURE QUEUE USED TO        00435040
*                                     COLLECT I/O COMPLETE AIAS         00436040
*                                     DURING LSQA SWAP-OUT              00437040
*                                     PROCESSING                        00438040
ASHLOCK     DS          F             LOCK WORD FOR ASM CLASS LOCK,     00465040
*                                     USED BY VIO CONTROL PROCESSING    00470040
ASHVSRBP    DS          A             ADDRESS OF SRB USED BY VIO        00475040
*                                     CONTROL TO DISPATCH THE SRB       00480040
*                                     CONTROLLER. THIS POINTER IS ZERO  00485040
*                                     IF NO VIO DATA SETS HAVE EVER     00490040
*                                     BEEN USED BY THE ADDRESS SPACE.   00495040
*                                     ONCE CREATED, THE SRB IS NOT      00500040
*                                     FREED UNTIL ADDRESS SPACE         00505040
*                                     TERMINATION                       00510040
ASHLGEQ     DS          A             ADDRESS OF FIRST LGE IN QUEUE     00515040
*                                     OF LGES FOR VIO DATA SETS         00520040
            MEND                                                        00530040
*           */                                                          00535040
*%ASHPLS:;                            /* PLS COMPILE TIME TARGET     */ 00540040
*       %IF ASH9999 ¬= ','            /* IF THIS IS LAST BLOCK       */ 00540840
*          %THEN ASH9999 = ';';       /* THEN CLOSE DCL STATEMENT    */ 00541640
*       %IF ASHLEVEL ¬= ''            /* IF THIS IS CONCATENATED     */ 00542440
*          %THEN %GOTO ASHPLS1;       /* THEN SKIP DCL STATEMENT     */ 00543240
*DECLARE                                                                00545040
*  1 ASMHD BASED(ASMHDPTR) BDY(WORD), /* ASM HEADER                  */ 00550040
*          %GOTO ASHPLS2;             /* SKIP LEVEL 2 DECLARE        */ 00551040
*%ASHPLS1:                                                              00552040
*     ASHNUM = ASHLEVEL || ' ASMHD BDY(WORD),'; /* SET MINOR LEVEL   */ 00553040
*     ASHNUM                          /* STRUCTURE                   */ 00554040
*%ASHPLS2:;                                                             00555040
*    4 ASHFLAG1 BIT(8),               /* I/O CONTROL FLAGS           */ 00565040
*      6 ASHSWPOT BIT(1),             /* SWAP-OUT FLAG                  00568040
*                                        1 = SWAP-OUT OPERATION IN      00575040
*                                        PROGRESS                       00580040
*                                        0 = NO SWAP-OUT IN PROGRESS */ 00585040
*      6 ASHCAPER BIT(1),             /* SWAP CAPTURE QUEUE ERROR       00590040
*                                        1 = ONE OR MORE SWAP-OUT AIAS  00595040
*                                        ON SWAP CAPTURE QUEUE HAS      00600040
*                                        SUFFERED AN I/O ERROR          00605040
*                                        0 = ALL AIAS ON SWAP CAPTURE   00610040
*                                        QUEUE HAVE COMPLETED           00615040
*                                        SUCCESSFULLY                */ 00620040
*      6 ASHPERME BIT(1),             /* PERMANENT SOFTWARE ERROR FLAG  00625040
*                                        1 = ONE OR MORE SWAP-OUT AIAS  00625540
*                                        ON THE SWAP CAPTURE Q HAS AN   00626040
*                                        UNRESTARTABLE SOFT ERROR       00626540
*                                        0 = ALL AIAS ON THE SWAP       00627040
*                                        CAPTURE Q HAVE NO LOGICAL      00627540
*                                        ERRORS                      */ 00628040
*      6 ASHRSV2 BIT(1),              /* RESERVED                    */ 00629040
*      6 ASHRSV3 BIT(1),              /* RESERVED                    */ 00633040
*      6 ASHRSV4 BIT(1),              /* RESERVED                    */ 00637040
*      6 ASHRSV5 BIT(1),              /* RESERVED                    */ 00641040
*      6 ASHRSV6 BIT(1),              /* RESERVED                    */ 00645040
*    4 ASHFLAG2 BIT(8),               /* VIO CONTROL FLAGS           */ 00649040
*      6 ASHSCHED BIT(1),             /* SRB CONTROLLER SCHEDULED FLAG  00653040
*                                        1 = SRB CONTROLLER HAS BEEN    00665040
*                                        SCHEDULED, BUT NOT DISPATCHED  00670040
*                                        SRB FOR ADDRESS SPACE NOT      00675040
*                                        AVAILABLE                      00680040
*                                        0 = SRB FOR ADDRESS SPACE      00685040
*                                        AVAILABLE                   */ 00690040
*      6 ASHRSV13 BIT(1),             /* RESERVED                    */ 00695040
*      6 ASHRSV7 BIT(1),              /* RESERVED                    */ 00725040
*      6 ASHRSV8 BIT(1),              /* RESERVED                    */ 00729040
*      6 ASHRSV9 BIT(1),              /* RESERVED                    */ 00733040
*      6 ASHRSV10 BIT(1),             /* RESERVED                    */ 00737040
*      6 ASHRSV11 BIT(1),             /* RESERVED                    */ 00741040
*      6 ASHRSV12 BIT(1),             /* RESERVED                    */ 00745040
*    4 ASHSWPCT FIXED(15),            /* COUNT OF STARTED BUT NOT       00749040
*                                        COMPLETE LSQA SWAP-OUT AIAS */ 00760040
*    4 ASHBKSLT FIXED(31),            /* NUMBER OF AUXILIARY STORAGE    00761040
*                                        SLOTS RESERVED FOR THIS        00762040
*                                        ADDRESS SPACE               */ 00763040
*    4 ASHIOCNT FIXED(31),            /* COUNT OF PRIVATE AREA AIA I/O  00765040
*                                        REQUEST STARTED BUT NOT        00770040
*                                        COMPLETE                    */ 00775040
*    4 ASHSWAPQ PTR(31),              /* SWAP QUEUE FOR AIAS, THIS      00780040
*                                        QUEUE IS A HOLD QUEUE FOR      00780840
*                                        LSQA AIAS DURING SWAP-OUT      00781640
*                                        PROCESSING OF NON-LSQA I/O  */ 00782440
*    4 ASHCAPQ PTR(31),               /* SWAP CAPTURE QUEUE USED TO     00783240
*                                        COLLECT I/O COMPLETE AIAS      00785040
*                                        DURING LSQA SWAP-OUT           00786040
*                                        PROCESSING                  */ 00787040
*    4 ASHLOCK FIXED(31),             /* LOCK WORD FOR ASM CLASS LOCK,  00820040
*                                        USED BY VIO CONTROL            00825040
*                                        PROCESSING                  */ 00830040
*    4 ASHVSRBP PTR(31),              /* ADDRESS OF SRB USED BY VIO     00835040
*                                        CONTROL TO DISPATCH THE SRB    00840040
*                                        CONTROLLER. THIS POINTER IS    00845040
*                                        ZERO IF NO VIO DATA SETS HAVE  00850040
*                                        EVER BEEN USED BY THE ADDRESS  00855040
*                                        SPACE. ONCE CREATED, THE SRB   00860040
*                                        IS NOT FREED UNTIL ADDRESS     00865040
*                                        SPACE TERMINATION           */ 00870040
*    4 ASHLGEQ PTR(31) ASH9999        /* ADDRESS OF FIRST LGE IN QUEUE  00875040
*                                        OF LGES FOR VIO DATA SETS   */ 00880040
*    %ASHLEN = 'LENGTH(ASMHD)';       /* OBTAIN LENGTH OF ASMHD      */ 00930040
./  ADD  SSI=72720034,NAME=ILRASMVT
* /* MACMEAN ASMVT MEANS ASM VECTOR TABLE                            */ 00010040
* /* MACCOMP Y-4SC1CW/PZD81                                          */ 00020040
* /* MACSTAT Y-475073/415304                                         */ 00030040
* /*A-000000-999999                                          @Z40WPWJ*/ 00040040
* /*******************************************************************/ 00050040
* /*                                                                 */ 00058040
* /*  NAME:  ILRASMVT                                                */ 00066040
* /*                                                                 */ 00074040
* /*  FUNCTION:  AUXILIARY STORAGE MANAGEMENT VECTOR TABLE           */ 00082040
* /*                                                                 */ 00100040
* /*  STATUS:  OS/VS2 RELEASE 4.1                                    */ 00107040
* /*                                                                 */ 00114040
* /*  EXTERNAL REFERENCES:  ASMVTPTR - USER DEFINED POINTER TO ASMVT */ 00130040
* /*                                                                 */ 00136040
* /*  REGISTERS USED:  N/A                                           */ 00150040
* /*                                                                 */ 00158040
* /*  REGISTERS CLOBBERED:  N/A                                      */ 00166040
* /*                                                                 */ 00174040
* /*  NOTES:  THE ASMVT PROVIDES A MEANS OF COMMUNICATION WITHIN ASM.*/ 00182040
* /*          THE ASMVT CONTAINS ALL GLOBAL COUNTS, POINTERS, ENTRY  */ 00200040
* /*          POINT ADDRESSES, AND WORK/SAVE AREAS USED BY RSM       */ 00208040
* /*          ROUTINES.  THE ASMVT IS POINTED TO BY THE CVT FIELD    */ 00216040
* /*          CVTASMVT.                                              */ 00224040
* /*                                                                 */ 00232040
* /*          THE ASMVT IS DIVIDED INTO SECTIONS RELATING TO THE     */ 00250040
* /*          DIFFERENT FUNCTIONAL AREAS OF ASM.  THE ENTRY POINT    */ 00258040
* /*          ADDRESSES, WORK/SAVE AREAS, AND CELLPOOL CONTROLLERS   */ 00266040
* /*          FOLLOW THE FUNCTIONAL SECTIONS.                        */ 00274040
* /*                                                                 */ 00282040
* /*  METHOD OF ACCESS:                                              */ 00300040
* /*          BAL - DSECT=NO SHOULD BE SPECIFIED ON THE MACRO CALL   */ 00308040
* /*                TO AVOID CREATING A DSECT.  A USING ON ASMVT     */ 00316040
* /*                WILL ESTABLISH ADDRESSABILITY FOR ALL SYMBOLS.   */ 00324040
* /*          PLS - DCL ASMVTPTR PTR(31)                             */ 00340040
* /*                %INCLUDE SYSLIB(ILRASMVT)                        */ 00344040
* /*                                                                 */ 00358040
* /*******************************************************************/ 00366040
*           %GOTO ASMVTPLS;         /* BILINGUAL HEADER                 00374040
            MACRO                                                       00382040
            ILRASMVT    &DSECT=YES                                      00400040
            AIF         ('&DSECT' EQ 'YES').ASMVT01                     00408040
ASMVT       DS          0D          ASMVT CONTROL BLOCK                 00416040
            AGO         .ASMVT02                                        00424040
.ASMVT01    ANOP                                                        00432040
ASMVT       DSECT                                                       00450040
.ASMVT02    ANOP                                                        00458040
            IEZBITS                                                     00466040
ASMFLAG1    DC          XL1'00'     ASM GLOBAL FLAG FIELD 1             00474040
ASMDUPLX    EQU         BIT0        DUPLEXING OPTION FLAG,              00482040
*                                   1 = DUPLEXING OF COMMON REQUESTED   00500040
*                                   DUPLEX PAGE DATA SET OPENED BY RIM, 00508040
*                                   0 = DUPLEXING NOT REQUESTED, NO     00516040
*                                   DUPLEX DATA SET OPENED BY RIM, OR   00524040
*                                   DUPLEXING SUSPENDED IF DUPLEXING    00532040
*                                   SUSPENDED FLAG IS ON                00550040
ASMNOCWQ    EQU         BIT1        NO COMMON WRITE QUEUE FLAG,         00558040
*                                   1 = DO NOT QUEUE WRITE IOE'S TO     00566040
*                                   COMMON WRITE QUEUE,                 00574040
*                                   0 = DO NORMAL IOE QUEUING           00582040
ASMNOLCL    EQU         BIT2        NO LOCAL DATA PAGING FLAG,          00600040
*                                   1 = ALL WRITE IOE'S MUST BE QUEUED  00608040
*                                   TO  COMMON WRITE QUEUE,             00616040
*                                   0 = QUEUE IOE'S NORMALLY            00624040
ASMRSV1     EQU         BIT3        RESERVED                            00632040
ASMNODPX    EQU         BIT4        DUPLEXING SUSPENDED FLAG,           00639040
*                                   1 = DUPLEXING HAS BEEN SUSPENDED    00646040
*                                   BECAUSE THE DUPLEX PAGE DATA SET IS 00653040
*                                   FULL OR INOPERATIVE,                00660040
*                                   0 = DUPLEXING STILL ACTIVE IF       00682040
*                                   REQUESTED                           00700040
ASMPLPAF    EQU         BIT5        PLPA DATA SET FULL FLAG,            00708040
*                                   1 = PLPA DATA SET FULL,             00716040
*                                   0 = PLPA DATA SET NOT FULL          00724040
ASMCOMMF    EQU         BIT6        COMMON DATA SET FULL FLAG,          00732040
*                                   1 = COMMON DATA SET FULL,           00750040
*                                   0 = COMMON DATA SET NOT FULL        00758040
ASMPLPAS    EQU         BIT7        PLPA DATA SET SPILL FLAG,           00766040
*                                   1 = PLPA DATA SET SPILLED TO        00774040
*                                   COMMON DATA SET DURING PLPA BUILD   00782040
*                                   AT NIP TIME,                        00800040
*                                   0 = PLPA DATA SET NOT FULL AFTER    00808040
*                                   PLPA BUILD                          00816040
ASMFLAG2    DC          XL1'00'     ASM GLOBAL FLAG FIELD 2             00824040
ASMCALLQ    EQU         BIT0        QIOE CALLER FLAG,                   00832040
*                                   1 = PAGE COMPLETION IS THE CALLER   00850040
*                                   OF QIOE,                            00858040
*                                   0 = QIOE CALLED BY SOME OTHER ASM   00866040
*                                   ROUTINE                             00874040
ASMNOSAV    EQU         BIT1        NO SAVE FLAG,                       00882040
*                                   1 = SYS1.STGINDEX UNAVAILABLE OR    00900040
*                                   FULL, SAVE REQUESTS NOT DONE,       00908040
*                                   0 = SYS1.STGINDEX AVAILABLE FOR USE 00916040
ASMNOTMR    EQU         BIT2        NO TASK MODE RELEASE FLAG,          00924040
*                                   1 = TASK MODE RELEASE (ILRTMRLG)    00932040
*                                   HAS SUFFERED INDETERMINATE ERRORS,  00950040
*                                   DO NOT POST ITS ECB,                00958040
*                                   0 = ILRTMRLG RUNNING NORMALLY       00966040
ASMNOTPT    EQU         BIT3        NO TPARTABLE FLAG,                  00974040
*                                   1 = A READ OR WRITE OF TPARTABLE    00982040
*                                   HAS FAILED, IT IS NOT UP TO DATE,   01000040
*                                   0 = TPARTABLE AVAILABLE AND CORRECT 01008040
ASMQUICK    EQU         BIT4        QUICK START IPL FLAG,               01016040
*                                   1 = ASM INITIALIZATION PROCESSED    01024040
*                                   PLPA IN QUICK START MODE (NOT       01032040
*                                   CLPA),                              01050040
*                                   0 = ASM INITIALIZATION PROCESSED    01058040
*                                   PLPA IN COLD START MODE (CLPA), OR  01066040
*                                   WAS FORCED TO CONVERT TO COLD       01074040
*                                   START MODE                          01082040
ASMWARM     EQU         BIT5        WARM START IPL FLAG,                01100040
*                                   1 = ASM INITIALIZATION PROCESSED    01108040
*                                   VIO DATA SETS IN WARM START MODE    01116040
*                                   (NOT CVIO),                         01124040
*                                   0 = ASM INITIALIZATION PROCESSED    01132040
*                                   VIO DATA SETS IN CVIO MODE, OR      01150040
*                                   WAS FORCED TO CONVERT A WARM        01158040
*                                   START REQUEST TO CVIO               01166040
ASMDSSFS    DC          XL2'00'     IF NOT ZERO, FIRST SLOT NUMBER OF   01170040
*                                   DSS RESERVED AREA ON PLPA PAGE      01174040
*                                   DATASET                   @ZA14260  01176040
ASMSART     DC          A(0)        ADDRESS OF SWAP ACTIVITY REFERENCE  01182040
*                                   TABLE - SART                        01200040
ASMPART     DC          A(0)        ADDRESS OF PAGING ACTIVITY          01208040
*                                   REFERENCE TABLE - PART              01216040
ASMGOS      DC          V(ILRGOS)   ADDRESS OF ILRGOS, USED BY ILRCALL  01224040
*                                   MACRO                               01232040
ASMTRPAG    DC          V(ILRTRPAG) ADDRESS OF ILRTRPAG, ENTRY POINT    01250040
*                                   IN ILRPOS, USED BY ILRCALL MACRO    01258040
ASMEREC     DC          A(0)        ADDRESS OF BAD SLOT ERROR RECORD    01266040
*                                   MAINTAINED BY ILRCMP                01274040
ASMMSGBF    DC          A(0)        ADDRESS OF MESSAGE BUFFER USED BY   01282040
*                                   ASM MESSAGE ROUTINE                 01300040
ASMRSV5     DC          XL4'00'     RESERVED                            01308040
*                                                                       01316040
*  THE FOLLOWING SECTION OF THE ASMVT IS USED PRIMARILY BY THE I/O      01324040
*  CONTROL MODULES OF ASM.                                              01332040
*                                                                       01350040
ASMSTAGQ    DS          0D          I/O STAGING QUEUE CONTAINING AIA'S  01358040
*                                   WAITING FOR AVAILABLE IOE'S         01366040
ASMSTAGF    DC          A(0)        ADDRESS OF FIRST AIA ON STAGING     01374040
*                                   QUEUE                               01382040
ASMSTAGL    DC          A(0)        ADDRESS OF LAST AIA ON STAGING      01400040
*                                   QUEUE                               01407040
ASMIORQR    DC          F'0'        COUNT OF I/O REQUESTS (AIA'S)       01414040
*                                   RECEIVED BY I/O CONTROL, THIS DOES  01430040
*                                   NOT INCLUDE LSQA SWAP AIA'S         01436040
ASMIORQC    DC          F'0'        COUNT OF I/O REQUESTS (AIA'S)       01450040
*                                   COMPLETED AND RETURNED TO RSM       01457040
ASMRSV6     DC          XL16'00'    RESERVED                            01464040
*                                                                       01480040
*  THE FOLLOWING SECTION OF THE ASMVT IS USED PRIMARILY BY THE I/0      01486040
*  SUBSYSTEM MODULES OF ASM.                                            01500040
*                                                                       01507040
ASMPCCWQ    DS          0D          QUEUE OF AVAILABLE PCCW'S FOR SLOT  01514040
*                                   SORT, THIS QUEUE IS MAINTAINED BY   01530040
*                                   COMPARE AND SWAP LOGIC WHICH MAKES  01536040
*                                   THE SYNCHRONIZATION COUNT NECESSARY 01550040
ASMPCCWA    DC          A(0)        ADDRESS OF FIRST AVAILABLE PCCW     01556040
ASMPCCWC    DC          F'0'        SYNCHRONIZATION COUNT, DECREMENTED  01562040
*                                   WHEN REMOVING PCCW'S, UNCHANGED     01574040
*                                   WHEN ADDING PCCW'S                  01582040
ASMPCCWN    DC          F'0'        NUMBER OF PCCW'S BUILT BY RIM       01600040
ASMBURST    DC          F'0'        LENGTH OF SERVICE BURST FOR PAGE    01606040
*                                   DATA SETS (IN MICROSECONDS)         01612040
ASMIOCNT    DC          F'0'        COUNT OF STARTIO REQUESTS MADE TO   01624040
*                                   IOS THAT HAVE NOT COMPLETED         01632040
ASMSRBCT    DC          F'0'        NUMBER OF SRB'S SCHEDULED FOR THE   01650040
*                                   I/O SUBSYSTEM THAT HAVE NOT BEEN    01658040
*                                   DISPATCHED, THIS COUNT SHOULD BE    01666040
*                                   EITHER 0 OR 1, IT IS MAINTAINED BY  01674040
*                                   COMPARE AND SWAP LOGIC              01682040
ASMPSRB     DC          A(0)        ADDRESS OF SRB USED TO SCHEDULE THE 01700040
*                                   I/O SUBSYSTEM                       01708040
ASMRSV7     DC          XL16'00'    RESERVED                            01716040
*                                                                       01724040
*  THE FOLLOWING SECTION OF THE ASMVT IS USED FOR PAGE DATA SET SLOT    01732040
*  ACCOUNTING.                                                          01750040
*                                                                       01758040
ASMBKSLT    DC          F'0'        COUNT OF UNRESERVED LOCAL SLOTS,    01766040
*                                   THIS COUNT IS DECREMENTED AND       01774040
*                                   INCREMENTED FOR EACH ADDRESS SPACE  01782040
*                                   OR VIO LG CREATED OR DELETED        01800040
ASMSLOTS    DC          F'0'        COUNT OF TOTAL LOCAL SLOTS IN ALL   01802040
*                                   OPEN LOCAL PAGE DATA SETS           01804040
ASMVSC      DC          F'0'        COUNT OF TOTAL LOCAL SLOTS          01806040
*                                   ALLOCATED TO VIO PRIVATE AREA       01808040
*                                   PAGES                               01850040
ASMNVSC     DC          F'0'        COUNT OF TOTAL LOCAL SLOTS          01858040
*                                   ALLOCATED TO NON-VIO PRIVATE AREA   01866040
*                                   PAGES                               01874040
ASMERRS     DC          F'0'        COUNT OF BAD SLOTS FOUND ON LOCAL   01882040
*                                   DATA SETS DURING NORMAL OPERATIONS  01900040
*                                                                       01907040
*  THE FOLLOWING SECTION OF THE ASMVT IS USED PRIMARILY BY THE VIO      01914040
*  CONTROLLER AND THE GROUP OPERATOR MODULES.                           01930040
*                                                                       01936040
ASMSLOTV    DC          V(ILRSLOTV) ADDRESS OF THE SLOTV CONSTANT       01950040
ASMLGVT     DC          A(0)        ADDRESS OF THE LOGICAL GROUP        01958040
*                                   VECTOR TABLE                        01966040
ASMSTGXA    DC          A(0)        ADDRESS OF THE ACB FOR              01974040
*                                   SYS1.STGINDEX                       01982040
ASMCINV     DC          F'0'        NUMBER OF CONTROL INTERVALS IN      02000040
*                                   SYS1.STGINDEX                       02006040
ASMLSAI     DS          0D          ASM STORAGE LOCATOR 'S' SYMBOL      02012040
*                                   GENERATOR, LAST 'S' SYMBOL          02030040
*                                   ASSIGNED                            02034040
ASMLSAIL    DC          F'0'        LOW WORD OF 'S' SYMBOL GENERATOR    02050040
ASMLSAIH    DC          F'0'        HIGH WORD OF 'S' SYMBOL GENERATOR   02054040
ASMGOSQS    DS          0D          DOUBLEWORD REFERENCE FOR GOS WORK   02070040
*                                   QUEUES                              02077040
ASMGOSWT    DC          F'0'        QUEUE OF ELEMENTS FOR ACE'S         02084040
*                                   WAITING FOR VSAM BUFFER TO BECOME   02100040
*                                   AVAILABLE, USED BY ILRGOS           02107040
ASMGOSWK    DC          F'0'        FIFO WORK QUEUE OF ELEMENTS FOR     02114040
*                                   ACE'S, USED BY ILRGOS TO START      02121040
*                                   OPERATIONS WAITING FOR VSAM         02128040
*                                   BUFFERS                             02150040
ASMREQCT    DC          F'0'        NUMBER OF SIMULTANEOUS REQUESTS     02158040
*                                   THAT CAN BE MADE TO VSAM, THIS      02166040
*                                   NUMBER (MINUS ONE FOR ILRTMRLG'S    02174040
*                                   USE) CORRESPONDS TO THE STRING      02182040
*                                   NUMBER PARAMETER ON THE OPEN FOR    02200040
*                                   SYS1.STGINDEX                       02208040
ASMTCBPT    DC          A(0)        ADDRESS OF ASM TCB                  02216040
ASMTMECB    DC          F'0'        ECB USED BY ILRTMRLG TO WAIT FOR    02224040
*                                   WORK, THIS ECB IS POSTED BY         02232040
*                                   ILRRLG                              02250040
ASMRLGRQ    DC          F'0'        REQUEST QUEUE FOR ILRTMRLG          02258040
*                                   CONSISTING OF ACE'S QUEUED BY       02266040
*                                   ILRRLG, QUEUE IS SERIALIZED BY      02274040
*                                   COMPARE AND SWAP LOGIC              02282040
ASMRLGWQ    DC          F'0'        WORK QUEUE FOR ILRTMRLG TO HOLD     02300040
*                                   ACE'S MOVED FROM REQUEST QUEUES     02308040
ASMTASCB    DC          F'0'        ADDRESS OF ASCB FOR ADDRESS SPACE   02316040
*                                   IN WHICH ILRTMRLG IS RUNNING        02324040
ASMVSAMW    DC          F'0'        QUEUE OF ELEMENTS FOR ACES          02325040
*                                   WAITING FOR A PARTICULAR RECORD     02326040
*                                   ON SYS1.STGINDEX TO BECOME          02327040
*                                   AVAILBLE, USED BY ILRVSAMI @ZA15367 02328040
ASMRSV8     DC          XL4'00'     RESERVED                            02329040
*                                                                       02350040
*  THE FOLLOWING SECTION OF THE ASMVT CONTAINS ENTRY POINT ADDRESSES    02358040
*  OF THOSE ASM ROUTINES OR SUBROUTINES THAT ARE CALLED BY MORE THAN    02366040
*  ONE MODULE, OR THAT RESIDE IN LPA.  LPA ROUTINE ENTRY POINTS ARE     02374040
*  DETERMINED AT TASK MODULE INITIALIZATION.                            02382040
*                                                                       02394040
ASMPQIOE    DC          V(ILRQIOE)  ADDRESS OF ILRQIOE, SUBROUTINE OF   02410040
*                                   ILRPAGIO                            02411040
ASMPFRSL    DC          V(ILRFRSL1) ADDRESS OF ILRFRSL1, FREESLOT       02425040
*                                   ENTRY POINT OF ILRFRSLT             02434040
ASMPFRSW    DC          V(ILRFRSW1) ADDRESS OF ILRFRSW1, FREESWAP       02443040
*                                   ENTRY POINT OF ILRFRSLT             02452040
ASMPTM      DC          V(ILRPTM)   ADDRESS OF ILRPTM                   02470040
ASMPSWPD    DC          V(ILRSWPDR) ADDRESS OF ILRSWPDR                 02479040
ASMPSRMT    DC          V(ILRPSRMT) ADDRESS OF ILRPSRMT, PART MONITOR   02486040
*                                   AND SWAP DRIVER RMTR                02500040
ASMPSRBC    DC          V(ILRSRBC)  ADDRESS OF ILRSRBC                  02508040
ASMVRMTR    DC          V(ILRSRBRM) ADDRESS OF ILRSRBRM, ENTRY POINT    02516040
*                                   OF ILRSRBC FOR VIO RMTR             02524040
ASMPEX      DC          V(ILRPEX)   ADDRESS OF ILRPEX                   02532040
ASMPCMPD    DC          V(ILRCMPDI) ADDRESS OF ILRCMPDI, ENTRY POINT    02550040
*                                   OF ILRCMP.            @ZA25907      02552040
ASMPCMPN    DC          V(ILRCMPNE) ADDRESS OF ILRCMPNE, ENTRY POINT    02616040
*                                   OF ILRCMP                           02624040
ASMPCMPA    DC          V(ILRCMPAE) ADDRESS OF ILRCMPAE, ENTRY POINT    02632040
*                                   OF ILRCMP                           02650040
ASMPCMP     DC          V(ILRCMP)   ADDRESS OF ILRCMP                   02658040
ASMPSAV     DC          A(0)        ADDRESS OF ILRSAV                   02666040
ASMPACT     DC          A(0)        ADDRESS OF ILRACT                   02680040
ASMPRLG     DC          A(0)        ADDRESS OF ILRRLG                   02686040
ASMPFRLG    DC          V(ILRFRELG) ADDRESS OF ILRFRELG, ENTRY POINT    02700040
*                                   OF ILRGOS                           02708040
ASMPMSG0    DC          V(ILRMSG00) ADDRESS OF ILRMSG00                 02716040
ASMPMSGS    DC          V(ILRMSGSP) ADDRESS OF ILRMSGSP, ENTRY POINT    02724040
*                                   OF ILRMSG00                         02732040
ASMPVACQ    DC          V(ILRVACQ2) ADDRESS OF ILRVACQ2, ENTRY POINT    02750040
*                                   OF ILRFRR01                         02758040
ASMPIOFR    DC          V(ILRIOFRR) ADDRESS OF ILRIOFRR, I/O CONTROL    02766040
*                                   RECOVERY ROUTINE                    02774040
ASMPVACE    DC          V(ILRVACE)  ADDRESS OF ILRVACE, ENTRY POINT     02782040
*                                   OF ILRFRR01                         02800040
ASMRSV10    DC          XL16'00'    RESERVED                            02808040
*                                                                       02816040
*  THE FOLLOWING SECTION OF THE ASMVT CONTAINS THE POOL CONTROLLERS     02824040
*  THAT ARE USED BY THE GMA MACRO TO OBTAIN AND RELEASE CELLS FOR       02832040
*  THOSE ROUTINES REQUIRING ONE OF THESE CONTROL BLOCKS.  THE POOL      02850040
*  CONTROLLER MAPPING APPEARS AT THE END OF THE ASMVT.                  02858040
*                                                                       02866040
ASMIOEPC    DC          XL16'00'    IOE POOL CONTROLLER                 02874040
ASMBWKPC    DC          XL16'00'    256 BYTE WORKAREA POOL CONTROLLER   02882040
ASMSWKPC    DC          XL16'00'    512 BYTE WORKAREA POOL CONTROLLER,  02900040
*                                   USED EXCLUSIVELY BY ILRVSAMI        02908040
ASMACEPC    DC          XL24'00'    ACE POOL CONTROLLER                 02916040
*                                                                       02924040
*  THE FOLLOWING SECTION OF THE ASMVT CONTAINS WORK-SAVE AREAS USED BY  02932040
*  THE ASM ROUTINES THAT RUN WITH THE SALLOC LOCK.                      02950040
*                                                                       02958040
ASMWKSA1    DC          XL80'00'    USED BY ILRPAGIO                    02966040
ASMWKSA2    DC          XL80'00'    USED BY ILRQIOE, SUBROUTINE OF      02974040
*                                   ILRPAGIO                            02982040
ASMWKSA3    DC          XL80'00'    USED BY ILRPAGCM                    03000040
ASMWKSA4    DC          XL80'00'    USED BY ILRSWAP                     03007040
ASMWKSA5    DC          XL80'00'    USED BY ILRSLSQA, SUBROUTINE OF     03014040
*                                   ILRSWAP                             03030040
ASMWKSA6    DC          XL80'00'    USED BY ILRPOS AND ILRVIOCM         03036040
ASMWKSA7    DC          XL80'00'    USED BY ILRPEX AND ILRMSG00         03050040
ASMSAVE     DC          XL72'00'    STANDARD REGISTER SAVE AREA USED    03058040
*                                   BY ASM WHEN CALLING OTHER ROUTINES  03066040
ASMRSV12    DC          XL24'00'    RESERVED                            03074040
*                                                                       03082040
*  THE FOLLOWING IS THE MAPPING OF THE POOL CONTROLLERS CONTAINED IN    03100040
*  THE ASMVT:                                                           03108040
*                                                                       03116040
ASMPOOLS    DSECT                   CELLPOOL CONTROLLER MAPPING         03124040
ASMCPID     DS          CL4         CELLPOOL IDENTIFIER                 03132040
ASMCPSIZ    DS          H           SIZE OF EACH CELL IN POOL           03150040
ASMCPEXT    DS          H           NUMBER OF CELLS IN POOL EXTENSION   03158040
ASMCPAVQ    DS          0D          AVAILABLE CELL POOL CONTROL         03166040
ASMCPAVL    DS          A           ADDRESS OF FIRST AVAILABLE CELL     03174040
*                                   IN POOL                             03182040
ASMCPCNT    DS          F           COUNT FOR SYNCHRONIZATION OF THIS   03200040
*                                   POOL, DECREMENTED WHEN REMOVING     03208040
*                                   CELL FROM POOL, UNCHANGED WHEN      03216040
*                                   PLACING CELL BACK IN THE POOL       03224040
ASMCPRSQ    DS          0D          ACE POOL ONLY, ACE RESERVE CELL     03232040
*                                   POOL CONTROL                        03250040
ASMCPTAK    DS          F           ACE POOL ONLY, NUMBER OF CELLS      03258040
*                                   TAKEN FROM RESERVE QUEUE            03266040
ASMCPRES    DS          F           ACE POOL ONLY, RESERVE QUEUE OF     03274040
*                                   ACE CELLS USED ONLY WHEN ACE        03282040
*                                   REQUIRED BY ROUTINES RUNNING WITH   03300040
*                                   THE SALLOC LOCK                     03308040
            MEND                    END OF BAL SECTION               */ 03316040
*%ASMVTPLS:;                                                            03324040
*DECLARE                                                                03332040
*  1 ASMVT BASED(ASMVTPTR) BDY(DWORD), /* ASM VECTOR TABLE           */ 03350040
*    3 ASMFLAG1 BIT(8),          /* ASM GLOBAL FLAG FIELD 1          */ 03358040
*      5 ASMDUPLX BIT(1),        /* DUPLEXING OPTION FLAG,              03366040
*                                   1 = DUPLEXING OF COMMON REQUESTED   03374040
*                                   DUPLEX PAGE DATA SET OPENED BY RIM  03382040
*                                   0 = DUPLEXING NOT REQUESTED, NO     03400040
*                                   DUPLEX DATA SET OPENED BY RIM, OR   03408040
*                                   DUPLEXING SUSPENDED IF DUPLEXING    03416040
*                                   SUSPENDED FLAG IS ON             */ 03424040
*      5 ASMNOCWQ BIT(1),        /* NO COMMON WRITE QUEUE FLAG,         03432040
*                                   1 = DO NOT QUEUE WRITE IOE'S TO     03450040
*                                   COMMON WRITE QUEUE,                 03458040
*                                   0 = DO NORMAL IOE QUEUING        */ 03466040
*      5 ASMNOLCL BIT(1),        /* NO LOCAL DATA PAGING FLAG,          03474040
*                                   1 = ALL WRITE IOE'S MUST BE         03482040
*                                   QUEUED TO COMMON WRITE QUEUE,       03500040
*                                   0 = QUEUE IOE'S NORMALLY         */ 03508040
*      5 ASMRSV1 BIT(1),         /* RESERVED                         */ 03516040
*      5 ASMNODPX BIT(1),        /* DUPLEXING SUSPENDED FLAG,           03524040
*                                   1 = DUPLEXING HAS BEEN SUSPENDED    03532040
*                                   BECAUSE THE DUPLEX PAGE DATA SET    03550040
*                                   IS FULL OR INOPERATIVE,             03556040
*                                   0 = DUPLEXING STILL ACTIVE IF       03562040
*                                   REQUESTED                        */ 03574040
*      5 ASMPLPAF BIT(1),        /* PLPA DATA SET FULL FLAG,            03582040
*                                   1 = PLPA DATA SET FULL,             03600040
*                                   0 = PLPA DATA SET NOT FULL       */ 03604040
*      5 ASMCOMMF BIT(1),        /* COMMON DATA SET FULL FLAG,          03620040
*                                   1 = COMMON DATA SET FULL,           03623040
*                                   0 = COMMON DATA SET NOT FULL     */ 03626040
*      5 ASMPLPAS BIT(1),        /* PLPA DATA SET SPILL FLAG,           03650040
*                                   1 = PLPA DATA SET SPILLED TO        03657040
*                                   COMMON DATA SET DURING PLPA BUILD   03664040
*                                   AT NIP TIME,                        03680040
*                                   0 = PLPA DATA SET NOT FULL AFTER    03686040
*                                   PLPA BUILD                       */ 03700040
*    3 ASMFLAG2 BIT(8),          /* ASM GLOBAL FLAG FIELD 2          */ 03708040
*      5 ASMCALLQ BIT(1),        /* QIOE CALLER FLAG,                   03716040
*                                   1 = PAGE COMPLETION IS THE CALLER   03724040
*                                   OF QIOE,                            03732040
*                                   0 = QIOE CALLED BY SOME OTHER ASM   03750040
*                                   ROUTINE                          */ 03758040
*      5 ASMNOSAV BIT(1),        /* NO SAVE FLAG,                       03766040
*                                   1 = SYS1.STGINDEX UNAVAILABLE OR    03774040
*                                   FULL, SAVE REQUESTS NOT DONE,       03782040
*                                   0 = SYS1.STGINDEX AVAILABLE FOR     03800040
*                                   USE                              */ 03808040
*      5 ASMNOTMR BIT(1),        /* NO TASK MODE RELEASE FLAG,          03816040
*                                   1 = TASK MODE RELEASE (ILRTMRLG)    03824040
*                                   HAS SUFFERED INDETERMINATE ERRORS,  03832040
*                                   DO NOT POST ITS ECB,                03850040
*                                   0 = ILRTMRLG RUNNING NORMALLY    */ 03858040
*      5 ASMNOTPT BIT(1),        /* NO TPARTABLE FLAG,                  03866040
*                                   1 = A READ OR WRITE OF TPARTABLE    03874040
*                                   HAS FAILED, IT IS NOT UP TO DATE,   03882040
*                                   0 = TPARTABLE AVAILABLE AND         03900040
*                                   CORRECT                          */ 03908040
*      5 ASMQUICK BIT(1),        /* QUICK START IPL FLAG,               03916040
*                                   1 = ASM INITIALIZATION PROCESSED    03924040
*                                   PLPA IN QUICK START MODE (NOT       03932040
*                                   CLPA),                              03950040
*                                   0 = ASM INITIALIZATION PROCESSED    03958040
*                                   PLPA IN COLD START MODE (CLPA),     03966040
*                                   OR WAS FORCED TO CONVERT TO COLD    03974040
*                                   START MODE                       */ 03982040
*      5 ASMWARM BIT(1),         /* WARM START IPL FLAG,                04000040
*                                   1 = ASM INITIALIZATION PROCESSED    04008040
*                                   VIO DATA SETS IN WARM START MODE    04016040
*                                   (NOT CVIO),                         04024040
*                                   0 = ASM INITIALIZATION PROCESSED    04032040
*                                   VIO DATA SETS IN CVIO MODE, OR      04050040
*                                   WAS FORCED TO CONVERT A WARM START  04058040
*                                   REQUEST TO CVIO                  */ 04066040
*    3 ASMDSSFS CHAR(2),         /* IF NOT ZERO, FIRST SLOT NUMBER OF   04070040
*                                   DSS RESERVED AREA ON PLPA PAGE      04074040
*                                   DATASET                  @ZA14260*/ 04076040
*    3 ASMSART PTR(31),          /* ADDRESS OF SWAP ACTIVITY REFERENCE  04082040
*                                   TABLE - SART                     */ 04100040
*    3 ASMPART PTR(31),          /* ADDRESS OF PAGING ACTIVITY          04106040
*                                   REFERENCE TABLE - PART           */ 04112040
*    3 ASMGOS PTR(31),           /* ADDRESS OF ILRGOS, USED BY          04130040
*                                   ILRCALL MACRO                    */ 04135040
*    3 ASMTRPAG PTR(31),         /* ADDRESS OF ILRTRPAG, ENTRY POINT    04150040
*                                   IN ILRPOS, USED BY ILRCALL MACRO */ 04157040
*    3 ASMEREC PTR(31),          /* ADDRESS OF BAD SLOT ERROR RECORD    04164040
*                                   MAINTAINED BY ILRCMP             */ 04171040
*    3 ASMMSGBF PTR(31),         /* ADDRESS OF MESSAGE BUFFER USED BY   04178040
*                                   ASM MESSAGE ROUTINE              */ 04200040
*    3 ASMRSV5 CHAR(4),          /* RESERVED                         */ 04200940
*                                                                       04201940
* /*******************************************************************/ 04202940
* /*                                                                 */ 04203940
* /*  THE FOLLOWING SECTION OF THE ASMVT IS USED PRIMARILY BY THE    */ 04250040
* /*  I/O CONTROL MODULES OF ASM.                                    */ 04253040
* /*                                                                 */ 04262040
* /*******************************************************************/ 04266040
*                                                                       04270040
*    3 ASMSTAGQ CHAR(8) BDY(DWORD), /* I/O STAGING QUEUE CONTAINING     04300040
*                                   AIA'S WAITING FOR AVAILABLE         04303040
*                                   IOE'S                            */ 04312040
*      5 ASMSTAGF PTR(31),       /* ADDRESS OF FIRST AIA ON STAGING     04316040
*                                   QUEUE                            */ 04320040
*      5 ASMSTAGL PTR(31),       /* ADDRESS OF LAST AIA ON STAGING      04350040
*                                   QUEUE                            */ 04358040
*    3 ASMIORQR FIXED(31),       /* COUNT OF I/O REQUESTS (AIA'S)       04366040
*                                   RECEIVED BY I/O CONTROL, THIS       04374040
*                                   DOES NOT INCLUDE LSQA SWAP AIA'S */ 04382040
*    3 ASMIORQC FIXED(31),       /* COUNT OF I/O REQUESTS (AIA'S)       04400040
*                                   COMPLETED AND RETURNED TO RSM    */ 04408040
*    3 ASMRSV6 CHAR(16),         /* RESERVED                         */ 04416040
*                                                                       04424040
* /*******************************************************************/ 04432040
* /*                                                                 */ 04450040
* /*  THE FOLLOWING SECTION OF THE ASMVT IS USED PRIMARILY BY THE    */ 04458040
* /*  I/O SUBSYSTEM MODULES OF ASM.                                  */ 04466040
* /*                                                                 */ 04474040
* /*******************************************************************/ 04482040
*                                                                       04500040
*    3 ASMPCCWQ CHAR(8) BDY(DWORD), /* QUEUE OF AVAILABLE PCCW'S FOR    04508040
*                                   SLOT SORT, QUEUE IS MAINTAINED      04516040
*                                   BY COMPARE AND SWAP LOGIC WHICH     04524040
*                                   MAKES THE SYNCHRONIZATION COUNT     04532040
*                                   NECESSARY                        */ 04550040
*      5 ASMPCCWA PTR(31),       /* ADDRESS OF FIRST AVAILABLE PCCW  */ 04558040
*      5 ASMPCCWC FIXED(31),     /* SYNCHRONIZATION COUNT, DECREMENTED  04566040
*                                   WHEN REMOVING PCCW'S, UNCHANGED     04574040
*                                   WHEN ADDING PCCW'S               */ 04582040
*    3 ASMPCCWN FIXED(31),       /* NUMBER OF PCCW'S BUILT BY RIM    */ 04600040
*    3 ASMBURST FIXED(31),       /* LENGTH OF SERVICE BURST FOR PAGE    04608040
*                                   DATA SETS (IN MICROSECONDS)      */ 04616040
*    3 ASMIOCNT FIXED(31),       /* COUNT OF STARTIO REQUESTS MADE TO   04624040
*                                   IOS THAT HAVE NOT COMPLETED      */ 04632040
*    3 ASMSRBCT FIXED(31),       /* NUMBER OF SRB'S SCHEDULED FOR THE   04650040
*                                   I/O SUBSYSTEM THAT HAVE NOT BEEN    04658040
*                                   DISPATCHED, THIS COUNT SHOULD BE    04666040
*                                   EITHER 0 OR 1, IT IS MAINTAINED     04674040
*                                   BY COMPARE AND SWAP LOGIC        */ 04682040
*    3 ASMPSRB PTR(31),          /* ADDRESS OF SRB USED TO SCHEDULE     04700040
*                                   THE I/O SUBSYSTEM                */ 04708040
*    3 ASMRSV7 CHAR(16),         /* RESERVED                         */ 04716040
*                                                                       04724040
* /*******************************************************************/ 04732040
* /*                                                                 */ 04750040
* /*  THE FOLLOWING SECTION OF THE ASMVT IS USED FOR PAGE DATA SET   */ 04758040
* /*  SLOT ACCOUNTING.                                               */ 04766040
* /*                                                                 */ 04774040
* /*******************************************************************/ 04782040
*                                                                       04800040
*    3 ASMBKSLT FIXED(31),       /* COUNT OF UNRESERVED LOCAL SLOTS,    04807040
*                                   THIS COUNT IS DECREMENTED AND       04814040
*                                   INCREMENTED FOR EACH ADDRESS SPACE  04830040
*                                   OR VIO LG CREATED OR DELETED     */ 04836040
*    3 ASMSLOTS FIXED(31),       /* COUNT OF TOTAL LOCAL SLOTS IN ALL   04850040
*                                   OPEN LOCAL PAGE DATA SETS        */ 04858040
*    3 ASMVSC FIXED(31),         /* COUNT OF TOTAL LOCAL SLOTS          04866040
*                                   ALLOCATED TO VIO PRIVATE AREA       04874040
*                                   PAGES                            */ 04882040
*    3 ASMNVSC FIXED(31),        /* COUNT OF TOTAL LOCAL SLOTS          04900040
*                                   ALLOCATED TO NON-VIO PRIVATE AREA   04908040
*                                   PAGES                            */ 04920040
*    3 ASMERRS FIXED(31),        /* COUNT OF BAD SLOTS FOUND ON LOCAL   04924040
*                                   DATA SETS DURING NORMAL             04932040
*                                   OPERATIONS                       */ 04950040
*                                                                       04957040
* /*******************************************************************/ 04964040
* /*                                                                 */ 04980040
* /*  THE FOLLOWING SECTION OF THE ASMVT IS USED PRIMARILY BY THE    */ 04986040
* /*  VIO CONTROLLER AND THE GROUP OPERATOR MODULES.                 */ 05000040
* /*                                                                 */ 05007040
* /*******************************************************************/ 05014040
*                                                                       05030040
*    3 ASMSLOTV PTR(31),         /* ADDRESS OF THE SLOTV CONSTANT    */ 05036040
*    3 ASMLGVT PTR(31),          /* ADDRESS OF THE LOGICAL GROUP        05050040
*                                   VECTOR TABLE                     */ 05052040
*    3 ASMSTGXA PTR(31),         /* ADDRESS OF THE ACB FOR              05064040
*                                   SYS1.STGINDEX                    */ 05080040
*    3 ASMCINV FIXED(31),        /* NUMBER OF CONTROL INTERVALS IN      05086040
*                                   SYS1.STGINDEX                    */ 05100040
*    3 ASMLSAI CHAR(8) BDY(DWORD), /* ASM STORAGE LOCATOR 'S' SYMBOL    05107040
*                                   GENERATOR, LAST 'S' SYMBOL          05114040
*                                   ASSIGNED                         */ 05130040
*      5 ASMLSAIL FIXED(31),     /* LOW WORD OF 'S' SYMBOL GENERATOR */ 05136040
*      5 ASMLSAIH FIXED(31),     /* HIGH WORD OF 'S' SYMBOL GENERATOR*/ 05150040
*    3 ASMGOSQS CHAR(8) BDY(DWORD), /* DOUBLEWORD REFERENCE FOR GOS     05157040
*                                   WORK QUEUES                      */ 05164040
*      5 ASMGOSWT FIXED(31),     /* QUEUE OF ELEMENTS FOR ACE'S         05180040
*                                   WAITING FOR VSAM BUFFER TO BECOME   05186040
*                                   AVAILABLE, USED BY ILRGOS        */ 05200040
*      5 ASMGOSWK FIXED(31),     /* FIFO WORK QUEUE OF ELEMENTS FOR     05207040
*                                   ACE'S, USED BY ILRGOS TO START      05214040
*                                   OPERATIONS WAITING FOR VSAM         05230040
*                                   BUFFERS                          */ 05236040
*    3 ASMREQCT FIXED(31),       /* NUMBER OF SIMULTANEOUS REQUESTS     05250040
*                                   THAT CAN BE MADE TO VSAM, THIS      05257040
*                                   NUMBER (MINUS ONE FOR ILRTMRLG'S    05264040
*                                   USE) CORRESPONDS TO THE STRING      05280040
*                                   NUMBER PARAMETER ON THE OPEN FOR    05286040
*                                   SYS1.STGINDEX                    */ 05300040
*    3 ASMTCBPT PTR(31),         /* ADDRESS OF ASM TCB               */ 05310040
*    3 ASMTMECB FIXED(31),       /* ECB USED BY ILRTMRLG TO WAIT FOR    05311040
*                                   WORK, THIS ECB IS POSTED BY         05330040
*                                   ILRRLG                           */ 05339040
*    3 ASMRLGRQ FIXED(31),       /* REQUEST QUEUE FOR ILRTMRLG          05348040
*                                   CONSISTING OF ACE'S QUEUED BY       05357040
*                                   ILRRLG, QUEUE IS SERIALIZED BY      05366040
*                                   COMPARE AND SWAP LOGIC           */ 05375040
*    3 ASMRLGWQ FIXED(31),       /* WORK QUEUE FOR ILRTMRLG TO HOLD     05384040
*                                   ACE'S MOVED FROM REQUEST QUEUES  */ 05391040
*    3 ASMTASCB PTR(31),         /* ADDRESS OF ASCB FOR ADDRESS SPACE   05407040
*                                   IN WHICH ILRTMRLG IS RUNNING     */ 05414040
*    3 ASMVSAMW FIXED(31),       /* QUEUE OF ELEMENTS FOR ACES WAITING  05416040
*                                   FOR A PARTICULAR RECORD ON          05418040
*                                   SYS1.STGINDEX TO BECOME AVAILABLE   05420040
*                                   TO BECOME AVAILABLE, USED BY        05422040
*                                   ILRVSAMI                 @ZA15367*/ 05424040
*    3 ASMRSV8 CHAR(4),          /* RESERVED                         */ 05426040
*                                                                       05436040
* /*******************************************************************/ 05450040
* /*                                                                 */ 05457040
* /*  THE FOLLOWING SECTION OF THE ASMVT CONTAINS ENTRY POINT        */ 05464040
* /*  ADDRESSES OF THOSE ASM ROUTINES OR SUBROUTINES THAT ARE CALLED */ 05480040
* /*  BY MORE THAN ONE MODULE, OR THAT RESIDE IN LPA.  LPA ROUTINE   */ 05486040
* /*  ENTRY POINTS ARE DETERMINED AT TASK MODE INITIALIZATION.       */ 05500040
* /*                                                                 */ 05507040
* /*******************************************************************/ 05514040
*                                                                       05530040
*    3 ASMPQIOE PTR(31),         /* ADDRESS OF ILRQIOE, SUBROUTINE OF   05536040
*                                   ILRPAGIO                         */ 05550040
*    3 ASMPFRSL PTR(31),         /* ADDRESS OF ILRFRSL1, FREESLOT       05557040
*                                   ENTRY POINT OF ILRFRSLT          */ 05564040
*    3 ASMPFRSW PTR(31),         /* ADDRESS OF ILRFLSW1, FREESWAP       05580040
*                                   ENTRY POINT OF ILRFRSLT          */ 05586040
*    3 ASMPTM PTR(31),           /* ADDRESS OF ILRPTM                */ 05600040
*    3 ASMPSWPD PTR(31),         /* ADDRESS OF ILRSWPDR              */ 05607040
*    3 ASMPSRMT PTR(31),         /* ADDRESS OF ILRPSRMT, PART MONITOR   05614040
*                                   AND SWAP DRIVER RMTR             */ 05630040
*    3 ASMPSRBC PTR(31),         /* ADDRESS OF ILRSRBC               */ 05636040
*    3 ASMVRMTR PTR(31),         /* ADDRESS OF ILRSRBRM, ENTRY POINT    05650040
*                                   OF ILRSRBC FOR VIO RMTR          */ 05651040
*    3 ASMPEX PTR(31),           /* ADDRESS OF ILRPEX                */ 05664040
*    3 ASMPCMPD PTR(31),         /* ADDRESS OF ILRCMPDI, ENTRY POINT    05680040
*                                   OF ILRCMP.               @ZA25907*/ 05700040
*    3 ASMPCMPN PTR(31),         /* ADDRESS OF ILRCMPNE, ENTRY POINT    05750040
*                                   OF ILRCMP                        */ 05758040
*    3 ASMPCMPA PTR(31),         /* ADDRESS OF ILRCMPAE, ENTRY POINT    05766040
*                                   OF ILRCMP                        */ 05774040
*    3 ASMPCMP PTR(31),          /* ADDRESS OF ILRCMP                */ 05782040
*    3 ASMPSAV PTR(31),          /* ADDRESS OF ILRSAV                */ 05800040
*    3 ASMPACT PTR(31),          /* ADDRESS OF ILRACT                */ 05808040
*    3 ASMPRLG PTR(31),          /* ADDRESS OF ILRRLG                */ 05816040
*    3 ASMPFRLG PTR(31),         /* ADDRESS OF ILRFRELG, ENTRY POINT    05824040
*                                   OF ILRGOS                        */ 05832040
*    3 ASMPMSG0 PTR(31),         /* ADDRESS OF ILRMSG00              */ 05850040
*    3 ASMPMSGS PTR(31),         /* ADDRESS OF ILRMSGSP, ENTRY POINT    05858040
*                                   OF ILRMSG00                      */ 05866040
*    3 ASMPVACQ PTR(31),         /* ADDRESS OF ILRVACQ2, ENTRY POINT    05874040
*                                   OF ILRFRR01                      */ 05882040
*    3 ASMPIOFR PTR(31),         /* ADDRESS OF ILRIOFRR, I/O CONTROL    05900040
*                                   RECOVERY ROUTINE                 */ 05908040
*    3 ASMPVACE PTR(31),         /* ADDRESS OF ILRVACE, ENTRY POINT     05916040
*                                   OF ILRFRR01                      */ 05924040
*    3 ASMRSV10 CHAR(16),        /* RESERVED                         */ 05932040
*                                                                       05950040
* /*******************************************************************/ 05958040
* /*                                                                 */ 05966040
* /*  THE FOLLOWING SECTION OF THE ASMVT CONTAINS THE POOL           */ 05974040
* /*  CONTROLLERS THAT ARE USED BY THE GMA MACRO TO OBTAIN AND       */ 05982040
* /*  RELEASE CELLS FOR THOSE ROUTINES REQUIRING ONE OF THESE        */ 06000040
* /*  CONTROL BLOCKS.  THE POOL CONTROLLER MAPPING APPEARS AT THE    */ 06008040
* /*  END OF THE ASMVT.                                              */ 06016040
* /*                                                                 */ 06024040
* /*******************************************************************/ 06040040
*                                                                       06046040
*    3 ASMIOEPC CHAR(16) BDY(DWORD), /* IOE POOL CONTROLLER          */ 06060040
*    3 ASMBWKPC CHAR(16) BDY(DWORD), /* 256 BYTE WORKAREA POOL          06068040
*                                   CONTROLLER                       */ 06076040
*    3 ASMSWKPC CHAR(16) BDY(DWORD), /* 512 BYTE WORKAREA POOL          06084040
*                                   CONTROLLER, USED EXCLUSIVELY BY     06092040
*                                   ILRVSAMI                         */ 06110040
*    3 ASMACEPC CHAR(24) BDY(DWORD), /* ACE POOL CONTROLLER          */ 06118040
*                                                                       06126040
* /*******************************************************************/ 06134040
* /*                                                                 */ 06142040
* /*  THE FOLLOWING SECTION OF THE ASMVT CONTAINS WORK-SAVE AREAS    */ 06160040
* /*  USED BY THE ASM ROUTINES THAT RUN WITH THE SALLOC LOCK.        */ 06168040
* /*                                                                 */ 06176040
* /*******************************************************************/ 06184040
*                                                                       06192040
*    3 ASMWKSA1 CHAR(80) BDY(DWORD), /* USED BY ILRPAGIO             */ 06210040
*    3 ASMWKSA2 CHAR(80) BDY(DWORD), /* USED BY ILRQIOE, SUBROUTINE OF  06218040
*                                   ILRPAGIO                         */ 06226040
*    3 ASMWKSA3 CHAR(80) BDY(DWORD), /* USED BY ILRPAGCM             */ 06234040
*    3 ASMWKSA4 CHAR(80) BDY(DWORD), /* USED BY ILRSWAP              */ 06242040
*    3 ASMWKSA5 CHAR(80) BDY(DWORD), /* USED BY ILRSLSQA, SUBROUTINE    06260040
*                                   OF ILRSWAP                       */ 06268040
*    3 ASMWKSA6 CHAR(80) BDY(DWORD), /* USED BY ILRPOS AND ILRVIOCM  */ 06276040
*    3 ASMWKSA7 CHAR(80) BDY(DWORD), /* USED BY ILRPEX AND ILRMSG00  */ 06284040
*    3 ASMSAVE CHAR(72) BDY(DWORD), /* STANDARD REGISTER SAVE AREA      06292040
*                                   USED BY ASM WHEN CALLING OTHER      06310040
*                                   ROUTINES                         */ 06320040
*    3 ASMRSV12 CHAR(24);        /* RESERVED                         */ 06326040
*                                                                       06334040
* /*******************************************************************/ 06342040
* /*                                                                 */ 06360040
* /*  THE FOLLOWING IS THE MAPPING OF THE POOL CONTROLLERS CONTAINED */ 06368040
* /*  IN THE ASMVT.                                                  */ 06376040
* /*                                                                 */ 06384040
* /*******************************************************************/ 06392040
*                                                                       06410040
*DECLARE                                                                06418040
*  1 ASMPOOLS BASED BDY(DWORD),  /* CELLPOOL CONTROLLER MAPPING      */ 06426040
*    3 ASMCPID CHAR(4),          /* CELLPOOL IDENTIFIER              */ 06434040
*    3 ASMCPSIZ FIXED(15),       /* SIZE OF EACH CELL IN POOL        */ 06442040
*    3 ASMCPEXT FIXED(15),       /* NUMBER OF CELLS IN POOL EXTENSION*/ 06460040
*    3 ASMCPAVQ CHAR(8) BDY(DWORD), /* AVAILABLE CELL POOL CONTROL   */ 06468040
*      5 ASMCPAVL PTR(31),       /* ADDRESS OF FIRST AVAILABLE CELL     06476040
*                                   IN POOL                          */ 06484040
*      5 ASMCPCNT FIXED(31),     /* COUNT FOR SYNCHRONIZATION OF THIS   06492040
*                                   POOL, DECREMENTED WHEN REMOVING A   06510040
*                                   CELL FROM POOL, UNCHANGED WHEN      06518040
*                                   PLACING A CELL BACK IN THE POOL  */ 06526040
*    3 ASMCPRSQ CHAR(8) BDY(DWORD), /* ACE POOL ONLY, ACE RESERVE CELL  06534040
*                                   POOL CONTROL                     */ 06542040
*      5 ASMCPTAK FIXED(31),     /* ACE POOL ONLY, NUMBER OF CELLS      06560040
*                                   TAKEN FROM RESERVE QUEUE         */ 06568040
*      5 ASMCPRES PTR(31);       /* ACE POOL ONLY, RESERVE QUEUE OF     06576040
*                                   ACE CELLS USED ONLY WHEN ACE        06584040
*                                   REQUIRED BY ROUTINES RUNNING        06592040
*                                   WITH THE SALLOC LOCK             */ 06600040
*                                                                       06608040
* /*******************************************************************/ 06630040
* /*                                                                 */ 06638040
* /*  THE FOLLOWING ARE MAPPINGS OF SOME OF THE WORK-SAVE AREAS      */ 06646040
* /*  CONTAINED IN THE ASMVT.                                        */ 06654040
* /*                                                                 */ 06662040
* /*******************************************************************/ 06680040
*                                                                       06688040
*DECLARE                                                                06696040
*  1 ASM1WKSV CHAR(80) BDY(DWORD) DEFINED(ASMWKSA1), /* MAPPING OF      06704040
*                                   WORK-SAVE AREA USED BY ILRPAGIO  */ 06712040
*    3 ASM1RGSV CHAR(60) BDY(DWORD), /* INPUT REGISTER SAVE AREA     */ 06730040
*      5 ASM1RG1 PTR(31),        /* SAVE AREA FOR REG 1              */ 06738040
*      5 * CHAR(52),             /* SAVE AREA FOR REG 2 TO REG 14    */ 06746040
*      5 ASM1RG15 PTR(31),       /* SAVE AREA FOR REG 15             */ 06754040
*    3 ASM1WRKA CHAR(20) BDY(WORD), /* WORK AREA                     */ 06762040
*      5 ASM1ASCB PTR(31),       /* ADDRESS OF ASCB                  */ 06780040
*      5 ASM1NXTA PTR(31);       /* ADDRESS OF NEXT AIA              */ 06788040
*                                                                       06796040
*DECLARE                                                                06804040
*  1 ASM2WKSV CHAR(80) BDY(DWORD) DEFINED(ASMWKSA2), /* MAPPING OF      06812040
*                                   WORK-SAVE AREA USED BY ILRQIOE   */ 06830040
*    3 ASM2RGSV CHAR(52) BDY(DWORD), /* INPUT REGISTER SAVE AREA     */ 06838040
*    3 ASM2WRKA CHAR(28) BDY(WORD), /* WORK AREA                     */ 06846040
*      5 ASM2PAQ PTR(31),        /* PTR TO PRIVATE AREA IOE'S        */ 06854040
*      5 ASM2CAQ PTR(31),        /* PTR TO COMMON AREA IOE'S         */ 06862040
*      5 ASM2DUPQ PTR(31),       /* PTR TO DUPLEXED IOE'S            */ 06880040
*      5 ASM2FLGS BIT(8),        /* LOCAL SWITCHES                   */ 06888040
*        7 ASM2RFLG BIT(1),      /* READ IOE PUT ON SOME PARTE       */ 06896040
*        7 ASM2WFLG BIT(1),      /* WRITE IOE BUILT                  */ 06904040
*      5 * CHAR(3),              /* UNUSED                           */ 06912040
*      5 ASM2SR14 PTR(31);       /* SAVE AREA FOR REG 14             */ 06930040
*                                                                       06938040
*DECLARE                                                                06946040
*  1 ASM3WKSV CHAR(80) BDY(DWORD) DEFINED(ASMWKSA3), /* MAPPING OF      06954040
*                                   WORK-SAVE AREA USED BY ILRPAGCM  */ 06962040
*    3 ASM3SWPQ PTR(31),         /* QUEUE OF AIA'S FOR SWAPCOMP RTN  */ 06980040
*    3 ASM3GENQ PTR(31),         /* QUEUE OF AIA'S FOR PAGECOMP RTN  */ 06988040
*    3 ASM3PIOP PTR(31),         /* QUEUE OF AIA'S FOR RETURN TO PIOP*/ 06996040
*    3 ASM3TMPA PTR(31),         /* SAVE AREA FOR NEXT AIA PTR       */ 07004040
*    3 ASM3GRPA PTR(31),         /* SAVE AREA FOR NEXT GROUP PTR     */ 07012040
*    3 ASM3R14A PTR(31),         /* SAVE AREA FOR 1ST LEVEL REG 14   */ 07030040
*    3 ASM3R14B PTR(31),         /* SAVE AREA FOR 2ND LEVEL REG 14   */ 07038040
*    3 ASM3SR13 PTR(31);         /* SAVE AREA FOR REG 13             */ 07046040
*                                                                       07054040
*DECLARE                                                                07062040
*  1 ASM4WKSV CHAR(80) BDY(DWORD) DEFINED(ASMWKSA4), /* MAPPING OF      07080040
*                                   WORK-SAVE AREA USED BY ILRSWAP   */ 07088040
*    3 ASM4RGSV CHAR(52) BDY(DWORD), /* INPUT REGISTER SAVE AREA     */ 07096040
*      5 ASM4RG2 PTR(31),        /* SAVE AREA FOR REG 2              */ 07104040
*      5 * CHAR(48);             /* SAVE AREA FOR REG 3 TO REG 14    */ 07112040
*                                                                       07130040
*DECLARE                                                                07138040
*  1 ASM5WKSV CHAR(80) BDY(DWORD) DEFINED(ASMWKSA5), /* MAPPING OF      07146040
*                                   WORK-SAVE AREA USED BY ILRSLSQA  */ 07154040
*    3 ASM5RGSV CHAR(52) BDY(DWORD), /* INPUT REGISTER SAVE AREA     */ 07162040
*      5 ASM5RG2 PTR(31),        /* SAVE AREA FOR REG 2              */ 07180040
*      5 * CHAR(48),             /* SAVE AREA FOR REG 3 TO REG 14    */ 07188040
*    3 ASM5SR14 PTR(31),         /* SAVE AREA FOR REG 14             */ 07196040
*    3 ASM5GCTR FIXED(31),       /* COUNTER FOR GROUPING AIA'S       */ 07204040
*    3 ASM5AIA PTR(31),          /* TEMP SAVE AREA FOR AIA PTR       */ 07212040
*    3 ASM5FLGS BIT(8);          /* INTERNAL FLAGS                   */ 07230040
./  ADD  SSI=63560451,NAME=ILRIORB
* /* MACMEAN IORB MEANS INPUT OUTPUT REQUEST BLOCK                   */ 00050040
* /* MACCOMP Y-4SC1CW/PZD81                                          */ 00100040
* /* MACSTAT Y-474240/415301                                         */ 00150040
*/*A-000000-999999                                           @Z40APWA*/ 00200040
*/********************************************************************/ 00250040
*/*                                                                  */ 00300040
*/*  NAME:  ILRIORB                                                  */ 00350040
*/*                                                                  */ 00400040
*/*  FUNCTION:  INPUT/OUTPUT REQUEST BLOCK                           */ 00450040
*/*                                                                  */ 00500040
*/*  STATUS:  OS/VS2 RELEASE 4.1, LEVEL 0                            */ 00550040
*/*                                                                  */ 00600040
*/*  EXTERNAL REFERENCES: IORBPTR - USER DEFINED POINTER TO IORB     */ 00650040
*/*                                                                  */ 00700040
*/*  REGISTERS USED:  N/A                                            */ 00750040
*/*                                                                  */ 00800040
*/*  REGISTERS CLOBBERED:  N/A                                       */ 00850040
*/*                                                                  */ 00900040
*/*  NOTES:  THIS MAPPING MACRO DESCRIBES THE CONTROL BLOCK PASSED   */ 00950040
*/*          TO THE I/O MANAGER BY AUXILIARY STORAGE MANAGER. IT     */ 01000040
*/*          CONTAINS POINTERS TO OTHER CONTROL BLOCKS, A POINTER TO */ 01050040
*/*          AN EIGHTEEN WORD SAVE AREA, AND FLAGS FOR I/O MANAGERS  */ 01100040
*/*          USE.                                                    */ 01150040
*/*                                                                  */ 01200040
*/*          THE IORB IS USED IN CONJUNCTION WITH AN IOSB AND AN SRB */ 01250040
*/*          FOR I/O PURPOSES IN PLACE OF THE IOB USED BY OTHER IOS  */ 01300040
*/*          DRIVERS. THE IORB POINTS TO THE IOSB, WHICH POINTS TO   */ 01350040
*/*          THE SRB.                                                */ 01400040
*/*                                                                  */ 01450040
*/*  METHOD OF ACCESS:                                               */ 01500040
*/*         BAL  - DSECT=NO  SHOULD BE SPECIFIED ON THE MACRO CALL   */ 01550040
*/*                TO AVOID CREATING A DSECT. A USING ON IORB WILL   */ 01600040
*/*                ESTABLISH ADDRESSIBILITY FOR ALL SYMBOLS.         */ 01650040
*/*         PL/S - DCL IORBPTR PTR                                   */ 01700040
*/*                                                                  */ 01750040
*/********************************************************************/ 01800040
*          %GOTO   IORBPLS;          /* BILINGUAL HEADER                01850040
           MACRO                                                        01900040
           ILRIORB    &DUMMY,&DSECT=YES                                 01950040
           AIF        ('&DSECT' EQ 'YES').IORB01                        02000040
IORB       DS         0D             IORB CONTROL BLOCK                 02050040
           AGO        .IORB02        CALL FOR BIT DEFINITION            02100040
.IORB01    ANOP                                                         02150040
IORB       DSECT      , IORBPTR                                         02200040
.IORB02    SPACE      2                                                 02250040
           IEZBITS    ,                                                 02300040
IORID      DS         C              IORB IDENTIFIER X'88'              02350040
IORNUM     DS         X              NO. OF IORBS FOR THIS PAGE SPACE   02400040
IORRQSZ    DS         X              NUMBER OF PCCWS IN THIS REQUEST    02450040
IORFLGS    DS         B              INTERNAL FLAGS                     02500040
IORFUSE    EQU        BIT0           X'80' = IORB IN USE                02550040
IORFRPS    EQU        BIT1           X'40' = RPS DEVICE                 02600040
IORSWAP    EQU        BIT4           SWAP DATA SET FLAG                 02760040
*                                    1 = IORB FOR SWAP DATA SET         02770040
*                                    0 = IORB FOR PAGE DATA SET         02780040
IORAPND    EQU        BIT5           APPENDAGE FLAGS                    02784040
IORFDI     EQU        BIT5           X'04' = DIE COMPLETED              02788040
IORFNE     EQU        BIT6           X'02' = NORMAL END COMPLETED       02792040
IORFAE     EQU        BIT7           X'01' = ABNORMAL END COMPLETED     02796040
IORIORB    DS         A              POINTER TO NEXT IORB               02800040
IORPCCW    DS         A              POINTER TO FIRST PCCW              02850040
IORSCCW    EQU        IORPCCW        POINTER TO FIRST SCCW              02870040
IORIOSB    DS         A              IOSB ADDRESS                       02950040
IORSAVE    DS         A              POINTER TO 18 WORD SAVE AREA       03000040
IORERR     DS         A              ADDRESS OF PCCW IN ERROR           03050040
IORTSMP    DS         CL8            ILRSRT TOD STAMP                   03080040
IORPARTE   DS         A              POINTER TO PARTE                   03150040
IORRSV     DS         F              RESERVED                           03170040
           MEND                                                         03250040
*          */                                                           03300040
*%IORBPLS:;                          /* PLS COMPILE TIME TARGET      */ 03350040
*       DCL 1 IORB BASED(IORBPTR) CHAR(40) BDY(DWORD), /* IORB       */ 03400040
*             2 IORID  CHAR(1),      /* IORB IDENTIFIER X'88'        */ 03450040
*             2 IORNUM FIXED(8),     /* NO. OF IORBS FOR PAGE SPACE  */ 03500040
*             2 IORRQSZ FIXED(8),    /* NUMBER OF PCCWS THIS REQUEST */ 03550040
*             2 IORFLGS BIT(8),      /* INTERNAL FLAGS               */ 03600040
*               3 IORFUSE BIT(1),    /* X'80' = IORB IN USE          */ 03650040
*               3 IORFRPS BIT(1),    /* X'40' = RPS DEVICE           */ 03700040
                3 * BIT(2),          /* RESERVED                     */ 03750040
*               3 IORSWAP BIT(1),    /* SWAP DATA SET FLAG              03860040
*                                       1 = IORB FOR SWAP DATA SET      03870040
*                                       0 = IORB FOR PAGE DATA SET   */ 03880040
*               3 IORAPND BIT(3),    /* APPENDAGE FLAGS              */ 03884040
*                 4 IORFDI BIT(1),   /* DIE COMPLETED                */ 03888040
*                 4 IORFNE BIT(1),   /* NORMAL END COMPLETED FLAG    */ 03892040
                  4 IORFAE BIT(1),   /* ABNORMAL END COMPLETED FLAG  */ 03896040
*             2 IORIORB PTR(31),     /* POINTER TO NEXT IORB         */ 03950040
*             2 IORPCCW PTR(31),     /* POINTER TO FIRST PCCW        */ 04000040
*               3 IORSCCW PTR(31),   /* POINTER TO FIRST SCCW        */ 04020040
*             2 IORIOSB PTR(31),     /* IOSB ADDRESS                 */ 04100040
*             2 IORSAVE PTR(31),     /* POINTER TO 18 WORD SAVE AREA */ 04150040
*             2 IORERR PTR(31),      /* POINTER TO PCCW IN ERROR     */ 04200040
*             2 IORTSMP CHAR(8),     /* ILRSRT TOD STAMP             */ 04230040
*             2 IORPARTE PTR(31),    /* POINTER TO PARTE             */ 04300040
*             2 IORRSV CHAR(4),      /* RESERVED                     */ 04400040
*             2 * CHAR(0) BDY(DWORD);                                   04450040
./  ADD  SSI=32820371,NAME=INS
         MACRO                                                          00100002
&TAG     INS   &TREE,&A=,&R=,&#=,&T=,&C=,&SP=,&S=,&INSARG=,&MOVE=,     *00200002
               &RECL=,&TYPE=                                            00300002
.************************* SEPTEMBER 27,1973.************************** 00400002
.* THE INS MACRO-INSTRUCTION ASSOCIATES A KEY WITH A RECORD ADDRESS BY* 00500002
.* CHANGING THE RADIX PARTITION TREE OF ASSOCIATIONS.                 * 00600002
.*                                                                    * 00700002
.* THE ADDRESS USED IS OBTAINED IN EITHER ONE OF TWO WAYS:            * 00800002
.*                                                                    * 00900002
.* 0:    IF THE A-PARAMETER IS CODED AND THE R-PARAMETER IS NOT CODED,* 01000002
.*       THE ADDRESS IS AS SPECIFIED BY THE A-PARAMETER.              * 01100002
.*                                                                    * 01200002
.* 1:    IF BOTH THE A AND R PARAMETERS ARE CODED, SPACE IS ALLOCATED * 01300002
.*       FOR THE RECORD VIA THE GSPACE MACRO-INSTRUCTION, THE RECORD  * 01400002
.*       IS MOVED TO THE AREA ALLOCATED, AND THE ADDRESS OF THE       * 01500002
.*       ALLOCATED AREA IS USED. BY CODING THE R-PARAMETER THE RECORD * 01600002
.*       IS DEFINED SO IT CAN BE COLLECTED AT THE ALLOCATED AREA.     * 01700002
.*       IN EITHER CASE, AFTER THE INS MACRO HAS BEEN SUCCESSFULLY    * 01800002
.*       EXECUTED THE ADDRESS USED FOR THE ASSOCIATION IS RETURNED IN * 01900002
.*       REGISTER 15 AS THE RETURN CODE. IF THE INSERT IS NOT         * 02000002
.*       SUCCESSFUL FOR SOME REASON, THE RETURN CODE IN REGISTER 15 IS* 02100002
.*       NEGATIVE.                                                    * 02200002
.*                                                                    * 02300002
.* THE DESCRIPTIONS OF THE PARAMETERS FOR THE INS MACRO ARE AS        * 02400002
.* FOLLOWS:                                                           * 02500002
.*                                                                    * 02600002
.* TREE: THIS SPECIFIES THE ADDRESS OF THE RADIX PARTITION TREE USED  * 02700002
.*       TO STORE THE KEY-ADDRESS ASSOCIATIONS. IT MAY BE CODED TO    * 02800002
.*       SPECIFY EITHER A MAIN STORAGE LOCATION CONTAINING THE ADDRESS* 02900002
.*       OF THE RPT OR IN PARENTHESES TO INDICATE A GENERAL REGISTER  * 03000002
.*       CONTAINING THE ADDRESS OF THE RPT. IF "(1)" IS CODED, NO LOAD* 03100002
.*       REGISTER INSTRUCTION IS GENERATED BY THE INS MACRO, AS THE   * 03200002
.*       ADDRESS IS ALREADY IN THE APPROPRIATE PARAMETER LIST         * 03300002
.*       REGISTER.                                                    * 03400002
.*       THE TREE PARAMETER MAY BE OMITTED, IN WHICH CASE THE ADDRESS * 03500002
.*       OF THE RPT IS ASSUMED IN GPR 1.                              * 03600002
.*                                                                    * 03700002
.* A:    THE A-PARAMETER SPECIFIES THE ADDRESS OF THE RECORD          * 03800002
.*       CONTAINING THE KEY TO BE USED FOR THE ASSOCIATION. THE RECORD* 03900002
.*       ADDRESS MAY BE EITHER A MAIN STORAGE LOCATION OR MAY BE IN A * 04000002
.*       REGISTER, INDICATED BY ENCLOSING THE REGISTER NAME OR # IN   * 04100002
.*       PARENTHESES. FOR EXAMPLE, IF "A=LABEL" IS CODED, "LABEL" IS  * 04200002
.*       TAKEN AS THE SYMBOLIC NAME OF THE MAIN STORAGE LOCATION      * 04300002
.*       CONTAINING THE RECORD. THE A PARAMETER MAY BE USED IN        * 04400002
.*       CONJUNCTION WITH THE R PARAMETER TO SPECIFY A SCATTERED      * 04500002
.*       RECORD TO BE COLLECTED INTO A SPACE PROVIDED VIA THE GSPACE  * 04600002
.*       MACRO-INSTRUCTION.                                           * 04700002
.*                                                                    * 04800002
.* R:    THE R-PARAMETER IS USED TO SPECIFY THE RECORD WHEN IT IS     * 04900002
.*       DESIRED THAT THE INS MACRO ALLOCATE AN AREA TO HOLD THE      * 05000002
.*       RECORD VIA THE GSPACE MACRO AND MOVE THE RECORD TO THE AREA  * 05100002
.*       ALLOCATED BEFORE INSERTING THE ASSOCIATION IN THE RPT.       * 05200002
.*       THERE ARE TWO MODES FOR CODING THE R PARAMETER; THE FIRST WAY* 05300002
.*       IS IN CONJUNCTION WITH THE A PARAMETER, AND THE SECOND IS    * 05400002
.*       WITHOUT CODING THE A PARAMETER. IF BOTH THE A AND R          * 05500002
.*       PARAMETERS ARE CODED, THEN THE A PARAMETER PROVIDES THE      * 05600002
.*       ADDRESS OF A BASE AREA FROM WHICH TO COLLECT THE RECORD, AND * 05700002
.*       THE R-PARAMETER SPECIFIES THE RECORD IN THE BASE AREA BY     * 05800002
.*       PAIRS OF DISPLACEMENTS AND LENGTHS, ENCLOSED IN PARENTHESES. * 05900002
.*       THE DISPLACEMENT-LENGTH PAIRS ARE CODED AS ((D,L),(D,L),...  * 06000002
.*       ,(D,L)), WHERE EACH DISPLACEMENT AND LENGTH IS ENCLOSED IN   * 06100002
.*       PARENTHESES, AND THE ORDER THE PAIRS APPEAR IN THE LIST IS   * 06200002
.*       THE ORDER IN WHICH THE RECORD IS COLLECTED.                  * 06300002
.*       EACH DISPLACEMENT AND LENGTH MUST BE A SELF-DEFINING DECIMAL * 06400002
.*       NUMBER.                                                      * 06500002
.*       FOR EXAMPLE, CODING "A=(8),R=((10,3),(6,9))" CAUSES THE      * 06600002
.*       RECORD TO BE COLLECTED FROM THE TWO FIELDS AT OFFSETS 10 AND * 06700002
.*       6 RESPECTIVELY FROM THE BASE ADDRESS IN GPR 8. NOTE THAT NO  * 06800002
.*       CHECK IS MADE FOR OVERLAPPING FIELDS.                        * 06900002
.*       IF THERE IS ONLY ONE DISPLACEMENT-LENGTH PAIR, IT MAY BE     * 07000002
.*       CODED WITH ONLY ONE SET OF ENCLOSING PARENTHESES INSTEAD OF  * 07100002
.*       TWO.                                                         * 07200002
.*                                                                    * 07300002
.*       IF THE R PARAMETER IS CODED AND THE A PARAMETER IS NOT CODED,* 07400002
.*       THE ELEMENTS IN THE LIST FOR THE R PARAMETER MAY BE CODED AS * 07500002
.*       ADDRESS-LENGTH PAIRS. IN THIS CASE, EACH ADDRESS MAY EITHER  * 07600002
.*       BE A MAIN STORAGE LOCATION, OR IN A REGISTER. EACH ADDRESS   * 07700002
.*       MUST BE A RELOCATABLE EXPRESSION IF IT NOT IN A REGISTER.    * 07800002
.*       INSTEAD OF THE ADDRESS-LENGTH PAIR, A LABEL MAY BE CODED, AS * 07900002
.*       LONG AS THE LABEL HAS A LENGTH ATTRIBUTE THAT CAN BE USED TO * 08000002
.*       OBTAIN THE LENGTH OF THE CORRESPONDING FIELD.                * 08100002
.*                                                                    * 08200002
.* T:    THE T-PARAMETER IS USED TO SPECIFY THE RADIX PARTITION TREE  * 08300002
.*       TYPE FOR THE INSERTION. THE T-PARAMETER MUST BE CODED AS A   * 08400002
.*       SINGLE SELF-DEFINING DECMIAL NUMBER WITHOUT LEADING ZEROS.   * 08500002
.*       IF THE T-PARAMETER IS NOT CODED, THE TYPE WILL BE OBTAINED   * 08600002
.*       FROM THE GLOBAL VARIABLE &IGATYPE (IF IT IS A VALID RPT      * 08700002
.*       TYPE). IF IT IS NOT A VALID TREE TYPE, A TYPE 8 IS SUPPLIED, * 08800002
.*       AND THE GLOBAL VARIABLE &IGATYPE IS SET TO 8.                * 08900002
.*                                                                    * 09000002
.*       THE PARAMETERS INSARG, MOVE, RECL, AND TYPE SHOULD NOT BE    * 09100002
.*       USED, AS THEY ARE ONLY PRESENT FOR COMPATIBILITY WITH EARLIER* 09200002
.*       VERSIONS OF THE INSERT MACRO.                                * 09300002
         GBLC  &IGABLST  THE OFFSET INTO THE TREE HEADER FOR THE LIST  *09400002
                         OF RPT ENTRY POINTS.                           09500002
         GBLC  &IGAINS                                                  09600002
         GBLC  &IGARPT#  THE RADIX PARTITION TREE TYPE FROM EITHER THE *09700002
                         T OR TYPE PARAMETER.                           09800002
         GBLA  &IGARECL  THE LENGTH OF THE RECORD TO BE INSERTED BY THE*09900002
                         INSERT MACRO-INSTRUCTION.                      10000002
         GBLA  &IGALEFT(256)  LEFT INVERTIBLE SUBTRACTION EDGES FOR THE*10100002
                         BINARY PARSE TREE.                             10200002
         GBLA  &IGARGHT(256)  RIGHT INVERTIBLE SUBTRACTION EDGES FOR   *10300002
                         THE BINARY PARSE TREE.                         10400002
         GBLA  &IGAX     PENULTIMATE VERTEX ON PATH TO CURRENT ATOM    *10500002
                         WHEN SCANNING.                                 10600002
         GBLA  &IGAZ     LAST INNER VERTEX ON PATH TO ATOM.             10700002
         GBLA  &IGAPATH(16)  PATH VECTOR FOR THE SCANNING OPERATIONS ON*10800002
                         THE PARSE TREE.                                10900002
         GBLA  &IGALEVL  NUMBER OF NESTED LEVELS OF PARENTHESES FOR    *11000002
                         CURRENT ATOM.                                  11100002
         GBLB  &IGAOKAY  ON IF THE PARSE IN RPTDSECT DID NOT FIND ANY  *11200002
                SYNTAX ERRORS IN THE R PARAMETER LIST.                  11300002
         LCLA  &I        A LOCAL VARIABLE FOR KEEPING TRACK OF THE     *11400002
                         CURRENT ENTRY BEING SCANNED IN THE R PARAMETER*11500002
                         LIST.                                          11600002
         LCLA  &LNG      THE LENGTH OF THE CURRENT DISPLACEMENT-LENGTH *11700002
                         PAIR.                                          11800002
         LCLA  &TMPA     USED TO REMEMBER &IGAPATH(&IGALEVL-1).         11900002
         LCLC  &RC       USED TO SET THE REQUEST MODE FOR THE GSPACE   *12000002
                         MACRO TO CONDIRIONAL OR UNCONDITIONAL.         12100002
         LCLC  &X        JUST A LOCAL CHARACTER VECTOR FOR COLLECTING  *12200002
                         OPERANDS.                                      12300002
         LCLB  &REQUEST  ON IF THE GSPACE REQUEST IS A CONDITIONAL     *12400002
                         REQUEST.                                       12500002
         LCLB  &R1SAVED  ON IF REGISTER 1 IS SAVED THROUGH THE GSPACE  *12600002
                         OPERATION.                                     12700002
         LCLB  &FINEQU   ON IF THE EQUATE "FIN&SYSNDX EQU *" MUST BE   *12800002
                         GENERATED AT THE END OF THE MACRO EXECUTION.   12900002
         LCLB  &ERROR    THIS BIT IS TURNED ON WHENEVER AN MNOTE OF    *13000002
                         SUFFICIENT SEVERITY IS GENERATED.              13100002
         LCLA  &DSP      THIS IS USED FOR COLLECTING THE DISPLACEMENT  *13200002
                         AS A NUMBER.                                   13300002
         LCLC  &FIELD    THIS IS USED TO HOLD THE FIELD OF AN (F,L)    *13400002
                         PAIR WHILE GETTING THE L.                      13500002
         LCLB  &XFER     ON TO GENERATE THE MOVES WHEN IT IS THE RIGHT *13600002
               ITERATION THROUGH THE LOOP.                              13700002
.*A000000                                                        Y02147 13800002
.********************************************************************** 13900002
.* CHECK TO SEE WHETHER ANY OF THE OLD PARAMETERS ARE CODED, AND IF   * 14000002
.* THEY ARE THEN MAP THEM TO THE NEW PARAMETERS VIA MACRO RECURSION.  * 14100002
.********************************************************************** 14200002
.*                                                                    * 14300002
         AIF   ((K'&INSARG EQ 0)AND(K'&MOVE EQ 0)AND(K'&RECL EQ 0)).NEW*14400002
                         GO IF NONE OF THE OLD PARAMETERS ARE CODED.    14500002
         AIF   (K'&RECL EQ 0).NORECL  SEE IF THE RECORD LENGTH IS NOT  *14600002
                         CODED.                                         14700002
&TAG     INS   &TREE,A=&INSARG,T=&T,TYPE=&TYPE,R=(0,&RECL),C=1          14800002
         AGO   .FIN      ALL DONE, NOW EXIT.                            14900002
.NORECL  ANOP                                                           15000002
&TAG     INS   &TREE,A=&INSARG,T=&T,TYPE=&TYPE,C=1                      15100002
         AGO   .FIN  ALL DONE NOW, EXIT FROM THE INS MACRO-INSTRUCTION. 15200002
.********************************************************************** 15300002
.* ALL FINISHED WITH COMPATIBILITY PROCESSING WITH THE OLD FORMATS,   * 15400002
.* NOW REALLY DO IT.                                                  * 15500002
.********************************************************************** 15600002
.NEW     ANOP                                                           15700002
.********************************************************************** 15800002
.* CHECK TO SEE IF THE LABEL FIELD IS CODED AND GENERATE THE          * 15900002
.* APPROPRIATE EQUATE IF IT IS.                                       * 16000002
.********************************************************************** 16100002
         AIF   (K'&TAG EQ 0).NOTAG  GO AROUND THE EQUATE IF THE TAG IS *16200002
                         NOT PRESENT.                                   16300002
&TAG     EQU   *         PROVIDE THE LABEL.                             16400002
.NOTAG   ANOP                                                           16500002
.********************************************************************** 16600002
.* CHECK THE TYPE AND T PARAMETERS TO SEE IF A VALID RPT TYPE IS      * 16700002
.* SPECIFIED. IF NEITHER IS SPECIFIED, ASSUME IT IS TYPE 8 RPT. THE   * 16800002
.* TYPE IS PUT INTO THE GLOBAL VARIABLE &IGARPT# AT THE END OF THE    * 16900002
.* TYPE CHECKING SECTION.                                             * 17000002
.********************************************************************** 17100002
.RPT#    AIF   (K'&T EQ 0).RPT#TMT  SEE IF THE T PARAMETER IS CODED.    17200002
         AIF   (K'&TYPE EQ 0).RPT#TCK  USE THE T PARAMETER IF IT IS    *17300002
                         CODED AND THE TYPE PARAMETER IS NOT CODED.     17400002
.********************************************************************** 17500002
.* BOTH THE T AND TYPE PARAMETERS ARE CODED; SEE IF THEY ARE THE SAME,* 17600002
.* AND IF THEY ARE NOT THEN USE T.                                    * 17700002
.********************************************************************** 17800002
         AIF   ('&T' EQ '&TYPE').RPT#TCK  IF THEY ARE THE SAME THEN USE*17900002
                         T.                                             18000002
         MNOTE 4,'TYPE CONFLICT, ONLY T OR TYPE SHOULD BE CODED.'       18100002
.RPT#TCK ANOP                                                           18200002
&IGARPT# SETC  '&T'      GET THE RPT TYPE.                              18300002
         AGO   .RPT#CHK  GO TO CHECK THE VALIDITY OF THE RADIX         *18400002
                         PARTITION TREE TYPE.                           18500002
.********************************************************************** 18600002
.* THE T PARAMETER IS NOT CODED, SEE IF THE TYPE PARAMETER IS CODED.  * 18700002
.********************************************************************** 18800002
.RPT#TMT AIF   (K'&TYPE EQ 0).RPT#8  IF BOTH ARE LEFT OUT USE TYPE 8   *18900002
                         RPT.                                           19000002
&IGARPT# SETC  '&TYPE'   SET THE TYPE TO THE TYPE THAT IS SPECIFIED BY *19100002
                         THE TYPE PARAMETER.                            19200002
         AGO   .RPT#CHK  GO CHECK IT FOR VALIDITY.                      19300002
.RPT#CHK AIF   (('&IGARPT#' EQ '8')OR('&IGARPT#' EQ '5')OR('&IGARPT#' E*19400002
               Q '4')).RPT#FIN                                          19500002
         MNOTE 4,'INVALID RPT TYPE, TYPE 8 ASSUMED.'                    19600002
.RPT#8   ANOP                                                           19700002
&IGARPT# SETC  '8'       SET RPT TYPE TO THE DEFAULT.                   19800002
.RPT#FIN ANOP                                                           19900002
      RPTDSECT T=5,DS=NO                                                20000002
      RPTDSECT T=8,DS=NO                                                20100002
.********************************************************************** 20200002
.* INSERT INTO A TYPE 8 RADIX PARTITION TREE. FIRST CHECK TO SEE      * 20300002
.* WHETHER THE AREA TO HOLD THE NEW RECORD MUST BE ALLOCATED VIA THE  * 20400002
.* GSPACE MACRO-INSTRUCTION. IF THE R-PARAMETER IS CODED THEN THE AREA* 20500002
.* MUST BE ALLOCATED. IF THE AREA DOES NOT HAVE TO BE ALLOCATED GO    * 20600002
.* DIRECTLY TO .CHKA.                                                 * 20700002
.********************************************************************** 20800002
         AIF   (K'&R EQ 0).CHKA  SEE IF THERE IS NO RECORD SPECIFIED.   20900002
.********************************************************************** 21000002
.* CHECK TO SEE WHETHER THE TREE ADDRESS IS IN GPR 1 AND MUST BE      * 21100002
.* PRESERVED THROUGH THE GSPACE OPERATION.                            * 21200002
.********************************************************************** 21300002
         AIF   (K'&TREE EQ 0).TREEMT  GO IF THE TREE PARAMETER IS NOT  *21400002
                         CODED.                                         21500002
         AIF   ('&TREE'(1,1) NE '(').TREEOK  SEE IF IT IS NOT IN A     *21600002
                         REGISTER.                                      21700002
         AIF   ('&TREE' EQ '(1)').TREEMT  SEE IF IT IS SPECIFICALLY    *21800002
                         SPECIFIED IN REGISTER 1.                       21900002
         AGO   .TREEOK   IT IS APPARENTLY NOT IN REGISTER 1, ASSUME IT *22000002
                         IS OK.                                         22100002
.TREEMT  ST    1,((4*1)+20-64*((2+1)/16))(,13)  SAVE R1.                22200002
&R1SAVED SETB  (1)       SET THE BIT ON TO INDICATE R1 WAS STORED      *22300002
                         THROUGH THE GSPACE OPERATION.                  22400002
.TREEOK  ANOP                                                           22500002
.********************************************************************** 22600002
.* DETERMINE THE LENGTH OF THE AREA NEEDED FOR THE RECORD BY ADDING UP* 22700002
.* ALL THE INDIVIDUAL LENGTHS IN THE DISPLACEMENT-LENGTH PAIRS IN THE * 22800002
.* R-PARAMETER.                                                       * 22900002
.********************************************************************** 23000002
.* THE R PARAMETER HAS BEEN CHECKED AT THIS POINT, AND IS NOT THE     * 23100002
.* EMPTY STRING.                                                      * 23200002
.* THE FOLLOWING LOOP IS DONE TWICE; THE FIRST TIME THROUGH IT ONLY   * 23300002
.* CHECKS ALL THE R-PARAMETER ELEMENTS FOR VALIDITY AND ADDS UP ALL   * 23400002
.* THE FIELD LENGTHS FOR THE GSPACE, AND THE SECOND TIME THROUGH IT   * 23500002
.* GENERATES ALL THE MVC'S TO MOVE THE RECORD TO THE AREA ALLOCATED.  * 23600002
.* IF THE FIRST TIME THROUGH FINDS ERRORS, THEN THERE IS NO SECOND    * 23700002
.* TIME.                                                              * 23800002
.********************************************************************** 23900002
.LOOPAIR ANOP                                                           24000002
&IGARECL SETA  0         INITIALIZE THE RECORD LENGTH TO ZERO.          24100002
         AIF   (N'&R EQ 2).RHAS2  SEE IF THERE ARE EXACTLY TWO ELEMENTS*24200002
                         IN R ON PARENTHESIS LEVEL ONE.                 24300002
         AIF   (N'&R NE 1).RMIXED  SEE IF THERE ARE MORE THAN TWO      *24400002
                         ELEMENTS, FOR IF SO THE LIST CONSISTS OF A    *24500002
                         SERIES OF FIELD NAMES OR (D,L) PAIRS.          24600002
.********************************************************************** 24700002
.* R HAS ONLY ONE ELEMENT ON LEVEL 1. FIND OUT WHICH OF THE FOLLOWING * 24800002
.* CASES APPLIES, AND TAKE THE INDICATED ACTION:                      * 24900002
.* IN THE FOLLOWING DISCUSSION, )F" MEANS A FIELD NAME, "D" MEANS     * 25000002
.* DISPLACEMENT, "L" MEANS LENGTH, AND "X" MEANS ANY STRING. THE D AND* 25100002
.* L FIELDS MUST BE SELF-DEFINING TERMS,.                             * 25200002
.* IF:   THEN:                                                        * 25300002
.* R=F   ENTER THE ROUTINE AT .RMIXED TO PROCESS A LIST OF PAIRS OF   * 25400002
.*       F'S AND (D,L) PAIRS, SINCE THIS CASE WILL BE TREATED AS A    * 25500002
.*       SINGLE FIELD NAME BY THAT ROUTINE.                           * 25600002
.* R=(F) THIS IS AN ERROR, BECAUSE OF THE POSSIBLE FUTURE USE OF THIS * 25700002
.*       FORM TO INDICATE THE ADDRESS OF A LIST OF DISPLACEMENT-LENGTH* 25800002
.*       PAIRS IN A REGISTER.                                         * 25900002
.* R=L   L IS THE LENGTH OF THE RECORD TO BE INSERTED. THE A PARMAETER* 26000002
.*       MUST BE CODED FOR THIS TO BE VALID, BECAUSE OTHERWISE THERE  * 26100002
.*       IS NO WAY TO FIND OUT WHERE THE RECORD IS THAT IS TO BE      * 26200002
.*       INSERTED.                                                    * 26300002
.* R=(L) THIS IS AN ERROR, BECAUSE OF THE POSSIBILITY THAT IN THE     * 26400002
.*       FUTURE I WILL WANT TO PUT THE ADDRESS OF A LIST OF           * 26500002
.*       DISPLACEMENT-LENGTH PAIRS IN A REGISTER.                     * 26600002
.* R=((X)) ENTER THE .RMIXED ROUTINE, SINCE IT LOOKS LIKE A LIST OF   * 26700002
.*       DISPLACEMENT-LENGTH PAIRS WITH ONLY ONE PAIR.                * 26800002
.*       ANYTHING ELSE IS INVALID, AND PRODUCES THE MNOTE 12,'INVALID * 26900002
.*       R-PARAMETER.'                                                * 27000002
.********************************************************************** 27100002
         AIF   ('&R'(1,1) NE '(').RNOTLP  SEE IF THERE ARE NO          *27200002
                         PARENTHESES AROUND THE OPERAND.                27300002
         AIF   ('&R'(1,2) EQ '((').RMIXED  SEE IF THIS IS THE CASE     *27400002
                         R=((X)).                                       27500002
         MNOTE 12,'A REGISTER CANNOT BE SPECIFIED FOR THE LIST OF DISPL*27600002
               ACEMENT-LENGTH PAIRS.'                                   27700002
&ERROR   SETB  1         SET THE ERROR FLAG ON.                         27800002
         AGO   .RFIN     END THIS PART.                                 27900002
.********************************************************************** 28000002
.* THIS MUST BE ONE OF THE TWO CASES R=F OR R=L.                      * 28100002
.********************************************************************** 28200002
.RNOTLP  ANOP                                                           28300002
         AIF   (((T'&R(1) NE 'M')AND(T'&R(1) NE 'N')AND(T'&R(1) NE 'O')*28400002
               AND(T'&R(1) NE 'T')AND(T'&R(1) NE 'W')AND(T'&R(1) NE '$'*28500002
               )AND(T'&R(1) NE 'U'))).RMIXED                            28600002
.* THIS MUST BE THE CASE WHERE "R=L" IS CODED.                        * 28700002
         AIF   (T'&R(1) NE 'N').R1NOTN  SEE IF IT IS A SELF-DEFINING   *28800002
                         FIELD.                                         28900002
.********************************************************************** 29000002
.* R=L IS CODED, AND L IS A SELF-DEFINING TERM. USE L FOR THE RECORD  * 29100002
.* LENGTH, BUT FIRST CHECK TO SEE IF THE A PARAMETER IS CODED. IF THE * 29200002
.* A PARAMETER IS NOT CODED IT IS AN ERROR.                           * 29300002
.********************************************************************** 29400002
&IGARECL SETA  (&R(1))   GET THE RECORD LENGTH FROM THE L OF THE R     *29500002
                         PARAMETER.                                     29600002
         AIF   (K'&A EQ 0).R1AMT  SEE IF THE A PARAMETER HAS BEEN LEFT *29700002
                         OUT.                                           29800002
         AIF   (&IGARECL GT 256).R1LERR  FOR THE NONCE ONLY TAKE FIELDS*29900002
                         THAT ARE LESS THAN 257 BYTES LONG.             30000002
         AIF   (NOT &XFER).RFIN  SEE IF THIS IS THE MVC GENERATION     *30100002
                         LOOP, OR JUST THE VALIDATION AND ADDING UP    *30200002
                         FIELD LENGTHS LOOP.                            30300002
.* GENERATE THE MOVE OF THE RECORD TO THE AREA ALLOCATED VIA GSPACE.  * 30400002
         AIF   ('&A'(1,1) EQ '(').R1AGPR  SEE IF THE ADDRESS IS IN A   *30500002
                         GPR.                                           30600002
         MVC   0(&IGARECL,1),&A  MOVE THE RECORD.                       30700002
         AGO   .RFIN     ALL DONE NOW.                                  30800002
.R1AGPR  MVC   0(&IGARECL,1),0&A  MOVE THE RECORD.                      30900002
         AGO   .RFIN     GO TO THE END OF THE R PARAMETER PROCESSING.   31000002
.********************************************************************** 31100002
.* FOLLOWING ARE THE MISCELLANEOUS ERROR MNOTES FROM THE SINGLE       * 31200002
.* ELEMENT CASE OF THE R PARAMETER.                                   * 31300002
.********************************************************************** 31400002
.R1LERR  MNOTE 12,'THE LENGTH OF EACH FIELD DEFINED BY R CANNOT EXCEED *31500002
               256 BYTES.'                                              31600002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON SO THE MVC'S DON'T GET  *31700002
                         GENERATED.                                     31800002
         AGO   .RFIN                                                    31900002
.R1AMT   MNOTE 12,'THE A PARAMETER MUST BE CODED WITH R AS CODED.'      32000002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         32100002
         AGO   .RFIN                                                    32200002
.R1NOTN  MNOTE 12,'THE LENGTH MUST BE A SELF-DEFINING TERM FOR THE R PA*32300002
               RAMETER.'                                                32400002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         32500002
         AGO   .RFIN                                                    32600002
.********************************************************************** 32700002
.* THE R PARAMETER HAS EXACTLY TWO ELEMENTS IN IT ON LEVEL 1. SEE IF  * 32800002
.* EITHER OF THESE TWO ELEMENTS STARTS WITH A LEFT PARENTHESIS, WHICH * 32900002
.* MEANS ONE OF THE CASES R=(X,(X)), R=((X),X), OR R=((X),(X)). IF IT * 33000002
.* IS ONE OF THESE CASES ENTER THE MIXED ROUTINE AT .RMIXED.          * 33100002
.* IF IT IS NOT ONE OF THOSE THREE CASES, THEN IT MUST BE ONE OF THE  * 33200002
.* CASES R=(F,F), R=(F,L), OR R=(D,L). NOTE THAT THE CASE R=(D,L) CAN * 33300002
.* BE CODED AS R=(,L).                                                * 33400002
.********************************************************************** 33500002
.RHAS2   AIF   (K'&R(2) NE 0).R2NOTMT  SEE IF THE SECOND ELEMENT IS THE*33600002
                         EMPTY STRING. THIS IS NO GOOD.                 33700002
         MNOTE 12,'THE SECOND ELEMENT OF A DISPLACEMENT-LENGTH PAIR MUS*33800002
               T BE CODED.'                                             33900002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         34000002
         AGO   .FIN      FORGET IT, CAN'T DO ANYTHING WITH AN EMPTY    *34100002
                         STRING FOR THE LENGTH.                         34200002
.R2DMT   ANOP                                                           34300002
&DSP     SETA  (0)       SET THE DISPLACEMENT TO ZERO, SINCE IT IS     *34400002
                         CODED AS THE EMPTY STRING.                     34500002
         AGO   .R2MERGE  MERGE WITH THE CASE WHERE THE DISPLACEMENT IS *34600002
                         NOT THE EMPTY STRING.                          34700002
.R2NOTMT AIF   (K'&R(1) EQ 0).R2DMT  SEE IF THE DISPLACEMENT IS THE    *34800002
                         EMPTY STRING.                                  34900002
         AIF   (('&R(1)'(1,1) EQ '(')OR('&R(2)'(1,1) EQ '(')).RMIXED   *35000002
                         LOOK FOR ONE OF THE CASES R=(X,(X)), R=((X),  *35100002
                         X), OR R=((X),(X)).                            35200002
         AIF   (((T'&R(2) NE 'M')AND(T'&R(2) NE 'N')AND(T'&R(2) NE 'O')*35300002
               AND(T'&R(2) NE 'T')AND(T'&R(2) NE 'W')AND(T'&R(2) NE '$'*35400002
               )AND(T'&R(2) NE 'U'))).RMIXED                            35500002
.* THE SECOND ELEMENT IS NOT A FIELD NAME, SO IT MUST EITHER BE ONE OF* 35600002
.* THE TWO CASES R=(F,L) OR R=(D,L), OR IT IS AN ERROR.               * 35700002
         AIF   ((T'&R(1) NE 'M')AND(T'&R(1) NE 'N')AND(T'&R(1) NE 'O')A*35800002
               ND(T'&R(1) NE 'T')AND(T'&R(1) NE 'W')AND(T'&R(1) NE '$')*35900002
               AND(T'&R(1) NE 'U')).R2F1                                36000002
         AIF   (T'&R(1) NE 'N').R2DTYPE  SEE IF THE FIRST ONE IS A     *36100002
                         VALID DISPLACEMENT.                            36200002
&DSP     SETA  (&R(1))   PICK UP THE DISPLACEMENT.                      36300002
.R2MERGE ANOP                                                           36400002
         AIF   (T'&R(2) EQ 'N').R2TSELF  SEE IF THE LENGTH IS A        *36500002
                         SELF-DEFINING FIELD.                           36600002
&I       SETA  (K'&R(2))  CHECK THE FIELD TO SEE IF IT ALL NUMERIC.     36700002
.R2LTKLP AIF   (('&R(2)'(&I,1) LT '0')OR('&R(2)'(&I,1) GT '9')).R2LTYPE*36800002
                         SEE IF IT IS NOT ONE OF THE DIGITS 0-9.        36900002
&I       SETA  (&I-1)    STEP DOWN TO THE NEXT CHARACTER.               37000002
         AIF   (&I GT 0).R2LTKLP  SEE IF ALL THE CHARACTERS HAVE BEEN  *37100002
                         CHECKED.                                       37200002
.R2TSELF ANOP                                                           37300002
&IGARECL SETA  (&R(2))   GET THE LENGTH AS A NUMBER.                    37400002
         AIF   (&IGARECL GT 256).R1LERR  SEE IF THE LENGTH IS MORE THAN*37500002
                         256 BYTES.                                     37600002
         AIF   (&DSP GT 4095).R2DERR  SEE IF THE DISPLACEMENT IS       *37700002
                         GREATER THAN 4095.                             37800002
         AIF   (K'&A EQ 0).R1AMT  SEE IF THE A PARAMETER IS LEFT OUT;  *37900002
                         THAT IS BAD.                                   38000002
         AIF   (NOT &XFER).RFIN  SEE IF THIS IS THE MVC GENERATING LOOP*38100002
                         OR NOT.                                        38200002
.********************************************************************** 38300002
.* GENERATE THE MOVE OF THE RECORD TO THE AREA ALLOCATED FOR IT VIA   * 38400002
.* THE GSPACE MACRO-INSTRUCTION.                                      * 38500002
.********************************************************************** 38600002
         AIF   ('&A'(1,1) EQ '(').R2AGPR  SEE IF THE ADDRESS IS IN A   *38700002
                         GPR.                                           38800002
         MVC   0(&IGARECL,1),&DSP+&A  MOVE THE RECORD.                  38900002
         AGO   .RFIN                                                    39000002
.R2AGPR  MVC   0(&IGARECL,1),&DSP&A  MOVE THE RECORD IN.                39100002
         AGO   .RFIN                                                    39200002
.********************************************************************** 39300002
.* IT IS AN (F,L) PAIR, NOW SEE IF THE SECOND ELEMENT IS A VALID L.   * 39400002
.********************************************************************** 39500002
.R2F1    AIF   (T'&R(2) NE 'N').R2LTYPE  SEE IF THE SECOND ELEMENT IS A*39600002
                         SELF-DEFINING TERM.                            39700002
&IGARECL SETA  (&R(2))   GET THE LENGTH OF THE (F,L) PAIR.              39800002
         AIF   (&IGARECL GT 256).R1LERR  SEE IF THE LENGTH OF THE FIELD*39900002
                         IS MORE THAN 256.                              40000002
         AIF   (NOT &XFER).RFIN  SEE IF THIS IS THE MOVE GENERATION    *40100002
                         LOOP.                                          40200002
         MVC   0(&IGARECL,1),&R(1)  MOVE THE RECORD.                    40300002
         AIF   (K'&A EQ 0).RFIN  SEE IF THE A PARAMETER IS CODED.       40400002
         MNOTE 4,'THE A PARAMETER IS REDUNDANT.'                        40500002
         AGO   .RFIN     ALL DONE NOW, GO CHECK FOR THE MOVE GENERATION*40600002
                         ITERATION.                                     40700002
.********************************************************************** 40800002
.* THE FOLLOWING ARE THE SUNDRY MNOTES FOR THE TWO ELEMENT CASE FOR   * 40900002
.* THE R PARAMETER.                                                   * 41000002
.********************************************************************** 41100002
.R2DERR  MNOTE 12,'DISPLACEMENT IN R PARAMETER CANNOT EXCEED 4095.'     41200002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         41300002
         AGO   .RFIN                                                    41400002
.R2DTYPE MNOTE 12,'THE DISPLACEMENT IN R MUST BE A SELF-DEFINING TERM.' 41500002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON TO PREVENT THE MVC      *41600002
                         GENERATION.                                    41700002
         AGO   .RFIN                                                    41800002
.R2LTYPE MNOTE 12,'THE LENGTH IN R MUST BE A SELF-DEFINING TERM.'       41900002
&ERROR   SETB  1         SET THE ERROR FLAG ON.                         42000002
         AGO   .RFIN                                                    42100002
.********************************************************************** 42200002
.* THE R PARAMETER CONSISTS OF A LIST OF MIXED PAIRS OF FIELDS AND    * 42300002
.* DISPLACEMENT-LENGTH PAIRS. PICK OUT ALL THESE AND CHECK THEM FOR   * 42400002
.* VALIDITY, WHILE ADDING UP ALL THE LENGTHS OF THE INDIVIDUAL FIELDS * 42500002
.* FOR THE GSPACE MACRO-INSTRUCTION LATER. GENERATE THE MVC'S IF THIS * 42600002
.* IS THE SECOND TIME THROUGH THE LOOP.                               * 42700002
.********************************************************************** 42800002
.********************************************************************** 42900002
.* THIS IS THE SECTION TO PROCESS A MIXED LIST OF FIELD NAMES AND (D  * 43000002
.* ,L) PAIRS. PARSE THE OPERAND USING THE PARSE IN THE RPTDSECT       * 43100002
.* MACRO-INSTRUCTION, AND CHECK THE VARIABLE &IGAOKAY TO SEE IF THERE * 43200002
.* ARE NO SYNTAX ERRORS IN THE R PARAMETER.                           * 43300002
.********************************************************************** 43400002
.RMIXED  ANOP                                                           43500002
      RPTDSECT SCAN=PARSE,LIST=&R  PARSE THE OPERAND.                   43600002
         AIF   (&IGAOKAY).RMXOK  SEE IF THE PARSE DETECTED BAD SYNTAX.  43700002
         MNOTE 12,'INVALID SYNTAX IN THE R PARAMETER.'                  43800002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         43900002
         AGO   .RFIN     CAN'T DO ANYTHING WITH THIS.                   44000002
.********************************************************************** 44100002
.* THE SYNTAX APPEARS TO BE OK, NOW START SCANNING OUT THE ATOMS ONE  * 44200002
.* AT A TIME, ANALYZING EACH ONE INDIVIDUALLY IN CONTEXT WITH THE ONES* 44300002
.* ON EITHER SIDE OF IT.                                              * 44400002
.********************************************************************** 44500002
.RMXOK RPTDSECT SCAN=ISCAN  INITIALIZE FOR SUBSEQUENT SCANNING OF      *44600002
                         ATOMS.                                         44700002
.RMXMOR RPTDSECT SCAN=NEXT  GET THE CURSOR POSITIONED AT THE NEXT ATOM. 44800002
.RMXCHK  AIF   (&IGAX EQ 0).RFIN  SEE IF THERE ARE ANY MORE TO DO.      44900002
         AIF   (&IGALEVL EQ 2).RMXLVL2  SEE IF THIS ATOM IS ON LEVEL 2. 45000002
         AIF   (&IGALEVL LE 1).RMXL01  SEE IF THIS ATOM IS ON LEVEL 0  *45100002
                         OR 1.                                          45200002
.********************************************************************** 45300002
.* THE CURRENT ATOM HAS TOO MANY LEVELS OF PARENTHESES AROUND IT, GIVE* 45400002
.* THE ERROR MESSAGE AND GO LOOK FOR THE NEX THING THAT CHANGES LEVEL * 45500002
.* 1 IN THE PATH VECTOR.                                              * 45600002
.********************************************************************** 45700002
&I       SETA  &IGAPATH(1)+1  SET &I TO THE CURRENT OPERAND NUMBER.     45800002
         MNOTE 12,'TOO MANY () LEVELS IN OPERAND &I OF R.'              45900002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         46000002
.********************************************************************** 46100002
.* AN ERROR HAS BEEN DETECTED AND FLAGGED IN THE CURRENT OPERAND. SCAN* 46200002
.* OVER TO THE NEXT ATOM THAT IS NOT PART OF THE CURRENT ENTRY ON     * 46300002
.* LEVEL 1 IN THE PARAMETER.                                          * 46400002
.********************************************************************** 46500002
.SYNC    ANOP                                                           46600002
&I       SETA  &IGAPATH(1)  SET &I TO THE INDEX OF THE OPERAND ON LEVEL*46700002
                         1.                                             46800002
      RPTDSECT SCAN=NEXT  SET THE CURSOR TO THE NEXT ONE.               46900002
         AIF   (&IGAX EQ 0).RFIN  SEE IF THERE AREN'T ANY MORE.         47000002
         AIF   (&I EQ &IGAPATH(1)).SYNC  SEE IF IT IS STILL ON THE SAME*47100002
                         ONE.                                           47200002
         AGO   .RMXCHK   FINALLY GOT THE NEXT ATOM, NOW GO CHECK IT FOR*47300002
                         VALIDITY.                                      47400002
.********************************************************************** 47500002
.* THE CURRENT ATOM IS ON LEVEL 0 OR 1. THEREFORE IT SHOULD BE A VALID* 47600002
.* FIELD NAME; SEE IF IT IS.                                          * 47700002
.********************************************************************** 47800002
.RMXL01  ANOP                                                           47900002
.RMX01   ANOP                                                           48000002
&I       SETA  (1+&IGAPATH(1))  SET &I TO THE 1-ORIGIN INDEX OF THE    *48100002
                         FIELD NAME ON LEVEL 1.                         48200002
         AIF   ((T'&R(&I) NE 'M')AND(T'&R(&I) NE 'N')AND(T'&R(&I) NE 'O*48300002
               ')AND(T'&R(&I) NE 'T')AND(T'&R(&I) NE 'W')AND(T'&R(&I) N*48400002
               E '$')AND(T'&R(&I) NE 'U')).RMX01OK                      48500002
         MNOTE 12,'OPERAND &I OF R DOES NOT HAVE THE PROPER TYPE ATTRIB*48600002
               UTE.'                                                    48700002
&ERROR   SETB  (1)       SET THE ERROR FLAG.                            48800002
         AGO   .SYNC     GO POSITION THE CURSOR TO THE NEXT ONE.        48900002
.********************************************************************** 49000002
.* THE CURRENT ATOM LOOKS LIKE A VALIID FIELD NAME, GET ITS LENGTH    * 49100002
.* ATTRIBUTE AND SEE IF IT ACCEPTABLE.                                * 49200002
.********************************************************************** 49300002
.RMX01OK ANOP                                                           49400002
&LNG     SETA  (L'&R(&I))  CAPTURE IT AS A NUMBER.                      49500002
         AIF   (&LNG LE 256).RMX0LOK  SEE IF IT EXCEEDS 256.            49600002
         MNOTE 12,'THE LENGTH OF FIELD &I OF R EXCEEDS 256 BYTES.'      49700002
&ERROR   SETB  (1)       SET TEH ERROR FLAG.                            49800002
         AGO   .SYNC     GO LOOK AT THE NEXT ONE.                       49900002
.RMX0LOK ANOP                                                           50000002
.********************************************************************** 50100002
.* NOW SEE IF THIS IS THE MOVE GENERATION ITERATION.                  * 50200002
.********************************************************************** 50300002
         AIF   (NOT &XFER).RX0M  GO IF THIS ISN'T THE MOVE GENERATION  *50400002
                         ITERATION.                                     50500002
         MVC   &IGARECL.(&LNG,1),&R(&I)  MOVE THE FIELD.                50600002
.RX0M    ANOP                                                           50700002
&IGARECL SETA  (&IGARECL+&LNG)  EKE THE CUMMULATIVE RECORD LENGTH.      50800002
         AGO   .RMXMOR   GO LOKK FOR THE NEXT ONE.                      50900002
.********************************************************************** 51000002
.* THE CURRENT ATOM IS ON LEVEL 2. IT MUST THEREFORE BE THE FIRST     * 51100002
.* ELEMENT IN ONE OF THE CASES (F,L) OR (D,L).                        * 51200002
.* FIND OUT WHETHER THE CURRENT ATOM IS AN F OR A D.                  * 51300002
.********************************************************************** 51400002
.RMXLVL2 ANOP                                                           51500002
&X       SETC  '0'       SET THIS FOR THE CASE WHERE THE DISPLACEMENT  *51600002
                         IS AN EMPTY STRING.                            51700002
         AIF   (&IGAZ EQ 0).RMGDSP  GO IF IT IS AN EMPTY STRING, WHICH *51800002
                         MEANS A DISPLACEMENT OF 0.                     51900002
.********************************************************************** 52000002
.* SEE IF ALL THE CHARACTERS IN THE CURRENT ATOM ARE DIGITS 0 THROUGH * 52100002
.* 9, WHICH WOULD MAKE IT A SELF-DEFINING DECIMAL TERM.               * 52200002
.********************************************************************** 52300002
&I       SETA  0         INITIALIZE THE INDEX OF THE CURRENT CHARACTER *52400002
                         IN THE ATOM.                                   52500002
.RMCONT  AIF   (('&R'(&IGALEFT(&IGAZ)+&I,1) LT '0')OR('&R'(&IGALEFT(&IG*52600002
               AZ)+&I,1) GT '9')).RMNOTD                                52700002
&I       SETA  (&I+1)    EKE THE INDEX.                                 52800002
         AIF   (&I LT &IGARGHT(&IGAZ)).RMCONT  KEEP GOING UNTIL ALL    *52900002
                         DIGITS HAVE BEEN EXAMINED.                     53000002
         AIF   (&IGARGHT(&IGAZ) GT 4).RMXBADD  SEE IF THE DISPLACEMENT *53100002
                         HAS TOO MANY BYTES IN IT.                      53200002
&X       SETC  '&R'(&IGALEFT(&IGAZ),&I)  GET THE DISPLACEMENT AS A     *53300002
                         NUMBER.                                        53400002
.RMGDSP  ANOP                                                           53500002
&DSP     SETA  (&X)      GET THE NUMBER NOW.                            53600002
         AIF   (&DSP GT 4095).RMXDBAD  SEE IF THE DISPLACEMENT IS TOO  *53700002
                         BIG.                                           53800002
.********************************************************************** 53900002
.* THE CURRENT ATOM IS A VALID DISPLACEMENT OF A (D,L) PAIR, AND ITS  * 54000002
.* ARITHMETIC VALUE IS IN THE APPROPRIATE RANGE OF VALUES FOR A       * 54100002
.* DISPLACEMENT. ITS VALUE HAS BEEN CAPTURED IN &DSP. NOW LOOK FOR THE* 54200002
.* CORRESPONDING L OF THE PAIR.                                       * 54300002
.********************************************************************** 54400002
&I       SETA  (&IGAPATH(1))  SAVE THE CURRENT ATOM LEVEL 1 INDEX.      54500002
      RPTDSECT SCAN=NEXT  POSITION THE CURSOR TO THE NEXT ATOM.         54600002
         AIF   (&IGAX EQ 0).RMXNOLL  SEE IF THERE ISN'T ANY L FOR IT   *54700002
                         BECAUSE THERE AREN'T ANY MORE ATOMS.           54800002
         AIF   (&IGAPATH(1) NE &I).RMXNOL  SEE IF THE NEXT ATOM IS PART*54900002
                         OF A DIFFERENT ELEMENT ON LEVEL 1.             55000002
         AIF   (&IGALEVL NE 2).RMXPRN  SEE IF THERE ARE TOO MANY LEVELS*55100002
                         OF PARENTHESES.                                55200002
         AIF   (&IGAZ EQ 0).RMXLBAD  SEE IF THE L ATOM IS THE EMPTY    *55300002
                         STRING.                                        55400002
.********************************************************************** 55500002
.* THERE IS A NEXT ATOM IN THE SAME PAIR, NOW CHECK IT TO SEE IF IT IS* 55600002
.* A SELF-DEFINING DECIMAL TERM.                                      * 55700002
.********************************************************************** 55800002
&I       SETA  0  INITIALIZE THE INDEX OF THE CURRENT BYTE IN THE ATOM. 55900002
.RMCNT1  AIF   (('&R'(&IGALEFT(&IGAZ)+&I,1) LT '0')OR('&R'(&IGALEFT(&IG*56000002
               AZ)+&I,1) GT '9')).RMXBADL                               56100002
&I       SETA  (&I+1)    EKE THE INDEX TO THE NEXT BYTE.                56200002
         AIF   (&I LT &IGARGHT(&IGAZ)).RMCNT1  KEEP LOOKING UNTIL ALL  *56300002
                         THE BYTES ARE EXAMINED.                        56400002
         AIF   (&IGARGHT(&IGAZ) GT 4).RMXLERR  SEE IF THE LENGTH IS    *56500002
                         MORE THAN 4 CHARACTERS.                        56600002
&X       SETC  '&R'(&IGALEFT(&IGAZ),&IGARGHT(&IGAZ))  GET THE LENGTH.   56700002
&LNG     SETA  (&X)      TURN IT INTO A NUMBER.                         56800002
         AIF   (&LNG GT 256).RMXLERR  SEE IF IT IS TOO BIG TO DO WITH  *56900002
                         AN MVC.                                        57000002
.********************************************************************** 57100002
.* THE DISPLACEMENT OF THE DISPLACEMENT-LENGTH PAIR IS AT &DSP, AND   * 57200002
.* THE LENGTH IS AT &LNG. CHECK THE A PARAMETER TO SEE IF IT IS CODED,* 57300002
.* BECAUSE IF IT ISN'T CODED THERE IS NO WAY TO FIND OUT WHERE THE    * 57400002
.* RECORD REALLY IS.                                                  * 57500002
.********************************************************************** 57600002
         AIF   (K'&A EQ 0).RMXAMT  SEE IF IT ISN'T THERE.               57700002
.* NOW GENERATE THE MOVE OF THE FIELD IF THIS IS THE MOVE GENERATION  * 57800002
.* ITERATION.                                                         * 57900002
         AIF   (NOT &XFER).RMOVED  SEE IF IT ISN'T THE MOVE GENERATION *58000002
                         ITERATION.                                     58100002
&X       SETC  ''        SET IT UP FOR THE ADDRESS IN A REGISTER.       58200002
         AIF   ('&A'(1,1) EQ '(').RMAGPR  GO IF THE ADDRESS IS IN A    *58300002
                         REGISTER.                                      58400002
&X       SETC  '+'       SET IT UP FOR THE CASE EHERE THE ADDRESS IS   *58500002
                         SUPPLIED IN THE FORM OF A LABEL.               58600002
.RMAGPR  MVC   &IGARECL.(&LNG,1),&DSP&X&A  MOVE SUBFIELD.               58700002
.RMOVED  ANOP                                                           58800002
&IGARECL SETA  (&IGARECL+&LNG)  EKE THE CUMMULATIVE RECORD LENGTH.      58900002
.********************************************************************** 59000002
.* NOW SET THE CURSOR TO THE NEXT ATOM, AND SEE IF THE FIRST ELEMENT  * 59100002
.* IS PART OF THE SAME ELEMENT ON LEVEL 1 AS THE LAST (D,L) PAIR.     * 59200002
.********************************************************************** 59300002
&I       SETA  &IGAPATH(1)  PRESERVE THE CURRENT LEVEL 0 INDEX.         59400002
      RPTDSECT SCAN=NEXT  POSITION THE CURSOR TO THE NEXT ATOM.         59500002
         AIF   (&IGAX EQ 0).RFIN  GO IF THERE ISN'T ANY NEXT ATOM.      59600002
         AIF   (&I EQ &IGAPATH(1)).RMXSAME  SEE IF THE LEVEL 1 ELEMENT *59700002
                         IN THE PATH VECTOR DIDN'T CHANGE.              59800002
         AGO   .RMXCHK   GO CHECK THE NEXT ATOM, IT ISN'T PART OF THE  *59900002
                         LAST TWO.                                      60000002
.********************************************************************** 60100002
.* THE FOLLOWING ARE SUNDRY MNOTES FROM THE PROCESSING OF A LIST OF   * 60200002
.* MIXED PAIRS WHERE THE PAIRS ARE OF THE FORM (D,L).                 * 60300002
.********************************************************************** 60400002
.RMXSAME ANOP                                                           60500002
&I       SETA  (&IGAPATH(1)+1)  SET &I TO THE CURRENT OPERAND #.        60600002
         MNOTE 12,'TOO MANY ELEMENTS IN SUBLIST OPERAND &I IN R.'       60700002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         60800002
         AGO   .SYNC     GO LOOK FOR THE NEXT ONE.                      60900002
.RMXAMT  ANOP                                                           61000002
&I       SETA  (1+&IGAPATH(1))  GET THE CURRENT OPERAND NUMBER.         61100002
         MNOTE 12,'THE A PARAMETER MUST BE CODED TO USE A (D,L) PAIR FO*61200002
               R R(&I).'                                                61300002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         61400002
         AGO   .SYNC     GO LOOK FOR THE NEXT ONE.                      61500002
.RMXLERR ANOP                                                           61600002
&I       SETA  (&IGAPATH(1)+1)  GET THE CURRENT OPERAND NUMBER.         61700002
         MNOTE 12,'THE LENGTH OF THE FIELD DEFINED BY R(&I) EXCEEDS 256*61800002
                BYTES.'                                                 61900002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         62000002
         AGO   .SYNC     GO LOOK AT THE NEXT ONE.                       62100002
.RMXBADL ANOP                                                           62200002
&I       SETA  (1+&IGAPATH(1))                                          62300002
         MNOTE 12,'THE LENGTH FOR R(&I) MUST BE A SELF-DEFINING DECIMAL*62400002
                NUMBER.'                                                62500002
&ERROR   SETB  (1)                                                      62600002
         AGO   .SYNC                                                    62700002
.RMXLBAD ANOP                                                           62800002
&I       SETA  (1+&IGAPATH(1))                                          62900002
         MNOTE 12,'THE LENGTH FOR R(&I) CANNOT BE THE EMPTY STRING.'    63000002
&ERROR   SETB  (1)                                                      63100002
         AGO   .SYNC                                                    63200002
.RMXNOL  ANOP                                                           63300002
&I       SETA  (1+&IGAPATH(1))                                          63400002
         MNOTE 12,'LENGTH OF (D,L) PAIR MISSING IN R(&I).'              63500002
&ERROR   SETB  (1)                                                      63600002
         AGO   .RMXCHK   GO CHECK THE CURRENT ATOM FOR VALIDITY.        63700002
.RMXNOLL ANOP                                                           63800002
         MNOTE 12,'LENGTH OF LAST (D,L) PAIR IN R IS MISSING.'          63900002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         64000002
         AGO   .RFIN                                                    64100002
.RMXPRN  ANOP                                                           64200002
&I       SETA  (&IGAPATH(1)+1)                                          64300002
         MNOTE 12,'TOO MANY () LEVELS IN R(&I).'                        64400002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         64500002
         AGO   .SYNC                                                    64600002
.RMXBADD ANOP                                                           64700002
&I       SETA  (1+&IGAPATH(1))                                          64800002
         MNOTE 12,'DISPLACEMENT IN R(&I) EXCEEDS 4 DIGITS.'             64900002
&ERROR   SETB  (1)                                                      65000002
         AGO   .SYNC                                                    65100002
.RMXDBAD ANOP                                                           65200002
&I       SETA  (1+&IGAPATH(1))                                          65300002
         MNOTE 12,'DISPLACEMENT IN R(&I) EXCEEDS 4095.'                 65400002
&ERROR   SETB  (1)                                                      65500002
         AGO   .SYNC                                                    65600002
.********************************************************************** 65700002
.* THE CURRENT ATOM IS AN F OF A (F,L) PAIR.                          * 65800002
.********************************************************************** 65900002
.RMNOTD  AIF   (&IGARGHT(&IGAZ) LE 8).RMXBIGF  SEE IF THE STRING IS    *66000002
                         BIGGER THAN 8 CHARACTERS.                      66100002
&I       SETA  (1+&IGAPATH(1))                                          66200002
         MNOTE 12,'FIELD NAME IN R(&I) IS BIGGER THAN 8 CHARACTERS.'    66300002
&ERROR   SETB  (1)                                                      66400002
         AGO   .SYNC                                                    66500002
.RMXBIGF ANOP                                                           66600002
&FIELD   SETC  '&R'(&IGALEFT(&IGAZ),&IGARGHT(&IGAZ))  GET THE FIELD    *66700002
                         NAME.                                          66800002
.* NOW TRY TO GET THE L OF THE (F,L) PAIR.                            * 66900002
&I       SETA  (&IGAPATH(1))  PRESERVE THE CURRENT LEVEL 1 INDEX.       67000002
      RPTDSECT SCAN=NEXT  POSITION THE CURSOR TO THE NEXT ATOM.         67100002
         AIF   (&IGAX EQ 0).RFLNOL  SEE IF THERE IS NO LENGTH BECAUSE  *67200002
                         THERE ISN'T ANY NEXT ATOM.                     67300002
         AIF   (&IGAPATH(1) NE &I).RFNOL  SEE IF THE NEXT ATOM IS NOT  *67400002
                         PART OF THE SAME PAIR.                         67500002
         AIF   (&IGALEVL NE 2).RFNOLL  SEE IF THE NEXT ATOM HAS TOO    *67600002
                         MANY () LEVELS.                                67700002
         AIF   (&IGAZ EQ 0).RFLMT  SEE IF THE LENGTH ATOM IS THE EMPTY *67800002
                         STRING.                                        67900002
.********************************************************************** 68000002
.* THE CURRENT ATOM IS INDEED THE SECOND ELEMENT OF A (F,X) PAIR. NOW * 68100002
.* LET'S SEE IF X IS A VALID L.                                       * 68200002
.********************************************************************** 68300002
         AIF   (&IGARGHT(&IGAZ) GT 3).RFLLBAD  SEE IF THE LENGTH ATOM  *68400002
                         IS MORE THAN 3 DIGITS.                         68500002
&I       SETA  0         INITIALIZE THE INDEX OF THE CURRENT BYTE.      68600002
.RMXCNT2 AIF   (('&R'(&IGALEFT(&IGAZ)+&I,1) LT '0')OR('&R'(&IGALEFT(&IG*68700002
               AZ)+&I,1) GT '9')).RFLBAD                                68800002
&I       SETA  (&I+1)    STEP OVER TO THE NEXT DIGIT.                   68900002
         AIF   (&I LT &IGARGHT(&IGAZ)).RMXCNT2  KEEP GOING UNTIL ALL   *69000002
                         THE DIGITS HAVE BEEN SCANNED.                  69100002
&X       SETC  '&R'(&IGALEFT(&IGAZ),&IGARGHT(&IGAZ))  EXTRACT THE      *69200002
                         LENGTH.                                        69300002
&LNG     SETA  (&X)      CONVERT IT TO A NUMBER.                        69400002
         AIF   (&LNG GT 256).RFBADL  SEE IF THE LENGTH EXCEEDS 256     *69500002
                         BYTES.                                         69600002
.********************************************************************** 69700002
.* IT LOOKS LIKE A VALID (F,L) PAIR; GENERATE THE MOVE IF THIS IS THE * 69800002
.* MOVE GENERATION ITERATION.                                         * 69900002
.********************************************************************** 70000002
         AIF   (NOT &XFER).RMOVED  GO IF IT IS NOT THE MOVE ITERATION.  70100002
         MVC   &IGARECL.(&LNG,1),&FIELD  MOVE SUBFIELD.                 70200002
         AGO   .RMOVED   MERGE WITH THE COMMON PATH.                    70300002
.********************************************************************** 70400002
.* THE FOLLOWING ARE SUNDRY MNOTES FOR THE (F,L) CASE IN A MIXED LIST.* 70500002
.********************************************************************** 70600002
.RFBADL  ANOP                                                           70700002
&I       SETA  (&IGAPATH(1)+1)                                          70800002
         MNOTE 12,'LENGTH IN OPERAND &I OF R EXCEEDS 256 BYTES.'        70900002
&ERROR   SETB  (1)                                                      71000002
         AGO   .SYNC                                                    71100002
.RFLBAD  ANOP                                                           71200002
&I       SETA  (1+&IGAPATH(1))                                          71300002
         MNOTE 12,'THE LENGTH IN OPERAND R(&I) IS NOT A SELF-DEFINING D*71400002
               ECIMAL NUMBER.'                                          71500002
&ERROR   SETB  (1)                                                      71600002
         AGO   .SYNC                                                    71700002
.RFLLBAD ANOP                                                           71800002
&I       SETA  (1+&IGAPATH(1))                                          71900002
         MNOTE 12,'LENGTH IN OPERAND R(&I) IS MORE THAN 3 DIGITS.'      72000002
&ERROR   SETB  (1)                                                      72100002
         AGO   .SYNC                                                    72200002
.RFLMT   ANOP                                                           72300002
&I       SETA  (1+&IGAPATH(1))                                          72400002
         MNOTE 12,'LENGTH IN OPERAND &I OF R CANNOT BE THE EMPTY STRING*72500002
               .'                                                       72600002
&ERROR   SETB  (1)                                                      72700002
         AGO   .SYNC                                                    72800002
.RFNOL   ANOP                                                           72900002
         MNOTE 12,'LENGTH OF (F,L) PAIR IN OPERAND &I OF R IS MISSING.' 73000002
&ERROR   SETB  (1)                                                      73100002
         AGO   .RMXCHK                                                  73200002
.RFNOLL  ANOP                                                           73300002
&I       SETA  (1+&IGAPATH(1))                                          73400002
         MNOTE 12,'TOO MANY () LEVELS IN R(&I).'                        73500002
         AGO   .SYNC                                                    73600002
.RFLNOL  MNOTE 12,'LENGTH OF LAST (FIELD,LENGTH) PAIR IN R IS MISSING.' 73700002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON TO PREVENT THE MOVES.    73800002
         AGO   .RFIN                                                    73900002
.********************************************************************** 74000002
.RFIN    ANOP                                                           74100002
         AIF   ((&XFER)OR(&ERROR)).MV#FIN  SEE IF THE MOVE GENERATION  *74200002
                         LOOP MUST BE DONE THIS TIME.                   74300002
&XFER    SETB  (1)       SET IT ON SO THE MOVES ONLY GET GENERATED ONCE 74400002
&RC      SETC  'C'                                                      74500002
         AIF   (K'&C EQ 0).GSPACE  SEE IF THE CONDITIONAL PARAMETER HAS*74600002
                         BEEN LEFT OUT.                                 74700002
         AIF  ((('&C' EQ 'C')OR('&C'(1,1) EQ 'Y')OR('&C'(1,1) EQ '1')))*74800002
               .GSPACE   SEE IF IT IS A CONDITIONAL REQUEST.            74900002
&RC      SETC  ''        IT IS AN UNCONDITIONAL REQUEST.                75000002
.GSPACE  ANOP                                                           75100002
        GSPACE R&RC,LV=&IGARECL,S=&S,SP=&SP  GET SPACE TO PUT RECORD.   75200002
         AIF   ('&RC' NE 'C').SKIPBNZ  SEE IF THE REQUEST IS COND.      75300002
         BNZ   SETR&SYSNDX BR IF ALLOCATION FAILED.                     75400002
.SKIPBNZ AGO   .LOOPAIR  GO GENERATE THE MOVE OF THE RECORD.            75500002
.MV#FIN  ANOP                                                           75600002
         LR    15,1      PUT THE RECORD ADDRESS IN R15.                 75700002
         AIF   (NOT &R1SAVED).R1ISOK  SEE IF R1 WAS SAVED THROUGH THE  *75800002
                         GSPACE OPERATION.                              75900002
         L     1,((4*1)+20-64*((2+1)/16))(,13)  RESTORE R1.             76000002
.R1ISOK  AGO   .CHK#     NOW GO CHECK THE # PARAMETER.                  76100002
.********************************************************************** 76200002
.* THERE IS NO NEED TO ALLOCATE A SPACE FOR THE RECORD VIA THE GSPACE * 76300002
.* MACRO-INSTRUCTION. GET THE ADDRESS OF THE RECORD IN REGISTER 15.   * 76400002
.********************************************************************** 76500002
.CHKA    AIF   (K'&A EQ 0).ASARG  SEE IF THE ADDRESS IS OMITTED; IF IT *76600002
                         IS GET IT OUT OF THE SEARCH ARGUMENT.          76700002
         AIF   ('&A'(1,1) EQ '(').AGPR  SEE IF THE ADDRESS IS IN A GPR. 76800002
         LA    15,&A     ADDRESS OF THE RECORD TO INSERT.               76900002
         AGO   .CHKAEND  GO TO THE END OF CHECKING THE A PARAMETER.     77000002
.AGPR    AIF   ('&A' EQ '(15)').CHKAEND  SEE IF IT IS ALREADY IN R15.   77100002
         LR    15,&A(1)  INSERT ADDRESS.                                77200002
         AGO   .CHKAEND  ALL DONE NOW EXIT FROM CHECKING THE A         *77300002
                         PARAMETER.                                     77400002
.ASARG   ANOP                                                           77500002
         MNOTE 12,'EITHER A OR R MUST BE CODED TO SPECIFY THE INS.ARG.' 77600002
.CHKAEND ANOP                                                           77700002
.********************************************************************** 77800002
.* CHECK THE # PARAMETER TO SEE IF A DIFFERENT ADDRESS THAN THE ONE   * 77900002
.* FURNISHED BY THE A PARAMETER IS TO BEBUSED BY THE INSERT ROUTINE.  * 78000002
.********************************************************************** 78100002
.CHK#    AIF   (K'&# EQ 0).#ZORRO  SEE IF THE # PARAMETER IS CODED.     78200002
         AIF   ('&#'(1,1) EQ '(').#GPR  SEE IF THE # PARAMETER IS IN A *78300002
                         GPR.                                           78400002
         L     0,&#      LOAD IN THE ERSATZ ADDRESS.                    78500002
         AGO   .#FIN     ALL DONE WITH THE ERSATZ ADDRESS.              78600002
.#GPR    DC    ((30-&#(1))/16)AL1(X'18',&#(1))  LOAD THE ERSATZ ADDRESS*78700002
                         IN GPR 0 UNLESS IT IS ALREADY IN GPR 0.        78800002
         AGO   .#FIN     ALL DONE WITH THE ERSATZ ADDRESS.              78900002
.#ZORRO  LR    0,15  # NOT CODED.                                       79000002
.#FIN    ANOP                                                           79100002
.********************************************************************** 79200002
.* SEE IF THE REQUEST IS CONDITIONAL OR UNCONDITIONAL, AND CALL THE   * 79300002
.* APPROPRIATE ROUTINE IN THE MODULE IGARPT01.                        * 79400002
.********************************************************************** 79500002
         AIF   (K'&TREE EQ 0).INGPR1  SEE IF THE TREE ADDRESS IS       *79600002
                         SPECIFIED.                                     79700002
         AIF   ('&TREE'(1,1) EQ '(').RPTGPR  SEE IF THE TREE ADDRESS IS*79800002
                         IN A GPR.                                      79900002
         L     1,&TREE   LOAD THE ADDRESS OF THE RPT.                   80000002
         AGO   .R1LOAD   SKIP AROUND THE GPR CASE.                      80100002
.RPTGPR  LR    1,&TREE(1)  GET THE RPT ADDRESS.                         80200002
.R1LOAD  ANOP                                                           80300002
.INGPR1  ANOP                                                           80400002
         L     14,(&IGABLST+&IGAINS)(,1)  ADDRESS OF INSERT ROUTINE.    80500002
.********************************************************************** 80600002
.* NOW GENERATE THE LINKAGE TO THE INSERT ROUTINE IN THE MODULE       * 80700002
.* IGARPT01.                                                          * 80800002
.********************************************************************** 80900002
&REQUEST SETB  (1)       SET THE REQUEST MODE TO CONDITIONAL.           81000002
         AIF   (K'&C EQ 0).LINKC  SEE IF IT IS A CONDITIONAL REQUEST.   81100002
         AIF (('&C'(1,1) EQ 'Y')OR('&C' EQ '1')OR('&C' EQ 'C')).LINKC  *81200002
                         SEE IF IT IS A CONDITIONAL REQUEST.            81300002
&REQUEST SETB  (0)       SET THE REQUEST MODE TO UNCONDITIONAL.         81400002
         BALR  14,14     INDICATE UNCONDITIONAL TYPE 8 INSERT.          81500002
         AGO   .LINKFIN  ALL DONE WITH THE LINKAGE.                     81600002
.LINKC   BAL   14,0(,14)  INDICATE CONDITIONAL INSERT.                  81700002
.LINKFIN ANOP                                                           81800002
         AIF   (K'&R EQ 0).FIN  SEE IF THE AREA WAS ALLOCATED VIA THE  *81900002
                         GSPACE MACRO-INSTRUCTION.                      82000002
         AIF   (NOT &REQUEST).FIN  SEE IF IT WAS AN UNCONDITIONAL      *82100002
                         REQUEST.                                       82200002
&FINEQU  SETB  (1)       SET THE BIT ON TO GENERATE THE EQUATE AT THE  *82300002
                         END OF THE MACRO EXECUTION.                    82400002
         BC    10,FIN&SYSNDX  BRANCH IF THE INSERT WAS SUCCESSFUL.      82500002
         L     1,X'10'(,13)  PUT THE ADDRESS IN R1 TO FREE IT UP.       82600002
        FSPACE LV=&IGARECL,A=(1),SP=&SP,S=&S                            82700002
SETR&SYSNDX LA 15,1      SET THE RETURN CODE NEGATIVE.                  82800002
         LNR   15,15     SET THE CONDITION CODE ALSO.                   82900002
.FIN     AIF   (NOT &FINEQU).END  SEE IF THE EQUATE MUST BE GENERATED.  83000002
FIN&SYSNDX EQU *         LABEL FOR THE BRANCH TO BRANCH TO.             83100002
.END     ANOP                                                           83200002
         MEND                                                           83300002
./  ADD  SSI=20780190,NAME=IOSGNIP
         MACRO                                                          00300019
&NAME    IOSGNIP &FUNC,&PARM,&REG,&VAR,&AUTH=CSECTNME                   00500019
         GBLB    &EXECN                 MULTIPLE EXPANSION SWITCH       00700019
         LCLC  &SUFFIX                  CHARACTER VARIABLE              00760019
&SUFFIX  SETC  '&SYSNDX'(2,4)           SET 3 CHARACTER SYSNDX VALUE    00820019
         AIF   ('&FUNC' EQ 'MINIMAP').MIN010                            00900019
         AIF   ('&FUNC' EQ 'UCBCHM').NIP010                             01200019
         AGO   .IOSNOGO                 UNSUPPORTED FUNCTION MNOTE      01500019
.NIP010  ANOP                                                           01800019
         AIF   ('&AUTH' EQ 'IEAANIP').NIP010A                           02100019
         AGO   .IOSNOGO                 UNAUTHORIZED USE MNOTE          02400019
.NIP010A ANOP                                                           02700019
*********************************************************************** 03000019
***      MACRO DEFINITION - UCBCHM FUNCTION OF IOSGNIP              *** 03300019
***            THIS MACRO, OWNED AND MAINTAINED BY IOS PERSONNEL,   *** 03600019
***            INSERTS THE PATH MASK CREATED BY MP6500 INTO THE     *** 03900019
***            'UCBCHM' FIELD.                                      *** 04200019
***                                                                 *** 04500019
         AIF   (&EXECN EQ 1).NIP101     SKIP DETAIL 2ND TIME THROUGH    04600019
***            FOLLOWING ARE THE PARAMETERS WHICH MUST BE SPECIFIED *** 04800019
***                1.&FUNC-UCBCHM                                   *** 05100019
***                2.&PARM-NUMBER OF A REGISTER WHICH POINTS TO     *** 05400019
***                  THE UCB.                                       *** 05700019
***                3.&REG-SPECIFIES THE NUMBER OF A REGISTER WHICH  *** 06000019
***                  POINTS TO THE PATH MASK BYTE. IF NOT SPECIFIED *** 06300019
***                  THE VAR PARAMETER WILL BE USED TO LOCATE THE   *** 06600019
***                  UCB PATH MASK.                                 *** 06900019
***                4.&VAR-LABEL OF THE BYTE CONTAINING THE UCB PATH *** 07200019
***                  MASK                                           *** 07500019
***      THE KEYWORD PARAMETER 'AUTH=CSECTNME' MUST ALSO BE         *** 07530020
***      SPECIFIED, NOTING THE CSECT NAME INVOKING THIS MACRO.      *** 07560020
.NIP101  ANOP                                                           07600019
*********************************************************************** 07800019
         SPACE 1                                                        08100019
         AIF   ('&REG' NE '').NIP110     USING REGISTER FORM...         08400020
         SPACE 1                                                        08700019
*********************************************************************** 09000019
***            REGISTER DEFINITION                                  *** 09300019
*********************************************************************** 09600019
IECIU&SUFFIX   EQU &PARM                UCB POINTER REGISTER            09700020
         AIF   (&EXECN EQ 1).NIP102     NOT FIRST TIME - SKIP           09800020
&EXECN   SETB  1                         SET FIRST TIME SWITCH.         09900020
*********************************************************************** 10200019
***            UCB DEFINITION                                       *** 10500019
*********************************************************************** 10800019
IECIWCHM EQU   12                       DISP TO PATH MSK IN UCB         11100019
.NIP102  ANOP                                                           11200019
         SPACE 3                                                        11400019
&NAME    MVN   IECIWCHM(1,IECIU&SUFFIX),&VAR INSERT MASK INTO UCBCHM.   11700020
         AGO   .IOSGEND                                                 12000019
.NIP110  ANOP                                                           12300019
         SPACE 1                                                        12600019
*********************************************************************** 12900019
***            THIS IS THE REGISTER FORM OF UCBCHM FUNCTION         *** 13200020
*********************************************************************** 13500019
         SPACE 1                                                        13800019
*********************************************************************** 14100019
***            REGISTER DEFINITION                                  *** 14400019
*********************************************************************** 14700019
IECIW&SUFFIX EQU &REG                  PATH MASK POINTER REGISTER       14770019
IECIU&SUFFIX EQU &PARM                   UCB POINTER REGISTER           14970020
         AIF   (&EXECN EQ 1).NIP103     NOT FIRST TIME - SKIP           15170020
&EXECN   SETB  1                        SET FIRST TIME SWITCH           15370020
*********************************************************************** 15600019
***            UCB DEFINITION                                       *** 15900019
*********************************************************************** 16200019
IECIWCHM EQU   12                       DISP TO PATH MSK IN UCB         16500019
.NIP103  ANOP                                                           16600019
         SPACE 3                                                        16800019
&NAME    MVN   IECIWCHM(1,IECIU&SUFFIX),0(IECIW&SUFFIX) PUT MASK IN UCB 17100020
         MEXIT                           EXIT MACRO                     17400020
.MIN010  ANOP                                                           17700019
         AIF   ('&AUTH' EQ 'IEAANIP').MIN010A                           18000019
         AGO   .IOSNOGO                 UNAUTHORIZED USE MNOTE          18300019
.MIN010A ANOP                                                           18600019
&NAME    B     IECIM010                 SKIP AROUND CONSTANTS           18900019
*********************************************************************** 19200019
*        MACRO DEFINITION - MINIMUM PATH MAP FUNCTION OF IOSGNIP      * 19500019
*              THIS MACRO OWNED AND MAINTAINED BY  I O S  PERSONNEL,  * 19800019
*              USES A GIVEN UCB TO CONSRUCT AN EIGHT (8) BYTE TABLE   * 20100019
*              ENTRY TO CONVEY TO THE CALLER THE POSSIBLE PATHS TO A  * 20400019
*              DEVICE.                                                * 20700019
*                                                                     * 21000019
*              THIS CODE IS GENERATED WHEN 'IOSGNIP' IS INVOKED       * 21300019
*              BY NIP WHERE VARIABLES ARE SET ACCORDING TO THE FORMAT * 21600019
*              BELOW --                                               * 21900019
*        IOSGNIP &FUNC,&PARM,&REG,&VAR            ... WHERE --        * 22200019
*             &FUNC = MINIMAP                                         * 22500019
*             &PARM = A REGISTER CONTAINING THE ADDRESS OF A 2 WORD   * 22800019
*                     AREA IN WHICH THE MINIMAP OF AVAILABLE PATHS    * 23100019
*                     WILL BE BUILT.                                  * 23400019
*              &REG = A REGISTER CONTAINING THE ADDRESS OF THE UCB FOR* 23700019
*                     WHICH PATHS ARE TO BE DETERMINED.               * 24000019
*              &VAR = 0 FOR UNIPROCESSING, OR 1 FOR MULTIPROCESSING.  * 24300019
*                                                                     * 24600019
*        RESTRICTIONS/ASSUMPTIONS --                                  * 24900019
*              1)  IOSGNIP(MINIMAP) WILL EXPAND AS IN-LINE CODE.      * 25200019
*              2)  REGISTERS 11, 12, AND 13 ARE NOT AVAILABLE.        * 25500019
         AIF   (&VAR(1) EQ 0).MIN020   'UNI-PROCESSING'                 25800019
*                                                                     * 26100019
*              FOR A SYSTEM SUPPORTING MULTIPROCESSING, THIS ENTRY    * 26400019
*              TAKES THE FOLLOWING FORM --                            * 26700019
*                                                                     * 27000019
*              *- - IPLED CPU - - - -*- - - - NULL  - - - -*          * 27300019
*              *********************************************          * 27600019
*              * PRIMARY  * ALTERNATE*          *          *          * 27900019
*              *  DEVICE  *  DEVICE  *  00  00  *  00  00  *          * 28200019
*              *   ADDRESS*   ADDRESS*          *          *          * 28500019
*              *********************************************          * 28800019
*              ..2 BYTES...                                           * 29100019
*              .................8 BYTES.....................          * 29400019
         AGO   .MIN030                                                  29700019
.MIN020  ANOP                                                           30000019
*                                                                     * 30300019
*              FOR A UNIPROCESSING SYSTEM, THIS ENTRY TAKES THE       * 30600019
*              FOLLOWING FORM --                                      * 30900019
*                                                                     * 31200019
*              *********************************************          * 31500019
*              * PRIMARY  * ALTERNATE* ALTERNATE* ALTERNATE*          * 31800019
*              *  DEVICE  *  ADDRESS *  ADDRESS *  ADDRESS *          * 32100019
*              *   ADDRESS*    ONE   *    TWO   *    THREE *          * 32400019
*              *********************************************          * 32700019
*              ..2 BYTES...                                           * 33000019
*              .................8 BYTES.....................          * 33300019
.MIN030  ANOP                                                           33600019
*                                                                     * 33900019
*        THE MACRO WILL PASS TWO RETURN CODES VIA REGISTER 15 --      * 34200019
*              0 = ALTERNATE PATHS WERE GENERATED FOR THIS DEVICE.    * 34500019
*              4 = NO ALTERNATE PATHS EXIST.                          * 34800019
*                                                                     * 35100019
*********************************************************************** 35400019
         SPACE 3                                                        35700019
*********************************************************************** 36000019
*          R E G I S T E R    D E F I N I T I O N S                   * 36300019
*********************************************************************** 36600019
         SPACE 1                                                        36900019
IECIMREG EQU   &REG                     UCB POINTER INPUT               37200019
IECIMPRM EQU   &PARM                    NIP WORKAREA POINTER INPUT      37500019
*                                                                       37800019
IECIMW1  EQU   1                        *                               38100019
IECIMW2  EQU   2                        ** WORK REGISTERS               38400019
IECIMW3  EQU   3                        *                               38700019
IECIMW4  EQU   4                        *                               39000019
IECIMW15 EQU   15                       *                               39300019
IECIMUCB EQU   5                        UCB POINTER REGISTER            39600019
IECIMNWA EQU   6                        NIP WORKAREA PTR REGISTER       39900019
IECIMRC  EQU   15                       RETURN CODE REGISTER 15         40200019
         SPACE 2                                                        40500019
*********************************************************************** 40800019
*          U C B    F L A G    D E F I N I T I O N S                  * 41100019
*********************************************************************** 41400019
         SPACE 1                                                        41700019
IECIMALC EQU   1                        UCB ALLOCATION CHANNEL MASK     42000019
IECIMCHA EQU   4                        UCB CHANNEL ADDRESS FIELD       42300019
IECIMUAD EQU   5                        UCB UNIT ADDRESS FIELD          42600019
IECIMFLG EQU   6                        UCB ACTIVITY FLAG 1 FIELD       42900019
IECIMLCI EQU   10                       UCB LOGICAL CHANNEL INDEX       43200019
IECIMAPS EQU   X'01'                    ALTERNATE PATH SWITCH SETTING   43500019
         SPACE 2                                                        43800019
*********************************************************************** 44100019
*          M I S C.   M A S K S   A N D   P O I N T E R S             * 44400019
*********************************************************************** 44700019
         SPACE 1                                                        45000019
IECIMCVT EQU   16                       POINTER TO CVT                  45300019
IECIMLCH EQU   140                      POINTER TO IOS LOGICAL CHAN TBL 45600019
IECIMTCC EQU   6                        TEST CHANNEL CODE OFFSET        45900019
IECIMACU EQU   1                        ALTERNATE CU INDICATOR OFFSET   46200019
*                                       IN TEST CHANNEL PREFIX TABLE... 46500019
IECIMPRP EQU   X'08'                    MASK FOR TCH PREFIX PRIMARY PTH 46800019
IECIMAP1 EQU   X'04'                    PATH INDICATION FOR - ALTER 1   47100019
IECIMAP2 EQU   X'02'                                          ALTER 2   47400019
IECIMAP3 EQU   X'01'                                          ALTER 3   47700019
IECIMNUL EQU   X'00'                    NULL MASK                       48000019
IECIMRC4 EQU   4                        RETURN CODE FOR NO ALTERNATES   48300019
IECIMNXT EQU   2                        INCREMENT FOR TABLES            48600019
IECIMMB1 EQU   0                        OFFSET FOR --  FIRST            48900019
IECIMMB2 EQU   2                        *              SECOND           49200019
IECIMMB3 EQU   4                        *              THIRD            49500019
IECIMMB4 EQU   6                        *              FOURTH MAP BOXES 49800019
IECIMBSY EQU   X'80'                    UCB DEVICE BUSY FLAG            50100019
IECIMPST EQU   X'20'                    UCB POST FLAG                   50400019
IECIMPIM EQU   X'F0'                    ALTERNATE CU PATH MASK          50700019
IECIMPIN EQU   1                        ALTERNATE PATH DISCRIPTOR DISP. 51000019
IECIMBTM EQU   X'0F'                    BYTE ANDING MASK                51300019
         AIF   (&VAR(1) EQ 0).MIN031     'UNI-PROCESSING'               51600019
IECIMSIX DC    H'6'                     OFFSET FROM TCHTAB TO TCHCODE   51900019
.MIN031  ANOP                                                           52200019
IECIMHWD DS    H                        HALFWORD WORKAREA               52500019
IECIMBYT EQU   IECIMHWD                 ONE BYTE WORKAREA               52800019
IECIMSA1 DS    F                        FIRST WORD OF SAVEAREA FOR &REG 53100019
IECIMSA2 DS    F                        SECOND WORD FOR &PARM...        53400019
IECIMHWM DC    X'0000FFFF'              MASK TO ZERO TOP HALF WORD      53700019
         AIF   (&VAR(1) EQ 1).MIN040    'MULTI-PROCESSING'              54000019
IECIMABL DC    X'0000000F'              MASK TO ZERO ALL BUT LOW 4 BITS 54300019
         SPACE 1                                                        54600019
*                                       ALTERNATE MVC INSTRUCTIONS TO   54900019
IECIMVC  DS    0H   |                   MOVE ENTRY TO MINIMAP FOR       55200019
         MVC   IECIMMB1(2,IECIMNWA),0(IECIMW2) PRIMARY ADDRESS          55500019
         MVC   IECIMMB2(2,IECIMNWA),0(IECIMW2) 1ST ALT ADDRESS          55800019
         MVC   IECIMMB3(2,IECIMNWA),0(IECIMW2) 2ND ALT ADDRESS          56100019
         MVC   IECIMMB4(2,IECIMNWA),0(IECIMW2) 3RD ALT ADDRESS          56400019
         SPACE 1                                                        56700019
*                                       ALTERNATE INSTRUCTION OFFSETS - 57000019
IECIMTAB DC    X'00'                    SLACK                           57300019
         DC    X'12'                    OFFSET FOR THIRD ALTERNATE      57600019
         DC    X'0C'                    OFFSET FOR SECOND ALTERNATE     57900019
         DC    X'00'                    SLACK                           58200019
         DC    X'06'                    OFFSET FOR FIRST ALTERNATE      58500019
         DC    X'000000'                SLACK                           58800019
         DC    X'00'                    OFFSET FOR PRIMARY MOVE INSTR.  59100019
.MIN040  DS    0H                       ALIGN AFTER CONSTANTS....       59400019
         SPACE 5                                                        59700019
IECIM010 ST    IECIMREG,IECIMSA1        SAVE UCB INPUT ADDRESS          60000019
         ST    IECIMPRM,IECIMSA2        STORE NIP WORKAREA INPUT ADDR.  60300019
         L     IECIMUCB,IECIMSA1        LOAD INTO WORKING REGISTER      60600019
         L     IECIMNWA,IECIMSA2        LOAD INTO ACTIVE WORK REGISTER. 60900019
         XC    0(8,IECIMNWA),0(IECIMNWA) ZERO MAP ENTRY...              61200019
         TM    IECIMALC(IECIMUCB),IECIMAPS Q.  IS THERE ALTERNATE PATH. 61500019
         BZ    IECIM020                 A.  NO, GO BUILD SINGLE ENTRY.  61800019
*                                                                       62100019
         L     IECIMW1,IECIMCVT         A.  YES, GET CVT ADDRESS...     62400019
         L     IECIMW1,IECIMLCH(IECIMW1) GET POINTER TO LOGICAL CHAN TB 62700019
         SR    IECIMW2,IECIMW2          CLEAR WORKREG -                 63000019
         IC    IECIMW2,IECIMLCI(IECIMUCB) GET LOGICAL CHANNEL INDEX...  63300019
         SLL   IECIMW2,3                IECIMW2 = IECIMW2 * 8           63600019
         LH    IECIMW1,IECIMTCC(IECIMW1,IECIMW2) ADDR OF TEST CHAN CODE 63900019
         N     IECIMW1,IECIMHWM         CLEAR HIGH ORDER HALFWORD...    64200019
         AIF   (&VAR(1) EQ 0).MIN050     'UNI-PROCESSING'               64500019
         SH    IECIMW1,IECIMSIX         BACK-UP TO PREFIX TABLE START.  64800019
*    IECIMW1 POINTS TO TOP OF TEST CHANNEL PREFIX TABLE.                65100019
         TM    IECIMACU(IECIMW1),IECIMPRP  Q.  IS TOP PRIMARY PATH.     65400019
         BO    IECIM015  |              A.  YES, TAKE NORMAL SEQUENCE.  65700019
*                                       A.  NO, REVERSED.               66000019
         MVC   IECIMMB2(2,IECIMNWA),0(IECIMW1) GET ALT. ADDR FROM 1ST.  66300019
         MVC   IECIMMB1(2,IECIMNWA),IECIMNXT(IECIMW1) PRIMARY FROM 2ND. 66600019
         B     IECIM031                 SKIP TO ALT CU CHECK....        66900019
************************                                                67200019
         SPACE 1                                                        67500019
IECIM015 MVC   IECIMMB1(2,IECIMNWA),0(IECIMW1) MOVE PRIME DEV ADDR/CPUA 67800019
         MVC   IECIMMB2(2,IECIMNWA),IECIMNXT(IECIMW1) ALT DEV ADDR/CPUA 68100019
*                                       1ST STAGE MINIMAP BUILT...      68400019
         SPACE 1                                                        68700019
         AGO   .MIN060                 SKIP UNI-PROC CODE               69000019
.MIN050  BCTR  IECIMW1,0                * BACKUP ON HALF WORD TO        69300019
         BCTR  IECIMW1,0                * POINT TO LCHTAB SUMMARY ENTRY 69600019
         SR    IECIMW2,IECIMW2          CLEAR WORKREG, THEN             69900019
         IC    IECIMW2,0(IECIMW1)       PICK UP NUMBER OF PATHS...      70200019
         LR    IECIMW3,IECIMW2          COPY FOR LOOP ITERATION LIMIT   70500019
         STH   IECIMW3,IECIMHWD         AND AND SAVE...                 70800019
         AR    IECIMW2,IECIMW2          DOUBLE TO GET TABLE SPAN        71100019
         LCR   IECIMW2,IECIMW2          NEGATE VALUE...                 71400019
         AR    IECIMW2,IECIMW1          ADD TO GET POINTER TO TOP.      71700019
*   POINTERS NOW SET AT LIMITS OF TEST CHANNEL PREFIX TABLE _           72000019
         SPACE 1                                                        72300019
IECIM030 IC    IECIMW15,IECIMACU(IECIMW2) PICK UP PATH INDICATOR        72600019
         N     IECIMW15,IECIMABL        CLEAR ALL BUT LOW FOUR BITS     72900019
         IC    IECIMW15,IECIMTAB(IECIMW15) PICK UP MVC INSTR. OFFSET    73200019
         EX    0,IECIMVC(IECIMW15)      EXECUTE SAME....                73500019
         SPACE 1                                                        73800019
         LA    IECIMW2,IECIMNXT(IECIMW2) POINT TO NEXT ELEMENT...       74100019
         BCT   IECIMW3,IECIM030         LOOP THROUGH TCH PREFIX TABLE   74400019
*                                       1ST STAGE MINIMAP BUILT         74700019
         LH    IECIMW3,IECIMHWD         PICK UP NUMBER OF PATHS....     75000019
.MIN060  SPACE 1                                                        75300019
IECIM031 LR    IECIMW4,IECIMNWA         COPY NIP WA ADDRESS             75500019
         TM    IECIMACU(IECIMW4),IECIMPIM Q.  IS ALTERNATE PATH C.U.    75700019
         BZ    IECIM040                    A.  NO, GO FOR ALTERNATE CHN 75900019
*                                                                       76200019
         AIF   (&VAR(1) EQ 0).MIN065    'UNI-PROCESSING'                76500019
         MVN   IECIMMB1+1(1,IECIMNWA),IECIMUAD(IECIMUCB) NORMALIZE MAP  76800019
         MVN   IECIMMB2+1(1,IECIMNWA),IECIMUAD(IECIMUCB) ADDRESSES...   77100019
         AGO   .MIN070                                                  77400019
.MIN065  ANOP                                                           77700019
IECIM035 MVN   IECIMMB1+1(1,IECIMW4),IECIMUAD(IECIMUCB) GET UNIT ADDR.  78300019
         LA    IECIMW4,IECIMNXT(IECIMW4) BUMP TO NEXT ENTRY...          78600019
         BCT   IECIMW3,IECIM035         LOOP UNTIL ADDRESSES NORMALIZED 78900019
*                                                                       79200019
.MIN070  B     IECIM050                 SKIP ALT. CHANNEL CODE...       79500019
*************************                                               79800019
         SPACE 1                                                        80100019
         AIF   (&VAR(1) EQ 0).MIN075    'UNI-PROCESSING'                80400019
IECIM040 MVC   IECIMMB1+1(1,IECIMNWA),IECIMUAD(IECIMUCB) NORMALIZE MAP  80700019
         MVC   IECIMMB2+1(1,IECIMNWA),IECIMUAD(IECIMUCB) ADDRESSES....  81000019
         AGO   .MIN080                                                  81300019
.MIN075  ANOP                                                           81600019
IECIM040 MVC   IECIMMB1+1(1,IECIMW4),IECIMUAD(IECIMUCB) GET UNIT ADDR.  81900019
         LA    IECIMW4,IECIMNXT(IECIMW4) BUMP TO NEXT ENTRY...          82200019
         BCT   IECIMW3,IECIM040         LOOP UNTIL ADDRESSES NORMALIZED 82500019
*                                                                       82800019
.MIN080  ANOP                                                           83100019
IECIM050 SR    IECIMRC,IECIMRC          SET RETURN CODE TO ZERO...      83400019
         B     IECIMMXT                 EXIT MACRO CODE....             83700019
*************************                                               84000019
         SPACE 1                                                        84300019
IECIM020 MVC   IECIMMB1(2,IECIMNWA),IECIMCHA(IECIMUCB) P/U DEVICE ADDR. 84600019
         NI    IECIMMB1(IECIMNWA),IECIMBTM  ZERO TOP HALFBYTE OF ADDR.  84900019
*                                       ALTERNATE PATH ENTRIES REMAIN   85200019
*                                       ZERO TO REFLECT LACK OF SAME.   85500019
         LA    IECIMRC,IECIMRC4         SET RETURN TO 4 FOR             85800019
*                                       NO ALTERNATE PATH INDICATION.   86100019
IECIMMXT DS    0H                       EXIT THIS ROUTINE               86400019
         MEXIT                           EXIT MACRO                     86450020
.*                                                                      86500020
.********************************************************************** 86550020
.*                                                                      86600020
.*       ALL IOSGNIP MNOTES ARE TO BE PLACED BELOW...                   86650020
.*                                                                      86700020
.*   1.  .IOSNG1 - AUTHORIZATION VIOLATION                              86750020
.*                                       USED BY ALL FUNCTIONS          86800020
.*                                                                      86850020
.********************************************************************** 86900020
.*                                                                      86950020
.IOSNOGO ANOP                                                           87000020
.IOSNG1  MNOTE 8,'*** ''&AUTH'' MAY NOT INVOKE ''&FUNC'' FUNCTION.'     87050020
         MEXIT                                                          87100020
.*                                                                      87150020
.IOSGEND       ANOP                                                     87300019
         MEND                                                           87600019
./  ADD  SSI=63340559,NAME=IOSMSSA
         MACRO                                                          00010041
&NAME    IOSMSSA &WRK1,&WRK2,&UCBR                                      00020041
         LCLC  &A,&B,&N,&U                                              00030041
         AIF   (T'&WRK1 EQ 'O' OR T'&WRK2 EQ 'O' OR T'&UCBR EQ 'O').ERR 00040041
&A       SETC  '&WRK1(1)'                    REMOVE PARENTHESES IF ANY  00050041
&B       SETC  '&WRK2(1)'                                               00060041
&U       SETC  '&UCBR(1)'                                               00070041
         AIF   (T'&NAME EQ 'O').NONAME                                  00080041
&NAME    DS    0H                                                       00090041
.NONAME  ANOP                                                           00100041
&N       SETC  '&SYSNDX'                                                00108041
IECL&N   TM    UCBFL4-UCBOB(&U),X'06'  LOST ATTN? (UCBHOLD+UCBMAT)      00116041
         BZ    IECQ&N              NO - EXIT RC=0                       00124041
         BM    IECS&N              MAYBE - SET FLAG FOR NEXT TIME       00132041
         L     &A,UCBSQC-UCBOB(,&U)  YES - GET WORD WITH UCBFL4         00150041
         LR    &B,&A               COPY IT                              00158041
         O     &B,IECA&N           SET UCBATTN                          00166041
         N     &B,IECB&N           RESET UCBHOLD AND UCBMAT             00174041
         CS    &A,&B,UCBSQC-UCBOB(&U)  SWAP IF WORD NOT ALTERED         00182041
         BNE   IECL&N              ALTERED - START OVER                 00200041
         LA    &A,4                SWAP OK - SET RC=4 FOR LOST ATTN     00208041
         B     IECR&N              EXIT                                 00216041
************** CONSTANTS USED BY MACRO ******************************** 00224041
         DS    0F                                                       00232041
IECA&N   DC    X'00080000'         USED TO SET UCBATTN                  00250041
IECB&N   DC    X'FFF9FFFF'         USED TO RESET UCBHOLD AND UCBMAT     00258041
IECC&N   DC    X'00020000'         USED TO SET UCBMAT                   00266041
************** CONTINUE CODE EXPANSION ******************************** 00274041
IECS&N   L     &A,UCBSQC-UCBOB(,&U)  GET WORD WITH UCBFL4               00282041
         LR    &B,&A               COPY IT                              00300041
         O     &B,IECC&N           SET UCBMAT FOR NEXT TIME             00308041
         CS    &A,&B,UCBSQC-UCBOB(&U)  SWAP WORD IF NOT ALTERED         00316041
         BNE   IECL&N              ALTERED - START OVER                 00324041
IECQ&N   SLR   &A,&A               SWAP OK OR NOT NEEDED - SET RC=0     00332041
IECR&N   DS    0H                  RETURN TO INLINE CODE                00350041
         MEXIT                                                          00358041
.ERR     AIF   (T'&UCBR NE 'O').ER1                                     00366041
         IHBERMAC 4                                                     00374041
.ER1     AIF   (T'&WRK2 NE 'O').ER2                                     00382041
         IHBERMAC 3                                                     00400041
.ER2     AIF   (T'&WRK1 NE 'O').ER3                                     00410041
         IHBERMAC 2                                                     00420041
.ER3     MEND                                                           00430041
./  ADD  SSI=60960487,NAME=IRACCT
*        %GOTO CCTPLS1;            /*                                   00050002
         MACRO                                                          00100002
         IRACCT &DSECT=YES                                              00150002
*                                                                    */ 00200002
*%CCTPLS1 : ;                                                           00250002
*/*                                                                  */ 00260002
*/* MACCOMP Z-4 SC1CX/PKD16                                          */ 00270040
*/* MACSTAT Z-4 75007/Z40BPSS                                        */ 00280040
*/********************************************************************/ 00300002
*/*                                                                  */ 00350002
*/*      MACRO NAME - IRACCT                                         */ 00400002
*/*                                                                  */ 00420002
*/*      DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER CPU             */ 00440002
*/*                         MANAGEMENT CONTROL TABLE                 */ 00460002
*/*                                                                  */ 00480002
*/*      STATUS - OS/VS2 RELEASE 2, 02/15/74,LEVEL=7                 */ 00500002
*/*                                                                  */ 00550002
*/*      METHOD OF ACCESS                                            */ 00600002
*/*        BAL - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.     */ 00650002
*/*              USING ON CCT GIVES ADDRESSIBILITY FOR ALL SYMBOLS.  */ 00700002
*/*        PLS - TO ACCESS AS STAND ALONE STRUCTURE DCL CCTPTR PTR.  */ 00750002
*/*              TO CONCATENATE WITH PREVIOUSLY DEFINED STRUCTURE    */ 00800002
*/*                SET %CCTLEVEL TO DESIRED STRUCTURE LEVEL.         */ 00850002
*/*              TO PREVENT STRUCTURE FROM BEING CLOSED,             */ 00900002
*/*                SET %CCT9999=','.                                 */ 00950002
*/*                                                                  */ 01000002
*/********************************************************************/ 01050002
*/*                                                                  */ 01100002
*        %GOTO CCTPLS2;            /*                                   01150002
         AIF   ('&DSECT' EQ 'YES').CCT001                               01200002
CCT      DS    0D -                CPU MANAGEMENT CONTROL TABLE         01250002
         AGO   .CCT002                                                  01300002
.CCT001  ANOP                                                           01350002
CCT      DSECT , -                 CPU MANAGEMENT CONTROL TABLE         01400002
.CCT002  ANOP                                                           01450002
CCTCCT   DC    CL4'CCT' -          ACRONYM IN EBCDIC -CCT-              01500002
*                                                                       01550002
*        CPU CONTROL CONSTANTS                                          01600002
*                                                                       01650002
* TIME INTERVAL CONSTANTS - 1000 UNITS = APPROXIMATELY 1 SECOND         01700002
CCCAPMET DC    F'200' -            MINIMUM USER EXECUTION INTERVAL FOR  01750002
*                                  MEAN TIME TO WAIT COMPUTATION        01800002
CCCAPMIN DC    F'1000' -           MINIMUM APG INVOCATION INTERVAL      01850002
CCCAPMAX DC    F'0003000' -        MAXIMUM APG INVOCATION INTERVAL      01900002
CCCAPDEL DC    F'1000' -           DELTA FOR CHANGING APG INTERVAL      01950002
CCCMNUIN DC    F'30000' -           TIME USER MUST BE IN MAIN STORAGE   02000002
*                                   BEFORE SWAP OUT CPU REC IS GIVEN    02050002
CCCMNSIN DC    F'5000' -           MINIMUM INTERVAL FOR COMPUTING       02100002
*                                  SYSTEM CPU UTILIZATION               02150002
CCCRSVF1 DC    F'0' -              RESERVED                             02200002
* APG DISPATCHING PRIORITY COMPUTATION CONSTANTS                        02250002
CCCAPDIV DC    H'4' -              DP COMPUTATION DIVISOR      @Z40BPEB 02270040
CCCAPROT DC    H'11' -             VALUE OF APG ROTATE GROUP   @Z40BPEB 02300040
CCCAPBDP DC    H'15' -             BASE DP FROM WHICH QUOTIENT IS       02380002
*                                  SUBTRACTED                           02410002
CCCAPLDP DC    H'1' -              DP FOR UNDISPATCHED APG USERS        02440002
CCCAPMDP DC    H'0' -              DP FOR MAX MEAN TIME TO WAIT         02500002
CCCAPGDP DC    H'06' -             APG INITIAL DP              @Z40BPCH 02520040
CCCR01    DC    H'0' -             RESERVED                  @ZM43085   02600040
* APG THRESHOLDS EXPRESSED AS % OF APG USERS CHAPPED AT APG CALL        02700002
CCCAPRLT DC    H'20' -             LOW THRESHOLD - LENGTHEN APG         02750002
*                                  INVOCATION INTERVAL                  02800002
CCCAPRHT DC    H'60' -             HIGH THRESHOLD - SHORTEN INTERVAL    02850002
* CPU LOAD BALANCING RECOMMENDATION VALUE COMPUTATION CONSTANTS         02900002
CCCUTHIT DC    H'100' -            HIGH UTILIZATION IMBALANCE           02950002
*                                  THRESHOLD                            02960002
CCCUTLOT DC    H'80' -             LOW UTILIZATION IMBALANCE            02970002
*                                  THRESHOLD                            02980002
CCCHISCF DC    H'6400' -           HIGH THRESHOLD SCALING FACTOR        02990002
CCCLOSCF DC    H'1' -              LOW THRESHOLD SCALING FACTOR         03000002
CCCMAXRV DC    H'128' -            MAXIMUM CPL REC VALUE                03050002
CCCMINRV DC    H'-128' -           MINIMUM CPL REC VALUE                03100002
CCCSCFAC DC    H'64' -             REC VALUE SCALING DIVISOR            03150002
CCCSIGDP DC    H'02' -             SIGNIFICANT CPU USER D PRIORITY      03170002
CCCSIGUR DC    H'26' -             SIGNIFICANT MEAN TIME TO WAIT IN MS  03200002
CCCR02   DC    H'0' -              RESERVED                   @ZM43085  03250040
CCCSCFC1 DC    H'10' -             SYSTEM WAIT % AVERAGING FACTOR       03350002
CCCSCFC2 DC    H'11' -             CCCSCFC1+1                           03400002
CCCRSVH1 DC    H'0' -              RESERVED                             03420002
CCCEND   DS    0F -                END OF CCT CONSTANTS                 03450002
*                                                                       03500002
*        CPU CONTROL VARIABLES                                          03550002
*                                                                       03600002
CCVR03  DC    F'0' -               RESERVED                   @ZM43085  03650040
CCVRBSWT DC    F'0' -              RECENT BASE SYSTEM WAIT TIME         03700002
CCVR04   DC    F'0' -              RESERVED                  @ZM43085   03750040
CCVRBSTD DC    F'0' -              RECENT BASE TIME OF DAY              03800002
CCVRVSWF DC    F'0' -              SYSTEM WAIT FACTOR FOR CPL           03850002
*                                  RECOMMENDATION VALUE COMPUTATION     03900002
CCVPGCPF DC    F'0' -              PAGE CP SERVICE FACTOR FOR CPL       03950002
*                                  RECOMMENDATION VALUE COMPUTATION     04000002
CCVEJST  DC    F'0' -              LOW PRIORITY USER JOB STEP TIME      04010002
CCVIMBBT DC    F'0' -               TIME OF LAST CPU IMBALANCE          04020002
CCVR05   DC    H'0' -              RESERVED                   @ZM43085  04050040
CCVUTILP DC    H'50' -             SYSTEM CPU UTILIZATION               04100002
CCVR06   DC    H'0' -              RESERVED                  @ZM43085   04150040
CCVR07   DC   H'0' -               RESERVED                   @ZM43085  04180040
CCVLGUTL DC    AL2(50*256) -       LONG TERM UTILIZATION * 256          04250002
CCVLGFMC DC    H'10' -             AVERAGE AVAILABLE FRAME COUNT        04300002
CCVENQCT DC    H'0' -              NO. OF USERS NON SWAPPABLE FOR       04350002
*                                  ENQ REASONS                          04400002
CCVCPUCT DC    H'0' -              NUMBER OF ONLINE CPUS                04450002
*                                                                       04457002
*        CPU CONTROL FLAGS                                              04464002
*                                                                       04471002
CCTFLG1  DC    B'0' -                                                   04478002
CCTALL   EQU   BIT0 -              LOW PRIORITY USER NOT DISPATCHED     04485002
CCTCPUOT EQU   BIT1 -              CPU OUT OF BALANCE                   04488040
CCTFLG2  DC    3B'0' -             RESERVED                             04492002
CCVEND   DS    0D -                END OF CCT                           04500002
CCTLEN   EQU   CCVEND-CCT -        LENGTH OF CCT                        04550002
         MEND  , -                                                   */ 04600002
*%CCTPLS2 : ;                                                           04650002
*    %IF CCT9999¬=','              /* IF THIS IS LAST BLOCK          */ 04700002
*      %THEN CCT9999=';';          /* THEN CLOSE DECLARE STATEMENT   */ 04750002
*    %IF CCTLEVEL¬=''              /* IF MINOR LEVEL IS SPECIFIED,   */ 04800002
*      %THEN %GOTO CCTPLS3;        /* SKIP MAJOR DECLARE             */ 04850002
*DECLARE                           /*                                */ 04900002
*  1 CCT BASED(CCTPTR)             /*     CPU CONTROL TABLE          */ 04950002
*    %GOTO CCTPLS4;                /* MAJOR STRUCTURE                */ 05000002
*%CCTPLS3: CCTDUM=CCTLEVEL||' CCT'; /* CONCATENATE AS MINOR STRUCTURE*/ 05050002
*  CCTDUM                          /*     CPU CONTROL TABLE          */ 05100002
*%CCTPLS4:;                                                             05150002
*          BDY(DWORD),                                                  05200002
*       5 CCTCCT CHAR(4),          /* ACRONYM IN EBCDIC -CCT-        */ 05250002
*/*                                                                  */ 05300002
*/*      CPU CONTROL CONSTANTS                                       */ 05350002
*/*                                                                  */ 05400002
*/* TIME INTERVAL CONSTANTS                                          */ 05450002
*       5 CCCAPMET FIXED(31),      /* MINIMUM USER EXECUTION INTERVAL   05500002
*                                   FOR MEAN TIME TO WAIT COMPUTATION*/ 05550002
*       5 CCCAPMIN FIXED(31),      /* MINIMUM APG INVOCATION INTERVAL*/ 05600002
*       5 CCCAPMAX FIXED(31),      /* MAXIMUM APG INVOCATION INTERVAL*/ 05650002
*       5 CCCAPDEL FIXED(31),      /* DELTA FOR CHANGING APG INTERVAL*/ 05700002
*       5 CCCMNUIN FIXED(31),       /* TIME USER MUST REMAIN IN STORAGE 05750002
*                                      BEFORE CPU RECOMMENDATION FOR    05780002
*                                      SWAP OUT IS GIVEN             */ 05810002
*       5 CCCMNSIN FIXED(31),      /* MINIMUM INTERVAL FOR COMPUTING    05850002
*                                     SYSTEM CPU UTILIZATION         */ 05900002
*       5 CCCRSVF1 FIXED(31),      /* RESERVED                       */ 05950002
*/* APG DISPATCHING PRIORITY (DP) COMPUTATION CONSTANTS              */ 06000002
*       5 CCCAPDIV FIXED(15),      /* DP COMPUTATION DIVISOR  @Z40BPEB*/06050040
*       5 CCCAPROT FIXED(15),      /* APG ROTATE VALUE        @Z40BPEB*/06080040
*       5 CCCAPBDP FIXED(15),      /* BASE DP FROM WHICH QUOTIENT IS    06150002
*                                     SUBTRACTED                     */ 06200002
*       5 CCCAPLDP FIXED(15),      /* DP FOR UNDISPATCHED APG USERS  */ 06210002
*       5 CCCAPMDP FIXED(15),      /* DP FOR MAX MEAN TIME TO WAIT   */ 06250002
*       5 CCCAPGDP FIXED(15),      /* APG INITIAL DP                 */ 06300002
*       5 CCCR01 FIXED(15),        /* RESERVED               @ZM43085*/ 06350040
*/* APG THRESHOLDS EXPRESSED AS % OF APG USERS CHAPPED AT APG CALL   */ 06450002
*       5 CCCAPRLT FIXED(15),      /* LOW THRESHOLD - LENGTHEN APG      06500002
*                                     INVOCATION INTERVAL            */ 06550002
*       5 CCCAPRHT FIXED(15),      /* HIGH THRESHOLD - SHORTEN INT   */ 06600002
*                                                                       06650002
*/* CPU LOAD BALANCING RECOMMENDATION VALUE COMPUTATION CONSTANTS    */ 06700002
*       5 CCCUTHIT FIXED(15),      /* HIGH UTILIZATION IMBALANCE        06750002
*                                     THRESHOLD                      */ 06760002
*       5 CCCUTLOT FIXED(15),      /* LOW UTILIZATION IMBALANCE         06770002
*                                     THRESHOLD                      */ 06780002
*       5 CCCHISCF FIXED(15),      /* HIGH THRESHOLD SCALING FACTOR  */ 06790002
*       5 CCCLOSCF FIXED(15),      /* LOW THRESHOLD SCALING FACTOR   */ 06800002
*       5 CCCMAXRV FIXED(15),      /* MAXIMUM CPL REC VALUE          */ 06850002
*       5 CCCMINRV FIXED(15),      /* MINIMUM CPL REC VALUE          */ 06900002
*       5 CCCSCFAC FIXED(15),      /* REC VALUE SCALING FACTOR       */ 06950002
*       5 CCCSIGDP FIXED(15),      /* SIGNIFICANT CPU USER D PRIORITY*/ 06970002
*       5 CCCSIGUR FIXED(15),      /* SIGNIFICANT MEAN TIME TO WAIT  */ 07000002
*      5 CCCR02 FIXED(15),         /* RESERVED                @ZM43085*/07050040
*       5 CCCSCFC1 FIXED(15),      /* SYSTEM WAIT % AVERAGING FACTOR */ 07100002
*       5 CCCSCFC2 FIXED(15),      /* CCCSCFC1+1                     */ 07150002
*       5 CCCRSVH1 FIXED(15),      /* RESERVED                       */ 07170002
*       5 CCCEND CHAR(0) BDY(WORD),/* END OF CCT CONSTANTS           */ 07200002
*/*                                                                  */ 07250002
*/*      CPU CONTROL VARIABLES                                       */ 07300002
*/*                                                                  */ 07350002
*      5 CCVR03 FIXED(32),         /* RESERVED               @ZM43085*/ 07400040
*      5 CCVRBSWT FIXED(32),       /* RECENT BASE SYSTEM WIAT TIME   */ 07450002
*      5 CCVR04 FIXED(32),          /* RESERVED             @ZM43085*/  07500040
*      5 CCVRBSTD FIXED(32),       /* RECENT BASE TIME OF DAY        */ 07550002
*      5 CCVRVSWF FIXED(31),        /* SYSTEM WAIT FACTOR FOR CPL       07600002
*                                      REC VALUE COMPUTATION         */ 07650002
*      5 CCVPGCPF FIXED(31),       /* PAGE CP SERVICE FACTOR FOR CPL    07700002
*                                     RECOMMENDATION VALUE              07750002
*                                     COMPUTATION                    */ 07800002
*      5 CCVEJST BIT(32),          /* LOW PRIORITY USER JOB STEP TIME*/ 07805002
*      5 CCVIMBBT FIXED(31),        /* TIME OF LAST CPU IMBALANCE    */ 07810002
*      5 CCVR05 FIXED(15),         /* RESERVED              @ZM43085*/  07850040
*      5 CCVUTILP FIXED(15),       /* SYSTEM CPU UTILIZATION         */ 07900002
*      5 CCVR06 FIXED(15),         /* RESERVED              @ZM43085*/  07950040
*      5 CCVR07 FIXED(15),          /* RESERVED             @ZM43085*/  07980040
*      5 CCVLGUTL FIXED(15),       /* LONG TERM CPU UTILIZATION * 256*/ 08050002
*      5 CCVLGFMC FIXED(15),        /* AVERAGE AVAILABLE FRAME COUNT */ 08100002
*      5 CCVENQCT FIXED(15),        /* NO. OF USERS NON-SWAPPABLE FOR   08150002
*                                      ENQ REASONS                   */ 08200002
*      5 CCVCPUCT FIXED(15),        /* NUMBER OF ONLINE CPUS         */ 08250002
*/*                                                                  */ 08257002
*/*                                                                  */ 08264002
*/*      CPU CONTROL FLAGS                                           */ 08271002
*      5 CCTFLG1 BIT(8),           /*                                */ 08278002
*        10 CCTALL BIT(1),         /* LOW PRTY USER NOT DISPATCHED   */ 08285002
*        10 CCTCPUOT BIT(1),       /* CPU OUT OF BALANCE             */ 08288040
*      5 CCTFLG2 BIT(24),          /* RESERVED                       */ 08292002
*      5 CCVEND CHAR(0)            /* END OF CCT                     */ 08300002
*          BDY(DWORD) CCT9999                                           08350002
*%CCTLEN='LENGTH(CCT)';            /* OBTAIN LENGTH OF CCT           */ 08400002
*      @EJECT;                                                          08450002
./  ADD  SSI=60790636,NAME=IRADMDT
*        %GOTO DMDTPLS1; /*                                             00050040
         MACRO                                                          00100040
         IRADMDT  &DSECT=YES                                        */  00150040
*%DMDTPLS1:  ;                                                          00200040
*/* MACCOMP Z-4 SC1CX/PKD16                                          */ 00210040
*/* MACSTAT Z-4 75007/Z40BPSS                                        */ 00220040
*/********************************************************************/ 00250040
*/* MACRO NAME - IRADMDT                                             */ 00300040
*/*                                                                  */ 00350040
*/* DESCRIPTIVE NAME - DOMAIN TABLE DESCRIPTION                      */ 00400040
*/*                                                                  */ 00450040
*/* COPYRIGHT - NONE                                                 */ 00500040
*/*                                                                  */ 00550040
*/* STATUS - OS/VS2 RELEASE 4, 07/30/75                              */ 00600040
*/*                                                                  */ 00650040
*/* FUNCTION - THE DMDT SPECIFIES THE DOMAINS INTO WHICH             */ 00700040
*/*            USER TRANSACTIONS ARE DIVIDED, AND FOR EACH           */ 00750040
*/*            DOMAIN, THE CONSTRAINTS ON ITS PARTICIPATION          */ 00800040
*/*            IN THE CHANGING OF THE MULTI-PROGRAMMING              */ 00850040
*/*            LEVEL AND CURRENT DOMAIN CONTROL STATUS.              */ 00900040
*/*                                                                  */ 00950040
*/*            THE DOMAIN TO BE USED FOR A TRANSACTION IS            */ 01000040
*/*            INDICATED BY THE -WPGPDMN- FIELD OF THE               */ 01050040
*/*            CURRENT PERIOD WITHIN THE APPLICABLE PERFORMANCE      */ 01100040
*/*            GROUP DESCRIPTION.                                    */ 01150040
*/*                                                                  */ 01200040
*/* METHOD-OF-ACCESS - THE ADDRESS OF THE DOMAIN TABLE ENTRY FOR A   */ 01250040
*/*                    PARTICULAR SYSTEM USER IS OBTAINED BY ADDING  */ 01300040
*/*                    THE OFFSET IN THE -OUCBDMO- FIELD OF THE      */ 01350040
*/*                    SYSTEM RESOURCES MANAGER USER CONTROL BLOCK   */ 01400040
*/*                    TO THE ADDRESS IN THE -WMSTDMDT- FIELD OF THE */ 01450040
*/*                    WORKLOAD MANAGER SPECIFICATION TABLE.         */ 01500040
*/********************************************************************/ 01550040
*        %GOTO DMDTPLS2; /*                                             01600040
         AGO   .DMDTAL1                                              */ 01650040
*/********************************************************************/ 01700040
*/*                                                                  */ 01750040
*/* INVOCATION PARAMETERS AND/OR KEYWORDS =                          */ 01800040
*/*                                                                  */ 01850040
*/*   BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.                 */ 01900040
*/*                                                                  */ 01950040
*/*     USING ON DMDT GIVES ADDRESSABILITY TO ALL SYMBOLS            */ 02000040
*/*                                                                  */ 02050040
*/*   PLS - %DMDTLEVL='USERLEVL' IF THE DMDT MAPPING IS TO BE        */ 02100040
*/*         CONCATENATED WITH A PREVIOUS DECLARATION,WITH THE        */ 02150040
*/*         DMDT BEING ASSIGNED THE INDICATED STRUCTURE LEVEL.       */ 02200040
*/*       - %DMDT9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED      */ 02250040
*/*                                                                  */ 02300040
*/*         TO ACCESS AS A STANDALONE STRUCTURE DCL DMDTPTR PTR.     */ 02350040
*/*                                                                  */ 02400040
*/*  CHANGE ACTIVITY =@Z40BFEM                                       */ 02450040
*/*                                                                  */ 02500040
*/*                                                                  */ 02550040
*/*                                                                  */ 02600040
*/********************************************************************/ 02650040
*/*                                                                  */ 02700040
.DMDTAL1 ANOP                                                           02750040
         SPACE 1                                                        02800040
         AIF  ('&DSECT' EQ 'NO').DMDTAL2                                02850040
DMDT     DSECT                                                          02900040
         AGO  .DMDTAL3                                                  02950040
.DMDTAL2 ANOP                                                           03000040
         DS   0F                                                        03050040
DMDT     EQU  *                                                         03100040
.DMDTAL3 ANOP                                                           03150040
         SPACE 1                                                        03200040
DMDTNO   DS   AL1                  DOMAIN NUMBER                        03250040
DMDTLO   DS   AL1                  MIN MPL LEVEL                        03300040
DMDTHI   DS   AL1                  MAX MPL LEVEL                        03350040
DMDTWT   DS   AL1                  WEIGHTING FACTOR                     03400040
DMDTMPLT DS   H                    CURRENT MPL TARGET                   03450040
DMDTRUA  DS   H                    AVE # OF READY USERS                 03460040
DMDTGOOU DS   H                    CURRENT # OF USERS GOING OUT         03480040
DMDTCMPL DS   H                    CURRENT MPL                          03550040
DMDTOUTU DS   H                    CURRENT # USERS ON OUT Q             03600040
DMDTINCU DS   H                    CURRENT # SWAPPABLE INCORE USERS     03700040
DMDTRUC  DS   F                    ACCUMULATOR FOR READY USER COUNT     03720040
DMDTEND  DS   0F                   END OF DMDT                          03750040
DMDTLEN  EQU  DMDTEND-DMDT         LENGTH OF DMDT                       03800040
         MEND                                                           03850040
*                                                                    */ 03900040
*%DMDTPLS2:  ;                                                          03950040
*        %IF DMDT9999 ¬= ','       /* DOES STRUCTURE CONTINUE        */ 04000040
*            %THEN %DMDT9999 = ';';/* NO, END DECLARE STATEMENT      */ 04050040
*        %IF DMDTLEVL ¬= ''        /* IS STRUCTURE CONCATENATED      */ 04100040
*            %THEN %GOTO DMDTPLS3; /* YES, OMIT DECLARE STATEMENT    */ 04150040
*   DCL                                                                 04200040
*     1 DMDT BASED(DMDTPTR) BDY(WORD),                                  04250040
*        %GOTO DMDTPLS4;           /* SKIP USER GIVEN LEVEL          */ 04300040
*%DMDTPLS3:  DMDTDUM = DMDTLEVL||' DMDT';  /* PICK UP GIVEN LEVEL    */ 04350040
*     DMDTDUM BDY(WORD),                                                04400040
*%DMDTPLS4:   ;                                                         04450040
*        10 DMDTNO FIXED(8),       /* DOMAIN NUMBER                  */ 04500040
*        10 DMDTLO FIXED(8),       /* MIN MPL LEVEL                  */ 04550040
*        10 DMDTHI FIXED(8),       /* MAX MPL LEVEL                  */ 04600040
*        10 DMDTWT FIXED(8),       /* WEIGHTING FACTOR               */ 04650040
*        10 DMDTMPLT FIXED(15),    /* CURRENT MPL TARGET             */ 04700040
*        10 DMDTRUA FIXED(15),     /* AVE # OF READY USERS           */ 04710040
*        10 DMDTGOOU FIXED(15),    /* CURRENT # OF USERS GOING OUT   */ 04730040
*        10 DMDTCMPL FIXED(15),    /* CURRENT MPL                    */ 04850040
*        10 DMDTOUTU FIXED(15),    /* CURRENT # USERS ON OUT Q       */ 04900040
*        10 DMDTINCU FIXED(15),    /* CURRENT # SWAPPABLE INCORE     */ 05000040
*/*                                   USERS                          */ 05010040
*        10 DMDTRUC FIXED(31),     /* ACCUMULATOR FOR READY USER     */ 05030040
*/*                                   AVERAGE                        */ 05040040
*        10 DMDTEND CHAR(0) BDY(WORD)  /* END OF DMDT                */ 05100040
*     DMDT9999                                                          05150040
*     %DMDTLEN = 'LENGTH(DMDT)';   /* SYMBOLIC FOR DMDT LENGTH       */ 05200040
./  ADD  SSI=80240046,NAME=IRAEPAT
*        %GOTO EPATPLS1; /*                                             00050002
         MACRO                                                          00060002
         IRAEPAT   &DSECT=YES                                           00070002
         GBLC  &IRAEPPV            PREV RMEP BLOCK ADDRESS NAME         00080002
         GBLC  &IRAEPTM            PREV SCHED RMEP ADDRESS NAME         00090002
         GBLB  &IRAEPCM            IRARMEP COMMENTARY PRINT CONTROL     00130002
&IRAEPPV SETC  '00000000'          INIT TO NO PREVIOUS ASSEMBLED RMEP   00140002
&IRAEPTM SETC  'IRACTMQE'          INIT TO SCHED RTNE QUE HEADER ADDR   00160002
&IRAEPCM SETB  1                   BYPASS IRARMEP HEADER COMMENTARY     00180002
.*                                                                   */ 00190002
*%EPATPLS1:  ;                                                          00200002
* /*                                                                 */ 00250002
* /* MACCOMP Z-4 SC1CX/PKD16                                         */ 00300040
* /* MACSTAT Z-4 75007/Z40BPSS                                       */ 00350040
* /* *************************************************************** */ 00400002
* /*                                                                 */ 00450002
* /*   MACRO NAME - IRAEPAT                                          */ 00500002
* /*                                                                 */ 00550002
* /*   DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER ALGORITHM         */ 00600002
* /*                      ENTRY POINT DESCRIPTOR TABLE.              */ 00650002
* /*                                                                 */ 00700002
* /*   COPYRIGHT - NONE                                              */ 00750002
* /*                                                                 */ 00800002
* /*   STATUS - OS/VS2 RELEASE 4, 09/23/75, LEVEL=1                  */ 00850040
* /*                                                                 */ 00900002
* /*   FUNCTION - THE EPAT CONTAINS THE ENTRY POINT DESCRIPTORS OF   */ 00950002
* /*         ALL INDIVIDUALLY REQUESTED OR INDIVIDUALLY SCHEDULED    */ 01000002
* /*         SYSTEM RESOURCES MANAGER ALGORITHMS (ROUTINES WHOSE     */ 01050002
* /*         SCOPE OF APPLICABILITY IS SYSTEM-WIDE).  THE IRACTLCL   */ 01100002
* /*         MACRO KEYS OFF THE EPAT DISPLACEMENTS TO GENERATE THE   */ 01150002
* /*         CALLING SEQUENCES WHEREBY ALGORITHMS ARE REQUESTED.     */ 01200002
* /*                                                                 */ 01250002
* /*   METHOD OF ACCESS - THE EPAT IS ADDRESSED AS BEING AT A KNOWN  */ 01300002
* /*         DISPLACEMENT FROM THE SYSTEM RESOURCES MANAGER CONTROL  */ 01320002
* /*         TABLE, I.E., USING THE RMCTPTR REGISTER.  THE IRACNSMP  */ 01340002
* /*         INCLUDE LIST SPECIFIES THE SYMBOLIC DISPLACMENT OF THE  */ 01360002
* /*         EPAT FROM THE RMCT.  THE EPAT TABLE IS SCANNED VIA THE  */ 01380002
* /*         RMEP CHAIN POINTER IN THE -RMCTEPAT- FIELD.             */ 01400002
* /*                                                                 */ 01450002
* /* *************************************************************** */ 01500002
*        %GOTO EPATPLS2; /*                                             01550002
         AGO   .EPATAL1                                              */ 01600002
* /* *************************************************************** */ 01650002
* /*                                                                 */ 01700002
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */ 01750002
* /*                                                                 */ 01800002
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */ 01850002
* /*                                                                 */ 01900002
* /*         USING ON EPAT GIVES ADDRESSABILITY TO ALL SYMBOLS.      */ 01950002
* /*                                                                 */ 02000002
* /*     PLS - %EPATLEVL='USERLEVL' IF THE EPDT MAPPING IS TO BE     */ 02050002
* /*           CONCATENATED WITH A PREVIOUS DECLARATION, WITH THE    */ 02100002
* /*           EPAT BEING ASSIGNED THE INDICATED STRUCTURE LEVEL.    */ 02150002
* /*         - %EPAT9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED.  */ 02200002
* /*                                                                 */ 02250002
* /*         TO ACCESS AS A STANDALONE STRUCTURE DCL EPATPTR PTR.    */ 02300002
* /*                                                                 */ 02350002
* /*   CHANGE ACTIVITY = @ZM43084                                    */ 02400040
* /*                     @ZM43090,@ZA11855                           */ 02420000
* /*                                                                 */ 02450002
* /*   A000000-999999                                          Y02133*/ 02500002
* /*                                                                 */ 02550002
* /* *************************************************************** */ 02600002
* /*                                                                    02650002
.EPATAL1 ANOP                                                           02700002
         SPACE 1                                                        02750002
         AIF   ('&DSECT' EQ 'NO').EPATAL2                               02800002
EPAT     DSECT                                                          02850002
         AGO   .EPATAL3                                                 02900002
.EPATAL2 ANOP                                                           02950002
         DS    0D                                                       03000002
EPAT     EQU   *                                                        03050002
.EPATAL3 ANOP                                                           03100002
         SPACE 1                                                        03120002
         IRARMEP   DSECT=NO,EPN=CAP,NXT=000,RCR=YES,SCH=01000           03170040
         IRARMEP   DSECT=NO,EPN=RM1,NXT=RM2,SCH=01000                   03200040
         IRARMEP   DSECT=NO,EPN=RM2,NXT=CAP,SCH=30000                   03210040
         IRARMEP   DSECT=NO,EPN=SQA,NXT=RM1,RCR=YES                     03260040
         IRARMEP   DSECT=NO,EPN=MS6,NXT=ASM,SCH=08000                   03290040
         IRARMEP   DSECT=NO,EPN=PR5,NXT=MS6                             03320040
         IRARMEP   DSECT=NO,EPN=MS2,NXT=PR5,RCR=YES                     03350040
         IRARMEP   DSECT=NO,EPN=ASM,NXT=SQA,RCR=YES,SCH=10000           03380040
         IRARMEP   DSECT=NO,EPN=IL1,NXT=MS2,SCH=03000          @ZM43090 03410040
         IRARMEP   DSECT=NO,EPN=WM2,NXT=IL1,SCH=01000          @ZA11855 03460000
         IRARMEP   DSECT=NO,EPN=CL1,NXT=WM2,SCH=03000          @ZM43090 03510040
         IRARMEP   DSECT=NO,EPN=AP1,NXT=EQ1,SCH=02000                   03750040
         IRARMEP   DSECT=NO,EPN=EQ1,NXT=CL1,SCH=05000                   03800040
         IRARMEP   DSECT=NO,EPN=PR1,NXT=AP1,SCH=01000                   03850040
&IRAEPPV SETC  'RMEPBPR1'                                               03900040
EPATEND  DS    0D -                END OF EPAT TABLE                    04050002
EPATLEN  EQU   EPATEND-EPAT -      LENGTH OF EPAT TABLE                 04100002
EPATSCN  EQU   &IRAEPPV -          BEGIN EPAT TABLE SCAN                04120002
EPATSCH  EQU   &IRAEPTM -          BEGIN SCHED RTNE QUEUE               04130002
         MEND                                                           04150002
*                                                                    */ 04200002
*%EPATPLS2:  ;                                                          04250002
*        %EPATEPN = '16' ;          /* SIZE OF BASE EPB BLOCK        */ 04300002
*        %EPATSCH = '32' ;          /* SIZE OF SCHD EPB BLOCK        */ 04350002
*        %IF EPAT9999 ¬= ','        /* DOES STRUCTURE CONTINUE       */ 04450002
*            %THEN %EPAT9999 = ';'; /* NO, END DECLARE STATEMENT     */ 04500002
*        %IF EPATLEVL ¬= ''         /* IS STRUCTURE CONCATENATED     */ 04550002
*            %THEN %GOTO EPATPLS3;  /* YES, OMIT DECLARE STATEMENT   */ 04600002
*   DCL                                                                 04650002
*     1 EPAT BASED(EPATPTR) BDY(DWORD),                                 04700002
*            %GOTO EPATPLS4;        /* SKIP USER-GIVEN LEVEL         */ 04750002
*%EPATPLS3:  EPATDUM = EPATLEVL||' EPAT';  /* PICK UP GIVEN LEVEL    */ 04800002
*     EPATDUM BDY(DWORD),                                               04850002
*%EPATPLS4:  ;                                                          04900002
*       10 RMEPBCAP CHAR(EPATSCH) BDY(DWORD), /* CTL PRT ANLZ RTNE   */ 04920040
*       10 RMEPBRM1 CHAR(EPATSCH) BDY(DWORD), /* RES MONITORING RTNE */ 04950040
*       10 RMEPBRM2 CHAR(EPATSCH) BDY(DWORD), /* RM ADJUSTMENT RTNE  */ 04970040
*       10 RMEPBSQA CHAR(EPATEPN) BDY(DWORD), /* SQA MSG PRNT RTNE   */ 05050002
*       10 RMEPBMS6 CHAR(EPATSCH) BDY(DWORD), /* MSO WAIT CHK RTNE   */ 05070002
*       10 RMEPBPR5 CHAR(EPATEPN) BDY(DWORD), /* PRA FORC STL RTNE   */ 05100002
*       10 RMEPBMS2 CHAR(EPATEPN) BDY(DWORD), /* MSO ANALYSIS RTNE   */ 05150002
*       10 RMEPBASM CHAR(EPATSCH) BDY(DWORD), /* ASM SHRT MON RTNE   */ 05200002
*       10 RMEPBIL1 CHAR(EPATSCH) BDY(DWORD), /* IOL UTIL MON RTNE   */ 05250002
*       10 RMEPBWM2 CHAR(EPATSCH) BDY(DWORD), /* WLM ANALYSIS RTNE   */ 05300040
*       10 RMEPBCL1 CHAR(EPATSCH) BDY(DWORD), /* CPU UTIL MON RTNE   */ 05450002
*       10 RMEPBAP1 CHAR(EPATSCH) BDY(DWORD), /* APG ANALYSIS RTNE   */ 05500002
*       10 RMEPBEQ1 CHAR(EPATSCH) BDY(DWORD), /* ENQ STAT MON RTNE   */ 05650040
*       10 RMEPBPR1 CHAR(EPATSCH) BDY(DWORD), /* PRA ANALYSIS RTNE   */ 05700002
*       10 EPATEND  CHAR(0) BDY(DWORD) /* END OF EPAT TABLE          */ 05800002
*   EPAT9999                                                            05850002
*   %EPATLEN = 'LENGTH(EPAT)';      /* SYMBOLIC FOR LENGTH OF EPAT   */ 05900002
./  ADD  SSI=60790638,NAME=IRAEPDT
*        %GOTO EPDTPLS1; /*                                             00050002
         MACRO                                                          00100002
         IRAEPDT   &DSECT=YES                                           00110002
         GBLC  &IRAEPPV            PREV RMEP BLOCK ADDRESS NAME         00120002
         GBLB  &IRAEPCM            IRARMEP COMMENTARY PRINT CONTROL     00130002
&IRAEPPV SETC  '00000000'          INIT TO NO PREVIOUS CHAINED RMEP     00140002
&IRAEPCM SETB  1                   BYPASS IRARMEP HEADER COMMENTARY     00180002
.*                                                                   */ 00190002
*%EPDTPLS1:  ;                                                          00200002
* /*                                                                 */ 00250002
* /* MACCOMP Z-4 SC1CX/PKD16                                         */ 00300040
* /* MACSTAT Z-4 75007/Z40BPSS                                       */ 00330040
* /* *************************************************************** */ 00400002
* /*                                                                 */ 00450002
* /*   MACRO NAME - IRAEPDT                                          */ 00500002
* /*                                                                 */ 00550002
* /*   DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER SERIALIZED        */ 00600002
* /*                      ACTION ENTRY POINT DESCRIPTOR TABLE.       */ 00650002
* /*                                                                 */ 00700002
* /*   COPYRIGHT - NONE                                              */ 00750002
* /*                                                                 */ 00800002
* /*   STATUS - OS/VS2 RELEASE 4, 07/30/75, LEVEL=1                  */ 00850040
* /*                                                                 */ 00900002
* /*   FUNCTION - THE EPDT CONTAINS THE ENTRY POINT DESCRIPTORS OF   */ 00950002
* /*         ALL SYSTEM RESOURCES MANAGER EVENT INITIATED ACTIONS    */ 01000002
* /*         (ROUTINES WHICH PERFORM PROCESSING FOR A GIVEN USER)    */ 01050002
* /*         WHICH REQUIRE SERIALIZATION WITH OTHER SRM PROCESSING.  */ 01100002
* /*         THE IRACTLCL MACRO KEYS OFF THE EPDT DISPLACEMENTS TO   */ 01150002
* /*         GENERATE THE CALLING SEQUENCES FOR DEFERRABLE ACTIONS.  */ 01200002
* /*                                                                 */ 01250002
* /*   METHOD OF ACCESS - THE EPDT IS ADDRESSED AS BEING AT A KNOWN  */ 01300002
* /*         DISPLACEMENT FROM THE SYSTEM RESOURCES MANAGER CONTROL  */ 01320002
* /*         TABLE, I.E., USING THE RMCTPTR REGISTER.  THE IRACNSMP  */ 01340002
* /*         INCLUDE LIST SPECIFIES THE SYMBOLIC DISPLACMENT OF THE  */ 01360002
* /*         EPDT FROM THE RMCT.  THE EPDT TABLE IS SCANNED VIA THE  */ 01380002
* /*         RMEP CHAIN POINTER IN THE -RMCTEPDT- FIELD.             */ 01400002
* /*                                                                 */ 01450002
* /* *************************************************************** */ 01500002
*        %GOTO EPDTPLS2; /*                                             01550002
         AGO   .EPDTAL1                                              */ 01600002
* /* *************************************************************** */ 01650002
* /*                                                                 */ 01700002
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */ 01750002
* /*                                                                 */ 01800002
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */ 01850002
* /*                                                                 */ 01900002
* /*         USING ON EPDT GIVES ADDRESSABILITY TO ALL SYMBOLS.      */ 01950002
* /*                                                                 */ 02000002
* /*     PLS - %EPDTLEVL='USERLEVL' IF THE EPDT MAPPING IS TO BE     */ 02050002
* /*           CONCATENATED WITH A PREVIOUS DECLARATION, WITH THE    */ 02100002
* /*           EPDT BEING ASSIGNED THE INDICATED STRUCTURE LEVEL.    */ 02150002
* /*         - %EPDT9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED.  */ 02200002
* /*                                                                 */ 02250002
* /*         TO ACCESS AS A STANDALONE STRUCTURE DCL EPDTPTR PTR.    */ 02300002
* /*                                                                 */ 02350002
* /*   CHANGE ACTIVITY =                                             */ 02400002
* /*                                                                 */ 02450002
* /*   A000000-999999                                          Y02133*/ 02500002
* /*                                                                 */ 02550002
* /* *************************************************************** */ 02600002
* /*                                                                    02650002
.EPDTAL1 ANOP                                                           02700002
         SPACE 1                                                        02750002
         AIF   ('&DSECT' EQ 'NO').EPDTAL2                               02800002
EPDT     DSECT                                                          02850002
         AGO   .EPDTAL3                                                 02900002
.EPDTAL2 ANOP                                                           02950002
         DS    0D                                                       03000002
EPDT     EQU   *                                                        03050002
.EPDTAL3 ANOP                                                           03100002
         SPACE 1                                                        03150002
         IRARMEP   DSECT=NO,EPN=IPS,NXT=000,ERR=XPS,RCR=YES             03200040
         IRARMEP   DSECT=NO,EPN=DEL,NXT=IPS,RCR=YES                     03250040
         IRARMEP   DSECT=NO,EPN=IL4,NXT=DEL,RCR=YES                     03300040
         IRARMEP   DSECT=NO,EPN=UXB,NXT=HIT,RCR=YES                     03350040
         IRARMEP   DSECT=NO,EPN=HIT,NXT=IL4,RCR=YES                     03400040
         IRARMEP   DSECT=NO,EPN=RPS,NXT=UXB,RCR=YES                     03450040
EPDTEND  DS    0D -                END OF EPDT TABLE                    03800002
EPDTLEN  EQU   EPDTEND-EPDT -      LENGTH OF EPDT TABLE                 03850002
EPDTSCN  EQU   &IRAEPPV -          BEGIN EPDT TABLE SCAN                03870002
         MEND                                                           03900002
*                                                                    */ 03950002
*%EPDTPLS2:  ;                                                          04000002
*        %IF EPDT9999 ¬= ','        /* DOES STRUCTURE CONTINUE       */ 04050002
*            %THEN %EPDT9999 = ';'; /* NO, END DECLARE STATEMENT     */ 04100002
*        %IF EPDTLEVL ¬= ''         /* IS STRUCTURE CONCATENATED     */ 04150002
*            %THEN %GOTO EPDTPLS3;  /* YES, OMIT DECLARE STATEMENT   */ 04200002
*   DCL                                                                 04250002
*     1 EPDT BASED(EPDTPTR) BDY(DWORD),                                 04300002
*            %GOTO EPDTPLS4;        /* SKIP USER-GIVEN LEVEL         */ 04350002
*%EPDTPLS3:  EPDTDUM = EPDTLEVL||' EPDT';  /* PICK UP GIVEN LEVEL    */ 04400002
*     EPDTDUM BDY(DWORD),                                               04450002
*%EPDTPLS4:  ;                                                          04500002
*       10 RMEPBIPS CHAR(16) BDY(DWORD), /* IPS DELETE NOTIFY RTNE   */ 04550002
*       10 RMEPBDEL CHAR(16) BDY(DWORD), /* OUCB DELETE ROUTINE      */ 04650002
*       10 RMEPBIL4 CHAR(16) BDY(DWORD), /* IMCB DELETE ROUTINE      */ 04700002
*       10 RMEPBUXB CHAR(16) BDY(DWORD), /* OUXB DELETE ROUTINE      */ 04750002
*       10 RMEPBHIT CHAR(16) BDY(DWORD), /* USER READY PROCES RTNE   */ 04800002
*       10 RMEPBRPS CHAR(16) BDY(DWORD), /* USER STATE CHANGE RTNE   */ 04850002
*       10 EPDTEND  CHAR(0) BDY(DWORD) /* END OF EPDT TABLE          */ 05150002
*   EPDT9999                                                            05200002
*   %EPDTLEN = 'LENGTH(EPDT)';      /* SYMBOLIC FOR LENGTH OF EPDT   */ 05250002
./  ADD  SSI=60790639,NAME=IRAEPNMP
*%/*                                                                 */ 00050002
* /* MACCOMP Z-4 SC1CX/PKD16                                         */ 00100040
* /* MACSTAT Z-4 75007/Z40BPSS                                       */ 00130040
* /* *************************************************************** */ 00200002
* /*                                                                 */ 00250002
* /*   MACRO NAME - IRAEPNMP                                         */ 00300002
* /*                                                                 */ 00350002
* /*   DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER ENTRY POINT       */ 00400002
* /*                      NAME MAPPING MACRO                         */ 00450002
* /*                                                                 */ 00500002
* /*   STATUS - OS/VS2 RELEASE 4, 07/30/75, LEVEL=1                  */ 00550040
* /*                                                                 */ 00600002
* /*   FUNCTION - THE IRAEPNMP MACRO DEFINES, IN MACHINE-READABLE    */ 00650002
* /*         FORM, THE CHARACTERISTICS OF EACH INVOCABLE ROUTINE     */ 00700002
* /*         WITHIN THE SYSTEM RESOURCES MANAGER COMPONENT.          */ 00750002
* /*                                                                 */ 00800002
* /*   NOTES - THE IRAEPNMP MACRO PROVIDES THE INFORMATION NEEDED    */ 00850002
* /*         TO CONSTRUCT CALLING SEQUENCES, ENTRY CODE, AND EXIT    */ 00900002
* /*         CODE FOR EACH INDIVIDUAL SYSTEM RESOURCES MANAGER       */ 00950002
* /*         ROUTINE.  THUS, ANY ROUTINES ADDED TO THE SYSTEM        */ 01000002
* /*         RESOURCES MANAGER COMPONENT SHOULD HAVE THEIR           */ 01050002
* /*         CHARACTERISTICS ENTERED INTO THE IRAEPNMP MACRO.        */ 01100002
* /*                                                                 */ 01150002
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS - SEE ASSEM/PLS MACRO   */ 01200002
* /*         HEADER STATEMENTS AND ADJACENT GLOBAL DECLARATIONS.     */ 01250002
* /*                                                                 */ 01300002
* /*   CHANGE ACTIVITY =                                             */ 01350002
* /*                                                                 */ 01400002
* /*   A000000-999999                                          Y02133*/ 01450002
* /*                                                                 */ 01500002
* /* *************************************************************** */ 01550002
* /*                                                                    01600002
         MACRO                                                          01650002
         IRAEPNMP  &EPN=,          ROUTINE (ENTRY POINT) IDENTIFIER    *01700002
               &ERR=               ROUTINE RECOVRY POINT IDENTIFIER     01720002
         GBLC  &IRAEPAD            ROUTINE ENTRY POINT ADDRESS NAME     01750002
         GBLC  &IRAEPER            ROUTINE RECOVERY POINT ADDR NAME     01800002
         GBLC  &IRAEPFL            ROUTINE INVOCATION FLAG MASK         01850002
         AGO   .EPNMP02                                        @Z40BPCH 01900040
*                                                                    */ 01950002
* /* *************************************************************** */ 02000002
* /*                                                                 */ 02050002
* /*   ROUTINES WHICH PERFORM ALGORITHMIC PROCESSING FOR THE SYSTEM  */ 02100002
* /*   RESOURCES MANAGER.  THEY ARE INVOKED BY THE CNTRL ALGORITHM   */ 02150002
* /*   ON THE BASIS OF REQUEST BITS IN THE RMCTALA-RMCTALR FLDS OF   */ 02200002
* /*   THE SYSTEM RESOURCES MANAGER CONTROL TABLE.  THE IRAEPNMP     */ 02250002
* /*   MACRO DEFINES THE BIT FLAG ASSOCIATED WITH EACH ROUTINE.      */ 02300002
* /*                                                                 */ 02350002
* /* *************************************************************** */ 02400002
* /*                                                                    02450002
.EPNMP02 AIF   ('&EPN' NE 'IL1').EPNMP04                                02650002
&IRAEPFL SETC  '40000000'          ROUTINE INVOCATION FLAG MASK         02700002
         AGO   .EPNMPOK                                                 02750002
.EPNMP04 AIF   ('&EPN' NE 'CL1').EPNMP06                                02800002
&IRAEPFL SETC  '20000000'          ROUTINE INVOCATION FLAG MASK         02850002
         AGO   .EPNMPOK                                                 02900002
.EPNMP06 AIF   ('&EPN' NE 'SQA').EPNMP08                                02950002
&IRAEPFL SETC  '10000000'          ROUTINE INVOCATION FLAG MASK         03000002
         AGO   .EPNMPOK                                                 03050002
.EPNMP08 AIF   ('&EPN' NE 'CAN').EPNMP10                                03100002
&IRAEPFL SETC  '08000000'          ROUTINE INVOCATION FLAG MASK         03150002
         AGO   .EPNMPOK                                                 03200002
.EPNMP10 AIF   ('&EPN' NE 'A05').EPNMP12                                03250002
&IRAEPFL SETC  '04000000'          ROUTINE INVOCATION FLAG MASK         03300002
         AGO   .EPNMP96                                                 03350002
.EPNMP12 AIF   ('&EPN' NE 'AP1').EPNMP14                                03400002
&IRAEPFL SETC  '02000000'          ROUTINE INVOCATION FLAG MASK         03450002
         AGO   .EPNMPOK                                                 03500002
.EPNMP14 AIF   ('&EPN' NE 'PR1').EPNMP16                                03550002
&IRAEPFL SETC  '01000000'          ROUTINE INVOCATION FLAG MASK         03600002
         AGO   .EPNMPOK                                                 03650002
.EPNMP16 AIF   ('&EPN' NE 'EQ1').EPNMP18                                03700002
&IRAEPFL SETC  '00800000'          ROUTINE INVOCATION FLAG MASK         03750002
         AGO   .EPNMPOK                                                 03800002
.EPNMP18 AIF   ('&EPN' NE 'A09').EPNMP20                                03850002
&IRAEPFL SETC  '00400000'          ROUTINE INVOCATION FLAG MASK         03900002
         AGO   .EPNMP96                                                 03950002
.EPNMP20 AIF   ('&EPN' NE 'A10').EPNMP22                                04000002
&IRAEPFL SETC  '00200000'          ROUTINE INVOCATION FLAG MASK         04050002
         AGO   .EPNMP96                                                 04100002
.EPNMP22 AIF   ('&EPN' NE 'ASM').EPNMP24                                04150002
&IRAEPFL SETC  '00100000'          ROUTINE INVOCATION FLAG MASK         04200002
         AGO   .EPNMPOK                                                 04250002
.EPNMP24 AIF   ('&EPN' NE 'MS6').EPNMP26                                04300002
&IRAEPFL SETC  '00080000'          ROUTINE INVOCATION FLAG MASK         04350002
         AGO   .EPNMPOK                                                 04400002
.EPNMP26 AIF   ('&EPN' NE 'PR5').EPNMP28                                04450002
&IRAEPFL SETC  '00040000'          ROUTINE INVOCATION FLAG MASK         04500002
         AGO   .EPNMPOK                                                 04550002
.EPNMP28 AIF   ('&EPN' NE 'A14').EPNMP32                       @Z40BPCH 04600040
&IRAEPFL SETC  '00020000'          ROUTINE INVOCATION FLAG MASK         04650002
         AGO   .EPNMP96                                                 04700002
.EPNMP32 AIF   ('&EPN' NE 'MS2').EPNMP34                                04900002
&IRAEPFL SETC  '00008000'          ROUTINE INVOCATION FLAG MASK         04950002
         AGO   .EPNMPOK                                                 05000002
.EPNMP34 AIF   ('&EPN' NE 'RM1').EPNMP36                       @Z40BPCH 05050040
&IRAEPFL SETC  '00004000'          ROUTINE INVOCATION FLAG MASK         05100002
         AGO   .EPNMPOK                                                 05150002
.EPNMP36 AIF   ('&EPN' NE 'RM2').EPNMP38                       @Z40BPCH 05200040
&IRAEPFL SETC  '00002000'          ROUTINE INVOCATION FLAG MASK         05250002
         AGO   .EPNMPOK                                                 05300002
.EPNMP38 AIF   ('&EPN' NE 'WM2').EPNMP40                                05350002
&IRAEPFL SETC  '00001000'          ROUTINE INVOCATION FLAG MASK         05400002
         AGO   .EPNMPOK                                                 05450002
.EPNMP40 AIF   ('&EPN' NE 'CAP').EPNMP42                                05500002
&IRAEPFL SETC  '00000800'          ROUTINE INVOCATION FLAG MASK         05550002
         AGO   .EPNMPOK                                                 05600002
.EPNMP42 AIF   ('&EPN' NE 'A21').EPNMP44                                05650002
&IRAEPFL SETC  '00000400'          ROUTINE INVOCATION FLAG MASK         05700002
         AGO   .EPNMP96                                                 05750002
.EPNMP44 AIF   ('&EPN' NE 'A22').EPNMP50                       @Z40BPCH 05800040
&IRAEPFL SETC  '00000200'          ROUTINE INVOCATION FLAG MASK         05850002
         AGO   .EPNMP96                                                 05900002
*                                                                    */ 06100002
* /* *************************************************************** */ 06150002
* /*                                                                 */ 06200002
* /*   ROUTINES WHICH PERFORM ANALYSIS PROCESSING FOR THE SYSTEM     */ 06250002
* /*   RESOURCES MANAGER.  THEY ARE INVOKED BY THE CTRL ALGORITHM    */ 06300002
* /*   ON THE BASIS OF STATUS BITS IN THE RMCTALU FIELD OF THE       */ 06350002
* /*   SYSTEM RESOURCES MANAGER CONTROL TABLE.  THE IRAEPNMP MACRO   */ 06400002
* /*   DEFINES THE BIT FLAG ASSOCIATED WITH EACH ROUTINE.            */ 06450002
* /*                                                                 */ 06500002
* /* *************************************************************** */ 06550002
* /*                                                                    06600002
.EPNMP50 AIF   ('&EPN' NE 'IL3').EPNMP52                                06800002
&IRAEPFL SETC  '00004000'          ROUTINE INVOCATION FLAG MASK         06850002
         AGO   .EPNMPOK                                                 06900002
.EPNMP52 AIF   ('&EPN' NE 'CL3').EPNMP54                                06950002
&IRAEPFL SETC  '00002000'          ROUTINE INVOCATION FLAG MASK         07000002
         AGO   .EPNMPOK                                                 07050002
.EPNMP54 AIF   ('&EPN' NE 'WM3').EPNMP64                                07100002
&IRAEPFL SETC  '00001000'          ROUTINE INVOCATION FLAG MASK         07150002
         AGO   .EPNMPOK                                                 07200002
*                                                                    */ 07850002
* /* *************************************************************** */ 07900002
* /*                                                                 */ 07950002
* /*   ROUTINES WHICH PERFORM USER-LEVEL DEFERRED ACTION PROCESSING  */ 08000002
* /*   FOR THE SYSTEM RESOURCES MANAGER.  THEY ARE INVOKED BY THE    */ 08050002
* /*   CNTRL ALGORITHM ON THE BASIS OF REQUEST BITS IN THE OUCBACN   */ 08100002
* /*   FIELD OF THE SYSTEM RESOURCES MANAGER USER CONTROL BLOCK.     */ 08150002
* /*   THE IRAEPNMP MACRO DEFINES THE BIT FLAG ASSOCIATED WITH       */ 08200002
* /*   EACH ROUTINE.                                                 */ 08250002
* /*                                                                 */ 08300002
* /* *************************************************************** */ 08350002
* /*                                                                    08400002
.EPNMP64 AIF   ('&EPN' NE 'DEL').EPNMP66                                08450002
&IRAEPFL SETC  '80000001'          ROUTINE INVOCATION FLAG MASK         08500002
         AGO   .EPNMPOK                                                 08550002
.EPNMP66 AIF   ('&EPN' NE 'UXB').EPNMP68                                08600002
&IRAEPFL SETC  '40000001'          ROUTINE INVOCATION FLAG MASK         08650002
         AGO   .EPNMPOK                                                 08700002
.EPNMP68 AIF   ('&EPN' NE 'IL4').EPNMP70                                08750002
&IRAEPFL SETC  '20000001'          ROUTINE INVOCATION FLAG MASK         08800002
         AGO   .EPNMPOK                                                 08850002
.EPNMP70 AIF   ('&EPN' NE 'IPS').EPNMP72                                08900002
&IRAEPFL SETC  '10000001'          ROUTINE INVOCATION FLAG MASK         08950002
         AGO   .EPNMPOK                                                 09000002
.EPNMP72 AIF   ('&EPN' NE 'D04').EPNMP74                                09050002
&IRAEPFL SETC  '08000001'          ROUTINE INVOCATION FLAG MASK         09100002
         AGO   .EPNMP96                                                 09150002
.EPNMP74 AIF   ('&EPN' NE 'D05').EPNMP76                                09200002
&IRAEPFL SETC  '04000001'          ROUTINE INVOCATION FLAG MASK         09250002
         AGO   .EPNMP96                                                 09300002
.EPNMP76 AIF   ('&EPN' NE 'D06').EPNMP78                                09350002
&IRAEPFL SETC  '02000001'          ROUTINE INVOCATION FLAG MASK         09400002
         AGO   .EPNMP96                                                 09450002
.EPNMP78 AIF   ('&EPN' NE 'HIT').EPNMP80                                09500002
&IRAEPFL SETC  '01000001'          ROUTINE INVOCATION FLAG MASK         09550002
         AGO   .EPNMPOK                                                 09600002
.EPNMP80 AIF   ('&EPN' NE 'RPS').EPNMP82                                09650002
&IRAEPFL SETC  '00800001'          ROUTINE INVOCATION FLAG MASK         09700002
         AGO   .EPNMPOK                                                 09750002
.EPNMP82 AIF   ('&EPN' NE 'WM5').EPNMP84                                09800040
&IRAEPFL SETC  '00400001'          ROUTINE INVOCATION FLAG MASK         09850002
         AGO   .EPNMPOK                                                 09900002
.EPNMP84 AIF   ('&EPN' NE 'D10').EPNMP88                       @Z40BPCH 09950040
&IRAEPFL SETC  '00200001'          ROUTINE INVOCATION FLAG MASK         10000002
         AGO   .EPNMP96                                                 10050002
*                                                                    */ 10130002
* /* *************************************************************** */ 10140002
* /*                                                                 */ 10150002
* /*   ROUTINES WHICH PERFORM USER-LEVEL TIME-DEPENDENT ACTION       */ 10160002
* /*   PROCESSING FOR THE SYSTEM RESOURCES MANAGER.  THEY ARE        */ 10170002
* /*   INVOKED BY THE CTRL ALGORITHM ON THE BASIS OF REQUEST         */ 10180002
* /*   BITS IN THE OUCBACN FIELD OF THE SYSTEM RESOURCES MNGR        */ 10190002
* /*   USER CONTROL BLOCK.  THE IRAEPNMP MACRO DEFINES THE BIT       */ 10200002
* /*   FLAG ASSOCIATED WITH EACH ROUTINE.                            */ 10210002
* /*                                                                 */ 10220002
* /* *************************************************************** */ 10230002
* /*                                                                    10240002
.EPNMP88 AIF   ('&EPN' NE 'CSO').EPNMP90                                10250002
&IRAEPFL SETC  '00080001'          ROUTINE INVOCATION FLAG MASK         10300002
         AGO   .EPNMPOK                                                 10350002
.EPNMP90 AIF   ('&EPN' NE 'CSI').EPNMP92                                10400002
&IRAEPFL SETC  '00040001'          ROUTINE INVOCATION FLAG MASK         10450002
         AGO   .EPNMPOK                                                 10500002
.EPNMP92 AIF   ('&EPN' NE 'CSR').EPNMP94                                10550002
&IRAEPFL SETC  '00020001'          ROUTINE INVOCATION FLAG MASK         10600002
         AGO   .EPNMPOK                                                 10650002
.EPNMP94 AIF   ('&EPN' NE 'D15').EPNMR02                                10700002
&IRAEPFL SETC  '00010001'          ROUTINE INVOCATION FLAG MASK         10750002
         AGO   .EPNMP96                                                 10800002
*                                                                    */ 10850002
* /* *************************************************************** */ 10900002
* /*                                                                 */ 10950002
* /*   ROUTINES WHICH PERFORM THE ROUTING OF CONTROL WITHIN THE      */ 11000002
* /*   SYSTEM RESOURCES MANAGER.  THEY ARE ENTERED BY A DIRECT       */ 11050002
* /*   BRANCH, AND PERFORM THEIR OWN REGISTER SETUP FUNCTIONS.       */ 11100002
* /*   THE IRARMEP MACRO DEFINES THE NAME OF THE RETRY POINT TO      */ 11150002
* /*   BE GIVEN CONTROL IF THAT ROUTINE EXPERIENCES AN ERROR.        */ 11200002
* /*                                                                 */ 11250002
* /* *************************************************************** */ 11300002
* /*                                                                    11350002
.EPNMR02 ANOP                                                           11400002
&IRAEPFL SETC  '00000000'          INVOCATION FLAG NOT USED             11410002
         AIF   ('&EPN' EQ 'EVT').EPNMPOK                                11420002
         AIF   ('&EPN' EQ 'CTL').EPNMPOK                                11460002
         AIF   ('&EPN' EQ 'CAS').EPNMPOK                                11500002
         AGO   .EPNMR04                                                 11540002
.*             INVALID REQUEST DEFAULT NAMING CONVENTIONS               11580002
.EPNMR04 ANOP                                                           11610002
&IRAEPAD SETC  'IRARMNOP'          DUMMY INDICATES EPN NOT FOUND        11640002
&IRAEPER SETC  'IRARMNOP'          DUMMY INDICATES EPN NOT FOUND        11670002
         AGO   .EPNMP96                                                 11700002
.*             SUBROUTINE ENTRY POINT NAMING CONVENTIONS                12050002
.EPNMPOK ANOP                                                           12100002
&IRAEPAD SETC  'IRARM&EPN'         ROUTINE ENTRY POINT ADDRESS NAME     12150002
&IRAEPER SETC  '&IRAEPAD'          ROUTINE RECOVERY POINT ADDR NAME     12200002
         AIF   ('&ERR' EQ '').EPNMP96                                   12210002
&IRAEPER SETC  'IRARM&ERR'         ROUTINE RECOVERY POINT ADDR NAME     12220002
.EPNMP96 ANOP                                                           12250002
         MEND                                                           12300002
*                                                                    */ 12350002
*IRAEPNMP: MACRO KEYS(EPN);         /* GIVEN ENTRY POINT NAME IDENT  */ 12400002
*    DCL IRAEPNML CHAR EXT;         /* ROUTINE ENTRY POINT LOCATOR   */ 12450002
*    DCL IRAEPNMS CHAR EXT;         /* ROUTINE SAVE AREA IDENTIFIER  */ 12500002
* /* *************************************************************** */ 12550002
* /*                                                                 */ 12600002
* /*   SUBROUTINES TO WHICH A REQUEST FOR SYSTEM RESOURCES MANAGER   */ 12650002
* /*   ALGORITHMIC PROCESSING IS DIRECTED.  THEY ARE LINKED-TO       */ 12700002
* /*   DIRECTLY BY THE INVOKING ROUTINE.  THE INVOCATION OF THE      */ 12750002
* /*   REQUESTED ALGORITHM IS DEFERRED, TO BE SUBSEQUENTLY ACTED     */ 12800002
* /*   UPON BY THE SYSTEM RESOURCES MANAGER CONTROL ALGORITHM.       */ 12850002
* /*                                                                 */ 12900002
* /*         - ENTRY POINT ADDRESSES ARE IN THE RMSB TABLE.          */ 12950002
* /*         - ROUTINES USE THE 1ST LEVEL CPU SAVE AREA TO STORE     */ 13000002
* /*           THE REQUESTOR'S REGISTERS.                            */ 13050002
* /*         - SAVE AREA USAGE IS SERIALIZED BY DISABLEMENT, OR      */ 13100002
* /*           BY THE NON-PREEMPTABILITY OF AN SRB.                  */ 13150002
* /*                                                                 */ 13200002
* /* *************************************************************** */ 13250002
*    IRAEPNML = 'IRARMCPU' ;        /* FLAG CPU-LEVEL REQUEST RUTNE  */ 13300002
*    IRAEPNMS = 'IRAEPL01' ;        /* RTNE USES LEVEL 1 REG SAVEAR  */ 13350002
*    IF EPN(1) = 'CRL' THEN         /* RECEIVE SYS ALGRTHM REQUEST   */ 13400002
*      GOTO EPNMPOK;                                                    13450002
* /* *************************************************************** */ 13500002
* /*                                                                 */ 13550002
* /*   SUBROUTINES TO WHICH A REQUEST FOR SERIALIZED USER-LEVEL      */ 13600002
* /*   SYSTEM RESOURCES MANAGER PROCESSING IS DIRECTED.  THEY ARE    */ 13650002
* /*   LINKED-TO DIRECTLY BY THE INVOKING ROUTINE.  DEPENDING ON     */ 13700002
* /*   SYSTEM RESOURCES MANAGER STATUS, THE REQUESTED PROCESSING     */ 13750002
* /*   ACTION MAY BE INVOKED IMMEDIATELY, OR THE REQUEST FOR SUCH    */ 13800002
* /*   PROCESSING ACTION MAY BE DEFERRED UNTIL ANY CONCURRENT        */ 13850002
* /*   PROCESSING HAS BEEN COMPLETED.                                */ 13900002
* /*                                                                 */ 13950002
* /*         - ENTRY POINT ADDRESSES ARE IN THE RMSB TABLE.          */ 14000002
* /*         - ROUTINES USE THE 2ND LEVEL CPU SAVE AREA TO STORE     */ 14050002
* /*           THE REQUESTOR'S REGISTERS.                            */ 14100002
* /*         - SAVE AREA USAGE IS SERIALIZED BY DISABLEMENT, OR      */ 14150002
* /*           BY THE NON-PREEMPTABILITY OF AN SRB.                  */ 14200002
* /*                                                                 */ 14250002
* /* *************************************************************** */ 14300002
*    IRAEPNMS = 'IRAEPL02' ;        /* RTNE USES LEVEL 2 REG SAVEAR  */ 14350002
*    IF EPN(1) = 'CRN' THEN         /* RECEIVE USER ACTION REQUEST   */ 14400002
*      GOTO EPNMPOK;                                                    14450002
* /* *************************************************************** */ 14500002
* /*                                                                 */ 14550002
* /*   SUBROUTINES WHICH PERFORM INTERNAL SERVICES FOR OTHER SYSTEM  */ 14600002
* /*   RESOURCES MANAGER ROUTINES WHICH DO NOT HOLD THE SRM LOCK.    */ 14650040
* /*   THEY ARE LINKED-TO DIRECTLY BY THE INVOKING ROUTINE.          */ 14700002
* /*                                                                 */ 14750002
* /*         - ENTRY POINT ADDRESSES ARE IN THE RMSB TABLE.          */ 14800002
* /*         - ROUTINES USE THE 3RD LEVEL CPU SAVE AREA TO STORE     */ 14850002
* /*           THE INVOKER'S REGISTERS.                              */ 14900002
* /*         - SAVE AREA USAGE IS SERIALIZED BY DISABLEMENT, OR      */ 14950002
* /*           BY THE NON-PREEMPTABILITY OF AN SRB.                  */ 15000002
* /*                                                                 */ 15050002
* /* *************************************************************** */ 15100002
*    IRAEPNMS = 'IRAEPL03' ;        /* RTNE USES LEVEL 3 REG SAVEAR  */ 15110002
*    IF EPN(1) = 'I10' THEN         /* ABEND THE SRM INVOCATION      */ 15120002
*      GOTO EPNMPOK;                                                    15130002
*    IF EPN(1) = 'CRY' THEN         /* RECEIVE USER ANALYZ REQUEST   */ 15160002
*      GOTO EPNMPOK;                                                    15170002
*    IF EPN(1) = 'WM1' THEN         /* CALCULAT USER SERVICE AMT     */ 15200002
*      GOTO EPNMPOK;                                                    15210002
*    IF EPN(1) = 'WM4' THEN         /* CALCULAT USER NORMALIZD LVL   */ 15220002
*      GOTO EPNMPOK;                                                    15230002
*    IF EPN(1) = 'WM5' THEN         /* UPDATE PERF GROUP PERIOD      */ 15236002
*      GOTO EPNMPOK;                                                    15242002
* /* *************************************************************** */ 15254002
* /*                                                                 */ 15256002
* /*   SUBROUTINES WHICH PERFORM EXTERNAL SERVICES FOR THE SYSTEM    */ 15258002
* /*   RESOURCES MANAGER.  THEY ARE LINKED-TO DIRECTLY AS PART OF    */ 15260002
* /*   THE INVOCATION SEQUENCE FOR NON-RESIDENT SYSTEM RESOURCES     */ 15262002
* /*   MANAGER SERVICE ROUTINES.                                     */ 15264002
* /*                                                                 */ 15266002
* /*         - ENTRY POINT ADDRESSES ARE DYNAMICALLY INSERTED INTO   */ 15268002
* /*           THE RMSB TABLE.                                       */ 15270002
* /*         - ROUTINES USE THE 5TH LEVEL SRM SAVE AREA TO STORE     */ 15272040
* /*           THE LINKING ROUTINE REGISTERS.                        */ 15274002
* /*         - SAVE AREA USAGE IS SERIALIZED BY THE SRM LOCK.        */ 15276040
* /*                                                                 */ 15278002
* /* *************************************************************** */ 15280002
*    IRAEPNML = 'RMSB'||EPN(1) ;    /* REQUESTED SUBROUTINE POINTER  */ 15282002
*    IRAEPNMS = 'IRAEPL05' ;        /* RTNE USES LEVEL 5 REG SAVEAR  */ 15284002
*    IF EPN(1) = 'SET' THEN         /* PROCESS NEWIPS SYSEVENT RTN   */ 15332002
*      GOTO EPNMPOK;                                                    15340002
*    IF EPN(1) = 'NOP' THEN         /* RETURN TO INVOKING ROUTINE    */ 15350002
*      GOTO EPNMPOK;                                                    15370002
* /* *************************************************************** */ 15400002
* /*                                                                 */ 15410002
* /*   SUBROUTINES WHICH PERFORM EXTERNAL SERVICES FOR OTHER SYSTEM  */ 15420002
* /*   RESOURCES MANAGER ROUTINES.  THEY ARE LINKED-TO DIRECTLY BY   */ 15450002
* /*   THE INVOKING ROUTINE.                                         */ 15500002
* /*                                                                 */ 15550002
* /*         - ENTRY POINT ADDRESSES ARE IN THE RMSB TABLE.          */ 15600002
* /*         - ROUTINES USE THE 4TH LEVEL SRM SAVE AREA TO STORE     */ 15650040
* /*           THE INVOKER'S REGISTERS.                              */ 15700002
* /*         - SAVE AREA USAGE IS SERIALIZED BY THE SRM LOCK.        */ 15750040
* /*                                                                 */ 15800002
* /* *************************************************************** */ 15850002
*    IRAEPNMS = 'IRAEPL04' ;        /* RTNE USES LEVEL 4 REG SAVEAR  */ 15950002
*    IF EPN(1) = 'I02' THEN         /* INVOKE ASCBCHAP SERVICE       */ 16000002
*      GOTO EPNMPOK;                                                    16050002
*    IF EPN(1) = 'I03' THEN         /* INVOKE REAL FRAME STEAL       */ 16100002
*      GOTO EPNMPOK;                                                    16150002
*    IF EPN(1) = 'I04' THEN         /* INVOKE STORAGE GET/FREE       */ 16200002
*      GOTO EPNMPOK;                                                    16250002
*    IF EPN(1) = 'I05' THEN         /* INVOKE TIME INTERVL SET       */ 16300002
*      GOTO EPNMPOK;                                                    16350002
*    IF EPN(1) = 'I06' THEN         /* INVOKE QUIESCE FOR SWAPOUT    */ 16400002
*      GOTO EPNMPOK;                                                    16450002
*    IF EPN(1) = 'I07' THEN         /* INVOKE SCHEDULE OF SWAP-IN    */ 16500002
*      GOTO EPNMPOK;                                                    16550002
*    IF EPN(1) = 'I08' THEN         /* INVOKE SCHEDULE OF SRM SRB    */ 16600002
*      GOTO EPNMPOK;                                                    16650002
*    IF EPN(1) = 'I09' THEN         /* INVOKE RECORD TO OPERATOR     */ 16700002
*      GOTO EPNMPOK;                                                    16750002
*    IF EPN(1) = 'WR4' THEN         /* CALCULAT ACTIVITY MEASRMNT    */ 16760002
*      GOTO EPNMPOK;                                                    16770002
*    IF EPN(1) = 'WR6' THEN         /* RECALCULAT ACTIVITY RATE      */ 16780002
*      GOTO EPNMPOK;                                                    16790002
* /* *************************************************************** */ 16800002
* /*                                                                 */ 16850002
* /*   SUBROUTINES WHICH PERFORM INTERNAL SERVICES FOR OTHER SYSTEM  */ 16900002
* /*   RESOURCES MANAGER ROUTINES HOLDING THE SRM LOCK.  THEY ARE    */ 16950040
* /*   LINKED-TO DIRECTLY BY THE INVOKING ROUTINE.                   */ 17000002
* /*                                                                 */ 17050002
* /*         - ENTRY POINT ADDRESSES ARE IN THE RMSB TABLE.          */ 17100002
* /*         - ROUTINES USE THE 3RD LEVEL SRM SAVE AREA TO STORE     */ 17150040
* /*           THE INVOKER'S REGISTERS.                              */ 17200002
* /*         - SAVE AREA USAGE IS SERIALIZED BY THE SRM LOCK.        */ 17250040
* /*                                                                 */ 17300002
* /* *************************************************************** */ 17350002
*    IRAEPNMS = 'IRAEPL03' ;        /* RTNE USES LEVEL 3 REG SAVEAR  */ 17400002
*    IF EPN(1) = 'WMK' THEN         /* RESUME PREV USER TRANSACTN    */ 17450002
*      GOTO EPNMPOK;                                                    17500002
*    IF EPN(1) = 'WMO' THEN         /* STOP CURRNT USER TRANSACTN    */ 17550002
*      GOTO EPNMPOK;                                                    17600002
*    IF EPN(1) = 'WMQ' THEN         /* PROCESS QUIESCE CMPLT EVENT   */ 18050002
*      GOTO EPNMPOK;                                                    18100002
*    IF EPN(1) = 'WMY' THEN         /* PROCESS SYSTEM TIME ADJUST    */ 18250002
*      GOTO EPNMPOK;                                                    18300002
*    IF EPN(1) = 'AP0' THEN         /* COMPUTE USER DSPCH PRIORITY   */ 18750002
*      GOTO EPNMPOK;                                                    18800002
*    IF EPN(1) = 'CL0' THEN         /* ADJ CPU UTIL WHEN SWAP USER   */ 18850002
*      GOTO EPNMPOK;                                                    18900002
*    IF EPN(1) = 'IL0' THEN         /* COMPUTE USER I/O PROFILE      */ 18950002
*      GOTO EPNMPOK;                                                    19000002
* /* *************************************************************** */ 19050002
* /*                                                                 */ 19053002
* /*   SUBROUTINES WHICH PERFORM WORKLOAD MANAGER TRANSACTION        */ 19056002
* /*   RELATED ACTIONS FOR OTHER SYSTEM RESOURCES MNGR ROUTNS        */ 19059002
* /*   HOLDING THE SRM LOCK.  THEY ARE LINKED-TO DIRECTLY BY         */ 19062040
* /*   THE INVOKING ROUTINE.                                         */ 19065002
* /*                                                                 */ 19068002
* /*         - ENTRY POINT ADDRESSES ARE IN THE RMSB TABLE.          */ 19071002
* /*         - ROUTINES USE THE 1ST LEVEL SRM SAVE AREA TO STORE     */ 19074040
* /*           THE INVOKER'S REGISTERS.                              */ 19077002
* /*         - SAVE AREA USAGE IS SERIALIZED BY THE SRM LOCK.        */ 19080040
* /*                                                                 */ 19083002
* /* *************************************************************** */ 19086002
*    IRAEPNMS = 'IRAEPL01' ;        /* RTNE USES LEVEL 1 REG SAVEAR  */ 19089002
*    IF EPN(1) = 'WMN' THEN         /* START A NEW USER TRANSACTN    */ 19100002
*      GOTO EPNMPOK;                                                    19108002
*    IF EPN(1) = 'WMR' THEN         /* PROCESS RESTORE CMPLT EVENT   */ 19118002
*      GOTO EPNMPOK;                                                    19128002
* /* *************************************************************** */ 19150002
* /*                                                                 */ 19200002
* /*   SYSTEM RESOURCES MANAGER SYSTEM-LEVEL ALGORITHMIC PROCESSING  */ 19250002
* /*   ROUTINES.  THEY ARE EXECUTED AS THE RESULT OF BEING INDIVI-   */ 19300002
* /*   DUALLY REQUESTED AND/OR BEING SCHEDULED ON A PERIODIC BASIS,  */ 19350002
* /*   BUT ARE ALWAYS INVOKED BY A CONTROL ROUTINE AS OPPOSED TO     */ 19400002
* /*   DIRECTLY BY THE REQUESTOR.                                    */ 19450002
* /*                                                                 */ 19500002
* /*         - ENTRY POINT BLOCKS ARE IN THE EPAT TABLE.             */ 19550002
* /*         - ROUTINES USE THE 1ST LEVEL LOCKED SAVE AREA TO STORE  */ 19600002
* /*           THE INVOKING (CONTROL) ROUTINE REGISTERS.             */ 19650002
* /*         - SAVE AREA USAGE IS SERIALIZED BY THE CONTROL ROUTINE  */ 19700002
* /*           DOING THE INVOKING.                                   */ 19750002
* /*                                                                 */ 19800002
* /* *************************************************************** */ 19850002
*    IRAEPNML = 'RMSBCRL'  ;        /* RTNE TO RECEIVE ALGRTH REQST  */ 19900002
*    IRAEPNMS = 'IRAEPL01' ;        /* RTNE USES LEVEL 1 REG SAVEAR  */ 19950002
*    IF EPN(1) = 'MS2' THEN         /* MSO ANALYSIS ALGORITHM        */ 20100002
*      GOTO EPNMPOK;                                                    20150002
*    IF EPN(1) = 'MS6' THEN         /* MSO WAIT CHK ALGORITHM        */ 20160002
*      GOTO EPNMPOK;                                                    20170002
*    IF EPN(1) = 'EQ1' THEN         /* ENQ MONITORG ALGORITHM        */ 20200002
*      GOTO EPNMPOK;                                                    20250002
*    IF EPN(1) = 'IL1' THEN         /* IOL UTIL MON ALGORITHM        */ 20300002
*      GOTO EPNMPOK;                                                    20350002
*    IF EPN(1) = 'RM1' THEN         /* RES MONITORING RTNE   @Z40BPCH*/ 20400040
*      GOTO EPNMPOK;                                                    20450002
*    IF EPN(1) = 'RM2' THEN         /* RES MONITOR ADJ RTNE  @Z40BPCH*/ 20500040
*      GOTO EPNMPOK;                                                    20550002
*    IF EPN(1) = 'CL1' THEN         /* CPU ANALYSIS ALGORITHM        */ 20600040
*      GOTO EPNMPOK;                                                    20650002
*    IF EPN(1) = 'SQA' THEN         /* SQA MSG PRNT ALGORITHM        */ 20700002
*      GOTO EPNMPOK;                                                    20750002
*    IF EPN(1) = 'WM2' THEN         /* WLM ANALYSIS ALGORITHM        */ 20800002
*      GOTO EPNMPOK;                                                    20850002
*    IF EPN(1) = 'ASM' THEN         /* ASM SHRT MON ALGORITHM        */ 20900002
*      GOTO EPNMPOK;                                                    20950002
*    IF EPN(1) = 'CAN' THEN         /* CTL FUL ANAL ALGORITHM        */ 21000002
*      GOTO EPNMPOK;                                                    21050002
*    IF EPN(1) = 'CAP' THEN         /* CTL PRT ANAL ALGORITHM        */ 21200002
*      GOTO EPNMPOK;                                                    21250002
*    IF EPN(1) = 'AP1' THEN         /* APG ANALYSIS ALGORITHM        */ 21400002
*      GOTO EPNMPOK;                                                    21450002
*    IF EPN(1) = 'PR1' THEN         /* PRA ANALYSIS ALGORITHM        */ 21500002
*      GOTO EPNMPOK;                                                    21550002
*    IF EPN(1) = 'PR5' THEN         /* PRA FORC STL ALGORITHM        */ 21700002
*      GOTO EPNMPOK;                                                    21750002
* /* *************************************************************** */ 21800002
* /*                                                                 */ 21850002
* /*   SYSTEM RESOURCES MANAGER USER-LEVEL SERIALIZED PROCESSING     */ 21900002
* /*   ACTION ROUTINES.  THEY ARE EXECUTED AS THE RESULT OF AN       */ 21950002
* /*   INDIVIDUAL REQUEST, BUT ARE ALWAYS INVOKED VIA A CONTROL      */ 22000002
* /*   ROUTINE, AS OPPOSED TO DIRECTLY BY THE REQUESTOR.             */ 22050002
* /*                                                                 */ 22100002
* /*         - ENTRY POINT BLOCKS ARE IN THE EPDT TABLE.             */ 22150002
* /*         - ROUTINES USE THE 2ND LEVEL SRM SAVE AREA TO STORE     */ 22200040
* /*           THE INVOKING (CONTROL) ROUTINE REGISTERS.             */ 22250002
* /*         - SAVE AREA USAGE IS SERIALIZED BY THE CONTROL ROUTINE  */ 22300002
* /*           DOING THE INVOKING.                                   */ 22350002
* /*                                                                 */ 22400002
* /* *************************************************************** */ 22450002
*    IRAEPNML = 'RMSBCRN'  ;        /* RTNE TO RECEIVE ACTION REQST  */ 22500002
*    IRAEPNMS = 'IRAEPL02' ;        /* RTNE USES LEVEL 2 REG SAVEAR  */ 22550002
*    IF EPN(1) = 'DEL' THEN         /* OUCB DELETE ACTION RUTNE      */ 22600002
*      GOTO EPNMPOK;                                                    22650002
*    IF EPN(1) = 'UXB' THEN         /* OUXB DELETE ACTION RUTNE      */ 22700002
*      GOTO EPNMPOK;                                                    22750002
*    IF EPN(1) = 'IL4' THEN         /* IMCB DELETE ACTION RUTNE      */ 22800002
*      GOTO EPNMPOK;                                                    22850002
*    IF EPN(1) = 'IPS' THEN         /* IPS DELETE NOTIFY ACTION      */ 22900002
*      GOTO EPNMPOK;                                                    22950002
*    IF EPN(1) = 'HIT' THEN         /* USER READY PROCES ACTION      */ 23000002
*      GOTO EPNMPOK;                                                    23050002
*    IF EPN(1) = 'RPS' THEN         /* USER STATE CHANGE ACTION      */ 23100002
*      GOTO EPNMPOK;                                                    23150002
* /* *************************************************************** */ 23400002
* /*                                                                 */ 23450002
* /*   SYSTEM RESOURCES MANAGER TIME-DEPENDENT ACTION SUBROUTINES.   */ 23500002
* /*   THEY ARE EXECUTED AS A RESULT OF HAVING BEEN SPECIFIED FOR    */ 23530002
* /*   A PARTICULAR TIME, BUT ARE ALWAYS INVOKED BY A CONTROL RTNE   */ 23560002
* /*   AS OPPOSED TO DIRECTLY BY THE REQUESTOR.                      */ 23590002
* /*                                                                 */ 23650002
* /*         - ENTRY POINT BLOCKS ARE IN THE EPST TABLE.             */ 23700002
* /*         - ROUTINES USE THE 3RD LEVEL SRM SAVE AREA TO STORE     */ 23750040
* /*           THE INVOKING (CONTROL) ROUTINE REGISTERS.             */ 23800002
* /*         - SAVE AREA USAGE IS SERIALIZED BY THE CONTROL ROUTINE  */ 23850002
* /*           DOING THE INVOKING.                                   */ 23900002
* /*                                                                 */ 23950002
* /* *************************************************************** */ 24000002
*    IRAEPNML = 'RMSBCRY'  ;        /* RTNE TO RECEIVE ANALYZ REQST  */ 24050002
*    IRAEPNMS = 'IRAEPL03' ;        /* RTNE USES LEVEL 3 REG SAVEAR  */ 24100002
*    IF EPN(1) = 'CSO' THEN         /* PROCESS USER SWAPOUT DEMAND   */ 24150002
*      GOTO EPNMPOK;                                                    24200002
*    IF EPN(1) = 'CSI' THEN         /* PROCESS USER SWAP-IN DEMAND   */ 24250002
*      GOTO EPNMPOK;                                                    24300002
* /* *************************************************************** */ 24450002
* /*                                                                 */ 24460002
* /*   SYSTEM RESOURCES MANAGER ANALYSIS SUBROUTINES.  THEY ARE      */ 24470002
* /*   SELECTIVELY INVOKED BY THE CONTROL ALGORITHM AS PART OF       */ 24480002
* /*   PERIODIC ANALYSIS PROCESSING.                                 */ 24490002
* /*                                                                 */ 24500002
* /*         - ENTRY POINT BLOCKS ARE IN THE EPST TABLE.             */ 24510002
* /*         - ROUTINES USE THE 3RD LEVEL SRM SAVE AREA TO STORE     */ 24520040
* /*           THE INVOKING (CONTROL) ROUTINE REGISTERS.             */ 24530002
* /*         - SAVE AREA USAGE IS SERIALIZED BY DISABLEMENT, OR      */ 24540002
* /*           BY THE NON-PREEMPTABILITY OF AN SRB.                  */ 24550002
* /*                                                                 */ 24560002
* /* *************************************************************** */ 24570002
*    IRAEPNML = 'EPST'||EPN(1) ;    /* REQUESTED SUBROUTINE POINTER  */ 24610040
*    IF EPN(1) = 'IL3' THEN         /* USER I/O LOD EVAL ACTION      */ 24690002
*      GOTO EPNMPOK;                                                    24710002
*    IF EPN(1) = 'CL3' THEN         /* USER CPU LOD EVAL ACTION      */ 24730002
*      GOTO EPNMPOK;                                                    24750002
*    IF EPN(1) = 'WM3' THEN         /* USER WORKLOD EVAL ACTION      */ 24770002
*      GOTO EPNMPOK;                                                    24790002
* /* *************************************************************** */ 24850002
* /*                                                                 */ 24900002
* /*   SYSTEM RESOURCES MANAGER MAJOR CONTROL ROUTINES.  THEY ARE    */ 24950002
* /*   EXPLICITLY LINKED-TO BY SUPERVISOR COMPONENTS/MODULES.        */ 25000002
* /*                                                                 */ 25050002
* /*         - ENTRY POINT BLOCKS ARE IN THE RMEX TABLE.             */ 25100002
* /*         - ROUTINES DO NOT SAVE REGISTERS OF INVOKER, OR ELSE    */ 25150002
* /*           USE SAVE AREA PROVIDED BY INVOKER.                    */ 25200002
* /*                                                                 */ 25250002
* /* *************************************************************** */ 25300002
*    IRAEPNML = 'RMEX'||EPN(1) ;    /* REQUESTED CTL ROUTNE POINTER  */ 25350002
*    IRAEPNMS = '';                 /* RTNE USES UNDEFIN REG SAVEAR  */ 25400002
*    IF EPN(1) = 'EVT' THEN         /* PROCESS INPUT SYSEVENT        */ 25410002
*      GOTO EPNMPOK;                                                    25420002
*    IF EPN(1) = 'I01' THEN         /* EXIT FROM SRM PROCESSING      */ 25450002
*      GOTO EPNMPOK;                                                    25500002
*    IF EPN(1) = 'CTL' THEN         /* ROUTE CONTROL WITHIN SRM      */ 25650002
*      GOTO EPNMPOK;                                                    25700002
*    IF EPN(1) = 'CET' THEN         /* TIMEREXP SRM CNTRL ENTRY      */ 25750002
*      GOTO EPNMPOK;                                                    25800002
*    IF EPN(1) = 'CAS' THEN         /* EXIT FROM FULL ANALYSIS       */ 25850002
*      GOTO EPNMPOK;                                                    25900002
* /* *************************************************************** */ 26050002
* /*                                                                 */ 26100002
* /*   THE REQUESTED ENTRY POINT NAME HAS NOT BEEN FOUND.  PASS      */ 26150002
* /*   DUMMY CHARACTERISTICS BACK TO THE IRAEPNMP MACRO INVOKER.     */ 26200002
* /*                                                                 */ 26250002
* /* *************************************************************** */ 26300002
*    IRAEPNML = 'IRARMNOP' ;        /* DMMY INDICATES EPN NOT FOUND  */ 26350002
*    IRAEPNMS = '';                 /* DMMY DOES NOT USE REG SAVEAR  */ 26400002
*EPNMPOK:  ;                        /* IRAEPNMP NORMAL EXIT POINT    */ 26450002
*%   END;                                                               26500002
./  ADD  SSI=60790640,NAME=IRAEPST
*        %GOTO EPSTPLS1; /*                                             00050002
         MACRO                                                          00100002
         IRAEPST   &DSECT=YES                                           00150002
         GBLC  &IRAEPPV            PREV RMEP BLOCK ADDRESS NAME         00200002
         GBLB  &IRAEPCM            IRARMEP COMMENTARY PRINT CONTROL     00250002
&IRAEPPV SETC  '00000000'          INIT TO NO PREVIOUS CHAINED RMEP     00300002
&IRAEPCM SETB  1                   BYPASS IRARMEP HEADER COMMENTARY     00350002
.*                                                                   */ 00400002
*%EPSTPLS1:  ;                                                          00450002
* /*                                                                 */ 00500002
* /* MACCOMP Z-4 SC1CX/PKD16                                         */ 00550040
* /* MACSTAT Z-4 75007/Z40BPSS                                       */ 00580040
* /* *************************************************************** */ 00650002
* /*                                                                 */ 00700002
* /*   MACRO NAME - IRAEPST                                          */ 00750002
* /*                                                                 */ 00800002
* /*   DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER SCANNED           */ 00850002
* /*                      ACTION ENTRY POINT DESCRIPTOR TABLE.       */ 00900002
* /*                                                                 */ 00950002
* /*   COPYRIGHT - NONE                                              */ 01000002
* /*                                                                 */ 01050002
* /*   STATUS - OS/VS2 RELEASE 4, 07/30/75, LEVEL=1                  */ 01100040
* /*                                                                 */ 01150002
* /*   FUNCTION - THE EPST CONTAINS THE ENTRY POINT DESCRIPTORS OF   */ 01200002
* /*         ALL SYSTEM RESOURCES MANAGER ROUTINES TO WHICH CONTROL  */ 01250002
* /*         MAY BE ROUTED BY CONTROL ALGORITHM ANALYSIS PROCESSING. */ 01300002
* /*         REQUESTS FOR SUCH ROUTINES ARE GENERATED INTERNALLY BY  */ 01350002
* /*         THE CONTROL ALGORITHM.                                  */ 01400002
* /*                                                                 */ 01450002
* /*   METHOD OF ACCESS - THE EPST IS ADDRESSED AS BEING AT A KNOWN  */ 01500002
* /*         DISPLACEMENT FROM THE SYSTEM RESOURCES MANAGER CONTROL  */ 01520002
* /*         TABLE, I.E., USING THE RMCTPTR REGISTER.  THE IRACNSMP  */ 01540002
* /*         INCLUDE LIST SPECIFIES THE SYMBOLIC DISPLACMENT OF THE  */ 01560002
* /*         EPST FROM THE RMCT.  THE EPST TABLE IS SCANNED VIA THE  */ 01580002
* /*         RMEP CHAIN POINTER IN THE -RMCTEPST- FIELD.             */ 01600002
* /*                                                                 */ 01650002
* /* *************************************************************** */ 01700002
*        %GOTO EPSTPLS2; /*                                             01750002
         AGO   .EPSTAL1                                              */ 01800002
* /* *************************************************************** */ 01850002
* /*                                                                 */ 01900002
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */ 01950002
* /*                                                                 */ 02000002
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */ 02050002
* /*                                                                 */ 02100002
* /*         USING ON EPST GIVES ADDRESSABILITY TO ALL SYMBOLS.      */ 02150002
* /*                                                                 */ 02200002
* /*     PLS - %EPSTLEVL='USERLEVL' IF THE EPST MAPPING IS TO BE     */ 02250002
* /*           CONCATENATED WITH A PREVIOUS DECLARATION, WITH THE    */ 02300002
* /*           EPST BEING ASSIGNED THE INDICATED STRUCTURE LEVEL.    */ 02350002
* /*         - %EPST9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED.  */ 02400002
* /*                                                                 */ 02450002
* /*         TO ACCESS AS A STANSALONE STRUCTURE DCL EPSTPTR PTR.    */ 02500002
* /*                                                                 */ 02550002
* /*   CHANGE ACTIVITY =                                             */ 02600002
* /*                                                                 */ 02650002
* /*   A000000-999999                                          Y02133*/ 02700002
* /*                                                                 */ 02750002
* /* *************************************************************** */ 02800002
* /*                                                                    02850002
.EPSTAL1 ANOP                                                           02900002
         SPACE 1                                                        02950002
         AIF   ('&DSECT' EQ 'NO').EPSTAL2                               03000002
EPST     DSECT                                                          03050002
         AGO   .EPSTAL3                                                 03100002
.EPSTAL2 ANOP                                                           03150002
         DS    0D                                                       03200002
EPST     EQU   *                                                        03250002
.EPSTAL3 ANOP                                                           03300002
         SPACE 1                                                        03350002
         IRARMEP   DSECT=NO,EPN=WM3,NXT=000                             03360002
         IRARMEP   DSECT=NO,EPN=IL3,NXT=000                             03450002
         IRARMEP   DSECT=NO,EPN=CL3                                     03500002
IRAEPPA  EQU   &IRAEPPV -          BEGIN PART EVAL SCAN                 03550002
&IRAEPPV SETC  '00000000'          RESET CHAIN TO NO PREVIOUS RMEP      03570002
         IRARMEP   DSECT=NO,EPN=CSO                                     03600002
         IRARMEP   DSECT=NO,EPN=CSI                                     03650002
EPSTEND  DS    0D -                END OF EPST TABLE                    03750002
EPSTLEN  EQU   EPSTEND-EPST -      LENGTH OF EPST TABLE                 03800002
EPSTSCN  EQU   &IRAEPPV -          BEGIN EPST TABLE SCAN                03850002
         MEND                                                           03900002
*                                                                    */ 03950002
*%EPSTPLS2:  ;                                                          04000002
*        %IF EPST9999 ¬= ','        /* DOES STRUCTURE CONTINUE       */ 04050002
*            %THEN %EPST9999 = ';'; /* NO, END DECLARE STATEMENT     */ 04100002
*        %IF EPSTLEVL ¬= ''         /* IS STRUCTURE CONCATENATED     */ 04150002
*            %THEN %GOTO EPSTPLS3;  /* YES, OMIT DECLARE STATEMENT   */ 04200002
*   DCL                                                                 04250002
*     1 EPST BASED(EPSTPTR) BDY(DWORD),                                 04300002
*            %GOTO EPSTPLS4;        /* SKIP USER-GIVEN LEVEL         */ 04350002
*%EPSTPLS3:  EPSTDUM = EPSTLEVL||' EPST'; /* PICK UP GIVEN LEVEL     */ 04400002
*     EPSTDUM BDY(DWORD),                                               04450002
*%EPSTPLS4:  ;                                                          04500002
*       10 RMEPBWM3 CHAR(16) BDY(DWORD), /* USER WORKLOD EVAL RTNE   */ 04520002
*          12 EPSTWM3 PTR(31),           /* ROUTINE ADDRESS  @Z40BPCH*/ 04540040
*       10 RMEPBIL3 CHAR(16) BDY(DWORD), /* USER I/O LOD EVAL RTNE   */ 04600002
*          12 EPSTIL3 PTR(31),           /* ROUTINE ADDRESS  @Z40BPCH*/ 04620040
*       10 RMEPBCL3 CHAR(16) BDY(DWORD), /* USER CPU LOD EVAL RTNE   */ 04650002
*          12 EPSTCL3 PTR(31),           /* ROUTINE ADDRESS  @Z40BPCH*/ 04700040
*       10 RMEPBCSO CHAR(16) BDY(DWORD), /* USER SWAPOUT REQST RTN   */ 04750002
*          12 EPSTCSO PTR(31),           /* ROUTINE ADDRESS  @Z40BPCH*/ 04770040
*       10 RMEPBCSI CHAR(16) BDY(DWORD), /* USER SWAP-IN REQST RTN   */ 04800002
*          12 EPSTCSI PTR(31),           /* ROUTINE ADDRESS  @Z40BPCH*/ 04830040
*       10 EPSTEND  CHAR(0) BDY(DWORD) /* END OF EPST TABLE          */ 04900002
*   EPST9999                                                            04950002
*   %EPSTLEN = 'LENGTH(EPST)';      /* SYMBOLIC FOR LENGTH OF EPST   */ 05000002
./  ADD  SSI=60960488,NAME=IRAICT
*        %GOTO ICTPLS1;            /*                                   00050002
         MACRO                                                          00100002
         IRAICT &DSECT=YES                                              00150002
*                                                                    */ 00200002
*%ICTPLS1 : ;                                                           00250002
*/*                                                                  */ 00260002
*/* MACCOMP Z-4 SC1CX/PKD16                                          */ 00270040
*/* MACSTAT Z-4 75007/Z40BPSS                                        */ 00280040
*/********************************************************************/ 00300002
*/*                                                                  */ 00350002
*/*      MACRO NAME - IRAICT                                         */ 00400002
*/*                                                                  */ 00420002
*/*      DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER I/O             */ 00440002
*/*                         MANAGEMENT CONTROL TABLE                 */ 00460002
*/*                                                                  */ 00480002
*/*      STATUS - OS/VS2 RELEASE 4, 09/17/75, LEVEL=1                */ 00500040
*/*                                                                  */ 00550002
*/*      METHOD OF ACCESS                                            */ 00600002
*/*        BAL - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.     */ 00650002
*/*              USING ON ICT GIVES ADDRESSIBILITY FOR ALL SYMBOLS.  */ 00700002
*/*        PLS - TO ACCESS AS STAND ALONE STRUCTURE DCL ICTPTR PTR.  */ 00750002
*/*              TO CONCATENATE WITH PREVIOUSLY DEFINED STRUCTURE    */ 00800002
*/*                SET %ICTLEVEL TO DESIRED STRUCTURE LEVEL.         */ 00850002
*/*              TO PREVENT STRUCTURE FROM BEING CLOSED,             */ 00900002
*/*                SET %ICT9999=','.                                 */ 00950002
*/*                                                                  */ 01000002
*/********************************************************************/ 01050002
*/*                                                                  */ 01100002
*        %GOTO ICTPLS2;            /*                                   01150002
         AIF   ('&DSECT' EQ 'YES').ICT001                               01200002
ICT      DS    0D -                I/O MANAGEMENT CONTROL TABLE         01250002
         AGO   .ICT002                                                  01300002
.ICT001  ANOP                                                           01350002
ICT      DSECT , -                 I/O MANAGEMENT CONTROL TABLE         01400002
.ICT002  ANOP                                                           01450002
ICTICT   DC    CL4'ICT' -          ACRONYM IN EBCDIC -ICT-              01500002
*                                                                       01550002
*        I/O CONTROL CONSTANTS                                          01600002
*                                                                       01650002
ICCMRSV1 DC    F'0' -               RESERVED                   @ZM43085 01700040
ICCMXICT DC    F'60000' -          MAX TIME HEAVY I/O USER REMAIN       01800002
*                                  IN MAIN STORAGE WITHOUT BEING        01850002
*                                  MONITORED FOR I/O USAGE              01900002
ICCMNUIN DC    F'10000' -          MIN INT FOR USER I/O MONITORING      01950002
ICCMNSWP DC    F'30000' -          MINIMUM SWAP OUT TIME FOR I/O        01960002
*                                  IMBALANCE CORRECTION                 01980002
ICCLCLST DC    A(0)                POINTER TO LAST LCH TABLE ENTRY      02000002
ICCLCHN  DC    H'0' -              LOGICAL CHANNEL COUNT                02050002
ICCMNIOR DC    H'5' -              MIN I/O RATE FOR USER I/O MONITORING 02150002
ICCRVSCF DC    H'1' -              IOL REC VALUE SCALING FACTOR         02200002
ICCMAXRV DC    H'128' -            MAXIMUM IOL RECOMMENDATION VALUE     02250002
ICCMINRV DC    H'-128' -           MINIMUM IOL RECOMMENDATION VALUE     02300002
ICCDASF1 DC    H'10' -             AVERAGING FACTOR FOR LCH UTILIZATION 02350002
*                                  COMPUTATION                          02400002
ICCDASF2 DC    H'11' -             ICCDASF1+1                           02450002
* LCH UTILIZATION IMBALANCE THRESHOLDS (EXPRESSED AS PERCENTAGES)       02500002
ICCHIUTH DC    H'0' -              HIGH IMBALANCE THRESHOLD             02550002
ICCLOUTH DC    H'0' -              LOW IMBALANCE THRESHOLD              02600002
ICCDAUTH DC    H'0' -              THRESHOLD FOR DEVICE ALLOCATION *256 02650002
* LCH UTILIZATION IMBALANCE THRESHOLD INITIALIZATION VALUES FOR UNI     02700002
* OR MULTIPROCESSOR CASES                                               02750002
ICCINHIT DS    0HL4 -              HIGH THRESHOLD INITIALIZATION VALUES 02800002
ICCINHI1 DC    H'70' -               UNIPROCESSOR CASE                  02850002
ICCINHI2 DC    H'80' -               MULTIPROCESSOR CASE                02900002
ICCINLOT DS    0HL4 -              LOW THRESHOLD INITIAIZATION VALUES   02950002
ICCINLO1 DC    H'30' -               UNIPROCESSOR CASE                  03000002
ICCINLO2 DC    H'40' -               MULTIPROCESSOR CASE                03050002
ICCINDAT DS    0HL4 -              DEV ALLOCATION INTIIAL VALUES        03100002
ICCINDA1 DC    AL2(70*256) -         UNIPROCESSOR CASE                  03150002
ICCINDA2 DC    AL2(80*256) -         MULTIPROCESSOR CASE                03200002
ICCSIGUP DC    H'5' -              SIGNIFICANT USER LCH USAGE           03204002
*                                  PERCENTAGE                           03208002
ICCSRSV2 DC    H'0' -              RESERVED                 @ZM43085    03212040
ICCEDSUT DC    AL2(05*256) -       EST DATASET UTILIZ IMPACT   @Z30WIAW 03220003
ICCRSV01 DC    HL2'0' -            RESERVED                    @Z40BPCH 03230040
ICCEND   DS    0F -                END OF ICT CONSTANTS                 03250002
*                                                                       03300002
*        I/O CONTROL VARIABLES                                          03350002
*                                                                       03400002
ICVLUTBT DC    F'0' -              LCH UTILIZATION COMPUTATION BASE     03450002
*                                  TIME                                 03500002
ICVLCBPT DC    BL4'0' -            LCH IMBALANCE BIT PATTERN            03550002
ICVOLCBT DC    BL4'0' -            OVERUTILIZED LCH BIT PATTERN         03560002
ICVULCBT DC    BL4'0' -            UNDERUTILIZED LCH BIT PATTERN        03570002
ICVIRSV3 DC   F'0' -               RESERVED                  @ZM43085   03580040
*                                                                       03750002
*        I/O CONTROL FLAGS                                              03800002
*                                                                       03850002
ICTFLAGS DC    B'0' -              I/O CONTROL FLAGS                    03900002
ICTDRSV4 EQU   BIT0 -               RESERVED                  @ZM43085  03950040
ICTIOL   EQU   BIT1                 I/O LOAD BALANCING ACTIVE FLAG      03960002
ICTIOOT  EQU   BIT3                SOME LOGICAL CHANNELS OUT OF BALANCE 03963040
*                                                              @Z40BPCH 03966040
ICTRSVB1 DC    B'0' -               RESERVED                            03970002
ICTRSVB2 DC    B'0' -               RESERVED                   @Z40BPCH 03980040
ICTRSVB3 DC    B'0' -               RESERVED                   @Z40BPCH 03990040
ICTEND   DS    0D -                END OF ICT                           04000002
ICTLEN   EQU   ICTEND-ICT -        LENGTH OF ICT                        04050002
         MEND  , -                                                   */ 04100002
*%ICTPLS2 : ;                                                           04150002
*    %IF ICT9999¬=','              /* IF THIS IS LAST BLOCK          */ 04200002
*      %THEN ICT9999=';';          /* THEN CLOSE DECLARE STATEMENT   */ 04250002
*    %IF ICTLEVEL¬=''              /* IF MINOR LEVEL IS SPECIFIED,   */ 04300002
*      %THEN %GOTO ICTPLS3;        /* SKIP MAJOR DECLARE             */ 04350002
*DECLARE                           /*                                */ 04400002
*  1 ICT BASED(ICTPTR)             /*     I/O CONTROL TABLE          */ 04450002
*    %GOTO ICTPLS4;                /* MAJOR STRUCTURE                */ 04500002
*%ICTPLS3: ICTDUM=ICTLEVEL||' ICT'; /* CONCATENATE AS MINOR STRUCTURE*/ 04550002
*  ICTDUM                          /*     I/O CONTROL TABLE          */ 04600002
*%ICTPLS4:;                                                             04650002
*          BDY(DWORD),                                                  04700002
*      5 ICTICT CHAR(4),           /* ACRONYM IN EBCDIC -ICT-        */ 04750002
*/*                                                                  */ 04800002
*/*      I/O CONTROL CONSTANTS                                       */ 04850002
*/*                                                                  */ 04900002
*      5 ICCMRSV1 FIXED(31),       /* RESERVED              @ZM43085*/  04950040
*      5 ICCMXICT FIXED(31),       /* MAX TIME HEAVY I/O USER CAN       05100002
*                                     REMAIN IN MAIN STORAGE WITHOUT    05150002
*                                     BEING MONITORED FOR I/O USAGE  */ 05200002
*      5 ICCMNUIN FIXED(31),       /* MIN INT FOR USER I/O MONITORING*/ 05250002
*      5 ICCMNSWP FIXED(31),       /* MINIMUM SWAP OUT TIME FOR I/O     05270002
*                                    IMBALANCE CORRECTION            */ 05280002
*      5 ICCLCLST PTR(31),         /* POINTER TO LAST RLCT TABLE        05300002
*                                     ENTRY                          */ 05350002
*      5 ICCLCHN FIXED(15),        /* LOGICAL CHANNEL COUNT          */ 05400002
*      5 ICCMNIOR FIXED(15),       /* MIN I/O RATE FOR USER I/O         05500002
*                                     MONITORING                     */ 05550002
*      5 ICCRVSCF FIXED(15),       /* IOL REC VALUE SCALING FACTOR   */ 05600002
*      5 ICCMAXRV FIXED(15),       /* MAXIMUM IOL RECOMMENDATION VAL */ 05650002
*      5 ICCMINRV FIXED(15),       /* MINIMUM IOL RECOMMENDATION VAL */ 05700002
*      5 ICCDASF1 FIXED(15),       /* AVERAGING FACTOR FOR LCH          05750002
*                                     UTILIZATION COMPUTATION        */ 05800002
*      5 ICCDASF2 FIXED(15),       /* ICCDASF1+1                     */ 05850002
*/* LCH UTILIZATION IMBALANCE THRESHOLDS                             */ 05900002
*      5 ICCHIUTH FIXED(15),       /* HIGH IMBALANCE THRESHOLD       */ 05950002
*      5 ICCLOUTH FIXED(15),       /* LOW IMBLAANCE THRESHOLD        */ 06000002
*      5 ICCDAUTH FIXED(15),       /* THRESHOLD FOR DEVICE ALLOCATION   06050002
*                                     SYSEVENT * 256                 */ 06070002
*/* LCH UTILIZATION THRESHOLD INITIALIZATION VALUES FOR UNI OR MULTI    06100002
*    PROCESSOR CASES                                                 */ 06150002
*      5 ICCINHIT (2) FIXED(15),   /* HIGH THRESHOLD INIT VALUES     */ 06200002
*      5 ICCINLOT (2) FIXED(15),   /* LOW THRESHOLD INIT VALUE S     */ 06250002
*      5 ICCINDAT (2) FIXED(15),   /* DEV ALLOC THRESHOLD INIT VALUES*/ 06300002
*      5 ICCSIGUP FIXED(15),       /* SIGNIFICANT USER LCH USAGE        06304002
*                                     PERCENTAGE                     */ 06308002
*      5 ICCSRSV2 FIXED(15),       /* RESERVED               @ZM43085*/ 06312040
*      5 ICCEDSUT FIXED(15),        /* EST DD UTILIZ IMPACT  @Z30WIAW*/ 06320003
*      5 ICCRSV01 CHAR(2) BDY(HWORD), /* RESERVED            @Z40BPCH*/ 06330040
*      5 ICCEND CHAR(0) BDY(WORD), /* END OF ICT CONSTANTS           */ 06350002
*/*                                                                  */ 06400002
*/*      I/O CONTROL VARIABLES                                       */ 06450002
*/*                                                                  */ 06500002
*      5 ICVLUTBT FIXED(31),       /* LCH UTILIZATION COMPUTATION       06550002
*                                     BASE TIME                      */ 06600002
*      5 ICVLCBPT BIT(32),         /* LCH IMBALANCE BIT PATTERN      */ 06650002
*      5 ICVOLCBT BIT(32),         /* OVERUTILIZED LCH BIT PATTERN   */ 06660002
*      5 ICVULCBT BIT(32),         /* UNDERUTILIZED LCH BIT PATTERN  */ 06670002
*     5 ICVIRSV3 FIXED(31),        /* RESERVED               @ZM43085*/ 06700040
*/*                                                                  */ 06850002
*/*      I/O CONTROL FLAGS                                           */ 06900002
*/*                                                                  */ 06950002
*      5 ICTFLAGS BIT(8),          /* I/O CONTROL FLAGS              */ 07000002
*        10 ICTDRSV4 BIT(1),       /* RESERVED               @ZM43085*/ 07050040
*        10 ICTIOL BIT(1),          /* I/O LOAD BALANCING ACTIVE FLAG*/ 07150002
*        10 ICTIOOT BIT(1),         /* SOME LOGICAL CHANNELS OUT OF     07153040
*                                      BALANCE               @Z40BPCH*/ 07155040
*        10 ICT003 BIT(5),          /* RESERVED              @Z40BPCH*/ 07160040
*      5 ICTRSVB1 BIT(8),           /* RESERVED                      */ 07170002
*      5 ICTRSVB2 BIT(8),           /* RESERVED              @Z40BPCH*/ 07180040
*      5 ICTRSVB3 BIT(8),           /* RESERVED              @Z40BPCH*/ 07190040
*      5 ICTEND CHAR(0)            /* END OF ICT                     */ 07200002
*          BDY(DWORD) ICT9999                                           07250002
*%ICTLEN='LENGTH(ICT)';            /* OBTAIN LENGTH OF ICT           */ 07300002
*      @EJECT;                                                          07350002
./  ADD  SSI=61040552,NAME=IRAMCT
*        %GOTO  MCTPLS1;                                                00050040
         MACRO                                                          00100002
         IRAMCT &DSECT=YES                                              00150002
*/*                                                                  */ 00200040
*%MCTPLS1 : ;                                                           00250002
*/*                                                                  */ 00260040
*/*  MACCOMP Z-4 SC1CX/PKD16                                         */ 00270040
*/*  MACSTAT Z-4 76007/Z40BPSS                                       */ 00280040
*/********************************************************************/ 00300002
*/*                                                                  */ 00350002
*/*      MACRO NAME - IRAMCT                                         */ 00400002
*/*                                                                  */ 00420002
*/*      DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER STORAGE         */ 00440002
*/*                         MANAGEMENT CONTROL TABLE                 */ 00460002
*/*                                                                  */ 00480002
*/*      STATUS - OS/VS2 RELEASE 4, 09/19/75, LEVEL=1                */ 00520040
*/*                                                                  */ 00550002
*/*      METHOD OF ACCESS                                            */ 00600002
*/*        BAL - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.     */ 00650002
*/*              USING ON MCT GIVES ADDRESSIBILITY FOR ALL SYMBOLS.  */ 00700002
*/*        PLS - TO ACCESS AS STAND ALONE STRUCTURE DCL MCTPTR PTR.  */ 00750002
*/*              TO CONCATENATE WITH PREVIOUSLY DEFINED STRUCTURE    */ 00800002
*/*                SET %MCTLEVEL TO DESIRED STRUCTURE LEVEL.         */ 00850002
*/*              TO PREVENT STRUCTURE FROM BEING CLOSED,             */ 00900002
*/*                SET %MCT9999=','.                                 */ 00950002
*/*                                                                  */ 01000002
*/********************************************************************/ 01050002
*/*                                                                  */ 01100002
*        %GOTO  MCTPLS2;          /*                                    01150002
         AIF   ('&DSECT' EQ 'YES').MCT001                               01200002
MCT      DS    0D -                STORAGE CONTROL TABLE                01250002
         AGO   .MCT002                                                  01300002
.MCT001  ANOP                                                           01350002
MCT      DSECT , -                 STORAGE CONTROL TABLE                01400002
.MCT002  ANOP                                                           01450002
MCTMCT   DC    CL4'MCT' -         ACRONYM IN EDCDIC -MCT-               01500002
*                                                                       01550002
*        STORAGE CONTROL CONSTANTS                                      01600002
*                                                                       01650002
*        POINTERS TO SHORTAGE MESSAGES                                  01700002
MCCMS100 DC    V(IRARM100) -      SQA SHORTAGE MESSAGE ADDRESS          01750002
MCCMS101 DC    V(IRARM101) -      CRITICAL SQA SHORTAGE MESSAGE ADDRESS 01800002
MCCMS102 DC    V(IRARM102) -      SQA SHORTAGE RELIEVED MESSAGE ADDRESS 01850002
MCCMS200 DC    V(IRARM200) -      AUX SHORTAGE MESSAGE ADDRESS          01900002
MCCMS201 DC    V(IRARM201) -      CRITICAL AUX SHORTAGE MESSAGE ADDRESS 01950002
MCCMS202 DC    V(IRARM202) -      AUX SHORTAGE RELIEVED MESSAGE ADDRESS 02000002
MCCMS203 DC    V(IRARM203) -      AUX SHORTAGE USER MSG ADDR   @ZM43072 02005040
MCCMS400 DC    V(IRARM400) -      FIX PAGE SHORTAGE MSG ADDR   @Z40BPCH 02010040
MCCMS401 DC    V(IRARM401) -      CRITICAL FIX PAGE SHORTAGE MSG ADDR   02015040
*                                                              @Z40BPCH 02020040
MCCMS402 DC    V(IRARM402) -      FIX PAGE SHORTAGE RELIEVED MSG ADDR   02030040
*                                                              @Z40BPCH 02030340
MCCMS403 DC    V(IRARM403) -      FIX PAGE USER MESSAGE ADDR   @ZM43072 02030640
*                                                                       02031040
*        STORAGE CONTROL CONSTANTS                             @Z40BPCH 02032040
*                                                                       02033040
MCCPLUS  DC    H'10' -             AVAILABLE FRAME QUEUE DELTA FOR      02034040
*                                  STEALING                    @Z40BPCH 02035040
MCCRSVH1 DC    H'0' -              RESERVED                    @Z40BPCH 02036040
*                                                                       02037040
*        AUX STORAGE MONITORING CONSTANTS                               02040040
*                                                                       02070040
MCCASMT1 DC    H'70' -             FIRST AUX SHORTAGE THRESHOLD         03300002
MCCASMT2 DC    H'85' -             SECOND AUX SHORTAGE THRESHOLD        03350002
MCCEND   DS    0F -                END OF MCT CONSTANTS                 03450002
*                                                                       03500002
*        STORAGE CONTROL VARIABLES                                      03550002
*                                                                       03600002
MCVSTCRI DC    H'0' -              HIGHEST SYSTEM UIC          @Z40BPCH 03620040
MCVFRCNT DC    H'0' -              NUMBER OF PAGES NEEDED TO BE STOLEN  04660002
*                                  BY THE FORCE STEAL ROUTINE           04662040
MCVAVQC  DC    F'0' -              COUNT OF AVQLOWS            @Z40BPCH 04665040
*                                                                       04700002
*        MEMORY CONTROL FLAGS                                           04750002
*                                                                       04800002
MCTSFLGS DC    B'0' -              FLAGS MODIFIED UNDER SALLOC LOCK     04850002
MCTSQA1  EQU   BIT0 -              SQA FIRST LEVEL SHORTAGE             04900002
MCTSQA2  EQU   BIT1 -              SQA SECOND LEVEL SHORTAGE            04950002
MCTAVQ1  EQU   BIT2 -              AVQ BELOW LIMIT                      05000002
MCTFAVQ  EQU   BIT3 -              FIXED FRAMES ABOVE LIMIT    @Z40BPCH 05020040
MCTOFLGS DC    B'0' -              FLAGS MODIFIED UNDER SRM LOCK        05050040
MCTASM1  EQU   BIT0 -              ASM FIRST LEVEL SHORTAGE             05100002
MCTASM2  EQU   BIT1 -              ASM SECOND LEVEL SHORTAGE            05150002
MCTAMS2  EQU   BIT3 -              ASM SECOND LEVEL MESSAGE             05250002
MCTSMS1  EQU   BIT4 -              SQA FIRST LEVEL MESSAGE              05300002
MCTSMS2  EQU   BIT5 -              SQA SECOND LEVEL MESSAGE             05350002
MCTFX1   EQU   BIT6 -              FIX PG 1ST LEVEL MSG        @Z40BPCH 05360040
MCTFX2   EQU   BIT7 -              FIX PG 2ND LEVEL MSG        @Z40BPCH 05370040
MCTXRSVD DC    B'0' -              RESERVED                  @ZM43085   05400040
* BITS 1-7 UNAVAILABLE BECAUSE OF SERIALIZATION PROBLEMS                05500002
MCTRSVB1 DC    B'0' -               RESERVED                   @YM05630 05510002
*                                                                       05510940
*        TIME INTERVAL VALUES FOR PR1 INVOCATION               @ZM43064 05511840
*                                                                       05512740
MCCUICBD DC    F'00000008' -        UIC LIMIT BEFORE ADJUSTING @ZM43064 05538840
MCCUICIN DC    F'00001000' -        PR1 INTERVAL INCREMENT     @ZM43064 05539040
MCCPR1IN DC    F'0' -               INITIAL RMEPINT FOR PR1    @ZM43064 05539240
MCCINTMX DC    F'00002000' -        MAX PR1 INTERVAL           @ZM43097 05540040
MCVRSVF1 DC    F'0' -               RESERVED                   @Z30WIPH 05543003
MCVRSVF2 DC    F'0' -               RESERVED                   @Z30WIPH 05543203
MCVRSVF3 DC    F'0' -               RESERVED                   @Z30WIPH 05543403
MCTEND   DS    0F -                END OF MCT                           05550040
MCTLEN   EQU   MCTEND-MCT -        LENGTH OF MCT                        05600002
         MEND                                                           05650002
*        */                                                             05700002
*%MCTPLS2 : ;                                                           05750002
*    %IF MCT9999¬=','              /* IF THIS IS LAST BLOCK          */ 05800002
*      %THEN %MCT9999=';';         /* THEN CLOSE DECLARE STATEMENT   */ 05850002
*    %IF MCTLEVEL¬=''              /* IF MINOR LEVEL IS SPECIFIED,   */ 05900002
*      %THEN %GOTO MCTPLS3;        /* SKIP MAJOR DECLARE             */ 05950002
*DECLARE                           /*                                */ 06000002
*  1 MCT BASED(MCTPTR)             /* STORAGE CONTROL TABLE          */ 06050002
*    %GOTO MCTPLS4;                /* MAJOR STRUCTURE                */ 06100002
*%MCTPLS3: MCTDUM=MCTLEVEL||' MCT'; /* CONCATENATE AS MINOR STRUCTURE*/ 06150002
*  MCTDUM                          /* STORAGE CONTROL TABLE          */ 06200002
*%MCTPLS4:;                                                             06250002
*        BDY(DWORD),                                                    06300002
*      5 MCTMCT CHAR(4),           /* ACRONYM IN EBCDIC -MCT-        */ 06350002
*/*                                                                  */ 06400002
*/*      STORAGE CONTROL CONSTANTS                                   */ 06450002
*/*                                                                  */ 06500002
*/* POINTERS TO SHORTAGE MESSAGES                                    */ 06550002
*      5 MCCMS100 PTR(31),         /* SQA SHORTAGE MESSAGE ADDRESS   */ 06600002
*      5 MCCMS101 PTR(31),         /* CRITICAL SQA SHORTAGE MSG ADDR */ 06650002
*      5 MCCMS102 PTR(31),         /* SQA SHORTAGE RELIEVED MSG ADDR */ 06700002
*      5 MCCMS200 PTR(31),         /* AUX SHORTAGE MESSAGE ADDRESS   */ 06750002
*      5 MCCMS201 PTR(31),         /* CRITICAL AUX SHORTAGE MSG ADDR */ 06800002
*      5 MCCMS202 PTR(31),         /* AUX SHORTAGE RELIEVED MSG ADDR */ 06850002
*      5 MCCMS203 PTR(31),         /* AUX SHORTAGE USER MESSAGE ADDRESS 06856040
*                                                            @ZM43072*/ 06862040
*      5 MCCMS400 PTR(31),         /* FIX PAGE SHORTAGE MSG ADDR        06870040
*                                                           @Z40BPCH */ 06876040
*      5 MCCMS401 PTR(31),         /* CRITICAL FIX PAGE SHORTAGE MSG    06890040
*                                     ADDR                  @Z40BPCH */ 06896040
*      5 MCCMS402 PTR(31),         /* FIX PAGE SHORTAGE RELIEVED        06910040
*                                     MSG ADDR              @Z40PBCH */ 06920040
*      5 MCCMS403 PTR(31),         /* FIX PAGE USER MESSAGE ADDRESS     06926040
*                                                            @ZM43072*/ 06932040
*/*                                                                  */ 06940040
*/* STORAGE CONTROL CONSTANTS                                @Z40BPCH*/ 06970040
*/*                                                                  */ 07000040
*      5 MCCPLUS FIXED(15),        /* AVAILABLE FRAME QUEUE DELTA FOR   07030040
*                                     STEALING               @Z40BPCH*/ 07060040
*      5 MCCRSVH1 FIXED(15),       /* RESERVED               @Z40BPCH*/ 07090040
*/*                                                                  */ 07120040
*/* AUX STORAGE MONITORING CONSTANTS                                 */ 08100002
*/*                                                                  */ 08120040
*      5 MCCASMT1 FIXED(15),       /* FIRST AUX SHORTAGE THRESHOLD   */ 08150002
*      5 MCCASMT2 FIXED(15),       /* SECOND AUX SHORTAGE THRESHOLD  */ 08200002
*      5 MCCEND CHAR(0) BDY(WORD), /* END OF MCT CONSTANTS           */ 08300002
*/*                                                                  */ 08350002
*/*      STORAGE CONTROL VARIABLES                                   */ 08400002
*/*                                                                  */ 08450002
*      5 MCVSTCRI FIXED(15),       /* HIGHEST SYSTEM UIC     @Z40BPCH*/ 08470040
*      5 MCVFRCNT FIXED(15),       /* NUMBER OF PAGES NEEDED TO BE      09560002
*                                     STOLEN BY THE FORCE STEAL RTN  */ 09570002
*      5 MCVAVQC FIXED(31),        /* COUNT OF AVQLOWS       @Z40BPCH*/ 09580040
*/*                                                                  */ 09600002
*/*      MEMORY CONTROL FLAGS                                        */ 09650002
*/*                                                                  */ 09700002
*      5 MCTSFLGS BIT(8),          /* FLAGS MODIFIED UNDER SALLOC LCK*/ 09750002
*        10 MCTSQA1 BIT(1),        /* SQA FIRST LEVEL SHORTAGE       */ 09800002
*        10 MCTSQA2 BIT(1),        /* SQA SECOND LEVEL SHORTAGE      */ 09850002
*        10 MCTAVQ1 BIT(1),        /* AVQ BELOW LIMIT                */ 09900002
*        10 MCTFAVQ  BIT(1),       /* FIXED FRAMES ABOVE LIM @Z40BPCH*/ 09920040
*        10 MCTSF04 BIT(4),        /* RESERVED               @Z40BPCH*/ 09950040
*      5 MCTOFLGS BIT(8),          /* FLAGS MODIFIED UNDER SRM LOCK  */ 10000040
*        10 MCTASM1 BIT(1),        /* ASM FIRST LEVEL SHORTAGE       */ 10050002
*        10 MCTASM2 BIT(1),        /* ASM SECOND LEVEL SHORTAGE      */ 10100002
*        10 *       BIT(1),        /* RESERVED               @Z40BPSS*/ 10150040
*        10 MCTAMS2 BIT(1),        /* ASM SECOND LEVEL MESSAGE       */ 10200002
*        10 MCTSMS1 BIT(1),        /* SQA FIRST LEVEL MESSAGE        */ 10250002
*        10 MCTSMS2 BIT(1),        /* SQA SECOND LEVEL MESSAGE       */ 10300002
*        10 MCTFX1  BIT(1),        /* FIX PG 1ST LEVEL MSG   @Z40BPCH*/ 10350040
*        10 MCTFX2  BIT(1),        /* FIX PG 2ND LEVEL MSG   @Z40BPCH*/ 10360040
*      5 MCTXRSVD BIT(8),          /* RESERVED               @ZM43085*/ 10400040
*      5 MCTRSVB1 BIT(8),           /* RESERVED              @YM05630*/ 10510002
*/*                                                                  */ 10510740
*/*    TIME INTERVAL VALUES FOR PR1 INVOCATION               @ZM43064*/ 10511440
*/*                                                                  */ 10512140
*        5 MCCUICBD FIXED(31),      /* UIC LIMIT BEFORE ADJUSTING       10537540
*                                                            @ZM43064*/ 10537640
*        5 MCCUICIN FIXED(31),     /* PR1 INTERVAL INCREMENT @ZM43064*/ 10537740
*        5 MCCPR1IN FIXED(31),      /* INITIAL RMEPINT FOR PR1          10538240
*                                                            @ZM43064*/ 10538340
*        5 MCCINTMX FIXED(31),      /* MAX PR1 INTERVAL      @ZM43097*/ 10541040
*        5 MCVRSVF1 FIXED(31),      /* RESERVED              @Z30WIPH*/ 10542003
*        5 MCVRSVF2 FIXED(31),      /* RESERVED              @Z30WIPH*/ 10542303
*        5 MCVRSVF3 FIXED(31),      /* RESERVED              @Z30WIPH*/ 10542603
*      5 MCTEND CHAR(0)            /* END OF MCT                     */ 10550002
*          BDY(DWORD) MCT9999                                           10600040
*%MCTLEN='LENGTH(MCT)';            /* OBTAIN LENGTH OF MCT           */ 10650002
*@EJECT;                                                                10700002
./  ADD  SSI=61180599,NAME=IRARCT
*        %GOTO  RCTPLS1;           /*                                   00005040
         MACRO                                                          00010040
         IRARCT &DSECT=YES                                              00020040
*                                                                    */ 00030040
*%RCTPLS1 : ;                                                           00040040
*/*                                                                  */ 00050040
*/*  MACCOMP Z-4 SC1CX/PKD16                                         */ 00058040
*/*  MACSTAT Z-4 75007/Z40BPSS                                       */ 00062040
*/********************************************************************/ 00066040
*/*                                                                  */ 00082040
*/*      MACRO NAME - IRARCT                                         */ 00100040
*/*                                                                  */ 00108040
*/*      DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER RESOURCE        */ 00116040
*/*                         MANAGEMENT CONTROL TABLE                 */ 00124040
*/*                                                                  */ 00132040
*/*      STATUS - OS/VS2 RELEASE 4, 10/29/75, LEVEL=1                */ 00150040
*/*                                                                  */ 00158040
*/*      METHOD OF ACCESS                                            */ 00166040
*/*        BAL - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.     */ 00174040
*/*              USING ON RCT GIVES ADDRESSIBILITY FOR ALL SYMBOLS.  */ 00182040
*/*        PLS - TO ACCESS AS STAND ALONE STRUCTURE DCL RCTPTR PTR.  */ 00200040
*/*              TO CONCATENATE WITH PREVIOUSLY DEFINED STRUCTURE    */ 00208040
*/*                SET %RCTLEVEL TO DESIRED STRUCTURE LEVEL.         */ 00216040
*/*              TO PREVENT STRUCTURE FROM BEING CLOSED,             */ 00224040
*/*                SET %RCT9999=','.                                 */ 00232040
*/*                                                                  */ 00250040
*/********************************************************************/ 00258040
*/*                                                                  */ 00266040
*        %GOTO  RCTPLS2;          /*                                    00274040
         AIF   ('&DSECT' EQ 'YES').RCT001                               00282040
RCT      DS    0D -                RESOURCE CONTROL TABLE               00300040
         AGO   .RCT002                                                  00308040
.RCT001  ANOP                                                           00316040
RCT      DSECT , -                 RESOURCE CONTROL TABLE               00324040
.RCT002  ANOP                                                           00332040
RCTRCT   DC    CL4'RCT' -         ACRONYM IN EDCDIC -RCT-               00350040
*                                                                       00358040
*        RESOURCE CONTROL CONSTANTS                                     00366040
*                                                                       00374040
RCCUICTL DC    H'2'               UIC LOW THRESHOLD            @ZM43098 00382040
RCCUICTH DC    H'4'               UIC HIGH THRESHOLD           @ZM43098 00390040
RCCCPUTL DC    H'1536'            CPU LOW THRESHOLD SHIFTED    @ZM43098 00406040
RCCCPUTH DC    H'1615'            CPU HIGH THRESHOLD SHIFTED   @ZM43098 00412040
RCCPTRTL DC    H'100'             PAGING RATE LOW THRESHOLD    @ZM43098 00424040
RCCPTRTH DC    H'100'             PAGING RATE HIGH THRESHOLD   @ZM43098 00432040
RCCASMTL DC    H'7'               ASM QUEUED REQ LOW THRESHOLD @ZM43098 00440040
RCCASMTH DC    H'10'              ASM QUEUED REQ HIGH THRSHOLD @ZM43098 00448040
RCCTOTUT DC    H'100' -           AVERAGE DEFERRED IO UTILIZATION       00457040
*                                 THRESHOLD                    @ZM43083 00476040
RCCLCHUT DC    H'100' -           LCH DEFERRED UTILIZATION              00486040
*                                 THRESHOLD                    @ZM43083 00510040
RCCLCHRR DC    H'50' -            LCH REQUEST RATE THRESHOLD   @ZM43083 00512040
RCCRSVF1 DC    H'0' -             RESERVED                              00516040
RCCRSVF2 DC    F'0' -             RESERVED                              00520040
RCCRSVF3 DC    F'0' -             RESERVED                              00524040
*                                                                       00532040
*        RESOURCE CONTROL VARIABLES                                     00550040
*                                                                       00560040
RCVCTMC  DC    H'0' -              SAMPLE INTERVAL COUNT                00570040
RCVUICA  DC    H'0' -              UIC AVERAGE                          00580040
RCVCPUA  DC    H'0' -              CPU AVERAGE                          00600040
RCVAVQC  DC    H'0' -              NUMBER OF AVQ LOWS                   00610040
RCVASMQA DC    H'0' -              ASM QUEUE LENGTH AVERAGE             00620040
RCVPTR   DC    H'0' -              PAGING RATE                          00650040
RCVUICC  DC    F'0' -              UIC ACCUMULATOR                      00655040
RCVCPUC  DC    F'0' -              CPU ACCUMULATOR                      00660040
RCVAVQP  DC    F'0' -              AVQ LOW COUNT SAVE                   00665040
RCVASMQ  DC    F'0' -              ASM QUEUE LENGTH ACCUMULATOR         00670040
RCVBPTCT DC    F'0' -              BASE PAGE FAULT COUNT                00675040
RCVBPTTM DC    F'0' -              BASE PAGE FAULT TIME                 00680040
RCVTOTDF DC    H'0' -              AVERAGE DEFERRED IO UTIL    @ZM43083 00685040
RCVRSVF1 DC    H'0' -              RESERVED                             00695040
RCVTAPAD DC    F'0' -              LAST ALLOCATED TAPE ADDRESS @ZM43099 00700040
RCVRSVF2 DC    F'0' -              RESERVED                             00705040
RCVRSVF3 DC    F'0' -              RESERVED                             00715040
RCTEND   DS    0D -                END OF RCT                           00758040
RCTLEN   EQU   RCTEND-RCT -        LENGTH OF RCT                        00766040
         MEND                                                           00774040
*        */                                                             00782040
*%RCTPLS2 : ;                                                           00800040
*    %IF RCT9999¬=','              /* IF THIS IS LAST BLOCK          */ 00808040
*      %THEN %RCT9999=';';         /* THEN CLOSE DECLARE STATEMENT   */ 00816040
*    %IF RCTLEVEL¬=''              /* IF MINOR LEVEL IS SPECIFIED,   */ 00824040
*      %THEN %GOTO RCTPLS3;        /* SKIP MAJOR DECLARE             */ 00832040
*DECLARE                           /*                                */ 00850040
*  1 RCT BASED(RCTPTR)             /* RESOURCE CONTROL TABLE         */ 00858040
*    %GOTO RCTPLS4;                /* MAJOR STRUCTURE                */ 00866040
*%RCTPLS3: RCTDUM=RCTLEVEL||' RCT'; /* CONCATENATE AS MINOR STRUCTURE*/ 00874040
*  RCTDUM                          /* RESOURCE CONTROL TABLE         */ 00882040
*%RCTPLS4:;                                                             00900040
*        BDY(DWORD),                                                    00908040
*      5 RCTRCT CHAR(4),           /* ACRONYM IN EBCDIC -RCT-        */ 00916040
*/*                                                                  */ 00924040
*/*      RESOURCE CONTROL CONSTANTS                                  */ 00932040
*/*                                                                  */ 00950040
*      5 RCCUICTL FIXED(15),       /* UIC THRESHOLD LOW              */ 00958040
*      5 RCCUICTH FIXED(15),       /* UIC HIGH THRESHOLD             */ 00966040
*      5 RCCCPUTL FIXED(15),       /* CPU LOW THRESHOLD              */ 00974040
*      5 RCCCPUTH FIXED(15),       /* CPU HIGH THRESHOLD             */ 00982040
*      5 RCCPTRTL FIXED(15),       /* PAGING RATE LOW THRESHOLD      */ 01000040
*      5 RCCPTRTH FIXED(15),       /* PAGING RATE HIGH THRESHOLD     */ 01008040
*      5 RCCASMTL FIXED(15),       /* ASM QUEUED REQUEST LOW            01016040
                                      THRESHOLD                      */ 01024040
*      5 RCCASMTH FIXED(15),       /* ASM QUEUED REQUEST HIGH           01032040
                                      THRESHOLD                      */ 01050040
*      5 RCCTOTUT FIXED(15),      /* AVERAGE DEFERRED IO UTIL THRESHOLD 01057040
*                                                            @ZM43083*/ 01066040
*      5 RCCLCHUT FIXED(15),      /* LCH DEFERRED UTIL THRESHOLD        01085040
*                                                            @ZM43083*/ 01090040
*      5 RCCLCHRR FIXED(15),       /* LCH REQ RATE THRESHOLD @ZM43083*/ 01100040
*        5 RCCRSVF1 FIXED(15),      /* RESERVED                      */ 01108040
*        5 RCCRSVF2 FIXED(31),      /* RESERVED                      */ 01110040
*        5 RCCRSVF3 FIXED(31),      /* RESERVED                      */ 01112040
*/*                                                                  */ 01116040
*/*   RESOURCE CONTROL VARIABLES                                     */ 01124040
*/*                                                                  */ 01132040
*      5 RCVCTMC FIXED(15),        /* SAMPLE INTERVALS COUNT         */ 01150040
*      5 RCVUICA FIXED(15),        /* UIC AVERAGE                    */ 01160040
*      5 RCVCPUA FIXED(15),        /* CPU USAGE AVERAGE              */ 01170040
*      5 RCVAVQC FIXED(15),        /* AVQ LOW COUNT                  */ 01200040
*      5 RCVASMQA FIXED(15),       /* ASM QUEUE LENGTH AVERAGE       */ 01210040
*      5 RCVPTR FIXED(15),         /* PAGING RATE                    */ 01220040
*      5 RCVUICC FIXED(31),        /* UIC ACCUMULATOR                */ 01250040
*      5 RCVCPUC FIXED(31),        /* CPU USAGE ACCUMULATOR          */ 01255040
*      5 RCVAVQP FIXED(31),        /* AVQ LOW COUNT SAVE AREA        */ 01260040
*      5 RCVASMQ FIXED(31),        /* ASM QUEUE LENGTH ACCUMULATOR   */ 01265040
*      5 RCVBPTCT FIXED(31),       /* BASE PAGE FAULT COUNT          */ 01270040
*      5 RCVBPTTM FIXED(31),       /* BASE PAGE FAULT TIME           */ 01275040
*      5 RCVTOTDF FIXED(15),       /* AVERAGE DEFERRED IO UTILIZATION   01276040
*                                                            @ZM43083*/ 01277040
*        5 RCVRSVF1 FIXED(15),      /* RESERVED                      */ 01280040
*        5 RCVTAPAD FIXED(31),      /* LAST ALLOCATED TAPE   @ZM43099*/ 01290040
*        5 RCVRSVF2 FIXED(31),      /* RESERVED                      */ 01310040
*        5 RCVRSVF3 FIXED(31),      /* RESERVED                      */ 01320040
*      5 RCTEND CHAR(0)            /* END OF RCT                     */ 01340040
*          BDY(DWORD) RCT9999                                           01350040
*%RCTLEN='LENGTH(RCT)';            /* OBTAIN LENGTH OF RCT           */ 01360040
*@EJECT;                                                                01370040
./  ADD  SSI=80240047,NAME=IRARMCA
*        %GOTO RMCAPLS1; /*                                             00050002
         MACRO                                                          00100002
         IRARMCA   &DSECT=YES                                        */ 00150002
*%RMCAPLS1:  ;                                                          00200002
* /*                                                                 */ 00250002
* /* MACCOMP Z-4 SC1CX/PKD16                                         */ 00300040
* /* MACSTAT Z-4 75007/Z40BPSS                                       */ 00350040
* /* *************************************************************** */ 00400002
* /*                                                                 */ 00450002
* /*   MACRO NAME - IRARMCA                                          */ 00500002
* /*                                                                 */ 00550002
* /*   DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER CONTROL AREA      */ 00600002
* /*                                                                 */ 00650002
* /*   COPYRIGHT - NONE                                              */ 00700002
* /*                                                                 */ 00750002
* /*   STATUS - OS/VS2 RELEASE 4, 09/19/75, LEVEL=1                  */ 00800040
* /*                                                                 */ 00850002
* /*   FUNCTION - THE RMCA PROVIDES THE STORAGE AREA CONTAINING      */ 00900002
* /*         SWAP ANALYSIS VARIABLES USED WITHIN THE SYSTEM RE-      */ 00950002
* /*         SOURCES MANAGER.  AS A RESULT OF USING THE RMCA AS      */ 01000002
* /*         A WORK AREA, THE IRARMCTL AND IRARMWLM MODULES CAN      */ 01050002
* /*         BE MADE READ-ONLY.                                      */ 01100002
* /*                                                                 */ 01150002
* /*   METHOD OF ACCESS - THE ADDRESS OF THE RMCA IS CONTAINED       */ 01200002
* /*         IN THE -RMCTRMCA- FIELD OF THE SYSTEM RESOURCES         */ 01250002
* /*         MANAGER CONTROL TABLE.                                  */ 01300002
* /*                                                                 */ 01350002
* /* *************************************************************** */ 01400002
*        %GOTO RMCAPLS2; /*                                             01450002
         AGO   .RMCAAL1                                              */ 01500002
* /* *************************************************************** */ 01550002
* /*                                                                 */ 01600002
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */ 01650002
* /*                                                                 */ 01700002
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */ 01750002
* /*                                                                 */ 01800002
* /*           NOTE - THE BAL FORM OF THE MACRO IS CODED WITH        */ 01850002
* /*           'DC' INSTRUCTIONS, SO THAT THE MACRO MAY BE USED      */ 01900002
* /*           TO ASSEMBLE THE INITIAL FIELD VALUES FOR THE          */ 01950002
* /*           IRARMCNS MODULE, WHICH CONTAINS THE RMCA.             */ 02000002
* /*                                                                 */ 02050002
* /*         USING ON RMCA GIVES ADDRESSABILITY TO ALL SYMBOLS.      */ 02100002
* /*                                                                 */ 02150002
* /*     PLS - %RMCALEVL='USERLEVL' IF THE RMCA MAPPING IS TO BE     */ 02200002
* /*           CONCATENATED WITH A PREVIOUS DECLARATION, WITH THE    */ 02250002
* /*           RMCA BEING ASSIGNED THE INDICATED STRUCTURE LEVEL.    */ 02300002
* /*         - %RMCA9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED.  */ 02350002
* /*                                                                 */ 02400002
* /*         TO ACCESS AS A STANDALONE STRUCTURE, DCL RMCAPTR PTR.   */ 02450002
* /*                                                                 */ 02500002
* /*   CHANGE ACTIVITY = @ZM43085                                    */ 02550040
* /*                     @ZA15788                                   */  02570040
* /*                                                                 */ 02600002
* /*   A000000-999999                                          Y02133*/ 02650002
* /*                                                                 */ 02700002
* /* *************************************************************** */ 02750002
* /*                                                                    02800002
.RMCAAL1 ANOP                                                           02850002
         SPACE 1                                                        02900002
         AIF   ('&DSECT' EQ 'NO').RMCAAL2                               02950002
RMCA     DSECT                                                          03000002
         AGO   .RMCAAL3                                                 03050002
.RMCAAL2 ANOP                                                           03100002
         DS    0D                                                       03150002
RMCA     EQU   *                                                        03200002
.RMCAAL3 ANOP                                                           03250002
         SPACE 1                                                        03300002
RMCANAME DC    C'RMCA' -           BLOCK IDENTIFICATION                 03350002
RMCAR04  DC    H'0' -              RESERVED                             03400002
RMCAINUS DC    H'0' -              COUNT OF IN-CORE USERS               03650002
RMCARSV1 DC    H'0' -              RESERVED                  @ZM43085   03700040
RMCARSV2 DC    H'0' -              RESERVED                  @ZM43085   03750040
RMCATQS  DC    F'0' -              SYSTEM QUIESCE TIME                  03850002
RMCATRS  DC    F'0' -              SYSTEM RESTART TIME                  03900002
RMCATOI  DC    F'0' -              TIME OF EXPECTED TIMER INTERRUPT     04000002
RMCARSV3 DC    F'0' -              RESERVED                  @ZM43085   04050040
RMCARSV4 DC    F'0' -              RESERVED                  @ZM43085   04100040
RMCARSV5 DC    F'0' -              RESERVED                  @ZM43085   04150040
RMCAFLGS DC    1B'00000000' -      SAVEAREA AVAIL. FLAGS     @ZA15788   04152040
RMCASAAF EQU   BIT0 -              SIXTH LVL SAVEAREA AVAIL  @ZA15788   04154040
         DC    3B'00000000' -       RESERVED                  @ZA15788  04156040
RMCARSV7 DC    F'0' -               RESERVED                  @ZM43085  04250040
RMCARSV8 DC    F'0' -               RESERVED                  @ZM43085  04300040
RMCACHP  DC    X'800000FF' -       CHAP LIST FOR SWAPOUT PRTY  @YM05632 04400002
RMCACHU  DC    A(0) -              USER TO BE CHAPPED ON SWAP  @YM05632 04420002
RMCARSV9 DC    F'0' -               RESERVED                  @ZM43085  04450040
RMCAR10   DC    F'0' -              RESERVED                  @ZM43085  04490040
RMCAINV  DC    F'0' -              ROUTINE INVOCATION WORK AREA         04570002
RMCAR11  DC    H'0' -               RESERVED                  @ZM43085  05150040
RMCAISV  DC    H'1' -              ISV RECOMM. VALUE BOOST     @Z40BPCH 05180040
RMCALGPG DC    HL1'2' -            DEF LOGON PERF GROUP NUMBER @Z40BPCH 05187040
RMCABCPG DC    HL1'1' -            DEF BATCH PERF GROUP NUMBER @Z40BPCH 05192040
RMCAR20  DC    H'0' -              RESERVED                    @Z40BPCH 05210040
RMCAMAS  DC    V(IEAMASCB) -       ASCB ADDR FOR MASTER SCHEDULER       05460002
RMCAWKA  DC    8F'0' -              NONRESIDENT ROUTINE WORKAREA        05480040
RMCAR13 DC    F'0' -               RESERVED                    @ZM43085 05483040
RMCAR14  DC    H'0' -              RESERVED                    @ZM43085 05486040
RMCACIUS DC    H'0' -              COUNT OF USERS COMING IN    @Z30WIMG 05495003
RMCACPW1 DC    F'0' -              CAP WORK AREA               @Z40BPCH 05495240
RMCASRC  EQU   *    -              SWAP REASON COUNTS          @Z40BPCH 05495540
RMCATOSC DC    F'0' -              TERMINAL OUTPUT SWAP COUNT  @Z40BPCH 05496040
RMCATISC DC    F'0' -              TERMINAL INPUT SWAP COUNT   @Z40BPCH 05497040
RMCALWSC DC    F'0' -              LONG WAIT SWAP COUNT        @Z40BPCH 05497540
RMCAXSSC DC    F'0' -              AUX STOR SHORT SWAP COUNT   @Z40BPCH 05498040
RMCARSSC DC    F'0' -              REAL STOR SHORT SWAP COUNT  @Z40BPCH 05498540
RMCADWSC DC    F'0' -              DETECTED WAIT SWAP COUNT    @Z40BPCH 05499040
RMCARQSC DC    F'0' -              REQSWAP SWAP COUNT          @Z40BPCH 05499540
RMCANQSC DC    F'0' -              CAP ENQ EXCHANGE SWAP CNT   @Z40BPCH 05506540
RMCAEXSC DC    F'0' -              CAP EXCHANGE BASED ON RECOMMENDATION 05510540
*                                  VALUES SWAP COUNT           @Z40BPCH 05520540
RMCAUSSC DC    F'0' -              CAP UNILATERAL SWAP OUT CNT @Z40BPCH 05524540
*                                                                       05525540
RMCAR90  DC    F'0' -              RESERVED                    @Z40BPCH 05526540
*                                                                       05529040
RMCAEND  DS    0D -                END OF RMCA                          05543040
RMCALEN  EQU   RMCAEND-RMCA -      LENGTH OF RMCA                       05550002
         MEND                                                           05600002
*                                                                    */ 05650002
*%RMCAPLS2:  ;                                                          05700002
*        %IF RMCA9999 ¬= ','        /* DOES STRUCTURE CONTINUE       */ 05750002
*            %THEN %RMCA9999 = ';'; /* NO, END DECLARE STATEMENT     */ 05800002
*        %IF RMCALEVL ¬= ''         /* IS STRUCTURE CONCATENATED     */ 05850002
*            %THEN %GOTO RMCAPLS3;  /* YES, OMIT DECLARE STATEMENT   */ 05900002
*   DCL                                                                 05950002
*     1 RMCA BASED(RMCAPTR) BDY(DWORD),                                 06000002
*            %GOTO RMCAPLS4;        /* SKIP USER-GIVEN LEVEL         */ 06050002
*%RMCAPLS3:  RMCADUM = RMCALEVL||' RMCA';  /* PICK UP GIVEN LEVEL    */ 06100002
*     RMCADUM BDY(DWORD),                                               06150002
*%RMCAPLS4:  ;                                                          06200002
*       10 RMCANAME CHAR(4),        /* BLOCK IDENTIFICATION - 'RMCA' */ 06250002
*       10 RMCAR04  FIXED(15),      /* RESERVED                      */ 06300002
*       10 RMCAINUS FIXED(15),      /* COUNT OF IN-CORE USERS        */ 06550002
*       10 RMCARSV1 FIXED(15),      /* RESERVED              @ZM43085*/ 06600040
*        10 RMCARSV2 FIXED(15),      /* RESERVED              @ZM43085*/06650040
*       10 RMCATQS  FIXED(32) UNSIGNED, /* SYSTEM QUIESCE TIME       */ 06750002
*       10 RMCATRS  FIXED(32) UNSIGNED, /* SYSTEM RESTART TIME       */ 06800002
*       10 RMCATOI  FIXED(32) UNSIGNED, /* TIME OF EXPECTD INTERRUPT */ 06950002
*       10 RMCARSV3 FIXED(32) UNSIGNED, /* RESERVED          @ZM43085*/ 07000040
*       10 RMCARSV4 FIXED(32) UNSIGNED, /* RESERVED          @ZM43085*/ 07050040
*       10 RMCARSV5 FIXED,          /* RESERVED              @ZM43085*/ 07100040
*       10 RMCAFLGS FIXED(32) BDY(WORD),/*SAVEAREA AVAIL. FLAGS         07103040
*                                                            @ZA15788*/ 07106040
*          12 RMCASAAF BIT(1), /* SIXTH LVL SAVEAREA AVAIL. FLG         07110040
*                                                            @ZA15788*/ 07112040
*          12 RMCARSVF BIT(31), /* RESERVED                  @ZA15788*/ 07114040
*       10 RMCARSV7 FIXED(32) UNSIGNED, /* RESERVED          @ZM43085*/ 07200040
*       10 RMCARSV8 FIXED(32) UNSIGNED, /* RESERVED          @ZM43085*/ 07250040
*       10 RMCACHP  CHAR(4) BDY(WORD), /* CHAP LIST FOR SWAP @YM05632*/ 07350002
*       10 RMCACHU  PTR(31),        /* USER CHAPPED FOR SWAP @YM05632*/ 07400002
*       10 RMCARSV9 FIXED(32) UNSIGNED, /* RESERVED          @ZM43085*/ 07450040
*       10 RMCAR10 FIXED(32) UNSIGNED, /* RESERVED           @ZM43085*/ 07500040
*       10 RMCAINV  BIT(32) BDY(WORD), /* RTNE INVOCATION WORK AREA  */ 07620002
*       10 RMCAR11 FIXED(15),       /* RESERVED             @ZM43085*/  08150040
*       10 RMCAISV  FIXED(16),      /* ISV REC. VALUE BOOST  @Z40BPCH*/ 08180040
*       10 RMCALGPG PTR(8),         /* DEF LOGON PERF GRP #  @Z40BPCH*/ 08187040
*       10 RMCABCPG PTR(8),         /* DEF BATCH PERF GRP #  @Z40BPCH*/ 08194040
*       10 RMCAR20  FIXED(15),      /* RESERVED              @Z40BPCH*/ 08210040
*       10 RMCAMAS  PTR(31),        /* ASCB ADDR FOR MASTER SCHEDULR */ 08410002
*       10 RMCAWKA  CHAR(32) BDY(DWORD), /* NONRESIDENT RTN WORKAREA*/  08430040
*       10 RMCAR13 FIXED,           /* RESERVED              @ZM43085*/ 08433040
*       10 RMCAR14 FIXED(15),       /* RESERVED              @ZM43085*/ 08436040
*       10 RMCACIUS FIXED(15),      /* CT OF USERS COMING IN @Z30WIMG*/ 08445003
*       10 RMCACPW1 PTR(31),        /* CAP WORK AREA         @Z40BPCH*/ 08445140
*       10 RMCASRC,                 /* SWAP OUT REASON CNTS. @Z40BPCH*/ 08445340
*          12 RMCATOSC FIXED(32),     /* TERMINAL OUTPUT SWAP COUNT     08445440
*                                                            @Z40BPCH*/ 08445740
*          12 RMCATISC FIXED(32),     /* TERMINAL OUTPUT SWAP COUNT     08445940
*                                                            @Z40BPCH*/ 08446140
*          12 RMCALWSC FIXED(32),     /* LONG WAIT SWAP COUNT           08446840
*                                                            @Z40BPCH*/ 08447040
*          12 RMCAXSSC FIXED(32),     /* AUT STOR SHORTAGE SWAP COUNT   08447140
*                                                            @Z40BPCH*/ 08447340
*          12 RMCARSSC FIXED(32),     /* REAL STOR SHORTAGE SWAP COUNT  08447540
*                                                            @Z40BPCH*/ 08447740
*          12 RMCADWSC FIXED(32),     /* DETECTED WAIT SWAP COUNT       08447940
*                                                            @Z40BPCH*/ 08448140
*          12 RMCARQSC FIXED(32),     /* REQSWAP SWAP COUNT  @Z40BPCH*/ 08448940
*          12 RMCANQSC FIXED(32),     /* CAP ENQ EXCHANGE SWAP COUNT    08449040
*                                                           @Z40BPCH*/  08449440
*          12 RMCAEXSC FIXED(32),     /* CAP EXCHANGE BASED ON RECOMM.  08449540
*                                      VALUE SWAP COUNT     @Z40BPCH*/  08449740
*          12 RMCAUSSC FIXED(32),     /* CAP UNILATERAL SWAP OUT COUNT  08449840
*                                                           @Z40BPCH*/  08480040
*       10 RMCAR90 FIXED,             /* RESERVED           @Z40BPCH*/  08483040
*                                                                       08486040
*       10 RMCAEND  CHAR(0) BDY(DWORD)  /* END OF RMCA               */ 08490040
*   RMCA9999                                                            08500002
*   %RMCALEN = 'LENGTH(RMCA)';      /* SYMBOLIC FOR LENGTH OF RMCA   */ 08550002
./  ADD  SSI=80240048,NAME=IRARMCT
*        %GOTO RMCTPLS1; /*                                             00050002
         MACRO                                                          00100002
         IRARMCT &DSECT=YES                                             00150002
         IEZBITS                                                     */ 00200002
*%RMCTPLS1:  ;                                                          00250002
* /*                                                                 */ 00300002
* /* MACCOMP Z-4 SC1CX/PKD16                                         */ 00350040
* /* MACSTAT Z-4 75007/Z40BPSS                                       */ 00380040
* /* *************************************************************** */ 00450002
* /*                                                                 */ 00500002
* /*   MACRO NAME - IRARMCT                                          */ 00550002
* /*                                                                 */ 00600002
* /*   DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER CONTROL TABLE     */ 00650002
* /*                                                                 */ 00700002
* /*   COPYRIGHT - NONE                                              */ 00750002
* /*                                                                 */ 00800002
* /*   STATUS - OS/VS2 RELEASE 4, 10/28/75, LEVEL=1                  */ 00850040
* /*                                                                 */ 00900002
* /*   FUNCTION - THE RMCT SERVES AS THE ORIGIN TO LOCATE SYSTEM     */ 00950002
* /*         RESOURCES MANAGER TABLES AND ENTRY POINTS.  THE RMCT    */ 01000002
* /*         LOCATES THE SCHEDULING / ROUTING INFORMATION USED TO    */ 01050002
* /*         INVOKE THE REQUIRED PROCESSING FOR THE VARIOUS SYSTEM   */ 01100002
* /*         RESOURCES MANAGER FUNCTIONS.                            */ 01150002
* /*                                                                 */ 01200002
* /*   METHOD OF ACCESS - THE ADDRESS OF THE RMCT IS CONTAINED IN    */ 01250002
* /*         THE -CVTOPCTP- FIELD OF THE CVT.                        */ 01300002
* /*                                                                 */ 01310002
* /*         BY CONVENTION WITHIN THE SYSTEM RESOURCES MANAGER       */ 01320002
* /*         ROUTINES, REGISTER 2 IS ALWAYS RESERVED TO CONTAIN      */ 01330002
* /*         THE ADDRESS OF THE RMCT.                                */ 01340002
* /*                                                                 */ 01350002
* /* *************************************************************** */ 01400002
*        %GOTO RMCTPLS2; /*                                             01450002
         AGO   .RMCTAL1                                              */ 01500002
* /* *************************************************************** */ 01550002
* /*                                                                 */ 01600002
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */ 01650002
* /*                                                                 */ 01700002
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */ 01750002
* /*                                                                 */ 01800002
* /*           NOTE - THE BAL FORM OF THE MACRO IS CODED WITH        */ 01850002
* /*           'DC' INSTRUCTIONS, SO THAT THE MACRO MAY BE USED      */ 01900002
* /*           TO ASSEMBLE THE INITIAL FIELD VALUES FOR THE          */ 01950002
* /*           IRARMCNS MODULE, WHICH CONTAINS THE RMCT.             */ 02000002
* /*                                                                 */ 02050002
* /*         USING ON RMCT GIVES ADDRESSABILITY TO ALL SYMBOLS.      */ 02100002
* /*                                                                 */ 02150002
* /*     PLS - %RMCTLEVL='USERLEVL' IF THE RMCT MAPPING IS TO BE     */ 02200002
* /*           CONCATENATED WITH A PREVIOUS DECLARATION, WITH THE    */ 02250002
* /*           RMCT BEING ASSIGNED THE INDICATED STRUCTURE LEVEL.    */ 02300002
* /*         - %RMCT9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED.  */ 02350002
* /*                                                                 */ 02400002
* /*           NOTE - INASMUCH AS THE RMCT TABLE APPEARS AT THE      */ 02450002
* /*           VERY BEGINNING OF THE -IRARMCNS- MODULE, ONLY A       */ 02500002
* /*           STRUCTURE LEVEL OF '1' (ONE) SHOULD BE USED FOR       */ 02550002
* /*           THE RMCT.                                             */ 02600002
* /*                                                                 */ 02650002
* /*         TO ACCESS THE RMCT AS A DECLARED STRUCTURE,             */ 02700002
* /*         DCL RMCTPTR PTR.                                        */ 02750002
* /*                                                                 */ 02800002
* /*   CHANGE ACTIVITY = @ZM43085                                    */ 02850040
* /*                     @ZA10831                                    */ 02870003
* /*                                                                 */ 02900002
* /*   A000000-999999                                          Y02133*/ 02950002
* /*                                                                 */ 03000002
* /* *************************************************************** */ 03050002
* /*                                                                    03100002
.RMCTAL1 ANOP                                                           03150002
         SPACE 1                                                        03200002
         AIF   ('&DSECT' EQ 'NO').RMCTAL2                               03250002
RMCT     DSECT                                                          03300002
         AGO   .RMCTAL3                                                 03350002
.RMCTAL2 ANOP                                                           03400002
         DS    0D                                                       03450002
RMCT     EQU   *                                                        03500002
.RMCTAL3 ANOP                                                           03550002
         SPACE 1                                                        03600002
RMCTNAME DC    C'RMCT' -           BLOCK IDENTIFICATION                 03650002
RMCTCCT  DC    A(CCT) -            CPU MANAGEMENT CONTROL TABLE         03750002
RMCTICT  DC    A(ICT) -            I/O MANAGEMENT CONTROL TABLE         03800002
RMCTMCT  DC    A(MCT) -            STORAGE MANAGEMENT CONTROL TABLE     03820002
RMCTRMPT DC    A(RMPT) -           CTL ALGORITHM PARAMETER TABLE        03850002
RMCTRMCA DC    A(RMCA) -           CTL ALGORITHM CONTROL AREA           03900002
RMCTWMST DC    A(0) -              ADDR OF WLM SPECIFICATION TABLE      03950002
RMCTRLCT DC    A(0) -              ADDR OF LOGICAL CHANNEL MGMT TABLE   04000002
RMCTRMSA DC    A(0) -              ADDR OF RESOURCES MANAGER SAVE AREA  04050002
RMCTRMPD DC    A(0) -              ADDR OF RESOURCES MANAGER PERF DATA  04150002
RMCTRMEX DC    A(RMEX) -           ROUTINE EXITING VECTOR TABLE         04250002
RMCTRMSB DC    A(RMSB) -           SUBROUTINE CALLING VECTOR TABLE      04300002
RMCTEPPA DC    A(IRAEPPA) -        PRTL ANALYSIS ENTRY TABLE            04350002
RMCTEPDT DC    A(EPDTSCN) -        USER ACTION ENTRY TABLE              04450002
RMCTEPAT DC    A(EPATSCN) -        ALGORITHM ENTRY TABLE                04500002
RMCTEPBG DC    A(EPAT) -           ADDR OF ALG ENTRY PT TABLE  @ZA10831 04550003
RMCTADJC DC    F'0' -              ADJUSTMENT FACTOR FOR CPU RATE       04600002
RMCTITT  DC    V(IRASECHT) -       INTFC EVENT CHARACTERISTICS TABLE    04610002
RMCTEPET DC    V(IRAPRCSR) -       EVENT ROUTING VECTOR TABLE           04620002
RMCTFLTM DC    A(IRAFLTM) -        TIME OF DAY ADJUST VECTOR TABLE      04630002
RMCTEPPR DC    A(IRAEPPR) -        PROCESS RATE DEPENDENT ENTRY TABLE   04650002
RMCTWAST DC    A(0) -              ADDR OF WAR SPECIFICATION TABLE      04670002
RMCTWAMT DC    A(0) -              ADDR OF WAR MEASUREMENT TABLE        04700002
RMCTTMQE DC    A(IRACTMQE) -       SCHEDULED RTNE QUEUE HEADER ADDR     05000002
RMCTAQCT DC    F'0' -              ACTION QUEUE MEMBER COUNT            05050002
RMCTAQHD DC    A(IRAOUCB) -        ACTION QUEUE FORWARD POINTER         05100002
RMCTWTQE DC    A(IRAWTQE) -        WAIT - QUEUE HEADER BLOCK ADDRESS    05150002
RMCTOTQE DC    A(IRAOTQE) -        OUT - QUEUE HEADER BLOCK ADDRESS     05170002
RMCTINQE DC    A(IRAINQE) -        IN - QUEUE HEADER BLOCK ADDRESS      05190002
RMCTR10  DC    F'0' -              RESERVED                    @Z40BPCH 05210040
RMCTTBS  DC    F'0' -              STARTING TIME BASE FOR TIME OF DAY   05250002
RMCTTOD  DC    F'0' -              TIME OF DAY - SYST RSRC MGR INVOKE   05300002
RMCTTOC  DC    D'0' -              TIME OF CENTURY - 64BIT BINARY NMB   05350002
RMCTALA  DC    4B'00000000' -      ALGORITHM REQUEST ACCUMULATOR FIELD  05400002
RMCTALR  DC    4B'00000000' -      IMMEDIATE ALGORITHM REQUEST FIELD    05450002
RMCTRQSV DC    A(RQSV) -           ADDR OF REQ SRV DATA AREA   @Z40BPCH 05600040
RMCTFLGS DC    1B'00000000' -      PROCESSING CONTROL FLAGS             05650002
RMCTMFA  EQU   BIT0 -              MEASUREMENT FACILITY ACTIVE          05700002
RMCTCPS1 EQU   BIT1                CAP SWITCH                  @Z40BPSS 05730040
RMCTINIT EQU   BIT3 -              SRM INITIALIZATION WAS PERFORMED     05850002
RMCTRSV1 EQU   BIT4 -              RESERVED                   @ZM43085  05900040
RMCTSTW  EQU   BIT5 -              SET HAS STOPPED WAR COLLECTION       05950002
RMCTRSV2 EQU   BIT6 -              RESERVED                   @ZM43085  05952040
         DC    1B'00000000' -      OVERRIDE CONDITION FLAGS             05960002
RMCTMFS  EQU   BIT1 -              MF1 ACTIVE,SET IPS RCVD    @Z40BPCH  05980040
         DC    2B'00000000' -      RESERVED                             06000002
RMCTTELM DC    V(IEATSELM) -       RESOURCES MANAGER TIMING ELEMENT     06050002
RMCTCPID DC    C'RM1',X'03' -      RESOURCES MANAGER CELL POOL ID       06100002
RMCTTOCI DC    D'0' -              CLOCK READ AREA - 64BIT BINARY NMB   06150002
RMCTOUCB DC    A(IRAOUCB) -        PREASSEMBLED MODEL OUCB              06250002
RMCTOUXB DC    A(IRAOUXB) -        INTERPOSED DUMMY OUXB                06300002
RMCTSRBT DC    A(IRASRBT) -        RESOURCES MANAGER SRB TABLE          06350002
RMCTDMDT DC    A(0) -              ADDR OF DOMAIN TABLE        @Z40BPCH 06360040
RMCTDMDE DC    A(0) -              ADDR OF LAST DMN TAB ENTRY  @Z40BPCH 06365040
RMCTDMNC DC    H'0' -              NUMBER OF DOMAINS           @Z40BPCH 06370040
RMCTR50  DC    H'0' -              RESERVED                    @Z40BPCH 06390040
RMCTEND  DS    0D -                END OF RMCT                          06450002
RMCTLEN  EQU   RMCTEND-RMCT -      LENGTH OF RMCT                       06500002
         MEND                                                           06550002
*                                                                    */ 06600002
*%RMCTPLS2:  ;                                                          06650002
*        %IF RMCT9999 ¬= ','        /* DOES STRUCTURE CONTINUE       */ 06700002
*            %THEN %RMCT9999 = ';'; /* NO, END DECLARE STATEMENT     */ 06750002
*        %IF RMCTLEVL ¬= ''         /* IS STRUCTURE CONCATENATED     */ 06800002
*            %THEN %GOTO RMCTPLS3;  /* YES, OMIT DECLARE STATEMENT   */ 06850002
*   DCL                                                                 06900002
*     1 RMCT BASED(RMCTPTR) BDY(DWORD),                                 06950002
*            %GOTO RMCTPLS4;        /* SKIP USER-GIVEN LEVEL         */ 07000002
*%RMCTPLS3:  RMCTDUM = RMCTLEVL||' RMCT';  /* PICK UP GIVEN LEVEL    */ 07050002
*     RMCTDUM BDY(DWORD),                                               07100002
*%RMCTPLS4:  ;                                                          07150002
*       10 RMCTNAME CHAR(4),        /* BLOCK IDENTIFICATION - 'RMCT' */ 07200002
*       10 RMCTCCT  PTR(31),        /* CPU MGMT CONTROL TABLE        */ 07300002
*       10 RMCTICT  PTR(31),        /* I/O MGMT CONTROL TABLE        */ 07350002
*       10 RMCTMCT  PTR(31),        /* STORAGE MGMT CONTROL TABLE    */ 07370002
*       10 RMCTRMPT PTR(31),        /* CTL ALGORITHM PARAMETER TBL   */ 07400002
*       10 RMCTRMCA PTR(31),        /* CTL ALGORITHM CONTROL AREA    */ 07450002
*       10 RMCTWMST PTR(31),        /* WLM SPECIFICATION TABLE       */ 07500002
*       10 RMCTRLCT PTR(31),        /* LOGICAL CHANNEL MGMT TABLE    */ 07550002
*       10 RMCTRMSA PTR(31),        /* RESOURCES MANAGER SAVE AREA   */ 07600002
*       10 RMCTRMPD PTR(31),        /* RESOURCES MANAGER PERF DATA   */ 07700002
*       10 RMCTRMEX PTR(31),        /* ROUTINE EXITING VECTOR TABLE  */ 07800002
*       10 RMCTRMSB PTR(31),        /* SUBRTNE CALLING VECTOR TABLE  */ 07850002
*       10 RMCTEPPA PTR(31),        /* PRTL ANALYSIS ENTRY TABLE     */ 07900002
*       10 RMCTEPDT PTR(31),        /* USER ACTION ENTRY TABLE       */ 08000002
*       10 RMCTEPAT PTR(31),        /* ALGORITHM ENTRY TABLE         */ 08050002
*       10 RMCTEPBG PTR(31),    /* BEGIN ALG ENTRY PT TABLE  @ZA10831*/ 08100003
*       10 RMCTADJC FIXED,          /* CPU RATE ADJUSTMENT           */ 08150002
*       10 RMCTITT  PTR(31),        /* EVENT CHARACTERISTICS TABLE   */ 08160002
*       10 RMCTEPET PTR(31),        /* EVENT ROUTING VECTOR TABLE    */ 08170002
*       10 RMCTFLTM PTR(31),        /* TIME OF DAY DEPENDENT TABLE   */ 08180002
*       10 RMCTEPPR PTR(31),        /* PROCESS RATE DEPENDENT TABLE  */ 08200002
*       10 RMCTWAST PTR(31),        /* WAR SPECIFICATION TABLE       */ 08220002
*       10 RMCTWAMT PTR(31),        /* WAR MEASUREMENT TABLE         */ 08250002
*       10 RMCTTMQE PTR(31),        /* SCHED RTNE QUEUE HEAD ADDR    */ 08550002
*       10 RMCTAQCT FIXED BDY(DWORD), /* ACTION QUEUE MEMBER COUNT   */ 08600002
*       10 RMCTAQHD PTR(31),        /* ACTION QUEUE FORWARD POINTER  */ 08650002
*       10 RMCTWTQE PTR(31),        /* WAIT - QUEUE HEADER ADDRESS   */ 08700002
*       10 RMCTOTQE PTR(31),        /* OUT - QUEUE HEADER ADDRESS    */ 08720002
*       10 RMCTINQE PTR(31),        /* IN - QUEUE HEADER ADDRESS     */ 08740002
*       10 RMCTR10 FIXED,           /* RESERVED              @Z40BPCH*/ 08760040
*       10 RMCTTBS  FIXED(32) UNSIGNED, /* SRM TIME OF DAY BASE      */ 08800002
*       10 RMCTTOD  FIXED(32) UNSIGNED, /* CURRENT TIME OF DAY       */ 08850002
*       10 RMCTTOC  BIT(64) BDY(DWORD), /* CURR TIME OF CENTURY      */ 08900002
*       10 RMCTALA  BIT(32) BDY(WORD), /* ALG REQUEST ACCUMULATOR    */ 08950002
*       10 RMCTALR  BIT(32) BDY(WORD), /* IMMED ALG REQUEST ACCUMUL  */ 09000002
*       10 RMCTRQSV PTR(31),        /* REQ SERVICE WORK AREA @Z40BPCH*/ 09150040
*       10 RMCTFLGS BIT(32) BDY(WORD), /* PROCESSING CONTROL FLAGS   */ 09200002
*         12 RMCTMFA  BIT(1),       /* MEASUREMENT FACILITY ACTIVE   */ 09250002
*         12 RMCTCPS1 BIT(1),       /* CAP SWITCH            @Z40BPSS*/ 09300040
*         12 RMCTF03  BIT(1),       /* RESERVED              @Z40BPSS*/ 09330040
*         12 RMCTINIT BIT(1),       /* SRM INITIALIZATION DONE       */ 09400002
*         12 RMCTRSV1 BIT(1),       /* RESERVED              @ZM43085*/ 09450040
*         12 RMCTSTW  BIT(1),       /* SET STOPPED WAR COLLECTION    */ 09500002
*         12 RMCTRSV2 BIT(1),       /* RESERVED              @ZM43085*/ 09510040
*         12 RMCTF06  BIT(1),       /* RESERVED              @Z40BPCH*/ 09520040
*         12 RMCTF07  BIT(1),       /* RESERVED              @Z40BPCH*/ 09560040
*         12 RMCTMFS  BIT(1),       /* MF1 ACT.,SET IPS RCVD @Z40BPCH*/ 09565040
*         12 RMCTF09  BIT(22),      /* RESERVED              @Z40BPCH*/ 09575040
*       10 RMCTTELM PTR(31),        /* RSRC MANAGER TIMING ELEMENT   */ 09600002
*       10 RMCTCPID CHAR(4) BDY(WORD), /* RSRC MANAGER CELL POOL ID  */ 09650002
*       10 RMCTTOCI BIT(64) BDY(DWORD), /* TOD CLOCK READ AREA       */ 09700002
*       10 RMCTOUCB PTR(31),        /* PREASSEMBLED MODEL OUCB       */ 09800002
*       10 RMCTOUXB PTR(31),        /* INTERPOSED DUMMY OUXB         */ 09850002
*       10 RMCTSRBT PTR(31),        /* PREBUILT SRB TABLE            */ 09900002
*       10 RMCTDMDT PTR(31),        /* ADDR OF DOMAIN TABLE  @Z40BPCH*/ 09910040
*       10 RMCTDMDE PTR(31),        /* ADDR OF LAST DMDT ENT @Z40BPCH*/ 09913040
*       10 RMCTDMNC FIXED(15),      /* NUMBER OF DOMAINS     @Z40BPCH*/ 09920040
*       10 RMCTR50 FIXED(15),       /* RESERVED              @Z40BPCH*/ 09930040
*       10 RMCTEND  CHAR(0) BDY(DWORD)   /* END OF RMCT              */ 10000002
*   RMCT9999                                                            10050002
*   %RMCTLEN = 'LENGTH(RMCT)';      /* SYMBOLIC FOR LENGTH OF RMCT   */ 10100002
./  ADD  SSI=60790649,NAME=IRARMEP
*%;  /*                                                                 00050002
         MACRO                                                          00100002
&NAME    IRARMEP   &DSECT=YES,     USE OTHER OPRNDS IF DSECT=NO SPECD  *00150002
               &EPN=,              ROUTINE (ENTRY POINT) IDENTIFIER    *00200002
               &ERR=,              ROUTINE RECOVERY POINT IDENTIFIER   *00210002
               &NXT=,              NEXT CHAINED RMEP BLOCK IDENTIFIER  *00230002
               &SCH=,              INTERVAL IF ROUTINE IS TIME DRIVEN  *00250002
               &RCR=               RECURSIVE CALL NEEDED TO GET LOCK    00300002
         GBLC  &IRAEPAD            ROUTINE ENTRY POINT ADDRESS NAME     00350002
         GBLC  &IRAEPER            ROUTINE RECOVERY POINT ADDR NAME     00400002
         GBLC  &IRAEPFL            ROUTINE INVOCATION FLAG MASK         00450002
         GBLC  &IRAEPPV            PREV RMEP BLOCK ADDRESS NAME         00500002
         GBLC  &IRAEPTM            PREV SCHED RMEP ADDRESS NAME         00550002
         GBLB  &IRAEPCM            IRARMEP COMMENTARY PRINT CONTROL     00570002
         LCLC  &RMEPFLG            ROUTINE INVOCATION, TYPE FLAGS       00580002
         LCLC  &RMEPINT            SCHEDULED ROUTINE INVOCN INTERVAL    00600002
         LCLA  &RMEPTYP            ROUTINE TYPE HEX ACCUMULATOR         00620002
         AIF   (&IRAEPCM).RMEPAL1  BYPASS DUPLICATE IRARMEP INTRO       00640002
         IEZBITS                                                        00650002
         AGO   .RMEPAL0                                                 00660002
*                                                                    */ 00670002
*@       LIST  PUSH;                /* SAVE LISTING STATUS FOR RMEP  */ 00700002
*        %IF RMEPSFX = ''           /* IS NAMING CHARACTER OMITTED   */ 00750002
*            %THEN %RMEPSFX = ' ';  /* YES, INSERT PLACEHOLDER BLANK */ 00800002
*        %IF RMEPSFX ¬= ' '         /* IS THIS THE DUPLICATE INCLUDE */ 00850002
*            %THEN %RMEPDUM = '@       LIST  OFF '; /* BYP INTRO CMT */ 00900002
*        %ELSE     %RMEPDUM = '@       LIST  PUSH'; /* DMY CNTRL CMT */ 00920002
*RMEPDUM;                                                               00940002
*        %IF RMEPSFX = ' '          /* IS THIS  THE FIRST INCLUDE    */ 00960002
*            %THEN %RMEPDUM = '@       LIST  POP '; /* PRT INTRO CMT */ 00980002
*RMEPDUM;                                                               01000002
*%;  /*                                                                 01050002
.RMEPAL0 ANOP                                                        */ 01070002
* /* MACCOMP Z-4 SC1CX/PKD16                                         */ 01100040
* /* MACSTAT Z-4 75007/Z40BPSS                                       */ 01130040
* /* *************************************************************** */ 01200002
* /*                                                                 */ 01250002
* /*   MACRO NAME - IRARMEP                                          */ 01300002
* /*                                                                 */ 01350002
* /*   DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER ENTRY POINT BLOCK */ 01400002
* /*                                                                 */ 01450002
* /*   COPYRIGHT - NONE                                              */ 01500002
* /*                                                                 */ 01550002
* /*   STATUS - OS/VS2 RELEASE 4, 08/01/75, LEVEL=1                  */ 01600040
* /*                                                                 */ 01650002
* /*   FUNCTION - THE RMEP DESIGNATES A SYSTEM RESOURCES MANAGER     */ 01700002
* /*         PROCESSING ROUTINE WHICH MAY BE INVOKED THROUGH THE     */ 01750002
* /*         CONTROL ALGORITHM.   THE RMEP CONTAINS THE ROUTINE      */ 01800002
* /*         ENTRY POINT ADDRESS, DEFINES A BIT MASK TO BE USED      */ 01850002
* /*         TO REQUEST THE ROUTINE, AND OPTIONALLY PROVIDES FOR     */ 01900002
* /*         PERIODIC EXECUTION OF THE ROUTINE.  THE RMEP BLOCK      */ 01950002
* /*         CONTAINS FLAGS INDICATING HOW THE DESCRIBED ROUTINE     */ 01980002
* /*         MAY BE INVOKED.                                         */ 02010002
* /*                                                                 */ 02050002
* /*   METHOD OF ACCESS - THE ADDRESS OF THE CURRENT RMEP IS IN      */ 02100002
* /*         THE -RRPAEPA- FIELD OF THE SYSTEM RESOURCES MANAGER     */ 02150002
* /*         RECOVERY ROUTINE PARAMETER AREA.                        */ 02200002
* /*                                                                 */ 02250002
* /* *************************************************************** */ 02300002
*%;  /*                                                                 02350002
&IRAEPCM SETB  1                   IRARMEP COMMENTARY WAS PRINTED       02370002
         AGO   .RMEPAL1                                              */ 02400002
*@       LIST  OFF;                 /* BYPASS REMAINING COMMENTARY   */ 02450002
* /* *************************************************************** */ 02500002
* /*                                                                 */ 02550002
* /*   CONSTRUCTION METHOD - THE RMEP LOCATIONS FOR ALGORITHMS -     */ 02600002
* /*         ROUTINES WITH SYSTEM-WIDE PROCESS EFFECTS - ARE SHOWN   */ 02650002
* /*         IN THE IRAEPAT MAPPING MACRO.  THE RMEP LOCATIONS FOR   */ 02700002
* /*         ACTION ROUTINES, WHICH PERFORM PROCESSING FOR A GIVEN   */ 02750002
* /*         USER, ARE SHOWN IN THE IRAEPDT MAPPING MACRO.           */ 02800002
* /*                                                                 */ 02850002
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */ 02900002
* /*                                                                 */ 02950002
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */ 03000002
* /*         - OTHERWISE, SEE MACRO INSTRUCTION PROTOTYPE OPERANDS.  */ 03050002
* /*                                                                 */ 03100002
* /*           IF DSECT=NO IS NOT CODED, USING ON RMEP WILL GIVE     */ 03150002
* /*           ADDRESSABILITY TO ALL SYMBOLS.  NO OTHER OPERANDS     */ 03170002
* /*           ARE REQUIRED IN SUCH CASE BY THE IRARMEP MACRO.       */ 03190002
* /*                                                                 */ 03210002
* /*           IF DSECT=NO IS CODED, THE IRARMEP MACRO WILL GEN      */ 03230002
* /*           'DC' INSTRUCTIONS CONTAINING APPROPRIATE VALUES,      */ 03250002
* /*           IN ACCORDANCE WITH THE SPECIFIED MACRO OPERANDS.      */ 03270002
* /*                                                                 */ 03300002
* /*     PLS - %RMEPSFX='USERCHAR' IF THE INDICATED CHARACTER IS     */ 03450002
* /*           TO BE APPENDED TO ALL NAMES IN THE MAPPING, THEREBY   */ 03500002
* /*           PERMITTING MULTIPLE INCLUDES WHICH CREATE DUPLICATE   */ 03550002
* /*           DEFINITIONS BASED ON DIFFERENT POINTERS.              */ 03600002
* /*                                                                 */ 03650002
* /*           NOTE - DUE TO THE MULTIPLE INCLUDE FACILITY FOR THE   */ 03700002
* /*           IRARMEP MACRO, IT IS NOT POSSIBLE TO CONCATENATE THE  */ 03750002
* /*           RMEP DECLARATION WITH ANOTHER DECLARATION IN SUCH A   */ 03800002
* /*           FASHION THAT BOTH ARE BASED ON THE SAME POINTER.      */ 03850002
* /*                                                                 */ 03900002
* /*         TO ACCESS AS A STANDALONE STRUCTURE, DCL RMEPPTR PTR.   */ 03950002
* /*                                                                 */ 04000002
* /*   CHANGE ACTIVITY =                                             */ 04050002
* /*                                                                 */ 04100002
* /*   A000000-999999                                          Y02133*/ 04150002
* /*                                                                 */ 04200002
* /* *************************************************************** */ 04250002
*%;  /*                                                                 04300002
.RMEPAL1 ANOP                                                           04350002
         SPACE 1                                                        04400002
         AIF   ('&DSECT' EQ 'NO').RMEPAL2                               04450002
RMEP     DSECT                                                          04550002
RMEPEPB  DS    CL16 -              ENTRY POINT DESCRIPTOR BLOCK         04560002
RMEPEPA  DS    A -                 ROUTINE NORMAL ENTRY ADDRESS         04570002
RMEPERA  DS    A -                 ROUTINE RECOVERY ENTRY ADDRESS       04580002
RMEPFLG  DS    0XL4 -              ROUTINE INVOCATION FLAG FIELD        04590002
         DS    XL3 -               ROUTINE INVOCATION FLAG IDENTIFIER   04591002
         DS    XL1 -               ROUTINE INVOCATION TYPE IDENTIFIER   04592002
RMEPRCR  EQU   BIT5 -              RECURSIVE CALL NEEDED TO GET LOCK    04594002
RMEPTMD  EQU   BIT6 -              ROUTINE INVOCATION TIME-DEPENDENT    04595002
RMEPACN  EQU   BIT7 -              ROUTINE PROCESS USER LEVEL ACTION    04596002
RMEPPRV  DS    A -                 ADDRESS OF PREV BLOCK IN RMEP CHAIN  04600002
RMEPEND  DS    0D -                END OF RMEP BASIC ENTRY BLOCK        04610002
RMEPSCH  DS    CL16 -              ENTRY POINT SCHEDULING EXTENSION     04620002
RMEPFWD  DS    A -                 TIME DRIVEN CHAIN FORWARD POINTER    04630002
RMEPBCK  DS    A -                 TIME DRIVEN CHAIN BACKWRD POINTER    04640002
RMEPTME  DS    F -                 TIME WHEN ROUTINE TO BE INVOKED      04650002
RMEPINT  DS    F -                 ROUTINE INVOCATION INTERVAL          04660002
RMEPSND  DS    0D -                END OF RMEP SCHEDULING EXTENSION     04670002
RMEPLEN  EQU   RMEPEND-RMEP -      LENGTH OF RMEP                       04740002
         AGO   .RMEPML4                                                 04750002
.RMEPAL2 ANOP                                                           04940002
&IRAEPAD SETC  'IRARMNOP'          REINIT TO DUMMY ENTRY POINT NAME     04960002
&IRAEPER SETC  'IRARMNOP'          REINIT TO DUMMY RETRY POINT NAME     04980002
&IRAEPFL SETC  '00000000'          REINIT TO DUMMY RMEP INVOCN FLAG     05000002
         IRAEPNMP  EPN=&EPN,ERR=&ERR  GET ROUTINE ENTRY DESCRIPTION     05010002
         AIF   ('&IRAEPAD' EQ 'IRARMNOP').RMEPML4                       05020002
&RMEPTYP SETA  1                   INIT TO NON-ZERO INDEX               05030002
         AIF   ('&NXT' EQ '').RMEPYL1  TEST DEFAULT CHAINING USED       05040040
&IRAEPPV SETC  'RMEPB&NXT'         SETUP PREVIOUS CHAINED RMEP NAME     05050002
         AIF   ('&NXT'(1,3) NE '000').RMEPYL1  BYP CLR PRV IF NOT END   05060040
&IRAEPPV SETC  '00000000'          INIT TO NO PREVIOUS ASSEMBLED RMEP   05070002
.RMEPYL1 AIF   ('&RCR' NE 'YES').RMEPYL2  TEST RTNE CRITICAL CALL       05120040
&RMEPTYP SETA  &RMEPTYP+4          SETON HEX BIT 1                      05140002
.RMEPYL2 AIF   ('&SCH' EQ '').RMEPYL3  TEST ROUTINE TIME-DRIVEN         05160002
&RMEPTYP SETA  &RMEPTYP+2          SETON HEX BIT 2                      05180002
.RMEPYL3 AIF   ('&IRAEPFL'(8,1) NE '1').RMEPYL4  TEST USER RTNE         05200002
&RMEPTYP SETA  &RMEPTYP+1          SETON HEX BIT 3                      05220002
.RMEPYL4 ANOP                                                           05240002
&RMEPFLG SETC  '&IRAEPFL'(1,7).'0123456789ABCDEF'(&RMEPTYP,1)           05260002
         DS    0D                                                       05300002
RMEPB&EPN EQU  *                                                        05330002
         AIF   ('&NAME' EQ '').RMEPAL3                                  05360002
&NAME    EQU   *                                                        05390002
.RMEPAL3 ANOP                                                           05420002
*        DS    CL16 -              ENTRY POINT DESCRIPTOR BLOCK         05450002
         DC    V(&IRAEPAD) -       ROUTINE NORMAL ENTRY ADDRESS         05480002
         DC    V(&IRAEPER) -       ROUTINE RECOVERY ENTRY ADDRESS       05510002
         DC    X'&RMEPFLG' -       ROUTINE INVOCATION FLAG IDENTIFIER   05540002
         DC    A(&IRAEPPV) -       ADDRESS OF PREV BLOCK IN RMEP CHAIN  05570002
&IRAEPPV SETC  'RMEPB&EPN'         SAVE AS PREVIOUS ASSEMBLED RMEP      05600002
         AIF   ('&SCH' EQ '').RMEPML4  BYPASS SCHEDULE IF NOT WANT      05700002
&RMEPINT SETC  '0000000'(1,8-K'&SCH).'&SCH'  PICK SCHEDULING INTERVAL   05750002
*        DS    CL16 -              ENTRY POINT SCHEDULING EXTENSION     05800002
         DC    A(0) -              TIME DRIVEN CHAIN FORWARD POINTER    05870002
         DC    A(&IRAEPTM) -       TIME DRIVEN CHAIN BACKWRD POINTER    05940002
         DC    F'0' -              TIME WHEN ROUTINE TO BE INVOKED      06010002
         DC    F'&RMEPINT' -       ROUTINE INVOCATION INTERVAL          06080002
&IRAEPTM SETC  'RMEPB&EPN'         SAVE AS PREVIOUS SCHEDULED RMEP      06150002
.RMEPML4 ANOP                                                           06650002
         MEND                                                           06700002
*                                                                    */ 06750002
*@       LIST  POP;                 /* RESUME LIST STATUS FOR RMEP   */ 06800002
*        %RMEPLABL = 'RMEP';        /* INITIALIZE THE LABEL VARIABLE */ 07800002
*        %IF RMEPSFX ¬= ' '         /* IS THIS THE DUPLICATE INCLUDE */ 08800002
*            %THEN %RMEPLABL = 'RMEP'||RMEPSFX; /* RENAME STRUCTURE  */ 09800002
*        %IF RMEP9999 ¬= ','        /* DOES STRUCTURE CONTINUE       */ 10800002
*            %THEN %RMEP9999 = ';'; /* NO, END DECLARE STATEMENT     */ 11800002
*        %RMEPDUM = RMEPLABL||'PTR' ;  /* QUALIFY BASED POINTER NAME */ 12800002
*   DCL                                                                 13800002
*     1 RMEPLABL BASED(RMEPDUM) BDY(DWORD),                             14800002
*         %RMEPLABL = 'RMEPEPB'||RMEPSFX       ;                        15800002
*       10 RMEPLABL CHAR(16) BDY(DWORD), /* ENTRY POINT BLOCK        */ 16800002
*         %RMEPLABL = 'RMEPEPA'||RMEPSFX       ;                        17800002
*         12 RMEPLABL PTR(31),      /* ENTRY POINT ADDRESS           */ 18800002
*         %RMEPLABL = 'RMEPERA'||RMEPSFX       ;                        19800002
*         12 RMEPLABL PTR(31),      /* ERROR RETRY POINT ADDRESS     */ 20800002
*         %RMEPLABL = 'RMEPFLG'||RMEPSFX       ;                        21800002
*         12 RMEPLABL BIT(32) BDY(WORD), /* INVOCATION FLAG MASK     */ 22800002
*         %RMEPLABL = 'RMEPVFL'||RMEPSFX       ;                        22890002
*           14 RMEPLABL BIT(29),    /* RTNE INVOC FLAG FIELD @Z40BPCH*/ 22980040
*         %RMEPLABL = 'RMEPRCR'||RMEPSFX       ;                        23250002
*           14 RMEPLABL BIT(01),    /* CRITICAL ALGORITHM INDICATOR  */ 23340040
*         %RMEPLABL = 'RMEPTMD'||RMEPSFX       ;                        23430002
*           14 RMEPLABL BIT(01),    /* RTNE INVOKE TIME-DEPENDENT    */ 23520002
*         %RMEPLABL = 'RMEPACN'||RMEPSFX       ;                        23610002
*           14 RMEPLABL BIT(01),    /* RTNE PERFORMS USER LEVL ACTN  */ 23700002
*         %RMEPLABL = 'RMEPPRV'||RMEPSFX       ;                        23800002
*         12 RMEPLABL PTR(31),      /* ADDRESS OF PREV RMEP BLOCK    */ 24800002
*         %RMEPLABL = 'RMEPEND'||RMEPSFX       ;                        25800002
*       10 RMEPLABL CHAR(0) BDY(DWORD),  /* END OF BASE RMEP         */ 26800002
*         %RMEPLABL = 'RMEPSCH'||RMEPSFX       ;                        27800002
*       10 RMEPLABL CHAR(16) BDY(DWORD), /* SCHEDULING EXTENSN       */ 28800002
*         %RMEPLABL = 'RMEPFWD'||RMEPSFX       ;                        29800002
*         12 RMEPLABL PTR(31),      /* TIME DRIVEN CHAIN FORWRD PTR  */ 30800002
*         %RMEPLABL = 'RMEPBCK'||RMEPSFX       ;                        31800002
*         12 RMEPLABL PTR(31),      /* TIME DRIVEN CHAIN BCKWRD PTR  */ 32800002
*         %RMEPLABL = 'RMEPTME'||RMEPSFX       ;                        33800002
*         12 RMEPLABL FIXED(32) UNSIGNED, /* TIME WHEN ENTRY SCHED   */ 34800002
*         %RMEPLABL = 'RMEPINT'||RMEPSFX       ;                        35800002
*         12 RMEPLABL FIXED(32) UNSIGNED, /* INVOCATION INTERVAL     */ 36800002
*         %RMEPLABL = 'RMEPSND'||RMEPSFX       ;                        37800002
*       10 RMEPLABL CHAR(0) BDY(DWORD)   /* END OF SCHD RMEP         */ 50800002
*   RMEP9999                                                            51800002
*   %RMEPLEN = 'LENGTH(RMEPEPB)' ;                                      52800002
./  ADD  SSI=60790650,NAME=IRARMEX
*        %GOTO RMEXPLS1; /*                                             00050002
         MACRO                                                          00100002
         IRARMEX   &DSECT=YES                                           00110002
         GBLC  &IRAEPPV            PREV RMEP BLOCK ADDRESS NAME         00120002
         GBLB  &IRAEPCM            IRARMEP COMMENTARY PRINT CONTROL     00130002
&IRAEPPV SETC  '00000000'          INIT TO NO PREVIOUS CHAINED RMEP     00140002
&IRAEPCM SETB  1                   BYPASS IRARMEP HEADER COMMENTARY     00150002
.*                                                                   */ 00160002
*%RMEXPLS1:  ;                                                          00200002
* /*                                                                 */ 00250002
* /* MACCOMP Z-4 SC1CX/PKD16                                         */ 00300040
* /* MACSTAT Z-4 75007/Z40BPSS                                       */ 00330040
* /* *************************************************************** */ 00400002
* /*                                                                 */ 00450002
* /*   MACRO NAME - IRARMEX                                          */ 00500002
* /* MACSTAT Z-4 75007/Z40BPSS                                       */ 00520040
* /*                                                                 */ 00550002
* /*   DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER EXTERNAL          */ 00600002
* /*                      ENTRY POINT DESCRIPTOR TABLE.              */ 00620002
* /*                                                                 */ 00650002
* /*   COPYRIGHT - NONE                                              */ 00700002
* /*                                                                 */ 00750002
* /*   STATUS - OS/VS2 RELEASE 4, 07/30/75, LEVEL=1                  */ 00800040
* /*                                                                 */ 00850002
* /*   FUNCTION - THE RMEX CONTAINS THE ENTRY POINT DESCRIPTORS OF   */ 00900002
* /*         ALL EXTERNALLY ENTERED BRANCH POINTS (ROUTINES WHICH    */ 00950002
* /*         DO NOT RETURN CONTROL) WITHIN THE SYSTEM RESOURCES      */ 01000002
* /*         MANAGER COMPONENT.  THE IRACTLCL MACRO KEYS OFF THE     */ 01050002
* /*         RMEX DISPLACEMENTS TO ROUTE CONTROL TO THE REQUESTED    */ 01100002
* /*         BRANCH (I.E. EXTERNAL ENTRY) POINT.                     */ 01150002
* /*                                                                 */ 01200002
* /*   METHOD OF ACCESS - THE ADDRESS OF THE RMEX IS CONTAINED IN    */ 01250002
* /*         THE -RMCTRMEX- FIELD OF THE SYSTEM RESOURCES MANAGER    */ 01300002
* /*         CONTROL TABLE.                                          */ 01350002
* /*                                                                 */ 01400002
* /* *************************************************************** */ 01450002
*        %GOTO RMEXPLS2; /*                                             01500002
         AGO   .RMEXAL1                                              */ 01550002
* /* *************************************************************** */ 01600002
* /*                                                                 */ 01650002
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */ 01700002
* /*                                                                 */ 01750002
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */ 01800002
* /*                                                                 */ 02100002
* /*         USING ON RMEX GIVES ADDRESSABILITY TO ALL SYMBOLS.      */ 02150002
* /*                                                                 */ 02200002
* /*     PLS - %RMEXLEVL='USERLEVL' IF THE RMEX MAPPING IS TO BE     */ 02250002
* /*           CONCATENATED WITH A PREVIOUS DECLARATION, WITH THE    */ 02300002
* /*           RMEX BEING ASSIGNED THE INDICATED STRUCTURE LEVEL.    */ 02350002
* /*         - %RMEX9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED.  */ 02400002
* /*                                                                 */ 02450002
* /*         TO ACCESS AS A STANDALONE STRUCTURE DCL RMEXPTR PTR.    */ 02500002
* /*                                                                 */ 02550002
* /*   CHANGE ACTIVITY =                                             */ 02600002
* /*                                                                 */ 02650002
* /*   A000000-999999                                          Y02133*/ 02700002
* /*                                                                 */ 02750002
* /* *************************************************************** */ 02800002
* /*                                                                    02850002
.RMEXAL1 ANOP                                                           02900002
         SPACE 1                                                        02950002
         AIF   ('&DSECT' EQ 'NO').RMEXAL2                               03000002
RMEX     DSECT                                                          03050002
         AGO   .RMEXAL3                                                 03100002
.RMEXAL2 ANOP                                                           03150002
         DS    0D                                                       03200002
RMEX     EQU   *                                                        03250002
.RMEXAL3 ANOP                                                           03300002
         SPACE 1                                                        03350002
RMEXEVT  IRARMEP   DSECT=NO,EPN=EVT,NXT=EVT,ERR=XVT                     03390002
RMEXCTL  IRARMEP   DSECT=NO,EPN=CTL,NXT=CTL,ERR=XTL                     03430002
         SPACE 1                                                        03530002
RMEXI01  DC    V(IRARMI01) -       RTNE TO EXIT FROM SYSTM RSRCS MGR    03540002
RMEXCXX  DC    A(0) -              RESERVED                             03550002
RMEXCET  DC    V(IRARMCET) -       SYSTM RSRCS MGR TIMEREXP PROCESS     03560002
RMEXI48  DC    V(IRARMI48) -       SYSTM RSRCS MGR SYSEVENT PROCESS     03570002
RMEXRR1  DC    V(IRARMRR1) -       RECOVERY RTNE IF NOT HOLD SRM LOCK   03600002
RMEXRR2  DC    V(IRARMRR2) -       RECOVERY RTNE IF HAVE GOT SRM LOCK   03640002
RMEXXPE  DC    V(IRARMXPE) -       RECOVERY RTNE IF XMPOST ERROR        03660002
RMEXSRE  DC    V(IRARMSRE) -       RECOVERY RTNE IF SRM SRB IS PURGED   03680002
RMEXEND  DS    0D -                END OF RMEX TABLE                    03700002
RMEXLEN  EQU   RMEXEND-RMEX -      LENGTH OF RMEX TABLE                 03750002
         MEND                                                           03800002
*                                                                    */ 03850002
*%RMEXPLS2:  ;                                                          03900002
*        %IF RMEX9999 ¬= ','        /* DOES STRUCTURE CONTINUE       */ 03950002
*            %THEN %RMEX9999 = ';'; /* NO, END DECLARE STATEMENT     */ 04000002
*        %IF RMEXLEVL ¬= ''         /* IS STRUCTURE CONCATENATED     */ 04050002
*            %THEN %GOTO RMEXPLS3;  /* YES, OMIT DECLARE STATEMENT   */ 04100002
*   DCL                                                                 04150002
*     1 RMEX BASED(RMEXPTR) BDY(DWORD),                                 04200002
*            %GOTO RMEXPLS4;        /* SKIP USER-GIVEN LEVEL         */ 04250002
*%RMEXPLS3:  RMEXDUM = RMEXLEVL||' RMEX';  /* PICK UP GIVEN LEVEL    */ 04300002
*     RMEXDUM BDY(DWORD),                                               04350002
*%RMEXPLS4:  ;                                                          04400002
*       10 RMEPBEVT CHAR(16) BDY(DWORD), /* PERFORM SYSEVENT PROCESS */ 04450002
*         12 RMEXEVT PTR(31),       /* EVT RTNE ENTRY POINT ADDRESS  */ 04470002
*       10 RMEPBCTL CHAR(16) BDY(DWORD), /* ROUTE CONTROL WITHIN SRM */ 04530002
*         12 RMEXCTL PTR(31),       /* CTL RTNE ENTRY POINT ADDRESS  */ 04550002
*       10 RMEXI01  PTR(31),        /* NORM EXIT FROM SRM PROCESSING */ 04610002
*       10 RMEXCXX  PTR(31),        /* RESERVED                      */ 04620002
*       10 RMEXCET  PTR(31),        /* SRM TIMEREXP PROCESS ENTRY PT */ 04630002
*       10 RMEXI48  PTR(31),        /* SRM SYSEVENT PROCESS ENTRY PT */ 04640002
*       10 RMEXRR1  PTR(31),        /* RECOVERY RTNE IF W/O SRM LOCK */ 04650002
*       10 RMEXRR2  PTR(31),        /* RECOVERY RTNE IF HAV SRM LOCK */ 04700002
*       10 RMEXXPE  PTR(31),        /* RECOVERY RTNE IF XM-POST FAIL */ 04710002
*       10 RMEXSRE  PTR(31),        /* RECOVERY RTNE IF SRM SRB PURG */ 04720002
*       10 RMEXEND  CHAR(0) BDY(DWORD) /* END OF RMEX TABLE          */ 04750002
*   RMEX9999                                                            04800002
*   %RMEXLEN = 'LENGTH(RMEX)';      /* SYMBOLIC FOR LENGTH OF RMEX   */ 04850002
./  ADD  SSI=61180559,NAME=IRARMPT
*        %GOTO RMPTPLS1; /*                                             00050002
         MACRO                                                          00100002
         IRARMPT &DSECT=YES                                          */ 00150002
*%RMPTPLS1:  ;                                                          00200002
* /*                                                                 */ 00250002
* /* MACCOMP Z-4 SC1CX/PKD16                                         */ 00300040
* /* MACSTAT Z-4 75007/Z40BPSS                                       */ 00330040
* /* *************************************************************** */ 00400002
* /*                                                                 */ 00450002
* /*   MACRO NAME - IRARMPT                                          */ 00500002
* /*                                                                 */ 00550002
* /*   DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER PARAMETER TABLE   */ 00600002
* /*                                                                 */ 00650002
* /*   COPYRIGHT - NONE                                              */ 00700002
* /*                                                                 */ 00750002
* /*   STATUS - OS/VS2 RELEASE 4, 08/01/75, LEVEL=1                  */ 00800040
* /*                                                                 */ 00850002
* /*   FUNCTION - THE RMPT CONTAINS VALUES USED BY THE SYSTEM        */ 00900002
* /*         RESOURCES MANAGER CONTROL ALGORITHM TO DETERMINE        */ 00950002
* /*         THE CRITERIA AND THE FREQUENCY OF SWAP ANALYSIS.        */ 01000002
* /*                                                                 */ 01050002
* /*   METHOD OF ACCESS - THE ADDRESS OF THE RMPT IS CONTAINED       */ 01100002
* /*         IN THE -RMCTRMPT- FIELD OF THE SYSTEM RESOURCES         */ 01150002
* /*         MANAGER CONTROL TABLE.                                  */ 01200002
* /*                                                                 */ 01250002
* /* *************************************************************** */ 01300002
*        %GOTO RMPTPLS2; /*                                             01350002
         AGO   .RMPTAL1                                              */ 01400002
* /* *************************************************************** */ 01450002
* /*                                                                 */ 01500002
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */ 01550002
* /*                                                                 */ 01600002
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */ 01650002
* /*                                                                 */ 01700002
* /*           NOTE - THE BAL FORM OF THE MACRO IS CODED WITH        */ 01750002
* /*           'DC' INSTRUCTIONS, SO THAT THE MACRO MAY BE USED      */ 01800002
* /*           TO ASSEMBLE THE INITIAL FIELD VALUES FOR THE          */ 01850002
* /*           IRARMCNS MODULE, WHICH CONTAINS THE RMPT.             */ 01900002
* /*                                                                 */ 01950002
* /*         USING ON RMPT GIVES ADDRESSABILITY TO ALL SYMBOLS.      */ 02000002
* /*                                                                 */ 02050002
* /*     PLS - %RMPTLEVL='USERLEVL' IF THE RMPT MAPPING IS TO BE     */ 02100002
* /*           CONCATENATED WITH A PREVIOUS DECLARATION, WITH THE    */ 02150002
* /*           RMPT BEING ASSIGNED THE INDICATED STRUCTURE LEVEL.    */ 02200002
* /*         - %RMPT9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED.  */ 02250002
* /*                                                                 */ 02300002
* /*         TO ACCESS AS A STANDALONE STRUCTURE, DCL RMPTPTR PTR.   */ 02350002
* /*                                                                 */ 02400002
* /*   CHANGE ACTIVITY = @ZM43084                                    */ 02450040
* /*                     @ZM43085                                    */ 02460040
* /*                     @ZM43090                                    */ 02470140
* /*                                                                 */ 02500002
* /*   A000000-999999                                          Y02133*/ 02550002
* /*                                                                 */ 02600002
* /* *************************************************************** */ 02650002
* /*                                                                    02700002
.RMPTAL1 ANOP                                                           02750002
         SPACE 1                                                        02800002
         AIF   ('&DSECT' EQ 'NO').RMPTAL2                               02850002
RMPT     DSECT                                                          02900002
         AGO   .RMPTAL3                                                 02950002
.RMPTAL2 ANOP                                                           03000002
         DS    0D                                                       03050002
RMPT     EQU   *                                                        03100002
.RMPTAL3 ANOP                                                           03150002
         SPACE 1                                                        03200002
RMPTNAME DC    C'RMPT' -           BLOCK IDENTIFICATION                 03250002
RMPTCPU  DC    F'1' -     CPU RESOURCE FACTOR COEFFICIENT @ZM43084      03300040
RMPTIOC  DC    F'1' -       I/O RESOURCE FACTOR COEFFICIENT @ZM43084    03350040
RMPTERV  DC    F'1' -              ENQ RESIDENCY CPU SERVICE VALUE      03450002
RMPTIMN  DC    F'100' -            MINIMUM FOR INTERVAL SERVICE VALUE   04110002
RMPTTCS  DC    F'81920000' -       SYSTEM CLOCK STEP TIME               04473002
RMPTTOM  DC    F'1000' -           TOLERANCE FOR TIME PERIOD   @ZM43090 04486040
RMPTTOL  DC    F'500' -            TOLERANCE FOR TIME-DRIVEN   @ZM43090 04490040
RMPTRSV1  DC    F'0' -              RESERVED                   @ZM43085 04500040
RMPTRSV2  DC    H'0' -              RESERVED                   @ZM43085 04510040
RMPTRSV3 DC    H'0'  -             RESERVED                    @ZM43085 04540040
RMPTXCHT DC    F'256' -            SWAP EXCHANGE THRESHOLD     @Z40BPCH 04582240
RMPTSAET DC    F'1000' -           SWAP ANALYSYS EVALUATION THRESHOLD   04582440
*                                  (UNSIGNED TIME VALUE)       @Z40BPCH 04582640
RMPTWMET DC    F'1000' -           WLM EVALUATION THRESHOLD    @Z40BPCH 04582840
*                                  (UNSIGNED TIME VALUE)       @Z40BPCH 04583040
RMPTCPET DC    F'1000'             CPU EVALUATION THRESHOLD    @Z40BPCH 04583140
*                                  UNSIGNED TIME VALUE         @Z40BPCH 04593040
RMPTIOET DC    F'1000'             I/0 EVALUATION THRESHOLD    @Z40BPCH 04594040
*                                  UNSIGNED TIME VALUE         @Z40BPCH 04595040
RMPTOPC  DC    CL3'0.1'            CPU RESOURCE FACTOR COEF.   @ZM43084 04597040
RMPTOPI  DC    CL3'0.1'            I/O RESOURCE FACTOR COEF.   @ZM43084 04597640
RMPTOPE  DC    CL6'000001'         ENQ RESIDENCY CPU SERV. VAL @Z40BPCH 04599040
RMPTEND  DS    0D -                END OF RMPT                          04600002
RMPTLEN  EQU   RMPTEND-RMPT -      LENGTH OF RMPT                       04650002
         MEND                                                           04700002
*                                                                    */ 04750002
*%RMPTPLS2:  ;                                                          04800002
*        %IF RMPT9999 ¬= ','        /* DOES STRUCTURE CONTINUE       */ 04850002
*            %THEN %RMPT9999 = ';'; /* NO, END DECLARE STATEMENT     */ 04900002
*        %IF RMPTLEVL ¬= ''         /* IS STRUCTURE CONCATENATED     */ 04950002
*            %THEN %GOTO RMPTPLS3;  /* YES, OMIT DECLARE STATEMENT   */ 05000002
*   DCL                                                                 05050002
*     1 RMPT BASED(RMPTPTR) BDY(DWORD),                                 05100002
*            %GOTO RMPTPLS4;        /* SKIP USER-GIVEN LEVEL         */ 05150002
*%RMPTPLS3:  RMPTDUM = RMPTLEVL||' RMPT';  /* PICK UP GIVEN LEVEL    */ 05200002
*     RMPTDUM BDY(DWORD),                                               05250002
*%RMPTPLS4:  ;                                                          05300002
*       10 RMPTNAME CHAR(4),        /* BLOCK IDENTIFICATION - 'RMPT' */ 05350002
*       10 RMPTCPU  FIXED,          /* CPU RESOURCE FACTOR           */ 05400002
*       10 RMPTIOC  FIXED,          /* I/O RESOURCE FACTOR           */ 05450002
*       10 RMPTERV  FIXED,          /* ENQ RESIDENCE INTERVAL VALUE  */ 05550002
*       10 RMPTIMN  FIXED,          /* MIN INTERVAL SERVICE VALUE    */ 06210002
*       10 RMPTTCS  FIXED(32) UNSIGNED, /* SYSTEM CLOCK STEP TIME    */ 06573002
*       10 RMPTTOM  FIXED(32) UNSIGNED, /* TIME DRIVEN MINIMUM          06586040
*                                          TOLERANCE         @ZM43090*/ 06587040
*       10 RMPTTOL  FIXED(32) UNSIGNED, /* TIME DRIVEN INVOKE           06590040
*                                          TOLERANCE         @ZM43090*/ 06593040
*       10 RMPTRSV1 FIXED(32) UNSIGNED, /* RESERVED          @ZM43085*/ 06600040
*       10 RMPTRSV2 FIXED(15),      /* RESERVED              @ZM43085*/ 06610040
*       10 RMPTRSV3 PTR(15),        /* RESERVED              @ZM43085*/ 06620040
*       10 RMPTXCHT FIXED(31),      /* SWAP EXCHANGE THRESH. @Z40BPCH*/ 06660440
*       10 RMPTSAET FIXED(32),      /* SWAP ANAL. EVALUATION THRES.  */ 06660840
*                                   /* (UNSIGNED TIME VALUE) @Z40BPCH*/ 06661240
*       10 RMPTWMET FIXED(32),      /* WLM EVALUATION THRESH @Z40BPCH*/ 06661640
*                                   /* (UNSIGNED TIME VALUE  @Z40BPCH*/ 06662040
*       10 RMPTCPET FIXED(32),      /* CPU EVALUATION THRESHOLD         06662140
*                                     UNSIGNED TIME VALUE    @Z40BPCH*/ 06662240
*       10 RMPTIOET FIXED(32),       /* I/0 EVALUATION THRESHOLD        06662340
*                                        UNSIGNED TIME VALUE @Z40BPCH*/ 06662440
*       10 RMPTOPC CHAR(3),         /* CPU RESOURCE FACTOR   @Z40BPCH*/ 06662840
*                                   /* COEFFICIENT           @Z40BPCH*/ 06663240
*       10 RMPTOPI CHAR(3),         /* I/O RESOURCE FACTOR   @Z40BPCH*/ 06663640
*                                   /* COEFFICIENT           @Z40BPCH*/ 06664040
*       10 RMPTOPE CHAR(6),         /* ENQ RES CPU SERV VALU @Z40BPCH*/ 06664440
*       10 RMPTEND  CHAR(0) BDY(DWORD)   /* END OF RMPT              */ 06700002
*   RMPT9999                                                            06750002
*   %RMPTLEN = 'LENGTH(RMPT)';      /* SYMBOLIC FOR LENGTH OF RMPT   */ 06800002
./  ADD  SSI=60890514,NAME=IRARMQH
*%;  /*                                                                 00050002
         MACRO                                                          00100002
&NAME    IRARMQH   &DSECT=YES,     USE OTHER OPRNDS IF DSECT=NO SPECD  *00150002
               &QUE=               QUEUE (HEADER BLOCK) IDENTIFIER      00200002
.*                                                                      00250002
         GBLB  &IRAQHCM            IRARMQH COMMENTARY PRINT CONTROL     00300002
         AIF   (&IRAQHCM).RMQHAL1  BYPASS DUPLICATE IRARMQH INTRO       00350002
         IEZBITS                   INVOKE STANDARD BIT DECLARATIONS     00400002
*                                                                    */ 00450002
* /*                                                                 */ 00500002
* /* MACCOMP Z-4 SC1CX/PKD16                                         */ 00550040
* /* MACSTAT Z-4 75007/Z40PBSS                                       */ 00580040
* /* *************************************************************** */ 00650002
* /*                                                                 */ 00700002
* /*   MACRO NAME - IRARMQH                                          */ 00750002
* /*                                                                 */ 00800002
* /*   DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER QUEUE HEADER BLK  */ 00850002
* /*                                                                 */ 00900002
* /*   COPYRIGHT - NONE                                              */ 00950002
* /*                                                                 */ 01000002
* /*   STATUS - OS/VS2 RELEASE 4, 10/05/73, LEVEL=1                  */ 01050040
* /*                                                                 */ 01100002
* /*   FUNCTION - THE RMQH SERVES AS A DUMMY MEMBER ON THE SYSTEM    */ 01150002
* /*         RESOURCES MANAGER QUEUE IT DESCRIBES.  IT IS USED       */ 01200002
* /*         AS A STARTING POINT TO SEARCH THAT QUEUE, AND IT        */ 01250002
* /*         SIMPLIFIES DOUBLE-CHAINING IF THE QUEUE IS EMPTY.       */ 01300002
* /*                                                                 */ 01350002
* /*   METHOD OF ACCESS - THE ADDRESSES OF THE VARIOUS RMQH BLOCKS   */ 01400002
* /*         ARE CONTAINED IN THE RESPECTIVE -RMCTXXQE- FIELDS OF    */ 01450002
* /*         THE SYSTEM RESOURCES MANAGER CONTROL TABLE.             */ 01500002
* /*                                                                 */ 01550002
* /* *************************************************************** */ 01600002
*        %GOTO RMQHPLS2; /*                                             01650002
&IRAQHCM SETB  1                   IRARMQH COMMENTARY WAS PRINTED       01700002
         AGO   .RMQHAL1                                              */ 01750002
* /* *************************************************************** */ 01800002
* /*                                                                 */ 01850002
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */ 01900002
* /*                                                                 */ 01950002
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */ 02000002
* /*         - OTHERWISE, QUE='IDQE' TO SPECIFY THE QUEUE ID,        */ 02050002
* /*           WHERE 'ID' ARE TWO SUPPLIED CHARACTERS, AND           */ 02100002
* /*           'QE' ARE THE CHARACTERS 'Q' AND 'E'.                  */ 02150002
* /*                                                                 */ 02200002
* /*           IF DSECT=NO IS NOT CODED, USING ON RMQH WILL GIVE     */ 02250002
* /*           ADDRESSABILITY TO ALL SYMBOLS.                        */ 02300002
* /*                                                                 */ 02350002
* /*           IF DSECT=NO IS CODED, THE IRARMQH MACRO WILL GENER    */ 02400002
* /*           'DC' INSTRUCTIONS, SO THAT THE MACRO MAY BE USED TO   */ 02450002
* /*           ASSEMBLE INITIAL RMQH FIELD VALUES INTO THE IRARMCNS  */ 02500002
* /*           MODULE, WHICH CONTAINS THE VARIOUS RMQH BLOCKS.       */ 02550002
* /*                                                                 */ 02600002
* /*     PLS - %RMQHLEVL='USERLEVL' IF THE RMQH MAPPING IS TO BE     */ 02650002
* /*           CONCATENATED WITH A PREVIOUS DECLARATION, WITH THE    */ 02700002
* /*           RMQH BEING ASSIGNED THE INDICATED STRUCTURE LEVEL.    */ 02750002
* /*         - %RMQH9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED.  */ 02800002
* /*                                                                 */ 02850002
* /*         TO ACCESS AS A STANDALONE STRUCTURE DCL RMQHPTR PTR.    */ 02900002
* /*                                                                 */ 02950002
* /*   CHANGE ACTIVITY =                                             */ 03000002
* /*                                                                 */ 03050002
* /*   A000000-999999                                          Y02133*/ 03100002
* /* *************************************************************** */ 03150002
* /*                                                                    03200002
.RMQHAL1 ANOP                                                           03250002
         SPACE 1                                                        03300002
         AIF   ('&DSECT' EQ 'NO').RMQHAL2                               03350002
RMQH     DSECT                                                          03400002
RMQHNAME DS    CL4 -               QUEUE IDENTIFICATION                 03450002
RMQHFWD  DS    A -                 QUEUE FORWARD POINTER                03500002
RMQHBCK  DS    A -                 QUEUE BCKWARD POINTER                03550002
RMQHQVL  DS    F -                 QUEUE ENTRY ORDERING VALUE           03600002
RMQHFLG  DS    0CL4 -              QUEUE ENTRY DESCRIPTOR FLAGS         03650002
RMQHQFL  DS    BL1 -               QUEUE TRANSITION FLAGS               03700002
RMQHGOB  EQU   BIT2 -              TRANSITIONING BETWEEN QUEUES         03750002
RMQHSFL  DS    BL1 -               QUEUE CONTINUATION FLAGS             03800002
RMQHSCN  EQU   BIT7 -              QUEUE TERMINATION MARK               03850002
RMQHYFL  DS    BL1 -               QUEUE ENTRY TYPE FLAGS               03900002
RMQHAFL  DS    BL1 -               QUEUE ENTRY PROCESSING FLAGS         04000002
RMQHLST  DS    A -                 QUEUE LAST USED ENTRY POINTER        04050002
RMQHEND  DS    0D -                END OF RMQH                          04100002
RMQHLEN  EQU   RMQHEND-RMQH -      LENGTH OF RMQH                       04150002
         AGO   .RMQHAL4                                                 04200002
.RMQHAL2 ANOP                                                           04250002
         DS    0D                                                       04300002
IRA&QUE  EQU   *                                                        04350002
         AIF   ('&NAME' EQ '').RMQHAL3                                  04400002
&NAME    EQU   *                                                        04450002
.RMQHAL3 ANOP                                                           04500002
         SPACE 1                                                        04550002
         DS    0CL24 -             QUEUE HEADER BLOCK                   04600002
         DC    C'&QUE' -           QUEUE IDENTIFICATION                 04650002
         DC    A(IRA&QUE) -        QUEUE FORWARD POINTER                04700002
         DC    A(IRA&QUE) -        QUEUE BCKWARD POINTER                04750002
         DC    X'FFFFFFFF' -       QUEUE ENTRY ORDERING VALUE           04800002
         DC    X'00010000' -       QUEUE ENTRY DESC FLAGS      @Z40BPCH 04850040
         DC    A(IRA&QUE) -        QUEUE LAST USED ENTRY POINTER        04900002
.RMQHAL4 ANOP                                                           04950002
         MEND                                                           05000002
*                                                                    */ 05050002
*%RMQHPLS2:  ;                                                          05100002
*        %IF RMQH9999 ¬= ','        /* DOES STRUCTURE CONTINUE       */ 05150002
*            %THEN %RMQH9999 = ';'; /* NO, END DECLARE STATEMENT     */ 05200002
*        %IF RMQHLEVL ¬= ''         /* IS STRUCTURE CONCATENATED     */ 05250002
*            %THEN %GOTO RMQHPLS3;  /* YES, OMIT DECLARE STATEMENT   */ 05300002
*   DCL                                                                 05350002
*     1 RMQH BASED(RMQHPTR) BDY(DWORD),                                 05400002
*            %GOTO RMQHPLS4;        /* SKIP USER-GIVEN LEVEL         */ 05450002
*%RMQHPLS3:  RMQHDUM = RMQHLEVL||' RMQH';  /* PICK UP GIVEN LEVEL    */ 05500002
*     RMQHDUM BDY(DWORD),                                               05550002
*%RMQHPLS4:  ;                                                          05600002
*       10 RMQHNAME CHAR(4),        /* QUEUE IDENTIFICATION          */ 05650002
*       10 RMQHFWD  PTR(31),        /* QUEUE FORWARD POINTER         */ 05700002
*       10 RMQHBCK  PTR(31),        /* QUEUE BCKWARD POINTER         */ 05750002
*       10 RMQHQVL  FIXED UNSIGNED, /* QUEUE ENTRY ORDERING VALUE    */ 05800002
*       10 RMQHFLG  BIT(32) BDY(WORD), /* QUE ENTRY DESCRIPTR FLAGS  */ 05850002
*         12 RMQHQFL  BIT(8),       /* QUEUE TRANSITION FLAGS        */ 05900002
*           14 RMQHQR0 BIT(2),      /* RESERVED                      */ 05950002
*           14 RMQHGOB BIT(1),      /* TRANSITIONING BETWEEN QUEUES  */ 06000002
*           14 RMQHQR3 BIT(5),      /* RESERVED                      */ 06050002
*         12 RMQHSFL  BIT(8),       /* QUEUE CONTINUATION FLAGS      */ 06100002
*           14 RMQHSR0 BIT(7),      /* RESERVED                      */ 06150002
*           14 RMQHSCN BIT(1),      /* QUEUE TERMINATOR MARK         */ 06200002
*         12 RMQHYFL  BIT(8),       /* QUEUE ENTRY TYPE FLAGS        */ 06250002
*         12 RMQHAFL  BIT(8),       /* QUEUE ENTRY PROCESS FLAGS     */ 06400002
*       10 RMQHLST  PTR(31),        /* QUE LAST USED ENTRY POINTER   */ 06450002
*       10 RMQHEND  CHAR(0) BDY(DWORD)   /* END OF RMQH              */ 06500002
*   RMQH9999                                                            06550002
*   %RMQHLEN = 'LENGTH(RMQH)';      /* SYMBOLIC FOR LENGTH OF RMQH   */ 06600002
./  ADD  SSI=80240049,NAME=IRARMSB
*        %GOTO RMSBPLS1; /*                                             00050002
         MACRO                                                          00100002
         IRARMSB &DSECT=YES                                          */ 00150002
*%RMSBPLS1:  ;                                                          00200002
* /*                                                                 */ 00250002
* /* MACCOMP Z-4 SC1CX/PKD16                                         */ 00300040
* /* MACSTAT Z-4 75007/Z40BPSS                                       */ 00330040
* /* *************************************************************** */ 00400002
* /*                                                                 */ 00450002
* /*   MACRO NAME - IRARMSB                                          */ 00500002
* /*                                                                 */ 00550002
* /*   DESCRIPTIVE NAME - RESOURCES MANAGER SUBROUTINE VECTOR TABLE  */ 00600002
* /*                                                                 */ 00650002
* /*   COPYRIGHT - NONE                                              */ 00700002
* /*                                                                 */ 00750002
* /*   STATUS - OS/VS2 RELEASE 4, 07/30/75, LEVEL=1                  */ 00800040
* /*                                                                 */ 00850002
* /*   FUNCTION - THE RMSB CONTAINS THE ENTRY POINT ADDRESSES OF     */ 00900002
* /*         ALL EXTERNALLY ENTERED SUBROUTINES (ROUTINES WHICH      */ 00950002
* /*         RETURN CONTROL TO THE INVOKER) WITHIN THE SYSTEM        */ 01000002
* /*         RESOURCES MANAGER COMPONENT.  THE IRACTLCL MACRO        */ 01050002
* /*         KEYS OFF THE RMSB DISPLACEMENTS TO ROUTE CONTROL        */ 01100002
* /*         TO THE REQUESTED SUBROUTINE.                            */ 01150002
* /*                                                                 */ 01200002
* /*   METHOD OF ACCESS - THE ADDRESS OF THE RMSB IS CONTAINED IN    */ 01250002
* /*         THE -RMCTRMSB- FIELD OF THE SYSTEM RESOURCES MANAGER    */ 01300002
* /*         CONTROL TABLE.                                          */ 01350002
* /*                                                                 */ 01400002
* /* *************************************************************** */ 01450002
*        %GOTO RMSBPLS2; /*                                             01500002
         AGO   .RMSBAL1                                              */ 01550002
* /* *************************************************************** */ 01600002
* /*                                                                 */ 01650002
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */ 01700002
* /*                                                                 */ 01750002
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */ 01800002
* /*                                                                 */ 01850002
* /*           NOTE - THE BAL FORM OF THE MACRO IS CODED WITH        */ 01900002
* /*           'DC' INSTRUCTIONS, SO THAT THE MACRO MAY BE USED      */ 01950002
* /*           TO ASSEMBLE THE INITIAL FIELD VALUES INTO THE         */ 02000002
* /*           IRARMCNS MODULE, WHICH CONTAINS THE RMSB TABLE.       */ 02050002
* /*                                                                 */ 02100002
* /*         USING ON RMSB GIVES ADDRESSABILITY TO ALL SYMBOLS.      */ 02150002
* /*                                                                 */ 02200002
* /*     PLS - %RMSBLEVL='USERLEVL' IF THE RMSB MAPPING IS TO BE     */ 02250002
* /*           CONCATENATED WITH A PREVIOUS DECLARATION, WITH THE    */ 02300002
* /*           RMSB BEING ASSIGNED THE INDICATED STRUCTURE LEVEL.    */ 02350002
* /*         - %RMSB9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED.  */ 02400002
* /*                                                                 */ 02450002
* /*         TO ACCESS AS A STANDALONE STRUCTURE DCL RMSBPTR PTR.    */ 02500002
* /*                                                                 */ 02550002
* /*   CHANGE ACTIVITY = @ZA15018                                    */ 02600000
* /*                                                                 */ 02650002
* /*   A000000-999999                                          Y02133*/ 02700002
* /*                                                                 */ 02750002
* /* *************************************************************** */ 02800002
* /*                                                                    02850002
.RMSBAL1 ANOP                                                           02900002
         SPACE 1                                                        02950002
         AIF   ('&DSECT' EQ 'NO').RMSBAL2                               03000002
RMSB     DSECT                                                          03050002
         AGO   .RMSBAL3                                                 03100002
.RMSBAL2 ANOP                                                           03150002
         DS    0D                                                       03200002
RMSB     EQU   *                                                        03250002
.RMSBAL3 ANOP                                                           03300002
         SPACE 1                                                        03350002
RMSBI02  DC    V(IRARMI02) -       RTNE TO INVOKE ASCBCHAP SERVICE      03400002
RMSBI03  DC    V(IRARMI03) -       RTNE TO INVOKE REAL FRAME STEAL      03450002
RMSBI04  DC    V(IRARMI04) -       RTNE TO INVOKE STORAGE GET/FREE      03500002
RMSBI05  DC    V(IRARMI05) -       RTNE TO INVOKE TIME INTERVL SET      03550002
RMSBI06  DC    V(IRARMI06) -       RTNE TO INVOKE QUIESCE FOR SWAPOUT   03600002
RMSBI07  DC    V(IRARMI07) -       RTNE TO INVOKE SCHEDULE OF SWAP-IN   03650002
RMSBR24  DC    A(0) -              RESERVED                             03700002
RMSBI09  DC    V(IRARMI09) -       RTNE TO INVOKE RECORD TO OPERATOR    03750002
RMSBI10  DC    V(IRARMI10) -       RTNE TO INVOKE ABNORML TERMINATION   03760002
RMSBCRL  DC    V(IRARMCRL) -       RTNE TO RECEIVE SYS ALGRTHM REQ      03770002
RMSBCRN  DC    V(IRARMCRN) -       RTNE TO RECEIVE USER ACTION REQ      03800002
RMSBCRY  DC    V(IRARMCRY) -       RTNE TO RECEIVE USER ANLYZE REQ      03850002
RMSBWM5  DC    V(IRARMWM5) -       RTNE TO CHCK USER PERIOD CHANGES     03950002
RMSBWM1  DC    V(IRARMWM1) -       RTNE TO CALC USER SERVICE AMOUNT     04100002
RMSBWM4  DC    V(IRARMWM4) -       RTNE TO CALC USER NORMALIZD LEVL     04120002
RMSBWMK  DC    V(IRARMWMK) -       RTNE TO DETERMINE ANALYZ APPLICABL   04130002
RMSBWMN  DC    V(IRARMWMN) -       RTNE TO START A NEW USER TRANSACTN   04150002
RMSBWMO  DC    V(IRARMWMO) -       RTNE TO STOP CURRNT USER TRANSACTN   04250002
RMSBWMQ  DC    V(IRARMWMQ) -       RTNE TO PROCESS QUIESCE CMPLT EVT    04270002
RMSBWMR  DC    V(IRARMWMR) -       RTNE TO PROCESS RESTORE CMPLT EVT    04300002
RMSBWMY  DC    V(IRARMWMY) -       RTNE TO PROCESS SYSTM TIME ADJUST    04450002
RMSBTRC  DC    V(IRARMTRC) -       ADDR OF ADDR TO TRACE                04470000
*                                   SRM INVOKES              @ZA15018   04480000
RMSBWR4  DC    V(IRARMNOP) -       ADDR OF RTNE TO CALC ACTIVTY MEASR   04500002
RMSBWR6  DC    V(IRARMNOP) -       ADDR OF RTNE TO RECALC ACTIV RATE    04570002
RMSBSET  DC    V(IRARMNOP) -       ADDR OF RTNE TO PROCESS NEWIPS EVT   04650002
RMSBNOP  DC    V(IRARMNOP) -       RTNE TO RETURN TO INVOKER            04670002
RMSBRA6  DC    A(0) -              RESERVED                             04750002
RMSBCL0  DC    V(IRARMCL0) -       RTNE TO ADJ CPU UTIL WHEN SWAP USR   04800002
RMSBIL0  DC    V(IRARMIL0) -       RTNE TO COMPUTE USER I/O PROFILE     04850002
RMSBRA9  DC    F'0' -              RESERVED                    @Z40BPCH 04870040
RMSBEND  DS    0D -                END OF RMSB TABLE                    04900002
RMSBLEN  EQU   RMSBEND-RMSB -      LENGTH OF RMSB TABLE                 04950002
         MEND                                                           05000002
*                                                                    */ 05050002
*%RMSBPLS2:  ;                                                          05100002
*        %IF RMSB9999 ¬= ','        /* DOES STRUCTURE CONTINUE       */ 05150002
*            %THEN %RMSB9999 = ';'; /* NO, END DECLARE STATEMENT     */ 05200002
*        %IF RMSBLEVL ¬= ''         /* IS STRUCTURE CONCATENATED     */ 05250002
*            %THEN %GOTO RMSBPLS3;  /* YES, OMIT DECLARE STATEMENT   */ 05300002
*   DCL                                                                 05350002
*     1 RMSB BASED(RMSBPTR) BDY(DWORD),                                 05400002
*            %GOTO RMSBPLS4;        /* SKIP USER-GIVEN LEVEL         */ 05450002
*%RMSBPLS3:  RMSBDUM = RMSBLEVL||' RMSB';  /* PICK UP GIVEN LEVEL    */ 05500002
*     RMSBDUM BDY(DWORD),                                               05550002
*%RMSBPLS4:  ;                                                          05600002
*       10 RMSBI02  PTR(31),        /* INVOKE ASCBCHAP SERVICE RTNE  */ 05650002
*       10 RMSBI03  PTR(31),        /* INVOKE REAL FRAME STEAL RTNE  */ 05700002
*       10 RMSBI04  PTR(31),        /* INVOKE STORAGE GET/FREE RTNE  */ 05750002
*       10 RMSBI05  PTR(31),        /* INVOKE TIME INTERVL SET RTNE  */ 05800002
*       10 RMSBI06  PTR(31),        /* INVOKE QUIESCE FOR SWAPOUT    */ 05850002
*       10 RMSBI07  PTR(31),        /* INVOKE SCHEDULE OF SWAP-IN    */ 05900002
*       10 RMSBR24  PTR(31),        /* RESERVED                      */ 05950002
*       10 RMSBI09  PTR(31),        /* INVOKE RECORD TO OPERATOR     */ 06000002
*       10 RMSBI10  PTR(31),        /* INVOKE ABNORMAL TERMINATION   */ 06010002
*       10 RMSBCRL  PTR(31),        /* RECEIVE SYS ALGRTHM REQUEST   */ 06020002
*       10 RMSBCRN  PTR(31),        /* RECEIVE USER ACTION REQUEST   */ 06050002
*       10 RMSBCRY  PTR(31),        /* RECEIVE USER ANLYZE REQUEST   */ 06100002
*       10 RMSBWM5  PTR(31),        /* CHECK USER FOR PERIOD CHANGE  */ 06200002
*       10 RMSBWM1  PTR(31),        /* CALCULAT USER SERVICE AMOUNT  */ 06350002
*       10 RMSBWM4  PTR(31),        /* CALCULAT USER NORMALIZD LEVL  */ 06370002
*       10 RMSBWMK  PTR(31),        /* DETERMINE ANLZ APPLICABILITY  */ 06380002
*       10 RMSBWMN  PTR(31),        /* START A NEW USER TRANSACTION  */ 06400002
*       10 RMSBWMO  PTR(31),        /* STOP CURRNT USER TRANSACTION  */ 06500002
*       10 RMSBWMQ  PTR(31),        /* PROCESS QUIESCE CMPLT EVENT   */ 06520002
*       10 RMSBWMR  PTR(31),        /* PROCESS RESTORE CMPLT EVENT   */ 06550002
*       10 RMSBWMY  PTR(31),        /* PROCESS SYSTEM TIME ADJUST    */ 06700002
*       10 RMSBTRC  PTR(31),    /* ADDR OF ADDR TO TRACE SRM INVOKES    06720000
*                                                            @ZA15018*/ 06730000
*       10 RMSBWR4  PTR(31),        /* CALCULATE ACTIVITY MEASRMNT   */ 06750002
*       10 RMSBWR6  PTR(31),        /* RECALCULATE ACTIVITY RATE     */ 06820002
*       10 RMSBSET  PTR(31),        /* PROCESS NEWIPS SYSEVENT RTN   */ 06900002
*       10 RMSBNOP  PTR(31),        /* RETURN TO INVOKING ROUTINE    */ 06920002
*       10 RMSBRA6  PTR(31),        /* RESERVED                      */ 07000002
*       10 RMSBCL0  PTR(31),        /* ADJ CPU UTIL WHEN SWAP USER   */ 07050002
*       10 RMSBIL0  PTR(31),        /* COMPUTE USER I/O PROFILE      */ 07100002
*       10 RMSBRA9  PTR(31),        /* RESERVED              @Z40BPCH*/ 07120040
*       10 RMSBEND  CHAR(0) BDY(DWORD) /* END OF RMSB TABLE          */ 07150002
*   RMSB9999                                                            07200002
*   %RMSBLEN = 'LENGTH(RMSB)';      /* SYMBOLIC FOR LENGTH OF RMSB   */ 07250002
./  ADD  SSI=61140585,NAME=IRARQSRV
*        %GOTO RQSVPLS1; /*                                             00050040
         MACRO                                                          00100040
         IRARQSRV &DSECT=YES                                         */ 00150040
*%RQSVPLS1:  ;                                                          00200040
* /*                                                                 */ 00250040
* /* MACCOMP Z-4 SC1CX/PKD16                                         */ 00300040
* /* MACSTAT Z-4 75007/Z40BPSS                                       */ 00330040
* /* *************************************************************** */ 00400040
* /*                                                                 */ 00450040
* /*   MACRO NAME - IRARQSRV                                         */ 00500040
* /*                                                                 */ 00550040
* /*   DESCRIPTIVE NAME - REQUEST SERVICE STORAGE AREA               */ 00600040
* /*                                                                 */ 00650040
* /*   COPYRIGHT - NONE                                              */ 00700040
* /*                                                                 */ 00750040
* /*   STATUS - OS/VS2 RELEASE 4, 04/07/76, LEVEL=2                  */ 00770040
* /*                                                                 */ 00850040
* /*   FUNCTION - THE RQSV PROVIDES A STORAGE AREA TO TEMPORARILY    */ 00900040
* /*         SAVE INFORMATION GATHERED BY SYSEVENT 49 SO THAT IT CAN */ 00920040
* /*         LATER STORE IT INTO SMF AREA UNDER A DIFFERENT KEY.     */ 00950040
* /*                                                                 */ 01050040
* /*   METHOD OF ACCESS - THE ADDRESS OF THE RQSV IS CONTAINED IN    */ 01350040
* /*         THE -RMCTRQSV- FIELD OF THE SYSTEM RESOURCES MANAGER    */ 01400040
* /*         CONTROL TABLE.                                          */ 01450040
* /*                                                                 */ 01500040
* /* *************************************************************** */ 01550040
*        %GOTO RQSVPLS2; /*                                             01600040
         AGO   .RQSVAL1                                              */ 01650040
* /* *************************************************************** */ 01700040
* /*                                                                 */ 01750040
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */ 01800040
* /*                                                                 */ 01850040
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */ 01900040
* /*                                                                 */ 01950040
* /*         USING ON RQSV GIVES ADDRESSABILITY TO ALL SYMBOLS.      */ 02000040
* /*                                                                 */ 02050040
* /*     PLS - %RQSVLEVL='USERLEVL' IF THE RQSV MAPPING IS TO BE     */ 02100040
* /*           CONCATENATED WITH A PREVIOUS DECLARATION, WITH THE    */ 02150040
* /*           RQSV BEING ASSIGNED THE INDICATED STRUCTURE LEVEL.    */ 02200040
* /*         - %RQSV9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED.  */ 02250040
* /*                                                                 */ 02300040
* /*         TO ACCESS AS A STANDALONE STRUCTURE DCL RQSVPTR PTR.    */ 02350040
* /*                                                                 */ 02400040
* /*   CHANGE ACTIVITY =                                             */ 02450040
* /*                                                                 */ 02500040
* /*   A000000-999999                                        @Z40BPEB*/ 02550040
* /*                                                                 */ 02600040
* /* *************************************************************** */ 02650040
* /*                                                                    02700040
.RQSVAL1 ANOP                                                           02750040
         SPACE 1                                                        02800040
         AIF   ('&DSECT' EQ 'NO').RQSVAL2                               02850040
RQSV     DSECT                                                          02900040
         AGO   .RQSVAL3                                                 02950040
.RQSVAL2 ANOP                                                           03000040
         DS    0D                                                       03050040
RQSV     EQU   *                                                        03100040
.RQSVAL3 ANOP                                                           03150040
         SPACE 1                                                        03200040
RQSVDATA DS    0F                 STORAGE FOR EVENT 49      @ZM43092    03220040
         ORG   RQSVDATA                                     @ZM43092    03250040
RQSVSRV  DS    F -                 TRANSACTION SERVICE                  03300040
RQSVTIM  DS    F -                 TRANSACTION ACTIVE TIME              03350040
RQSVPGSC DS    F -                 PGN AND TRANSACTION COUNT            03370040
RQSVSRT  DS    F -                 SESSION RESIDENCY TIME               03450040
RQSVRSV  DS    F -                 RESERVED FOR FUTURE                  03500040
RQSVEND  DS    0D -                END OF RQSV                          03550040
RQSVLEN  EQU   RQSVEND-RQSV -      LENGTH OF RQSV                       04400040
         MEND                                                           04450040
*                                                                    */ 04500040
*%RQSVPLS2:  ;                                                          04550040
*        %IF RQSV9999 ¬= ','        /* DOES STRUCTURE CONTINUE       */ 04600040
*            %THEN %RQSV9999 = ';'; /* NO, END DECLARE STATEMENT     */ 04650040
*        %IF RQSVLEVL ¬= ''         /* IS STRUCTURE CONCATENATED     */ 04700040
*            %THEN %GOTO RQSVPLS3;  /* YES, OMIT DECLARE STATEMENT   */ 04750040
*   DCL                                                                 04800040
*     1 RQSV BASED(RQSVPTR) BDY(WORD),                                  04850040
*            %GOTO RQSVPLS4;        /* SKIP USER-GIVEN LEVEL         */ 04900040
*%RQSVPLS3:  RQSVDUM = RQSVLEVL||' RQSV';  /* PICK UP GIVEN LEVEL    */ 04950040
*     RQSVDUM BDY(WORD),                                                05000040
*%RQSVPLS4:  ;                                                          05050040
*     5  RQSVDATA CHAR(16) BDY(WORD),  /* SMF DATA AREA      @ZM43092*/ 05060040
*      10 RQSVSRV FIXED(31),     /* TOTAL TRANSACTION SERVICE     */    05070040
*      10 RQSVTIM FIXED(31),     /* TRANSACTION ACTIVE TIME       */    05100040
*       10 RQSVPGSC CHAR(4) BDY(WORD), /* PGN AND TRANSACTION COUNT */  05150040
*          15 RQSVPGN FIXED(15),   /* PEFORMANCE GROUP NUMBER     */    05200040
*          15 RQSVTRC FIXED(15),   /* TRANSACTION COUNT           */    05250040
*       10 RQSVSRT FIXED(31),      /* SESSION RESIDENCY TIME      */    05280040
*     5    RQSVRSV FIXED(31),         /* RESERVED                 */    05350040
*     5    RQSVEND CHAR(0)            /* END OF STORAGE AREA         */ 05400040
*   RQSV9999                                                            05500040
*   %RQSVLEN = 'LENGTH(RQSV)';      /* SYMBOLIC FOR LENGTH OF RQSV   */ 05550040
./  ADD  SSI=80940204,NAME=IRARRPA
*        %GOTO RRPAPLS1; /*                                             00050002
         MACRO                                                          00100002
         IRARRPA   &DSECT=YES                                           00150002
         IEZBITS                                                     */ 00200002
*%RRPAPLS1:  ;                                                          00250002
* /*                                                                 */ 00300002
* /* MACCOMP Z-4 SC1CX/PKD16                                         */ 00350040
* /* MACSTAT Z-4 75007/Z40BPSS                                       */ 00380040
* /* *************************************************************** */ 00450002
* /*                                                                 */ 00500002
* /*   MACRO NAME - IRARRPA                                          */ 00550002
* /*                                                                 */ 00600002
* /*   DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER RECOVERY ROUTINE  */ 00650002
* /*                      PARAMETER AREA                             */ 00700002
* /*                                                                 */ 00750002
* /*   COPYRIGHT - NONE                                              */ 00800002
* /*                                                                 */ 00850002
* /*   STATUS - OS/VS2 RELEASE 4, 10/28/75, LEVEL=1                  */ 00900040
* /*                                                                 */ 00950002
* /*   FUNCTION - THE RRPA IDENTIFIES THE INVOCATION THAT RESULTED   */ 01000002
* /*         IN SYSTEM RESOURCES MANAGER PROCESSING, AND SPECIFIES   */ 01050002
* /*         THE INTERNAL ROUTINE CURRENTLY IN CONTROL.  THE RRPA    */ 01100002
* /*         PRESERVES STATUS FOR EXIT FROM THE SYSTEM RESOURCES     */ 01150002
* /*         MANAGER.                                                */ 01200002
* /*                                                                 */ 01250002
* /*   METHOD OF ACCESS - BY CONVENTION WITHIN SYSTEM RESOURCES      */ 01300002
* /*         MANAGER ROUTINES, REGISTER 3 IS RESERVED TO CONTAIN     */ 01350002
* /*         THE ADDRESS OF THE APPLICABLE RRPA.                     */ 01400002
* /*                                                                 */ 01450002
* /* *************************************************************** */ 01500002
*        %GOTO RRPAPLS2; /*                                             01550002
         AGO   .RRPAAL1                                              */ 01600002
* /* *************************************************************** */ 01650002
* /*                                                                 */ 01700002
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */ 01750002
* /*                                                                 */ 01800002
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */ 01850002
* /*                                                                 */ 01900002
* /*         USING ON RRPA GIVES ADDRESSABILITY TO ALL SYMBOLS.      */ 01950002
* /*                                                                 */ 02000002
* /*     PLS - %RRPALEVL='USERLEVL' IF THE RRPA MAPPING IS TO BE     */ 02050002
* /*         CONCATENATED WITH A PREVIOUS DECLARATION, WITH THE      */ 02100002
* /*         RRPA BEING ASSIGNED THE INDICATED STRUCTURE LEVEL.      */ 02150002
* /*         - %RRPA9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED.  */ 02200002
* /*                                                                 */ 02250002
* /*           NOTE - INASMUCH AS THE RRPA AREA IS POINTED TO        */ 02300002
* /*           DIRECTLY BY A REGISTER, ONLY A STRUCTURE LEVEL OF     */ 02350002
* /*           '1' (ONE) SHOULD BE USED FOR THE RRPA.                */ 02400002
* /*                                                                 */ 02450002
* /*         TO ACCESS AS A STANDALONE STRUCTURE, DCL RRPAPTR PTR.   */ 02500002
* /*                                                                 */ 02550002
* /*   CHANGE ACTIVITY = @ZA29015                                    */ 02600000
* /*                                                                 */ 02650002
* /*   A000000-999999                                          Y02133*/ 02700002
* /*                                                                 */ 02750002
* /* *************************************************************** */ 02800002
* /*                                                                    02850002
.RRPAAL1 ANOP                                                           02900002
         SPACE 1                                                        02950002
         AIF   ('&DSECT' EQ 'NO').RRPAAL2                               03000002
RRPA     DSECT                                                          03050002
         AGO   .RRPAAL3                                                 03100002
.RRPAAL2 ANOP                                                           03150002
         DS    0D                                                       03200002
RRPA     EQU   *                                                        03250002
.RRPAAL3 ANOP                                                           03300002
         SPACE 1                                                        03350002
RRPAINC  DS    0F -                EQUIVALENT OF REG 0 AT ENTRY         03400002
RRPAASD  DS    H -                 ASID FOR ORIGINAL ENTRY              03450002
RRPAVPGN DS    0X -                VERIFY PGN FOR JOB SELECT   @Z40BPCH 03500000
RRPAFLG0 DS    B -                 FLAG BYTE FOR MEMDEL        @ZA29015 03510000
RRPANSWI EQU   BIT0 -              =1 FOR MEMDEL TYPE=NOSWIN   @ZA29015 03520000
RRPACOD  DS    C -                 ORIGINAL ENTRY SYSEVENT CODE         03550002
RRPAINP  DS    0A -                INPUT PARAMETER ADDRESS              03600002
RRPAVLU  DS    F -                 EQUIVALENT OF REG 1 AT EXIT          03650002
RRPAFLG  DS    0BL2 -              ROUTINE STATUS FLAGS                 03700002
         DS    B -                 ENTRY STATUS                         03750002
RRPADSB  EQU   BIT0 -              DISABLED BRANCH ENTRY                03800002
RRPAENB  EQU   BIT1 -              ENABLED BRANCH ENTRY                 03850002
RRPASVC  EQU   BIT2 -              SVC CALL ENTRY                       03900002
RRPADSP  EQU   BIT3 -              DISPATCHING REQUIRED                 03950002
RRPAOPT  EQU   BIT6 -              SRM LOCK CURRENTLY HELD              03970002
         DS    B -                 CURRENT STATUS                       04050002
RRPAWAR  EQU   BIT1 -              WORKLOAD ACTIVITY RTNE CURR          04150002
RRPAIPS  EQU   BIT2 -              IPS PROCESSING RTNE CURR             04200002
RRPACTL  EQU   BIT4 -              IRARMCTL WILL PROCESS 2ND FAILURE    04250002
RRPARTI  EQU   BIT5 -              RECOVERY TERMINATION INDICATOR       04260002
RRPARFI  EQU   BIT6 -              RECOVERY FAILURE INDICATOR           04280002
RRPARCI  EQU   BIT7 -              RECURSION INDICATOR                  04310002
RRPAKEY  DS    C -                 ORIGINAL ENTRY PROTECT KEY           04350002
RRPARTC  DS    C -                 RETURN CODE FOR FINAL EXIT           04400002
RRPATOD  DS    F -                 TIME OF DAY AT ENTRY                 04450002
RRPAINS  DS    0F -                BRANCH ENTRY SAVE AREA ADDRESS       04500002
RRPARTN  DS    F -                 SVC ENTRY RETURN POINT ADDRESS       04520002
RRPAEPA  DS    A -                 RMEP ADDRESS OF RTNE IN CONTROL      04550002
RRPAEND  DS    0D -                END OF RRPA                          04600002
RRPALEN  EQU   RRPAEND-RRPA -      LENGTH OF RRPA                       04650002
         MEND                                                           04700002
*                                                                    */ 04750002
*%RRPAPLS2:  ;                                                          04800002
*        %IF RRPA9999 ¬= ','        /* DOES STRUCTURE CONTINUE       */ 04850002
*            %THEN %RRPA9999 = ';'; /* NO, END DECLARE STATEMENT     */ 04900002
*        %IF RRPALEVL ¬= ''         /* IS STRUCTURE CONCATENATED     */ 04950002
*            %THEN %GOTO RRPAPLS3;  /* YES, OMIT DECLARE STATEMENT   */ 05000002
*   DCL                                                                 05050002
*     1 RRPA BASED(RRPAPTR) BDY(DWORD),                                 05100002
*            %GOTO RRPAPLS4;        /* SKIP USER-GIVEN LEVEL         */ 05150002
*%RRPAPLS3:  RRPADUM = RRPALEVL||' RRPA';  /* PICK UP GIVEN LEVEL    */ 05200002
*     RRPADUM BDY(DWORD),                                               05250002
*%RRPAPLS4:  ;                                                          05300002
*       10 RRPAINC  CHAR(4) BDY(WORD), /* REGISTER 0 AT ENTRY        */ 05350002
*         12 RRPAASD  BIT(16) BDY(WORD), /* ASID FOR ORIGINAL ENTRY  */ 05400002
*         12 RRPAVPGN PTR(8),       /* VERIFY PGN FOR JOB SELECT        05450040
*                                                            @Z40BPCH*/ 05460040
*           14 RRPAFLG0 BIT(8),     /* FLAG BYTE FOR MEMDEL  @ZA29015*/ 05468000
*             16 RRPANSWI BIT(1),   /* =1 FOR MEMDEL TYPE=NOSWIN        05476000
*                                                            @ZA29015*/ 05484000
*             16 * BIT(7),          /* RESERVED              @ZA29015*/ 05492000
*         12 RRPACOD  PTR(08),      /* ORIGINAL ENTRY SYSEVENT CODE  */ 05500002
*       10 RRPAINP  PTR(31),        /* INPUT PARAMETER ADDRS         */ 05550002
*         12 RRPAVLU  CHAR(4) BDY(WORD), /* INPUT PARAMETER VALUE    */ 05600002
*       10 RRPAFLG  BIT(16) BDY(WORD), /* ROUTINE STATUS FLAGS       */ 05650002
*         12 RRPADSB  BIT(1),       /* ORIGINAL ENTRY DISABLED BR    */ 05700002
*         12 RRPAENB  BIT(1),       /* ORIGINAL ENTRY ENABLED BR     */ 05750002
*         12 RRPASVC  BIT(1),       /* ORIGINAL ENTRY VIA SVC        */ 05800002
*         12 RRPADSP  BIT(1),       /* DISPATCHING REQUIRED          */ 05850002
*         12 RRPAF04  BIT(1),       /* RESERVED                      */ 05870002
*         12 RRPAF05  BIT(1),       /* RESERVED             @Z40BPCH */ 05890040
*         12 RRPAOPT  BIT(1),       /* SRM LOCK CURRENTLY HELD       */ 05910002
*         12 RRPAF07  BIT(2),       /* RESERVED                      */ 05950002
*         12 RRPAWAR  BIT(1),       /* WORKLOD ACTIVITY RTNE CURRENT */ 06050002
*         12 RRPAIPS  BIT(1),       /* IPS PROCESS ROUTINE CURRENT   */ 06100002
*         12 RRPAF11  BIT(1),       /* RESERVED                      */ 06150002
*         12 RRPACTL  BIT(1),       /* INVOKE IRARMCTL FOR 2ND FAIL  */ 06200002
*         12 RRPARTI  BIT(1),       /* RECOVERY TERMINATE INDICATOR  */ 06250002
*         12 RRPARFI  BIT(1),       /* RECOVERY FAILURE INDICATOR    */ 06260002
*         12 RRPARCI  BIT(1),       /* RECURSION INDICATOR           */ 06270002
*       10 RRPAKEY  CHAR(1),        /* ORIGINAL ENTRY PROTECT KEY    */ 06300002
*       10 RRPARTC  PTR(08),        /* RETURN CODE FOR FINAL EXIT    */ 06350002
*       10 RRPATOD  FIXED(32) UNSIGNED, /* TIME OF DAY AT ENTRY      */ 06400002
*       10 RRPAINS  PTR(31),        /* BRANCH ENTRY SAVE AREA ADDR   */ 06430002
*         12 RRPARTN  PTR(31),      /* SVC ENTRY RETURN POINT ADDR   */ 06460002
*       10 RRPAEPA  PTR(31),        /* RMEP ADDR OF RTNE IN CONTROL  */ 06500002
*       10 RRPAEND  CHAR(0) BDY(DWORD)   /* END OF RRPA              */ 06550002
*   RRPA9999                                                            06600002
*   %RRPALEN = 'LENGTH(RRPA)';      /* SYMBOLIC FOR LENGTH OF RRRPA  */ 06650002
./  ADD  SSI=60790657,NAME=IRAWAMT
*%;  /*                                                                 00050002
         MACRO                                                          00100002
         IRAWAMT   &DSECT=YES                                           00150002
         AGO   .WAMTAL0                                              */ 00200002
*@       LIST  PUSH;                /* SAVE LISTING STATUS FOR WAMT  */ 00250002
*        %IF WAMTSFX = ''           /* IS NAMING CHARACTER OMITTED   */ 00300002
*            %THEN %WAMTSFX = ' ';  /* YES, INSERT PLACEHOLDER BLANK */ 00350002
*        %IF WAMTSFX ¬= ' '         /* IS THIS THE DUPLICATE INCLUDE */ 00400002
*            %THEN %WAMTDUM = '@       LIST  OFF '; /* BYP INTRO CMT */ 00450002
*        %ELSE     %WAMTDUM = '@       LIST  PUSH'; /* DMY CNTRL CMT */ 00500002
*WAMTDUM;                                                               00550002
*        %IF WAMTSFX = ' '          /* IS THIS  THE FIRST INCLUDE    */ 00600002
*            %THEN %WAMTDUM = '@       LIST  POP '; /* PRT INTRO CMT */ 00650002
*WAMTDUM;                                                               00700002
*%;  /*                                                                 00750002
.WAMTAL0 ANOP                                                        */ 00800002
* /* MACCOMP Z-4 SC1CX/PKD16                                         */ 00850040
* /* MACSTAT Z-4 75007/Z40BPSS                                       */ 00880040
* /* *************************************************************** */ 00950002
* /*                                                                 */ 01000002
* /*   MACRO NAME - IRAWAMT                                          */ 01050002
* /*                                                                 */ 01100002
* /*   DESCRIPTIVE NAME - WORKLOAD ACTIVITY MEASUREMENTS TABLE       */ 01150002
* /*                                                                 */ 01200002
* /*   COPYRIGHT - NONE                                              */ 01250002
* /*                                                                 */ 01300002
* /*   STATUS - OS/VS2 RELEASE 4, 09/23/75, LEVEL=1                  */ 01350040
* /*                                                                 */ 01400002
* /*   FUNCTION - THE WAMT PROVIDES THE STORAGE AREA IN WHICH        */ 01450002
* /*         INFORMATION IS COLLECTED BY THE SYSTEM RESOURCES        */ 01500002
* /*         MANAGER FOR USE BY THE SYSTEM ACTIVITY MEASUREMENT      */ 01550002
* /*         FACILITY.  THE WAMT, AND THE MODULE WHICH UPDATES       */ 01600002
* /*         IT, ARE SUPPLIED BY THE SYSTEM ACTIVITY MEASURMENT      */ 01650002
* /*         FACILITY FOR THE DURATION OF THE WORKLOAD ACTIVITY      */ 01700002
* /*         DATA GATHERING OPERATION.                               */ 01750002
* /*                                                                 */ 01800002
* /*   METHOD OF ACCESS - THE ADDRESS OF THE WAMT IS CONTAINED IN    */ 01850002
* /*         THE -RMCTWAMT- FIELD OF THE SYSTEM RESOURCES MANAGER    */ 01900002
* /*         CONTROL TABLE.  THE OFFSET OF THE FIRST WAMPPGP FOR     */ 01950002
* /*         A PERFORMANCE GROUP IS CONTAINED IN THE WAMTNDX ENTRY   */ 02000002
* /*         CORRESPONDING TO THE PERFORMANCE GROUP NUMBER.          */ 02050002
* /*                                                                 */ 02100002
* /* *************************************************************** */ 02150002
*%;  /*                                                                 02200002
         AGO   .WAMTAL1                                              */ 02250002
*@       LIST  OFF;                 /* BYPASS EXPLANATORY COMMENTS   */ 02300002
* /* *************************************************************** */ 02350002
* /*                                                                 */ 02400002
* /*   CONSTRUCTION METHOD - THE WAMPPGP'S ARE ASSIGNED CONTIGUOUS   */ 02450002
* /*         STORAGE, WITH THE WAMPPGP FOR THE 2ND PERIOD IN A       */ 02500002
* /*         PERFORMANCE GROUP FOLLOWING THE WAMPPGP FOR THE 1ST     */ 02550002
* /*         PERIOD, ETC., AND WITH THE 1ST WAMPPGP OF THE NEXT      */ 02600002
* /*         PERFORMANCE GROUP FOLLOWING THE LAST WAMPPGP OF THE     */ 02650002
* /*         PREVIOUS PERFORMANCE GROUP.  THE NUMBER OF ENTRIES      */ 02700002
* /*         IN THE WAMTNDX ARRAY IS 2 MORE THAN THE HIGHEST PER-    */ 02750002
* /*         FORMANCE GROUP NUMBER.  WAMTNX0 HOLDS THE OFFSET OF     */ 02800002
* /*         A WAMPPGP RESERVED FOR PERFORMANCE GROUP ZERO.  THE     */ 02820002
* /*         FIRST POSITION IN THE WAMTNDX ARRAY IS DECLARED AS      */ 02840002
* /*         COINCIDING WITH THE WAMTNX1 FIELD.  THEREAFTER, EACH    */ 02860002
* /*         SUCCESSIVE WAMTNDX ARRAY ENTRY CONTAINS THE OFFSET      */ 02880002
* /*         OF THE POSITION FOLLOWING THE LAST WAMPPGP ASSIGNED     */ 02920002
* /*         TO LOWER-NUMBERED PERFORMANCE GROUPS.                   */ 02960002
* /*                                                                 */ 03000002
* /*         THE NUMBER OF PERIODS IN A PERFORMANCE GROUP CAN BE     */ 03050002
* /*         OBTAINED BY SUBTRACTING ITS WAMTNDX FIELD FROM THE      */ 03100002
* /*         NEXT ADJACENT WAMTNDX FIELD, AND DIVIDING BY THE        */ 03150002
* /*         WAMPPGP SIZE.                                           */ 03200002
* /*                                                                 */ 03250002
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */ 03300002
* /*                                                                 */ 03350002
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */ 03400002
* /*                                                                 */ 03450002
* /*         USING ON WAMT GIVES ADDRESSABILITY TO WAMT SYMBOLS.     */ 03500002
* /*         USING ON WAMP GIVES ADDRESSABILITY TO WAMP SYMBOLS.     */ 03550002
* /*                                                                 */ 03600002
* /*     PLS - %WAMTSFX='USERCHAR' IF THE INDICATED CHARACTER IS     */ 03650002
* /*           TO BE APPENDED TO ALL NAMES IN THE MAPPING, THEREBY   */ 03700002
* /*           CREATING DUPLICATE DEFINITIONS BASED ON DIFFERENT     */ 03750002
* /*           POINTERS.                                             */ 03800002
* /*         - %WAMT9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED.  */ 03850002
* /*                                                                 */ 03900002
* /*           NOTE - DUE TO THE FACILITY WHICH PERMITS MULTIPLE     */ 03950002
* /*           INCLUDES OF THE IRAWAMT MAPPING MACRO, IT IS NOT      */ 04000002
* /*           POSSIBLE TO CONCATENATE THE IRAWAMT DECLARATION       */ 04050002
* /*           WITH ANOTHER DECLARATION IN SUCH A FASHION THAT       */ 04100002
* /*           BOTH DECLARATIONS ARE BASED ON THE SAME POINTER.      */ 04150002
* /*                                                                 */ 04200002
* /*         TO ACCESS AS A STANDALONE STRUCTURE DCL WAMTPTR PTR.    */ 04250002
* /*                                             DCL WAMPPTR PTR.    */ 04300002
* /*                                                                 */ 04350002
* /*   CHANGE ACTIVITY =                                             */ 04400002
* /*                                                                 */ 04450002
* /*   A000000-999999                                          Y02133*/ 04500002
* /*                                                                 */ 04550002
* /* *************************************************************** */ 04600002
*%;  /*                                                                 04650002
.WAMTAL1 ANOP                                                           04700002
         SPACE 1                                                        04750002
         AIF   ('&DSECT' EQ 'NO').WAMTAL2                               04800002
WAMT     DSECT                                                          04850002
         AGO   .WAMTAL3                                                 04900002
.WAMTAL2 ANOP                                                           04950002
         DS    0D                                                       05000002
WAMT     EQU *                                                          05050002
.WAMTAL3 ANOP                                                           05100002
         SPACE 1                                                        05150002
WAMTWAR  DS    A -                 ADDRESS OF LOADED IRARMWAR MODULE    05200002
WAMTSIZ  DS    F -                 TOTAL WAMT LNG (INCLUDING WAMP'S)    05250002
WAMTTMA  DS    D -                 MEASR ACTVT TIME - 64BIT BINARY NMB  05270002
WAMTTOC  DS    D -                 LAST UPDATE TIME - 64BIT BINARY NMB  05300002
WAMTASD  DS    CL4 -               MEASUREMENT FACILITY ADDR SPACE ID   05350002
WAMTTCB  DS    A -                 MEASUREMENT FACILITY TASK ADDRESS    05370002
WAMTIPS  DS    CL2 -               PERFORMANCE SPECIFICATION IDENT      05390002
WAMTCPD  DS    H -                 TOTAL COUNT OF PGP'S WITHIN WAMT     05410002
WAMTSPD  DS    H -                 LENGTH OF DATA WITHIN ONE WAMPPGP    05450002
WAMTHPG  DS    H -                 HIGHEST PERFORMANCE GROUP NUMBER     05500002
WAMTIPC  DS    CL4 -               CPU SERVICE COEFICIENT      @Z40BPCH 05510040
WAMTIPI  DS    CL4 -               I/O SERVICE COEFFICIENT     @Z40BPCH 05520040
WAMTIPM  DS    CL4 -               MSO SERVICE COEFFICIENT     @Z40BPCH 05530040
WAMTNX0  DS    A -                 OFFST OF 1ST WAMPPGP FOR PG# 0       05550002
WAMTNDX  DS    0A -                ARRAY OF OFFST OF 1ST PGP FOR GROUP  05600002
WAMTNX1  DS    A -                 OFFST OF 1ST WAMPPGP FOR PG# 1       05650002
WAMTR90  DS    F -                 RESERVED                    @Z40BPCH 05655040
WAMTEND  DS    0D -                END OF WAMT                          05700002
WAMTLEN  EQU   WAMTEND-WAMT -      LENGTH OF WAMT                       05750002
         SPACE 1                                                        05800002
         AIF   ('&DSECT' EQ 'NO').WAMTAL4                               05850002
WAMP     DSECT                                                          05900002
         AGO   .WAMTAL5                                                 05950002
.WAMTAL4 ANOP                                                           06000002
         DS    0F                                                       06050002
WAMP     EQU   *                                                        06100002
.WAMTAL5 ANOP                                                           06150002
         SPACE 1                                                        06200002
WAMPPGP  DS    0CL38 -             PERFORMANCE GROUP PERIOD DATA        06250040
*                                                              @Z40BPCH 06260040
WAMPTRN  DS    F -                 COUNT OF TRANSACTIONS ENDED          06300002
WAMPTAT  DS    F -                 TOTAL ACTIVE TIME FOR PERIOD         06350002
WAMPSRV  DS    F -                 TOTAL SERVICE UNITS FOR PERIOD       06400002
WAMPTET  DS    F -                 TOT ELAPSED TIME OF XACTNS ENDED     06450002
WAMPNWL  DS    F -                 NORMALIZED WORKLOAD LEVEL            06500002
WAMPCPU  DS    F -                 TOTAL CPU SERVICE UNITS FOR  PERIOD  06505040
*                                                              @Z40BPCH 06510040
WAMPIOC  DS    F -                 TOTAL I/O SERVICE UNITS FOR PERIOD   06515040
*                                                              @Z40BPCH 06520040
WAMPMSO  DS    F -                 TOTAL MSO SERVICE UNITS FOR PERIOD   06525040
*                                                              @Z40BPCH 06530040
WAMPTRR  DS    F -                 TOTAL RESIDENT TIME FOR PER.@Z40BPCH 06535040
WAMPSWC  DS    F -                 TOTAL SWAP COUNT FOR PERIOD @Z40BPCH 06535540
WAMPOBJN DS    HL1 -               PERF. OBJ NO. FOR PERIOD    @Z40BPCH 06540040
WAMPDMN  DS    HL1 -               DOMAIN NO. FOR PERIOD       @Z40BPCH 06545040
WAMPRSV  DS    H   -               RESERVED                    @Z40BPCH 06547040
WAMPEND  DS    0F -                END OF WAMP                          06550002
WAMPLEN  EQU   WAMPEND-WAMP -      LENGTH OF WAMP                       06600002
         MEND                                                           06650002
*                                                                    */ 06700002
*@       LIST  POP;                 /* RESUME MACRO OUTPUT LISTING   */ 06750002
*        %IF WAMT9999 ¬= ','        /* DOES STRUCTURE CONTINUE       */ 06800002
*            %THEN %WAMT9999 = ';'; /* NO, END DECLARE STATEMENT     */ 06850002
*        %WAMTLABL = 'WAMT'  ;      /* INITIALIZE THE LABEL VARIABLE */ 06900002
*        %IF WAMTSFX ¬= ' '         /* IS THIS THE DUPLICATE INCLUDE */ 06950002
*            %THEN %WAMTLABL = 'WAMT'||WAMTSFX ; /* RENAME STRUCTURE */ 07000002
*        %WAMTDUM = WAMTLABL||'PTR' ;  /* QUALIFY BASED POINTER NAME */ 07050002
*   DCL                                                                 07100002
*     1 WAMTLABL BASED(WAMTDUM) BDY(DWORD),                             07150002
*            %WAMTLABL = 'WAMTWAR'||WAMTSFX;                            07200002
*       10 WAMTLABL PTR(31),        /* ADDR OF IRARMWAR MODULE       */ 07250002
*            %WAMTLABL = 'WAMTSIZ'||WAMTSFX;                            07300002
*       10 WAMTLABL FIXED,          /* TOTL LNG OF WAMT INCL. WAMP'S */ 07350002
*            %WAMTLABL = 'WAMTTMA'||WAMTSFX;                            07360002
*       10 WAMTLABL BIT(64) BDY(DWORD), /* MEASUREMENT ACTIVATE TIME */ 07370002
*            %WAMTLABL = 'WAMTTOC'||WAMTSFX;                            07400002
*       10 WAMTLABL BIT(64) BDY(DWORD), /* WAMT UPDT TIME OF CENTURY */ 07450002
*            %WAMTLABL = 'WAMTASD'||WAMTSFX;                            07500002
*       10 WAMTLABL BIT(32) BDY(WORD),  /* MEASUREMENT ADDR SPACE ID */ 07520002
*            %WAMTLABL = 'WAMTTCB'||WAMTSFX;                            07540002
*       10 WAMTLABL PTR(31),        /* MEASUREMENT TASK ADDRESS      */ 07560002
*            %WAMTLABL = 'WAMTIPS'||WAMTSFX;                            07580002
*       10 WAMTLABL CHAR(2) BDY(HWORD), /* PERFORMANC SPECIFICATN ID */ 07600002
*            %WAMTLABL = 'WAMTCPD'||WAMTSFX;                            07620002
*       10 WAMTLABL FIXED(15),      /* COUNT OF PGP'S WITHIN WAMT    */ 07660002
*            %WAMTLABL = 'WAMTSPD'||WAMTSFX;                            07700002
*       10 WAMTLABL FIXED(15),      /* LENGTH OF DATA FOR ONE PGP    */ 07750002
*            %WAMTLABL = 'WAMTHPG'||WAMTSFX;                            07800002
*       10 WAMTLABL FIXED(15),      /* HIGH PERF. GROUP NUMBER       */ 07850002
*            %WAMTLABL = 'WAMTIPC'||WAMTSFX; /*              @Z40BPCH*/ 07857040
*       10 WAMTLABL CHAR(4) BDY(WORD), /* CPU SERVICE COEF.  @Z40BPCH*/ 07864040
*            %WAMTLABL = 'WAMTIPI'||WAMTSFX; /*              @Z40BPCH*/ 07871040
*       10 WAMTLABL CHAR(4) BDY(WORD), /* I/O SERVICE COEF.  @Z40BPCH*/ 07878040
*            %WAMTLABL = 'WAMTIPM'||WAMTSFX; /*              @Z40BPCH*/ 07885040
*       10 WAMTLABL CHAR(4) BDY(WORD), /* MSO SERVICE COEF.  @Z40BPCH*/ 07892040
*            %WAMTLABL = 'WAMTNX0'||WAMTSFX;                            07900002
*       10 WAMTLABL PTR(31),        /* OFFST TO WAMPPGP OF PRF GRP 0 */ 07950002
*            %WAMTLABL = 'WAMTNX1'||WAMTSFX;                            08000002
*       10 WAMTLABL PTR(31),        /* OFFST TO WAMPPGP OF PRF GRP 1 */ 08050002
*            %WAMTLABL = 'WAMTR90'||WAMTSFX; /*              @Z40BPCH*/ 08051040
*       10 WAMTLABL FIXED,          /* RESERVED              @Z40BPCH*/ 08052040
*            %WAMTLABL = 'WAMTEND'||WAMTSFX;                            08100002
*       10 WAMTLABL CHAR(0) BDY(DWORD),  /* END OF WAMT              */ 08150002
* /*  THE I'TH POSITION OF THE FOLLOWING ARRAY CONTAINS THE OFFSET   */ 08200002
* /*  FROM THE BEGINNING OF THE WAMT TO THE STARTING POSITION OF     */ 08230002
* /*  THE WAMPPGP'S FOR THE I'TH PERFORMANCE GROUP.                  */ 08260002
*            %WAMTDUM  = 'WAMTNX1'||WAMTSFX;                            08300002
*            %WAMTLABL = 'WAMTNDX'||WAMTSFX;                            08350002
*     WAMTLABL (*) DEFINED(WAMTDUM) PTR(31),                            08400002
* /*  THE WAMP ACCUMULATES WORKLOAD INFORMATION FOR ONE PERFORMANCE  */ 08450002
* /*  GROUP PERIOD.  THERE MAY BE 1 TO 8 PERIODS FOR ONE GROUP.      */ 08500002
*        %WAMTLABL = 'WAMP'  ;      /* INITIALIZE THE LABEL VARIABLE */ 08550002
*        %IF WAMTSFX ¬= ' '         /* IS THIS THE DUPLICATE INCLUDE */ 08600002
*            %THEN %WAMTLABL = 'WAMP'||WAMTSFX ; /* RENAME STRUCTURE */ 08650002
*        %WAMTDUM = WAMTLABL||'PTR' ;  /* QUALIFY BASED POINTER NAME */ 08700002
*     1 WAMTLABL BASED(WAMTDUM) BDY(WORD),                              08800002
*            %WAMTLABL = 'WAMPPGP'||WAMTSFX;                            08850002
*       10 WAMTLABL,                /* PERFORMANCE GROUP PERIOD DATA */ 08900002
*            %WAMTLABL = 'WAMPTRN'||WAMTSFX;                            08950002
*         12 WAMTLABL FIXED(32),    /* COUNT OF TRANSACTIONS ENDED   */ 09000002
*            %WAMTLABL = 'WAMPTAT'||WAMTSFX;                            09050002
*         12 WAMTLABL FIXED(32),    /* TOTAL ACTIVE TIME FOR PERIOD     09100002
*                                      1024 MICROSEC = LOW BIT       */ 09150002
*            %WAMTLABL = 'WAMPSRV'||WAMTSFX;                            09200002
*         12 WAMTLABL FIXED(32),    /* TOT SERVICE UNITS FOR PERIOD  */ 09250002
*            %WAMTLABL = 'WAMPTET'||WAMTSFX;                            09300002
*         12 WAMTLABL FIXED(32),    /* TOT ELAPS TIM OF XACTNS ENDED    09350002
*                                      1024 MICROSEC = LOW BIT       */ 09400002
*            %WAMTLABL = 'WAMPNWL'||WAMTSFX;                            09450002
*         12 WAMTLABL FIXED(31),    /* NORMALIZED WORKLOAD LEVEL        09500002
*                                      1/256TH OF A LEVEL = LOW BIT  */ 09550002
*            %WAMTLABL = 'WAMPCPU'||WAMTSFX; /*              @Z40BPCH*/ 09552040
*         12 WAMTLABL FIXED(32),    /* TOTAL CPU SERVICE UNITS FOR      09554040
*                                      PERIOD                @Z40BPCH*/ 09556040
*            %WAMTLABL = 'WAMPIOC'||WAMTSFX; /*              @Z40BPCH*/ 09558040
*         12 WAMTLABL FIXED(32),    /* TOTAL I/O SERVICE UNITS FOR      09560040
*                                      PERIOD                @Z40BPCH*/ 09562040
*            %WAMTLABL = 'WAMPMSO'||WAMTSFX; /*              @Z40BPCH*/ 09564040
*         12 WAMTLABL FIXED(32),    /* TOTAL MSO SERVICE UNITS FOR      09566040
*                                      PERIOD                @Z40BPCH*/ 09568040
*            %WAMTLABL = 'WAMPTRR'||WAMTSFX; /*              @Z40BPCH*/ 09570040
*         12 WAMTLABL FIXED(32),    /* TOTAL RESIDENT TIME FOR          09572040
*                                      PERIOD                @Z40BPCH*/ 09574040
*            %WAMTLABL = 'WAMPSWC'||WAMTSFX; /*              @Z40BPCH*/ 09574140
*         12 WAMTLABL FIXED,        /* TOTAL SWAP COUNT FOR PERIOD      09574240
*                                                            @Z40BPCH*/ 09574340
*            %WAMTLABL = 'WAMPOBJN'||WAMTSFX; /*             @Z40BPCH*/ 09576040
*         12 WAMTLABL FIXED(8),     /* PERF. OBJ. NO FOR PER @Z40BPCH*/ 09578040
*            %WAMTLABL = 'WAMPDMN'||WAMTSFX; /*              @Z40BPCH*/ 09580040
*         12 WAMTLABL FIXED(8),     /* DOMAIN NO. FOR PERIOD @Z40BPCH*/ 09582040
*            %WAMTLABL = 'WAMPRSV'||WAMTSFX ;    /*          @Z40BPCH*/ 09588040
*         12 WAMTLABL CHAR(2) BDY(HWORD), /* RESERVED        @Z40BPCH*/ 09594040
*            %WAMTLABL = 'WAMPEND'||WAMTSFX;                            09600002
*       10 WAMTLABL CHAR(0) BDY(WORD)  /* END OF WAMP                */ 09650002
*   WAMT9999                                                            09700002
*   %WAMTLEN = 'LENGTH(WAMT)';      /* SYMBOLIC FOR LENGTH OF WAMT   */ 09750002
./  ADD  SSI=60790658,NAME=IRAWMST
*        %GOTO WMSTPLS1; /*                                             00050002
         MACRO                                                          00100002
         IRAWMST &DSECT=YES                                          */ 00150002
*%WMSTPLS1:  ;                                                          00200002
* /*                                                                 */ 00250002
* /* MACCOMP Z-4 SC1CX/PKD16                                         */ 00300040
* /* MACSTAT Z-4 75007/Z40BPSS                                       */ 00330040
* /* *************************************************************** */ 00400002
* /*                                                                 */ 00450002
* /*   MACRO NAME - IRAWMST                                          */ 00500002
* /*                                                                 */ 00550002
* /*   DESCRIPTIVE NAME - WORKLOAD MANAGER SPECIFICATION TABLE       */ 00600002
* /*                                                                 */ 00650002
* /*   COPYRIGHT - NONE                                              */ 00700002
* /*                                                                 */ 00750002
* /*   STATUS - OS/VS2 RELEASE 4, 09/17/75, LEVEL=1                  */ 00800040
* /*                                                                 */ 00850002
* /*   FUNCTION - THE WMST COMBINES IN A SINGLE TABLE THE INFORMA-   */ 00900002
* /*         TION REQUIRED BY THE VARIOUS ROUTINES WHICH REFERENCE   */ 00950002
* /*         THE INSTALLATION PERFORMANCE SPECIFICATION.  THE WMST   */ 01000002
* /*         RESIDES IN SQA, AND IS DYNAMICALLY CONSTRUCTED DURING   */ 01050002
* /*         SYSTEM INITIALIZATION, AND DURING SET IPS PROCESSING.   */ 01100002
* /*         THE IPS USED BY THE  SYSTEM RESOURCES MANAGER  MAY BE   */ 01150002
* /*         CHANGED BY SIMPLY SUBSTITUTING THE ADDRESS OF THE NEW   */ 01200002
* /*         WMST INTO -RMCTWMST-.                                   */ 01250002
* /*                                                                 */ 01300002
* /*   METHOD OF ACCESS - THE ADDRESS OF THE WMST IS CONTAINED IN    */ 01350002
* /*         THE -RMCTWMST- FIELD OF THE SYSTEM RESOURCES MANAGER    */ 01400002
* /*         CONTROL TABLE.                                          */ 01450002
* /*                                                                 */ 01500002
* /* *************************************************************** */ 01550002
*        %GOTO WMSTPLS2; /*                                             01600002
         AGO   .WMSTAL1                                              */ 01650002
* /* *************************************************************** */ 01700002
* /*                                                                 */ 01750002
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */ 01800002
* /*                                                                 */ 01850002
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */ 01900002
* /*                                                                 */ 01950002
* /*         USING ON WMST GIVES ADDRESSABILITY TO ALL SYMBOLS.      */ 02000002
* /*                                                                 */ 02050002
* /*     PLS - %WMSTLEVL='USERLEVL' IF THE WMST MAPPING IS TO BE     */ 02100002
* /*           CONCATENATED WITH A PREVIOUS DECLARATION, WITH THE    */ 02150002
* /*           WMST BEING ASSIGNED THE INDICATED STRUCTURE LEVEL.    */ 02200002
* /*         - %WMST9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED.  */ 02250002
* /*                                                                 */ 02300002
* /*         TO ACCESS AS A STANDALONE STRUCTURE DCL WMSTPTR PTR.    */ 02350002
* /*                                                                 */ 02400002
* /*   CHANGE ACTIVITY =@ZM43084                                     */ 02450040
* /*                                                                 */ 02500002
* /*   A000000-999999                                          Y02133*/ 02550002
* /*                                                                 */ 02600002
* /* *************************************************************** */ 02650002
* /*                                                                    02700002
.WMSTAL1 ANOP                                                           02750002
         SPACE 1                                                        02800002
         AIF   ('&DSECT' EQ 'NO').WMSTAL2                               02850002
WMST     DSECT                                                          02900002
         AGO   .WMSTAL3                                                 02950002
.WMSTAL2 ANOP                                                           03000002
         DS    0D                                                       03050002
WMST     EQU   *                                                        03100002
.WMSTAL3 ANOP                                                           03150002
         SPACE 1                                                        03200002
WMSTNAME DS    C'WMST' -           TABLE IDENTIFICATION                 03250002
WMSTID   DS    CL2 -               PERF. SPECIFICATION IDENTIFIER       03300002
WMSTWLLO DS    H -                 LOWEST WORKLOAD LEVEL SPECIFIED      03350002
WMSTPGVT DS    A -                 PERF GROUP VECTOR TABLE ADDRESS      03400002
WMSTPGVS DS    F -                 PERF GROUP VECTOR TABLE SIZE         03450002
WMSTPGDT DS    A -                 FIRST PERF GROUP DESCRIPTOR ADDRESS  03500002
WMSTPGDS DS    F -                 TOTAL PERF GROUP DESCRIPTOR SIZE     03550002
WMSTPOVT DS    A -                 PERF OBJECTIVE VECTOR TABLE ADDRESS  03600002
WMSTPOVS DS    F -                 PERF OBJECTIVE VECTOR TABLE SIZE     03650002
WMSTPODT DS    A -                 1ST PERF OBJECTIVE DESCRIPT ADDRESS  03700002
WMSTPODS DS    F -                 TOT PERF OBJECTIVE DESCRIPT SIZE     03750002
WMSTDMDT DS    A -                 FIRST DOMAIN DESCRIPTR ADDR @Z40BPCH 03760040
WMSTDMDS DS    F -                 TOT DOMAIN DESCRIPTOR SIZE  @Z40BPCH 03770040
WMSTDMVT DS    A -                 DOMAIN VECTOR TABLE ADDR    @Z40BPCH 03780040
WMSTDMVS DS    F -                 DOMAIN VECTOR TABLE SIZE    @Z40BPCH 03790040
WMSTDMDE DS    A -                 DMN TABLE LAST ENTRY ADDR   @Z40BPCH 03795040
WMSTWLHI DS    H -                 HIGHEST WORKLOAD LEVEL SPEC @Z40BPCH 03800040
WMSTPGHI DS    H -                 HIGHEST PERF GROUP NUMBER            03850002
WMSTPGPC DS    H -                 TOTAL COUNT OF PERF GROUP PERIODS    03900002
WMSTDMNC DS    H -                 TOTAL DOMAIN COUNT          @Z40BPCH 03920040
WMSTCPU  DS    F -                 CPU SERVICE COEFFICIENT              03950002
WMSTIOC  DS    F -                 IOC SERVICE COEFFICIENT              04000002
WMSTMSO  DS    F -                 MSO SERVICE COEFFICIENT              04050002
WMSTREAL DS    CL1                 REAL TIME INDICATOR        @ZM43084  04100040
WMSTRSVD DS    CL3                 RESERVED                   @ZM43084  04110040
WMSTSET  DS    A -                 SET IPS PROCESSOR ROUTINE ADDRESS    04150002
WMSTSTCB DS    A -                 SET IPS PROCESSOR TASK ADDRESS       04200002
WMSTNWST DS    A -                 SET IPS PROCESSOR NXT WMST ADDRESS   04250002
WMSTSECB DS    F -                 ECB FOR SET IPS PROCESSOR            04300002
WMSTIPC  DS    CL4 -               CPU SERVICE COEFICIENT      @Z40BPCH 04320040
WMSTIPI  DS    CL4 -               I/O SERVICE COEFFICIENT     @Z40BPCH 04330040
WMSTIPM  DS    CL4 -               MSO SERVICE COEFFICIENT     @Z40BPCH 04340040
WMSTEND  DS    0D -                END OF WMST                          04350002
WMSTLEN  EQU   WMSTEND-WMST -      LENGTH OF WMST                       04400002
         MEND                                                           04450002
*                                                                    */ 04500002
*%WMSTPLS2:  ;                                                          04550002
*        %IF WMST9999 ¬= ','        /* DOES STRUCTURE CONTINUE       */ 04600002
*            %THEN %WMST9999 = ';'; /* NO, END DECLARE STATEMENT     */ 04650002
*        %IF WMSTLEVL ¬= ''         /* IS STRUCTURE CONCATENATED     */ 04700002
*            %THEN %GOTO WMSTPLS3;  /* YES, OMIT DECLARE STATEMENT   */ 04750002
*   DCL                                                                 04800002
*     1 WMST BASED(WMSTPTR) BDY(DWORD),                                 04850002
*            %GOTO WMSTPLS4;        /* SKIP USER-GIVEN LEVEL         */ 04900002
*%WMSTPLS3:  WMSTDUM = WMSTLEVL||' WMST';  /* PICK UP GIVEN LEVEL    */ 04950002
*     WMSTDUM BDY(DWORD),                                               05000002
*%WMSTPLS4:  ;                                                          05050002
*       10 WMSTNAME CHAR(4),        /* TABLE IDENTIFICATION - 'WMST' */ 05100002
*       10 WMSTID   CHAR(2) BDY(WORD), /* PERF SPECIFICATION ID      */ 05150002
*       10 WMSTWLLO FIXED(15),      /* LOWEST WORKLOAD LEVEL SPEC'D  */ 05200002
*       10 WMSTPGVT PTR(31),        /* PERF GRP VECTOR TABLE ADDR    */ 05250002
*       10 WMSTPGVS FIXED,          /* PERF GRP VECTOR TABLE SIZE    */ 05300002
*       10 WMSTPGDT PTR(31),        /* 1ST PERF GRP DESCRIPTOR ADDR  */ 05350002
*       10 WMSTPGDS FIXED,          /* TOT PERF GRP DESCRIPTOR SIZE  */ 05400002
*       10 WMSTPOVT PTR(31),        /* PERF OBJ VECTOR TABLE ADDR    */ 05450002
*       10 WMSTPOVS FIXED,          /* PERF OBJ VECTOR TABLE SIZE    */ 05500002
*       10 WMSTPODT PTR(31),        /* 1ST PERF OBJ DESCRIPTOR ADDR  */ 05550002
*       10 WMSTPODS FIXED,          /* TOT PERF OBJ DESCRIPTOR SIZE  */ 05600002
*       10 WMSTDMDT PTR(31),        /* FIRST DMN DESC ADDR   @Z40BPCH*/ 05610040
*       10 WMSTDMDS FIXED(31),      /* TOT DOMAIN DESC SIZE  @Z40BPCH*/ 05620040
*       10 WMSTDMVT PTR(31),        /* DMN VECTOR TABLE ADDR @Z40BPCH*/ 05630040
*       10 WMSTDMVS FIXED(31),      /* DMN VECTOR TABLE SIZE @Z40BPCH*/ 05640040
*       10 WMSTDMDE PTR(31),        /* DMN TAB LAST NTRY ADR @Z40BPCH*/ 05645040
*       10 WMSTWLHI FIXED(15),      /* HIGHEST WORKLD LEV SP @Z40BPCH*/ 05650040
*       10 WMSTPGHI FIXED(15),      /* HIGH PERF GROUP NUMBER        */ 05700002
*       10 WMSTPGPC FIXED(15),      /* TOTL PERF GROUP PERIOD COUNT  */ 05750002
*       10 WMSTDMNC FIXED(15),      /* TOT DOMAIN COUNT      @Z40BPCH*/ 05770040
*       10 WMSTCPU  FIXED,          /* CPU SERVICE COEFFICIENT       */ 05800002
*       10 WMSTIOC  FIXED,          /* IOC SERVICE COEFFICIENT       */ 05850002
*       10 WMSTMSO  FIXED,          /* MSO SERVICE COEFFICIENT       */ 05900002
*       10 WMSTREAL FIXED(8),       /* REAL TIME INDICATOR   @ZM43084*/ 05950040
*       10 WMSTRSVD FIXED(24),      /* RESERVED              @ZM43084*/ 05960040
*       10 WMSTSET  PTR(31),        /* SET PROCS ROUTINE ADDR        */ 06000002
*       10 WMSTSTCB PTR(31),        /* SET PROCS TASK ADDRESS        */ 06050002
*       10 WMSTNWST PTR(31),        /* SET PROCS NXT WMST ADR        */ 06100002
*       10 WMSTSECB CHAR(4) BDY(WORD), /* SET PROCS ECB              */ 06150002
*       10 WMSTIPC CHAR(4) BDY(WORD), /* CPU SERVICE COEF.   @Z40BPCH*/ 06170040
*       10 WMSTIPI CHAR(4) BDY(WORD), /* I/O SERVICE COEF.   @Z40BPCH*/ 06180040
*       10 WMSTIPM CHAR(4) BDY(WORD), /* MSO SERVICE COEF.   @Z40BPCH*/ 06190040
*       10 WMSTEND  CHAR(0) BDY(DWORD)   /* END OF WMST              */ 06200002
*   WMST9999                                                            06250002
*   %WMSTLEN = 'LENGTH(WMST)';      /* SYMBOLIC FOR LENGTH OF WMST   */ 06300002
./  ADD  SSI=60790659,NAME=IRAWPGDT
*        %GOTO WPGDPLS1; /*                                             00050002
         MACRO                                                          00100002
         IRAWPGDT  &DSECT=YES                                           00150002
         IEZBITS                                                     */ 00200002
*%WPGDPLS1:  ;                                                          00250002
* /*                                                                 */ 00300002
* /* MACCOMP Z-4 SC1CX/PKD16                                         */ 00350040
* /* MACSTAT Z-4 75007/Z40BPSS                                       */ 00380040
* /* *************************************************************** */ 00450002
* /*                                                                 */ 00500002
* /*   MACRO NAME - IRAWPGDT                                         */ 00550002
* /*                                                                 */ 00600002
* /*   DESCRIPTIVE NAME - PERFORMANCE GROUP TABLE DESCRIPTION        */ 00650002
* /*                                                                 */ 00700002
* /*   COPYRIGHT - NONE                                              */ 00750002
* /*                                                                 */ 00800002
* /*   STATUS - OS/VS2 RELEASE 4, 07/30/75, LEVEL=1                  */ 00820040
* /*                                                                 */ 00900002
* /*   FUNCTION - THE WPGD PROVIDES THE DESCRIPTION OF HOW SERVICE   */ 00950002
* /*         OBJECTIVES ARE ASSOCIATED TO GIVEN USER TRANSACTIONS    */ 01000002
* /*         AT VARIOUS PERIODS OF THEIR EXISTENCE.  IT ALSO KEEPS   */ 01050002
* /*         A HISTORY OF THE RATE OF UTILIZATION OF RESOURCES BY    */ 01100002
* /*         THE TRANSACTIONS.                                       */ 01150002
* /*                                                                 */ 01200002
* /*         THE WPGP'S, WHICH ARE LISTED SEQUENTIALLY IN THE WPGD,  */ 01250002
* /*         DEFINE PERIODS OF PROCESSING OR OF TIME, AND INDICATE   */ 01300002
* /*         THE PERFORMANCE OBJECTIVES (I.E. - THE SERVICE RATES),  */ 01350002
* /*         AND THE RESIDENCY INTERVALS, TO BE APPLIED.             */ 01400002
* /*                                                                 */ 01450002
* /*   METHOD OF ACCESS - THE ADDRESS OF THE WPGD FOR A PARTICULAR   */ 01500002
* /*         SYSTEM USER IS OBTAINED BY ADDING THE OFFSET IN THE     */ 01550002
* /*         -OUCBWMG- FIELD OF THE SYSTEM RESOURCES MANAGER USER    */ 01600002
* /*         CONTROL BLOCK TO THE ADDRESS IN THE -WMSTPGDT- FIELD    */ 01650002
* /*         OF THE WORKLOAD MANAGER SPECIFICATION TABLE.            */ 01700002
* /*                                                                 */ 01750002
* /*         THE ADDRESS OF THE CURRENT WPGP IS OBTAINED BY ADDING   */ 01800002
* /*         THE OFFSET IN THE -OUCBPGP- FIELD TO THE ADDRESS OF     */ 01850002
* /*         THE WPGD.  THE ADDRESS OF A PARTICULAR WPGL VALUE IS    */ 01900002
* /*         ALSO OBTAINED BY ADDING ITS INDICATED OFFSET TO THE     */ 01950002
* /*         ADDRESS OF THE WPGD.                                    */ 02000002
* /*                                                                 */ 02050002
* /* *************************************************************** */ 02100002
*        %GOTO WPGDPLS2; /*                                             02150002
         AGO   .WPGDAL1                                              */ 02200002
* /* *************************************************************** */ 02250002
* /*                                                                 */ 02300002
* /*   CONSTRUCTION METHOD - THE ADDRESS OF THE 1ST WPGD IS PLACED   */ 02350002
* /*         IN THE -WMSTPGDT- FIELD OF THE WORKLOAD MANAGER SPECI-  */ 02400002
* /*         FICATION TABLE.  THE OFFSET TO THE WPGD FOR A GIVEN     */ 02450002
* /*         PERFORMANCE GROUP NUMBER IS PLACED IN THE -WPGVTENT-    */ 02500002
* /*         FIELD OF THE CORRESPONDING (NUMBERED) ENTRY IN THE      */ 02550002
* /*         WORKLOAD MANAGER PERFORMANCE GROUP VECTOR TABLE.        */ 02600002
* /*                                                                 */ 02650002
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */ 02700002
* /*                                                                 */ 02750002
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */ 02800002
* /*                                                                 */ 02850002
* /*         USING ON WPGD GIVES ADDRESSABILITY TO WPGD SYMBOLS.     */ 02900002
* /*         USING ON WPGP GIVES ADDRESSABILITY TO WPGP SYMBOLS.     */ 02950002
* /*         USING ON WPGL GIVES ADDRESSABILITY TO WPGL SYMBOLS.     */ 02970002
* /*                                                                 */ 03000002
* /*     PLS - %WPGDLEVL='USERLEVL' IF THE WPGD MAPPING IS TO BE     */ 03050002
* /*           CONCATENATED WITH A PREVIOUS DECLARATION, WITH THE    */ 03100002
* /*           WPGD BEING ASSIGNED THE INDICATED STRUCTURE LEVEL.    */ 03150002
* /*         - %WPGD9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED.  */ 03200002
* /*                                                                 */ 03250002
* /*         TO ACCESS AS A SET OF STANDALONE STRUCTURES,            */ 03300002
* /*         DECLARE  WPGDPTR PTR FOR THE WPGD,                      */ 03350002
* /*                  WPGPPTR PTR FOR THE WPGP,                      */ 03400002
* /*                  WPGLPTR PTR FOR THE WPGL.                      */ 03450002
* /*                                                                 */ 03500002
* /*   CHANGE ACTIVITY =                                             */ 03550002
* /*                                                                 */ 03600002
* /*   A000000-999999                                          Y02133*/ 03650002
* /*                                                                 */ 03700002
* /* *************************************************************** */ 03750002
* /*                                                                    03800002
.WPGDAL1 ANOP                                                           03850002
         SPACE 1                                                        03900002
         AIF   ('&DSECT' EQ 'NO').WPGDAL2                               03950002
WPGD     DSECT                                                          04000002
         AGO   .WPGDAL3                                                 04050002
.WPGDAL2 ANOP                                                           04100002
         DS    0F                                                       04150002
WPGD     EQU   *                                                        04200002
.WPGDAL3 ANOP                                                           04250002
         SPACE 1                                                        04300002
WPGDPGN  DS    AL1 -               PERFORMANCE GROUP NUMBER             04350002
WPGDSIZ  DS    AL1 -               PERFORMANCE GROUP DESCRIPTOR SIZE-1  04400002
WPGDR02  DS    CL1 -               RESERVED                             04450002
WPGDDFL  DS    CL1 -               PERFORMANCE GROUP DESCRIPTIVE FLAGS  04460002
WPGDVLD  EQU   BIT0 -              VALID PERFORMANCE GROUP IN NEW IPS   04470002
WPGDATM  DS    F -                 AVG TIME TO ABSORB ISV SERVICE AMT   04500002
WPGDISV  DS    F -                 PERFM GRP INTERVAL SERVICE VALUE     04550002
WPGDPGP  DS    0F -                1ST PERIOD ENTRY FOR PERFM GROUP     04600002
WPGDOBJN DS    AL1 -               PG PERIOD PERFORMANCE OBJECTIVE NO.  04650002
WPGDDMN  DS    AL1 -               PG PERIOD DOMAIN NO.        @Z40BPCH 04660040
         DS    CL2 -               RESERVED                    @Z40BPCH 04670040
WPGDAPGV DS    CL1 -               APG VALUE IF SPECIFIED      @Z40BPCH 04673040
WPGDINDS DS    CL1 -               PG PERIOD DESCRIPTIVE INDICATORS     04700002
WPGDFIN  EQU   BIT0 -              FINAL PERFORMANCE GROUP PERIOD       04750002
WPGDUNT  EQU   BIT1 -              PG PERIOD DURATION IS IN REAL TIME   04800002
WPGDAPG  EQU   BIT2 -              APG VALUE SPECIFIED      @Z40BPCH    04820040
WPGDRTB  EQU   BIT7 -              PG PERIOD RESPONSE/THROUGHPUT BIAS   04850002
WPGDISVP DS    AL1 -               PGP INTERVAL SERVICE VALUE OFFSET    04900002
WPGDDURP DS    AL1 -               PGP DURATION VALUE OFFSET IN WPGD    04950002
WPGDPGL  DS    0F -                START OF POSSIBLE WPGD EXTENSION     05000002
WPGDEND  DS    0F -                END OF WPGD                          05050002
WPGDLEN  EQU   WPGDEND-WPGD -      LENGTH OF WPGD                       05100002
         AIF   ('&DSECT' EQ 'NO').WPGDAL4                               05150002
         SPACE 1                                                        05200002
WPGP     DSECT                                                          05250002
         SPACE 1                                                        05300002
WPGPOBJN DS    AL1 -               PERFORMANCE OBJECTIVE NUMBER         05350002
WPGPDMN  DS    AL1 -               DOMAIN NUMBER               @Z40BPCH 05360040
         DS    CL2 -               RESERVED                    @Z40BPCH 05370040
WPGPAPGV DS    CL1 -               APG VALUE IF SPECIFIED      @Z40BPCH 05373040
WPGPINDS DS    CL1 -               PERIOD DESCRIPTIVE INDICATORS        05400002
WPGPFIN  EQU   BIT0 -              FINAL PERIOD FOR PERFORMANCE GROUP   05450002
WPGPUNT  EQU   BIT1 -              PERIOD DURATION IS IN REAL TIME      05500002
WPGPAPG  EQU   BIT2 -              APG VALUE SPECIFIED     @Z40BPCH     05520040
WPGPRTB  EQU   BIT7 -              PERIOD RESPONSE/THROUGHPUT BIAS      05550002
WPGPISVP DS    AL1 -               INTERVAL SERVICE VALUE OFFSET        05600002
WPGPDURP DS    AL1 -               PERIOD DURATION VALUE OFFSET         05650002
WPGPEND  DS    0F -                END OF WPGP                          05700002
WPGPLEN  EQU   WPGPEND-WPGP -      LENGTH OF WPGP                       05750002
         SPACE 1                                                        05800002
WPGL     DSECT                                                          05850002
         SPACE 1                                                        05900002
WPGLISV  DS    0F -                INTERVAL SERVICE VALUE FOR A PERIOD  05950002
WPGLDUR  DS    0F -                PERIOD DURATION VALUE FOR A PERIOD   06000002
         DS    F -                 SPECIFIED VALUE STORAGE AREA         06050002
WPGLEND  DS    0F -                END OF WPGL                          06100002
WPGLLEN  EQU   WPGLEND-WPGL -      LENGTH OF WPGL                       06150002
.WPGDAL4 ANOP                                                           06200002
         MEND                                                           06250002
*                                                                    */ 06300002
*%WPGDPLS2:  ;                                                          06350002
*        %IF WPGD9999 ¬= ','        /* DOES STRUCTURE CONTINUE       */ 06400002
*            %THEN %WPGD9999 = ';'; /* NO, END DECLARE STATEMENT     */ 06450002
*        %IF WPGDLEVL ¬= ''         /* IS STRUCTURE CONCATENATED     */ 06500002
*            %THEN %GOTO WPGDPLS3;  /* YES, OMIT DECLARE STATEMENT   */ 06550002
*   DCL                                                                 06600002
*     1 WPGD BASED(WPGDPTR) BDY(WORD),                                  06650002
*            %GOTO WPGDPLS4;        /* SKIP USER-GIVEN LEVEL         */ 06700002
*%WPGDPLS3:  WPGDDUM = WPGDLEVL||' WPGD';  /* PICK UP GIVEN LEVEL    */ 06750002
*     WPGDDUM BDY(WORD),                                                06800002
*%WPGDPLS4:  ;                                                          06850002
*       10 WPGDPGN  PTR(08),        /* PERFORMANCE GROUP NUMBER      */ 06900002
*       10 WPGDSIZ  PTR(08),        /* PERF GROUP DESCRIPTOR SIZE-1  */ 06950002
*       10 WPGDR02  FIXED(08),      /* RESERVED                      */ 07000002
*       10 WPGDDFL  BIT(8),         /* PERF GROUP DESCRIPTIVE FLAGS  */ 07010002
*         12 WPGDVLD BIT(1),        /* VALID PERF GROUP IN NEW IPS   */ 07020002
*         12 WPGDRD1 BIT(7),        /* RESERVED                      */ 07030002
*       10 WPGDATM  FIXED(32) UNSIGNED, /* TIME TO ABSORB ISV SERVIC */ 07050002
*       10 WPGDISV  FIXED,          /* BASE ISV SERVICE FOR PERF GRP */ 07100002
*       10 WPGDPGP  CHAR(8) BDY(WORD), /* 1ST PGP ENTRY FOR PERF GRP    07120040
*                                                           @Z40BPCH*/  07150040
*         12 WPGDOBJN PTR(8),       /* PGP PERFORMANCE OBJECTIVE NO. */ 07200002
*         12 WPGDDMN PTR(8),        /* PGP DOMAIN NO.       @Z40BPCH */ 07210040
*         12 * CHAR(2) BDY(HWORD),  /* RESERVED             @Z40BPCH */ 07220040
*         12 WPGDAPGV PTR(8),       /* APG VALUE IF SPEC    @Z40BPCH */ 07223040
*         12 WPGDINDS BIT(8),       /* PERF GRP PERIOD INDICATORS    */ 07250002
*           14 WPGDFIN BIT(1),      /* FINAL PERF GROUP PERIOD       */ 07300002
*           14 WPGDUNT BIT(1),      /* PGP DURATION IS IN REAL TIME  */ 07350002
*           14 WPGDAPG BIT(1),      /*  APG VALUE SPECIFEID @Z40BPCH */ 07370040
*           14 WPGDRB2 BIT(4),      /* RESERVED                      */ 07400040
*           14 WPGDRTB BIT(1),      /* PGP RESPONSE/THROUGHPUT BIAS  */ 07450002
*         12 WPGDISVP PTR(8),       /* PGP INTVL SERV VALUE OFFSET   */ 07500002
*         12 WPGDDURP PTR(8),       /* PGP DURATION OFFSET IN WPGD   */ 07550002
*       10 WPGDPGL  CHAR(0) BDY(WORD), /* BEGIN FIXED(31) DUR OR ISV */ 07600002
*       10 WPGDEND  CHAR(0) BDY(WORD)  /* END OF WPGD                */ 07650002
*        %IF WPGDLEVL ¬= ''         /* IS STRUCTURE CONCATENATED     */ 07700002
*            %THEN %GOTO WPGDPLS5;  /* YES, OMIT WPGP STANDALON SPEC */ 07750002
*   ,                                                                   07800002
*     1 WPGP BASED(WPGPPTR) BDY(WORD), /* PERFORMANCE PERIOD ENTRY   */ 07850002
*       10 WPGPOBJN PTR(8),         /* PERFORMANCE OBJECTIVE NUMBER  */ 07900002
*       10 WPGPDMN PTR(8),          /* DOMAIN NUMBER        @Z40BPCH */ 07910040
*       10 * CHAR(2) BDY(HWORD),    /* RESERVED             @Z40BPCH */ 07920040
        10 WPGPAPGV PTR(8),         /* APG VALUE IF SPEC.   @Z40BPCH */ 07923040
*       10 WPGPINDS BIT(8),         /* PERIOD DESCRIPTIVE INDICATORS */ 07950002
*         12 WPGPFIN BIT(1),        /* FINAL PERIOD FOR PERF GROUP   */ 08000002
*         12 WPGPUNT BIT(1),        /* PERIOD DURATION IS REAL TIME  */ 08050002
*         12 WPGPAPG BIT(1),        /* APG VALUE SPECIFIED  @Z40BPCH */ 08070040
*         12 WPGPRB2 BIT(4),        /* RESERVED                      */ 08100040
*         12 WPGPRTB BIT(1),        /* PERIOD RESPONSE/THRUPUT BIAS  */ 08150002
*       10 WPGPISVP PTR(8),         /* PERIOD INTVL SERV VALU OFFSET */ 08200002
*       10 WPGPDURP PTR(8),         /* PERIOD DURATN OFFSET IN WPGD  */ 08250002
*       10 WPGPEND  CHAR(0) BDY(WORD)  /* END OF WPGP                */ 08300002
*   ,                                                                   08350002
*     1 WPGL BASED(WPGLPTR) BDY(WORD), /* SPECIFIED VALUE STORE AREA */ 08400002
*       10 WPGLISV  FIXED(31),      /* INTVL SERV VALUE FOR ANY PGP  */ 08450002
*         12 WPGLDUR  FIXED(32) UNSIGNED, /* DURATN VLU FOR ANY PGP  */ 08500002
*       10 WPGLEND  CHAR(0) BDY(WORD)  /* END OF WPGL                */ 08550002
*   %WPGPLEN = 'LENGTH(WPGP)';      /* SYMBOLIC FOR LENGTH OF WPGP   */ 08600002
*   %WPGLLEN = 'LENGTH(WPGL)';      /* SYMBOLIC FOR LENGTH OF WPGL   */ 08650002
*%WPGDPLS5:  ;                                                          08700002
*   WPGD9999                                                            08750002
*   %WPGDLEN = 'LENGTH(WPGD)';      /* SYMBOLIC FOR LENGTH OF WPGD   */ 08800002
./  ADD  SSI=60790661,NAME=IRAWPODT
*%;  /*                                                                 00050002
         MACRO                                                          00100002
         IRAWPODT  &DSECT=YES                                           00150002
         AGO   .WPODAL0                                              */ 00160002
*@       LIST  PUSH;                /* SAVE LISTING STATUS FOR WPOD  */ 00170002
*        %IF WPODSFX = ''           /* IS NAMING CHARACTER OMITTED   */ 00200002
*            %THEN %WPODSFX = ' ';  /* YES, INSERT PLACEHOLDER BLANK */ 00210002
*        %IF WPODSFX ¬= ' '         /* IS THIS THE DUPLICATE INCLUDE */ 00220002
*            %THEN %WPODDUM = '@       LIST  OFF '; /* BYP INTRO CMT */ 00227002
*        %ELSE     %WPODDUM = '@       LIST  PUSH'; /* DMY CNTRL CMT */ 00230002
*WPODDUM;                                                               00233002
*        %IF WPODSFX = ' '          /* IS THIS  THE FIRST INCLUDE    */ 00236002
*            %THEN %WPODDUM = '@       LIST  POP '; /* PRT INTRO CMT */ 00239002
*WPODDUM;                                                               00242002
*%;  /*                                                                 00250002
.WPODAL0 ANOP                                                        */ 00270002
* /* MACCOMP Z-4 SC1CX/PKD16                                         */ 00300040
* /* MACSTAT Z-4 75007/Z40BPSS                                       */ 00330040
* /* *************************************************************** */ 00400002
* /*                                                                 */ 00450002
* /*   MACRO NAME - IRAWPODT                                         */ 00500002
* /*                                                                 */ 00550002
* /*   DESCRIPTIVE NAME - PERFORMANCE OBJECTIVE TABLE DESCRIPTION    */ 00600002
* /*                                                                 */ 00650002
* /*   COPYRIGHT - NONE                                              */ 00700002
* /*                                                                 */ 00750002
* /*   STATUS - OS/VS2 RELEASE 2, 04/05/73, LEVEL=1                  */ 00800002
* /*                                                                 */ 00850002
* /*   FUNCTION - THE WPOD SPECIFIES, AS A FUNCTION OF THE SYSTEM    */ 00900002
* /*         WORKLOAD, THE RATES AT WHICH RESOURCES ARE TO BE MADE   */ 00950002
* /*         AVAILABLE TO USER TRANSACTIONS.  ACTUAL SERVICE RATES   */ 01000002
* /*         ARE APPLIED TO THE WPOD'S TO CALCULATE THE EQUIVALENT   */ 01050002
* /*         WORKLOAD LEVELS, WHOSE COMPARISON THEN INDICATES WHICH  */ 01100002
* /*         TRANSACTIONS ARE 'BEHIND' OR 'AHEAD' OF THE REST.       */ 01150002
* /*                                                                 */ 01200002
* /*         THE WPOD TO BE USED FOR A TRANSACTION IS INDICATED BY   */ 01250002
* /*         THE -WPGPOBJN- FIELD OF THE CURRENT PERIOD WITHIN THE   */ 01300002
* /*         APPLICABLE PERFORMANCE GROUP DESCRIPTION.               */ 01350002
* /*                                                                 */ 01400002
* /*   METHOD OF ACCESS - THE ADDRESS OF THE WPOD FOR A PARTICULAR   */ 01450002
* /*         SYSTEM USER IS OBTAINED BY ADDING THE OFFSET IN THE     */ 01500002
* /*         -OUCBWMO- FIELD OF THE SYSTEM RESOURCES MANAGER USER    */ 01550002
* /*         CONTROL BLOCK TO THE ADDRESS IN THE -WMSTPODT- FIELD    */ 01600002
* /*         OF THE WORKLOAD MANAGER SPECIFICATION TABLE.            */ 01650002
* /*                                                                 */ 01700002
* /* *************************************************************** */ 01750002
*%;  /*                                                                 01800002
         AGO   .WPODAL1                                              */ 01850002
*@       LIST  OFF;                 /* BYPASS EXPLANATORY COMMENTS   */ 01870002
* /* *************************************************************** */ 01900002
* /*                                                                 */ 01950002
* /*   CONSTRUCTION METHOD - THE ADDRESS OF THE 1ST WPOD IS PLACED   */ 02000002
* /*         IN THE -WMSTPODT- FIELD OF THE WORKLOAD MANAGER SPECI-  */ 02050002
* /*         FICATION TABLE.  THE OFFSET TO THE WPOD FOR A GIVEN     */ 02100002
* /*         PERFORMANCE OBJECTIVE NO. IS PLACED IN THE -WPOVTENT-   */ 02150002
* /*         FIELD OF THE CORRESPONDING (NUMBERED) ENTRY IN THE      */ 02200002
* /*         WORKLOAD MANAGER PERFORMANCE OBJECTIVE VECTOR TABLE.    */ 02250002
* /*                                                                 */ 02300002
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */ 02350002
* /*                                                                 */ 02400002
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */ 02450002
* /*                                                                 */ 02500002
* /*         USING ON WPOD GIVES ADDRESSABILITY TO WPOD SYMBOLS.     */ 02550002
* /*                                                                 */ 02600002
* /*     PLS - %WPODSFX='USERCHAR' IF THE INDICATED CHARACTER IS     */ 02650002
* /*           TO BE APPENDED TO ALL NAMES IN THE MAPPING, THEREBY   */ 02900002
* /*           CREATING DUPLICATE DEFINITIONS BASED ON DIFFERENT     */ 02950002
* /*           POINTERS.                                             */ 03000002
* /*                                                                 */ 03010002
* /*           NOTE - DUE TO THE FACILITY WHICH PERMITS MULTIPLE     */ 03020002
* /*           INCLUDES OF THE IRAWPODT MAPPING MACRO, IT IS NOT     */ 03030002
* /*           POSSIBLE TO CONCATENATE THE IRAWPODT DECLARATION      */ 03040002
* /*           WITH ANOTHER DECLARATION IN SUCH A FASHION THAT       */ 03042002
* /*           BOTH DECLARATIONS ARE BASED ON THE SAME POINTER.      */ 03044002
* /*                                                                 */ 03050002
* /*         TO ACCESS AS A STANDALONE STRUCTURE DCL WPODPTR PTR.    */ 03100002
* /*                                                                 */ 03150002
* /*   CHANGE ACTIVITY =                                             */ 03200002
* /*                                                                 */ 03250002
* /*   A000000-999999                                          Y02133*/ 03300002
* /*                                                                 */ 03350002
* /* *************************************************************** */ 03400002
*%;  /*                                                                 03450002
.WPODAL1 ANOP                                                           03500002
         SPACE 1                                                        03550002
         AIF   ('&DSECT' EQ 'NO').WPODAL2                               03600002
WPOD     DSECT                                                          03650002
         AGO   .WPODAL3                                                 03700002
.WPODAL2 ANOP                                                           03750002
         DS    0H                                                       03800002
WPOD     EQU   *                                                        03850002
.WPODAL3 ANOP                                                           03900002
         SPACE 1                                                        03950002
WPOP     DS    0CL4 -              PREV PERFORMANCE OBJECTIVE SEGMENT   04000002
WPOPSRV  DS    H -                 SERVICE RATE AT PREVIOUS POINT       04030002
WPOPWKL  DS    H -                 WORKLOD LEVL AT PREVIOUS POINT       04060002
WPOS     DS    0CL4 -              CURR PERFORMANCE OBJECTIVE SEGMENT   04090002
WPOSSRV  DS    H -                 SERVICE RATE AT CURR PT IN OBJCTV    04120002
WPOSWKL  DS    H -                 WORKLOD LEVL AT CURR PT IN OBJCTV    04150002
WPODEND  DS    0H -                END OF WPOD                          04200002
WPODLEN  EQU   WPODEND-WPOS -      LENGTH OF WPOD                       04250002
         MEND                                                           04300002
*                                                                    */ 04350002
*@       LIST  POP;                 /* RESUME MACRO OUTPUT LISTING   */ 04370002
*        %WPODLABL = 'WPOD'  ;      /* INITIALIZE THE LABEL VARIABLE */ 04400002
*        %IF WPODSFX ¬= ' '         /* IS THIS THE DUPLICATE INCLUDE */ 04460002
*            %THEN %WPODLABL = 'WPOD'||WPODSFX ; /* RENAME STRUCTURE */ 04520002
*        %IF WPOD9999 ¬= ','        /* DOES STRUCTURE CONTINUE       */ 04600002
*            %THEN %WPOD9999 = ';'; /* NO, END DECLARE STATEMENT     */ 04650002
*        %WPODDUM = WPODLABL||'PTR' ;  /* QUALIFY BASED POINTER NAME */ 04700002
*   DCL                                                                 04850002
*     1 WPODLABL BASED(WPODDUM) BDY(WORD),                              04900002
*            %WPODLABL = 'WPOP'||WPODSFX   ;                            04950002
*       10 WPODLABL BDY(WORD),      /* PREV PERF OBJECTIVE SEGMENT   */ 05000002
*            %WPODLABL = 'WPOPSRV'||WPODSFX;                            05050002
*         12 WPODLABL FIXED(15),    /* SERVICE RATE AT PREV POINT    */ 05100002
*            %WPODLABL = 'WPOPWKL'||WPODSFX;                            05150002
*         12 WPODLABL FIXED(16) UNSIGNED, /* WKLD LEVL AT PREV PT    */ 05200002
*            %WPODLABL = 'WPODEND'||WPODSFX;                            05250002
*       10 WPODLABL CHAR(0) BDY(WORD), /* END OF ONE WPOD SEGMENT    */ 05300002
*            %WPODLABL = 'WPOS'||WPODSFX   ;                            05350002
*       10 WPODLABL BDY(WORD),      /* CURR PERF OBJECTIVE SEGMENT   */ 05400002
*            %WPODLABL = 'WPOSSRV'||WPODSFX;                            05450002
*         12 WPODLABL FIXED(15),    /* SERVICE RATE AT CURR POINT    */ 05500002
*            %WPODLABL = 'WPOSWKL'||WPODSFX;                            05550002
*         12 WPODLABL FIXED(16) UNSIGNED, /* WKLD LEVL AT CURR PT    */ 05600002
*            %WPODLABL = 'WPOSEND'||WPODSFX;                            05650002
*       10 WPODLABL CHAR(0) BDY(WORD) /* END OF CURR WPOD SEGMENT    */ 05700002
*   WPOD9999                                                            05750002
*   %WPODLEN = 'LENGTH(WPOS)';      /* SYMBOLIC FOR LENGTH OF WPOD   */ 05800002
./  ADD  SSI=30760034,NAME=ISCAN
         MACRO                                                          03000002
&TAG     ISCAN &TREE                                                    06000002
.*A000000                                                        Y02147 09000002
.********************************************************************** 12000002
LJW&SYSNDX EQU 1                                                        15000002
         AIF   (K'&TREE EQ K'&TREE(1)+2).LW1                            18000002
&TAG     L     1,&TREE                                                  21000002
.LW0     USING IGARPTH,LJW&SYSNDX                                       24000002
         OI    PATH,B'0110'  INITIALIZE FOR SCANNING OPERATIONS.        27000002
         AGO   .FIN                                                     30000002
.LW1     ANOP                                                           33000002
&TAG     LR    1,&TREE                                                  36000002
         AGO   .LW0                                                     39000002
.FIN     DROP  LJW&SYSNDX                                               42000002
         RPTDSECT                                                       45000002
         MEND                                                           48000002
./  ADD  SSI=60690026,NAME=OUTBUFM
         MACRO                                                          00050002
         OUTBUFM                                                        00100002
OUTBUF   DSECT                                                          00150002
         SPACE                                                          00200002
CNTLCHAR DS    CL1                                                      00250002
ADDR     DS    CL6                                                      00300002
         DS    CL4                                            A/1       00350002
FIELD1   DS    CL35                                                     00400002
         DS    CL3                                            A/1       00450002
FIELD2   DS    CL35                                                     00500002
         DS    CL3                                                      00550002
ASTR1    DS    CL1                                                      00600002
EBCDIC   DS    CL32                                                     00650002
ASTR2    DS    CL1                                                      00700002
         DS    CL12                                                     00750002
AOUTBUF  DSECT                                                 @Z40MI3F 00755000
ACTLCHAR DS    CL1                                             @Z40MI3F 00760000
AADDR    DS    CL6                                             @Z40MI3F 00765000
         DS    CL1                                             @Z40MI3F 00770000
AFIELD1  DS    CL33                                            @Z40MI3F 00775000
AFIELD2  DS    CL33                                            @Z40MI3F 00780000
AFIELD3  DS    CL33                                            @Z40MI3F 00785000
AFIELD4  DS    CL33                                            @Z40MI3F 00790000
AEBCDIC  DS    CL65                                            @Z40MI3F 00795000
         EJECT                                                          00800002
         MEND                                                           00850002
./  ADD  SSI=80160124,NAME=PCIPOST
         MACRO                                                          00050002
&NAME    PCIPOST &ECB=,&SVAREA=,&RQE=,&CODE=                            00100002
*                                                                       00150002
*        THIS MACRO MAY BE USED TO POST FROM PCI APPENDAGES.            00200002
*        IF THE I/O REQUEST IS A VIRTUAL REQUEST, THE NORMAL            00210002
*        BRANCH INTERFACE TO POST IS EFFECTED. IF THE I/O REQUEST       00220002
*        IS NOT A VIRTUAL REQUEST, THE CROSS MEMORY INTERFACE           00230002
*        TO POST IS EFFECTED.                                           00240002
*                                                                       00242002
*         PARAMETERS -                                                  00260002
*              &ECB=LABEL OR (REG)  ADDRESS OF ECB                      00270002
*                                                                       00280002
*              &SVAREA=LABEL OR (REG) ADDRESS OF 16 WORD SAVE AREA      00290002
*                                                                       00292002
*              &RQE=LABEL OR (REG)  ADDRESS OF RQE                      00294002
*                                                                       00296002
*              &CODE=LABEL OR (REG) ADDRESS OF FULLWORD COMPLETION      00298002
*                                   CODE OR REGISTER CONTAINING THE     00298402
*                                   COMPLETION CODE. THE CODE MUST      00298802
*                                   BE LEFT JUSTIFIED WITHIN THE        00299202
*                                   WORD OR REGISTER.                   00299602
*                                                                       00310002
*         IF &CODE IS OMITTED, THE COMPLETION CODE IN THE IOB           00320002
*         IS USED.  ALL OTHER PARAMETERS MUST BE SPECIFIED.             00330002
*                                                                       00340002
*        BASE ADDRESSABILITY OF THE CALLING MODULE IS ASSUMED.          00342002
*        REGISTER 9,10,11,12,13, OR 14 MUST NOT BE USED AS THE          00344002
*        MODULES BASE REGISTER  ACROSS THIS EXPANSION.                  00346002
*        REGISTERS 1,9,10,11,12,13 ARE  USED. ALL REGS ARE RESTORED     00350002
*                                                                       00400002
*        MAPPING MACROS REQUIRED -                                      00410002
*              CVT,                                                     00420002
*              IHASRB,                                                  00430002
*              IHAASVT,                                                 00440002
*              IECDRQE,                                                 00442002
*              IECDIOSB                                                 00444002
*                                                                       00450002
         AIF   (T'&ECB EQ 'O').NOECB                                    00500002
         AIF   (T'&SVAREA EQ 'O').NOSVARA                               00550002
         AIF   (T'&RQE EQ 'O').NORQE                                    00600002
         AIF   ('&SVAREA'(1,1) EQ '(').RGST                             00650002
&NAME    STM   0,15,&SVAREA        SAVE REGISTERS               @YM3186 00700002
         LA    9,&SVAREA           SAVE THE SAVE AREA ADDR IN R 9       00750002
         AGO   .GEN1                                                    00800002
.RGST    ANOP                                                           00850002
&NAME    STM   0,15,0&SVAREA       SAVE REGISTERS               @YM3186 00900002
         LR    9,&SVAREA(1)        SAVE THE SAVE AREA ADDR IN R 9       00910002
.GEN1    LA    14,Z&SYSNDX         POINT TO ZEROS                       00950002
         AIF   ('&RQE'(1,1) EQ '(').RGRQE                               01150002
         L     1,&RQE              LOAD POINTER TO RQE                  01200002
         AGO   .GEN2                                                    01250002
.RGRQE   AIF   ('&RQE(1)' EQ '1').GEN2                                  01260002
         L     1,4*&RQE(1).(,9)     LOAD POINTER TO RQE         @YM3186 01300002
.GEN2    TM    RQETYPE-RQE(1),X'50' VIRTUAL REQUEST                     01350002
         BNZ   P&SYSNDX            YES, USE PRESENT MEMORY POST         01400002
         LA    14,F&SYSNDX         POINT TO X'80'                       01450002
         L     13,RQESRB-RQE(1)    LOAD POINTER TO ASSOCIATED SRB       01500002
         L     13,SRBPARM-SRB(13)  LOAD POINTER TO IOSB         @YM3186 01550002
         LH    13,IOSASID-IOSB(13) LOAD THE ASID FROM THE IOSB  @YM3186 01600002
         L     12,CVTPTR           CVT ADDRESS                  @YM3186 01610002
         L     12,CVTASVT-CVT(,12) ADRESS SPACE VECTOR TABLE    @YM3186 01620002
         SLL   13,2                MULTIPLY ASID BY 4 TO FIND   @YM3186 01630002
*                                  * OFFSET IN ASVT FOR THIS ASID       01632002
         L     13,ASVTFRST-ASVT(13,12) GET ASCB ADDRESS         @YM3186 01640002
         L     12,E&SYSNDX         POINT TO DUMMY ERROR RECOVERY        01650002
         IC    0,RQEPRT-RQE(1)     SET REQUESTORS KEY IN 0.    @ZA15372 01655003
P&SYSNDX DS    0H                                                       01660002
         AIF   ('&ECB'(1,1) EQ '(').RGECB                               01700002
         L     11,&ECB             LOAD POINTER TO ECB           YM1085 01750002
         AGO   .GEN3                                                    01800002
.RGECB   AIF   ('&ECB(1)' EQ '11').GEN3                          YM1085 01850002
         L     11,4*&ECB(1).(,9)   PLACE POINTER TO ECB IN REG  @YM3186 01900002
.GEN3    ICM   11,8,0(14)          SET THE HIGH BYTE             YM1085 01950002
         AIF   (T'&CODE EQ 'O').IOBCOD                                  02050002
         AIF   ('&CODE'(1,1) EQ '(').RGCODE                             02100002
         L     10,&CODE            LOAD THE ECB COMPLETION CODE  YM1085 02150002
         AGO   .GEN4                                                    02200002
.RGCODE  AIF   ('&CODE(1)' EQ '10').GEN4                         YM1085 02210002
         L     10,4*&CODE(1).(,9)  LOAD THE ECB COMPLETION CODE @YM3186 02250002
         AGO   .GEN4                                                    02300002
.IOBCOD  L     10,RQEIOB-RQE(1)    LOAD IOB ADDRESS              YM1085 02350002
         IC    10,4(10)            LOAD THE ECB COMPLETION CODE  YM1085 02400002
         SLL   10,24(0)            SHIFT IT TO THE HIGH BYTE    YM2296P 02450002
.GEN4    TM    RQETYPE-RQE(1),X'50'  VIRTUAL REQUEST ?         @ZA15372 02480003
         BNZ   Q&SYSNDX              YES, BYPASS               @ZA15372 02510003
         O     10,F&SYSNDX           NO, SET TO VAL CK ECB     @ZA15372 02540003
Q&SYSNDX EQU   *                                               @ZA15372 02550003
         L     15,CVTPTR(0,0)      LOAD POINTER TO CVT         @ZA15372 02570003
         L     15,CVT0PT01-CVT(,15) LOAD POINTER TO POST ROUTINEYM2296P 02650002
         BALR  14,15               POST THE ECB COMPLETE                02700002
         LM    0,15,0(9)           RESTORE REGISTERS            @YM3186 02750002
         B     S&SYSNDX            SKIP ERROR ROUTINE                   02800002
         SPACE 2                                                        02850002
G&SYSNDX BR    14                  ERROR ROUTINE FOR XMPOST      YM1085 02900002
E&SYSNDX DS    0F                  WORD BOUNDARY ALIGNMENT     @ZA29188 02901003
         DC    X'80'               RECOVERY IN MASTER MEMORY   @ZA29188 02901203
         DC    AL3(G&SYSNDX)       ERROR ROUTINE ADDRESS       @ZA29188 02901403
F&SYSNDX DC    X'80000000'         CONSTANT                    @ZA15372 02902003
Z&SYSNDX DC    X'00'               ZEROS FOR HIGH BYTE                  02910002
S&SYSNDX DS    0H                  RETURN TO PCI APPENDAGE      @YM3186 02950002
         MEXIT                                                          03000002
.NOECB   MNOTE 8,'ECB OPERAND MUST BE SPECIFIED'                        03050002
         MEXIT                                                          03100002
.NOSVARA MNOTE 8,'SVAREA OPERAND MUST BE SPECIFIED'                     03150002
         MEXIT                                                          03200002
.NORQE   MNOTE 8,'RQE OPERAND MUST BE SPECIFIED'                        03250002
         MEND                                                           03300002
./  ADD  SSI=21050443,NAME=PRPLY
         MACRO                                                          10000000
&NAME    PRPLY &SIZE=                                                   20000000
&NAME    WRTRP SIZE=&SIZE,DISP=18                                       30000000
         MEND                                                           40000000
./  ADD  SSI=20780189,NAME=PSWGEN
         MACRO                                                          01000020
&NAME    PSWGEN &FUNC,&PARM,&REG,&VAR                      PROTOTYPE    02000020
         GBLB  &EXECN,&EXECF            MULTIPLE EXPANSION SWITCHES     03000020
         LCLC  &HEX,&SUFFIX             CHARACTER VARIABLES             04000020
&SUFFIX  SETC  '&SYSNDX'(2,4)           SET 3 CHARACTER SYSNDX VALUE    05000020
.*                                                                      06000020
.*                                                                      07000020
.*             ALL FUNCTIONS OF THIS MACRO WILL USE CSECT NAME OF THE   08000020
.*             INVOKING PROCEDURE FOR FUNCTION NAME...                  09000020
.*                                                                      10000020
.*             WHEN MORE THAN ONE CSECT INVOKE THE SAME FUNCTION,       11000020
.*             THEY WILL ENTER THE SELECTED CODE VIA 'STACKED' ENTRIES- 12000020
.*       SUCH AS -                      .FIRST   ANOP                   13000020
.*                                      .NEXT    ANOP                   14000020
.*                                       .LAST   ANOP            ETC.   15000020
.*                                                                      16000020
.***********************                                                17000020
         AIF   ('&FUNC' EQ 'IGG019V5A').LPSW01                          18000020
         AIF   ('&FUNC' EQ 'IGG019V5B').LPSW02                          19000020
         AGO   .PSWNG3                  UNSUPPORTED FUNCTION            20000020
.LPSW01  ANOP                                                           21000020
*********************************************************************** 22000020
*  THIS FUNCTION OF PSWGEN OWNED AND MAINTAINED BY IBM PERSONNEL,       23000020
*  GENERATES CODE FOR LPSW INSTRUCTION FOR 1419 SUPPORT                 24000020
*        IOSGEN  IGG019V5A,&PARM,&REG                                   25000020
*        &PARM--SYMBOL DEFINING INSTRUCTION ADDRESS TO BE PUT IN PSW    26000020
*        &REG--A SUBLIST OF 3 REGISTER NAMES. THE FIRST MUST CONTAIN    27000020
*              THE DEB ADDRESS AND THE OTHER TWO MUST BE TWO CONTIGUOUS 28000020
*              REGISTERS.                                               29000020
*********************************************************************** 30000020
         SPACE 1                                                        31000020
         MVZ   PSW1+1(1),PTKEY(&REG(1)) PUT USERS PROTECT KEY INTO PSW. 32000020
         LA    &REG(2),&PARM            LOAD ADDR                       33000020
         ST &REG(2),PSW1+4              STORE ADDR IN PSW               34000020
         L     &REG(2),PSW2             SAVE FIRST HALF OF RETURN PSW   35000020
         LPSW  PSW1                     SET USERS PROTECT KEY-BRANCH    36000020
         SPACE 1                                                        37000020
         DS    0D                                                       38000020
PSW1     DC    X'04'                    AREA                            39000000
         DC    X'0C'                    FOR                             40000000
         DC    2X'00'                   BUILDING USERS                  41000020
         DC    F'0'                     PSW                             42000020
         SPACE 1                                                        43000020
PSW2     DC    X'04'                    FIRST HALF                      44000000
         DC    X'0C'                    OF RETURN                       45000000
         DC    2X'00'                   PSW                             46000020
PTKEY    EQU   24                       DISPLACEMENT TO PROTECT KEY     47000020
         MEXIT                                                          48000020
.LPSW02  ANOP                                                           49000020
*  THIS FUNCTION OF PSWGEN OWNED AND MAINTAINED BY IBM PERSONNEL,       50000020
*  GENERATES CODE FOR LPSW INSTRUCTION FOR 1419 SUPPORT                 51000020
*        IOSGEN  IGG019V5B,&PARM,&REG                                   52000020
*        &PARM--SYMBOL DEFINING INSTRUCTION ADDRESS TO BE PUT IN PSW    53000020
*        &REG--A SUBLIST OF 3 REGISTER NAMES. THE FIRST MUST CONTAIN    54000020
*              A SAVE AREA ADDRESS (DOUBLE WORD BOUNDARY) AND THE OTHER 55000020
*              TWO MUST BE TWO CONTIGUOUS REGISTERS.                    56000020
         SPACE 1                                                        57000020
         LA    &REG(3),&PARM            LOAD ADDR                       58000020
         STM   &REG(2),&REG(3),0(&REG(1))  PUT PSW IN SAVE AREA         59000020
         LPSW  0(&REG(1))               RESTORE KEY 0 AND BRANCH        60000020
         MEXIT                                                          61000020
.********************************************************************** 62000020
.*       ALL MNOTES SHOULD BE PLACED BELOW --                           63000020
.*                                                                      64000020
.*                                                                    * 65000020
.PSWNG2  MNOTE 8,'*** INSUFFICIENT WORK REGISTERS SPECIFIED.'           69000020
         MEXIT                                                          70000020
.*                                                                    * 71000020
.PSWNG3  MNOTE 8,'*** ERROR IN PARAMETER SET UP, OR ''&FUNC'' NOT A SUP+72000020
               PORTED FUNCTION.'                                        73000020
.*                                                                      74000020
.PSWGEND MEND                                                           75000020
./  ADD  SSI=21050444,NAME=PWRT
         MACRO                                                          10000000
&NAME    PWRT  &SIZE=                                                   20000000
&NAME    WRTRP SIZE=&SIZE,DISP=12                                       30000000
         MEND                                                           40000000
./  ADD  SSI=21050445,NAME=PWTO
         MACRO                                                          10000000
&NAME    PWTO  &MT=,&MSG=,&REG=                                         20000000
&NAME    CMWTO MT=&MT,MSG=&MSG,REG=&REG,DISP=6                          30000000
         MEND                                                           40000000
./  ADD  SSI=21050446,NAME=PWTOR
         MACRO                                                          10000000
&NAME    PWTOR &MT=,&MSG=,&REG=,&WAIT=YES,&SIZE=                        20000000
&NAME    CMWTO MT=&MT,MSG=&MSG,REG=&REG,WAIT=&WAIT,DISP=24,SIZE=&SIZE   30000000
         MEND                                                           40000000
./  ADD  SSI=61280633,NAME=RECORD
         MACRO                                                          00060002
&NAME    RECORD &TYPE=,&RCVRY=,&DATAADR=,&PARMADR=,&LENGTH=,           C00070002
               &BUFFER=YES,&POSTING=NO,&HEADER=NO,&JOBNAME=NO,&TIME=NO,C00100041
               &ERRORID=NO                                    @G17EP5W  00110041
* MACCOMP-SC1CM                                                         00112041
* MACSTAT-@G17EP5W                                                      00114041
* MACMEAN-INVOKE RECORDING ROUTINE FOR WTO,SYS1.LOGREC RECORDS OR       00116041
*         EMERGENCY REQUESTS                                            00118041
         LCLA  &CTR1,&CTR2,&CTR3                              @G17EP5W  00120041
         LCLB  &B(12)                                                   00200041
&NAME    DS    0H                                                       00250002
&B(1)    SETB  ('&TYPE' EQ 'TERM')         SYSTEM TERMINATION CALL      00300002
&B(2)    SETB  ('&TYPE' EQ 'LOGREC')       WRITE TO SYS1.LOGREC         00350002
&B(3)    SETB  ('&TYPE' EQ 'WTO')          WRITE TO OPERATOR            00400002
&B(4)    SETB  ('&RCVRY' EQ 'ESTAE')       ESTABLISH RECOVERY VIA ESTAE 00450002
&B(5)    SETB  ('&RCVRY' EQ 'SETFRR')      ESTABLISH RECVRY VIA SETFRR  00500002
&B(6)    SETB  ('&BUFFER' EQ 'YES')        DATA MUST BE BUFFERED        00550002
&B(7)    SETB  ('&BUFFER' EQ 'NO')         DATA MUST NOT BE BUFFERED    00600002
&B(8)    SETB  ('&HEADER' EQ 'YES')        BUILD AN AR149 HEADER        00650002
&B(9)    SETB  ('&JOBNAME' EQ 'YES')       INSERT JOBNAME AFTER HEADER  00700002
&B(10)   SETB  ('&TIME' EQ 'YES')          RETURN TIME PLACED IN RECORD 00750002
&B(11)   SETB  ('&POSTING' EQ 'YES')       POST CALLER WHEN BUFFER FREE 00800002
&B(12)   SETB  ('&ERRORID' EQ 'YES')       INCLUDE ERRORID IN RECORD    00820041
&CTR1    SETA  128*&B(1)+64*&B(2)+32*&B(3)+&B(12)              @G17EP5W 00850041
&CTR2    SETA  128*&B(4)+64*&B(5)+32*&B(6)+16*&B(7)+8*&B(8)+4*&B(9)+2*&C00900002
               B(10)+&B(11)                                             00950002
&CTR3    SETA  &B(8)+&B(9)+&B(10)+&B(11)+&B(12)                @G17EP5W 01000041
         AIF   (&CTR1 LE 1).ERR1                               @G17EP5W 01010041
         AIF   ('&HEADER' NE 'YES' AND '&HEADER' NE 'NO').ERR10         01060002
         AIF   ('&TIME' NE 'YES' AND '&TIME' NE 'NO').ERR11             01070002
         AIF   ('&JOBNAME' NE 'YES' AND '&JOBNAME' NE 'NO').ERR12       01080002
         AIF   ('&POSTING' NE 'YES' AND '&POSTING' NE 'NO').ERR13       01090002
         AIF   ('&BUFFER' NE 'YES' AND '&BUFFER' NE 'NO' AND '&BUFFER' N01092002
               NE 'OPT').ERR14                                          01092402
         AIF   ('&ERRORID' NE 'YES' AND '&ERRORID' NE 'NO').ERR15       01093241
         AIF   ('&TYPE' EQ 'WTO' AND '&HEADER' EQ 'YES').ERR9           01094002
         AIF   ('&TYPE' EQ 'TERM').TERM                                 01100002
         AIF   ('&RCVRY' NE 'ESTAE' AND '&RCVRY' NE 'SETFRR').ERR2      01150002
         AIF   ('&DATAADR' NE '' AND '&PARMADR' NE '').ERR4             01200002
         AIF   ('&DATAADR' EQ '' AND '&PARMADR' EQ '').ERR3             01250002
         AIF   (&CTR3 NE 0 AND '&PARMADR' EQ '').ERR5                   01300002
         AIF   ('&JOBNAME' EQ 'YES' AND '&HEADER' EQ 'NO').ERR6         01350002
         AIF   ('&HEADER' EQ 'YES' AND '&BUFFER' NE 'YES').ERR7         01400002
         AIF   ('&LENGTH' EQ '' AND ('&TYPE' NE 'WTO' OR '&BUFFER' NE  N01450002
               'NO')).ERR8                                              01500002
         AIF   ('&ERRORID' EQ 'YES' AND '&TYPE' NE 'LOGREC').ERR16      01520041
         AIF   ('&LENGTH' EQ '').LNGR0                                  01550002
         AIF   ('&LENGTH' EQ '(0)').LNGR0                               01600002
         AIF   ('&LENGTH'(1,1) EQ '(').LNGRN                            01650002
         CNOP  0,4                                                      01660002
         B     *+8                        BRANCH AROUND CONSTANTS       01700002
         DC    AL1(&CTR1)                 BIT SETTING FOR TYPE          01750002
         DC    AL1(&CTR2)                 BIT SETTING FOR OPTIONS       01800002
         DC    AL2(&LENGTH)               LENGTH OF DATA SUPPLIED       01850002
         L     0,*-4                      REGISTER 0=OPTIONS AND LNGTH  01900002
         AGO   .LOADR1                                                  01950002
.LNGRN   LR    0,&LENGTH                  LENGTH IN REG0                02000002
.LNGR0   CNOP  0,4                        BRANCH AROUND CONSTANTS       02050002
         B     *+6                        BRANCH AROUND CONSTANTS       02060002
         DC    AL1(&CTR1)                 BIT SETTING FOR TYPE          02100002
         DC    AL1(&CTR2)                 BIT SETTING FOR OPTIONS       02150002
         ICM   0,12,*-2                    TYPE AND OPTS IN REG0        02200002
.LOADR1  AIF   ('&PARMADR' NE '').PARM                                  02250002
         IHBINNRA &DATAADR                LOAD REG1 WITH ADDR OF DATA   02300002
         LCR   1,1                        TWO'S COMPLIMENT FOR DATAADR  02310002
         AGO   .LNKAGE                                                  02350002
.TERM    LA    0,&CTR1.(0,0)              BIT SETTING FOR TYPE=TERM     02352002
         SLL   0,24(0)                    IN HIGH ORDER BYTE OF REG0    02354002
         AGO   .LNKAGE                                                  02356002
.PARM    IHBINNRA &PARMADR                REG1 WITH ADDR OF PARMLIST    02360002
.LNKAGE  L     15,FLCCVT-PSA(0,0)         ADDRESS OF CVT                02400002
         L     15,CVTRECRQ-CVTMAP(,15)    ADDRESS OF RECORDING FACILITY 02450002
         BALR  14,15                      BRANCH TO RECORDING FACILITY  02500002
         AGO   .END                                                     02550002
.ERR1    MNOTE 12,'TYPE OPERAND REQD - NOT SPECIFIED'                   02600002
         MEXIT                                                          02610002
.ERR2    MNOTE 12,'RCVRY OPERAND REQD - NOT SPECIFIED'                  02620002
         MEXIT                                                          02630002
.ERR3    MNOTE 12,'DATAADR OR PARMADR OPERAND REQD - NOT SPECIFIED'     02640002
         MEXIT                                                          02642002
.ERR4    MNOTE 12,'DATAADR AND PARMADR OPERANDS BOTH SPECIFIED'         02644002
         MEXIT                                                          02646002
.ERR5    MNOTE 12,'PARMADR REQD WITH HEADER, JOBNAME, TIME, POSTING, ORC02648041
                ERRORID'                                                02648241
         MEXIT                                                          02648402
.ERR6    MNOTE 12,'HEADER=YES REQUIRED IF JOBNAME=YES'                  02648802
         MEXIT                                                          02649202
.ERR7    MNOTE 12,'BUFFER=YES REQUIRED IF HEADER=YES'                   02649602
         MEXIT                                                          02649702
.ERR8    MNOTE 12,'LENGTH OPERAND REQD - NOT SPECIFIED'                 02649802
         MEXIT                                                          02649902
.ERR9    MNOTE  12,'HEADER=YES INVALID WITH TYPE=WTO'                   02699902
         MEXIT                                                          02749902
.ERR10   IHBERMAC  54,,&HEADER                                          02799902
         MEXIT                                                          02849902
.ERR11   IHBERMAC 54,,&TIME                                             02899902
         MEXIT                                                          02949902
.ERR12   IHBERMAC 54,,&JOBNAME                                          02999902
         MEXIT                                                          03049902
.ERR13   IHBERMAC 54,,&POSTING                                          03059902
         MEXIT                                                          03069902
.ERR14   IHBERMAC 54,,&BUFFER                                           03079902
         MEXIT                                                          03089902
.ERR15   IHBERMAC 54,,&ERRORID                                          03091941
         MEXIT                                                          03093941
.ERR16   MNOTE 12,'TYPE=LOGREC REQUIRED IF ERRORID=YES'                 03095941
         MEXIT                                                          03097941
.END     MEND                                                           03099902
./  ADD  SSI=20731523,NAME=REGEQU
         MACRO                                                          04000015
         REGEQU                                                         08000015
*********************************************************************** 12000015
R0       EQU   0                                                        16000015
R1       EQU   1                                                        20000015
R2       EQU   2                                                        24000015
R3       EQU   3                                                        28000015
R4       EQU   4                                                        32000015
R5       EQU   5                                                        36000015
R6       EQU   6                                                        40000015
R7       EQU   7                                                        44000015
R8       EQU   8                                                        48000015
R9       EQU   9                                                        52000015
R10      EQU   10                                                       56000015
R11      EQU   11                                                       60000015
R12      EQU   12                                                       64000015
R13      EQU   13                                                       68000015
R14      EQU   14                                                       72000015
R15      EQU   15                                                       76000015
*********************************************************************** 80000015
         MEND                                                           84000015
./  ADD  SSI=20780174,NAME=RESTORE
         MACRO                                                          00020000
&NAME    RESTORE &LIST                                                  00040000
         AIF   ('&LIST' EQ '').E1                                       00060000
&NAME    IHBINNRA &LIST                     LOAD REG 1                  00080000
         SVC   17                                ISSUE SVC FOR RESTORE  00100000
         MEXIT                                                          00120000
.E1      IHBERMAC 01,150                    LIST ADDR MISSING           00140000
         MEND                                                           00160000
./  ADD  SSI=32820377,NAME=RPTDSECT
         MACRO                                                          00100002
&TAG  RPTDSECT &T=,&TYPE=,&LIST=,&SCAN=,&GEN=,&DS=NO                    00200002
         GBLC  &IGAHVFC  THE OFFSET IN THE RPT HEADER TO THE ADDRESS OF*00300002
                         THE FIXEDHDR FOR THE INNER VERTEX SPACE CHAIN. 00400002
         GBLC  &IGABLST  THE OFFSET INTO THE TREE HEADER FOR THE LIST  *00500002
                         OF RPT ENTRY POINTS.                           00600002
         GBLC  &IGAGKW   THE OFFSET IN THE IGARPT01 MODULE TO THE      *00700002
                         ROUTINE TO GET A WORK AREA FOR COLLECTING     *00800002
                         KEYS.                                          00900002
         GBLC  &IGABFIN  THE SIZE OF THE RESERVED LIST OF ENTRY POINT  *01000002
                         ADDRESSES IN THE TREE HEADER.                  01100002
         GBLC  &IGASCH8  THE OFFSET IN THE RPT MODULE FOR THE TYPE 8   *01200002
                         SEARCH ROUTINE.                                01300002
         GBLC  &IGADEL8  THE OFFSET IN THE IGARPT01 MODULE TO THE TYPE *01400002
                         8 RPT DELETE ROUTINE.                          01500002
         GBLC  &IGAINS8  THE OFFSET IN THE MODULE IGARPT01 TO THE      *01600002
                         ROUTINE TO INSERT IN A TYPE 8 RPT.             01700002
         GBLC  &IGALSCN  THE OFFSET TO THE ROUTINE TO SCAN LEFT IN THE *01800002
                         MODULE IGARPT01.                               01900002
         GBLC  &IGARSCN  THE OFFSET TO THE ROUTINE TO SCAN RIGHT IN THE*02000002
                         MODULE IGARPT01.                               02100002
         GBLC  &IGASPV   THE OFFSET TO THE PARTIAL ORDER SEARCH ROUTINE*02200002
                         IN THE MODULE IGARPT01.                        02300002
         GBLC  &IGAPVG   THE OFFSET TO THE ROUTINE TO GET THE PARTIAL  *02400002
                         ORDER VALUE FOR THE CURRENT SINK IN THE MODULE*02500002
                         IGARPT01.                                      02600002
         GBLC  &IGAPVAJ   THE OFFSET TO THE ROUTINE TO ADJUST THE      *02700002
                         PARTIAL ORDER VALUE FOR THE CURRENT SINK IN   *02800002
                         THE IGARPT01 MODULE.                           02900002
         GBLC  &IGADSP8  THE OFFSET TO THE ROUTINE TO DISPLAY A TYPE 8 *03000002
                         RPT IN THE MODULE IGARPT01.                    03100002
         GBLC  &IGASRCH,&IGAINS,&IGADEL,&IGAFTRE                        03200002
         GBLC  &IGAKEYW  THE INDEX OF THE ADDRESS OF THE ROUTINE TO GET*03300002
                         A WORK AREA FOR COLLECTING KEYS FOR SEARCH.    03400002
         GBLC  &IGASCNL,&IGASCNR,&IGAFSP                                03500002
         GBLC  &IGAFSPS  OFFSET FOR THE BRANCH ENTRY TO THE FSPACE     *03600002
                         PROGRAM WHEN THE SPACE CONTROL ADDRESS IS     *03700002
                         CODED IN THE FSPACE MACRO-INSTRUCTION.         03800002
         GBLC  &IGAFSPF  BRANCH ENTRY OFFSET FOR FSPACE WITH A FIXED   *03900002
                         LENGTH ENTRY USING A FIXEDHDR.                 04000002
         GBLC  &IGAFS8,&IGAFS12,&IGAFS80  THE ENTRY POINTS TO RELEASE  *04100002
               ENTRIES OF THE RESPECTIVE LENGTHS USING THE FIXEDHDR IN *04200002
               A SPACE CONTROL AREA.                                    04300002
         GBLC  &IGASTRE,&IGAGSP                                         04400002
         GBLC  &IGAINS5,&IGADEL5                                        04500002
         GBLC  &IGAEOPV  THE OFFSET TO THE PATH CODE BYTE IN THE TYPE 8*04600002
                         RPT HEADER FOR THE PATH TO THE SINK CURRENTLY *04700002
                         SELECTED BY THE CURSOR.                        04800002
         GBLC  &IGACNT5  THE OFFSET TO THE USE COUNTER IN THE TYPE 5   *04900002
                         RPT HEADER.                                    05000002
         GBLC  &IGAMSK5  THE OFFSET TO THE TABLE OF MASKS FOR TYPE 5   *05100002
                         RPT.                                           05200002
         GBLC  &IGATOP5  THE OFFSET TO THE RPT SOURCE IN THE TYPE 5 RPT*05300002
                         HEADER.                                        05400002
         GBLC  &IGAMAX   THE OFFSET TO THE WORD CONTAINING THE MAXIMUM *05500002
                         PARTIAL ORDER VALUE.                           05600002
         GBLC  &IGADJPV    ENTRY OFFSET FOR PARTIAL ORDER ADJUSTMENT.   05700002
         GBLC  &IGAPVS     ENTRY POINT FOR PARTIAL ORDER SEARCH.        05800002
         GBLC  &IGAGPV     ENTRY OFFSET FOR GETTING PARTIAL ORDER VALUE 05900002
         GBLC  &IGAISP   BRANCH ENTRY OFFSET FOR SPACE CONTROL SETUP.   06000002
         GBLC  &IGAFRSC  BRANCH ENTRY OFFSET TO THE ROUTINE TO RELEASE *06100002
                         A SPACE CONTROL AREA AND ALL OF ITS RELATED   *06200002
                         SPACE VIA THE FREEMAIN MACRO-INSTRUCTION.      06300002
         GBLC  &IGAGSPF  BRANCH ENTRY OFFSET FOR FIXED LENGTH ENTRIES  *06400002
                         USING A FIXEDHDR FROM THE GSPACE MACRO OR FROM*06500002
                         INSIDE THE MODULE IGARPT01.                    06600002
         GBLC  &IGAGSPS  BRANCH ENTRY OFFSET FOR VARIABLE LENGTH SPACE *06700002
                         ALLOCATION WHEN THE SPACE CONTROL ADDRESS IS  *06800002
                         CODED IN THE GSPACE MACRO-INSTRUCTION.         06900002
         GBLC  &IGAGS8,&IGAGS12,&IGAGS80  THE BRANCH ENTRY OFFSETS FOR *07000002
                         THE ROUTINES TO ALLOCATE SPACE FOR THE        *07100002
                         RESPECTIVE FIXED LENGTHS IN A SPACE CONTROL A. 07200002
         GBLC  &IGACON   THE OFFSET TO THE CONTANT AREA.                07300002
         GBLC  &IGANAME    THE NAME OF THE PROGRAM.                     07400002
         GBLC  &IGADSP         BRANCH ENTRY FOR DSPRPT.                 07500002
         GBLC  &IGAISCN  THE INDEX OF THE ADDRESS OF THE ROUTINE TO USE*07600002
                         IN THE MODULE IGARPT01 TO INITIALIZE FOR      *07700002
                         SUBSEQUENT SCANNING OPERATIONS FOR SOME RPT'S. 07800002
         GBLC  &IGADDR   THE OFFSET TO THE ADDRESS OF THE MODULE       *07900002
                        IGARPT01 FROM THE BEGINNING OF THE TREE HEADER. 08000002
         GBLA  &IGALEFT(256)  GLOBAL INDEXED VARIABLE FOR LEFT EDGES    08100002
.*                             IN THE BINARY PARSE TREE.                08200002
         GBLA  &IGARGHT(256)   GLOBAL VECTOR FOR RIGHT EDGES.           08300002
         GBLB  &IGARL(256)     GLOBAL VECTOR FOR RIGHT/LEFT FLAGS.      08400002
         GBLB  &IGAIS(256)     GLOBAL VECTOR FOR INNER/SINK STATUS.     08500002
         GBLA  &IGAPATH(16)  PATH VECTOR TO ATOMIC ELEMENT IN PARSE.    08600002
         GBLA  &IGALEVL      PATH LENGTH TO ATOM IN PARSE TREE.         08700002
         GBLB  &IGAOKAY  GLOBAL FOR INDICATING VALID SYNTAX.            08800002
         GBLB  &IGAPGM   FOR USE IN IGARPTXX MODULES ONLY.              08900002
         GBLB  &IGALOAD  1 IF PGM IS LOADED VIA LOAD MACRO.             09000002
         GBLB  &IGAXTRN  1 IF THE EXTRN HAS BEEN GENERATED.             09100002
         GBLB  &IGALONE  ON FOR STAND-ALONE OPERATION OF THE RPTS      *09200002
               COMPONENT FOR UNIT TESTING.                              09300002
         GBLB  &IGAFTCH  ON TO FAKE OUT THE CVTRPT AND TCBRPT LOADS    *09400002
                         WHEN THE RPTS COMPONENT IS BEING UNIT TESTED.  09500002
         GBLC  &IGARPT#  RADIX PARTITION TREE TYPE.                     09600002
         GBLB  &RPTVNUM(16)    INDEXED GLOBAL LOGICAL VECTOR FOR C      09700002
.*                             CONTROLLING THE GENERATION OF DSECTS.    09800002
         GBLB  &IGASPDS  THIS BIT IS ON IF THE SPACE CONTROL DSECT HAS *09900002
                         ALREADY BEEN GENERATED.                        10000002
         GBLC  &IGASA0   OFFSET TO THE FIRST SAVE AREA.                 10100002
         GBLC  &IGASA1   OFFSET TO THE SECOND SAVE AREA IN THE SPACE   *10200002
                         CONTROL AREA.                                  10300002
         GBLC  &IGAS8    THE OFFSET TO THE 8-BYTE FREE SPACE CHAIN.     10400002
         GBLC  &IGAS12   THE OFFSET TO THE 12-BYTE FREE SPACE CHAIN.    10500002
         GBLC  &IGAS80   THE OFFSET TO THE 80-BYTE FREE SPACE CHAIN.    10600002
         GBLC  &IGASPZ   LENGTH OF THE SPACE CONTROL AREA.              10700002
         GBLA  &IGAMINP  THE MINIMUM SIZE NEEDED FOR A TYPE 8 TREE.     10800002
         GBLA  &IGAMINS  THE MINIMUM REFILL SIZE NEEDED FOR A TYPE 8.   10900002
         GBLA  &IGAX     TRIPLE FOR LEFT LIST SCAN OF THE BINARY PARSE  11000002
         GBLA  &IGAY     TREE THAT RESULTS FROM EXECUTING RPTDSECT WITH 11100002
         GBLA  &IGAZ     THE LIST PARAMETER CODED.                      11200002
         LCLA  &N        A LOCAL TEMPORARY INDEX FOR SUBSCRIPTING       11300002
.*                       INDEXED VARIABLES.                             11400002
.*A000000                                                        Y02147 11500002
.********************************************************************** 11600002
         LCLA  &X        STRING SCANNER.                                11700002
         LCLA  &Y        LIMIT OF NUMBER OF ELEMENTS.                   11800002
         LCLC  &CHAR     CURRENT LIST CHARACTER.                        11900002
         LCLA  &P        PREDECESSOR OF CURRENT VERTEX IN PARSE TREE.   12000002
         LCLA  &C        CURRENT VERTEX IN PARESE TREE.                 12100002
         LCLA  &S        SUCCESSOR OF CURRENT VERTEX IN PARSE TREE.     12200002
         LCLA  &NX       INDEX OF NEXT AVAILABLE VERTEX.                12300002
&IGAXTRN SETB  (0)   TURN OFF THE EXTRN SYMBOL IN STREE.                12400002
         AIF   (K'&GEN NE 0).GEN  GO IF THE GEN PARAMETER IS CODED.     12500002
         AIF   (K'&T EQ 0).OLDT  SEE IF THE NEW TYPE IS CODED.          12600002
&TAG  RPTDSECT TYPE=&T,LIST=&LIST,SCAN=&SCAN,DS=&DS,GEN=&GEN            12700002
         AGO   .FIN                                                     12800002
.OLDT    ANOP                                                           12900002
         AIF   (K'&TAG EQ 0).NOTAG  SEE IF THERE IS A LABEL ON IT.      13000002
&TAG     EQU   *                                                        13100002
.NOTAG   ANOP                                                           13200002
         AIF   ((K'&SCAN NE 0) OR (K'&TYPE NE 0)).GOOD  CHK 4 AT LEAST  13300002
.*                                                   1 OPERAND.         13400002
         MNOTE 12,'NO KEYWORDS CODED FOR RPTDSECT; &SCAN CODED.'        13500002
         MEXIT                                                          13600002
.GOOD    ANOP                                                           13700002
&IGARPT# SETC  '&TYPE'   SET THE RPT #.                                 13800002
         AIF   (K'&TYPE NE 0).VERSION  CHECK FOR RPT TYPE.              13900002
         AIF   (('&SCAN' EQ 'NEXT')OR('&SCAN' EQ 'ISCAN')).ITSCAN       14000002
         AIF   ('&SCAN' EQ 'PARSE').PARSE          CHECK FOR PARSE REQ. 14100002
         MNOTE 12,'SCAN PARAMTER INCORRECT IN RPTDSECT; &SCAN CODED.'   14200002
         MEXIT                                                          14300002
.PARSE   ANOP                                                           14400002
.*--------------------------------------------------------------------* 14500002
.*       PARSE THE LIST INTO A BINARY PARSE TREE.                     * 14600002
.*--------------------------------------------------------------------* 14700002
&X       SETA  (1)       SET &X TO THE INDEX OF THE FIRST CHARACTER IN  14800002
.*                       THE STRING TO BE PARSED.                       14900002
&Y       SETA  (1+K'&LIST)     SET &Y TO THE INDEX OF THE FIRST         15000002
.*                             CHARACTER POSITION AFTER THE LAST        15100002
.*                             CHARACTER IN THE STRING TO BE PARSED.    15200002
&P       SETA  1         SET &P TO THE SOURCE OF THE PARSE TREE.        15300002
&C       SETA  1         SET &C TO THE SOURCE OF THE PARSE TREE.        15400002
&NX      SETA  1         SET &NX TO ONE LESS THAN THE NEXT AVAILABLE    15500002
.*                       VERTEX.                                        15600002
&IGARL(&C)     SETB      (0)   SET THE SOURCE TO A LEFT SUCCESSOR.      15700002
&IGAIS(&C)     SETB      (1)   SET THE SOURCE AS AN INNER VERTEX.       15800002
.********************************************************************** 15900002
.*       IS THERE A LEFT EDGE FROM THE CURRENT VERTEX?                * 16000002
.********************************************************************** 16100002
.ISLEFT  ANOP                                                           16200002
         AIF   (&X EQ &Y).LEOS GO IF THE END OF STRING REACHED.         16300002
&CHAR    SETC  '&LIST'(&X,1)   EXTRACT THE CURRENT CHARACTER.           16400002
&X       SETA  (&X+1)          EKE THE INDEX TO THE NEXT CHARACTER.     16500002
         AIF   ('&CHAR' EQ '(').LLPAREN  AGO IF LEFT PAREN FOUND.       16600002
         AIF   ('&CHAR' EQ ')').LRPAREN  AGO IF RIGHT PAREN FOUND.      16700002
         AIF   ('&CHAR' EQ ',').LCOMMA   AGO IF COMMA FOUND.            16800002
.*--------------------------------------------------------------------* 16900002
.* THE LEFT EDGE GOES TO AN ATOMIC SYMBOL, COLLECT THE SYMBOL AND PUT * 17000002
.* THE LEFT EDGE OF THE CURRENT VERTEX GOING TO IT.                   * 17100002
.*--------------------------------------------------------------------* 17200002
&NX      SETA  (1+&NX)   ESTABLISH PLACE TO PUT THE DEFINITION OF ATOM. 17300002
&IGALEFT(&NX) SETA (&X-1)      INDEX OF FIRST CHARACTER OF ATOM.        17400002
.COLLECT ANOP                                                           17500002
         AIF   (&X EQ &Y).STORE2       SEE IF EOS AFTER ATOM.           17600002
&CHAR    SETC  '&LIST'(&X,1)   PICK OUT THE NEXT CHARACTER.             17700002
&X       SETA  (&X+1)    EKE INDEX TO NEXT CHARACTER.                   17800002
         AIF   ('&CHAR' EQ '(').STORE  AGO IF ATOM ALL COLLECTED.       17900002
         AIF   ('&CHAR' EQ ')').STORE  AGO IF ATOM ALL COLLECTED.       18000002
         AIF   ('&CHAR' NE ',').COLLECT  AGO IF ATOM NOT YET COLLECTED. 18100002
.STORE   ANOP                                                           18200002
&IGARGHT(&NX) SETA (&X-(1+&IGALEFT(&NX)))  COMPUTE LENGTH OF ATOM.      18300002
&IGALEFT(&C) SETA (&NX-&P)  FILL IN LEFT EDGE TO ATOM.                  18400002
&IGARL(&NX) SETB (0)     FLAG AS LEFT SUCCESSOR.                        18500002
&IGAIS(&NX)  SETB (0)    FLAG AS A SINK.                                18600002
         AGO   .RIGHTIN        INTERROGATE CHARACTER.                   18700002
.STORE2  ANOP                                                           18800002
&IGARGHT(&NX) SETA (&X-(&IGALEFT(&NX)))  COMPUTE LENGTH OF ATOM.        18900002
&IGALEFT(&C) SETA (&NX-&P)     FILL IN LEFT EDGE TO ATOM.               19000002
&IGARL(&NX) SETB (0)     FLAG ATOMIC VERTEX AS LEFT SUCCESSOR.          19100002
&IGAIS(&NX) SETB (0)     FLAG ATOMIC VERTEX AS A SINK.                  19200002
         AGO   .REOS     GO TO RIGHT EOS SEQUENCE.                      19300002
.*--------------------------------------------------------------------* 19400002
.* THE LEFT EDGE GOES TO AN EMPTY LIST, SINCE THE CURRENT CHARACTER   * 19500002
.* IS A COMMA.                                                        * 19600002
.*--------------------------------------------------------------------* 19700002
.LCOMMA  ANOP                                                           19800002
&IGALEFT(&C) SETA (0-&P)  SET THE LEFT EDGE EMPTY.                      19900002
         AGO   .MAKRGHT        GO ESTABLISH A RIGHT SUCCESSOR.          20000002
.*--------------------------------------------------------------------* 20100002
.* THERE IS A LIST FOR THE LEFT SUCCESSOR, BECAUSE THE CURRENT        * 20200002
.* CHARACTER IS A LEFT PARENTHESIS.                                   * 20300002
.*--------------------------------------------------------------------* 20400002
.LLPAREN ANOP                                                           20500002
&NX      SETA  (&NX+1)   ESTABLISH A LEFT SUCCESSOR INNER VERTEX.       20600002
&IGARL(&NX) SETB (0)  MAKE NEW INNER VERTEX A LEFT SUCCESSOR.           20700002
&IGAIS(&NX) SETB (1)  MAKE NEW VERTEX AN INNER VERTEX.                  20800002
&IGALEFT(&C) SETA (&NX-&P)     FILL IN LEFT SUBTRACTION INVERTIBLE EDGE 20900002
.*                             TO THE NEW LEFT INNER VERTEX.            21000002
&P       SETA  (&C)      TRACE THE EDGE TO THE NEW LEFT INNER VERTEX.   21100002
&C       SETA  (&NX)     XX                                             21200002
         AGO   .ISLEFT   GO BACK TO LOOK FOR A LEFT EDGE.               21300002
.*--------------------------------------------------------------------* 21400002
.* THERE IS NO LEFT EDGE, BECAUSE THE CURRENT CHARACTER IS A RIGHT    * 21500002
.* PARENTHESIS. NOW THE BACKPATH MUST BE TRACED TO THE MATCHING LEFT  * 21600002
.* PARENTHESIS.                                                       * 21700002
.*--------------------------------------------------------------------* 21800002
.LRPAREN ANOP                                                           21900002
&IGALEFT(&C) SETA (0-&P)  SET LEFT INVERTIBLE SUBTRACTION EDGE EMPTY.   22000002
.RRPAREN ANOP                                                           22100002
&IGARGHT(&C) SETA (0-&P)  ESTABLISH A NULL RIGHT EDGE TOO.              22200002
.*--------------------------------------------------------------------* 22300002
.* TRACE THE BACKPATH TO FIND THE FIRST LEFT SUCCESSOR ON THE WAY TO  * 22400002
.* THE SOURCE. THAT VERTEX SHOULD BE THE PREDECESSOR OF THE FIRST     * 22500002
.* VERTEX IN THE SUBLIST THAT STARTED WITH THE LEFT PARENTHESIS THAT  * 22600002
.* MATCHED THE CUURENT RIGHT PARENTHESIS.                             * 22700002
.*--------------------------------------------------------------------* 22800002
         AIF   (NOT &IGARL(&C)).RPISBAK  GO IF &C IS A LEFT SUCCESSOR.  22900002
.RPBACK  ANOP                                                           23000002
&S       SETA  (&C)      CYCLE THE THREE VERTICES UP THE BACKPATH.      23100002
&C       SETA  (&P)      XX                                             23200002
&P       SETA  (&S-&IGARGHT(&C))  TRACE THE RIGHT EDGE BACKWARD.        23300002
         AIF   (&IGARL(&C)).RPBACK     TRACE UNTIL IT FINDS A LEFT SIDE 23400002
.*--------------------------------------------------------------------* 23500002
.RPISBAK ANOP                                                           23600002
         AIF   (&C EQ 1).ERROR  SEE IF THE SOURCE WAS REACHED; I. E.    23700002
.*                              NO MATCHING LEFT PARENTHESIS.           23800002
&S       SETA  (&C)      TRACE THE EDGE BACK TO THE PREDECESSOR OF      23900002
&C       SETA  (&P)      THE FIRST LEFT SUCCESSOR FOUND ON THE          24000002
&P       SETA  (&S-&IGALEFT(&C))  BACKPATH.                             24100002
         AGO   .ISRIGHT                                                 24200002
.*--------------------------------------------------------------------* 24300002
.* THERE IS NO LEFT OR RIGHT EDGE, BECAUSE THE END OF THE STRING      * 24400002
.* HAS BEEN ENCOUNTERED.                                              * 24500002
.*--------------------------------------------------------------------* 24600002
.LEOS    ANOP                                                           24700002
&IGALEFT(&C) SETA (0-&P)  SET LEFT INVERTIBLE EDGE NULL.                24800002
.REOS    ANOP                                                           24900002
&IGARGHT(&C) SETA (0-&P)  SET RIGHT INVERTIBLE EDGE NULL.               25000002
         AIF   (NOT &IGARL(&C)).EOSBAK  CONTINUE UNTIL THE FIRST LEFT.  25100002
.EOSBACK ANOP                                                           25200002
&S       SETA  (&C)      TRACE THE BACKPATH TO THE FIRST LEFT           25300002
&C       SETA  (&P)            SUCCESSOR.                               25400002
&P       SETA  (&S-&IGARGHT(&C))                                        25500002
         AIF   (&IGARL(&C)).EOSBACK    CHECK FOR A RIGHT SUCCESSOR.     25600002
.EOSBAK  ANOP                                                           25700002
         AIF   (&C NE 1).ERROR                                          25800002
&IGAOKAY SETB  (1)       INDICATE VALID SYNTAX.                         25900002
         MEXIT                                                          26000002
.********************************************************************** 26100002
.* IS THERE A RIGHT EDGE?                                             * 26200002
.********************************************************************** 26300002
.ISRIGHT ANOP                                                           26400002
         AIF   (&X EQ &Y).REOS  GO IF END OF STRING REACHED.            26500002
&CHAR    SETC  '&LIST'(&X,1)   GET CURRENT CHARACTER.                   26600002
&X       SETA  (&X+1)    EKE TO NEXT CHARACTER.                         26700002
.RIGHTIN ANOP                                                           26800002
         AIF   ('&CHAR' EQ ',').MAKRGHT                                 26900002
         AIF   ('&CHAR' EQ ')').RRPAREN                                 27000002
         AGO   .ERROR                                                   27100002
.*--------------------------------------------------------------------* 27200002
.* THERE IS A RIGHT EDGE, THE CURRENT CHARACTER IS A COMMA.           * 27300002
.*--------------------------------------------------------------------* 27400002
.MAKRGHT ANOP                                                           27500002
&NX      SETA  (&NX+1)   GET A PLACE FOR THE NEW RIGHT SUCCESSOR.       27600002
&IGARL(&NX) SETB (1)     INDICATE RIGHT SUCCESSOR.                      27700002
&IGARGHT(&C) SETA (&NX-&P)  STORE RIGHT INVERTIBLE EDGE.                27800002
&IGAIS(&NX) SETB (1)     INDICATE AN INNER VERTEX.                      27900002
&P       SETA  (&C)      TRACE OVER TO THE NEW RIGHT SUCCESSOR.         28000002
&C       SETA  (&NX)     XX                                             28100002
         AGO   .ISLEFT                                                  28200002
.*--------------------------------------------------------------------* 28300002
.ERROR   ANOP                                                           28400002
&IGAOKAY SETB  (0)       INDICATE INVALID SYSNTAX.                      28500002
         MEXIT                                                          28600002
.********************************************************************** 28700002
.ITSCAN  AIF   ('&SCAN' NE 'ISCAN').TRYNEXT  GO IF NOT 1ST INITIALIZE.  28800002
.* INITIALIZE FOR LEFT LIST SCANNING.                                 * 28900002
.*--------------------------------------------------------------------* 29000002
&IGAX    SETA  (1)       SET IT TO THE SOURCE.                          29100002
&IGAY    SETA  (0)       SIGNAL THAT ISCAN HAS BEEN DONE.               29200002
&IGAZ    SETA  (0)       DON'T CAUSE ANY CONFUSION.                     29300002
&IGALEVL SETA  (0)                                                      29400002
         MEXIT                                                          29500002
.*--------------------------------------------------------------------* 29600002
.*  COME HERE FOR THE REAL SCANNING, AFTER THE ISCAN.                 * 29700002
.*--------------------------------------------------------------------* 29800002
.TRYNEXT AIF   ('&SCAN' EQ 'NEXT').DONEXT                               29900002
         MNOTE 12,'INVALID SCAN, NEXT OR ISCAN EXPECTED.'               30000002
&IGAZ    SETA  0         MAYBE IT WILL WORK ANYWAY.                     30100002
         MEXIT                                                          30200002
.DONEXT  AIF   (&IGAY NE 0).NOT1ST  CHECK FOR FIRST TIME.               30300002
.*--------------------------------------------------------------------* 30400002
.*  FIRST TIME INTO TREE FOR LEFT LIST SCAN.                          * 30500002
.*--------------------------------------------------------------------* 30600002
&IGAY    SETA  (1)       SET IT TO THE SOURCE.                          30700002
         AGO   .CHKLEFT  GO LOOK AT THE LEFT SUBTREE.                   30800002
.TREF    ANOP                                                           30900002
&IGAPATH(&IGALEVL) SETA (&IGAPATH(&IGALEVL)+1)  EKE PATH VECTOR ELEMENT 31000002
         AGO   .TEDGF                           ON THE SAME LEVEL.      31100002
.TLEF    ANOP                                                           31200002
&IGALEVL SETA  (1+&IGALEVL)  MAKE PATH VECTOR LONGER TO ATOM.           31300002
&IGAPATH(&IGALEVL) SETA (0)  SET PATH VECTOR ELEMENT TO ZERO.           31400002
.TEDGF   ANOP                                                           31500002
&IGAX    SETA  (&IGAY)   CYCLE THE THREE DOWN THE PATH.                 31600002
&IGAY    SETA  (&IGAZ)   XX                                             31700002
.CHKLEFT ANOP                                                           31800002
&IGAZ    SETA  (&IGAX+&IGALEFT(&IGAY))  TRACE LEFT EDGE (IF THERE IS 1) 31900002
         AIF   (&IGAZ NE 0).TRYLEFT    SEE IF THERE WAS A LEFT EDGE.    32000002
         MEXIT                                                          32100002
.TRYLEFT AIF   (&IGAIS(&IGAZ)).TLEF    SEE IF THE SINK WAS REACHED.     32200002
         AIF   (&IGARGHT(&IGAZ) NE 0).FINZ  SEE IF MT SINK.             32300002
&IGAZ    SETA  (0)       PRETEND EMPTY CHARACTER STRINGS AREN'T THERE.  32400002
.FINZ    MEXIT                                                          32500002
.*--------------------------------------------------------------------* 32600002
.*   INSPECT THE RIGHT SUBTREE.                                       * 32700002
.*--------------------------------------------------------------------* 32800002
.CHKRGHT ANOP                                                           32900002
.NOT1ST  ANOP                                                           33000002
&IGAZ    SETA  (&IGAX+&IGARGHT(&IGAY))  GET RIGHT SUCCESSOR (IF ANY).   33100002
         AIF   (&IGAZ NE 0).TREF       GO IF THERE IS ONE.              33200002
.CHKTOP  AIF   (&IGAY EQ 1).SOURCE     SEE IF SOURCE REACHED FROM RIGHT 33300002
         AIF   (&IGARL(&IGAY)).TREB  GO IF Y IS RIGHT SUCCESSOR.        33400002
&IGAZ    SETA  (&IGAY)   TRACE THE LEFT EDGE BACKWARD.                  33500002
&IGAY    SETA  (&IGAX)   BACKPATH TRACE.                                33600002
&IGAX    SETA  (&IGAZ-&IGALEFT(&IGAY))  BACKTRACE LEFT EDGE.            33700002
&IGALEVL SETA  (&IGALEVL-1)  GO BACK TO NEXT LOWER LEVEL.               33800002
         AGO   .CHKRGHT                                                 33900002
.TREB    ANOP                                                           34000002
&IGAPATH(&IGALEVL) SETA (&IGAPATH(&IGALEVL)-1)  DECREASE ELEMENT IN PV. 34100002
&IGAZ    SETA  (&IGAY)   BACKAPTH TRACE VIA THE RIGHT EDGE.             34200002
&IGAY    SETA  (&IGAX)   XX                                             34300002
&IGAX    SETA  (&IGAZ-&IGARGHT(&IGAY))  TRACE LEFT INVERTIBLE EDGE BACK 34400002
         AGO   .CHKTOP                                                  34500002
.SOURCE  ANOP                                                           34600002
&IGAX    SETA  (0)  SET THE EOP TRIPLE ACCORDINGLY.                     34700002
&IGAY    SETA  (0)  XX                                                  34800002
&IGAZ    SETA  (0)       THE WHOLE TREE HAS BEEN PROCESSED.             34900002
         MEXIT                                                          35000002
.********************************************************************** 35100002
.VERSION ANOP                                                           35200002
&IGABLST SETC  'X''20'''  SET THE OFFSET INTO THE TREE HEADER FOR THE  *35300002
                         LIST OF ENTRY POINTTS.                         35400002
         AIF   (K'&GEN NE 0).GEN  SEE IF THE GEN PARAMETER IS CODED.    35500002
         AIF   ('&IGARPT#' EQ 'SPACE').SPACNTL  SHOULD THE SPACE CONTROL35600002
                         DSECT BE GENERATED?                            35700002
&N       SETA  (&IGARPT#)  CONVERT THE TREE TYPE TO A #.                35800002
         AIF   (&RPTVNUM(&N)).FIN  IF IT'S ALREADY DONE, SKIP IT.       35900002
         AIF   (('&DS' EQ 'NO')OR('&DS' EQ '0')).LETIT  SEE IF THIS IS *36000002
                         NOT REALLY A REQUEST TO GENERATE THE DSECT.    36100002
&RPTVNUM(&N) SETB (1)          SET IT ON SO IT DOESN'T DO IT AGAIN.     36200002
.LETIT   ANOP                                                           36300002
         AIF   (&N EQ 8).RPTV8                                          36400002
         AIF   (&N EQ 5).RPTV5                                          36500002
         MNOTE 12,'INVALID TREE TYPE SPECIFIED.'                        36600002
         AGO   .FIN                                                     36700002
.RPTV5   ANOP                                                           36800002
&IGADDR  SETC  'X''00'''  THE OFFSET TO THE ADDRESS OF THE MODULE      *36900002
                         IGARPT01 FROM THE BEGINNING OF THE TREE HEADER.37000002
                                                                        37100002
&IGATOP5 SETC  'X''04'''  THE OFFSET TO THE SOURCE OF THE TYPE 5 RPT IN*37200002
                         THE TYPE 5 TREE HEADER.                        37300002
&IGACNT5 SETC  'X''0C'''  THE OFFSET TO THE USE COUNTER IN THE TYPE 5  *37400002
                         RPT HEADER.                                    37500002
&IGAMSK5 SETC  'X''80'''  OFFSET TO THE TABLE OF MASKS IN THE TYPE 5   *37600002
                         RPT HEADER.                                    37700002
         AIF   (('&DS'(1,1) EQ 'N')OR('&DS'(1,1) EQ '0')).RPT5END      *37800002
                         SEE IF THE DSECT IS NOT SUPPOSED TO BE        *37900002
                         GENERATED THIS TIME.                           38000002
IGARPTH5 DSECT 0         DSECT FOR SRCH5, INS5, DEL5.                   38100002
IGADDR5  DC    F'0'  THE ADDRESS OF IGARPT01.                           38200002
IGATOP5  DC    F'0'      SOURCE OF BINARY TREE.                         38300002
IGAHVFC5 DC    F'0'      HEAD OF INNER VERTEX FREE CHAIN.               38400002
IGACNT5  DC    F'0'      COUNTER FOR READ-ONLY VALIDATION.              38500002
IGAKEYI5 DC    H'0'      INDEX OF KEY IN RECORD.                        38600002
IGAKEYL5 DC    XL1'00'   THE NUMBER OF BYTES IN THE KEY.                38700002
IGASP5   DC    XL1'00'   THE SUBPOOL NUMBER FOR GETMAINS.               38800002
IGA5MARK EQU   *  THE BYTE JUST PAST THE LAST THING BEFORE THE B-LIST.  38900002
         DC    (&IGAMSK5-(IGA5MARK-IGARPTH5))XL1'00'  LEAVE ROOM.       39000002
IGAMASKS DC    128XL1'FF'  THIS IS FILLED IN BY STREE, TYPE=5.          39100002
IGAMASKZ EQU   *                                                        39200002
         CNOP  0,8       MAKE IT ON A DOUBLE WORD BOUNDARY.             39300002
IGAFIN5  EQU   *         FIRST BYTE PAST HEADER.                        39400002
IGATYP5S EQU   IGAFIN5-IGARPTH5  TREEHDR SIZE FOR TYPE 5 TREE.          39500002
&SYSECT CSECT                                                           39600002
IGAZERO  EQU   0         JUST A ZERO.                                   39700002
IGABASE5 EQU   1         THE ADDRESS OF THE TREEHDR.                    39800002
IGAP5    EQU   2         REGISTER CONTAINING ANTEPENULTIMATE VERTEX.    39900002
IGAC5    EQU   3         REGISTER CONTAINING THE PENULTIMATE VERTEX.    40000002
IGAS5    EQU   15        REGISTER CONTAINING THE SINK ADDRESS.          40100002
IGACREG5 EQU   14        REGISTER TO HOLD THE COUNTER DURING THE SEARCH 40200002
IGASARG5 EQU   0         REGISTER CONTAINING THE SEARCH ARGUMENT.       40300002
.RPT5END ANOP                                                           40400002
.RPTV8   ANOP                                                           40500002
&IGADDR  SETC  'X''00'''  THE OFFSET TO THE ADDRESS OF THE MODULE      *40600002
                         IGARPT01 FROM THE BEGINNING OF THE TREE HEADER.40700002
                                                                        40800002
&IGAHVFC SETC  'X''14'''  OFFSET TO THE IV FREE SPACE BLOCK ADDRESS.    40900002
&IGANAME SETC  'IGARPT01'  THE NAME OF THE MODULE.                      41000002
&IGASRCH SETC  'X''0'''                                                 41100002
&IGAINS  SETC  'X''04'''  SET THE INDEX OF THE ENTRY POINT TO INSERT A *41200002
                         KEY-ADDRESS PAIR IN THE RPT.                   41300002
&IGADEL  SETC  'X''08'''  SET THE INDEX OF THE DELETE ENTRY POINT.      41400002
&IGADSP  SETC  'X''0C'''  SET THE INDEX OF THE ENTRY POINT TO DISPLAY  *41500002
                         THE TREE.                                      41600002
&IGAKEYW SETC  'X''10'''  INDEX OF THE ENTRY POINT WORD FOR OBTAINING  *41700002
                         THE ADDRESS OF THE KEY WORK AREA.              41800002
&IGAISCN SETC  'X''14'''  INDEX OF THE ENTRY POINT WORD TO INITIALIZE  *41900002
                         FOR SCANNING.                                  42000002
&IGASCNL SETC  'X''18'''  ENTRY POINT FOR SCANNING LEFT.                42100002
&IGASCNR SETC  'X''1C'''  ENTRY POINT FOR SCANNING RIGHT.               42200002
&IGAPVS  SETC  'X''20'''  INDEX OF ENTRY POINT FOR PARTIAL ORDER VALUE *42300002
                         SEARCH.                                        42400002
&IGAGPV  SETC  'X''24'''  INDEX OF ENTRY POINT ADDRESS FOR GETTING THE *42500002
                         PARTIAL ORDER VALUE FOR THE CURRENT SINK.      42600002
&IGADJPV SETC  'X''28'''  ENTRY POINT ADDRESS FOR ADJUSTING THE PARTIAL*42700002
                         ORDER VALUE FOR THE CURRENT SINK.              42800002
&IGABFIN SETC  'X''40'''  THE SIZE OF THE LIST OF ENTRY POINT WORDS IN *42900002
                         THE RPT HEADER.                                43000002
&IGASCH8 SETC  'X''0'''  THE OFFSET INTO THE IGARPT01 MODULE FOR THE   *43100002
                         TYPE 8 RPT SEARCH ROUTINE.                     43200002
&IGADEL8 SETC  'X''180'''  THE OFFSET TO THE TYPE 8 RPT DELETE ROUTINE *43300002
                         IN THE IGARPT01 MODULE.                        43400002
&IGADEL5 SETC  'X''2A0'''                                               43500002
&IGAINS5 SETC  'X''300'''  BRANCH ENTRY OFFSET FOR INSERT INTO A TYPE 5*43600002
                         RPT.                                           43700002
&IGAINS8 SETC  'X''450'''  THE OFFSET TO THE TYPE 8 INSERT ROUTINE IN  *43800002
                         THE IGARPT01 MODULE.                           43900002
&IGALSCN SETC  'X''4B0'''  THE OFFSET TO THE ROUTINE TO SCAN LEFT IN   *44000002
                         THE IGARPT01 MODULE.                           44100002
&IGARSCN SETC  'X''4D0'''  THE OFFSET TO THE ROUTINE TO SCAN RIGHT IN  *44200002
                         THE IGARPT01 MODULE.                           44300002
&IGAISP  SETC  'X''640'''                                               44400002
&IGAFRSC SETC  'X''680'''                                               44500002
&IGAGSPS SETC  'X''780'''  LOCATION OF THE GSPACE ROUTINE FOR VARIABLE *44600002
                         LENGTH AREAS WHEN THE SPCA IS PROVIDED.        44700002
&IGAGSP  SETC  'X''790'''                                               44800002
&IGAGS8  SETC  'X''900'''                                               44900002
&IGAGS12 SETC  'X''920'''                                               45000002
&IGAGS80 SETC  'X''940'''                                               45100002
&IGAGSPF SETC  'X''960'''                                               45200002
&IGAFSP  SETC  'X''9E0'''                                               45300002
&IGAFSPS SETC  'X''A40'''  ENTRY LOCATION FOR VARIABLE LENGTH          *45400002
                         FSPACE WITH THE SPCA CODED.                    45500002
&IGAFS8  SETC  'X''BC0'''  BRANCH ENTRY OFFSET FOR FIXED LENGTH FSPACE *45600002
                         FOR 8 BYTES.                                   45700002
&IGAFS12 SETC  'X''BE0'''  BRANCH ENTRY OFFSET FOR FIXED LENGTH FSPACE *45800002
                         FOR 12 BYTES.                                  45900002
&IGAFS80 SETC  'X''C00'''  ENTRY POINT FOR FSPACE FOR FIXED LENGTH 80  *46000002
                         BYTES.                                         46100002
&IGAFSPF SETC  'X''C20'''  ENTRY POINT FOR FSPACE WITH A FIXEDHDR.      46200002
&IGASPV  SETC  'X''C40'''  THE OFFSET TO THE PARTIAL ORDER SEARCH      *46300002
                         ROUTINE IN THE MODULE IGARPT01.                46400002
&IGAPVG  SETC  'X''D20'''  THE OFFSET TO THE ROUTINE TO GET THE PARTIAL*46500002
                         ORDER VALUE FOR THE CURRENT SINK.              46600002
&IGAPVAJ  SETC 'X''DA0'''  THE OFFSET TO THE ROUTINE TO ADJUST THE     *46700002
                         PARTIAL ORDER VALUE FOR THE CURRENT SINK.      46800002
&IGADSP8 SETC  'X''ED8'''  THE OFFSET TO THE ROUTINE TO DISPLAY A TYPE *46900002
                         8 RPT.                                         47000002
&IGASTRE SETC  'X''EE8'''  ENTRY POINT TO SET UP A RADIX PARTITION     *47100002
                         TREE.                                          47200002
&IGACON  SETC  'X''F00'''                                               47300002
&IGAGKW  SETC  'X''F90'''  OFFSET TO ROUTINE TO GET A KEY WORK AREA.    47400002
&IGAEOPV SETC  'X''04'''  THE OFFSET TO THE PATH CODE BYTE IN THE TYPE *47500002
                         8 RPT HEADER.                                  47600002
&IGAMAX  SETC  'X''24'''  THE OFFSET TO THE WORD CONTAINING THE MAXIMUM*47700002
                         PARTIAL ORDER VALUE.                           47800002
         AIF   ('&IGARPT#' NE '8').FIN  SEE IF THIS IS NOT EVEN REALLY *47900002
               A TYPE 8 RADIX PARTITION TREE.                           48000002
         AIF   ('&DS'(1,1) EQ 'N').FIN  SEE IF THE DSECT SHOULD BE     *48100002
                         GENERATED THIS TIME.                           48200002
         AIF   ('&DS'(1,1) EQ '0').FIN  SEE IF IT ISN'T THIS TIME.      48300002
IGARPTH  DSECT 0  PARAMETER LIST FOR TREE ROUTINES.                     48400002
IGADDR   DC    XL4'00'  THIS IS THE BASE ADDRESS OF THE PROGRAM.        48500002
IGAPT    DC    F'0'  THE ADDRESS OF THE TREE SOURCE DOUBLE WORD.        48600002
         ORG   IGAPT                                                    48700002
IGAPATH  DC    XL1'00'  THE PATH CODE BYTE.                             48800002
         DC    AL3(0)  ADDRESS OF THE SOURCE OF THE TREE.               48900002
IGANTPEN DC    XL4'00'   ADDRESS OF ANTEPENULTIMATE VERTEX ON PATH.     49000002
IGAPENLT DC    F'0'      ADDRESS OF PENULTIMATE VERTEX ON PATH.         49100002
IGAFARG  DC    F'0'  THE ADDRESS OF THE KEY OF THE RECORD FOUND BY SRCH 49200002
IGAHVFC  DC    F'0'  THE ADDRESS OF THE INNER SPACE FIXEDHDR.           49300002
IGAKEYL  DC    H'0'  THE LENGTH OF A KEY IN BYTES.                      49400002
IGAKEYI  DC    H'0'  THE 0-ORIGIN INDEX OF THE FIRST BYTE OF THE KEY    49500002
*                    IN THE RECORD.                                     49600002
IGAMAP   DC    F'0'      THE ADDRESS OF THE SUBROUTINE TO MAP AN       *49700002
                         ASSOCIATED # TO AN ADDRESS OF AN AREA         *49800002
                         CONTAINING THE CORRESPONDING KEY.              49900002
IGA9FILL DC    F'0'      THE REFILL SUBPOOL AND LENGTH FOR TYPE 9      *50000002
                         VARIABLE LENGTH SPACE ALLOCATION TREES.        50100002
         CNOP  0,4   IGAMAX IS ON A 4-BYTE BOUNDARY.                    50200002
IGAMAX   DC    F'0'   MAXIMUM VALUE FOR PARTIALLY ORDERED TREES.        50300002
IGAVALUE DC    F'0'  THE PARTIAL ORDER VALUE FOR SEMILATTICE CONDITION. 50400002
IGAWORK  DC    F'0'  WORK AREA FOR TYPE 9 RPT POV.                      50500002
IGAPOV   EQU   8  INDEX OF PARTIAL ORDER VALUE IN INNER VERTEX.         50600002
         ORG   IGARPTH+&IGABLST  PUT THE LIST OF THE ENTRY POINTS FOR  *50700002
                         THE VARIOUS OPERATIONS IN THE RIGHT PLACE.     50800002
IGASRCH  DC    F'0'      THE ADDRESS OF THE SEARCH ROUTINE FOR THIS    *50900002
                         TYPE RPT.                                      51000002
IGAINS   DC    F'0'      THE ADDRESS OF THE INSERT ROUTINE FOR THE RPT. 51100002
IGADEL   DC    F'0'      THE ADDRESS OF THE DELETE ROUTINE FOR THE RPT. 51200002
IGADSP   DC    F'0'      THE ADDRESS OF THE ROUTINE TO DISPLAY THE RPT. 51300002
IGAKEYW  DC    F'0'      EITHER THE ADDRESS OF THE WORK AREA TO COLLECT*51400002
                         KEYS OR THE ADDRESS OF THE ROUTINE TO SET ONE *51500002
                         UP.                                            51600002
IGAISCN  DC    F'0'  THE ADDRESS TO LINK TO TO INITIALIZE FOR SCANNING. 51700002
IGASCNL  DC    F'0'      THE ADDRESS OF THE SCAN LEFT ROUTINE.          51800002
IGASCNR  DC    F'0'      THE ADDRESS OF THE SCAN RIGHT ROUTINE.         51900002
IGAPVS   DC    F'0'      THE ADDRESS OF THE PARTIAL ORDER VALUE SEARCH *52000002
                         ROUTINE.                                       52100002
IGAGPV   DC    F'0'      THE ADDRESS OF THE ROUTINE TO OBTAIN THE      *52200002
                         PARTIAL ORDER VALUE FOR THE CURRENT SINK.      52300002
IGADJPV  DC    F'0'      THE ADDRESS OF THE ROUTINE TO ADJUST THE      *52400002
                         PARTIAL ORDER VALUE FOR THE CURRENT SINK.      52500002
IGABFIN  EQU   *                                                        52600002
         DC    (X'40'+IGABFIN-IGARPTH)XL1'00'  FILL OUT THE REST OF THE*52700002
                         RPT ENTRY POINT AREA.                          52800002
IGAFIN8  EQU   *  BYTE PAST TREE HEADER FOR TYPE 8 AND 9 RPT.           52900002
IGATYP8S EQU   IGAFIN8-IGARPTH  TREE HEADER SIZE FOR TYPE 8 AND 9 RPT.  53000002
IGANEBIT EQU   B'00010000'  FLAG BIT TO INDICATE SUBTREE CONTAINS       53100002
*                           UNEQUAL KEYS.                               53200002
IGASTBIT EQU   B'00001000'  SUBTREE OF KNOWN ORDER SELECTION BIT.       53300002
IGARLBIT EQU   B'00000100'  RIGHT/LEFT SUCCESSOR FLAG BIT.              53400002
IGAT0BIT EQU   B'00000010'  LEFT INNER VERTEX FLAG BIT.                 53500002
IGAT1BIT EQU   B'00000001'  INNER VERTEX RIGHT EDGE FLAG BIT.           53600002
&SYSECT  CSECT                                                          53700002
         AIF   (NOT &IGAPGM).NOSHORT  SKIP THE SHORT LABELS IF NOT RPT. 53800002
         RASS  (APT,IGAPT,PATH,IGAPATH,FARG,IGAFARG)                    53900002
         RASS  (HVFC,IGAHVFC,KEYL,IGAKEYL)                              54000002
         RASS  (OFFSET,IGAKEYI,AP,IGANTPEN,AC,IGAPENLT)                 54100002
         RASS  (TREEHDR,IGARPTH,KEYWORK,IGAWORK,VALUE,IGAPOV)           54200002
         RASS  (TREEFIN,IGAFIN8,TREESZ,IGATYP8S)                        54300002
         RASS  (NE,IGANEBIT,IGAQBIT,IGASTBIT,Q,IGAQBIT,RL,IGARLBIT)     54400002
         RASS  (T0,IGAT0BIT,T1,IGAT1BIT,KEYI,IGAKEYI)                   54500002
.NOSHORT ANOP                                                           54600002
         AGO   .FIN      ALL DONE, NOW EXIT FROM RPTDSECT.              54700002
.SPACNTL AIF   (&IGASPDS OR ('&DS'(1,1) EQ 'N')).NOSPDS  SEE IF THE    *54800002
                         DSECT SHOULD BE GENERATED, OR JUST THE GLOBAL *54900002
                         VARIABLE SYMBOLS.                              55000002
&IGASPDS SETB  (1)     SET THE BIT SO THAT IT ONLY GETS GENERATED ONCE. 55100002
IGASPCTL DSECT 0         SPACE CONTROL DSECT FOR THE FSPACE AND GSPACE *55200002
                         MACRO-INSTRUCTIONS.                            55300002
IGARPT9  DC    12F'0'    THE TREE HEADER FOR THE TYPE 9 SPACE CONTROL  *55400002
                         FITS IN THESE 12 WORDS.                        55500002
IGASPEDG DC    F'0' THIS IS THE HEAD OF THE DEFINITION WORD CHAIN FOR * 55600002
*              SPACE CONTROL AREAS FOR SUBPOOLS OTHER THAN SUBPOOL    * 55700002
*              ZERO. THIS IS ONLY THE HEAD OF THE CHAIN FOR THE SPACE * 55800002
*              CONTROL AREA FOR SUBPOOL ZERO, HOWEVER; IN THE SPACE   * 55900002
*              CONTROL AREA FOR THE OTHER SUBPOOLS IT IS THE ADDRESS  * 56000002
*              OF THE SPACE CONTROL AREA FOR SUBPOOL ZERO.            * 56100002
IGAROUND DC    XL4'FFFFFFF0'  THIS IS THE MASK TO USE FOR ROUNDING     *56200002
                         REQUEST LENGTHS TO KEEP THE AREA ALLOCATED ON *56300002
                         THE PROPER ADDRESSING BOUNDARY.                56400002
IGABLOCK DC    F'0'      THIS IS THE HEAD OF THE BLOCK CHAIN OF BLOCK  *56500002
                         DEFINITION WORDS THAT DEFINE THE SPACE        *56600002
                         OBTAINED IN GSPACE FOR REFILLS.                56700002
IGASPLNG DC    XL4'00000000'  THE SUBPOOL NUMBER AND LENGTH OF THE SPACE56800002
                         CONTROL AREA.                                  56900002
IGASA0   DC    18F'0'    THIS IS THE INNER SPACE SAVE AREA.             57000002
IGASA1   DC    18F'0'    THIS IS THE OUTER SPACE SAVE AREA.             57100002
IGAS8    DC    4F'0'     THE FIXED LENGTH HEADER FOR THE FREE SPACE    *57200002
                         CHAIN OF 8-BYTE ENTRIES.                       57300002
IGAS12   DC    4F'0'     THE FIXEDHDR FOR THE 12-BYTE ENTRY FREE SPACE *57400002
                         CHAIN.                                         57500002
IGAS80   DC    4F'0'     THE FIXEDHDR FOR THE 80-BYTE FREE SPACE CHAIN. 57600002
IGASPC   DSECT 0                                                        57700002
IGANXSP  DC    F'0'  THE EDGE TO THE NEXT ONE.                          57800002
IGASPADR DC    F'0'  THE ADDRESS OF THE SPACE CONTROL AREA. THE SUBPOOL*57900002
                         NUMBER FOR THIS ONE IS IN THE LEFT BYTE OF THE*58000002
                         ADDRESS.                                       58100002
IGASPFIN EQU   B'10000000'  THIS BIT IS ON FOR THE LAST EDGE IN THE    *58200002
                         SPACE CONTROL AREA SUBPOOL CHAIN.              58300002
&SYSECT  CSECT                                                          58400002
.NOSPDS  ANOP                                                           58500002
&IGASA0  SETC  'X''40'''  THE OFFSET TO THE FIRST SAVE AREA IN THE SPACE58600002
                         CONTROL AREA.                                  58700002
&IGASA1  SETC  'X''88'''  THE OFFSET TO THE SECOND SAVE AREA IN THE    *58800002
                         SPACE CONTROL AREA.                            58900002
&IGAS8   SETC  'X''D0'''  SET THE OFFSET FROM THE BEGINNING OF THE     *59000002
                         SPACE CONTROL AREA TO THE FIXEDHDR FOR 8-BYTE *59100002
                         ENTRIES.                                       59200002
&IGAS12  SETC  'X''E0'''  SET THE OFFSET TO THE FIXEDHDR FOR 12-BYTE   *59300002
                         ENTRIES.                                       59400002
&IGAS80  SETC  'X''F0'''  SET THE OFFSET TO THE FIXEDHDR FOR 80-BYTE   *59500002
                         ENTRIES.                                       59600002
&IGASPZ  SETC  'X''100'''  SET THE LENGTH OF THE SPACE CONTROL AREA.    59700002
         AGO   .RPTV8  ALMOST ALL DONE, EXCEPT FOR THE GLOBAL VARIABLES*59800002
               FOR THE TYPE 8 AND 9 RADIX PARTITION TREES.              59900002
.********************************************************************** 60000002
.* COME HERE TO GENERATE MISCELLANEOUS GENERATA.                      * 60100002
.********************************************************************** 60200002
.GEN     AIF   ('&GEN(1)' EQ 'CVTRPT').LOADCVT  SEE IF THE SEQUENCE TO *60300002
                         LOAD THE CVTRPT WORD SHOULD BE GENERATED.      60400002
         AIF   ('&GEN(1)' EQ 'TCBRPT').LOADTCB  SEE IF THE SEQUENCE TO *60500002
                         LOAD THE TCBRPT WORD SHOULD BE GENERATED.      60600002
         AIF   ('&GEN(1)' EQ 'TCBRPTA').TCBADDR  SEE IF THE SEQUENCE TO*60700002
                         GET THE ADDRESS OF THE TCBRPT WORD SHOULD BE  *60800002
                         GENERATED.                                     60900002
         MNOTE 12,'INVALID GEN PARAMETER.'                              61000002
         AGO   .FIN      FORGET IT, CAN'T DO ANYTHING WITH THIS.        61100002
.********************************************************************** 61200002
.* GENERATE THE CODE TO LOAD THE ADDRESS OF THE MODULE IGARPT01 FROM  * 61300002
.* THE CVTRPT WORD INTO THE REGISTER SPECIFIED BY THE SECOND ELEMENT  * 61400002
.* IN THE GEN PARAMTER.                                               * 61500002
.********************************************************************** 61600002
.LOADCVT ANOP                                                           61700002
         AIF   (&IGAPGM).IGACVTL  SEE IF THIS IS THE IGARPT01 MODULE.   61800002
         AIF   (NOT(&IGALONE)).NOTLONE  SEE IF THIS IS REALLY IT.       61900002
&TAG     L     &GEN(2),=AL4(IGAFETCH)  ADDRESS OF THE FAKE TCBRPT WORD. 62000002
         BAL   &GEN(2),(X'10'+X'40'*(&GEN(2)-14))(,&GEN(2))  LINK TO   *62100002
                         REPLACE THIS INSTRUCTION WITH A LOAD OF THE   *62200002
                         ADDRESS OF IGARPT01.                           62300002
         AGO   .GENFIN   ALL DONE GENERATING IT NOW.                    62400002
.IGACVTL L     &GEN(2),ADDRESS  LOAD THE ADDRESS OF THE BEGINNING OF   *62500002
                         THE MODULE IGARPT01.                           62600002
         AGO   .GENFIN   ALL DONE NOW.                                  62700002
.NOTLONE ANOP                                                           62800002
&TAG     L     &GEN(2),X'10'  CVT PTR.                                  62900002
         USING CVT,&GEN(2)                                              63000002
         L     &GEN(2),CVTRPT  ADDRESS OF IGARPT01.                     63100002
         DROP  &GEN(2)                                                  63200002
         AGO   .GENFIN                                                  63300002
.********************************************************************** 63400002
.* GENERATE THE CODE TO LOAD THE TCBRPT WORD INTO THE REGISTER        * 63500002
.* SPECIFIED BY THE SECOND ELEMENT IN THE GEN PARAMETER.              * 63600002
.********************************************************************** 63700002
.LOADTCB ANOP                                                           63800002
         AIF   (NOT &IGALONE).LTCBWRD  SEE IF THIS IS UNIT TEST.        63900002
         AIF   (&IGAPGM).IGATCBL  SEE IF THIS IS THE PROGRAM IGARPT01.  64000002
         MNOTE 12,'CAN''T GET THE TBCRPT STUFF.'                        64100002
         AGO   .GENFIN   ALL DONE GENERATING IT NOW.                    64200002
.IGATCBL ANOP                                                           64300002
&TAG     BALR  &GEN(2),0                                                64400002
         AGO   .GENFIN                                                  64500002
         USING *,&GEN(2)                                                64600002
         L     &GEN(2),=AL4(IGATCB)                                     64700002
         DROP  &GEN(2)                                                  64800002
         AIF   ('&GEN(1)' EQ 'TCBRPTA').GENFIN                          64900002
         L     &GEN(2),0(,&GEN(2))                                      65000002
         AGO   .GENFIN   ALL DONE NOW.                                  65100002
.LTCBWRD ANOP                                                           65200002
&TAG     L     &GEN(2),X'10'  ADDRESS OF CVT.                           65300002
         AGO   .GENFIN                                                  65400002
         L     &GEN(2),0(&GEN(2))    ADDRESS OF TCB CHAIN.              65500002
         L     &GEN(2),X'04'(,&GEN(2))  CURRENT TCB ADDRESS.            65600002
         USING TCB,&GEN(2)                                              65700002
&CHAR    SETC  'A'       PREPARE FOR A LOAD ADDRESS INSTRUCTION.        65800002
         AIF   ('&GEN(1)' EQ 'TCBRPTA').NOWLOAD  SEE IF IT IS THE      *65900002
                         ADDRESS OF THE TCBRPT WORD, OR THE ACTUAL     *66000002
                         CONTENTS OF THE TCBRPT WORD.                   66100002
&CHAR    SETC  ''        IT IS THE ACTUAL CONTENTS OF THE WORD.         66200002
.NOWLOAD L&CHAR &GEN(2),TCBRPT  LOAD IGA'S WORD.                        66300002
         DROP  &GEN(2)                                                  66400002
         AGO   .GENFIN   ALL DONE NOW.                                  66500002
.********************************************************************** 66600002
.* GENERATE THE ADDRESS OF THE TCBRPT WORD IN THE REGISTER SPECIFIED  * 66700002
.* BY THE SECOND ELEMENT OF THE GEN PARAMETER.                        * 66800002
.********************************************************************** 66900002
.TCBADDR ANOP                                                           67000002
         AIF   (NOT &IGALONE).LTCBWRD  SEE IF THIS IS THE REAL THING,  *67100002
                         AND NOT JUST UNIT TEST.                        67200002
         AIF   (&IGAPGM).IGATCBL  SEE IF THIS IS THE MODULE IGARPT01.   67300002
         MNOTE 12,'CAN''T GET THE ADDRESS OF THE TCBRPT WORD.'          67400002
         AGO   .GENFIN   ALL DONE GENERATING IT NOW.                    67500002
.GENFIN  AIF   ((NOT &IGALONE)OR &IGAFTCH).FIN  SEE IF THE IGAFETCH    *67600002
                         CSECT IS NEEDED.                               67700002
         AIF   (&IGAPGM).FIN  DON'T GENERATE IT IN THE IGARPT01 MODULE. 67800002
&IGAFTCH SETB  (1)       DON'T GENERATE IT MORE THAN ONCE.              67900002
IGAFETCH CSECT                                                          68000002
IGACVT   DC    F'0'      THIS WILL BE THE ADDRESS OF THE MODULE        *68100002
                         IGARPT01 AFTER IT IS LOADED.                   68200002
&X       SETA  (14)      START BY GENERATING THE CODE FOR REGISTER 14.  68300002
.GOAGAIN ANOP                                                           68400002
         ORG   IGAFETCH+X'10'+(X'40'*(&X-14))  ORIGIN TO THE CORRECT   *68500002
                         OFFSET FOR THE BRANCH ENTRY.                   68600002
&Y       SETA  8                                                        68700002
.BCTRCTR BCTR  &X,0                                                     68800002
&Y       SETA  (&Y-1)                                                   68900002
         AIF (&Y GT 0).BCTRCTR GENERATE 8 BCTR INSTRUCTIONS TO BACK UP *69000002
                         THE LINKAGE ADDRESS TO THE LOAD INSTRUCTION.   69100002
         ST    2,4(,&X)  SAVE REGISTER 2 ON TOP OF THE BAL INSTRUCTION. 69200002
         BALR  2,0       ESTABLISH ADDRESSABILITY.                      69300002
         USING *,2                                                      69400002
         STM   0,1,IGASAVE0  SAVE REGISTERS 0 AND 1.                    69500002
         BAL   2,IGAGCVT  GO CHECK TO SEE IF THE MODULE IS LOADED.      69600002
         DROP  2                                                        69700002
         BALR  1,0       GET BACK ADDRESSABILITY.                       69800002
         USING *,1                                                      69900002
         AIF   (&X EQ 14).XIS14  SEE IF &X IS FOURTEEN.                 70000002
         L     0,IGA15AL1  LOAD THE INSTRUCTION "L 15,0(,15)".          70100002
         AGO   .XDONE    SKIP AROUND THE CASE FOR &X = 14.              70200002
.XIS14   L     0,IGA14AL1  LOAD THE INSTRUCTION "L 14,0(,14)".          70300002
.XDONE   ANOP                                                           70400002
         L     2,4(,&X)  RESTORE REGISTER 2.                            70500002
         ST    0,4(,&X)  OVERLAY THE BAL INSTRUCTION WITH A LOAD OF THE*70600002
                         ADDRESS OF IGARPT01.                           70700002
         LM    0,1,IGASAVE0  RESTORE REGISTERS ZERO AND ONE.            70800002
         BR    &X        RETUTN TO THE LOAD OF THE ADDRESS OF IGAFETCH. 70900002
         DROP  1                                                        71000002
&X       SETA  (&X+1)    EKE THE REGISTER.                              71100002
         AIF   (&X EQ 15).GOAGAIN  REPEAT IT FOR REGISTER 15.           71200002
         ORG   IGAFETCH+X'40'*2  ORIGIN TO THE RIGHT PLACE FOR THE     *71300002
                         SUBROUTINE TO LOAD THE MODULE.                 71400002
*********************************************************************** 71500002
* FETCH THE CONTENTS OF THE CVTRPT WORD, WHICH IS JUST THE ADDRESS OF * 71600002
* THE MODULE IGARPT01. DO THIS BY LOOKING TO SEE IF THE MODULE HAS    * 71700002
* BEEN LOADED ALREADY, AND IF IT HASN'T THEN LOAD IT FIRST.           * 71800002
*********************************************************************** 71900002
IGAGCVT  SLR   0,0                                                      72000002
         BALR  1,0                                                      72100002
         USING *,1                                                      72200002
IGASL0   SL    1,IGASL0A                                                72300002
         DROP  1                                                        72400002
         USING IGAFETCH,1                                               72500002
         CL    0,IGACVT  SEE IF THE MODULE IS ALREADY LOADED.           72600002
         BCR   8,2       RETURN IF IT IS ALREADY LOADED.                72700002
         LOAD  EP=IGARPT01  LOAD THE MODULE.                            72800002
         DROP  1                                                        72900002
         BALR  1,0                                                      73000002
         USING *,1                                                      73100002
IGASL1   SL    1,IGASL1A                                                73200002
         DROP  1                                                        73300002
         USING IGAFETCH,1                                               73400002
         ST    0,IGACVT  STORE THE ADDRESS OF THE LOADED MODULE.        73500002
         DROP  1                                                        73600002
         BR    2                                                        73700002
         CNOP  0,8                                                      73800002
IGASAVE0 DC    XL8'FFFFFFFFFFFFFFFF'                                    73900002
IGASL0A  DC    AL4(IGASL0-IGAFETCH)                                     74000002
IGASL1A  DC    AL4(IGASL1-IGAFETCH)                                     74100002
IGA14AL1 L     14,0(,14)                                                74200002
IGA15AL1 L     15,0(,15)                                                74300002
&SYSECT  CSECT                                                          74400002
.FIN     ANOP                                                           74500002
         MEND                                                           74600002
./  ADD  SSI=30760036,NAME=SCANL
         MACRO                                                          03000002
&TAG     SCANL &TREE,&MORE=,&DONE=                                      06000002
.*A000000                                                        Y02147 09000002
.*A000000                                                        Y02147 12000002
.********************************************************************** 15000002
LJW&SYSNDX EQU 1                                                        18000002
         USING IGARPTH,LJW&SYSNDX                                       21000002
         AIF   (K'&TREE EQ K'&TREE(1)+2).LW1                            24000002
&TAG     L     1,&TREE                                                  27000002
.LW0     L     15,=AL4(IGASCANL)                                        30000002
         BALR  14,15                                                    33000002
         AGO   .FIN                                                     36000002
.LW1     ANOP                                                           39000002
&TAG     LR    1,&TREE                                                  42000002
         AGO   .LW0                                                     45000002
.FIN     ANOP                                                           48000002
         AIF   (K'&MORE NE 0).LW3                                       51000002
         AIF   (K'&DONE EQ 0).END                                       54000002
         LTR   15,15                                                    57000002
         BC    8,&DONE                                                  60000002
         AGO   .END                                                     63000002
.LW3     AIF   (K'&DONE NE 0).LW4                                       66000002
         LTR   15,15                                                    69000002
         BC    7,&MORE                                                  72000002
         AGO   .END                                                     75000002
.LW4     LTR   15,15                                                    78000002
         BC    7,&MORE                                                  81000002
         BC    8,&DONE                                                  84000002
.END     ANOP                                                           87000002
         DROP  LJW&SYSNDX                                               90000002
         RPTDSECT                                                       93000002
         MEND                                                           96000002
./  ADD  SSI=23352300,NAME=SCANR
         MACRO                                                          03000002
&TAG     SCANR &TREE,&MORE=,&DONE=                                      06000002
.*A000000                                                        Y02147 09000002
.********************************************************************** 12000002
LJW&SYSNDX EQU 1                                                        15000002
         USING IGARPTH,LJW&SYSNDX                                       18000002
         AIF   (K'&TREE EQ K'&TREE(1)+2).LW1                            21000002
&TAG     L     1,&TREE                                                  24000002
.LW0     L     15,=AL4(IGASCANR)                                        27000002
         BALR  14,15                                                    30000002
         AGO   .FIN                                                     33000002
.LW1     ANOP                                                           36000002
&TAG     LR    1,&TREE                                                  39000002
         AGO   .LW0                                                     42000002
.FIN     ANOP                                                           45000002
         AIF   (K'&MORE NE 0).LW3                                       48000002
         AIF   (K'&DONE EQ 0).END                                       51000002
         LTR   15,15                                                    54000002
         BC    8,&DONE                                                  57000002
         AGO   .END                                                     60000002
.LW3     AIF   (K'&DONE NE 0).LW4                                       63000002
         LTR   15,15                                                    66000002
         BC    7,&MORE                                                  69000002
         AGO   .END                                                     72000002
.LW4     LTR   15,15                                                    75000002
         BC    7,&MORE                                                  78000002
         BC    8,&DONE                                                  81000002
.END     ANOP                                                           84000002
         DROP  LJW&SYSNDX                                               87000002
         RPTDSECT                                                       90000002
         MEND                                                           93000002
./  ADD  SSI=23392370,NAME=SCSW
         MACRO                                                          00020000
&L       SCSW  &A,&B,&C                                                 00040000
         GBLB  &Z                                                       00060000
         LCLA  &X                                                       00080000
         LCLC  &Y                                                       00100000
         AIF   (&Z).T1                                                  00120000
O        EQU   1                   ONES.                                00140000
M        EQU   4                   MIXED.                               00160000
Z        EQU   8                   ZEROS.                               00180000
&Z       SETB  1                                                        00200000
.T1      ANOP                                                           00220000
&X       SETA  K'&B-1                                                   00240000
&Y       SETC  '&B'(1,&X)                                               00260000
         AIF   ('&A' EQ 'C').L1                                         00280000
         AIF   ('&A' EQ 'S').L2                                         00300000
&L       TM    &B,&Y                                                    00320000
         BC    &A,&C                                                    00340000
         MEXIT                                                          00360000
.L1      ANOP                                                           00380000
&L       NI    &B,255-&Y                                                00400000
         MEXIT                                                          00420000
.L2      ANOP                                                           00440000
&L       OI    &B,&Y                                                    00460000
         MEND                                                           00480000
./  ADD  SSI=20760314,NAME=SIOTTTR
*        %GOTO SIOTTBSL ; /*                                            00050000
         MACRO                                                          00100000
         SIOTTTR                                                        00150000
SIOTTTR  DSECT                                                          00200000
*********************************************************************** 00250000
*    THE SIOTTTR TABLE IS BUILT DURING ALLOCATION AT LOGON.  IT CON-    00300000
*    TAINS THE DISK ADDRESS OF THE STEP INPUT OUTPUT TABLE (SIOT)       00350000
*    ASSOCIATED WITH EACH INDIVIDUAL DD CARD IN THE TIOT.               00400000
*********************************************************************** 00450000
STTRNEXT DS    CL3  TTR OF NEXT PART OF SIOTTTR TABLE OR 0 IF LAST REC  00500000
STTRID   DS    CL1    CONTROL BLOCK IDENTIFIER                          00550000
STTRENT  DS    CL1   NUMBER OF TTRS IN THIS RECORD                      00600000
STTR     DS    57CL3               ROOM FOR 57 TTRS                     00650000
**/                                                                     00700000
         MEND                                                           00750000
* %SIOTTBSL:  ;                                                         00800000
* DECLARE                                                               00850000
*   1  SIOTTTR BASED,                                                   00900000
* /* *************************************************************** */ 00950000
* /* THE SIOTTTR TABLE IS BUILT DURING ALLOCATION AT LOGON.  IT CON- */ 01000000
* /* TAINS THE DISK ADDRESS OF THE STEP INPUT OUTPUT TABLE (SIOT)    */ 01050000
* /* ASSOCIATED WITH EACH INDIVIDUAL DD CARD IN THE TIOT.            */ 01100000
* /* *************************************************************** */ 01150000
*    2 STTRNEXT CHAR(3),             /* TTR OF NEXT PART OF SIOTTTR     01200000
*                                       TABLE OR 0 IF LAST REC       */ 01250000
*    2 STTRID   CHAR(1),             /* CONTROL BLOCK IDENTIFIER     */ 01300000
*    2 STTRENT  CHAR(1),             /* NUMBER OF TTRS IN THIS          01350000
*                                       RECORD                       */ 01400000
*    2 STTR (57) CHAR(3);            /* ROOM FOR 57 TTR'S        */     01450000
*                                                                       01500000
./  ADD  SSI=32820385,NAME=SRCH
         MACRO                                                          00070002
&TAG     SRCH  &TREE,&A=,&K=,&Y=,&N=,&NULL=,&T=,&REL=,                 X00140002
               &SARG=,&EQUAL=,&UNEQUAL=,&TYPE=,&KEYL=                   00210002
.*A000000                                                        Y02147 00280002
.*  THE MEANINGS OF THE PARAMETERS FOR THE SRCH MACRO-INSTRUCTION ARE * 00350002
.*  AS FOLLOWS:                                                       * 00420002
.*--------------------------------------------------------------------* 00490002
.*  &TREE  IS THE ADDRESS OF THE RADIX PARTITION TREE.                * 00560002
.*         IF "TREE" IS CODED, WHERE "TREE" IS A SUITABLE OPERAND FOR * 00630002
.*         A LOAD ADDRESS INSTRUCTION, THE THE MAIN STORAGE LOCATION  * 00700002
.*         SO SPECIFIED IS PRESUMED TO CONTAIN THE ADDRESS OF THE RPT * 00770002
.*         AS RETURNED BY THE STREE MACRO-INSTRUCTION.                * 00840002
.*                                                                    * 00910002
.*         IF "(GPR)" IS CODED, THEN THE INDICATED REGISTER HAS THE   * 00980002
.*         ADDRESS OF THE RPT IN IT.                                  * 01050002
.*                                                                    * 01120002
.*         THE TREE ADDRESS IS LOADED INTO REGISTER 1 BY THE SRCH     * 01190002
.*         MACRO, SO THAT IF "(1)" IS CODED NO LOAD OR LR IS          * 01260002
.*         GENERATED.                                                 * 01330002
.*                                                                    * 01400002
.*         IF THE PARAMETER IS NOT CODED, THE MNOTE "TREE PARAMETER   * 01470002
.*         MISSING, ASSUMED IN R1." IS GENERATED WITH SEVERITY O, AND * 01540002
.*         THE ADDRESS OF THE RPT IS ASSUMED TO BE IN REGISTER 1.     * 01610002
.*--------------------------------------------------------------------* 01680002
.*  &T     IS THE TYPE OF THE RPT. SEE THE DESCRIPTION OF THE STREE   * 01750002
.*         MACRO INSTRUCTION FOR THE COMPLETE LIST OF OPERATIONS      * 01820002
.*         AVAILABLE WITH THE DIFFERENT TYPES OF TREES.               * 01890002
.*                                                                    * 01960002
.*        THE ONLY ALLOWED WAYS TO CODE THE T-PARAMETER ARE:          * 02030002
.*        T=5 FOR TYPE 5 RPT.                                         * 02100002
.*        T=8 FOR TYPE 8 RPT.                                         * 02170002
.*        IF THE T-PARAMETER IS NOT CODED A DEFAULT OF T=8 IS SUPPLIED* 02240002
.*--------------------------------------------------------------------* 02310002
.*  &A    SPECIFIES THE ADDRESS OF THE RECORD OR CONTROL BLOCK        * 02380002
.*        CONTAINING THE KEY TO BE USED IN THE SEARCH.                * 02450002
.*        THE A-PARAMETER, TOGETHER WITH THE K-PARAMETER, DEFINES     * 02520002
.*        THE SEARCH KEY.                                             * 02590002
.*                                                                    * 02660002
.*        IF "A=ADDRESS" IS CODED, WHERE "ADDRESS" IS A MAIN STORAGE  * 02730002
.*        LOCATION, THEN THE ADDRESS OF THE FIRST BYTE OF THE RECORD  * 02800002
.*        IS FORMED WITH A LOAD ADDRESS INSTRUCTION.                  * 02870002
.*                                                                    * 02940002
.*        IF "A=(GPR)" IS CODED, THEN THE ADDRESS OF THE FIRST BYTE   * 03010002
.*        OF THE RECORD IS IN THE SPECIFIED REGISTER.                 * 03080002
.*                                                                    * 03150002
.*--------------------------------------------------------------------* 03220002
.*  &K     SPECIFIES THE SEARCH KEY, WHEN TAKEN IN COMBINATION WITH   * 03290002
.*         THE A-PARAMETER. AT LEAST ONE OF THESE TWO PARAMETERS MUST * 03360002
.*         ALWAYS BE CODED, OR THE MNOTE "A OR K MUST BE CODED." IS   * 03430002
.*         GENERATED, WITH A SEVERITY CODE OF 12.                     * 03500002
.*                                                                    * 03570002
.*         THE FOLLOWING COMBINATIONS ARE VALID:                      * 03640002
.*         --- --------- ------------ --- ------                      * 03710002
.*                                                                    * 03780002
.*         "K=(DISPLACEMENT,LENGTH)", WHERE "DISPLACEMENT" IS EITHER  * 03850002
.*         A RELOCATABLE EXPRESSION OR A SELF-DEFINING ABSOLUTE       * 03920002
.*         DECIMAL NUMBER SPECIFYING EITHER THE ADDRESS OF BYTE ZERO  * 03990002
.*         OF THE KEY OR THE DISPLACEMENT FROM THE ADDRESS SPECIFIED  * 04060002
.*         BY THE A-PARAMETER TO THE FIRST BYTE OF THE KEY.           * 04130002
.*         "LENGTH" IS AN ABSOLUTE EXPRESSION GIVING THE LENGTH OF    * 04200002
.*         THE KEY. FOR TYPE 5 RPT, "LENGTH" IS A DECIMAL NUMBER.     * 04270002
.*                                                                    * 04340002
.*         FOR TYPE 5 RPT, THE KEY LENGTH CANNOT BE GREATER THAN 16.  * 04410002
.*         FOR TYPE 8 RPT, THE KEY LENGTH CANNOT BE GREATER THAN 256. * 04480002
.*                                                                    * 04550002
.*         IF THE A-PARAMETER IS CODED, THE ADDRESS OF THE FIRST      * 04620002
.*         BYTE OF THE KEY IS FORMED BY ADDING THE DISPLACEMENT TO THE* 04690002
.*         ADDRESS FROM THE A-PARAMETER. THE DISPLACEMENT MUST NOT    * 04760002
.*         EXCEED 4095.                                               * 04830002
.*                                                                    * 04900002
.*         IF THE A-PARAMETER IS CODED AND THE K-PARAMETER IS NOT     * 04970002
.*         CODED, THE THE K-PARAMETER IS ASSUMED TO BE THE SAME AS THE* 05040002
.*         K-PARAMETER THAT WAS CODED IN THE STREE MACRO WHEN THE RPT * 05110002
.*         WAS CREATED.                                               * 05180002
.*--------------------------------------------------------------------* 05250002
.*  &Y     IS THE ADDRESS TO BRANCH TO IF THE SEARCH KEY IS EQUAL TO  * 05320002
.*         THE KEY FOUND BY THE SEARCH.                               * 05390002
.*         IF  "Y=(GPR)" IS CODED, THEN THE ADDRESS TO BRANCH TO IF   * 05460002
.*         THEY ARE EQUAL IS IN THE SPECIFIED GPR.                    * 05530002
.*         IF THE  Y-PARAMETER IS NOT CODED, THEN EXECUTION CONTINUES * 05600002
.*         WITH THE NEXT INSTRUCTION AFTER THE SRCH MACRO.            * 05670002
.*--------------------------------------------------------------------* 05740002
.*  &N     IS THE ADDRESS TO BRANCH TO IF THE SEARCH KEY IS NOT EQUAL * 05810002
.*         TO THE KEY FOUND BY THE SEARCH. IT IS CODED THE SAME WAY   * 05880002
.*         THE  Y-PARAMETER IS CODED.                                 * 05950002
.*         NOTE THAT IF THE RPT HAS NO ENTRIES IN IT THE SEARCH KEY   * 06020002
.*         IS CONSIDERED NOT EQUAL.                                   * 06090002
.*--------------------------------------------------------------------* 06160002
.*  &NULL  IS THE ADDRESS TO BRANCH TO IF THERE ARE NO SINKS IN THE   * 06230002
.*         RPT. IT IS CODED IN THE SAME WAY AS THE N AND Y            * 06300002
.*         PARAMETERS. IF BOTH THE NULL AND N  PARAMETERS ARE CODED   * 06370002
.*         AND THE RPT IS EMPTY A BRANCH TO THE NULL ADDRESS IS TAKEN.* 06440002
.*                                                                    * 06510002
.*--------------------------------------------------------------------* 06580002
.*  &REL   IS A QUALIFIER SPECIFYING THE RELATIONSHIP BETWEEN THE     * 06650002
.*         SEARCH KEY AND THE KEY TO BE FOUND.                        * 06720002
.*                                                                    * 06790002
.*         THE REL PARAMETER IS CODED AS FOLLOWS:                     * 06860002
.*                                                                    * 06930002
.*             **  **     **               **   **  **                * 07000002
.*            **  **       **             **  LT **  **               * 07070002
.*           **   **  MAX  **             **  LE **   **              * 07140002
.*           **   **       **             **  EQ **   **              * 07210002
.*   REL=    **  **   MIN   **       ,,  **   --  **  **              * 07280002
.*           **   **  ---  **         ,,  **  GE **   **              * 07350002
.*           **   **       **         ,,  **  GT **   **              * 07420002
.*            **  **  POV  **        ,,   ** POV **  **               * 07490002
.*             **  **     **        ,,     **   **  **                * 07560002
.*                                 ,,                                 * 07630002
.*                                                                    * 07700002
.*         THUS "REL=(MAX,LE)" IMPLIES A SEARCH FOR THE LARGEST KEY   * 07770002
.*         THAT IS LESS THAN OR EQUAL TO THE SEARCH KEY.              * 07840002
.*                                                                    * 07910002
.*         WHEN THE REL PARAMETER IS CODED THE KEY LENGTH MUST BE     * 07980002
.*         CODED EXPLICTLY IN THE K PARAMETER.                        * 08050002
.*--------------------------------------------------------------------* 08120002
.*         WHEN "REL=(MAX/MIN,POV)" IS CODED, A SEARCH IS MADE TO FIND* 08190002
.*         THE LARGEST OR SMALLEST PARTIAL ORDER VALUE.               * 08260002
.*         WHEN "REL=(POV,GE)" IS CODED A SEARCH TO FIND A PARTIAL    * 08330002
.*         ORDER VALUE THAT IS GREATER THAN OR EQUAL TO THE SEARCH    * 08400002
.*         KEY, BUT IS THE SMALLEST THAT CAN BE SO DETERMINED         * 08470002
.*         EFFICIENTLY (NOT NECESSARILY THE SMALLEST POSSIBLE).       * 08540002
.*--------------------------------------------------------------------* 08610002
.*         ONLY THE FOLLOWING COMBINATIONS ARE VALID:                 * 08680002
.*                                                                    * 08750002
.*         REL=(MAX,LT/LE/EQ/POV)                                     * 08820002
.*         REL=(MIN,EQ/GE/GT/POV)                                     * 08890002
.*         REL=(POV,GE) MEANS FIND MIN POV>=KEY.                      * 08960002
.*--------------------------------------------------------------------* 09030002
.*         REL=(POV,EQ) MEANS FIND POV FOR THE SINK ADDRESSED BY THE  * 09100002
.*         CURRENT SETTING OF THE CURSOR.                             * 09170002
.*--------------------------------------------------------------------* 09240002
.*  &SARG      THESE ARE ONLY PRESENT FOR COMPATIBILITY WITH EARLIER  * 09310002
.*  &EQUAL     VERSIONS, AND SHOULD NOT BE USED.                      * 09380002
.*  &UNEQUAL                                                          * 09450002
.*  &TYPE                                                             * 09520002
.*  &KEYL                                                             * 09590002
         GBLC  &IGABLST  THE BEGINNING OF THE LIST OF ENTRY POINTS FOR *09660002
                         THE RPT OPERATIONS.                            09730002
         GBLC  &IGASRCH                                                 09800002
         GBLC  &IGADDR   THE ADDRESS OF THE MODULE IGARPTXX.            09870002
         GBLC  &IGARPT#  THE RADIX PARTITION TREE TYPE.                 09940002
         GBLA  &IGAPATH(16)  PATH VECTOR IN BIG PARSE TREE.             10010002
         GBLA  &IGALEVL      PATH LENGTH TO ATOM IN PARSE TREE.         10080002
         GBLA  &IGALEFT(256)  LEFT EDGE FIELDS IN PARSE TREE.           10150002
         GBLA  &IGARGHT(256)  RIGHT EDGE FIELDS IN PARSE TREE.          10220002
         GBLA  &IGAX  EOP TRIPLE FOR THE BINARY PARSE TREE WITH         10290002
         GBLA  &IGAY  SUBTRACTION INVERTIBLE EDGES GENERATED BY         10360002
         GBLA  &IGAZ  THE MACRO-INSTRUCTION RPTDSECT.                   10430002
         GBLA  &IGAKEYL  THE LENGTH OF THE SEARCH KEY.                  10500002
         GBLC  &IGAGPV  BRANCH ENTRY OFFSET TO GET THE PARTIAL ORDER    10570002
.*                      VALUE FOR THE CURSOR-SELECTED SINK (TYPE 9 RPT) 10640002
         GBLC  &IGAPVS  BRANCH ENTRY OFFSET TO THE ROUTINE IN IGARPT01  10710002
.*                      TO SEARCH FOR A PARTIAL ORDER VALUE THAT IS     10780002
.*                      GREATER THAN OR EQUAL TO THE SEARCH KEY.        10850002
         GBLC  &IGAEOPV  THE OFFSET TO THE PATH CODE BYTE IN THE TYPE 8*10920002
                         RPT HEADER FOR THE PATH TO THE SINK CURRENTLY *10990002
                         SELECTED BY THE CURSOR.                        11060002
         GBLC  &IGACNT5  THE OFFSET TO THE USE COUNTER IN THE TYPE 5   *11130002
                         RPT HEADER.                                    11200002
         GBLC  &IGAMSK5  THE OFFSET TO THE TABLE OF MASKS FOR TYPE 5   *11270002
                         RPT.                                           11340002
         GBLC  &IGATOP5  THE OFFSET TO THE RPT SOURCE IN THE TYPE 5 RPT*11410002
                         HEADER.                                        11480002
         GBLC  &IGAMAX   THE OFFSET TO THE WORD CONTAINING THE MAXIMUM *11550002
                         PARTIAL ORDER VALUE.                           11620002
         GBLC  &IGAKEYW  THE OFFSET TO THE WORD CONTAINING THE ADDRESS *11690002
                         OF THE WORK AREA FOR COLLECTING KEYS.          11760002
         GBLB  &IGAOKAY  ON IF THE PARSE IN RPTDSECT DID NOT FIND ANY  *11830002
                SYNTAX ERRORS IN THE R PARAMETER LIST.                  11900002
         LCLA  &I        A LOCAL VARIABLE FOR KEEPING TRACK OF THE     *11970002
                         CURRENT ENTRY BEING SCANNED IN THE R PARAMETER*12040002
                         LIST.                                          12110002
         LCLA  &LNG      THE LENGTH OF THE CURRENT DISPLACEMENT-LENGTH *12180002
                         PAIR.                                          12250002
         LCLC  &X        JUST A LOCAL CHARACTER VECTOR FOR COLLECTING  *12320002
                         OPERANDS.                                      12390002
         LCLB  &FINEQU   ON IF THE EQUATE "FIN&SYSNDX EQU *" MUST BE   *12460002
                         GENERATED AT THE END OF THE MACRO EXECUTION.   12530002
         LCLB  &ERROR    THIS BIT IS TURNED ON WHENEVER AN MNOTE OF    *12600002
                         SUFFICIENT SEVERITY IS GENERATED.              12670002
         LCLB  &KLMNOTE  ON WHEN THE KEY LENGTH EXCEEDS 256 BYTES.      12740002
         LCLA  &DSP      THIS IS USED FOR COLLECTING THE DISPLACEMENT  *12810002
                         AS A NUMBER.                                   12880002
         LCLC  &FIELD    THIS IS USED TO HOLD THE FIELD OF AN (F,L)    *12950002
                         PAIR WHILE GETTING THE L.                      13020002
         LCLB  &XFER     ON TO GENERATE THE MOVES WHEN IT IS THE RIGHT *13090002
               ITERATION THROUGH THE LOOP.                              13160002
         LCLA  &KL             KEY LENGTH ARITHMETIC VARIABLE.          13230002
         LCLA  &TMPA     A LOCAL ARITHMETIC TEMPORARY.                  13300002
         LCLB  &WORKEY   ON IF THE KEY IS COLLECTED AT IGAWORK.         13370002
         LCLB  &USING    THIS BIT IS TURNED ON WHEN A USING WITH       *13440002
                         REGISTER R1 IS GENERATED.                      13510002
         LCLB  &FIN      ON IF THE FIN&SYSNDX EQU * IS TO BE GENERATED *13580002
                         AT THE END.                                    13650002
         LCLC  &P,&C,&S,&GOLEFT,&ITSMOP,&ITSEOP,&TREEHDR,&ARG,&EKER     13720002
         LCLC  &EKE,&TOOBAD,&FOUR,&O                                    13790002
         LCLC  &R1       GENERAL REGISTER 1.                            13860002
         LCLC  &TMP      A TEMPORARY LOCAL CHARACTER VECTOR.            13930002
         LCLC  &TMP0     A LOCAL TEMPORARY CHARACTER VARIABLE.          14000002
         LCLC  &TMP1     A TEMPORARY LOCAL CHARACTER VECTOR.            14070002
         AIF   ((K'&SARG EQ 0)AND(K'&EQUAL EQ 0)AND(K'&UNEQUAL EQ 0)AND*14140002
               (K'&KEYL EQ 0)).NEW                                      14210002
         AIF   (K'&KEYL EQ 0).OLDKLZ  SEE IF THE OLD KEY LENGTH IS NOT *14280002
                         GIVEN.                                         14350002
&TAG     SRCH  &TREE,A=&SARG,Y=&EQUAL,N=&UNEQUAL,T=&T,TYPE=&TYPE,K=(0, *14420002
               &KEYL),NULL=&NULL,REL=&REL                               14490002
         AGO   .END                                                     14560002
.OLDKLZ  ANOP                                                           14630002
         AIF   (K'&SARG LE 2).OLDONE  SEE IF THE SEARCH ARGUMENT IS NOT*14700002
                         OF THE FORM "D(GPR)".                          14770002
         AIF   (NOT(('&SARG'(1,1) LE '9')AND('&SARG'(1,1) GE '0'))).OLD*14840002
               ONE       SEE IF IT NOT OF THE FORM "D(GPR)".            14910002
.********************************************************************** 14980002
.* THE OLD SEARCH ARGUMENT IS SPECIFIED AS "D(GPR)", TRANSLATE THIS   * 15050002
.* INTO A GOOD NEW FORMAT VIA THE MACRO RECURSION FACILITY.           * 15120002
.********************************************************************** 15190002
         AIF   ('&SARG'(K'&SARG,1) NE ')').OLDONE  HOWEVER, FIRST CHECK*15260002
                         IT FOR VALIDITY.                               15330002
&I       SETA  (1)       LOOK FOR THE LEFT PARENTHESIS.                 15400002
.OLDLOOP ANOP                                                           15470002
&I       SETA  (&I+1)    EKE THE INDEX TO THE NEXT CHARACTER.           15540002
         AIF   (&I GT (K'&SARG)).OLDONE  SEE IF THERE ISN'T ANY LEFT   *15610002
                         PARENTHESIS.                                   15680002
         AIF   ('&SARG'(&I,1) NE '(').OLDLOOP  SEE IF IT IS STILL      *15750002
                         GOING.                                         15820002
&TMP0    SETC  '&SARG'(1,&I-1)  PICK UP THE DISPLACEMENT FIELD.         15890002
&TMP1    SETC  '&SARG'(&I,K'&SARG-(&I+1))  GET THE GPR WITH ITS        *15960002
                         SURROUNDING PARENTHESES.                       16030002
&TAG     SRCH  &TREE,A=&TMP1,K=(&TMP0,),Y=&EQUAL,N=&UNEQUAL,T=&T,      *16100002
               TYPE=&TYPE,NULL=&NULL,REL=&REL                           16170002
         AGO   .END      ALL DONE NOW.                                  16240002
.OLDONE  ANOP                                                           16310002
&TAG     SRCH  &TREE,A=&SARG,Y=&EQUAL,N=&UNEQUAL,T=&T,TYPE=&TYPE,      *16380002
               NULL=&NULL,REL=&REL                                      16450002
         AGO   .END      ALL DONE NOW.                                  16520002
.NEW     ANOP                                                           16590002
.********************************************************************** 16660002
.* CHECK THE TYPE AND T PARAMETERS TO SEE IF A VALID RPT TYPE IS      * 16730002
.* SPECIFIED. IF NEITHER IS SPECIFIED, ASSUME IT IS TYPE 8 RPT. THE   * 16800002
.* TYPE IS PUT INTO THE GLOBAL VARIABLE &IGARPT# AT THE END OF THE    * 16870002
.* TYPE CHECKING SECTION.                                             * 16940002
.********************************************************************** 17010002
.RPT#    AIF   (K'&T EQ 0).RPT#TMT  SEE IF THE T PARAMETER IS CODED.    17080002
         AIF   (K'&TYPE EQ 0).RPT#TCK  USE THE T PARAMETER IF IT IS    *17150002
                         CODED AND THE TYPE PARAMETER IS NOT CODED.     17220002
.********************************************************************** 17290002
.* BOTH THE T AND TYPE PARAMETERS ARE CODED; SEE IF THEY ARE THE SAME,* 17360002
.* AND IF THEY ARE NOT THEN USE T.                                    * 17430002
.********************************************************************** 17500002
         AIF   ('&T' EQ '&TYPE').RPT#TCK  IF THEY ARE THE SAME THEN USE*17570002
                         T.                                             17640002
         MNOTE 4,'TYPE CONFLICT, ONLY T OR TYPE SHOULD BE CODED.'       17710002
.RPT#TCK ANOP                                                           17780002
&IGARPT# SETC  '&T'      GET THE RPT TYPE.                              17850002
         AGO   .RPT#CHK  GO TO CHECK THE VALIDITY OF THE RADIX         *17920002
                         PARTITION TREE TYPE.                           17990002
.********************************************************************** 18060002
.* THE T PARAMETER IS NOT CODED, SEE IF THE TYPE PARAMETER IS CODED.  * 18130002
.********************************************************************** 18200002
.RPT#TMT AIF   (K'&TYPE EQ 0).RPT#8  IF BOTH ARE LEFT OUT USE TYPE 8   *18270002
                         RPT.                                           18340002
&IGARPT# SETC  '&TYPE'   SET THE TYPE TO THE TYPE THAT IS SPECIFIED BY *18410002
                         THE TYPE PARAMETER.                            18480002
         AGO   .RPT#CHK  GO CHECK IT FOR VALIDITY.                      18550002
.RPT#8   ANOP                                                           18620002
&IGARPT# SETC  '8'       SET THE RPT TYPE TO 8.                         18690002
.RPT#CHK AIF   (('&IGARPT#' EQ '8')OR('&IGARPT#' EQ '5')OR('&IGARPT#' E*18760002
               Q '4')).RPT#FIN                                          18830002
         MNOTE 4,'INVALID RPT TYPE, TYPE 8 ASSUMED.'                    18900002
&IGARPT# SETC  '8'       TAKE THE DEFAULT TYPE 8 RPT.                   18970002
.RPT#FIN ANOP                                                           19040002
      RPTDSECT T=&IGARPT#,DS=0  DON'T GENERATE THE BIG DSECT.           19110002
.********************************************************************** 19180002
         AIF   (K'&TREE NE 0).CHKGPR  SEE IF THE TREE ADDRESS IS CODED. 19250002
         MNOTE 0,'TREE PARAMETER MISSING, ASSUMED IN R1.'               19320002
         AGO   .CHKTAG  GO CHECK THE LABEL TO SEE IF EQU * NEEDED.      19390002
.CHKGPR  ANOP                                                           19460002
         AIF   (K'&TREE EQ K'&TREE(1)+2 AND N'&TREE EQ 1).LW1           19530002
&TAG     L     1,&TREE   LOAD ADDRESS OF PARAMETER LIST.                19600002
         AGO   .LW2                                                     19670002
.LW1     ANOP                                                           19740002
         AIF   ('&TREE' NE '(1)').LW1F  SEE IF THE TREE ADDR IS IN GPR1 19810002
.CHKTAG  ANOP                                                           19880002
         AIF   (K'&TAG EQ 0).LW1B  SINCE THERE IS NO LR, DOES IT HAVE   19950002
.*                                 TO GENERATE THE LABEL EQU * ?        20020002
&TAG     EQU   *                                                        20090002
.LW1B    AGO   .LW2      DONE WITH LABEL AND TREE.                      20160002
.LW1F    ANOP                                                           20230002
&TAG     LR    1,&TREE(1)                                               20300002
.********************************************************************** 20370002
.* THE TREE ADDRESS IS NOW IN REGISTER 1.                             * 20440002
.********************************************************************** 20510002
.LW2     AIF   ((K'&A NE 0)OR(K'&K NE 0)).LW3  MAKE SURE THAT EITHER    20580002
.*             THE A OR K PARAMETER IS CODED.                           20650002
         MNOTE 12,'A OR K MUST BE CODED.'                               20720002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         20790002
.LW3     ANOP                                                           20860002
&R1      SETC  '1'  REGISTER 1 FOR USING STATEMENT.                     20930002
.*--------------------------------------------------------------------* 21000002
.*  BRANCH OUT TO THE VARIOUS SEARCHES HERE.                          * 21070002
         AIF   ('&IGARPT#' EQ '8').SRCH8  SEE IF THIS IS A TYPE 8 RPT.  21140002
         AIF   ('&IGARPT#' EQ '5').SRCH5  SEE IF THIS IS A TYPE 5 RPT.  21210002
         MNOTE 12,'INVALID RPT TYPE, NO TYPE &IGARPT#.'                 21280002
         MEXIT                                                          21350002
.*--------------------------------------------------------------------* 21420002
.* SRCH8, USING THE SUBROUTINE IN IGARPT01.                           * 21490002
.*                                                                    * 21560002
.*       FOR SRCH8:                                                   * 21630002
.* 0. LEFT AND RIGHT INVERTIBLE EDGES, 3 BYTES LONG, EITHER OF THE    * 21700002
.*    SUBTRACTION OR EXCLUSIVE-OR TYPE.                               * 21770002
.* 1. NO SUCCESSOR PAIRING.                                           * 21840002
.* 2. MAXIMUM OF A 256-BYTE KEY IS SUPPORTED.                         * 21910002
.* 3. THE FLAG BITS ARE STORED WITH THE PREDECESSOR VERTEX.           * 21980002
.* 4. SCANNING FUNCTIONS ARE SUPPORTED WITH INVERTIBLE EDGES.         * 22050002
.*--------------------------------------------------------------------* 22120002
.SRCH8   ANOP                                                           22190002
.********************************************************************** 22260002
.* CHECK THE REL PARAMETER TO SEE IF A PARTIAL ORDER VALUE IS         * 22330002
.* INVOLVED.                                                          * 22400002
.********************************************************************** 22470002
         AIF   (K'&REL NE 0).NOTPOV  SEE IF THE REL PARAMETER IS NOT   *22540002
                         CODED.                                         22610002
         AIF   (N'&REL NE 1).TWOREL  SEE IF THERE ARE TWO ELEMENTS IN  *22680002
                         THE REL PARAMETER.                             22750002
         AIF   ('&REL(1)' EQ 'POV').POVGET  SEE IS THE SEARCH IS JUST  *22820002
                         TO GET THE POV FROM THE CURRENT CURSOR        *22890002
                         SETTING, OR USING THE KEY (IF THERE IS ONE).   22960002
         AGO   .NOTPOV   IT IS NOT A PARTIAL ORDER VALUE SEARCH.        23030002
.TWOREL  ANOP                                                           23100002
         AIF   (('&REL(1)' EQ 'POV')OR('&REL(2)' EQ 'POV')).ITSAPOV    *23170002
                         SEE IF A PARTIAL ORDER VALUE IS INVOLVED.      23240002
.NOTPOV  ANOP                                                           23310002
.********************************************************************** 23380002
.* GENERATE THE ADDRESS OF THE SEARCH ARGUMENT IN REGISTER ZERO FOR   * 23450002
.* THE SEARCH SUBROUTINE IN THE MODULE IGARPT01.                      * 23520002
.* IF THE K PARAMETER IS NOT CODED JUST GO DIRECTLY TO .CHKA AND USE  * 23590002
.* THE ADDRESS SPECIFIED BY THE A PARAMETER.                          * 23660002
.* IF THE K PARAMETER IS CODED AND DEFINES A KEY CONSISTING OF MORE   * 23730002
.* THAN ONE FIELD, COLLECT IT AT IGAWORK IN THE TREE HEADER. THEN PUT * 23800002
.* THE ADDRESS OF IGAWORK IN REGISTER 0 FOR THE SEARCH.               * 23870002
.********************************************************************** 23940002
         AIF   (K'&K EQ 0).CHKA  SEE IF THERE IS NO SEARCH KEY         *24010002
                         SPECIFIED.                                     24080002
.********************************************************************** 24150002
.* THE K PARAMETER HAS BEEN CHECKED AT THIS POINT, AND IS NOT THE     * 24220002
.* EMPTY STRING.                                                      * 24290002
.********************************************************************** 24360002
.LOOPAIR ANOP                                                           24430002
&XFER    SETB  (1)       FOR THE SRCH MACRO ALWAYS GENERATE THE MOVES  *24500002
                         ON THE SINGLE PASS THROUGH THIS PART.          24570002
&IGAKEYL SETA  0         INITIALIZE THE RECORD LENGTH TO ZERO.          24640002
         AIF   (N'&K EQ 2).KHAS2  SEE IF THERE ARE EXACTLY TWO ELEMENTS*24710002
                         IN K ON PARENTHESIS LEVEL ONE.                 24780002
         AIF   (N'&K NE 1).KMIXED  SEE IF THERE ARE MORE THAN TWO      *24850002
                         ELEMENTS, FOR IF SO THE LIST CONSISTS OF A    *24920002
                         SERIES OF FIELD NAMES OR (D,L) PAIRS.          24990002
.********************************************************************** 25060002
.* K HAS ONLY ONE ELEMENT ON LEVEL 1. FIND OUT WHICH OF THE FOLLOWING * 25130002
.* CASES APPLIES, AND TAKE THE INDICATED ACTION:                      * 25200002
.* IN THE FOLLOWING DISCUSSION, )F" MEANS A FIELD NAME, "D" MEANS     * 25270002
.* DISPLACEMENT, "L" MEANS LENGTH, AND "X" MEANS ANY STRING. THE D AND* 25340002
.* L FIELDS MUST BE SELF-DEFINING TERMS,.                             * 25410002
.* IF:   THEN:                                                        * 25480002
.* K=F   ENTER THE ROUTINE AT .KMIXED TO PROCESS A LIST OF PAIRS OF   * 25550002
.*       F'S AND (D,L) PAIRS, SINCE THIS CASE WILL BE TREATED AS A    * 25620002
.*       SINGLE FIELD NAME BY THAT ROUTINE.                           * 25690002
.* K=(F) THIS IS AN ERROR, BECAUSE OF THE POSSIBLE FUTURE USE OF THIS * 25760002
.*       FORM TO INDICATE THE ADDRESS OF A LIST OF DISPLACEMENT-LENGTH* 25830002
.*       PAIRS IN A REGISTER.                                         * 25900002
.* K=L   L IS THE LENGTH OF THE RECORD TO BE INSERTED. THE A PARMAETER* 25970002
.*       MUST BE CODED FOR THIS TO BE VALID, BECAUSE OTHERWISE THERE  * 26040002
.*       IS NO WAY TO FIND OUT WHERE THE RECORD IS THAT IS TO BE      * 26110002
.*       INSERTED.                                                    * 26180002
.* K=(L) THIS IS AN ERROR, BECAUSE OF THE POSSIBILITY THAT IN THE     * 26250002
.*       FUTURE I WILL WANT TO PUT THE ADDRESS OF A LIST OF           * 26320002
.*       DISPLACEMENT-LENGTH PAIRS IN A REGISTER.                     * 26390002
.* K=((X)) ENTER THE .KMIXED ROUTINE, SINCE IT LOOKS LIKE A LIST OF   * 26460002
.*       DISPLACEMENT-LENGTH PAIRS WITH ONLY ONE PAIR.                * 26530002
.*       ANYTHING ELSE IS INVALID, AND PRODUCES THE MNOTE 12,'INVALID * 26600002
.*       R-PARAMETER.'                                                * 26670002
.********************************************************************** 26740002
         AIF   ('&K'(1,1) NE '(').KNOTLP  SEE IF THERE ARE NO          *26810002
                         PARENTHESES AROUND THE OPERAND.                26880002
         AIF   ('&K'(1,2) EQ '((').KMIXED  SEE IF THIS IS THE CASE     *26950002
                         K=((X)).                                       27020002
         MNOTE 12,'A REGISTER CANNOT BE SPECIFIED FOR THE LIST OF DISPL*27090002
               ACEMENT-LENGTH PAIRS.'                                   27160002
&ERROR   SETB  1         SET THE ERROR FLAG ON.                         27230002
         AGO   .KFIN     END THIS PART.                                 27300002
.********************************************************************** 27370002
.* THIS MUST BE ONE OF THE TWO CASES K=F OR K=L.                      * 27440002
.********************************************************************** 27510002
.KNOTLP  ANOP                                                           27580002
         AIF   (((T'&K(1) NE 'M')AND(T'&K(1) NE 'N')AND(T'&K(1) NE 'O')*27650002
               AND(T'&K(1) NE 'T')AND(T'&K(1) NE 'W')AND(T'&K(1) NE '$'*27720002
               )AND(T'&K(1) NE 'U'))).KMIXED                            27790002
.* THIS MUST BE THE CASE WHERE "R=L" IS CODED.                        * 27860002
         AIF   (T'&K(1) NE 'N').K1NOTN  SEE IF IT IS A SELF-DEFINING   *27930002
                         FIELD.                                         28000002
.********************************************************************** 28070002
.* K=L IS CODED, AND L IS A SELF-DEFINING TERM. USE L FOR THE RECORD  * 28140002
.* LENGTH, BUT FIRST CHECK TO SEE IF THE A PARAMETER IS CODED. IF THE * 28210002
.* A PARAMETER IS NOT CODED IT IS AN ERROR.                           * 28280002
.********************************************************************** 28350002
&IGAKEYL SETA  (&K(1))   GET THE RECORD LENGTH FROM THE L OF THE K     *28420002
                         PARAMETER.                                     28490002
         AIF   (K'&A EQ 0).K1AMT  SEE IF THE A PARAMETER HAS BEEN LEFT *28560002
                         OUT.                                           28630002
         AIF   (&IGAKEYL GT 256).K1LERR  FOR THE NONCE ONLY TAKE FIELDS*28700002
                         THAT ARE LESS THAN 257 BYTES LONG.             28770002
         AIF   (NOT &XFER).KFIN  SEE IF THIS IS THE MVC GENERATION     *28840002
                         LOOP, OR JUST THE VALIDATION AND ADDING UP    *28910002
                         FIELD LENGTHS LOOP.                            28980002
         AIF   ('&A'(1,1) EQ '(').K1AGPR  SEE IF THE ADDRESS IS IN A   *29050002
                         GPR.                                           29120002
         LA    0,&A      ADDRESS OF SEARCH KEY.                         29190002
         AGO   .KFIN     ALL DONE NOW.                                  29260002
.K1AGPR  AIF   ('&A' EQ '(0)').KFIN  SEE IF THE SEARCH KEY ADDRESS IS  *29330002
                         ALREADY IN REGISTER 0.                         29400002
         LR    0,&A(1)   ADDRESS OF SEARCH KEY.                         29470002
         AGO   .KFIN     GO TO THE END OF THE K PARAMETER PROCESSING.   29540002
.********************************************************************** 29610002
.* FOLLOWING ARE THE MISCELLANEOUS ERROR MNOTES FROM THE SINGLE       * 29680002
.* ELEMENT CASE OF THE K PARAMETER.                                   * 29750002
.********************************************************************** 29820002
.K2LERR  ANOP                                                           29890002
.K1LERR  MNOTE 12,'THE LENGTH OF EACH FIELD DEFINED BY K CANNOT EXCEED *29960002
               256 BYTES.'                                              30030002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON SO THE MVC'S DON'T GET  *30100002
                         GENERATED.                                     30170002
         AGO   .KFIN                                                    30240002
.K1AMT   MNOTE 12,'THE A PARAMETER MUST BE CODED WITH K AS CODED.'      30310002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         30380002
         AGO   .KFIN                                                    30450002
.K1NOTN  MNOTE 12,'THE LENGTH MUST BE A SELF-DEFINING TERM FOR THE K PA*30520002
               RAMETER.'                                                30590002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         30660002
         AGO   .KFIN                                                    30730002
.********************************************************************** 30800002
.* THE K PARAMETER HAS EXACTLY TWO ELEMENTS IN IT ON LEVEL 1. SEE IF  * 30870002
.* EITHER OF THESE TWO ELEMENTS STARTS WITH A LEFT PARENTHESIS, WHICH * 30940002
.* MEANS ONE OF THE CASES K=(X,(X)), K=((X),X), OR K=((X),(X)). IF IT * 31010002
.* IS ONE OF THESE CASES ENTER THE MIXED ROUTINE AT .KMIXED.          * 31080002
.* IF IT IS NOT ONE OF THOSE THREE CASES, THEN IT MUST BE ONE OF THE  * 31150002
.* CASES K=(F,F), K=(F,L), OR K=(D,L). NOTE THAT THE CASE K=(D,L) CAN * 31220002
.* BE CODED AS K=(,L).                                                * 31290002
.********************************************************************** 31360002
.KHAS2   AIF   (K'&K(2) NE 0).K2NOTMT  SEE IF THE SECOND ELEMENT IS THE*31430002
                         EMPTY STRING. THIS IS NO GOOD.                 31500002
         MNOTE 12,'THE SECOND ELEMENT OF A DISPLACEMENT-LENGTH PAIR MUS*31570002
               T BE CODED.'                                             31640002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         31710002
         AGO   .FIN      FORGET IT, CAN'T DO ANYTHING WITH AN EMPTY    *31780002
                         STRING FOR THE LENGTH.                         31850002
.K2DMT   ANOP                                                           31920002
&DSP     SETA  (0)       SET THE DISPLACEMENT TO ZERO, SINCE IT IS     *31990002
                         CODED AS THE EMPTY STRING.                     32060002
         AGO   .K2MERGE  MERGE WITH THE CASE WHERE THE DISPLACEMENT IS *32130002
                         NOT THE EMPTY STRING.                          32200002
.K2NOTMT AIF   (K'&K(1) EQ 0).K2DMT  SEE IF THE DISPLACEMENT IS THE    *32270002
                         EMPTY STRING.                                  32340002
         AIF   (('&K(1)'(1,1) EQ '(')OR('&K(2)'(1,1) EQ '(')).KMIXED   *32410002
                         LOOK FOR ONE OF THE CASES K=(X,(X)), K=((X),  *32480002
                         X), OR K=((X),(X)).                            32550002
         AIF   (((T'&K(2) NE 'M')AND(T'&K(2) NE 'N')AND(T'&K(2) NE 'O')*32620002
               AND(T'&K(2) NE 'T')AND(T'&K(2) NE 'W')AND(T'&K(2) NE '$'*32690002
               )AND(T'&K(2) NE 'U'))).KMIXED                            32760002
.* THE SECOND ELEMENT IS NOT A FIELD NAME, SO IT MUST EITHER BE ONE OF* 32830002
.* THE TWO CASES K=(F,L) OR K=(D,L), OR IT IS AN ERROR.               * 32900002
&IGAKEYL SETA  0         ALLOW THE CASE WHERE THE LENGTH IS LEFT OUT   *32970002
                         WHEN THERE IS ONLY ONE DISPLACEMENT.           33040002
         AIF    (K'&K EQ 0).MERGEK2  SEE IF THE LENGTH IS ELIDED.       33110002
         AIF   ((T'&K(1) NE 'M')AND(T'&K(1) NE 'N')AND(T'&K(1) NE 'O')A*33180002
               ND(T'&K(1) NE 'T')AND(T'&K(1) NE 'W')AND(T'&K(1) NE '$')*33250002
               AND(T'&K(1) NE 'U')).K2F1                                33320002
         AIF   (T'&K(1) EQ 'N').K2D  SEE IF THE DISPLACEMENT IS A SELF-*33390002
               DEFINING TERM.                                           33460002
&I       SETA  (K'&K(1)) THE DISPLACEMENT IS NOT A SELF-DEFINING TERM,  33530002
.K2DCHK  AIF   (('&K(1)'(&I,1) LT '0')OR('&K(1)'(&I,1) GT '9')).K2DTYPE 33600002
&I       SETA  (&I+1)    SEE IF IT IS A DECIMAL NUMBER ANYWAY.          33670002
         AIF   (&I GT 0).K2DCHK  THIS IS NECESSARY BECAUSE OF THE WAY  *33740002
               ASSEMBLER F DOES NOT RECORD THE CORRECT TYPE ATTRIBUTE  *33810002
               OF OPERANDS PASSED IN A SUBLIST VIA MACRO-RECURSION.     33880002
         AIF   (K'&K(1) GT 4).K2DERR  SEE IF IT HAS TOO MANY DIGITS.    33950002
.K2D     ANOP                                                           34020002
&DSP     SETA  (&K(1))   PICK UP THE DISPLACEMENT.                      34090002
.K2MERGE ANOP                                                           34160002
         AIF   (T'&K(2) EQ 'N').K2L  SEE IF IT IS A SELF-DEFINING TERM. 34230002
&I       SETA  (K'&K(2))  SET THE INDEX TO IT'S INITIAL VALUE.          34300002
         AIF   (K'&K(2) EQ 0).K2LERR SEE IF IT IS THE EMPTY STRING.     34370002
.K2LCHK  AIF   (('&K(2)'(&I,1) LT '0')OR('&K(2)'(&I,1) GT '9')).K2LTYPE 34440002
&I       SETA  (&I-1)    DECREASE THE INDEX TO THE NEXT CHARACTER.      34510002
         AIF   (&I GT 0).K2LCHK  SEE IF THERE ARE MORE TO CHECK.        34580002
         AIF   (K'&K(2) GT 4).K2LERR  SEE IF IT HAS TOO MANY DIGITS.    34650002
.K2L     ANOP                                                           34720002
&IGAKEYL SETA  (&K(2))   GET THE LENGTH AS A NUMBER.                    34790002
.MERGEK2 ANOP                                                           34860002
         AIF   (&IGAKEYL GT 256).K1LERR  SEE IF THE LENGTH IS MORE THAN*34930002
                         256 BYTES.                                     35000002
         AIF   (&DSP GT 4095).K2DERR  SEE IF THE DISPLACEMENT IS       *35070002
                         GREATER THAN 4095.                             35140002
         AIF   (K'&A EQ 0).K1AMT  SEE IF THE A PARAMETER IS LEFT OUT;  *35210002
                         THAT IS BAD.                                   35280002
         AIF   (NOT &XFER).KFIN  SEE IF THIS IS THE MVC GENERATING LOOP*35350002
                         OR NOT.                                        35420002
.********************************************************************** 35490002
.* THERE IS ONLY ONE FIELD SPECIFIED FOR THE KEY; PUT ITS ADDRESS IN  * 35560002
.* REGISTER 0 FOR THE SEARCH SUBROUTINE IN IGARPT01.                  * 35630002
.********************************************************************** 35700002
         AIF   ('&A'(1,1) EQ '(').K2AGPR  SEE IF THE ADDRESS IS IN A   *35770002
                         GPR.                                           35840002
         AIF   (&DSP EQ 0).K2SZDSP  SEE IF THE DISPLACEMENT IS ZERO.    35910002
         LA    0,&DSP+&A  ADDRESS OF SEARCH KEY.                        35980002
         AGO   .KFIN                                                    36050002
.K2SZDSP LA    0,&A      ADDRESS OF SEARCH KEY.                         36120002
         AGO   .KFIN     ALL DONE WITH THE A AND K NOW.                 36190002
.K2AGPR  AIF   (&DSP EQ 0).K2RZDSP  SEE IF THE DISPLACEMENT IS ZERO.    36260002
         LA    0,&DSP&A  ADDRESS OF SEARCH KEY.                         36330002
         AGO   .KFIN                                                    36400002
.K2RZDSP AIF   ('&A' EQ '(0)').KFIN  SEE IF THE ADDRESS IS ALREADY IN  *36470002
                         REGISTER 0.                                    36540002
         LR    0,&A(1)   ADDRESS OF SEARCH KEY.                         36610002
         AGO   .KFIN     ALL DONE GETTING THE ADDRESS OF THE SEARCH KEY*36680002
                         IN REGISTER 0.                                 36750002
.********************************************************************** 36820002
.* IT IS AN (F,L) PAIR, NOW SEE IF THE SECOND ELEMENT IS A VALID L.   * 36890002
.********************************************************************** 36960002
.K2F1    AIF   (T'&K(2) EQ 'N').K2F  SEE IF IT IS A SELF-DEFINING TERM. 37030002
&I       SETA  (K'&K(2))  SET THE INDEX TO IT'S INITIAL VALUE.          37100002
.K2FCHK  AIF   (('&K(2)'(&I,1) LT '0')OR('&K(2)'(&I,1) GT '9')).K2LTYPE 37170002
&I       SETA  (&I+1)    EKE THE INDEX TO THE NEXT CHARACTER.           37240002
         AIF   (&I GT 0).K2FCHK  SEE IF THERE ARE MORE TO CHECK.        37310002
         AIF   (K'&K(2) GT 4).K2LERR  SEE IF IT HAS TOO MANY DIGITS.    37380002
.K2F     ANOP                                                           37450002
&IGAKEYL SETA  (&K(2))   GET THE LENGTH OF THE (F,L) PAIR.              37520002
         AIF   (&IGAKEYL GT 256).K1LERR  SEE IF THE LENGTH OF THE FIELD*37590002
                         IS MORE THAN 256.                              37660002
         AIF   (NOT &XFER).KFIN  SEE IF THIS IS THE MOVE GENERATION    *37730002
                         LOOP.                                          37800002
         AIF   (K'&A EQ 0).AISNT  SEE IF A ISN'T.                       37870002
         MNOTE 4,'THE A PARAMETER IS REDUNDANT.'                        37940002
.AISNT   LA    0,&K(1)   ADDRESS OF SEARCH KEY.                         38010002
         AGO   .KFIN     ALL DONE NOW, GO CHECK FOR THE MOVE GENERATION*38080002
                         ITERATION.                                     38150002
.********************************************************************** 38220002
.* THE FOLLOWING ARE THE SUNDRY MNOTES FOR THE TWO ELEMENT CASE FOR   * 38290002
.* THE K PARAMETER.                                                   * 38360002
.********************************************************************** 38430002
.K2DERR  MNOTE 12,'DISPLACEMENT IN K PARAMETER CANNOT EXCEED 4095.'     38500002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         38570002
         AGO   .KFIN                                                    38640002
.K2DTYPE MNOTE 12,'THE DISPLACEMENT IN K MUST BE A SELF-DEFINING TERM.' 38710002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON TO PREVENT THE MVC      *38780002
                         GENERATION.                                    38850002
         AGO   .KFIN                                                    38920002
.K2LTYPE MNOTE 12,'THE LENGTH IN K MUST BE A SELF-DEFINING TERM.'       38990002
&ERROR   SETB  1         SET THE ERROR FLAG ON.                         39060002
         AGO   .KFIN                                                    39130002
.********************************************************************** 39200002
.* THE K PARAMETER CONSISTS OF A LIST OF MIXED PAIRS OF FIELDS AND    * 39270002
.* DISPLACEMENT-LENGTH PAIRS. PICK OUT ALL THESE AND CHECK THEM FOR   * 39340002
.* VALIDITY, WHILE ADDING UP ALL THE LENGTHS OF THE INDIVIDUAL FIELDS * 39410002
.* FOR THE MOVES TO IGAWORK, AND (POSSIBLY) FOR USE IN THE REL        * 39480002
.* PARAMETER LATER.                                                   * 39550002
.********************************************************************** 39620002
.* THIS IS THE SECTION TO PROCESS A MIXED LIST OF FIELD NAMES AND (D  * 39690002
.* ,L) PAIRS. PARSE THE OPERAND USING THE PARSE IN THE RPTDSECT       * 39760002
.* MACRO-INSTRUCTION, AND CHECK THE VARIABLE &IGAOKAY TO SEE IF THERE * 39830002
.* ARE NO SYNTAX ERRORS IN THE K PARAMETER.                           * 39900002
.********************************************************************** 39970002
.KMIXED  ANOP                                                           40040002
      RPTDSECT SCAN=PARSE,LIST=&K  PARSE THE OPERAND.                   40110002
         AIF   (&IGAOKAY).KMXOK  SEE IF THE PARSE DETECTED BAD SYNTAX.  40180002
         MNOTE 12,'INVALID SYNTAX IN THE K PARAMETER.'                  40250002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         40320002
         AGO   .KFIN     CAN'T DO ANYTHING WITH THIS.                   40390002
.********************************************************************** 40460002
.* THE SYNTAX APPEARS TO BE OK, NOW START SCANNING OUT THE ATOMS ONE  * 40530002
.* AT A TIME, ANALYZING EACH ONE INDIVIDUALLY IN CONTEXT WITH THE ONES* 40600002
.* ON EITHER SIDE OF IT.                                              * 40670002
.********************************************************************** 40740002
.KMXOK RPTDSECT SCAN=ISCAN  INITIALIZE FOR SUBSEQUENT SCANNING OF      *40810002
                         ATOMS.                                         40880002
         L     15,(&IGAKEYW+&IGABLST)(,1)   ADDR OF W.A. TO COLLECT THE 40950002
         BALR  14,0      SEARCH KEY OR THE ADDRESS OF A ROUTINE IN THE  41020002
         LTR   0,15      MODULE IGARPT01 TO GET AN AREA TO USE FOR      41090002
&WORKEY  SETB  (1)       ON TO INDICATE THAT THE KEY HAS BEEN COLLECTED*41160002
                         AT IGAWORK.                                    41230002
         BCR   4,15      COLLECTING THE SEARCH KEY.                     41300002
.KMXMOR RPTDSECT SCAN=NEXT  GET THE CURSOR POSITIONED AT THE NEXT ATOM. 41370002
.KMXCHK  AIF   (&IGAX EQ 0).KFIN  SEE IF THERE ARE ANY MORE TO DO.      41440002
         AIF   (&IGALEVL EQ 2).KMXLVL2  SEE IF THIS ATOM IS ON LEVEL 2. 41510002
         AIF   (&IGALEVL LE 1).KMXL01  SEE IF THIS ATOM IS ON LEVEL 0  *41580002
                         OR 1.                                          41650002
.********************************************************************** 41720002
.* THE CURRENT ATOM HAS TOO MANY LEVELS OF PARENTHESES AROUND IT, GIVE* 41790002
.* THE ERROR MESSAGE AND GO LOOK FOR THE NEX THING THAT CHANGES LEVEL * 41860002
.* 1 IN THE PATH VECTOR.                                              * 41930002
.********************************************************************** 42000002
&I       SETA  &IGAPATH(1)+1  SET &I TO THE CURRENT OPERAND NUMBER.     42070002
         MNOTE 12,'TOO MANY () LEVELS IN OPERAND &I OF R.'              42140002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         42210002
.********************************************************************** 42280002
.* AN ERROR HAS BEEN DETECTED AND FLAGGED IN THE CURRENT OPERAND. SCAN* 42350002
.* OVER TO THE NEXT ATOM THAT IS NOT PART OF THE CURRENT ENTRY ON     * 42420002
.* LEVEL 1 IN THE PARAMETER.                                          * 42490002
.********************************************************************** 42560002
.SYNC    ANOP                                                           42630002
&I       SETA  &IGAPATH(1)  SET &I TO THE INDEX OF THE OPERAND ON LEVEL*42700002
                         1.                                             42770002
      RPTDSECT SCAN=NEXT  SET THE CURSOR TO THE NEXT ONE.               42840002
         AIF   (&IGAX EQ 0).KFIN  SEE IF THERE AREN'T ANY MORE.         42910002
         AIF   (&I EQ &IGAPATH(1)).SYNC  SEE IF IT IS STILL ON THE SAME*42980002
                         ONE.                                           43050002
         AGO   .KMXCHK   FINALLY GOT THE NEXT ATOM, NOW GO CHECK IT FOR*43120002
                         VALIDITY.                                      43190002
.********************************************************************** 43260002
.* THE CURRENT ATOM IS ON LEVEL 0 OR 1. THEREFORE IT SHOULD BE A VALID* 43330002
.* FIELD NAME; SEE IF IT IS.                                          * 43400002
.********************************************************************** 43470002
.KMXL01  ANOP                                                           43540002
.KMX01   ANOP                                                           43610002
&I       SETA  (1+&IGAPATH(1))  SET &I TO THE 1-ORIGIN INDEX OF THE    *43680002
                         FIELD NAME ON LEVEL 1.                         43750002
         AIF   ((T'&K(&I) NE 'M')AND(T'&K(&I) NE 'N')AND(T'&K(&I) NE 'O*43820002
               ')AND(T'&K(&I) NE 'T')AND(T'&K(&I) NE 'W')AND(T'&K(&I) N*43890002
               E '$')AND(T'&K(&I) NE 'U')).KMX01OK                      43960002
         MNOTE 12,'OPERAND &I OF K DOES NOT HAVE THE PROPER TYPE ATTRIB*44030002
               UTE.'                                                    44100002
&ERROR   SETB  (1)       SET THE ERROR FLAG.                            44170002
         AGO   .SYNC     GO POSITION THE CURSOR TO THE NEXT ONE.        44240002
.********************************************************************** 44310002
.* THE CURRENT ATOM LOOKS LIKE A VALIID FIELD NAME, GET ITS LENGTH    * 44380002
.* ATTRIBUTE AND SEE IF IT ACCEPTABLE.                                * 44450002
.********************************************************************** 44520002
.KMX01OK ANOP                                                           44590002
&LNG     SETA  (L'&K(&I))  CAPTURE IT AS A NUMBER.                      44660002
         AIF   (&LNG LE 256).KMX0LOK  SEE IF IT EXCEEDS 256.            44730002
         MNOTE 12,'THE LENGTH OF FIELD &I OF K EXCEEDS 256 BYTES.'      44800002
&ERROR   SETB  (1)       SET TEH ERROR FLAG.                            44870002
         AGO   .SYNC     GO LOOK AT THE NEXT ONE.                       44940002
.KMX0LOK ANOP                                                           45010002
.********************************************************************** 45080002
.* NOW SEE IF THIS IS THE MOVE GENERATION ITERATION.                  * 45150002
.********************************************************************** 45220002
         AIF   (NOT &XFER).KX0M  GO IF THIS ISN'T THE MOVE GENERATION  *45290002
                         ITERATION.                                     45360002
         MVC   &IGAKEYL.(&LNG,15),&K(&I)         MOVE SUBKEY.           45430002
.KX0M    ANOP                                                           45500002
&IGAKEYL SETA  (&IGAKEYL+&LNG)  EKE THE CUMMULATIVE RECORD LENGTH.      45570002
         AIF   (&IGAKEYL LE 256).KMXMOR  SEE IF THE KEYL LENGTH IS     *45640002
                         STILL LESS THAN 257.                           45710002
         AIF   (&KLMNOTE).KMXMOR  SEE IF THE MNOTE HAS ALREADY BEEN    *45780002
                         GENERATED.                                     45850002
&KLMNOTE SETB  (1)       SET THE BIT ON SO THE MNOTE ONLY GETS         *45920002
                         GENERATED ONCE.                                45990002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         46060002
         MNOTE 12,'KEY LENGTH EXCEEDS 256 BYTES.'                       46130002
         AGO   .KMXMOR   GO LOKK FOR THE NEXT ONE.                      46200002
.********************************************************************** 46270002
.* THE CURRENT ATOM IS ON LEVEL 2. IT MUST THEREFORE BE THE FIRST     * 46340002
.* ELEMENT IN ONE OF THE CASES (F,L) OR (D,L).                        * 46410002
.* FIND OUT WHETHER THE CURRENT ATOM IS AN F OR A D.                  * 46480002
.********************************************************************** 46550002
.KMXLVL2 ANOP                                                           46620002
&X       SETC  '0'       SET THIS FOR THE CASE WHERE THE DISPLACEMENT  *46690002
                         IS AN EMPTY STRING.                            46760002
         AIF   (&IGAZ EQ 0).KMGDSP  GO IF IT IS AN EMPTY STRING, WHICH *46830002
                         MEANS A DISPLACEMENT OF 0.                     46900002
.********************************************************************** 46970002
.* SEE IF ALL THE CHARACTERS IN THE CURRENT ATOM ARE DIGITS 0 THROUGH * 47040002
.* 9, WHICH WOULD MAKE IT A SELF-DEFINING DECIMAL TERM.               * 47110002
.********************************************************************** 47180002
&I       SETA  0         INITIALIZE THE INDEX OF THE CURRENT CHARACTER *47250002
                         IN THE ATOM.                                   47320002
.KMCONT  AIF   (('&K'(&IGALEFT(&IGAZ)+&I,1) LT '0')OR('&K'(&IGALEFT(&IG*47390002
               AZ)+&I,1) GT '9')).KMNOTD                                47460002
&I       SETA  (&I+1)    EKE THE INDEX.                                 47530002
         AIF   (&I LT &IGARGHT(&IGAZ)).KMCONT  KEEP GOING UNTIL ALL    *47600002
                         DIGITS HAVE BEEN EXAMINED.                     47670002
         AIF   (&IGARGHT(&IGAZ) GT 4).KMXBADD  SEE IF THE DISPLACEMENT *47740002
                         HAS TOO MANY BYTES IN IT.                      47810002
&X       SETC  '&K'(&IGALEFT(&IGAZ),&I)  GET THE DISPLACEMENT AS A     *47880002
                         NUMBER.                                        47950002
.KMGDSP  ANOP                                                           48020002
&DSP     SETA  (&X)      GET THE NUMBER NOW.                            48090002
         AIF   (&DSP GT 4095).KMXDBAD  SEE IF THE DISPLACEMENT IS TOO  *48160002
                         BIG.                                           48230002
.********************************************************************** 48300002
.* THE CURRENT ATOM IS A VALID DISPLACEMENT OF A (D,L) PAIR, AND ITS  * 48370002
.* ARITHMETIC VALUE IS IN THE APPROPRIATE RANGE OF VALUES FOR A       * 48440002
.* DISPLACEMENT. ITS VALUE HAS BEEN CAPTURED IN &DSP. NOW LOOK FOR THE* 48510002
.* CORRESPONDING L OF THE PAIR.                                       * 48580002
.********************************************************************** 48650002
&I       SETA  (&IGAPATH(1))  SAVE THE CURRENT ATOM LEVEL 1 INDEX.      48720002
      RPTDSECT SCAN=NEXT  POSITION THE CURSOR TO THE NEXT ATOM.         48790002
         AIF   (&IGAX EQ 0).KMXNOLL  SEE IF THERE ISN'T ANY L FOR IT   *48860002
                         BECAUSE THERE AREN'T ANY MORE ATOMS.           48930002
         AIF   (&IGAPATH(1) NE &I).KMXNOL  SEE IF THE NEXT ATOM IS PART*49000002
                         OF A DIFFERENT ELEMENT ON LEVEL 1.             49070002
         AIF   (&IGALEVL NE 2).KMXPRN  SEE IF THERE ARE TOO MANY LEVELS*49140002
                         OF PARENTHESES.                                49210002
         AIF   (&IGAZ EQ 0).KMXLBAD  SEE IF THE L ATOM IS THE EMPTY    *49280002
                         STRING.                                        49350002
.********************************************************************** 49420002
.* THERE IS A NEXT ATOM IN THE SAME PAIR, NOW CHECK IT TO SEE IF IT IS* 49490002
.* A SELF-DEFINING DECIMAL TERM.                                      * 49560002
.********************************************************************** 49630002
&I       SETA  0  INITIALIZE THE INDEX OF THE CURRENT BYTE IN THE ATOM. 49700002
.KMCNT1  AIF   (('&K'(&IGALEFT(&IGAZ)+&I,1) LT '0')OR('&K'(&IGALEFT(&IG*49770002
               AZ)+&I,1) GT '9')).KMXBADL                               49840002
&I       SETA  (&I+1)    EKE THE INDEX TO THE NEXT BYTE.                49910002
         AIF   (&I LT &IGARGHT(&IGAZ)).KMCNT1  KEEP LOOKING UNTIL ALL  *49980002
                         THE BYTES ARE EXAMINED.                        50050002
         AIF   (&IGARGHT(&IGAZ) GT 4).KMXLERR  SEE IF THE LENGTH IS    *50120002
                         MORE THAN 4 CHARACTERS.                        50190002
&X       SETC  '&K'(&IGALEFT(&IGAZ),&IGARGHT(&IGAZ))  GET THE LENGTH.   50260002
&LNG     SETA  (&X)      TURN IT INTO A NUMBER.                         50330002
         AIF   (&LNG GT 256).KMXLERR  SEE IF IT IS TOO BIG TO DO WITH  *50400002
                         AN MVC.                                        50470002
.********************************************************************** 50540002
.* THE DISPLACEMENT OF THE DISPLACEMENT-LENGTH PAIR IS AT &DSP, AND   * 50610002
.* THE LENGTH IS AT &LNG. CHECK THE A PARAMETER TO SEE IF IT IS CODED,* 50680002
.* BECAUSE IF IT ISN'T CODED THERE IS NO WAY TO FIND OUT WHERE THE    * 50750002
.* RECORD REALLY IS.                                                  * 50820002
.********************************************************************** 50890002
         AIF   (K'&A EQ 0).KMXAMT  SEE IF IT ISN'T THERE.               50960002
.* NOW GENERATE THE MOVE OF THE FIELD IF THIS IS THE MOVE GENERATION  * 51030002
.* ITERATION.                                                         * 51100002
         AIF   (NOT &XFER).KMOVED  SEE IF IT ISN'T THE MOVE GENERATION *51170002
                         ITERATION.                                     51240002
&X       SETC  ''        SET IT UP FOR THE ADDRESS IN A REGISTER.       51310002
         AIF   ('&A'(1,1) EQ '(').KMAGPR  GO IF THE ADDRESS IS IN A    *51380002
                         REGISTER.                                      51450002
&X       SETC  '+'       SET IT UP FOR THE CASE EHERE THE ADDRESS IS   *51520002
                         SUPPLIED IN THE FORM OF A LABEL.               51590002
.KMAGPR  MVC   &IGAKEYL.(&LNG,15),&DSP&X&A            MOVE SUBKEY.      51660002
.KMOVED  ANOP                                                           51730002
&IGAKEYL SETA  (&IGAKEYL+&LNG)  EKE THE CUMMULATIVE RECORD LENGTH.      51800002
         AIF   (&IGAKEYL LE 256).STILLOK  SEE IF THE CUMMULATIVE KEY   *51870002
                         LENGTH HAS GONE OVER 256 BYTES.                51940002
         AIF   (&KLMNOTE).STILLOK  SEE IF THE MNOTE HAS ALREADY BEEN   *52010002
                         GENERATED.                                     52080002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         52150002
&KLMNOTE SETB  (1)   SET IT ON SO THE MNOTE HAS ALREADY BEEN GENERATED. 52220002
         MNOTE 12,'KEY LENGTH IS TOO BIG   256 BYTES IS MAX.'           52290002
.STILLOK ANOP                                                           52360002
.********************************************************************** 52430002
.* NOW SET THE CURSOR TO THE NEXT ATOM, AND SEE IF THE FIRST ELEMENT  * 52500002
.* IS PART OF THE SAME ELEMENT ON LEVEL 1 AS THE LAST (D,L) PAIR.     * 52570002
.********************************************************************** 52640002
&I       SETA  &IGAPATH(1)  PRESERVE THE CURRENT LEVEL 0 INDEX.         52710002
      RPTDSECT SCAN=NEXT  POSITION THE CURSOR TO THE NEXT ATOM.         52780002
         AIF   (&IGAX EQ 0).KFIN  GO IF THERE ISN'T ANY NEXT ATOM.      52850002
         AIF   (&I EQ &IGAPATH(1)).KMXSAME  SEE IF THE LEVEL 1 ELEMENT *52920002
                         IN THE PATH VECTOR DIDN'T CHANGE.              52990002
         AGO   .KMXCHK   GO CHECK THE NEXT ATOM, IT ISN'T PART OF THE  *53060002
                         LAST TWO.                                      53130002
.********************************************************************** 53200002
.* THE FOLLOWING ARE SUNDRY MNOTES FROM THE PROCESSING OF A LIST OF   * 53270002
.* MIXED PAIRS WHERE THE PAIRS ARE OF THE FORM (D,L).                 * 53340002
.********************************************************************** 53410002
.KMXSAME ANOP                                                           53480002
&I       SETA  (&IGAPATH(1)+1)  SET &I TO THE CURRENT OPERAND #.        53550002
         MNOTE 12,'TOO MANY ELEMENTS IN SUBLIST OPERAND &I IN R.'       53620002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         53690002
         AGO   .SYNC     GO LOOK FOR THE NEXT ONE.                      53760002
.KMXAMT  ANOP                                                           53830002
&I       SETA  (1+&IGAPATH(1))  GET THE CURRENT OPERAND NUMBER.         53900002
         MNOTE 12,'THE A PARAMETER MUST BE CODED TO USE A (D,L) PAIR FO*53970002
               R K(&I).'                                                54040002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         54110002
         AGO   .SYNC     GO LOOK FOR THE NEXT ONE.                      54180002
.KMXLERR ANOP                                                           54250002
&I       SETA  (&IGAPATH(1)+1)  GET THE CURRENT OPERAND NUMBER.         54320002
         MNOTE 12,'THE LENGTH OF THE FIELD DEFINED BY K(&I) EXCEEDS 256*54390002
                BYTES.'                                                 54460002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         54530002
         AGO   .SYNC     GO LOOK AT THE NEXT ONE.                       54600002
.KMXBADL ANOP                                                           54670002
&I       SETA  (1+&IGAPATH(1))                                          54740002
         MNOTE 12,'THE LENGTH FOR K(&I) MUST BE A SELF-DEFINING DECIMAL*54810002
                NUMBER.'                                                54880002
&ERROR   SETB  (1)                                                      54950002
         AGO   .SYNC                                                    55020002
.KMXLBAD ANOP                                                           55090002
&I       SETA  (1+&IGAPATH(1))                                          55160002
         MNOTE 12,'THE LENGTH FOR K(&I) CANNOT BE THE EMPTY STRING.'    55230002
&ERROR   SETB  (1)                                                      55300002
         AGO   .SYNC                                                    55370002
.KMXNOL  ANOP                                                           55440002
&I       SETA  (1+&IGAPATH(1))                                          55510002
         MNOTE 12,'LENGTH OF (D,L) PAIR MISSING IN K(&I).'              55580002
&ERROR   SETB  (1)                                                      55650002
         AGO   .KMXCHK   GO CHECK THE CURRENT ATOM FOR VALIDITY.        55720002
.KMXNOLL ANOP                                                           55790002
         MNOTE 12,'LENGTH OF LAST (D,L) PAIR IN K IS MISSING.'          55860002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         55930002
         AGO   .KFIN                                                    56000002
.KMXPRN  ANOP                                                           56070002
&I       SETA  (&IGAPATH(1)+1)                                          56140002
         MNOTE 12,'TOO MANY () LEVELS IN K(&I).'                        56210002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         56280002
         AGO   .SYNC                                                    56350002
.KMXBADD ANOP                                                           56420002
&I       SETA  (1+&IGAPATH(1))                                          56490002
         MNOTE 12,'DISPLACEMENT IN K(&I) EXCEEDS 4 DIGITS.'             56560002
&ERROR   SETB  (1)                                                      56630002
         AGO   .SYNC                                                    56700002
.KMXDBAD ANOP                                                           56770002
&I       SETA  (1+&IGAPATH(1))                                          56840002
         MNOTE 12,'DISPLACEMENT IN K(&I) EXCEEDS 4095.'                 56910002
&ERROR   SETB  (1)                                                      56980002
         AGO   .SYNC                                                    57050002
.********************************************************************** 57120002
.* THE CURRENT ATOM IS AN F OF A (F,L) PAIR.                          * 57190002
.********************************************************************** 57260002
.KMNOTD  AIF   (&IGARGHT(&IGAZ) LE 8).KMXBIGF  SEE IF THE STRING IS    *57330002
                         BIGGER THAN 8 CHARACTERS.                      57400002
&I       SETA  (1+&IGAPATH(1))                                          57470002
         MNOTE 12,'FIELD NAME IN K(&I) IS BIGGER THAN 8 CHARACTERS.'    57540002
&ERROR   SETB  (1)                                                      57610002
         AGO   .SYNC                                                    57680002
.KMXBIGF ANOP                                                           57750002
&FIELD   SETC  '&K'(&IGALEFT(&IGAZ),&IGARGHT(&IGAZ))  GET THE FIELD    *57820002
                         NAME.                                          57890002
.* NOW TRY TO GET THE L OF THE (F,L) PAIR.                            * 57960002
&I       SETA  (&IGAPATH(1))  PRESERVE THE CURRENT LEVEL 1 INDEX.       58030002
      RPTDSECT SCAN=NEXT  POSITION THE CURSOR TO THE NEXT ATOM.         58100002
         AIF   (&IGAX EQ 0).KFLNOL  SEE IF THERE IS NO LENGTH BECAUSE  *58170002
                         THERE ISN'T ANY NEXT ATOM.                     58240002
         AIF   (&IGAPATH(1) NE &I).KFNOL  SEE IF THE NEXT ATOM IS NOT  *58310002
                         PART OF THE SAME PAIR.                         58380002
         AIF   (&IGALEVL NE 2).KFNOLL  SEE IF THE NEXT ATOM HAS TOO    *58450002
                         MANY () LEVELS.                                58520002
         AIF   (&IGAZ EQ 0).KFLMT  SEE IF THE LENGTH ATOM IS THE EMPTY *58590002
                         STRING.                                        58660002
.********************************************************************** 58730002
.* THE CURRENT ATOM IS INDEED THE SECOND ELEMENT OF A (F,X) PAIR. NOW * 58800002
.* LET'S SEE IF X IS A VALID L.                                       * 58870002
.********************************************************************** 58940002
         AIF   (&IGARGHT(&IGAZ) GT 3).KFLLBAD  SEE IF THE LENGTH ATOM  *59010002
                         IS MORE THAN 3 DIGITS.                         59080002
&I       SETA  0         INITIALIZE THE INDEX OF THE CURRENT BYTE.      59150002
.KMXCNT2 AIF   (('&K'(&IGALEFT(&IGAZ)+&I,1) LT '0')OR('&K'(&IGALEFT(&IG*59220002
               AZ)+&I,1) GT '9')).KFLBAD                                59290002
&I       SETA  (&I+1)    STEP OVER TO THE NEXT DIGIT.                   59360002
         AIF   (&I LT &IGARGHT(&IGAZ)).KMXCNT2  KEEP GOING UNTIL ALL   *59430002
                         THE DIGITS HAVE BEEN SCANNED.                  59500002
&X       SETC  '&K'(&IGALEFT(&IGAZ),&IGARGHT(&IGAZ))  EXTRACT THE      *59570002
                         LENGTH.                                        59640002
&LNG     SETA  (&X)      CONVERT IT TO A NUMBER.                        59710002
         AIF   (&LNG GT 256).KFBADL  SEE IF THE LENGTH EXCEEDS 256     *59780002
                         BYTES.                                         59850002
.********************************************************************** 59920002
.* IT LOOKS LIKE A VALID (F,L) PAIR; GENERATE THE MOVE IF THIS IS THE * 59990002
.* MOVE GENERATION ITERATION.                                         * 60060002
.********************************************************************** 60130002
         AIF   (NOT &XFER).KMOVED  GO IF IT IS NOT THE MOVE ITERATION.  60200002
         MVC   &IGAKEYL.(&LNG,15),&FIELD         MOVE SUBKEY.           60270002
         AGO   .KMOVED   MERGE WITH THE COMMON PATH.                    60340002
.********************************************************************** 60410002
.* THE FOLLOWING ARE SUNDRY MNOTES FOR THE (F,L) CASE IN A MIXED LIST.* 60480002
.********************************************************************** 60550002
.KFBADL  ANOP                                                           60620002
&I       SETA  (&IGAPATH(1)+1)                                          60690002
         MNOTE 12,'LENGTH IN OPERAND &I OF K EXCEEDS 256 BYTES.'        60760002
&ERROR   SETB  (1)                                                      60830002
         AGO   .SYNC                                                    60900002
.KFLBAD  ANOP                                                           60970002
&I       SETA  (1+&IGAPATH(1))                                          61040002
         MNOTE 12,'THE LENGTH IN OPERAND K(&I) IS NOT A SELF-DEFINING D*61110002
               ECIMAL NUMBER.'                                          61180002
&ERROR   SETB  (1)                                                      61250002
         AGO   .SYNC                                                    61320002
.KFLLBAD ANOP                                                           61390002
&I       SETA  (1+&IGAPATH(1))                                          61460002
         MNOTE 12,'LENGTH IN OPERAND K(&I) IS MORE THAN 3 DIGITS.'      61530002
&ERROR   SETB  (1)                                                      61600002
         AGO   .SYNC                                                    61670002
.KFLMT   ANOP                                                           61740002
&I       SETA  (1+&IGAPATH(1))                                          61810002
         MNOTE 12,'LENGTH IN OPERAND &I OF K CANNOT BE THE EMPTY STRING*61880002
               .'                                                       61950002
&ERROR   SETB  (1)                                                      62020002
         AGO   .SYNC                                                    62090002
.KFNOL   ANOP                                                           62160002
         MNOTE 12,'LENGTH OF (F,L) PAIR IN OPERAND &I OF K IS MISSING.' 62230002
&ERROR   SETB  (1)                                                      62300002
         AGO   .KMXCHK                                                  62370002
.KFNOLL  ANOP                                                           62440002
&I       SETA  (1+&IGAPATH(1))                                          62510002
         MNOTE 12,'TOO MANY () LEVELS IN K(&I).'                        62580002
         AGO   .SYNC                                                    62650002
.KFLNOL  MNOTE 12,'LENGTH OF LAST (FIELD,LENGTH) PAIR IN K IS MISSING.' 62720002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON TO PREVENT THE MOVES.    62790002
         AGO   .KFIN                                                    62860002
.********************************************************************** 62930002
.KFIN    ANOP                                                           63000002
         AGO   .LINK     GO LINK TO THE SRCH8 SUBROUTINE.               63070002
.********************************************************************** 63140002
.* THERE IS NO NEED TO COLLECT THE SEARCH KEY AT IGAWORK, BECAUSE THE * 63210002
.* THE K PARAMETER IS NOT CODED, AND THERE IS ONLY ONE FIELD.         * 63280002
.********************************************************************** 63350002
.CHKA    AIF   (K'&A EQ 0).ASARG  SEE IF THE ADDRESS IS OMITTED; IF IT *63420002
                         IS GET IT OUT OF THE SEARCH ARGUMENT.          63490002
         AIF   ('&A'(1,1) EQ '(').AGPR  SEE IF THE ADDRESS IS IN A GPR. 63560002
         LA    0,&A  ADDRESS OF SEARCH KEY.                             63630002
         AGO   .CHKAEND  GO TO THE END OF CHECKING THE A PARAMETER.     63700002
.AGPR    AIF   ('&A' EQ '(0)').CHKAEND  SEE IF IT IS ALREADY IN R0.     63770002
         LR    0,&A(1)   ADDRESS OF SEARCH KEY.                         63840002
         AGO   .CHKAEND  ALL DONE NOW EXIT FROM CHECKING THE A         *63910002
                         PARAMETER.                                     63980002
.ASARG   ANOP                                                           64050002
.CHKAEND ANOP                                                           64120002
.********************************************************************** 64190002
.* THE ADDRESS OF THE SEARCH KEY IS IN REGISTER 0, NOW LINK TO THE    * 64260002
.* SEARCH SUBROUTINE IN IGARPT01 FOR TYPE 8 RADIX PARTITION TREES.    * 64330002
.********************************************************************** 64400002
.LINK    ANOP                                                           64470002
         L     15,(&IGABLST+&IGASRCH)(,1)  ADDRESS OF SEARCH ROUTINE.   64540002
         BALR  14,15     LINK TO THE APPROPRIATE SEARCH ROUTINE.        64610002
.********************************************************************** 64680002
.* CHECK THE REL PARAMETER FOR ANY ADDITIONAL ACTIONS THAT MUST BE DONE 64750002
.********************************************************************** 64820002
         AIF   (K'&REL EQ 0).FIN0  SEE IF THE REL PARAMETER IS CODED.   64890002
         MNOTE 12,'NONCE ERROR, REL NOT YET AVAILABLE.'                 64960002
         AGO   .FIN0     SKIP THE REST.                                 65030002
.********************************************************************** 65100002
.*   CHECK THE REL PARAMETER FOR A PARTIAL ORDER VALUE SEARCH.        * 65170002
.********************************************************************** 65240002
.ITSAPOV ANOP                                                           65310002
         AIF   (('&REL(1)' EQ 'POV')AND('&REL(2)' EQ 'GE')).POVSRCH     65380002
         AIF   (('&REL(1)' EQ 'MAX')AND('&REL(2)' EQ 'POV')).MAXPOV     65450002
.BADREL  MNOTE 12,'INVALID REL PARAMETER.'                              65520002
         AGO   .FIN0  GO TO THE END OF THE SRCH MACRO.                  65590002
.MAXPOV  AIF   (K'&NULL EQ 0).LOADMAX  SEE IF THE NULL IS CODED.        65660002
         TM    &IGAEOPV.(1),B'1001'  SEE IF THE TREE IS EMPTY.          65730002
         AIF   ('&NULL'(1,1) EQ '(').MXPVGPR                            65800002
         BC    8,&NULL  BRANCH IF THE TREE IS EMPTY.                    65870002
         AGO   .LOADMAX                                                 65940002
.MXPVGPR BCR   8,&NULL(1)  BRANCH IF THE RPT IS EMPTY.                  66010002
.LOADMAX L     0,&IGAMAX.(,1)   LOAD THE MAXIMUM PARTIAL ORDER VALUE.   66080002
         L     15,(&IGABLST+&IGAPVS)(,1)  ADDRESS OF POV SEARCH.        66150002
         BALR  14,15     SET CURSOR TO SINK WITH MAX POV.               66220002
         AGO   .FIN0  GO TO THE END OF THE SEARCH.                      66290002
.********************************************************************** 66360002
.* SEARCH FOR A PARTIAL ORDER VALUE THAT IS GREATER THAN OR EQUAL TO  * 66430002
.* THE SEARCH ARGUMENT, BUT AS SMALL A VALUE AS CAN EFFICIENTLY BE    * 66500002
.* FOUND.                                                             * 66570002
.********************************************************************** 66640002
.POVSRCH AIF   ((K'&A EQ 0)AND(K'&K NE 0)).PVS01                        66710002
         AIF   ((K'&A NE 0)AND(K'&K EQ 0)).PVS10                        66780002
         AIF   ((K'&A EQ 0)AND(K'&K EQ 0)).PVS00                        66850002
         AIF   ('&A'(1,1) EQ '(').PVS11R                                66920002
         L     0,&A(1)+&K(1)  LOAD PARTIAL ORDER SEARCH KEY.            66990002
.PVS11RR L     15,(&IGABLST+&IGAPVS)(,1)  ADDRESS OF POV SEARCH.        67060002
         BALR  14,15     LINK TO POV SEARCH ROUTINE.                    67130002
.PVSTEST AIF   (K'&NULL EQ 0).PVNNULL  SEE IF THE NULL IS CODED.        67200002
&TMP     SETC  ''  SET IT TO THE EMPTY VECTOR.                          67270002
         AIF   ('&NULL'(1,1) NE '(').PVSNGPR  AGO IF NULL NOT A GPR.    67340002
&TMP     SETC  'R'  SET IT TO GENERATE A BCR.                           67410002
.PVSNGPR TM    &IGAEOPV.(1),B'1001'  SEE IF THE TREE IS EMPTY.          67480002
         BC&TMP 8,&NULL(1)  BRANCH IF IT IS EMPTY.                      67550002
.PVNNULL AIF   ((K'&Y EQ 0)AND(K'&N EQ 0)).FIN0  SEE IF EITHER Y OR N.  67620002
         LTR   15,15  TEST THE RETURN CODE.                             67690002
         AIF   (K'&Y EQ 0).PVNOY  SEE IF THE Y PARAMETER NOT CODED.     67760002
&TMP     SETC  ''  SET IT UP TO GENERATE A BC.                          67830002
         AIF   ('&Y'(1,1) NE '(').PVYBC  GO IF A BC IS GENERATED.       67900002
&TMP     SETC  'R'  SET IT UP TO GENERATE A BCR.                        67970002
.PVYBC   BC&TMP 10,&Y(1)  BRANCH IF THE SEARCH FOUND ONE.               68040002
.PVNOY   AIF   (K'&N EQ 0).FIN0  GO IF N IS NOT CODED.                  68110002
&TMP     SETC  ''                                                       68180002
         AIF   ('&N'(1,1) NE '(').PVNBC  GO IF IT'S NOT IN A GPR.       68250002
&TMP     SETC  'R'  GET SET TO GENERATE A BCR.                          68320002
.PVNBC   AIF   (K'&Y NE 0).PVNBCC  GO IF THE LTR IS ALREADY THERE.      68390002
         LTR   15,15  TEST THE RETURN CODE.                             68460002
.PVNBCC  BC&TMP 4,&N(1)  BRANCH IF THERE IS NO QUALIFYING VALUE.        68530002
         AGO   .FIN0  THE SRCH MACRO IS FINISHED.                       68600002
.PVS11R  L     0,&K(1)(,&A(1))  LOAD THE PARTIAL ORDER SEARCH KEY.      68670002
         AGO   .PVS11RR  GO DO THE SEARCH.                              68740002
.PVS00   MNOTE 12,'PARTIAL ORDER SEARCH KEY NOT SPECIFIED.'             68810002
         AGO   .FIN0  FORGET, CAN'T DO ANYTHING.                        68880002
.PVS10   AIF   ('&A' EQ '((0))').PVS11RR SEE IF IT'S ALREADY LOADED.    68950002
&TMP     SETC  ''                                                       69020002
         AIF   ('&A'(1,1) NE '(').PVS10M                                69090002
&TMP     SETC  'R'                                                      69160002
.PVS10M  L&TMP 0,&A(1)  LOAD THE PARTIAL ORDER SEARCH KEY.              69230002
         AGO   .PVS11RR  GO DO THE SEARCH.                              69300002
.PVS01   ANOP                                                           69370002
&TMP     SETC  'R'  PREPARE TO GENEATE A LOAD REGISTER INSTRUCTION.     69440002
         AIF   ('&K(1)'(1,1) EQ '(').PVS01R                             69510002
&TMP     SETC  ''                                                       69580002
.PVS01R  L&TMP 0,&K(1)  LOAD THE PARTIAL ORDER SEARCH KEY.              69650002
         AGO   .PVS11RR  GO DO THE SEARCH.                              69720002
.********************************************************************** 69790002
.* PARTIAL ORDER VALUE SEARCH. IF A SEARCH KEY IS SPECIFIED SET THE   * 69860002
.* CURSOR USING THE SEARCH KEY. IN ORDER FOR THE SEARCH TO BE         * 69930002
.* SUCCESSFUL THERE MUST BE AN EXACT MATCH BETWEEN THE SEARCH KEY AND * 70000002
.* ONE ALREADY IN THE TREE.                                           * 70070002
.********************************************************************** 70140002
.POVGET  ANOP                                                           70210002
         AIF   ((K'&A EQ 0)AND(K'&K EQ 0)).GETPOV                       70280002
         SRCH  (1),A=&A,K=&K,T=&IGARPT#  SET THE CURSOR.                70350002
.GETPOV  L     15,(&IGABLST+&IGAGPV)(,1)  ADDRESS OF GET POV.           70420002
         BALR  14,15     LINK TO GET POV FOR CURRENT SINK.              70490002
         AGO   .PVSTEST   GO TEST FOR EXITING BRANCHES, ETC..           70560002
.*--------------------------------------------------------------------* 70630002
.FIN0    ANOP                                                           70700002
         AIF   (NOT(&FIN)).SRCH8ZZ  SEE IF THE FIN&SYSNDX EQU * SHOULD *70770002
                         BE GENERATED.                                  70840002
FIN&SYSNDX EQU *                                                        70910002
.SRCH8ZZ ANOP                                                           70980002
         AIF   (NOT &USING).FIN  SEE IF A USING FOR R1 HAS BEEN        *71050002
                         GENERATED; IF SO GENERATE THE CORRESPONDING   *71120002
                         DROP.                                          71190002
         AGO   .FIN      SKIP AROUND SRCH5.                             71260002
.********************************************************************** 71330002
.*   R E A D     O N L Y     S E A R C H  ------- S R C H 5.          * 71400002
.********************************************************************** 71470002
.*       FOR SRCH5:                                                   * 71540002
.* 0. ABSOLUTE 3-BYTE EDGE FIELDS WITH SUCCESSOR PAIRING.             * 71610002
.* 1. BIT 0 OF EACH WORD IS A ZERO FOR SINK WORDS AND A ONE FOR INNER * 71680002
.*    VERTICES.                                                       * 71750002
.* 2. BITS 1-7 OF EACH INNER VERTEX ARE THE BIT INDEX, THUS ALLOWING  * 71820002
.*    A MAXIMUM KEY OF 16 BYTES.                                      * 71890002
.* 3. NO SCAN FUNCTIONS ARE AVAILABLE WITH SRCH5.                     * 71960002
.* 4. SRCH5 IS READ-ONLY, IN THE SENSE THAT IT DOES NOT STORE INTO    * 72030002
.*    ANY MEMORY LOCATIONS, BUT USES REGISTERS 0, 1, 2, 3, 14, AND 15 * 72100002
.*    AS WORKING REGISTERS.                                           * 72170002
.*    SRCH5 CHECKS A USE COUNT AFTER TERMINATION TO SEE IF AN INSERT  * 72240002
.*    OR DELETE CHANGE THE TREE DURING THE TIME THE SEARCH WAS IN     * 72310002
.*    PROGRESS. THIS IS TO ALLOW THE VALIDITY OF SEARCHES PROCEEDING  * 72380002
.*    WHILE AN INSERT OR DELETE IS IN PROGRESS IN AN MP SITUATION.    * 72450002
.*--------------------------------------------------------------------* 72520002
.SRCH5   ANOP                                                           72590002
&GOLEFT  SETC  'LOOP'.'&SYSNDX'     GENERATE THE LABELS FOR THE         72660002
&ITSMOP  SETC  'MOP'.'&SYSNDX'   READ-ONLY SEARCH LOOP.                 72730002
&ITSEOP  SETC  'EOP'.'&SYSNDX'   XX                                     72800002
&TOOBAD  SETC  'MORE'.'&SYSNDX'                                         72870002
&O       SETC  '0'   JUST A ZERO DISPLACEMENT.                          72940002
&EKE     SETC  '4'   DISPLACEMENT TO THE USE COUNTER.                   73010002
&FOUR    SETC  '4'    A CONSTANT DISPLACEMENT 4.                        73080002
&ARG     SETC  '0'  REGISTER TO HOLD THE SEARCH ARGUMENT.               73150002
&TREEHDR SETC  '1'  USE REGISTER 1 FOR THE TREEHDR ADDRESS.             73220002
&P       SETC  '2'   USE REGISTER 2 FOR THE PREDECESSOR.                73290002
&C       SETC  '3'   USE REGISTER 3 FOR THE PENULTIMATE VERTEX.         73360002
&EKER    SETC  '14'  REGISTER TO HOLD THE COUNTER DURING THE            73430002
.*                   READ-ONLY SEARCH.                                  73500002
&S       SETC  '15'     USE REGISTER 15 TO HOLD THE SINK WORD.          73570002
&USING   SETB  (1)       SET THE BIT ON TO INDICATE THAT A USING HAS   *73640002
                         BEEN GENERATED FOR R1.                         73710002
.********************************************************************** 73780002
.* THE FOLLOWING TABLE SHOWS THE VARIOUS COMBINATIONS AND             * 73850002
.* INTERPRETATIONS OF THE OPERANDS FOR SRCH WITH TYPE 5 TREES:        * 73920002
.********************************************************************** 73990002
.* A:    A=LABEL OR A=(GPR) MAY BE CODED.                             * 74060002
.* K:    K=, K=FIELDNAME, K=(FIELDNAME,LENGTH), OR K=(D,L) MAY BE     * 74130002
.*       CODED. IF "K=FIELDNAME" OR "K=(FIELDNAME,LENGTH)" IS CODED,  * 74200002
.*       THEN THE A PARAMETER DOES NOT HAVE TO BE CODED. IF A IS ALSO * 74270002
.*       CODED AN MNOTE WILL BE GENERATED.                            * 74340002
.*       THE MAXIMUM SIZE KEY THAT CAN BE ACCOMODATED FOR TYPE 5 TREES* 74410002
.*       IS 16 BYTES. THERE CAN ONLY BE ONE (D,L) PAIR FOR TYPE 5     * 74480002
.*       TREES, UNLIKE TYPE 8 TREES, WHERE THERE CAN BE AN ARBITRARY  * 74550002
.*       NUMBER.                                                      * 74620002
.*--------------------------------------------------------------------* 74690002
.* CHECK FOR THE VARIOUS ALLOWABLE COMBINATIONS OF THE KEYL AND SARG. * 74760002
.*--------------------------------------------------------------------* 74830002
.********************************************************************** 74900002
.* THE FOLLOWING ARE THE ONLY WAYS TO CODE THE A AND K PARAMETERS FOR * 74970002
.* TYPE 5 RADIX PARTITION TREES:                                      * 75040002
.* F MEANS A FIELD NAME WITH A LENGTH ATTRIBUTE.                      * 75110002
.* L MEANS A LENGTH, WHICH MUST BE A SELF-DEFINING TERM.              * 75180002
.* D MEANS A DISPLACEMENT, WHICH MUST EITHER BE THE EMPTY STRING OR A * 75250002
.*   SELF-DEFINING TERM.                                              * 75320002
.* GPR IS A GENERAL REGISTER NAME OR NUMBER.                          * 75390002
.* X MEANS ANY STRING OF CHARACTERS.                                  * 75460002
.*                                                                    * 75530002
.* COMBINATION:          MEANING:                                     * 75600002
.* ------------          --------                                     * 75670002
.* A=F,K=                F IS A LABEL, AND THE LENGTH OF THE KEY IS   * 75740002
.*                       THE SAME AS THE LENGTH OF F.                 * 75810002
.* A=F,K=L               F IS THE SEARCH KEY, AND L IS THE SEARCH KEY * 75880002
.*                       LENGTH (IT MUST BE A SELF-DEFINING TERM).    * 75950002
.* A=F,K=(,L)            SAME AS ABOVE.                               * 76020002
.* A=F,K=(D,L)           THE SEARCH KEY IS AT DISPLACEMENT D FROM THE * 76090002
.*                       BEGINNING OF THE FIELD F, AND IS L BYTES LONG. 76160002
.* A=(GPR),K=L           THE ADDRESS OF THE FIRST BYTE OF THE SEARCH  * 76230002
.*                       KEY IS IN THE INDICATED REGISTER, AND THE KEY* 76300002
.*                       IS L BYTES LONG.                             * 76370002
.* A=(GPR),K=(,L)        SAME AS ABOVE.                               * 76440002
.* A=(GPR),K=(D,L)       THE ADDRESS OF THE KEY IS FORMED BY ADDING   * 76510002
.*                       THE ADDRESS IN THE INDICATED REGISTER TO THE * 76580002
.*                       DISPLACEMENT D, AND THE KEY IS L BYTES LONG. * 76650002
.* A=,K=F                F IS THE SEARCH KEY, AND ITS LENGTH IS THE   * 76720002
.*                       SAME AS THE LENGTH OF F.                     * 76790002
.* A=,K=(F,L)            F IS THE SEARCH KEY, AND L IS ITS LENGTH.    * 76860002
.********************************************************************** 76930002
.*--------------------------------------------------------------------* 77000002
.********************************************************************** 77070002
.* IN THE FOLLOWING, THE SEARCH IS DONE FOR KEYS WITH 4 BYTES OR LESS.* 77140002
.* THE KEY IS PLACED IN REGISTER 0 JUST BEFORE THE MAIN SEARCH LOOP.  * 77210002
.* THE KEY IS RIGHT ALIGNED IN REGISTER ZERO, WITH ZEROS FILLED IN ON * 77280002
.* THE LEFT.                                                          * 77350002
.********************************************************************** 77420002
         AIF   (&ERROR).FIN5  SEE IF ANY ERRORS HAVE BEEN DISCOVERED   *77490002
                         PRIOR TO THIS PART.                            77560002
         AIF   ((K'&A EQ 0)AND(K'&K EQ 0)).FIN5  SEE IF NEITHER A NOR K*77630002
                         IS CODED.                                      77700002
         AIF   (K'&K NE 0).S5KNOTZ  SEE IF K IS CODED.                  77770002
.********************************************************************** 77840002
.* ONLY THE A PARAMETER IS CODED, SO IT MUST BE A FIELD NAME WITH A   * 77910002
.* LENGTH ATTRIBUTE IN ORDER TO BE VALID.                             * 77980002
.********************************************************************** 78050002
         AIF   (K'&A LE 4).NOTPP  SEE IF THE A PARAMETER IS CODED AS   *78120002
                         "A=((GPR))". IF IT IS, THEN THE SEARCH KEY IS *78190002
                         ALREADY LOADED INTO THE INDICATED REGISTER.    78260002
         AIF   ('&A'(1,2) NE '((').NOTPP  IF IT IS IN A REGISTER, THEN *78330002
                         IT MUST BE RIGHT ALIGNED, WITH THE LEFT FILL  *78400002
                         BITS BEING ZERO.                               78470002
         AIF   ('&A' EQ '((0))').SRCH5Z  SEE IF IT IS EVEN ALREADY IN  *78540002
                         REGISTER 0.                                    78610002
         LR    0,&A(1)   SEARCH KEY.                                    78680002
         AGO   .SRCH5Z   GOT THE SEARCH KEY IN REGISTER 0, NOW GO      *78750002
                         GENERATE THE SEARCH.                           78820002
.NOTPP   ANOP                                                           78890002
         AIF   ('&A'(1,1) EQ '(').AGRNOK  SEE IF THE A PARAMETER IS    *78960002
                         INCORRECTLY SPECIFIED IN A REGISTER.           79030002
         AIF   ((T'&A EQ 'M')OR(T'&A EQ 'N')OR(T'&A EQ 'O')OR (T'&A EQ *79100002
               'T')OR(T'&A EQ 'W')OR(T'&A EQ '$')OR(T'&A EQ 'U')).ANOTF*79170002
                         SEE IF A IS NOT A FIELD NAME.                  79240002
&IGAKEYL SETA  (L'&A)    GET THE SEARCH KEY LENGTH.                     79310002
         AIF   (K'&A GT 8).ATOOBIG SEE IF THE FIELD NAME IS BIGGER     *79380002
                         THAN 8 CHARACTERS.                             79450002
&FIELD   SETC  '&A'      GET THE FIELD NAME.                            79520002
.S5LCHK  AIF   (&IGAKEYL GT 4).AFLGT4  SEE IF THE KEY LENGTH IS MORE   *79590002
                         THAN FOUR BYTES.                               79660002
         AIF   (&IGAKEYL GE 3).AFL34  SEE IF THE KEY LENGTH IS BIGGER  *79730002
                         THAN TWO BYTES.                                79800002
         AIF   (&IGAKEYL EQ 2).AFL2  SEE IF THE KEY LENGTH IS EXACTLY  *79870002
                         TWO BYTES.                                     79940002
         AIF   (&IGAKEYL NE 1).NULLKEY  SEE IF THE KEY LENGTH IS ZERO.  80010002
.AFL1    SLR   0,0       THE SEARCH KEY                                 80080002
         IC    0,&FIELD  IS ONE BYTE LONG.                              80150002
         AGO   .SRCH5Z   NOW GO GENERATE THE SRCH5 IN LINE.             80220002
.AFL2    LH    0,&FIELD  SEARCH KEY IS                                  80290002
         N     0,=XL4'0000FFFF'  TWO BYTES LONG.                        80360002
         AGO   .SRCH5Z   NOW GO GENERATE THE SEARCH IN LINE.            80430002
.AFL3    L     00,&FIELD  3-BYTE SEARCH KEY.                            80500002
         SRL   0,8  GET IT RIGHT ALIGNED.                               80570002
         AGO   .SRCH5Z   GO GENERATE THE SEARCH LOOP.                   80640002
.AFL34   AIF   (&IGAKEYL EQ 3).AFL3  SEE IF THE SEARCH KEY LENGTH IS   *80710002
                         EXACTLY THREE BYTES.                           80780002
         L     0,&FIELD  4-BYTE SEARCH KEY.                             80850002
         AGO   .SRCH5Z   GO FINISH UP NOW.                              80920002
.AFLGT4  AGO   .S5NONCE  CAN'T HAVE TYPE 5 KEYS BIGGER THAN 5 YET.      80990002
.********************************************************************** 81060002
.* THE K PARAMETER IS CODED, SEE IF THE A PARAMETER IS CODED TOO.     * 81130002
.********************************************************************** 81200002
.S5KNOTZ ANOP                                                           81270002
         AIF   (K'&A NE 0).S5BOTH  SEE IF BOTH THE A AND K PARAMETERS  *81340002
                         ARE CODED.                                     81410002
.********************************************************************** 81480002
.* ONLY THE K PARAMETER IS CODED. IT MUST BE ONE OF THE CASES K=F OR  * 81550002
.* K=(F,L). ANYTHING ELSE MUST BE WRONG.                              * 81620002
.********************************************************************** 81690002
         AIF   (N'&K GT 2).LOTSAK  SEE IF THERE ARE TOO MANY OPERANDS.  81760002
         AIF   (N'&K EQ 2).S5K2  SEE IF THERE ARE EXACTLY 2.            81830002
         AIF   ('&K'(1,1) EQ '(').S5K1P  SEE IF IT LOOKS LIKE A GPR.    81900002
         AIF   ((T'&K(1) EQ 'M')OR(T'&K(1) EQ 'N')OR(T'&K(1) EQ 'O')OR(*81970002
               T'&K(1) EQ 'T')OR(T'&K(1) EQ 'W')OR(T'&K(1) EQ '$')OR(T'*82040002
               &K(1) EQ 'U')).KINVF  SEE IF K IS A GOOD FIELD NAME.     82110002
         AIF   (K'&K GT 8).KBIGTAG  SEE IF THE FIELD NAME HAS TOO MANY *82180002
                         CHARACTERS IN IT TO BE A VALID NAME.           82250002
&FIELD   SETC  '&K'      SET FIELD TO THE FIELD NAME.                   82320002
         AGO   .S5LCHK   MERGE IN WITH THE OTHER LENGTH CHECK.          82390002
.********************************************************************** 82460002
.* THE K PARAMETER IS CODED AND THE A PARAMETER IS NOT CODED, AND THE * 82530002
.* K PARAMETER HAS EXACTLY TWO ELEMENTS IN IT. SEE IF K IS OF THE FORM* 82600002
.* (F,L). IF IT ISN'T IT IS AN ERROR.                                 * 82670002
.********************************************************************** 82740002
.S5K2    ANOP                                                           82810002
         AIF   (T'&K(2) EQ 'N').S5K2N  SEE IF THE LENGTH IS A SELF-    *82880002
                         DEFINING TERM.                                 82950002
&I       SETA  (K'&K(2))  SET THE INDEX TO IT'S INITIAL VALUE.          83020002
.K5LCHK  AIF   (('&K(2)'(&I,1) LT '0')OR('&K(2)'(&I,1) GT '9')).S5LERR  83090002
&I       SETA  (&I-1)    DECREASE THE INDEX TO THE NEXT CHARACTER.      83160002
         AIF   (&I GT 0).K5LCHK  SEE IF THERE ARE MORE TO CHECK.        83230002
         AIF   (K'&K(2) GT 4).S5LERR  SEE IF IT HAS TOO MANY DIGITS.    83300002
.S5K2N   ANOP                                                           83370002
&IGAKEYL SETA  (&K(2))   GET THE LENGTH AS A NUMBER.                    83440002
         AIF   (K'&K(1) GT 8).KBIGTAG  SEE IF IT HAS TOO MANY          *83510002
                         CHARACTERS IN IT TO BE A VALID NAME.           83580002
&FIELD   SETC  '&K(1)'   GET THE FIELD NAME.                            83650002
         AGO   .S5LCHK   MERGE IN WITH THE OTHER SEQUENCE.              83720002
.********************************************************************** 83790002
.* BOTH THE A AND K PARAMETERS ARE CODED.                             * 83860002
.********************************************************************** 83930002
.S5BOTH  ANOP                                                           84000002
         AIF   ('&A'(1,1) EQ '(').S5BAISG  SEE IF THE A PARAMETER      *84070002
                         SPECIFIES A GENERAL REGISTER.                  84140002
         AIF   (N'&K GT 2).LOTSAK  SEE IF THERE ARE TOO MANY.           84210002
         AIF   (N'&K EQ 2).S5AK2  SEE IF THERE ARE EXACTLY 2.           84280002
         AIF   ('&K'(1,1) EQ '(').S5K1P  SEE IF IT LOOKS LIKE THE      *84350002
                         DISPLACEMENT-LENGTH PAIR IS IN A GPR.          84420002
.********************************************************************** 84490002
.* THIS MUST BE THE CASE WHERE A=F,K=L.                               * 84560002
.********************************************************************** 84630002
         AIF   (T'&K EQ 'N').AFKL5OK  SEE IF THE LENGTH IS A           *84700002
                         SELF-DEFINING TERM.                            84770002
&I       SETA  (1)       SET THE INDEX TO ITS INITIAL VALUE.            84840002
.AFKL5CK AIF   (('&K'(&I,1) LE '0')OR('&K'(&I,1) GT '9')).S5LERR       *84910002
                         CHECK THE LENGTH TO SEE IF IT IS REALLY A     *84980002
                         NUMBER.                                        85050002
&I       SETA  (&I+1)    EKE THE INDEX OF THE NEXT CHARACTER TO BE     *85120002
                         INSPECTED.                                     85190002
         AIF   (&I LT K'&K).AFKL5CK  KEEP ON LOOKING UNTIL ALL THE     *85260002
                         CHARACTERS HAVE BEEN INSPECTED.                85330002
.AFKL5OK ANOP                                                           85400002
&IGAKEYL SETA  (&K)      CAPTURE THE KEY LENGTH AS A NUMBER.            85470002
         AIF   (&IGAKEYL EQ 1).AFKL51  SEE IF THE KEY LENGTH IS ONE    *85540002
                         BYTE.                                          85610002
         AIF   (&IGAKEYL EQ 2).AFKL52  SEE IF THE KEY LENGTH IS TWO    *85680002
                         BYTES.                                         85750002
         AIF   (&IGAKEYL EQ 3).AFKL53  SEE IF THE KEY LENGTH IS 3      *85820002
                         BYTES.                                         85890002
         AIF   (&IGAKEYL NE 4).S5NONCE  SEE IF THE KEY LENGTH IS FOUR  *85960002
                         BYTES.                                         86030002
         L     0,&A                     SEARCH ARGUMENT.                86100002
         AGO   .SRCH5Z   GO DO THE ACTUAL SEARCH.                       86170002
.AFKL51  SLR   0,0     KEY LENGTH IS ONE BYTE.                          86240002
         IC    0,&A                 1-BYTE SEARCH KEY.                  86310002
         AGO   .SRCH5Z   GO GENERATE THE ACTUAL SEARCH CODE.            86380002
.AFKL52  LH    0,&A              HALFWORD SEARCH KEY.                   86450002
         AGO   .SRCH5Z   GO GENERATE THE SEARCH CODE.                   86520002
.AFKL53  L     0,&A                  LOAD 3-BYTE SEARCH KEY.            86590002
         SRL   0,8       SHIFT IT OVER.                                 86660002
         AGO   .SRCH5Z   GO GENERATE THE REAL SEARCH.                   86730002
.AFKL54  L     0,&A                   LOAD FULL-WORD SEARCH KEY.        86800002
         AGO   .SRCH5Z   GO GENERATE THE REAL SEARCH CODE.              86870002
.********************************************************************** 86940002
.* THIS MUST BE THE CASE WHERE A=F,K=(D,L).                           * 87010002
.********************************************************************** 87080002
.S5AK2   AIF   (T'&K(2) EQ 'N').S5K2N1 SEE IF THE LENGTH IS A SELF-    *87150002
               DEFINING TERM.                                           87220002
         AIF   (K'&K(2) EQ 0).S5LERR  SEE IF IT IS THE EMPTY STRING.    87290002
&I       SETA  (K'&K(2))  SET THE INDEX TO IT'S INITIAL VALUE.          87360002
.K5LCHK1 AIF   (('&K(2)'(&I,1) LT '0')OR('&K(2)'(&I,1) GT '9')).S5LERR  87430002
&I       SETA  (&I-1)    DECREASE THE INDEX TO THE NEXT CHARACTER.      87500002
         AIF   (&I GT 0).K5LCHK1 SEE IF THERE ARE MORE TO CHECK.        87570002
         AIF   (K'&K(2) GT 4).S5LERR  SEE IF IT HAS TOO MANY DIGITS.    87640002
.S5K2N1  ANOP                                                           87710002
&IGAKEYL SETA  (&K(2))   GET THE KEY LENGTH AS A NUMBER.                87780002
&DSP     SETA  0         SET THE DISPLACEMENT TO ITS DEFAULT VALUE.     87850002
         AIF   (K'&K(1) EQ 0).S5AK2D  SEE IF THE DISPLACEMENT FIELD IS *87920002
                         ELIDED.                                        87990002
         AIF   ('&K(1)' EQ '0').S5AK2D  SEE IF IT IS ZERO.              88060002
         AIF   (T'&K(1) EQ 'N').PICK5D  SEE IF THE DISPLACEMENT IS A   *88130002
                         SELF-DEFINING TERM.                            88200002
&I       SETA  (K'&K(1))  SET THE INDEX TO IT'S INITIAL VALUE.          88270002
.CHECK5D AIF   (('&K(1)'(&I,1) LT '0')OR('&K(1)'(&I,1) GT '9')).S5DERR  88340002
&I       SETA  (&I-1)    DECREASE THE INDEX TO THE NEXT CHARACTER.      88410002
         AIF   (&I GT 0).CHECK5D  SEE IF IT GOT TO THE END.             88480002
         AIF   (K'&K(1) GT 4).S5DLONG  SEE IF IT HAS TOO MANY DIGITS.   88550002
.PICK5D  ANOP                                                           88620002
&DSP     SETA  (&K(1))   GET THE DISPLACEMENT AS A NUMBER.              88690002
.S5AK2D  ANOP                                                           88760002
.S5DLCHK ANOP                                                           88830002
         AIF   (&IGAKEYL GT 4).S5DL5  SEE IF THE KEY LENGTH IS MORE    *88900002
                         THAN 4 BYTES.                                  88970002
         AIF   (&IGAKEYL EQ 4).S5DL4  SEE IF THE KEY LENGTH IS 4 BYTES. 89040002
         AIF   (&IGAKEYL EQ 3).S5DL3  SEE IF THE KEY LENGTH IS 3 BYTES. 89110002
         AIF   (&IGAKEYL EQ 2).S5DL2  SEE IF THE KEY LENGTH IS 2 BYTES. 89180002
         AIF   (&IGAKEYL NE 1).NULLKEY  SEE IF THE KEY LENGTH IS ZERO.  89250002
.S5DL1   SLR   0,0       SEARCH KEY IS                                  89320002
         AIF   (&DSP EQ 0).S5DL1Z  SEE IF THE DISPLACEMENT IS ZERO.     89390002
         IC    0,&A                    ONE BYTE LONG.                   89460002
         AGO   .S5DL1ZZ  SKIP AROUND THE OTHER INSERT CHARACTER        *89530002
                         INSTRUCTION.                                   89600002
.S5DL1Z  IC    0,&DSP+&A        ONE BYTE LONG.                          89670002
.S5DL1ZZ ANOP                                                           89740002
         AGO   .SRCH5Z   GO DO THE IN LINE SEARCH.                      89810002
.S5DL2   AIF   (&DSP EQ 0).S5DL2Z  SEE IF THE DISPLACEMENT IS ZERO.     89880002
         LH    0,&DSP+&A          HALFWORD                              89950002
         AGO   .S5DL2ZZ  SKIP AROUND THE OTHER LOAD HALFWORD           *90020002
                         INSTRUCTION.                                   90090002
.S5DL2Z  LH    0,&A           HALFWORD                                  90160002
.S5DL2ZZ ANOP                                                           90230002
         N     0,=XL4'0000FFFF'  SEARCH KEY.                            90300002
         AGO   .SRCH5Z   GO WRAP IT UP.                                 90370002
.S5DL3   AIF   (&DSP EQ 0).S5DL3Z  SEE IF THE DISPLACEMENT IS ZERO.     90440002
         L     0,&DSP+&A           THREE-BYTE SEARCH KEY.               90510002
         AGO   .S5DL3ZZ  SKIP THE OTHER LOAD INSTRUCTION.               90580002
.S5DL3Z  L     0,&A                 THREE-BYTE SEARCH KEY.              90650002
.S5DL3ZZ ANOP                                                           90720002
         SRL   0,8       GET IT RIGHT ALIGNED.                          90790002
         AGO   .SRCH5Z   GO DO THE IN-LINE SEARCH.                      90860002
.S5DL4   AIF   (&DSP EQ 0).S5DL4Z  SEE IF THE DISPLACEMENT IS ZERO.     90930002
         L     0,&DSP+&A           4-BYTE KEY.                          91000002
         AGO   .S5DL4ZZ  SKIP THE OTHER LOAD INSTRUCTION.               91070002
.S5DL4Z  L     0 &A                  4-BYTE KEY.                        91140002
.S5DL4ZZ ANOP                                                           91210002
         AGO   .SRCH5Z   GO FINISH IT UP.                               91280002
.S5DL5   AGO   .S5NONCE  THIS IS ONLY FOR THE NONCE.                    91350002
.********************************************************************** 91420002
.* BOTH THE A AND K PARAMETERS ARE CODED, AND A SPECIFIES A GPR.      * 91490002
.* THEREFORE IT MUST BE THE CASE WHERE A=(GPR),K=(D,L). NOTE THAT THE * 91560002
.* DISPLACEMENT CAN BE THE EMPTY STRING.                              * 91630002
.* ALSO THE CASE OF A=(GPR),K=L GOES ALONG WITH THESE.                * 91700002
.********************************************************************** 91770002
.S5BAISG ANOP                                                           91840002
         AIF   (N'&K GT 2).LOTSAK  SEE IF K HAS TOO MANY OPERANDS.      91910002
         AIF   (N'&K EQ 2).S5AGK2  SEE IF K HAS EXACTLY 2 OPERANDS.     91980002
         AIF   ('&K'(1,1) EQ '(').S5K1P  SEE IF IT LOOKS LIKE A GPR.    92050002
         AIF   (T'&K NE 'N').S5LERR  SEE IF IT'S A SELF-DEFINING TERM.  92120002
.********************************************************************** 92190002
.* IT IS A=(GPR),K=L.                                                 * 92260002
.********************************************************************** 92330002
&IGAKEYL SETA  (&K)      GET THE KEY LENGTH AS A NUMBER.                92400002
&DSP     SETA  0         SET THE DISPLACEMENT TO ITS DEFAULT VALUE.     92470002
.S5GLCHK AIF   (&IGAKEYL GT 4).S5GL5  SEE IF THE KEY LENGTH EXCEEDS 4.  92540002
         AIF   (&IGAKEYL EQ 4).S5GL4  SEE IF IT IS EXACTLY 4 BYTES.     92610002
         AIF   (&IGAKEYL EQ 3).S5GL3  SEE IF IT IS EXACTLY 3 BYTES.     92680002
         AIF   (&IGAKEYL EQ 2).S5GL2  SEE IF IT IS EXACTLY 2 BYTES.     92750002
         AIF   (&IGAKEYL NE 1).S5LERR  SEE IF IT IS ZERO.               92820002
.S5GL1   SLR   0,0       1-BYTE KEY.                                    92890002
         IC    0,&DSP&A                                                 92960002
         AGO   .SRCH5Z   GO FINISH UP.                                  93030002
.S5GL2   LH    0,&DSP&A  2-BYTE KEY.                                    93100002
         N     0,=XL4'0000FFFF'                                         93170002
         AGO   .SRCH5Z                                                  93240002
.S5GL3   L     0,&DSP&A  3-BYTE KEY.                                    93310002
         SRL   0,8                                                      93380002
         AGO   .SRCH5Z                                                  93450002
.S5GL4   L     0,&DSP&A  4-BYTE KEY.                                    93520002
         AGO   .SRCH5Z   GO FINISH IT UP.                               93590002
.S5GL5   AGO   .S5NONCE                                                 93660002
.********************************************************************** 93730002
.* IT IS A=(GPR),K=(D,L).                                             * 93800002
.********************************************************************** 93870002
.S5AGK2  ANOP                                                           93940002
         AIF   (T'&K(2) NE 'N').S5LERR   SEE IF IT'S NOT SELF-DEFINING. 94010002
&DSP     SETA  0         SET D TO THE DEFAULT VALUE.                    94080002
&IGAKEYL SETA  (&K(2))   GET THE KEY LENGTH AS A NUMBER.                94150002
         AIF   (K'&K(1) EQ 0).S5GLCHK  SEE IF THE DISPLACEMENT IS THE  *94220002
                         EMPTY STRING.                                  94290002
         AIF   (T'&K(1) NE 'N').S5DERR   SEE IF IT'S NOT SELF-DEFINING. 94360002
&DSP     SETA  (&K(1))   GET THE DISPLACEMENT AS A NUMBER.              94430002
         AGO   .S5GLCHK  MERGE WITH THE COMMON PATH.                    94500002
.SRCH5Z  AIF   (&ERROR).FIN5  DON'T GENERATE THE SEARCH IF ERRORS HAVE *94570002
                         BEEN DETECTED ALREADY.                         94640002
&TOOBAD  L     &EKER,&IGACNT5.(,&TREEHDR)  LOAD THE USE COUNTER.        94710002
         LA    &P,&IGATOP5.(,&TREEHDR)  ADDRESS OF RPT SOURCE.          94780002
         LR    &C,&P     XX                                             94850002
         L     &S,&O.(&O,&C)                                            94920002
         CL    &S,&IGAMSK5.(,&TREEHDR)  SEE IF THERE ARE ZERO SINKS.    94990002
         BC    7,&GOLEFT+4                                              95060002
         BC    15,&ITSEOP                                               95130002
&GOLEFT L     &S,&O.(&O,&C)   LOAD THE SINK WORD OR THE NEXT INNER      95200002
         LTR   &S,&S          VERTEX AND TEST FOR THE END OF THE PATH.  95270002
         BC    10,&ITSEOP     BRANCH IF THE SINK WORD WAS LOADED.       95340002
&ITSMOP LR    &P,&C           CYCLE THE REGISTERS SO THAT THESE TWO     95410002
         LR    &C,&S          ARE ALWAYS CONSECUTIVE VERTICES.          95480002
         SRL   &S,24          GET THE BIT INDEX FIELD IN THE LOW ORDER. 95550002
         L     &S,(&IGAMSK5-X'80')(&TREEHDR,&S)  LOAD MASK TO TEST BIT. 95620002
         NR    &S,&ARG          TEST THE BIT.                           95690002
         BC    8,&GOLEFT    BRANCH IF IT IS A ZERO TO THE LEFT PATH.    95760002
         L     &S,&FOUR.(&O,&C)  ENTER THE RIGHT SUBTREE BY LOADING     95830002
         LA    &C,&FOUR.(&O,&C)  THE PAIRED RIGHT SUCCESSOR AND         95900002
         LTR   &S,&S   MAKE THE CURRENT VERTEX ADDRESS IT.              95970002
         BC    4,&ITSMOP   BRANCH IF THE NEW VERTEX IS AN INNER VERTEX. 96040002
&ITSEOP  CL    &EKER,&IGACNT5.(,&TREEHDR)  CHECK THE COUNTER TO SEE IF  96110002
         BC    7,&TOOBAD   THE READ-ONLY SEARCH MUST BE DONE AGAIN.     96180002
         AGO   .FIN5                                                    96250002
.AGRNOK  MNOTE 12,'SEARCH KEY LENGTH CANNOT BE DETERMINED WITH A IN A  *96320002
               GPR AND NO K.'                                           96390002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         96460002
         AGO   .FIN5     FINISH UP AND GET OUT.                         96530002
.ANOTF   MNOTE 12,'THE FIELD DEFINED BY A HAS NOT A VALID LENGTH ATTRIB*96600002
               UTE.'                                                    96670002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         96740002
         AGO   .FIN5     GET OUT NOW.                                   96810002
.ATOOBIG MNOTE 12,'FIELD NAME IN A PARAMETER IS TOO MANY CHARACTERS.'   96880002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         96950002
         AGO   .FIN5     EXIT.                                          97020002
.NULLKEY MNOTE 12,'LENGTH OF SEARCH KEY DEFINED IS ZERO.'               97090002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         97160002
         AGO   .FIN5     EXIT AFTER CLEANING UP.                        97230002
.S5NONCE MNOTE 12,'NONCE ERROR, ONLY KEYS UP TO 4 BYTES ARE SUPPORTED.' 97300002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         97370002
         AGO   .FIN5     FORGET IT FOR THE NONCE.                       97440002
.LOTSAK  MNOTE 12,'TOO MANY OPERANDS IN THE K PARAMETER LIST.'          97510002
&ERROR   SETB  (1)       SET THE ERROR FLAG ON.                         97580002
         AGO   .FIN5                                                    97650002
.S5K1P   MNOTE 12,'THE DISPLACEMENT-LENGTH PAIR MAY NOT BE IN A GPR.'   97720002
&ERROR   SETB  (1)                                                      97790002
         AGO   .FIN5                                                    97860002
.KINVF   MNOTE 12,'FIELD IN K PARAMETER HAS INVALID LENGTH ATTRIBUTE.'  97930002
&ERROR   SETB  (1)                                                      98000002
         AGO   .FIN5                                                    98070002
.KBIGTAG MNOTE 12,'TOO MANY CHARACTERS IN FIELD NAME; ONLY 8 ALLOWED.'  98140002
&ERROR   SETB  (1)                                                      98210002
         AGO   .FIN5                                                    98280002
.S5LERR  MNOTE 12,'LENGTH IS NOT A SELF-DEFINING TERM IN K PARAMETER.'  98350002
&ERROR   SETB  (1)                                                      98420002
         AGO   .FIN5                                                    98490002
.S5DERR  MNOTE 12,'THE DISPLACEMENT IN THE K PARAMETER IS NOT A SELF-DE*98560002
               FINING TERM.'                                            98630002
&ERROR   SETB  (1)                                                      98700002
         AGO   .FIN5                                                    98770002
.S5DLONG MNOTE 12,'K PARAMETER DISPLACEMENT HAS TOO MANY DIGITS.'       98840002
&ERROR   SETB  (1)                                                      98910002
.FIN5    ANOP                                                           98980002
         AIF   (NOT &USING).FIN  SEE IF THE DROP SHOULD BE GENERATED.   99050002
.*--------------------------------------------------------------------* 99120002
.*      T H E    E N D    O F    M A C R O    S R C H.                * 99190002
.*--------------------------------------------------------------------* 99260002
.FIN     ANOP                                                           99330002
.END     ANOP                                                           99400002
         MEND                                                           99470002
./  ADD  SSI=32820393,NAME=STREE
         MACRO                                                          00200002
&TAG     STREE &TREE,&TSP=,&T=,&TYPE=,&FIX=NO,&K=,&IVS=,&S=,&MAP=,&C=, *00400002
               &TSPACE=,&RSPACE=,&RSP=,&KEYL=,&OFFSET=,&RECL=           00600002
.********************************************************************** 00800002
.*               ****** SEPTEMBER 27,1973.  *******                     01000002
.********************************************************************** 01200002
.* THE STREE MACRO-INSTRUCTION IS USED TO CREATE A RADIX PARTITION    * 01400002
.* TREE FOR SUBSEQUENT USE. THE STREE SUBROUTINE IN THE MODULE        * 01600002
.* IGARPT01 OBTAINS SPACE FOR THE RPT, AND STORES THE INFORMATION     * 01800002
.* SUPPLIED IN A CONTROL BLOCK FOR THE RPT. THE ADDRESS OF THIS       * 02000002
.* CONTROL BLOCK IS RETURNED IN REGISTER 1, AND IS (OPTIONALLY) STORED* 02200002
.* IN THE MAIN STORAGE LOCATION SPECIFIED BY THE TREE PARAMETER.      * 02400002
.*                                                                    * 02600002
.* THE ADDRESS RETURNED BY THE STREE MACRO-INSTRUCTION MUST BE USED   * 02800002
.* FOR ALL SUBSEQUENT OPERATIONS WITH IT USING THE OTHER RPT          * 03000002
.* MACRO-INSTRUCTIONS, SUCH AS SRCH, DEL, INS, SCANL, SCANR, FTREE,   * 03200002
.* ETC. THE ADDRESS CAN BE STORED EITHER IN A MAIN STORAGE LOCATION   * 03400002
.* VIA THE TREE PARAMETER, OR MAY BE PUT IN A REGISTER BY CODING      * 03600002
.* "(GPR)" FOR THE TREE PARAMETER, WHERE "GPR" IS THE REGISTER NAME OR* 03800002
.* NUMBER.                                                            * 04000002
.*                                                                    * 04200002
.* THE SPACE FOR THE RPT CAN BE OBTAINED VIA THE GSPACE               * 04400002
.* MACRO-INSTRUCTION USING A PREVIOUSLY ESTABLISHED SPACE CONTROL     * 04600002
.* AREA, OR MAY BE OBTAINED IMPLICITLY VIA THE GSPACE                 * 04800002
.* MACRO-INSTRUCTION USING THE APPROPRIATE SPACE CONTROL AREA FROM THE* 05000002
.* TCB (SEE THE DESCRIPTION OF THE GSPACE MACRO-INSTRUCTION FOR THE   * 05200002
.* USE OF SPACE CONTROL AREAS).                                       * 05400002
.*                                                                    * 05600002
.* THERE ARE DIFFERENT TYPES OF RADIX PARTITION TREES, WHICH ARE      * 05800002
.* DIFFERENTIATED FROM ONE ANOTHER BY CODING THE T PARAMETER ON ALL   * 06000002
.* THE MACRO-INSTRUCTIONS THAT DEAL WITH RPTS. THERE ARE LIMITATIONS  * 06200002
.* ON THE OPERATIONS THAT MAY BE INVOKED WITH THE DIFFERENT RPT TYPES,* 06400002
.* DEPENDING ON THE RPT TYPE.                                         * 06600002
.*                                                                    * 06800002
.* THE ALLOCATION OF SPACE, AS DESCRIBED ABOVE, APPLIES TO TYPE 8     * 07000002
.* RADIX PARTITION TREES. THE GSPACE MACRO-INSTRUCTION IS ALWAYS USED * 07200002
.* TO ALLOCATE THE SPACE FOR A TYPE 8 RPT.                            * 07400002
.* THE SPACE FOR THE RPT CAN BE OBTAINED EITHER CONDITIONALLY OR      * 07600002
.* UNCONDITIONALLY, DEPENDING ON THE C PARAMETER. IF "C=C" IS CODED,  * 07800002
.* THEN THE ALLOCATION IS VIA A CONDITIONAL GSPACE OPERATION, WHICH   * 08000002
.* HAS A RETURN CODE FOR THE STREE MACRO-INSTRUCTION OF -1 IF THE     * 08200002
.* SPACE COULD NOT BE ALLOCATED, OR HAS A RETURN CODE IN REGISTER 15  * 08400002
.* WHICH IS THE ADDRESS OF THE RPT'S CONTROL BLOCK (CALLED THE TREE   * 08600002
.* HEADER, OR THE ADDRESS OF THE RPT).                                * 08800002
.* FOR TYPE 5 RADIX PARTITION TREE, THE SPACE IS ALWAYS OBTAINED VIA  * 09000002
.* THE GETMAIN MACRO-INSTRUCTION, AND A CONDITIONAL GETMAIN IS ALWAYS * 09200002
.* USED, UNLESS THE C PARAMETER IS CODED "C=U".                       * 09400002
.*                                                                    * 09600002
.********************************************************************** 09800002
.* WITH TYPE 8 RADIX PARTITION TREES, THE FOLLOWING OPERATIONS ARE    * 10000002
.* EFFECTIVE:                                                         * 10200002
.*                                                                    * 10400002
.* SRCH: SEARCH FOR A GIVEN KEY.                                      * 10600002
.* INS:  INSERT A NEW KEY-ADDRESS ASSOCIATION PAIR.                   * 10800002
.* DEL:  DELETE A KEY-ADDRESS ASSOCIATION PAIR SELECTED BY THE CURRENT* 11000002
.*       SETTING OF THE CURSOR (SEE THE DESCRIPTION OF THE CURSOR     * 11200002
.*       UNDER THE ISCAN MACRO-INSTRUCTION DESCRIPTION).              * 11400002
.* ISCAN:INITIALIZE THE CURSOR FOR SUBSEQUENT SCANNING OPERATIONS.    * 11600002
.* SCANL:SCAN LEFT TO THE NEXT KEY IN DESCENDING ORDER.               * 11800002
.* SCANR:SCAN RIGHT TO THE NEXT KEY IN ASCENDING ORDER.               * 12000002
.* FTREE:RELEASE ALL THE SPACE FOR THE RPT TO THE SYSTEM VIA THE      * 12200002
.*       FSPACE MACRO-INSTRUCTION.                                    * 12400002
.*                                                                    * 12600002
.* THE MAXIMUM KEY LENGTH THAT CAN BE SUPPORTED WITH TYPE 8 RADIX     * 12800002
.* PARTITION TREES IS 256 BYTES.                                      * 13000002
.********************************************************************** 13200002
.*                                                                    * 13400002
.* WITH TYPE 5 RADIX PARTITION TREES, THE FOLLOWING OPERATIONS ARE    * 13600002
.* VALID:                                                             * 13800002
.*                                                                    * 14000002
.* SRCH: SEARCH FOR A GIVEN KEY AND SET THE CURSOR TO THE             * 14200002
.*       CORRESPONDING KEY-ADDRESS PAIR.                              * 14400002
.* INS:  INSERT A NEW KEY-ADDRESS PAIR.                               * 14600002
.* DEL:  DELETE A KEY-ADDRESS PAIR BASED ON THE CURRENT SETTING OF THE* 14800002
.*       CURSOR.                                                      * 15000002
.* FTREE:FREE THE SPACE FOR THE TREE BY RELEASING IT TO THE SYSTEM VIA* 15200002
.*       THE FREEMAIN MACRO-INSTRUCTION.                              * 15400002
.*       NO OTHER OPERATIONS ARE VALID FOR TYPE 5 TREES.              * 15600002
.*                                                                    * 15800002
.*       THE MAXIMUM SIZE KEY PERMITTED WITH TYPE 5 TREES IS 16 BYTES.* 16000002
.*       THE KEY MUST ALWAYS BE PRESENTED AS A SINGLE FIELD FOR THE   * 16200002
.*       SRCH AND INS MACRO-INSTRUCTIONS, UNLIKE TYPE 8 TREES, WHERE  * 16400002
.*       THE KEY IS PERMITTED TO BE COMPOSED OF A NUMBER OF SCATTERED * 16600002
.*       FIELDS.                                                      * 16800002
.*                                                                    * 17000002
.* THE MAIN REASON FOR HAVING TYPE 5 RADIX PARTITION TREES IS TO ALLOW* 17200002
.* SEARCHES TO PROCEED IN A MULTIPROCESSING SITUATION SIMULTANEOUSLY  * 17400002
.* WITH AN INSERT OR DELETE IN PROGRESS. THIS IS ACCOMPLISHED WITHOUT * 17600002
.* NEEDING TO LOCK THE RPT HEADER.                                    * 17800002
.********************************************************************** 18000002
.* THE MEANING AND USE OF THE VARIOUS PARAMETERS FOR THE STREE        * 18200002
.* MACRO-INSTRUCTION ARE AS FOLLOWS:                                  * 18400002
.*                                                                    * 18600002
.* TREE: THIS PARAMETER SPECIFIES WHERE TO PUT THE ADDRESS OF THE     * 18800002
.*       RADIX PARTITION TREE AFTER IT HAS BEEN ESTABLISHED. IT MAY   * 19000002
.*       SPECIFY EITHER A MAIN STORAGE LOCATION OR A GENERAL REGISTER.* 19200002
.*                                                                    * 19400002
.* TSP:  THIS PARAMETER SPECIFIES THE SUBPOOL TO BE USED FOR          * 19600002
.*       ALLOCATING SPACE FOR THR RPT, BOTH INITIALLY AND LATER WHEN  * 19800002
.*       SPACE IS NEEDED FOR INSERTIONS.                              * 20000002
.*                                                                    * 20200002
.* T:    THIS SPECIFIES THE RPT TYPE. IT MAY BE 5 OR 8. IF IT IS      * 20400002
.*       ELIDED, THE RPT TYPE IS 8.                                   * 20600002
.*                                                                    * 20800002
.* FIX:  THIS PARAMETER SPECIFIES WHETHER A PGFIX OPERATION MUST BE   * 21000002
.*       PERFORMED ON THE PAGES CONTAINING THE IGARPT01 MODULE. IF    * 21200002
.*       "FIX=YES" IS CODED, THEN THE PGFIX OPERATION IS GENERATED AS * 21400002
.*       PART OF THE STREE MACRO EXPANSION.                           * 21600002
.*                                                                    * 21800002
.* K:    THIS SPECIFIES THE DISPLACEMENT AND LENGTH OF THE KEY, AS A  * 22000002
.*       DISPLACEMENT-LENGTH PAIR. IT IS CODED AS "K=(D,L)", WHERE D  * 22200002
.*       IS THE DISPLACEMENT FROM THE START OF ANY ADDRESS ASSOCIATED * 22400002
.*       WITH A KEY AND THE FIRST BYTE OF THE KEY. THE DISPLACEMENT   * 22600002
.*       MAY NOT EXCEED 4095 BYTES.                                   * 22800002
.*       L IS THE LENGTH OF THE KEYS, IN BYTES. IF VARIABLE LENGTH    * 23000002
.*       KEYS ARE USED, THEY ARE TREATED AS IF THEY ARE ALL THE SAME  * 23200002
.*       LENGTH, I. E. L BYTES LONG. AS LONG AS THE SET OF KEYS DO NOT* 23400002
.*       CONTAIN TWO BYTE STRINGS SUCH THAT ONE IS A PROPER SUBSTRING * 23600002
.*       OF THE OTHER ONE, THIS WILL NOT CAUSE A PROBLEM, SINCE THE   * 23800002
.*       COMPARISONS DO NOT EXTEND PAST THE POINT OF INEQUALITY OF ANY* 24000002
.*       TWO KEYS.                                                    * 24200002
.*                                                                    * 24400002
.* S:    THIS SPECIFIES THE ADDRESS OF THE SPACE CONTROL AREA IF A    * 24600002
.*       SPACE CONTROL AREA IS EXPLICITLY USED TO ALLOCATE AND RELEASE* 24800002
.*       THE STORAGE FOR THE RPT. THE SPACE CONTROL ADDRESS IS THE    * 25000002
.*       WORD THAT IS RETURNED FROM THE GSPACE MACRO-INSTRUCTION WHEN * 25200002
.*       "GSPACE S,..ETC. " IS CODED. SEE THE DESCRIPTION OF THE      * 25400002
.*       GSPACE MACRO-INSTRUCTION FOR A MORE COMPLETE DISCUSSION OF   * 25600002
.*       THE USE OF THE SPACE CONTROL WORD.                           * 25800002
.*                                                                    * 26000002
.* C:    THIS IS USED TO SPECIFY A CONDITIONAL OR UNCONDITIONAL       * 26200002
.*       ATTEMPT TO ALLOCATE THE SPACE FOR THE RPT INITIALLY. IF "C=C"* 26400002
.*       IS CODED, THE REQUEST IS A CONDITIONAL REQUEST. IF "C=U" IS  * 26600002
.*       CODED THE REQUEST IS UNCONDITIONAL. IF THE C PARAMETER IS NOT* 26800002
.*       CODED, THE REQUEST IS CONDITIONAL.                           * 27000002
.*                                                                    * 27200002
.* MAP:  THIS PARAMETER IS USED WHEN THE ADDRESSES ASSOCIATED WITH    * 27400002
.*       KEYS IN THE RPT ARE NOT ADDRESSES OF AREAS CONTAINING THE    * 27600002
.*       CORRESPONDING KEYS. THIS PARAMETER SPECIFIES THE ADDRESS OF A* 27800002
.*       SUBROUTINE TO BE EXECUTED WHEN THE RPT MODULE (IGARPT01) MUST* 28000002
.*       ACCESS A KEY USING ONE OF THE ADDRESSES FROM A KEY-ADDRESS   * 28200002
.*       PAIR. THE ADDRESS SPECIFIED BY THE MAP PARAMETER IS STORED IN* 28400002
.*       THE TREE HEADER, AND WHENEVER THE IGARPT01 MODULE MUST ACCESS* 28600002
.*       A KEY FROM ONE OF THE ADDRESSES THE ADDRESS ASSOCIATED WITH  * 28800002
.*       THE KEY IS PLACED IN REGISTER 1, AND A LINK IS MADE TO THE   * 29000002
.*       SUBROUTINE SPECIFIED BY THE MAP PARAMETER. UPON ENTRY TO THIS* 29200002
.*       ROUTINE A REGISTER SAVE AREA IS AVAILABLE USING THE ADDRESS  * 29400002
.*       IN REGISTER 13. THE MAPPING SUBROUTINE MAY STORE IT'S        * 29600002
.*       REGISTERS IN THE SAVE AREA PROVIDED. THE MAPPING SUBROUTINE  * 29800002
.*       MUST RESTORE ALL REGISTERS EXCEPT 0, 14, AND 15 TO THEIR     * 30000002
.*       CONTENTS UPON ENTRY.                                         * 30200002
.*                                                                    * 30400002
.*       THE MAPPING SUBROUTINE MUST COMPUTE THE ADDRESS OF THE       * 30600002
.*       CORRESPONDING KEY FROM THE ADDRESS FURNISHED IN REGISTER 1,  * 30800002
.*       AND LEAVE IT IN REGISTER 0 UPON RETURN TO THE IGARPT01       * 31000002
.*       MODULE. IF THE K PARAMETER HAS BEEN CODED "K=(D,L)" IN THE   * 31200002
.*       STREE MACRO-INSTRUCTION, THEN THE ADDRESS LEFT IN REGISTER 0 * 31400002
.*       MUST BE EQUAL TO THE ADDRESS OF THE CORRECT KEY MINUS THE    * 31600002
.*       DISPLACEMENT D, SINCE THE IGARPT01 MODULE WILL ADD THE       * 31800002
.*       DISPLACEMENT D TO THE ADDRESS IN REGISTER 0 TO FORM THE      * 32000002
.*       ADDRESS OF THE FIRST BYTE OF THE KEY.                        * 32200002
.*                                                                    * 32400002
.*       A TYPICAL USE OF THIS FEATURE WOULD BE TO STORE RECORDS ON A * 32600002
.*       DISK USING A BDAM ORGANIZATION, WHERE THE ADDRESSES          * 32800002
.*       ASSOCIATED WITH THE KEYS ARE THE BDAM BLOCK NUMBERS OF THE   * 33000002
.*       CORRESPONDING RECORDS. THEN THE MAPPING SUBROUTINE TAKES THE * 33200002
.*       BDAM BLOCK NUMBER IN REGISTER 1, READS THE CORRESPONDIN BDAM * 33400002
.*       BLOCK, AND PUTS THE MAIN STORAGE ADDRESS OF THE REOCRD READ  * 33600002
.*       IN REGISTER 0 PRIOR TO RETURNING TO THE IGARPT01 MODULE. IN  * 33800002
.*       THIS WAY THE ADDRESSES ASSOCIATED WITH THE KEYS IN THE RPT   * 34000002
.*       CAN BE COMPLETELY ARBITRARY, TO BE RESOLVED WHEN NEEDED BY   * 34200002
.*       THE MAPPING SUBROUTINE.                                      * 34400002
.*                                                                    * 34600002
.*       THE ADDRESS OF THE MAPPING SUBROUTIE CAN BE IN A REGISTER BY * 34800002
.*       CODING "MAP=(GPR)", WHERE "GPR" IS THE NAME OR NUMBER OF THE * 35000002
.*       REGISTER CONTAINING THE ADDRESS OF THE MAPPING SUBROUTINE. IF* 35200002
.*       "MAP=LABEL" IS CODED, THE ADDRESS OF THE MAPPING SUBROUTINE  * 35400002
.*       IS AT THE LOCATION "LABEL". A BRANCH TO THE SPECIFIED LABEL  * 35600002
.*       SHOULD RESULT IN EXECUTION OF THE MAPPING SUBROUTINE. THE    * 35800002
.*       ADDRESS IS FORMED BY EXECUTINNG A LOAD-ADDRESS INSTRUCTION   * 36000002
.*       WITH THE SPECIFIED LABEL.                                    * 36200002
.*                                                                    * 36400002
.*       IF THE MAP PARAMETER IS NOT CODED THERE IS NO ATTEMPT MADE TO* 36600002
.*       EXECUTE A MAPPING SUBROUTINE BY THE IGARPT01 MODULE. IN THIS * 36800002
.*       CASE EVERY ADDRESS ASSOCIATED WITH A KEY MUST BE THE MAIN    * 37000002
.*       STORAGE ADDRESS OF AN AREA CONTAINING THE KEY.               * 37200002
.*                                                                    * 37400002
.*       THE PARAMETERS IVS, TYPE, TSPACE, RSPACE, RSP, KEYL, OFFSET, * 37600002
.*       AND RECL ARE ONLY PRESENT FOR COMPATIBILITY WITH EARLIER     * 37800002
.*       VERSIONS OF THE STREE MACRO-INSTRUCTION, AND SHOULD NOT BE   * 38000002
.*       USED, AS THEY ARE NOT SUPPORTED IN ANY CONTEXT OTHER THAN THE* 38200002
.*       ONE THEY WERE USED IN ORIGINALLY.                            * 38400002
         GBLA  &IGALEFT(256)   LEFT EDGES FOR BINARY TREE PARSE.        38600002
         GBLA  &IGARGHT(256)   RIGHT EDGES FOR BINARY TREE PARSE.       38800002
         GBLB  &IGARL(256)     LEFT/RIGHT FLAG BITS FOR BINARY PARSE.   39000002
         GBLB  &IGAIS(256)     INNER/SINK BIT FLAGS FOR PARSE TREE.     39200002
         GBLB  &IGAOKAY        1 IF PARSE DISCOVERED BAD SYNTAX.        39400002
         GBLA  &IGAX     TRIPLE FOR SCANNING OPERATION.                 39600002
         GBLA  &IGAY     XX                                             39800002
         GBLA  &IGAZ     XX                                             40000002
         GBLC  &IGASTRE                                                 40200002
         GBLB  &IGALONE  ON TO RUN THE RPT PROGRAMS STANDALONE.         40400002
         GBLC  &IGARPT#  THE RADIX PARTITION TREE TYPE.                 40600002
         GBLB  &IGAPGM  ON IF THIS IS IGARPT01.                         40800002
         LCLC  &X        LOCAL CHARACTER STRING.                        41000002
         LCLA  &N        LOCAL VARIABLE.                                41200002
         LCLA  &I        LOCAL INDEX VARIABLE.                          41400002
         LCLA  &J        LOCAL VARIABLE.                                41600002
.*A000000                                                        Y02147 41800002
.********************************************************************** 42000002
.* CHECK TO SEE IF ANY OF THE OLD PARAMETERS OF THE STREE MACRO ARE   * 42200002
.* SPECIFIED, AND IF THEY ARE TRANSLATE THEM TO THE NEW PARAMETERS VIA* 42400002
.* THE MACRO RECURSION TECHNIQUE.                                     * 42600002
.********************************************************************** 42800002
         AIF   ((K'&KEYL EQ 0)AND(K'&OFFSET EQ 0)).NEW  SEE IF THEY ARE*43000002
                         BOTH NOT SPECIFIED.                            43200002
&TAG     STREE &TREE,TSP=&TSP,T=&T,TYPE=&TYPE,FIX=&FIX,IVS=&IVS,S=&S,  *43400002
               MAP=&MAP,K=(&OFFSET,&KEYL)                               43600002
         AGO   .FIN      ALL DONE WITH THE MAPPING FROM THE OLD TO THE *43800002
                         NEW FORMATS, NOW EXIT FROM THE STREE MACRO.    44000002
.NEW     ANOP                                                           44200002
.********************************************************************** 44400002
.* CHECK THE TYPE AND T PARAMETERS TO SEE IF A VALID RPT TYPE IS      * 44600002
.* SPECIFIED. IF NEITHER IS SPECIFIED, ASSUME IT IS TYPE 8 RPT. THE   * 44800002
.* TYPE IS PUT INTO THE GLOBAL VARIABLE &IGARPT# AT THE END OF THE    * 45000002
.* TYPE CHECKING SECTION.                                             * 45200002
.********************************************************************** 45400002
.RPT#    AIF   (K'&T EQ 0).RPT#TMT  SEE IF THE T PARAMETER IS CODED.    45600002
         AIF   (K'&TYPE EQ 0).RPT#TCK  USE THE T PARAMETER IF IT IS    *45800002
                         CODED AND THE TYPE PARAMETER IS NOT CODED.     46000002
.********************************************************************** 46200002
.* BOTH THE T AND TYPE PARAMETERS ARE CODED; SEE IF THEY ARE THE SAME,* 46400002
.* AND IF THEY ARE NOT THEN USE T.                                    * 46600002
.********************************************************************** 46800002
         AIF   ('&T' EQ '&TYPE').RPT#TCK  IF THEY ARE THE SAME THEN USE*47000002
                         T.                                             47200002
         MNOTE 4,'TYPE CONFLICT, ONLY T OR TYPE SHOULD BE CODED.'       47400002
.RPT#TCK ANOP                                                           47600002
&IGARPT# SETC  '&T'      GET THE RPT TYPE.                              47800002
         AGO   .RPT#CHK  GO TO CHECK THE VALIDITY OF THE RADIX         *48000002
                         PARTITION TREE TYPE.                           48200002
.********************************************************************** 48400002
.* THE T PARAMETER IS NOT CODED, SEE IF THE TYPE PARAMETER IS CODED.  * 48600002
.********************************************************************** 48800002
.RPT#TMT AIF   (K'&TYPE EQ 0).RPT#8  IF BOTH ARE LEFT OUT USE TYPE 8   *49000002
                         RPT.                                           49200002
&IGARPT# SETC  '&TYPE'   SET THE TYPE TO THE TYPE THAT IS SPECIFIED BY *49400002
                         THE TYPE PARAMETER.                            49600002
         AGO   .RPT#CHK  GO CHECK IT FOR VALIDITY.                      49800002
.RPT#8   ANOP                                                           50000002
&IGARPT# SETC  '8'       SET THE RPT TYPE TO 8.                         50200002
.RPT#CHK AIF   (('&IGARPT#' EQ '8')OR('&IGARPT#' EQ '5')OR('&IGARPT#' E*50400002
               Q '4')).RPT#FIN                                          50600002
         MNOTE 4,'INVALID RPT TYPE, TYPE 8 ASSUMED.'                    50800002
&IGARPT# SETC  '8'       USE TYPE 8 RPT.                                51000002
.RPT#FIN ANOP                                                           51200002
      RPTDSECT T=&IGARPT#,DS=NO                                         51400002
.********************************************************************** 51600002
.* GET THE ADDRESS OF THE MODULE IGARPT01 IN REGISTER 14 FOR THE LINK * 51800002
.* TO THE APPROPRIATE ROUTINE TO SET UP THE RPT.                      * 52000002
.********************************************************************** 52200002
         AIF   (K'&S NE 0).USE@S  SEE IF THE SPACE CONTROL ADDRESS IS  *52400002
                         CODED; BECAUSE IF IT IS THE ADDRESS CAN BE    *52600002
                         LOADED DIRECTLY FROM IT.                       52800002
         AIF   (&IGALONE).LOAD  IF THIS IS THE STAND-ALONE CASE USE THE*53000002
               LOAD MACRO TO LOAD THE MODULE IGARPT01.                  53200002
&TAG   RPTDSECT GEN=(CVTRPT,14)  GET THE ADDRESS FROM THE CVT.          53400002
         AGO   .LOADED   THE ADDRESS IS IN GPR 14.                      53600002
.LOAD    LOAD  EP=IGARPT01  LOAD THE MODULE.                            53800002
         LR    14,0                                                     54000002
         AGO   .LOADED   ALL DONE GETTING THE ADDRESS IN R14.           54200002
.USE@S   AIF   ('&S'(1,1) EQ '(').USESGPR  SEE IF THE SPACE CONTROL    *54400002
               ADDRESS IS IN A GENERAL PURPOSE REGISTER.                54600002
         L     15,&S     LOAD THE ADDRESS OF THE SPACE CONTROL AREA.    54800002
         L     14,0(,15) ADDRESS OF IGARPT01.                           55000002
         AGO   .LOADED   ALL LOADED NOW.                                55200002
.USESGPR AIF   ('&S' EQ '(15').LOAD14  SEE IF IT IS ALREADY IN R15.     55400002
         LR    15,&S(1)  SPACE CONTROL ADDRESS.                         55600002
.LOAD14  L     14,0(,15)  ADDRESS OF IGARPT01.                          55800002
.LOADED  ANOP                                                           56000002
.********************************************************************** 56200002
.* CHECK TO SEE IF A PGFIX OPERATION MUST BE DONE ON THE RPT MODULE.  * 56400002
.********************************************************************** 56600002
         AIF   (K'&FIX EQ 0).NOFIX  GO AROUND THE PGFIX IF IT IS NOT   *56800002
               CODED IN THE STREE MACRO-INSTRUCTION.                    57000002
         AIF   (('&FIX'(1,1) NE 'Y')AND('&FIX'(1,1) NE '1')).NOFIX      57200002
         STM   14,3,12(13) SAVE REGS.                                   57400002
         LR    2,14                                                     57600002
         LA    3,(3*X'C')(13) ECB ADDRESS.                              57800002
         MVI   0(3),X'00'                                               58000002
         PGFIX R,A=(2),ECB=(3)                                          58200002
         WAIT  ECB=(3)                                                  58400002
         LM    14,12,12(13)  RESTORE REGISTERS.                         58600002
.NOFIX   ANOP                                                           58800002
.********************************************************************** 59000002
.* NOW PUT THE STREE PARAMETERS IN REGISTERS 0, 1, AND 15, AND LINK TO* 59200002
.* THE MODULE IGARPT01 TO SET UP THE RADIX PARTITION TREE OF THE      * 59400002
.* INDICATED TYPE.                                                    * 59600002
.* THE REGISTER CONTENTS UPON LINKING TO THE MODULE IGARPT01 ARE:     * 59800002
.* R0    KEYI, TYPE, AND KEY LENGTH. THE KEY INDEX IS A HALFWORD      * 60000002
.*       OFFSET, THE TREE TYPE IS A 7-BIT #, AND THE KEY LENGTH IS A  * 60200002
.*       9-BIT #.                                                     * 60400002
.* R1    THE ADDRESS OF THE MAPPING SUBROUTINE (IF THERE IS A MAPPING * 60600002
.*       SUBROUTINE).                                                 * 60800002
.* 14    THE ADDRESS OF THE MODULE IGARPT01.                          * 61000002
.* R15   TSP,S - THE TREE SUBPOOL AND THE ADDRESS OF THE SPACE CONTROL* 61200002
.*       AREA (IF THERE IS ONE).                                      * 61400002
.********************************************************************** 61600002
         AIF   (K'&TSP EQ 0).SPZERO  SEE IF THE SUBPOOL IS NOT CODED.   61800002
         AIF   ('&TSP' EQ '0').SPZERO  SEE IF SUBPOOL ZERO IS          *62000002
                         EXPLICITLY CODED.                              62200002
         AIF   (K'&S EQ 0).SELIDED  SEE IF THE SPACE CONTROL ADDRESS IS*62400002
                         NOT CODED.                                     62600002
         AIF   ('&S'(1,1) EQ '(').SINGPR  SEE IF THE SPACE CONTROL     *62800002
                         ADDRESS IS IN A GPR.                           63000002
         LA    15,0(,15)                                                63200002
.S15AL   AL    15,=AL1(&TSP,0,0,0)  RPT SUBPOOL.                        63400002
         AGO   .GOT15    GOT REGISTER 15 SET UP NOW.                    63600002
.SINGPR  LA    15,0(,&S(1))  SPACE CONTROL ADDRESS.                     63800002
         AGO   .S15AL    NOW GO ADD IN THE SUBPOOL NUMBER.              64000002
.SELIDED LA    15,&TSP   RPT SUBPOOL.                                   64200002
         SLL   15,24                                                    64400002
         AGO   .GOT15    GOT REGISTER 15 ALL SET UP NOW.                64600002
.SPZERO  AIF   (K'&S EQ 0).NOSORSP  SEE IF THERE IS NEITHER A SPACE    *64800002
                         CONTROL ADDRESS NOR A SUBPOOL CODED.           65000002
         LA    15,0(,15)                                                65200002
         AGO   .GOT15    ALL DONE SETTING UP REGISTER 15 NOW.           65400002
.NOSORSP SLR   15,15     SUBPOOL ZERO.                                  65600002
.GOT15   ANOP                                                           65800002
.********************************************************************** 66000002
.* NOW PUT THE KEY INDEX, THE RPT TYPE #, AND THE KEY LENGTH IN       * 66200002
.* REGISTER 0.                                                        * 66400002
.********************************************************************** 66600002
         AIF   (K'&K NE 0).KNOTMT  SEE IF THE K PARAMETER IS CODED.     66800002
.KMNOTE  MNOTE 12,'"K=(DISPLACEMENT,KEY LENGTH)" MUST BE CODED.'        67000002
         AGO   .FIN      CAN'T DO ANY MORE WITH THIS, EXIT.             67200002
.KNOTMT  AIF   (N'&K EQ 2).KHAS2  SEE IF THERE ARE EXACTLY 2 OPERANDS  *67400002
                         IN THE K PARAMETER.                            67600002
         AIF   (N'&K NE 1).KMNOTE  SEE IF THERE IS JUST ONE.            67800002
&X       SETC  '&K(1)'(1,1)  GET THE FIRST CHARACTER OF THE FIRST      *68000002
                         ELEMENT IN THE K PARAMETER.                    68200002
         AIF   ((('&X' EQ '0')OR('&X' EQ '1')OR('&X' EQ '2')OR('&X' EQ *68400002
               '3')OR('&X' EQ '4')OR('&X' EQ '5')OR('&X' EQ '6')OR('&X'*68600002
                EQ '7')OR('&X' EQ '8')OR('&X' EQ '9'))).K1#             68800002
         LA    0,&K                                                     69000002
         LH    1,*-2     OFFSET TO KEY + BASE REGISTER.                 69200002
         N     1,=XL4'00000FFF'  ELIMINATE BASE REGISTER.               69400002
         SLL   1,7                                                      69600002
         LA    0,&IGARPT#.(,1)  RPT TYPE.                               69800002
&X       SETC  'L'''                                                    70000002
         LA    1,&X&K                                                   70200002
         SLL   0,16                                                     70400002
         ALR   0,1                                                      70600002
         AGO   .GETMAP   GO SEE IF THE MAP IS CODED.                    70800002
.K1#     L     0,=AL4(B'1000000000'*&IGARPT#+&K)  RPT# &KL.             71000002
         MNOTE 0,'DISPLACEMENT TO KEY ASSUMED ZERO.'                    71200002
         AGO   .GETMAP   ALL DONE WITH K NOW.                           71400002
.KHAS2   ANOP                                                           71600002
         AIF   (K'&K(1) EQ 0).KDSP0  CHECK FOR A ZERO DISPLACEMENT.     71800002
         AIF   ('&K(1)' EQ '0').KDSP0  SEE IF THE ZERO DISPLACEMENT IS *72000002
                         EXPLICITLY CODED.                              72200002
         LA    1,&K(1)   DISPLACEMENT TO THE KEY.                       72400002
         SLL   1,7                                                      72600002
         LA    0,&IGARPT#.(,1)  RPT TYPE.                               72800002
         AGO   .GOTKDSP  ALL FINISHED SETTING UP DISPLACEMENT AND RPT  *73000002
                         TYPE NOW.                                      73200002
.KDSP0   LA    0,&IGARPT#  RPT TYPE.                                    73400002
.GOTKDSP SLL   0,9                                                      73600002
         LA    1,&K(2)   KEY LENGTH IN BYTES.                           73800002
         ALR   0,1                                                      74000002
.GETMAP  ANOP                                                           74200002
         AIF   (K'&MAP EQ 0).NOMAP  SEE IF THE ADDRESS OF THE MAPPING  *74400002
                         SUBROUTINE IS SPECIFIED.                       74600002
         AIF   ('&MAP' EQ '0').NOMAP  SEE IF IT IS EXPLICITLY CODED AS *74800002
                         ZERO.                                          75000002
         AIF   ('&MAP'(1,1) EQ '(').MAPGPR  SEE IF THE ADDRESS OF THE  *75200002
                         MAPPING SUBROUTINE IS IN A GENERAL REGISTER.   75400002
         L     1,=AL4(&MAP)  ADDRESS OF MAPPING SUBROUTINE.             75600002
         AGO   .GOTMAP   ALL FINISHED SETTING UP REGISTER 1 NOW.        75800002
.MAPGPR  LR    1,&MAP(1)  ADDRESS OF MAPPING SUBROUTINE.                76000002
         AGO   .GOTMAP   ALL DONE WITH R1 NOW.                          76200002
.NOMAP   SLR   1,1       INDICATE NO MAPPING SUBROUTINE PRESENT.        76400002
.GOTMAP  ANOP                                                           76600002
.********************************************************************** 76800002
.* CHECK THE INNER VERTEX SIZE FOR 8 OR 12 BYTES, AND SET BIT 0 OF    * 77000002
.* REGISTER R1 TO 0 IF IT IS 8 BYTES, OR TO 1 IF IT IS 12 BYTES. IF IT* 77200002
.* IS NEITHER 8 NOR 12 BYTES GENERATE THE MNOTE.                      * 77400002
.********************************************************************** 77600002
         AIF   ('&IGARPT#' NE '8').SKIPIVS  SEE IF THIS IS A TYPE 8    *77800002
                         RPT.                                           78000002
         AIF   (K'&IVS EQ 0).IVSIS8  THE DEFAULT INNER VERTEX SIZE IS 8*78200002
                         BYTES.                                         78400002
         AIF   ('&IVS' EQ '8').IVSIS8  SEE IF THE INNER VERTEX SIZE IS *78600002
                         8 BYTES.                                       78800002
         AIF   ('&IVS' EQ '12').IVSIS12  SEE IF THE INNER VERTEX SIZE  *79000002
                         IS 12 BYTES.                                   79200002
         MNOTE 12,'INVALID INNER VERTEX SIZE, CAN ONLY BE 8 OR 12.'     79400002
         AGO   .IVSFIN   GO ON AND CHECK OTHER THINGS.                  79600002
.IVSIS8  LA    1,0(,1)   SET BIT 0 TO 0 FOR IVS=8.                      79800002
         AGO   .IVSFIN   ALL DONE SETTING UP R1 NOW.                    80000002
.IVSIS12 O     1,=XL4'80000000'  INDICATE IVS=12.                       80200002
.IVSFIN  ANOP                                                           80400002
.SKIPIVS ANOP                                                           80600002
.********************************************************************** 80800002
.* LINK TO THE STREE SUBROUTINE IN THE MODULE IGARPT01. IF THE C      * 81000002
.* PARAMETER IS CODED "C=Y", "C=1", OR "C=" THEN A BAL IS GENERATED TO* 81200002
.* INDICATE CONDITIONAL GSPACE/GETMAIN OPERATIONS. IF "C=N" OR "C=0"  * 81400002
.* IS CODED THE REQUEST IS UNCONDITIONAL, AND A BALR IS GENERATED FOR * 81600002
.* THE LINK TO THE STREE ROUTINE IN THE MODULE IGARPT01.              * 81800002
.********************************************************************** 82000002
         AIF   (K'&C EQ 0).LINKC  SEE IF THE C PARAMETER IS NOT CODED.  82200002
         AIF   ('&C' EQ 'C').LINKC  SEE IF IT A CONDITIONAL REQUEST.    82400002
         AIF   (('&C'(1,1) NE 'Y')AND('&C' NE '1')).LINKU  SEE IF THE  *82600002
                         REQUEST IS UNCONDITIONAL.                      82800002
.LINKC   BAL   14,&IGASTRE.(,14)  INDICATE CONDITIONAL GSPACE/GETMAIN.  83000002
         AGO   .TREE     ALL DONE NOW, EXCEPT FOR THE REGISTER TO      *83200002
                         CONTAIN THE TREE ADDRESS.                      83400002
.LINKU   LA    14,&IGASTRE.(,14)                                        83600002
         BALR  14,14     INDICATE UNCONDITIONAL GSPACE/GETMAIN.         83800002
.TREE    ANOP                                                           84000002
         AIF   (K'&TREE EQ 0).STR5R1   GO IF IT'S TO BE LEFT IN R1.     84200002
         AIF   ('&TREE'(1,1) NE '(').STR5L   GO IF IT'S NOT A REGISTER. 84400002
         AIF   ('&TREE' EQ '(1)').STR5R1  GO IF IT'S ALREADY THERE.     84600002
         LR    &TREE(1),1      SAVE THE TREE ADDRESS.                   84800002
         AGO   .STR5R1         MERGE.                                   85000002
.STR5L   ST    1,&TREE(1)  STORE THE TREE ADDRESS.                      85200002
.STR5R1  ANOP                                                           85400002
         AIF   ('&IGARPT#' NE '5').END  SEE IF THIS IS A TYPE 5 TREE.   85600002
      RPTDSECT T=5,DS=YES  GENERATE THE DSECT FOR TYPE 5 TREES.         85800002
.END     ANOP                                                           86000002
.FIN     ANOP                                                           86200002
         MEND                                                           86400002
./  ADD  SSI=32600861,NAME=SYNEPS
         MACRO                                                          00050002
         SYNEPS  &MF=E                                                  00100002
.*A001200,004100-004400,004600,005600-005900,006100              Y02006 00102002
.*A007100-007400,007600,008600-008900,009100,010100-010400       Y02006 00104002
.*A010600                                                        Y02006 00106002
.***  GLOBAL VARIABLE &BALMOD INDICATES IF BAL MODULE OR PLS MODULE **  00110002
         GBLB  &BALMOD                                           Y02006 00120002
         AIF   ('&MF' EQ 'L').NOGEND                                    00150002
SYNEPS   DSECT                                                          00200002
.NOGEND  ANOP                                                           00250002
         USING SYNTAX,R15                                        S21014 00300002
SYNTAX   SR    R1,R1               INDICATE STANDARD ERROR MSG ONLY     00350002
         B     SYNTAX4             PRINT MSG                            00400002
         AIF   (&BALMOD).BALSYNA   BRANCH IF BAL MODULE          Y02006 00410002
SYNTAXA  L     R1,SYNMSGA(,COMBASE)  LOAD ADDR OF MSG ADDRS      Y02006 00420002
         AGO   .LDADDRA                                          Y02006 00430002
.BALSYNA ANOP                                                    Y02006 00440002
SYNTAXA  L     R1,SYNMSGA          LOAD ADDR OF MSG ADDRS               00450002
.LDADDRA ANOP                                                    Y02006 00460002
         L     R1,0(R1)            LOAD ADDR OF MSG                     00500002
         B     SYNTAX4             PRINT MESSAGE                        00550002
         AIF   (&BALMOD).BALSYNB   BRANCH IF BAL MODULE          Y02006 00560002
SYNTAXB  L     R1,SYNMSGA(,COMBASE)  LOAD ADDR OF MSG ADDRS      Y02006 00570002
         AGO   .LDADDRB                                          Y02006 00580002
.BALSYNB ANOP                                                    Y02006 00590002
SYNTAXB  L     R1,SYNMSGA          LOAD ADDR OF MSG ADDRS               00600002
.LDADDRB ANOP                                                    Y02006 00610002
         L     R1,4(R1)            LOAD ADDR OF MESSAGE                 00650002
         B     SYNTAX4             PRINT MESSAGE                        00700002
         AIF   (&BALMOD).BALSYNC   BRANCH IF BAL MODULE          Y02006 00710002
SYNTAXC  L     R1,SYNMSGA(,COMBASE)  LOAD ADDR OF MSG ADDRS      Y02006 00720002
         AGO   .LDADDRC                                          Y02006 00730002
.BALSYNC ANOP                                                    Y02006 00740002
SYNTAXC  L     R1,SYNMSGA          LOAD ADDR OF MSG ADDRS               00750002
.LDADDRC ANOP                                                    Y02006 00760002
         L     R1,8(R1)            LOAD ADDR OF MESSAGE                 00800002
         B     SYNTAX4             PRINT MESSAGE                        00850002
         AIF   (&BALMOD).BALSYND   BRANCH IF BAL MODULE          Y02006 00860002
SYNTAXD  L     R1,SYNMSGA(,COMBASE)  LOAD ADDR OF MSG ADDRS      Y02006 00870002
         AGO   .LDADDRD                                          Y02006 00880002
.BALSYND ANOP                                                    Y02006 00890002
SYNTAXD  L     R1,SYNMSGA          LOAD ADDR OF MSG ADDRS               00900002
.LDADDRD ANOP                                                    Y02006 00910002
         L     R1,12(R1)           LOAD ADDR OF MESSAGE                 00950002
         B     SYNTAX4             PRINT MESSAGE                        01000002
         AIF   (&BALMOD).BALSYNE   BRANCH IF BAL MODULE          Y02006 01010002
SYNTAXE  L     R1,SYNMSGA(,COMBASE)  LOAD ADDR OF MSG ADDRS      Y02006 01020002
         AGO   .LDADDRE                                          Y02006 01030002
.BALSYNE ANOP                                                    Y02006 01040002
SYNTAXE  L     R1,SYNMSGA          LOAD ADDR OF MSG ADDRS               01050002
.LDADDRE ANOP                                                    Y02006 01060002
         L     R1,16(R1)           LOAD ADDR OF MESSAGE                 01100002
SYNTAX4  STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS              01150002
         DROP  R15                                               S21014 01200002
         SPACE                                                          01250002
         MEND                                                           01300002
./  ADD  SSI=80240062,NAME=TAS
         MACRO                                                          00020000
         TAS   &A,&B,&C,&D                                              00040000
         LCLC  &Y                                                       00060000
         AIF   ('&B' EQ 'DDWA').L1                                      00080000
         AIF   ('&B' EQ 'JCT').L2                                       00100000
         AIF   ('&B' EQ 'SCT').L3                                       00120000
         AIF   ('&B' EQ 'SIOT').L4                                      00140000
         AIF   ('&B' EQ 'JFCB').L5                                      00160000
         AIF   ('&B' EQ 'JFCX').L6                                      00180002
.*             JFCBE INSERTED.....                             @Z40MPTH 00200003
.*             MERGE SU4,10,16 CODE TO REL 037 BASE PTF        @ZA28955 00203003
         AIF   ('&B' EQ 'JFCE').L7                             @Z40MPTH 00206003
         AIF   ('&B' EQ 'DSN').L8                                       00220000
         AIF   ('&B' EQ 'DICT').L9                                      00240000
         AIF   ('&B' EQ 'IWA').L10                                      00260000
.L1      ANOP                                                           00280000
&Y       SETC  'INAM'                                                   00300000
         AGO   .LA                                                      00320000
.L2      ANOP                                                           00340000
&Y       SETC  'INJM'                                                   00360000
         AGO   .LA                                                      00380000
.L3      ANOP                                                           00400000
&Y       SETC  'INSM'                                                   00420000
         AGO   .LA                                                      00440000
.L4      ANOP                                                           00460000
&Y       SETC  'INDM'                                                   00480000
         AGO   .LA                                                      00500000
.L5      ANOP                                                           00520000
&Y       SETC  'INFM'                                                   00540000
         AGO   .LA                                                      00560000
.L6      ANOP                                                           00580000
&Y       SETC  'INEM'                                                   00600000
         AGO   .LA                                                      00620000
.L7      ANOP                                                           00640000
.*             INGM INSERTED FOR JFCBE....                     @Z40MPTH 00660003
&Y       SETC  'INGM'                                          @Z40MPTH 00666003
         AGO   .LA                                                      00680000
.L8      ANOP                                                           00700000
&Y       SETC  'INNM'                                                   00720000
         AGO   .LA                                                      00740000
.L9      ANOP                                                           00760000
&Y       SETC  'INTM'                                                   00780000
         AGO   .LA                                                      00800000
.L10     ANOP                                                           00820000
&Y       SETC  'INIM'                                                   00840000
.LA      ANOP                                                           00860000
         DC    AL1(&A*HEX+&Y) FUNCTION AND TABLE BYTE.                  00880000
         DC    AL1(&C-&Y&B)     OFF SET IN PROPER TABLE.                00900000
         AIF   ('&A' EQ 'MVCN' OR '&A' EQ 'AMVCN').LE                   00920000
         AIF   ('&A' EQ 'AMVCN1' OR '&A' EQ 'AMVCN2').LE       @ZA20550 00930003
         AIF   ('&A' EQ 'CVB1').LB                                      00940000
         AIF   ('&A' EQ 'CVB2').LC                                      00960000
         AIF   ('&A' EQ 'CVB3').LD                                      00980000
         DC    AL1(&D)      BIT PATTERN.                                01000000
         AGO   .LE                                                      01020000
.LB      ANOP                                                           01040000
         DC    AL1(&D)      MAXIMUM CONVERSION NUMBER.                  01060000
         AGO   .LE                                                      01080000
.LC      ANOP                                                           01100000
         DC    AL2(&D)      MAXIMUM CONVERSION NUMBER.                  01120000
         AGO   .LE                                                      01140000
.LD      ANOP                                                           01160000
         DC    AL3(&D)      MAXIMUN CONVERSION NUMBER.                  01180000
.LE      ANOP                                                           01200000
         MEND                                                           01220000
./  ADD  SSI=23352305,NAME=TASC
         MACRO                                                          00020000
         TASC  &A,&B,&C,&D,&E                                           00040000
A&SYSNDX DC    AL1((D&SYSNDX-C&SYSNDX)*HEX+L'B&SYSNDX)  CONTROL & COMP. 00060000
B&SYSNDX DC    C'&E'  COMPARE BYTES.                                    00080000
C&SYSNDX DS    0C                 START OF CONTROL BYTES.               00100000
         TAS   &A,&B,&C,&D                                              00120000
D&SYSNDX DS    0C                 END OF CONTROL BYTES.                 00140000
         MEND                                                           00160000
./  ADD  SSI=23352306,NAME=TASCD
         MACRO                                                          00020000
&L       TASCD &A,&B,&C,&D,&E                                           00040000
         LCLA  &X,&Y                                                    00060000
&X       SETA  N'&C                                                     00080000
&L       DS    0C START OF ENTRY.                                       00100000
         DC    AL1(A&SYSNDX-&L)  LENGTH OF ENTRY.                       00120000
.L1      ANOP                                                           00140000
&Y       SETA  &Y+1                                                     00160000
         TASCE &A,&B,&C(&Y),&D(&Y),&E(&Y)                               00180000
         AIF   (&Y LT &X).L1                                            00200000
A&SYSNDX DS    0C                 END OF ENTRY.                         00220000
         MEND                                                           00240000
./  ADD  SSI=23352307,NAME=TASCE
         MACRO                                                          00020000
         TASCE &A,&B,&C,&D,&E                                           00040000
         LCLA  &X                                                       00060000
         LCLC  &Y                                                       00080000
&X       SETA  K'&E                                                     00100000
&Y       SETC  '&X'                                                     00120000
A&SYSNDX DS    0C                 START OF POSITIONAL.                  00140000
         DC    AL1(C&SYSNDX-A&SYSNDX)  LENGTH OF POSITIONSL.            00160000
         DC    AL1((C&SYSNDX-B&SYSNDX)*HEX)  CONTROL BYTE.              00180000
         DC    AL1(&Y)            MAXIMUM LENGTH.                       00200000
B&SYSNDX DS    0C                 START OF CONTROL BYTES.               00220000
         TAS   &A,&B,&C,&D                                              00240000
C&SYSNDX DS    0C                 END OF POSITIONAL.                    00260000
         MEND                                                           00280000
./  ADD  SSI=23352308,NAME=TASCT
         MACRO                                                          00020000
&L       TASCT &A,&B,&C,&D,&E                                           00040000
         LCLA  &X,&Y                                                    00060000
&X       SETA  N'&D                                                     00080000
&L       DS    0C                 START OF ENTRY.                       00100000
         DC    AL1(B&SYSNDX-&L)  LENGTH OF ENTRY.                       00120000
A&SYSNDX DS    0C                 START OF FIRST POSITONS.              00140000
         DC    AL1(B&SYSNDX-A&SYSNDX)  LENGTH OF FIRST POSITION.        00160000
.L1      ANOP                                                           00180000
&Y       SETA  &Y+1                                                     00200000
         TASC  &A,&B,&C,&D(&Y),&E(&Y)                                   00220000
         AIF   (&Y LT &X).L1                                            00240000
B&SYSNDX DS    0C                 END OF ENTRY.                         00260000
         MEND                                                           00280000
./  ADD  SSI=81730775,NAME=TCOMTAB
*        %GOTO MTABLBL  ; /*                                            00050000
         MACRO                                                          00500000
         TCOMTAB                                                        01000000
TCOMTAB  DSECT                                                          01500000
         SPACE 1                                                        02000000
*********************************************************************** 02500000
*                                                                     * 03000000
*        THIS MACRO MAPS THE TEST COMMAND PROCESSOR COMMUNICATION     * 03500000
*        TABLE (TCOMTAB) USED BY ALL SUBCOMMAND PROCESSORS AND        * 04000000
*        SERVICE ROUTINES WHICH MAKE UP THE TSO/TEST COMMAND.         * 04500000
*                                                                     * 05000000
* STATUS -- VERSION NO. 01 - OS/VS2 RELEASE NO. 01                    * 05500000
*                                                                     * 06000000
* CHANGE LEVEL -- 04 - DATE 04/25/72                                  * 06500000
*                                                                     * 07000000
*********************************************************************** 07500000
         SPACE 1                                                        08000000
ECBPP    DS    A -            PP DISPATCHABILITY ECB.                   08500000
         SPACE 1                                                        09000000
ECBLIST  EQU   * -            BEGINNING OF ECBLIST FOR WAIT.            09500000
ECBTST   DS    A -            PTR TO TEST DISPATCHABILITY ECB.          10000000
ECBTERM  DS    A -            PTR TO PP TERMINATION ECB.                10500000
ECBTMPS  DS    A -            PTR TO STAI ECB.                          11000000
ECBTMPA  DS    A -            PTR TO ATTENTION ECB.                     11500000
         SPACE 1                                                        12000000
ECBLOG   DS    A -            PTR TO STOP/MODIFY ECB.                   12500000
         SPACE 1                                                        13000000
TSTTCB   DS    0A -           PTR TO THE TEST TCB.                      13500000
TSTTCBR  DS    X -            RESERVED.                                 14000000
TSTTCBP  DS    AL3 -          PTR TO THE TEST TCB.                      14500000
         SPACE 1                                                        15000000
PPTCB    DS    0A -           PTR TO THE PROBLEM PROGRAM TCB.           15500000
PPTCBR   DS    X -            RESERVED.                                 16000000
PPTCBP   DS    AL3 -          PTR TO THE PROBLEM PROGRAM TCB.           16500000
         DS    D -            *** RESERVED SPACE ***                    17000000
         SPACE 1                                                        17500000
OUTBUF   DS    A -            PTR TO GENERAL OUTPUT BUFFER.             18000000
OUTBUFRL EQU   256 -          LENGTH OF OUTPUT BUFFER.                  18500000
BLDLAREA DS    0A -           ADDRESS OF BLDL ENTRY USED BY             19000000
*                             IKJEGINT AND IKJEGLDR.                    19500000
CONAREA  DS    A -            PTR TO OUTPUT AREA USED BY CONVERT RTN.   20000000
CONAREAL EQU   72 -           LENGTH OF CONVERT WORK AREA.              20500000
WORKAREA DS    A -            PTR TO GENERAL WORK AREA.                 21000000
REGSAVEL EQU   72*6 -         LENGTH OF 6 REGISTER SAVE AREAS.          21500000
REGSAVE1 DS    A -            PTR TO SAVE AREA FOR MAINLINE.            22000000
REGSAVE2 DS    A -            PTR TO SAVE AREA FOR COMMANDS.            22500000
REGSAVE3 DS    A -            PTR TO SAVE AREA FOR VALIDITY CHECKERS.   23000000
REGSAVE4 DS    A -            PTR TO SAVE AREA FOR IKJEGCVT.            23500000
REGSAVE5 DS    A -            PTR TO SAVE AREA FOR IKJEGIO.             24000000
REGSAVE6 DS    A -            PTR TO SAVE AREA FOR IKJEGSRH.            24500000
         DS    A -            *** RESERVED SPACE ***                    24550000
         SPACE 1                                                        25500000
TPLPTR   DS    A -            PTR TO TPL                                26000000
TMPLL    DS    H -            LINE LENGTH                               26500000
TSTMTASK DS    X -            BREAKPOINT SYNCHRONIZATION BYTE.          27000000
TSTESTRC DS    X -            ESATE ERROR RETURN CODE                   27500000
TSTWHR   DS    A -            PTR TO COMMAND LIB DCB.                   28000000
         SPACE 1                                                        28500000
PARMLIST DS    0F -           PARM LIST FOR CALLING SERVICE ROUTINES    29000000
TSTUPT   DS    A -            PTR TO UPT                                29500000
TSTECT   DS    A -            PTR TO ECT                                30000000
TSTCPECB DS    A -            PTR TO CP ECB                             30500000
         SPACE 1                                                        31000000
TSTANSPL DS    A -            ANSWER PLACE FOR PARSE SERVICE ROUTINE.   31500000
         SPACE 1                                                        32000000
ABENTAB  DS    A -            PTR TO ABEND VECTOR TABLE(RESIDENT).      32500000
ABENTAB1 DS    A -            PTR TO ABEND VECTOR TABLE(TRANSIENT).     33000000
TSTRETRY DS    0A -           ENTRY POINT OF TRANSIENT RETRY ROUTINE.   33500000
TSTRTYCD DS    X -            SUBCOMMAND ID.                            34000000
TSTRTYPT DS    AL3 -          PTR TO A STAE RETRY ROUTINE WITHIN ANY    34500000
*                             TEST MODULE THAT HAS ISSUED A STAE        35000000
         SPACE 1                                                        35500000
INBUF    DS    A -            PTR TO BUFFER CONTAINING SUBCMD           36000000
TSTIODSN DS    A -            HEAD OF DSNAME CHAIN FOR IKJEGIO 'PRINT'. 36500000
TSTIO    DS    A -            ENTRY POINT OF GET ROUTINE IKJEGIO.       37000000
         DS    A -            RESERVED                                  37500000
         DS    A -            RESERVED                                  38000000
TSTCONVT DS    A -            ENTRY POINT OF IKJEGCVT.                  38500000
TSTADDR  DS    A -            ENTRY POINT OF ADDRESS BUILD SUBROUTINE.  39000000
TSTSTAE  DS    A -            ENTRY POINT OF STAE EXIT RTN. (IKJEGSTA). 39500000
         SPACE 2                                                        40000000
TSTFLGS1 DS    X -            TEST FLAGS, BYTE 1.                       40500000
         SPACE 1                                                        41000000
PCHLSTVL EQU   B'10000000' -  PATCH LIST SWITCH.                        41500000
S9GINTSW EQU   B'01000000' -  INTERNAL SW FOR SVC97          @ZA05687   41550000
TSTPRINT EQU   B'00100000' -  PRINT SWITCH.                             42000000
TSTFIRST EQU   B'00010000' -  FIRST TIME SWITCH.                        42500000
RANGESW  EQU   B'00001000' -  INDICATES PDE IS FOR ADDRESS RANGE.       43000000
TSTBUILD EQU   B'00000100' -  'AT' SWITCH FOR DEFER CHECK.              43500000
ENDSW    EQU   B'00000010' -  INDICATES 'END' TO MAINLINE.              44000000
RUNSW    EQU   B'00000001' -  INDICATES 'RUN' TO MAINLINE.              44500000
         SPACE 2                                                        45500000
TSTFLGS2 DS    X -            TEST FLAGS, BYTE 2.                       46000000
         SPACE 1                                                        46500000
TSTLDF   EQU   B'10000000' -  IKJEGLDF TASK-SWITCH INDICATOR.           47000000
TSTXCTL  EQU   B'01000000' -  STAE XCTL INDICATOR.                      47500000
TOFFDEF  EQU   B'00100000' -  NO ACTIVE BREAKPOINTS.                    48000000
TTESTTCB EQU   B'00010000' -  RUNNING UNDER TEST TASK.                  48500000
TADDROUT EQU   B'00001000' -  LOAD MODULE FOUND UNDER TCB.              49000000
TWHRLOAD EQU   B'00000100' -  VALID LOAD MODULE CHECK.                  49500000
TSTQUAL  EQU   B'00000010' -  QUALIFICATION IS IN PROCESS               50000000
TMYIOMSG EQU   B'00000001' -  IKJEGIO MESSAGE SWITCH.                   50500000
         SPACE 2                                                        51000000
TSTFLGS3 DS    X -            TEST FLAGS, BYTE 3.                       51500000
         SPACE 1                                                        52000000
TSTGOSW  EQU   B'10000000' -  SPECIAL BREAKPOINT TYPE SWITCH.           52500000
TSTSTAI  EQU   B'01000000' -  PROBLEM PROGRAM ABEND INDICATOR.          53000000
SYMMESG  EQU   B'00100000' -  SYM 'NO DIAGNOSTIC' SWITCH.               53500000
TCSECTCK EQU   B'00010000' -  CSECT ONLY DEFER QUEUE CLEAR.             54000000
TDUPNAME EQU   B'00001000' -  DEFER QUEUE DUPLICATE NAME BIT.           54500000
TSTLINK  EQU   B'00000100' -  SUB-CMD 'LINK FAILED' INDICATOR.          55000000
TSTHELP  EQU   B'00000010' -  INDICATES THAT 'HELP' IS ATTACHED.        55500000
NOPARMS  EQU   B'00000001' -  INDICATES NO PARAMETERS WITH COMMAND.     56000000
         SPACE 2                                                        56500000
TSTFLGS4 DS    X              TEST FLAGS, BYTE 4.                       57000000
         SPACE 1                                                        57500000
TSTA     EQU   B'10000000' -  TEST'S INPUT IS NOT FROM A STACK.         58000000
TSTB     EQU   B'01000000' -  A STACKED TERMINAL ELEM. IS PRESENT.      58500000
TSTFLUSH EQU   B'00100000' -  FORCE TCLEARQ AND POSSIBLE STACK FLUSH.   59000000
TSTRERTN EQU   B'00010000' -  A RETRY IS IN PROCESS                     59500000
TSTESTAE EQU   B'00001000' -  ESTAE IS INVOKING I/O FOR MESSAGE         60000000
TSTSVCAB EQU   B'00000100' -  SVC ABEND IS IN PROCESS                   60500000
TSTPERC  EQU   B'00000010' -  THIS RETRY ROUTINE WAS PERCOLLATED TO     61000000
TSTVALCK EQU   B'00000001' -  INDICATES PARSE VALIDITY CHECK IN PROCESS 61500000
         SPACE 2                                                        62000000
BREAKTAB DS    A -            PTR TO FIRST BREAK ELEMENT.               62500000
DEFERTAB DS    A -            PTR TO DEFER'ED CMD LIST                  63000000
PPLOAD   DS    A -            PTR TO CURRENT BASE FOR RELATIVES.        63500000
PPTEMP   DS    A -            TEMPORARY BASE FOR RELATIVES.             64000000
SUBCHAIN DS    A -            PTR TO BREAKPOINT SUBCOMMAND CHAIN.       64500000
         SPACE 1                                                        65000000
TSTGO    DS    0X -           RESUME ADDRESS AFTER BREAKPOINT.          65500000
TSTGOPSW DS    F -            SECOND WORD OF RBOPSW FIELD.              66000000
TSTGOWCF DS    X -            WAIT COUNT FROM RBWCF FIELD.              66500000
TSTRSVD2 DS    X -            RESERVED BYTE.                            67000000
TSTSVC   DS    H -            AN SVC 97 INSTRUCTION (0A61).             67500000
PPRB     DS    A -            CURRENT PROBLEM PROGRAM RB ADDRESS.       68000000
         SPACE 1                                                        68500000
TSTIODCB DS    A -            PTR TO OPEN PRINT DCB.                    69000000
CALLPARM DS    A -            HEAD OF CHAIN FOR PARMS BUILT BY 'CALL'.  69500000
         DS    A -            *** RESERVED SPACE ***                    70000000
INTSTDDN DS    0CL8           DDNAME FOR DATA SET SPECIFIED ON THE TEST 70500000
*                             COMMAND - USED BY IKJEGINT AND IKJEGLDR.  71000000
TSTCURLD DS    CL8 -          CURRENTLY QUALIFIED LOAD NAME.            71500000
TERMDD   DS    0CL8 -         DDNAME FOR TERMINAL USED BY OS LOADER.    72000000
TSTCURCT DS    CL8 -          CURRENTLY QUALIFIED CSECT NAME.           72500000
TSTSYMBA DS    A -            CURRENTLY QUALIFIED SYMBOLIC ADDR BASE.   73000000
TSTTRN   DS    A -            HEAD OF SAVE INFORMATION CHAIN            73500000
SICHAIN  DS    A -            HEAD OF SYMBOL INFORMATION CHAIN          74000000
TSTSYMWK DS    A -            PTR TO SYMBOL PROCESSING WORK AREA.       74500000
SYMTABLE DS    A -            PTR TO IN-CORE SYMBOL TABLE.              75000000
         SPACE 1                                                        75500000
PPEXIT   DS    0A -           BREAKPOINT & EXIT SVC'S FOR PP TERM.      76000000
PPEXIT1  DS    H -            AN SVC 97 INSTRUCTION (0A61).             76500000
PPEXIT2  DS    H -            AN SVC 3 INSTRUCTION (0A03).              77000000
TSTDCB   DS    A -            HEAD OF OVLY DCB CHAIN.                   77500000
OPCODTAB DS    A -            PTR TO TABLE OF VALID OPERATION CODES.    78000000
TSTOPCD2 DS    F -            PTR TO TABLE FOR TWO BYTE S/370           78500000
*                             OPERATION CODES.                          79000000
         DS    A -            RESERVED                                  79500000
         DS    A -            RESERVED                                  80000000
TSTHTCB  DS    A -            POINTER TO THE HELP TCB                   80500000
TSTAQUAL DS    0X -           AUTOMATIC QUALIFICATION CONTROL           81000000
TSTAQLDM DS    CL8 -          EBCDIC LOAD MODULE NAME.                  81500000
TSTAQEP  DS    A -            ENTRY POINT OF LOAD MODULE.               82000000
TSTRSTRT DS    A -            RESTART ADDRESS FOR STAE PROCESSING       82500000
TSTSRHRT DS    A -            ADDRESS OF RESIDENT ADDRESS VALIDITY      83000000
*                             CHECK ROUTINE.                            83500000
         SPACE 1                                                        84000000
TSTSTAX  DS    5F -           STAX PARAMETER LIST.                      84500000
TSTDSECB DS    F -            TEST DISPATCHABILITY ECB.                 85000000
TSTMNLWK DS    10F -          WORK AREA FOR EXCULSIVE USE OF MNL        85500000
TSTSTAEL DS    4F -           STAE PARAMETER LIST FOR MNL ONLY.         86000000
TSTOIPRM DS    0CL84          IO PARAMETER BLOCK                        86500000
TSTIOPRM DS    CL84           IO PARAMETER BLOCK USE BY SIO             87000000
TSTSVCM1 DS    F              SVC FIRST LEVEL MESSAGE NO.               87500000
TSTSVCM2 DS    F              SVC SECOND LEVEL MESSAGE NO.              88000000
TSTSVCNQ DS    CL6'ECBTST'    CHARACTER CONSTANT FOR SVC ENQUE          88500000
R11SAVE  DS    F              SAVE AREA FOR R11 FOR SVC97    @ZA00889   88550000
ABNDTCB  DS    F              ABENDING TCB ADDR FOR SVC97 DQ @ZA07137   88600000
         DS    8D             *** RESERVED SPACE ***                    89000000
TCOMLEN  EQU   ((*-TCOMTAB+7)/8)*8 - TCOMTAB LENGTH.                    89500000
**/                                                                     90000000
         MEND                                                           90050000
* %MTABLBL :  ;                                                         90100000
* DECLARE                                                               90150000
*   1 TCOMTAB BASED,                                                    90200000
* /* *************************************************************** */ 90250000
* /* *                                                             * */ 90300000
* /* *   THIS MACRO MAPS THE TEST COMMAND PROCESSOR COMMUNICATION  * */ 90350000
* /* *   TABLE (TCOMTAB) USED BY ALL SUBCOMMAND PROCESSORS AND     * */ 90400000
* /* *   SERVICE ROUTINES WHICH MAKE UP THE TSO/TEST COMMAND.      * */ 90450000
* /* *                                                             * */ 90500000
* /* * STATUS -- VERSION NO. 01 - OS/VS2 RELEASE NO. 01            * */ 90550000
* /* *                                                             * */ 90600000
* /* * CHANGE LEVEL -- 04 - DATE 04/25/72                          * */ 90650000
* /* *                                                             * */ 90700000
* /* *************************************************************** */ 90750000
*     2 ECBLIST     BDY(WORD), /* BEGINNING OF ECBLIST FOR WAIT.     */ 90800000
*       3 ECBPP     PTR(31),   /* PP DISPATCHABILITY ECB.            */ 90850000
*       3 ECBTST    PTR(31),   /* PTR TO TEST DISPATCHABILITY ECB.   */ 90900000
*       3 ECBTERM   PTR(31),   /* PTR TO PP TERMINATION ECB.         */ 90950000
*       3 ECBTMPS   PTR(31),   /* PTR TO STAE ECB.                   */ 91000000
*       3 ECBTMPA   PTR(31),   /* PTR TO ATTENTION ECB.              */ 91050000
*     2 ECBLOG      PTR(31),   /* PTR TO STOP/MODIFY ECB.            */ 91100000
*     2 TSTTCB      PTR(31),   /* PTR TO THE TEST TCB.               */ 91150000
*       3 TSTTCBR   FIXED(8),  /* RESERVED.                          */ 91200000
*       3 TSTTCBP   PTR(24),   /* PTR TO THE TEST TCB.               */ 91250000
*     2 PPTCB       PTR(31),   /* PTR TO THE PROBLEM PROGRAM TCB.    */ 91300000
*       3 PPTCBR    FIXED(8),  /* RESERVED.                          */ 91350000
*       3 PPTCBP    PTR(24),   /* PTR TO THE PROBLEM PROGRAM TCB.    */ 91400000
*     2 *           CHAR(8),   /* *** RESERVED SPACE ***             */ 91450000
*     2 OUTBUF      PTR(31),   /* PTR TO GENERAL OUTPUT BUFFER.      */ 91500000
*     2 BLDLAREA    PTR(31),   /* ADDRESS OF BLDL ENTRY USED BY         91550000
*                                 IKJEGINT AND IKJEGLDR.             */ 91600000
*       3 CONAREA   PTR(31),   /* PTR TO OUTPUT AREA USED BY            91650000
*                                 CONVERT RTN.                       */ 91700000
*     2 WORKAREA    PTR(31),   /* PTR TO GENERAL WORK AREA.          */ 91750000
*     2 REGSAVE1    PTR(31),   /* PTR TO SAVE AREA FOR MAINLINE.     */ 91800000
*     2 REGSAVE2    PTR(31),   /* PTR TO SAVE AREA FOR COMMANDS.     */ 91850000
*     2 REGSAVE3    PTR(31),   /* PTR TO SAVE AREA FOR VALIDITY         91900000
*                                 CHECKERS.                          */ 91950000
*     2 REGSAVE4    PTR(31),   /* PTR TO SAVE AREA FOR IKJEGCVT.     */ 92000000
*     2 REGSAVE5    PTR(31),   /* PTR TO SAVE AREA FOR IKJEGIO.      */ 92050000
*     2 REGSAVE6    PTR(31),   /* PTR TO SAVE AREA FOR IKJEGSRH.     */ 92100000
*     2 *           PTR(31),   /* *** RESERVED SPACE ***             */ 92150000
*     2 TPLPTR      PTR(31),   /* PTR TO TPL                         */ 92200000
*     2 TMPLL       FIXED(15), /* LINE LENGTH                        */ 92250000
*     2 TSTMTASK    FIXED(8),  /* BREAKPOINT SYNCHRONIZATION BYTE.   */ 92300000
*     2 TSTESTRC    FIXED(8),  /* ESTAE ERROR RETURN CODE            */ 92350000
*     2 TSTWHR      PTR(31),   /* PTR TO COMMAND LIB DCB.            */ 92400000
*     2 PARMLIST    CHAR(16),  /* PARM LIST FOR CALLING SERVICE         92450000
*                                 ROUTINES.                          */ 92500000
*       3 TSTUPT    PTR(31),   /* PTR TO UPT.                        */ 92550000
*       3 TSTECT    PTR(31),   /* PTR TO ECT.                        */ 92600000
*       3 TSTCPECB  PTR(31),   /* PTR TO CP ECB.                     */ 92650000
*       3 TSTANSPL  PTR(31),   /* ANSWER PLACE FOR PARSE SERVICE        92700000
*                                 ROUTINE.                           */ 92750000
*     2 ABENTAB     PTR(31),   /* PTR TO ABEND VECTOR TABLE(RESIDENT)*/ 92800000
*     2 ABENTAB1    PTR(31),   /* PTR TO ABEND VECTOR TABLE             92850000
*                                 (TRANSIENT).                       */ 92900000
*     2 TSTRETRY    PTR(31),   /* ENTRY POINT OF TRANSIENT RETRY RTN.*/ 92950000
*       3 TSTRTYCD  FIXED(8),  /* SUBCOMMAND ID.                     */ 93000000
*       3 TSTRTYPT  PTR(24),   /* PTR TO A STAE RETRY ROUTINE WITHIN    93050000
*                                 ANY TEST MODULE THAT HAS ISSUED       93100000
*                                 A STAE.                            */ 93150000
*     2 INBUF       PTR(31),   /* PTR TO BUFFER CONTAINING SUBCMD.   */ 93200000
*     2 TSTIODSN    PTR(31),   /* HEAD OF DSNAME CHAIN FOR IKJEGIO      93250000
*                                 'PRINT'.                           */ 93300000
*     2 TSTIO       PTR(31),   /* ENTRY POINT OF GET ROUTINE IKJEGIO.*/ 93350000
*     2 *           PTR(31),   /* RESERVED                           */ 93400000
*     2 *           PTR(31),   /* RESERVED                           */ 93450000
*     2 TSTCONVT    PTR(31),   /* ENTRY POINT OF IKJEGCVT.           */ 93500000
*     2 TSTADDR     PTR(31),   /* ENTRY POINT OF ADDRESS BUILD          93550000
*                                 SUBROUTINE.                        */ 93600000
*     2 TSTSTAE     PTR(31),   /* ENTRY POINT OF STAE EXIT RTN          93650000
*                                 (IKJEGSTA).                        */ 93700000
*     2 TSTFLGS1    BIT(8),    /* TEST FLAGS, BYTE 1.                */ 93750000
*       3 PCHLSTVL  BIT(1),    /* PATCH LIST SWITCH.                 */ 93800000
*       3 TSTPRINT  BIT(1),    /* PRINT SWITCH.                      */ 93850000
*       3 TSTFIRST  BIT(1),    /* FIRST TIME SWITCH.                 */ 93900000
*       3 RANGESW   BIT(1),    /* INDICATES PDE IS FOR ADDRESS RANGE.*/ 93950000
*       3 TSTBUILD  BIT(1),    /* 'AT' SWITCH FOR DEFER CHECK.       */ 94000000
*       3 ENDSW     BIT(1),    /* INDICATES 'END' TO MAINLINE.       */ 94050000
*       3 RUNSW     BIT(1),    /* INDICATES 'RUN' TO MAINLINE.       */ 94100000
*       3 *         BIT(1),    /* RESERVED BIT.                      */ 94150000
*     2 TSTFLGS2    BIT(8),    /* TEST FLAGS, BYTE 2.                */ 94200000
*       3 TSTLDF    BIT(1),    /* IKJEGLDF TASK-SWITCH INDICATOR.    */ 94250000
*       3 TSTXCTL   BIT(1),    /* STAE XCTL INDICATOR.               */ 94300000
*       3 TOFFDEF   BIT(1),    /* NO ACTIVE BREAKPOINTS.             */ 94350000
*       3 TTESTTCB  BIT(1),    /* RUNNING UNDER TEST TASK.           */ 94400000
*       3 TADDROUT  BIT(1),    /* LOAD MODULE FOUND UNDER TCB.       */ 94450000
*       3 TWHRLOAD  BIT(1),    /* VALID LOAD MODULE CHECK.           */ 94500000
*       3 TSTQUAL   BIT(1),    /* QUALIFICATION IS IN PROCESS        */ 94550000
*       3 TMYIOMSG  BIT(1),    /* IKJEGIO MESSAGE SWITCH.            */ 94600000
*     2 TSTFLGS3    BIT(8),    /* TEST FLAGS, BYTE 3.                */ 94650000
*       3 TSTGOSW   BIT(1),    /* SPECIAL BREAKPOINT TYPE SWITCH.    */ 94700000
*       3 TSTSTAI   BIT(1),    /* PROBLEM PROGRAM ABEND INDICATOR.   */ 94750000
*       3 SYMMESG   BIT(1),    /* SYM 'NO DIAGNOSTIC' SWITCH.        */ 94800000
*       3 TCSECTCK  BIT(1),    /* CSECT ONLY DEFER QUEUE CLEAR.      */ 94850000
*       3 TDUPNAME  BIT(1),    /* DEFER QUEUE DUPLICATE NAME BIT.    */ 94900000
*       3 TSTLINK   BIT(1),    /* SUB-CMD 'LINK FAILED' INDICATOR.   */ 94950000
*       3 TSTHELP   BIT(1),    /* INDICATES THAT 'HELP' IS ATTACHED  */ 95000000
*       3 NOPARMS   BIT(1),    /* INDICATES NO PARAMETERS WITH CMD.  */ 95050000
*     2 TSTFLGS4    BIT(8),    /* TEST FLAGS, BYTE 4.                */ 95100000
*       3 TSTA      BIT(1),    /* TEST'S INPUT IS NOT FROM A STACK.  */ 95150000
*       3 TSTB      BIT(1),    /* A STACKED TERMINAL ELEM. IS PRESENT*/ 95200000
*       3 TSTFLUSH  BIT(1),    /* FORCE TCLEARQ AND POSSIBLE STACK      95250000
*                                 FLUSH.                             */ 95300000
*       3 TSTRERTN  BIT(1),    /* A RETRY IS IN PROCESS.             */ 95350000
*       3 TSTESTAE  BIT(1),    /* ESTAE IS INVOKING I/O FOR MESSAGE. */ 95400000
*       3 TSTSVCAB  BIT(1),    /* SVC ABEND IS IN PROCESS            */ 95450000
*       3 TSTPERC   BIT(1),    /* THIS RETRY ROUTINE WAS PERCOLLATED */ 95500000
*       3 TSTVALCK  BIT(1),    /* INDICATES PARSE VALIDITY CHECK IN     95550000
*                                 PROCESS.                           */ 95600000
*     2 BREAKTAB    PTR(31),   /* PTR TO FIRST BREAK ELEMENT.        */ 95650000
*     2 DEFERTAB    PTR(31),   /* PTR TO DEFERRED CMD LIST.          */ 95700000
*     2 PPLOAD      PTR(31),   /* PTR TO CURRENT BASE FOR RELATIVES. */ 95750000
*     2 PPTEMP      PTR(31),   /* TEMPORARY BASE FOR RELATIVES.      */ 95800000
*     2 SUBCHAIN    PTR(31),   /* PTR TO BREAKPOINT SUBCOMMAND CHAIN.*/ 95850000
*     2 TSTGO       FIXED(32), /* RESUME ADDRESS AFTER BREAKPOINT.   */ 95900000
*       3 TSTGOPSW  FIXED(32), /* SECOND WORD OF RBOPSW FIELD.       */ 95950000
*     2 TSTGOWCF    FIXED(8),  /* WAIT COUNT FROM RBWCF FIELD.       */ 96000000
*     2 TSTRSVD2    FIXED(8),  /* RESERVED BYTE.                     */ 96050000
*     2 TSTSVC      FIXED(15), /* AN SVC 97 INSTRUCTION (0A61).      */ 96100000
*     2 PPRB        PTR(31),   /* CURRENT PROBLEM PROGRAM RB ADDRESS.*/ 96150000
*     2 TSTIODCB    PTR(31),   /* PTR TO OPEN PRINT DCB.             */ 96200000
*     2 CALLPARM    PTR(31),   /* HEAD OF CHAIN FOR PARMS BUILT BY      96250000
*                                 'CALL'.                            */ 96300000
*     2 *           PTR(31),   /* *** RESERVED SPACE ***             */ 96350000
*     2 INTSTDDN    CHAR(8),   /* DDNAME FOR DATA SET SPECIFIED ON      96400000
*                                 THE TEST COMMAND - USED BY IKJEGINT   96450000
*                                 AND IKJEGLDR.                      */ 96500000
*       3 TSTCURLD  CHAR(8),   /* CURRENTLY QUALIFIED LOAD NAME.     */ 96550000
*     2 TERMDD      CHAR(8),   /* DDNAME FOR TERMINAL USED BY           96600000
*                                 OS LOADER.                         */ 96650000
*       3 TSTCURCT  CHAR(8),   /* CURRENTLY QUALIFIED CSECT NAME.    */ 96700000
*     2 TSTSYMBA    PTR(31),   /* CURRENTLY QUALIFIED SYMBOLIC          96750000
*                                 ADDR BASE.                         */ 96800000
*     2 TSTTRN      PTR(31),   /* HEAD OF SAVE INFORMATION CHAIN.    */ 96850000
*     2 SICHAIN     PTR(31),   /* HEAD OF SYMBOL INFORMATION CHAIN.  */ 96900000
*     2 TSTSYMWK    PTR(31),   /* PTR TO SYMBOL PROCESSING WORK AREA.*/ 96950000
*     2 SYMTABLE    PTR(31),   /* PTR TO IN-CORE SYMBOL TABLE.       */ 97000000
*     2 PPEXIT      FIXED(32), /* BREAKPOINT & EXIT SVC'S FOR PP TERM*/ 97050000
*       3 PPEXIT1   FIXED(15), /* AN SVC 97 INSTRUCTION (0A61).      */ 97100000
*       3 PPEXIT2   FIXED(15), /* AN SVC 3 INSTRUCTION (0A03).       */ 97150000
*     2 TSTDCB      PTR(31),   /* HEAD OF OVLY DCB CHAIN.            */ 97200000
*     2 OPCODTAB    PTR(31),   /* PTR TO TABLE OF VALID OPERATION       97250000
*                                 CODES.                             */ 97300000
*     2 TSTOPCD2    PTR(31),   /* PTR TO TABLE FOR TWO BYTE S/370       97350000
*                                 OPERATION CODES.                   */ 97400000
*     2 *           PTR(31),   /* RESERVED                           */ 97450000
*     2 *           PTR(31),   /* RESERVED                           */ 97500000
*     2 TSTHTCB     PTR(31),   /* POINTER TO THE HELP TCB.           */ 97550000
*     2 TSTAQUAL    CHAR(8),   /* AUTOMATIC QUALIFICATION CONTROL.   */ 97600000
*       3 TSTAQLDM  CHAR(8),   /* EBCDIC LOAD MODULE NAME.           */ 97650000
*     2 TSTAQEP     PTR(31),   /* ENTRY POINT OF LOAD MODULE.        */ 97700000
*     2 TSTRSTRT    PTR(31),   /* RESTART ADDRESS FOR STAE PROCESSING*/ 97750000
*     2 TSTSRHRT    PTR(31),   /* ADDRESS OF RESIDENT ADDRESS           97800000
*                                 VALIDITY CHECK ROUTINE.            */ 97850000
*     2 TSTSTAX     CHAR(20),  /* STAX PARAMETER LIST                */ 97900000
*     2 TSTDSECB    FIXED(31), /* TEST DISPATCHABILITY ECB.          */ 97950000
*     2 TSTMNLWK    CHAR(40),  /* WORK AREA FOR EXCLUSIVE USE OF MNL */ 98000000
*     2 TSTSTAEL    CHAR(16),  /* STAE PARAMETER LIST FOR MNL ONLY.  */ 98050000
*     2 TSTOIPRM    CHAR(84),  /* IO PARAMETER BLOCK                 */ 98100000
*       3 TSTIOPRM  CHAR(84),  /* IO PARAMETER BLOCK USE BY SIO      */ 98150000
*     2 TSTSVCM1    CHAR(4),   /* SVC FIRST LEVEL MESSAGE NO.        */ 98200000
*     2 TSTSVCM2    CHAR(4),   /* SVC SECOND LEVEL MESSAGE NO.       */ 98250000
*     2 *           CHAR(72);  /* *** RESERVED SPACE ***             */ 98300000
* DCL OUTBUFRL FIXED(31)       /* LENGTH OF                          */ 98350000
*              CONSTANT(256);  /* OUTPUT BUFFER.                     */ 98400000
* DCL CONAREAL FIXED(31)       /* LENGTH OF                          */ 98450000
*              CONSTANT(72);   /* CONVERT WORK AREA                  */ 98500000
* DCL REGSAVEL FIXED(31)       /* LENGTH OF                          */ 98550000
*              CONSTANT(432);  /* 6 REGISTER SAVE AREAS.             */ 98600000
* DCL TSTSVCNQ CHAR(6)         /* CHARACTER CONSTANT                 */ 98650000
*        CONSTANT('ECBTST');   /* FOR SVC ENQUE.                     */ 98700000
* DCL TCOMLEN FIXED(31)        /* TCOMTAB                            */ 98750000
*        CONSTANT(800);        /* LENGTH                             */ 98800000
./  ADD  SSI=20731537,NAME=TIOTEXT
*        %GOTO TIOTXBSL ; /*                                            00050000
         MACRO                                                          00100000
         TIOTEXT                                                        00150000
TIOTEXT  DSECT                                                          00200000
*********************************************************************** 00250000
*    THE TIOT EXTENSION TABLE (TIOTEXT) IS CONSTRUCTED DURING           00300000
*    ALLOCATION AT LOGON.  IT CONTAINS INFO WHICH IS USED IN            00350000
*    DYNAMIC ALLOCATION ROUTINES                                        00400000
*********************************************************************** 00450000
         DS    0F                                                       00500000
TEXTTTR  DS    CL3      TTR OF TIOT EXT. TABLE                          00550000
TEXTID   DS    CL1       CONTROL BLOCK IDENTIFIER                       00600000
         DS    F        RESERVED                                        00650000
TEXTSNO  DS    CL1       NUMBER OF RECORDS IN SIOTTR TABLE              00700000
TEXTSTTR DS    5CL3     TTR'S OF SIOTTTR TABLE RECORDS                  00750000
         DS    CL1      RESERVED                                        00800000
TEXTLS   DS    CL3      TTR OF LAST MSG CLASS SYSOUT SIOT               00850000
         DS    CL1      RESERVED                                        00900000
TEXTLCTP DS    CL3      LINKAGE CONTROL TBL ADDR                        00950000
         DS    CL1      RESERVED                                        01000000
TEXTENQ  DS    CL3      TTR OF DATA SET ENQUEUE TBL (DSENQ)             01050000
TEXTMCLS DS    CL1       MSG CLASS FOR THE JOB FROM THE JCT             01100000
TEXTMLEV DS    CL1      MESSAGE LEVEL FOR THE FOB FROM THE JCT          01150000
         DS    H        RESERVED                                        01200000
         DS    CL1      RESERVED                                        01250000
TEXTJCT  DS    CL3      TTR OF JCT                                      01300000
         DS    CL1      RESERVED                                        01350000
TEXTSCT  DS    CL3      TTR OF THE STEP SCT                             01400000
         DS    CL128    NOT USED                                        01450000
**/                                                                     01500000
         MEND                                                           01550000
* %TIOTXBSL:  ;                                                         01600000
* DECLARE                                                               01650000
*   1  TIOTEXT BASED,                                                   01700000
* /* *************************************************************** */ 01750000
* /* THE TIOT EXTENSION TABLE (TIOTEXT) IS CONSTRUCTED DURING        */ 01800000
* /* ALLOCATION AT LOGON.  IT CONTAINS INFO WHICH IS USED IN         */ 01850000
* /* DYNAMIC ALLOCATION ROUTINES                                     */ 01900000
* /* *************************************************************** */ 01950000
*                                                                       02000000
*    2 TEXTTTR  CHAR(3)  BDY(WORD),                                     02050000
*                                    /* TTR OF TIOT EXT. TABLE       */ 02100000
*    2 TEXTID   CHAR(1),             /* CONTROL BLOCK IDENTIFIER     */ 02150000
*    2 *        FIXED(31),                                              02200000
*    2 TEXTSNO  CHAR(1),             /* NUMBER OF RECORDS IN SIOTTR     02250000
*                                       TABLE                        */ 02300000
*    2 TEXTSTTR (5) CHAR(3),         /* TTRS OF SIOTTTR TBL RCDS */     02350000
*    2 * CHAR(1),                    /* RESERVED                 */     02400000
*    2 TEXTLS   CHAR(3),             /* TTR OF LAST MSG CLASS SYSOUT    02450000
*                                       SIOT                         */ 02500000
*    2 *        CHAR(1),             /* RESERVED                     */ 02550000
*    2 TEXTLCTP CHAR(3),             /* LINKAGE CONTROL TBL ADDR     */ 02600000
*    2 *        CHAR(1),             /* RESERVED                     */ 02650000
*    2 TEXTENQ  CHAR(3),             /* TTR OF DATA SET ENQUEUE TBL     02700000
*                                       (DSENQ)                      */ 02750000
*    2 TEXTMCLS CHAR(1),             /* MSG CLASS FOR THE JOB FROM      02800000
*                                       THE JCT                      */ 02850000
*    2 TEXTMLEV CHAR(1),             /* MESSAGE LEVEL FOR THE FOB       02900000
*                                       FROM THE JCT                 */ 02950000
*    2 *        FIXED(15),                                              03000000
*    2 * CHAR(1),                    /* RESERVED                 */     03050000
*    2 TEXTJCT CHAR(3),              /* TTR OF JCT               */     03100000
*    2 * CHAR(1),                    /* RESERVED                 */     03150000
*    2 TEXTSCT CHAR(3),              /* TTR OF THE STEP SCT      */     03200000
*    2 * CHAR(128);                  /* NOT USED                 */     03250000
*                                                                       03300000
./  ADD  SSI=41127167,NAME=TRAS
         MACRO                                                          01000002
&N       TRAS  &TYPE,&ASCB=,&ASID=,&WORK=                               02000002
.* TRAS SET ESTABLISHES ADDRESSABILITY TO THE MEMORY INDICATED          03000002
.*    BY THE ASID OR ASCB SPECIFIED.                                    04000002
.* TRAS RESET RE ESTABLISHES ADDRESSABILITY TO THE MEMORY INDICATED     05000002
.*    BY THE ASCB POINTER IN PSAAOLD, IE THE ORIGINAL MEMORY            06000002
.*                                                                      07000002
.* TYPE = SET OR RESET.                                                 08000002
.* ASCB = REGISTER CONTAINING ASCB PTR FOR SET. OMIT FOR RESET.         09000002
.* ASID = REGISTER CONTAINING ASID NUMBER FOR SET. OMIT FOR RESET.      10000002
.* WORK = SINGLE WORK REG FOR RESET.                                    11000002
.*        LIST OF TWO WORK REGS FOR SET AND ASID                        12000002
.*        OMIT FOR SET AND ASCB.                                        13000002
.*                                                                      14000002
         AIF   ('&SYSECT' NE 'IECIOSCN').ER6   CHECK FOR AUTHORIZATION  14500002
         AIF   ('&TYPE' EQ 'RESET').RESET   RESET REQUEST               15000002
         AIF   ('&TYPE' NE 'SET').ER2  TYPE NOT SET OR RESET            16000002
         AIF   ('&ASCB' EQ '' AND '&ASID' EQ '').ER3 NEITHER ASCB       17000002
.*                                     NOR ASID WAS GIVEN               18000002
         AIF   ('&ASCB' NE '' AND '&ASID' NE '').ER4  BOTH GIVEN        19000002
         AIF   ('&ASCB' EQ '').ASID    TRANSFER IF ASID WAS GIVEN       20000002
         USING ASCB,&ASCB                                               21000002
&N       LCTL  1,1,ASCBSTOR            LOAD STOR FOR NEW MEMORY         22000002
         MEXIT                                                          23000002
.ASID    AIF   (N'&WORK LT 2).ER1                                       24000002
&N       L     &WORK(1),16             -> CVT                           25000002
         USING CVTMAP,&WORK(1)                                          26000002
         L     &WORK(1),CVTASVT        -> ASVT                          27000002
         USING ASVT,&WORK(1)                                            28000002
         LR    &WORK(2),&ASID          ASID NUMBER                      29000002
         SLA   &WORK(2),2              TIMES 4 IS OFFSET IN ASVT        30000002
         L     &WORK(1),ASVTENTY-4(&WORK(2))  -> ASCB                   31000002
         USING ASCB,&WORK(1)                                            32000002
         LCTL  1,1,ASCBSTOR            LOAD STOR FOR NEW MEMORY         33000002
         DROP  &WORK(1)                                                 34000002
         MEXIT                                                          35000002
.RESET   AIF   (N'&WORK LT 1).ER1      NEED ONE WORK REG                36000002
         AIF   ('&ASCB' NE '' OR '&ASID' NE '').ER5 NEITHER MAY BE      37000002
.*                                     SPECIFIED FOR THE RESET OPTION   38000002
         USING PSA,0                                                    39000002
&N       L     &WORK(1),PSAAOLD        -> ASCB IN CONTROL BEFORE SET    40000002
         USING ASCB,&WORK(1)                                            41000002
         LCTL  1,1,ASCBSTOR            RESTORE STOR TO ORIGINAL MEMORY  42000002
         DROP  &WORK(1)                                                 43000002
         MEXIT                                                          44000002
.ER1     MNOTE 8,'INSUFFICIENT WORK REGISTERS'                          45000002
         MEXIT                                                          46000002
.ER2     MNOTE 8,'TYPE NOT SET OR RESET'                                47000002
         MEXIT                                                          48000002
.ER3     MNOTE 8,'TYPE=SET && NEITHER ASCB NOR ASID GIVEN'              49000002
         MEXIT                                                          50000002
.ER4     MNOTE 8,'BOTH ASCB && ASID GIVEN'                              51000002
         MEXIT                                                          52000002
.ER5     MNOTE 8,'TYPE=RESET && ASID OR ASCB GIVEN'                     53000002
         MEXIT                                                          53200002
.ER6     MNOTE 8,'NOT AUTHORIZED TO USE THIS MACRO'                     53400002
         MEXIT                                                          53600002
         MEND                                                           54000002
./  ADD  SSI=23352309,NAME=TRAT
         MACRO                                                          00020000
&L       TRAT  &A,&B,&C,&D                                              00040000
         LCLA  &X                                                       00060000
         LCLC  &Y                                                       00080000
&X       SETA  K'&A-1                                                   00100000
&Y       SETC  '&A'(1,&X)                                               00120000
*                                                                       00140000
*              ******************************************************** 00160000
*              *                                                        00180000
*              *        BRANCH TABLE ENTRY FOR KEY WORD.                00200000
*              *                                                        00220000
*              ******************************************************** 00240000
*                                                                       00260000
&L       DC    AL1(&A)            MAXIMUM NUMBER OF PARAMETERS.         00280000
         DC    AL1(&B)            LOCATION SUBLISTS ARE PERMITTED.      00300000
         DC    Y(&C-IEFVDA-2)     OFF SET TO CODE FOR THIS KEY.         00320000
         DC    Y(&D-IEFVDA-2)     OFF SET TO PD TABLE FOR THIS KEY.     00340000
         MEND                                                           00360000
./  ADD  SSI=23352310,NAME=TSORT
         MACRO                                                          01000002
&TAG     TSORT &TREE,&OFFSET=0,&KEYL=256                                02000002
.*A000000                                                        Y02147 03000002
.********************************************************************** 04000002
      RPTDSECT                                                          05000002
LJW&SYSNDX EQU 1                                                        06000002
         USING IGARPTH,LJW&SYSNDX  BASE REGISTER FOR DSECT.             07000002
         AIF   (K'&TREE EQ K'&TREE(1)+2).LW0                            08000002
&TAG     L     1,&TREE                                                  09000002
         AGO   .LW1                                                     10000002
.LW0     ANOP                                                           11000002
&TAG     LR    1,&TREE(1)                                               12000002
.LW1     ANOP                                                           13000002
         AIF   (K'&OFFSET EQ K'&OFFSET(1)+2).LW2                        14000002
         LA    0,&OFFSET       OFFSET TO KEY IN RECORD.                 15000002
         STH   0,OFFSET                                                 16000002
         AGO   .LW3                                                     17000002
.LW2     ANOP                                                           18000002
         STH   &OFFSET(1),OFFSET                                        19000002
.LW3     ANOP                                                           20000002
         AIF   ('&KEYL'(1,1) EQ '(').LW4                                21000002
         LA    0,&KEYL                                                  22000002
         STH   0,KEYL                                                   23000002
         AGO   .LW5                                                     24000002
.LW4     STH   &KEYL(1),KEYL                                            25000002
.LW5     ANOP                                                           26000002
         DROP  LJW&SYSNDX                                               27000002
         ISCAN (1)                                                      28000002
SCAN&SYSNDX SCANL (1)                                                   29000002
         LTR   15,15                                                    30000002
         BC    8,END&SYSNDX                                             31000002
DEL&SYSNDX DEL (1),FREE=NO                                              32000002
         O     15,=XL4'80000000'                                        33000002
        FSPACE (1),A=(15)                                               34000002
         SCANL (1)                                                      35000002
         LTR   15,15                                                    36000002
         BC    7,DEL&SYSNDX                                             37000002
GSP&SYSNDX GSPACE (1)                                                   38000002
         LTR   15,15                                                    39000002
         BC    10,FIN&SYSNDX                                            40000002
LWR&SYSNDX EQU 1                                                        41000002
         USING IGARPTH,LWR&SYSNDX                                       42000002
         AH    15,OFFSET                                                43000002
         DROP  LWR&SYSNDX                                               44000002
         SRCH  (1),SARG=(15)                                            45000002
         INS   (1),MOVE=NO                                              46000002
         BC    15,GSP&SYSNDX                                            47000002
FIN&SYSNDX EQU *                                                        48000002
        FSPACE (1),A=(15)                                               49000002
END&SYSNDX EQU *                                                        50000002
         MEND                                                           51000002
./  ADD  SSI=42271044,NAME=TSTCWORK
         MACRO                                                          03000000
         TSTCWORK                                                       06000000
         SPACE 1                                                        09000000
*********************************************************************** 12000000
*                                                                     * 15000000
*        THIS MACRO MAPS THE TEST COMMAND WORK AREA.                  * 18000000
*                                                                     * 21000000
* STATUS -- VERSION NO. 01 - OS/VS2 RELEASE NO. 02                    * 24000000
*                                                                     * 27000000
* CHANGE LEVEL -- 01 - DATE 11/09/72                                  * 30000000
*                                                                     * 33000000
*********************************************************************** 36000000
         SPACE 1                                                        39000000
TSTCWORK DSECT                                                          42000000
CWORKCVT DS    XL80 -         FOR EXCLUSIVE USE OF IKJEGCVT.            45000000
CWORKCMD DS    XL240 -        FOR USE OF TEST SUBCOMMANDS.              48000000
CWORKIO  DS    XL48 -         FOR EXCLUSIVE USE OF IKJEGIO.             51000000
CWORKATN DS    XL128 -        FOR EXCLUSIVE USE OF IKJEGATN.            54000000
CWORKSTA DS    XL48 -         FOR EXCLUSIVE USE OF IKJEGSTA.            57000000
CWORKSYM DS    XL32 -         FOR EXCLUSIVE USE OF IKJEGSYM.            60000000
CWORKSRH DS    XL32 -         FOR EXCLUSIVE USE OF IKJEGSRH.            63000000
CWORKLDF EQU   CWORKIO-64 -   FOR IKJEGLDF(ONLY IKJEGAT MAY NOT USE).   66000000
CWORKLEN EQU   *-TSTCWORK -   LENGTH OF DSECT.                          69000000
         MEND                                                           72000000
./  ADD  SSI=32131641,NAME=WINDOW
         MACRO                                                          00050002
&NAME    WINDOW &PARM                                                   00100002
         LCLC  &TEMP                                                    00150002
         LCLC  &TEMP2                                                   00200002
&TEMP    SETC  'IHB1&SYSNDX'           GENERATE UNIQUE LABEL            00250002
&TEMP2   SETC  'IHB2&SYSNDX'           GENERATE UNIQUE LABEL            00300002
         AIF   ('&PARM' EQ '').ERROR   CHECK IF OPERAND SPECIFIED       00350002
         AIF   ('&PARM'(1,1) EQ '(').RXFORM1 CHECK IF RX FORM           00400002
         STCTL 0,0,&PARM               SAVE THE CURRENT C.R. 0 VALUE    00450002
         AGO   .COMMON                 PERFORM COMMON WINDOW OPERATION  00500002
.RXFORM1 ANOP                          RX FORM SPECIFIED                00550002
         STCTL 0,0,0&PARM              SAVE THE CURRENT C.R. 0 VALUE    00600002
.COMMON  ANOP                          COMMON WINDOW CODE               00650002
         STCTL 0,0,PSACR0              STORE C.R. 0 IN WORK AREA        00700002
         NC    PSACR0(4),&TEMP         CLEAR ALL EXTERNAL INTERRUPTS    00750002
         OC    PSACR0(4),&TEMP2        SET MFA AND EMS BITS             00800002
         LCTL  0,0,PSACR0              LOAD C.R. 0                      00850002
         STOSM PSACR0,X'01'            ENABLE FOR EMS/MFA INTERRUPTS    00900002
         STNSM PSACR0,X'FE'            DISABLE FOR EMS/MFA INTERRUPTS   00950002
         STCTL 0,0,PSACR0              STORE CR0 IN WORK AREA           00970002
         AIF   ('&PARM'(1,1) EQ '(').RXFORM2 CHECK IF RX FORM           01000002
         OC    &PARM.(1),PSACR0        INSURE TIMER BIT STAYS SAME      01020002
         LCTL  0,0,&PARM               RELOAD ORIGINAL C.R. 0           01050002
         AGO   .END                    EXIT                             01100002
.ERROR   ANOP                          NO C.R. 0 SAVE AREA WAS SPEC     01150002
         MNOTE 8,'NO C.R. 0 SAVE AREA ADDRESS WAS SPECIFIED'            01200002
         AGO   .END2                   EXIT                             01250002
.RXFORM2 ANOP                          RX FORM SPECIFIED                01300002
         OC    0(1,&PARM(1).),PSACR0   INSURE TIMER BIT STAYS SAME      01320002
         LCTL  0,0,0&PARM              RELOAD ORIGINAL C.R. 0           01350002
.END     ANOP                          FINISHED                         01400002
         B     *+12                    BRANCH AROUND CONSTANTS          01450002
&TEMP    DC    X'FFFFC31F'             DISABLE C.R. 0 MASK              01500002
&TEMP2   DC    X'0000C000'             ENABLE EMS/MFA MASK              01550002
.END2    ANOP                                                           01600002
         MEND                                                           01650002
./  ADD  SSI=21050450,NAME=WRTRP
         MACRO                                                          04000000
&NAME    WRTRP &SIZE=,&DISP=                                            08000000
         AIF   (T'&SIZE NE 'O').A1                                      12000000
         MNOTE 8,'SIZE NOT STATED'                                      16000000
         MEXIT                                                          20000000
.A1      ANOP                                                           24000000
         AIF   ('&SIZE'(1,1) EQ '(').A2                                 28000000
&NAME    LA    R1,&SIZE .                  LENGTH OF MESSAGE            32000000
         AGO   .A3                                                      36000000
.A2      ANOP                                                           40000000
         AIF   ('&SIZE'(1,3) EQ '(1)').A4                               44000000
&NAME    LR    R1,&SIZE .                  LENGTH OF MESSAGE            48000000
         AGO   .A3                                                      52000000
.A4      ANOP                                                           56000000
&NAME    L     R15,PARPRADR .           ENTRY TO PARALLEL PRINT         60000000
         AGO   .A5                                                      64000000
.A3      ANOP                                                           68000000
         L     R15,PARPRADR .           ENTRY TO PARALLEL PRINT         72000000
.A5      ANOP                                                           76000000
         LA    R15,&DISP.(R15) .            ENTRY POINT IN DPRINT       80000000
         BALR  R14,R15 .                LINK TO MODULE                  84000000
         MEND                                                           88000000
