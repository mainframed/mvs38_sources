./  ADD  SSI=81600281,NAME=IEAVID00
         TITLE 'IGC041       IDENTIFY COMMENTARY'                       00100000
* /* START OF SPECIFICATIONS ****                                       00150002
*                                                                       00160002
*01*  MODULE-NAME = IEAVID00                                            00170002
*                                                                       00192002
*02*     CSECT-NAME = IGC041                                            00194002
*                                                                       00198002
*01*  DESCRIPTIVE-NAME = IDENTIFY                                       00198402
*                                                                       00199202
*01*  COPYRIGHT = NONE                                                  00199602
*                                                                       00216602
*01*  STATUS = Y02758 CHANGE LEVEL, VERSION 2                           00226602
*                                                                       00230602
*01*  FUNCTION = TWO FOLD                                               00232602
*      A. TO IDENTIFY AN EMBEDED ENTRY TO THE SYSTEM                    00232702
*                                                                       00232802
*        SEARCHES THE CDE QUEUES(JPAQ AND LPAQ) FOR THE AREA FROM WHICH 00232902
*        THE CURRENT RB'S PROGRAM MODULE COMES. IF THE IDENTIFIED NAME  00233002
*        IS FOUND TO BE PREEXISTENT, AN EXCEPTION CODE IS RETURNED TO   00233802
*        THE CALLER (SEE CPS FOR CODES). IF THE NAME IS NEW, THE        00234202
*        EXTENT LIST OF THE CURRENT RB'S CDE IS USED TO DETERMINE       00234602
*        WHETHER THE ENTRY POINT SPECIFIED AS THE SECOND OPERAND OF     00235002
*        THE IDENTIFY MACRO FALLS WITHIN THE CURRENT MODULE. IF NOT,    00235402
*        THE LOAD LIST (ORIGIN IS TCBLLS) OF THE CURRENT TASK IS        00235502
*        SEARCHED USING THE CDE POINTER IN EACH LLE TO LOCATE AND       00236102
*        EXAMINE ASSOCIATED EXTENT LISTS TO DETERMINE IF THE ENTRY      00238102
*        POINT IS WITHIN ANY MODULE LOADED BY THE CURRENT TASK. IF      00238202
*        THE ENTRY POINT CANNOT BE ASSOCIATED WITH A MODULE, AN         00238402
*        EXCEPTION CODE IS RETURNED.                                    00238502
*                                                                       00238602
*      B. TO IDENTIFY TO THE SYSTEM A SINGLE COPY MODULE LOADED         00238702
*        IN SUBPOOL 0                                                   00238802
*                                                                       00239102
*        AN EXCEPTION CODE IS RETURNED IF                               00239502
*           1. THE PARAMETER LIST HAS INVALID ENTRIES                   00239902
*           2. THE ENTRY POINT NAME IS PREEXISTENT ON THE LPAQ OR THE   00240502
*           CALLER'S JPAQ CDE QUEUES                                    00240602
*           3. THE ENTRY POINT IS NOT WITHIN THE MODULE'S EXTENTS.      00240702
*         OTHERWISE A NEW CDE, FLAGGED NOT LOADABLE ONLY, IN            00241002
*         SUBPOOL ZERO, AND EXTENT LIST BUILT AND A ZERO USE COUNT, IS  00241402
*         QUEUED ON THE CALLER'S JPAQ.                                  00241502
*                                                                       00242002
*02*     OPERATION = THIS MODULE IS PROTECTED BY AN FRR RECOVERY        00242302
*        ROUTINE (FRRSVC41) WHICH VERIFIES THE APPROPRIATE CDE QUEUE    00242402
*        AND CAUSES RETRY TO A ROUTINE WHICH WILL RETURN CONTROL TO     00242502
*        THE CALLER WITH A RETURN CODE OF X'24' - UNEXPECTED SYSTEM     00242602
*        ERROR, REQUEST NOT COMPLETED.                                  00242702
*                                                                       00243602
*01*   NOTES = THE FOLLOWING IS A DESCRIPTION OF THE DEPENDENCIES,      00243802
*      CONVENTIONS, AND FUNCTIONS OF IEAVID00                           00243902
*                                                                       00244102
*02*     DEPENDENCIES = THIS SVC ROUTINE MUST BE ENTERED WITH THE LOCAL 00244202
*        LOCK                                                           00245602
*                                                                       00270202
*03*        CHARACTER-CODE-DEPENDENCIES = NONE                          00270602
*                                                                       00271802
*02*     RESTRICTIONS = NONE                                            00271902
*                                                                       00272102
*02*     REGISTER-CONVENTIONS = THE REGISTER CONVENTIONS USED BY        00276702
*        IEAVID00 ARE DESCRIBED UNDER THE TOPIC REGISTER EQUATES.       00277102
*                                                                       00281202
*02*     PATCH-LABEL = ZAPSPACE (IN USE)                                00281302
*                                                                       00288002
*01*  MODULE-TYPE = MODULE                                              00290002
*                                                                       00290502
*02*     PROCESSOR = ASSEMBLER                                          00290602
*                                                                       00322402
*02*     MODULE-SIZE = 1000 BYTES                                       00326302
*                                                                       00334202
*02*     ATTRIBUTES = PAGED-LPA, REENTERABLE, SUPERVISOR MODE, ENABLED, 00336202
*        TYPE 3 SVC                                                     00346202
*                                                                       00358702
*01*  ENTRY-POINT = IGC041                                              00362102
*                                                                       00365402
*02*     PURPOSE = MAIN ENTRY TO IDENTIFY FUNCTION                      00365502
*                                                                       00369002
*02*     LINKAGE = ENTERED FROM THE SVC INTERUP HANDLER                 00371002
*                                                                       00372302
*02*     INPUT = PSW IS ENABLED, IN SUPERVISOR STATE, KEY 0, AND        00372402
*              AND HOLDS THE LOCAL LOCK ON ENTRY.                       00376402
*              REGISTERS-                                               00378402
*              0- ADDR OF SYMBOLIC NAME OR PARAMETER LIST.              00378502
*              1- ADDR OF ENTRY POINT OR ZERO.                          00378602
*              3- CVT ADDR                                              00378702
*              4- CURRENT TCB                                           00378802
*              5- CURRENT RB                                            00378902
*              14-RETURN ADDRESS                                        00379002
*              2,6-13,15- IRRELEVANT.                                   00379402
*                                                                       00380902
*02*     OUTPUT = NONE                                                  00381302
*                                                                       00382102
*02*     REGISTERS-SAVED = NONE - REGISTERS SAVED BY INTERRUPT HANDLER  00382502
*        IN SVRB                                                        00384502
*                                                                       00384802
*01*  ENTRY-POINT = FRRSVC41                                            00386802
*                                                                       00388202
*02*     PURPOSE = INSURE CDE QUEUES ARE NOT DAMAGED BY SYSTEM ERROR    00388302
*        AND PREVENT ABEND IF POSSIBLE BY RETURNING TO A ROUTINE WHICH  00388402
*        WILL SET A RETURN CODE OF X'24'                                00388502
*                                                                       00389002
*02*     LINKAGE = BRANCH ENTERED BY RTM1 WHEN ERROR IS DETECTED        00389102
*                                                                       00389502
*02*     INPUT = REGISTERS ARE:                                         00390002
*            R1  = ADDRESS OF SDWA                                      00392002
*            R14 = RETURN ADDRESS                                       00392202
*                                                                       00392602
*02*     OUTPUT = NONE                                                  00394102
*                                                                       00395302
*02*     REGISTERS-SAVED = NONE                                         00395702
*                                                                       00396502
*02*     REGISTER-USAGE = SEE PROLOGUE BEFORE RECOVERY ROUTINE          00396602
*                                                                       00397002
*01*  EXIT-NORMAL = IGC041                                              00399802
*                                                                       00402202
*02*     CONDITIONS = RETURN TO CALLER VIA BRANCH TO EXIT PROLOGUE      00402802
*                                                                       00404202
*02*     OUTPUT = PSW SAME AS UPON ENTRY                                00406202
*            REGISTERS ARE:                                             00416202
*            R0-14 = UNCHANGED                                          00418202
*            R15   = RETURN CODE                                        00418302
*                                                                       00418502
*02*     RETURN-CODES = SEE PROLOGUE                                    00428502
*                                                                       00430102
*01*  EXIT-NORMAL = FRRSVC41                                            00430202
*                                                                       00431302
*02*     CONDITIONS = RETURN TO RTM1 VIA BR14 TO CAUSE RETRY IN         00431402
*        IEAVID00 WHICH WILL IN TURN CAUSE THE CALLERS TO RECEIVE       00431502
*        CONTROL WITH A RETURN CODE OF X'24' IN REGISTER 15             00431602
*                                                                       00431802
*02*     OUTPUT = REGISTERS ARE:                                        00431902
*            R0-13 = UNPREDICTABLE                                      00432002
*            R14   = RETURN ADDRESS                                     00432102
*                                                                       00432702
*02*     RETURN-CODES = SDWA CONTAINS THE FOLLOWING CODES:              00433002
*            0 - CONTINUE WITH TERMINATION                              00433402
*            4 - RETRY AT ERROR EXIT IN IEAVID00                        00433802
*                                                                       00434302
*01*  EXIT-ERROR = NONE                                                 00434402
*                                                                       00436402
*02*     CONDITIONS = NONE                                              00436902
*                                                                       00437902
*02*     OUTPUT = NONE                                                  00438402
*                                                                       00441202
*02*     RETURN-CODES = NONE                                            00441402
*                                                                       00447802
*01*  EXTERNAL-REFERENCES = IEAQCDSR                                    00451202
*                                                                       00454002
*02*     ROUTINES = GETMAIN - GET CDE                                   00454402
*            EXIT PROLOGUE - TO RELINQUISH CONTROL                      00454502
*                                                                       00458502
*02*     DATA-AREAS = NO I/O IS DONE IN THIS MODULE, NO DATASETS OPENED 00460502
*        OR CLOSED                                                      00460602
*                                                                       00462202
*02*     CONTROL-BLOCKS = AS FOLLOWS:                                   00462302
*      EMBEDED ENTRY POINT FUNCTION                                     00462802
*        CVT-                                                           00463202
*              CVTQLPAQ- NOT ALTERED                                    00463602
*        TCB-                                                           00464002
*              TCBJSTCB- NOT ALTERED                                    00464102
*              TCBJPA-   NOT ALTERED                                    00464202
*              TCBLLS-   NOT ALTERED                                    00464302
*        RB-                                                            00464402
*              RBLINK-   NOT ALTERED                                    00464502
*              RBSTAB-   NOT ALTERED                                    00464602
*              RBCDE -   NOT ALTERED                                    00464702
*        CDE-                                                           00465102
*              CDATTR-   ALTERED                                        00465202
*              CDNAME-   NOT ALTERED                                    00465302
*              CDCHAIN-  ALTERED                                        00465402
*              CDENTPT-  ALTERED                                        00465602
*              CDXLMJP-  ALTERED                                        00466002
*        LLE-                                                           00466102
*              LLCHAIN-  NOT ALTERED                                    00466202
*              LLCDPTR-  NOT ALTERED                                    00466302
*        EXTENT LIST-                                                   00466402
*              NOT ALTERED                                              00466502
*      SUBPOOL ZERO MODULE FUNCTION                                     00466602
*        CVT-                                                           00466702
*              CVTMZ00                                                  00466802
*              CVTLPAQ                                                  00466902
*        TCB-                                                           00467002
*              TCBMSS                                                   00467102
*              TCBPKF                                                   00467202
*              TCBJPAQ                                                  00467302
*              TCBJSTCB-  ALTERED                                       00467702
*        RB-                                                            00468102
*              RBSTAB                                                   00468202
*              RBCDE                                                    00468602
*              RBLINK                                                   00468702
*        CDE-                                                           00468802
*              CDATTR                                                   00468902
*              CDNAME                                                   00469002
*              CDCHAIN                                                  00469102
*              CDXLMJP                                                  00469202
*          NEW CDE IS BUILT                                             00469302
*                                                                       00469402
*        EXTENT LIST- NEW ONE IS BUILT                                  00469502
*                                                                       00470002
*01*  TABLES = MAJOR REQUEST INPUT PARAMETER LIST IS AS FOLLOWS:        00470102
*             *******************************************               00470202
*             *0       ENTRY POINT ADDRESS              *               00470302
*             ******                               ******               00470402
*             *4       ENTRY                            *               00470502
*             ***            POINT                    ***               00470602
*             *8                   NAME                 *               00470702
*             *******    START OF EXTENT LIST     *******               00470802
*             *12      LENGTH OF EXTENT LIST            *               00470902
*             ******                               ******               00471002
*             *16      NUMBER OF EXTENTS                *               00471102
*             *****                                ******               00471202
*             *20      LENGTH OF 1ST EXTENT             *               00471302
*             ******                               ******               00471402
*             *                                         *               00471502
*                                                                       00471602
*             *                                         *               00471702
*             ******                               ******               00471802
*             *'80'X * LENGTH OF LAST EXTENT            *               00471902
*             ******                               ******               00472002
*             *        ADDRESS OF 1ST EXTENT            *               00472102
*             ******                               ******               00472202
*             *                                         *               00472302
*                                                                       00472402
*             *                                         *               00472602
*             ******                               ******               00473002
*             *        ADDRESS OF LAST EXTENT           *               00473402
*             *******************************************               00473802
*                                                                       00474202
*01*  MACROS = GETMAIN,SETFRR,TESTAUTH,SETRP,RECORD,                    00474302
*              CVT,IEZBITS,IHACDE,IHAFRRS,IHALLE,IHAPSA,IHARB,          00476202
*              IHASDWA,IKJTCB,MODID,SETLOCK                             00478202
*                                                                       00480202
*02*    SERIALIZATION = THE LOCAL LOCK IS HELD ON ENTRY AND THE CMS     00480802
*       LOCK IS OBTAINED AND FREED DURING LPA QUEUE SEARCH AND          00482402
*       MANIPULATION                                                    00484002
*                                                                       00485602
*01*  CHANGE-ACTIVITY = Y02758                                          00487202
*                       OZ17842 - SEE NEAR LABEL RECRDLPA     @ZA17842  00488003
*                       OZ20978 - NEAR LABEL LEGALEP CHANGE TO ONLY     00488203
*                                 BUILD MAJOR ON JOB PACK QUEUE FOR     00488403
*                                 MODULES LOADED BY NIP        @ZA20978 00488603
*                       OZ28584 - CHECK THAT AN ADDRESS GIVEN FOR       00488803
*                                 A NAME FOR A MINOR CDE IS NOT         00489103
*                                 IN FETCH-PROTECT STORAGE     @ZA28584 00489503
*                       OZ26744 - CHECK FOR RBCDE=0 IN CALLER'S         00489703
*                                 PRB                          @ZA26744 00489903
*                       OZ26745 - CHECK IF CDE CONTAINS AN EXTENT       00490103
*                                 LIST ADDRESS OR A MAJOR CDE           00490303
*                                 ADDRESS                      @ZA26745 00490503
*                       OZ26742 - CHECK THAT AN ADDRESS GIVEN FOR       00490703
*                                 A LIST FOR A MAJOR CDE IS NOT         00490803
*                                 IN FETCH-PROTECTED STORAGE   @ZA26742 00490903
*                                                                       00491003
*                                                                       00491103
*01*  MESSAGES = IEA959I - SYSTEM ERROR REQUIRED LPA QUEUE TO BE        00491803
*     TRUNCATED AND FIXED LPA MODULE CONTRIL MAY BE LOST                00492002
*     IDENTIFY THAT MODULE (WHERE POSSIBLE).;                           00493602
*                                                                       00495202
*01*  ABEND-CODES = NONE                                                00496802
*                                                                       00498402
**** END OF SPECIFICATIONS ***/                                         00500002
         TITLE 'IGC041       IDENTIFY'                                  08760000
     SPACE 2                                                            08770002
*/*IEAVID00: CHART IDENTIFY */                                          08780002
*/* HEADER                                                              08790002
*/*                                                                     08800002
*/*                                                                     08802002
*/*                                                                     08804002
*/*                                                 SECTION 3.1.8.4     08806002
*/* IDENTIFY                                                            08808002
*/*                                                 PAGE # */           08808402
         SPACE 2                                                        08808802
*/*IGC041: E ENTRY FROM SLIH */                                         08809202
         SPACE 2                                                        08809602
IGC041   START 0                       IDENTIFY SVC SERVICE             08810000
         SPACE 2                                                        08820002
*/* P SET BASE IN REG 6 */                                              08822002
         SPACE 2                                                        08830002
         BALR  BASEREG,N0              SET UP BASE ADDRESS              08850000
         USING *,BASEREG               REG 13 CONTAINS BASE ADDRESS     08900000
         MODID BR=YES                  CSECT IDENTIFIER                 08960002
         USING PSA,0                   ADDRESSABILITY TO PSA            09060002
         SPACE 2                                                        09070002
*/* P REG 3= CVT ADR REG 4= TCB ADR REG 5= RB ADR REG 12= CD ENTRY*/    09072002
         SPACE 2                                                        09080002
         USING CVT,CVTREG              REG  3 CONTAINS CVT ADDRESS      09100000
         USING TCB,TCBREG              REG  4 CONTAINS TCB ADDRESS      09150000
         USING RBSECT,RBREG            REG  5 CONTAINS RB ADDRESS       09200000
         USING CDENTRY,CDEREG          REG 12 CONTAINS CD ENTRY ADDRESS 09250002
         SPACE 2                                                        09252002
*/* P SET FRR STACK */                                                  09252402
         SPACE 2                                                        09254002
         LA    R13,FRRSVC41            GET FRR ADDRESS                  09260002
         SETFRR A,FRRAD=(13),WRKREGS=(11,12),PARMAD=(10)                09300002
         USING PARMAD,R10                                      @ZA26742 09310003
         ST    RBREG,PARMSVRB          SAVE SVRB ADDRESS       @ZA26742 09311003
         ST    BASEREG,PARMBASE        PUT IDENTIFY BASE       @ZA26742 09312003
         MVI   PARMFLAG,N0             CLEAR FLAG BYTE         @ZA26742 09313003
         DROP  R10                                             @ZA26742 09314003
         SPACE 2                                                        09316102
*/* P GET CALLER'S RB ADDRESS */                                        09318102
         SPACE 2                                                        09320102
         L     RBREG,RBWCF             LOAD ADDR OF NEXT RB ON CHAIN    09350000
         SPACE 2                                                        09400002
*/* D (YES,YESPRB,NO,) RB A PRB? */                                     09402002
         SPACE 2                                                        09410002
         TM    RBSTAB,RBPRBF           IS RB A PRB I.E.=00XX XXXX       09450000
         BZ    YESPRB                  YES, CONTINUE                    09500002
         SPACE 2                                                        09510002
*/* P SET ERROR CODE = 16 IN REG 15 */                                  09512002
         SPACE 2                                                        09520002
         LA    CODEREG,CODENPRB        NO, LOAD RB-NOT-PRB CODE         09550000
         SPACE 2                                                        09560002
*/* R RETURN VIA BR 14 */                                               09562002
         SPACE 2                                                        09570002
         B     EXIT1                   RETURN                           09600002
         SPACE 2                                                        09610002
*/*YESPRB: P GET ADDR OF CDE FOR MODULE ISSUING IDENTIFY */             09614002
         SPACE 2                                                        09620002
YESPRB   L     CDEREG,RBCDFLGS         LOAD ADDR CD ENTRY               09650000
         LA    CDEREG,0(,CDEREG)       CLEAR HIGH ORDER BYTE   @ZA26744 09660003
         LTR   CDEREG,CDEREG           CDE ADDR ZERO?          @ZA26744 09662003
         BNZ   CDMINTST                BRANCH IF NOT           @ZA26744 09664003
         LA    CODEREG,CODENGEP        SET ERROR CODE          @ZA26744 09666003
         L     R11,TCBLLS              POINT TO FIRST LLE      @ZA26744 09668003
         LA    R11,0(,R11)             CLEAR HIGH ORDER BYTE   @ZA26744 09670003
         LTR   R11,R11                 IS THERE ONE?           @ZA26744 09672003
         BZ    EXIT1                   BR IF LOAD LIST EMPTY   @ZA26744 09674003
         USING LLE,R11                                         @ZA26744 09676003
         L     CDEREG,LLECDPT          GET CDE FOR FIRST LLE   @ZA26744 09678003
         DROP  R11                                             @ZA26744 09680003
         SPACE 2                                                        09682003
*/* D (NO,TESTR1,YES,) CDE A MINOR? */                                  09684003
         SPACE 2                                                        09686003
CDMINTST EQU   *                                               @ZA26744 09688003
         TM    CDATTR,CDMIN            IS IDENTIFIER A MINOR            09700000
         BZ    TESTR1                  NO, BRANCH AROUND LOADING MAJOR  09750000
         SPACE 2                                                        09760002
*/* P GET ADDR OF MAJOR FROM MINOR */                                   09762002
         SPACE 2                                                        09770002
         L     CDEREG,CDXLMJP          YES, LOAD ADDR MAJOR ENTRY       09800000
         SPACE 2                                                        09810002
*/*TESTR1: P GET IDENTIFY SVRB AND CLEAR EXTENDED SAVE AREA */          09812002
         SPACE 2                                                        09820002
TESTR1   DS    0H                      TEST FOR AOS LOADER              09850002
         L     RBREG,TCBRBP            GET IDENTIFY SVRB                09852002
         XC    RBEXSAVE(N20),RBEXSAVE  CLEAR EXTENDED SAVE AREA         09854002
         SPACE 2                                                        09856002
*/* P SET UP INPUT R9 = R0 R10 = R1 */                                  09856402
         SPACE 2                                                        09858002
         LR    R13,R10                 SAVE FRR PARM ADDRESS   @ZA28584 09859003
         LR    PNREG,INREG1            PUT ENTRY POINT IN WORK REG      09860002
         LR    X2,INREG2               PUT NAME OR LIST IN WORKING REG  09870002
         SPACE 2                                                        09880002
*/* D (YES,MAJORCDE,NO,) REQUEST TO CREATE A MAJOR? */                  09882002
         SPACE 2                                                        09890002
         LTR   INREG1,INREG1           IS MAJOR CDE REQUESTED           09900000
         BZ    MAJORCDE                YES, BRANCH                      09950000
         SPACE 2                                                        09960002
         USING PARMAD,R13                                      @ZA26742 09960203
         MVI   PARMFLAG,PARMFTCH       INDICATE FETCH PROTECT  @ZA26742 09960303
         MODESET EXTKEY=RBT234,WORKREG=2 GET INTO USER KEY     @ZA28584 09960803
         IC    R2,N0(,R9)              ADDRESS FIRST BYTE      @ZA28584 09960903
         IC    R2,N7(,R9)              ADDRESS LAST BYTE       @ZA28584 09961003
         MODESET EXTKEY=ZERO           RETURN TO ZERO KEY      @ZA28584 09961103
         MVI   PARMFLAG,N0             REMOVE FETCH INDICATOR  @ZA26742 09961203
         DROP  R13                                             @ZA26742 09961403
         SPACE 2                                               @ZA28584 09961803
*/* S NOMIN:CHECK FOR DUP NAME */                                       09962002
         SPACE 2                                                        09970002
         BAL   RETREG,NOMIN            CHECK FOR DUP NAME               10000002
         SPACE 2                                                        10010002
*/*USUAL: P GET ADDR OF LLE QUEUE HEADER IN TCB */                      10012002
         SPACE 2                                                        10020002
USUAL    DS    0H                      RETURN IF NAME NOT FOUND         10050002
         LA    TLLSREG,TCBLLS          LOAD TCBLLS ADDR                 10100000
         SPACE 2                                                        10110002
*/* S XLINST:CHECK IF EPA INVALID CDE */                                10112002
         SPACE 2                                                        10120002
         BAL   RETREG,XLINST           CHECK ENTRY POINT PASSED         10150002
         SPACE 2                                                        10160002
*/*LEGALEP: D (NO,GETCDE,YES,) MAJOR FROM AUTHORIZED LIBRARY? */        10162002
         SPACE 2                                                        10170002
LEGALEP  DS    0H                      RETURN IF GOOD ENTRY POINT       10180003
         LA    XLREG,N1                SET AUTH SWITCH         @ZA20978 10187003
         L     ASCBREG,PSAAOLD         GET ASCB ADDRESS FOR GETMAIN     10202002
         TM    CDATTR2,CDSYSLIB        Q. MODULE FROM A SYSTEM LIBRARY  10210002
         BZ    GETCDE                  A. NO- GET APPROPRIATE CDE       10220002
         SPACE 2                                                        10222002
*/* S TESTAUTH:TEST AUTH OF CALLER */                                   10222402
         SPACE 2                                                        10224002
         TESTAUTH KEY=YES,STATE=YES,FCTN=1,BRANCH=YES TEST AUTH. OF     10230002
*                                      CALLER                           10240002
         SPACE 2                                                        10240802
*/* D (YES,GETCDE,NO,) IS CALLER AUTHORIZED? */                         10240902
         SPACE 2                                                        10241202
         LTR   CODEREG,CODEREG         Q. CALLER AUTHORIZED             10242002
         BZ    GETCDE                  YES- GET APPROPRIATE CDE         10242402
         SR    XLREG,XLREG             SET UNAUTH SWITCH       @ZA20978 10244403
         TM    CDATTR,CDNIP            MODULE LOADED BY NIP?   @ZA20978 10246403
         BZ    GETLSQS                 NO THEN MINOR CDE       @ZA20978 10248403
         SPACE 2                                                        10252402
*/* S GETMAIN:GET CDE FOR LPA FROM LSQA (SP=255) */                     10254402
         SPACE 2                                                        10262402
*  SPECIAL CODE FOR NON-AUTHORIZED CALLER'S WHO DO IDENTIFY TO          10292402
*      AUTHORIZED LIBRARIES                                             10294402
         SPACE 2                                                        10294802
         GETMAIN RU,SP=255,LV=CDESIZE,BRANCH=YES  GET LSQA CDE          10296402
         SPACE 2                                                        10296502
*/* P CLEAR GOTTEN AREA AND PUT EPA IN CDE */                           10297702
*/* P NOTE: THERE IS NO XL FOR THIS MODULE */                           10298102
*/* P NOTE: SYSTEM LIBRARY AND MODULE AUTHORIZATION TURNED OFF */       10298502
         SPACE 2                                                        10299202
         DROP  CDEREG                                                   10300402
         USING CDENTRY,WKREG1                                           10301602
         XC    CDENTRY(CDESIZE),CDENTRY CLEAR GOTTEN AREA               10302802
         ST    X2,CDENTPT              PUT SPECIFIED ENTRY IN CDE       10304002
         SPACE 2                                                        10304402
*/* P PUT NAME IN MINOR */                                              10304502
         SPACE 2                                                        10304802
         MVC   CDNAME(NAME),N0(PNREG)  PUT GIVEN NAME IN CDE            10305202
         SPACE 2                                                        10305602
*/* P SET USE COUNT = 0 */                                       @M7644 10305702
         SPACE 2                                                        10306002
         SR    WKREG2,WKREG2           SET UP FOR USE COUNT      @M7644 10306402
         STH   WKREG2,CDUSE            SET USE COUNT = 0         @M7644 10307202
         SPACE 2                                                        10308002
*/* P COPY ATTRIBUTES FROM MAJOR */                                     10308102
         SPACE 2                                                        10308202
         MVC   CDATTR(N1),CDATTR-CDENTRY(CDEREG)  COPY IN ATTRIBUTES    10308802
         NI    CDATTR,MAX-CDNIP-CDNIC-CDMIN-CDNFN TURN OFF       @M7644 10310002
*                                      NECESSARY BITS                   10310602
         OI    CDATTR,CDJPA            AND TURN ON JPA BIT              10311202
         TM    CDATTR2-CDENTRY(CDEREG),CDOLY  MAJOR IN OVERLAY          10321202
         BZ    CHAINCDE                NO- DON'T SET IN MINOR           10323202
         OI    CDATTR2,CDOLY           SET OVERLAY BIT                  10329202
         SPACE 2                                                        10330802
*/*CHAINCDE: P (,RETURN) CHAIN CDE TO TOP OF JPQ */                     10331202
         SPACE 2                                                        10332002
CHAINCDE L     WKREG2,TCBJSTCB         GET JOBSTEP TCB                  10332402
         LA    WKREG2,TCBJPQ-TCB(WKREG2) GET JPQ FIELD                  10333002
         MVC   CDCHAIN(N4),N0(WKREG2)  CHAIN CDE TO TOP                 10334902
         ST    WKREG1,N0(WKREG2)       OF JPQ                           10336802
         B     RETURN                  RETURN TO CALLER                 10338702
         DROP  WKREG1                                                   10340602
         USING CDENTRY,CDEREG          RESET ADDRESSING TO MAJOR        10342502
         SPACE 2                                                        10352502
*/*GETCDE: D (NO,GETLSQS,YES,) MAJOR CDE IN LPAQ? */                    10354502
         SPACE 2                                                        10362502
GETCDE   DS    0H                      DETERMINE TYPE OF CDE            10382502
         TM    CDATTR,CDNIP            IS MAJOR ENTRY IN LPAQ           10432502
         BZ    GETLSQS                 NO - GET MINOR FROM LSQS         10482502
         SPACE 2                                                        10484502
*/*S SETLOCK:GET CMS LOCK FOR LPA CHANGE */                             10484702
         SPACE 2                                                        10485502
         STM   R11,R12,RBEXSAVE+N4     SAVE VOLITAL REGS                10485702
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,RELATED=EXIT GET CMS       10485902
         LM    R11,R12,RBEXSAVE+N4     RESTORE VOLITAL REGS             10486102
         SPACE 2                                                        10486302
*/* S (,CDESETUP) GETMAIN:GET CDE FOR LPA FROM SQA (SP=245) */          10486502
         SPACE 2                                                        10486602
         GETMAIN RU,SP=245,LV=CDESIZE,BRANCH=YES GET SQA CDE            10492502
         B     CDESETUP                INITIALIZE CDE                   10532502
         SPACE 2                                                        10542502
*/*GETLSQS: S GETMAIN:GET CDE FROM LSQS (SP=255) */                     10544502
         SPACE 2                                                        10552502
GETLSQS  GETMAIN RU,SP=255,LV=CDESIZE,BRANCH=YES GET LSQS CDE           10582502
         SPACE 2                                                        10592502
*/*CDESETUP: P PUT EPA AND SET CDUSE IN MINOR TO 0 */                   10594502
         SPACE 2                                                        10602502
CDESETUP DS    0H                                                       10632502
         DROP  CDEREG                  CHANGE CDE PTRS                  10682502
         USING CDENTRY,INREG2          CHANGE CD ENTRY REGISTER TEMP    10732502
         XC    CDENTRY(CDESIZE),CDENTRY   CLEAR CDE AREA OBTAINED       10734502
         ST    X2,CDENTPT              INITIALIZE CDENTPT               10742502
         SPACE 2                                                        10742902
*/* P PUT MAJOR POINTER IN MINOR */                                     10744502
         SPACE 2                                                        10746502
         LA    CDEREG,N0(CDEREG)       ZERO HIGH BYTE OF MAJOR CDE ADDR 10752502
         ST    CDEREG,CDXLMJP          INITIALIZE CDXLMJP               10754502
         SPACE 2                                                        10764502
*/* P PUT NAME IN MINOR */                                              10766502
         SPACE 2                                                        10774502
         MVC   CDNAME(NAME),N0(PNREG)  STORE PROGNAMES                  10800000
         SPACE 2                                                        10810002
*/* P SET MINOR MIN,REN,SER,NLR */                                      10812002
         SPACE 2                                                        10820002
         MVI   CDATTR,CDMIN+CDREN+CDSER+CDNLR  SET FLAGS IN CDENTRY     10850000
         SPACE 2                                                        10860002
*/* D (NO,NOTAPF,YES,) IS MAJOR CDE AUTHORIZED? */                      10862002
         LTR   XLREG,XLREG             SHOULD AUTH BE COPIED   @ZA20978 10864003
         BZ    NOTAPF                  NO USER WAS NOT AUTH    @ZA20978 10866003
         SPACE 2                                                        10870002
         TM    CDATTR2-CDENTRY(CDEREG),CDAUTH CHECK AUTHORITY           10900000
         BNO   NOTAPF                  IF NOT AUTHORIZED SKIP BIT SET   10950000
         SPACE 2                                                        10960002
*/* P SET AUTHORIZED BIT IN MINOR */                                    10962002
         SPACE 2                                                        10970002
         OI    CDATTR2,CDAUTH          SET AUTHORIZED MINOR             11000000
         SPACE 2                                                        11010002
*/*NOTAPF: D (NO,CDMEADD,YES,) NIP ON IN MAJOR? */                      11012002
         SPACE 2                                                        11020002
NOTAPF   EQU   *                       APF CHECKING DONE                11050000
         TM    CDATTR-CDENTRY(CDEREG),CDNIP IS NIP ATTR OF MAJOR CDE.   11100000
         BZ    CDMEADD                 NO, DON'T SET ATTR IN MINOR      11150002
         SPACE 2                                                        11160002
*/* P SET NIP BIT IN MINOR */                                           11162002
         SPACE 2                                                        11170002
         OI    CDATTR,CDNIP            SET NIP ATTR IN MINOR.           11200000
         DROP  INREG2                  REESTABLISH BASE                 11250000
         USING CDENTRY,CDEREG          TO CD MAJOR ENTRY                11300000
         SPACE 2                                                        11350002
*/*CDMEADD: P POINT MINOR TO NEXT OFF MAJOR */                          11352002
         SPACE 2                                                        11360002
*  CDMEADD INPUT = MAJOR CDE ADDR IN CDEREG, MINOR CDE ADDR IN INREG2   11450000
         SPACE 1                                                        11500000
CDMEADD  MVC   CDCHAIN-CDENTRY(N4,INREG2),CDCHAIN ADDR OF MAJ IN MIN.   11550002
         SPACE 2                                                        11560002
*/* P POINT MAJOR TO MINOR */                                           11562002
         SPACE 2                                                        11570002
         ST    INREG2,CDCHAIN          CHAIN MINOR TO QUEUE             11600002
         SPACE 2                                                        11610002
*/*RETURN: P (,EXIT1) SET RETURN CODE REG 15 = 0 */                     11612002
         SPACE 2                                                        11620002
RETURN   EQU   *                       NORMAL RETURN                    11650000
         SR    CODEREG,CODEREG         NORMAL COMPLETION CODE IS ZERO   11700000
         B     EXIT1                   RETURN                           11750002
         TITLE 'IGC041 - IDENTIFY - AOS LOADER MAJOR CDE FUNCTION'      11836700
*  THIS SECTION OF CODE IS USED BY AOS LOADER TO CREATE A MAJOR CDE.    11850000
         SPACE 2                                                        11860002
*/*MAJORCDE: P SAVE PARM LIST ADDRESS */                                11860402
*/* P SET RETURN CODE (R15) = 24 */                                     11862002
         SPACE 2                                                        11870002
         USING PARMAD,R13                                      @ZA26742 11900003
         USING IDLIST,X2                                       @ZA26742 11902003
MAJORCDE DS    0H                                                       11904003
         OI    PARMFLAG,PARMFTCH       INDICATE FETCH PROTECT  @ZA26742 11906003
*                                      IF FRR ENTERED          @ZA26742 11912003
         MODESET EXTKEY=RBT234,WORKREG=2  GET IN CALLER KEY    @ZA26742 11916003
         IC    R2,IDENTRY              ADDRESS FIRST BYTE      @ZA26742 11920003
         LA    R2,IDXLNTH              POINT TO LENGTH OF LIST @ZA26742 11924003
         LA    R15,MAXLNTH             INSERT X'FFF' IN R15    @ZA26742 11928003
         LA    R15,N1(,R15)            INCREASE TO 1000        @ZA26742 11932003
         L     XLREG,IDXLNTH           SAVE LENGTH OF LIST     @ZA26742 11936003
*                                      XLREG MUST BE PRSERVED  @ZA26742 11936803
*                                      THROUGH XLMULT8         @ZA26742 11937603
         AR    R2,XLREG                ADD LENGTH OF LIST      @ZA26742 11938403
         BCTR  R2,0                    POINT TO LAST BYTE      @ZA26742 11940003
CHKBYTE  EQU   *                                               @ZA26742 11944003
         IC    R14,0(,R2)              ADDRESS LAST BYTE       @ZA26742 11948003
         SR    R2,R15                  DECREASE BY A PAGE      @ZA26742 11952003
         CR    R2,X2                   CHECKED ALL OF LIST?    @ZA26742 11956003
         BH    CHKBYTE                 BRANCH IF NOT           @ZA26742 11960003
         MODESET EXTKEY=ZERO           GET BACK TO KEY ZERO    @ZA26742 11964003
         MVI   PARMFLAG,N0             REMOVE FETCH PROT IND   @ZA26742 11969003
         SPACE 2                                               @ZA26742 11980003
         SLL   INREG2,N30              IS PARM LIST ON                  12000000
         LA    CODEREG,ILIST           SET RETURN CODE IN CASE OF ERROR 12010002
         SPACE 2                                                        12020002
*/* D (NO,EXIT1,YES,) LIST ON FULL WORD BOUNDARY? */                    12022002
         SPACE 2                                                        12030002
         LTR   INREG2,INREG2           WORD BOUNDARY                    12050000
         BNZ   EXIT1                   NO, BRANCH                       12100002
         SPACE 2                                                        12110002
*/* D (NO,EXIT1,YES,) XL ADDRESS POSITIVE? */                           12112003
         SPACE 2                                                        12113003
         LTR   XLREG,XLREG             IS EXTENT LENGTH POS?   @ZA26742 12114003
         BNP   EXIT1                   NO, RETURN              @ZA26742 12115003
         SPACE 2                                                        12116003
*/* P SET UP TO GET CDE AND XL IN LSQA */                               12117003
         SPACE 2                                                        12118003
         LA    WKREG1,CDESIZE          GET SIZE OF CDE                  12119003
         AR    WKREG1,XLREG            ADD EXLIST LIST SIZE    @ZA26742 12120003
         L     ASCBREG,PSAAOLD         GET ASCB FOR GETMAIN             12121003
         SPACE 2                                                        12122003
*/* S GETMAIN:GET CDE,XL FROM LSQA VIA BR */                            12123003
         SPACE 2                                                        12124003
         GETMAIN RU,SP=255,LV=(INREG2),BRANCH=YES GET CDE, XL FROM LSQA 12125003
         SPACE 2                                               @ZA26742 12126003
         ST    R1,PARMGETM             SAVE AREA ADDRESS       @ZA26742 12127003
         STH   XLREG,PARMGETL          SAVE LENGTH OF XL       @ZA26742 12128003
         OI    PARMFLAG,PARMGTMN       INDICATE GETMAIN AREA   @ZA26742 12129003
         DROP  R13                                             @ZA26742 12130003
         DROP  CDEREG                  CHANGE CDE BASE                  12131003
         DROP  X2                                              @ZA26742 12132003
         USING CDENTRY,X2              CHANGE CDE BASE         @ZA26742 12133003
         LR    PNREG,X2                SAVE INPUT LIST TEMP    @ZA26742 12134003
         LR    X2,WKREG1               GET ADDRESS OF CDE      @ZA26742 12135003
         LR    WKREG1,PNREG            GET ADDRESS OF INPUT    @ZA26742 12136003
         USING IDLIST,WKREG1                                   @ZA26742 12137003
         SPACE 2                                                        12138003
*/* P CLEAR NEW CDE */                                                  12139003
*/* P PUT ENTRY POINT NAME IN CDE */                                    12140003
         SPACE 2                                                        12141003
         XC    CDENTRY(CDESIZE),CDENTRY  CLEAR CDE               M01967 12142003
         MVC   CDNAME(N8),IDNAME       MOVE IN EP NAME         @ZA26742 12143003
         SPACE 2                                                        12144003
*/* P PUT ENTRY POINT ADDRESS IN CDE */                                 12145003
         SPACE 2                                                        12146003
         MVC   CDENTPT(N4),IDENTRY     MOVE IN EP ADDRESS      @ZA26742 12147003
         SPACE 2                                                        12148003
*/* P INITIALIZE XL FIELDS IN CDE */                                    12149003
         SPACE 2                                                        12150003
         USING XTLST,PNREG                                     @ZA26742 12151003
         LA    PNREG,CDEEND            LOCATE XTENT LIST AT END OF CDE  12152003
         SPACE 2                                                        12153003
*/* P SET SPZ (SUBPOOL 0) AND XLE IN CDE */                             12154003
         SPACE 2                                                        12155003
         ST    PNREG,CDXLMJP           STORE EXTENT LIST ADDR IN CDE    12156003
         MVI   CDATTR2,CDSPZ+CDXLE     SET UP 2ND ATTRIBUTE FIELD       12157003
         SPACE 2                                                        12158003
*/* P MOVE XL FROM PARM LIST TO XL IN CDE */                            12159003
         SPACE 2                                                        12160003
         LR    R15,XLREG               GET LENGTH OF EXTENT    @ZA26742 12161003
         LR    CVTREG,R15              PUT LENGTH IN R3        @ZA26742 12162003
         LA    WKREG2,CDEEND           POINT TO START OF EXTNT @ZA26742 12163003
         LA    R14,IDXLNTH             POINT TO EXTENT LIST    @ZA26742 12164003
         MVCL  WKREG2,R14              MOVE LIST INTO SP 255   @ZA26742 12165003
         L     CVTREG,CVTPTR           RESTORE CVT POINTER     @ZA26742 12166003
         SPACE 2                                               @ZA26742 12167003
*/* D (NO,EXIT1,YES,) IS FIRST BYTE A CHARACTER? */                     12168003
         SPACE 2                                                        12169003
         LA    CODEREG,ILIST           RESTORE ERROR CODE      @ZA26742 12170003
         L     WKREG2,CDENTPT          GET ENTRY POINT VALUE   @ZA26742 12171003
         LTR   WKREG2,WKREG2           IS ENTRY POINT VALID?   @ZA26742 12172003
         BNP   STXLREG                 BRANCH IF NOT           @ZA26742 12173003
         SPACE 2                                                        12202002
*/* P SET RETURN CODE (R15) = 28 */                                     12202402
         SPACE 2                                                        12204002
         LA    CODEREG,IPARM           SET PARM ERROR RETURN CODE       12210002
         SPACE 2                                               @ZA26742 12220003
         C     XLREG,XTLLNTH           CORRECT LENGTH?         @ZA26742 12260003
         BE    XLMULT8                 BRANCH IF YES           @ZA26742 12300003
STXLREG  EQU   *                                               @ZA26742 12340003
         ST    XLREG,XTLLNTH           STORE LENGTH IN LIST    @ZA26742 12380003
         B     EXITFREE                BRANCH TO FREE ROUTINE  @ZA26742 12420003
         SPACE 2                                                        12460003
*/* D (NO,EXIT1,YES,) XL A MULTIPLE OF 8? */                            12500003
         SPACE 2                                                        12540003
XLMULT8  EQU   *                                               @ZA26742 12580003
         SLL   XLREG,N29               SHIFT OFF 29 BITS       @ZA26742 12620003
         LTR   XLREG,XLREG             DOUBLE WORD BOUNDARY?   @ZA26742 12660003
         BNZ   EXITFREE                NO, RETURN              @ZA26742 12700003
         SPACE 2                                                        12740003
*/* P GET NUMBER OF EXTENTS FROM XL IN PARM LIST */                     12780003
         SPACE 2                                                        12820003
         L     WKREG5,XTLNRFAC         GET NUMBER OF EXTENTS   @ZA26742 12860003
         LTR   XLREG,WKREG5            IS NUM OF EXTENTS ZERO?          12900003
         BZ    NAMETEST                NO EXTENTS, TEST FOR DUP NAME    12940003
         LR    WKREG1,XLREG            GET NUMBER OF EXTENTS   @ZA26742 12980003
         LA    WKREG1,N1(,WKREG1)      ADD ONE FOR HEADER      @ZA26742 13020003
         SLL   WKREG1,N3               MULTIPLY BY 8           @ZA26742 13060003
         C     WKREG1,XTLLNTH          ARE LENGTHS EQUAL?      @ZA26742 13100003
         BNE   EXITFREE                BRANCH IF NOT           @ZA26742 13140003
         SLL   XLREG,N2                CAL. DISPL. TO EXTENT ADDR       13180003
         LA    WKREG1,XTLMSBLA(XLREG)  LOCATE 1ST EXTENT ADDR  @ZA26742 13220003
         SPACE 2                                                        13360002
*/*CONTEST: P GET ADDRESS OF EXTENT */                                  13362002
         SPACE 2                                                        13370002
CONTEST  DS    0H                      GO TO TEST                       13400002
         L     WKREG2,N0(WKREG1)       LOCATE NEXT EXTENT               13450002
         SPACE 2                                                        13460002
*/* D (NO,EXIT1,YES,) IS EXTENT ON DOUBLE WORD BOUNDARY? */             13462002
         SPACE 2                                                        13470002
         SLL   WKREG2,N29              ON DOUBLE WORD                   13550000
         LTR   WKREG2,WKREG2           BOUNDARY                         13600000
         BNZ   EXITFREE                NO                      @ZA26742 13650003
         SPACE 2                                                        13700002
*/*NXEXT: P GET ADDRESS OF NEXT ADDR AND LENGTH LIST ENTRY */           13710002
         SPACE 2                                                        13750002
NXEXT    DS    0H                      TEST NEXT EXTENT                 14000002
         LA    WKREG1,N4(WKREG1)       LOCATE NEXT EXTENT ADDR          14050000
         SPACE 2                                                        14110002
*/* P (GT 0,CONTEST,=0,) DECREMENT NO EXTENTS BY 1 */                   14112002
         SPACE 2                                                        14120002
         BCT   WKREG5,CONTEST          HAS LAST EXTENT BEEN TESTED      14150002
         SPACE 2                                                        14160002
*/*NAMETEST: P GET ADDRESS OF ENTRY POINT NAME IN R9 */                 14180002
         SPACE 2                                                        14190002
NAMETEST DS    0H                      TEST NAME PASSED                 14200002
         LA    WKREG2,XTLLNTH          SAVE ADDRESS OF LIST    @ZA26742 14250003
         DROP  PNREG                                           @ZA26742 14259003
         LA    PNREG,CDNAME            POINT TO NAME           @ZA26742 14268003
         SPACE 2                                                        14277003
*/* S NOMIN:FIND CDE ON JPA ON LPA */                                   14286003
         SPACE 2                                                        14295003
         BAL   RETREG,NOMINA           IS THE NAME A DUPLICATE          14304003
         SPACE 2                                                        14313003
*/* P GET ADDRESS OF EXTENT LIST */                                     14322003
         SPACE 2                                                        14331003
         LR    XLREG,WKREG2            GET ADDRESS OF LIST     @ZA26742 14340003
         SPACE 2                                                        14360002
*/* P INDICATE NO LLEQ SEARCH */                                        14362002
         SPACE 2                                                        14370002
         LA    TLLSREG,ZERO            INDICATE ONLY ONE LIST TO TEST   14400000
         SPACE 2                                                        14410002
*/* P SAVE ADDRESS OF PARM LIST */                                      14412002
         SPACE 2                                                        14420002
         LR    SAVEREG,X2              SAVE INPUT PARM                  14450002
         SPACE 2                                                        14460002
*/* P GET ENTRY POINT ADDR FOR TEST */                                  14462002
         SPACE 2                                                        14470002
         L     X2,CDENTPT              POINT TO ENTRY POINT    @ZA26742 14500003
         SPACE 2                                                        14512002
*/* S CDEPTEST:IN EPA IN THIS EXTENT */                                 14512402
         SPACE 2                                                        14514002
         BAL   RETREG,CDEPTEST         IS ENTRY POINT IN EXTENT         14550002
         SPACE 2                                                        14560002
*/* P RESTORE PARM LIST ADDRESS */                                      14562002
         SPACE 2                                                        14570002
         LR    X2,SAVEREG              RESET INPUT PARM                 14600002
         SPACE 2                                                        14600402
*/* P ENQUEUE CDE FIRST OFF JOBSTEP CDE QUE */                          15312002
         SPACE 2                                                        15320002
         L     PNREG,TCBJSTCB          LOCATE JOB STEP TCB              15350000
         DROP  TCBREG                  CHANGE TCB ADDRESSING            15400000
         USING TCB,PNREG               CHANGE TCB ADDRESSING            15450000
         MVC   CDCHAIN+N1(N3),TCBJPQ+N1  MOVE LAST CDE INTO NEW CDE     15500002
         ST    X2,TCBJPQ               QUEUE NEW CDE ON TCB    @ZA26742 15550003
         SPACE 2                                                        15560002
*/* P (,RETURN) SET CDE NLR */                                          15562002
         SPACE 2                                                        15570002
         MVI   CDATTR,CDNLR            SET 1ST ATTRIBUTE FIELD          15600002
         B     RETURN                  SET ZERO CODE AND RETURN         15650002
         DROP  PNREG                   SWITCH TCB BASE                  15750000
         USING TCB,TCBREG              SWITCH TCB REG                   15800000
         DROP  INREG2                  CHANGE CDE ADDRESSING            15850000
         USING CDENTRY,CDEREG          RESET TO CDE REGISTER            15900000
         TITLE 'IGC041 - IDENTIFY - SUBROUTINES'                        15910000
*        NOMIN SEARCHES  THE JPAQ AND LPAQ FOR A DUPLICATE              16000002
*        TO THE NAME PASSED ON ENTRY.  IF A DUPLICATE NAME IS FOUND, AN 16050000
*        ERROR CODE IS PASSED BACK TO THE USER. OTHERWISE RETURN IS TO  16100000
*        ADDRESS IS REGISTER 7.                                         16150000
*        REGISTER USAGE                                                 16200000
*        R0,1  - ALTERED                                                16250000
*        R3,4  - CVT,TCB (INPUT)                                        16300000
*        R6    - BASE REGISTER (INPUT)                                  16350002
*        R8    - ALTERED                                                16400000
*        R11,13- ALTERED                                                16500002
*        R12   - SET TO NAME ADDRESS (OUTPUT)                           16550000
*        R14   - RETURN ADDRESS (INPUT)                                 16610002
*        R15   - ALTERED                                                16650002
*        OTHER REGISTERS NOT REFERENCED                                 16700000
         SPACE 1                                                        16750000
         SPACE 2                                                        16760002
*/*NOMIN: E ENTRY NOMIN */                                              16770002
*/* P SET QUEUE POINTER (RB) TO JPQ OF JSTCB */                         16780002
*/* P NOTE: CDE NAME HAS ALREADY BEEN PLACED IN REG 9 */                16782002
         SPACE 2                                                        16790002
NOMIN    EQU   *                                               @ZA26742 16800003
         N     RETREG,ZEROMASK         CLEAR HIGH BIT          @ZA26742 16806003
         B     NOMIN1                  JOIN MAINLINE PROCESS   @ZA26742 16812003
NOMINA   EQU   *                                               @ZA26742 16818003
         O     RETREG,MINMASK          INDICATE NOMINA ENTRY   @ZA26742 16824003
NOMIN1   EQU   *                                               @ZA26742 16830003
         L     WKREG4,TCBJSTCB         LOAD PTR TO JOB STEP TC @ZA26742 16836003
         LA    WKREG4,TCBJPQ-TCB(N0,WKREG4) LOAD PTR TO 1ST CDE.        16850002
         LR    SAVEREG,RETREG          SAVE RETURN ADDRESS              16900002
         SPACE 2                                                        16950002
*/* P GET ADDRESS OF IEAQCDSR FROM CVT */                               16952002
         SPACE 2                                                        16960002
         L     CODEREG,CVTQCDSR        GET SEARCH ROUTINE ADDRESS       17000002
         SPACE 2                                                        17010002
*/* S IEAQCDSR:SEARCH JPQ FOR MODULE */                                 17012002
         SPACE 2                                                        17020002
         BALR  RETREG,CODEREG          SEARCH CDE QUEUE                 17050002
         SPACE 2                                                        17060002
*/* D (YES,UNUSUAL,NO,) MODULE FOUND? */                                17062002
         SPACE 2                                                        17070002
         B     UNUSUAL                 IF FOUND,BRANCH                  17100000
         SPACE 2                                                        17110002
*/*SRCHLPA: S SETLOCK:GET CMS LOCK */                                   17112002
         SPACE 2                                                        17120002
SRCHLPA  EQU   *                       LPAQ SEARCH                      17150000
         STM   R11,R14,RBEXSAVE+N4      SAVE VOLITAL REGS               17152002
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,RELATED=BETWEEN-SRCHPLA    17160002
*                                  UNUSUAL CMS LOCK REQUIRED FOR LPA    17170002
         SPACE 2                                                        17180002
*/* P GET ADDRESS OF IEAQCDSR FROM CVT */                               17182002
         SPACE 2                                                        17190002
         L     WKREG4,CVTQLPAQ         LOAD PTR TO FIRST CDE IN LPA     17200002
         L     CODEREG,CVTQCDSR        GET SEARCH ROUTINE ADDRESS       17250002
         SPACE 2                                                        17260002
*/* S IEAQCDSR:SEARCH LPA FOR MODULE */                                 17262002
         SPACE 2                                                        17270002
         BALR  RETREG,CODEREG          TRY LPA SEARCH                   17300002
         OI    RBEXSAVE,NAMEFND         SET DUPLICATE NAME INDICATOR    17350002
         ST    R11,RBEXSAVE+N4         SAVE CDE POINTER                 17360002
         SPACE 2                                                        17370002
*/* S SETLOCK: FREE CMS LOCK */                                         17372002
         SPACE 2                                                        17380002
         SETLOCK RELEASE,TYPE=CMS,RELATED=SRCHPLAP CMS NO LONGER NEEDED 17400002
         LM    R11,R14,RBEXSAVE+N4      RESTORE VOLITAL REGS            17450002
         SPACE 2                                                        17460002
*/* D (YES,UNUSUAL,NO,) MODULE FOUND? */                                17462002
         SPACE 2                                                        17470002
         TM    RBEXSAVE,NAMEFND         TEST IF NAME FOUND              17500002
         BO    UNUSUAL                 IF SO, BRANCH                    17550002
         SPACE 2                                                        17560002
*/* R RETURN VIA R14 */                                                 17562002
         SPACE 2                                                        17570002
         LR    RETREG,SAVEREG          RESET RETURN REGISTER            17600002
         BR    RETREG                  RETURN TO CALLER SUCCESSFUL      17900002
         SPACE 2                                                        17910002
*/*UNUSUAL: D (YES,UNNECODE,NO,) CDE A MINOR? */                        17912002
         SPACE 2                                                        17920002
UNUSUAL  EQU   *                       ERROR ON NAME SEARCH             17950000
         TM    CDATTR-CDENTRY(R11),CDMIN IS FOUND CDE A MINOR.          18000000
         BO    UNNECODE                YES                              18050000
         SPACE 2                                                        18060002
*/* P (,EXIT1) SET RETURN CODE = 8 */                                   18062002
         SPACE 2                                                        18070002
         LA    CODEREG,CODEANEQ        NO, LOAD MULTIPLE-NAME CODE      18100000
         LTR   SAVEREG,SAVEREG         ENTRY FROM NOMINA?      @ZA26742 18110003
         BM    EXITFREE                BRANCH IF YES           @ZA26742 18120003
         B     EXIT1                   RETURN                           18150002
         SPACE 2                                                        18160002
*/*UNNECODE: P SET RETURN CODE = 4 */                                   18162002
         SPACE 2                                                        18170002
UNNECODE LA    CODEREG,CODEUN          LOAD UNNECESSARY-IDENTIFY CODE   18200000
         SPACE 2                                                        18210002
*/* P GET EPA FROM MINOR CDE */                                         18212002
         SPACE 2                                                        18220002
         L     WKREG2,CDENTPTZ(R11)    LOAD ENTRY PT FROM FOUND CDE     18250000
         SPACE 2                                                        18260002
*/* D (YES,EXIT1,NO,) ENTRY POINT ADDR MATCH? */                        18262002
         SPACE 2                                                        18270002
         LA    WKREG2,N0(WKREG2)       ZERO HIGH ORDER BYTE             18300000
         CR    WKREG2,X2               ARE ENTRY POINTS EQUAL.          18350000
         BE    EXITTEST                YES, CODE ALREADY LOADED. RETURN 18400003
         SPACE 2                                                        18410002
*/* P SET RETURN CODE = 20 */                                           18412002
         SPACE 2                                                        18420002
         LA    CODEREG,CODEBADM        NO, LOAD BAD-MINOR CODE          18450000
EXITTEST EQU   *                                               @ZA26742 18450903
         LTR   SAVEREG,SAVEREG         ENTRY FROM NOMINA?      @ZA26742 18451803
         BNM   EXIT1                   BRANCH IF NOT           @ZA26742 18452703
EXITFREE EQU   *                                               @ZA26742 18453603
         L     ASCBREG,PSAAOLD         GET ASCB FOR FREEMAIN   @ZA26742 18454503
         LA    R1,CDESIZE              GET SIZE OF CDE         @ZA26742 18455403
         A     R1,CDESIZE(X2)          ADD SIZE OF XL          @ZA26742 18456303
         LR    WKREG2,CODEREG          SAVE RETURN CODE        @ZA26742 18457203
         FREEMAIN RU,LV=(R1),A=(X2),SP=255,BRANCH=YES          @ZA26742 18458103
         LR    CODEREG,WKREG2          RESTORE RETURN CODE     @ZA26742 18459003
         SPACE 2                                                        18460002
*/*EXIT1: S SETFRR:RESTORE STACK */                                     18462002
         SPACE 2                                                        18470002
EXIT1    DS    0H                       RETURN                          18500002
         SETFRR D,WRKREGS=(3,4)         FREE FRR                        18500402
         SPACE 2                                                        18500802
*/* P GET ADDRESS OF EXIT PROLOG IN R14 */                              18500902
         SPACE 2                                                        18501202
         L     CVTREG,CVTPTR           GET POINTER TO CVT               18502002
         L     R14,CVTEXPRO            GET ADDRESS OF EXIT PROLOG       18510002
         SPACE 2                                                        18512002
*/* R RETURN VIA R14 */                                                 18514002
         SPACE 2                                                        18516002
         BR    R14                     EXIT                             18520002
         EJECT                                                          18550000
*        FOR MINOR CDE, THIS ROUTINE CHECKS IF THE ENTRY POINT PASSED   18600000
*        IS WITHIN THE BOUNDS OF THE MODULE WHICH ISSUED THE IDENTIFY   18650000
*        OR WITHIN ANY MODULE ON THE LOAD LIST FOR ITS TASK.  THE       18700000
*        ROUTINE EITHER RETURNS SUCCESSFULLY, OR GIVES A ERROR CODE     18750000
*        TO THE IDENTIFYING MODULE.                                     18800000
*        FOR MAJOR CDE, THE INPUT IS PRESET FOR ONLY A SINGLE EXTENT    18850000
*        LIST CHECK. THE LOAD LIST POINTER IS SET TO POINT TO A FULL    18900000
*        WORD FIELD OF ZEROS, AND THE SUBROUTINE IS ENTERED AT          18950000
*        CDEPTEST INSTEAD OF XLINST.                                    19000000
*                                                                       19050000
*        REGISTER USAGE                                                 19100000
*        R2,4,5,7,8 - MODIFIED                                          19200002
*        R6  - BASE                                                     19210002
*        R9  - TCBLLS ADDRESS (INPUT)                                   19250000
*        R10 - ADDRESS OF ENTRY POINT (INPUT)                           19300002
*        R11 - MODIFIED                                                 19350000
*        R12 - MAJOR CDE ADDRESS (INPUT/OUTPUT)                         19400002
*        R14 - RETURN REGISTER (INPUT)                                  19450003
*        OTHER REGISTERS NOT REFERENCED                                 19500000
         SPACE 1                                                        19550000
         SPACE 2                                                        19552002
*/*XLINST: E XLINST/CDEPTEST ENTRY */                                   19552402
*/* P GET ADDRESS OF XL FOR MAJOR CDE */                                19552802
         SPACE 2                                                        19554002
         USING LLE,TLLSREG             TEMP USE TLLSREG FOR LLE         19560002
XLINST   EQU   *                                               @ZA26745 19600003
         L     XLREG,CDXLMJP           LOAD EXTENT LIST ADDR   @ZA26745 19620003
         LA    XLREG,0(,XLREG)         CLEAR HIGH ORDER BYTE   @ZA26745 19640003
         LTR   XLREG,XLREG             IS THERE AN ADDRESS?    @ZA26745 19660003
         BZ    NGENTPT                 SKIP CDE IF ZERO        @ZA26745 19680003
         SPACE 1                                                        19700003
* VALID ENTRY POINT TEST  INPUT-EXTENT LIST IN XLREG,ENTPT IN X2        19720003
         SPACE 2                                                        19760002
*/*CDEPTEST: P GET NUMBER OF EXTENTS FROM XL */                         19762002
         SPACE 2                                                        19770002
CDEPTEST L     WKREG1,N4(XLREG)        LOAD NUMBER OF BLOCKS            19800000
         SPACE 2                                                        19810002
*/* P GET ADDRESS OF ADDRESS LIST */                                    19812002
         SPACE 2                                                        19820002
         LA    WKREG5,N8(XLREG)        LOAD ADDR OF LENGTH LIST         19850002
         SPACE 2                                                        19860002
*/* P GET ADDR OF LENGTH LIST */                                        19862002
         SPACE 2                                                        19870002
         LR    WKREG2,WKREG1           LOAD NO. BLOCKS INTO TEMP. REG   19900000
         SLL   WKREG2,N2               MULTIPLY BY FOUR                 19950000
         AR    WKREG2,WKREG5           ADD LENGTH LIST ADDR TO GET ADDR 20000002
         SPACE 2                                                        20010002
*/*EPCHECK: P GET ADDRESS OF THIS EXTENT */                             20012002
         SPACE 2                                                        20020002
EPCHECK  L     WKREG3,N0(WKREG2)       LOAD ADDRESS (LOWER BOUND)       20050000
         SPACE 2                                                        20052002
*/* D (YES,EPLAST,NO,) IS EP LT EXTENT LIST START? */                   20060002
         SPACE 2                                                        20070002
         CR    X2,WKREG3               IS ENTRY POINT BELOW LOWER BOUND 20100000
         BL    EPLAST                  YES                              20150000
         SPACE 2                                                        20160002
*/* P GET UPPER BOUND OF EXTENT LIST */                                 20162002
         SPACE 2                                                        20170002
         L     WKREG4,N0(WKREG5)       LOAD LENGTH OF NEXT SECTION      20200002
         LA    WKREG4,N0(WKREG4)       ZERO HI ORDER FLAG               20250000
         SPACE 2                                                        20260002
*/* D (YES,EPLAST,NO,) IS EP GT UPPER BOUND? */                         20262002
*/* R RETURN VIA R15 */                                                 20264002
         SPACE 2                                                        20270002
         AR    WKREG3,WKREG4           COMPUTE UPPER BOUND              20300000
         CR    X2,WKREG3               IS ENTRY POINT ABOVE UPPER BOUND 20350000
         BCR   N4,RETREG               NO, WITHIN BOUNDS- RETURN LEGAL  20400002
         SPACE 2                                                        20410002
*/*EPLAST: P (=0,NGENTPT,GT 0,) DECREMENT NUMBER OF EXTENTS BY 1 */     20412002
         SPACE 2                                                        20420002
EPLAST   BCT   WKREG1,EPNEXT           IF LAST ENTRY NOT DONE GO EPNEXT 20450000
         B     NGENTPT                 OTHERWISE RETURN NOT LEGAL       20500000
         SPACE 2                                                        20510002
*/*EPNEXT: P (,EPCHECK) GET ADDR OF NEXT ADDR AND LENGTH LIST ENTRY */  20512002
         SPACE 2                                                        20520002
EPNEXT   LA    WKREG5,N4(WKREG5)       INCREMENT TO NEXT LENGTH         20550002
         LA    WKREG2,N4(WKREG2)       INCREMENT TO NEXT ADDRESS        20600000
         B     EPCHECK                 CONTINUE EPTEST                  20650000
         SPACE 2                                                        20660002
*/*NGENTPT: P GET ADDR OF FIRST/NEXT LLE OF CHAIN */                    20662002
         SPACE 2                                                        20670002
NGENTPT  EQU   *                                               @ZA26742 20700003
         LA    WKREG1,ZERO             POINT TO ADDRESS ZERO   @ZA26742 20705003
         CR    WKREG1,TLLSREG          ADDRESSES THE SAME?     @ZA26742 20710003
         BNE   NGENTPT1                BRANCH IF NOT           @ZA26742 20715003
         LA    CODEREG,CODENGEP        SET ERROR CODE          @ZA26742 20720003
         LR    X2,SAVEREG              POINT TO GOTTEN AREA    @ZA26742 20725003
         B     EXITFREE                FREE AREA AND RETURN    @ZA26742 20730003
NGENTPT1 EQU   *                                               @ZA26742 20735003
         L     TLLSREG,LLECHN          LOAD 1ST LL ELEM FROM TCBLLS     20740003
*                                      ** OR LLCHAIN FIELD              20750000
         LA    TLLSREG,N0(TLLSREG)     ZERO HIGH ORDER BYTE             20800000
         SPACE 2                                                        20810002
*/* D (NO,NOTZERO,YES,) IS ADDR = 0? */                                 20812002
         SPACE 2                                                        20820002
         LTR   TLLSREG,TLLSREG         IS TCBLLS OR LLCHAIN ZERO        20850000
         SPACE 1                                                        20900000
*NOTE* LLCHAINA MUST BE 0 OTHERWISE ABOVE INSTS CANNOT BE USED FOR THE  20950000
*      DOUBLE-FOLD PURPOSE THEY NOW ARE. IT IS USED TO LOAD TCBLLS AND  21000000
*      LL CHAIN PTR.                                                    21050000
         SPACE 1                                                        21100000
         BNE   NOTZERO                 NO- PROCESS CDE/LLE ENTRIES      21150000
         SPACE 2                                                        21160002
*/* P (,EXIT1) SET RETURN CODE (R15) = 12 */                            21162002
         SPACE 2                                                        21170002
         LA    CODEREG,CODENGEP        LOAD ENTRY-PT-INVALID ERROR CODE 21200000
         B     EXIT1                   RETURN                           21250002
         SPACE 2                                                        21260002
*/*NOTZERO: P GET ADDR OF CDE FROM LLE */                               21262002
         SPACE 2                                                        21270002
NOTZERO  L     CDEREG,LLECDPT          LOAD ADDR CDE FROM LL ELEM       21300000
         SPACE 2                                                        21310002
*/* D (NO,XLINST,YES,) IS CDE A MINOR? */                               21312002
         SPACE 2                                                        21320002
         TM    CDATTR,CDMIN            IS IDENTIFIER A MINOR            21350000
         BZ    XLINST                  NO, GO TO CDEPTEST AND COLLECT   21400000
         SPACE 2                                                        21410002
*/* P (,XLINST) GET ADDRESS OF MAJOR FROM MINOR */                      21412002
         SPACE 2                                                        21420002
         L     CDEREG,CDXLMJP          YES,LOAD MAJOR CD ENTRY          21450000
         B     XLINST                  GO TO CDEPTEST DONT COLLECT $200 21500000
         DROP  TLLSREG                 STOP LLE ADDRESSABLITY           21550000
         TITLE '         IGC041 - IDENTIFY - RETRY ENTRY'               21560002
*   SVC41 RETRY ROUTINE                                                 21580002
*        CAUSES CONTROL TO BE RETURNED TO ISSUER OF SVC WITH REGISTER   21585002
*        15 CONTAINING X'24' - UNEXPECTED SYSTEM ERROR, REQUEST NOT     21590002
*        COMPLETED. SUPPORT CODE FOR RECOVERY IS Y02753          Y02753 21592002
*  INPUT - REG. 6 = BASE FOR MODULE IEAVID00                            21592402
SVC41RTY DS    0H                      RETRY ROUTINE             Y02753 21594002
         LA    CODEREG,CODSYSER        PUT ERR CODE 24 IN REG 15 Y02753 21596002
         B     EXIT1                   GO FREE FRR AND EXIT      Y02753 21598002
         EJECT 1                                               @ZA28584 21598203
*  FETCH PROTECT RETRY ROUTINE                                 @ZA28584 21598403
*              CAUSES CONTROL TO BE RETURNED TO ISSUER OF SVC  @ZA28584 21598603
*              WITH REGISTER 15 CONTAINING X'28' - ADDRESS OF  @ZA28584 21598803
*              NAME IS FETCH PROTECTED                         @ZA28584 21599003
FETRTY   EQU   *                                               @ZA28584 21599203
         LA    CODEREG,CODEFET         PUT ERR CODE 28 IN 15   @ZA28584 21599403
         B     EXIT1                   GO FREE FRR AND EXIT    @ZA28584 21599603
         EJECT 1                                               @ZA26742 21600003
*   SVC41 RETRY ROUTINE                                        @ZA26742 21600903
*        CAUSES CONTROL TO BE RETURNED TO ISSUER FO SVC WITH   @ZA26742 21601803
*        REGISTER 15 CONTAINING X'24' - UNEXPECTED SYSTEM      @ZA26742 21602703
*        ERROR, REQUEST NOT COMPLETED.  THIS ROUTINE ALSO      @ZA26742 21603603
*        FREES UP AREA THAT WAS ALLOCATED FOR THE CDE AND XL.  @ZA26742 21604503
SVC41FRE EQU   *                                               @ZA26742 21605403
         LA    CODEREG,CODEFET         PUT ERR CODE 24 IN REG  @ZA26742 21606303
         B     EXITFREE                GO FREE AREA AND FRR    @ZA26742 21607203
         TITLE 'IGC041 - FRR ROUTINE'                                   21608103
*/* E FRRSVC41 */                                                       21610002
*/* P SET UP ADDRESSABILITY */                                          21620002
         SPACE 2                                                        21630002
FRRSVC41 DS    0H                                                       21650002
         BALR  R6,N0                   SET UP ADDRESSABILITY     Y02753 21700002
         USING *,R6                    TELL ASSEMBLER            Y02753 21750002
         SPACE 2                                                        21760002
*/* P PSAVE CALLERS RETURN ADDRESS IN R10 */                            21762002
         SPACE 2                                                        21770002
         LR    R12,R14                 SAVE RETURN ADDRESS     @ZA26742 21800003
         SPACE 2                                                        21810002
*/* P PUT SDWA ADDRESS IN WKREG (R8) */                                 21812002
         SPACE 2                                                        21820002
         LR    SDWAREG,R1              PUT SDWA IN PROTECTED REG Y02753 21850002
         USING SDWA,SDWAREG            TELL ASSEMBLER            Y02753 21900002
         SPACE 2                                                        21910002
*/* L SETRP-- CAUSE ERROR TO BE RECORDED */                             21912002
         SPACE 2                                                        21920002
         SETRP RECORD=YES,WKAREA=(SDWAREG),RECPARM=SVC41ERR SET UP FOR  21950002
*                                      RECORDING                 Y02753 22000002
         SPACE 2                                                        22050002
*/* P GET ABENDING ASID COMPARE FLAG FROM SDWA */                       22060002
*/* D (YES,,NO,SVC41PRC) ABEND IN SAME MEMORY AS CURRENT? */            22070002
         SPACE 2                                                        22100002
         LH    WKREG2,SDWAFMID         GET ASID OF CURRENT       Y02753 22300002
         LTR   WKREG2,WKREG2           TEST IF SAME ADDR. SPACE  Y02753 22350002
         BNZ   SVC41PRC                NO- RETURN TO CALLER      Y02753 22400002
         SPACE 2                                               @ZA28584 22401003
         USING PARMAD,R1                                       @ZA26742 22402003
         L     R9,FETRET               GET ADDRESS OF RETURN   @ZA28584 22402603
         L     R1,SDWAPARM             GET PARM ADDRESS        @ZA26742 22403203
         CLI   PARMFLAG,PARMFTCH       IS THIS FETCH PROTECT?  @ZA26742 22403803
         BE    SVC41RP                 BRANCH IF YES           @ZA28584 22405003
         SPACE 2                                                        22410002
*/* P SET ENVIRONMENT REGISTERS 3=CVT, R=TCB, 5=RB, 7=ASCB */           22412002
         SPACE 2                                                        22420002
         L     TCBREG,PSATOLD          GET CURRENT TCB           Y02753 22500002
         L     RBREG,N0(R8)            GET PARM LIST ADDRESS     Y02753 22510002
         L     RBREG,N0(RBREG)         GET SVRB ADDR. FROM PARM. Y02753 22520002
         L     R7,PSAAOLD              GET ASCB ADDRESS          Y02753 22550002
         L     CVTREG,CVTPTR           GET CVT POINTER         @ZA26742 22560003
         SPACE 2                                               @ZA26742 22560603
*/* P GET ADDRESS OF REG SAVE AREA (16 WORDS) */                        22562002
*/* S CDEQVER:VERIFY APPROPRIATE CDE QUEUE */                           22564002
         SPACE 2                                                        22570002
         LA    R13,SDWASRSV            GET A REG. SAVE AREA      Y02753 22600002
         BAL   R14,CDEQVER             VERIFY PROPER CDE QUEUE   Y02753 22650002
         SPACE 2                                                        22660002
*/*SVC41PRC: P PUT IDENTIFY BASE ADDRESS IN SDWA RETRY REGS */          22662002
         SPACE 2                                                        22670002
SVC41PRC DS    0H                      RETURN TO CALLER          Y02753 22700002
         L     R1,SDWAPARM             GET PARM LIST           @ZA26742 22700403
         L     R9,PARMBASE             GET IDENTIFY BASE ADDR  @ZA26742 22701403
         ST    R9,SDWASR06             PUT IN RETRY REGS IN SDWA Y02753 22704002
         SPACE 2                                                        22706002
*/* L SETRP-- CAUSE RETRY AT SVC41RET */                                22706402
         SPACE 2                                                        22708002
         L     R9,SVC41RET             GET RETRY ADDRESS         Y02753 22708402
         TM    PARMFLAG,PARMGTMN       WAS AREA ALLOCATED?     @ZA26742 22708503
         BZ    SVC41RP                 BRANCH IF NOT           @ZA26742 22708603
         L     R9,FREERTY              GET ADDRESS OF ROUTINE  @ZA26742 22708703
         L     R10,PARMGETM            GET ADDRESS OF AREA     @ZA26742 22708803
         ST    R10,SDWASR10            SAVE IN SDWA RETRY REGS @ZA26742 22708903
         LH    WKREG1,PARMGETL         GET LENGTH OF AREA      @ZA26742 22709003
         ST    WKREG1,CDESIZE(,R10)    STORE LENGTH IN XL      @ZA26742 22709103
SVC41RP  EQU   *                                               @ZA28584 22709203
         SETRP RETADDR=(R9),RETREGS=YES,RC=4,WKAREA=(R8)         Y02753 22710002
         SPACE 2                                                        22712002
*/* P RESTORE CALLERS RETURN ADDRESS */                                 22712402
*/* R RETURN TO CALLER VIA BR14 */                                      22712802
         SPACE 2                                                        22714002
         LR    R14,R12                 RESTORE RETURN ADDRESS  @ZA26742 22720003
         BR    R14                     RETURN TO RTM             Y02753 22727003
         DROP  R1                                              @ZA26742 22734003
         EJECT                                                          22750002
*  CDE QUEUE VERIFY ROUTINE                                             22800002
*   PURPOSE:  TO DETERMINE IF THE JPQ OR THE LPA WAS BEING MODIFIED AT  22850002
*        THE TIME OF THE ERROR AND VERIFY THE ELEMENTS ON THAT QUEUE    22900002
*        ARE VALID.                                                     22950002
*                                                                       23000002
*   INPUT:                                                              23050002
*        R8 = ADDRESS OF SDWA                                           23100002
*        R3-4,7 = ENVIRONMENT REGISTERS                                 23150002
*        R13 = ADDRESS OF 16 WORD SAVE AREA                             23200002
*        R14 = RETURN ADDRESS                                           23250002
*        R15 = ENTRY POINT                                              23300002
*                                                                       23350002
*   OUTPUT:                                                             23400002
*        R0-2,8-9,11-12,15 - MODIFIED                                   23450002
*        R3-5,7,10,13-14 - UNCHANGED                                    23500002
*                                                                       23550002
         SPACE 1                                                        23560002
*/* E CDEQVER */                                                        23562002
*/* P SAVE CALLERS REGISTERS 0-15 IN R13 SAVE AREA */                   23562402
*/* P SET UP ADDRESSABILITY */                                          23564002
         SPACE 2                                                        23570002
CDEQVER  DS    0H                      VERIFIES CDE QUEUE        Y02753 23600002
         STM   R0,R15,N0(R13)          SAVE CALLERS REGS         Y02753 23610002
         BALR  R6,N0                   SET UP ADDRESSABILITY     Y02753 23650002
         USING *,R6                    TELL ASSEMBLER            Y02753 23700002
         SPACE 2                                                        23760002
*/* L GETMAIN-- GET QUEUE VERIFY WORK AREA AND PARM LIST */             23762002
         SPACE 2                                                        23770002
         GETMAIN RC,BRANCH=YES,LV=QVRSIZE,SP=253  GET QV WKAREA  Y02753 23800002
         SPACE 2                                                        23810002
*/* D (NO,,YES,CDECHEK) GETMAIN SUCCESSFUL? */                          23812002
*/* P (,CDEQEXIT) SET RETURN CODE IN REGISTER 15=0 */                   23814002
         SPACE 2                                                        23820002
         LTR   R15,R15                 GETMAIN SUCCESSFUL?       Y02753 23850002
         BZ    CDECHEK                 YES- INITIALIZE           Y02753 23900002
         SR    R15,R15                 SET 0 RETURN              Y02753 23950002
         B     NOFREE                  GO TO RETURN CODE         Y02753 24000002
         SPACE 2                                                        24010002
*/*CDECHEK: P CLEAR PARAMENTER WORK AREA */                             24012002
         SPACE 2                                                        24020002
CDECHEK  XC    N0(QVPLSIZE,R1),N0(R1)  CLEAR PARM AREA                  24050002
         USING QVPL,R1                 SET ADDRESSING TO PARM AR Y02753 24100002
         SPACE 2                                                        24110002
*/* P PUT CDE ELEMENT VERIFICATION ROUTINE ADDRESS IN QVPL */           24112002
         SPACE 2                                                        24120002
         L     CVTREG,CVTPTR           RESET CVT ADDRESS         Y02753 24130002
         LA    WKREG2,CDEVER           GET CDE ELEMENT VER. RTN. Y02753 24150002
         ST    WKREG2,QVPLEVR          PUT IN PARM LIST          Y02753 24200002
         SPACE 2                                                        24210002
*/* P PUT ADDRESS OF SDWA VARIABLE RECORDING AREA IN QVPL */            24212002
         SPACE 2                                                        24220002
         LA    WKREG2,SDWARA           GET RECORD AREA ADDR.     Y02753 24250002
         ST    WKREG2,QVPLODA          SAVE IN PARM LIST.        Y02753 24300002
         SPACE 2                                                        24310002
*/* P PUT ADDRESS OF A WORKAREA FOR QUEUE VERIFIER IN QVPL */           24312002
         SPACE 2                                                        24320002
         LA    WKREG2,QVPLSIZE(R1)     CALCULATE ADDR. OF WKAREA Y02753 24350002
         ST    WKREG2,QVPLWKA          STORE IN PARM LIST.       Y02753 24400002
         SPACE 2                                                        24420002
*/* P SAVE CALLERS REGSITER SAVE AREA ADDRESS    */                     24430002
*/* P GET A REGISTER SAVE AREA FOR QUEUE VERIFY ROUTINE  */             24440002
*/* P PUT SDWA ADDRESS IN R0   */                                       24442002
         LR    R10,R13                 SAVE CALLERS REG SAVE     Y02753 24450002
         LA    R13,QVPLSIZE+QVPLWASZ(R1) GET QV REG SAVE AREA    Y02753 24500002
         LR    R0,R8                   PUT SDWA ADDR. IN R0      Y02753 24550002
*                                      Q.V. ROUTINE                     24554002
         SPACE 2                                                        24560002
*/* L (HELD,LPAVER,NO,) SETLOCK-- TEST IF CMS LOCK IS HELD */           24562002
         SPACE 2                                                        24570002
         SETLOCK TEST,TYPE=CMS,BRANCH=(HELD,LPAVER)  LOCKS HELD  Y02753 24600002
         SPACE 2                                                        24610002
*/* P PUT JPQ ERROR LABEL IN RECORDING AREA */                          24612002
*/* P INCREMENT AMOUNT USED COUNT BY MSG LENGTH (10 BYTES) */           24614002
         SPACE 2                                                        24620002
         LA    WKREG2,SDWAVRA          GET RECORDING AREA ADDR.  Y02753 24650002
         MVC   N0(MSGLEN,WKREG2),JPQERR PUT MSG IN RECORDING ARE Y02753 24700002
         LA    WKREG2,MSGLEN           GET LENGTH OF HEADER AND  Y02753 24750002
         STC   WKREG2,SDWAURAL         STORE IN USED COUNT       Y02753 24800002
         SPACE 2                                                        24810002
*/* P PUT ADDRESS OF JPQ HEADER (TCBJPQ FROM JSTCB) IN QVPL */          24812002
         SPACE 2                                                        24820002
         L     WKREG2,TCBJSTCB         GET JSTCB                 Y02753 24850002
         LA    WKREG2,TCBJPQ-TCB(WKREG2) GET JPQ ADDR.           Y02753 24900002
         ST    WKREG2,QVPLHDR          SAVE IN HEADER FIELD      Y02753 24950002
         SPACE 2                                                        24960002
*/* L IEAQVER-- VERIFY SINGLE THREADED/ HEADER ONLY QUEUE */            24962002
         SPACE 2                                                        24970002
         L     R15,CVTQV1            GET ADDR. OF QUEUE VER RTN. Y02753 25000002
         BALR  R14,R15                 GO TO QUEUE VER. RTN.     Y02753 25050002
         SPACE 2                                                        25060402
*/* P GET REASON CODE IN REGISTER WITHOUT INDICATORS */                 25060802
*/* D (YES,CDEQEXIT,NO,) ANY ERRORS FOUND? */                           25061202
         SPACE 2                                                        25061702
         SLL   R15,N24                 SHIFT REASON CODE         Y02753 25061802
         LTR   R15,R15                 ANY ERRORS                Y02753 25061902
         BNZ   CDEQEXIT                YES-CAUSE WTO BEFORE EXIT Y02753 25071402
         SPACE 2                                                        25073402
*/* P (,CDEQEXIT) CLEAR USED PORTION OF RECORDING AREA IN SDWA */       25081002
         SPACE 2                                                        25090502
         SR    WKREG2,WKREG2           CLEAR REG, PUT ZERO USED  Y02753 25100002
         STC   WKREG2,SDWAURAL         CNT IN SDWA RECORDING ARE Y02753 25150002
         B     CDEQEXIT                RETURN TO CALLLER         Y02753 25200002
         SPACE 2                                                        25210002
*/*LPAVER: P PUT LPQ ERROR LABEL IN RECORDING AREA OF SDWA */           25212002
         SPACE 2                                                        25220002
LPAVER   LA    WKREG2,SDWAVRA          GET RECORDING AREA ADDR.  Y02753 25250002
         MVC   N0(MSGLEN,WKREG2),LPQERR  PUT MSG IN RECORDING AR Y02753 25300002
         SPACE 2                                                        25310002
*/* P INCREMENT AMOUNT USED COUNT BY MSG LENGTH (10 BYTES) */           25312002
         SPACE 2                                                        25320002
         LA    WKREG2,MSGLEN           GET LENGTH OF HEADER AND  Y02753 25350002
         STC   WKREG2,SDWAURAL         STORE IN USED COUNT       Y02753 25400002
         SPACE 2                                                        25410002
*/* P PUT ADDRESS OF LPA QUEUE HEADER IN QVPL (IEAQLPAQ) */             25420002
         SPACE 2                                                        25430002
         L     WKREG2,CVTQLPAQ         GET LPA QUEUE HEADER      Y02753 25450002
         ST    WKREG2,QVPLHDR          SAVE IN PARM AREA         Y02753 25452002
         SPACE 2                                                        25452402
*/* L IEAVQVER-- VERIFY SINGLE THREADED/ HEADER ONLY QUEUE */           25452502
         SPACE 2                                                        25452802
         L     R15,CVTQV1              GET ADDR. OF QUEUE RTN.   Y02753 25454002
         BALR  R14,R15                 QUEUE VER. RTN.           Y02753 25456002
         SPACE 2                                                        25456402
*/* P GET REASON CODE IN REGISTER WITHOUT INDICATORS */                 25456502
*/* D (YES,RECRDLPA,NO,) ANY ERRORS FOUND? */                           25456602
*/* P (,CDEQEXIT) ZERO COUNT USED IN RECORDING AREA IN SDWA */          25456702
         SPACE 2                                                        25456802
         SLL   R15,N24                 SHIFT REASON CODE         Y02753 25458002
         LTR   R15,R15                 ANY ERRORS                Y02753 25458402
         BNZ   RECRDLPA                YES-CAUSE WTO BEFORE EXIT Y02753 25458802
         SR    WKREG2,WKREG2           CLEAR REG, PUT ZERO USED  Y02753 25459202
         STC   WKREG2,SDWAURAL         CNT IN SDWA RECORDING ARE Y02753 25459602
         B     CDEQEXIT                END                       Y02753 25459702
         SPACE 2                                                        25459802
*/*RECRDLPA: P SAVE QVPL ADDRESS OVER RECORD INTERFACE */               25462002
*/* P GET REGISTER SAVE AREA FOR RECORD */                              25464002
*/* L RECORD-- CAUSE ASYNCROUS WTO WITH MESSAGE IEA959I */              25466002
*/* P RESTORE QVPL ADDRESS INTO R1 */                                   25466402
         SPACE 2                                                        25467302
RECRDLPA LR    WKREG2,R1               SAVE QVPL ADDR. OVER REC. Y02753 25474902
         LA    R13,QVPLSIZE+QVPLWASZ(R1)   REG SAVE AREA ADDRESS Y02753 25475903
*                                    '(R1)' ADDED TO LINE FOR  @ZA17842 25476903
         RECORD TYPE=WTO,RCVRY=SETFRR,DATAADR=IEA959,LENGTH=MSGLNTH,   *25482402
               BUFFER=YES                                        Y02753 25489902
         LR    R1,WKREG2               RESTORE QVPL AREA ADDRESS Y02753 25499902
         SPACE 2                                                        25501902
*/*CDEQEXIT: L FREEMAIN-- FREE QUEUE VERIFIER WORK SPACE AND PARM LIST  25502302
*/**/                                                                   25502702
*/* P RESTORE CALLERS REGISTER SAVE AREA ADDR. FROM R10 */              25503102
*/* P RESTORE CALLERS REGISTERS */                                      25503502
*/* R RETURN TO CALLER VIA BR14 */                                      25503602
         SPACE 2                                                        25503902
CDEQEXIT FREEMAIN RC,LV=QVRSIZE,A=(1),BRANCH=YES FREE QVPL, ETC. Y02753 25509902
         LR    R13,R10                 RESTORE CALLERS SAVE REGS Y02753 25519903
NOFREE   EQU   *                                               @ZA26742 25524903
         LM    R0,R14,N0(R13)          RESTORE CALLERS REGS      Y02753 25529903
         BR    R14                     RETURN TO CALLER          Y02753 25539902
         DROP  R6                                                       25543202
         EJECT                                                          25545202
*  CDE ELEMENT VERIFICATION ROUTINE                                     25545602
*    PURPOSE: TO VERIFY THAT THE ELEMENT PASSED AS INPUT IS A CDE       25546002
*                                                                       25546402
*    INPUT:                                                             25546502
*        R0  = ADDRESS OF ELEMENT TO BE VERIFIED                        25546602
*        R1  = ADDRESS OF SDWA                                          25559902
*        R14 = RETURN ADDRESS                                           25569902
*        R15 = ENTRY POINT ADDRESS                                      25571902
*                                                                       25572302
*    OUTPUT:                                                            25572702
*        R15 = RETURN CODE                                              25573102
*          0 = VALID                                                    25573202
*          4 = INVALID (REMOVE ELEMENT)                                 25573302
*          8 = INVALID (TRUNCATE QUEUE)                                 25577702
*        R0,1,8-13 = UNCHANGED                                          25579702
*        R2-7 = UNPREDICTABLE                                           25581702
*                                                                       25582102
         SPACE 1                                                        25584302
*/* E CDEVER */                                                         25584702
*/* P SET UP ADDRESSABILITY */                                          25585102
         SPACE 2                                                        25586302
CDEVER   DS    0H                      CDE ELEMENT VERIFIER      Y02753 25589002
         BALR  R6,N0                   SET UP ADDRESSIBILITY     Y02753 25591202
         USING *,R6                    TELL ASSEMBLER            Y02753 25593402
         SPACE 2                                                        25595402
*/* P SAVE CALLERS RETURN ADDRESS IN R7 */                              25603002
         SPACE 2                                                        25610702
         LR    R7,R14                  SAVE CALLERS RETURN ADDR. Y02753 25618302
         SPACE 2                                                        25620302
*/* P INITIALIZE FOR ADDR. VERIFY RTN. R0= ELEM SIZE, R1= SDWA, R2=     25620702
*/*ELEMENT */                                                           25621102
         SPACE 2                                                        25622302
         LR    R2,R0                   PUT SDWA IN USABLE REG    Y02753 25625902
         LA    R0,CDESIZE              GET SIZE OF ELEMENT       Y02753 25633502
         SPACE 2                                                        25635502
*/* L IEAVADVER-- VERIFY CDE ADDRESS */                                 25635902
         SPACE 2                                                        25637502
         L     R3,CVTPTR               GET ADDRESS OF CVT       @Y04971 25638502
         L     R15,CVTADV              GET ADDRESS VERIFIER RTN. Y02753 25641102
         BALR  R14,R15                 GO TO ADDR. VER. RTN.     Y02753 25651102
         SPACE 2                                                        25653102
*/* D (YES,MINTST,NO,) ADDRESS VALID? */                                25653502
*/* P (,CDEERET) SET RETURN CODE = 8 TO TRUNCATE QUEUE */               25653902
         SPACE 2                                                        25655102
         LTR   R15,R15                 ADDRESS VALID             Y02753 25661102
         BZ    MINTST                  YES- CHECK ELEMENT        Y02753 25671102
         LA    R15,N8                  NO- TRUNCATE QUEUE        Y02753 25681102
         B     CDEERET                 RETURN TO CALLER          Y02753 25683102
         USING CDENTRY,R2              ADDRESSING FOR CDE        Y02753 25685102
         SPACE 2                                                        25685502
*/*MINTST: P PUT SAME CDE ADDRESS IN WKREG 3 */                         25685602
*/* D (NO,SPTST,YES,) CDE A MINOR? */                                   25685702
         SPACE 2                                                        25685902
MINTST   LR    R3,R2                   GET MAJOR IN REG 3        Y02753 25687102
         TM    CDATTR,CDMIN            TEST MINOR CDE            Y02753 25689102
         BZ    SPTST                   NO-GO TO NEXT TEST        Y02753 25689502
         SPACE 2                                                        25689602
*/* P GET MAJOR CDE ADDRESS FROM XTLST FIELD */                         25691602
*/* D (YES,LPAQMOD,NO,) MODULE LOADED BY NIP */                         25693602
         SPACE 2                                                        25693702
         L     WKREG3,CDXLMJP          GET MAJOR CDE             Y02753 25695702
         TM    CDATTR,CDNIP            TEST-MODULE LOADED BY NIP Y02753 25697702
         BO    LPAQMOD                 YES- SEARCH LPA ONLY      Y02753 25699702
         SPACE 2                                                        25700102
*/* P (,RUNQ) GET POINTER TO JPQ HEAD */                                25700202
         SPACE 2                                                        25700502
         L     TCBREG,PSATOLD          GET CURRENT TCB           Y02753 25701702
         L     TCBREG,TCBJSTCB         GET JOBSTEP TCB           Y02753 25703702
         LA    TCBREG,TCBJPQ           GET JPQ FROM JSTCB        Y02753 25705702
         B     RUNQ                    TEST FOR MODULE ON QUEUE  Y02753 25707702
         SPACE 2                                                        25709702
*/*LPAQMOD: P GET POINTER TO LPAQ HEAD */                               25710102
         SPACE 2                                                        25711702
LPAQMOD  L     R4,CVTPTR               GET CVT ADDRESS           Y02753 25717702
         L     R4,CVTQLPAQ-CVT(R4)     GET LPA QUEUE HEADER      Y02753 25719702
         SPACE 2                                                        25720102
*/*RUNQ: D (YES,SPTST,NO,) CURRENT CDE= MAJOR CDE? */                   25720202
         SPACE 2                                                        25720502
RUNQ     CR    R3,R4                   TEST CURRENT=MAJOR        Y02753 25721702
         BE    SPTST                   IF EQUAL, DO NEXT TEST    Y02753 25723702
         SPACE 2                                                        25723802
*/* D (YES,ERRQRUN,NO,) CURRENT CDE=SUBJECT CDE? */                     25725502
         SPACE 2                                                        25727202
         CR    R2,R4                   TEST CURRENT=SUBJECT CDE  Y02753 25728902
         BNE   ERRQRUN                 IF NOT EQUAL-END WITH ERR Y02753 25730602
         SPACE 2                                                        25732002
*/* P (,RUNQ) GET NEXT CDE ON QUEUE */                                  25732402
         SPACE 2                                                        25733502
         L     R4,N0(R4)               GET NEXT CDE              Y02753 25733902
         B     RUNQ                    LOOP TO CHECK TOTAL QUEUE Y02753 25734002
         SPACE 2                                                        25735502
*/*ERRQRUN: P (,CDEERET) SET RETURN CODE = 8 TO CAUSE TRUNCATION OF CDE 25737402
*/* QUEUE */                                                            25739402
         SPACE 2                                                        25740302
ERRQRUN  LA    R15,N8                  QUEUE TO BE TRUNCATED     Y02753 25742202
         B     CDEERET                 RETURN TO CALLER          Y02753 25744102
         SPACE 2                                                        25746402
*/*SPTST: D (YES,CDEERET,NO,) MAJOR CDE LOADED BY OS LOADER */          25746502
         SPACE 2                                                        25746802
SPTST    TM    CDATTR2-CDENTRY(R3),CDSPZ TEST MAJOR FOR SP0      Y02753 25747602
         BO    CDEERET                 IF SP0 RETURN TO CALLER   Y02753 25747902
         SPACE 2                                                        25749702
*/* P GET ADDRESS OF EXTENT LIST FROM MAJOR CDE */                      25750202
*/* D (YES,CDEERET,NO,) FIRST 9 BYTES OF XTLST CORRECT? */              25750602
         SPACE 2                                                        25751502
         L     R4,CDXLMJP-CDENTRY(R3)  GET EXTENT LIST ADDR.     Y02753 25755102
         CLC   N0(N9,R4),XLSTHEAD      TEST FOR XTLST FORMAT     Y02753 25756902
         BE    CDEERET                 IF XTLST RETURN TO CALLER Y02753 25758702
         SPACE 2                                                        25758802
*/* P SET RETURN CODE= 8 TO CAUSE TRUNCATION OF CDE QUEUE */            25759102
*/* D (YES,CDEERET,NO,) REQUEST FOR A MAJOR? */                         25759502
         SPACE 2                                                        25759602
         LA    R15,N8                  CAUSE QUE TO BE TRUNCATED Y02753 25759702
         CR    R2,R3                   Q. REQUEST FOR MAJOR CDE  Y02753 25760502
         BE    CDEERET                 YES- SKIP ZERO OF CHAIN   Y02753 25760902
         SPACE 2                                                        25762102
*/* P SET MAJOR AS LAST BY ZEROING CHAIN FIELD */                       25762902
*/* P INDICATE NO EXTENT LIST AND SET ATTR. TO NON-REUS */              25763702
         SPACE 2                                                        25764502
         SR    WKREG2,WKREG2           CLEAR REG FOR ZERO STORES Y02753 25765302
         ST    WKREG2,CDCHAIN-CDENTRY(R3) SET MAJOR AS LAST      Y02753 25766102
         ST    WKREG2,CDXLMJP-CDENTRY(R3) SET XTLST PTR TO ZERO  Y02753 25766902
         STC   WKREG2,CDATTR-CDENTRY(R3)  SET MAJOR NON-REUS     Y02753 25767702
         SPACE 2                                                        25768202
*/*CDEERET: P RESTORE CALLERS RETURN REGISTER */                        25768302
*/* R RETURN TO CALLER VIA BR14 */                                      25768402
         SPACE 2                                                        25768602
CDEERET  LR    R14,R7                  RESTORE CALLERS RET REG   Y02753 25769502
         BR    R14                     RETURN TO CALLER          Y02753 25771302
         DROP  R2                      RELEASE CDE                      25773102
         DROP  R6                      RELEASE BASE                     25774902
         SPACE 2                                                        25776702
*/* FOOTING                                                             25778502
*/*                                                                     25780302
*/* */                                                                  25782102
*/*IEAVID00: END IDENTIFY */                                            25783902
         SPACE 2                                                        25785702
         TITLE 'IGC041 - IDENTIFY - CONSTANTS, EQUATES, AND MAPS'       25787502
*********************************************************************** 25789302
ZERO     DC    A(0)                    MASK FOR CLEARING FIELDS         25791102
XLSTHEAD DC    F'16'                   LENGTH OF 16              Y02753 25841102
         DC    F'1'                    COUNT OF 1 BLOCK          Y02753 25891102
         DC    X'80'                   END-OF-LIST INDICATOR     Y02753 25941102
IEA959   WTO   'IEA959I  ERROR CAUSED ACTIVE LPA TO BE TRUNCATED, MODUL*25943102
               E CONTROL MAY BE LOST',MF=L,ROUTCDE=2,DESC=4      @M7603 25945102
MSGEND   EQU   *                       END OF MSG TO OPERATOR           25947102
MSGLNTH  EQU   MSGEND-IEA959           LENGTH OF TOTAL MSG AND CODES    25949102
SVC41ERR DC    CL8'IEAVID00'           MODULE NAME               Y02753 25949502
         DC    CL8'IEAVID00'           CSECT NAME                Y02753 25949902
         DC    CL8'FRRSVC41'           RECOVERY ROUTINE          Y02753 25966602
SVC41RET DC    A(SVC41RTY)             RETRY ADDRESS FOR ERROR          25968602
FREERTY  DC    A(SVC41FRE)             RETRY ADDRESS FOR       @ZA26742 25972603
*                                      FREEING AREA AFTER ERR  @ZA26742 25973103
FETRET   DC    A(FETRTY)               RETRY ADDRESS FOR FETCH @ZA28584 25973603
*                                      PROTECT ERROR           @ZA28584 25974103
MINMASK  DC    XL4'80000000'           HIGH BIT  MASK          @ZA26742 25974603
ZEROMASK DC    XL4'7FFFFFFF'           ZERO HIGH BIT MASK      @ZA26742 25975103
JPQERR   DC    CL10'JPQ ERROR '        ERROR LABEL                      25976602
JPQEND   EQU   *                                                        25978602
LPQERR   DC    CL10'LPA ERROR '        ERROR LABEL                      25980602
LPAEND   EQU   *                                                        25982602
ZAPSPACE DS    20F                     AREA FOR TEMPORARY FIXES         25983303
         EJECT                                                          26000000
**********************************************************************  26050000
R0       EQU   0                       CROSS REFERENCE EQUATE           26060002
INREG1   EQU   R0                      INPUT REG WITH ADDR OF PROGNAME  26100002
R1       EQU   1                       CROSS REFERENCE EQUATE           26110002
INREG2   EQU   R1                      INPUT REG WITH ENTRY POINT       26150002
WKREG1   EQU   R1                      WORK REGISTER                    26152002
R2       EQU   2                       CROSS REFERENCE EQUATE           26160002
WKREG2   EQU   R2                      WORK REGISTER                    26200002
R3       EQU   3                       CROSS REFERENCE EQUATE           26210002
CVTREG   EQU   R3                      INPUT REG WITH CVT ADDR          26250002
WKREG3   EQU   R3                      WORK RETISTER                    26260002
R4       EQU   4                       CROSS REFERENCE EQUATE           26270002
TCBREG   EQU   R4                      INPUT REG WITH TCB ADDR          26300002
R5       EQU   5                       CROSS REFERENCE EQUATE           26310002
RBREG    EQU   R5                      INPUT REG WITH RB ADDR           26350002
R6       EQU   6                       CROSS REFERENCE EQUATE           26400002
BASEREG  EQU   R6                      BASE REG                         26460002
R7       EQU   7                       CROSS REFERENCE EQUATE           26470002
WKREG5   EQU   R7                      WORK REG 1                       26500002
ASCBREG  EQU   R7                      CONTAINS ASCB FOR GETMAIN        26510002
R8       EQU   8                       CROSS REFERENCE EQUATE           26520002
WKREG4   EQU   R8                      WKREG 4                          26550002
XLREG    EQU   R8                      EXTENT LIST REGISTER (TEMP)      26560002
SDWAREG  EQU   R8                      ADDRESS OF SDWA                  26562002
R9       EQU   9                       CROSS REFERENCE EQUATE           26570002
PNREG    EQU   R9                      WORKING REG FOR INPUT REG 1      26610002
ROURETRG EQU   R9                      WORK REGISTER                    26650002
R10      EQU   10                      CROSS REFERENCE EQUATE           26660002
X2       EQU   R10                     CONTAINS INPUT IN REG 1          26670002
R11      EQU   11                      CROSS REFERENCE EQUATE           26710002
TLLSREG  EQU   R11                     TEMP. LLE POINTER                26760002
R12      EQU   12                      CROSS REFERENCE EQUATE           26810002
CDEREG   EQU   R12                     CD ENTRY ADDR                    26950002
R13      EQU   13                      CROSS REFERENCE EQUATE           27000002
SAVEREG  EQU   R13                     SAVE AREA REGISTER               27010002
R14      EQU   14                      CROSS REFERENCE EQUATE           27020002
RETREG   EQU   R14                     RETURN REG                       27050002
R15      EQU   15                      CROSS REFERENCE EQUATE           27100002
CODEREG  EQU   R15                     OUTPUT REG                       27150002
         EJECT                                                          27200000
********************************************************************    27250000
CODEUN   EQU   X'04'             UNNECESSARY-IDENTIFY CODE              27300000
CODEANEQ EQU   X'08'             MULTIPLE-NAME-FOUND - ERROR CODE       27350000
CODENGEP EQU   X'0C'             ENTRY-POINT-INVALID - ERROR CODE       27400000
CODENPRB EQU   X'10'             RB NOT PRB - ERROR CODE                27450000
CODEBADM EQU   X'14'             MINOR-FOUND,EP'S-NOT-EQ - ERROR CODE   27500000
ILIST    EQU   X'18'             INVALID INPUT LIST - ERROR             27550000
IPARM    EQU   X'1C'             INVALID INPUT PARM. - ERROR            27600000
CODSYSER EQU   X'24'             UNEXPECTED SYSTEM ERROR                27650002
CODEFET  EQU   X'28'             FETCH-PROTECTED STORAGE       @ZA28584 27670003
         EJECT                                                          27700000
N0       EQU   0                  EQUATE FOR ZERO                       27800000
N1       EQU   1                  EQUATE FOR 1                          27850000
N2       EQU   2                  USED TO SHIFT IN MULTIPLY AOS         27900000
N3       EQU   3                  EQUATE FOR 3 BYTES                    27950000
N4       EQU   4                  EQUATE FOR 4 BYTES                    28050000
N7       EQU   7                  3 BYTE MASK                           28100000
N8       EQU   8                  OFFSET INTO EXLIST                    28200000
NAME     EQU   8                  MAX. LENGTH OF AOS NAMES              28250000
EQUAL    EQU   8                  USED TO TEST CONDITION CODES          28300000
N9       EQU   9                  LENGTH OF BASE OF XTLST               28310002
MSGLEN   EQU   10                      LENGTH OF ERROR MESSAGES         28320002
N12      EQU   12                 OFFSET IN XLIST                       28350000
EXTLST   EQU   12                 OFFSET TO THE LENGTH OF LIST          28400000
EXTLSTB  EQU   EXTLST-1           OFFSET TO THE LENGTH OF LIST          28450000
N15      EQU   15                 OFFSET INTO AOS LOADER LIST           28500000
N16      EQU   16                 XLIST OFFSET                          28550000
N20      EQU   20                 XLIST OFFSET                          28600000
N24      EQU   24                 USED FOR 3 BYTE SHIFT                 28610002
N29      EQU   29                 PARM LIST OFFSET                      28650000
N30      EQU   30                 PARM LIST OFFSET                      28700000
N256     EQU   256                     LENGTH OF MAX. MOVE     @ZA26742 28705003
REGSAVE  EQU   72                 LENGTH OF REGISTER SAVE AREA          28710002
HIBIT    EQU   X'80'              CHECK ALPA CHAR                       28750000
NAMEFND  EQU   X'80'              NAME FOUND- DUPLICATE REQ.            28760002
MAX      EQU   X'FF'              MAXIMUM VALUE FOR 1 BYTE              28770002
MAXLNTH  EQU   X'FFF'                  MAXIMUM VALUE FOR LA    @ZA26742 28771003
         EJECT                                                 @ZA26742 28772003
************************************************************** @ZA26742 28773003
*        DSECT FOR IDENTIFY LIST                               @ZA26742 28774003
************************************************************** @ZA26742 28775003
         SPACE 2                                               @ZA26742 28776003
IDLIST   DSECT                                                 @ZA26742 28777003
IDENTRY  DS    F                       ENTRY POINT ADDRESS     @ZA26742 28778003
IDNAME   DS    CL8                     8-BYTE NAME             @ZA26742 28779003
*                                                              @ZA26742 28780003
*        THE FOLLOWING DESCRIBES EITHER A BLOCK LOAD OR A      @ZA26742 28781003
*        SCATTER LOAD EXTENT LIST.  A BLOCK LOAD HAS BUT ONE   @ZA26742 28782003
*        EXTENT, A SCATTER LOAD COULD HAVE MULTIPLE EXTENTS.   @ZA26742 28783003
*                                                              @ZA26742 28784003
IDXLNTH  DS    F                       LENGTH OF EXTENT LIST   @ZA26742 28785003
*                                      (X'10' FOR BLOCK LOAD)  @ZA26742 28786003
IDXNUM   DS    F                       NUMBER OF EXTENTS       @ZA26742 28787003
*                                      (1 FOR BLOCK LOAD)      @ZA26742 28788003
IDXTNT   DS    0F                      START OF EXTENT LIST    @ZA26742 28789003
*        EACH WORD CONSISTS OF A FLAG BYTE AND A 3 BYTE EXTENT @ZA26742 28790003
*        LENGTH - A X'80' IN THE FLAG BYTE INDICATES THE LAST  @ZA26742 28791003
*        EXTENT.  A START ADDRESS FOR EACH EXTENT FOLLOWS THE  @ZA26742 28792003
*        LAST  EXTENT LENGTH WORD.                             @ZA26742 28793003
         EJECT                                                          28800000
************************************************************** @ZA26742 28800703
*        DSECT FOR FRR PARAMETER                               @ZA26742 28801403
************************************************************** @ZA26742 28802103
         SPACE 2                                               @ZA26742 28802803
PARMAD   DSECT                                                 @ZA26742 28803503
PARMSVRB DS    F                       SVRB ADDRESS            @ZA26742 28804203
PARMBASE DS    F                       BASE ADDRESS OF ID00    @ZA26742 28804903
PARMGETM DS    F                       GETMAIN AREA ADDRESS    @ZA26742 28805603
PARMGETL DS    H                       GETMAIN LENGTH          @ZA26742 28806303
PARMFLAG DS    B                       FLAG BYTE               @ZA26742 28807003
PARMFTCH EQU   X'04'                   FETCH PROTECT FLAG      @ZA26742 28807703
PARMGTMN EQU   X'02'                   INDICATE AREA ALLOC     @ZA26742 28808403
         EJECT 1                                               @ZA26742 28809103
********************************************************************    28810002
         IHACDE                                                         28820002
CDEEND   EQU   *                       END OF CDE MAP                   28830002
CDENTPTZ EQU   CDENTPT-CDENTRY         EQUATE FOR ENTRY POINT           28840002
CDESIZE  EQU   CDEEND-CDENTRY          SIZE OF CDE                      28842002
         EJECT                                                          28846002
********************************************************************    28850000
         CVT   DSECT=YES,PREFIX=NO                                      28900000
         EJECT                                                          29050000
*********************************************************************   29050402
         IHAFRRS                                                        29050802
         EJECT                                                          29051202
********************************************************************    29052002
         IHALLE                                                         29054002
         EJECT                                                          29056002
********************************************************************    29058002
         IHAXTLST                                                       29058103
         EJECT                                                          29058203
********************************************************************    29058303
         IHAPSA                                                         29058402
         EJECT                                                          29058802
********************************************************************    29060002
         IHAQVPL                                                        29062002
QVRSIZE  EQU   QVPLSIZE+QVPLWASZ+REGSAVE   SIZE NEEDED FOR QV RTN.      29064002
********************************************************************    29068002
         IHARB                                                          29070002
RBPRBF   EQU   RBFTP                   TEST FOR PRB TYPE                29080002
         EJECT                                                          29090002
*********************************************************************   29092002
         IHASDWA                                                        29094002
         EJECT                                                          29096002
********************************************************************    29100000
         IKJTCB                                                         29150000
         END                                                            30200000
CLR8291 DUPLICATE ENTRY FOR SEQUENCE # 004891                           30250003
CLR8291 DUPLICATE ENTRY FOR SEQUENCE # 004894                           30300003
CLR8291 DUPLICATE ENTRY FOR SEQUENCE # 004897                           30350003
./  ADD  SSI=80060109,NAME=IEAVLK00
         TITLE  '           IEAVLK00 COMMENTARY'                        00187202
* /* START OF SPECIFICATIONS ****                                       00187402
*                                                                       00187602
*01*  MODULE-NAME = IEAVLK00 ( VS2 )                                    00187802
*                                                                       00188002
*01*  DESCRIPTIVE-NAME = PROGRAM MANAGER MODULE 1 OF 4                  00188202
*                                                                       00188402
*01*  COPYRIGHT = NONE                                                  00188602
*                                                                       00188702
*01*  STATUS = VERSION 2                                                00188802
*                                                                       00188902
*01*  CHANGE-ACTIVITY = YO27758, YO2753, ZA02572, ZA02730 - RELEASE2    00189003
*                       RELEASE 3 - ZA10799                             00189140
*                       OZ16851 - SEE LABEL LOXLBLD            @ZA16851 00189240
*                       OZ17747 - SEE LABELS NOWTP AND BRANCHOU@ZA17747 00189340
*                       OZ17747 - SEE LABEL FREEWORK           @ZA17747 00189440
*                       OZ20311 - GET AND FREE LOCAL LOCK      @ZA20311 00189540
*                       OZ18512 - ALLOW FOR TWO BYTE EBCDIC REASON      00189640
*                                 CODE IN MESSAGE              @ZA18512 00189740
*                       OZ28684 - RESTORE REASON CODE AFTER FREEMAINS   00189940
*                                 ARE DONE FOR THE ERRET OPTION@ZA28684 00190140
*                                                                       00190340
*01*  FUNCTION = THIS MODULE CONTAINS THE DESCRIPTION AND CODE FOR      00190440
*              LINK   SVC 6   ENTER AT IGC006                           00190540
*              XCTL   SVC 7   ENTER AT IGC007                           00190640
*              LOAD   SVC 8   ENTER AT IGC008                           00190940
*              DELETE SVC 9   ENTER AT IGC009                           00191240
*              SYNCH  SVC 12  ENTER AT IGC012                           00191502
*        THE SERVICE ROUTINES ABOVE RECEIVE CONTROL FROM THE SVC FIRST  00200002
*        LEVEL INTERRUPT HANDLER. EACH ROUTINE IS ENTERED WITH THE      00208502
*        LOCAL LOCK, AND                                                00210502
*        HOLDS THE LOCAL LOCK IN MOST SECTIONS OF CODE IN THIS MODULE.  00217002
*                                                                       00225502
*        ADDITIONAL CODE IS INCLUDED TO                                 00234002
*              PERFORM LINK FUNCTION FOR ATTACH.                        00242502
*                                      ENTER AT IEAQCS01                00251002
*              RESTART A REQUEST THROUGH LINK.                          00259502
*                                      ENTER AT IEAQCS02 (CDCONTRL)     00268002
*              START THE NEXT REQUEST ON A SERIALLY REUSABLE PROGRAM    00276502
*                                      ENTER AT IEAQCS03 (CDEPILOG)     00285002
*              INTERFACE WITH BLDL AND FETCH                            00293502
*                                      BRANCH TO IEAVLK01               00302002
*                                                                       00310502
*01*  NOTES = THE FOLLOWING IS A DESCRIPTION OF THE DEPENDENCIES,       00319002
*     CONVENTIONS, AND FUNCTIONS OF IEAVLK00                            00327502
*                                                                       00336002
*02*    CHARACTER-CODE-DEPENDENCIES = IEAVLK00 IS EBCDIC CHARACTER CODE 00344502
*       DEPENDENT. INSTRUCTIONS WITH DEPENDENCIES ARE PRECEDED WITH THE 00353002
*       FOLLOWING COMMENT.                                              00361502
*                                                                       00370002
*           THE NEXT INSTRUCTION IS EBCDIC CHARACTER CODE DEPENDENT.    00378502
*                                                                       00387002
*02*    DEPENDENCIES = NONE                                             00395502
*                                                                       00397502
*02*    PERFORMANCE = THE FOLLOWING IS A FUNCTIONAL DESCRIPTION OF      00404002
*       IGC006.  REFERENCES TO IEAVLK01  ARE INCLUDED TO CLARIFY THE    00412502
*       ORDER OF SEARCHES.  PLEASE REFER TO THE SPECIFICATIONS IN       00421002
*       IEAVLK01 FOR ADDITIONAL INFORMATION.                            00429502
*                                                                       00438002
*        1. VALIDITY CHECK RESOURCES (ENTRY POINT NAME, PARAMETER       00446502
*           LISTS, ETC.) PRIOR TO MAIN LINE PROCESSING                  00455002
*        2. PERFORM THE LINKAGE TO THE MODULE WHOSE ENTRY POINT NAME    00472002
*           HAS BEEN SPECIFIED IN THE MACRO INSTRUCTION.                00480502
*        3. IN PERFORMING THE LINKAGE A SPECIFIC ORDER IS FOLLOWED      00489002
*           IN SEARCHING FOR AND DETERMINING THE LOAD MODULE TO         00497502
*           WHICH LINKAGE IS DESIRED.                                   00506002
*              A. THE CONTENTS DIRECTORY ENTRIES (CDES) FOR LOAD        00514502
*                 MODULES CONTAINED IN THE JOB PACK AREA ARE            00523002
*                 SEARCHED FOR AN ENTRY CONTAINING THE SPECIFIED        00531502
*                 ENTRY POINT NAME (IN IEAVLK00).                       00540002
*              B. IF THE DCB OPERAND WAS WRITTEN IN THE MACRO           00548502
*                 INSTRUCTION, THE SPECIFIED LIBRARY IS SEARCHED        00557002
*                 ( IN IEAVLK01).                                       00565502
*              C. IF THE DCB OPERAND WAS OMITTED IN THE MACRO           00574002
*                 INSTRUCTION, THE JOB LIBRARIES FOR ASCENDING          00582502
*                 ORIGINATING TCB'S (IF JOB LIBS EXIST) ARE SEARCHED    00591002
*                 UNTIL THE JOBSTEP TCB'S JOBLIB IS SEARCHED (IN        00599502
*                 IEAVLK01)                                             00608002
*              D. THE CONTENTS DIRECTORY ENTRIES FOR LOAD MODULES       00616502
*                 CONTAINED IN THE ACTIVE LINK PACK AREA ARE SEARCHED   00625002
*                 FOR AN ENTRY CONTAINING THE SPECIFIED ENTRY POINT     00633502
*                 NAME, VIA CDSEARCH IN IEAVLK00.                       00642002
*              E. THE PAGEABLE LINK PACK AREA IS SEARCHED VIA           00693002
*                 IEAVVMSR IN IEAVLK00.                                 00701502
*              F. THE LINK LIBRARY IS SEARCHED IN IEAVLK01.             00710002
*                                                                       00718502
*        IF THE DE OPERAND, INSTEAD OF THE EP OR EPLOC OPERAND WAS      00727002
*        SPECIFIED IN THE MACRO INSTRUCTION, THE CONTENTS DIRECTORY     00735502
*        AND THE LIBRARIES ARE SEARCHED AS FOLLOWS.                     00744002
*                                                                       00752502
*              A. THE CONTENTS DIRECTORY ENTRIES FOR LOAD MODULES       00761002
*                 CONTAINED IN THE JOB PACK AREA ARE SEARCHED, VIA      00769502
*                 CDSERACH IN IEAVLK00.                                 00778002
*              B. IF THE SPECIFIED DIRECTORY ENTRY IS FOR A LOAD        00786502
*                 MODULE CONTAINED IN THE LINK LIBRARY, THE CONTENTS    00795002
*                 DIRECTORY ENTRIES FOR THE ACTIVE LINK PACK AREA       00803502
*                 ARE SEARCHED IN IEAVLK00.                             00812002
*              C. THE PAGEABLE LINK PACK AREA IS SEARCHED IN IEAVLK01   00820502
*              D. IF THE DCB OPERAND WAS WRITTEN THE LOAD MODULE IS     00829002
*                 FETCHED FROM THE LIBRARY IT SPECIFIES, IN IEAVLK01.   00837502
*              E. IF THE DCB OPERAND WAS OMITTED, THE 'Z-BYTE' IN THE   00846002
*                 DIRECTORY ENTRY WILL INDICATE WHETHER THE JOBLIB,     00854502
*                 LINKLIB, OR TASKLIB DCB SHOULD BE USED TO FETCH THE   00863002
*                 MODULE (IN IEAVLK01).                                 00871502
*                                                                       00880002
*        4. IN PERFORMING THE LINKAGE THE FOLLOWING WILL OCCUR:         00897002
*                                                                       00905502
*              A PROGRAM REQUEST BLOCK (PRB) WILL BE CREATED.           00914002
*                THE FOLLOWING FIELDS WILL BE SET                       00922502
*                   RBSIZE   - NUMBER OF DOUBLE WORDS                   00931002
*                   RBTCBNXT - SET IN RB WHICH POINTS TO THE TCB        00939502
*                   RBFDYN   - SET TO 1, RB IS DYNAMIC, AND SO CAN      00948002
*                              BE FREED UPON EXIT.                      00956502
*                   RBCDE    - POINTER TO THE CONTENTS DIRECTORY        00965002
*                              ENTRY.                                   00973502
*                   RBOPSW   - SYSTEM MASK, PROTECTION KEY, PROBLEM     00982002
*                              STATE, PROGRAM MASK, ALL ARE PROP-       00990502
*                              OGATED FROM THE PREVIOUS LINKAGE         00999002
*                              FOR LINK, LOAD, AND XCTL. FOR ATTACH     01007502
*                              KEY AND STATE ARE TCB DEFINED, ALL       01016002
*                              MASKS ARE SET ENABLED.                   01024502
*                   RBPGMQ   - WILL CONTAIN A QUEUE POINTER, FOR        01033002
*                              SERIALLY REUSABLE ROUTINES.              01041502
*                   RBWCF    - ZERO WAIT COUNT                          01050002
*                   RBLINK   - CHAIN FIELD THROUGH WHICH THE RBS ARE    01058502
*                              QUEUED TO THE TCB. IF RBTCBNXT IS 1,     01067002
*                              THIS IS THE TCB ADDRESS.                 01075502
*                                                                       01084002
*           A CONTENTS DIRECTORY ENTRY WILL BE CREATED IF THE           01092502
*           REQUIRED LOAD MODULE WAS NOT IN VIRTUAL STORAGE, OR DID     01101002
*           NOT HAVE REUSABLE ATTRIBUTES, OR WAS FOUND IN THE LPA       01109502
*           DIRECTORY.                                                  01118002
*                                                                       01126502
*           WHEN A LOAD MODULE IS LOADED INTO VIRTUAL STORAGE AN        01135002
*           ENTRY POINT NAME IS PLACED IN THE CONTENTS DIRECTORY, AND   01143502
*           ITS ATTRIBUTES ARE EXAMINED. OF INTEREST ARE THE            01152002
*           FOLLOWING ATTRIBUTES:                                       01160502
*              REUSABILITY - TO ESTABLISH HOW SUBSEQUENT REQUESTS FOR   01169002
*                 THE SAME MODULE MAY BE SATISFIED.                     01177502
*              LIBRARY SOURCE - TO DETECT LINK LIBRARY MODULES THAT     01186002
*                 ARE REENTERABLE, AND USE THEM ACROSS JOB STEPS.       01194502
*              IN TEST - DETECT A MODULE RUNNING UNDER TESTRAN.         01203002
*              ALIAS - DETECT THAT A MODULE HAS MORE THAN ONE ENTRY     01211502
*                 NAME, AND POSSIBLY MORE THAN ONE ENTRY POINT.         01220002
*                 AVOID HAVING THIS TYPE OF MODULE MORE THAN ONCE       01228502
*                 IF POSSIBLE.                                          01237002
*                                                                       01245502
*        5. FETCHING MODULES INTO ONE OF THE TWO PACK AREAS WILL BE     01254002
*           DONE ACCORDING TO ATTRIBUTES. REENTRANT MODULES FROM        01262502
*           VARIOUS LIBRARIES WILL HAVE BEEN PLACED IN THE PAGEABLE     01271002
*           LINK PACK AREA BY NIP. (NUCLEUS INITIALIZATION.)            01279502
*           ALL OTHERS WILL BE PLACED INTO VARIOUS JOB PACK AREAS       01288002
*           BY IEAVLK01.                                                01296502
*              ANY ADDITION TO THE ACTIVE LINK PACK AREA WILL BE        01305002
*              REFLECTED IN THE LINK PACK AREA CONTROL QUEUE, WHICH IS  01313502
*              A COLLECTION OF CONTENTS DIRECTORY ENTRIES DESCRIBING    01322002
*              ALL ACTIVE,MODIFIED, AND FIXED LOAD MODULES IN THE LINK  01330502
*              PACK AREA. THE ADDRESS OF BOTH THE LPA QUEUE AND THE     01339002
*              PAGED LINK PACK DIRECTORY ARE FOUND IN THE CVT.          01347502
*              ANY ADDITIONS TO THE JOB PACK AREA WILL BE REFLECTED     01356002
*              IN A JOB PACK AREA CONTROL QUEUE, WHICH IS A             01364502
*              COLLECTION OF CONTENTS DIRECTORY ENTRIES DESCRIBING      01373002
*              ALL LOAD MODULES IN THE JOB PACK AREA FOR A JOB STEP.    01381502
*              THE ORIGIN FOR A JPAQ IS A JOB STEP TCB.                 01390002
*                                                                       01398502
*        6. SHARING OF LOAD MODULES IN ACCORDANCE WITH REUSABILITY      01407002
*           ATTRIBUTES IS ACCOMPLISHED IN THE FOLLOWING MANNER:         01415502
*                                                                       01424002
*              REENTERABLE FROM LINK PACK AREA - A SINGLE COPY OF       01432502
*                 A LOAD MODULE CAN BE USED BY ALL JOB STEPS IN         01441002
*                 THE SYSTEM.                                           01449502
*                                                                       01458002
*              REENTERABLE FROM THE JOB PACK AREA - A SINGLE COPY       01466502
*                 IN THE JOB PACK AREA MAY BE USED BY ALL STEPS         01475002
*                 WITHIN THE JOB STEP.                                  01483502
*                                                                       01492002
*              SERIAL REUSABLE FROM ANYWHERE - A SINGLE COPY WILL       01500502
*                 RESIDE IN THE JOB PACK AREA, AND MAY BE USED BY ALL   01509002
*                 TASKS OF THE JOBSTEP.  THE USE OF THE MODULE IS       01517502
*                 SERIALIZED BY QUEUING THE REQUESTS BY PRIORITY.       01526002
*                                                                       01534502
*              NOT REUSABLE FROM ANYWHERE - EVERY LINKAGE WILL FETCH    01543002
*                 A NEW COPY OF THE MODULE INTO THE JOB PACK AREA.      01551502
*                                                                       01560002
*        7. FOR TSO MODULES IN TEST, THE TTSAVE MODULE WILL BE          01568502
*              INVOKED VIA AN SVC CALL IN IEAVLK01.                     01577002
*                                                                       01585502
*02*    RESTRICTIONS = NONE                                             01594002
*                                                                       01596002
*02*    REGISTER-CONVENTIONS = THE REGISTER CONVENTIONS USED BY         01602502
*       IEAVLK00 ARE DESCRIBED UNDER THE TOPIC REGISTER EQUATES.        01611002
*                                                                       01619502
*02*    PATCH-LABEL = THIS MODULE IS RESIDENT NUCLEUS, AND HAS NO PATCH 01628002
*       SPACE.                                                          01636502
*                                                                       01645002
*01*  MODULE-TYPE = MODULE                                              01653502
*                                                                       01662002
*02*    PROCESSOR = ASSEMBLER                                           01670502
*                                                                       01679002
*02*    MODULE-SIZE = 3250 BYTES                                        01687502
*                                                                       01696002
*02*    ATTRIBUTES = REENTERABLE                                        01704502
*                                                                       01713002
*01*  ENTRY = IGC006                                                    01721502
*                                                                       01730002
*02*    PURPOSE = LINK SVC ENTRY, FUNCTION AS IN NOTES ABOVE.           01738502
*                                                                       01747002
*02*    LINKAGE = SVC                                                   01755502
*                                                                       01764002
*02*    INPUT = PSW ENABLED, SUPERVISOR STATE, PROTECT KEY OF ZERO      01774002
*       LOCKS HELD: LOCAL                                               01784002
*       REGISTERS ARE:                                                  01791502
*              3  - CVT ADDRESS                                         01798002
*              4  - CURRENT TCB ADDRESS                                 01806502
*              5  - CURRENT RB ADDRESS                                  01815002
*              15  - ADDRESS OF PARAMETER LIST IN FOLLOWING FORMAT:     01823502
*                     AL1(FLAG)        FLAG IS X'80' FOR DE FORM,       01832002
*                                      IS X'00' FOR EP AND EPLOC.       01840502
*                     AL3(ADDR1)       ADDRESS OF ENTRY POINT NAME,     01849002
*                                      OR DE, FLAG DENOTES WHICH.       01857502
*                     AL1(FLAG)        FLAG IS X'80' IF PARAMETER       01859502
*                                      LIST IS EXTENDED TO A THIRD      01861502
*                                      WORD,  IS X'00' IF PARAMETER     01863502
*                                      LIST IS ONLY TWO WORDS.          01865502
*                     AL3(ADDR2)       ADDRESS OF DCB. IS ZERO IF       01866002
*                                      NO DCB WAS SPECIFIED.            01874502
*                                      FIRST BYTE IS IGNORED, NOW       01883002
*                                      UNSUPPORTED LCS OPTION BYTE.     01891502
*                     AL4(ADDR3)       ADDRESS OF ERRET ROUTINE.        01893502
*                   OTHER REGISTERS IRRELEVANT                          01900002
*                                                                       01908502
*02*    OUTPUT = LINKAGE ASSISTED.                                      01917002
*        REGISTERS ARE:                                                 01925502
*              14 - RETURN ADDRESS (POINTS TO AN SVC 3 )                01934002
*              15 - ENTRY POINT ADDRESS LINKED TO                       01942502
*              0  - CHANGED                                             01951002
*                   OTHER REGISTERS ARE TRANSPARENT                     01959502
*                                                                       01968002
*02*    EXIT-NORMAL = TO ROUTINE TO BE LINKED TO VIA EXIT PROLOGUE      01976502
*        OR - TO WAIT IF REQUEST WAS QUEUED                             01985002
*        OR - TO MODULE IEAVLK01 TO PERFORM BLDL - FETCH INTERFACES     01993502
*             FOR A MODULE NOT FOUND DURING CDSEARCH OR NOT REUSABLE    02002002
*             WHEN TESTED IN CDALLOC.                                   02010502
*                                                                       02019002
*02*    EXIT-ERROR = TO ABEND WITH CODES AS FOLLOWS                     02027502
*        106 - ISSUED BY IEAVLK01 FOR FETCH ERROR                       02036002
*              REGISTER 15 HAS   E - AN INVALID ADDRESS WAS DETECTED    02044502
*                                F - I/O ERROR OCCURED                  02053002
*        206 - PARAMETER LIST ERROR DETECTED BY IEAVLK00                02061502
*              REGISTER 15 HAS   1 - LIST ADDRESS ERROR                 02070002
*                                2 - NAME/DE ADDRESS ERROR              02078502
*                                3 - DE SIZE EROOR                      02087002
*        306 - AUTHORIZED ROUTINE ATTEMPTED TO USE A NON-AUTHORIZED     02089002
*              LIBRARY MODULE.                                          02091002
*        406 - ISSUED BY IEAVLK00 AND IEAVLK01 TO INDICATE THAT AN      02095502
*              ATTACH, XCTL,OR LINK WAS ISSUED TO A LOADABLE ONLY       02104002
*              MODULE.                                                  02112502
*        706 - ISSUED BY IEAVLK01 TO INDICATE THAT A MODULE WAS         02138002
*              MARKED NOT EXECUTABLE BY THE LINKAGE EDITOR.             02146502
*        806 - MODULE NOT FOUND BY IEAVLK00 OR IEAVLK01                 02155002
*              REGISTER 15 HAS   4 - MODULE NOT IN SPECIFIED PDS        02163502
*                                8 - I/O ERROR DURING BLDL              02172002
*                               12 - MODULE NOT IN LPA OR LPA           02180502
*                                        DIRECTORY                      02189002
*                              16 - DCB FOR BLDL NOT OPEN     @ZA18512  02193040
*        906 - ISSUED BY IEAVLK00 TO INDICATE THAT A LLE COUNT          02197502
*              OR A CDE COUNT EXCEEDED X'7FFF'.                         02206002
*        A06 - ISSUED BY IEAVLK00 TO INDICATE THAT AN INTERLOCK         02214502
*              WAS DETECTED IN THE USE OF A SERIALLY REUSABLE MODULE    02223002
*                                                                       02231502
*01*  ENTRY = IGC007                                                    02240002
*                                                                       02248502
*02*    PURPOSE = XCTL SERVICE ROUTINE                                  02257002
*        1. PERFORM THE LINKAGE TO THE LOAD MODULE SPECIFIED. THE       02265502
*           MODULE GIVEN CONTROL EXECUTES AT THE SAME LEVEL OF          02274002
*           CONTROL AS THE MODULE ISSUING THE XCTL MACRO INSTRUCTION    02282502
*        2. THE ORDER OF SEARCH OF LISTS AND LIBRARIES IS THE SAME AS   02291002
*           FOR IGC006.                                                 02299502
*        3. THE PRB AND CDENTRY ARE CREATED AND UPDATED AS FOR IGC006.  02308002
*        4. FETCHING AND PACKING IS DONE AS FOR LINK.                   02316502
*        5. CHANGE THE RB ADDRESS IN THE STAE CONTROL BLOCK             02325002
*           IS DONE BY THE TASK RECOVERY RESOURCE MANAGER (TRRM).       02352502
*        6. FOR TYPE 4 SVC'S THE CURRENT SVRB WILL BE RECLAIMED DURING  02359002
*           PROCESSING.                                                 02367502
*                                                                       02376002
*02*    LINKAGE = SVC                                                   02412002
*                                                                       02414002
*02*    INPUT = PSW ENABLED, SUPERVISOR STATE, PROTECT KEY OF ZERO      02416002
*       LOCKS HELD: LOCAL                                               02416402
*        REGISTERS ARE:                                                 02418402
*              3  - CVT ADDRESS                                         02425502
*              4  - CURRENT TCB ADDRESS                                 02435502
*              5  - CURRENT RB ADDRESS                                  02445502
*             15  - ADDRESS OF PARAMETER LIST IN FOLLOWING FORMAT:      02445602
*                     AL1(FLAG)        FLAG IS X'80' FOR DE FORM,       02445702
*                                      IS X'00' FOR EP AND EPLOC.       02447902
*                     AL3(ADDR1)       ADDRESS OF ENTRY POINT NAME,     02449902
*                                      OR DE, FLAG DENOTES WHICH.       02451902
*                     AL4(ADDR2)       ADDRESS OF DCB. IS ZERO IF       02452302
*                                      NO DCB WAS SPECIFIED.            02452402
*                                      FIRST BYTE IS IGNORED, NOW       02454102
*                                      UNSUPPORTED LCS OPTION BYTE.     02456102
*                   OTHER REGISTERS IRRELEVANT                          02456502
*                                                                       02456902
*02*    OUTPUT = SAME AS IGC006                                         02457602
*                                                                       02459302
*02*    EXIT-NORMAL = SAME AS IGC006                                    02461002
*                                                                       02467102
*02*    EXIT-ERROR = SAME AS IGC006                                     02474202
*                                                                       02481302
*01*  ENTRY = IGC008                                                    02488402
*                                                                       02495502
*02*    PURPOSE = SVC LOAD ENTRY POINT                                  02502602
*        1. ACQUIRE A SPECIFIED LOAD MODULE AND RETAIN THE MODULE FOR   02509702
*           USE BY THE TASK ISSUING THE LOAD.                           02516802
*        2. SEARCHES AS IN IGC006.                                      02523902
*        3. DURING THE TIME THAT A MODULE IS RETAINED BY THE REQUESTING 02531002
*           TASK, THE TASK IS SAID TO BE RESPONSIBLE FOR THE MODULE.    02538102
*           A TWELVE BYTE LOAD LIST ELEMENT IS CREATED FOR EACH MODULE  02545202
*           RETAINED BY A TASK. THIS LOAD LIST ELEMENT WILL POINT TO    02552302
*           THE CDE DESCRIBING THE MODULE.                              02559402
*        4. A MODULE THAT IS LOADED WILL CAUSE THE USE COUNT IN THE     02566502
*           CDE TO BE INCREMENTED. THE COUNT IN THE CDE IS THE TOTAL    02573602
*           USE FOR THE MODULE, IN ALL TASKS OF ALL JOBSTEPS.           02580702
*        5. A RESPONSIBILITY COUNT IS ALSO KEPT IN THE LLE, WHICH IS    02588502
*           INCREMENTED BY LOAD, AND DECREMENTED BY DELETE.  WHEN       02597002
*           A MODULE HAS A USE COUNT OF ZERO IN THE LLE, THE LLE IS     02605502
*           FREED.  WHEN THE CDE COUNT GOES TO ZERO, THE CDE AND ALL    02614002
*           STORAGE ALLOCATED TO THE MODULE IS FREED.                   02622502
*        6. A SYSTEM RESPONSIBILITY COUNT IS ALSO MAINTAINED IN THE     02624502
*           LEE AND IS INCREMENTED ON SYSTEM LOADS AND DECREMENTED ON   02630402
*           SYSTEM DELETION.  THE RESPONSIBILITY COUNT MUST ALWAYS BE   02637502
*           GREATER THAN OR EQUAL TO THE SYSTEM USE COUNT.              02644602
*        7. A LOAD REQUEST IN DISTINCTION TO A LINK REQUEST IS NOT      02651702
*           QUEUED FOR A SERIALLY REUSABLE MODULE.  THE ENTRY POINT     02658802
*           IS RETURNED EVEN IF THE MODULE IS IN USE.                   02665902
*        8. FETCHING IS HANDLED AS FOR IGC006.                          02673002
*                                                                       02680102
*02*    LINKAGE = SVC                                                   02687202
*                                                                       02694302
*02*    INPUT = PSW AS FOR IGC006                                       02701402
*        REGISTERS ARE AS FOLLOWS:                                      02708502
*              0  - ADDRESS OF ENTRY POINT NAME OR                      02715602
*                   ADDRESS OF DE IN COMPLEMENTED FORM.                 02722702
*              1  - DCB ADDRESS OR ZERO.                                02729802
*                   THE HIGH ORDER BIT IS A FLAG WITH THE FOLLOWING     02736902
*                   MEANING:                                            02744002
*                   X'80' - RETURN REQUESTED ON ERROR CONDITION         02751102
*                   X'00' - ABEND ON ERROR CONDITION                    02758202
*              3  - ADDRESS OF CVT                                      02765302
*              4  - ADDRESS OF CURRENT TCB                              02772402
*              5  - ADDRESS OF CURRENT RB                               02779502
*                   OTHER REGISTERS IRRELEVANT                          02786602
*                                                                       02793702
*02*    OUTPUT = REGISTERS ARE AS FOLLOWS:                              02800802
*              0  - ADDRESS OF LOAD MODULE REQUESTED.                   02807902
*              1  - HIGH ORDER BYTE CONTAINS AUTHORIZATION CODE         02815002
*                   LOW ORDER 3 BYTES CONTAIN SIZE OF MODULE IN         02822102
*                   DOUBLE WORDS.                                       02829202
*                                                                       02836302
*02*    EXIT-NORMAL = RETURN TO CALLER VIA EXIT PROLOGUE                02843402
*                                                                       02850502
*02*    EXIT-ERROR = SAME AS FOR IGC006                                 02857602
*                                                                       02864702
*01*  ENTRY = IGC009                                                    02871802
*                                                                       02878902
*02*    PURPOSE = SVC DELETE ENTRY POINT                                02886002
*        2. LOCATE THE NAMED MODULE. IF IT IS FOUND ON THE LOAD LIST    02975802
*           DECREMENT THE LOAD COUNT BY 1.  AND, IF SYSTEM REQUEST      02977002
*           DECREMENT THE SYSTEM RESPONSIBILITY COUNT BY 1.             02977402
*           IF THE COUNT REACHES ZERO FREE THE LLE.  IF THE MODULE      02977802
*           IS NOT FOUND RETURN TO THE CALLER WITH A CODE OF 4 IN       02977902
*           REGISTER 15.                                                02979502
*        3. DECREMENT THE USE COUNT IN THE CDE IF THE MODULE WAS        02983202
*           FOUND.  IF THE COUNT GOES TO                                02984802
*           ZERO, FORCE THE PURGING OF THE MODULE VIA CDE HOUSEKEEPING  02986402
*           ROUTINE.                                                    02988002
*                                                                       02991802
*02*    LINKAGE = SVC                                                   02998402
*                                                                       03005002
*02*    INPUT = PSW AS FOR IGC006                                       03015502
*        REGISTERS ARE AS FOLLOWS:                                      03017502
*              0  - ADDRESS OF ENTRY POINT NAME OR                      03019502
*                   ADDRESS OF DE IN COMPLEMENTED FORM.                 03021502
*              1  - DCB ADDRESS OR ZERO.                                03021902
*              3  - ADDRESS OF CVT                                      03030002
*              4  - ADDRESS OF CURRENT TCB                              03040002
*              5  - ADDRESS OF CURRENT RB                               03040402
*                   OTHER REGISTERS IRRELEVANT                          03042702
*                                                                       03044702
*02*    OUTPUT = REGISTERS ARE SET AS FOLLOWS:                          03047502
*              15 - SET TO 0 IF MODULE FOUND                            03048602
*                   SET TO 4 IF MODULE NOT FOUND                        03056702
*                   OTHER REGISTERS PRESERVED                           03064802
*                                                                       03072902
*02*    EXIT-NORMAL = TO USER WITH EXIT CODES AS ABOVE                  03081002
*                                                                       03089102
*02*    EXIT-ERROR = NONE                                               03097202
*                                                                       03105302
*01*  ENTRY = IGC012                                                    03113402
*                                                                       03121502
*02*    PURPOSE = SVC SYNCH ENTRY POINT                                 03129602
*        1. PROVIDE A SUPERVISOR ROUTINE THE ABILITY TO TAKE A          03137702
*           SYNCHRONOUS EXIT TO A USER SUBROUTINE.                      03145802
*        2. AVOID USING LINK TO ELIMINATE CDES.                         03153902
*        3. ALLOW THE SUPERVISOR ROUTINE THE ABILITY TO REGAIN          03162002
*           CONTROL IN SUPERVISOR MODE, AFTER THE EXIT ROUTINE          03170102
*           COMPLETES IN PROBLEM PROGRAM MODE.                          03178202
*        4. ALLOW STAE THE ABILITY TO SCHEDULE A SYNCHRONOUS EXIT       03186302
*           ROUTINE IN PRIVILEDGED MODE.                                03194402
*                                                                       03202502
*02*    LINKAGE = SVC                                                   03210602
*                                                                       03218702
*02*    INPUT = REGISTERS ARE AS FOLLOWS:                               03226802
*              15 - ENTRY POINT TO GET CONTROL                          03234902
*              3  - ADDRESS OF CVT                                      03243002
*              4  - ADDRESS OF TCB                                      03251502
*              5  - ADDRESS OF RB                                       03260002
*                   OTHER REGISTERS IRRELEVANT                          03268502
*                                                                       03277002
*02*    OUTPUT = REGISTERS AS FOLLOWS :                                 03285502
*              14 - ADDRESS OF AN SVC EXIT                              03294002
*              15 - UNCHANGED (ENTRY POINT)                             03302502
*                   OTHER REGISTERS UNCHANGED                           03311002
*                                                                       03319502
*02*    EXIT-NORMAL = TO ENTRY POINT PASSED IN REGISTER 15 VIA SVC EXIT 03328002
*                                                                       03336502
*02*    EXIT-ERROR = NONE                                               03345002
*                                                                       03353502
*01*  ENTRY = IEAQCS01                                                  03362002
*                                                                       03370502
*02*    PURPOSE = LINK SERVICE FOR ATTACH                               03379002
*                                                                       03387502
*02*    LINKAGE = BRANCH                                                03396002
*                                                                       03404502
*02*    INPUT =                                                         03413002
*                                                                       03438502
*        PSW = ENABLED, KEY 0, SUPERVISOR STATE                         03440502
*        LOCKS HELD = NONE                                              03442502
*        GR0 - ADDRESS OF REQUESTED MODULE NAME OR PDS DE               03444502
*              (COMPLEMENTED)                                           03446502
*        GR1 - ADDRESS OF DCB                                           03446902
*        GR3 - ADDRESS OF CVT                                           03454902
*        GR4 - ADDRESS OF TCB                                           03464902
*        GR5 - ADDRESS OF SVRB                                          03474902
*        GR2,6-15 ARE IRRELEVANT                                        03476902
*        THE MODULE NAME ON EP OR EPLOC OPERANDS WILL BE THE FIRST      03478902
*        WORD OF THE RBXSA (RB EXTENDED SAVE AREA).  ON DE OPERANDS,    03479302
*        ATTACH WILL GETMAIN A SAVE AREA FROM SUBPOOL 255 FOR THE       03479702
*        LENGTH OF THE BLDL ENTRY PLUS 4.  THE SIZE OF THE BLDL ENTRY   03479802
*        IS PLACED IN THE FIRST WORD AND THE BLDL ENTRY FOLLOWS.        03479902
*        REGISTER 0 POINTS TO EITHER THE GOTTEN DE SAVE AREA OF THE     03480202
*        RBXSA.  SEE INPUTS.                                            03480602
*        THE NINTH (9TH) BYTE OF THE RBXSA WILL CONTAIN A CODE AS       03480702
*        FOLLOWS:                                                       03480802
*              X'80' - THE CALLER OF ATTACH IS AN AUTHORIZED ROUTINE.   03480902
*              X'00' - THE CALLER OF ATTACH IS AN UNAUTHORIZED ROUTINE. 03483002
*        THE REGISTERS TO BE PASSED TO THE ATTACHEE ARE STORED IN THE   03485002
*        SVRB REGISTER SAVE AREA.  R13 WILL BE SET BY ATTACH TO A USER  03487002
*        REGISTER SAVE AREA.  R14 AND R15 ARE IRRELEVENT SINCE THEY     03487102
*        WILL BE SET BY PROGRAM MANAGER.                                03487202
*02*    OUTPUT = SAME AS IGC006                                         03487402
*                                                                       03489502
*02*    EXIT-NORMAL = SAME AS IGC006                                    03496002
*                                                                       03504002
*02*    EXIT-ERROR = SAME AS IGC006                                     03512002
*                                                                       03520002
*01*  ENTRY = IEAQCS02                                                  03528002
*                                                                       03536002
*02*    PURPOSE = RESTART A QUEUED REQUEST THROUGH MAINLINE LINK        03544002
*                                                                       03552002
*02*    LINKAGE = BRANCH                                                03560002
*                                                                       03568002
*02*    INPUT = REGISTERS AND FIELDS AS FOLLOWS                         03576002
*              3  - CVT ADDRESS                                         03584002
*              4  - TCB ADDRESS                                         03592002
*              5  - RB ADDRESS                                          03600002
*              6  - BASE ADDRESS                                        03608002
*              8  - CDE QUEUE TO SEARCH                                 03616002
*              9  - ADDRESS OF NAME REQUESTED                           03624002
*              10 - ADDRESS OF DCB OR ZERO                              03632002
*                   OTHER REGISTERS NOT USED                            03640002
*                   SVRB EXTENDED SAVE AREA FULLY INITIALIZED           03648002
*                                                                       03656002
*02*    OUTPUT = SAME AS IGC006                                         03664002
*                                                                       03672002
*02*    EXIT-NORMAL = SAME AS IGC006                                    03680002
*                                                                       03688002
*02*    EXIT-ERROR = SAME AS IGC006                                     03696002
*                                                                       03704002
*01*  ENTRY = IEAQCS03                                                  03712002
*                                                                       03720002
*02*    PURPOSE = RESTART A QUEUED SERIAL REUSABLE REQUEST              03728002
*                                                                       03736002
*02*    LINKAGE = BRANCH                                                03744002
*                                                                       03752002
*02*    INPUT = SAME AS IEAQCS02, AND ALSO:                             03760002
*              11 - ADDRESS OF REQUESTED CDE                            03768002
*              12 - ADDRESS OF MAJOR CDE                                03776002
*                   NOTE - REGS 11 AND 12 ARE EQUAL IF THE REQUEST WAS  03784002
*                          FOR A MAJOR NAME                             03792002
*                                                                       03800002
*02*    OUTPUT = SAME AS IGC006                                         03808002
*                                                                       03816002
*02*    EXIT-NORMAL = SAME AS IGC006                                    03824002
*                                                                       03832002
*02*    EXIT-ERROR = SAME AS IGC006                                     03840002
*                                                                       03848002
*01*  ENTRY = IEAVVMSR                                                  03856002
*                                                                       03864002
*02*    PURPOSE = TO SEARCH THE PAGEABLE LPA DIRECTORY FOR AN LPDE      03872002
*       REPRESENTING THE REQUESTED MODULE                               03880002
*                                                                       03888002
*02*    LINKAGE = BALR                                                  03896002
*                                                                       03904002
*02*    INPUT = REGISTERS AS FOLLOWS                                    03912002
*              0  - LEFT HALF OF NAME                                   03920002
*              1  - RIGHT HALF OF NAME                                  03928002
*              3  - CVT ADDRESS                                         03936002
*              14 - RETURN ADDRESS                                      03944002
*                                                                       03952002
*02*    OUTPUT = REGISTERS AS FOLLOWS                                   03960002
*              0  - LPDE ADDRESS IF FOUND                               03968002
*              6  - ALTERED                                             03976002
*              8  - ALTERED                                             03984002
*              9  - ALTERED                                             03992002
*                   OTHER REGISTERS NOT USED                            04000002
*                                                                       04008002
*02*    EXIT-NORMAL = RETURN IS ON REGISTER 14 + 0 IF LPDE WAS FOUND.   04016502
*       RETURN IS ON REGISTER 14 + 4 IF LPDE WAS NOT FOUND.             04025002
*                                                                       04033502
*02*    EXIT-ERROR = NONE                                               04042002
*                                                                       04050502
*01*  ENTRY = IEAQCDSR                                                  04059002
*                                                                       04067502
*02*    PURPOSE = TO SEARCH A CDE QUEUE FOR A REQUESTED NAME            04076002
*                                                                       04084502
*02*    LINKAGE = BALR                                                  04093002
*                                                                       04101502
*02*    INPUT = REGISTERS AS FOLLOWS                                    04110002
*              8  - ADDRESS OF POINTER TO FIRST CDE ON THE QUEUE        04118502
*              9  - ADDRESS OF NAME                                     04127002
*              14 - RETURN ADDRESS                                      04135502
*                                                                       04144002
*02*    OUTPUT = REGISTERS AS FOLLOWS                                   04152502
*              0  - LEFT HALF OF NAME                                   04161002
*              1  - RIGHT HALF OF NAME                                  04169502
*              11 - CDE ADDRESS OR ZERO                                 04178002
*              15 - ALTERED                                             04186502
*                   OTHER REGISTERS NOT REFERENCED                      04195002
*                                                                       04203502
*02*    EXIT-NORMAL = RETURN IS ON REGISTER 14 + 0 IF CDE WAS FOUND.    04212002
*       RETURN IS ON REGISTER 14 + 4 IF CDE WAS NOT FOUND.              04220502
*                                                                       04229002
*02*    EXIT-ERROR = NONE                                               04237502
*                                                                       04246002
*01*  ENTRY = IEAQCS04                                                  04254502
*                                                                       04263002
*02*    PURPOSE = ENTRY ADDRESS WHICH IS THE START OF THE LIST OF       04271502
*       ADDRESSES WHICH IEAVLK01 USES TO RETURN TO IEAVLK00.            04280002
*                                                                       04288502
*02*    LINKAGE = NONE - THIS IS AN EXTERNAL REFERENCE WHICH IS NOT     04297002
*       EXECUTABLE                                                      04305502
*                                                                       04314002
*02*    INPUT = NONE                                                    04322502
*                                                                       04331002
*02*    OUTPUT = NONE                                                   04339502
*                                                                       04348002
*02*    EXIT-NORMAL = NONE                                              04356502
*                                                                       04365002
*02*    EXIT-ERROR = NONE                                               04373502
*                                                                       04382002
*01*  ENTRY = CDLKBASE                                                  04390502
*                                                                       04399002
*02*    PURPOSE = ADDRESS WHICH IS USED TO RESET THE BASE ADDRESS FOR   04407502
*       IEAVLK00 ON RETURN FROM IEAVLK01                                04416002
*                                                                       04424502
*02*    LINKAGE = NONE. THIS IS A NON-EXECUTABLE ENTRY                  04433002
*                                                                       04441502
*02*    INPUT = NONE                                                    04450002
*                                                                       04458502
*02*    OUTPUT = NONE                                                   04467002
*                                                                       04475502
*02*    EXIT-NORMAL = NONE                                              04484002
*                                                                       04492502
*02*    EXIT-ERROR = NONE                                               04501002
*                                                                       04509502
*01*  ENTRY = CDCONTRL                                                  04518002
*                                                                       04526502
*02*    PURPOSE = TO SEARCH THE LPAQ                                    04535002
*                                                                       04543502
*02*    LINKAGE = BRANCH                                                04552002
*                                                                       04560502
*02*    INPUT = REGISTERS AS FOLLOWS                                    04569002
*              3  - CVT ADDRESS                                         04577502
*              4  - TCB ADDRESS                                         04586002
*              5  - RB ADDRESS                                          04594502
*              6  - BASE ADDRESS                                        04603002
*              8  - QUEUE ORIGIN TO SEARCH                              04611502
*              9  - ADDRESS OF NAME                                     04620002
*              10 - DCB ADDRESS                                         04628502
*                   OTHER REGISTERS NOT REFERENCED                      04637002
*                   SVRB EXTENDED SAVE AREA FULLY INITIALIZED           04645502
*                                                                       04654002
*02*    OUTPUT = SAME AS IGC006                                         04662502
*                                                                       04671002
*02*    EXIT-NORMAL = SAME AS IGC006                                    04679502
*                                                                       04688002
*02*    EXIT-ERROR = SAME AS IGC006                                     04696502
*                                                                       04705002
*01*  ENTRY = CDEMERGE                                                  04713502
*                                                                       04722002
*02*    PURPOSE = TO CLEAN UP BEFORE EXITING FROM IEAVLK00              04730502
*                                                                       04739002
*02*    LINKAGE = BRANCH                                                04747502
*                                                                       04756002
*02*    INPUT = REGISTERS AS FOLLOWS                                    04764502
*              3  - CVT ADDRESS                                         04773002
*              4  - TCB ADDRESS                                         04781502
*              5  - RB ADDRESS                                          04790002
*              6  - BASE ADDRESS                                        04798502
*              11 - REQUESTED CDE                                       04807002
*              12 - MAJOR CDE                                           04815502
*                   OTHER REGISTERS NOT REFERENCED                      04824002
*                   SVRB EXSAVE FULLY INITIALIZED                       04832502
*                                                                       04841002
*02*    OUTPUT = SAME AS IGC006                                         04849502
*                                                                       04858002
*02*    EXIT-NORMAL = SAME AS IGC006                                    04866502
*                                                                       04875002
*02*    EXIT-ERROR = SAME AS IGC006                                     04883502
*                                                                       04892002
*01*  ENTRY = CDQUECTL                                                  04900502
*                                                                       04909002
*02*    PURPOSE = QUEUE AN ALIAS PDS REQUEST FOR IEAVLK01               04917502
*                                                                       04926002
*02*    LINKAGE = BRANCH                                                04934502
*                                                                       04943002
*02*    INPUT = REGISTERS AS FOLLOWS                                    04951502
*              3  - ADDRESS OF CVT                                      04960002
*              4  - TCB ADDRESS                                         04968502
*              5  - RB ADDRESS                                          04977002
*              6  - BASE ADDRESS                                        04985502
*              9  - ADDRESS OF REQUESTED NAME                           04994002
*              10 - DCB ADDRESS                                         05002502
*              11 - REQUESTED CDE                                       05011002
*              12 - MAJOR CDE                                           05019502
*                   OTHER REGISTERS NOT REFERENCED                      05028002
*                   SVRB EXSAVE FULLY INITIALIZED                       05036502
*                                                                       05045002
*02*    OUTPUT = SAME AS IGC006                                         05053502
*                                                                       05062002
*02*    EXIT-NORMAL = SAME AS IGC006                                    05070502
*                                                                       05079002
*02*    EXIT-ERROR = SAME AS IGC006                                     05087502
*                                                                       05096002
*01*  ENTRY = PLUSCONT                                                  05104502
*                                                                       05113002
*02*    PURPOSE = TO CHECK THE USABILITY OF A FOUND MAJOR FROM IEAVLK01 05121502
*                                                                       05130002
*02*    LINKAGE = BRANCH                                                05138502
*                                                                       05147002
*02*    INPUT = REGISTERS AS FOLLOWS                                    05155502
*              0  - LEFT HALF OF NAME                                   05164002
*              1  - RIGHT HALF OF NAME                                  05172502
*              3  - CVT ADDRESS                                         05181002
*              4  - TCB ADDRESS                                         05189502
*              5  - RB ADDRESS                                          05198002
*              6  - BASE ADDRESS                                        05206502
*              8  - ADDRESS OF LAST CDE QUEUE SEARCHED                  05215002
*              9  - ADDRESS OF REQUESTED NAME                           05223502
*              10 - DCB ADDRESS                                         05232002
*              11 - ADDRESS OF REQUESTED CDE                            05240502
*              12 - ADDRESS OF MAJOR CDE                                05249002
*                   OTHER REGISTERS NOT REFERENCED                      05257502
*                   SVRB EXSAVE FULLY INITIALIZED                       05266002
*                                                                       05274502
*02*    OUTPUT = SAME AS IGC006                                         05283002
*                                                                       05291502
*02*    EXIT-NORMAL = SAME AS IGC006                                    05300002
*                                                                       05308502
*02*    EXIT-ERROR = SAME AS IGC006                                     05317002
*                                                                       05325502
*01*  ENTRY = ABNDSET                                                   05334002
*                                                                       05342502
*02*    PURPOSE = TO COMPLETE PROCESSING FOR 106,306,406,706,AND 806    05351002
*       ABENDS                                                          05353002
*       ISSUED FOR IEAVLK01                                             05359502
*                                                                       05368002
*02*    LINKAGE = BRANCH                                                05376502
*                                                                       05385002
*02*    INPUT = REGISTERS AS FOLLOWS                                    05393502
*              6  - BASE ADDRESS                                        05402002
*              13 - ABEND CODE OF (1,3,4,7, OR 8)                       05410502
*              15 - REASON CODE IF 106  806 ABEND 106,306, OR 806       05419002
*                   SVRB EXSAVE FULLY INITIALIZED                       05427502
*                                                                       05436002
*02*    OUTPUT = REGISTERS AS FOLLOWS                                   05444502
*              0  - TCB ADDRESS                                         05453002
*              1  - ABEND CODE                                          05461502
*                                                                       05470002
*02*    EXIT-NORMAL = TO ABEND VIA SVC 13                               05478502
*                                                                       05487002
*02*    EXIT-ERROR = NONE                                               05495502
*                                                                       05504002
*01*  EXTERNAL-REFERENCES = THE FOLLOWING EXTERNAL REFERENCES ARE MADE: 05512502
*                                                                       05521002
*02*    ROUTINES = CDHKEEP,IEAVLK01,WAIT W/O ECB,VALIDITY CHECK         05529502
*                                                                       05538002
*02*    DATA-SETS = NONE                                                05546502
*                                                                       05548502
*02*    DATA-AREA = IEATCBP,IEAQLCT,IEAVVMDI,BLDL/FETCH WORK AREA,DE    05555002
*       SAVE AREA, ABEND MESSAGE BUFFER                                 05563502
*                                                                       05572002
*01*  TABLES = NONE                                                     05580502
*                                                                       05589002
*01*  MACROS = ABEND,FREEMAIN,GETMAIN,IEZBITS,MODID,                    05597502
*     IHAMB,IHACDE,IHALPDE,IHALLE,IHARB,IHAPDS                          05606002
*     IEFTIOT1,IKJTCB,IEZJSCB,CVT,IHAFRRS,SETLOCK,SETFRR,IHAPSA,        05614502
*     IHAASCB,IHAASXB,IHAFETWK,TESTAUTH,WTO,MODESET                     05616502
*                                                                       05623002
**** END OF SPECIFICATIONS ***/                                         05631502
         TITLE  '            IEAVLK00    EXTERNAL REFERENCES'           05640000
         SPACE 2                                                        05642002
*/*IEAVLK00: CHART PROGRAM MANAGER SERVICE ROUTINES */                  05642402
*/* HEADER                                                              05642802
*/*                                                                     05643202
*/*                                                                     05643602
*/*                                                                     05643702
*/*                                                   SECTION 3.1.11    05643802
*/*PROGRAM MANAGER SERVICE ROUTINES                                     05643902
*/*                                                   PAGE # */         05648402
         SPACE 2                                                        05653002
IEAVLK00 CSECT                         CSECT NAME  **** SINGLE CSECT    05657502
         MODID BR=NO                                                    05664002
         ENTRY IGC006                  SVC LINK ENTRY POINT             05672002
         ENTRY IGC007                  SVC XCTL ENTRY POINT             05680000
         ENTRY IGC008                  SVC LOAD ENTRY POINT             05690000
         ENTRY IGC009                  SVC DELETE ENTRY POINT           05700002
         ENTRY IGC012                  SVC SYNCH ENTRY POINT            05710000
         ENTRY CDEPILOG                SVC EXIT BRANCHES HERE TO        05720000
*                                      RESTART A QUEUED REQUEST FOR     05730000
*                                      A SERIALLY REUSABLE MODULE       05740000
         ENTRY IEAQCDSR                ENTRY TO CDE SEARCH ROUTINE      05750000
         ENTRY IEAQCS01                ATTACH  ROUTINE  ENTRY TO LINK   05760000
         ENTRY IEAQCS02                CDCONTRL ENTRY POINT             05770000
         ENTRY IEAQCS03                CDEPILOG ENTRY POINT             05780000
         ENTRY IEAVVMSR                LPDE SEARCH ROUTINE              05790000
         ENTRY IEAQCS04                POINTS TO ADDRESS LIST FOR VLK01 05810000
         ENTRY SYNCR                   ADDR OF FRR ROUTINE RETRY M01978 05830002
         EXTRN IEAQLPAQ                ADDRESS OF LINK PACK AREA QUEUE  05850000
*                                      HEAD POINTER.                    05860000
         EXTRN CDHKEEP                 ROUTINE TO FREE CDES             05870000
         EXTRN IEAVLK01                BLDL FETCH INTERFACE MODULE      05900000
         EXTRN FRRPGMMG                RECOVERY ROUTINE FOR PGM.MGR.    05910002
         TITLE 'IEAVLK00 REGISTER EQUATES'                              05920000
*                                      EQUATES FOR REGISTER 0           05930000
R0       EQU   0                       LM/STM AND INTERFACES            05940000
NAMELEFT EQU   R0                      LEFT HALF OF NAME FOR SEARCHES   05950000
LPDEADDR EQU   R0                      LPDE ADDR RETURNED BY IEAVVMSR   05960000
WKREG0   EQU   R0                      GENERAL WORK REGISTER            05970000
*                                      EQUATES FOR REGISTER 1           05980000
R1       EQU   1                       LM/STM AND INTERFACES            05990000
NAMERGT  EQU   R1                      RIGHT HALF OF NAME FOR SEARCHES  06000000
WKREG1   EQU   R1                      GENERAL WORK REGISTER            06010000
*                                      EQUATES FOR REGISTER 2           06020000
R2       EQU   2                       CROSS REFERENCE EQUATE           06030000
WKREG2   EQU   R2                      GENERAL WORK REGISTER            06040000
OLDRB    EQU   R2                      POINTER TO THE OLD PRB FOR XCTL  06050002
*                                      EQUATES FOR REGISTER 3           06070000
R3       EQU   3                       CROSS REFERENCE EQUATE           06080000
COMREG   EQU   R3                      LOAD FINAL PROCESSING REG        06090000
CVTREG   EQU   R3                      REGISTER 3 POINTS TO CVT         06100000
*                                      EQUATES FOR REGISTER 4           06110000
R4       EQU   4                       CROSS REFERENCE EQUATE           06120000
TCBREG   EQU   R4                      REGISTER 4 POINTS TO TCB         06130000
*                                      EQUATES FOR REGISTER 5           06140000
R5       EQU   5                       CROSS REFERENCE EQUATE           06150000
RBREG    EQU   R5                      REGISTER 5 POINTS TO THE RB      06160000
*                                      REGISTER 6 EQUATES               06170000
R6       EQU   6                       CROSS REFERENCE EQUATE           06180000
BASEREG  EQU   R6                      BASE REGISTER FOR IEAVLK00       06182002
*                                      REGISTER 7 EQUATES               06220000
R7       EQU   7                       PARAMETER TO IEA0VL02            06230000
AREAREG  EQU   R7                      POINTS TO BLDL FETCH WORK AREA   06232002
DESVREG  EQU   R7                      POINTS TO DE SAVE AREA           06234002
ASCBREG  EQU   7                       POINTS TO THE CURRENT ASCB       06234402
*                                      DURING PREFIXING ROUTINES        06236002
*                                      REGISTER 8 EQUATES               06250000
R8       EQU   8                       IEA0VL02 BASE REGISTER           06260000
LPDEREG  EQU   R8                      MUST BE EVEN FOR DIVIDE          06270000
HASHREG  EQU   LPDEREG+1               USED TO HASH LPDE ADDRESS        06280000
*                                      IN IEAVVMSR                      06290000
DESZREG  EQU   R8                      CONTAINS DE SIZE WHILE PREFIXING 06300000
TAXRB    EQU   R8                      POINTS TO RB THAT WAS GOTTEN     06310000
TABREG   EQU   R8                      POINTS TO QUE THAT WAS SEARCHED  06320000
PRBREG   EQU   R8                      POINTS TO GOTTEN RB              06330000
NEWRB    EQU   R8                      NEW RB FOR XCTL                  06332002
*                                      REGISTER 9 EQUATES               06340000
R9       EQU   9                       RETURN REGISTER FOR IEA0VL02     06350000
NAMEREG  EQU   R9                      POINTS TO NAME OR DE             06360000
*                                      REGISTER 10 EQUATES              06370000
R10      EQU   10                      RETURN CODE FOR IEA0VL02         06380000
PIEREG   EQU   R10                     POINTS TO PIE                    06390000
DCBREG   EQU   R10                     POINT TO DCB DURING SEARCHES     06400000
REASON   EQU   R10                     CONTAINS REASON CODE IN ABEND    06410000
*                                      REGISTER 11 EQUATES              06420000
R11      EQU   11                      INPUT ADDRESS FOR LXREFER        06430000
TIOTPTR  EQU   R11                     DURING ABEND POINTS TO TIOT      06440000
CDEREG   EQU   R11                     POINTS TO CDE FOR REQUEST        06450000
*                                      REGISTER 12 EQUATES              06460000
R12      EQU   12                      CROSS REFERENCE EQUATE           06470000
R12PARM  EQU   R12                     PARAMETER LIST ADDR IN PREFIX    06480000
CDIREG   EQU   R12                     POINTS TO MAJOR CDE FOR REQUEST  06490000
*                                      REGISTER 13 EQUATES              06500000
R13      EQU   13                      GENERAL WORK REGISTER            06510000
ABCODE   EQU   R13                     CONTAINS ABEND CODE              06520000
RETURND  EQU   R13                     RETURN REGISTER INTERNAL SUBRTNS 06530000
LDLREG   EQU   R13                     POINTS TO LLE DURING LOAD        06540000
RJJRET   EQU   R13                     CDHKEEP RETURN REGISTER          06550000
PICAREG  EQU   R13                     POINTS TO PICA                   06552001
*                                      REGISTER 14 EQUATES              06560000
R14      EQU   14                      GENERAL WORK REGISTER            06570000
RETURN   EQU   R14                     RETURN REGISTER INTERNAL SUBRTNS 06580000
GR14     EQU   R14                     GENERAL WORK REGISTER            06590000
SUBREG1  EQU   R14                     GENERAL WORK REGISTER            06600000
*                                      REGISTER 15 EQUATES              06620000
R15      EQU   15                      GENERAL WORK REGISTER            06630000
GR15     EQU   R15                     GENERAL WORK REGISTER            06640000
SUBREG2  EQU   R15                     GENERAL WORK REGISTER            06650000
         TITLE 'IEAVLK00 CHARACTER AND HEX MASK EQUATES'                06660000
REF      EQU   X'01'                   SET RB WAIT COUNT TO 1 IN        06670000
*                                      CDQUECTL                         06680000
*                                                                       06680500
* THE FOLLOWING TWO EQUATES ARE EBCDIC CHARACTER CODE DEPENDENT         06681000
*                                                                       06681500
BLANK    EQU   C' '                    CHARACTER BLANK FOR MESSAGES     06690000
CHARZERO EQU   C'0'                    CHARACTER ZERO TESTED DURING WTP 06692000
*                                      PROCESSING                       06694000
MASK1    EQU   X'01'                   COMPARE ONE BYTE IN REG          06720000
BYTE2    EQU   X'02'                   INSERTS IN SECOND BYTE OF A REG  06730000
MASKOFF  EQU   X'04'                   DAT ACTIVE NOT IO OR EXT         06730500
MASK     EQU   X'07'                   ICM/STCM 3 ADDR BYTES IN REG     06740000
MASK4    EQU   X'0F'                   ICM/STCM 4 BYTE ADDR IN REG      06750000
X0F      EQU   X'0F'                   MAX. VALUE CONTAINED IN 4 BITS   06760000
X1F      EQU   X'1F'                   MAX.VALUE CONTAINED IN 5 BITS    06762002
XFE      EQU   X'FE'                   PRIVILEGED MODE OPERATION        06770000
MAX      EQU   X'FF'                   MAX. VALUE CONTAINED IN 1 BYTE   06780000
REF1BYTE EQU   X'11'                   PUT 1 BYTE INTO REG1             06790000
REF9BTE4 EQU   X'9F'                   PUT 4 BYTES INTO REGISTER 9      06800000
*                                      WITH EXECUTED ICM MASK           06810000
REFABTE4 EQU   X'AF'                   PUT 4 BYTES INTO REGISTER 10     06820000
*                                      WITH EXECUTED ICM MASK           06830000
MASK8    EQU   X'08'                   BYTE 0 OF REG IN ICM             06840000
AUTHBYTE EQU   X'08'                   APF FLAG IN BYTE 0 OF REG 1      06850000
CANTFIX  EQU   X'24'                   MODULE PERMANENTLY NON-FIXABLE   06860000
*                                      RETURN FROM PAGE FIX SVC         06862000
X40      EQU   X'40'                    ATTACH WITH RESET APF   @WAB    06863040
X80      EQU   X'80'                   ATTACH AUTHORIZATION BIT         06864002
         TITLE 'IEAVLK00 GENERAL NUMBER VALUE EQUATES'                  06870000
ZERO     EQU   0                                                        06880000
SYMBEGIN EQU   0                       SYMB DISPL TO BEG OF FIELD       06890000
N0       EQU   0                       USED FOR ZERO OFFSETS            06900000
NEW      EQU   0                       NEW TCB SLOT POINTER             06910000
N1       EQU   1                       USED TO INCREMENT VALUES         06920000
PRIO     EQU   1                       LENGTH OF DISP PRIORITY STORED   06930000
ADD1     EQU   1                       USED TO INCREMENT THE USE COUNT  06940000
ONE      EQU   1                       REASON CODE VALUE                06950000
TWO      EQU   2                       REASON CODE VALUE                06970000
N2       EQU   2                       USED TO INCREMENT ERROR VALUES   06980000
N3       EQU   3                       USED TO INCREMENT ERROR VALUES   06990000
ADDL     EQU   3                       MAXIMUM LENTGH OF AOS ADDRESSES  07000000
EXIT     EQU   3                       USED TO RETURN TO CALLING RTN.   07010000
THREE    EQU   3                       REASON CODE AND MVC CONSTANT     07020000
*                                      FOR 206 ABEND PROCESSING         07030000
OLD      EQU   4                       OLD TCB SLOT POINTER             07040000
N4       EQU   4                       USED TO INCREMENT VALUES         07050000
WORD     EQU   4                       USED TO INCREMENT VALUES         07060000
STILLDIS EQU   4                       RETURN IF LXREFER DIDNT ENABLE   07070000
FOUR     EQU   4                       RETURN CODE OR OFFSET TO DCB     07080000
*                                      ADDRESS IN PARAMETER LIST        07090000
NAMERT   EQU   4                       RIGHT HALF OF NAME EQUATE        07100000
NOGOOD   EQU   4                       RETURN ON R+4 IF A SEARCH FAILS  07110000
PSWBASE  EQU   4                       PSW LENGTH LESS ADDR. FIELD      07112002
FIVE     EQU   5                       UNPACK SIZE FOR 206 ABENDS       07120000
NOTEQ    EQU   7                       NOT EQUAL COMPARES               07160000
N7       EQU   7                       LENGTH OF NAME-1                 07162002
NAME     EQU   8                       LENGTH OF AOS NAMES              07170000
NAMELTH  EQU   NAME-1                  PREFIX NAME LENGTH VALUE         07180000
N8       EQU   8                       USED AS NUMBER VALUE             07190000
EQZER    EQU   8                       USED TO TEST CONDITION CODES     07200000
EIGHT    EQU   8                       TRANSLATE SIZE FOR 206 ABENDS    07210000
XLENGTH  EQU   8                       OFFSET TO LENGTH FIELD IN XLIST  07220000
UNPKSIZE EQU   9                       UNPACK SIZE FOR 206 ABENDS       07230000
BADRETCD EQU   12                      USED TO ISSUE RETURN CODE OF 12  07250000
XSTART   EQU   12                      OFFSET TO ADDR FIELD IN XLIST    07260000
PRBCLR   EQU   12                      USED TO CLEAR IRB/XCTL RBS P2020 07265002
N20      EQU   20                      USED TO POSITION ABEND CODE      07270000
         TITLE '           IEAVLK00  LINK - SVC 6'                      07280000
         USING PSA,0                   ADDRESSIBILITY TO PSA            07282002
         USING CVT,CVTREG              REG.3 CONTAINS CVT ADDRESS       07284002
         USING TCB,TCBREG              REG.4  CONTAINS  TCB ADDRESS     07290000
         USING RBSECT,RBREG            REG.5  CONTAINS  RB  ADDRESS     07300000
         USING WKAREA,AREAREG          REG.6  CONTAINS  WORK AREA ADDR  07310000
         USING CDLKBASE,BASEREG        REG.7  CONTAINS  BASE ADDRESS    07320000
         USING PRB,PRBREG              REG 8  CONTAINS  PRB ADDRESS     07330000
         USING CDENTRY,CDEREG          REG.11 CONTAINS  CDENTRY ADDRESS 07340000
         USING CDENTRYJ,CDIREG         REG.12 CONTAINS  CDENTRY ADDRESS 07350000
         SPACE 2                                                        07360002
*/*IGCOO6: E ENTRY LINK */                                              07360402
         SPACE 2                                                        07362002
IGC006   DS    0H                      ENTRY POINT TO LINK FROM         07370000
*                                      SVC SLIH                         07380000
         SPACE 2                                                        07382002
*/* P ESTABLISH ADDRESSABILITY */                                       07382402
         SPACE 2                                                        07384002
         BALR  BASEREG,ZERO            SET UP BASE ADDRESS              07390000
         SPACE 2                                                        07390102
*/*CDLKBASE: L SETFRR-- SET UP RECOVERY */                              07393102
         SPACE 2                                                        07397002
CDLKBASE DS    0H                      LINK BASE                        07400002
         SETFRR A,PARMAD=(R8),WRKREGS=(R11,R12),FRRAD=FRRPGM            07403002
         ST    R8,RBCSFRRA             SAVE PARM LIST ADDRESS           07406002
         ST    RBREG,N0(R8)            PUT SVRB IN PARM LIST            07406402
         SPACE 2                                                        07406603
*/* P INDICATE PROG MGR SVRB FOR RTM */                                 07406803
         SPACE 2                                                        07407003
         OI    RBSTAB1,RBPMSVRB        THIS IS PROG MGR SVRB.  @YA00094 07407203
*                                      USED BY RTM TO INVOKE THE        07407403
*                                      ABEND RESOURCE MGR DURING        07407603
*                                      RECOVERY RETRY.                  07408003
         SPACE 2                                                        07412003
*/* S LXPREFIX:SET UP REG 9, REG 10 AND EXSAVE */                       07415003
         SPACE 2                                                        07418003
         BAL   RETURND,LXPREFIX        INITIALIZE R9,R10, AND EXSAVE    07419003
         SPACE 2                                                        07421003
*/*CDADVANS: P PREPARE POINTERS TO SEARCH JOB PACK QUEUE */             07424003
         SPACE 2                                                        07427003
CDADVANS L     TABREG,TCBJSTCB         LOAD ADDR. OF INITIATED TCB      07430003
         LA    TABREG,TCBJSEZ(TABREG)  ESTABLISH ADDR. OF JPAQ          07432003
         SPACE 1                                                        07434003
*BRANCH TABLE SET UP TO CHECK IF THE NAME REQUESTED IS IN THE LIST      07436003
*ADDRESSED BY TABREG, AND IF SO WHAT ARE ITS USABILITY CONDITIONS       07440000
         SPACE 2                                                        07450002
*/*CDCONTRL: S (0,PLUSCONT,+4,CDSETUP1) CDSEARCH:CAUSE SEARCH OF A CDE  07452002
*/*QUEUE */                                                             07454002
         SPACE 2                                                        07460002
CDCONTRL EQU   *                       SEARCH JPAQ,LPAQ, OR TSOLPAQ     07470000
         BAL   SUBREG1,CDSEARCH        SEARCH CDES FOR EIGHT            07480000
*                                      BYTE NAME ADDRESSED BY NAMEREG   07490000
         SPACE 1                                                        07500000
*        CDSEARCH WILL ASSUME A BRANCH TABLE AS FOLLOWS                 07510000
*              B    ADDR1  - 8 BYTE NAME FOUND                          07520000
*              B    ADDR2  - 8 BYTE NAME NOT FOUND                      07530000
*        THE BRANCH TABLE OVERLAPS WITH THAT REQUIRED BY CDALLOC        07540000
         SPACE 2                                                        07550002
*/*PLUSCONT: S (0,CDSETUP1,4,CDEMERGE,8,CONTSRCH,12,%CDMPUP,16,         07552002
*/*CDQUECTL) CDALLOC:TEST AVAILABILITY OF MODULE FOUND */               07554002
         SPACE 2                                                        07556002
PLUSCONT BAL   SUBREG2,CDALLOC         GO TO CDALLOC .NAME FOUND        07560000
         SPACE 1                                                        07570000
*        CDALLOC ASSUMES BRANCH TABLE ,  SEE FORMAT IN DSECT CDALLOC    07580000
         B     CDSETUP1                NOT FOUND - ISSUE BLDL           07590000
         B     CDEMERGE                ALLOCATE  SUCCESSFUL             07600000
         B     CONTSRCH                NOT REUSABLE - FIND ANOTHER COPY 07610000
         SPACE 2                                                        07612002
*/*%CDMPUP: S CDMOPUP:CLEAR WORK AREAS */                               07612402
         SPACE 2                                                        07614002
         BAL   RETURND,CDMOPUP         QUEUE REQUEST - CLEAN WORK AREA  07620000
*                                      AFTER CDMOPUP DROP THROUGH TO    07630000
*                                      CDQUECTL                         07640000
         SPACE 1                                                        07650000
*        FIFTH RETURN FROM CDALLOC IS FOR MODULE BEING FETCHED, QUEUE   07660000
*        THE REQUEST.  CDMOPUP IS NOT USED BECAUSE THE ATTRIBUTES OF    07670000
*        THE MODULE BEING FETCHED HAVE NOT BEEN TESTED, AND IF IT CAN   07680000
*        NOT BE REUSED, ANOTHER FETCH WILL BE DONE. THEREFORE THE WORK  07690000
*        AREAS ARE RETAINED UNTIL AFTER THE FETCH, WHEN THE ATTRIBUTES  07700000
*        ARE TESTED.                                                    07710000
         EJECT                                                          07720000
*        THE REQUEST IS QUEUED USING THE LAST 4 BYTES OF THE RBOPSW     07730000
*        FIELD IN THE SVRB THAT THE CONTENTS SUPERVISOR RUNS UNDER.     07740000
*        THE RBOPSW FIELD CAN BE USED BECAUSE THE RESUME ADDRESS        07750000
*        IS RESET WHEN THE RB IS DEQUEUED.  THE FIRST BYTE IS USED      07760000
*        TO SAVE THE DISPATCHING PRIORITY FROM THE TCB OF THE CURRENT   07770000
*        TASK, AND THE REMAINING 3 BYTES ARE USED TO SAVE THE TCB       07780000
*        ADDRESS.  THE QUEUE ORIGIN FOR ALL THE SVRBS WAITING FOR A     07790000
*        PARTICULAR MODULE IS THE CDRRBP FIELD OF THE MAJOR CDE FOR     07800000
*        THE REQUEST.  THE QUEUE IS SINGLE STRANDED, FORWARD CHAINED,   07810000
*        AND IN DISPATCHING PRIORITY ORDER, QUEUED ON RBPGMQ FIELD.     07820000
*        BEFORE EACH SVRB ON THE QUEUE IS CHECKED FOR THE INSERTION     07830000
*        POINT OF THE NEW SVRB, ITS TCB IS LOCATED BY RUNNING DOWN THE  07840000
*        RBLINK FIELDS UNTIL THE RB WITH THE RBTCBNXT FLAG IS FOUND.    07850000
*        THE TCB ADDRESS IS THEN COMPARED WITH THE CURRENT TCB ADDRESS  07860000
*        TO DETERMINE IF AN INTERLOCK SITUATION EXISTS.  IF THE TCB     07870000
*        ADDRESSES ARE EQUAL, AN A06 ABEND IS ISSUED, SINCE THE SAME    07880000
*        TASK HAS REQUESTED THE SAME MODULE TWICE WITHOUT GETTING       07890000
*        CONTROL OF IT.                                                 07900000
*        AFTER CDQUECTL HAS QUEUED THE CURRENT SVRB, IT INSURES THAT A  07910000
*        TASK SWITCH WILL OCCUR, SETS THE SVRB TO WAIT, AND EXITS VIA   07920000
*        THE DISPATCHER.  WHEN DQLOAD IN IEAVLK01 IS ENTERED (QUEUED    07930000
*        FETCH), ALL WAITING SVRBS WILL BE MADE READY TO REENTER        07940000
*        CONTENTS SUPERVISOR AT IEAQCS02, WHEN THEIR TASKS ARE NEXT     07950000
*        DISPATCHED.  FOR QUEUED SERIAL REUSABLE MODULES, EXIT SETS     07960000
*        THE TASK TO REENTER AT IEAQCS03, ONE-AT-A-TIME, AS THE         07970000
*        MODULE BECOMES AVAILABLE.                                      07980000
*                                                                       07990000
         SPACE 2                                                        08000002
*/*CDQUECTL: P PUT TCB PRIORITY IN RBOPSW */                            08000402
*/* P PUT TCB ADDRESS IN RB EXTENDED SAVE AREA */                       08000802
*/* P PUT MAJOR CDE ADDRESS IN SVRB */                                  08001202
         SPACE 2                                                        08002002
CDQUECTL MVC   RBXXDSP(PRIO),TCBDSP    SET DISPATCHING PRIORITY IN RB   08010000
         STCM  TCBREG,MASK,RBOPSWA+N1  STORE TCB ADDR IN RB             08020002
         STCM  CDIREG,MASK,RBCDE1      PUT ADDR OF MAJOR IN RB          08030000
         L     WKREG1,CDRBPZ(CDIREG)   START DOWN QUEUE OFF MAJOR       08040002
         SPACE 2                                                        08042002
*/*OSILATE: P GET FIRST ELEMENT ON RB QUEUE (RBPGMQ) */                 08042402
         SPACE 2                                                        08044002
OSILATE  LR    WKREG2,WKREG1           INITIALIZE NEXT RB POINTER       08050000
         SPACE 2                                                        08060002
*/*OSCULATE: D (YES,CHECKTCB,NO,) IS USER'S TCB HUNG OFF THIS RB? */    08062002
*/* P (,OSCULATE) GET NEXT RB ON LIST */                                08064002
         SPACE 2                                                        08070002
OSCULATE TM    RBSTAB2Z(WKREG1),RBTCBNXT  Q. DOES THIS RB POINT TO TCB  08100002
         BO    CHECKTCB                A. YES- TAKE BRANCH              08102002
         L     WKREG1,RBLINKZ(WKREG1)  A. NO- GO TO NEXT RB             08104002
         B     OSCULATE                LOOP-FIND RB THAT POINTS TO TCB  08106002
         SPACE 2                                                        08106402
*/*CHECKTCB: D (NO,QUECONT,YES,) TCB ADDR IN SVRB = CURRENT TCB? */     08106502
         SPACE 2                                                        08106802
CHECKTCB CLC   RBOPSWA+N1(ADDL),RBLINKAZ(WKREG1)  COMPARE TCB ADDR'S    08108002
         BNE   QUECONT                 NO.CONTINUE THE QUEUEING         08110000
         SPACE 2                                                        08112002
*/* D (NO,QUEEND,YES,) PARTIALLY LOADED PROGRAM? */                     08112402
*/* P CLEAR CDE POINTER IN RB */                                        08112802
         SPACE 2                                                        08114002
         TM    CDATTRJ,CDNIC           Q.PARTIALLY LOADED PROG.         08120000
         BNO   QUEEND                  NO.CONTINUE                      08130000
         XC    RBCDE1(ADDL),RBCDE1     CLEAR CDE POINTER                08140000
*                                      CDE WILL BE FREED BY ABEND       08150000
         SPACE 2                                                        08152002
*/*QUEEND: P SET ABEND REGISTER TO 0 */                                 08152402
*/* S () ERRLOCK:ISSUE A06 ABEND */                                     08152802
         SPACE 2                                                        08154002
QUEEND   EQU   *                       ABEND A06 SITUATION              08160000
         SR    R13,R13                 ZERO OUT GR13 FOR ERROR ROUTINE  08170000
         B     ERRLOCK                 ISSUE ABEND (A06)                08180000
         SPACE 2                                                        08182002
*/*QUECONT: P (=0,CUEIT,GT 0,) GET NEXT ELEMENT ON RB QUEUE */          08182402
         SPACE 2                                                        08184002
QUECONT  EQU   *                       CHECK FOR SVRB INSERTION         08190000
         L     WKREG1,RBPGMQZ(WKREG2)  PICK UP NEXT RB ON QUEUE         08240002
         LTR   WKREG1,WKREG1           Q. CAN INSERT BE MADE HERE       08290002
         BZ    CUEIT                   A=YES INSERT RB ON QUEUE         08340002
         SPACE 2                                                        08350002
*/* D (NO,OSILATE,YES,) CURRENT PRIORITY LT TEST PRIORITY */            08352002
         SPACE 2                                                        08360002
         CLC   RBXXDSPZ(PRIO,WKREG1),RBXXDSP Q. IS PRIORITY OF RB HI'ER 08390002
         BNL   OSILATE                 A=YES INSERT RB ON QUEUE         08440002
         SPACE 2                                                        08450002
*/*CUEIT: P PUT CURRENT SVRB ON QUEUE */                                08452002
*/* P PUT CURRENT REGISTERS IN TCB */                                   08454002
         SPACE 2                                                        08460002
CUEIT    ST    WKREG1,RBPGMQ           CHAIN FOUND SVRB TO NEW          08490002
         ST    RBREG,RBPGMQZ(WKREG2)   CHAIN NEW TO NEXT                08540002
         STM   R0,R15,TCBGRS           SAVE REGS IN TCB                 08590002
         SPACE 2                                                        08600002
*/* P SET UP FOR WAIT WITHOUT ECB */                                    08602002
*/* P NOTE: R0=WAIT CNT(1) R5=RB(CURRENT) R15=WAIT EP LOCAL LOCK HELD   08604002
*/**/                                                                   08604402
*/* L () WAIT-- IEAQCS02 */                                             08608002
         SPACE 2                                                        08610002
         LA    R0,N1                   SET UP WAIT COUNT                08640002
         SR    R1,R1                   ASCB INDICATOR SET               08690002
         L     CVTREG,CVTPTR           GET CVT POINTER           M01585 08710002
         L     SUBREG2,CVTVWAIT        LOAD ADDRESS OF WAIT RTN PTM1585 08740002
         BR    SUBREG2                 GO TO WAIT               PTM1585 08790002
         TITLE  '              IEAVLK00 XCTL - SVC 7'                   08800002
         SPACE 2                                                        08850002
*/*IGC007: E XCTL */                                                    08852002
*/* P ESTABLISH ADDRESSABILITY */                                       08854002
         SPACE 2                                                        08860002
IGC007   DS    0H                      ENTRY TO SVC XCTL FROM SVC SLIH  08890002
         BALR  BASEREG,ZERO            SET UP BASE                      08940002
         USING *,BASEREG                                                08942002
         L     BASEREG,LINKBASE        SET UP ADDRESSING FROM           08944002
         USING CDLKBASE,BASEREG        START OF SVC LINK                08946002
         USING CVT,CVTREG              SET ADDRESSIBILITY TO CVT        08948002
         SPACE 2                                                        08948102
*/* L SETFRR-- SET UP RECOVERY ROUTINE */                               08948202
         SPACE 2                                                        08948302
         SETFRR A,PARMAD=(R8),WRKREGS=(R11,R12),FRRAD=FRRPGM            08948402
         SPACE 2                                                        08950202
*/* P INITIALIZE RECOVERY PARAMETERS */                                 08950302
         SPACE 2                                                        08950602
         ST    R8,RBCSFRRA             SAVE PARM LIST ADDRESS           08952202
         ST    RBREG,N0(R8)            PUT SVRB IN PARM LIST            08952602
         SPACE 2                                                        08953602
*/* P GET CALLER'S RB ADDRESS FROM RBCHAIN FIELD */                     08954002
*/* D (NO,NOTSVRB,YES,) IS CALLER AN SVRB? */                           08954402
         SPACE 2                                                        08954802
         L     WKREG2,RBWCF            GET REQUESTOR'S RB ADDR.         08955202
         TM    RBSTABZ(WKREG2),RBFTSVRB Q. REG'R AN SVRB                08956402
         BNO   NOTSVRB                 A. NO- CONTINUE                  08957602
*                                                                       08959402
*     INPUTS TO TRRM ARE AS FOLLOWS FOR SVRB:                           08961202
*        R0,1 = ADDRESS OF CALLERS SVRB                                 08963002
*        R4   = ADDRESS OF CURRENT TCB (SET BY INTERRUPT HANDLER)       08964802
*        R13  = ADDRESS OF A REGISTER SAVE AREA                         08966602
*        R14  = RETURN ADDRESS                                          08968402
*        R15  = TRRM ENTRY POINT (FROM CVTSCBP)                         08970202
*   THE LOCAL LOCK MUST BE HELD AND NOT FREED OVER INTERFACE.           08972002
*   XCTL IS ENTERED WITH THE LOCAL LOCK.                                08973802
*                                                                       08975602
         SPACE 2                                                        08976002
*/* P INITIALIZE NAME POINTER AND ADDRESS REGISTER */                   08976102
         SPACE 2                                                        08976402
         L     R15,N0(R15)             GET ADDRESS OF MOD. NAME PTM0180 08978402
         MVC   RBCSNAME(N8),N0(R15)    PUT MODULE NAME IN SVRB          08986402
         LA    NAMEREG,RBCSNAME        GET ADDRESS OF NAME              08986802
         USING ASCB,ASCBREG            GET ADDRESSABILITY TO ASCB       08987402
         SPACE 2                                                        08989402
*/* P INITIALIZE FOR TRRM ROUTINE */                                    08989802
*/* L TRRM-- UPDATE ANY SCB'S FOR THIS RB */                            08990202
         SPACE 2                                                        08991402
         L     R13,ASCBASXB            GET ASXB ADDRESS                 08997402
         USING ASXB,R13                GET ADDRESSIBILITY TO ASXB       08997802
         LA    R13,ASXBFLSA            GET LOCAL LOCK REG SAVE AREA     08998202
         DROP  R13                     RELEASE ASXB                     09005402
         LR    WKREG0,WKREG2           SET BOTH INPUT REGISTERS 0 AND 1 09006702
         LR    WKREG1,WKREG2           TO ADDRESS OF THE REQ'R SVRB     09008002
         L     SUBREG2,CVTSCBP         GET ADDRESS OF TRRM ROUTINE      09009302
         BALR  RETURN,SUBREG2          GO TO TRRM                       09011202
         DROP  ASCBREG                 RELEASE ASCB                     09011902
*                                                                       09013202
*        THE FOLLOWING CODE BEGINS THE SEARCH FOR THE REQUESTED MODULE  09014502
*                                                                       09015902
         SPACE 2                                                        09017802
*/* L SETLOCK-- OBTAIN CMS LOCK FOR LPA SEARCH */                       09018402
         SPACE 2                                                        09019802
         SETLOCK  OBTAIN,TYPE=CMS,MODE=UNCOND,RELATED=('IEAVLK01')      09023502
         SPACE 2                                                        09027602
*/* P SET GOOD SEARCH INDICATOR OFF */                                  09029002
*/* S (+0,,+4,%GOOD) CDSEARCH:SEARCH LPAQ FOR MODULE */                 09033302
         SPACE 2                                                        09034702
         L     TAXRB,IEAQLCTA          GET START OF ACTIVE LPAQ         09036102
         NI    RBCSFLG1,MAX-RBCSGSF    INSURE GOOD SEARCH IND. IS OFF   09037502
         BAL   RETURN,CDSEARCH         TEST IF MODULE IS ON LPA         09040602
         SPACE 2                                                        09042602
*/* P SET GOOD SEARCH INDICATOR ON */                                   09043002
         SPACE 2                                                        09044602
         OI    RBCSFLG1,RBCSGSF        SET GOOD SEARCH FLAG             09046302
         STM   R11,R12,RBCSGR15        SAVE VOLITAL REGS                09052002
         SPACE 2                                                        09052402
*/*%GOOD: L SETLOCK-- FREE CMS LOCK */                                  09052502
         SPACE 2                                                        09052802
         SETLOCK RELEASE,TYPE=CMS,RELATED=('FREE CMS AFTER LPA SEARCH') 09054002
         SPACE 2                                                        09054402
*/* D (NO,PLPASRCH,YES,) MODULE FOUND? */                               09054502
*/* P (,EXITIT) MARK SVRB RESIDENT */                                   09054602
         SPACE 2                                                        09054802
         LM    R11,R12,RBCSGR15        RESTORE VOLISTAL REGS            09056002
         TM    RBCSFLG1,RBCSGSF        Q. SEARCH SUCCESSFUL             09056402
         BZ    PLPASRCH                A. NO- SEARCH PLPA               09056802
         NI    RBSTAB1Z(OLDRB),MAX-RBTRSVRB MARK RB AS RESIDENT SVRB    09061302
         B     EXITIT                  GO DO TERMINATION PROCESSING     09062702
*                                                                       09064102
*        THIS CODE SEARCHES THE PLPA FOR THE MODULE                     09065502
*                                                                       09066902
         SPACE 2                                                        09068502
*/*PLPASRCH: D (YES,,NO,%ERROR) HAS LPDE BEEN BUILT? */                 09068902
*/* S (+0,FOUNDEM,+4,) SRCHDIRC:SEARCH PAGED LPA DIRECTORY */           09070502
         SPACE 2                                                        09070602
PLPASRCH DS    0H                      CHECKS THE PLPA FOR MODULE       09070802
         SR    R13,R13                 PREPARE FOR ABEND CONDITION BY   09072102
         LA    R15,BADRETCD            SETTING REASON CODE=X'0C'        09073402
         TM    CVTLPDIA,CVTDICOM       TEST IF LPDE HAS BEEN BUILT      09074702
         BZ    ERRBLDL                 IF NOT, ISSUE ABEND              09076002
         LM    R0,R1,N0(NAMEREG)       PUT NAME IN REGISTERS 0,1        09077302
         BAL   RETURN,SRCHDIRC         GO SEARCH PLPA                   09078602
         B     FOUNDEM                 FOUND- PREPARE FOR TERMINATION   09079902
         SPACE 2                                                        09080302
*/*%ERROR: P SET ABEND REG=0 SET RETURN CODE=12 */                      09080702
*/* S () ERRBLDL:ISSUE 806 ABEND */                                     09080802
         SPACE 2                                                        09081102
         SR    R13,R13                 NOT FOUND- PREPARE FOR ABEND BY  09081202
         LA    R15,BADRETCD            SETTING REASON CODE=X'0C'        09082502
         B     ERRBLDL                 AND ISSUING AN ABEND             09083802
         SPACE 2                                                        09084202
*/*FOUNDEM: P SET SVRB TRANSIENT */                                     09084802
         SPACE 2                                                        09086102
FOUNDEM  LR    CDEREG,WKREG0           TREAT LPDE LIKE A CDE            09087302
         OI    RBSTAB1Z(OLDRB),RBTRSVRB SET TO PAGEABLE SVRB            09088602
         SPACE 2                                                        09089902
*/*EXITIT: P SET R15 WITH ENTRY POINT ADDRESS */                        09091302
*/* P PUT ENTRY POINT ADDRESS IN RESUME PSW OF SVRB */                  09092502
*/* P PUT CDE (OR LPDE) ADDRESS IN SVRB */                              09093902
         SPACE 2                                                        09095102
EXITIT   DS    0H                      TERMINTION PROCESSING            09096502
         USING CDENTRY,CDEREG          SET ADDRESS OF CDE               09097702
         L     R15,CDENTPT             GET MODULE ENTRY POINT           09098102
         ST    R15,RBOPSW-RBSECT+N4(WKREG2)  STORE ENTRY IN REQ'R RB    09098602
         STCM  CDEREG,MASK,RBCDE1Z(WKREG2)  STORE ADDR. OF CDE OR LPDE  09100202
*                                      IN REQUESTOR'S SVRB              09102202
         SPACE 2                                                        09102302
*/* L SETFRR-- REMOVE RECOVERY ROUTINE */                               09102402
         SPACE 2                                                        09102602
         SETFRR D,WRKREGS=(R1,R2)      REMOVE RECOVERY RTN              09102702
         SPACE 2                                                        09103102
*/* P RESTORE REGS 0 AND 1 FROM SVRB SAVE AREA */                       09103202
*/* R BRANCH EXIT PROLOGUE */                                           09103302
         SPACE 2                                                        09103502
         LM    R0,R1,RBGRSAVE          RESET XCTL INPUT REGISTERS       09104202
         L     RETURN,CVTEXPRO         GET ADDRESS OF THE EXIT PROLOG   09110902
         BR    RETURN                  EXIT                             09112902
*                                                                       09114902
*        NON-SVRB PROCESSING BEGINS HERE                                09116902
*                                                                       09118902
         SPACE 2                                                        09119302
*/*NOTSVRB: S LXPREFIX:VALIDITY CHECK INPUT */                          09119402
*/* P INDICATE PROG MGR SVRB FOR RTM */                                 09119503
*/* P RESET CALLERS RB ADDRESS */                                       09120903
         SPACE 2                                                        09123403
NOTSVRB  OI    RBSTAB1,RBPMSVRB        THIS IS PROG MGR SVRB.  @YA00094 09123503
*                                      USED BY RTM TO INVOKE THE        09123803
*                                      ABEND RESOURCE MGR DURING        09124103
*                                      RECOVERY RETRY.                  09124403
         BAL   RETURND,LXPREFIX        VALIDITY CHECK INPUT PARAMETERS  09124903
         L     WKREG2,RBWCF            GET REQUESTOR'S RB ADDR.   P1585 09125303
*                                      AND INIT. WORK REGS. AND AREAS   09126203
         SPACE 2                                                        09127203
*/* P SET UP FOR GETMAIN */                                             09128803
*/* L GETMAIN-- GET PRB FROM SUBPOOL 255 */                             09129903
         SPACE 2                                                        09130803
         L     ASCBREG,PSAAOLD         GET ASCB ADDRESS FOR GETMAIN     09131703
*     REGISTER 4= TCB, R7= ASCB,LOCAL LOCK MUST BE HELD                 09132603
         GETMAIN  RU,LV=PRBSIZE,SP=255,BRANCH=YES  GET A PRB            09133503
         SPACE 2                                                        09134503
*/* P CLEAR PREFIX AREA */                                              09135603
         SPACE 2                                                        09136703
         XC    N0(PRBPREF,R1),N0(R1)   CLEAR THE PREFIX AREA            09137803
         LA    PRBREG,PRBPREF(R1)      GET POINTER TO RB BASE           09138903
*  INITIALIZE THE NEW RB                                                09140903
         SPACE 2                                                        09141903
*/* P COPY OLD PRB CONTENT TO NEW PRB */                                09143203
*/* P NOTE: ATTRIBUTES FROM OLD IN NEW: ATTN, TCBNXT, LASTRB, RBTYPE */ 09143303
*/* P NOTE: THIS PUTS THE PROPER REGISTERS IN CURRENT PRB FOR ASIR      09145203
*/* PROCESSING */                                                       09145603
*/* P NOTE: AND SETS CHAIN POINTER TO NEXT OLDER RB OR TCB */           09147603
         SPACE 2                                                        09147703
         MVC   PRBSTART(PRBSIZ),RBSECTZ(OLDRB) COPY OLD RB TO NEW RB    09149003
         SPACE 2                                                        09150903
*/* P CLEAR CDE POINTER IN NEW PRB */                                   09151803
         SPACE 2                                                        09152803
         SR    R1,R1                   CLEAR REG FOR STORE              09153703
         ST    R1,PRBFLGS              ZERO CDE POINTER IN NEW PRB      09154703
         ST    R1,PRBPGMQ              CLEAR SER.REUS RBQUE FIELD M2444 09155603
*  SET UP FOR TRRM FOR PRB                                              09156603
*/* P SET UP FOR TRRM */                                                09158503
*/* L TRRM-- UPDATE ANY SCB'S */                                        09159503
         SPACE 2                                                        09160503
         LR    R0,OLDRB                PUT ADDRESS OF OLD RB IN R0      09161503
         LR    R1,NEWRB                PUT ADDRESS OF NEW RB IN R1      09162503
         USING ASCB,ASCBREG            GET ADDRESSABILITY TO ASCB       09163503
         L     R13,ASCBASXB            GET ASXB ADDRESS                 09164503
         USING ASXB,R13                GET ADDRESSIBILITY TO ASXB       09165503
         LA    R13,ASXBFLSA            GET LOCAL LOCK REG. SAVE AREA    09166503
         DROP  R13                     RELEASE ASXB                     09168502
         L     CVTREG,CVTPTR           GET CVT ADDRESS                  09168602
         L     R15,CVTSCBP             GET ADDRESS OF TRRM ROUTINE      09168902
         BALR  RETURN,R15              GO TO UPDATE ANY SCB'S           09171702
         DROP  ASCBREG                 RELEASE ASCB                     09172302
*  UPDATE THE RB CHAIN FIELD                                            09172902
         SPACE 2                                                        09173702
*/* P INDICATE XCTL IN PROCESS */                                       09173802
         SPACE 2                                                        09174102
         OI    RBCDFLGS,XCTL           INDICATE XCTL IN PROGRESS        09174502
         SPACE 2                                                        09174802
*/* D (YES,IRBPROC,NO,) IS THE REQUESTER AN IRB? */                     09174902
         SPACE 2                                                        09175102
         TM    RBSTABZ(OLDRB),RBFTSVRB  TEST CALLERS RB FOR IRB         09175202
         BNZ   IRBPROC                 IRB-BRANCH TO PROCESS AS IRB     09175302
*                                                                       09175402
*        THIS CODE IS ONLY FOR PRB'S WHICH ISSUE XCTL                   09175902
*  NEW RB ALREADY POINTS TO NEXT OLDER DUE TO RB INITIALIZATION         09176502
*                                                                       09177102
         SPACE 2                                                        09177502
*/* P POINT OLD PRB TO SVRB */                                          09177802
*/* P POINT SVRB TO NEW RB */                                           09178202
*/* P POINT TCB TO OLD RB */                                            09178602
*/* P TURN OFF LAST RB FLAG */                                          09179002
*/* P SET SVRB RESUME PSW TO IEAQCS02 */                                09179102
         SPACE 2                                                        09179402
         ST    RBREG,RBLINKZ(OLDRB)    POINT OLD RB TO SVRB             09179502
         ST    NEWRB,RBWCF             POINT SVRB TO NEW RB             09179802
         ST    OLDRB,TCBRBP            POINT TCB TO OLD RB              09181602
         NI    RBSTAB2Z(OLDRB),MAX-RBTCBNXT INSURE NOT EOT PROCESSING   09183202
         LA    WKREG1,IEAQCS02         GET RETURN POINT IN PROGRAM      09184402
         ST    WKREG1,RBOPSWA          MANAGER AND PUT IN SVRB PSW      09184502
         SPACE 2                                                        09184602
*/* L SETFRR-- REMOVE RECOVERY ROUTINE */                               09184702
         SPACE 2                                                        09184802
         SETFRR D,WRKREGS=(R11,R12)     REMOVE RECOVERY RTN.            09184902
         SPACE 2                                                        09185002
*/* L SETLOCK-- FREE LOCAL LOCK */                                      09185502
         SPACE 2                                                        09186602
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=FREE LOCK TO ISSUE SVC      09186802
         SPACE 2                                                        09186902
*/* L EXIT-- VIA SVC 3 TO FREE OLD PRB */                               09187102
         SPACE 2                                                        09187202
         SVC   EXIT                    EXIT XCTL RESUMES AT IEAQCS02    09188002
*                                                                       09188302
*        CONTROL RETURNS HERE AFTER EXIT OF CALLER PRB                  09188602
*                                                                       09188902
         SPACE 2                                                        09189002
*/*IEAQCS02: E IEAQCS02 */                                              09189302
*/* L SETLOCK-- OBTAIN LOCAL LOCK */                                    09189702
         SPACE 2                                                        09190702
IEAQCS02 DS    0H                      FETCH RESTARTS BEGIN HERE, TOO.  09191002
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=NO GET LOCAL     09191302
         SPACE 2                                                        09191502
*/* L SETFRR-- SET UP RECOVERY ROUTINE */                               09191702
         SPACE 2                                                        09191902
         SETFRR A,FRRAD=FRRPGM,WRKREGS=(R1,R15),PARMAD=(R8)             09192102
         SPACE 2                                                        09192502
*/* P (,CDADVANS) INITIALIZE RECOVERY PARAMETERS */                     09192902
         SPACE 2                                                        09193102
         ST    RBREG,N0(R8)            SAVE MY SVRB ADDR.               09193702
         ST    R8,RBCSFRRA             SAVE PARM LIST ADDRESS           09194002
         B     CDADVANS                PROCESS AS LINK                  09194302
*                                                                       09194602
*        THIS CODE IS ONLY FOR IRB'S WHICH ISSUE XCTL                   09194902
*                                                                       09195202
         SPACE 2                                                        09195602
*/*IRBPROC: P SET IRB OLD PSW TO SVC 3 */                               09195702
*/* P MAKE NEW RB RECOGNIZABLE AS PRB */                                09195802
*/* P POINT NEW RB TO IRB */                                            09195902
*/* P CLEAR 12 BYTE AREA IN NEW PRB */                                  09196002
         SPACE 2                                                        09199002
IRBPROC  DS    0H                      IRB PROCESSING                   09203202
         LA    WKREG1,CVTEXIT          IRB PROCDDEURE FOR XCTL IS       09205202
         ST    WKREG1,RBOPSWZ+N4(OLDRB)  TO PUT ADDRESS OF SVC 3        09209502
*                                      IN REQ'R PSW                     09211602
         XC    N0(PRBCLR,NEWRB),N0(NEWRB) CLEAR FIRST 12 BYTES    M3550 09213702
         SPACE 2                                                        09214702
*/* P (,CDADVANS) POINT SVRB TO NEW PRB */                              09215802
         SPACE 2                                                        09217902
         MVI   RBSIZ1+N1(NEWRB),PRBWDLEN INSERT PRB SIZE                09219902
         NI    RBSTABZ(NEWRB),PRBX     MARK RB AS PRB                   09222502
         OI    RBSTAB2Z(NEWRB),RBFDYN  INSURE CORE FREED ON EXIT  M3550 09226002
         ST    OLDRB,RBLINKZ(NEWRB)    POINT NEW RB TO IRB              09228002
         ST    NEWRB,RBWCF             POINT SVRB TO NEW RB             09230002
         B     CDADVANS                SEARCH FOR REQUESTED MODULE      09232002
         TITLE '               IEAVLK00 LOAD SVC - 8'                   09234002
         SPACE 2                                                        09236002
*/*IGC008: E LOAD */                                                    09238002
*/* P SET UP ADDRESSABILITY */                                          09240002
         SPACE 2                                                        09242002
IGC008   DS    0H                      SVC LOAD ENTRY POINT             09244002
         BALR  BASEREG,ZERO            SET UP BASE ADDRESSABILITY       09252002
         USING *,BASEREG               ON LOAD ENTRY                    09259602
         L     BASEREG,LINKBASE        RESET BASE TO VALUE LINK BASE    09267202
         USING CDLKBASE,BASEREG        FOR COMMON CODE                  09274802
         USING LLE,LDLREG              R13 ADDRESSES THE LLE            09282402
         SPACE 2                                                        09284402
*/* L SETFRR-- SET UP RECOVERY ROUTINE */                               09286402
         SPACE 2                                                        09288402
         SETFRR A,PARMAD=(R8),WRKREGS=(R11,R12),FRRAD=FRRPGM            09290002
         SPACE 2                                                        09292002
*/* P INITIALIZE RECOVERY PARAMETERS */                                 09292402
         SPACE 2                                                        09294002
         ST    R8,RBCSFRRA             SAVE PARM LIST ADDRESS           09300002
         ST    RBREG,N0(R8)            SAVE SVRB IN PARM LIST           09302002
         SPACE 2                                                        09303003
*/* P INDICATE PROG MGR SVRB FOR RTM */                                 09304003
         SPACE 2                                                        09305003
         OI    RBSTAB1,RBPMSVRB        THIS IS PROG MGR SVRB.  @YA00094 09306003
*                                      USED BY RTM TO INVOKE THE        09307003
*                                      ABEND RESOURCE MGR DURING        09308003
*                                      RECOVERY RETRY.                  09309003
         SPACE 2                                                        09310002
*/* P INDICATE REQUEST FOR LOAD IN VLKSVRB */                           09312002
*/* S DALPRFIX:SET UP RB EXTENDED SAVE AREA */                          09314002
*/* P GET POINTER TO JOB PACK AREA */                                   09316002
         SPACE 2                                                        09320002
         OI    RBCDFLGS,LOAD           INDICATE ENTRY BY LOAD MACRO.    09340002
         BAL   RETURND,DALPRFIX        SET UP REGS 9,10, AND EXSAVE     09390002
         L     TABREG,TCBJSTCB         GET JOB STEP TCB                 09440002
         LA    TABREG,TCBJSEZ(TABREG)  GET POINTER TO JPAQ              09490002
         SPACE 2                                                        09500002
*/* S (+0,ALOCLLE2,+4,CDCONTRL) CDLLSRCH:SEARCH LLE QUEUE FOR MODULE */ 09502002
         SPACE 2                                                        09510002
         BAL   SUBREG2,CDLLSRCH        SEARCH THE LOAD LIST QUEUE       09540002
         SPACE 2                                                        09550002
*/*ALOCLLE2: S (+0,CDCONTRL,+4,LLEFOUND,+8,CONTLLSR,+16,CDQUECTL)       09552002
*/*CDALLOC:DETERMINE AVAILABILITY OF MODULE */                          09554002
         SPACE 2                                                        09560002
ALOCLLE2 BAL   SUBREG2,CDALLOC         IF FOUND ALLOCATE                09590002
         B     CDCONTRL                NO SUCCESSFUL ALLOC              09640002
         B     LLEFOUND                SAVE LLE IN EXSA OF SVRB         09690002
         B     CONTLLSR                CONTINUE SEARCH                  09740002
         NOP   N0(N0,N0)               THIS RET SHOUDL NOT BE ENTERED   09790002
         B     CDQUECTL                QUEUE RB UNTIL MOD IF FETCHED.   09840002
         SPACE 2                                                        09850002
*/*CONTLLSR: S (+0,ALOCLLE2,+4,CDCONTRL) CDLLSRCH:CONTINUE LLE SEARCH   09852002
*/**/                                                                   09854002
         SPACE 2                                                        09860002
CONTLLSR LR    R1,R13                  PUT BEGIN LLE IN R1              09890002
         LA    SUBREG2,ALOCLLE2        PUT RETURN ADDRESS IN REG        09940002
         B     CDLLCONT                CONTINUE CONTINUE SEARCH         09990002
         SPACE 2                                                        10000002
*/*LLEFOUND: P SAVE LLE ADDRESS IN RB EXTENDED SAVE AREA */             10002002
*/* D (YES,,NO,CDEMERGE) WAS MODULE LOADED BY NIP? */                   10003002
*/* P SAVE VOLITAL REGSITERS ACROSS INTERFACE */                        10004002
*/* L SETLOCK-- OBTAIN CMS LOCK */                                      10005002
*/* P (,CDEMERGE) RESTORE VOLITAL REGSITERS */                          10006002
         SPACE 2                                                        10010002
LLEFOUND ST    LDLREG,RBCSLLE          SAVE LLE IN EXSA OF SVRB         10040002
         TM    CDATTRJ,CDNIP           LOADED BY NIP             M01907 10047002
         BZ    CDEMERGE                NO,CONTINUE               M01907 10054002
         STM   R11,R12,RBCSGR0         SAVE VOLITAL REGISTERS    M01907 10061002
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                   M01907 X10068002
               RELATED=('FREED BY EXIT PROLOGUE') GET CMS LOCK   M01907 10075002
         LM    R11,R12,RBCSGR0         RESTORE VOLIATL REGISTERS M01907 10082002
         B     CDEMERGE                COMPLETE REQUEST                 10090002
         EJECT                                                          10140002
*        THIS IS THE LOAD FINAL PROCESSING ROUTINE.  THE LLE IS EITHER  10190002
*        FOUND DURING THE LLE SEARCH, OR IS CREATED HERE (WITH COUNT    10240002
*        SET TO ZERO).  NEXT THE RESPONSIBILITY COUNT IS CHECKED FOR    10290002
*        THE MAXIMUM VALUE (7FFF). IF MAX VALUE WAS REACHED, 906 ABEND  10340002
*        IS GENERATED.  OTHERWISE THE COUNT IS INCREMENTED BY ONE, R15  10390002
*        IS SET TO ZERO, R0 IS SET TO THE REQUESTED ENTRY POINT,        10440002
*        R1 IS SET TO THE SIZE OF THE MODULE IN DOUBLE WORDS, AND THE   10490002
*        THE HIGH ORDER BYTE OF REGISTER 1 IS SET TO INDICATE THE APF   10540002
*        STATUS OF THE LOADED MODULE.  RETURN TO THE USER IS MADE VIA   10590002
*        A BRANCH TO THE EXIT PROLOGUE.                                 10640002
*        REGISTERS AT ENTRY                                             10690002
*              R3,4,5-  CVT,TCB,SVRB                                    10740002
*              R6    - BASE (IEAVLK00)                                  10790002
*              R11   - REQUESTED CDE                                    10840002
*              R12   - MAJOR CDE FOR REQUEST                            10890002
*              OTHER REGISTERS NOT REFERENCED                           10940002
*              SVRB EXSAVE FULLY INITIALIZED.                           10990002
         SPACE 2                                                        11040002
*/*CDLDRET: P GET ADDR OF LLE FROM RB EXTENDED SAVE AREA */             11050002
         SPACE 2                                                        11060002
CDLDRET  DS    0H                      FOAD FINAL PROCESSING            11090002
         L     LDLREG,RBCSLLE          GET LLE                          11140002
         SPACE 2                                                        11150002
*/* D (YES,LOLITA,NO,) WAS LLE FOUND? */                                11152002
         SPACE 2                                                        11160002
         LTR   LDLREG,LDLREG           DOES LLE EXIST                   11190002
         BNZ   LOLITA                  YES DO NOT GET ONE               11240002
         SPACE 2                                                        11250002
*/* L GETMAIN--  GET LLE FROM LSQA */                                   11252002
         SPACE 2                                                        11260002
         L     ASCBREG,PSAAOLD         GET ASCB ADDRESS FOR GM          11290002
         GETMAIN RU,LV=LLESIZE,SP=255,BRANCH=YES  GET LLE FROM 255      11340002
         SPACE 2                                                        11350002
*/* P INITIALIZE AND CHAIN LLE TO TOP OF LLE QUEUE */                   11352002
         SPACE 2                                                        11360002
         LR    LDLREG,R1               SET LLE BASE REGISTER            11390002
         L     WKREG1,TCBLLS           FIND LLE QUEUE ORIGIN            11440002
         ST    LDLREG,TCBLLS           MAKE THIS LLE FIRST LLE          11490002
         ST    WKREG1,LLECHN           POINT NEW LLE TO NEXT LLE        11540002
         LA    CDEREG,0(CDEREG)        CLEAR HIGH BYTE                  11550002
         SPACE 2                                                        11560002
*/* P POINT LLE TO MINOR CDE (OR MAJOR IF NO MINOR) */                  11562002
         SPACE 2                                                        11570002
         ST    CDEREG,LLECDPT          POINT LLE TO CDE                 11590002
         SR    WKREG1,WKREG1           CLEAR REG TO INITIALIZE COUNTS   11640002
         STH   WKREG1,LLECOUNT         SET TOTAL COUNT TO ZERO          11690002
         STH   WKREG1,LLESYSCT         SET SYSTEM COUNT TO ZERO         11740002
         SPACE 2                                                        11750002
*/*LOLITA: D (NO,LOLIT,YES,) LLE RESPONS COUNT = MAX? */                11752002
         SPACE 2                                                        11760002
LOLITA   CLC   LLECOUNT(N2),MAXIM      IS LLECOUNT MAXIMUM              11790002
         BNE   LOLIT                   IF NOT CONTIMUE AT LOLIT         11840002
         SPACE 2                                                        11850002
*/* P INITIALIZE ABEND CODE = 0 */                                      11852002
*/* P DECREMENT MAJOR CDE USE COUNT BY 1 */                             11854002
*/* S () ERRCONT:GIVE ABEND CODE 906 */                                 11856002
         SPACE 2                                                        11860002
         SR    R13,R13                 OTHERWISE ABEND 906              11890002
         LH    WKREG1,CDUSEJ           PICK UP FIRST BYTE               11940002
         BCTR  WKREG1,N0               DECREMENT COUNT BY ONE           11990002
         STH   WKREG1,CDUSEJ           PUT COUNT BACK IN CDE            12040002
         B     ERRCOUNT                GO TO ABEND                      12340002
         SPACE 2                                                        12350002
*/*LOLIT: P INCREMENT LLE TOTAL RESPONSIBILITY BY 1 */                  12352002
         SPACE 2                                                        12360002
LOLIT    LH    WKREG1,LLECOUNT         PICK UP USE COUNT                12390002
         LA    WKREG1,N1(WKREG1)       INCREMENT BY ONE                 12440002
         STH   WKREG1,LLECOUNT         STORE THE NEW COUNT              12490002
         SPACE 2                                                        12500002
*/* D (NO,LOXLBLD,YES,) IS THIS A SYSTEM REQUEST? */                    12502002
         SPACE 2                                                        12510002
         TM    RBCSFLG1,RBCSSYSR       SYSTEM REQUEST                   12540002
         BZ    LOXLBLD                 NO- GET EP AND LNG FOR EXIT      12590002
         SPACE 2                                                        12600002
*/* P INCREMENT SYSTEM RESPONSIBILITY COUNT IN LLE BY 1 */              12602002
         SPACE 2                                                        12610002
         LH    WKREG1,LLESYSCT         LOAD LLE SYSTEM USE COUNT        12640002
         LA    WKREG1,N1(WKREG1)       INCREMENT BY ONE                 12690002
         STH   WKREG1,LLESYSCT         STORE NEW LLE SYSTEM USE COUNT   12740002
         SPACE 2                                                        12750002
*/*LOXLBLD: P SET RETURN CODE = 0 */                                    12752002
*/* P GET ADDRESS OF EXTENT LIST */                                     12754002
*/* P GET NUMBER OF EXTENTS FROM XL */                                  12756002
         SPACE 2                                                        12760002
LOXLBLD  DS    0H                                                       12790002
         SR    R15,R15                 CLEAR RETURN CODE REGISTER       14790002
         SR    WKREG1,WKREG1           CLEAR REGISTER FOR LOOP @ZA16851 14810040
         L     WKREG2,CDXLMJPJ         GET XTLST ADDRESS                14840002
         LTR   WKREG2,WKREG2           DOES XTLST EXIST?       @ZA16851 14850040
         BZ    NOXL                    NO.SKIP MOD LENGTH CALC @ZA16851 14860040
         L     COMREG,N4(WKREG2)       GET NUMBER OF EXTENTS            14890002
         SPACE 2                                                        14950002
*/*ADDLOOP: P CALCULATE MODULE LENGTH */                                14952002
*/* P REDUCE LENGTH TO NO. OF DWDS IN R1 */                             14954002
         SPACE 2                                                        14960002
ADDLOOP  AL    WKREG1,N8(WKREG2)       ADD NEXT LENGTH                  14990002
         LA    WKREG2,N4(WKREG2)       POINT TO NEXT LENGTH             15040002
         BCT   COMREG,ADDLOOP          IF ANOTHER EXTENT, ADD IT        15090002
*                                      OTHERWISE DROP THROUGH           15140002
         LA    WKREG1,MASK(WKREG1)     ROUND UP TO NEXT BOUNDARY        15190002
         SRL   WKREG1,N3               CONVERT SIZE TO DOUBLE WORDS     15240002
         SPACE 2                                                        15250002
*/* P SET R0 = ENTRY POINT OF MODULE (FROM MINOR CDE) */                15252002
         SPACE 2                                                        15260002
NOXL     DS    0H                                              @ZA16851 15270040
         L     COMREG,CDENTPT          GET ENTRY POINT FROM CDE         15290002
         LA    R0,N0(COMREG)           SET RETURN REG AND CLEAR BYTE    15340002
         SPACE                                                          15390002
*        LOAD APF INCIDATOR SETTING.  PUT AUTHORIZATION INTO REGISTER   15440002
*        1, HIGH ORDER BYTE.                                            15490002
         SPACE                                                          15540002
         TM    CDATTR2,CDAUTH          IS MAJOR AUTHORIZED              15590002
         BNO   NOLDAUTH                SKIP FLAG SETTING                15640002
         ICM   R1,AUTHBYTE,AUTHON      SET APF FLAG                     15690002
         SPACE 2                                                        15700002
*/*NOLDAUTH: L SETFRR-- REMOVE RECOVERY ROUTINE */                      15702002
         SPACE 2                                                        15710002
NOLDAUTH DS    0H                      FLAG SKIP LABEL                  15740002
         SETFRR D,WRKREGS=(R11,R12)    REMOVE RECOVERY RTN.             15742002
         SPACE 2                                                        15744002
*/* P GET ADDRESS OF EXIT PROLOGUE IN R14 */                            15746002
*/* R RETURN BR 14 */                                                   15746402
         SPACE 2                                                        15748002
         L     CVTREG,CVTPTR           GET CVT ADDRESS                  15750002
         L     R14,CVTEXPRO            GET EXIT ADDR.                   15790002
         BR    R14                     EXIT TO ISSUER OF LOAD SVC       15840002
         TITLE '               IEAVLK00 DELETE - SVC 9'                 15890002
         SPACE 2                                                        15900002
*/*IGC009: E DELETE */                                                  15902002
*/* P ESTABLISH ADDRESSABILITY */                                       15904002
         SPACE 2                                                        15910002
IGC009   DS    0H                      DELETE ENTRY POINT               15940002
         BALR  BASEREG,ZERO            SET UP BASE ADDRESS              15950002
         USING *,BASEREG               SET UP TEMPORARY BASE            15960002
         L     BASEREG,LINKBASE        SET UP ADDRESSABILITY OVER       15970002
         USING CDLKBASE,BASEREG        ENTIRE MODULE.                   15980002
         SPACE 2                                                        15980102
*/* L SETFRR-- SET UP RECOVERY ROUTINE */                               15981802
*/* P INITIALIZE FRR PARAMETERS */                                      15983802
         SPACE 2                                                        15984502
         SETFRR A,PARMAD=(R8),WRKREGS=(R11,R12),FRRAD=FRRPGM            15986202
         ST    R8,RBCSFRRA             SAVE PARM LIST ADDRESS           15987902
         ST    RBREG,N0(R8)            SAVE SVRB ADDR. IN PARM LIST     15988302
         SPACE 2                                                        15989302
*/* P INSURE EP FORM (DE NOT ACCEPTED) */                               15989402
*/* S DALPRFIX:INITIALIZE RB EXTENDED SA */                             15989602
         SPACE 2                                                        15989702
         ICM   R0,MASK8,CLRBYTE        CLEAR BYTE FOR PREFIX ROUTINE    15989802
*                                      NO DE FORM POSSIBLE              15991302
         SR    R1,R1                   NO DCB ADDR POSSIBLE             15993002
         BAL   RETURND,DALPRFIX        SET UP R9,R10 AND EXSAVE         15994702
         SPACE 2                                                        15996802
*/* S CDLLSRCH:SEARCH LLE QUEUE */                                      15997202
         SPACE 2                                                        15997602
*        DELETE WILL SEARCH THE LOAD LIST FOR THE MODULE TO BE DELETED. 15998102
*        IF THE MODULE IS NOT ON THE LOAD LIST, A CODE OF 4 IS          15999802
*        RETURNED IN REG. 15. A CODE OF 8 IS RETURNED IN REG. 15 IF     16001502
*        THE MODULE TO BE DELETED WAS NOT LOADED BY THE USER ROUTINE.   16003202
*        IF THE DELETE IS SUCCESSFUL A CODE OF 0 IS RETURNED IN         16004902
*        REGISTER 15.                                                   16006602
*        CDLLSRCH WILL RETURN TO EITHER OF TWO LOCATIONS                16016602
*              IF MODULE IS FOUND  - BRANCH ON SUBREG2                  16018602
*              IF MODULE NOT FOUND - BRANCH ON SUBREG2+4                16020602
         SPACE 1                                                        16022602
         BAL   SUBREG2,CDLLSRCH        SEARCH LOAD LIST OFF TCB         16029002
         SPACE 2                                                        16031002
*/*%CDLLS: D (YES,LLFOUND,NO,) LLE FOUND? */                            16031502
         SPACE 2                                                        16031602
         B     LLFOUND                 MDOULE FOUND                     16033002
         SPACE 2                                                        16033302
*/* L () EXIT-- PROLOGUE RC=4 */                                        16033402
         SPACE 2                                                        16033902
         LA    R15,FOUR                MODULE NOT FOUND                 16034002
         B     DELETXIT                EXIT FROM DELETE                 16035302
         SPACE 2                                                        16037302
*/*LLFOUND: D (NO,CDNON01,YES,) CDE A MINOR? */                         16037502
*/* P GET MAJOR */                                                      16037602
         SPACE 2                                                        16037702
LLFOUND  DS    0H                      LLE EXISTS                       16038602
         TM    CDATTR,CDMIN            IF MINOR PICK UP MAJOR           16039502
         BNO   CDNON01                 SKIP PICK UP IF MAJOR            16041602
         L     CDEREG,CDXLMJP          PICK UP MAJOR ADDRESS            16051802
         SPACE 2                                                        16054402
*/*CDNON01: D (NO,PPREQ,YES,) SYSTEM REQUEST? */                        16054502
         SPACE 2                                                        16054802
CDNON01  TM    RBCSFLG1,RBCSSYSR       Q. SYSTEM REQUEST                16055302
         BZ    PPREQ                   A. NO CONTINUE DELETE FOR USER   16058802
         SPACE 2                                                        16061802
*/* D (NO,TSTOK,YES,) SYSTEM COUNT = 0? */                              16061902
         SPACE 2                                                        16062202
         LH    WKREG2,LLESYSCT         GET SYSTEM COUNT                 16062302
         LTR   WKREG2,WKREG2           SYSTEM LLE USE COUNT ZERO        16065802
         BNZ   TSTOK                   A. NO-DELETE THIS MODULE         16069302
         SPACE 2                                                        16072302
*/*RETRYLLE: S (,%CDLLS) CDLLCONT:CONTINUE SEARCH */                    16072402
         SPACE 2                                                        16072702
RETRYLLE LR    R1,LDLREG               A. NO- SET SEARCH TO BEGIN WITH  16072802
*                                      THIS MODULE                      16076302
         B     CDLLCONT                CONTINUE SEARCH                  16079802
         SPACE 2                                                        16081802
*/*PPREQ: D (NO,RETRYLLE,YES,DELNORM) TOTAL USE COUNT GT SYSTEM USE     16081902
*/*COUNT? */                                                            16083402
         SPACE 2                                                        16087502
PPREQ    CLC   LLECOUNT,LLESYSCT       TEST TOTAL COUNT > SYSTEM COUNT  16089002
         BNH   RETRYLLE                GET ANOTHER LLE                  16090502
         B     DELNORM                 CONTINUE NORMAL DELETE           16092002
         SPACE 2                                                        16093502
*/*TSTOK: P DECREMENT SYSTEM USE COUNT */                               16095002
         SPACE 2                                                        16096502
TSTOK    BCTR  WKREG2,N0               DECREMENT BY ONE                 16098002
         STH   WKREG2,LLESYSCT         STORE SYSTEM COUNT               16099502
         SPACE 2                                                        16101002
*/*DELNORM: P DECREMENT LLE COUNT BY ONE */                             16101402
*/* D (NO,LLNON0,YES,) LLE USE COUNT = 0? */                            16102502
         SPACE 2                                                        16104002
DELNORM  LH    WKREG2,LLECOUNT         GET USE COUNT                    16105502
         BCT   WKREG2,LLNON0           IF NOT 0, FREE LLE               16107002
         SPACE 2                                                        16108502
*/* P DEQUEUE LLE */                                                    16110002
         SPACE 2                                                        16111502
         MVC   N0(WORD,WKREG1),LLECHN  REMOVE ELEMENT FROM LIST         16113002
         L     AREAREG,PSAAOLD         GET ASCB FOR FREEMAIN            16114502
         SPACE 2                                                        16116002
*/* L (,MAJOR) FREEMAIN-- FREE LLE */                                   16117502
         SPACE 2                                                        16119002
         FREEMAIN RU,SP=255,A=(LDLREG),LV=LLESIZE,BRANCH=YES FREE LLE   16120502
         B     MAJOR                   SKIP STORING- LLE WAS FREED      16122002
         SPACE 2                                                        16123502
*/*LLNON0: P STORE NEW LLE USE COUNT */                                 16125002
         SPACE 2                                                        16126502
LLNON0   STH   WKREG2,LLECOUNT         SAVE NEW COUNT                   16128002
         SPACE 2                                                        16128202
*/*MAJOR: D (NO,JPQMOD,YES,) CDE ON LPA QUEUE? */                       16128402
*/* P SAVE R11 - R13 IN RB EXTENDED SAVE AREA */                        16128602
*/* L SETLOCK-- GET CMS LOCK */                                         16128802
*/* P RESTORE R11 - R13 */                                              16129002
         SPACE 2                                                        16129502
MAJOR    TM    CDATTR,CDNIP            CDE ON LPAQ TEST                 16131002
         BZ    JPQMOD                  NO-SKIP GETTING CMS LOCK @Y04990 16131802
         STM R11,R13,RBCSGR15          SAVE VOLITAL REGISTERS   @Y04990 16132602
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                   @Y04990x16133402
               RELATED=('IEAVLK02,CDHKEEP,EXITSRCH OR EXITPROLOGUE')    16134202
         LM    R11,R13,RBCSGR15        RESOTRE VOLITAL REGS     @Y04990 16135002
         SPACE 2                                                        16135802
*/*JPQMOD: P DECREMENT CDE USE COUNT */                                 16137002
*/* D (NO,CDNON0,YES,) CDE USE COUNT = 0? */                            16137702
         SPACE 2                                                        16138502
JPQMOD   DS    0H                      DECREMENT CDE COUNT              16139502
         LH    WKREG2,CDUSE            PICK UP USE COUNT IN CDENTRY     16140502
         BCTR  WKREG2,N0               DECREMENT COUNT BY ONE           16142002
         STH   WKREG2,CDUSE            SAVE NEW CDUSE COUNT             16143002
         LTR   WKREG2,WKREG2           Q. USE COUNT ZERO                16144502
         BNZ   CDNON0                  A. NO- GIVE NORMAL RETURN        16144802
         SPACE 2                                                        16146002
*/* S CDHKEEP:FREE CDE AND MINORS */                                    16147002
         SPACE 2                                                        16148902
         L     GR15,HKPADDR            SET UP ENTRY POINT ADDRESS       16149002
         BALR  RETURN,GR15             BRANCH TO CDHKEEP,RET REG SET    16150502
         SPACE 2                                                        16151502
*/*CDNON0: P SET RETURN CODE IN REG 15 = 0 */                           16152802
         SPACE 2                                                        16153802
CDNON0   DS    0H                      DELETE EXIT SUCCESSFUL           16154802
         SR    R15,R15                 INDICATE DELETE SUCCESSFUL       16155802
         SPACE 2                                                        16156802
*/*DELETXIT: P GET EXIT PROLOGUE ENTRY POINT */                         16158802
         SPACE 2                                                        16159502
DELETXIT DS    0H                      EXIT FROM DELETE          PTM023 16160002
         L     CVTREG,CVTPTR           GET CVT ADDRESS                  16162002
         L     RETURN,CVTEXPRO         GET ADDRESS OF EXIT PROLOGUE     16163202
         SPACE 2                                                        16164202
*/* L SETFRR-- REMOVE RECOVERY ROUTINE */                               16165402
*/* R RETURN VIA BR 14 */                                               16165602
         SPACE 2                                                        16166602
         SETFRR D,WRKREGS=(R1,R2)      REMOVE RECOVERY RTN.             16167602
         LM    R0,R1,RBGRS0            PASS PARAMETERS TO USER          16169402
         BR    RETURN                  GO TO EXIT PROLOGUE              16170402
         TITLE '               IEAVLK00 SYNCH - SVC 12'                 16171402
         SPACE 2                                                        16172402
*/*IGC012: E SYNCH */                                                   16173402
*/* P SET UP ADDRESSABILITY */                                          16174402
         SPACE 2                                                        16175402
IGC012   DS    0H                      SVC SYNCH ENTRY                  16176402
         BALR  BASEREG,ZERO            SET UP ADDRESSIBILITY            16177402
         USING *,BASEREG               TEMPORARY BASE FOR NEXT INST.    16179702
         L     BASEREG,LINKBASE        PICK UP PERMANENT BASE           16190002
         USING CDLKBASE,BASEREG        SET ADDRESSABILITY               16240002
         SPACE 2                                                        16242002
*/* L SETFRR-- SET UP RECOVERY ROUTINE */                               16242402
*/* P INITIALIZE RECOVERY PARAMETERS */                                 16242802
         SPACE 2                                                        16244002
         SETFRR A,PARMAD=(R8),WRKREGS=(R11,R12),FRRAD=FRRPGM            16250002
         ST    R8,RBCSFRRA             SAVE PARM LIST ADDRESS           16260002
         ST    RBREG,N0(R8)            PUT SVRB ADDR IN PARMLIST M01978 16265002
         SPACE 2                                                        16270002
*/* P MOVE ENTRY POINT ADDRESS FROM R15 TO R14 */                       16280002
*/* P (,THRUX) INDICATE IN CDFLGS THE REQUEST IS SYNCH */               16280402
         SPACE 2                                                        16282002
         LR    SUBREG1,R15             PUT ENTRY ADDRESS IN REGISTER    16290002
*                                      EXPECTED BY THRUX                16340002
         OI    RBCDFLGS,SYNC           SET FLAG IN RBCDFLGS INDICATING  16390002
*                                      ENTRY TO MAINLINE BY SYNCH       16440002
         B     THRUX                   CONTINUE SYNCH PROCESSING        16490002
*                                      IN COMMON CODE                   16540002
         TITLE '               IEAVLK00 ATTACH INTERFACE ENTRY'         16590002
* ENTRY POINT FOR ATTACH                                                16640002
* ENTRY CONDITIONS                                                      16690002
*           R0 = ADDRESS OF PN OR DE                                    16740002
*           R0 = IS COMPLIMENTED IF DE                                  16790002
*           R1 = ADDRESS OF CDE                                         16840002
*           R3 = ADDRESS OF CVT                                         16842002
*           R4 = ADDRESS OF TCB                                         16844002
*           R5 = ADDRESS OF PGM. MGR. SVRB                              16846002
*          ON ENTRY THE PSW IS FULLY ENABLE, PRIVILEGED, KEY 0,         16850002
*          NO LOCKS ARE HELD ON ENTRY                                   16870002
         SPACE  2                                                       16890002
*/*IEAQCS01: E ATTACH */                                                16892002
         SPACE 2                                                        16900002
IEAQCS01 DS    0H                      ENTRY POINT FOR ATTACH           16940002
         SPACE 2                                                        16942002
*/* P SET UP ADDRESSIBILITY */                                          16942402
         SPACE 2                                                        16944002
         BALR  BASEREG,ZERO            SET UP TEMPORARY BASE            16950002
         USING *,BASEREG               USED TO GET NORMAL BASE          16960002
         L     BASEREG,LINKBASE        SET UP PERMANENT BASE            16970002
         USING CDLKBASE,BASEREG        SET ADDRESSABILITY               16980002
         SPACE 2                                                        16980402
*/* P TURN ON ATTACH FLAG IN RBCDE FIELD */                             16980502
         SPACE 2                                                        16980802
         OI    RBCDFLGS,RBCSATT        SET ATTACH BIT ON IN RB          16982002
         SPACE 2                                                        16982103
*/* P INDICATE PROG MGR SVRB FOR RTM */                                 16982203
         SPACE 2                                                        16982303
         OI    RBSTAB1,RBPMSVRB        THIS IS PROG MGR SVRB.  @YA00094 16982403
*                                      USED BY RTM TO INVOKE THE        16984003
*                                      ABEND RESOURCE MGR DURING        16985703
*                                      RECOVERY RETRY.                  16986103
         SPACE 2                                                        16986703
*/* L SETLOCK-- OBTAIN LOCAL LOCK */                                    16987403
         SPACE 2                                                        16989003
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=EXIT             16990003
         SPACE 2                                                        16991003
*/* L SETFRR-- INITIALIZE RECOVERY ROUTINE */                           16992003
*/* P CLEAR WORK FIELDS IN RB EXTENDED SAVE AREA */                     16992540
*/* P INITIALIZE RECOVERY PARAMENTERS */                                16993003
         SPACE 2                                                        16994003
         SETFRR A,PARMAD=(R8),WRKREGS=(R11,R12),FRRAD=FRRPGM            16996803
         XC    RBCSERRA(CLRSIZE+EIGHT),RBCSERRA CLEAR WORK AREA  @WAB   16997040
         ST    R8,RBCSFRRA             SAVE PARM LIST ADDRESS           16997203
         ST    RBREG,N0(R8)             SAVE SVRB ADDR. IN PARM LIST    16998603
         SPACE 2                                                        17000403
*/* P INITIALIZE NAME AND DCB REGISTERS */                              17001403
         SPACE 2                                                        17004003
         LPR   NAMEREG,R0              GET UNCOMPLIMENTED NAME ADDRES   17004703
         LA    DCBREG,N0(R1)           SET UP COMMON DCB REG.           17005403
         LNR   DCBREG,DCBREG           SET NEG. - DCB NOT CHKED  M04728 17007603
         SR    R1,R1                   PREPARE FOR TYPE STORAGE         17009403
         SPACE 2                                                        17011203
*/* D (NO,EPFRM,YES,) DE FORM OF ATTACH? */                             17012103
         SPACE 2                                                        17013603
         LTR   R0,R0                   Q. DE FORM REQUEST               17014803
         BNM   EPFRM                   A. NO- USE EP FORM               17015703
         SPACE 2                                                        17016603
*/* P PUT NAME AND DE POINTER IN RBXSA */                               17017603
         SPACE 2                                                        17018603
         MVC   RBCSNAME(EIGHT),N4(NAMEREG) PUT NAME IN XSA              17020603
         LR    R1,NAMEREG              SAVE ADDRESS OF DE               17021603
         LA    NAMEREG,RBCSNAME        POINT NAME REG. TO XSA NAME      17022603
         SPACE 2                                                        17023303
*/*EPFRM: D (NO,AUTHOFF,YES,) ATTACH CALLER AUTHORIZED? */              17024303
*/* P INDICATE AUTHORIZED CALLER IN RBXSA */                            17025303
         SPACE 2                                                        17026303
EPFRM    TM    RBCSDE,X80              Q. ATTACH CALLER AUTHORIZED      17027303
         BZ    AUTHOFF                 A. NO- SKIP BIT SETTING          17028303
         OI    RBCSFLG1,RBCSSYSR       A. YES- INDICATE FOR FUTURE USE  17029303
         SPACE 2                                                        17029440
*/* D (NO,AUTHOFF,YES,) ATTACH WITH RESET APF? */                       17029540
*/* P INDICATE ATTACH WITH RESET (RBCRSAPF=1) */                        17029640
         SPACE 2                                                        17029740
         TM    RBCSDE,X40               ATTACH WITH RESET APF?  @WAB    17029840
         BZ    AUTHOFF                  NO-SKIP SETTING BIT     @WAB    17029940
         OI    RBCSFLG1,RBCRSAPF        YES-INDICATE FOR FUTURE @WAB    17030040
         SPACE 2                                                        17030303
*/*AUTHOFF: P (,CDADVANS) COMPLETE RBXSA INITIALIZATION */              17031303
         SPACE 2                                                        17032303
AUTHOFF  ST    R1,RBCSDE               STORE DE ADDRESS IN XSA          17033303
         B     CDADVANS                GO TO LINK MAINLINE              17034303
         TITLE '               IEAVLK00 COMMON SUBROUTINES'             17035303
*        CDEMERGE COMPLETES PROCESSING FOR LINK,XCTL,LOAD,AND ATTACH.   17040002
*        THE WORK AREAS FOR BLDL/FETCH, AND THE DE SAVE SAVES ARE FREED 17090002
*        IF PRESENT, THE RESPONSIBILITY COUNT IS INCREMENTED, AND       17140002
*        CONTROL PASSES TO CDEPILOG TO PASS CONTROL TO THE NEXT LEVEL   17190002
*        OF CONTROL (LINK,XCTL,ATTACH), OR TO CDLDREG FOR FINAL LOAD    17240002
*        PROCESSING.                                                    17290002
*        REGISTERS ON ENTRY                                             17340002
*              R3,4,5 - CVT,TCB,SVRB                                    17390002
*              R6     - BASE REGISTER                                   17440002
*              R11    - REQUESTED CDE                                   17490002
*              R12    - MAJOR CDE FOR REQUEST                           17540002
*              OTHER REGISTERS ARE NOT REFERENCED.                      17590002
*              SVRB EXSAVE FULLY INITIALIZED.                           17640002
         SPACE 2                                                        17650002
*/*CDEMERGE: S CDMOPUP:GO FREE WORK AREAS */                            17654002
         SPACE 2                                                        17660002
CDEMERGE DS    0H                                                       17690002
         BAL   RETURND,CDMOPUP         GO FREE WORK AREAS               17740002
         SPACE 2                                                        17750002
*/* D (YES,CDLDRET,NO,) LOAD REQUEST? */                                17752002
         SPACE 2                                                        17760002
         TM    RBCDFLGS,LOAD           Q. IS A LOAD IN PROCESS          17790002
         BO    CDLDRET                 YES-GO DO SPECIAL WORK FOR LOAD  17840002
         SPACE                                                          17890002
*        APF TEST. IF ATTACHED JOB STEP, AND CDE IS AUTHORIZED, THE     17940002
*        BIT IN THE JSCB WILL BE SET TO INDICATE AUTHORIZATION.         17990002
         SPACE 2                                                        18050002
*/* D (NO,CDEPILOG,YES,) ATTACH REQUEST? */                             18052002
         SPACE 2                                                        18060002
         TM    RBCDFLGS,RBCSATT        Q. IS ATTACH IN PROCESS          18090002
         BNO   CDEPILOG                NO - GO TO CDEPILOG              18140002
         SPACE 2                                                        18150002
*/* D (YES,TSTCDAUT,NO,) JOB STEP ATTACH? */                            18152040
         SPACE 2                                                        18160002
         CLM   TCBREG,MASK,TCBJSTCA    Q. IS IT A JOB STEP ATTACH       18190002
         BE    TSTCDAUT                YES GOTO TEST CDE AUTH  @WAB     18240040
         SPACE 2                                                        18240340
*/* D (NO,CDEPILOG,YES,) ATTACH WITH RESET APF? */                      18240640
         SPACE 2                                                        18240940
         TM    RBCSFLG1,RBCRSAPF        IS ATTACH W/ RESET APF @WAB     18241240
         BNO   CDEPILOG                 NO - GO TO RETURN      @WAB     18241540
         SPACE 2                                                        18241840
*/* L TESTAUTH -- TEST CALLERS APF AUTHORIZATION */                     18242140
         SPACE 2                                                        18242440
         TESTAUTH FCTN=1,BRANCH=YES     CALLER  AUTHORIZED ?   @WAB     18242740
         SPACE 2                                                        18243040
*/* P RESET CVT POINTER IN CVT REG (R3) */                              18243340
         SPACE 2                                                        18243640
         L     CVTREG,CVTPTR            RESET CVT REGISTER     @WAB     18243940
         USING CVT,CVTREG               SET ADDRESSABILITY     @WAB     18244240
         SPACE 2                                                        18244540
*/* D (NO,TSTCDAUT,YES,) CALLER APF AUTHORIZED ? */                     18244840
         SPACE 2                                                        18245140
         LTR   R15,R15                  CALLER APF AUTHORIZED  @WAB     18245440
         BNZ   TSTCDAUT                 NO - TEST CD AUTH      @WAB     18245740
         SPACE 2                                                        18246040
*/* P (,ABNDSET) INDICATE 306-C ABEND */                                18246340
         SPACE 2                                                        18246640
         SR    R13,R13                  ZERO ABEND CODE REG    @WAB     18246940
         LA    R15,BADRETCD             INDICATE RC=X'0C'      @WAB     18247240
         OI    RBCSFLG1,RBCSA306        INDICATE 306 ABEND     @WAB     18247540
         B     ABNDSET                  GO PROCESS ABEND       @WAB     18247840
         SPACE 2                                                        18250002
*/*TSTCDAUT: D (NO,CDEPILOG,YES,) CDE AUTHORIZED? */                    18252040
         SPACE 2                                                        18260002
TSTCDAUT TM    CDATTR2,CDAUTH          IS REQUEST AUTHORIZED            18290040
         BNO   CDEPILOG                NO SKIP BIT SETTING              18340002
         SPACE 2                                                        18350002
*/* P (,CDEPILOG) SET JSCB AUTHORIZATION BIT */                         18352002
         SPACE 2                                                        18360002
         L     R15,TCBJSCB             GET JSCB ADDRESS                 18390002
         LA    R15,N0(R15)             CLEAR HIGH ORDER BYTE            18400002
         LTR   R15,R15                 Q. DOES JSCB EXIST               18410002
         BZ    CDEPILOG                A. NO- SKIP BIT SETTING          18420002
         USING IEZJSCB,R15             SET ADDRESSABILITY               18440002
         OI    JSCBOPTS,JSCBAUTH       AUTHORIZE THE JOB STEP           18490002
         B     CDEPILOG                GO TO CDEPILOG          @YM08356 18510002
         EJECT                                                          18590002
*THIS SECTION OF CODE DOES THE FOLLOWING                                18640002
*                                                                       18690002
*        1.CREATES THE 'PRB' IN WHICH THE LINKAGE TO AND OPERATION      18740002
*          OF A PROGRAM IS RECORDED. HERE THE FOLLOWING IS DONE         18790002
*                                                                       18840002
*              A.USING GETMAIN, 96 BYTES ARE OBTAINED FOR A PRB.        18890002
*                THE FIRST 96 BYTES OF THE SVRB ARE DUPLICATED IN THE   18940002
*                NEWLY CREATED PRB.                                     18990002
*                                                                       19040002
*              B.THE SIZE FIELD WILL BE SET TO 13, INDICATING 13        19090002
*                DOUBLE WORDS.                                          19140002
*                                                                       19190002
*              C.THE PRB IS QUEUED BEHIND THE SVRB SO EXIT WILL         19240002
*                FREE UP THE SVRB. THE ENTRY POINT OF THE MODULE        19290002
*                IS STORED INTO THE RIGHT HALF OF THE PRB'S PSW.        19340002
*                                                                       19390002
*              D.THE RBCDE FIELD IS SET TO POINT TO A CDENTRY, IN SYNCH 19440002
*                THE FIELD IS SET TO ZERO.                              19490002
*                                                                       19540002
*              E.THE PRB IS MARKED AS A PRB (CURRENTLY REFLECTS SVRB)   19590002
*                                                                       19640002
*              F.A PSW IS STRUCTURED WHICH PROPOGATES THE LEFT 5 BYTES  19690002
*               FROM THE PREVIOUS LEVEL OF CONTROL(INDICATED BY AN RB). 19740002
*                IF THIS IS THE ONLY CONTROL LEVEL OF THIS TASK,THE     19790002
*                SYSTEM MASK IS SET ENABLED,AS IS THE PROGRAM MASK. THE 19890002
*                OPERATING STATE (PROBLEM OR SUPERVISOR) AND THE        19940002
*                PROTECTION KEY ARE SET ACCORDING TO THEIR VALUES       19990002
*                IN THE TCB.  FOR SVC SYNCH THE PSW WILL BE STRUCTURED  20040002
*                WITH ALL MASKS ENABLED, ALWAYS IN THE PROBLEM PROGRAM  20090002
*                STATE, AND WITH A PROTECTION KEY VALUE ACQUIRED FROM   20140002
*                THE TCB.                                               20190002
*                                                                       20240002
*        2.REGISTERS ARE SET UP AS FOLLOWS                              20290002
*              A.REGISTER 14 CONTAINS THE ADDRESS OF AN SVC 3           20340002
*                INSTRUCTION IN THE CVT.                                20390002
*              B.REGISTER 15 CONTAINS THE ENTRY POINT OF THE            20440002
*                MODULE TO GAIN CONTROL.                                20490002
*              C.REGISTER 0 MAY BE ALTERED FROM THE TIME THE SVC        20540002
*                WAS ISSUED (THIS IS THE CASE WITH XCTL).               20590002
*              D.REGISTERS 0 AND 1 ARE ALTERED BY THE LOAD USER         20640002
*                MACRO. XCTL AND LINK MAINTAIN REGISTER 1 INTACT.       20690002
*              E.REGISTERS 2-13 ARE THE SAME AS WHEN THE SVC WAS        20740002
*                ISSUED.                                                20790002
*                                                                       20840002
*        3.EXIT MOVES REGISTERS 2-24 INTO THE TCB AND FREES THE SVRB.   20890002
*          REGISTERS 0,1, AND 15 ARE PUT INTO THE TCB                   20940002
*          CONTAINING THE VALUES AT THE TIME THE EXIT PROLOGUE          20990002
*          WAS ISSUED IN IEAVLK00.                                      21040002
*                                                                       21090002
*        4.THE DISPATCHER WILL LATER DO A LOADPSW FROM THE              21140002
*          NEWLY CREATED PRB TO GIVE CONTROL TO THE MODULE.             21190002
         SPACE 2                                                        21200002
*/*IEAQCS03: E ENTRY IEAQCS03 */                                        21202002
         SPACE 2                                                        21202202
IEAQCS03 DS    0H                      FINAL LINK,XCTL,ATTACH PROCESS   21202402
         SPACE 2                                                        21202602
*/*          L SETLOCK-- OBTAIN LOCAL LOCK */                           21202802
*/*          L SETFRR-- INITIALIZE RECOVERY ROUTINE */                  21203002
         SPACE 2                                                        21203202
         LR    R7,R11                  SAVE R11 ACROSS SETLOCK @YM08356 21204002
         LR    R1,R12                  SAVE R12 ACROSS SETLOCK @YM08356 21207002
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=NO      @YM08356 21210002
         LR    R11,R7                  RESTORE R11             @YM08356 21213002
         LR    R12,R1                  RESTORE R12             @YM08356 21216002
         SETFRR A,FRRAD=FRRPGM,WRKREGS=(R1,R15),PARMAD=(R13)   @YM08356 21219002
         ST    RBREG,N0(R13)           SAVE SVRB PTR FOR FRR   @YM08356 21222002
         ST    R13,RBCSFRRA            SAVE FRR PARM AREA      @YM08356 21225002
         SPACE 2                                                        21228002
*/*CDEPILOG: P GET ENTRY POINT ADDRESS */                               21231002
*/* P SET NFN (NOT FUNCTION ALIVE) BIT */                               21240002
CDEPILOG L     SUBREG1,CDENTPT         PICK UP ENTRY POINT ADDRESS.     21290002
         OI    CDATTR,CDNFN            SET NFN .. IF PROGRAM            21340002
*                                      IS REENTRABLE OR SERIALLY        21390002
*                                      REUSABLE, BIT IS INSIGNIFICANT   21440002
         SPACE 2                                                        21442002
*/* D (YES,XCTLEXIT,NO,) XCTL REQUEST? */                               21442402
         SPACE 2                                                        21444002
         TM    RBCDFLGS,XCTL           XCTL REQUESTED GO TO             21450002
         BO    XCTLEXIT                DO SPECIAL XCTL EXIT PROCESSING  21460002
         SPACE                                                          21490002
*        THE FOLLOWING SECTION OF CODE GETS 96 BYTES OF MAIN STORAGE TO 21540002
*        CREATE AND INITIALIZE A PRB. A PSW IS BUILT WHICH WILL BE      21590002
*        LOADED BY THE DISPATCHER TO ENTER THE ROUTINE REQUESTED. AN    21640002
*        EXIT IS TAKEN WHICH CAUSES THE SVRB TO BE FREED UP, AND        21690002
*        CONTROL TO BE GIVEN TO THE PRB WHICH WAS JOST CREATED.         21740002
         SPACE 2                                                        21790002
*/*THRUX: P SET UP FOR GETMAIN */                                       21800002
*/* L GETMAIN-- BRANCH MACRO 160 BYTE PRB FROM 255 */                   21802002
         SPACE 2                                                        21810002
THRUX    DS    0H                      SYNCH FINAL PROCESS ENTRY        21840002
         L     ASCBREG,PSAAOLD         GET ASCB ADDRESS                 21890002
         LR    PRBREG,GR14             SAVE EP ADDRESS                  21940002
         GETMAIN RU,LV=PRBSIZE,SP=255,BRANCH=YES GET PRB AREA           21990002
         LA    GR14,N0(PRBREG)         RESTORE SAVED REG. AND           22040002
*                                      CLEAR HIGH BYTE FOR STORE        22050002
         SPACE 2                                                        22060002
*/* P CLEAR PREFIX AREA */                                              22062002
*/* P GET START OF BASE PRB */                                          22064002
         SPACE 2                                                        22070002
         XC    ZERO(PRBPREF,R1),ZERO(R1) CLEAR PRB PREFIX AREA          22090002
         LA    PRBREG,PRBPREF(R1)      ADD PREFIX SIZE TO ADDRESS       22140002
*                                      FOR PRB START                    22190002
         SPACE                                                          22240002
*        INITIALIZATION OF PRB                                          22290002
         SPACE 2                                                        22340002
*/* P MOVE 96 BYTES FROM SVRB TO PRB */                                 22350002
*/* P NOTE: THIS SETS REGS AT TIME OF SVC IN PRB REG SAVE AREA FOR TRRM 22352002
*/* */                                                                  22354002
*/* P SET PRB SIZE TO 13 DOUBLE WORDS */                                22356002
*/* P QUEUE PRB BEHIND SVRB */                                          22358002
*/* P INSURE TCBNEXT IS OFF IN OLD ATTN OFF IN NEW */                   22358402
*/* P MAKE NEW RB TYPE = PRB */                                         22358802
         SPACE 2                                                        22360002
         MVC   PRBSTART(PRBSIZ),RBSECT MOVE 96 BYTES FROM SVRB TO PRB   22390002
*                                      FIRST BYTE OF SIZE ZERO          22440002
         MVI   PRBSIZE1+N1,PRBWDLEN     SET SIZE=13 DBL WORDS           22490002
         ST    PRBREG,RBWCF            POINT SVRB TO PRB, WHEN EXIT IS  22540002
*                                      TAKEN BY SVRB PRB IS STARTED.    22590002
         NI    RBSTAB2,MAX-RBTCBNXT    GUARENTEE TCBNXT FLAG OFF IN OLD 22640002
         NI    PRBSTAB2,MAX-RBATTN     GUARENTEE ATTN BIT OFF IN NEW    22690002
         NI    PRBSTAB,PRBX            MAKE NEW RB RECOGNIZABLE AS PRB  22740002
         SPACE                                                          22790002
*        INITIALIZE PSW WITHIN PRB FOR ENTRY TO ROUTINE                 22840002
         SPACE 2                                                        22900002
*/* P PUT ENTRY POINT IN RBOPSW */                                      22902002
*/* P PUT PREFORMATTED PSW IN LEFT HALF RBOPSW */                       22904002
         SPACE 2                                                        22910002
         ST    SUBREG1,PRBOPSW+WORD    STORE ENTRY POINT IN PSW         22940002
         MVC   PRBOPSW(PSWBASE),FRAMPSW MOVE 5 FORMATTED BYTES TO PSW   22990002
         STNSM PRBOPSW,MAX             SET MASK FIELD OF PSW            23040002
         SPACE 2                                                        23050002
*/* D (YES,SYNCTEST,NO,) SYNCH REQUEST? */                              23052002
         SPACE 2                                                        23060002
         TM    RBCDFLGS,SYNC           Q.TEST TYPE OF SVC REQUEST       23090002
         BO    SYNCTEST                IF SVC SYNCH, TAKE BRANCH        23140002
         SPACE 2                                                        23150002
*/* P PUT CDE ADDRESS IN PRB */                                         23152002
*/* P INITIALIZE PRBFLGS TO 0 */                                        23154002
*/* P PUT PRB ADDRESS IN CDE */                                         23156002
         SPACE 2                                                        23160002
         ST    CDEREG,PRBFLGS          OTHERWISE  STORE CDENTRY ADDR IN 23190002
*                                      PRB.                             23240002
         MVI   PRBFLGS,ZERO            INITIALIZE FLAGS TO ZERO         23290002
         ST    PRBREG,CDRBPJ           STORE PRB ADDR IN CDE            23340002
         SPACE 2                                                        23390002
*/* D (YES,PSWSET,NO,) DOES PREVIOUS RB POINT TO TCB? */                23400002
         SPACE 2                                                        23440002
         L     WKREG1,PRBWCF           PICK UP ADDR OF PREV. CTL LEVEL  23490002
         CR    TCBREG,WKREG1           Q. DOEA RB POINT TO TCB          23540002
         BE    PSWSET                  A.=YES,TAKE BRANCH               23590002
         SPACE 2                                                        23600002
*/* P (,SYNCR) PUT OLD RBOPSW IN NEW */                                 23602002
         SPACE 2                                                        23610002
         MVC   PRBOPSW(PSWBASE),RBOPSWZ(WKREG1) MOVE IN OLD PSW FLAGS   23640002
         B     SYNCR                   CONTINUE PROCESSING              23690002
         SPACE 2                                                        23700002
*/*PSWSET: D (NO,SYNCROUT,YES,) TASK PRIVILEGED? */                     23702002
*/* P TURN ON PRIVILIGED MODE */                                        23704002
         SPACE 2                                                        23710002
PSWSET   TM    TCBFLGS3,TCBFSM         Q. DOES TASK OPERATE PRIVILEGED  23740002
         BZ    SYNCROUT                A=NO, TAKE BRANCH                23790002
         NI    PRBOPSW+N1,XFE          PRIVIVEGED MODE OPERATION        23840002
         SPACE 2                                                        23850002
*/*SYNCROUT: P SET TCB KEY IN PSW */                                    23852002
         SPACE 2                                                        23860002
SYNCROUT OC    PRBOPSW+N1(N1),TCBPKF   SET PROTECT KEY VALUE FROM TCB   23890002
         SPACE 2                                                        23900002
*/*PICAMASK: D (NO,SYNCR,YES,) PIE EXIST? */                            23902002
         SPACE 2                                                        23910002
PICAMASK DS    0H                      TEST FOR PIE/PICA                23940002
         SR    PIEREG,PIEREG           CLEAR PIE REG BEFORE TEST M01978 23960002
         ICM   PIEREG,MASK,TCBPIE+N1   PICK UP PIE ADDRESS              23990002
         BZ    SYNCR                   IF NO PIE, EXIT                  24040002
         SPACE 2                                                        24050002
*/* P SET PARAMETER CHECK FLAG */                                       24051002
*/* P GET ADDR OF PIE ADDR */                                           24052002
*/* P GET ADDR OF PICA FROM PIE */                                      24054002
         SPACE 2                                                        24060002
         OI    RBCSFLG1,RBCSPARM       TURN ON PARM CHECK FLAG   M01978 24070002
         L     PIEREG,N0(PIEREG)       GET POINTER TO PIE               24090002
         LTR   PIEREG,PIEREG           Q. PIE PRESENT                   24140002
         BZ    SYNCR                   A. NO- FINISH PROCESSING         24190002
         L     PICAREG,N0(PIEREG)      GET PICA ADDRESS                 24240002
         SPACE 2                                                        24250002
*/* D (NO,SYNCR,YES,) PICA EXIST? */                                    24252002
         SPACE 2                                                        24260002
         LTR   PICAREG,PICAREG         Q. PICA PRESENT                  24290002
         BZ    SYNCR                   A. NO- FINISH PROCESSING         24340002
         SPACE 2                                                        24350002
*/*PICAMOVE: P PUT PGM MASK IN PRB FROM PICA */                         24352002
         SPACE 2                                                        24360002
PICAMOVE MVC   PRBOPSW+N2(N1),ZERO(PICAREG) A. YES-MOVE IN PROGRAM MASK 24390002
         NI    PRBOPSW+N2,MASK4        CLEAR VOID HALF OF MASK   M00349 24395002
         SPACE 2                                                        24400002
*/*SYNCR: P GET CALLER'S ENTRY POINT IN REG 15 */                       24402002
*/* P TURN OFF PARM CHECK FLAG */                                       24403002
*/* P STORE ADDRESS OF SVC 3 IN REG 14 */                               24404002
*/* P LOAD REG 0 AND REG 1 FROM RBGRSAV */                              24406002
         SPACE 2                                                        24410002
SYNCR    LR    R15,SUBREG1             SET R15 TO THE ENTRY POINT ADDR  24440002
         NI    RBCSFLG1,MAX-RBCSPARM   TURN OFF PARM CHECK FLAG  M01978 24490002
         L     CVTREG,CVTPTR           GET ADDRESS OF CVT               24540002
         USING CVT,CVTREG              SET ADDRESSIBILITY               24590002
         LA    R14,CVTEXIT             GET ADDR OF EXIT INSTRUCTION     24640002
         ST    R14,RBGRS14             PLACE IN SVRB R14 SLOT           24690002
         LM    R0,R1,RBGRSAVE          RESTORE REGS 0 AND 1             24740002
         SPACE 2                                                        24750002
*/*SVCEXIT: P GET ADDR OF SVC EXIT PROLOGUE IN REG 14 */                24752002
*/* L SETFRR-- REMOVE RECOVERY ROUTINE */                               24754002
*/* R EXIT VIA BR 14 */                                                 24756002
         SPACE 2                                                        24760002
SVCEXIT  L     R14,CVTEXPRO            GET ADDR OF EXIT PROLOGUE        24790002
         SETFRR D,WRKREGS=(R7,R8)      REMOVE RECOVERY RTN.             24800002
         BR    R14                     EXIT                             24840002
         SPACE 2                                                        24850002
*/*SYNCTEST: D (NO,SYNCROUT,YES,) ASIR REQUESTOR? */                    24852002
*/* P TURN OFF ASIR BIT IN TCB */                                       24854002
         SPACE 2                                                        24860002
SYNCTEST TM    TCBSTAB,TCBSYNCH        Q. STAE REQUEST                  24890002
         BZ    SYNCROUT                A=NO TAKE BRANCH                 24940002
         NI    TCBSTAB,MAX-TCBSYNCH    TURN OFF STAE-SUP BIT            24990002
         SPACE 2                                                        25000002
*/* D (NO,PPMODE,YES,) REQUESTOR IN SUPER MODE? */                      25002002
*/* P SET SUPERVISOR MODE BIT */                                        25004002
         SPACE 2                                                        25010002
         TM    TCBNSTAE,TCBPPSUP       SUPERVISOR REQUEST               25040002
         BZ    PPMODE                  NO- LEAVE IN PROBLEM MDOE        25090002
         NI    PRBOPSW+N1,XFE          YES-TURN OFF PSW PROB. MODE BIT  25140002
         SPACE 2                                                        25150002
*/*PPMODE: P (,PICAMASK) SET KEY IN PSW FROM TCB (TCBSCBKY) */          25152002
         SPACE 2                                                        25160002
PPMODE   OC    PRBOPSW+N1(N1),TCBSCBKY PUT REQUESTED KEY IN PSW         25190002
         B     PICAMASK                CONTINUE                         25240002
         SPACE 2                                                        25250002
*/*XCTLEXIT: P PUT ENTRY POINT IN PRB RBOPSW */                         25252002
*/* P PUT CDE ADDRESS IN PRB */                                         25254002
*/* P (,SYNCR) PUT RB ADDRESS IN CDE */                                 25256002
         SPACE 2                                                        25260002
XCTLEXIT L     PRBREG,RBWCF            GET NEW PRB                      25290002
         ST    SUBREG1,PRBOPSW+WORD    STORE ENTRY POINT IN PSW         25340002
         LA    CDEREG,N0(CDEREG)       CLEAR HIGH ORDER BYTE OF CDE     25350002
         LR    R15,R14                 PUT EP ADDRESS IN OUTPUT REG     25360002
         ST    CDEREG,PRBFLGS          PUT CDE POINTER IN PRB           25390002
         ST    PRBREG,CDRBPJ           STORE RB POINTER IN CDE          25400002
         B     SYNCR                   TERMINATE XCTL PROCESSING        25410002
         SPACE                                                          25440002
*        AS A RESULT OF ISSUEING EXIT THE SVRB WILL BE FREE UP AND      25490002
*        CONTROL IS GIVEN TO THE PREVIOUS PRB. THE ROUTINE IS ENTERED   25540002
*        AS FOLLOWS - R0 = ZERO                                         25590002
*              R1 = SAME AS WHEN SVC ISSUED                             25640002
*              R2-13 SAME AS WHEN SVC ISSUED                            25690002
*              R14 = ADDRESS OF AN SVC EXIT INSTRUCTION                 25740002
*              R15 = ENTRY POINT ADDRESS                                25790002
         EJECT                                                          25840002
*        THIS ROUTINE INITIALIZES R9 TO THE ADDRESS OF THE REQUESTED    25890002
*        NAME, R10 TO THE ADDRESS OF THE DCB PASSED, AND INITIALIZED    25940002
*        ALL FIELDS IN THE SVRB EXTENDED SAVE AREA.  IF A DE WAS        25990002
*        PASSED BY THE USER, IT IS SAVED IN A NON-PAGEABLE AREA         26040002
*        OBTAINED VIA GETMAIN.  DALPRFIX EXPECTS INPUT IN REGISTERS 0   26090002
*        AND 1, WHILE LXPREFIX EXPECTS INPUT PASSED IN A PARAMETER LIST 26140002
*        WHOSE ADDRESS IS IN REGISTER 15. REGISTERS 4,5,6 AND 13 ARE    26190002
*        PRESERVED OVER THE ROUTINE. ALL OTHER REGISTERS ARE CHANGED.   26240002
*        206 ABENDS ARE ISSUED FOR RECOGNIZABLE ERRORS. (SEE LINK       26290002
*        PROLOGUE FOR CONDITIONS)                                       26340002
*    CHANGES FOR PTM VS01651 IN PREFIX ROUTINES                         26350002
*                                                                       26390002
         SPACE 2                                                        26400002
*/*LXPREFIX: E LXPREFIX */                                              26402002
*/* P TURN ON PARAMETER CHECK FLAG IN RBCSFLG1 */                       26404002
*/* P PUT INPUT PARAMETER LIST IN WORK REGISTER */                      26406002
         SPACE 2                                                        26410002
LXPREFIX DS    0H                                                       26440002
         USING PDS2,NAMEREG            SET ADDRESSABILITY ON DE         26490002
         OI    RBCSFLG1,RBCSPARM       TURN ON PARM CHECK FLAG          26540002
         LR    R12PARM,R15             POINT PARM REG TO PARM LIST FOR  26542002
         SPACE 2                                                        26550002
*/* L TESTAUTH-- GET CALLER'S AUTHORIZATION */                          26554002
         SPACE 2                                                        26556002
         TESTAUTH KEY=YES,STATE=YES,BRANCH=YES GET STATUS OF CALLER     26558002
         SPACE 2                                                        26558402
*/* D (NO,USERKEY,YES,) CALLER AUTHORIZED? */                           26558802
         SPACE 2                                                        26559202
         LTR   R15,R15                 Q. CALLER AUTHORIZED             26559602
         BNZ   USERKEY                 A. NO - VALIDITY CHECK INPUT     26559702
         SPACE 2                                                        26559802
*/* P (,LISTCHK) SET AUTHORIZED CALLER FLAG */                          26559902
         SPACE 2                                                        26563202
         OI    RBCSFLG1,RBCSSYSR       A. YES- TURN ON SYSTEM REQUEST   26565202
         B     LISTCHK                 GET PARAMENTER IN REGS           26565602
         SPACE 2                                                        26566002
*/*USERKEY: P PUT A REASON CODE OF 1 IN REG. 15 */                      26566702
*/* L MODESET-- GO TO USER KEY */                                       26570002
         SPACE 2                                                        26580002
USERKEY  LA    R15,N1                  SET REASON CODE                  26582002
         MODESET EXTKEY=TCB,WORKREG=2  GO TO TCB KEY                    26584002
         SPACE 2                                                        26586002
*/*LISTCHK: P PUT EP/DE ADDRESS IN REG 9 (NAMEREG) */                   26588002
         SPACE 2                                                        26588402
LISTCHK  L     NAMEREG,N0(R12PARM)     GET NAME OR DE                   26690002
         SPACE 2                                                        26700002
*/* P PUT DCB ADDRESS IN REG 10 (DCBREG) */                             26702002
         SPACE 2                                                        26710002
         L     DCBREG,FOUR(R12PARM)    PUT DCB ADDR IN REG              26740002
         SPACE 2                                                        26750002
*/* D (NO,LXPRFIX0,YES,) THERE IS A THIRD PARAMETER? */                 26752002
         SPACE 2                                                        26760002
         LTR   DCBREG,DCBREG           Q. IS THERE A THIRD PARM.        26790002
         BNM   LXPRFIX0                A. NO- CONTINUE                  26840002
         SPACE 2                                                        26850002
*/* P GET ERROR RETURN ADDRESS IN WORK REG */                           26852002
*/* L MODESET-- RETURN TO KEY 0 */                                      26852402
*/* P STORE ERROR RETURN ADDRESS IN RBXSA */                            26854002
*/* P (,LXPRFIX0) TURN ON RETURN REQ'D BIT IN RBCSFLG1 */               26856002
         SPACE 2                                                        26860002
         L     WKREG1,EIGHT(R12PARM)   A. YES- GET ERROR ADDRESS        26890002
         MODESET EXTKEY=SUPR           RETURN TO SUPERVISOR KEY         26900002
         ST    WKREG1,RBCSERRA         SAVE IT IN XSA                   26940002
         OI    RBCSFLG1,RBCSERIN       TURN ON RETURN REQUESTED FLAG    26990002
         B     LXPRFIX0                CONTINUE                         27040002
         SPACE 2                                                        27050002
*/*DALPRFIX: E DALPRFIX */                                              27052002
*/* P TURN ON PARAM. CHECK FLAG IN RBCSFLG1 */                          27054002
*/* P GET ADDR OF NAME IN REG 9 FROM REG 0 */                           27056002
*/* P SET REG 9 NEGATIVE IF DE FORM */                                  27058002
         SPACE 2                                                        27060002
DALPRFIX DS    0H                      PARAMETER PREFIXING              27090002
         OI    RBCSFLG1,RBCSPARM       TURN ON PARM CHECK FLAG          27140002
         LPR   NAMEREG,R0              GET DE-NAME INTO PROPER REG      27190002
*                                      PASSED IN COMPLEMENTED FORM      27240002
         LA    NAMEREG,ZERO(NAMEREG)   CLEAR FLAG BYTE IN NAMEREG       27290002
         N     R0,HIBYTE               CLEAR ADDRESS PART OF REG        27340002
         OR    NAMEREG,R0              PUT FLAGS IN PROPER REG          27390002
         SR    R12PARM,R12PARM         INDICATE PARAMETERS PASSED IN    27440002
*                                      REGISTERS AND NOT IN LIST        27490002
         SPACE 2                                                        27500002
*/* P GET ADDR OF DCB IN REG 10 FROM REG 1 */                           27520002
*/* D (NO,LXPRTEST,YES,) IS RETURN REQUESTED? */                        27522002
         SPACE 2                                                        27530002
         LA    DCBREG,N0(R1)           PUT DCB IN PROPER REG            27540002
         LTR   R1,R1                   Q. RETURN REQUESTED              27590002
         BNM   LXPRTEST                A. NO- CONTINUE                  27640002
         SPACE 2                                                        27650002
*/* P TURN ON RETURN REQ'D BIT IN RBCSFLG1 */                           27652002
         SPACE 2                                                        27660002
         OI    RBCSFLG1,RBCSERIN       A. YES- TURN ON RET. REQUEST FLG 27690002
         SPACE 2                                                        27692002
*/*LXPRTEST: L TESTAUTH-- GET CALLER'S AUTHORIZATION */                 27694002
         SPACE 2                                                        27696002
LXPRTEST TESTAUTH KEY=YES,STATE=YES,BRANCH=YES GET STATUS OF CALLER     27698002
         SPACE 2                                                        27698402
*/* D (NO,LXPRFIX0,YES,) CALLER AUTHORIZED? */                          27698802
         SPACE 2                                                        27699202
         LTR   R15,R15                 Q. CALLER AUTHORIZED             27699602
         BNZ   LXPRFIX0                A. NO - VALIDITY CHECK INPUT     27699702
         SPACE 2                                                        27699802
*/* P  SET AUTHORIZED CALLER FLAG */                                    27699902
         SPACE 2                                                        27706502
         OI    RBCSFLG1,RBCSSYSR       A. YES- TURN ON SYSTEM REQUEST   27708502
*                                      FLAG                             27710502
         SPACE 2                                                        27713602
*/*LXPRFIX0: L MODESET-- INSURE KEY 0 PRECESSING */                     27715602
*/* P COMPLEMENT DCB ADDR IN REG 10 TO INDICATE DCB NOT                 27720202
*/*CHECKED */                                                           27726802
         SPACE 2                                                        27733402
LXPRFIX0 DS    0H                      COMMON CODE FOR BOTH TYPES OF    27740002
*                                      PASSED PARAMETERS                27790002
         MODESET EXTKEY=SUPR           INSURE SYSTEM KEY                27800002
         LA    DCBREG,ZERO(DCBREG)     CLEAR HIGH ORDER BYTE OF ADDR    27840002
         LNR   DCBREG,DCBREG           INDICATE DCB NOT YET CHECKED     27890002
         SPACE 2                                                        27892002
*/* P SET DE SAVE AREA ADDRESS = 0 */                                   27922002
         SPACE 2                                                        27930002
         SR    DESZREG,DESZREG         INDICATE DE SIZE NOT CALCULATED  27940002
         SR    DESVREG,DESVREG         INDICATE DE SAVE AREA NOT YET    27990002
*                                      OBTAINED                         28040002
         SPACE 2                                                        28050002
*/* D (YES,DECHK,NO,) IS THIS A SYSTEM REQUEST? */                      28060002
         SPACE 2                                                        28070002
         TM    RBCSFLG1,RBCSSYSR       THIS A SYSTEM REQUEST            28080002
         BO    DECHK                   YES- GO TO DECHK                 28082002
         SPACE 2                                                        28082402
*/* P SET REASON CODE TO 2 */                                           28082502
*/* L MODESET-- GO TO USER KEY */                                       28082602
*/* P ACCESS USER DATA TO DETERMINE IF OWNED BY USER */                 28082702
*/* L MODESET-- RETURN TO KEY 0 */                                      28082802
         SPACE 2                                                        28083202
         LA    R15,N2                  SET REASON CODE                  28093202
         MODESET EXTKEY=TCB,WORKREG=2  GO TO USER KEY                   28095202
         LM    R0,R1,N0(NAMEREG)       ACCESS USER DATA                 28097202
         MODESET EXTKEY=SUPR           RETURN TO KEY 0                  28099202
         SPACE 2                                                        28102802
*/*DECHK: D (NO,LXPRFIX6,YES,) DE SPECIFIED? */                         28112102
         SPACE 2                                                        28121402
DECHK    LTR   NAMEREG,NAMEREG         CHECK FOR DE FORM                28130702
         BNM   LXPRFIX6                IF NOT DE TO TO FINAL PREFIX     28140002
*                                      PROCESSING                       28190002
         SPACE 2                                                        28192002
*/* P GET LENGTH OF DE IN HALFWORDS */                                  28192402
*/* P DOUBLE LENGTH TO OBTAIN NUMBER OF BYTES */                        28192802
*/* P ADD LENGTH OF BASIC SECTION */                                    28193202
         SPACE 2                                                        28194002
         LA    ASCBREG,X1F             PREPARE TO GET LENGTH OF DE      28200002
         IC    DESZREG,PDS2INDC        GET BYTE CONTAINING LENGTH       28210002
         NR    DESZREG,ASCBREG         CLEAR THE HIGH 3 BITS            28220002
         LA    DESZREG,PDS2USRD-PDS2(DESZREG,DESZREG)  DOUBLE SIZE      28230002
*                                      (WAS HALF WORDS-NOW BYTES) AND   28232002
*                                      ADD BASIC SIZE                   28234002
         SPACE 2                                               @OZ02572 28244003
*/* P SET REASON CODE TO 3 IN R15 - IN CASE OF 206 ABEND */    @OZ02572 28254003
         SPACE 2                                               @OZ02572 28264003
         LA    R15,THREE               SET REASON CODE         @OZ02572 28274003
         SPACE 2                                                        28284002
*/* D (YES,DELENCK,NO,) SYSTEM REQUEST? */                     @OZ02572 28289003
         SPACE 2                                                        28334002
         TM    RBCSFLG1,RBCSSYSR       Q. SYSTEM REQUEST                28673302
         BO    DELENCK                 A. YES- NO VALIDITY CK  @OZ02572 28681303
         SPACE 2                                                        28740002
*/* L MODESET-- GO TO USER KEY */                                       28744002
*/* P ACCESS FIRST WORD OF USER DATA */                                 28746002
*/* P ACCESS LAST WORD OF USER DATA */                                  28748002
*/* L MODESET-- RETURN TO KEY 0 */                                      28748402
         SPACE 2                                                        28750002
         MODESET EXTKEY=TCB,WORKREG=2  GO TO USER KEY                   28850002
         L     R1,N0(NAMEREG)          ACCESS FIRST WORD                28900002
         LR    R2,R9                   SET UP TO CALCULATE              28950002
         AR    R2,R8                   LENGTH OF END OF ENTRY           29000002
         BCTR  R2,N0                   SUBTRACT ONE TO CHECK            29050002
*                                      USER CORE ONLY                   29100002
         IC    R1,N0(R2)               ACCESS LAST WORD                 29150002
         MODESET EXTKEY=SUPR           RETURN TO KEY 0                  29200002
         SPACE 2                                               @OZ02572 29210003
*/*DELENCK: D (YES,GETDSAV,NO,) DE TOTAL LENGTH LE 60 BYTES?*/ @OZ02572 29220003
*/* P SET ABEND CODE REG(R13) TO ZERO */                       @OZ02572 29223003
*/* P (,ERRPARM) GO TO PROCESS 206 ABEND */                    @OZ02572 29226003
         SPACE 2                                               @OZ02572 29230003
DELENCK  LA    R7,DESIZE-FOUR          GET MAX DE LENGTH       @OZ02572 29240003
         CR    R8,R7                   CHECK USER'S LENGTH     @OZ02572 29250003
*                                      AGAINST MAX DE LENGTH   @OZ02572 29260003
         BNH   GETDSAV                 LENGTH OK- GET SAVEAREA @OZ02572 29266003
         LR    R8,R7                   SET LENGTH OF DE TO MAX @ZA10799 29267040
         SPACE 2                                                        29290002
*/*GETDSAV: L GETMAIN-- GET 64 BYTE MAX DE SAVE AREA FROM SP=255 */     29295003
         SPACE 2                                                        29340002
GETDSAV  L     ASCBREG,PSAAOLD         GET ASCB FOR GM                  29440003
         GETMAIN RU,LV=DESIZE,SP=255,BRANCH=YES  GET SAVE AREA FOR DE   29640002
         LA    DESVREG,N0(R1)          INITIALIZE POINTER TO DE SAVE    29690002
*                                      AREA AND PROVIDE                 29740002
         USING DESAVE,DESVREG          ADDRESSABILITY                   29790002
         SPACE 2                                                        29840002
*/* P MOVE DE TO DE SAVE AREA+4 (SECOND WORD) */                        29842002
*/* P PUT DE LENGTH IN FIRST WORD OF DE SAVE */                         29844002
         SPACE 2                                                        29850002
         BCTR  DESZREG,ZERO            CORRECT FOR EXECUTE              29890002
         EX    DESZREG,MOVEDE          MOVE THE DE INTO THE SAVE AREA   29940002
         ST    DESZREG,DESAVESZ        SAVE THE SIZE OF THE DE          29990002
         SPACE 2                                                        30000002
*/*LXPRFIX6: P MOVE NAME TO RBXSA AND POINT REG 9 TO THIS NAME */       30002002
         SPACE 2                                                        30010002
LXPRFIX6 DS    0H                      FINAL PREFIX PROCESSING          30040002
         LA    R15,TWO                 SET REASON CODE FOR FAILURE      30090002
         MVC   RBCSNAME(NAME),ZERO(NAMEREG) MOVE NAME INTO EXSA         30140002
         LA    NAMEREG,RBCSNAME        SET UP NAME POINTER, NOT LONGER  30190002
*                                      CONTAINS DE FLAG, MUST USE       30240002
*                                      DE SAVE AREA POINTER IN EXSA     30290002
*                                      TO DETERMINE IF DE EXISTS        30340002
         SPACE 2                                                        30350002
*/* P INITIALIZE REMAINING FIELD OF XSA TO 0 */                         30352002
*/* P PUT ADDRESS OF DESAVE AREA IN XSA */                              30354002
*/* P CLEAR PARAMETER CHECK FLAG */                                     30356002
*/* R RETURN VIA BR 13 */                                               30358002
         SPACE 2                                                        30360002
         XC    RBCSWORK(CLRSIZE),RBCSWORK CLEAR ALL OTHER FIELDS AND    30390002
*                                      FLAGS TO ZERO                    30440002
         ST    DESVREG,RBCSDE          SAVE DE SAVE AREA ADDRESS IN XSA 30490002
         NI    RBCSFLG1,MAX-RBCSPARM   TURN OFF PARM CHECK FLAG         30540002
         BR    RETURND                 RETURN TO CALLER                 30840002
*        THE NEXT INSTRUCTION IS EXECUTED BY DALPRFIX                   30890002
MOVEDE   MVC   DESAVEDE(ZERO),PDS2     MOVE DE TO SAVE AREA             30940002
         EJECT                                                          30990002
*        SUBROUTINE CDSEARCH SEARCHES A CDE QUEUE FOR A PARTICULAR      31040002
*        MODULE NAME.  A CDE ADDRESS IS RETURNED, IF FOUND.  A BRANCH   31090002
*        TABLE RETURN IS UTILIZED BASED ON FOUND OR NOT FOUND.          31140002
*        REGISTERS USEAGE                                               31190002
*              R0 - SET TO LEFT HALF OF NAME (OUTPUT)                   31240002
*              R1 - SET TO RIGHT HALF OF NAME (OUTPUT)                  31290002
*              R8 - ADDRESS OF CDE QUEUE TO SEARCH (INPUT)              31340002
*              R9 - ADDRESS OF NAME TO SEARCH FOR (INPUT)               31390002
*              R11- ADDRESS OF FOUND CDE, OR 0 (OUTPUT)                 31440002
*              R14- RETURN ADDRESS (INPUT)                              31490002
*              R15- MODIFIED BY CDSEARCH                                31540002
*              ALL OTHER REGISTERS NOT REFERENCED.                      31590002
*                                                                       31640002
*        RETURN ON R14 + 0 IS SUCCESSFUL   - MODULE FOUND               31690002
*        RETURN ON R14 + 4 IS UNSUCCESSFUL - MODULE NOT FOUND.          31740002
*                                                                       31790002
         SPACE 2                                                        31800002
*/* E IEAQCDSR/ CDSEARCH */                                             31802002
*/* P GET ADDRESS OF FIRST CDE FROM LIST SPECIFIED */                   31804002
*/* P PUT INPUT NAME IN WORK REGS */                                    31808002
*/*CONTSRCH: P GET FIRST /NEXT CDE */                                  31808402
*/* D (YES,%RET4,NO,) END OF CDE QUEUE? */                              31808802
*/* D (YES,,NO,CONTSRCH) FIRST HALF OF NAMES EQUAL? */                  31809202
         SPACE 2                                                        31810002
IEAQCDSR DS    0H                      EXTERNAL ENTRY FOR CDSEARCH      31840002
CDSEARCH LR    CDEREG,TABREG           START SEARCH FROM LIST ORIGIN    31890002
*                                      OF CONTROL QUEUE SPECIFIED       31940002
         LM    WKREG0,WKREG1,SYMBEGIN(NAMEREG) LOAD NAME INTO REGS      31990002
         SPACE                                                          32040002
*        LOOP STARTS HERE                                               32090002
         SPACE                                                          32140002
CONTSRCH BALR  SUBREG2,ZERO            SET UP LOOP ADDR                 32190002
         L     CDEREG,CDCHAIN          LOAD CDEREG,TEST FOR ZERO        32240002
         LTR   CDEREG,CDEREG           END OF CHAIN                     32290002
         BZ    WORD(SUBREG1)           A= YES TAKE BAD EXIT             32340002
         C     WKREG0,CDNAME           Q. IS FIRST HALF OF NAME EQUAL   32390002
         BCR   NOTEQ,SUBREG2           A= NO, TAKE BRANCH               32440002
         SPACE                                                          32490002
*        ONLY IF THE FIRST HALF OF THE NAMES ARE EQUAL WILL             32540002
*        WE ENTER THIS                                                  32590002
*/* D (YES,,NO,CONTSRCH) SECOND HALF OF NAMES EQUAL? */                 32650002
         SPACE 2                                                        32660002
         C     WKREG1,CDNAME+FOUR      Q. IS 2ND HALF EQUAL             32690002
         BCR   NOTEQ,SUBREG2           A= NO, TAKE BRANCH               32740002
         BR    SUBREG1                 BOTH NAMES EQUAL, RETURN SUCC.   32790002
         SPACE 2                                                        32800002
*/* R RETURN REG 14+0 */                                                32810002
*/*%RET4: R RETURN REG 14+4 */                                          32820002
         EJECT                                                          32840002
*        CDALLOC IS A SUBROUTINE OF LINK AND LOAD WHICH INTERROGATES    32890002
*        THE ATTRIBUTES OF A CDE (FOUND BY CDSEARCH), AND THE SVRB      32940002
*        FOR THE REQUEST.  RETURN IS MADE TO SEVEN DIRRERENT POINTS     32990002
*        DEPENDING ON THE SETTINGS FOUND.  A BRANCH TABLE IS SET UP     33040002
*        FOR FIVE OF THE RETURNS, THE OTHER TWO EXITS BEING A BRANCH    33090002
*        TO IEAVLK01, AND TO THE ABEND EXIT ROUTINE.  THE SEVEN EXITS   33140002
*        AND THEIR CONDITIONS ARE                                       33190002
*              1.RETURN ON R15 + 0: MODULE CANNOT BE REUSED.            33240002
*                   BECAUSE THIS IS A LOAD REQUEST (RBCDLOAD=1),        33290002
*                        MODULE IS IN CORE (CDNIC=0),                   33340002
*                        THE MODULE IS LOADABLE ONLY (CDNLR=0),         33390002
*                        THE MODULE IS NOT REUSABLE (CDREN=0,CDSER=0)   33440002
*                                                                       33490002
*              2.RETURN ON R15 +4: MODULE CAN BE USED NOW               33540002
*                   A.BECAUSE MODULE IN CORE (CDNIP=0),                 33590002
*                        MODULE REUSABLE (CDREN=0,CDSER=1),             33640002
*                        MODULE NOT LOADABLE ONLY (CDNLR=1),            33690002
*                        THIS IS A LOAD REQUEST (RBCDLOAD=1)            33740002
*                   B.BECAUSE MODULE IN CORE (CDNIC=0),                 33790002
*                        MODULE REENTRANT (CDREN=1,CDSER=1),            33840002
*                        MODULE NOT LOAD ONLY (CDNLR=1)                 33890002
*                   C.BECAUSE MODULE IS IN CORE (CDNIC=0),              33940002
*                        MODULE IS REUSABLE (CDREN=0,CDSER=1),          33990002
*                        MODULE IS NOT LOADABLE ONLY (CDNLR=1),         34040002
*                        THIS IS NOT LOAD REQUEST (RBCDLOAD=0),         34090002
*                        MODULE NOT IS USE (CDRRBP=0)                   34140002
*                   D.BECAUSE MODULE IS IN CORE (CDNIC=0),              34190002
*                        MODULE IS LOADABLE ONLY (CDNLR=0),             34240002
*                        THIS IS LOAD REQUEST (RBCDLOAD=1),             34290002
*                        MODULE IS REENTRANT OR REUSABLE (CDSER=1)      34340002
*                   E.BECAUSE MODULE IS IN CORE (CDNIC=0),              34390002
*                        MODULE IS NOT REUSABLE (CDREG=0,CDSER=0),      34440002
*                        MODULE IS NOT LOADABLE ONLY (CDNLR=1),         34490002
*                        THIS IS A LOAD REQUEST (RBCDLOAD=1),           34540002
*                        LOADED BY AOS LOADER (CDSQA=1),                34590002
*                        USE COUNT=0 (CDUSE=0)                          34640002
*                   F.BECAUSE MODULE IS IN CORE (CDNIC=0),              34690002
*                        MODULE IS NOT REUSABLE (CDREG=0,CDSER=0),      34740002
*                        MODULE IS NOT LOADABLE ONLY (CDNLR=1),         34790002
*                        MODULE IS NOT USED (CDNFN=0),                  34840002
*                        THIS IS NOT A LOAD REQUEST (RBCDLOAD=0)        34890002
*                                                                       34940002
*              3. REUTN ON R15 +8: MODULE CANNOT BE USED                34990002
*                   BECAUSE MODULE IS IN CORE (CDNIC=0),                35040002
*                        MODULE IS NOT REUSABLE (CDREN=0,CDSER=0),      35090002
*                        MODULE WAS USED (CDNFN=1),                     35140002
*                        THIS IS NOT A LOAD REQUEST (RBCDLOAD=0)        35190002
*                                                                       35240002
*              4. RETURN ON R15 + 12: SERIAL REUSABLE BUT IN USE        35290002
*                   BECAUSE MODULE IN CORE (CDNIC=0),                   35340002
*                        MODULE REUSABLE (CDREN=0,CDSER=1),             35390002
*                        NOT LOADABLE ONLY (CDNLR=1),                   35440002
*                        NOT LOAD (RBCDLOAD=0),                         35490002
*                        IN USE (CDRRBP NOT ZERO)                       35540002
*                                                                       35590002
*              5. RETURN ON R15 + 16: MODULE IN FETCH                   35640002
*                   BECAUSE CDNIC=1.                                    35690002
*                                                                       35740002
*              6. CDSETUP1 - ISSUE BLDL/FETCH                           35790002
*                   A.BECAUSE MODULE IN CORE (CDNIC=0),                 35840002
*                        MODULE NOT REUSABLE (CDREN=0,CDSER=0),         35890002
*                        MODULE NOT LOADABLE ONLY (CDNLR=1),            35940002
*                        THIS IS LOAD REQUEST (RBCDLOAD=1),             35990002
*                        THIS IS NOT AOS LOADER (CDSPZ=0)               36040002
*                   B.BECAUSE MODULE IS IN CORE (CDNIC=0),              36090002
*                        MODULE IS NOT REUSABLE (CDREN=0,CDSER=0),      36140002
*                        MODULE IS NOT LOADABLE ONLY (CDNLR=1),         36190002
*                        THIS IS LOAD REQUEST (RBCDLOAD+1),             36240002
*                        MODULE LOADED BY OSLOADER (CDSPZ=1),           36290002
*                        MODULE WAS USED (CDUSE NOT ZERO)               36340002
*                                                                       36390002
*              7. ABEND 406: NOT LOAD FOR A LOADABLE ONLY MODULE.       36440002
*                                                                       36490002
*        REGISTER USAGE                                                 36540002
*              R5 - SVRB (INPUT)                                        36590002
*              R6 - BASE ADDRESS (INPUT)                                36640002
*              R11- CDE FOR REQUEST (INPUT)                             36690002
*              R12- MAJOR CDE (OUTPUT)                                  36740002
*              R13- ZEROED FOR 406 ABEND (OUTPUT)                       36790002
*              R15- RETURN REGISTER (INPUT) - POINTS TO A BRANCH TABLE  36840002
*              R0,1- WORK REGISTERS, BUT ARE PRESERVED ON RETURN R15+8  36890002
*              OTHER REGISTERS NOT REFERENCED                           36940002
*                                                                       36990002
*              CDNFN BIT IS SET FOR FIRST USE ON NON REUSABLE MODULE.   37040002
         SPACE                                                          37090002
         USING ALLOC,SUBREG2           BRANCH TABLE ADDRESSABILITY      37140002
         SPACE 2                                                        37150002
*/*CDALLOC: E CDALLOC */                                                37152002
*/* P SET ADDR OF MAJOR CDE (REG 12) = INPUT CDE (REG 11) */            37154002
*/* D (NO,MINSKIP,YES,) IS INPUT CDE A MINOR? */                        37156002
*/* P GET ADDRESS OF MAJOR FROM MINOR */                                37158002
         SPACE 2                                                        37160002
CDALLOC  LR    CDIREG,CDEREG           THE ATTRIBUTES OF THE MAJOR      37190002
*                                      ENTRY ARE NEEDED,LOAD MAJOR.     37240002
         TM    CDATTR,CDMIN            Q. IS THIS CDENTRY A MINOR       37290002
         BZ    MINSKIP                 A= NO, TAKE BRANCH               37340002
         L     CDIREG,CDXLMJP          IF YES LOAD ADDRESS OF MAJOR     37390002
         SPACE 2                                                        37400002
*/*MINSKIP: D (NO,%CONT,YES,) IS MAJOR BEING LOADED NOW? */             37402002
*/* R RETURN VIA REG 15+16 */                                           37404002
         SPACE 2                                                        37410002
MINSKIP  TM    CDATTRJ,CDNIC           Q. IS THE LOAD MODULE IN MAIN    37440002
*                                      STORAGE, BIT IS SET WHILE FETCH  37490002
*                                      OF MODULE TAKES PLACE.           37540002
         BO    RETURN5                 RET5 NO, MODULE NOT IN,BRANCH    37590002
         SPACE 2                                                        37600002
*/*%CONT: D (NO,TSTATTR,YES,) IS THIS A SYSTEM REQUEST? */              37602002
         SPACE 2                                                        37610002
         TM    RBCSFLG1,RBCSSYSR       Q. IS THIS A SYSTEM REQUEST      37640002
         BZ    TSTATTR                 A. NO- CONTINUE                  37690002
         SPACE 2                                                        37692002
*/* D (NO,TSTLIB,YES,)  IS THIS AN ATTACH REQUEST? */                   37692440
         SPACE 2                                                        37694002
         TM    RBCDFLGS,RBCSATT        Q. ATTACH REQUEST                37700002
         BZ    TSTLIB                  A. NO- TEST LIB AUTH    @WAB     37710040
         SPACE 2                                                        37720002
*/* D (YES,TSTATTR,NO,) IS ATTACH WITH RESET APF? */                    37720340
         SPACE 2                                                        37720640
         TM    RBCSFLG1,RBCRSAPF       Q. RESET APF?           @WAB     37720940
         BNZ   TSTATTR                 A. YES - CONTINUE       @WAB     37721240
         SPACE 2                                                        37721540
*/*TSTLIB: D (YES,TSTATTR,NO,) IS MAJOR FROM A SYSTEM LIBRARY? */       37722040
         SPACE 2                                                        37730002
TSTLIB   TM    CDATTR2J,CDSYSLIB       Q. THIS AN AUTH. LIB MODULE      37740040
         BNZ   TSTATTR                 A. YES- CONTINUE                 37750002
         SPACE 2                                                        37752002
*/* P SET RBCSSXSA BIT IN XSA (POSSIBLE 306 ABEND) */                   37752402
*/* R RETURN VIA REG 15+8 */                                            37752802
         SPACE 2                                                        37754002
         OI    RBCSFLG1,RBCSA306       TURN ON 306 ABEND FLAG           37760002
         B     RETURN3                 A. NO-RET3 MOD. NOT USABLE       37790002
         SPACE 2                                                        37800002
*/*TSTATTR: D (NO,%CONT2,YES,) CURRENT CDE RENT. & NON-LOAD ONLY? */    37802002
*/* R RETURN VIA REG 15+4 */                                            37804002
         SPACE 2                                                        37810002
TSTATTR  TM    CDATTR,CDREN+CDNLR      Q. IS MODULE REENTRABLE AND      37840002
*                                      UNRESTRICTED BY LOAD-ONLY ATTR.  37890002
         BO    RETURN2                 A=YES, TAKE BRANCH               37940002
         SPACE 2                                                        37950002
*/*%CONT2: D (YES,REUSEPGM,NO,) MINOR SERIALLY REUS & NON-LOAD ONLY? */ 37952002
*/* D (YES,LOADONLY,NO,) MODULE LOAD ONLY? */                           37954002
         SPACE 2                                                        37960002
         TM    CDATTR,CDSER+CDNLR      Q. IS MODULE SERRIALLY REUSABLE  37990002
*                                      UNRESTRICTED BY LOAD-ONLY ATTR   38040002
         BO    REUSEPGM                A= YES, TAKE BRANCH              38140002
         TM    CDATTR,CDNLR            Q. IS MODULE LOAD - ONLY         38190002
         BZ    LOADONLY                A.=YES, TAKE BRANCH              38240002
         SPACE                                                          38290002
*        IF FLAG IS ZERO LOADABLE ONLY IN INDICATED.                    38340002
*        MODULE IS NOT REUSABLE,CON ONLY BE ALLOCATED IF LOAD MACRO     38390002
*        NOT ISSUED AND NOT PREVIOUSLY USED.                            38440002
         SPACE                                                          38490002
         SPACE 2                                                        38500002
*/* D (YES,NOBACKUP,NO,) LOAD REQUEST? */                               38502002
         SPACE 2                                                        38510002
         TM    RBCDFLGS,LOAD           Q. IS A LOAD REQUEST PROCESSING  38540002
         BO    NOBACKUP                YES - BRANCH                     38590002
         SPACE 2                                                        38600002
*/* D (NO,%CONT3,YES,) HAS MODULE BEEN USED? */                         38602002
*/* R RETURN VIA REG 15+8 */                                            38604002
         SPACE 2                                                        38610002
         TM    CDATTR,CDNFN            Q. HAS THE MODULE BEEN USED      38640002
*                                      BY A PREVIOUS REQUEST            38690002
         BO    RETURN3                 RET3 A=YES, TAKE BRANCH          38740002
         SPACE 2                                                        38750002
*/*%CONT3: P SET MODULE USED FLAG IN MINOR (NFN) */                     38752002
*/* R RETURN REG 15+4 */                                                38754002
         SPACE 2                                                        38760002
         OI    CDATTR,CDNFN            SET PREVIOUSLY USED FLAG         38790002
         B     RETURN2                 RET2 SET FLAG AND BRANCH         38840002
         SPACE 2                                                        38850002
*/*NOBACKUP: D (NO,CDSETUP1,YES,) PROGRAM PUT IN BY LOADER? */          38852002
         SPACE 2                                                        38860002
NOBACKUP DS    0H                      LOADABLE ONLY LOAD REQUEST       38890002
         TM    CDATTR2,CDSPZ           Q. PGM PUT IN BY LOADER          38940002
         BNO   CDSETUP1                NO. GET NEW COPY                 38990002
         SPACE 2                                                        39000002
*/* D (NO,CDSETUP1,YES,) CDUSE = 0? */                                  39002002
*/* R RETURN VIA REG 15 +4 */                                           39004002
         SPACE 2                                                        39010002
         CLC   CDUSE,ZEROUSE           Q. USE COUNT EQUAL ZERO          39040002
         BNZ   CDSETUP1                NO. TRY TO GET NEW COPY          39090002
         BZ    RETURN2                 ALLOW THE LOAD - ALLOC SUC.      39140002
         SPACE 2                                                        39150002
*/*CDSETUP1: P GET ADDRESS OF IEAVLK01 */                               39152002
*/* S () CDSETUP:GO SEARCH NEXT CDE QUEUE */                            39154002
         SPACE 2                                                        39160002
CDSETUP1 L     BASEREG,VLK01VCN        GET SECOND MOD ADDRESS           39190002
         BR    BASEREG                 GO TO SECOND LOAD                39240002
         SPACE 2                                                        39250002
*/*REUSEPGM: D (NO,%CONT5,YES,%CONT4) REQUEST FOR LOAD? */              39252002
*/*%CONT4: R RETURN VIA REG 15+4 */                                     39254002
         SPACE 2                                                        39260002
REUSEPGM TM    RBCDFLGS,LOAD           Q. IS THIS A LOAD REQUEST        39290002
         BO    RETURN2                 A=YES, NO TEST OF USE REQUIRED   39340002
*                                      REQUEST CAN BE FULFILLED         39390002
*                                      LOAD RB POINTER FROM CDENTRY     39440002
*                                      AND CHECK IF ZERO.               39490002
         SPACE 2                                                        39500002
*/*%CONT5: P (0,%CONT4,GT 0,) GET ADDRESS OF RB USING MAJOR CDE */      39502002
*/* R RETURN REG 15+12 */                                               39504002
         SPACE 2                                                        39510002
         ICM   WKREG1,MASK,CDRBPJ+N1   Q. IS RBPOINTER ZERO             39540002
         BNE   RETURN4                 RET4 A=NO, TAKE BRANCH           39590002
         B     RETURN2                 RET2 RETURN SUCCESSFUL ALLOC     39690002
         SPACE 2                                                        39700002
*/*LOADONLY: P SAVE ADDRESS OF LLE */                                   39702002
*/* P INITIALIZE ABEND CODE = 0 */                                      39704002
         SPACE 2                                                        39710002
LOADONLY DS    0H                      LOADABLE ONLY MODULE PROCESS     39740002
         LR    R0,R13                  SAVE REG 13                      39790002
         SR    R13,R13                 ZERO REG 13 FOR ERROR ROUTINE    39840002
         SPACE 2                                                        39850002
*/* P NOTE: ONLY LOAD REQUESTORS CAN HAVE ACCESS TO LOAD ONLY MODULES   39852002
*/**/                                                                   39854002
*/* D (YES,%CONT6,NO,) REQUEST FOR LOAD? */                             39856002
*/* S () ERRLONLY:ISSUE 406 ABEND */                                    39858002
         SPACE 2                                                        39860002
         TM    RBCDFLGS,LOAD           IS THIS A LOAD REQUEST           39890002
         BZ    ERRLONLY                A = NO TAKE BRANCH, ERROR =406   39940002
         SPACE 2                                                        39950002
*/*%CONT6: P RESTORE LLE */                                             39952002
         SPACE 2                                                        39960002
         LR    R13,R0                  RESTORE REG 13                   39990002
         SPACE 2                                                        40000002
*/* P NOTE: LOAD CANNOT ALLOCATE ALREADY LOADED NON-REUSABLE PROGRAMS   40002002
*/**/                                                                   40004002
*/* D (NO,%CONT7,YES,) MINOR REENTRANT OR REUSABLE? */                  40006002
*/* R RETURN REG 15+4 */                                                40008002
         SPACE 2                                                        40010002
         TM    CDATTR,CDREN+CDSER      Q. IS MODULE REN OR SER          40040002
         BNZ   RETURN2                 RET2 A= EITHER REN OR SER        40090002
         SPACE 2                                                        40100002
*/*%CONT7: R RETURN REG 15+0 */                                         40102002
         SPACE 2                                                        40110002
         BR    SUBREG2                 RET 1 ALLOCATE NOT SUCCESSFUL    40140002
         DROP  SUBREG2                 DROP ALLOC DSECT                 40190002
         EJECT                                                          40240002
*        CDMOPUP IS CALLED TO PERFORM THE FOLLOWING                     40290002
*              1. TEST CDUSE FOR MAXIMUM VALUE (7FFF), IF               40340002
*                 EXCEEDED, SET SWITCH TO ABEND IN STEP 6.              40390002
*              2. INCREMENT CDUSE BY 1 AND, IF SYSTEM REQUEST           40440002
*                 INCREMENT CDSYSUSE BY 1.                              40490002
*              3. FREE THE CDE POINTED TO BY THE BLDL/FETCH WORK        40540002
*                 AREA, IF ANY, IF IT IS NOT BEING USED (IF IT IS NOT   40590002
*                 THE CDE FOR THE REQUEST (REG 11), OR THE MAJOR CDE    40640002
*                 (REG 12).                                             40690002
*              4. FREE THE BLDL/FETCH WORK AREA, IF ONE EXISTS, AND     40740002
*                 ZERO THE RBCSWORK FIELD.                              40790002
*              5. FREE THE DE SAVE AREA, IF ONE EXISTS, AND ZERO        40840002
*                 THE RBCSDE FIELD.                                     40890002
*              6. TEST FOR 906 ABEND CONDITION. IF ABEND SWITCH IS SET  40940002
*                 ISSUE 906 ABEND, OTHERWISE RETURN ON REGISTER 13.     40990002
*                                                                       41040002
*        REGISTER USABE                                                 41090002
*              R0,1,2 - ALTERED                                         41140002
*              R5   - SVRB (INPUT)                                      41190002
*              R6   - BASE REGISTER (INPUT)                             41240002
*              R7   - POINTS TO BLDL FETCH W.A. (OUTPUT)                41290002
*              R11  - REQUESTED CDE (INPUT)                             41340002
*              R12  - MAJOR CDE  (INPUT)                                41390002
*              R13  - RETURN ADDRESS (INPUT),ZEROED IF ABEND (OUTPUT)   41440002
*              R14,15- ALTERED                                          41490002
*              OTHER REGISTERS NOT REFERENCED                           41540002
*              SVRB EXSAVE FULLY INITIALIZED                            41590002
         SPACE                                                          41640002
         SPACE 2                                                        41650002
*/*CDMOPUP: E CDMOPUP */                                                41652002
*/* D (NO,INCOUNT,YES,) CDUSE COUNT = MAXIMUM? */                       41654002
         SPACE 2                                                        41660002
CDMOPUP  DS    0H                      CLEANUP WORK AREA ROUTINE        41690002
         CLC   CDUSEJ(N2),MAXIM        Q. IS USE FIELD MAXIMUML         41740002
         BNE   INCOUNT                 NO. INCREMENT COUNT FILEDS       41790002
         SPACE 2                                                        41800002
*/* P (,FREEWORK) SET ABEND INDICATOR */                                41802002
         SPACE 2                                                        41810002
         OI    RBCSFLG1,RBCSABEN       YES. SET ABEND SWITCH            41840002
         B     FREEWORK                AND FREE RESOURCES               41890002
         SPACE                                                          41940002
*        INCREMENT COUNT IN CDENTRY, CDUSE IS INCREMENTED ONLY HERE.    41990002
         SPACE 2                                                        42050002
*/*INCOUNT: P INCREMENT CDE USE COUNT BY ONE */                         42052002
         SPACE 2                                                        42060002
INCOUNT  DS    0H                                                       42090002
         LH    WKREG1,CDUSEJ           LOAD COUNT IN CDE                42190002
         LA    WKREG1,ADD1(WKREG1)     INCREMENT COUNT                  42240002
         STH   WKREG1,CDUSEJ           RESTORE NEW COUNT IN CDE         42290002
         SPACE 2                                                        42340002
*/*FREEWORK: P PUT CURRENT ASCB IN REG 7 FOR FREEMAIN */                42350002
*/* P (=0,DESATEST,GT 0,) GET WORK AREA ADDRESS */                      42360002
         SPACE 2                                                        42390002
FREEWORK DS    0H                      CHECK IF WORK AREA TO FREE       42590002
         L     AREAREG,PSAAOLD         GET ADDR. OF ASCB                42640002
         USING WKAREA,WKREG2           PROVIDE ADDRESSABILITY TO BLDL-  42690002
*                                      FETCH WORK AREA                  42740002
         SR    WKREG2,WKREG2           CLEAR REG FOR INSERT      PTM883 42750002
         ICM   WKREG2,MASK,RBCSWRKA    Q. WORK AREA GOTTEN              42790002
         BZ    DESATEST                NO, CHECK DE SAVE AREA           42840002
         SPACE 2                                                        42850002
*/* D (YES,RINGO,NO,) CDE BEING USED? */                                42900002
         SPACE 2                                                        42910002
         CLM   CDEREG,MASK,WKCDADDR+N1 Q. IS CDE BEING USED             42940002
         BE    RINGO                   A=YES, TAKE BRANCH               42990002
         SPACE 2                                                        43000002
*/* D (YES,RINGO,NO,) MAJOR CDE BEING USED?? */                         43002002
         SPACE 2                                                        43010002
         CLM   CDIREG,MASK,WKCDADDR+N1 Q. IS CDE USED FOR MAJOR         43040002
         BE    RINGO                   A= YES, TAKE BRANCH              43090002
         SPACE 2                                                        43092002
*/* P GET CDE ADDRESS FROM WORK AREA */                                 43092402
*/* L FREEMAIN-- FREE CDE FROM SP=255 (LSQA) */                         43092802
         SPACE 2                                                        43094002
         SR    R1,R1                   CLEAR REGISTER FOR ICM  @ZA17747 43095040
         ICM   R1,MASK,WKCDADDR+N1     PICKUP ADDR OF CDE      @ZA17747 43096040
         BZ    RINGO                   IF ACQUIRED CDE IS ZERO @ZA17747 43097040
         FREEMAIN RU,LV=CDESIZE,A=(1),SP=255,BRANCH=YES FREE CDE        43140002
         SR    R1,R1                   CLEAR REG                @M07600 43143002
         STCM  R1,MASK,RBCDE1          CLEAR RBCDE FIELD        @M07600 43146002
         SPACE 2                                                        43150002
*/*RINGO: L FREEMAIN-- FREE FETCH WORK AREA FROM SP=253 (LSQA) */       43152002
*/* P ZERO WORK AREA ADDRESS IN RBXSA */                                43154002
         SPACE 2                                                        43160002
RINGO    DS    0H                      FREE THE WORK AREA               43190002
         FREEMAIN RU,LV=WKSIZE,SP=253,A=(2),BRANCH=YES                  43240002
         ST    R15,RBCSWORK            CLEAR WORK AREA ADDR             43290002
*                                      R15 HAS CODE OF ZERO FROM FREE   43340002
         DROP  WKREG2                                                   43350002
         SPACE 2                                                        43360002
*/*DESATEST: P  GET DESAVE AREA ADDRESS FROM RBXSA */                   43362002
*/* D (YES,,NO,ABENDTST) DOES DE SAVE AREA EXIST */                     43364002
         SPACE 2                                                        43370002
DESATEST DS    0H                      CHECK FOR DE SAVE AREA           43390002
         L     R1,RBCSDE               PICK UP DE SAVE AREA ADDR        43450002
         LTR   R1,R1                   TEST IF DE SAVE AREA EXITS       43460002
         BZ    ABENDTST                IF NONE, GO TO CHECK FOR ABEND   43490002
         SPACE 2                                                        43500002
*/* L FREEMAIN-- FREE DE SAVE AREA FROM SP=255 */                       43502002
*/* P ZERO DESAVE AREA ADDRESS IN RBXSA */                              43504002
         SPACE 2                                                        43510002
         FREEMAIN RU,LV=DESIZE,SP=255,A=(1),BRANCH=YES                  43540002
         ST    R15,RBCSDE              CLEAR DE SAVE AREA ADDR.         43590002
*                                      R15 HAS CODE OF ZERO FROM FREE   43640002
         SPACE 2                                                        43650002
*/*ABENDTST: P RESTORE CVT POINTER DESTROYED BY FREEMAIN */             43650402
*/* D (NO,,YES,%CONT8) ABEND INDICATOR ON? */                           43652002
*/* R RETURN VIA REG 13 */                                              43654002
         SPACE 2                                                        43660002
ABENDTST DS    0H                      TEST FOR 906 ABEND               43690002
         L     CVTREG,CVTPTR           RESTORE ADDR. OF CVT             43740002
         TM    RBCSFLG1,RBCSABEN       Q. ABEND 906                     43790002
         BCR   EQZER,RETURND           NO, RETURN                       43840002
         SPACE 2                                                        43850002
*/*%CONT8: P ZERO ABEND REGISTER (REG 13) */                            43852002
*/* S () ERRCOUNT:ISSUE 906 ABEND */                                    43854002
         SPACE 2                                                        43860002
         SR    R13,R13                 ZERO REG FOR ABEND ROUTINE       43890002
         B     ERRCOUNT                TO ABEND 906.                    43940002
         EJECT                                                          43990002
*        CDLLSRCH IS A SUBROUTINE OF LOAD AND DELETE WHICH, GIVEN       44040002
*        A NAME AS INPUT, SEARCHES THE LLE QUEUE CHAINED FROM THE       44090002
*        TCB FOR A CDE WITH THE SAME NAME.  IF AN LLE IS FOUND,         44140002
*        RETURN IS ON R15 + 0. IF AN LLE IS NOT FOUND, RETURN IS        44190002
*        ON R15 + 4.                                                    44240002
*                                                                       44290002
*        REGISTER USABE                                                 44340002
*              R1  - ADDRESS OF PREVIOUS LLE IF LLE WAS FOUND (OUTPUT)  44390002
*                     THIS LLE POINTS TO THE LLE IN R13                 44440002
*              R2  - CHANGED                                            44490002
*              R4  - TCB (INPUT)                                        44540002
*              R9  - ADDRESS OF NAME (INPUT)                            44590002
*              R11 - ADDRESS OF CDE IF COUND (OUTPUT)                   44640002
*              R12 - ADDRESS OF CDE IF FOUND (OUTPUT)                   44690002
*              R13 - ADDRESS OF LLE IF FOUND (OUTPUT)                   44740002
*              R15 - RETURN ADDRESS (INPUT)                             44790002
*              OTHER REGISTERS NOT REFERENCED.                          44840002
         SPACE 2                                                        44850002
*/*CDLLSRCH: E CDLLSRCH */                                              44852002
*/* P GET ADDRESS OF LLE QUEUE HEADER IN CALLER'S TCB */                44854002
         SPACE 2                                                        44860002
CDLLSRCH LA    WKREG1,TCBLLS           PICK UP LOAD LIST START ADDR.    44890002
         SPACE 2                                                        44900002
*/*CDLLCONT: P NOTE: THIS IS AN ALTERNATE ENTRY TO  CONTINUE THE LLE    44902002
*/*SEARCH */                                                            44902102
*/* P SET UP LOOP POINTER TO SPEED SEARCH */                            44904002
         SPACE 2                                                        44910002
CDLLCONT BALR  WKREG2,ZERO             ESTABLISH LOOP START ADDR        44940002
         SPACE 2                                                        44950002
*/*%LDLREG: P (=0,,GT 0,%CONT9) GET NEXT LLE ADDRESS */                 44952002
*/* R RETURN REG 15+4 */                                                44954002
         SPACE 2                                                        44960002
         ICM   LDLREG,MASK4,N0(WKREG1) PICK UP LLE ADDRESS              44990002
*                                      Q. IS LLE ADDR = 0               45040002
         BZ    N4(SUBREG2)             A= YES, RETURN REG 15 + 4        45090002
         SPACE 2                                                        45100002
*/*%CONT9: P GET ADDRESS OF CDE FROM LLE */                             45102002
*/* D (NO,%CONTA,YES,) NAME IN CDE = REQUESTED NAME? */                 45104002
*/* R RETURN REG 15+0 */                                                45106002
         SPACE 2                                                        45110002
         L     CDIREG,LLECDPT          PICK UP ADDR OF CDE FROM LLE     45140002
         CLC   CDNAMEJ(NAME),N0(NAMEREG) Q. ARE NAMES EQUAL             45190002
         LR    CDEREG,CDIREG           INITIALIZE MINOR REG             45240002
         BCR   EQZER,SUBREG2           A= YES RETURN                    45290002
         SPACE 2                                                        45300002
*/*%CONTA: P (,%LDLREG) SET THIS LLE AS PREVIOUS LLE */                 45302002
         SPACE 2                                                        45310002
         LR    WKREG1,LDLREG           PICK UP NEXT ADDR OF LLE AND     45340002
         BR    WKREG2                  BRANCH TO LOOP START             45390002
         DROP  LDLREG                  LAST USE OF LLE                  45440002
         EJECT                                                          45490002
*        IEAVVMSR (SRCHDIRC) IS THE FIXED LINK PACK DIRECTORY SEARCH    45540002
*        ROUTINE. IT IS USED TO MINIMIZE THE SIZE OF THE ACTIVE LPAQ    45590002
*        WHILE PROVIDING RAPID ACCESS TO ALL LPA (PAGEABLE) MODULES.    45640002
*        A MODULES LPDE IS LOACATED BY EXCLUSIVE ORING THE FIRST FOUR   45690002
*        BYTES OF THE NAME WITH THE LAST FOUR BYTES.  THE RESULT IS     45740002
*        DIVIDED BY THE DIRECTORY SIZE, AND THE REMAINDER IS USED AS    45790002
*        AN INDEX.  THIS INDEX IS MULTIPLIED BY THE LPDE SIZE (40), AND 45840002
*        ADDED TO THE DIRECTORY ORIGIN.  THIS LOCATES AN LPDE QUEUE     45890002
*        WHICH WILL CONTAIN THE MODULE NAME (IF IT EXISTS).  THE LPDE   45940002
*        QUEUE THUS FOUND IS THEM SEARCHED IN A SIMILAR MAMMER TO THE   45990002
*        CDE QUEUE SEARCH (CDSEARCH).  A RETURN ON R14 + 0 MEANS THAT   46040002
*        THE LPDE WAS FOUND. OTHERWISE RETURN IS TO R14 + 4.  A USER    46090002
*        OF IEAVVMSR MUST INSURE THAT THE CVTDIRST BIT IS ON (=1)       46140002
*        BEFORE ENTERING IEAVVMSR, SINCE THIS BIT TELLS IF NIP HAS      46190002
*        BUILT THE LPDE DIRECTORY YET.                                  46240002
*        REGISTER USABE                                                 46290002
*              R0  - LEFT HALF OF NAME (INPUT)                          46340002
*                      LPDE ADDRESS, IF FOUND (OUTPUT), ELSE, UNCHANGED 46390002
*              R1  - RIGHT HALF OF NAME (INPUT)                         46440002
*              R3  - ADDRESS OF CVT (INPUT)                             46490002
*              R6  - SET TO BASE (OUTPUT) INPUT IF SRCHDIRC ENTRY       46540002
*              R8,9- ALTERED                                            46590002
*              R14 - RETURN ADDRESS (INPUT)                             46640002
*              OTHER REGISTERS NOT USED                                 46690002
         SPACE 2                                                        46700002
*/*IEAVVMSR: E IEAVVMSR */                                              46702002
*/* P ESTABLISH BASE ADDRESS (CDLKBASE) */                              46704002
         SPACE 2                                                        46710002
IEAVVMSR DS    0H                      LPA DIRECTORY SEARCH             46740002
         USING CVT,CVTREG              ADDRESSABILITY TO CVT            46790002
         BALR  BASEREG,ZERO            SET UP ADDRESSABILITY            46840002
         USING *,BASEREG               INITIALIZATION FOR EXTERNAL CALL 46890002
         L     BASEREG,LINKBASE        PICK UP BASE VALUE               46940002
         USING CDLKBASE,BASEREG        ESTABLISH ADDRESSABILITY         46990002
         SPACE 2                                                        47000002
*/*SRCHDIRC: P NOTE: THIS IS AN ALTERNATE ENTRY TO CONTINUE THE SEARCH  47002002
*/**/                                                                   47002402
*/* P EXCLUSIVE OR FIRST AND SECOND HALF ON NAME */                     47004002
*/* P DIVIDE RESULT BY VALUE IN CVTVMDI */                              47006002
*/* P MULTIPLY REMAINDER BY LPDE SIZE */                                47008002
*/* P ADD PRODUCT TO LPA DIRECTORY BASE ADDRESS */                      47008402
         SPACE 2                                                        47010002
SRCHDIRC DS    0H                      ENTRY FOR IEAVLK USERS           47040002
         USING LPDE,LPDEREG            ADDRESSABILITY FOR LPDES         47090002
         SR    LPDEREG,LPDEREG         CLEAR REG FOR DIVISION           47140002
         LR    HASHREG,NAMELEFT        LEFT HALF OF NAME IN WORK REG.   47190002
         XR    HASHREG,NAMERGT         HASH WITH RIGHT HALF             47240002
         D     LPDEREG,CVTVVMDI        DIVIDE BY DIRECTORY SIZE         47290002
         LA    HASHREG,LPDESIZE        GET MULTIPLIER                   47390002
         MR    LPDEREG,LPDEREG         MULT. BY SIZE OF LPDE            47440002
         LR    LPDEREG,HASHREG         MOVE RESULT TO USABLE REG.       47490002
         A     LPDEREG,CVTDIRST        ADD START OF DIRECTORY ADDR      47540002
         SPACE 2                                                        47550002
*/*CHEKNEXT: P COMPARE LPDENAME WITH FIRST HALF OF NAME */              47552002
*/* D (NO,NEXTLPDE,YES,) EQUAL? */                                      47554002
         SPACE 2                                                        47560002
CHEKNEXT C     NAMELEFT,LPDENAME       IF FIRST HALVES NOT EQUAL,       47590002
         BNE   NEXTLPDE                GET NEXT LPDE ON CHAIN           47640002
         SPACE 2                                                        47650002
*/* P COMPARE LPDENAME+4 WITH SECOND HALF OF NAME */                    47652002
*/* D (NO,NEXTLPDE,YES,DONIT) EQUAL? */                                 47654002
         SPACE 2                                                        47660002
         C     NAMERGT,LPDENAME+NAMERT IF BOTH EQUAT,                   47690002
         BE    DONIT                   LPDE IS FOUND, BRANCH OUT        47740002
         SPACE 2                                                        47750002
*/*NEXTLPDE: P GET ADDRESS OF NEXT LPDE */                              47752002
*/* D (NO,CHEKNEXT,YES,) CHAIN POINTER = 0? */                          47754002
*/* R RETURN REG 14+4 */                                                47756002
         SPACE 2                                                        47760002
NEXTLPDE DS    0H                      GET NEXT LPDE TO TEST            47790002
         L     LPDEREG,LPDECHN         GET NEXT LPDE ADDRESS            47840002
         LTR   LPDEREG,LPDEREG         TEST FOR END OF QUEUE            47890002
         BNZ   CHEKNEXT                IF NONZERO, CHECK NAME           47940002
         B     NOGOOD(RETURN)          OTHERWISE, NOT FOUND RETURN      47990002
         SPACE 2                                                        48000002
*/*DONIT: P LOAD LPDE ADDRESS INTO REG 0 */                             48002002
*/* R RETURN VIA REG 14 */                                              48004002
         SPACE 2                                                        48010002
DONIT    LR    LPDEADDR,LPDEREG        PUT LPDE ADDRESS IN REG. 0       48040002
         BR    RETURN                  RETURN GOOD                      48090002
         EJECT                                                          48140002
*        ERRORTAB IS THE INTERFACE TO ABEND.  IT IS ENTERED WHENEVER    48190002
*        AN ABEND SITUATION HAS BEEN DETECTED BY THE PROGRAM MANAGER.   48240002
*        THE VARIOUS ENTRY POINTS ARE USED TO GENERATE THE              48290002
*        PARTICULAR ABEND CODES.  UPON ENTRY, THE ENVIRONMENTAL         48340002
*        REGISTERS 3,4, AND 5 ARE INITIALIZED, AND A TEST IS MADE FOR   48390002
*        NIP IN PROCESS.  IF NIP IS IN PROCESS, THE ABEND CODE IS       48440002
*        GENERATED INTO R1, AND THE TCB ADDRESS IS PUT INTO REGISTER 0  48490002
*        WITH AN ABEND SVC BEING ISSUED.  OTHERWISE A MESSAGE IS        48540002
*        WRITTEN (WTP) TO THE PROGRAMMER INDICATING THE TYPE OF ERROR   48590002
*        TAT HAS OCCURED.  A BUFFER IS OBTAINED CONDITIONALLY FROM      48640002
*        SUBPOOL 253.  IF THE GETMAIN CANNOT BE DONE, THE WTP IS        48690002
*        BYPASSED.  IN THIS WAY A GETMAIN ABEND IS AVOIDED.  THE FORMAT 48740002
*        OF THE MESSAGES IS GIVEN IN THE DSECTS AT THE END OF THIS      48790002
*        ROUTINE.  THE NECESSARY INFORMATION IS LOCATED IN THE CVT,     48840002
*        TCB,SVRB (EXSAVE), THE TIOT, AND IN THE REGISTERS UPON ENTRY.  48890002
*        THE WTO MESSAGE PROCESSING IS EBCDIC DEPENDENT                 48940002
*        REGISTER USAGE                                                 48990002
*              R0  - TCB ADDRESS (OUTPUT)                               49040002
*              R1  - ABEND CODE (OUTPUT)                                49090002
*              R3  - CVT ADDRESS (OUTPUT)                               49140002
*              R4  - TCB ADDRESS (OUTPUT)                               49190002
*              R5  - SVRB ADDRESS (OUTPUT)                              49240002
*              R6  - BASE REGISTER (INPUT)                              49290002
*              R8  - DE SIZE IF 206 ABEND (INPUT)                       49340002
*              R9  - ANDE/DE POINTER IF 206 ABEND (INPUT)               49390002
*              R10 - REASON CODE SAVE REG (OUTPUT)                      49440002
*              R11 - TIOT ADDRESS (OUTPUT)                              49490002
*              R12 - PARAMETER LIST PASSED (IF 206 ABEND)               49540002
*              R13 - ZERO (INPUT) ABEND CODE (OUTPUT)                   49590002
*              R14 - WORK REGISTER (OUTPUT)                             49640002
*              R15 - REASON CODE (INPUT AND OUTPUT)                     49690002
*              OTHER REGISTERS NOT REFERENCED                           49740002
*              SVRB EXSAVE FULLY INITIALIZED EXCEPT IF 206 ABEND        49790002
         SPACE 2                                                        49800002
*/*ERRTAB: E ENTRY ERRTAB */                                            49802002
         SPACE 2                                                        49810002
ERRORTAB DS    0H                      ABEND CODE TABLE                 49840002
*/*ERRLOCK: P CODE+1 (A06) */                                           49842002
*/*ERRCOUNT: P CODE+1 (906) */                                          49844002
*/*ERRBLDL: P CODE+2 (806) */                                           49854002
*/*ERRFIX: P CODE+2 (606) (OBSOLETE) */                                 49864002
*/*ERRONLY: P CODE+2 (406) */                                           49874002
*/*ERRPARM: P CODE+2 (206) */                                           49884002
ERRLOCK  LA    R13,N1(R13)             CODE = A06                       49890002
ERRCOUNT LA    R13,N1(R13)             CODE = 906                       49940002
ERRBLDL  LA    R13,N2(R13)             CODE = 806                       49990002
ERRFIX   LA    R13,N2(R13)             CODE = 606                       50040002
ERRLONLY LA    R13,N2(R13)             CODE = 406                       50090002
ERRPARM  LA    R13,N2(R13)             CODE = 206                       50140002
         SPACE 2                                                        50150002
*/*ABNDSET:S SETFRR:REMOVE RECOVERY ROUTINE */                          50152002
         SPACE 2                                                        50160002
ABNDSET  DS    0H                      ENTRY FROM IEAVLK01 SAME INPUT   50190002
         SETFRR D,WRKREGS=(R3,R4)      RELEASE RECOVERY                 50200002
         SPACE 2                                                        50210002
*/* P SET UP ADDRESSABILITY */                                          50212002
         SPACE 2                                                        50220002
         L     CVTREG,CVTPTR           PICK UP CVT ADDRESS              50240002
         USING CVT,CVTREG              ADDRESSABILITY ON CVT            50290002
         L     TCBREG,CVTTCBP          PICK UP NEW OLD SLOTS            50340002
         L     TCBREG,OLD(TCBREG)      PICK UP TCB ADDRESS              50390002
         L     RBREG,TCBRBP            PICK UP CONTENTS SVRB            50440002
         SPACE 2                                                        50450002
*/* D (NO,CVTCHEK,YES,) SHOULD ABEND BE 306? */                         50452002
         SPACE 2                                                        50460002
         LR    REASON,R15              PICK UP REASON CODE FROM         50490002
*                                      PARAMETER REG                    50540002
         TM    RBCSFLG1,RBCSA306       Q. ABEND SHOULD BE 306           50550002
         BZ    CVTCHEK                 A. NO- CONTINUE                  50560002
         SPACE 2                                                        50562002
*/* P SET ABEND CODE TO 306 */                                          50562402
         SPACE 2                                                        50564002
         LA    ABCODE,THREE            A. YES- SET CODE TO 3 FOR ABEND  50570002
         SPACE 2                                                        50572002
*/*CVTCHEK: D (YES,NOWTP,NO,) NIP IN PROGRESS? */                       50572402
         SPACE 2                                                        50574002
CVTCHEK  DS    0H                      LABEL TO BRANCH                  50580002
         TM    CVTOPTA,CVTNIP          IF NIP IN PROCESS SKIP WTP       50590002
         BO    NOWTP                   ABEND DIRECTLY                   50640002
         SPACE 2                                                        50642002
*/* P SAVE PARM LIST POINTER(R12) IN R1 FOR 206 ABEND */       @ZA02730 50642203
*/* L SETLOCK-- FREE ALL LOCKS */                                       50642402
*/* P RESTORE THE PARM LIST POINTER(R12) FROM R1 */            @ZA02730 50643203
         SPACE 2                                                        50644002
         LR    R1,R12                  SAVE PARM LIST POINTER  @ZA02730 50647003
         LR    CVTREG,R13              SAVE REG 13 OVER SETLOCK         50650002
         SETLOCK  RELEASE,TYPE=CMS,RELATED=FREE ALL LOCKS               50690002
         SETLOCK  RELEASE,TYPE=LOCAL,RELATED=HELD (ONLY LOACAL AND CMS) 50740002
         LR    R12,R1                  RESTORE PARM LIST PTR   @ZA02730 50745003
         LR    R13,CVTREG              RESET ABEND CODE TO VOLITAL REG  50750002
         L     CVTREG,CVTPTR           RESTORE CVT TO USING REG         50760002
         SPACE 2                                                        50770002
*/* L GETMAIN-- GET WTP BUFFER */                                       50772002
         SPACE 2                                                        50780002
         GETMAIN EC,LV=MESSZE,A=RBCSGR15,SP=253,MF=(E,RBCSGR0)          50790002
*                                      ELEMENT FORM,CONDITIONAL         50840002
*                                      GETMAIN FOR MESSAGE BUFFER IN    50890002
*                                      SP 253, LIST TO BE BUILT IN      50940002
*                                      GR15-1 SAVE AREA IN SVRB EXSA    50990002
         LTR   R15,R15                 IF GETMAIN FAILED                51040002
         BNZ   NOWTP                   DONT DO WTP.  PREVENTS ABENDING  51090002
*                                      POOR FELLOW FOR NO SPACE WHILE   51140002
*                                      WE ARE ABENDING HIM FOR MESSING  51190002
*                                      UP PROGRAM MANAGER               51240002
         SPACE 2                                                        51250002
*/* P PRIME WTP BUFFER */                                               51252002
         SPACE 2                                                        51260002
         L     R1,RBCSGR15             PICK UP BUFFER ADDRESS           51290002
         USING MGEN,R1                 GENERAL MESSAGE DSECT            51340002
         MVC   MGEN(MESSZE),MESSAGE    INITIALIZE BUFFER WITH SKELETON  51390002
*                                      MESSAGE                          51440002
         L     TIOTPTR,TCBTIO          GET TIOT ADDRESS FROM TCB        51490002
         USING TIOT1,TIOTPTR           ADDRESSABILITY ON TIOT           51540002
         MVC   MGENJOBN(NAME),TIOCNJOB MOVE JOB NAME TO MESSAGE         51590002
         MVC   MGENSTEP(NAME),TIOCSTEP MOVE STEP NAME TO MESSAGE        51640002
         DROP  TIOTPTR                 DROP ADDRESSABILITY FOR TIOT     51690002
         SPACE 2                                                        51700002
*/* D (YES,CODE206,NO,) 206 ABEND? */                                   51702002
         SPACE 2                                                        51710002
         CLM   ABCODE,MASK1,BYTETWO    IF 206 ABEND                     51740002
         BE    CODE206                 DO SPECIAL MESSAGE PROCESS       51790002
         SPACE 2                                                        51800002
*/* P PUT MODULE NAME IN MESSAGE */                                     51802002
         SPACE 2                                                        51810002
         MVC   MGENNAME(NAME),RBCSNAME MOVE MODULE NAME TO MESSAGE      51840002
         SPACE 2                                                        51850002
*/* D (YES,RESUME,NO,) 106 ABEND? */                                    51852002
         SPACE 2                                                        51860002
         CLM   ABCODE,MASK1,BYTEONE    IF 106 ABEND                     51890002
         BE    RESUME                  AVOID ZERO REASON CODE           51940002
         SPACE 2                                                        51950002
*/* D (YES,RESUME,NO,) 806 ABEND? */                                    51952002
         SPACE 2                                                        51960002
         CLM   ABCODE,MASK1,BYTEEIGH   IF 806 ABEND                     51990002
         BE    RESUME                  AVOID ZERO REASON CODE           52040002
         SPACE 2                                                        52050002
*/* D (YES,RESUME,NO,) 306 ABEND? */                                    52052002
         SPACE 2                                                        52060002
         CLM   ABCODE,MASK1,BYTETHRE   IF 306 ABEND                     52090002
         BE    RESUME                  AVOID ZERO REASON CODE           52100002
         SPACE 2                                                        52102002
*/* P FOR ALL OTHER ABEND TYPES, ZERO OUT REASON CODE */                52102402
         SPACE 2                                                        52104002
         SR    REASON,REASON           ZERO OUT REASON CODE             52110002
         SPACE 2                                                        52120002
*/*RESUME: P CONVERT ABEND REASON CODE TO EBCDIC */                     52122002
         SPACE 2                                                        52130002
RESUME   DS    0H                      FORMAT CODES                     52140002
*                                                                       52190002
* THE FOLLOWING INSTRUCTION IS EBCDIC CHARACTER CODE DEPENDENT          52240002
*                                                                       52290002
         IC    R14,TRANTAB(ABCODE)     PICK UP EBCDIC CODE              52340002
         STC   R14,MGENABID            MOVE TO BYTE IN MESSAGE          52390002
*                                      TO CREATE ABEND CODE             52440002
*                                                                       52490002
* THE FOLLOWING INSTRUCTION IS EBCDIC CHARACTER CODE DEPENDENT          52540002
*                                                                       52590002
         LTR   REASON,REASON           IS REASON CODE ZERO     @ZA18512 52594040
         BNZ   REASCODE                NO PROCESS GOOD REASON  @ZA18512 52598040
         MVI   MGENDASH,BLANK          YES BLANK OUT THE DASH  @ZA18512 52602040
         B     WTPITNOW                GO WRITE THE MESSAGE    @ZA18512 52604040
REASCODE STC   REASON,MGENREAS+1       STORE REASON CODE       @ZA18512 52610040
         UNPK  MGENREAS(THREE),MGENREAS+1(TWO)   UNPACK CODE   @ZA18512 52614040
         TR    MGENREAS(TWO),TRANTAB-X'F0' MAKE IT PRINTABLE   @ZA18512 52618040
         CLI   MGENREAS,X'F0'          LEADING ZERO IN CODE    @ZA18512 52622040
         BNE   REASBLNK                NO THEN LEAVE IT ALONE  @ZA18512 52626040
         MVI   MGENREAS,BLANK          MAKE IT BLANK IN MSG    @ZA18512 52630040
REASBLNK MVI   MGENREAS+2,BLANK        FIX BLANK IN FIELD      @ZA18512 52634040
         SPACE 2                                                        53000002
*/*WTPITNOW: L WTO-- WTP OPTION */                                      53002002
         SPACE 2                                                        53010002
WTPITNOW DS    0H                      READY TO WTO                     53040002
         WTO   MF=(E,(1))              WRITE MESSAGE TO PROGRAMMER      53090002
         FREEMAIN RU,LV=MESSZE,A=RBCSGR15,SP=253 FREE MSG BUFF @ZA20311 53090540
         SPACE 2                                                        53100002
*/*NOWTP: P SET UP REGISTERS FOR ABEND */                               53102002
         SPACE 2                                                        53110002
NOWTP    DS    0H                                                       53140002
         LR    R15,REASON              RESTORE REASON CODE              53190002
         SLL   ABCODE,N8               PUT ABEND CODE IN RIGHT BITS     53240002
         O     ABCODE,ANOMALY          PUT IN 06                        53290002
         SPACE 2                                                        53292002
*/* D (YES,BRANCHOU,NO,) RETURN REQUESTED? */                           53292402
         SPACE 2                                                        53294002
         TM    RBCSFLG1,RBCSERIN       Q. ERROR RETURN REQ.             53300002
         BO    BRANCHOU                A. YES - BRANCH TO EXIT          53310002
         SPACE 2                                                        53320002
*/*ABEND: L () ABEND-- TERMINATE TASK */                                53322002
         SPACE 2                                                        53330002
ABEND    ABEND (ABCODE),DUMP,,SYSTEM   ISSUE ABEND SVC                  53340002
         SPACE 2                                                        53390002
*/*CODE206: P (,RESUME) SET UP SPECIAL MESSAGE FOR 206 ABEND */         53400002
         SPACE 2                                                        53440002
CODE206  DS    0H                      206 ABEND SPECIAL MESSAGE        53490002
         MVC   M206ZIPS(THREE),ZIPBLK  PUT IN 00 AND A BLANK            53540002
         MVC   M206PARM(TOEND),M206BLK0 BLANK OUT REST OF MESSAGE       53590002
         MVC   M206MID(N3),MSG807I     SET MESSAGE TO 206 ID            53640002
         ST    R12PARM,RBCSGR15        STORE PARM LIST POINTER          53690002
         UNPK  M206PARM(UNPKSIZE),RBCSGR15(FIVE)  FORMAT INTO MSG       53740002
*                                                                       53790002
* THE FOLLOWING INSTRUCTION IS EBCDIC CHARACTER CODE DEPENDENT          53840002
*                                                                       53890002
         TR    M206PARM(EIGHT),TRANTAB-X'F0' TRANSLATE TO EBCDIC        53940002
         MVI   M206BLK1,BLANK          RESET BLANK                      53990002
         CLM   REASON,MASK1,BYTEONE    IF REASON CODE 1                 54040002
         BE    RESUME                  END OF 206 PROCESS HERE          54090002
         ST    R9,RBCSGR15             STORE EP/DE ADDRESS     @ZA02730 54094003
         UNPK  M206NMDE(UNPKSIZE),RBCSGR15(FIVE)               @ZA02730 54098003
*                                      FORMAT INTO MESSAGE     @ZA02730 54102003
*                                                              @ZA02730 54106003
* THE FOLLOWING INSTRUCTION IS EBCDIC CHARACTER CODE DEPENDENT @ZA02730 54110003
*                                                              @ZA02730 54114003
         TR    M206NMDE(EIGHT),TRANTAB-X'F0'                   @ZA02730 54118003
*                                      TRANSLATE TO EBCDIC     @ZA02730 54122003
         MVI   M206BLK2,BLANK          RESET BLANK             @ZA02730 54126003
         CLM   REASON,MASK1,BYTETWO    IF REASON CODE 2,THEN   @ZA02730 54130003
         BE    RESUME                  END OF 206 PROCESS HERE @ZA02730 54134003
         ST    DESZREG,RBCSGR15        STORE DE SIZE CALCULATED         54140002
         UNPK  M206DES(UNPKSIZE),RBCSGR15(FIVE)  FORMAT INTO MSG        54190002
*                                                                       54240002
* THE FOLLOWING INSTRUCTION IS EBCDIC CHARACTER CODE DEPENDENT          54290002
*                                                                       54340002
         TR    M206DES(EIGHT),TRANTAB-X'F0'  TRANSLATE TO EBCDIC        54390002
         MVI   M206BLK3,BLANK          RESET BLANK                      54440002
         B     RESUME                  END OF 206 SPECIAL PROCESS       54490002
         SPACE 2                                                        54500002
*/*BRANCHOU: D (YES,ABEND,NO,) XCTL REQUEST? */                         54502002
         SPACE 2                                                        54504002
BRANCHOU TM    RBCDFLGS,XCTL           Q. XCTL REQUEST                  54510002
         BO    ABEND                   A. YES - NO ERROR RET. ALLOWED   54520002
         SPACE 2                                                        54530002
*/* D (YES,ABEND,NO,) 206 ABEND? */                                     54530102
         SPACE 2                                                        54530402
         CL    ABCODE,A206             Q. 206 ABEND                     54532002
         BE    ABEND                   A. YES - NO RETURN ALLOWED       54534002
         TM    RBCSFLG1,RBCSABEN       Q. ABEND 906            @ZA17747 54534640
         BO    FREEDONE                                        @ZA17747 54535240
         LR    R8,ABCODE               SAVE ABCODE ACROSS FREE @ZA17747 54535540
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=NO      @ZA20311 54535640
         L     AREAREG,PSAAOLD         GET ASCB ADDR IN REG 7  @ZA20311 54536240
         SR    WKREG2,WKREG2           CLEAR REG2 FOR ICM      @ZA20311 54536440
         ICM   WKREG2,MASK,RBCSWRKA    IS THERE A WORK AREA    @ZA20311 54536640
         BZ    CHECKDE                 NO - CHECK FOR DE SAVE  @ZA20311 54536840
         BAL   RETURND,RINGO           YES - GO FREE WORK AREA @ZA20311 54537040
         B     RELSLOCK                GO RELEASE LOCAL LOCK   @ZA20311 54537240
CHECKDE  BAL   RETURND,DESATEST        GO HANDLE DE SAVE       @ZA20311 54537440
RELSLOCK SETLOCK RELEASE,TYPE=LOCAL,RELATED=HELD               @ZA20311 54537640
         LR    ABCODE,R8               RESTORE THE ABEND REG   @ZA20311 54537840
FREEDONE DS    0H                                              @ZA17747 54538040
         SPACE 2                                                        54538102
*/* P  SET ABEND CODE IN REG 1 */                                       54542002
         SPACE 2                                                        54542202
         L     CVTREG,CVTPTR           GET ADDRESS OF CVT               54542602
         LR    R1,ABCODE               PUT ABEND CODE IN R0             54544002
         LR    R15,REASON              RESTORE REASON CODE     @ZA28684 54544940
         LTR   R15,R15                 DOES R15 CONTAIN REASON CODE     54545802
         BNE   LOADTEST                YES - USE ONE SET                54547602
         LA    R15,N4                  SET A RETURN CODE NE 0           54549402
         SPACE 2                                                        54549802
*/* D (NO,,YES,ERREXIT) REQUEST FOR LOAD? */                            54550202
         SPACE 2                                                        54550602
LOADTEST TM    RBCDFLGS,LOAD           Q. LOAD REQUEST                  54551002
         BO    ERREXIT                 A. YES - EXIT                    54551102
         SPACE 2                                                        54551602
*/*LINKEXIT: P (,SYNCR) PUT ERROR EXIT ADDRESS IN OPSW FROM RBCSERRA */ 54551702
         SPACE 2                                                        54552002
LINKEXIT L     PRBREG,RBWCF            GET CALLERS RB                   54553002
         L     R0,RBGRSAVE             RESTORE CALLERS REG 0            54563002
         L     SUBREG2,RBCSERRA        GET ERR. RET. ADDR.              54566602
         LA    SUBREG2,N0(SUBREG2)     CLEAR HIGH BYTE           M02638 54568602
         ST    SUBREG2,RBOPSWZ+WORD(PRBREG) PUT IN CALLERS RB           54570602
         LA    R14,CVTEXIT             GET ADDRESS OF EXIT INSTRUCTION  54571002
         ST    R14,RBGRS14             PLACE IN SVRB R14 SLOT           54571402
         SPACE 2                                                        54572602
*/*ERREXIT: R EXIT PROLOG */                                            54575002
         SPACE 2                                                        54578402
ERREXIT  DS    0H                                                       54579202
         L     R14,CVTEXPRO            GET ADDR OF EXIT PROLOGUE        54579602
         BR    R14                     EXITTO CALLER                    54580002
         SPACE 2                                                        54580802
*/* FOOTING                                                             54583202
*/*                                                                     54585602
*/* */                                                                  54588002
*/*IEAVLK00: END END ONE OF TWO MODULES  */                             54590402
         SPACE 2                                                        54592802
         DROP  R1                      END OF WTP USAGE                 54595202
         EJECT                                                          54597602
*                                                                       54600002
*                                      ADDRESSING CONSTANTS             54640002
*                                                                       54690002
IEAQCS04 DS    0F                      ADDRESS LIST FOR VLK01           54740002
*                                      THE FOLLOWING 6 CONSTANTS MUST   54790002
*                                      NOT BE MOVED OR CODE INSERTED    54840002
LINKBASE DC    A(CDLKBASE)             USED TO SET CORRECT BASE         54890002
*                                      FOR ADDRESSIBILITY               54940002
         DC    A(CDCONTRL)             POINT TO CDCONTRL                54990002
         DC    A(CDEMERGE)             POINT TO CDEMERGE                55040002
         DC    A(CDQUECTL)             POINT TO CDQUECTL                55090002
         DC    A(PLUSCONT)             POINT TO PLUSCONT                55140002
         DC    A(ABNDSET)              POINT TO ABENDSET                55190002
VLK01VCN DC    A(IEAVLK01)             POINT TO SECOND LOAD             55240002
IEAQLCTA DC    A(IEAQLPAQ)             ADDRESS OF LINK PACK AREA        55290002
*                                      CONTROL QUEUE . ALSO IN CVT      55340002
HKPADDR  DC    A(CDHKEEP)              ADDRESS OF TASK MST.HKEEP RTN.   55390002
FRRPGM   DC    A(FRRPGMMG)             ADDRESS OF FRR FOR PGM. MGR.     55400002
*                                                                       55440002
*                                      GENERAL MASKS                    55490002
*                                                                       55540002
A206     DC    X'00000206'             INDICATED 206 ABEND              55550002
MAXIM    DC    X'7FFF'                 MAXIMUM USE COUNTS               55590002
ZEROUSE  DC    X'0000'                 ZERO USE COUNT FIELD TEST        55600002
ANOMALY  DS    0F                      ABEND FORMATTING CONSTANT        55640002
         DC    X'00000006'             MASK WITH SVC NO. AND DUMP FLAG  55690002
APFROUND DC    X'FFFFFFFE'             ROUND TO HALFWORD AND MASK       55740002
HIBYTE   DC    X'FF'                   ABEND FLAG FOR CDMOPUP           55790002
CLRBYTE  DC    X'000000'               3 BYTES OF HIBYTE ALSO USED      55840002
*                                      TO SET HIGH ORDER BYTE OF REG 0  55890002
BYTEONE  DC    X'01'                   ONE BYTE FOR COMPARE             55940002
BYTETWO  DC    X'02'                   ONE BYTE FOR COMPARE             55990002
BYTETHRE DC    X'03'                   ONE BYTE FOR COMPARE             56000002
BYTEEIGH DC    X'08'                   ONE BYTE FOR COMPARE             56040002
AUTHON   DC    X'01'                   AUTHORIZATION FLAG               56090002
LLEONE   DC    X'0001'                 ONE IN LLE                       56140002
*                                                                       56190002
* THE FOLLOWING CONSTANT IS EBCDIC CHARACTER CODE DEPENDENT             56240002
*                                                                       56290002
ZIPBLK   DC    C'00 '                  ZERO AND BLANK OVERLAY  @ZA02730 56300003
*                                      FOR 206 ABEND MESSAGE   @ZA02730 56310003
*                                                                       56440002
* THE FOLLOWING CONSTANT IS EBCDIC CHARACTER CODE DEPENDENT             56490002
*                                                                       56540002
MSG807I  DC    C'807'                  MESSAGE ID FOR 206 ABENDS        56590002
*                                      IT OVERLAYS THE 703 IN THE WTO   56640002
FRAMPSW  DC    X'000D000000'           PROBLEM STATE, ENABLED           56690002
MESSAGE  WTO   'IEA703I  06-                     MODULE ACCESSED       X56700040
                       ',MF=L,ROUTCDE=11,DESC=6                @ZA18512 56710040
ENDOMES  EQU   *                       ABEND MESSAGE END                56840002
MESSZE   EQU   ENDOMES-MESSAGE         SIZE OF MESSAGE TO MOVE          56890002
*                                                                       56940002
* THE FOLLWOING TABLE IS EBCDIC CHARACTER CODE DEPENDENT                56990002
*                                                                       57040002
TRANTAB  DC    C'0123456789ABCDEF'     TRANSLATE TABLE TO EBCDIC        57090002
         EJECT                                                          57240002
ALLOC    DSECT                                                          57290002
*                  THE CDALLOC SUBROUTINE USES A BRANCH TABLE TO        57340002
*                  DISTINGUISH THE RESULTS OF ITS ACTION.  A BRANCH     57390002
*                  TABLE OF THE FOLLOWING NATURE IS EXPECTED            57440002
RETURN1  B     0   AN AVAILABLE COPY CANNOT BE FOUND IN QUEUE SEARCHES  57490002
*                  PROCEED WITH OPERATION TO FETCH A COPY.              57540002
RETURN2  B     0   AN AVAILABLE COPY HAS BEEN FOUND -PROCEED TO         57590002
*                  COMPLETE REQUEST.                                    57640002
RETURN3  B     0   A COPY OF A PROGRAM THAT IS NOT REUSABLE HAS BEEN    57690002
*                  FOUND, IT MAY NOT BE USED AGAIN.                     57740002
RETURN4  B     0   THE REQUEST MUST BE QUEUED.  THE LOAD MODULE IS      57790002
*                  SERIALLY REUSABLE AND IS CURRENTLY BEING USED.       57840002
RETURN5  B     0   A REQUEST MSUT BE QUEUED PENDING THE AVAILIBILITY    57890002
*                  OF THE LOAD MODULE.  THE MODULE IS BEING LOADED.     57940002
         EJECT                                                          57990002
         IHAMB MESSAGE BUFFER DSECT                                     58040002
         EJECT                                                          58090002
MGEN     DSECT OTHER THAN 206 ABEND MESSAGE                             58140002
         DS    CL4                     ALWAYS WTO INTERNAL CODES        58190002
         DS    CL7                     ALWAYS IEA703I                   58240002
         DS    C                       ALWAYS BLANK                     58290002
MGENABID DS    C                       VARIABLE ABEND NUMBER            58340002
         DS    CL2                     ALWAYS 06                        58390002
MGENDASH DS    C                       DASK OR BLANK                    58440002
MGENREAS DS    CL2                     REASON CODE OR BLANK    @ZA18512 58490040
         DS    C                       ALWAYS BLANK                     58540002
MGENJOBN DS    CL8                     JOB NAME                         58590002
         DS    C                       ALWAYS BLANK                     58640002
MGENSTEP DS    CL8                     STEP NAME                        58690002
         DS    C                       ALWAYS BLANK                     58740002
         DS    CL15                    ALWAYS MODULE ACCESSED           58790002
         DS    C                       ALWAYS BLANK                     58840002
MGENNAME DS    CL8                     MODULE NAME                      58890002
         DS    CL6                     BLANK PADDING TO MANK BOTH       58940002
*                                      MESSAGES THE SAME SIZE           58990002
         SPACE 3                                                        59040002
         ORG   MGEN                    206 SPECIAL MESSAGE              59090002
M206     EQU   *                                                        59140002
         DS    CL4                     ALWAYS WTO INTERNAL CODES        59190002
         DS    CL3                     ALWAYS IEA                       59240002
M206MID  DS    CL3                     708 ID FOR 206 MESSAGE           59290002
         DS    C                       ALWAYS I                         59340002
         DS    C                       ALWAYS BLANK                     59390002
M206ABID DS    C                       VARIABLE ABEND NUMBER (2)        59440002
         DS    CL2                     ALWAYS 06                        59490002
M206DASH DS    C                       DASH OR BLANK                    59540002
M206REAS DS    CL2                     REASON CODE OR BLANK    @ZA18512 59590040
         DS    C                       ALWAYS BLANK                     59640002
M206JOBN DS    CL8                     JOB NAME                         59690002
         DS    C                       ALWAYS BLANK                     59740002
M206STEP DS    CL8                     STEP NAME                        59790002
         DS    C                       ALWAYS BLANK                     59840002
M206ZIPS DS    CL2                     ALWAYS 00                        59890002
M206BLK0 DS    C                       ALWAYS BLANK                     59940002
M206PARM DS    CL8                     PARAMETER LIST POINTER           59990002
M206BLK1 DS    C                       ALWAYS BLANK                     60040002
M206NMDE DS    CL8                     NAME OR DE POINTER               60090002
M206BLK2 DS    C                       ALWAYS BLANK                     60140002
M206DES  DS    CL8                     EXPECTED DE SIZE                 60190002
M206BLK3 DS    C                       ALWAYS BLANK                     60240002
M206END  EQU   *                       END OF MESSAGE FOR BLNAKING SIZE 60290002
TOEND    EQU   M206END-M206PARM        LENGTH OF MESSAGE TO BLANK IF    60340002
*                                      206 ABEND                        60390002
         EJECT                                                          60440002
         IHAASCB                                                        60490002
         EJECT                                                          60500002
         IHAASXB                                                        60510002
         EJECT                                                          60540002
         IHACDE                                                         60550002
CDEEND   EQU   *                                                        60552002
CDESIZE  EQU   CDEEND-CDENTRY          SIZE OF CDE                      60554002
CDRBPZ   EQU   CDRRBP-CDENTRY          OFFSET TO RB POINTER             60556002
         EJECT                                                          60558002
CDENTRYJ DSECT                                                          60558402
         DS    (CDESIZE)C               CDE EQUATES                     60558802
CDATTRJ  EQU   CDENTRYJ+CDATTR-CDENTRY  MAJOR CDE DSECT                 60559202
CDCHAINJ EQU   CDENTRYJ+CDCHAIN-CDENTRY    TO INCREASE                  60559602
CDRBPJ   EQU   CDENTRYJ+CDRRBP-CDENTRY         READABILITY              60559702
CDNAMEJ  EQU   CDENTRYJ+CDNAME-CDENTRY           OF THE CODE            60559802
CDUSEJ   EQU   CDENTRYJ+CDUSE-CDENTRY                WHILE              60559902
CDENTPTJ EQU   CDENTRYJ+CDENTPT-CDENTRY                MAINTAINING      60569902
CDATTR2J EQU   CDENTRYJ+CDATTR2-CDENTRY                  DEPENDANCY     60579902
CDXLMJPJ EQU   CDENTRYJ+CDXLMJP-CDENTRY               ON THE MACRO      60583202
         EJECT                                                          60586702
DESAVE   DSECT                         MAPPING OF DE SAVE AREA          60587102
DESAVESZ DS    F                       SAVE AREA FOR DE SIZE            60587502
DESAVEDE DS    15F                     60 BYTE DE SAVE AREA             60587902
DESAVEND EQU   *                       END OF DE SAVE AREA              60588302
DESIZE   EQU   DESAVEND-DESAVE         SIZE OF SAVE AREA                60588402
         EJECT                                                          60588502
*********************************************************************** 60588602
*                                                                     * 60588702
*              COMMUNICATIONS VECTOR TABLE                            * 60588802
*                                                                     * 60588902
*********************************************************************** 60589002
         CVT   DSECT=YES,PREFIX=NO                                      60589302
         EJECT                                                          60589702
         IHAFETWK                                                       60609402
         EJECT                                                          60619402
         IHAFRRS                                                        60629502
         EJECT                                                          60645002
         IHAPSA                                                         60650002
         EJECT                                                          60655002
         IEZJSCB                                                        60660002
         EJECT                                                          60665002
         IHALLE                                                         60670002
LLEND    EQU   *                                                        60675002
LLESIZE  EQU   LLEND-LLE               SIZE OF LLE                      60680002
         EJECT                                                          60685002
         IHALPDE                                                        60690002
LPDEEND  EQU   *                       END OF LPDE                      60700002
LPDESIZE EQU   LPDEEND-LPDE            LENGTH OF LPDE                   60710002
         EJECT                                                          60740002
         IHAPDS                                                         60750002
SIZEDECM EQU   PDSBCLN-1               EXECUTED PDS BASIC SIZE          60752002
DECOMSZ  EQU   SIZEDECM-NAMELTH        BASIC SIZE MINUS NAME LENGTH     60754002
         EJECT                                                          60760002
         IHARB                                                          60790002
*********************************************************************** 60840002
*                                                                     * 60890002
*                  REQUEST BLOCK ADDITIONAL LABELS INTERNAL           * 60940002
*                                                                     * 61040002
*********************************************************************** 61090002
         ORG   RBEXSAVE                MAPPED INTO RBEXSAVE AREA        61140002
RBCSEXSA EQU   *                       PROGRAM MANAGER USAGE OF         61190002
*                                      RB EXTENDED SAVE AREA FOR        61240002
*                                      REENTRANT DATA AREA              61290002
RBCSNAME DS    CL8                     ENTRY POINT NAME CALLER PASSED   61340002
RBCSDE   DS    0A                      ADDRESS OF DE SAVE AREA          61390002
         DS    C                       RESERVED BYTE ALWAYS ZERO        61440002
RBCSDEA  DS    AL3                     3 BYTE ADDRESS                   61490002
RBCSERRA DS    F                       ADDRESS OF ERROR ROUTINE         61540002
RBCSFLG1 DS    B                       BLAG BYTE                        61590002
RBCSGSF  EQU   X'80'                   GOOD SEARCH INDICATOR            61640002
*                                      ON MEANS IEAVVMSR OR CDSEARCH    61690002
*                                      WAS SUCCESSFUL                   61740002
*                                      USED ONLY IN IEAVLK01 FOR        61790002
*                                      ADDRESSABILITY PROBLEMS          61840002
RBCSSYSR EQU   X'40'                   SYSTEM REQUEST FLAG              61890002
RBCSPARM EQU   X'20'                   PARAMETER CHECK FLAG             61940002
RBCSERIN EQU   X'10'                   ERROR RETURN REQUESTED           61990002
RBCSABEN EQU   X'08'                   ISSUE 906 ABEND                  62040002
RBCSA306 EQU   X'04'                   ISSUE 306 ABEND                  62090002
RBCRSAPF EQU   X'01'                   ATTACH WITH RESET APF   @WAB     62110040
RBCSFLG2 DS    B                       FLAG BYTE RESERVED               62140002
RBCSFLG3 DS    B                       FLAG BYTE RESERVED               62190002
RBCSFLG4 DS    B                       FLAG BYTE RESERVED               62240002
RBCSWORK DS    0A                      ADDRESS OF BLDL FETCH W.A.       62290002
         DS    C                       RESERVED BYTE ALWAYS ZERO        62340002
RBCSWRKA DS    AL3                     3 BYTE ADDRESS                   62390002
RBCSLLE  DS    0A                      ADDRESS OF LLE DURING LOAD       62440002
         DS    C                       RESERVED BYTE ALWAYS ZERO        62490002
RBCSLLEA DS    AL3                     3 BYTE ADDRESS                   62540002
RBCSFRRA DS    F                       SAVE AREA FOR PARM LIST USED     62550002
*                                      BE PGM MGR RECOVERY RTN.         62560002
RBCSGR15 DS    F                       SAVE AREA FOR REG 15 TO 1        62590002
RBCSGR0  DS    F                       AND USED AS PARAMETER            62640002
RBCSGR1  DS    F                       LIST FOR SVC'S                   62690002
RBCSRESV DS    1F                      1 WORD OF 12 WORK SAVE AREA      62740002
*                                      RESERVED FOR FUTURE EXPANSION    62750002
RBCSEND  EQU   *                       END OF CS SECTION                62790002
CLRSIZE  EQU   RBCSEND-RBCSWORK        SIZE OF AREA TO ZERO             62840002
PRBX     EQU   RBFTPRB                 DENOTES A PRB                    62890002
SVRB     EQU   RBFTSVRB                FIRST TWO BITS IN RBSTAB         62940002
*                                      INDICATE SVRB                    62990002
PRBSIZ   EQU   PRBEND-RBSECT           SIZE OF A PRB                    63040002
PRBSIZE  EQU   PRBLEN                  TOTAL SIZE (PRB + PREFIX)        63090002
*        FLAG SETTINGS FOR RBCDFLGS                                     63140002
LOAD     EQU   RBCDLOAD                ENTRY BY SVC LOAD                63190002
XCTL     EQU   RBCDXCTL                ENTRY BY SVC XCTL                63240002
SYNC     EQU   RBCDSYNC                ENTRY BY SVC SYNC                63290002
RBCSATT  EQU   RBCDATCH                ENTRY BY ATTACH                  63340002
PRBPREF  EQU   RBPRFXND-RBPRFXST       LENGTH OF RB PREFIX              63390002
RBXXDSP  EQU   RBOPSW+4                USED FOR DISP PRIO IN CTL        63440002
RBOPSWA  EQU   RBOPSW+4                ADDRESS FIELD OF PSW             63590002
PRBWDLEN EQU   (PRBLEN+7)/8            LENGTH OF PRB IN DOUBLE WORDS    63610002
         SPACE 3                                                        63640002
*        THE FOLLOWING CODE WAS ADDED FOR AOS2 TO MAKE ALL CODE         63690002
*         DEPENDANT OF THE RB DSECT SUPPLIED BY THE OFFICIAL MACRO      63740002
*          THE ORIGINAL EQUATES FOR THE NAMES WERE DELETED              63790002
*           AND THE PRB DSECT CHANGED                                   63840002
         SPACE 3                                                        63890002
RBSECTZ  EQU   RBSECT-RBSECT           SET BASE OFFSET                  63900002
RBSIZ1   EQU   RBSIZE-RBSECT           SIZE OF PRB FOR XCTL             63910002
RBSTABZ  EQU   RBSTAB-RBSECT           EXTRA LABEL                      63940002
RBSTAB1Z EQU   RBSTAB1-RBSECT          EXTRA LABEL                      63950002
RBCDEZ   EQU   RBCDFLGS-RBSECT         EXTRA LABEL                      63990002
RBOPSWZ  EQU   RBOPSW-RBSECT           EXTRA LABEL                      64040002
RBPGMQZ  EQU   RBPGMQ-RBSECT           EXTRA LABEL                      64140002
RBLINKZ  EQU   RBWCF-RBSECT            EXTRA LABEL                      64190002
RBWCFZ   EQU   RBWCF-RBSECT            EXTRA LABEL                      64240002
RBCDE1Z  EQU   RBCDFLGS-RBSECT+1       CDE ADDRESS IN RB                64290002
RBXXDSPZ EQU   RBOPSWZ+4               USED FOR DISP PRIO               64340002
RBLINKAZ EQU   RBWCF-RBSECT+1          EXTRA LABEL                      64390002
RBOPSW5Z EQU   RBOPSWZ+5               SAVE AREA FOR TCB ADDRESS        64440002
RBSTAB2Z EQU   RBSTAB2-RBSECT          EXTRA LABEL                      64490002
RBPGMQ1Z EQU   RBPGMQ1-RBSECT          EXTRA LABEL                      64540002
         SPACE 3                                                        64590002
PRB      DSECT                                                          64640002
PRBSTART DS    (PRBSIZ)C               USED TO DESCRIBE A PRB           64690002
PRBSTAB  EQU   PRB+RBSTAB-RBSECT       EXTRA LABEL                      64740002
PRBSTAB2 EQU   PRB+RBSTAB2-RBSECT      PRB EQUATE FOR RBSTAB2           64790002
PRBFLGS  EQU   PRB+RBCDFLGS-RBSECT     EXTRA LABEL                      64840002
PRBCDE   EQU   PRBFLGS+1               EXTRA LABEL                      64890002
PRBOPSW  EQU   PRB+RBOPSW-RBSECT       EXTRA LABEL                      64940002
PRBPGMQ  EQU   PRB+RBPGMQ-RBSECT       EXTRA LABEL                      64990002
PRBWCF   EQU   PRB+RBWCF-RBSECT        EXTRA LABEL                      65040002
PRBLINK  EQU   PRBWCF+1                EXTRA LABEL                      65090002
PRBSIZE1 EQU   PRB+RBSIZE-RBSECT       EQUATE FOR 2 BYTE SIZE           65140002
         EJECT                                                          65190002
*********************************************************************** 65200002
*                                                                     * 65210002
*              TASK CONTROL BLOCK                                     * 65220002
*                                                                     * 65230002
*********************************************************************** 65232002
         IKJTCB                                                         65234002
TCBJLBDI EQU   TCBJLB-TCB              DISPLACEMENT IN TCB OF DCB ADR.  65236002
TCBMOTH  EQU   TCBOTC-TCB              DISPLACEMENT IN TCB OF MOTHER    65238002
TCBJSEZ  EQU   TCBJPQ-TCB              DISPLACEMENT TO JPAQ             65238402
         EJECT                                                          65238802
         IEFTIOT1                                                       65240002
         END                                                            65290002
./  ADD  SSI=81040331,NAME=IEAVLK01
         TITLE 'IEAVLK01 COMMENTARY'                                    00009040
* /* START OF SPECIFICATIONS ****                                       00018040
*                                                                       00027040
*01*  MODULE-NAME = IEAVLK01                                            00036040
*                                                                       00045040
*01*  DESCRIPTIVE-NAME = BLDL/FETCH/DSS/TESTRAN INTERFACES              00054040
*              MODULE 2 OF 4                                            00063040
*                                                                       00072040
*01*  COPYRIGHT = NONE                                                  00081040
*                                                                       00090040
*01*  STATUS = VERSION 2                                                00099040
*                                                                       00108040
*01*  FUNCTION = THIS MODULE DOES THE FOLLOWING                         00117040
*                                                                       00126040
*        1. CONTROL THE ORDER OF QUEUE AND LIBRARY SEARCHES             00135040
*                                                                       00144040
*        2. INTERFACE WITH BLDL SERVICE ROUTINE (svc ENTRY)             00153040
*                                                                       00162040
*        3. INTERFACE WITH PROGRAM FETCH SERVICE ROUTINE                00171040
*                  (BRANCH ENTRY)                                       00180040
*                                                                       00189040
*        4. PROVIDE A SWITCH FOR DSS (ENTRY DSS06)                      00198040
*                                                                       00207040
*        5. PROVIDE AN INTERFACE FOR TESTRAN (VIA SVC 61)               00216040
*                                                                       00225040
*        6. PROCESS ALIAS PDS ENTRIES SO THAT MAJOR NAME MODULES        00234040
*            THAT ARE IN CORE WILL BE REUSED, OR FETCHED                00243040
*                                                                       00252040
*        ORDER OF SEARCHES:                                             00261040
*              NO PDS ENTRY PASSED BY USER                              00270040
*        (SR.NON-DE1) 1. JOB PACK AREA (IN IEAVLK00)                    00279040
*        (SR.NON-DE2) 2. IF DCB PASSED SPECIFIC LIBRARY IS SEARCHED     00288040
*                         VIA BLDL                                      00297040
*        (SR.NON-DE3) 3. IF DCB=0 JOB LIBRARIES ARE SEARCHED VIA BLDL   00306040
*        (SR.NON-DE4) 4. ACTIVE LINK PACK AREA QUEUE (IN IEAVLK00)      00315040
*        (SR.NON-DE6) 5. PAGEABLE LPA LPDE DIRECTORY                    00324040
*        (SR.NON-DE7) 6. LINK LIBRARY                                   00333040
*                                                                       00342040
*              PDS PASSED BY USER (DE-FORM)                             00351040
*        (SR.DE1)     1. JOB PACK AREA (IN IEAVLK00)                    00360040
*        (SR.DE2)     2. IF DE IS FOR LINK LIBRARY OR SVC LIBRARY       00369040
*                         THE LPAQ IS SEARCHED, THEN STEP 3.            00378040
*                         IS DONE. OTHERWISE SKIP TO STEP 4             00387040
*        (SR.DE3)     3. THE LPDES ARE SEARCHED                         00396040
*        (SR.DE4)     4. IF DCB SUPPLIED FETCH MODULE FROM LIBRARY      00405040
*        (SR.DE5)     5. IF NO DCB, USE Z-BYTE TO LOCATE LIBRARY        00414040
*                                                                       00423040
*02*     OPERATION = RECOVERY IS HANDLER BY AN FRR WHICH IS             00432040
*        RESIDENT IN THE NUCLEUS IN MODULE IEAVLK03                     00441040
*                                                                       00450040
*01*   NOTES = THE FOLLOWING IS A DESCRIPTION OF THE DEPENDENCIES AND   00459040
*      CONVENTIONS                                                      00468040
*                                                                       00528940
*02*     DEPENDENCIES = NONE                                            00530140
*                                                                       00543340
*02*     RESTRICTIONS = NONE                                            00551440
*                                                                       00560640
*02*     REGISTER-CONVENTIONS = THE REGISTER CONVENTIONS USED BY        00570240
*        IEAVLK01 ARE DESCRIBED UNDER THE TOPIC 'GENERAL REGISTER       00580640
*        EQUATES'.                                                      00590240
*                                                                       00600640
*02*     PATCH-LABEL = THIS MODULE IS RESIDENT NUCLEUS, AND HAS NO      00610240
*        PATCH SPACE.                                                   00626340
*                                                                       00631140
*01*  MODULE-TYPE = MODULE                                              00641040
*                                                                       00650540
*02*     PROCESSOR = ASSEMBLER                                          00660540
*                                                                       00670140
*02*     MODULE-SIZE = 2324 BYTES, X'914'                               00680240
*                                                                       00690040
*02*     ATTRIBUTES = NUCLEUS                                           00700040
*            REENTERABLE                                                00710040
*            SUPERVISOR MODE                                            00720040
*                                                                       00729040
*01*  ENTRY-POINT = IEAVLK01                                            00738040
*                                                                       00747040
*02*     PURPOSE = SEARCH DCB'S AS REQUIRED, BEGIN SEARCH FOR LPAQ IF   00756040
*        NECESSARY                                                      00765040
*                                                                       00784840
*02*     LINKAGE = IEAVLK01 IS BRANCH ENTERED BY IEAVLK00               00794840
*                                                                       00801840
*02*     INPUT = FROM IEAVLK00                                          00808840
*                                                                       00824840
*        REGISTERS                                                      00832840
*              R0 - LEFT HALF OF NAME                                   00840840
*              R1 - RIGHT HALF OF NAME                                  00848840
*              R4 - TCB ADDRESS                                         00856840
*              R5 - SVRB ADDRESS                                        00874840
*              R6 - BASE (IEAVLK01)                                     00882840
*              R8 - ADDRESS OF LAST CDE QUEUE SEARCHED                  00890840
*              R9 - ADDRESS OF NAME                                     00898840
*              R10- DCB ADDRESS                                         00906840
*              OTHER REGISTERS NOT USED                                 00924840
*              SVRB EXSAVE FULLY INITIALIZED                            00932840
*                                                                       00940840
*02*     OUTPUT = NONE                                                  00948840
*                                                                       00956840
*02*     REGISTERS-SAVED = NONE                                         00974840
*                                                                       00982840
*01*  ENTRY-POINT = DSS06                                               00990840
*                                                                       00998840
*02*     PURPOSE = SWITCH (NOP) USED TO ALLOW DSS TO RECORD             01006840
*        INFORMATION AFTER EACH MODULE IS FETCHED. - NOT PART OF NORMAL 01024840
*        MODULE FLOW                                                    01032840
*                                                                       01040840
*02*     LINKAGE = THE NOP IS CHANGED TO AN UNCONDITIONAL BRANCH TO DSS 01048840
*        BY THE DSS INITIALIZATION ROUTINE WHEN DSS BECOMES ACTIVE.     01056840
*        THIS ENTRY IS USED ONLY BY DSS.                                01074840
*                                                                       01080840
*02*     INPUT = SEE MINI-PROLOGUE BEFORE DSS NOP INSTRUCTION           01094840
*                                                                       01101840
*02*     OUTPUT = NONE                                                  01108840
*                                                                       01124840
*01*  EXIT-NORMAL                                                       01132840
*                                                                       01140840
*02*     CONDITIONS = TO CDCONTRL (TO SEARCH LPAQ)                      01148840
*                                                                       01156840
*02*     OUTPUT = REGISTERS                                             01174840
*              R3,4,5 - CVT,TCB,SVRB                                    01182840
*              R6     - BASE FOR IEAVLK00                               01190840
*              R8     - CDE QUEUE ORIGIN TO SEARCH                      01198840
*              R9     - ADDRESS OF NAME                                 01206840
*              R10    - DCB ADDRESS                                     01224840
*              OTHER REGISTERS NOT USED                                 01232840
*              SVRB EXSAVE FULLY INITIALIZED                            01240840
*                                                                       01248840
*02*     RETURN-CODES = NONE                                            01256840
*                                                                       01274840
*01*  EXIT-NORMAL                                                       01282840
*                                                                       01290840
*02*     CONDITIONS = TO CDEMERGE (TO EXIT TO FOUND MODULE)             01298840
*                                                                       01306840
*02*     OUTPUT = REGISTERS                                             01324840
*              R3,4,5 - CVT,TCB,SVRB                                    01332840
*              R6     - BASE FOR IEAVLK00                               01340840
*              R11    - REQUESTED CDE                                   01348840
*              R12    - MAJOR CDE FOR REQUEST                           01356840
*              OTHER REGISTERS NOT USED                                 01374840
*              SVRB EXSAVE FULLY INITIALIZED                            01383840
*                                                                       01392840
*02*     RETURN-CODES = NONE                                            01401840
*                                                                       01410840
*01*  EXIT-NORMAL                                                       01419840
*                                                                       01428840
*02*     CONDITIONS = TO CDQUECTL (TO QUEUE AN ALIAS REQUEST BEING      01437840
*        FETCHED UNDER MAJOR NAME)                                      01446840
*                                                                       01455840
*02*     OUTPUT = REGISTERS                                             01464840
*              R3,4,5 - CVT,TCB,SVRB                                    01473840
*              R6     - BASE FOR IEAVLK00                               01482840
*              R8     - CDE QUEUE ORIGIN TO SEARCH                      01491840
*              R9     - ADDRESS OF NAME                                 01500840
*              R10    - DCB ADDRESS                                     01509840
*              R11    - CDE FOR REQUEST                                 01518840
*              R12    - MAJOR CDE FOR REQUEST                           01527840
*              OTHER REGISTERS NOT USED                                 01536840
*              SVRB EXSAVE FULLY INITIALIZED                            01545840
*                                                                       01554840
*02*     RETURN-CODES = NONE                                            01563840
*                                                                       01572840
*01*  EXIT-NORMAL                                                       01581840
*                                                                       01590840
*02*     CONDITIONS = TO PLUSCONT (TO CHECK USABILITY OF FOUND MAJOR)   01599840
*                                                                       01608840
*02*     OUTPUT = REGISTERS                                             01617840
*              R0     - LEFT HALF OF NAME                               01626840
*              R1     - RIGHT HALF OF NAME                              01635840
*              R3,4,5 - CVT,TCB,SVRB                                    01644840
*              R6     - BASE FOR IEAVLK00                               01653840
*              R8     - ADDRESS OF CDE QUEUE                            01662840
*              R9     - ADDRESS OF NAME                                 01671840
*              R10    - DCB ADDRESS                                     01680840
*              R11    - CDE FOR REQUEST                                 01689840
*              R12    - MAJOR CDE FOR REQUEST                           01698840
*              OTHER REGISTERS NOT USED                                 01707840
*              SVRB EXSAVE FULLY INITIALIZED                            01716840
*                                                                       01725840
*02*     RETURN-CODES = NONE                                            01734840
*                                                                       01743840
*01*  EXIT-ERROR = ABNDSET                                              01752840
*                                                                       01761840
*02*     CONDITIONS = TO ISSUE THE FOLLOWING ABENDS                     01770840
*              106 - FETCH ERROR- R15=E - ADDRESS ERROR                 01779840
*                                    =F - I/O ERROR                     01788840
*              306 - AN AUTHORIZED ROUTINE ATTEMPTED TO USE             01797840
*                       NON-AUTHORIZED LIBRARY MODULE.                  01806840
*              406 - LOADABLE ONLY MODULE ON NON-LOAD REQUEST           01815840
*              706 - NON-EXECUTABLE MODULE FLAGGED BY LINKAGE EDITOR    01824840
*              806 - BLDL ERROR - R15=4 MODULE NOT FOUND                01833840
*                                    =8 I/O ERROR                       01842840
*                                    =C NOT FOUND IN LPAQ OR LPDES      01851840
*                                    =10 DCB FOR BLDL NOT OPEN @ZA18512 01855840
*                                                                       01860840
*02*     OUTPUT = REGISTERS                                             01869840
*              R13 - ABEND CODE (1,3,4,7, OR 8)                         01878840
*              R15 - REASON CODE IF 106, 306, OR 806 ABEND              01887840
*              OTHER REGISTERS NOT USED                                 01896840
*              SVRB EXSAVE FULLY INITIALIZED                            01905840
*                                                                       01914840
*02*     RETURN-CODES = NONE                                            01923840
*                                                                       01932840
*01*  EXTERNAL-REFERENCES = THE FOLLOWING EXTERNAL REFERENCES ARE MADE  01941840
*                                                                       01950840
*02*     ROUTINES =                                                     01959840
*        1. IEAQCS04 - START OF RETURN ADDRESS TABLE IN IEAVLK00        01968840
*        2. IEAQCS02 - RESTART ADDRESS FOR NOT IN CORE QUEUED MODULES   01977840
*        3. LINKDCB  - LINK LIBRARY OPENED DCB                          01986840
*        4. SVCDCB   - SVC LIBRARY OPENED DCB                           01995840
*        5. IEWMSEPT - BRANCH ENTRY TO FETCH                            02004840
*        6. IEAQLPAQ - LINK PACK QUEUE ORIGIN                           02013840
*        7. POST W/O ECB - RESTART NIC REQUESTS                         02022840
*                                                                       02031840
*02*     DATA-AREAS = THE FOLLOWING DATA AREAS ARE USED BY IEAVLK01     02040840
*              1. DE SAVE AREA- CONTAINS THE DIRECTORY ENTRY, IN LSQA   02049840
*              2. FETCH/PGM. MGR. WORK AREA- CONTAINS FETCH IOB,        02058840
*                 INTERFACE INFORMATION, AND THE BLDL ENTRY             02067840
*                                                                       02076840
*02*     CONTROL-BLOCKS = THE FOLLOWING CONTROL BLOCKS ARE USED         02085840
*        1. CDE (C)  - CONTENTS DIRECTORY ENTRY                         02094840
*        2. PDS (R)  - PARTITIONED DATA SET DIRECTORY ENTRY             02103840
*        3. TCB (R)  - TASK CONTROL BLOCK                               02112840
*        4. RB  (R)  - REQUEST BLOCK (MODULE)                           02121840
*        5. CVT (R)  - COMMUNICATIONS VECTOR TABLE                      02130840
*        6. LPDE (R) - LINK PACK DIRECTORY ENTRY                        02139840
*        7. PSA (R)  - OBTAIN LOW CORE ADDRESSES (TCB,ASCB)             02148840
*        8. IHAFRRS (R) - RECPVERU STACK                                02157840
*        9. ASCB (R) - ADDRESS SPACE CONTROL BLOCK                      02166840
*       10. ASXB (R) - ADDRESS SPACE EXTENTION                          02175840
*                                                                       02184840
*01*  TABLES = NONE                                                     02193840
*                                                                       02202840
*01*  MACROS = MACROS USED ARE                                          02211840
*              BLDL,CVT,FREEMAIN,GETMAIN,IEZBITS,IEZDEB,IEZJSCB,        02220840
*              IHAASCB,IHACDE,IHAFETWK,IHAFRRS,IHALPDS,                 02229840
*              IHAPSA,IHARB,IKJTCB,MODID,SETFRR,SETLOCK,TESTAUTH        02238840
*                                                                       02247840
*02*    SERIALIZATION = THE CMS LOCK IS OBTAINED TO DO LPAQ SEARCH. THE 02256840
*       LOCAL LOCK IS FREED AND REOBTAINED FOR SVC INTERFACES AND FOR   02265840
*       FETCH.                                                          02274840
*                                                                       02283840
*01*  CHANGE-ACTIVITY = SUPPORT CODE FOR RELEASE 2 = Y02758             02292840
*                       OZ03829 OZ03896 - RELEASE 4                     02301840
*                       OZ07512 OZ08130                                 02305840
*                       OZ10834                                         02307840
*                       OZ12661 - SEE LABEL JSCBOFF                     02308840
*                       OZ18512 - CHECK FOR OPEN DCB BEFORE ISSUING THE 02309440
*                                 BLDL SVC (SVC 12)            @ZA18512 02310040
*                       OZ20311 - FREE CDE(S) AND EXTENT LIST IF ERRET  02310240
*                                 WAS SPECIFIED                @ZA20311 02310440
*                       OZ24461 - CONTINUE SEARCH IF AN AUTHORIZED COPY 02310840
*                                 OF A MODULE IS REQUIRED AND AN        02311840
*                                 UNAUTHORIZED COPY IS FOUND UNTIL      02312840
*                                 LINKLIB HAS BEEN SEARCHED OR AN       02313840
*                                 AUTHORIZED COPY IS FOUND BY MOVING    02314840
*                                 JSCBOFF ROUTINE UP TO DEFOUND ROUTINE 02314940
*                                 IMMEDIATELY AFTER THE BLDL  @ZA24461  02315040
*                       OZ24951 - CHECK RESET APF WHEN ATTACH IS NOT A  02315640
*                                 JOBSTEP ATTACH               @ZA24951 02315740
*                       OZ26977 - REINITIALIZE POINTER TO FETCH WA      02315840
*                                 AFTER CALL TO IEWFETCH       @ZA26977 02316840
*                       OZ28734 - IF DE OPTION SPECIFIED ON REQUEST AND 02316940
*                                 REQUESTOR IS AUTHORIZED BUT LIBRARY   02317040
*                                 SPECIFIED OR DEFAULTED IS NOT AUTHOR  02317140
*                                 IZED ABEND 306-C WILL RESULT @ZA28734 02317240
*                       OZ28886 - RESTORE THE POINTER TO THE WORK AREA  02317340
*                                 BEFORE LOADING THE ABEND AND REASON   02317440
*                                 CODE REGISTERS.              @ZA28886 02317540
*                       OZ26582 - CHECK IF DE FORM OF MACRO IS USED     02317840
*                                 AND, IF SO, CHECK IF UNAUTHORIZED     02318140
*                                 USER REFERENCING AUTHORIZED LIBRARY;  02318440
*                                 IF SO, ISSUE BLDL            @ZA26582 02318740
*                       OZ28494 - PERFORM DEBCHECK TO VERIFY THE DCB    02318840
*                                 ADDRESS IS VALID             @ZA28494 02318940
*                       OZ30995 - IF ATTACH WITH THE DE OPTION WAS      02319040
*                                 ISSUED, LOCATE THE MOTHER TCB THAT    02319140
*                                 WAS RUNNING WHEN THE BLDL WHICH       02319240
*                                 CREATED THE DE WAS ISSUED, SO THAT    02319340
*                                 THE PROPER DCB CAN BE FOUND  @ZA30995 02319440
*                                                                       02319540
*01*  MESSAGES = NONE                                                   02319840
*                                                                       02328840
*01*  ABEND-CODES = SEE ERROR EXIT FOR ABENDS ISSUED IN IEAVLK01        02337840
*                                                                       02346840
**** END OF SPECIFICATIONS ***/                                         02355840
         EJECT                                                          02364840
*/*IEAVLK01: CHART (AMODE,AREF) */                                      02373840
*/* HEADER                                                              02382840
*/* PROGRAM MANAGER SEARCH                                              02391840
*/*                                                   SECTION 3.1.11    02400840
*/* SEQUENCE AND FETCH ROUTINES                                         02409840
*/*                                                   PAGE # */         02418840
*/* E IEAVLK01 */                                                       02427840
         SPACE 2                                                        02436840
IEAVLK01 CSECT                         CSECT NAME  **** SINGLE CSECT    02445840
         USING *,BASEREG               ADDRESSABILITY PASSED BY VLK00   02454840
         MODID BR=YES                   SET MODULE IDENTIFIER           02463840
         TITLE  '            IEAVLK01  EXTERNAL REFERENCES'             02472840
         ENTRY DSS06                   DSS HOOK ENTRY                   02481840
         EXTRN IEAQCS04                POINTS TO ADDRESS LIST IN VLK00  02490840
         EXTRN IEAQCS02                RESUME ADDRESS IN VLK00          02499840
         EXTRN LINKDCB                 DCB FOR LINK LIBRARY             02508840
         EXTRN SVCDCB                  DCB FOR SVC LIBRARY              02517840
         EXTRN IEWMSEPT                PROGRAM FETCH ENTRY POINT        02526840
         EXTRN IEAQLPAQ                LPAQ QUEUE ORIGIN                02535840
         EXTRN FRRPGMMG                PGM. MGR RECOVERY RTN            02544840
         TITLE 'IEAVLK01 GENERAL REGISTER EQUATES'                      02553840
*                                      EQUATES FOR REGISTER 0           02562840
R0       EQU   0                       CROSS REFERENCE EQUATE           02571840
GR0      EQU   R0                      GENERAL USE REGISTER 0           02580840
ZREG     EQU   R0                      LIBRARY COUNT FOR DCB=0 CASE     02589840
*                                      REGISTER 1 EQUATES               02598840
R1       EQU   1                       CROSS REFERENCE EQUATE           02607840
TASKREG  EQU   R1                      POINTS TO A TCB MOTHER           02616840
WKREG1   EQU   R1                      GENERAL WORK REGISTER            02625840
GR1      EQU   R1                      GENERAL WORK REGISTER            02634840
TASKLVL  EQU   R1                      TASK LEVEL TCB ADDRESS           02643840
*                                      REGISTER 2 EQUATES               02652840
R2       EQU   2                       CROSS REFERENCE EQUATE           02661840
WKREG2   EQU   R2                      GENERAL WORK REGISTER            02670840
SAVETCB  EQU   R2                      TSO SAVE TCB REG                 02679840
*                                      REGISTER 3 EQUATES               02688840
R3       EQU   3                       CROSS REFERENCE EQUATE           02697840
COMREG   EQU   R3                      RELOCATE SUBROUTINE RETURN REG   02706840
CVTREG   EQU   R3                      POINTS TO CVT                    02715840
*                                      REGISTER 4 EQUATES               02724840
R4       EQU   4                       CROSS REFERENCE EQUATE           02733840
TCBREG   EQU   R4                      POINTS TO TCB                    02742840
*                                      REGISTER 5 EQUATES               02751840
R5       EQU   5                       CROSS REFERENCE EQUATE           02760840
RBREG    EQU   R5                      POINTS TO SVRB OF CONTENTS       02778840
*                                      REGISTER 6 EQUATES               02787840
R6       EQU   6                       CROSS REFERENCE EQUATE           02796840
BASEREG  EQU   R6                      BASEREG FOR THIS MODULE          02805840
*                                      REGISTER 7 EQUATES               02814840
R7       EQU   7                       CROSS REFERENCE EQUATE           02823840
GR7      EQU   R7                      FETCH INTERFACE REGISTER         02832840
AREAREG  EQU   R7                      POINTS TO BLDL-FETCH WORK AREA   02841840
ASCBREG  EQU   R7                      ASCB REG FOR GETMAIN/FREEMAIN    02850840
*                                      REGISTER 8 EQUATES               02859840
R8       EQU   8                       CROSS REFERENCE EQUATE           02868840
DEBREG   EQU   R8                      DEB POINTER FROM DEBCHK @ZA28494 02877840
TABREG   EQU   R8                      QUEUE POINTER FOR SEARCHES       02886840
*                                      REGISTER 9 EQUATES               02895840
R9       EQU   9                       CROSS REFERENCE EQUATE           02904840
LPDIREG  EQU   R9                      MAJOR LPDE POINTER               02913840
GR9      EQU   R9                      BLDL INTERFACE REGISTER          02922840
NAMEREG  EQU   R9                      NAME IS POINTED TO BY THIS REG   02931840
LAST     EQU   R9                      RB POINTER DURING DQLOAD         02940840
*                                      REGISTER 10 EQUATES              02949840
R10      EQU   10                      CROSS REFERENCE EQUATE           02958840
NEXT     EQU   R10                     POINTS TO RB DURING DQLOAD       02967840
GR10     EQU   R10                     BLDL INTERFACE REGISTER          02976840
DCBREG   EQU   R10                     POINTS TO DCB FOR LIB TO SEARCH  02985840
*                                      REGISTER 11 EQUATES              02994840
R11      EQU   11                      MAINLAND WORK REGISTER           03003840
GR11     EQU   R11                     TASK SWITCH INTERFACE REGISTER   03012840
CDEREG   EQU   R11                     CDE FOR REQUESTED NAME           03021840
*                                      REGISTER 12 EQUATES              03030840
R12      EQU   12                      CROSS REFERENCE EQUATE           03039840
GR12     EQU   R12                     GENERAL WORK REGISTER            03048840
CDIREG   EQU   R12                     POINTS TO MAJOR CDE FOR REQUEST  03057840
*                                      REGISTER 13 EQUATES              03066840
R13      EQU   13                      CROSS REFERENCE EQUATE           03075840
RETURND  EQU   R13                     SUBROUTINE RETURN REGISTER       03084840
GR13     EQU   R13                     GENERAL WORK REGISTER            03093840
*                                      REGISTER 14 EQUATES              03102840
R14      EQU   14                      CROSS REFERENCE EQUATE           03111840
RETURN   EQU   R14                     SUBROUTINE RETURN REGISTER       03120840
GR14     EQU   R14                     GENERAL WORK REGISTER            03129840
SUBREG1  EQU   R14                     GENERAL WORK REGISTER            03138840
*                                      REGISTER 15 EQUATES              03147840
R15      EQU   15                      CROSS REFERENCE EQUATE           03156840
GR15     EQU   R15                     GENERAL WORK REGISTER            03165840
SUBREG2  EQU   R15                     GENERAL WORK REGISTER            03174840
         TITLE 'IEAVLK01 FLAG AND MASK EQUATES'                         03183840
TLIBIND  EQU   X'87'                   INDICATES TASKLIB PROCESSING     03192840
MASK     EQU   X'07'                   3 BYTE ICM/STCM/CLM MASK         03201840
MASK4    EQU   X'0F'                   4 BYTE ICM/STCM/CLM MASK         03210840
MAX      EQU   X'FF'                   LARGEST ONE BYTE NUMBER          03219840
DEBAD    EQU   X'2C'                      OFFSET OF DEB INTO DCB        03228840
         TITLE 'IEAVLK01 GENERAL NUMBER VALUE EQUATES'                  03237840
N0       EQU   0                       USED FOR ZERO OFFSETS            03246840
ZERO     EQU   R0                      USED FOR ZERO OFFSETS            03255840
N1       EQU   1                       USED TO INCREMENT VALUES         03264840
APFLN    EQU   1                       APF LENGTH CON        @ZA08130   03268840
N2       EQU   2                       USED TO INCREMENT ABEND VALUE    03273840
N3       EQU   3                       USED TO INCREMENT ERROR VALUES   03282840
ADDL     EQU   3                       MAXIMUM LENTGH OF AOS ADDRESSES  03291840
N4       EQU   4                       USED TO INCREMENT VALUES         03300840
WORD     EQU   4                       USED TO INCREMENT VALUES         03309840
OLD      EQU   4                       OLD TCB SLOT IN NEW/OLD SLOTS    03318840
FOUR     EQU   4                       OFFSET IN EXTENT LIST            03327840
*                                      TO NUMBER OF EXTENTS             03336840
NAME     EQU   8                       LENGTH OF AOS NAMES              03345840
N8       EQU   8                       USED AS NUMBER VALUE             03354840
EIGHT    EQU   8                       USED AS NUMBER VALUE             03363840
EQZER    EQU   8                       USED TO TEST CONDITION CODES     03372840
N12      EQU   12                      OFFSET INTO EXTENT LIST          03381840
BADRETCD EQU   12                      USED TO ISSUE RETURN CODE OF 12  03390840
DONTBLDL EQU   16                      INDICATE DCB NOT OPEN   @ZA18512 03394840
XTLSTSIZ EQU   16                      SIZE OF 1 ENTRY EXTENT LIST      03399840
TTSAVE   EQU   61                      TESTRAN SVC NUMBER               03408840
SPNONREN EQU   251                     SUBPOOL FOR NON-RENTRENT MODULES 03417840
SPRENT   EQU   252                     SUBPOOL FOR REENTRENT MODULES    03426840
         TITLE '           IEAVLK01  BLDL FETCH'                        03435840
         USING PSA,0                   ADDRESSIBILITY FOR LOW CORE      03444840
         USING TCB,TCBREG              REG.4  CONTAINS  TCB ADDRESS     03453840
         USING RBSECT,RBREG            REG.5  CONTAINS  RB  ADDRESS     03462840
         USING WKAREA,AREAREG          REG.7  CONTAINS  WORK AREA ADDR  03471840
         USING CDENTRY,CDEREG          REG.11 CONTAINS  CDENTRY ADDRESS 03480840
         USING CDENTRYJ,CDIREG         REG.12 CONTAINS  CDENTRY ADDRESS 03489840
         USING ADDRTAB,GR15            ADRESS TABLE DSECT IN VLK00      03498840
         EJECT                                                          03507840
*        THE FOLLOWING CODE, IN CONJUNCTION WITH CDTSLPA, SATMAR, AND   03516840
*        DEMISSED, CONTROLS THE ORDER OF SEARCHES FOR THE CDE QUEUES    03525840
*        AND LIBRARIES. PLEASE REFER TO THE ORDER OF SEARCHES IN THE    03534840
*        PROLOGUE.  THIS SECTION OF CODE IS ENTERED AFTER STEPS         03543840
*        (SR.NON-DE1,4, OR 5) OR (SR.DE 1,2, OR 3) DEPENDING ON WHETHER 03552840
*        OR NOT A DE WAS PASSED BY THE USER.                            03561840
*              FLOW:                                                    03570840
*                                                                       03579840
*        A. CHECK IF (SR.NON-DE4) OR (SR.DE2) HAS BEEN DONE.  IF NOT,   03588840
*            GO TO CDTSLPA FOR FURTHER TESTING.                         03597840
*        B. CHECK IF THIS IS A TIME SHARING TASK. IF YES, DO STEP C.    03606840
*            OTHERWISE DO STEP D.                                       03615840
*        C. (SR.NON-DE5),(SR.DE3) SET R8 TO  ADDRESS TSCVTLPA, THEN     03624840
*            EXIT TO CDCONTRL (IEAVLK00) TO SEARCH TSLPA.               03633840
*        D. CHECK IF LPDE DIRECTORY HAS BEEN BUILT.  IF NOT, DO STEP    03642840
*            E. OTHERWISE DO STEP F.                                    03651840
*        E. (SR.NON-DE7),(SR.DE5,6) SEARCH LINK LIBRARY VIA SATMAR      03660840
*        F. (SR.NON-DE6),(SR.DE4) SEARCH LPDES. IF FOUND GO TO          03669840
*            DETOLPAQ AFTER PAGING IN LPDES AND CHECKING FOR 406 ABEND. 03678840
*            IF NOT FOUND DO STEP E.                                    03687840
*                                                                       03696840
*        REGISTER USAGE                                                 03705840
*        R0 - LEFT HALF OF NAME (INPUT)                                 03714840
*             ALTERED (OUTPUT)                                          03723840
*        R1 - RIGHT HALF OF NAME (INPUT)                                03732840
*        R2 - LPDE ADDRESS (OUTPUT, STEP F)                             03741840
*        R3 - CVT ADDRESS (OUTPUT)                                      03750840
*        R4,5-TCB,SVRB ADDRESSES (INPUT)                                03759840
*        R6 - BASE (IEAVLK01)                                           03768840
*        R8 - ALTERED                                                   03777840
*        R9 - ADDRESS OF NAME (INPUT)                                   03786840
*        R10- DCB REGISTER (INPUT)                                      03795840
*        OTHER REGISTERS CHANGED, OR NOT USED                           03804840
*        SVRB EXSAVE FULLY INITIALIZED                                  03813840
         SPACE 2                                                        03822840
*/* P SET R3= ADDRESS OF CVT */                                         03831840
         SPACE 2                                                        03840840
         L     CVTREG,CVTPTR           GET ADDRESS CVT                  03849840
         USING CVT,CVTREG              ADDRESS THE CVT                  03858840
         SPACE 2                                                        03867840
*/* D (NO,CDTSLPA,YES,) ALPAQ BEEN SRCH'D YET (R8= PTR TO ALPAQ HDR)*/  03876840
         SPACE 2                                                        03885840
         C     TABREG,IEAQLCTA         Q. HAS LPACQ BEEN SEARCHED       03894840
         BNE   CDTSLPA                 NO-TEST LPA                      03903840
         SPACE 2                                                        03912840
*/*CHKLPDES: D (NO,SATMAR,YES,) LPA DIRECTORY BEEN BUILT (CVTDICOM      03921840
*/*=1)*/                                                                03930840
         SPACE 2                                                        03939840
CHKLPDES TM    CVTLPDIA,CVTDICOM       HAS DIRECTORY BEEN BUILT         03948840
         BZ    SATMAR                  IF NOT, DO NOT SEARCH            03957840
         SPACE 2                                                        03966840
*/* P SAVE R6 IN R2 AND R9 IN R15*/                                     03975840
         SPACE 2                                                        03984840
         LR    WKREG2,BASEREG          SAVE GR6 OVER INTERFACE          03993840
         LR    R15,NAMEREG             SAVE GR9 OVER INTERFACE          04002840
         SPACE 2                                                        04011840
*/* P INSURE GOOD SEARCH INDICATOR IS OFF (SET RBCSGSF =0)*/            04020840
         SPACE 2                                                        04029840
         NI    RBCSFLG1,MAX-RBCSGSF    TURN GOOD SEARCH FLAG OFF        04038840
         SPACE 2                                                        04047840
*/* L (NOTF,%XSKP,FND,)IEAVVMSR-- SEARCH PAGED LINKPACK DIRECTORY */    04056840
*/* P TURN ON GOOD SEARCH INDICATOR (SET RBCSGSF =1)*/                  04065840
*/* %XSKP: P RESTORE R6 FROM R2 AND R9 FROM R15*/                       04074840
         SPACE 2                                                        04083840
         L     BASEREG,CVTLPDSR        PICK UP SEARCH ROUTINE ADDR      04092840
         BALR  RETURN,BASEREG          SEARCH LPDE DIRECTORY            04101840
         OI    RBCSFLG1,RBCSGSF        TURN ON GOOD SEARCH FLAG IF      04110840
*                                      RETURN ON R14 + 0                04119840
         LR    BASEREG,WKREG2          RESET ADDRESSABILITY FOR VLK01   04128840
         LR    NAMEREG,R15             RESET NAME REGISTER              04137840
         SPACE 2                                                        04146840
*/*LPDSBLE: D (NO,SATMAR,YES,) LPDE FOUND (RBCSGSF =1)*/                04155840
         SPACE 2                                                        04164840
LPDSBLE  EQU   *                       LPDE PREFIXING ROUTINE           04173840
         TM    RBCSFLG1,RBCSGSF        IF SEARCH FAILED, GO TO          04182840
         BZ    SATMAR                  LIBRARY SEARCH                   04191840
         SPACE 2                                                        04200840
*/* P SET R2= RQSTD LPDE ADDRESS (SET R2=R0)*/                          04209840
         SPACE 2                                                        04218840
         LR    WKREG2,R0               PUT LPDE ADDRESS IN USABLE REG   04227840
         USING LPDE,WKREG2             ADDRESS THE LPDE                 04236840
         SPACE 2                                                        04245840
*/*LPDTST: D (NO,DETOLPAQ,YES,) LOAD ONLY MODULE? (LPDENLR =0)*/        04254840
         SPACE 2                                                        04263840
LPDTST   EQU   *                       TEST THE ATTRIBUTES OF THE LPDE  04272840
         TM    LPDEATTR,LPDENLR        Q. IS THIS A LOAD ONLY MODULE    04281840
         BO    DETOLPAQ                NO- MODULE CAN BE USED           04290840
         SPACE 2                                                        04299840
*/* D (YES,DETOLPAQ,NO,) LOAD REQUEST? (RBCDLOAD =1)*/                  04308840
         SPACE 2                                                        04317840
         TM    RBCDFLGS,LOAD           Q. IS LOAD REQUEST IN PROGRESS   04326840
         BO    DETOLPAQ                YES- MODULE CAN BE USED          04335840
         SPACE 2                                                        04344840
*/* P (,ERRRTN) SET ABEND REGISTER (R13) TO 4 FOR 406 ABEND*/           04353840
         SPACE 2                                                        04362840
         LA    R13,4                 SET FOR ERROR CODE 406    @YA01851 04371840
         B     ERRRTN                GO SET UP CODE AND ABEND  @YA01851 04380840
         EJECT                                                          04389840
*        DETOLPAQ IS ENTERED WHEN AN LPDE HAS BEEN FOUND FOR A REQUEST. 04398840
*        FIRST THE LPDE IS CHECKED FOR BEING A MINOR. IF THE LPDE IS    04407840
*        NOT A MINOR, A MAJOR CDE IS CREATED, QUEUED TO THE LPAQ, AND   04416840
*        AN EXTENT LIST IS BUILT TO DESCRIBE THE MODULE.  THE ROUTINE   04425840
*        THEN EXITS TO CDEMERGE IN IEAVLK00.                            04434840
*        IF THE LPDE WAS A MINOR, THE LPAQ IS SEARCHED FOR THE MAJOR    04443840
*        CDE.  IF IT IS FOUND, A MINOR CDE IS CREATED, AND QUEUED       04452840
*        BEHIND THE MAJOR, AND EXIT IS AGAIN TO CDEMERGE.               04461840
*        IF THE CDE WAS NOT FOUND, THE LPDES ARE SEARCHED FOR THE       04470840
*        MAJOR LPDE. IF IT IS FOUND, THE MAJOR AND MINOR CDES ARE       04479840
*        CREATED, IN ADDITION TO THE EXTENT LIST, AND ARE QUEUED TO THE 04488840
*        LPAQ. EXIT IS AGAIN TO CDEMERGE.                               04497840
*        IF THE MAJOR CDE OR LPDE ARE NOT FOUND, AN 806 ABEND IS ISSUED 04506840
*        VIA ABNDSET IN IEAVLK00.                                       04515840
*        REGISTERS ON ENTRY                                             04524840
*        R2,3,4,5,6 - LPDE,CVT,TCB,SVRB, BASE (IEAVLK01)                04533840
*        OTHER REGISTERS NOT REFERENCED.                                04542840
*        SVRB EXSAVE FULLY INITIALIZED.                                 04551840
*        CMS LOCK HELD ON ENTRY                                         04560840
         SPACE 2                                                        04569840
*/*DETOLPAQ: P SET R7= ASCB ADDR FOR GETMAIN (SET R7= PSAAOLD)*/        04578840
         SPACE 2                                                        04587840
DETOLPAQ EQU   *                                                        04596840
         USING LPDEJ,LPDIREG           ADDRESS MAJOR LPDE               04605840
         USING LPDE,WKREG2             USE REG 2 TO ADDRESS LPDE        04614840
         L     ASCBREG,PSAAOLD         GET ASCB ADDRESS FOR GETMAIN     04623840
         SPACE 2                                                        04632840
*/* D (YES,MINORIT,NO,) RQSTD LPDE A MINOR? (LPDEMIN =1)*/              04641840
         SPACE 2                                                        04650840
         TM    LPDEATTR,LPDEMIN        IF MINOR LPDE,GO TO FIND MAJOR   04677840
         BO    MINORIT                 CDE OR LPDE                      04686840
         SPACE 2                                                        04695840
*/* P SET LPDIREG = ADDR MAJOR LPDE (SET R9 = R2)*/                     04704840
         SPACE 2                                                        04713840
         LR    LPDIREG,WKREG2          SET UP MAJOR LPDE REG.           04722840
         SPACE 2                                                        04731840
*/*CREATMAJ: L GETMAIN (BR ENTRY)-- GET A CDE AND EXTENT LIST FROM      04740840
*/*SP245 */                                                             04749840
         SPACE 2                                                        04758840
CREATMAJ LA    R0,CDXLIN               GET SPACE FOR MAJOR CDE          04767840
         GETMAIN RU,LV=(0),SP=245,BRANCH=YES GET CDE AND EXTENT LIST    04776840
         SPACE 2                                                        04785840
*/* P set cderEG = NEW CDE ADDR (R11=R1)*/                              04794840
*/* P SET CDIREG (R12) = R11*/                                          04803840
*/* P INITIALIZE NEW XL (WORD 0) TO 16 (SIZE OF XL)*/                   04812840
*/* P INITIALIZE NEW XL (WORDS 2 & 3) FROM LPDEXTLN & LPDEXTAD*/        04821840
         SPACE 2                                                        04830840
         LR    CDEREG,WKREG1           PUT CDE ADDR. IN USABLE REG.     04839840
         LR    CDIREG,CDEREG           SET UP MAJOR CDE REG.            04848840
         LA    WKREG1,LPDCDE(WKREG1)   CALCULATE ADDR. OF XTLST         04857840
         MVC   N8(N8,WKREG1),LDXTLTHJ  INITIALIZE XTLST                 04866840
         LA    R0,XTLSTSIZ             SIZE=16                          04875840
         ST    R0,N0(WKREG1)           STORE INTO NEW XLIST             04884840
         LA    R0,N1                   XTENTS=1                         04893840
         ST    R0,FOUR(WKREG1)         STORE INTO NEW XLIST             04902840
         SPACE 2                                                        04911840
*/* P COPY LPDE (VIA R9) INTO NEW CDE*/                                 04920840
*/* P SET CDXLMJP OF NEW CDE = XL ADDR*/                                04929840
         SPACE 2                                                        04938840
         MVC   CDENTRYJ(LPDCDE),LPDEJ  MOVE CDE FIELDS IN               04947840
         ST    WKREG1,CDXLMJPJ         STORE ADDR. OF XTLST IN CDE      04956840
         SPACE 2                                                        04965840
*/* P CHAIN CDE TO TOP OF ALPA QUEUE */                                 04974840
         SPACE 2                                                        04983840
         L     CVTREG,CVTPTR           GET ADDRESS OF CVT               04992840
         L     WKREG1,CVTQLPAQ         GET POINTER TO CDE               05001840
         MVC   CDCHAINJ(WORD),N0(WKREG1) CREATE FORWARD POINTER         05010840
         ST    CDIREG,N0(WKREG1)       SET UP QUEUE POINTER             05019840
         SPACE 2                                                        05028840
*/* D (YES,MINORCA,NO,CDMRGRET) RQSTD LPDE A MINOR (LPDEMIN =1)*/       05037840
         SPACE 2                                                        05046840
         TM    LPDEATTR,LPDEMIN        TEST FOR MAJOR OR MINOR          05055840
         BO    MINORCA                 IF MINOR, GO TO MINOR PROCESSING 05064840
         B     CDMRGRET                LEAVE                            05073840
         SPACE 2                                                        05082840
*/*MINORCR: P SET CDIREG = MAJOR CDE ADDR (SET R12 = R11)*/             05091840
         SPACE 2                                                        05100840
MINORCR  LR    CDIREG,CDEREG           PUT ADDR. OF MAJOR INTO REG      05109840
         SPACE 2                                                        05118840
*/*MINORCA: L GETMAIN (BR ENTRY)-- GET MINOR CDE FROM SP 245 */         05127840
         SPACE 2                                                        05136840
MINORCA  EQU   *                       GET SPACE FOR CDE                05145840
         GETMAIN RU,LV=CDESIZE,SP=245,BRANCH=YES  IN SQA                05154840
         SPACE 2                                                        05163840
*/* P SET CDEREG = ADDR OF NEW MINOR CDE (SET R11=R1)*/                 05172840
*/* P COPY LPDE (VIA R2) INTO NEW CDE*/                                 05181840
         SPACE 2                                                        05190840
         LR    CDEREG,WKREG1           PUT CDE ADDR. IN USABLE REG.     05199840
         MVC   CDENTRY(LPDCDE),LPDE    INITIALIZE CDE                   05208840
         SPACE 2                                                        05217840
*/* P (,CDMRGRET) CHAIN MINOR BEHIND ITS MAJOR CDE  */                  05226840
         SPACE 2                                                        05235840
         MVC   CDCHAIN(WORD),CDCHAINJ  CHAIN CDE TO NEXT                05244840
         ST    CDEREG,CDCHAINJ         CHAIN MAJOR TO MINOR             05253840
         ST    CDIREG,CDXLMJP          ADDR OF MAJOR IN MINOR           05262840
         B     CDMRGRET                LEAVE                            05271840
         SPACE 2                                                        05280840
*/*MINORIT: P SET R8= ADDR OF ALPAQ HEADER*/                            05289840
*/* P SET R9 = ADDR OF MAJOR NAME (SET R9= ADDR OF LPDEXTLN)*/          05298840
*/* L (FND,MINORCR,NOTF,) IEAQCDSR-- SEARCH LPAQ FOR MAJOR CDE*/        05307840
         SPACE 2                                                        05316840
MINORIT  LA    NAMEREG,LPDEXTLN        SEARCH LPAQ FIRST                05325840
         L     CVTREG,CVTPTR           GET CVT ADDRESS                  05334840
         L     TABREG,CVTQLPAQ         FOR MAJOR  CDE                   05343840
         L     RETURN,CVTQCDSR         PICK UP CDSEARCH ADDR            05352840
         BALR  RETURN,RETURN           SEARCH THE QUEUE FOR             05361840
*                                      MAJOR                            05370840
         B     MINORCR                 IF FOUND,CREATE MINOR            05379840
         SPACE 2                                                        05388840
*/* P INSURE GOOD SEARCH INDICATOR IS OFF (SET RBCSGSF =0)*/            05397840
         SPACE 2                                                        05406840
         NI    RBCSFLG1,MAX-RBCSGSF    TURN OFF GOOD SEARCH FLAG        05415840
         SPACE 2                                                        05424840
*/* L (FND,,NOTF,%NOTFOND) IEAVVMSR-- SEARCH LPDE'S FOR MAJOR */        05433840
         SPACE 2                                                        05442840
         L     BASEREG,CVTLPDSR        PICK UP SEARCH RTN ADDR          05451840
         BALR  RETURN,BASEREG          SEARCH THE LPDES FOR MAJOR       05460840
         DROP  BASEREG                 BASE IS LOST OVER IEAVVMSR       05469840
         USING *,RETURN                ESTABLISH TEMPORARY ADDR         05478840
         SPACE 2                                                        05487840
*/* P SET GOOD SEARCH INDICATOR ON (SET RBCSGSF =1)*/                   05496840
         SPACE 2                                                        05505840
         OI    RBCSFLG1,RBCSGSF        TURN ON GOOD FLAG IF RETURN +0   05514840
         SPACE 2                                                        05523840
*/*%NOTFOND: P RESET BASEREG (R6) DESTROYED BY IEAVVMSR */              05532840
         SPACE 2                                                        05541840
         L     BASEREG,LINKBASE        RESET ADDRESSABILITY             05550840
         DROP  RETURN                  DROP TEMPORARY BASE              05559840
         USING IEAVLK01,BASEREG        ESTABLISH REGULAR BASE           05568840
         SPACE 2                                                        05577840
*/* D (YES,COMPLETE,NO,) MODULE FOUND (GOOD-SRCH IND. ON)? */           05586840
*/* COMMENT (2,15) 806 ABEND IF*/                                       05595840
*/* COMMENT (3,15) NOT FOUND*/                                          05604840
         SPACE 2                                                        05613840
         TM    RBCSFLG1,RBCSGSF        TEST FOR GOOD RETURN             05622840
         BO    COMPLETE                IF GOOD CREATE MAJOR,MINOR CDE   05631840
*                                      OTHERWISE 806 ABEND              05640840
         SPACE 2                                                        05649840
*/* P  SET ABEND REGISTER (R13) TO 8 FOR 806 ABEND*/                    05658840
*/* P  (,ERRRTN) SET R15 TO REASON CODE C*/                             05667840
         SPACE 2                                                        05676840
         LA    R13,8                   SET ABEND CODE TO 8     @YA01851 05685840
         LA    R15,BADRETCD            SET REASON CODE TO C             05694840
         B     ERRRTN                  GET ABEND CODE AND ABEND         05703840
         SPACE 2                                                        05712840
*/*COMPLETE: P (,CREATMAJ) SET LPDIREG = MAJOR LPDE ADDR (SET R9=R0)*/  05721840
         SPACE 2                                                        05730840
COMPLETE LR    LPDIREG,R0              SAVE MAJOR ADDRESS               05739840
         B     CREATMAJ                CREATE MAJOR CDE                 05748840
         EJECT                                                          05757840
*        CDTSLPA IS A ROUTINE WHICH CONTROLS THE FLOW BETWEEN THE       05766840
*        VARIOUS SEARCHES. THE ROUTINE FLOW IS AS FOLLOWS:              05775840
*                                                                       05784840
*        A. CHECK IF (SR.NON-DE5) OR (SR.DE3) WAS DONE. IF YES, GO TO   05793840
*            CHKLPDES TO SEARCH LPA DIRECTORY. IF NO, DO B.             05802840
*        B. CHECK IF STEP C. DONE. IF YES GO TO SATMAR TO DO            05811840
*            (SR.NON-DE7) OR (SR.DE5,6). OTHERWISE DO STEP C.           05820840
*        C. SET DCB REGISTER POSITIVE. IF DCB REGISTER IS ZERO, DO STEP 05829840
*            D. OTHERWISE DO STEP H.                                    05838840
*        D. (SR.NON-DE3),(SR.DE5,6) SET UP JOB LIBRARY DCB. THEN DO     05847840
*            STEP E.                                                    05856840
*        E. IF NOT DE FORM, DO STEP F. OTHERWISE DO STEP G.             05865840
*        F. (SR.NON-DE2,3) SEARCH THE JOB LIBRARIES VIA BLDL.           05874840
*        G. IF Z-BYTE ZERO, USE JOB LIBRARY DCB. OTHERWISE USE Z-BYTE   05883840
*            AS INDEX TO DO FETCH (SR.DE5,6)                            05892840
*        H. (SR.DE2) IF DCB FOR SVCLIB OR LINKLIB, SET UP TO SEARCH     05901840
*            LPAQ.(SET LINKLIB DCB IN R10, R8= ADDRESS OF LPAQ, AND     05910840
*            EXIT TO CDCONTRL (IEAVLK00)). OTHERWISE DO STEP E.         05919840
*                                                                       05928840
*        REGISTER USAGE:                                                05937840
*                                                                       05946840
*        R0,1  - CHANGED                                                05955840
*        R3,4,5- CVT,TCB,SVRB (INPUT)                                   05964840
*        R6    - BASE (IEAVLK01) (INPUT)                                05973840
*        R8    - ADDRESS OF QUEUE (INPUT)                               05982840
*        R9    - ADDRESS OF NAME (INPUT)                                05991840
*        R10   - DCB ADDRESS (INPUT)                                    06000840
*        OTHER REGISTERS NOT REFERENCED                                 06009840
*        SVRB EXSAVE FULLY INITIALIZED                                  06018840
         SPACE 1                                                        06027840
         DROP  WKREG2                  DROP LPDE USAGE                  06036840
         DROP  LPDIREG                 DROP LPDE USAGE                  06045840
         DROP  CVTREG                  DROP CVT USAGE                   06054840
         SPACE 2                                                        06063840
*/*CDTSLPA: D (YES,SATMAR,NO,) DCB CHECKING DONE (SIGN DCBREG=+)*/      06072840
         SPACE 2                                                        06081840
CDTSLPA  EQU   *                                                        06090840
         LTR   DCBREG,DCBREG           HAS DCB CHECKING BEEN DONE       06099840
         BP    SATMAR                  A= YES , TAKE BRANCH             06108840
         SPACE 2                                                        06117840
*/* P  SET DCB REG=+ TO INDICATE DCB CHECKING DONE AND NOT TASKLIB      06126840
*/*SEARCH*/                                                             06135840
*/* D (YES,GETJLB,NO,) IS DCBREG (R10) ZERO*/                           06144840
         SPACE 2                                                        06153840
         LPR   DCBREG,DCBREG           SET REGISTER POSITIVE INDICATING 06162840
*                                      DCB CHECKING HAS BEEN DONE       06171840
         BE    GETJLB                  IF REGISTER IS ZERO LOAD JOBLIB  06180840
         SPACE 2                                                        06189840
*/* D (YES,CDFIL,NO,) DCB FOR SVCLIB? */                                06198840
         SPACE 2                                                        06207840
         C     DCBREG,SVCDCBA          Q.IS THIS SVCLIB DCB             06216840
         BE    CDFIL                   A=YES TAKE BRANCH                06225840
         SPACE 2                                                        06234840
*/* D (NO,CITADE,YES,) DCB FOR LINKLIB? */                              06243840
         SPACE 2                                                        06252840
         C     DCBREG,LINKDCBA         Q.IS THIS LINKLIB DCB            06261840
         BNE   CITADE                  A=NO  TAKE BRANCH                06270840
         SPACE 2                                                        06279840
*/*CDFILIN: P SET DCBREG= LINKLIB DCB ADDRESS */                        06288840
         SPACE 2                                                        06297840
CDFILIN  L     DCBREG,LINKDCBA         LOAD LINKLIB DCB ADDRESS.        06306840
         SPACE 2                                                        06315840
*/*CDFIL: P PREPARE TO SEARCH THE LPAQ (SET R8= ALPAQ HDR)*/            06324840
         SPACE 2                                                        06333840
CDFIL    L     TABREG,IEAQLCTA         LOAD LPACQ ADDRESS               06342840
         SPACE 2                                                        06351840
*/* L SETLOCK-- GET CMS LOCK FOR LPA SEARCH */                          06360840
         SPACE 2                                                        06369840
         SETLOCK  OBTAIN,TYPE=CMS,MODE=UNCOND,                         x06378840
               RELATED=('FREED BY EXIT PROLOG OR BEFORE LINKLIB BLDL')  06387840
         SPACE 2                                                        06396840
*/*CDCONTRC: P SET BASEREG (R6) FOR MODULE IEAVLK00*/                   06405840
*/* R RETURN TO CDCONTRL IN IEAVLK00*/                                  06414840
         SPACE 2                                                        06423840
CDCONTRC L     GR15,TABLEADD           GET TABLE ADDRESS                06432840
         L     BASEREG,CDLKBASE        RESET VLK00 BASE                 06441840
         L     GR15,CDCONTRL           BEGIN AT SEARCH ROUTINE          06450840
         BR    GR15                    GO TO MAIN ROUTINE               06459840
         SPACE 2                                                        06468840
*/*GETJLB: P SET DCBREG = ADDR OF JOBLIB DCB VIA TCBJLB*/               06477840
         SPACE 2                                                        06486840
GETJLB   L     DCBREG,TCBJLB           LOAD JOBLIB DCB ADDRESS          06495840
         SPACE 2                                                        06504840
*/* P COMPLEMENT DCBREG TO INDICATE TASKLIB SEARCH*/                    06513840
*/* D (NO,CDFILIN,YES,) ANY JOBLIB DCB (DCBREG NOT 0)*/                 06522840
         SPACE 2                                                        06531840
         LNR   DCBREG,DCBREG           Q. JOBLIB DCB EQUAL ZERO         06540840
         BE    CDFILIN                 A= YES , TAKE BRANCH             06549840
         SPACE 2                                                        06558840
*/*CITADE: P GET DIRECTORY ENTRY ADDR FROM RBCSDE*/                     06567840
*/* D (YES,,NO,SATMAR) DE FORM OF MACRO USED (RBCSDE NOT 0)*/           06576840
         SPACE 2                                                        06585840
CITADE   ICM   R15,MASK,RBCSDEA        Q. IS DE FORM OF MACRO GIVEN     06594840
         BZ    SATMAR                  A= NO  TAKE BRANCH               06603840
         SPACE 2                                                        06612840
*/* P SET R1= TCB ADDR (SET R1=R4)*/                                    06621840
*/* D (YES,SATMAR,NO,) NULL DCB? (Z-BYTE =0)*/                          06630840
         SPACE 2                                                        06639840
         USING PDS2-DESAVEDE+DESAVE,R15 ADDRESS PDS SAVED               06648840
         LR    TASKREG,TCBREG          GET ADDR OF REQUESTOR'S TASK     06657840
         TM    DEZBYTE,MAX             Q. - NULL DCB                    06666840
         BZ    SATMAR                  A. - YES, TAKE BRANCH            06675840
         TM    RBCDFLGS,RBCDATCH       ATTACH REQUEST?         @ZA30995 06676840
         BZ    MPATCH                  BRANCH IF NOT           @ZA30995 06677840
         L     TASKREG,TCBMOTH(,TASKREG) GET ADDRESS OF MOTHER @ZA30995 06678840
MPATCH   EQU   *                                               @ZA30995 06679840
         SPACE 1                                                        06684840
*              THE NEXT FOUR INSTRUCTIONS PERTAIN TO THE SPECIAL FLAG   06693840
*              SET BY BLDL TO DISTINGUISH THE JOBLIB FROM LINKLIB WHERE 06702840
*              A NULL DCB HAS BEEN PROVIDED IN THE BLDL MACRO. SEE CPS  06711840
*              FOR DETAILS OF BYTE'Z' OF LIST ENTRY.                    06720840
         SPACE 2                                                        06729840
*/* P SET R0= Z-BYTE COUNT */                                           06738840
*/* P DECREMENT COUNT BY ONE IN R0 */                                   06747840
*/* D (YES,CDFILIN,NO,LIBLOOP) COUNT ZERO? */                           06756840
*/* COMMENT (1,1) NOTE: A Z-BYTE*/                                      06765840
*/* COMMENT (2,1) OF 1 INDICATES*/                                      06774840
*/* COMMENT (3,1) LINKLIB*/                                             06783840
         SPACE 2                                                        06792840
         SR    ZREG,ZREG               INITIALIZE COUNT TO ZERO         06801840
         IC    ZREG,DEZBYTE            GET LIB COUNT SUPPLIED BY BLDL   06810840
         BCT   ZREG,LIBLOOP            Q.COUNT = 0, IMPLIES DE FOUND    06819840
*                                      ON SYS1.LINKLIB                  06828840
         B     CDFILIN                 YES.SEARCH LPAQ AND LINKLIB      06837840
         SPACE 2                                                        06846840
*/*LIBLOOP: P SET R10= TASKLIB ADDR (R10= TCBJLB OF TCB VIA R1)*/       06855840
*/* P SET R1= MOTHER TCB ADDR (SET R1= TCBMOTH OF TCB VIA R1)*/         06864840
*/* P DECREMENT COUNT BY ONE IN R0 */                                   06873840
*/* D (YES,,NO,LIBLOOP) COUNT ZERO? */                                  06882840
         SPACE 2                                                        06891840
LIBLOOP  L     DCBREG,TASKLIB(TASKREG) GET TASKLIB DCB ADDR             06900840
         L     TASKREG,TCBMOTH(TASKREG) GET ADDR OF MOTHER TASK         06909840
         BCT   ZREG,LIBLOOP            LOOP                             06918840
         DROP  R15                     DROP PDS USAGE                   06927840
         EJECT                                                          06936840
*        INITIALIZATION FOR BLDL AND FETCH.                             06945840
*                                                                       06954840
*        A. A TEST IS MADE TO SEE IF A BLDL FETCH WORK AREA EXISTS. IF  06963840
*            YES, ADD CDE TO JPAQ AND DO C. OTHERWISE DO B.             06972840
*        B. GET A CDE AND QUEUE TO JPAQ. THEN GET A BLDL FETCH WORK     06981840
*            AREA, AND INITIALIZE THE CDE, WORK AREA, AND SVRB FIELDS,  06990840
*            THEN GO TO C.                                              06999840
*        C. IF ALIAS REQUEST, GO TO ALIASRCH. OTHERWISE DO STEP D.      07008840
*        D. PICK UP DEB ADDRESS AND, IF NIP IS NOT PROCESSING OR THE    07017840
*            DCB IS NOT SVCLIB OR LINKLIB, DO DEBCHECK TO VERIFY THE    07019840
*            DEB.                                              @ZA28494 07021840
*        E. CHECK FOR DE PASSED BY THE USER.  IF NOT, DO BLDL.  IF      07023840
*            DE WAS PASSED, CHECK IF USER IS AUTHORIZED OR, IF NOT,     07025840
*            CHECK IF LIBRARY IS UNAUTHORIZED.  IF EITHER CHECK IS      07027840
*            SUCCESSFUL, SKIP BLDL.                            @ZA26582 07029840
*                                                                       07035840
*        REGISTER USAGE:                                                07044840
*        R0,R1   - CHANGED                                              07053840
*        R3,4,5  - CVT,TCB,SVRB (INPUT)                                 07062840
*        R6      - BASE (IEAVLK01)                                      07071840
*        R7      - ADDRESS OF BLDL FETCH WORK AREA (OUTPUT)             07077840
*        R8      - DEB ADDRESS (OUTPUT)                        @ZA28494 07081840
*        R10     - DCB ADDRESS (INPUT)                                  07089840
*        R11     - CDE FOR REQUEST (OUTPUT)                             07098840
*        R13,14,15-CHANGED                                              07107840
*        OTHER REGISTERS NOT REFERENCED                                 07116840
*        SVRB EXSAVE FULLY INITIALIZED                                  07125840
         SPACE 2                                                        07134840
*/*SATMAR: D (YES,PRESET,NO,) CDE & WORK AREA ACQUIRED YET (RBCSWORK    07143840
*/*NT 0)*/                                                              07152840
         SPACE 2                                                        07161840
SATMAR   L     AREAREG,RBCSWORK        Q.HAVE THE CDE AND WORK AREA     07170840
         LTR   AREAREG,AREAREG         BEEN ACQUIRED                    07179840
         BNZ   PRESET                  YES.BRANCH                       07188840
         SPACE 2                                                        07197840
*/* L GETMAIN-- GET A CDE FROM LSQA (SP255) */                          07206840
*/* P SET CDEREG = ADDR OF NEW CDE (SET R11=R1)*/                       07215840
*/* P CLEAR THE NEW CDE*/                                               07224840
*/* P SET CDNAME = REQUESTED NAME VIA R9*/                              07233840
*/* P INITIALIZE CDE WITH ATTR. NIC, JPA, REN, SER, NLR*/               07242840
         SPACE 2                                                        07251840
         L     ASCBREG,PSAAOLD         GET ADDRESS OF ASCB OF GM        07260840
         GETMAIN RU,LV=CDESIZE,SP=255,BRANCH=YES                        07269840
         LR    CDEREG,R1               SET UP CDEREG FOR USING VALUE    07278840
         XC    CDCHAIN(CDESIZE),CDCHAIN      ZERO THE CDE               07287840
         MVC   CDNAME(NAME),ZERO(NAMEREG) INITIALIZE  CDNAME            07296840
         MVI   CDATTR,CDNIC+CDJPA+CDREN+CDSER+CDNLR INITIALIZE CDATTR   07305840
         SPACE 2                                                        07314840
*/* S CDEADD: PUT CDE ONTOP OF JPAQ, SET CDRRBP & RBCDE1*/              07323840
         SPACE 2                                                        07332840
         BAL   SUBREG1,CDEADD          ADD CDENTRY TO LIST              07341840
         SPACE 2                                                        07350840
*/* L GETMAIN-- GET WORK AREA FROM SP 253 (LSQA) */                     07359840
*/* P SET AREAREG = ADDR OF FETWK (SET R7=R1)*/                         07368840
         SPACE 2                                                        07377840
         GETMAIN RU,LV=WKSIZE,SP=253,BRANCH=YES                         07386840
         LR    AREAREG,R1              SET WORK AREA REGISTER AS USING  07395840
         SPACE 2                                                        07404840
*/* P CLEAR PM WORK AREA AND BLDL AREA IN FETWK*/                       07413840
*/* P SET WKPREFX= 0001003C (NO OF ENTRIES AND SIZE OF ENTRY)*/         07422840
*/* P SET WKNAME= RQSTD NAME FROM CDNAME*/                              07431840
*/* P SET BLDL AREA = DE SAVE AREA IF DE SPECIFIED.*/                   07440840
*/* P SET WKCDADDR= CDE ADDR (SET WKCDADDR= CDEREG)*/                   07449840
         SPACE 2                                                        07458840
         XC    WKPGMMGR(WKEND-WKPGMMGR),WKPGMMGR   CLEAR WORKAREA       07467840
         MVC   WKPREFX(WORD),BLDLMASK  MOVE IN 4 BYTE PREFIX            07476840
         SPACE 1                                                        07485840
*        THE FIRST 8 BYTES OF THE DIRECTORY ENTRY ARE THE NAME          07494840
         SPACE 1                                                        07503840
         MVC   WKNAME(NAME),CDNAME     MOVE NAME                        07512840
         L     R15,RBCSDE              TEST FOR DE FORM                 07521840
         LTR   R15,R15                 OF MACRO                         07530840
         BZ    NOTDEFRM                IF NOT DE DONT MOVE DE IN        07539840
         USING DESAVE,R15              POINT TO DE SAVE AREA            07548840
         MVC   WKNAME(DEMAX),DESAVEDE  MOVE DE TO WORK AREA             07557840
NOTDEFRM EQU   *                       CONTINUE INITIALIZATION OF WA    07566840
         ST    CDEREG,WKCDADDR         SAVE THE CDE ADDR                07575840
         SPACE 2                                                        07584840
*/* P SET RBCSWORK = ADDR OF FETWK (SET RBCSWORK = R7)*/                07593840
         SPACE 2                                                        07602840
         ST    AREAREG,RBCSWORK        SAVE WORK AREA ADDRESS IN RB.    07611840
*                                      EXTENDED SAVE AREA.              07620840
         SPACE 2                                                        07629840
*/* D (NO,SETOUT,YES,) TASKLIB SEARCH IN PROCESS (SIGN DCBREG =-) */    07638840
         SPACE 2                                                        07647840
         LTR   DCBREG,DCBREG           Q. TASKLIB SEARCH IN PROCESS     07656840
         BP    SETOUT                  NO.BRANCH                        07665840
         SPACE 2                                                        07674840
*/* P SET DCBREG POSITIVE*/                                             07683840
*/* P NOW INDICATE TASKLIB SEARCH BY SETTING WKFLAG= X'87'*/            07692840
*/* P SAVE TCB ADDR (SET WKTCBSE=R4)*/                                  07701840
*/* P (,SETOUT) SAVE DCB ADDR (SET WKDCBSE=R10)*/                       07710840
         SPACE 2                                                        07719840
         MVI   FLAG,TLIBIND            YES.SET TASKLIB INDICATOR        07728840
         LPR   DCBREG,DCBREG           INSURE DCB ADDR IS POSITIVE      07737840
         ST    TCBREG,WKTCBSE          INIT TCB ADDR. IN WORKAREA       07746840
         ST    DCBREG,WKDCBSE          INIT DCB ADDR. IN WORKAREA       07755840
         B     SETOUT                  CONTINUE                         07764840
         SPACE 2                                                        07773840
*/*PRESET: P SET CDEREG = CDE ADDR (SET R11= WKCDADDR)*/                07782840
*/* S CDEADD: PUT CDE ONTOP OF JPAQ, SET CDRRBP & RBCDE1*/              07791840
         SPACE 2                                                        07800840
PRESET   L     CDEREG,WKCDADDR         LOAD ADDR OF CDENTRY             07809840
         BAL   SUBREG1,CDEADD          ADD CDENTRY TO JPAQ              07818840
         SPACE 2                                                        07827840
*/*SETOUT: D (YES,ALIASRCH,NO,) CDMIN = 1?*/                            08550040
         SPACE 2                                                        08560040
SETOUT   EQU   *                       CHECK FOR ALIAS                  08568040
         TM    CDATTR,CDMIN            Q. IS ALIAS HANDLING CURRENT     08576040
         BO    ALIASRCH                A=YES, TAKE BRANCH               08584040
         SPACE 2                                                        08600040
         USING IHADCB,DCBREG                                   @ZA28494 08602040
         ICM   GR1,MASK,DCBDEBA        GET THE DEB ADDRESS     @ZA28494 08602440
         L     CVTREG,CVTPTR           GET CVT ADDRESS         @ZA28494 08602840
         USING CVT,CVTREG                                      @ZA28494 08603240
         TM    CVTOPTA,CVTNIP          IS NIP PROCESSING?      @ZA28494 08603640
         BO    CHECKDE                 BRANCH IF YES           @ZA28494 08604040
         C     DCBREG,SVCDCBA          SVCLIB DCB?             @ZA28494 08604440
         BE    CHECKDE                 BRANCH IF YES           @ZA28494 08604840
         C     DCBREG,LINKDCBA         LINKLIB DCB?            @ZA28494 08605240
         BE    CHECKDE                 BRANCH IF YES           @ZA28494 08605640
         TM    DCBOFLGS,DCBOFOPN       IS DCB OPEN?            @ZA28494 08606040
         BZ    BADDCB                  BRANCH IF NOT           @ZA28494 08606440
         STM   R10,R11,WKREGIS         SAVE REGISTERS          @ZA28494 08606840
         USING DEBBASIC,GR1                                    @ZA28494 08607240
         ICM   GR10,MASK,DEBTCBB       GET DEB TCB             @ZA28494 08607640
         DROP  GR1                                             @ZA28494 08608040
         CR    GR10,TCBREG             SAME AS CURRENT TCB?    @ZA28494 08608440
         BE    CHKDEB                  BRANCH IF YES           @ZA28494 08608840
         SPACE 2                                               @ZA28494 08609240
*        LOCATE THE PROPER TCB IF CURRENT IS NOT THE ONE       @ZA28494 08609640
         SPACE 1                                               @ZA28494 08610040
*        FIRST SEARCH BACKWARD CHAIN OF TCBS                   @ZA28494 08610440
         L     R8,TCBBACK              POINT TO PREVIOUS TCB   @ZA28494 08610840
         DROP  TCBREG                                          @ZA28494 08611240
         USING TCB,R8                                          @ZA28494 08611640
TCBLPBK  EQU   *                                               @ZA28494 08612040
         LTR   R8,R8                   IS THERE A PREVIOUS?    @ZA28494 08612440
         BZ    CKTCBTCB                BRANCH IF NOT           @ZA28494 08612840
         CR    R10,R8                  IS THIS THE TCB WANTED? @ZA28494 08613240
         BE    CHKDEB                  BRANCH IF YES           @ZA28494 08613640
         L     R8,TCBBACK              GET NEXT TCB            @ZA28494 08614040
         B     TCBLPBK                 AND CHECK IT            @ZA28494 08614440
         DROP  R8                                              @ZA28494 08614840
         USING TCB,TCBREG                                      @ZA28494 08615240
*        NOW SEARCH FORWARD CHAIN OF TCBS                      @ZA28494 08615640
CKTCBTCB EQU   *                                               @ZA28494 08616040
         L     R8,TCBTCB               POINT TO NEXT TCB       @ZA28494 08616440
         DROP  TCBREG                                          @ZA28494 08616840
         USING TCB,R8                                          @ZA28494 08617240
TCBLPTCB EQU   *                                               @ZA28494 08617640
         LTR   R8,R8                   IS THERE A TCB?         @ZA28494 08618040
         BZ    BADDCB                  BRANCH IF NOT           @ZA28494 08618440
         CR    R8,R10                  IS THIS THE TCB WANTED? @ZA28494 08618840
         BE    CHKDEB                  BRANCH IF YES           @ZA28494 08619240
         L     R8,TCBTCB               GET NEXT TCB            @ZA28494 08619640
         B     TCBLPTCB                AND CHECK IT            @ZA28494 08620040
         DROP  R8                                              @ZA28494 08620440
         USING TCB,TCBREG                                      @ZA28494 08620840
CHKDEB   EQU   *                                               @ZA28494 08621240
         L     R15,CVTEXT2             GET ADDRESS OF CVT EXT  @ZA28494 08621640
         USING CVTXTNT2,R15                                    @ZA28494 08622040
         L     R15,CVTDEBVR            GET ADDRESS OF DEBCHK   @ZA28494 08622440
         DROP  R15                                             @ZA28494 08622840
         BALR  R14,R15                 BRANCH TO DEBCHK RTN    @ZA28494 08623240
         B     RELOAD                  GOOD RETURN FROM DEBCHK @ZA28494 08623640
RELOAD   EQU   *                                               @ZA28494 08624040
         LM    R10,R11,WKREGIS         RESTORE REGISTERS       @ZA28494 08624440
         LTR   R15,R15                 ERROR IN DEBCHECK?      @ZA28494 08624840
         BNZ   BADDCB                  BRANCH IF YES           @ZA28494 08625240
CHECKDE  EQU   *                                               @ZA28494 08625640
         LR    DEBREG,R1               SAVE ADDRESS OF DEB     @ZA28494 08626040
         USING DEBBASIC,DEBREG                                 @ZA28494 08626440
         SPACE 2                                                        08632040
         L     R15,RBCSDE              Q. IS DE FORM OF MACRO GIVEN     08633040
         LTR   R15,R15                 ON REQUEST                       08634040
         BZ    DOBLDL                  BRANCH IF NOT           @ZA26582 08635040
         TM    CVTOPTA,CVTNIP          IS NIP PROCESSING?      @ZA26582 08636040
         BO    DEFOUND                 BRANCH IF YES           @ZA26582 08637040
         TM    RBCSFLG1,RBCSSYSR       IS USER KEY/STATE AUTH? @ZA26582 08638040
         BO    DEFOUND                 BRANCH IF YES           @ZA26582 08639040
         TESTAUTH FCTN=1,BRANCH=YES    CHECK AUTHORIZATION     @ZA26582 08640040
         LTR   R15,R15                 IS THE USER AUTHORIZED? @ZA26582 08641040
         BZ    DEFOUND                 BRANCH IF YES           @ZA26582 08642040
         C     DCBREG,SVCDCBA          SVCLIB DCB?             @ZA26582 08643040
         BE    DOBLDL                  BRANCH IF YES           @ZA26582 08644040
         C     DCBREG,LINKDCBA         LINKLIB DCB?            @ZA26582 08645040
         BE    DOBLDL                  BRANCH IF YES           @ZA26582 08646040
         TM    DEBFLGS1,DEBAPFIN       IS THE LIB AUTH?        @ZA26582 08647040
         BZ    DEFOUND                 BRANCH IF NOT           @ZA26582 08650040
         DROP  DCBREG                                          @ZA26582 08653040
         EJECT 1                                                        08656040
*FOLLOWING IS THE ROUTINE THAT SETS UP THE INTERFACE  WITH  BLDL        08666040
*SERVICE ROUTINE.  THIS ROUTINE ESTABLISHES THE PROPER INTERFACE        08674040
*REGISTERS, RESTORES ITS OWN REGISTERS, AND TESTS THE BLDL RETURN CODE. 08682040
*                                                                       08700040
*        REGISTER USAGE:                                                08709040
*              R0-  BLDL LIST (INPUT TO BLDL)                           08718040
*              R1-  DCB ADDRESS (INPUT TO BLDL)                         08727040
*              R14- RETURN ADDRESS (INPUT TO BLDL)                      08736040
*              R15- RETURN CODE OF 0,4,0R 8 (OUTPUT FROM BLDL)          08745040
         SPACE 2                                                        08754040
*/* P SET REGISTERS FOR BLDL (R0=BLDL LIST,R1=DCB ADDR.) */             08763040
*/* P SAVE R11 AND R12 IN WKREGIS*/                                     08772040
         SPACE 2                                                        08781040
DOBLDL   EQU   *                                               @ZA26582 08785040
         LA    GR0,WKBLDE              SUPPLY THE LIST ADDRESS ,LIST    08790040
*                                      BEGINS WITH A 1 WORD PREFIX      08799040
         LR    GR1,DCBREG              SUPPLY THE DCB ADDRESS,DCB       08808040
*                                      ADDRESS IS NEVER ZERO.           08817040
         STM  R11,R12,WKREGIS          SAVE VITAL REGISTERS             08826040
         SPACE 2                                                        08850040
*/* L SETFRR-- REMOVE RECOVERY ROUTINE FROM STACK */                    08858040
         SPACE 2                                                        08866040
         SETFRR D,WRKREGS=(11,12)                               PTM0180 08874040
         SPACE 2                                                        08882040
*/* P ZERO POINTER TO RECOVERY PARM. AREA (SET RBCSFRRA =0) */          08900040
         SPACE 2                                                        08908040
         SR    R11,R11                 CLEAR REG. FOR ZEROING           08916040
         ST    R11,RBCSFRRA            PARM. LIST AREA                  08924040
         SPACE 2                                                        08932040
*/* L SETLOCK-- RELEASE CMS LOCK IF HELD */                             08950040
         SPACE 2                                                        08958040
         SETLOCK  RELEASE,TYPE=CMS,RELATED=('MUST BE FREED OVER SVC')   08966040
         SPACE 2                                                        08974040
*/* L SETLOCK-- RELEASE LOCAL LOCK */                                   08982040
         SPACE 2                                                        09000040
         SETLOCK  RELEASE,TYPE=LOCAL,RELATED=('MUST BE FREED OVER SVC') 09008040
         SPACE 2                                                        09016040
*/* P RESTORE R11 AND R12 FROM WKREGIS*/                                09024040
         SPACE 2                                                        09032040
         LM    R11,R12,WKREGIS          RESTORE REGS SAVED OVER SETLOCK 09050040
         SPACE 2                                                        09058040
*/* L BLDL (SVC 18)-- GET PDS ENTRY FOR MODULE */                       09066040
*/* COMMENT (2,1) BLDL INPUT--*/                                        09074040
*/* COMMENT (3,1) R0=WKPREFX PTR*/                                      09082040
*/* COMMENT (4,1) R1=DCB PTR*/                                          09100040
ISSUBLDL BLDL  (1),(0)                 GET PDS ENTRY                    09122040
         SPACE 1                                                        09127040
*                            BLDL RETURNS WITH A CODE SET IN GR15       09136040
*                          1.GR15 = 0  SUCCESSFUL COMPLETION,THE        09145040
*                            DIRECTORY ENTRY ACQUIRED IS SIGNIFICANT.   09154040
*                          2.GR15 = 4  THE NAME COULD NOT BE FOUND ON   09163040
*                                      THE LIBRARY ADDRESSED BY DCB.    09172040
*                          3.GR15 = 8  A PERMANENT I/O ERROR DETECTED   09181040
*                                      IN ATTEMPTING OPERATION.         09190040
         SPACE 2                                                        09199040
*/* P SAVE R11 AND R12 IN WKREGIS*/                                     09208040
*/* L SETLOCK-- GET LOCAL LOCK */                                       09217040
         SPACE 2                                                        09226040
NOBLDL   STM R11,R12,WKREGIS           SAVE VOLITAL REGSITERS           09250040
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        x09258040
               RELATED=('FREED OVER BLDL, NOW REOBTAINED')              09266040
         SPACE 2                                                        09274040
*/* L SETFRR-- ESTABLISH RECOVERY ROUTINE */                            09282040
*/* P SET RBCSFRRA= ADDR FRR PARM LIST*/                                09300040
*/* P SET 1ST WORD OF PARM LIST = ADDR OF PM SVRB*/                     09308040
         SPACE 2                                                        09316040
         SETFRR A,FRRAD=FRRPGM,WRKREGS=(11,12),PARMAD=(13)              09324040
         ST    RBREG,N0(R13)           SAVE RB ADDRESS                  09332040
         ST    R13,RBCSFRRA            SAVE FRR PARM. ADDRESS           09350040
         SPACE 2                                                        09359040
*/* P RESTORE R11 AND R12 FROM WKREGIS*/                                09368040
*/* D (FND,DEFOUND,NOTF,DEMISSED,IOER,ERRBLDL) TEST RETURN CODE IN      09377040
*/*R15*/                                                                09386040
*/* COMMENT (1,1) RET CODES ARE-*/                                      09395040
*/* COMMENT (2,1) 0 IF DE FOUND*/                                       09404040
*/* COMMENT (3,1) 4 IF DE NOT FND*/                                     09413040
*/* COMMENT (4,1) 8 IF I/O ERROR*/                                      09422040
         SPACE 2                                                        09431040
         LM    R11,R12,WKREGIS         RESTORE VOLITAL REGSITERS        09450040
         SR    R13,R13                 CLEAR R13 FOR ABEND              09458040
         B     *+N4(GR15)              TEST RETURN CODE  0,4,8          09466040
         B     DEFOUND                 BLDL CODE = 0                    09474040
         B     DEMISSED                BLDL CODE = 4                    09482040
         B     ERRBLDL                 BLDL ERROR = 806                 09500040
         EJECT                                                          09508040
* THIS SUBROUTINE WILL PROVIDE TASKLIB DCB ADDRESS TO BLDL,             09516040
* STARTING WITH THE REQUESTOR'S TCB JOBLIB DCB FIELD.                   09524040
* IT WILL STEP UP THE MOTHER-QUEUE UNTIL THE MODULE HAS                 09532040
* BEEN FOUND OR ALL TASKLIBS HAVE BEEN SEARCHED.                        09550040
*                                                                       09558040
*        REGISTER USAGE                                                 09566040
*              R1 - MOTHER TCB WORK REG (OUTPUT)                        09574040
*              R6 - BASE REGISTER (IEAVLK01)                            09582040
*              R7 - BLDL FETCH WORK AREA (INPUT)                        09600040
*              R10- DCB ADDRESS (INPUT)                                 09608040
*              OTHER REGISTERS NOT REFERENCED                           09616040
         SPACE 2                                                        09624040
*/*DEMISSED: D (YES,ERRBLDL,NO,) LINKLIB SRCH'D YET (DCBREG = PTR TO    09632040
*/*LNKLIB DCB)*/                                                        09650040
         SPACE 2                                                        09658040
DEMISSED EQU   *                                               @ZA26582 09666040
         ICM   R3,MASK,RBCSDE          DE FORM OF MACRO?       @ZA26582 09667040
         BNZ   ERRBLDL                 BRANCH IF YES, ERROR    @ZA26582 09668040
         C     DCBREG,LINKDCBA         LINKLIB SEARCHED YET?   @ZA26582 09669040
         BNE   SEARCH                  NO THEN CONTINUE SEARCH @ZA24461 09674040
         TM    RBCSFLG1,RBCSA306       306 ABEND INDICATOR SET @ZA24461 09675040
         BZ    ERRBLDL                 NO NORMAL 806 ABEND     @ZA24461 09676040
         SR    R13,R13                 CLEAR ABEND REGISTER    @ZA24461 09677040
         LA    R15,BADRETCD            SET REASON CODE = 12    @ZA24461 09677240
         B     ERRSYSR                 ISSUE 306 ABEND         @ZA24461 09677440
SEARCH   DS    0H                      CONTINUE SEARCH LABEL   @ZA24461 09678040
         SPACE 2                                                        09682040
*/* S RETHRED:DEQUEUE CDE FROM JPAQ */                                  09700040
         SPACE 2                                                        09708040
         BAL   R13,RETHRED             DEQUEUE CDE FROM JPAQ            09716040
         SPACE 2                                                        09724040
*/* D (NO,NOTSLIB1,YES,) TASKLIB SEARCH IN PROCESS (WKFLAG= 87)*/       09732040
         SPACE 2                                                        09750040
         CLI   FLAG,TLIBIND            TASKLIB SEARCH IN PROCESS        09758040
         BNE   NOTSLIB1                NO.BRANCH                        09766040
         SPACE 2                                                        09774040
*/* P SET R1= TCB ADDR FOR TASKLIB JUST SEARCHED (R1= WKTCBSE)*/        09782040
         SPACE 2                                                        09800040
         L     R1,WKTCBSE              GET TCB FOR LIB JUST SEARC       09808040
         SPACE 2                                                        09816040
*/*STEPUP: D (YES,CDFILIN,NO,) JS TCB HANDLED YET (R1=JS TCB ADDR)*/    09824040
*/* P SET R1= ADDRESS OF MOTHER TCB VIA TCBMOTH*/                       09832040
         SPACE 2                                                        09850040
STEPUP   C     R1,TCBJSTCB             Q.JOB STEP TCB HANDLED           09858040
         BE    CDFILIN                 YES SEARCH LPAQ                  09866040
         L     R1,TCBMOTH(R1)          STEP UP TCB CHAIN                09874040
         SPACE 1                                                        09882040
*  SINCE THE DCB ADDRESS IS PROPOGATED DOWNWARD, A ZERO ADDRESS         09900040
*    MEANS THAT THERE ARE NO MORE LIBS TO SEARCH.                       09908040
         SPACE 2                                                        09916040
*/* P SET DCBREG = TASKLIB DCB OF NEW TCB (R10= TCBJLB)*/               09924040
*/* D (YES,CDFILIN,NO,) DCB FIELD = 0? (R10=0) */                       09932040
         SPACE 2                                                        09950040
         ICM   DCBREG,MASK4,TCBJLBDI(R1) TEST FOR ZERO ADDR AND PICK    09958040
*                                      UP NEXT DCB POINTER              09966040
         BZ    CDFILIN                 NONE LEFT TO CHECK               09974040
         SPACE 2                                                        09982040
*/* D (YES,STEPUP,NO,) DCB ALREADY CHECKED (R10= WKDCBSE) */            10000040
         SPACE 2                                                        10008040
         C     DCBREG,WKDCBSE          SAME AS LAST ONE DONE            10016040
         BE    STEPUP                  IF SO GET NEXT                   10024040
         SPACE 2                                                        10032040
*/* P SAVE TCB ADDR IN WKTCBSE (SET WKTCBSE = R10)*/                    10050040
*/* P (,SATMAR) SAVE DCB ADDR IN WKDCBSE (SET WKDCBSE = R10)*/          10058040
         SPACE 2                                                        10066040
         ST    R1,WKTCBSE              SAVE FOR NEXT PASS               10074040
         ST    DCBREG,WKDCBSE          SAVE FOR NEXT PASS               10082040
         B     SATMAR                  NO-SEARCH NEW LIB                10100040
         SPACE 2                                                        10110040
*/*NOTSLIB1: D (NO,CDFILIN,YES,) DCB FOR SVCLIB? */                     10118040
         SPACE 2                                                        10126040
NOTSLIB1 C     DCBREG,SVCDCBA          Q. SVCLIB DCB ADDR IN USE        10134040
*                                      IF SO, THE LPAQ HAS              10150040
*                                      ALREADY BEEN SEARCHED            10158040
         BNE   CDFILIN                 NO.GO TO SEARCH LPA              10166040
         SPACE 2                                                        10174040
*/* P (,SATMAR) GET ADDRESS OF LINKLIB DCB FOR NEXT SEARCH */           10182040
         SPACE 2                                                        10200040
         L     DCBREG,LINKDCBA         PREPARE TO SEARCH LINKLIB        10208040
         B     SATMAR                  GO TO  BLDL                      10216040
         EJECT                                                          10224040
*THIS ROUTINE EXAMINES THE DE EXTRACTED BY BLDL FOR ABNORMAL CONDITIONS 10232040
*AND IF NONE EXIST WILL SET ATTRIBUTES IN THE CDENTRY AS INDICATED IN   10250040
*THE  DE. THE FOLLOWINGS FLAGS ARE TESTED IN  THIS SECTION              10258040
*              BYTE    (CBYTE) - BIT INDICATING ALIAS DIRECTORY ENTRY.  10266040
*              BYTE    (DEATTR)- BIT INDICATING REENTRABLE LOAD MODULE  10274040
*                                BIT INDICATING SERIALLY REUSABLE MOD.  10282040
*                                BIT INDICATING 'LOAD'ABLE ONLY MODULE  10300040
*                                BIT INDICATING EXECUTABLE LOAD MODULE  10308040
*        REGISTER USAGE                                                 10316040
*              R5 - SVRB ADDRESS (INPUT)                                10324040
*              R6 - BASE (IEAVLK01)                                     10332040
*              R7 - BLDL FETCH WORK AREA (INPUT)                        10340040
*              R8 - DEB ADDRESS (INPUT)                        @ZA28494 10346040
*              R11- CDE FOR REQUEST (INPUT)                             10358040
*              R13- ZEROED (OUTPUT)                                     10366040
*              OTHER REGISTERS NOT USED                                 10374040
*/*DEFOUND: P CLEAR ABEND REGISTER (REG 13) */                          10382040
*/* D (YES,,NO,ERRXCUTE) MODULE EXECUTABLE? */                          10400040
*/* COMMENT (2,15) 706 ABEND IF*/                                       10408040
*/* COMMENT (3,15) NOT EXEC.*/                                          10416040
         SPACE 2                                                        10424040
DEFOUND  EQU   *                       TEST DE ATTRIBUTES ROUTINE       10432040
         SR    R13,R13                 CLEAR ABEND REGISTER             10450040
         TM    WKATTR,DEXCUT           Q. IS MODULE EXECUTABLE          10458040
         BZ    ERRXCUTE                A=NO  GET READY TO ABEND         10466040
         TM    CVTOPTA,CVTNIP          IS NIP PROCESSING       @ZA24461 10466340
         BO    USEDEFND                YES USE THIS COPY       @ZA24461 10466640
         TM    RBCDFLGS,RBCDATCH       ATTACH REQUEST?         @ZA24461 10466940
         BZ    CHEKAUTH                NO CHECK AUTHORIZATION  @ZA24461 10467040
         CLM   TCBREG,MASK,TCBJSTCB+N1 JOBSTEP ATTACH REQUEST  @ZA24461 10467140
         BNE   CHEKSAPF                NO CHECK RESET APF?     @ZA24951 10467240
         TM    TCBPKF,X'80'            TCB IN KEY 0-7?         @ZA24461 10467340
         BZ    CHECKLIB                YES CHECK LIB AUTH      @ZA24461 10467440
         TM    TCBFLGS3,X'80'          TCB TO RUN SUPVR STATE? @ZA24461 10467540
         BO    CHECKLIB                YES CHECK LIB AUTH      @ZA24461 10467640
         B     USEDEFND                NO USE THIS COPY        @ZA24461 10467740
CHEKSAPF TM    RBCSFLG1,RBCRSAPF       RESET APF REQUEST?      @ZA24951 10467840
         BO    USEDEFND                YES USE THIS COPY       @ZA24461 10468140
CHEKAUTH DS    0H                      CHECK USERS AUTHORITY   @ZA24461 10468240
         TM    RBCSFLG1,RBCSSYSR       IS USER KEY/STATE AUTH  @ZA24461 10468340
         BO    CHECKLIB                YES THEN CHECK THE LIB  @ZA24461 10468440
         TESTAUTH FCTN=1,BRANCH=YES    NO CHECK JSCB AUTH      @ZA24461 10468540
         LTR   R15,R15                 IS USER JSCB AUTHORIZED @ZA24461 10468640
         BNZ   USEDEFND                NO USE THIS COPY        @ZA24461 10468740
CHECKLIB DS    0H                      CHECK LIBRARY AUTH      @ZA24461 10468840
         C     DCBREG,SVCDCBA          SVCLIB DCB?             @ZA28494 10468940
         BE    USEDEFND                BRANCH IF YES           @ZA28494 10469040
         C     DCBREG,LINKDCBA         LINKLIB DCB?            @ZA28494 10469140
         BE    USEDEFND                BRANCH IF YES           @ZA28494 10469240
         USING IHADCB,DCBREG           SET DCB ADDRESSABILITY  @ZA24461 10469340
         CLM   DEBREG,MASK,DCBDEBA     DEB ADDRESSES THE SAME? @ZA28494 10469440
         BE    GOODDCB                 YES THEN DCB IS GOOD    @ZA24461 10469940
BADDCB   EQU   *                                               @ZA26582 10470040
         SR    R13,R13                 NO GET READY TO ABEND   @ZA24461 10470140
         LA    R15,DONTBLDL            SET REASON CODE TO 10   @ZA24461 10470240
         B     ERRBLDL                 ISSUE THE 806 ABEND     @ZA24461 10470540
GOODDCB  TM    DEBFLGS1,DEBAPFIN       IS THE LIB AUTHORIZED   @ZA24461 10470640
         BO    USEDEFND                YES USE THIS COPY       @ZA24461 10470740
         DROP  DCBREG                  DROP DCB ADDRESSABILITY @ZA24461 10470840
         DROP  DEBREG                  DROP DEB ADDRESSABILITY @ZA24461 10471140
         L     WKREG2,RBCSDE           GET DE SAVE ADDRESS     @ZA28734 10471440
         LTR   WKREG2,WKREG2           IS DE FORM SPECIFIED    @ZA28734 10471640
         BZ    CONSERCH                NO CONTINUE THE SEARCH  @ZA28734 10471840
         SR    R13,R13                 CLEAR ABEND REGISTER    @ZA28734 10472040
         LA    R15,BADRETCD            SET UP FOR 306-C ABEND  @ZA28734 10472240
         B     ERRSYSR                 ABEND AUTHORIZED USER THAT SPEC  10472440
*                                      IFIED DE OPTION FOR AN UNAUTHOR  10472640
*                                      IZED LIBRARY            @ZA28734 10472840
CONSERCH DS     0H                     CONTINUE SEARCHING LIBS @ZA28734 10473040
         OI    RBCSFLG1,RBCSA306       SET 306 ABEND INDICATOR @ZA24461 10473240
         B     DEMISSED                GO CONTINUE SEARCH      @ZA24461 10473440
USEDEFND NI    RBCSFLG1,MAX-RBCSA306   RESET 306 INDICATOR     @ZA24461 10473640
         SPACE 2                                                        10474040
*/* D (YES,,NO,NOVLY) MODULE IN OVERLAY FORM? */                        10482040
*/* P SET OVERLAY BIT IN CDE (SET CDOLY=1) */                           10500040
         SPACE 2                                                        10508040
         TM    WKATTR,DEOVLY           Q.MODULE IN OVERLAY FORM         10516040
         BZ    NOVLY                   NO.DON'T SET CDE FLAG            10524040
         OI    CDATTR2,CDOLY           SET BIT INDICATING OVERLAY       10532040
         SPACE 2                                                        10550040
*/*NOVLY: D (NO,NOLOLY,YES,) MODULE LOAD-ONLY? */                       10558040
*/* P SET LOADABLE ONLY FLAG IN CDE (SET CDNLR =1) */                   10566040
         SPACE 2                                                        10574040
NOVLY    TM    WKATTR,DELODY           Q. IS MODULE LOADABLE ONLY       10582040
         BZ    NOLOLY                  A= NO  TAKE BRANCH               10600040
         NI    CDATTR,MAX-CDNLR        SET LOADABLE ONLY FLAG IN CDE    10608040
         SPACE 2                                                        10616040
*/* D (NO,ERRLONLY,YES,) IS THIS A LOAD REQUEST? */                     10624040
*/* COMMENT (2,15) 406 ADEND*/                                          10632040
*/* COMMENT (3,15) IF NOT LOAD*/                                        10650040
         SPACE 2                                                        10658040
         TM    RBCDFLGS,LOAD           Q. IS THIS A LOAD MACRO REQUEST  10666040
         BZ    ERRLONLY                A=NO  GET READY TO ABEND         10674040
         SPACE 2                                                        10682040
*/*NOLOLY: D (RENT,REENDE,REUS,SERIAL,NRUS,) TEST MODULE REUSABILITY */ 10700040
*/* P SET REUSABLE BIT OFF IN CDE (SET CDSER =0)*/                      10708040
*/*SERIAL: P SET RENTRANT BIT OFF IN CDE (SET CDREN =0)*/               10716040
         SPACE 2                                                        10724040
NOLOLY   TM    WKATTR,PDS2RENT+PDS2REUS Q. IS MOD REENTERABLE OR        10732040
*                                      OR SERIALLY REUSABLE             10750040
         BO    REENDE                  A= REENTRABLE LEAVE SER+REN SET  10758040
         BM    SERIAL                  A= SERIALLY REUSE LEAVE SER SET  10766040
         NI    CDATTR,MAX-CDSER        A= NOT REUSABLE RESET REN+SER    10774040
SERIAL   NI    CDATTR,MAX-CDREN        A= SER. REUSABLE RESET REN       10782040
         SPACE 2                                                        10800040
*/*REENDE: D (NO,PGMFETCH,YES,) IS THIS AN ALIAS DE ENTRY? */           10808040
         SPACE 2                                                        10816040
REENDE   TM    WKCBYTE,DEALIAS         Q. IS AN ALIAS DE ENTRY GIVEN    10824040
         BZ    PGMFETCH                A= NO, TAKE BRANCH               10832040
         SPACE 2                                                        10850040
*/* D (NO,PGMFETCH,YES,) IS MOD. RENT OR REUS? */                       10858040
         SPACE 2                                                        10866040
         TM    WKATTR,PDS2RENT+PDS2REUS Q. IS MOD EITHER REEN-          10874040
*                                      TRABLE OR SERIALLY REUSABLE      10882040
*                                      INDICATING PRESCENCE OF ALIAS.   10900040
         BZ    PGMFETCH                A = NO, GET NEW COPY             10908040
*                                      A = YES, PROCESS AS ALIAS        10916040
         EJECT                                                          10924040
*THIS SECTION OF CODE PROCESSES A BLDL ENTRY THAT IS FLAGGED AS AN      10932040
*ALIAS. THE MEMBER NAME IS SEARCHED UPON IN THE  CDENTRY QUEUES -       10950040
*IF IT IS FOUND  THE ALIAS ENTRY IS RELOCATED AND A CDENTRY IS BUILT    10958040
*THAT IS ASSOCIATED WITH THE FOUND ENTRY ON A MAJOR / MINOR BASIS.      10966040
*IF THE MEMBER NAME IS NOT FOUND A CDENTRY IS BUILT FOR THE  MEMBER     10974040
*NAME ALSO. WHEN THE MODULE IS FETCHED IT WILL HAVE TWO CDENTRIES, ONE  10982040
*FOR THE MEMBER NAME (MAJOR ENTRY) AND ONE FOR THE ALIAS NAME (MINOR ). 10990040
*                                                                       11010040
*        REGISTER USAGE                                                 11020040
*        R0,1  - ALTERED                                                11027040
*        R3,4,5- CVT,TCB,SVRB (INPUT)                                   11034040
*        R6    - BASE (IEAVLK01)                                        11050040
*        R7    - BLDL FETCH WORK AREA (INPUT)                           11055040
*        R8,9  - ALTERED                                                11066040
*        R10   - DCB ADDRESS (INPUT)                                    11074040
*        R11   - CDE REQUESTED (INPUT) ALTERED (OUTPUT)                 11082040
*        R12   - ALTERED                                                11100040
*        R14,15- ALTERED                                                11108040
*        OTHER REGISTERS NOT REFERENCED                                 11116040
         SPACE 2                                                        11124040
*/*ALIAS1: D (NO,NOSCAT,YES,) MODULE LINKED WITH SCATTER */             11132040
         SPACE 2                                                        11150040
ALIAS1   EQU   *                       SET DE UP IN A CONSISTENT        11158040
*                                      PATTERN REGARDLESS OF WHETHER    11166040
*                                      IT CONTAINS SCATTER INFO.        11174040
         TM    WKATTR,DESCAT           THE ALIAS NAME RESIDES IN        11182040
*                                      EITHER OF TWO PLACES DEPENDING   11200040
*                                      ON WHETHER SCATTER INFO IS       11208040
*                                      PRESENT.                         11216040
         BZ    NOSCAT                  IF IN SCATTER DE+ 43 IS ALIAS    11224040
         SPACE 2                                                        11232040
*/* P (,SCATFORM) SET WKMAINEP & WKMAINAM = MAJOR EP & NAME FROM DE*/   11250040
         SPACE 2                                                        11258040
         MVC   WKMAINEP+N1(PDSS02LN),WKENTSC MOVE IN SCATTER EP AND NM  11266040
         B     SCATFORM                SKIP NEXT MOVE                   11274040
         SPACE 2                                                        11282040
*/*NOSCAT: P SET WKMAINEP & WKMAINAM = MAJOR EP & NAME FROM DIFFERENT   11300040
*/*PLACE IN DE*/                                                        11308040
         SPACE 2                                                        11316040
NOSCAT   EQU   *                                                        11324040
         MVC   WKMAINEP+N1(PDSS02LN),WKENTBK MOVE IN EP AND NM          11332040
         SPACE 2                                                        11350040
*/*SCATFORM: P PUT UNRELOCATED MINOR ENTRY POINT FROM WKENTPT INTO      11358040
*/*CDENTPT*/                                                            11366040
*/* P INDICATE MINOR CDE (SET CDMIN=1) */                               11374040
         SPACE 2                                                        11382040
SCATFORM EQU   *                       NAME AND ENTRY POINT NOW IN      11400040
*                                      SAME LOCATION REGARDLESS OF DE   11408040
*                                      ATTRIBUTES                       11416040
         SR    WKREG2,WKREG2           CLEAR HIGH ORDER BYTE            11424040
         ICM   WKREG2,MASK,WKENTPT     GET UNRELOCATED EP               11432040
         ST    WKREG2,CDENTPT          PUT UNRELOCATED EP IN CDE        11450040
         OI    CDATTR,CDMIN            SET MINOR FLAG IN ALIAS CDE      11458040
         ST    DEBREG,WKREGIS+N12      SAVE DEB ADDRESS        @ZA28494 11462040
         SPACE 2                                                        11466040
*/*ALIASRCH: P SET UP SEARCH FOR MAJOR NAME R8=JPAQ HDR PTR R9=WKMAINAM 11474040
*/* PTR*/                                                               11482040
         SPACE 2                                                        11500040
ALIASRCH LA    NAMEREG,WKMAINAM        SET UP SEARCH FOR MEMBER NAME.   11508040
         L     TABREG,TCBJSTCB         SET JPAQ ORIGIN ADDRESS          11516040
         LA    TABREG,TCBJPQ-TCB(N0,TABREG) SET QUEUE ADDRESS           11524040
         L     CVTREG,CVTPTR           GET CVT ADDRESS                  11532040
         USING CVT,CVTREG              ADDRESSABILITY ON CVT            11550040
         SPACE 2                                                        11558040
*/* L (FND,MAINLANX,NOTF,) IEAQCDSR-- SEARCH JPQ FOR MAJOR NAME */      11566040
         SPACE 2                                                        11574040
         L     RETURN,CVTQCDSR         PICK UP CDSEARCH ADDRESS         11582040
         BALR  RETURN,RETURN           SEARCH THE  CDE QUEUE            11600040
*                                      FOR MEMBER NAME.                 11608040
         B     MAINLANX                IF MAIN NAME IS IN CONTENTS      11616040
*                                      DIRECTORY, BRANCH TO ROUTINE TO  11624040
*                                      COMPLETE ALIAS REQUEST.          11632040
         SPACE 2                                                        11650040
*/* D (YES,LPASRCH,NO,) LINKLIB DCB IN USE (DCBREG = PTR LINKLIB DCB)*/ 11658040
         SPACE 2                                                        11666040
         C     DCBREG,LINKDCBA         Q.IS LINKLIB IN USE              11674040
         BE    LPASRCH                 YES.SEARCH LINK PACK AREA        11682040
         SPACE 2                                                        11700040
*/* D (NO,CREATCDE,YES,) SVCLIB DCB IN USE (DCBREG = PTR SVCLIB DCB)*/  11708040
         SPACE 2                                                        11716040
         C     DCBREG,SVCDCBA          Q.IS SVCLIB IN USE               11724040
         BNE   CREATCDE                NO.GET ANOTHER CDE               11732040
         SPACE 2                                                        11750040
*/*LPASRCH: P SAVE R11 THRU R13 IN WKREGIS*/                            11758040
*/* L SETLOCK-- GET CMS LOCK FOR LPA SEARCH */                          11767040
*/* P RESTORE R11 THRU R13 FROM WKREGIS*/                               11776040
         SPACE 2                                                        11785040
LPASRCH  EQU   *                       SEARCH THE LPAQ                  11794040
         STM   R11,R13,WKREGIS         SAVE VOLATILE REGS      @ZA28494 11803040
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                          x11810040
               RELATED=('WILL BE FREED AT CREATCD1 OR EXIT PROLOG')     11817040
         LM    R11,R13,WKREGIS         RESTORE VOLATILE REGS   @ZA28494 11824040
         SPACE 2                                                        11850040
*/* P SET R8= ADDR OF ALPAQ HEADER*/                                    11858040
         SPACE 2                                                        11866040
         L     TABREG,IEAQLCTA         GET ADDRESS OF LPACQ ORIGIN      11874040
         SPACE 2                                                        11882040
*/* L (FND,MAINLANX,NOTF,) IEAQCDSR-- SEARCH ALPAQ FOR MAJOR NAME */    11900040
         SPACE 2                                                        11908040
         L     RETURN,CVTQCDSR         PICK UP CDSEARCH ADDRESS         11916040
         BALR  RETURN,RETURN           SEARCH THE QUEUE                 11924040
         B     MAINLANX                FOUND - BRANCH TO MAIN ROUTINE   11932040
         SPACE 2                                                        11950040
*/*CREATCD1: P SAVE R11 THRU R13 IN WKREGIS*/                           11958040
*/* L SETLOCK-- RELEASE CMS LOCK */                                     11966040
*/* P RESTORE R11 THRU R13 FROM WKREGIS*/                               11974040
         SPACE 2                                                        11982040
CREATCD1 STM   R11,R13,WKREGIS         SAVE VOLATILE REGS      @ZA28494 11990040
         SETLOCK RELEASE,TYPE=CMS,RELATED=('LK01,OBTAINED AT LPASRCH')  11995040
         LM    R11,R13,WKREGIS         RESTORE VOLATILE REGS   @ZA28494 12000040
         SPACE 2                                                        12024040
*/*CREATCDE: L GETMAIN (BR ENTRY) -- GET CDE FROM SUBPOOL 255 (LSQA) */ 12032040
*/* P SET CDIREG = ADDR OF CDE VIA RBCDE1*/                             12050040
         SPACE 2                                                        12058040
CREATCDE EQU   *                       BUILD THE CDE                    12066040
         L     ASCBREG,PSAAOLD         GET ASCB ADDRESS FOR GETMAIN     12074040
         GETMAIN RU,LV=CDESIZE,SP=255,BRANCH=YES  GET CDE               12082040
         L     CDIREG,RBCDFLGS         RESET CDIREG TO MINOR            12100040
         SPACE 1                                                        12108040
*        WE WILL USE NEW CDE AS MINOR, AND OLD CDE AS MAJOR. THIS       12116040
*        SIMPILFIES CHAINING.  MINOR INFORMATION IS MOVED TO NEW        12124040
*        SPACE, AND OLD MINOR IS CHANGED INTO A MAJOR.                  12132040
         SPACE 1                                                        12150040
*/* P SET CDEREG= ADDR OF NEW CDE (SET R11=R1)*/                        12158040
*/* COMMENT (2,1) USE NEW CDE AS*/                                      12166040
*/* COMMENT (3,1) MINOR AND OLD*/                                       12174040
*/* COMMENT (4,1) CDE AS MAJOR.*/                                       12182040
*/* P COPY OLD CDE (VIA R12) INTO NEW CDE (VIA R11)*/                   12200040
*/* P SET CDCHAIN OF OLD CDE = ADDR OF NEW CDE*/                        12208040
         SPACE 2                                                        12216040
         LR    CDEREG,R1               SET NEW CDE = ALIAS = MINOR      12224040
         MVC   N0(CDESIZE,CDEREG),N0(CDIREG) PUT ALIAS IN MINOR LOC.    12232040
         ST    CDEREG,CDCHAINJ         POINT OLD CDE TO NEW CDE         12250040
         SPACE 2                                                        12258040
*/* P SET CDNAME OF OLD CDE = MAJOR NAME IN WKMAINAM*/                  12266040
         SPACE 2                                                        12274040
         L     AREAREG,RBCSWORK        GET ADDRESS OF FETCH WORKAREA    12282040
         MVC   CDNAMEJ(NAME),WKMAINAM  INSERT MAJOR NAME IN CDE         12300040
         SPACE 2                                                        12308040
*/* P MARK OLD CDE AS A MAJOR (SET CDMIN =0) */                         12316040
*/* P SET CDXLMJP OF NEW CDE = ADDR OF OLD CDE*/                        12324040
*/* P SET RBCDE1 OF PM SVRB = ADDR OF NEW CDE (RQSTD CDE)*/             12332040
         SPACE 2                                                        12350040
         NI    CDATTRJ,MAX-CDMIN       RESET MIN FLAG IN MAJOR          12358040
         LA    CDIREG,N0(CDIREG)       CLEAR HIGH ORDER BYTE            12366040
         ST    CDIREG,CDXLMJP          POINT MINOR BACK TO MAJOR        12374040
         MVC   RBCDEA(ADDL),CDCHAINJ+N1   RE-INITIALIZE RBCDE           12382040
         SPACE 2                                                        12400040
*/* P INDICATE 2 CDES OBTAINED (SET RBCSTWO =1)*/                       12408040
*/* P (,PGMFETCH) SET R11=R12 FOR FETCH*/                               12416040
         SPACE 2                                                        12424040
         OI    RBCSFLG1,RBCSTWO        INDICATE 2 CDES         @YA01851 12432040
         LR    CDEREG,CDIREG           SET FOR FETCH  ON MINOR          12450040
*                                      MAJOR CDE REG WILL BE SET BY     12458040
*                                      RERIG AFTER PGMFETCH.            12466040
         L     DEBREG,WKREGIS+N12      RESTORE DEB ADDRESS     @ZA28494 12470040
         B     PGMFETCH                GO TO FETCH                      12474040
         SPACE 2                                                        12482040
*/*MAINLANX: D (NO,MAINLAND,YES,) SYSTEM REQUEST? (RBCSSYSR =1)*/       12500040
         SPACE 2                                                        12508040
MAINLANX TM    RBCSFLG1,RBCSSYSR   Q. THIS A SYSTEM REQUEST             12516040
         BZ    MAINLAND            A. NO-CONTINUE                       12524040
         SPACE 2                                                        12532040
*/* D (YES,MAINLAND,NO,CREATCD1) MODULE FROM AUTH LIB (CDSYSLIB =1)*/   12550040
         SPACE 2                                                        12558040
         TM    CDATTR2,CDSYSLIB     Q. THIS A SYSTEM LIBRARY MODULE     12566040
         BO    MAINLAND            YES- CONTINUE                        12574040
         B     CREATCD1            NO- USE THIS MODULE                  12582040
         EJECT                                                          12600040
*THIS ROUTINE  OPERATES UPON AN ALIAS CDENTRY WHERE MAIN CDENTRY HAS    12608040
*BEEN FOUND TO BE IN STORAGE. OF PRIME CONCERN IS THE EXTENT LIST WHICH 12616040
*IS USED TO RELOCATE THE ALIAS ENTRY POINT. IF THE MAIN CDENTRY HAS ITS 12624040
*NIC FLAG SET INDICATING IT IS NOT IN CORE ,THE ALIAS REQUEST MUST BE   12632040
*QUEUED PENDING THE SUCCESSFUL FETCHING OF THE MAIN NAME.               12650040
*                                                                       12658040
*        REGISTER USAGE                                                 12666040
*        R0,1  - ALTERED                                                12674040
*        R2    - ALTERED                                                12682040
*        R3    - ALTERED                                                12700040
*        R4    - TCB (INPUT)                                            12708040
*        R5    - SVRB (INPUT)                                           12716040
*        R6    - BASE (IEAVLK01)                                        12724040
*        R7    - BLDL FETCH WORK AREA (INPUT)                           12732040
*        R9    - ADDRESS OF NAME (OUTPUT)                               12750040
*        R11,12,13,14,15- ALTERED                                       12758040
*        OTHER REGISTERS NOT REFERENCED                                 12766040
         SPACE 1                                                        12774040
*/*MAINLAND: P RESET MAJOR CDE POINTER (SET R12=R11)*/                  12782040
*/* P RESET REQUESTED CDE POINTER (SET R11= RBCDE1)*/                   12800040
*/* P RESET NAMEREG (SET R9= RBCSNAME)*/                                12808040
         SPACE 2                                                        12816040
MAINLAND LR    CDIREG,CDEREG           MAJOR CDE   ADDRESSED BY CDIREG  12824040
         L     CDEREG,RBCDFLGS         MINOR CDE   ADDRESSED BY CDEREG  12832040
         LA    NAMEREG,RBCSNAME        RESET MINOR NAME PTR             12850040
         SPACE 2                                                        12858040
*/* P RINITIALIZE MAJOR POINTER IN MINOR CDE SET CDXLMJP= R12)*/        12866040
         SPACE 2                                                        12874040
         LA    CDIREG,N0(CDIREG)       CLEAR HIGH ORDER BYTE            12882040
         ST    CDIREG,CDXLMJP          INITIALIZE CDXLMJP               12900040
         SPACE 2                                                        12908040
*/* S RETHRED:UNHOOK ALIAS FROM JPACQ  */                               12916040
*/* P RESTORE R12 FROM CDXLMJP OF RQSTD CDE*/                           12924040
         SPACE 2                                                        12932040
         BAL   R13,RETHRED             UNHOOK CDE FROM LIST             12950040
         L     CDIREG,CDXLMJP          RELOAD CDIREG                    12958040
         SPACE 2                                                        12966040
*/* D (NO,NONLPA,YES,) MAJOR LOADED BY NIP? (CDNIP =1) */               12974040
         SPACE 2                                                        12982040
         TM    CDATTRJ,CDNIP           FIXED LPA MOD LOADED BY NIP      13000040
         BZ    NONLPA                  NO-BR AROUND LPA PROCESSING      13008040
         SPACE 2                                                        13016040
*/*GETSOCDE: L GETMAIN (BR ENTRY)-- GET CDE FROM SUBPOOL 245 (SQA) */   13024040
         SPACE 2                                                        13032040
GETSOCDE EQU   *                       GET CDE                          13050040
         L     ASCBREG,PSAAOLD         GET ASCB FOR GETMAIN             13060040
         GETMAIN RU,LV=CDESIZE,SP=245,BRANCH=YES                        13068040
         SPACE 2                                                        13076040
*/* P COPY REQUESTED CDE (IN LSQA) TO NEW SQA CDE */                    13084040
         SPACE 2                                                        13100040
         MVC   ZERO(CDESIZE,R1),ZERO(R11) MVE CDE FR LSQS TO SQS/TSC    13108040
         SPACE 2                                                        13116040
*/* P SET CDJPA=0 AND CDNIP=1 IN NEW CDE*/                              13124040
*/* P SET CDEREG= ADDR OF NEW CDE (SET R11=R1)*/                        13132040
*/* P PREPARE FOR FREEMAIN:  SET R2= CDE TO BE FREED AND CLEAR HIGH     13150040
*/*ORDER  BYTE*/                                                        13158040
         SPACE 2                                                        13166040
         LA    WKREG2,N0(R11)          ADDRESS TO BE FREED       M00883 13174040
         NI    CDATTR-CDENTRY(R1),MAX-CDJPA TURN OFF JPA MOD.BIT M00883 13182040
         OI    CDATTR-CDENTRY(R1),CDNIP     SET LPA INDICATOR    M00883 13200040
         LR    R11,R1                  SAVE NEW CDE ADDR. OVER FREEMAIN 13208040
         SPACE 2                                                        13216040
*/* L FREEMAIN (BR ENTRY) -- FREE LSQA CDE (SUBPOOL 255) */             13224040
         SPACE 2                                                        13232040
         FREEMAIN RU,SP=255,LV=CDESIZE,A=(WKREG2),BRANCH=YES            13250040
         SPACE 2                                                        13260040
*/* P SET RBCDE1 = ADDR OF NEW CDE (RBCDE1 = R11)*/                     13268040
*/* P SET WKCDADDR = ADDR OF NEW CDE*/                                  13276040
         SPACE 2                                                        13284040
         STCM  R11,MASK,RBCDE1         SAVE PTR TO NEW CDE IN RB        13300040
         L     AREAREG,RBCSWORK        GET FETCH WORKAREA               13308040
         ST    R11,WKCDADDR            UPDATE CDE ADDR IN THE           13316040
*                                      FETCH/BLDL WORK AREA             13324040
         SPACE 2                                                        13332040
*/*NONLPA: P CHAIN MINOR CDE IN QUEUE BEHIND MAJOR */                   13350040
         SPACE 2                                                        13358040
NONLPA   EQU   *                       CHAIN CDE                        13366040
         L     WKREG2,CDCHAINJ         GET CHAIN FOR MAJOR              13374040
         ST    WKREG2,CDCHAIN          AND PUT IT IN THE MINOR          13382040
         MVC   CDCHAINJ+N1(ADDL),RBCDEA MOVE POINTER TO MIN INTO MAJOR  13400040
         SPACE 2                                                        13408040
*/* D (YES,RESOLVE,NO,) MAJOR NAME IN STORAGE? (CDNIC=0)*/              13416040
         SPACE 2                                                        13424040
         TM    CDATTRJ,CDNIC           Q.IS MAIN NAME IN STORAGE        13432040
         BZ    RESOLVE                 A=YES, TAKE BRANCH               13450040
         SPACE 2                                                        13458040
*/* P SET BASEREG (R6) FOR IEAVLK00*/                                   13466040
*/*R RETURN TO CDQUECTL IN IEAVLK00*/                                   13474040
*/* COMMENT (1,1) CDQUECTL WILL*/                                       13482040
*/* COMMENT (2,1) QUEUE THIS RQST*/                                     13500040
*/* COMMENT (3,1) ONTO THE NIC*/                                        13508040
*/* COMMENT (4,1) QUEUE OF THE*/                                        13516040
*/* COMMENT (5,1) MAJOR CDE*/                                           13524040
         SPACE 2                                                        13532040
         L     GR15,TABLEADD           POINT TO ADDRESS LIST            13550040
         USING ADDRTAB,GR15            USE ADDRESS LIST                 13558040
         L     BASEREG,CDLKBASE        SET UP VLK00 ADDRESSABILITY      13566040
         L     GR15,CDQUECTL           POINT TO CDQUECTL IN VLK00       13574040
         BR    GR15                    GO THERE                         13582040
         SPACE 1                                                        13600040
*                             IF LOAD MODULE IS IN MAIN STORAGE, AND    13608040
*                             ALIAS TO IT HAS BEEN  REQUESTED THIS      13616040
*                             SECTION IS ENTERED.                       13624040
         SPACE 1                                                        13632040
*/*RESOLVE: P SET R14= UNRELOCATED ENTRY POINT (SET R14= WKENTPT)*/     13650040
*/* S RELOCATE: SET R14= RELOCATED ENTRY POINT*/                        13658040
         SPACE 2                                                        13666040
RESOLVE  DS    0H                                                       13674040
         L     SUBREG1,WKENTPT-N1      LOAD ABSOLUTE ENTRY POINT        13682040
         BAL   COMREG,RELOCATE         RELOCATE ENTRY POINT             13700040
         SPACE 2                                                        13710040
*/* P SET NOT-IN-CORE BIT OFF IN REQUESTED CDE */                       13718040
*/* P STORE RELOCATED ENTRY POINT IN REQUESTED CDE (CDENTPT= R14)*/     13726040
         SPACE 2                                                        13734040
         NI    CDATTR,MAX-CDNIC        RESET NIC BIT                    13750040
         ST    SUBREG1,CDENTPT         STORE RELOCATED ENTRY POINT      13758040
         SPACE 2                                                        13766040
*/* P SET BASEREG (R6) FOR IEAVLK00*/                                   13774040
*/* R RETURN TO PLUSCONT IN IEAVLK00*/                                  13782040
*/* COMMENT (1,1) PLUSCONT WILL*/                                       13800040
*/* COMMENT (2,1) CONTINUE WITH*/                                       13808040
*/* COMMENT (3,1) THE ALLOCATION*/                                      13816040
*/* COMMENT (4,1) OF THE CDE*/                                          13824040
         SPACE 2                                                        13832040
         L     GR15,TABLEADD           POINT TO ADDRESS LIST IN VLK00   13850040
         L     BASEREG,CDLKBASE        SET UP VLK00 ADDRESSABILITY      13858040
         L     GR15,PLUSCONT           POINT TO PLUSCONT                13866040
         LR    R14,R15                 SET LOOP REGISTER FOR MAINLINE   13874040
         BR    GR15                    GO TO IT                         13882040
         EJECT                                                          13900040
*INTERFACE WITH PROGRAM FETCH IS SET UP. THE FOLLOWING IS REQUIRED      13908040
*        R5   - SVRB ADDRESS                                     YM8234 13916040
*        R6   - BASE (IEAVLK01)                                         13924040
*        R7   - DCB ADDRESS                                             13930040
*        R8   - DEB ADDRESS (INPUT)                                     13936040
*        R9   - 0                                                       13950040
*        R10  - SPID (EITHER 251 OR 252)                                13958040
*        R12  - RELOCATED ENTRY POINT PASSED  BACK                      13966040
*        R13  - WORK AREA                                               13974040
*        R14  - RETURN REG                                              13982040
*        R15  - RETURN CODE                                             14000040
*        MODE UPON ENTRY IS FULLY ENABLED.                              14008040
*FETCH WILL BUILD AN EXTENT LIST FOR WHICH CORE IS GOTTEN FROM SP=252   14016040
*A FLAG SET IN THE HI ORDER BYTE OF THE WORD WILL INDICATE THAT  FETCH  14024040
*HAS BUILT  THE EXTENT LIST AND IS REQUESTING MAIN STORAGE FOR  THE     14032040
*MODULE. THIS STORAGE WILL HAVE TO BE FREED IN CASE OF  ABEND IN FETCH. 14050040
         SPACE 1                                                        14058040
*/*PGMFETCH: P SET R9= ADDR OF CDE (VIA R11) IN COMP FORM FOR FETCH*/   14066040
*/* P SAVE DCB ADDRESS  (R10) IN WKDCBSE*/                              14074040
         SPACE 2                                                        14082040
PGMFETCH EQU   *                       INTERFACE TO FETCH               14100040
         LA    CDEREG,ZERO(CDEREG)     CLEAR HIGH ORDER BYTE            14110040
         LNR   GR9,CDEREG              COMP R9 AS INPUT TO FETCH        14118040
         ST    DCBREG,WKDCBSE          SAVE DCB ADDRESS IN W.A.         14126040
         SPACE 2                                                        14134040
*/* D (NO,DEBCHKON,YES,) SYSTEM REQUEST? (RBCSSYSR =1) */               14150040
*/* P SUPPRESS DEB CHECK BY SETTING FLAG WKSYSREQ ON IN FETCH W.A.*/    14158040
         SPACE 2                                                        14166040
         TM    RBCSFLG1,RBCSSYSR       Q. IS THIS A SYSTEM REQUEST      14174040
         BZ    DEBCHKON                A. NO-LET FETCH TO DO DEB CHECK  14182040
         OI    WKFLG1,WKSYSREQ         A. YES- SURPRESS FETCH DEB CHECK 14200040
         SPACE 2                                                        14208040
*/*DEBCHKON: P SET R7 = DCB ADDR (R7=R10)*/                             14216040
*/* P SET SUBPOOL ID = 251 (SET R10=251)*/                              14224040
         SPACE 2                                                        14232040
DEBCHKON LR    GR7,DCBREG              SAVE DCB ADDRESS                 14250040
         LA    GR10,SPNONREN           SET SUBPOOL ID = 251             14258040
         SPACE 2                                                        14266040
*/* D (NO,KETCHIT,YES,) MODULE RENTRANT? (CDREN VIA R11 =1) */          14274040
         SPACE 2                                                        14282040
         TM    CDATTR,CDREN            Q. IS MODULE REENTRABLE          14300040
         BZ    KETCHIT                 A=NO, TAKE BRANCH                14308040
         SPACE 2                                                        14316040
*/* D (NO,KETCHIT,YES,) AUTH LIB BIT ON (DEBAPFIN =1)*/                 14324040
         SPACE 2                                                        14334040
         USING DEBBASIC,DEBREG                                 @ZA28494 14344040
         TM    DEBFLGS1,DEBAPFIN       IS DEB AUTHORIZED?      @ZA28494 14353040
         BZ    KETCHIT                 NOT AUTH. - USE SP 251           14362040
         DROP  DEBREG                                          @ZA28494 14371040
         SPACE 2                                                        14400040
*/* D (NO,FETCHIT,YES,) IS TSO TEST IN PROCESS? (TCBTCP =1) */          14408040
         SPACE 2                                                        14416040
         TM    TCBTRN,TCBTCP           IS TEST BIT ON.                  14424040
         BZ    FETCHIT                 NO BRANCH USE SUBPOOL 252        14432040
         SPACE 2                                                        14450040
*/*D (NO,KETCHIT,YES,) SYSTEM REQUEST (RBCSSYSR =1) */                  14458040
         SPACE 2                                                        14466040
         TM    RBCSFLG1,RBCSSYSR       Q. IS THIS A SYSTEM REQ.         14474040
         BZ    KETCHIT                 Q. NO- USE SP 251                14482040
         SPACE 2                                                        14500040
*/*FETCHIT: P SET SUBPOOL ID = 252 (SET R10=252)*/                      14508040
*/* P TURN OFF JPA INDICATOR IN RQSTD CDE (SET CDJPA=0)*/               14516040
         SPACE 2                                                        14524040
FETCHIT  LA    GR10,SPRENT             SET SUBPOOL ID = 252             14532040
         NI    CDATTR,MAX-CDJPA        RESET JPA BIT IN CDENTRY         14550040
         SPACE 2                                                        14558040
*/*KETCHIT: L SETFRR-- REMOVE RECOVERY ROUTINE FROM STACK */            14566040
*/* P CLEAR FRR PARM LIST PTR (SET RBCSFRRA = 0)*/                      14574040
         SPACE 2                                                        14582040
KETCHIT  EQU   *                                                        14600040
         SETFRR D,WRKREGS=(11,12)                                       14608040
         SR    R11,R11                 CLEAR REG. TO ZERO PARM.         14616040
         ST    R11,RBCSFRRA            LIST ADDR.                       14624040
         SPACE 2                                                        14632040
*/* L SETLOCK-- FREE CMS LOCK OBTAINED BEFORE LPA SEARCH */             14650040
         SPACE 2                                                        14658040
         SETLOCK RELEASE,TYPE=CMS,RELATED=('FREED OVER FETCH')          14666040
         SPACE 2                                                        14674040
*/* L SETLOCK-- FREE LOCAL LOCK */                                      14682040
         SPACE 2                                                        14700040
         SETLOCK  RELEASE,TYPE=LOCAL,RELATED=('FREED OVER FETCH')       14708040
         SPACE 2                                                        14716040
*/* P SET R3= ADDR CVT & R13= FETWK ADDR FOR FETCH*/                    14724040
*/* $ */                                                                14732040
*/* COMMENT (5,1) FETCH INPUT--*/                                       14750040
*/* COMMENT (6,1) R5= SVRB ADDR*/                                       14758040
*/* COMMENT (7,1) R7=DCB ADDR*/                                         14766040
*/* COMMENT (8,1) R9=COMP CDE AD*/                                      14774040
*/* COMMENT (9,1) R10=SUBPOOL ID*/                                      14782040
*/* COMMENT (10,1) R13=FETWK ADDR*/                                     14800040
*/* COMMENT (11,1) R14=RET ADDR*/                                       14808040
*/* COMMENT (12,1) R15=FETCH EP*/                                       14816040
*/* L IEWMSEPT-- CAUSE FETCH TO BRING MODULE INTO STORAGE */            14824040
         SPACE 2                                                        14832040
         L     CVTREG,CVTPTR           GET CVT ADDRESS           MDC196 14850040
         L     GR13,RBCSWORK           GET FETCH WORKAREA               14858040
*                                                                YM8234 14866040
         L     GR15,CVTFETCH           R15-ENTRY POINT TO FETCH  MDC196 14874040
         BALR  GR14,GR15               GO TO PROGRAM FETCH              14882040
         SPACE 2                                                        14900040
*/* P RE-ESTABLISH BASEREG (R6) */                                      14908040
         SPACE 2                                                        14916040
         BALR  BASEREG,ZERO            ESTABLISH  BASE ADDRESSABILITY   14924040
         USING *,BASEREG               TEMPORARY BASE                   14932040
         L     BASEREG,LINKBASE        SET UP PERMANENT BASE VALUE      14950040
         USING IEAVLK01,BASEREG        SET BASE                         14958040
         SPACE 2                                                        14966040
*/* P CLEAR ABEND REGISTER (R13) */                                     14974040
*/* D (YES,,NO,FETCHOK) ANY ERRORS DURING FETCH? (R15 NOT 0)*/          14982040
*/* COMMENT (2,15) 106 ABEND IF*/                                       15000040
*/* COMMENT (3,15) FETCH ERROR*/                                        15008040
*/* S RERIG: SET ENVIRN INCL. FRR & LOCAL LOCK*/                        15016040
*/* P (,ERRFETCH) SET ABEND REGISTER R13 TO ZERO*/                      15024040
         SPACE 2                                                        15032040
         SR    R13,R13                 ZERO REG 13 FOR ERROR ROUTINE    15050040
         LTR   GR15,GR15               Q. ANY ERRORS IN FETCHING        15058040
         BZ    FETCHOK                 TO FETCHOK IF NO        @YA01851 15066040
         BAL   SUBREG1,RERIG           RESTORE REGS & LOC LOCK @YA01851 15074040
         L     AREAREG,RBCSWORK        LOAD FETCH WA ADDR      @ZA26977 15078040
         SR    R13,R13                 CLEAR ABEND REGISTER    @YA01851 15082040
         B     ERRFETCH                FETCH ERROR = 106       @YA01851 15100040
         SPACE 2                                                        15108040
*/* FETCHOK: P SAVE ENTRY POINT RETURNED BY FETCH (R15=R12)*/           15116040
*/* S RERIG:RESTORE REGS DESTROYED BY FETCH */                          15124040
*/* P PUT RELOCATED ENTRY POINT IN RQSTD CDE (CDENTPT= R15)*/           15132040
         SPACE 2                                                        15150040
FETCHOK  LA  SUBREG2,N0(GR12)      SAVE E.P. RETURNED BY FETCH @YA01851 15158040
         BAL   SUBREG1,RERIG           ROUTINE TO RESTORE REGS          15166040
         ST    SUBREG2,CDENTPT         STORE RELOCATED ENTRY POINT      15174040
         SPACE 1                                                        15182040
*        APF CHECKING FOR FETCHED MODULE.  MODULE WILL BE AUTHORIZED IF 15200040
*        IT CAN PASS RIGID QUALIFICATIONS.                              15208040
*/* P SET R1= ADDR OF MAJOR CDE (R1=R12)*/                              15216040
*/* P SET AREAREG= ADDR FETWK (R7= RBCSWORK)*/                          15224040
         SPACE 2                                                        15232040
         LR    R1,CDIREG               GET MAJOR ADDRESS                15250040
         L     AREAREG,RBCSWORK        LOAD FETCH WA ADDR               15255040
         SPACE 2                                                        15266040
*/*APFOFF: P TURN OFF AUTHORIZATION FLAG (CDAUTH) IN CDE VIA R1*/       15274040
*/* P GET NEXT CDE (SET R1= CDCHAIN OF RB VIA R1)*/                     15282040
*/* D (YES,ALLDONE,NO,) END OF CDE QUEUE? (R1=0)*/                      15300040
*/* D (YES,APFOFF,NO,) IS CDE A MINOR? (CDMIN=1)*/                      15308040
         SPACE 2                                                        15316040
APFOFF   EQU   *                       TURN OFF APF IN MAJOR AND MINORS 15324040
         NI    CDATTR2-CDENTRY(R1),MAX-CDAUTH TURN OF AUTHORIZATION     15332040
         ICM   R1,MASK,CDCHAIN+N1-CDENTRY(R1) GET NEXT CDE              15350040
         BZ    ALLDONE                 IF END OF QUEUE, LEAVE LOOP      15358040
         TM    CDATTR-CDENTRY(R1),CDMIN IS CDE A MONOR                  15366040
         BO    APFOFF                  YES, TURN OFF BIT                15374040
*                                      END OF LOOP WHEN NEXT MAJOR      15382040
         SPACE 2                                                        15400040
*/*ALLDONE: P RESET CVT POINTER IN CVTREG  (R3) */                      15408040
*/* D (NO,JSCBOFF,YES,) LIBRARY AUTHORIZED? (WKAUTH=1)*/                15416040
*/* COMMENT (1,1) WKAUTH BIT IS*/                                       15424040
*/* COMMENT (2,1) SET BY FETCH*/                                        15432040
*/* COMMENT (3,1) VIA A DEB BIT*/                                       15450040
         SPACE 2                                                        15458040
ALLDONE  EQU   *                       END OF BIT OFF LOOP              15466040
         USING CVT,CVTREG              SET ADDRESSABLE                  15474040
         L     CVTREG,CVTPTR           RESET CVT REGISTER               15482040
         TM    WKFLG1,WKAUTH           Q. LIB AUTHORIZED                15500040
         BZ    DSS06                   NO - CONTINUE           @ZA24461 15508040
         SPACE 2                                                        15516040
*/* D (NO,SETAUTHL,YES,) IS MOD. REENTRANT? (CDREN =1)*/                15524040
         SPACE 2                                                        15532040
         TM    CDATTRJ,CDREN           Q. IS MODULE REENTRABLE          15550040
         BZ    SETAUTHL                NO - SET AUTH. LIB INDIC.        15558040
         SPACE 2                                                        15566040
*/* D (NO,SETAUTHL,YES,) MODULE IN JPA? (CDJPA =1)*/                    15574040
         SPACE 2                                                        15582040
         TM    CDATTRJ,CDJPA           Q. JPA MOD CAN NOT BE AUTH.      15600040
         BZ    SETAUTHL                LIB. IN ANY CASE.                15608040
         SPACE 2                                                        15616040
*  IF REENT. AND SP 251, A DESCREPENCY EXISTS.  IF TEST IS IN CONTROL   15624040
*  TURN OFF INDICATOR AND CONTINUE.  IF NOT ISSUE A 306 ABEND.          15632040
*/* D (NO,,YES,DSS06) TSO TEST IN CONTROL? (TCBTCP =1)*/                15650040
*/* P CLEAR ABEND REGISTER (R13)*/                                      15658040
*/* P (,ERRSYSR) SET RETURN CODE = X'0C' IN R15*/                       15666040
         SPACE 2                                                        15674040
         TM    TCBTRN,TCBTCP            Q. TEST IN CONTROL              15682040
         BO    DSS06                    A. YES- CONTINUE                15700040
         SR    R13,R13                  CLEAR ABEND REG                 15708040
         LA    R15,N12                  SET REASON CODE                 15716040
         B     ERRSYSR                  ISSUE ABEND                     15724040
         SPACE 2                                                        15732040
*/*SETAUTHL: P SET AUTH LIB INDICATOR (CDSYSLIB) IN MAJOR CDE */        15750040
         SPACE 2                                                        15758040
SETAUTHL OI    CDATTR2J,CDSYSLIB       INDICATE LIBRARY AUTH. IN MAJOR  15766040
         SPACE 2                                                        15774040
*/*APF02 D (NO,DSS06,YES,) AOS LINKEDIT? (PDSAOSLE =1) */               15782040
         SPACE 2                                                        15800040
APF02    DS    0H                      CHECK PDS AUTHORIZATION          15808040
         USING PDS2-WKNAME+WKAREA,AREAREG POINT TO PDS IN FETCH W.A.    15816040
         TM    PDS2FTB1,PDSAOSLE       IS IT AOS LINK EDIT              15824040
         BNO   DSS06                   NO, CANT AUTHORIZE               15832040
         SPACE 2                                                        15850040
*/* D (NO,DSS06,YES,) LINKEDITED WITH APF ATTR (PDSAPFLG =1)*/          15858040
         SPACE 2                                                        15866040
         TM    PDS2FTB1,PDSAPFLG       CHECK FOR APF INFO               15874040
         BZ    DSS06                   IF NONE, CANT AUTHORIZE          15882040
         SPACE 2                                                        15900040
*/* P GET END OF BASIC PDS SECTION */                                   15908040
         SPACE 2                                                        15916040
         LA    R14,PDSBCEND            POINT TO APF IF COMMON SECTION   15924040
*                                      ONLY. WILL ADD OFFSETS FOR EACH  15932040
*                                      ADDITIONAL SECTION PRESENT       15950040
         SPACE 2                                                        15958040
*/* D (NO,APF05,YES,) SCATTER INFO. IN PDS (PDS2SCTR =1)*/              15966040
*/* P ADD LENGTH OF SCATTER SECTION OF PDS */                           15974040
         SPACE 2                                                        15982040
         TM    PDS2ATR,PDS2SCTR        CHECK FOR SCATTER SECTION        16000040
         BNO   APF05                   IF NONE, SKIP ADD                16008040
         LA    R14,PDSS01LN(R14)       ADDD SCATTER SIZE                16016040
         SPACE 2                                                        16024040
*/*APF05: D (NO,APF06,YES,) LINKEDITED WITH ALIAS (PDS2ALIS =1)*/       16032040
*/* P ADD LENGTH OF ALIAS SECTION OF PDS */                             16050040
         SPACE 2                                                        16058040
APF05    EQU   *                       SKIP SCATTER LABEL               16066040
         TM    PDS2INDC,PDS2ALIS       CHECK FOR ALIAS SECTION          16074040
         BNO   APF06                   IF NONE, SKIP ADD                16082040
         LA    R14,PDSS02LN(R14)       ADD ALIAS LENGTH                 16100040
         SPACE 2                                                        16108040
*/*APF06: D (NO,APF08,YES,) ANY SSI INFO (PDS2SSI =1)*/                 16116040
*/* P ROUND UP TO HALFWORD ALIGNMENT AND ADD SSI SIZE */                16124040
         SPACE 2                                                        16132040
APF06    EQU   *                       ALIAS SKIP LABEL                 16150040
         TM    PDS2FTB1,PDS2SSI        CHECK FOR SSI                    16158040
         BNO   APF08                   IF NONE, SKIP ADD                16166040
         LA    R14,N1(R14)             ROUND UP TO HALFWORD             16174040
         N     R14,APFROUND            BOUNDARY ALIGNMENT               16182040
         LA    R14,PDSS03LN(R14)       ADD SSI SIZE                     16200040
         SPACE 2                                                        16210040
*/*APF08: P GET APF INFORMATION FROM PDS */                             16218040
*/* D (NO,DSS06,YES,) MODULE AUTHORIZED (PDSAPF =1)*/                   16226040
*/* P SET R1= CDE ADDR (R1=R12)*/                                       16234040
         SPACE 2                                                        16250040
APF08    EQU   *                       SKIP SSI LABEL                   16258040
         OC    PDSAPFAC-PDSAPF(APFLN,R14),PDSAPFAC-PDSAPF(R14) @ZA08130 16262040
*                                      TEST APF FLAGS FOR ZERO @ZA08130 16266040
         BZ    DSS06                   NOT AUTHORIZED, SKIP SETTINGS    16300040
         LR    R1,CDIREG               GET MAJOR CDE                    16308040
         SPACE 2                                                        16316040
*/*APFON: P SET AUTH. IND. ON IN CDE VIA R1 (CDAUTH =1)*/               16324040
*/* P SET R1= NEXT CDE (R1= CDCHAIN OF RB VIA R1)*/                     16332040
*/* D (YES,DSS06,NO,) END-OF-QUEUE? (R1=0) */                           16350040
*/* D (NO,DSS06,YES,APFON) CDE A MINOR? (CDMIN =1) */                   16358040
         SPACE 2                                                        16366040
APFON    EQU   *                       SET ALL CDES AUTHORIZED          16374040
         OI    CDATTR2-CDENTRY(R1),CDAUTH TURN ON AUTH BIT              16382040
         ICM   R1,MASK,CDCHAIN+N1-CDENTRY(R1) GET NEXT CDE ADDR         16400040
         BZ    DSS06                   NONE LEFT, LEAVE                 16410040
         TM    CDATTR-CDENTRY(R1),CDMIN IF THIS IS A MINOR CDE          16418040
         BO    APFON                   SET IT AUTHORIZED                16425040
         DROP  AREAREG                 DROP PDS                         16790040
         USING WKAREA,AREAREG          RESET WORKAREA ADDRESSING        16799040
         EJECT                                                          16808040
* THE FOLLOWING INSTRUCTION IS THE INTERFACE TO DSS FROM CONTENTS       16817040
*  SUPERVISION.  THE REGISTERS MUST BE SET UP AS FOLLOWS -              16826040
*  REGISTER  4 = ADDRESS OF TCB                                         16835040
*  REGISTER 11 = ADDRESS OF MINOR CDE IF ONE EXISTS,ELSE MAJOR CDE      16844040
*  REGISTER 12 = ADDRESS OF MAJOR CDE                                   16853040
         SPACE 2                                                        16862040
*/*DSS06: L DSS-- IF DSS ACTIVE GIVE IT CONTROL */                      16871040
*/* $ */                                                                16880040
*/* COMMENT (6,3) DSS INTERFACE---*/                                    16889040
*/* COMMENT (7,3) R4=TCB ADDR*/                                         16898040
*/* COMMENT (8,3) R11=MINOR CDE ADDR*/                                  16907040
*/* COMMENT (9,3) R12=MAJOR CDE ADDR*/                                  16916040
DSS06     BCR    N0,N0                   RESERVED                       16950040
         SPACE 1                                                        16958040
*  TEST IF ISSUER IS AN SVRB.IF IT IS THEN BYPASS TESTING               16966040
*  BIT IN THE TCB FOR USING TESTRAN. IF ISSUER IS NOT AN SVRB,          16974040
*  THEN TEST BIT IN TCB FOR TEST COMMAND. IF TEST BIT IS ON,            16982040
*  TESTRAN IS TO BE USED WHETHER OR NOT THE TEST ATTRIBUTE IS           17000040
*  INDICATED IN THE DIRECTORY.                                          17010040
*/* D (YES,CKTESTON,NO,) RB POINT TO TCB ? */                           17020040
*/* P SET R1= ADDR OF CALLING RB (VIA RBLINK OF PM SVRB)*/              17027040
*/* D (YES,OKLAHOME,NO,) CALLER AN SVRB? */                             17034040
         SPACE 2                                                        17050040
         TM    RBSTAB2-RBSECT(RBREG),RBTCBNXT  RBPOINT TO TCB  @ZA03829 17058040
         BO    CKTESTON                YES-CHECK FOR TSO TEST  @ZA03829 17066040
         L     R1,RBLINKZ(RBREG)       GET RB LINK FIELD                17074040
         TM    RBSTABZ(R1),RBFTSVRB    IS ISSUER AN SVRB                17082040
         BO    OKLAHOME                YES BYPASS TESTING BIT IN TCB    17100040
         SPACE 2                                                        17108040
*/*CKTESTON: D (YES,TESTON,NO,) IS TSO TEST IN CONTROL? (TCBTCP=1)*/    17116040
         SPACE 2                                                        17124040
CKTESTON TM    TCBTRN,TCBTCP           IS TEST BIT ON                   17132040
         BO    TESTON                  IF ON SKIP DE CHECKING           17150040
*/* D (YES,OKLAHOME,NO,) IS IT NIP? */                                  17151040
         USING CVT,CVTREG              SET ADDRESSABILITY    @ZA07512   17152040
         L     CVTREG,CVTPTR           RESET CVT REGISTER    @ZA07512   17153040
         TM    CVTOPTA-CVT(CVTREG),CVTNIP IS IT NIP?         @ZA07512   17154040
         BO    OKLAHOME                YES-SKIP TSO TEST SVC @ZA07512   17155040
         SPACE 2                                                        17160040
*/* D (NO,OKLAHOME,YES,) MOD LKED WITH TEST OPTION? (PDS2TEST =1)*/     17168040
         SPACE 2                                                        17176040
         TM    WKATTR,PDS2TEST         IS DE MARKED TEST                17184040
         BNO   OKLAHOME                IF NOT SKIP TESTRAN              17200040
         SPACE 1                                                        17210040
*********************************************************************** 17220040
*/*TESTON: L SETFRR-- REMOVE RECOVERY ROUTINE BEFORE SVC */             17227040
*/* P CLEAR FRR PARM LIST PTR (SET RBCSFRRA =0)*/                       17234040
         SPACE 2                                                        17250040
TESTON   EQU   *                       INTERFACE WITH TESTRAN           17258040
         LR    R1,R12                  SAVE CDE ADDR.                   17266040
         SETFRR D,WRKREGS=(11,12)                                       17274040
         SR    R11,R11                 CLEAR REG. FOR ZEROING           17282040
         ST    R11,RBCSFRRA            PARM. LIST AREA                  17300040
         SPACE 2                                                        17308040
*/* L SETLOCK-- FREE LOCAL LOCK BEFORE SVC */                           17316040
         SPACE 2                                                        17324040
         SETLOCK  RELEASE,TYPE=LOCAL,RELATED=('FREED OVER SVC 61')      17332040
         SPACE 2                                                        17350040
*/* P SET R1 (VIA WKDCBSE) =COMP DCB ADDR FOR TEST SVC */               17358040
*/* $ */                                                                17366040
*/* COMMENT (5,3) TSO INTERFACE---*/                                    17374040
*/* COMMENT (6,3) R1=COMP DCB ADDR*/                                    17382040
*/* COMMENT (7,3) R3=CVT ADDR*/                                         17400040
*/* COMMENT (8,3) R4=TCB ADDR*/                                         17408040
*/* COMMENT (9,3) R5=SVRB ADDR*/                                        17416040
*/* COMMENT (10,3) SVRB+X'74'=FETWK ADDR*/                              17424040
*/* COMMENT (11,3) WKCDADDR=RQSTD CDE ADDR*/                            17432040
*/* COMMENT (12,3) WKNAME=RQSTD NAME*/                                  17450040
*/* L SVC 61 (TEST)-- CALL TSO TEST SVC */                              17458040
         SPACE 2                                                        17466040
         L     R1,WKDCBSE              PICK UP DCB ADDR FROM FETCH WORK 17474040
*                                      AREA . DCB ADDR IS IN IOB .      17482040
*        IKJEGS6A CNTSUP,PARAM=(1)    CALL SVC 61-TSO TEST              17500040
         LNR   R1,R1                                                    17510040
         SVC   TTSAVE                  CALL TEST SVC                    17520040
         SPACE 2                                                        17527040
*/* S RERIG:SET ENVIRONMENT INCL. FRR AND LOCAL LOCK */                 17534040
         SPACE 2                                                        17550040
         BAL   SUBREG1,RERIG           RELOAD REGS 11 & 12              17559040
         SPACE 2                                                        17568040
*/*OKLAHOME: P TURN NIC (NOT-IN-CORE) BIT OFF IN MAJOR CDE */           17577040
*/* D (YES,ISLOAD,NO,) REQUEST FOR LOAD? (RBCDLOAD =1) */               17586040
*/* P SET NOT-FUNCTIONAL FLAG IN RQSTD CDE */                           17595040
         SPACE 2                                                        17604040
OKLAHOME NI    CDATTRJ,MAX-CDNIC       RESET NIC FLAG IN MAJOR.         17613040
         TM    RBCDFLGS,LOAD           LOAD REQUEST.                    17622040
         BO    ISLOAD                  BYPASS SETT'G NFN IF YES.        17631040
         OI    CDATTR,CDNFN            SET NFN FLAG.                    17650040
         SPACE 2                                                        17658040
*/*ISLOAD: D (NO,CDFOLDUP,YES,) ALIAS REQUEST? (CDMIN =1 IN RQSTD       17666040
*/*CDE)*/                                                               17674040
         SPACE 2                                                        17682040
ISLOAD   TM    CDATTR,CDMIN            TEST  IF ALIAS HANDLING CURRENT  17700040
         BNO   CDFOLDUP                NO, BRANCH                       17710040
         EJECT                                                          17720040
*THE FUNCTION OF THE FOLLOWING ROUTINE IS TO  COMPLETE THE CDENTRY      17727040
*CREATED FOR THE MAIN NAME OF THE MODULE JUST FETCHED. THE ENTRY POINT  17734040
*TO THE  MAIN NAME MUST BE RELOCATED AND THE NOT IN CORE (NIC) FLAG     17750040
*RESET TO ZERO.                                                         17758040
*                                                                       17766040
* IF A REQUEST IS MADE FOR A MODULE BY A MINOR NAME, AND THE            17774040
* MODULE MUST BE BROUGHT INTO CORE, THE MINOR ENTRY POINT IS            17782040
* RELOCATED BY FETCH.  THE RLC BIT IS TURNED ON IN THE CDATTR2          17800040
* FIELD.  THIS BIT IS NOT TURNED ON IF QLK RELOCATES THE MINOR          17808040
* ENTRY POINT IN THE CDFOLDUP SUBROUTINE.                               17816040
* THE CDFOLDUP ROUTINE RELOCATES MINOR ENTRY POINTS IF THE              17824040
* MODULE WAS INITIALLY REQUESTED BY A DIFFERENT NAME.                   17832040
*                                                                       17850040
*        REGISTER USAGE                                                 17860040
*        R3 - ALTERED                                                   17868040
*        R6 - BASE (IEAVLK01)                                           17876040
*        R7 - BLDL FETCH WORK AREA (INPUT)                              17884040
*        R11- REQUESTED CDE (INPUT)                                     17900040
*        R12- MAJOR CDE (INPUT)                                         17909040
*        R14- ALTERED                                                   17918040
*        OTHER REGISTERS NOT REFERENCED                                 17927040
         SPACE 1                                                        17936040
*/* P SET R14= MAJOR ENTRY POINT */                                     17945040
*/* S RELOCATE:RELOCATE THE ENTRY POINT (R14= WKMAINEP)*/               17954040
*/* P PUT RELOCATED ENTRY POINT IN MAJOR CDE FIELD CDENTPT */           17963040
*/* P SET NIC (NOT-IN-CORE) BIT OFF IN RQSTD CDE */                     17972040
*/* P SET RELOCATED ENTRY POINT BIT (CDRLC) ON IN RQSTD CDE */          17981040
         SPACE 2                                                        17990040
         L     SUBREG1,WKMAINEP        LOAD ENTRY POINT OF MAIN NAME    17999040
         BAL   COMREG,RELOCATE         GO TO ROUTINE TO CALCULATE       18008040
*                                      RELOCATED ENTRY POINT ADDRESS.   18017040
         ST    SUBREG1,CDENTPTJ        STORE RELOCATED ENTRY POINT      18026040
*                                      IN CDENTRY                       18035040
         NI    CDATTR,MAX-CDNIC        RESET NIC FLAG IN MINOR CDE      18044040
         OI    CDATTR2,CDRLC           SET FLAG TO INDICATE RELOCATED   18053040
*                                      MINOR BY FETCH.                  18062040
         EJECT                                                          18071040
* RELOCATE ENTRY POINTS OF QUEUED MINORS.                               18100040
* A MODULE IS REQUESTED BY A MINOR NAME.  THE MAJOR NAME IS             18108040
* FOUND TO BE IN CORE BUT THE REQUESTOR IS WAITING ON I/O.              18116040
* THE REQUESTOR OF THE MINOR NAME IS QUEUED UP.  WHEN THE MAJOR         18124040
* REQUESTOR REGAINS CONTROL, THE QUEUED MINOR CDE ENTRY POINTS          18132040
* ARE RELOCATED HERE, AND THE QUEUED REQUESTORS ARE DEQUEUED            18150040
* UNDER THE DQLOAD SUBROUTINE.                                          18158040
*                                                                       18166040
*        REGISTER USAGE                                                 18174040
*        R1   - CHANGED                                                 18182040
*        R3   - CHANGED                                                 18200040
*        R5   - SVRB (INPUT)                                            18210040
*        R6   - BASE (IEAVLK01)                                         18220040
*        R9,10- CHANGED                                                 18227040
*        R12  - MAJOR CDE (INPUT)                                       18234040
*        R15  - ALTERED                                                 18250040
*        OTHER REGISTERS NOT REFERENCED                                 18258040
         SPACE 1                                                        18266040
*/*CDFOLDUP: P SET R1= MAJOR CDE ADDR (R1=R12) */                       18274040
         SPACE 2                                                        18282040
CDFOLDUP DS    0H                      QUEUED MINORS                    18300040
         DROP  CDEREG                  RESET CDE BASE                   18310040
         USING CDENTRY,R1              RESET CDE BASE                   18320040
         LR    R1,R12                  LOAD MAJ CDE IN REG 1.           18327040
         SPACE 2                                                        18334040
*/*CD02: P SET R1= NEXT CDE ON QUEUE (R1= CDCHAIN OF CDE VIA R1)*/      18350040
*/* D (YES,CD01,NO,) END OF QUEUE? (R1=0) */                            18358040
         SPACE 2                                                        18366040
CD02     DS    0H                      RELOCATE LOOP                    18374040
         L     R1,CDCHAIN              GET NEXT CDE ON QUEUE.           18382040
         LTR   R1,R1                   TEST OF END OF QUEUE             18400040
*                                      Q. END OF QUEUE.                 18408040
         BZ    CD01                    BR IF YES.                       18416040
         SPACE 2                                                        18424040
*/* D (NO,CD01,YES,) MINOR CDE? (CDMIN =1) */                           18432040
         SPACE 2                                                        18450040
         TM    CDATTR,CDMIN            Q. IS CDE A MIN.                 18458040
         BZ    CD01                    BR IF NOT.                       18466040
         SPACE 2                                                        18474040
*/* D (YES,CD02,NO,) MINOR RELOCATED BY FETCH? (CDRLC =1)*/             18482040
         SPACE 2                                                        18500040
         TM    CDATTR2,CDRLC           Q.MINOR EP RELOC. BY FETCH       18508040
         BO    CD02                    BR IF YES.                       18516040
         SPACE 2                                                        18524040
*/* P SET R14= UN-RELOCATED ENTRY POINT FROM CDENTPT*/                  18532040
*/* S RELOCATE:RELOCATE THE ENTRY POINT */                              18550040
*/* P TURN NIC (NOT-IN-CORE) BIT OFF IN CDE */                          18558040
*/* P (,CD02) PUT RELOCATED ENTRY POINT IN CDE (CDENTPT = R14) */       18566040
         SPACE 2                                                        18574040
         L     R14,CDENTPT             GET UNRELOCATED E.P.             18582040
         BAL   COMREG,RELOCATE         TO RELOCATE EP.                  18600040
         NI    CDATTR,MAX-CDNIC        RESET NIC FLAG IN MINOR CDE.     18608040
         ST    R14,CDENTPT             SET RELOCATED EP IN MIN CDE.     18616040
         B     CD02                    LOOP TO PROCESS ALL MINORS       18624040
         DROP  R1                      RESET CDE BASE                   18632040
         USING CDENTRY,CDEREG          RESET CDE BASE                   18650040
         SPACE 2                                                        18658040
*/*CD01: P CLEAR QUEUE HEAD FIELD (CDRRBP) OF MAJOR CDE*/               18666040
*/* P INITIALIZE R9 FOR DQLOAD (R9=ADDR. OF SVRB) */                    18674040
*/* S DQLOAD:DEQUEUE ANY WAITING REQUESTS */                            18682040
         SPACE 2                                                        18700040
CD01     DS    0H                      END OF CDES                      18708040
         SR    WKREG2,WKREG2           ZERO TO INITIALIZE A FIELD       18716040
         ST    WKREG2,CDRBPJ           ZERO OUT QUEUE HEAD              18724040
*                                      PRIOR TO DQLOAD                  18732040
         LR    GR9,RBREG               SET REGISTER FOR DQLOAD          18750040
         BAL   SUBREG2,DQLOAD          GO DEQUEUE ALL REQUESTERS        18758040
         SPACE 2                                                        18766040
*/*CDMRGRET: P SET BASEREG (R6) FOR IEAVLK00 */                         18774040
*/* R RETURN TO CDMERGE IN IEAVLK00 */                                  18782040
         SPACE 2                                                        18800040
CDMRGRET L     GR15,TABLEADD           POINT TO ADDRESS TABLE           18808040
         USING ADDRTAB,GR15            ADDRESSABILITY ON ADDRESS LIST   18816040
         L     BASEREG,CDLKBASE        SET UO VLK00 ADDRESSABILITY      18824040
         L     GR15,CDEMERGE           POINT TO CDEMERGE                18832040
         BR    GR15                    GO TO CDEMERGE IN VLK00          18850040
         EJECT                                                          18858040
*****  DQLOAD SUBROUTINE  *************************************         18866040
*                                                                       18874040
* THIS SECTION IS EXECUTED AFTER A MODULE HAS BEEN FETCHED . IT WILL    18882040
* CHECK IF A QUEUE HAS FORMED WHILE THE MODULE WAS BEING FETCHED, AND   18900040
* IF SO WILL EMPTY THE QUEUE BY MAKING ALL RB'S READY AND STORE INTO    18908040
* THE RBOPSW LOCATION THE ADDRESS OF CDCONTRL. A TEST OF PRIORITIES     18916040
* IS MADE TO DETERMINE IF ANY QUEUE'D RB HAS A TASK PRIORITY HIGHER     18924040
* THAN THE CURRENT, IF SO CONTROL WILL SUBSEQUENTLY BE RELINQUISHED     18932040
* TO THE HIGHER PRIORITY TASK.                                          18950040
*                                                                       18958040
* DQLOAD GETS INFORMATION STORED INTO THE CDE BY THE CDQUECTL           18966040
* SUBROUTINE.                                                           18974040
*                                                                       18982040
* NOTE - IT IS THE RESPONSIBILITY OF THE CALLER OF THIS                 19000040
*        SUBROUTINE TO ZERO OUT THE QUEUE HEAD OF THE WAIT              19008040
*        QUEUE. THE QUEUE STARTS AT THE CDE (CDRBP FIELD).              19016040
*                                                                       19024040
*        REGISTER USAGE                                                 19032040
*        R3  - CVT OR LEFT AS ON INPUT (OUTPUT)                         19050040
*        R5  - SVRB (INPUT)                                             19058040
*        R6  - BASE (IEAVLK01)                                          19066040
*        R9  - INPUT RB (ALTERED ON OUTPUT)                             19074040
*        R10 - ALTERED                                                  19082040
*        R11 - REQUESTED CDE (INPUT)                                    19100040
*        R14 - ALTERED                                                  19108040
*        R15 - RETURN ADDRESS (INPUT)                                   19116040
*        OTHER REGISTERS NOT REFERENCED                                 19124040
         SPACE 1                                                        19132040
*/*DQLOAD: E DQLOAD */                                                  19150040
*/* P SAVE CDE ADDRESS (R11) IN RBCSGR0 */                              19158040
*/* P SAVE CALLERS RETURN ADDRESS (R15) IN RBCSR15 */                   19166040
*/* CARRYON: P GET ADDR OF RB TO BE DEQUEUED (R10= RBPGMQ OF RB VIA R9) 19174040
*/* */                                                                  19182040
*/* D (YES,,NO,PACOUT) ANY RBS TO BE DEQUEUED (R10 NOT 0)*/             19200040
         SPACE 2                                                        19208040
DQLOAD   ST    CDEREG,RBCSGR0          PRESERVE CDE ADDR OVER INTERFACE 19216040
         ST    R15,RBCSGR15            SAVE RETURN ADDR.                19224040
CARRYON  ICM   NEXT,MASK4,RBPGMQZ(LAST) LAST = ADDR OF INPUT RB         19232040
*                                      TO BE DEQUEUED                   19250040
*                                      Q. ANY RB'S Q'D OFF INPUT RB     19258040
         BZ    PACOUT                  A= NO  TAKE BRANCH               19266040
         SPACE 2                                                        19274040
*/* P CLEAR RBPGMQ FIELD OF RB VIA R9 */                                19282040
*/* P SET R9=R10*/                                                      19300040
*/* P PUT ADDRESS OF RESTART ROUTINE (IEAQCS02) IN RESUME PSW OF RB VIA 19308040
*/* R9 */                                                               19316040
*/* P INITIALIZE FOR POST W/O ECB- R10=RB ADDR, R11=0, R14= RETURN      19324040
*/*ADDR*/                                                               19332040
         SPACE 2                                                        19350040
         XC    RBPGMQ1Z(ADDL,LAST),RBPGMQ1Z(LAST) A= YES CLEAR RBPGMQ   19360040
         LR    LAST,NEXT               SAVE REG 10 OVER ROUTINE         19368040
         MVC   RBOPSWZR(WORD,LAST),CONTRLA SET UP ADDR IN PSW           19376040
         SR    GR11,GR11               INDICATE PRESENT ADDRESS SPACE   19384040
         SPACE 2                                                        19400040
*/* L POST W/O ECB (BR ENTRY)-- POST THE WAITING RB */                  19410040
         SPACE 2                                                        19418040
         L     CVTREG,CVTPTR           INSURE CVT IN REG.               19426040
         L     R15,CVT0PT01            GET ADDRESS OF POST              19434040
         BALR  R14,R15                 GO TO POST W/O ECB               19450040
         SPACE 2                                                        19458040
*/* P (,CARRYON) CLEAR CDE POINTER IN POSTED RB (SET RBCDE1 =0)*/       19466040
         SPACE 2                                                        19474040
         XC    RBCDEAZ(ADDL,LAST),RBCDEAZ(LAST)  ZERO RBCDE             19482040
         B     CARRYON                 RETRY TEST FOR MORE              19500040
*                                      RB'S ON THE QUEUE                19508040
         SPACE 2                                                        19516040
*/*PACOUT: P RESTORE CDE REGISTER (R11) FROM RBCSGR0*/                  19524040
*/* P RESTORE CALLERS RETURN ADDRESS (R15) FROM RBCSGR15*/              19532040
*/* R RETURN TO CALLER VIA R15*/                                        19550040
         SPACE 2                                                        19558040
PACOUT   L     CDEREG,RBCSGR0          RESTORE CDEREG                   19566040
         L     R15,RBCSGR15            RESTORE RETURN ADDRESS           19574040
         BR    SUBREG2                 RETURN                           19582040
         EJECT                                                          19600040
*REGISTERS 4,5,11,12, ARE INITIALIZED IN THIS ROUTINE TO                19610040
*              4 = TCB                                                  19620040
*              5 = RB         THIS ROUTINE IS USED TO RESTORE REGISTERS 19630040
*              11= MINOR CDE  THAT ARE CHANGED OVER  BLDL AND FETCH     19640040
*              12= MAJOR CDE                                            19650040
*              6 = BASE (IEAVLK01)                                      19658040
*              2,13= ALTERED                                            19666040
*              14= RETURN REGISTER (INPUT)                              19674040
*              OTHER REGISTERS NOT USED                                 19682040
         SPACE 1                                                        19700040
*/*RERIG: E RERIG */                                                    19710040
*/* P SET TCBREG (R4) =ADDR OF TCB VIA PSATOLD*/                        19720040
*/* P SET RBREG (R5) = ADDR OF SVRB VIA TCBRBP*/                        19727040
         SPACE 2                                                        19734040
RERIG    L     TCBREG,PSATOLD          LOAD ADDRESS OF CURRENT TCB      19750040
         L     RBREG,TCBRBP            LOAD ADDRESS OF CURRENT RB       19760040
         SPACE 2                                                        19770040
*/* P SAVE RETURN ADDRESS (SET R2=R14)*/                                19777040
*/* L SETLOCK-- GET LOCAL LOCK */                                       19784040
         SPACE 2                                                        19800040
         LR    WKREG2,SUBREG1          SAVE RETURN REGISTER             19810040
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        x19818040
               RELATED=('OBTAINS LOCK AFTER FETCH OR SVC 61')           19826040
         SPACE 2                                                        19834040
*/* L SETFRR-- ESTABLISH RECOVERY ROUTINE */                            19842040
*/* P SET RBCSFRRA = ADDR OF FRR PARM LIST*/                            19860040
*/* P SET 1ST WORD OF FRR PARM LIST = PM SVRB ADDR*/                    19868040
*/* P RESTORE RETURN ADDRESS (SET R14=R2)*/                             19876040
         SPACE 2                                                        19884040
         SETFRR A,FRRAD=FRRPGM,WRKREGS=(11,12),PARMAD=(13)              19904040
         ST    R13,RBCSFRRA            SAVE PARM. LIST ADDRESS          19910040
         ST    RBREG,N0(R13)           SAVE CURRENT RB (SVRB)           19919040
         LR    SUBREG1,WKREG2          RESTORE RETURN REGSITER          19928040
         SPACE 2                                                        19937040
*/* P SET CDEREG = ADDR OF RQSTD CDE (R11= RBCDE1)*/                    19946040
*/* P SET CDIREG = ADDR OF RQSTED CDE (R12=R11)*/                       19955040
*/* D (YES,,NO,%XOUT) RQSTD CDE A MINOR (CDMIN =1)*/                    19964040
*/* P SET R12= ADDR OF MAJOR CDE VIA CDXLMJP OF MINOR*/                 19973040
*/* %XOUT: R RETURN TO CALLER */                                        19982040
         SPACE 2                                                        20000040
         L     CDEREG,RBCDFLGS         PICK UP CDENTRY ADDRESS          20008040
         LA    CDEREG,N0(CDEREG)       CLEAR CDE FLAGS                  20016040
         LR    CDIREG,CDEREG           SET MAJOR EQUAL MINOR            20024040
         TM    CDATTR,CDMIN            Q.IS AN ALIAS REQUEST CURRENT    20032040
         BCR   EQZER,SUBREG1           A=NO, RETURN                     20050040
         L     CDIREG,CDXLMJP          PICK UP MAJOR CDE ADDRESS        20058040
         BR    SUBREG1                 RETURN                           20066040
         EJECT                                                          20074040
*RELOCATE SUBROUTINE TAKES AN ENTRY POINT  TO A MODULE THAT HAS PREVIOU 20082040
*SLY BEEN FETCHED AND ADDS A RELOCATION  FACTOR TO PRODUCE A RELOCATED  20100040
*ENTRY POINT.                                                           20108040
*                                                                       20116040
*        REGISTER USAGE                                                 20124040
*        R3  - RETURN REGISTER (INPUT)                                  20132040
*        R12 - MAJOR CDE (INPUT)                                        20150040
*        R14 - ENTRY POINT (UNRELOCATED ON INPUT,                       20158040
*                             RELOCATED ON OUTPUT)                      20166040
*        R15 - ALTERED                                                  20174040
*        OTHER REGISTERS NOT REFERENCED                                 20182040
         SPACE 1                                                        20200040
*/*RELOCATE: E RELOCATE */                                              20208040
*/* P GET EXTENT LIST ADDRESS FROM CDXLMJP OF MAJOR*/                   20216040
*/* P SET R14= RELOCATED EP (R14= UNRELOCATD EP + LOAD ADDR IN XL*/     20224040
*/* R RETURN TO CALLER VIA R3 */                                        20232040
         SPACE 2                                                        20250040
RELOCATE EQU   *                                                        20258040
         L     SUBREG2,CDXLMJPJ        PICK UP XTLIST ADDRESS           20266040
         LA    SUBREG1,N0(SUBREG1)     ZERO HI ORDER BYTE               20274040
         A     SUBREG1,N12(SUBREG2)    ADD RELOCATION FACTOR TO ADDR    20282040
         BR    COMREG                  RETURN                           20300040
         EJECT                                                          20308040
*THIS ROUTINE ADDS THE CDENTRY ADDRESSED BY CDEREG TO THE CONTROL QUEUE 20316040
*ADDRESSED BY TABREG. THE ADDITION IS DONE IN A PUSH-DOWN  FASHION.     20324040
*                                                                       20332040
*        REGISTER USAGE                                                 20350040
*        R4,5 - TCB,SVRB (INPUT)                                        20360040
*        R8   - ALTERED                                                 20370040
*        R11  - INPUT CDE                                               20377040
*        R14  - RETURN ADDRESS (INPUT)                                  20384040
*        OTHER REGISTERS NOT REFERENCED                                 20400040
         SPACE 1                                                        20408040
*/*CDEADD: E CDEADD */                                                  20416040
*/* P SET R8= JOB STEP TCB ADDR FROM TCBJSTCB*/                         20424040
*/* P CHAIN CURRENT 1ST CDE BEHIND NEW CDE (SET CDCHAIN = TCBJPA)*/     20432040
*/* P PUT NEW CDE POINTER INTO TCBJPA*/                                 20440040
*/* P SET RBCDE1 = ADDR OF NEW CDE*/                                    20448040
*/* P SET CDRRBP OF NEW CDE = ADDR OF PM SVRB*/                         20470040
*/* R RETURN TO CALLER VIA R14 */                                       20480040
         SPACE 2                                                        20486040
CDEADD   EQU   *                                                        20500040
         L     TABREG,TCBJSTCB         LOAD JOB STEP TCB ADDR.          20508040
         MVC   CDCHAIN+N1(ADDL),TCBJSEZ+N1(TABREG) INITIALIZE CDCHAIN   20516040
         STCM  CDEREG,MASK,TCBJSEZ+N1(TABREG) MOVE IN LISTORG CDE ADDR. 20524040
         STCM  CDEREG,MASK,RBCDEA      MOVE INTO RB CDE ADDRESS         20532040
         ST    RBREG,CDRRBP            INITIALIZE CDRBP                 20550040
         BR    SUBREG1                 RETURN                           20558040
         EJECT                                                          20566040
*                                                                       20574040
*        REGISTER USAGE                                                 20582040
*        R0,1,2 - ALTERED                                               20600040
*        R4     - TCB (INPUT)                                           20610040
*        R6     - BASE(IEAVLK01)                                        20620040
*        R11-   - INPUT CDE                                             20627040
*        R13,14,15- ALTERED                                             20634040
*        OTHER REGISTERS NOT REFERENCED                                 20650040
*                                                                       20658040
         SPACE 1                                                        20666040
*/*RETHRED: E RETHRED */                                                20674040
*/* P SET R1= ADDR OF JPAQ HEADER*/                                     20682040
*/*STARLITE: P SET R2= ADDR OF 1ST/NEXT CDE*/                           20700040
*/* D (NO,THREDEND,YES,) ARE THERE MORE CDES ? */                       20708040
*/* D (YES,THREDOUT,NO,STARLITE) IS THIS THE CDE TO UNHOOK? */          20716040
RETHRED  L     WKREG1,TCBJSTCB         LOAD ADDR OF JOB STEP TCB        20724040
         LA    WKREG1,TCBJSEZ(WKREG1)  PICK UP LIST ORG OF JPACQ        20732040
STARLITE SR    WKREG2,WKREG2          CLEAR WORK REG           @ZA03896 20750040
         ICM   WKREG2,MASK,N1(WKREG1)  GET NEXT CDE            @ZA03896 20760040
         BZ    THREDEND                NO RETURN TO CALLER     @ZA03896 20770040
         CLM   CDEREG,MASK,N1(WKREG1)  Q. IS THE THE CDE TO UNHOOK      20777040
         BE    THREDOUT                A=YES, TAKE  BRANCH              20784040
         LR    WKREG1,WKREG2           GO TO NEXT CDE                   20800040
         B     STARLITE                CONTINUE IN LOOP                 20810040
         SPACE 2                                                        20820040
*/*THREDOUT: P UNHOOK CDE FROM JPA QUEUE */                             20827040
*/* P SAVE R9 IN R0 & R10 IN R1*/                                       20834040
*/* P ZERO RB WAITING QUEUE HEADER (SET CDRRBP =0) */                   20850040
*/* P SET R9= ADDR OF PM SVRB FOR DQLOAD*/                              20860040
*/* S DQLOAD:DEQUEUE ALL WAITING RB'S */                                20868040
*/* P RESTORE R9 FROM R0 AND R10 FROM R1*/                              20876040
*/* THREDEND: R RETURN TO CALLER VIA R13 */                             20884040
         SPACE 2                                                        20892040
THREDOUT MVC   N1(ADDL,WKREG1),N1(WKREG2) UNHOOK CDE FROM JPACQ         20910040
         LR    R0,NAMEREG              SAVE NAMRREG                     20920040
         LR    R1,DCBREG               SAVE DCBREG                      20930040
         SR    WKREG2,WKREG2           ZERO TO INITIALIZE A FIELD       20937040
         ST    WKREG2,CDRRBP           ZERO QUEUE HEAD BEFORE           20944040
*                                      GOING TO DQLOAD                  20960040
         LR    NAMEREG,RBREG           SET INPUT TO DQLOAD              20969040
         BAL   SUBREG2,DQLOAD          DQ ANY Q'D REQUESTS              20978040
         LR    DCBREG,R1               RESTORE DCBREG                   20987040
         LR    NAMEREG,R0              RESTORE NAMEREG                  20996040
THREDEND BR    R13                     RETURN                           21005040
         EJECT                                                          21014040
*                                                                       21023040
*        REGISTER USAGE                                                 21032040
*        R13 - ABEND CODE (ZERO ON INPUT)                               21050040
*        R15 - REASON CODE IF 106 OR 806 ABEND                          21058040
*        R6  - BASE ADDRESS                                             21066040
*        OTHER REGISTERS NOT REFERENCED                                 21074040
         SPACE 1                                                        21082040
*/*ERRBLDL: P ADD 1 TO R13  MAKES 806 ABEND CODE */                     21100040
*/*ERRXCUTE: P ADD 3 TO R13  MAKES 706 ABEND CODE */                    21110040
*/*ERRLONLY: P ADD 1 TO R13  MAKES 406 ABEND CODE */                    21120040
*/*ERRSYSR: P ADD 2 TO R13  MAKES 306 ABEND CODE */                     21127040
*/*ERRFETCH: P ADD 1 TO R13  MAKES 106 ABEND */                         21134040
*/* D (YES,,NO,ERRRTN) ERRET SPECIFIED (RBCSERIN =1)*/                  21150040
*/* P SAVE REGS R13 AND R15 IN R7 AND R8*/                              21158040
*/* S RETHRED: DEQUEUE RQSTD CDE FROM JPAQ*/                            21166040
*/* D (YES,,NO,ERRDQDON) WERE 2 CDES GOTTEN (RBCSTWO =1)*/              21174040
*/* P SET R11= ADDR OF 2ND (MAJOR) CDE (SET R11=R12)*/                  21182040
*/* S RETHRED: DEQUEUE MAJOR CDE FROM JPAQ*/                            21200040
*/*ERRDQDON: P (,ERRRTN) RESTORE R13 AND R15 FROM R7 AND R8*/           21208040
*/*ERRRTN: P SET BASEREG (R6) FOR MODULE IEAVLK00*/                     21216040
*/* R RETURN TO ABNDSET IN IEAVLK00 */                                  21224040
ERRBLDL  LA    R13,N1(R13)             CODE = 806                       21232040
ERRXCUTE LA    R13,N3(R13)             CODE = 706                       21250040
ERRLONLY LA    R13,N1(R13)             CODE = 406                       21258040
ERRSYSR  LA    R13,N2(R13)             CODE = 306                       21266040
ERRFETCH LA    R13,N1(R13)             CODE = 106                       21274040
         TM    RBCSFLG1,RBCSERIN       ERROR RETURN REQUESTED  @YA01851 21282040
         BZ    ERRRTN                  SKIP CLEANUP IF NO      @YA01851 21300040
         TM    CDATTR,CDNIP            IS IT LPA/MLPA MODULE   @ZA20311 21302040
         BO    ERRRTN                  YES THEN WONT RETHRED   @ZA20311 21304040
         STM   R13,R15,WKREGIS         SAVE ABEND/REASON CODES @ZA20311 21306040
         BAL   R13,RETHRED             DEQUE REQUESTED CDE     @YA01851 21327040
         L     R7,PSAAOLD              ASCB ADDR FOR FREEMAIN  @ZA20311 21328040
         TM    CDATTR,CDMIN            IS IT A MINOR CDE       @ZA20311 21329040
         BZ    FREEXLST                NO FREE XLST AND MAJOR  @ZA20311 21330040
         FREEMAIN RU,LV=CDESIZE,SP=255,A=(R11),BRANCH=YES      @ZA20311 21331040
         TM    RBCSFLG1,RBCSTWO        WAS THERE 2 NEW CDES    @YA01851 21334040
         BZ    ERRDQDON                TO ERRDQDON IF NO       @YA01851 21350040
         LR    R11,R12                 SET R11 TO NEW MAJOR    @YA01851 21360040
         BAL   R13,RETHRED             DEQUEUE NEW MAJOR CDE   @YA01851 21368040
FREEXLST SR    R1,R1                   CLEAR REGISTER FOR ICM  @ZA20311 21369040
         ICM   R1,MASK,CDXLMJP+N1      GET XLIST ADDRESS       @ZA20311 21369140
         BZ    FREECDE                 NO THEN FREE THE CDE    @ZA20311 21369440
         USING XTLST,R1                SET UP ADDRESSABILITY   @ZA20311 21369540
         L     R0,XTLLNTH              GET XLIST SIZE          @ZA20311 21370040
         DROP  R1                      RELEASE THE REGISTER    @ZA20311 21370340
         FREEMAIN RU,LV=(R0),SP=255,A=(R1),BRANCH=YES          @ZA20311 21371040
FREECDE  DS    0H                      LABEL FOR BRANCH        @ZA20311 21371540
         FREEMAIN RU,LV=CDESIZE,SP=255,A=(R11),BRANCH=YES      @ZA20311 21372040
ERRDQDON L     AREAREG,RBCSWORK        RESTORE WORKREG FOR LM  @ZA28886 21372540
         LM    R13,R15,WKREGIS         RESET ABEND/REASON CODES@ZA28886 21381540
ERRRTN   L     RETURN,TABLEADD         GET ADDR LIST IN VLK00  @YA01851 21400040
         DROP  GR15                    MUST NOT USE REG 15 FOR TABLE    21408040
*                                      BECAUSE IT CONTAINS REASON CODE  21416040
         USING ADDRTAB,RETURN          SET UP ADDRESSABILITY TO VLK00   21424040
         L     BASEREG,CDLKBASE        SET UP VLK00 ADDRESSABILITY      21432040
         L     RETURN,ABNDSET          POINT TO ABNDSET                 21450040
         BR    RETURN                  GO TO IT                         21458040
         SPACE 2                                                        21466040
*/* FOOTING                                                             21474040
*/*                                                                     21482040
*/*  */                                                                 21500040
*/*IEAVLK01: END END SECOND OF TWO MODULES */                           21508040
         EJECT                                                          21516040
*                                                                       21524040
*                                      EXECUTED INSTRUCTION             21532040
*                                                                       21550040
TESTAPF  OC    PDSAPFAC-PDSAPF(ZERO,R14),PDSAPFAC-PDSAPF(R14) TEST APF  21558040
*                                                                       21566040
*                                      ADDRESS CONSTANTS                21574040
*                                                                       21582040
TABLEADD DC    A(IEAQCS04)             POINTS TO ADDRESS TABLE          21600040
LINKBASE DC    A(IEAVLK01)             USED TO SET CORRECT BASE         21608040
*                                      FOR ADDRESSIBILITY               21616040
IEAQLCTA DC    A(IEAQLPAQ)             ADDRESS OF LINK PACK AREA        21624040
*                                      CONTROL QUEUE . ALSO IN CVT      21632040
SVCDCBA  DC    A(SVCDCB)               ADDRESS OF SVC LIB DCB           21650040
LINKDCBA DC    A(LINKDCB)              ADDRESS OF LINK LIB DCB          21660040
CONTRLA  DC    A(IEAQCS02)             ADDRESS OF LINK MAINLINE         21668040
*                                                                       21676040
*                                      MASKS AND CONSTANTS              21684040
*                                                                       21700040
APFROUND DC    X'FFFFFFFE'             ROUND TO HALFWORD AND-MASK       21710040
BLDLMASK DC    X'0001003C'             USED FOR BLDL WORK MASK          21720040
FRRPGM   DC    A(FRRPGMMG)             ADDRESS OF RECOVERY FOR PGM.MGR. 21727040
         EJECT                                                          21734040
ADDRTAB  DSECT MAPS ADRESS LIST IN IEAVLK00                             21750040
CDLKBASE DS    A                       BASE VALUE                       21758040
CDCONTRL DS    A                       QUEUE SEARCHES                   21766040
CDEMERGE DS    A                       FINAL PROCESSING                 21774040
CDQUECTL DS    A                       QUEUED REQUEST                   21782040
PLUSCONT DS    A                       TEST CDE ATTRIBUTES              21800040
ABNDSET  DS    A                       ISSUE ABENDS                     21808040
         EJECT                                                          21816040
         IHACDE                                                         21824040
CDEEND   EQU   *                                                        21832040
CDESIZE  EQU   CDEEND-CDENTRY          SIZE OF CDE                      21850040
CDATTR2Z EQU   CDATTR2-CDENTRY         OFFSET TO ATTRIBUTES             21858040
CDXLIN   EQU   CDESIZE+XTLSTSIZ        CDE AND EXTENT LIST SIZE         21866040
         EJECT                                                          21874040
CDENTRYJ DSECT                                                          21882040
         DS    (CDESIZE)C                                               21900040
CDATTRJ  EQU   CDENTRYJ+CDATTR-CDENTRY  MAJOR CDE DSECT                 21910040
CDCHAINJ EQU   CDENTRYJ+CDCHAIN-CDENTRY  TO INCREASE                    21920040
CDRBPJ   EQU   CDENTRYJ+CDRRBP-CDENTRY       OF THE                     21927040
CDNAMEJ  EQU   CDENTRYJ+CDNAME-CDENTRY        CODE                      21934040
CDUSEJ   EQU   CDENTRYJ+CDUSE-CDENTRY          WHILE MAINTAINING        21950040
CDENTPTJ EQU   CDENTRYJ+CDENTPT-CDENTRY        DEPENDANCY               21960040
CDATTR2J EQU   CDENTRYJ+CDATTR2-CDENTRY         ON THE                  21970040
CDXLMJPJ EQU   CDENTRYJ+CDXLMJP-CDENTRY         MACRO                   21977040
         EJECT                                                          21984040
         IHAXTLST                      EXTENT LIST MAPPING     @ZA20311 21985040
         EJECT                                                 @ZA20311 21986040
         IHADCB                       DCB MAPPING MACRO       @ZA18512  21989040
         EJECT                                                @ZA18512  21994040
         IEZDEB                                                         22000040
         EJECT                                                          22008040
         IHAFETWK                                                       22016040
         EJECT                                                          22024040
         IHAFRRS                                                        22032040
         EJECT                                                          22050040
         IHALPDE                                                        22058040
LPDEEND  EQU   *                       END OF LPDE DSECT                22066040
LPDCDE   EQU   CDESIZE                 LPDE CDE LENGTH                  22074040
LPDEJ    DSECT                                                          22082040
         DS    (LPDEEND-LPDE)C                                          22100040
LDATTRJ  EQU   LPDEJ+CDATTR-CDENTRY    MAJOR LPDE DSECT                 22110040
LDCHAINJ EQU   LPDEJ+CDCHAIN-CDENTRY  TO INCREASE                       22120040
LDRBPJ   EQU   LPDEJ+CDRRBP-CDENTRY       OF THE                        22127040
LDNAMEJ  EQU   LPDEJ+CDNAME-CDENTRY        CODE                         22134040
LDUSEJ   EQU   LPDEJ+CDUSE-CDENTRY          WHILE MAINTAINING           22150040
LDENTPTJ EQU   LPDEJ+CDENTPT-CDENTRY        DEPENDANCY                  22158040
LDATTR2J EQU   LPDEJ+CDATTR2-CDENTRY         ON THE                     22166040
LDXLMJPJ EQU   LPDEJ+CDXLMJP-CDENTRY         MACRO                      22174040
LDXTLTHJ EQU   LPDEJ+LPDEXTLN-LPDE                                      22182040
LDXLEPTJ EQU   LPDEJ+LPDEXTAD-LPDE                                      22200040
         EJECT                                                          22208040
         IHARB                                                          22216040
*********************************************************************** 22224040
*                                                                     * 22232040
*                  REQUEST BLOCK ADDITIONAL LABELS INTERNAL           * 22250040
*                                                                     * 22260040
*********************************************************************** 22270040
         ORG   RBEXSAVE                MAPPED INTO RBEXSAVE             22277040
RBCSEXSA EQU   *                       PROGRAM MANAGER USAGE OF         22284040
*                                      RB EXTENDED SAVE AREA FOR        22300040
*                                      REENTRANT DATA AREA              22307040
RBCSNAME DS    CL8                     ENTRY POINT NAME CALLER PASSED   22314040
RBCSDE   DS    0A                      ADDRESS OF DE SAVE AREA          22330040
         DS    C                       BYTE RESERVED                    22337040
RBCSDEA  DS    AL3                     3 BYTE ADDRESS                   22344040
RBCSERRA DS    F                       ADDRESS OF ERROR ROUTINE         22360040
RBCSFLG1 DS    B                       FLAG BYTE                        22368040
RBCSGSF  EQU   X'80'                   GOOD SEARCH INDICATOR            22376040
*                                      ON MEANS IEAVVMSR WAS            22384040
*                                      SUCCESSFUL USED ONLY             22392040
*                                      IN IEAVLK01                      22410040
RBCSSYSR EQU   X'40'                   SYSTEM REQUEST FLAG              22420040
RBCSPARM EQU   X'20'                   PARMATER CHECKING IN PROGRESS    22427040
RBCSERIN EQU   X'10'                   ERROR RETURN WAS REQUESTED       22434040
RBCSABEN EQU   X'08'                   ISSUE 906 ABEND                  22450040
RBCSA306 EQU   X'04'                   ISSUE 306 ABEND                  22459040
RBCSTWO  EQU   X'02'                   TWO NEW CDES            @YA01851 22468040
RBCRSAPF EQU   X'01'                   RESET APF AUTH          @WAB     22472040
RBCSFLG2 DS    B                       RESERVED FLAGS                   22477040
RBCSFLG3 DS    B                       RESERVED FLAGS                   22486040
RBCSFLG4 DS    B                       RESERVED FLAGS                   22495040
RBCSWORK DS    0A                      ADDRESS OF BLDL FETCH W.A.       22504040
         DS    C                       RESERVED BYTE                    22513040
RBCSWRKA DS    AL3                     3 BYTE ADDRESS                   22522040
RBCSLLE  DS    0A                      ADDRESS OF LLE DURING LOAD       22531040
         DS    C                       RESERVED BYTE                    22540040
RBCSLLEA DS    AL3                     3 BYTE ADDRESS                   22549040
RBCSFRRA DS    F                       SAVE AREA FOR RECOVERY RTN.      22558040
*                                      PARM LIST                        22567040
RBCSGR15 DS    F                       SAVE AREA FOR REGS 15 TO 1       22576040
RBCSGR0  DS    F                       OVER MODESET MACRO               22585040
RBCSGR1  DS    F                       INTERFACE                        22594040
RBCSRESV DS    2F                      3 WORDS OF 12 IN WORK SAVE AREA  22603040
*                                      RESERVED FOR FUTURE EXPANSION    22612040
PRBSIZ   EQU   PRBEND-RBSECT           SIZE OF A PRB                    22621040
*        FLAG SETTINGS FOR RBCDFLGS                                     22630040
LOAD     EQU   RBCDLOAD                ENTRY BY SVC LOAD                22639040
XCTL     EQU   RBCDXCTL                ENTRY BY SVC XCTL                22648040
SYNC     EQU   RBCDSYNC                ENTRY BY SVC SYNC                22657040
NODE     EQU   RBCDNODE                DO NOT GET A DE SAVE AREA FLAG   22666040
PRBPREF  EQU   RBPRFXND-RBPRFXST       LENGTH OF RB PREFIX              22675040
RBXXDSP  EQU   RBOPSW+4                USED FOR DISP PRIO IN CTL        22684040
RBCDEA   EQU   RBCDFLGS+1              EXTRA OFFSET                     22693040
RBLINKA  EQU   RBWCF+1                 EXTRA OFFSET                     22702040
         SPACE 3                                                        22711040
*  THE FOLLOWING CODE WAS ADDED FOR AOS2 TO MAKE ALL CODE               22720040
*   DEPENDANT ON THE RB DSECT SUPPLIED BY THE OFFICIAL MACRO            22729040
*    THE ORIGINAL EQUATES FOR THE NAMES WERE DELETED                    22738040
*     AND THE PRB DSECT CHANGED                                         22747040
         SPACE 3                                                        22756040
RBSTABZ  EQU   RBSTAB-RBSECT           ALTERNATE                        22765040
RBCDEZ   EQU   RBCDFLGS-RBSECT         ALTERNATE                        22774040
RBOPSWZ  EQU   RBOPSW-RBSECT           ALTERNATE                        22783040
RBPGMQZ  EQU   RBPGMQ-RBSECT           ALTERNATE                        22792040
RBLINKZ  EQU   RBWCF-RBSECT            ALTERNATE                        22801040
RBWCFZ   EQU   RBWCF-RBSECT            ALTERNATE                        22810040
RBCDEAZ  EQU   RBCDFLGS-RBSECT+1       CDE ADDRESS IN RB                22819040
RBXXDSPZ EQU   RBOPSWZ+4               USED FOR DISP PRIO               22828040
RBLINKAZ EQU   RBWCF-RBSECT+1          ALTERNATE                        22837040
RBOPSWZR EQU   RBOPSWZ+4               ALTERNATE                        22846040
RBSTAB2Z EQU   RBSTAB2-RBSECT          ALTERNATE                        22900040
RBPGMQ1Z EQU   RBPGMQ1-RBSECT          ALTERNATE                        22908040
         EJECT                                                          22916040
*********************************************************************** 22924040
*                                                                     * 22932040
*              PDS DIRECTORY ENTRY                                    * 22950040
*                                                                     * 22958040
*********************************************************************** 22966040
         IHAPDS                                                         22974040
DEMAX    EQU   PDSBCLN+PDSS01LN+PDSS02LN+PDSS03LN+PDSS04LN MAX DE SIZE  22982040
         EJECT                                                          23000040
DESAVE   DSECT                         MAPPING OF DE SAVE AREA          23008040
DESAVESZ DS    F                       SAVE AREA FOR DE SIZE            23016040
DESAVEDE DS    15F                     60 BYTES DE SAVE AREA            23024040
         EJECT                                                          23032040
*********************************************************************** 23050040
*                                                                     * 23058040
*                    TASK CONTROL BLOCK                               * 23066040
*                                                                     * 23074040
*********************************************************************** 23082040
         IKJTCB                                                         23100040
TCBJLBDI EQU   TCBJLB-TCB          DISPLACEMENT IN TCB OF DCB ADR.      23108040
TCBMOTH  EQU   TCBOTC-TCB          DISPLACEMENT IN TCB OF MOTHER        23116040
TCBJSEZ  EQU   TCBJPQ-TCB          OFFSET TO JPAQ                       23124040
TASKLIB  EQU   TCBJLB-TCB          TASKLIB DCB FIELD IN TCB             23132040
TASKSTEP EQU   TCBJSTCA-TCB            EQUATE FOR JSTCB                 23150040
         EJECT                                                          23158040
         IEZJSCB                                                        23166040
         EJECT                                                          23174040
         CVT   DSECT=YES,PREFIX=NO                                      23182040
         EJECT                                                          23200040
         IHAASCB                                                        23208040
         EJECT                                                          23216040
         IHAPSA                                                         23224040
         END                                                            23232040
./  ADD  SSI=72020195,NAME=IEAVLK02
         TITLE '       IEAVLK02 COMMENTARY'                             00110002
* /* START OF SPECIFICATIONS ****                                       00120002
*                                                                       00130002
*01*  MODULE-NAME = IEAVLK02                                            00150002
*                                                                       00300002
*01*  DESCRIPTIVE-NAME = PROGRAM MANAGER RESOURSE MANAGEMENT ROUNTINES  00500002
*                                                                       00600002
*01*  COPYRIGHT = NONE                                                  00650002
*                                                                       00700002
*01*  STATUS = VERSION 1                                                00900002
*                                                                       01000002
*01*  FUNCTION = CLEANS UP CDE AND ANY ASSOCIATED CORE AT EXIT, DELETE, 01050002
*     ABEND, AND EOT.                                                   01100002
*                                                                       01150002
*01*   NOTES = THE FOLLOWING IS A DESCRIPTION OF THE DEPENDENCIES,      01450002
*      CONVENTIONS, AND FUNCTIONS OF IEAVLK02                           01460002
*                                                                       01500002
*02*     DEPENDENCIES = THE LOCAL LOCK MUST BE HELD ON ENTRY TO ALL     01550002
*        THREE ENTRY POINTS.                                            01600002
*                                                                       01800002
*03*        CHARACTER-CODE-DEPENDENCIES = NONE                          01850002
*                                                                       01900002
*02*     RESTRICTIONS = NONE                                            02050002
*                                                                       02100002
*02*     REGISTER-CONVENTIONS = THE REGISTER CONVENTIONS USED BY        02200002
*        IEAVLK02 ARE DESCRIBED UNDER THE TOPIC REGISTER EQUATES.       02250002
*                                                                       02400002
*02*     PATCH-LABEL = THIS MODULE IS RESIDENT NUCLEUS, AND HAS NO      02450002
*        PATCH SPACE.                                                   02500002
*                                                                       02600002
*01*  MODULE-TYPE = MODULE                                              02650002
*                                                                       02750002
*02*     PROCESSOR = ASSEMBLER                                          02800002
*                                                                       03150002
*02*     MODULE-SIZE = 1108 BYTES                                       03200002
*                                                                       03350002
*02*     ATTRIBUTES = REENTERABLE                                       03400002
*                                                                       03650002
*01*  ENTRY-POINT = CDHKEEP                                             03700002
*                                                                       03950002
*02*     PURPOSE = THIS ENTRY WILL RELEASE THE MODULE, EXTENT LIST,     04000002
*        MAJOR CDE AND ASSOCIATED MINORS AS REQUIRED.                   04050002
*                                                                       04100002
*02*     LINKAGE = BRANCH ENTERED - BALR 14,15                          04150002
*        ENTERED BY DELETE SERVICE ROUTINE                              04200002
*        ENTERED BY PROGRAM MANAGER EXIT RESOURCE MANAGER (IEAVLK02)    04250002
*                                                                       04350002
*02*     INPUT = PSW ENABLED, KEY 0, SUPERVISOR STATE, LOCAL LOCK HELD  04400002
*        REGISTERS ARE                                                  04450002
*        4 - CURRENT OR TERMINATING TCB ADDRESS                         04550002
*        11 - MAJOR CDE                                                 04602002
*        12 - TERMINATING CDE ADDRESS                                   04610002
*        14 - RETURN ADDRESS                                            04620002
*                                                                       04650002
*02*     OUTPUT = NONE                                                  04700002
*                                                                       04750002
*02*     REGISTERS-SAVED = NONE                                         04850002
*        REGISTERS 5, 11-13 ARE UNCHANGED BY THIS ROUTINE               04860002
*        ALL OTHER REGISTERS ARE MODIFIED                               04870002
*                                                                       04900002
*02*     REGISTER-USAGE = SEE REGISTER USAGE AT BEGINNING OF ROUTINE    05000002
*                                                                       05100002
*01*  ENTRY-POINT = IEAPPGMX                                            05260002
*                                                                       05294002
*02*     PURPOSE = THIS ROUTINE FREES PROGRAM MANAGER RESOURCES AT      05296002
*        EXIT AND DETERMINES IF A TASK TERMINATION IS IN PROGRESS AND   05298002
*        IF SO, FREES ANY LLE'S LEFT ON THE TCBLLE QUEUE, THEIR         05302202
*        ASSOCIATED CDE'S AND ITS ASSOCIATED CORE.                      05303802
*                                                                       05305402
*02*     LINKAGE = BRANCH ENTERED BY EXIT (SVC 3) ROUTINE               05307002
*                                                                       05313402
*02*     INPUT = PSW ENABLED, KEY 0,SUPERVISOR STATE, LOCAL LOCK HELD   05315002
*        REGISTERS ARE:                                                 05325002
*        REGISTER 5 - TERMINATING RB                                    05327002
*        REGISTER 13 - CALLERS SAVE AREA                                05329002
*        REGISTER 14 - RETURN ADDRESS                                   05331002
*                                                                       05332602
*02*     OUTPUT = NONE                                                  05333002
*                                                                       05335002
*02*     REGISTERS-SAVED = ALL REGISTERS ARE RETURNED TO THE CALLER     05338802
*        EXCEPT 15 WHICH CONTAINS A RETURN CODE                         05340802
*                                                                       05342802
*02*     REGISTER-USAGE = SEE PROLOGUE AT BEGINNING OF ROUTINE          05343202
*                                                                       05344002
*01*  ENTRY-POINT = IEAPPGMA                                            05358202
*                                                                       05371402
*02*     PURPOSE = THIS ROUTINE IS ENTERED TO REMOVE PARTIALLY LOADED   05371802
*        PROGRAMS DURING ABEND PROCESSING. THIS ROUTINE IS ENTERED      05371902
*        PRIOR TO DUMP (IF REQUESTED) OF CORE.                          05372002
*                                                                       05372102
*02*     LINKAGE = BRANCH ENTERED BY RTM2 VIA BR 14,15                  05372202
*                                                                       05381102
*02*     INPUT = PSW ENABLED, KEY 0, SUPERVISOR STATE, LOCAL LOCK HELD  05381202
*        REGISTERS ARE:                                                 05383202
*        REGISTER 1 - POINTER TO PARAMETER LIST POINTER                 05385202
*        REGISTER 13 - CALLERS SAVE AREA                                05387202
*        REGISTER 14 - RETURN ADDRESS                                   05389202
*                                                                       05390002
*02*     OUTPUT = NONE                                                  05390402
*                                                                       05390502
*02*     REGISTERS-SAVED = CALLERS REGISTERS WILL BE RETURNED EXCEPT 15 05390702
*        WHICH WILL CONTAIN A RETURN CODE.                              05400702
*                                                                       05412502
*02*     REGISTER-USAGE = SEE PROLOGUE AT BEGINNING OF ROUTINE          05414502
*                                                                       05420402
*01*  EXIT-NORMAL = CDHKEEP                                             05572202
*                                                                       05576202
*02*     CONDITIONS = RETURN VIA BR 14 TO CALLER.  CDE AND ASSOCIATED   05588102
*        CORE HAS BEEN FREED.                                           05600002
*                                                                       05650002
*02*     OUTPUT = REGISTER 5, 11-13 REMAIN AS ON ENTRY.                 05700002
*        ALL OTHER REGISTERS ARE UNPREDICTABLE                          05710002
*                                                                       05750002
*02*     RETURN-CODES = NONE                                            06000002
*                                                                       06050002
*01*  EXIT-NORMAL = IEAPPGMX                                            06202002
*                                                                       06208402
*02*     CONDITIONS = RETURN VIA BR 14 TO CALLER (SVC 3).  PROGRAM      06208802
*        MANAGER RESOURCES HAVE BEEN FREED.                             06209202
*                                                                       06209602
*02*     OUTPUT = REGISTER 15 CONTAINS A RETURN CODE.                   06209702
*        ALL OTHER REGISTERS ARE RETURNED TO CALLER                     06213702
*                                                                       06215602
*02*     RETURN-CODES = RETURN CODE 0 = SUCCESSFUL                      06216002
*                       RETURN CODE 4 = FAILED                          06218002
*        THE ONLY CALLER OF THIS ROUTINE IS SVC 3.                      06218402
*                                                                       06219902
*01*  EXIT-NORMAL = IEAPPGMA                                            06223402
*                                                                       06242002
*02*     CONDITIONS = RETURN VIA BR 14 TO CALLER.  PARTIALLY LOADED     06244002
*        PROGRAMS HAVE BEEN DEQUEUED AND POSSIBLY FREED.                06246002
*                                                                       06248002
*02*     OUTPUT = REGISTER 15 CONTAINS A RETURN CODE                    06248402
*        ALL OTHER REGISTERS ARE RETURNED TO THE CALLER. (RTM2)         06248802
*                                                                       06249802
*02*     RETURN-CODES = RETURN CODE 0 = SUCCESSFULL                     06249902
*                       RETURN CODE 4 = FAILED                          06259902
*        THE ONLY CALLER OF THIS ROUTINE IS ABEND (RTM2)                06269902
*                                                                       06280602
*01*  EXTERNAL-REFERENCES =                                             07233302
*        IEAQCS02 - TO RESTART REQUESTS FOR PARTIALLY LOADED ROUTINES   07250002
*        IEAQCS03 - TO RESTART REQUESTS FOR SERIALLY REUSABLE ROUTINES  07300002
*          WHICH BECAUSE OF EXIT ARE NOW AVAILABLE                      07310002
*        FRRPGMX - RECOVERY ROUTINE ADDRESS                             07320002
*                                                                       07350002
*02*     ROUTINES =                                                     07400002
*        FREEMAIN - TO RELEASE CDE, EXTENT LIST, FETCH WORK AREA,       07450002
*        MODULES, LLE                                                   07500002
*        POST W/O ECB - TO CAUSE A WAITING RB TO BE MADE READY FOR      07510002
*        EITHER REUSABLE ROUTINES WHICH ARE NOW AVAILABLE OR            07520002
*        NOT-IN-CORE MODULES WHEN THE REQUESTING TASK IS IN ABEND       07530002
*        STATE.                                                         07540002
*                                                                       07550002
*02*     DATA-AREAS = NO DATA SETS ARE USED BY THIS MODULE              07600002
*        A WORKAREA IS PASSED TO IEAVPGMA AS INPUT. THE FORMAT OF THE   07650002
*        WORKAREA CAN BE FOUND IN THE PROLOGUE FOR THAT ROUTINE.        07700002
*                                                                       07850002
*02*     CONTROL-BLOCKS = LLE,CDE,CVT,RB,TCB,SDWA                       07900002
*                                                                       08150002
*01*  TABLES = NONE                                                     08200002
*                                                                       08250002
*01*  MACROS = SETFRR, SETLOCK, GETMAIN, FREEMAIN,                      08400002
*                                                                       08550002
*02*    SERIALIZATION = LOCAL LOCK HELD THROUGHOUT PROCESS, CMS LOCK    08600002
*       OBTAINED FOR LPA QUEUE MANIPULATION                             08650002
*                                                                       08750002
*01*  CHANGE-ACTIVITY = MODULE WRITTEN FOR SUPPORT CODE Y02758          08800002
*        @YM06819 - 2/15/74                                             08820002
*        @ZA02733 - RELEASE 2                                           08825003
*        @ZA03243 @ZA03534 @ZA09239 - RELEASE 3                         08827003
*        @ZA03631 @ZA04838 - RELEASE 4                                  08840003
*                                                                       08850002
*01*  MESSAGES = NONE                                                   09000002
*                                                                       09250002
*01*  ABEND-CODES = NONE                                                09300002
*                                                                       09350002
**** END OF SPECIFICATIONS ***/                                         09500002
         EJECT                                                          09510002
         SPACE 2                                                        09520002
*/*IEAVLK02: CHART */                                                   09522002
*/* HEADER                                                              09524002
*/* PROGRAM MANAGER                                                     09528402
*/*                                                    SECTION 3.1.11   09528802
*/* RESOURCE MANAGEMENT ROUTINES                                        09529202
*/*                                                    PAGE # */        09529602
         SPACE 2                                                        09530002
IEAVLK02 CSECT                         CSECT NAME **** SINGLE CSECT     09550002
         MODID BR=NO                                                    09600002
*        ENTRY STATEMENTS                                               09650002
         ENTRY CDHKEEP                 ENTRY TO FREE RESOURCES          09700002
         ENTRY IEAPPGMA                ENTRY TO REMOVE NIC PROG.        09750002
         ENTRY IEAPPGMX                ENTRY FROM EXIT                  09850002
         ENTRY CDSSNOP                 ENTRY OF DSS HOOK                09870002
         ENTRY FINIS                   RETRY ENTRY FOR FRR              09872002
         ENTRY EOTCHK                  RETRY ENTRY FOR FRR              09874002
         SPACE 1                                                        09880002
         EXTRN FRRPGMX                 ENTRY IN LK03 OF RECOVERY RTN.   09890002
         TITLE '               IEAVLK02 REGISTER EQUATES'               09900002
*        REGISTER EQUATES                                               09950002
R0       EQU   0                       STANDARD EQUATE                  10000002
WKREG0   EQU   R0                      GENERAL WORK REGISTER            10050002
LNG      EQU   R0                      LENGTH FOR FREEMAIN              10070002
R1       EQU   1                       STANDARD EQUATE                  10100002
WKREG1   EQU   R1                      GENERAL WORK REGISTER            10150002
PARMREG  EQU   R1                      INPUT PARAMETER REGISTER         10160002
ADDR     EQU   R1                      ADDRESS FOR FREEMAIN             10180002
R2       EQU   2                       STANDARD EQUATE                  10200002
WKREG2   EQU   R2                      GENERAL WORK REGISTER            10250002
*                                      REGISTER 3 EQUATES               10280002
R3       EQU   3                       STANDARD EQUATE                  10300002
CVTREG   EQU   R3                      REGISTER 3 POINTS TO CVT         10350002
LASTCDER EQU   R3                      LAST CDE REMOVED        @ZA04838 10370003
*                                      REGISTER 4 EQUATES               10400002
R4       EQU   4                       CROSS REFERENCE EQUATE           10450002
TCBREG   EQU   R4                      REGISTER 4 POINTS TO THE TCB     10500002
*                                      REGISTER 5 EQUATES               10550002
R5       EQU   5                       CROSS REFERENCE EQUATE           10600002
RBREG    EQU   R5                      POINTER TO THE RB                10610002
*                                      REGISTER 6 EQUATES               10650002
R6       EQU   6                       CROSS REFERENCE EQUATES          10700002
*                                      REGISTER 7 EQUATES               10750002
R7       EQU   7                       CROSS REFERENCE EQUATES          10800002
ASCBREG  EQU   R7                      POINTER TO THE ASCB              10810002
*                                      REGISTER 8 EQUATES               10850002
R8       EQU   8                       CROSS REFERENCE EQUATES          10900002
BASEREG  EQU   R8                      BASE REGISTER FOR IEAVLK02       10910002
*                                      REGISTER 9 EQUATES               10950002
R9       EQU   9                       CROSS REFERENCE EQUATES          11000002
XLREG    EQU   R9                      POINTER TO THE EXTENT LIST       11010002
NEXT     EQU   R9                      USED FOR LOOP IN RB FIND         11020002
*                                      ROUTINE IN PGMA                  11030002
*                                      REGISTER 10 EQUATES              11050002
R10      EQU   10                      CROSS REFERENCE EQUATES          11100002
*                                      REGISTER 11 EQUATES              11150002
R11      EQU   11                      CROSS REFERENCE EQUATES          11200002
CDEMAJR  EQU   R11                     POINTER TO THE MAJOR CDE         11210002
*                                      REGISTER 12 EQUATES              11250002
R12      EQU   12                      CROSS REFERENCE EQUATES          11300002
CDEREG   EQU   R12                     POINTER TO CURRENT CDE           11310002
*                                      REGISTER 13 EQUATES              11350002
R13      EQU   13                      CROSS REFERENCE EQUATES          11400002
SAVEREG  EQU   R13                     SAVE AREA REGISTER               11402002
*                                      REGISTER 14 EQUATES              11450002
R14      EQU   14                      CROSS REFERENCE EQUATES          11500002
RETURN   EQU   R14                     RETURN REGISTER FOR ENTRY POINTS 11550002
*                                      REGISTER 15 EQUATES              11600002
R15      EQU   15                      CROSS REFERENCE EQUATES          11650002
         TITLE '              IEAVLK02 CHARACTER AND HEX MASK EQUATES'  11700002
ZERO     EQU   0                       SYMB DISPL TO BEG OF FIELD       11800002
NULL     EQU   0                       USED IN ADDRESSIBILITY BALR      11810002
N0       EQU   0                       CONSTANT OF ZERO                 11810102
WORD1    EQU   0                       FIRST WORD OF LIST               11810402
N1       EQU   1                       CONSTANT                         11810502
N2       EQU   2                       USED TO MULTIPLY BY 4 IN SHIFT   11810602
ADDL     EQU   3                       SIZE OF ADDRESS                  11810802
RH       EQU   4                       RIGHT HALF OF PSW                11812002
N4       EQU   4                       CONSTANT TO PICK UP NEXT IN LIST 11812102
WORD     EQU   4                       SIZE OF ONE WORD                 11812402
WORD2    EQU   4                       SECOND WORD OF LIST              11814002
NOTZERO  EQU   7                       NOT EQUAL COMPARES               11820002
MASK     EQU   7                       ICM 3 ADDR BYTES IN REG @YA00094 11822003
EQUAL    EQU   8                       EQUAL COMPARES                   11830002
N8       EQU   8                       NUMERIC VALUE FOR RETURN CODE    11830402
WORD3    EQU   8                       THIRD WORD OF LIST               11832002
WORD4    EQU   12                      FOURTH WORD OF LIST              11840002
WORD5    EQU   20                      FIFTH WORD OF LIST               11842002
N24      EQU   24                      USED FOR 3 BYTE SHIFT            11844002
Q250     EQU   250                     SUBPOOL 250 (USER 0)             11850002
Q251     EQU   251                     SUBPOOL 251 (JPA)                11900002
Q252     EQU   252                     SUBPOOL 252                      11950002
FETWKSIZ EQU   X'604'                    SIZE OF FETCH WORK AREA        11950402
MAX      EQU   X'FF'                   MAXIMUM VALUE                    11951202
         EJECT                                                          11952002
*        MODULE USING STATEMENTS                                        11960002
         USING PSA,0                   ADDRESSES LOW CORE               11962002
         USING CVT,CVTREG              POINTER TO THE CVT               11970002
         USING TCB,TCBREG              POINTER TO THE TCB               11980002
         USING RBSECT,RBREG            POINTER TO THE RB                11982002
         USING CDENTRY,CDEMAJR         POINTER TO THE CDE               11990002
         TITLE '        IEAVLK02 - IEAPPGMA ROUTINE'                    11994002
         SPACE 2                                                        11994402
*/* E IEAPPGMA */                                                       11994502
*/* P SET UP ADDRESSIBILITY */                                          11994602
         SPACE 2                                                        11994802
IEAPPGMA DS    0H                      ABEND INTERFACE                  11996002
         STM   R14,R12,WORD4(R13)      SAVE ABEND REGISTERS             11997102
         BALR  BASEREG,NULL            SET UP ADDRESSIBILITY            11997302
         USING *,BASEREG               TELL ASSEMBLER                   11997502
MODENT   DS    0H                      MOD. ENTRY POINT FOR ADDRESSING  11997702
         SPACE 2                                                        12007702
*/* P GET POINTER TO PARAMETER LIST */                                  12010802
         SPACE 2                                                        12011102
         L     PARMREG,ZERO(PARMREG)   GET POINTER TO PARM LIST         12012402
         USING RMPL,PARMREG            TELL ASSEMBLER ADDRESS           12013502
         SPACE 2                                                        12013602
*/* P ESTABLISH AND INITIALIZE WORK AREA */                             12013702
         SPACE 2                                                        12013902
         L     R10,RMPLRMWA            GET MY WORK AREA ADDR.           12014602
         ST    R13,ZERO(R10)           SAVE ABEND SAVE AREA ADDR.       12015702
         LR    SAVEREG,PARMREG         SAVE PARM. LIST ADDR.            12016802
         DROP  PARMREG                 RESET ADDRESSIBILITY             12017902
         USING RMPL,SAVEREG            TO SAVE REGISTER                 12019002
         SPACE 2                                                        12021002
*/* P SET UP STANDARD REGISTERS R4=TCB, R7=ASCB, R12=CDE */             12021402
         SPACE 2                                                        12023002
         L     TCBREG,RMPLTCBA         GET ABENDING TCB                 12023402
         L     ASCBREG,RMPLASCB        GET ASCB FOR THE TCB             12024502
         L     WKREG2,TCBJSTCB         GET JOBSTEP TCB FOR ABEND        12025602
         SPACE 2                                                        12026002
*/* P SAVE TCB JOB PACK QUEUE POINTER IN WORK AREA */                   12026102
         SPACE 2                                                        12026402
         LA    WKREG2,TCBJPQ-TCB(WKREG2)   GET JPQ POINTER              12026702
         ST    WKREG2,WORD2(R10)       SAVE JPQ POINTER                 12027802
         SPACE 2                                                        12027903
*/* D (NO,NORETRY,YES,) RTM PROCESSING FOR RECOVERY RETRY*/             12028003
         SPACE 2                                                        12028103
         TM    RMPLFLG1,RMPLRCOV       RTM IN RETRY PROCESS    @YA00094 12028203
         BZ    NORETRY                 NO- CONTINUE ABEND TERM @YA00094 12028603
         SPACE 2                                                        12028703
*/* P OBTAIN PROGRAM MANAGER SVRB ADDR FROM RMPL               */       12028903
*/* P OBTAIN POINTER TO CDE */                                          12030003
*/* D (NO,PGMAEND,YES,) DOES CDE EXIST */                               12032003
         SPACE 2                                                        12034003
         L     RBREG,RMPLRBPA          OBTAIN PM SVRB ADDR     @YA00094 12036003
         SR    CDEMAJR,CDEMAJR         CLEAR REG FOR INSERT    @YA00094 12038003
         ICM   CDEMAJR,MASK,RBCDE1     DOES CDE EXIST          @YA00094 12044303
         BZ    PGMAEND                 NO - RETURN             @YA00094 12044703
         SPACE 2                                                        12044803
*/* D (NO,NOFETWK,YES,) HAS FETCH W.A. BEEN OBTAINED*/                  12044903
         SPACE 2                                                        12045103
         SR    R6,R6                   CLEAR REG FOR INSERT    @YA00094 12045503
         ICM   R6,MASK,RBCSWRKA        FETCH WORK AREA OBTAIND @YA00094 12045603
         BZ    NOFETWK                 NO - BYPASS FREEMAIN    @YA00094 12045703
         SPACE 2                                                        12045803
*/* L FREEMAIN: FREE FETCH WORK AREA FROM SP253 (LSQA)*/                12045903
*/* P ZERO FETCH WORK AREA ADDRESS IN RBXSA */                          12046003
         SPACE 2                                                        12046103
         FREEMAIN RU,LV=FETWKSIZ,SP=253,A=(6),BRANCH=YES       @YA00094 12046203
         SR    R15,R15                 INSURE ZEROES IN R15    @YA00094 12046303
         ST    R15,RBCSWORK            CLEAR PTR TO FETCH W.A. @YA00094 12046503
         SPACE 2                                                        12046603
*/*NOFETWK: P SAVE POINTER TO FIRST RB USING CDE (FROM CDRRBP)*/        12046703
*/* D (NO,LOCSVRB,YES,) PROG MGR SVRB TOP OF WAIT QUEUE */              12046803
*/* D (YES,DEQSVRB,NO,) WAITING FOR FOR MODULE (CDNIC=1)*/              12046903
         SPACE 2                                                        12047003
NOFETWK  L     WKREG1,CDRRBP           SAVE PTR FOR LATER USE  @YA00094 12047103
         CLC   CDRRBP+1(3),RMPLRBPA+1  INPUT SVRB TOP OF QUEUE @YA00094 12047303
         BNE   LOCSVRB                 NO - SETUP TO DEQU SVRB @YA00094 12047603
         TM    CDATTR,CDNIC            IS IT ALSO ON NIC QUEUE @YA00094 12048003
         BO    DEQSVRB                 YES - DEQ&POST ALL      @YA00094 12048403
*                                      WAITING SVRB'S          @YA00094 12048503
         SPACE 2                                                        12048603
*        PROCESS THE SERIAL REUS WAIT QUEUE                             12048703
         SPACE 2                                                        12048803
*/* P DECREMENT CDE USE COUNT BY ONE */                                 12048903
         SPACE 2                                                        12049003
         LH    R6,CDUSE                GET CDE USE COUNT       @YA00094 12049103
         BCTR  R6,NULL                 DECREMENT COUNT BY 1    @YA00094 12049803
         STH   R6,CDUSE                AND STORE BACK IN CDE   @YA00094 12049903
         SPACE 2                                                        12050103
*/* D (NO,USENOT0,YES,) USE COUNT = 0 */                                12050203
         SPACE 2                                                        12050303
         LTR   R6,R6                   USE COUNT = 0           @YA00094 12050403
         BNZ   USENOT0                 NO - DO NOT FREE CDE    @YA00094 12050503
         SPACE 2                                                        12050603
*/* S (,PGMAEND) CDDESTRY: REMOVE CDE AND ASSOC CORE */                 12050903
         SPACE 2                                                        12051403
         BAL   R6,CDDESTRY             FREE CDE AND ASSOC CORE @YA00094 12051503
         B     PGMAEND                 RETURN TO CALLER        @YA00094 12051803
         SPACE 2                                                        12051903
*/*USENOT0: P SAVE ADDRESS OF NEXT WAITING RB */                        12054403
         SPACE 2                                                        12054503
USENOT0  SR    WKREG1,WKREG1           CLEAR REG FOR INSERT    @YA00094 12054603
         ICM   WKREG1,MASK,RBPGMQ1     GET NEXT RB PTR         @YA00094 12054703
         SPACE 2                                                        12054803
*/* P (,POSTNEXT) DEQUE THIS SVRB FR0M CDRBP AND CHAIN NEXT TO HEAD */  12054903
         SPACE 2                                                        12055003
         ST    WKREG1,CDRRBP           PUT NEXT RB AT QUE HEAD @YA00094 12055103
         B     POSTNEXT                POST NXT WAITNG SVRB    @YA00094 12055203
         SPACE 2                                                        12055303
*/*LOCSVRB: D (NO,PGMAEND,YES,) ANY RB'S WAITNG FOR THIS MOD */         12055403
         SPACE 2                                                        12055503
LOCSVRB  LTR   WKREG1,WKREG1           ANY RB'S WAITING        @YA00094 12055603
         BZ    PGMAEND                 NO - RETURN             @YA00094 12055703
         SPACE 2                                                        12055803
*/*P GET NEXT WAITNG SVRB */                                            12055903
*/* D (NO,LOCSVRB,YES,) THIS SVRB EQ INPUT SVRB */                      12056003
         SPACE 2                                                        12056103
         L     RBREG,RBPGMQ-RBSECT(WKREG1) GET NXT RB ON Q     @YA00094 12056203
         C     RBREG,RMPLRBPA          THIS RB EQ INPUT RB     @YA00094 12056303
         BE    CHECKNIC                DEQUEUE THIS SVRB       @YA00094 12056403
         LR    WKREG1,RBREG            POINT TO NEXT RB        @YA00094 12056503
         B     LOCSVRB                 LOCATE INPUT SVRB ON    @YA00094 12056603
*                                      THIS QUEUE              @YA00094 12056703
         SPACE 2                                                        12056803
*/*CHECKNIC: P CLEAR ADDR PORTION OF RBOPSW FOR RTM */                  12056903
*/* D (NO,TCBDEQUE,YES,) MODULE IN CORE */                              12057503
*/* P (,TCBDEQUE) MOD IS SER REUS - DECREMENT USE COUNT IN CDE*/        12057603
         SPACE 2                                                        12105203
CHECKNIC XC    RBOPSW+RH(4),RBOPSW+RH  CLEAR RBOPSW+4 FOR RTM  @YA00094 12105903
         TM    CDATTR,CDNIC            MODULE IN STORAGE       @YA00094 12106403
         BO    TCBDEQUE                NO - DEQUE THE SVRB     @YA00094 12106503
*                                      YES - DECREMENT USE     @YA00094 12106703
*                                      COUNT OF SER REUS MOD   @YA00094 12107503
         LH    R6,CDUSE                GET CDE USE COUNT       @YA00094 12108103
         BCTR  R6,NULL                 DECREMENT USE COUNT     @YA00094 12108903
         STH   R6,CDUSE                AND STORE BACK IN CDE   @YA00094 12109603
         B     TCBDEQUE                DEQUEUE THE SVRB        @YA00094 12109903
         SPACE 2                                                        12110303
*/*POSTNEXT: P CLEAR WAIT QUEUE POINTER IN SVRB */                      12111403
         SPACE 2                                                        12111803
POSTNEXT XC    RBPGMQ1(3),RBPGMQ1      CLEAR QUEUE POINTER     @YA00094 12112203
         SPACE 2                                                        12112903
*/* P PUT ADDRESS OF PGM MGR ENTRY IEAQCS03 IN RBOPSW */                12113603
         SPACE 2                                                        12114403
         L     R6,AIEAQCS3             GET ENTRY IN PROG MGR   @YA00094 12114703
         ST    R6,RBOPSW+RH-RBSECT(WKREG1) ST IN WAITNG RBOPSW @YA00094 12115103
         SPACE 2                                                        12115803
*/* P SET UP FOR POST W/O ECB */                                        12116303
         SPACE 2                                                        12116903
         LR    R10,WKREG1              ADDR OF RB TO BE POST'D @YA00094 12118003
         SR    R11,R11                 RB IN THIS ADDR SPACE   @YA00094 12118303
         L     CVTREG,CVTPTR           GET CVTPTR              @YA00094 12118703
         L     R15,CVT0PT01            GET ADDRESS OF POST RTN @YA00094 12119403
         SPACE 2                                                        12119803
*/* L POST W/0 ECB - POST WAITING RB */                                 12120203
         SPACE 2                                                        12120703
         BALR  RETURN,R15              BRANCH TO POST W/O ECB  @YA00094 12121303
         SPACE 2                                                        12121703
*/* P (,PGMAEND) RETURN TO CALLER */                                    12122803
         SPACE 2                                                        12123103
         B     PGMAEND                 RETURN TO CALLER        @YA00094 12123503
         SPACE 2                                                        12124603
*/*NORETRY: P GET FIRST CDE ON TCBJPQ */                                12125103
         SPACE 2                                                        12125603
NORETRY  L     CDEMAJR,N0(WKREG2)      GET JPA QUEUE POINTER   @YA00094 12126203
         LA    CDEMAJR,0(CDEMAJR)      CLEAR HIGH ORDER BYTE            12126503
*                                                                       12127203
*  DO UNTIL END OF QUEUE OR MAJOR NIC FOUND                             12127903
*                                                                       12128403
         SPACE 2                                                        12129003
*/*MINLOOP: D (NO,PGMAEND,YES,) ANY CDE'S LEFT ON TCBJPQ */             12129503
         SPACE 2                                                        12130603
MINLOOP  LTR   CDEMAJR,CDEMAJR         ANY CDE'S                        12131103
         BZ    PGMAEND                 NO- TERMINATE                    12131603
         SPACE 2                                                        12132303
*/* D (YES,NEXTCDE,NO,) CURRENT CDE A MINOR? */                         12132703
         SPACE 2                                                        12133403
         TM    CDATTR,CDMIN            CDE A MINOR                      12133903
         BO    NEXTCDE                 YES- GET NEXT CDE                12134503
         SPACE 2                                                        12135003
*/* D (NO,TCBTEST,YES,) MAJOR CDE IN CORE? */                           12136003
         SPACE 2                                                        12136303
         TM    CDATTR,CDNIC            MAJOR CDE IN CORE                12136703
         BO    TCBTEST                 NO- GO TEST TCB = ABENDING TCB   12137503
         SPACE 2                                                        12138203
*/* D (YES,NEXTCDE,NO,) MAJOR CDE RENT. ? */                            12138403
*/* D (YES,SKIPPRB,NO,) MAJOR CDE SER REUS? */                          12138603
*/*NEXTCDE: P SAVE PREVIOUS CDE ADDRESS */                              12138903
         SPACE 2                                                        12139403
         TM    CDATTR,CDREN            MAJOR CDE REN ?         @ZA03631 12139503
         BO    NEXTCDE                 YES- GET NEXT CDE       @ZA03631 12139603
         TM    CDATTR,CDSER            MAJOR CDE REUS?         @ZA03631 12139703
         BO    SKIPPRB                 YES- SKIP FIRST PRB     @ZA03631 12139803
NEXTCDE  ST    CDEMAJR,WORD2(R10)      SAVE PREVIOUS CDE                12140003
         SPACE 2                                                        12140403
*/* P (,MINLOOP) GET NEXT CDE (NEW CURRENT) */                          12141103
         SPACE 2                                                        12141603
         L     CDEMAJR,CDCHAIN         GET NEXT CDE ON JPQ              12142203
         B     MINLOOP                 CONT. SEARCH                     12142703
*                                                                       12143303
*  IF CDE IS NOT IN CORE THEN DO:                                       12144403
*                                                                       12144903
         SPACE 2                                                        12145503
*/*TCBTEST: P GET FIRST RB FROM TCB (R5=TCBRBP(R4)) */                  12146003
*/* P GET FIRST RB FROM CDE (R1=CDRRBP(R11)) */                @ZA03534 12146203
         SPACE 2                                                        12146603
TCBTEST  EQU   *                                                        12146703
         LA    WKREG1,1                THESE INSTRS. GET LEFT- @ZA09239 12146803
         SLL   WKREG1,31               MOST BIT ON IN REG 11   @ZA09239 12146903
         OR    CDEMAJR,WKREG1          TO IND. NO RETRY PATH   @ZA09239 12147103
         L     RBREG,TCBRBP            GET FIRST RB FROM TCB   @ZA03534 12147403
         L     WKREG1,CDRRBP           GET FIRST RB FROM CDE   @ZA03534 12148003
         SPACE 2                                                        12148303
*/*RBCOMP: D (YES,DEQSVRB,NO,) DOES RB FROM CDE = THIS RB FROM TCB */   12148503
         SPACE 2                                                        12149403
RBCOMP   CLM   RBREG,MASK,CDRRBP+N1    DOES THE RB FROM THE    @ZA03534 12149703
*                                      CDE MATCH A RB ON THE   @ZA03534 12150003
*                                      TCB CHAIN?              @ZA03534 12150303
         BE    DEQSVRB                 YES- GO DEQUE THE SVRB  @ZA03534 12150603
         SPACE 2                                                        12151503
*/* D (YES,CONTSRCH,NO,) THIS RB POINT TO THE TCB? */                   12151803
         SPACE 2                                                        12152503
         TM    RBSTAB2,RBTCBNXT        THIS RB POINT TO TCB?   @ZA03534 12152703
         BO    CONTSRCH                YES- GO TO CONTINUE     @ZA03534 12153103
*                                      SEARCH WITH NEXT RB ON  @ZA03534 12153503
*                                      RBPGMQ                  @ZA03534 12153903
         SPACE 2                                                        12155903
*/* P (,RBCOMP) GET NEXT RB (R5=RBLINK(R5)) */                          12156203
         SPACE 2                                                        12157103
         L     RBREG,RBLINK            GET NEXT RB             @ZA03534 12157403
         B     RBCOMP                  GO COMPARE WITH CDRRBP  @ZA03534 12157903
         SPACE 2                                                        12163203
*/*DEQSVRB: P SET CDE USE COUNT TO ZERO */                              12164003
*/* P CLEAR CDE POINTER IN SVRB AND MARK SVRB AS TYPE 2 FOR ABEND */    12164803
         SPACE 2                                                        12165203
DEQSVRB  SR    WKREG1,WKREG1           CLEAR REG FOR STORAGE            12165603
         STH   WKREG1,CDUSE            SET CDE USE COUNT TO ZERO        12166603
         STCM  WKREG1,MASK,RBCDE1      CLEAR CDE POINTER       @ZA03243 12166903
         NI    RBSTAB1,MAX-RBTRSVRB    INSURE SVRB RESIDENT      M04161 12167303
         SPACE 2                                                        12168003
*/* P CLEAR RB QUEUE HEAD POINTER */                                    12168803
         SPACE 2                                                        12169603
         ST    WKREG1,CDRRBP           CLEAR QUEUE HEAD                 12170003
*                                                                       12170403
*        DEQUEUE WAITING RB'S AND ALLOW TO RESTART                      12171203
*                                                                       12172003
         SPACE 2                                                        12172403
*/* P SAVE VOLITAL REGISTERS IN WORK AREA (R10-14) */                   12172803
         SPACE 2                                                        12173603
         L     WKREG1,RMPLRMWA         GET MY SAVE AREA                 12174403
         STM   R10,R14,WORD3(WKREG1)   SAVE VOLITAL REGS                12174803
         SPACE 2                                                        12175603
*/*CARRYON: P GET RB ON WAIT QUEUE */                                   12176003
         SPACE 2                                                        12176803
CARRYON  L     NEXT,RBPGMQ             GET NEXT RB ON WAIT QUEUE        12177203
         SPACE 2                                                        12177603
*/* D (NO,DQEND,YES,) ANY RB'S ON WAIT QUEUE? */                        12178403
         SPACE 2                                                        12178903
         LTR   NEXT,NEXT               ANY RB'S WAITING                 12179403
         BZ    DQEND                   NO- GO TO END                    12180103
         SPACE 2                                                        12180803
*/* P CLEAR THE RB QUEUE FIELD */                                       12181603
         SPACE 2                                                        12181903
         XC    RBPGMQ+N1(ADDL),RBPGMQ+N1  CLEAR RB QUEUE POINTER        12182303
         SPACE 2                                                        12183003
*/* P PUT ADDRESS OF PGM. MGR. ENTRY IEAQCS02 IN RESUME PSW FIELD */    12183703
*/* P CLEAR CDE FIELD AND INSURE SVRB MARKED RESIDENT */                12184603
         SPACE 2                                                        12184903
         LR    RBREG,NEXT              SET FOR NEXT LOOP                12185303
         MVC   RBOPSW+RH(WORD),AIEAQCS2   PUT PGM.MGR. ADDR. IN PSW     12186003
         XC    RBCDE1(3),RBCDE1        CLEAR CDE POINTER                12186703
         NI    RBSTAB1,MAX-RBTRSVRB    INSURE SVRB MARKED RESIDENT      12187603
         SPACE 2                                                        12187903
*/* P SET UP INPUT TO POST W/O ECB */                                   12188303
         SPACE 2                                                        12189003
         LR    R10,RBREG               INPUT TO POST-10=RB TO BE POSTED 12189703
         SR    R11,R11                 0 INDICATES THIS ADDRESS SPACE   12190403
         L     CVTREG,CVTPTR           GET CVT POINTER                  12191103
         L     R15,CVT0PT01            GET POST ENTRY POINT             12191503
         SPACE 2                                                        12192403
*/* L POST W/O ECB-- POST THE WAITING RB */                             12192803
         SPACE 2                                                        12193603
         BALR  RETURN,R15              GO TO POST W/O ECB               12194003
         SPACE 2                                                        12194403
*/* P (,CARRYON) CLEAR CDE POINTER IN RB */                             12195203
         SPACE 2                                                        12196003
         XC    RBCDE+N1(ADDL),RBCDE+N1   CLEAR RB CDE POINTER           12196403
         B     CARRYON                 LOOP TO GET NEXT RB              12196803
         SPACE 2                                                        12197603
*/*DQEND: P RESTORE VOLITAL REGISTERS */                                12198403
         SPACE 2                                                        12198803
DQEND    L     WKREG1,RMPLRMWA         GET MY WORK AREA                 12199203
         LM    R10,R14,WORD3(WKREG1)   RESTORE VOLITAL REGS             12200003
*                                                                       12200803
*        GO TO CDDESTRY TO REMOVE CDE AND ASSOCIATED CORE               12201203
*                                                                       12201603
         SPACE 2                                                        12202403
*/* S (,TSTNXTCD) CDDESTRY:REMOVE CDE AND ASSOC. SPACE */               12203203
         SPACE 2                                                        12203603
         BAL   R6,CDDESTRY             GO REMOVE CDE AND ASSOC. CORE    12204003
         B     TSTNXTCD                GET NEXT CDE ON QUEUE AND        12204803
*                                      REPEAT PROCESS                   12205603
*                                                                       12206003
*  END DO GROUP                                                         12206403
*  ELSE DO                                                              12207203
*                                                                       12208003
         SPACE 2                                                        12208503
*/*SKIPPRB: P GET FIRST PRB FROM CDE */                                 12208703
*/* D (NO,NEXTCDE,YES,) RB EXIST? (CDRRBP NOT ZERO)*/                   12208803
*/*CONTSRCH: P SAVE CURRENT CDE POINTER IN WORK AREA */                 12209003
         SPACE 2                                                        12209603
SKIPPRB  L     WKREG1,CDRRBP           GET FIRST PRB FROM CDE  @ZA03631 12210003
         LTR   WKREG1,WKREG1           RB EXIST?               @ZA03631 12210103
         BZ    NEXTCDE                 NO- GET NEXT CDE        @ZA03631 12210203
CONTSRCH DS    0H                                                       12210403
         L     R15,RMPLRMWA            GET WORK AREA                    12210803
         ST    CDEMAJR,WORD2(R15)      SAVE CURRENT CDE POINTER         12211203
         SPACE 2                                                        12212003
*/*CNTSRCHI: P GET NEXT RB ON CDE QUEUE */                              12212803
         SPACE 2                                                        12213203
CNTSRCHI L     RBREG,RBPGMQ-RBSECT(WKREG1)   GET NEXT RB ON QUEUE       12213603
         SPACE 2                                                        12214403
*/* D (NO,TSTNXTCD,YES,) ANY MORE RB'S ON WAIT QUEUE? */                12215203
         SPACE 2                                                        12215603
         LTR   RBREG,RBREG             ANY MORE RB'S ON WAIT QUEUE      12216003
         BZ    TSTNXTCD                NO- GET NEXT CDE AND CONT.       12216803
         SPACE 2                                                        12217603
*/* D (YES,TCBDEQUE,NO,) THIS TCB THE ABENDING TCB? */                  12218003
         SPACE 2                                                        12218403
         CLM   TCBREG,MASK,RBOPSW+5    THIS TCB ABENDING                12219203
         BE    TCBDEQUE                YES-DECHAIN IT                   12220003
         SPACE 2                                                        12220403
*/* P (,CNTSRCHI) GET NEXT RB ON CDE/RB QUEUE */                        12220803
         SPACE 2                                                        12221603
         LR    WKREG1,RBREG            GET NEXT RB ON QUEUE             12222403
         B     CNTSRCHI                REPEAT FOR NEXT RB ON WAIT QUEUE 12222803
*        UNCHAIN WAITING RB                                             12223203
         SPACE 2                                                        12224003
*/*TCBDEQUE: P DEQUEUE WAITING RB AND ZERO POINTER */                   12224803
*/* P CLEAR CDE POINTER AND INSURE SVRB MARKED RESIDENT FOR ABEND */    12225203
*/* D (YES,TSTNXTCD,NO,) IS CDE RENT?*/                                 12225403
*/* D (NO,TSTNXTCD,YES,) IS CDE REUS?*/                                 12225603
*/* P DECREMENT THE USE COUNT IN THE CDE */                             12225803
         SPACE 2                                                        12226003
TCBDEQUE MVC   RBPGMQ+N1-RBSECT(ADDL,WKREG1),RBPGMQ+N1 UNHOOK RB        12226403
         XC    RBPGMQ(WORD),RBPGMQ     CLEAR THE WAIT QUE PTR  @ZA03534 12226803
         XC    RBCDE1(3),RBCDE1        CLEAR CDE POINTER         M04161 12227203
         NI    RBSTAB1,MAX-RBTRSVRB    INSURE SVRB RESIDENT      M04161 12227603
         TM    CDATTR,CDREN            IS CDE RENT?            @ZA03631 12227803
         BO    TSTNXTCD                YES- GO FOR NEXT CDE    @ZA03631 12228003
         TM    CDATTR,CDSER            IS CDE REUS?            @ZA03631 12228203
         BZ    TSTNXTCD                NO- GO FOR NEXT CDE     @ZA03631 12228403
         LH    R6,CDUSE                GET CDE USE COUNT AND   @ZA03631 12228603
         BCTR  R6,NULL                 DECREMENT BY ONE        @ZA03631 12228703
         STH   R6,CDUSE                                        @ZA03631 12228803
*                                                                       12228903
*  END OF ELSE DO                                                       12229503
*                                                                       12229603
         SPACE 2                                                        12230003
*/*TSTNXTCD: D (YES,PGMAEND,NO,) RTM PROCESSING FOR RECOV. RETRY */     12230403
*/* P RESET STANDARD REGISTERS */                                       12231203
         SPACE 2                                                        12232003
TSTNXTCD TM    RMPLFLG1,RMPLRCOV       RTM IN RETRY            @YA00094 12232403
         BO    PGMAEND                 YES-RESOURCE MGR CMPLETE@YA00094 12232803
         SPACE 2                                                        12233603
         DS    0H                                                       12234403
         L     R4,RMPLTCBA             RESET TCB ADDRESS                12234803
         L     R7,RMPLASCB             RESET ASCB ADDRESS               12235203
         L     WKREG1,RMPLRMWA         GET MY WORKAREA                  12236003
         SPACE 2                                                        12236803
*/* P (,MINLOOP) GET PREVIOUS AND CURRENT CDE ADDRESSES */              12237303
         SPACE 2                                                        12237803
         L     CDEREG,WORD2(WKREG1)    GET PREVIOUS CDE                 12238403
         L     CDEMAJR,CDCHAIN-CDENTRY(CDEREG)  GET NEXT(CURRENT) CDE   12239203
         B     MINLOOP                 PROCESS NEXT CDE                 12239603
*                                                                       12240003
*  LAST CDE ON JPQ HAS BEEN PROCESSED                                   12240803
*                                                                       12241603
         SPACE 2                                                        12242003
*/*PGMAEND: P RE-ESTABLISH CALLERS REGISTERS */                         12242803
         SPACE 2                                                        12243203
PGMAEND  L     WKREG1,RMPLRMWA         GET MY WORKAREA                  12244003
         L     R13,ZERO(WKREG1)        GET CALLERS SAVEAREA ADDR.       12244403
         LM    R14,R12,WORD4(R13)      RESTORE CALLERS REGS.            12244803
         SPACE 2                                                        12245603
*/* P SET RETURN CODE = ZERO */                                         12246403
         SPACE 2                                                        12246803
         SR    R15,R15                 SET 0 RETURN CODE                12247203
         SPACE 2                                                        12248003
*/* R RETURN R14 */                                                     12248803
         SPACE 2                                                        12249203
         BR    RETURN                   RETURN TO CALLER                12249603
         DROP  SAVEREG                 DONT NEED PGMA PARM LIST         12250403
         TITLE '         IEAVLK02 - IEAPPGMX ROUTINE'                   12251203
         SPACE 2                                                        12251603
*/* E IEAPPGMX */                                                       12252003
*/* P ESTABLISH ADDRESSIBILITY */                                       12252803
         SPACE 2                                                        12253603
IEAPPGMX DS    0H                      EXIT INTERFACE                   12254003
         STM   R14,R12,WORD4(R13)      SAVE CALLERS REGISTERS           12254403
         BALR  BASEREG,NULL            SET UP ADDRESSIBILITY            12255203
         USING *,BASEREG               TELL ASSEMBLER                   12256003
         L     BASEREG,AMODENT         GET POINTER TO FRONT OF MOD.     12256403
         USING MODENT,BASEREG          TELL ASSEMBLER                   12256803
         SPACE 2                                                        12257603
*/* L SETFRR-- ESTABLISH RECOVERY ROUTINE */                            12258403
         SPACE 2                                                        12258903
         SETFRR A,FRRAD=FRREXIT,WRKREGS=(2,3),PARMAD=(2) SET RECOVERY   12259403
         ST    BASEREG,N4(R2)          PUT BASEADDRESS IN PARM AREA     12260003
         ST    R13,N0(R2)              PUT CALLERS REG SAVE IN PARMLST  12260803
         LR    R13,R2                  MOVE PARMLIST POINTER   @ZA02733 12261003
         L     CVTREG,CVTPTR           RESET CVT ADDRESS         M01976 12261203
         SPACE 1                                                        12261603
*        DECREMENT CDE USE COUNT FOR EXITING MODULE AND FREE CORE       12262403
*        AS REQUIRED.                                                   12263203
         SPACE 2                                                        12263603
*/*P GET CDE ADDRESS FROM EXITING RB */                                 12264003
         SPACE 2                                                        12264803
         L     CDEREG,RBCDE            GET EXITING CDE                  12265603
         LA    CDEREG,0(CDEREG)        CLEAR HIGH ORDER BYTE            12266003
         SPACE 2                                                        12266403
*/* D (NO,EOTCHK,YES,) CDE EXIST FOR THIS REQUEST? */                   12267203
         SPACE 2                                                        12268003
         LTR   CDEREG,CDEREG           Q. CDE EXIST FOR THIS REQUEST    12268403
         BZ    EOTCHK                  A. NO- CHECK FOR END OF TASK     12268803
         SPACE 2                                                        12269603
*/*GETMAJOR: D (NO,MAJREQ,YES,) EXITING REQUEST FOR MAJOR CDE */        12270403
         SPACE 2                                                        12270803
GETMAJOR LR    CDEMAJR,CDEREG          PUT CURRENT IN MAJOR REG.        12271203
         TM    CDATTR-CDENTRY(CDEREG),CDMIN  Q. EXITING CDE A MINOR     12272003
         BZ    MAJREQ                  A. NO- MAJOR REG SET UP ALREADY  12272603
         SPACE 2                                                        12273203
*/* P GET MAJOR CDE FOR EXITING REQUEST */                              12273603
         SPACE 2                                                        12274603
         L     CDEMAJR,CDXLMJP-CDENTRY(CDEREG)   GET MAJOR CDE          12274803
         SPACE 2                                                        12275403
*/*MAJREQ: D (NO,JPQMOD,YES,) CDE ON LPA QUEUE? */                      12276003
*/* P SAVE REGS 11 - 13 IN FRR PARM LIST AREA */                        12276803
*/* L SETLOCK-- GET CMS LOCK */                                         12277603
*/* P RESTORE REGS 11 - 13 FROM FRR PARM. LIST */                       12278003
*/*JPQMOD: P DECREMENT CDE USE COUNT BY ONE */                          12278403
         SPACE 2                                                        12279203
MAJREQ   TM    CDATTR,CDNIP            CDE IN LPA TEST          @Y04990 12280003
         BZ    JPQMOD                  NO- SKIP CMS LOCK OBTAIN @Y04990 12280403
         STM   R11,R13,N8(R2)          SAVE REGS OVER SETLOCK   @Y04990 12280803
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                   @Y04990X12281603
               RELATED=(IEAVLK02,CDHKEEP,EXITSRCH)              @Y04990 12282403
         LM    R11,R13,N8(R2)          RESTORE REGS             @Y04990 12282803
JPQMOD   LH    WKREG1,CDUSE            GET CDE USE COUNT                12283203
         BCTR  WKREG1,NULL             DECREMENT COUNT BY ONE           12284003
         STH   WKREG1,CDUSE            AND PUT IT BACK IN THE CDE       12284803
*                                                                       12285203
*    IF ANY RB'S WAITING FOR THIS CDE                                   12285603
*                                                                       12286403
         SPACE 2                                                        12287203
*/* P GET ADDRESS OF ANY WAITING RB'S */                                12287703
         SPACE 2                                                        12288203
         L     WKREG1,RBPGMQ           GET PGM. REQUEST QUEUE           12288803
         LA    WKREG1,0(WKREG1)        CLEAR HIGH ORDER BYTE            12289603
         SPACE 2                                                        12290003
*/* P PUT WAITING RB'S ADDRESS IN CDE */                                12290403
         SPACE 2                                                        12291203
         ST    WKREG1,CDRRBP           PUT QUEUE FIELD IN CDE           12292003
         SPACE 2                                                        12292403
*/* D (NO,CLEARCDE,YES,) RB'S WAITING TO USE THIS REUS. MOD? */         12293203
         SPACE 2                                                        12293603
         LTR   WKREG1,WKREG1           Q. REQ. OUTSTANDING FOR THIS CDE 12294403
         BZ    CLEARCDE                A. NO- GO TO CDHKEEP             12294803
*                                                                       12295203
*     THEN DO:                                                          12296003
*                                                                       12296803
         SPACE 2                                                        12297203
*/* P PUT ADDRES OF PGM. MGR. ENTRY IEAQCS03 IN RESUME PSW */           12297603
         SPACE 2                                                        12298403
         L     WKREG2,AIEAQCS3         GET ENTRY IN PGM. MGR.           12299203
         ST    WKREG2,RBOPSW+RH-RBSECT(WKREG1)  PUT IN WAITING RB OPSW  12299603
         SPACE 2                                                        12300003
*/* P SET UP FOR POST W/O ECB */                                        12300803
         SPACE 2                                                        12301603
         LR    WKREG2,R13              SAVE SAVE AREA ADDR. OVER POST   12302003
         LR    R10,WKREG1              ADDRESS OF RB TO BE POSTED       12302403
         SR    R11,R11                 INDICATE RB IN THIS ADDR. SPACE  12303203
         L     R15,CVT0PT01            GET ADDRESS OF POST RTN.         12304003
         SPACE 2                                                        12304403
*/* L (,EOTCHK) POST W/O ECB-- POST THE WAITING RB */                   12304803
         SPACE 2                                                        12305603
         BALR  RETURN,R15              GO TO POST W/O ECB               12306403
         LR    R13,WKREG2              RESTORE REG. SAVED OVER POST     12306803
         B     EOTCHK                  RETURN TO CALLER                 12307203
*                                                                       12308003
*     END DO GROUP                                                      12308803
*     ELSE DO:                                                          12309303
*                                                                       12309803
         SPACE 2                                                        12310403
*/*CLEARCDE: S CKHKEEPI:FREE CDE AND ANY ASSOC. STORAGE */              12311203
         SPACE 2                                                        12311603
CLEARCDE BAL   RETURN,CDHKEEPI         GO TO CDHKEEP TO FREE            12312003
*                                      CDE AND ANY CORE NECESSARY       12312803
*  NOTE: REGISTERS 3,4,5,7,11,12 ARE ALREADY SET FOR ENTRY              12313603
*                                                                       12314003
*     IF THIS IS THE LAST RB ON TCB QUEUE (EOT)                         12314403
*                                                                       12315203
         SPACE 2                                                        12316003
*/*EOTCHK: P TURN PROGRESS BYTE ZERO ON IN THE FRR PARM LIST*/ @ZA02733 12316203
*/* D (NO,FINIS,YES,) IS THIS AN END-OF-TASK REQUEST? */                12316403
         SPACE 2                                                        12316803
EOTCHK   MVI   FRRPLCK0-FRRPLIST(R13),N1 SET PARM LIST PROGRES @ZA02733 12317003
*                                      BYTE ON                 @ZA02733 12317203
         TM    RBSTAB2,RBTCBNXT        Q. TCB NEXT INDIC. EOT           12317603
         BZ    FINIS                   A. NO- RETURN TO CALLER          12318403
*                                                                       12318803
*  THEN DO:                 /*  EOT WORK       */                       12319203
*                                                                       12320003
         SPACE 2                                                        12320503
*/* P GET ADDRESS OF LLE QUEUE FROM TCB */                              12321003
         SPACE 2                                                        12322003
         L     WKREG2,TCBLLS           GET LLE QUEUE POINTER            12322403
         SPACE 2                                                        12322803
*/* D (NO,FINIS,YES,) ANY LLE'S TO FREE? */                             12323603
         SPACE 2                                                        12324403
         LTR   WKREG2,WKREG2           ANY LLES TO FREE                 12324803
         BZ    FINIS                   NO- RETURN TO CALLER             12325203
         USING LLE,WKREG2              SET UP ADDRESSING                12326003
*                                                                       12326803
*  DO WHILE LLE'S EXITS                                                 12327203
*                                                                       12327603
         SPACE 2                                                        12328403
*/*LLELOOP: P GET CDE FOR THIS LLE */                                   12328903
         SPACE 2                                                        12329403
LLELOOP  L     CDEREG,LLECDPT          GET CDE FOR THIS LOAD            12330003
         SPACE 2                                                        12330903
*/* D (YES,MAJLOAD,NO,) THIS CDE A MAJOR CDE? */                        12331303
         SPACE 2                                                        12331803
         LR    CDEMAJR,CDEREG          SET MAJOR CDE UP ALSO            12332703
         TM    CDATTR-CDENTRY(CDEREG),CDMIN  Q. THIS CDE A MINOR        12333103
         BZ    MAJLOAD                 A. NO- MAJOR ALREADY SET         12333603
         SPACE 2                                                        12334503
*/* P GET MAJOR CDE */                                                  12334903
         SPACE 2                                                        12335403
         L     CDEMAJR,CDXLMJP-CDENTRY(CDEREG)  GET MAJOR CDE           12336303
         SPACE 2                                                        12336703
*/*MAJLOAD: D (NO,JPQMOD1,YES,) CDE ON LPA QUEUE? */                    12337203
*/* P SAVE R11 - R13 IN REGS 1,5, AND 15 */                             12338103
*/* L SETLOCK-- GET CMS LOCK */                                         12338503
*/* P RESTORE R11 - R13 FROM SAVE REGS */                               12339403
*/*JPQMOD1: P DECREMENT CDE USE COUNT BY LLE USE COUNT */               12339903
         SPACE 2                                                        12340303
MAJLOAD  TM    CDATTR,CDNIP            CDE ON LPA TEST                  12340803
         BZ    JPQMOD1                 NO- SKIP GETTING CMS LOCK Y04990 12341703
         LR    R1,R11                  SAVE R13                 @Y04990 12342103
         LR    R5,R12                  SAVE R12                 @Y04990 12342603
         LR    R15,R13                 SAVE R13                 @Y04990 12343503
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                   @Y04990X12343903
               RELATED=(IEAVLK02,CDHKEEP,EXITSRCH)              @Y04990 12344403
         LR    R11,R1                  RESTORE R11              @Y04990 12345303
         LR    R12,R5                  RESTORE R12              @Y04990 12345703
         LR    R13,R15                 RESTORE R13              @Y04990 12346203
JPQMOD1  LH    WKREG1,CDUSE            GET CDE USE COUNT                12347103
         SH    WKREG1,LLECOUNT         SUBTRACT THE LLE USE COUNT       12347503
         STH   WKREG1,CDUSE            RETURN COUNT TO CDE              12348403
         SPACE 2                                                        12348903
*/* P SAVE LLE ADDRESS OVER INTERFACE */                                12349403
         SPACE 2                                                        12350003
         LR    RBREG,WKREG2            SAVE LLE OVER INTERFACE          12350703
         SPACE 2                                                        12351403
*/* S CDHKEEPI:FREE CDE AND ASSOC. STORAGE */                           12351703
         SPACE 2                                                        12352103
         BAL   RETURN,CDHKEEPI         GO TO HOUSEKEEPING RTN.          12352803
         SPACE 2                                                        12353503
*/* P GET NEXT LLE ON QUEUE */                                          12354203
         SPACE 2                                                        12354903
         L     WKREG2,LLECHN-LLE(RBREG)   GET NEXT LLE ON CHAIN         12355603
         SPACE 2                                                        12355903
*/* P INSURE ASCB IN R7 FOR FREEMAIN */                                 12356303
         SPACE 2                                                        12357003
         L     ASCBREG,PSAAOLD         GET CURRENT ASCB ADDR.           12357703
         SPACE 2                                                        12358403
*/* L FREEMAIN-- FREE THE CURRENT LLE (SP255) */                        12359103
         SPACE 2                                                        12359503
         FREEMAIN  RC,A=(RBREG),LV=LLESIZE,SP=255,BRANCH=YES FREE LLE   12360003
         SPACE 2                                                        12360603
*/* D (YES,LLELOOP,NO,) ANY MORE LLE'S ON QUEUE? */                     12361203
         SPACE 2                                                        12362003
         LTR   WKREG2,WKREG2           Q. MORE LLE'S                    12362503
         BNZ   LLELOOP                 A. YES, PROCESS NEXT             12363003
         SPACE 2                                                        12364003
*/* P GET TERMINATING TCB ADDRESS */                                    12364503
         SPACE 2                                                        12365003
         L     TCBREG,PSATOLD          GET TCB ADDRESS                  12365503
         SPACE 2                                                        12366003
*/* P CLEAR THE LLE QUEUE HEADER FIELD IN THE TCB */                    12367003
         SPACE 2                                                        12367503
         ST    WKREG2,TCBLLS           CLEAR LLE POINTER IN TCB         12368003
         DROP  WKREG2                                                   12368503
*  END DO GROUP                                                         12369203
*  ELSE:                                                                12370003
*  END ELSE DO GROUP:                                                   12370603
         SPACE 2                                                        12371203
*/*FINIS: P RESTORE CALLERS SAVE AREA ADDRESS */               @ZA02733 12371503
*/* L SETFRR-- REMOVE FRR FROM STACK */                                 12371803
         SPACE 2                                                        12372403
FINIS    L     R13,N0(R13)             RESTORE SAVE AREA PTR   @ZA02733 12372703
         SETFRR D,WRKREGS=(2,3)        REMOVE RECOVERY RTN              12373603
         SPACE 2                                                        12374203
*/* P RESTORE CALLERS REGISTERS */                                      12374803
         SPACE 2                                                        12375403
         LM    R14,R12,WORD4(R13)      RESTORE CALLERS REGS             12376003
         SPACE 2                                                        12376603
*/* P SET RETURN CODE = ZERO */                                         12377203
         SPACE 2                                                        12377803
         SR    R15,R15                 INDICATE COMPLETE SUCCESSFULLY   12378403
         SPACE 2                                                        12379003
*/* R RETURN R14 */                                                     12379603
         SPACE 2                                                        12380203
         BR    RETURN                  RETURN TO CALLER                 12380803
         TITLE '             IEAVLK02 - CDHKEEP ROUTINE'                12381403
         SPACE 2                                                        12382003
*/* E CDHKEEP */                                                        12382603
*/* P ESTABLISH ADDRESSIBILITY */                                       12383203
         SPACE 2                                                        12383803
CDHKEEP  BALR  BASEREG,NULL            SET UP ADDRESSIBILITY            12384403
         USING *,BASEREG                                                12385003
         L     BASEREG,AMODENT         GET POINTER TO FRONT OF MOD.     12385603
         USING MODENT,BASEREG          TELL ASSEMBLER                   12386203
         SPACE 2                                                        12386803
*/*CDHKEEPI: P SAVE RETURN ADDRESS IN UNUSED REGISTER */                12387403
         SPACE 2                                                        12388003
CDHKEEPI LR    R6,RETURN               SAVE RETURN REGISTER             12388603
         SPACE 2                                                        12389203
*/* P TURN ON NOT FUNCTIONAL FLAG IN CDE */                             12389803
         SPACE 2                                                        12390403
         OI    CDATTR,CDNFN            SET NOT FUNCTIONAL FLAG          12391003
*                                      LOAD/BRANCH COULD CAUSE FLAG NOT 12391603
*                                      SET IN PROGRAM MANAGER           12392203
         SPACE 2                                                        12392803
*/* P CLEAR HIGH ORDER BYTES OF CDE REGISTERS */                        12393403
         SPACE 2                                                        12394003
         LA    R12,N0(R12)             CLEAR HIGH ORDER BYTE OF CDE     12394603
         LA    CDEMAJR,N0(CDEMAJR)     CLEAR HIGH BYTE                  12395203
         SPACE 2                                                        12395803
*/*P GET CDE USE COUNT */                                               12396403
         SPACE 2                                                        12397003
         LH    WKREG1,CDUSE            GET USE COUNT                    12397603
         SPACE 2                                                        12398203
*/* D (NO,ERROR,YES,) USE COUNT = ZERO? */                              12398803
         SPACE 2                                                        12399403
         LTR   WKREG1,WKREG1           Q. USE COUNT ZERO.               12400002
         BNZ   ERROR                   A. NO-RETURN.            @Y04990 12450002
         SPACE 2                                                        12500002
*/* D (YES,LPAONLY,NO,) MODULE IN LPA? */                               12502002
         SPACE 2                                                        12510002
         TM    CDATTR,CDNIP            Q. IS MODULE IN CVTQLPAQ         12550002
         BO    LPAONLY                 A. YES-SEARCH ONLY LPA AND       12600002
*                                      DO NOT FREE MODULES              12700002
         SPACE 2                                                        12710002
*/*CDDESTRY: P GET EXTENT LIST ADDRESS */                               12712002
         SPACE 2                                                        12720002
CDDESTRY L     XLREG,CDXLMJP           GET XLTLIST POINTER              12750002
         USING XTLST,XLREG             POINTER TO EXTENT LIST           12760002
         LA    XLREG,ZERO(XLREG)       CLEAR HIGH ORDER BYTE            12800002
         SPACE 2                                                        12810002
*/* D (YES,,NO,ORDERCDQ) IS THERE AN EXTENT LIST? */                    12812002
         SPACE 2                                                        12820002
         LTR   XLREG,XLREG             Q. IS THERE AN EXTENT LIST       12850002
         BZ    ORDERCDQ                A. NO- DO NOT TRY TO FREE IT     12900002
         SPACE 2                                                        12910002
*/*  P GET LENGTH OF MODULE FROM XL */                                  12912002
         SPACE 2                                                        12920002
         L     WKREG2,XTLMSBLA         GET LENGTH OF MODULE             12950002
         LA    WKREG2,ZERO(WKREG2)     CLEAR HIGH ORDER BYTE            12960002
         SPACE 2                                                        12970002
*/* P GET ADDRESS TO BE FREED FROM XL */                                12972002
         SPACE 2                                                        12980002
         L     WKREG1,XTLMSBAA         GET ADDRESS TO BE FREED          13000002
         SPACE 2                                                        13010002
*/* D (NO,ORDERCDQ,YES,) IS EXTENT LIST COMPLETE? */                    13012002
         SPACE 2                                                        13020002
         LTR   WKREG1,WKREG1           Q. IS EXTENT LIST COMPLETE       13050002
*                                      (IF MODULE NIC LIST MAY NOT BE)  13100002
         BZ    ORDERCDQ                A. NO- DO NOT TRY TO FREE MOD.   13150002
         SPACE 2                                                        13160002
*/* D (NO,NOTSPZ,YES,) SUBPOOL 0 MODULE? */                             13162002
         SPACE 2                                                        13170002
         TM    CDATTR2,CDSPZ           Q. SUBPOOL 0 MODULE              13200002
         BZ    NOTSPZ                  A. NO- TRY JPA                   13250002
         SPACE 1                                                        13250402
*  SPECIAL CODE TO FREE MULTIPLE EXTENTS FOR OS LOADER SUPPORT          13252002
         SPACE 1                                                        13254002
*/* P GET NUMBER OF ENTRIES IN XL */                                    13256002
         SPACE 2                                                        13258002
         L     R10,XTLNRFAC            GET NUMBER OF ENTRIES            13260002
         SPACE 2                                                        13312002
*/* P CALCULATE ADDRESS OF ADDRESS FIELDS */                            13312402
         SPACE 2                                                        13314002
         LA    R2,XTLMSBLA             GET ADDRESS OF SIZE              13317002
         DROP  XLREG                   DONT NEED XTLST ANY LONGER       13318002
         LR    R9,R2                   SET UP FOR ADDRESS FIELD         13320002
         SLL   R10,N2                  MULTIPLY BY FOUR          M03270 13330002
         AR    R9,R10                  ADDR. IN R9               M03270 13334002
         SRL   R10,N2                  RESET TO COUNT OF ENTRIES M03270 13338002
         L     ASCBREG,PSAAOLD         GET ASCB FOR FREEMAIN            13342002
         SPACE 2                                                        13342402
*/* FREE: L FREEMAIN-- FREE SEGMENT OF MODULE FROM SUBPOOL 0 */         13342502
         SPACE 2                                                        13342802
FREE     L     LNG,N0(R2)              GET ACTUAL LENGTH                13343202
         L     ADDR,N0(R9)             GET ACTUAL ADDRESS               13343602
         FREEMAIN RC,LV=(R0),A=(R1),SP=Q250,BRANCH=YES  FREE EXTENT     13344002
         SPACE 2                                                        13344402
*/* P CALCULATE NEXT LENGTH AND ADDRESS FIELDS */                       13344502
         SPACE 2                                                        13344802
         LA    R2,N4(R2)               GET NEXT LENGTH                  13346002
         LA    R9,N4(R9)               GET NEXT ADDRESS                 13348002
         SPACE 2                                                        13348102
*/* P DECREMENT NO. OF EXTENTS TO GO BY ONE */                          13358402
*/* D (YES,FREE,NO,CDSSNOP) ANY MORE EXTENTS? */                        13368402
         SPACE 2                                                        13369102
         BCT   R10,FREE                IF MORE EXTENTS, FREE ONE M03270 13379402
         B     CDSSNOP                 GO FREE MODULE                   13389702
         SPACE 2                                                        13399702
*/*NOTSPZ: D (YES,,NO,LPAMOD) MODULE IN SP251? */                       13422202
         SPACE 2                                                        13425002
NOTSPZ   TM    CDATTR,CDJPA            Q. MODULE IN 251                 13437502
         BZ    LPAMOD                  A. NO-SET TO 252                 13450002
         SPACE 2                                                        13460002
*/* P (,FREEMOD) SET SUBPOOL FOR FREEMAIN TO 251 */                     13462002
         SPACE 2                                                        13470002
         LA    WKREG0,Q251             A. YES- SET SUBPOOL TO 251       13500002
         B     FREEMOD                 GO FREE MODULE                   13550002
         SPACE 2                                                        13560002
*/*LPAMOD: P SET SUBPOOL FOR FREEMAIN TO 252 */                         13562002
         SPACE 2                                                        13570002
LPAMOD   LA    WKREG0,Q252             SET SUBPOOL FOR FREE TO 252      13600002
         SPACE 2                                                        13610002
*/*FREEMOD: L FREEMAIN-- FREE MODULE */                                 13612002
         SPACE 2                                                        13620002
FREEMOD  EQU   *                                                        13625003
         LTR   CDEMAJR,CDEMAJR         TEST LEFT-MOST BIT FOR @ZA09239  13630003
         BNM   NOTRM                   RESOURCE MANAGER ENTRY @ZA09239  13635003
         L     R7,TCBJSTCB             IF YES, SET TCBEOTFM   @ZA09239  13637003
         OI    276(R7),X'80'           IN JOB STEP TCB        @ZA09239  13640003
NOTRM    L     ASCBREG,PSAAOLD         GET ASCB FOR GETMAIN   @ZA09239  13645003
*                                                                       13652002
*   FREE MODULE BEING DELETED OR WHICH ISSUED EXIT.                     13660002
*   MODULE LENGTH AND ADDRESS IS OBTAINED FROM THE EXTENT LIST          13670002
*   MODULE SUBPOOL IS DETERMAINED FROM CDE ATTRIBUTES                   13680002
*                                                                       13690002
         FREEMAIN RC,LV=(WKREG2),A=(WKREG1),SP=(WKREG0),BRANCH=YES      13700002
*                                                                       13800002
         L     R7,TCBJSTCB             GET POINTER TO JSTCB   @ZA09239  13800503
         TM    276(R7),X'80'           TCBEOTFM TURNED ON?    @ZA09239  13801003
         BZ    NOEOTFM                 NO. LEAVE IT ALONE.    @ZA09239  13802003
         LTR   CDEMAJR,CDEMAJR         TURNED ON BY ME?       @ZA09239  13803003
         BNM   NOEOTFM                 NO. LEAVE IT ALONE     @ZA09239  13804003
         XI    276(R7),X'80'           YES. TURN IT OFF       @ZA09239  13805003
NOEOTFM  L     ASCBREG,PSAAOLD         RESTORE REG 7          @ZA09239  13806003
         SPACE 2                                                        13810002
*/*CDSSNOP: P DSS HOOK */                                               13812002
         SPACE 2                                                        13820002
CDSSNOP  BCR   NULL,NULL               DSS HOOK AFTER MODULE IS FREED   13850002
*                                                                       13900002
         SPACE 2                                                        13910002
*/*ORDERCDQ: P GET JOB PACK QUEUE HEADER FROM JSTCB */                  13912002
         SPACE 2                                                        13920002
ORDERCDQ LA    CDEMAJR,0(CDEMAJR)      CLEAR HIGH ORDER BYTE  @ZA09239  13930003
         L     WKREG1,TCBJSTCB         GET JOB STEP TCB                 13940003
         LA    WKREG1,TCBJPQ-TCB(WKREG1)  GET JOB PACK QUEUE POINTER    14000002
         SPACE 2                                                        14010002
*/* S (FND,,NOTF,GETOUT) CDESRCH:SEARCH JPQ FOR MODULE */               14012002
         SPACE 2                                                        14020002
         BAL   RETURN,CDESRCH          TEST IF CDE IS ON JPQ            14050002
         B     GETOUT                  WAS NOT ON JPQ                   14150002
         SPACE 2                                                        14160002
*/* S (,EXITSRCH) REMOVAL:DEQUEUE CDE */                                14162002
         SPACE 2                                                        14170002
         BAL   RETURN,REMOVAL          MOD FOUND, GO DEQUEUE IT         14200002
         B     EXITSRCH                GO TO COMMON TERMINATION CODE    14250002
         SPACE 2                                                        14260002
*/*LPAONLY: P INITIALIZE REGISTERS FOR LPA SERACH */                    14262002
         SPACE 2                                                        14270002
LPAONLY  DS    0H                      SEARCHES LPA FOR MODULE          14300002
         L     CVTREG,CVTPTR           INSURE CVT IN PROPER REG.        14560002
         L     WKREG1,CVTQLPAQ         GET LPAQ POINTER                 14570002
         SPACE 2                                                        14580002
*/* S (FND,,NOTF,ERROR) CDESRCH:SEARCH LPA QUEUE FOR MODULE */          14582002
         SPACE 2                                                        14590002
         BAL   RETURN,CDESRCH          SEARCH LPAQ                      14600002
         B     ERROR                   IS NOT FOUND ON ANY QUEUE        14700002
         SPACE 2                                                        14710002
*/* S REMOVAL:DEQUEUE CDE */                                            14712002
         SPACE 2                                                        14720002
         BAL   RETURN,REMOVAL          REMOVE MAJOR AND MINORS FROM QUE 14750002
         SPACE 2                                                        14760002
*/* P SAVE VOLITAL REGISTERS OVER SETLOCK */                            14762002
         SPACE 2                                                        14770002
         LR    WKREG1,CDEREG           SAVE REGISTER OVER SETLOCK       14800002
         LR    WKREG0,CDEMAJR          SAVE MAJOR CDE OVER SETLOCK      14810002
         LR    WKREG2,SAVEREG          SAVE SAVE AREA OVER SETLOCK      14820002
         SPACE 2                                                        14830002
*/* L SETLOCK-- RELEASE CMS LOCK */                                     14832002
         SPACE 2                                                        14840002
         SETLOCK RELEASE,TYPE=CMS,RELATED=LPAONLY ROUTINE               14850002
         SPACE 2                                                        14860002
*/* P RESTORE VOLITAL REGISTERS */                                      14862002
         SPACE 2                                                        14870002
         LR    CDEREG,WKREG1           RESTORE SAVED REGISTER           14900002
         LR    CDEMAJR,WKREG0          RESTORE MAJOR CDE POINTER        14910002
         LR    SAVEREG,WKREG2          RESTORE SAVE AREA POINTER        14920002
         SPACE 2                                                        14930002
*/*EXITSRCH: P GET EXTENT LIST (XL) */                                  14932002
         SPACE 2                                                        14940002
EXITSRCH DS    0H                      FREES EXTENT LIST, CDE           14950002
         L     WKREG1,CDXLMJP          GET EXTENT LIST                  15000002
         LA    WKREG1,0(WKREG1)        CLEAR HIGH BYTE IN CASE          15010002
*                                      FETCH SET IT ON                  15020002
         SPACE 2                                                        15030002
*/* D (NO,CDDMLP,YES,) EXTENT LIST EXIST? */                            15032002
         SPACE 2                                                        15040002
         LTR   WKREG1,WKREG1           Q. EXTENT LIST EXIST             15050002
         BZ    CDDMLP                  A. NO- DO NOT TRY TO FREE IT     15100002
         SPACE 2                                                        15110002
*/* P GET LENGTH OF EXTENT LIST AND ASCB ADDRESS FOR FREEMAIN */        15112002
         SPACE 2                                                        15120002
         L     ASCBREG,PSAAOLD         GET ASCB FOR FREEMAIN            15150002
         L     WKREG0,XTLLNTH-XTLST(WKREG1) GET LENGTH OF EXTENT LIST   15160002
         SPACE 2                                                        15170002
*/* L FREEMAIN-- FREE EXTENT LIST FROM SP255 */                         15172002
         SPACE 2                                                        15180002
         FREEMAIN RC,LV=(WKREG0),A=(WKREG1),SP=255,BRANCH=YES           15200002
         SPACE 2                                                        15210002
*/*CDDMLP: P GET ASCB ADDRESS FOR FREEMAIN */                           15212002
         SPACE 2                                                        15220002
CDDMLP   L     ASCBREG,PSAAOLD         GET ASCB FOR FREEMAIN            15250002
         SPACE 2                                                        15260002
*/*CDDMLP1: P GET ADDRESS OF NEXT CDE TO BE FREED (N+1) */              15262002
         SPACE 2                                                        15270002
CDDMLP1  L     WKREG2,CDCHAIN          GET NEXT CDE TO BE FREED         15300002
         SPACE 2                                                        15310002
*/* L FREEMAIN-- FREE CDE FROM SUBPOOL 255 (LSQA) */                    15312002
*/* P NOTE: IF REQ'ST FROM SP255 AND ADDR. IS IN SP245, FREE IS         15318802
*/* FROM SQA(245) */                                                    15319202
         SPACE 2                                                        15320002
         FREEMAIN RU,LV=CDESIZE,A=(CDEMAJR),SP=255,BRANCH=YES           15350002
         SPACE 2                                                        15360002
*/* D (YES,,NO,GETOUT) ANY MORE CDE'S TO BE FREED? */                   15362002
         SPACE 2                                                        15370002
         LTR   WKREG2,WKREG2           Q. ANY MORE CDE'S                15400002
         BZ    GETOUT                  A. NO-FINISH                     15450002
         SPACE 2                                                        15460002
*/* P (,CDDMLP1) GET NEXT CDE TO FREE IN WORK REG */                    15562002
         SPACE 2                                                        15570002
         LR    CDEMAJR,WKREG2          SET UP TO FREE NEXT MINOR        15600002
         B     CDDMLP1                 LOOP                             15650002
         SPACE 2                                                        15660002
*/*GETOUT: P RESET RETURN REGISTER */                                   15662002
         SPACE 2                                                        15670002
GETOUT   LR    RETURN,R6               RESTORE RETURN REGISTER          15700002
         SPACE 2                                                        15710002
*/* R RETURN R14 */                                                     15712002
         SPACE 2                                                        15720002
         BR    RETURN                  EXIT                             15750002
         TITLE '          IEAVLK02 - CKHKEEP SUBROUTINES'               15760002
*   NAME - CDESRCH                                                      15770002
*                                                                       15780002
*   PURPOSE - THIS SUBROUTINE SEARCHES THE JPQ OR LPQ FOR A SPECIFIED   15790002
*        CDE.  WHEN FOUND, CONTROL IS RETURNED TO R14+4. IF NOT FOUND,  15794002
*        CONTROL IS RETURNED TO R14+0.                                  15796002
*                                                                       15798002
*   INPUT - R1 = ADDRESS OF QUEUE TO BE SEARCHED                        15798402
*        R11 = ADDR. OF MAJOR CDE REQUESTED                             15798802
*        R14 = RETURN ADDRESS (MUST BE BRANCH TABLE)                    15799202
*                                                                       15799602
*   OUTPUT - R2 = CDE REQUESTED                                         15799702
*        R1  = ADDRESS OF PREVIOUS CDE ON QUEUE                         15799802
*        ALL OTHER REGISTERS REMAIN AS ON ENTRY                         15799902
         SPACE  2                                                       15810002
*/*CDESRCH: E CDESRCH */                                                15820002
*/* P GET NEXT CDE */                                                   15830002
         SPACE 2                                                        15832002
CDESRCH  DS    0H                      SEARCH CDE QUEUE FOR ADDRESS     15833302
         L     WKREG2,CDCHAIN-CDENTRY(WKREG1) GET NEXT CDE              15850002
         LA    WKREG2,N0(WKREG2)       CLEAR HIGH BYTE                  15860002
         SPACE 2                                                        15870002
*/* D (YES,%RET1,NO,) DOES THIS CDE = SUBJ CDE? */                      15872002
         SPACE 2                                                        15880002
         CR    WKREG2,CDEMAJR          DOES CDE ON QUEUE = SUBJECT CDE  15900002
         BC    EQUAL,N4(RETURN)        YES- RETURN TO CALLER            15950002
         SPACE 2                                                        15960002
*/* D (YES,%RET2,NO,) END OF QUEUE? */                                  15962002
         SPACE 2                                                        15970002
         LTR   WKREG2,WKREG2           Q. IS THIS END OF QUEUE          16000002
         BCR   EQUAL,RETURN            A. YES-RETURN TO CALLER          16050002
         SPACE 2                                                        16052002
*/* P (,CDESRCH) SET UP LOOP REGISTER */                                16052402
         SPACE 2                                                        16054002
         LR    WKREG1,WKREG2           UP POINTER TO NEXT CDE           16060002
         B     CDESRCH                 A. NO- CONTINUE SEARCH           16100002
         SPACE 2                                                        16102002
*/*%RET1: R RETURN R14 +4 */                                            16102402
*/*%RET2: R RETURN R14 */                                               16102802
         SPACE 2                                                        16104002
         EJECT                                                          16110002
*   NAME - REMOVAL                                                      16120002
*                                                                       16130002
*   PURPOSE - THIS ROUTINE REMOVES A GIVEN CDE AND ITS MINORS FROM A    16140002
*        CDE QUEUE                                                      16144002
*                                                                       16146002
*   INPUT - R1 = ADDRESS OF THE PREVIOUS CDE TO THE ONE BEING REMOVED   16148002
*        R2  = ADDRESS OF THE MAJOR CDE TO BE REMOVED                   16148402
*        R14 = RETURN ADDRESS                                           16148802
*                                                                       16149202
*   OUTPUT - R3 = ADDRESS OF LAST CDE REMOVED FROM QUEUE                16149603
*            R2 = 0                                                     16151603
*        ALL OTHER REGISTERS ARE UNCHANGED                              16160603
         SPACE  2                                                       16162603
*/*REMOVAL: E REMOVAL */                                                16164603
         SPACE 2                                                        16166602
REMOVAL  DS    0H                      DEQUEUES CDE MAJOR AND ITS       16183302
*                                      ASSOCIATED MINORS                16200002
         SPACE 2                                                        16210002
*/* P SAVE CURRENT CDE (R3=R2) */                                       16211003
*/* P GET NEXT CDE (R2=CDCHAIN(R2)) */                                  16212003
         SPACE 2                                                        16220002
         LR    LASTCDER,WKREG2         SAVE CURRENT CDE TO 0   @ZA04838 16227003
*                                      OUT CDCHAIN OF LAST     @ZA04838 16234003
*                                      CDE REMOVED             @ZA04838 16241003
         L     WKREG2,CDCHAIN-CDENTRY(WKREG2)  BEGIN SEARCH FOR END     16250002
         SPACE 2                                                        16260002
*/* D (YES,OCNT,NO,) END OF CDE QUEUE? */                               16262002
         SPACE 2                                                        16270002
         LTR   WKREG2,WKREG2           OF MINOR QUEUE                   16300002
         BZ    OCNT                    GO DEQUEUE                       16350002
         SPACE 2                                                        16360002
*/* D (YES,REMOVAL,NO,) IS CDE A MINOR? */                              16362002
         SPACE 2                                                        16370002
         TM    CDATTR-CDENTRY(WKREG2),CDMIN Q. MINOR ENTRY              16400002
         BO    REMOVAL                 A. YES- CONTINUE SEARCH          16450002
         SPACE 2                                                        16460002
*/*OCNT: P UPDATE THE CDE QUEUE BY REMOVING MAJOR AND ASSOCIATED MINORS 16462002
*/* */                                                                  16464002
*/* P ZERO CDCHAIN OF LAST CDE REMOVED */                               16467003
         SPACE 2                                                        16470002
OCNT     ST    WKREG2,CDCHAIN-CDENTRY(WKREG1) UPDATE THE QUEUE BY       16500002
*                                      REMOVING MAJOR AND ALL MINORS    16550002
         SR    WKREG2,WKREG2           ZERO FOWARD POINTER     @ZA04838 16560003
         ST    WKREG2,CDCHAIN-CDENTRY(LASTCDER) OF THE LAST    @ZA04838 16570003
*                                      CDE DEQUEUED FOR        @ZA04838 16580003
*                                      CDHKEEPI FREEING CDES   @ZA04838 16590003
         SPACE 2                                                        16600002
*/* R RETURN TO CALLER */                                               16602002
         SPACE 2                                                        16610002
         BR    RETURN                  RETURN TO CALLER                 16650002
         SPACE 5                                                        16652002
*/*ERROR: P SAVE REG 13 OVER INTERFACE */                               16654002
         SPACE 2                                                        16656002
ERROR    DS    0F                                                       16660002
         LR    WKREG1,SAVEREG          SAVE R13 OVER SETLOCK            16660102
         SPACE 2                                                        16660202
*/* L SETLOCK-- RELEASE CMS LOCK */                                     16661902
         SPACE 2                                                        16664802
         SETLOCK RELEASE,TYPE=CMS,RELATED=LPAONLY ROUTINE               16666502
         SPACE 2                                                        16666902
*/* P RESTORE REG 13 */                                                 16667002
         SPACE 2                                                        16667302
         LR    SAVEREG,WKREG1          RESTORE SAVE AREA REGISTER       16668202
         SPACE 2                                                        16668602
*/* P (,GETOUT) SET RETURN CODE = 4 */                                  16668702
         SPACE 2                                                        16669002
         LA    R15,N4                  ERROR RETURN CODE                16669902
         B     GETOUT                  *****  ERROR *****               16671602
         SPACE 2                                                        16803302
*/* FOOTING                                                             16805302
*/*                                                                     16807302
*/*  */                                                                 16809302
*/*IEAVLK02: END */                                                     16811302
         TITLE '       IEAVLK02   GENERAL MODULE EQUATES AND CONSTANTS' 16813302
AMODENT  DC    A(MODENT)               USED FOR BASE VALUE              16815302
AIEAQCS2 DC    V(IEAQCS02)             ENTRY TO PGM. MGR. FOR RESTART   16817302
AIEAQCS3 DC    V(IEAQCS03)             ENTRY TO PGM. MGR.               16822402
FRREXIT  DC    A(FRRPGMX)              RECOVERY ROUTINE ADDRESS         16872402
         EJECT                                                          16872503
FRRPLIST DSECT                         FRR PARM LIST           @ZA02733 16872603
FRRPLWD0 DS    0F                      WORD ZERO               @ZA02733 16872803
FRRPLSAV DS    F                       SAVE AREA ADDRESS       @ZA02733 16873003
FRRPLWD1 DS    0F                      WORD ONE                @ZA02733 16873203
FRRPLBAS DS    F                       IEAVLK02 BASE ADDRESS   @ZA02733 16873403
FRRPLWD2 DS    0F                      WORD TWO                @ZA02733 16873603
FRRPLR11 DS    F                       GR11 SAVE AREA          @ZA02733 16873803
FRRPLWD3 DS    0F                      WORD THREE              @ZA02733 16874003
FRRPLR12 DS    F                       GR12 SAVE AREA          @ZA02733 16874203
FRRPLWD4 DS    0F                      WORD FOUR               @ZA02733 16874403
FRRPLR13 DS    F                       GR13 SAVE AREA          @ZA02733 16874603
FRRPLWD5 DS    0F                      WORD FIVE               @ZA02733 16874803
FRRPLCHK DS    0F                      PROGRESS CHECK WORD     @ZA02733 16875003
FRRPLCK0 DS    B                       EOTCHK CHECK POINT      @ZA02733 16875203
FRRPLCK1 DS    B                       RESERVED                @ZA02733 16875403
FRRPLCK2 DS    B                       RESERVED                @ZA02733 16875603
FRRPLCK3 DS    B                       RESERVED                @ZA02733 16875803
         TITLE '       IEAVLK02 MAPPING MACROS'                         16876502
         IHACDE                                                         16880402
CDEEND   EQU   *                                                        16884302
CDESIZE  EQU   CDEEND-CDENTRY          SIZE OF CDE                      16888202
         EJECT                                                          16900002
         CVT   DSECT=YES,PREFIX=NO                                      16950002
         EJECT                                                          17000002
         IHAPSA                                                         17050002
         EJECT                                                          17100002
         IHAFRRS                                                        17110002
         EJECT                                                          17148802
         IHALLE                                                         17150002
LLEND    EQU   *                                                        17200002
LLESIZE  EQU   LLEND-LLE               SIZE OF LLE                      17250002
         EJECT                                                          17300002
         IHARB                                                          17310002
*******************************************************************     17312002
*                                                                       17314002
*                REQUEST BLOCK ADDITIONAL LABELS INTERNAL               17316002
*                                                                       17318402
******************************************************************      17318802
         ORG   RBEXSAVE                MAPPED INTO THE RBEXSAVE AREA    17319202
RBCSEXSA EQU   *                       CONTENTS SUPERVISOR USAGE OF     17319602
*                                      RB EXTENDED SAVE AREA FOR        17319702
*                                      REENTRANT DATA AREA              17319802
RBCSNAME DS    CL8                     ENTRY POINT NAME CALLER PASSED   17319902
RBCSDE   DS    0A                      ADDRESS OF DE SAVE AREA          17323202
         DS    C                       BYTE RESERVED                    17325202
RBCSDEA  DS    AL3                     3 BYTE ADDRESS                   17325602
RBCSERRA DS    F                       ADDRESS OF ERROR ROUTINE         17326002
RBCSFLG1 DS    B                       FLAG BYTE                        17326402
RBCSGSF  EQU   X'80'                   GOOD SEARCH INDICATOR            17326502
*                                      ON MEANS IEAVVMSR WAS            17326602
*                                      SUCCESSFUL USED ONLY             17329902
*                                      IEAVLK01                         17331902
RBCSSYSR EQU   X'40'                   SYSTEM REQUEST FLAG              17332302
RBCSPARM EQU   X'20'                   PARMATER CHECKING IN PROGRESS    17332702
RBCSERIN EQU   X'10'                   ERROR RETURN WAS REQUESTED       17333102
RBCSABEN EQU   X'08'                   ISSUE 906 ABEND                  17333202
RBCSA306 EQU   X'04'                   ISSUE 306 ABEND                  17333302
RBCSDCB  EQU   X'02'                   DCB SPECIFIED ON INPUT           17341602
RBCSFLG2 DS    B                       RESERVED FLAGS                   17343602
RBCSFLG3 DS    B                       RESERVED FLAGS                   17345602
RBCSFLG4 DS    B                       RESERVED FLAGS                   17347602
RBCSWORK DS    0A                      ADDRESS OF BLDL FETCH W.A.       17350102
         DS    C                       RESERVED BYTE                    17361202
RBCSWRKA DS    AL3                     3 BYTE ADDRESS                   17371202
RBCSLLE  DS    0A                      ADDRESS OF LLE DURING LOAD       17371602
         DS    C                       RESERVED BYTE                    17372002
RBCSLLEA DS    AL3                     3 BYTE ADDRESS                   17372102
RBCSFRRA DS    F                       SAVE AREA FOR RECOVERY RTN.      17372202
*                                      PARM LIST                        17373102
RBCSGR15 DS    F                       SAVE AREA FOR REGS 15 TO 1       17373502
RBCSGR0  DS    F                       OVER MODESET MACRO               17373902
RBCSGR1  DS    F                       INTERFACE                        17374302
RBCSRESV DS    2F                      RESERVED FOR FUTURE EXPANSION    17374702
         EJECT                                                          17375102
         IHARMPL                                                        17383402
         EJECT                                                          17394502
         IKJTCB                                                         17427802
         EJECT                                                          17438902
         IHAXTLST                                                       17450002
         END                                                            17500002
./  ADD  SSI=80410027,NAME=IEAVLK03
         TITLE '       IEAVLK03 COMMENTARY'                             00050002
* /* START OF SPECIFICATIONS ****                                       00100002
*                                                                       00150002
*01*  MODULE-NAME = IEAVLK03                                            00200002
*                                                                       00250002
*01*  DESCRIPTIVE-NAME = PROGRAM MANAGER RECOVERY ROUNTINES             00300002
*                                                                       00400002
*01*  COPYRIGHT = NONE                                                  00450002
*                                                                       00500002
*01*  STATUS = VERSION 1                                                00550002
*                                                                       00600002
*01*  CHANGE-ACTIVITY - ZA02733 - RELEASE2                              00610003
*                       OZ07515 - RELEASE999                            00612003
*                       OZ03896 - RELEASE 4                             00615003
*                       OZ12452 - RELEASE3                              00617003
*         OZ19996 - REWRITE OF CDEVER ROUTINE                  @ZA19996 00618003
*         OZ24616 - OBTAIN PROPER RB POINTER                   @ZA24616 00619003
*                                                                       00620003
*01*  FUNCTION = PREVENTS UNWANTED ABENDS IN PROGRAM MANAGER BY         00650002
*     INTERCEPTING THEM AND CORRECTING ERRORS IF POSSIBLE.              00660002
*     THIS ROUTINE ALSO VERIFIES THE CDE QUEUE OR VERIFIES              00710003
*     THE PIE/PICA CHAIN.                                               00740003
*                                                                       00800002
*01*   NOTES = THE FOLLOWING IS A DESCRIPTION OF THE DEPENDENCIES,      01100002
*      CONVENTIONS, AND FUNCTIONS OF IEAVLK03                           01110002
*                                                                       01150002
*02*     DEPENDENCIES = THE SDWA MUST BE PASSED AS INPUT                01200002
*                                                                       01450002
*03*        CHARACTER-CODE-DEPENDENCIES = NONE                          01500002
*                                                                       01550002
*02*     RESTRICTIONS = NONE                                            01600002
*                                                                       01650002
*02*     REGISTER-CONVENTIONS = THE REGISTER CONVENTIONS USED BY        01750002
*        IEAVLK03 ARE DESCRIBED UNDER THE TOPIC REGISTER EQUATES.       01800002
*                                                                       01850002
*02*     PATCH-LABEL = THIS MODULE IS RESIDENT NUCLEUS, AND HAS NO      01900002
*        PATCH SPACE.                                                   01950002
*                                                                       02000002
*01*  MODULE-TYPE = MODULE                                              02050002
*                                                                       02100002
*02*     PROCESSOR = ASSEMBLER                                          02150002
*                                                                       02200002
*02*     MODULE-SIZE = 994 BYTES                                        02250002
*                                                                       02300002
*02*     ATTRIBUTES = REENTERABLE                                       02350002
*                                                                       02400002
*01*  ENTRY-POINT = FRRPGMMG                                            05800002
*                                                                       05850002
*02*     PURPOSE = THIS ROUTINE IS ENTERED WHEN AN ERROR OCCURS IN      05900002
*        PROGRAM MANAGER CAUSING SYSTEM RECOVERY.  THIS ROUTINE         05950002
*        VERIFIES PROGRAM MANAGER QUEUES (LPA OR JPQ) AND CONTINUES     06000002
*        WITH TERMINATION.                                              06050002
*                                                                       06100002
*02*     LINKAGE = BRANCH ENTERED FROM RTM1                             06150002
*                                                                       06200002
*02*     INPUT = PSW ENABLED, KEY 0, SUPERVISOR STATE, LOCAL LOCK HELD  06250002
*        AND POSSIBLE THE CMS LOCK HELD                                 06300002
*        REGISTERS ARE:                                                 06350002
*        REGISTER 1 - POINTER TO SDWA                                   06400002
*        REGISTER 14 - RETURN ADDRESS                                   06450002
*                                                                       06500002
*02*     OUTPUT = RETURN TO RTM                                         06550002
*        NO OUTPUT IN WAY OF RETURN CODE, ETC.                          06600002
*                                                                       06650002
*02*     REGISTERS-SAVED = NONE                                         06700002
*                                                                       06750002
*02*     REGISTER-USAGE = SEE PROLOGUE AT BEGINNING OF ROUTINE          06800002
*                                                                       06850002
*01*  ENTRY-POINT = FRRPGMMX                                            06900002
*                                                                       06950002
*02*     PURPOSE = THIS ROUTINE IS ENTERED WHEN AN ERROR OCCURS WHEN    07000002
*        PROGRAM MANAGER RESOURCE MANAGER FOR EXIT HAS CONTROL.         07050002
*        THE ROUTINE VERIFIES THE CDE QUEUE AND CAUSES RETRY TO GIVE    07100002
*        RETURN CODE 4.                                                 07150002
*                                                                       07200002
*02*     LINKAGE = BRANCH ENTERED FROM RTM1                             07250002
*                                                                       07300002
*02*     INPUT = PSW ENABLED, KEY 0, SUPERVISOR STATE, LOCAL LOCK HELD  07310002
*        AND POSSIBLE THE CMS LOCK HELD                                 07320002
*        REGISTERS ARE:                                                 07330002
*        REGISTER 1 - POINTER TO SDWA                                   07340002
*        REGISTER 14 - RETURN ADDRESS                                   07342002
*                                                                       07344002
*02*     OUTPUT = RETURN TO RTM1 TO CAUSE RETRY IN RESOURCE MANAGER     07650002
*                                                                       07700002
*02*     REGISTERS-SAVED = NONE                                         07750002
*                                                                       07800002
*02*     REGISTER-USAGE = SEE PROLOGUE AT BEGINNING OF ROUTINE          07850002
*                                                                       07900002
*01*  EXIT-ERROR = FRRPGMMG                                             09650002
*                                                                       09700002
*02*     CONDITIONS = RETURN TO RTM1 VIA BR14. APPROPRIATE CDE QUEUE    09750002
*        HAS BEEN VERIFIED AND PROGRAM MANAGER CAN CONTINUE.            09800002
*                                                                       09850002
*02*     OUTPUT = REGISTER 14 CONTAINS RETURN ADDRESS                   09900002
*        ALL OTHER REGISTERS ARE UNPREDICTABLE                          10000002
*                                                                       10050002
*02*     RETURN-CODES = RETURN CODE IN SDWA = 0 (CONTINUE WITH          10100002
*        TERMINATION),4 (RETRY)                                         10150002
*                                                                       10200002
*01*  EXIT-ERROR = FRRPGMX                                              10250002
*                                                                       10300002
*02*     CONDITIONS = RETURN TO RTM1 VIA BR14. APPROPRIATE CDE QUEUE    10350002
*        HAS BEEN VERIFIED AND PROGRAM MANAGER CAN CONTINUE.            10400002
*                                                                       10450002
*02*     OUTPUT = REGISTER 14 CONTAINS RETURN ADDRESS                   10500002
*        ALL OTHER REGISTERS ARE UNPREDICTABLE                          10600002
*                                                                       10650002
*02*     RETURN-CODES = IN SDWA - RETURN CODE 4 (RETRY)                 10700002
*                                 RETURN CODE 0 (CONT. TERMINATION)     10710002
*                                                                       10720002
*01*  EXTERNAL-REFERENCES =                                             10800002
*        QUEUE VERIFY ROUTINE - TO VERIFY CDE QUEUE                     10850002
*        ADDRESS VERIFY ROUTINE - TO VERIFY ENTRY ADDRESS               10900002
*                                                                       11000002
*02*     ROUTINES =                                                     11050002
*        FREEMAIN - TO RELEASE QVPL WORK AREA                           11100002
*        GETMAIN - TO OBTAIN QVPL WORK AREA                             11150002
*                                                                       11400002
*02*     DATA-AREAS = NO DATA SETS ARE USED BY THIS MODULE              11450002
*                                                                       11600002
*02*     CONTROL-BLOCKS = LLE,CDE,CVT,RB,TCB,SDWA,QVPL                  11650002
*                                                                       11700002
*01*  TABLES = NONE                                                     11750002
*                                                                       11800002
*01*  MACROS = SETLOCK, RECORD, GETMAIN, FREEMAIN, SETRP                11850002
*                                                                       11900002
*02*    SERIALIZATION = LOCAL AND POSSIBLY THE CMS LOCK HELD THROUGHOUT 11950002
*       PROCESS, NO LOCKS OBTAINED OR FREED                             11960002
*                                                                       12050002
*01*  CHANGE-ACTIVITY = MODULE WRITTEN FOR SUPPORT CODE Y02753          12100002
*                                                                       12150002
*01*  MESSAGES = THIS MODULE ISSUES MESSAGE IEA959I.                    12200002
*                                                                       12250002
*01*  ABEND-CODES = NONE                                                12300002
*                                                                       12350002
**** END OF SPECIFICATIONS ***/                                         12400002
         EJECT                                                          12450002
         SPACE 2                                                        12500002
*/*IEAVLK03: CHART */                                                   12550002
*/* HEADER                                                              12600002
*/* PROGRAM MANAGER                                                     12650002
*/*                                                    SECTION 3.1.11   12700002
*/* RECOVERY ROUTINES                                                   12750002
*/*                                                    PAGE # */        12800002
         SPACE 2                                                        12850002
IEAVLK03 CSECT                         CSECT NAME **** SINGLE CSECT     12900002
         MODID BR=NO                                                    12950002
*        ENTRY STATEMENTS                                               13000002
         ENTRY FRRPGMMG                ENTRY FOR RECOVERY RTN.          13200002
         ENTRY FRRPGMX                 ENTRY OF EXIT RECOVERY RTN.      13250002
         SPACE 1                                                        13260002
         EXTRN EOTCHK                  RETRY ADDRESS IN VLK02           13270002
         EXTRN FINIS                   RETRY ADDRESS IN VLK02           13280002
         EXTRN SYNCR                   RETRY ADDRESS IN VLK00    M01978 13290002
         TITLE '               IEAVLK03 REGISTER EQUATES'               13300002
*        REGISTER EQUATES                                               13350002
R0       EQU   0                       STANDARD EQUATE                  13400002
R1       EQU   1                       STANDARD EQUATE                  13500002
R2       EQU   2                       STANDARD EQUATE                  13650002
WKREG2   EQU   R2                      GENERAL WORK REGISTER            13700002
*                                      REGISTER 3 EQUATES               13750002
R3       EQU   3                       STANDARD EQUATE                  13800002
CVTREG   EQU   R3                      REGISTER 3 POINTS TO CVT         13850002
WKREG3   EQU   R3                      GENERAL WORK REGISTER            13900002
*                                      REGISTER 4 EQUATES               13950002
R4       EQU   4                       CROSS REFERENCE EQUATE           14000002
TCBREG   EQU   R4                      REGISTER 4 POINTS TO THE TCB     14050002
*                                      REGISTER 5 EQUATES               14100002
R5       EQU   5                       CROSS REFERENCE EQUATE           14150002
RBREG    EQU   R5                      POINTER TO THE RB                14200002
*                                      REGISTER 6 EQUATES               14250002
R6       EQU   6                       CROSS REFERENCE EQUATES          14300002
BASEREG  EQU   R6                      BASE REGISTER FOR IEAVLK03       14310002
*                                      REGISTER 7 EQUATES               14350002
R7       EQU   7                       CROSS REFERENCE EQUATES          14400002
ASCBREG  EQU   R7                      POINTER TO THE ASCB              14450002
*                                      REGISTER 8 EQUATES               14500002
R8       EQU   8                       CROSS REFERENCE EQUATES          14550002
SDWAREG  EQU   R8                      POINTER TO SDWA IN FRR           14650002
*                                      REGISTER 9 EQUATES               14700002
R9       EQU   9                       CROSS REFERENCE EQUATES          14750002
*                                      REGISTER 10 EQUATES              14950002
R10      EQU   10                      CROSS REFERENCE EQUATES          15000002
*                                      REGISTER 11 EQUATES              15050003
R11      EQU   11                      CROSS REFERENCE EQUATES @ZA07515 15100003
*                                      REGISTER 13 EQUATES              15350002
R13      EQU   13                      CROSS REFERENCE EQUATES          15400002
*                                      REGISTER 14 EQUATES              15600002
R14      EQU   14                      CROSS REFERENCE EQUATES          15650002
RETURN   EQU   R14                     RETURN REGISTER FOR ENTRY POINTS 15700002
*                                      REGISTER 15 EQUATES              15750002
R15      EQU   15                      CROSS REFERENCE EQUATES          15800002
         TITLE '              IEAVLK03 CHARACTER AND HEX MASK EQUATES'  15850002
N0       EQU   0                       CONSTANT OF ZERO                 16000002
N4       EQU   4                       CONSTANT TO PICK UP NEXT IN LIST 16300002
N8       EQU   8                       NUMERIC VALUE FOR RETURN CODE    16550002
N9       EQU   9                       LENGTH OF STANDARD PART OF XTLST 16650002
MSGLEN   EQU   10                      LENGTH OF ERROR MESSAGES         16700002
N24      EQU   24                      USED FOR 3 BYTE SHIFT            16850002
N36      EQU   36                      USED TO LOCATE REG.     @ZA24616 16870003
REGSAVE  EQU   72                      LENGTH OF REG. SAVE AREA         16900002
A0C4     EQU   X'04'                   PROTECTION CHECK CODE            16950002
A0C5     EQU   X'05'                   ADDRESSING ERROR                 17000002
A0C10    EQU   X'10'                   SEGMENT EXCEPTION                17050002
A0C11    EQU   X'11'                   PAGEING EXCEPTION                17100002
         EJECT                                                          17150002
*        MODULE USING STATEMENTS                                        17200002
         USING PSA,0                   ADDRESSES LOW CORE               17250002
         USING TCB,TCBREG              POINTER TO THE TCB               17350002
         USING RBSECT,RBREG            POINTER TO THE RB                17400002
         TITLE '      IEAVLK03  RECOVERY ROUTINE FOR PGM. MGR.'         56850002
*/* E FRRPGMMG */                                                       56900002
*/* P SET UP ADDRESSABILITY */                                          56950002
         SPACE 2                                                        57000002
FRRPGMMG DS    0H                      ENTRY FOR RECOVERY               57050002
         BALR  BASEREG,N0              SET UP ADDRESSABILITY            57100002
         USING *,BASEREG               TELL ASSEMBLER                   57150002
         SPACE 2                                                        57200002
*/* P PUT SDWA ADDRESS IN WKREG (R8) */                                 57250002
         SPACE 2                                                        57300002
         LR    SDWAREG,R1               PUT SDWA ADDR. IN WKREG         57350002
         USING SDWA,SDWAREG            TELL ASSEMBLER                   57400002
         SPACE 2                                                        57450002
*/* P SAVE CALLERS RETURN ADDRESS IN SAFE REGISTER (R10) */             57500002
         SPACE 2                                                        57550002
         LR    R10,RETURN              SAVE CALLERS RETURN ADDR.        57600002
         SPACE 2                                                        57650002
*/* P GET ABENDING ASID COMPARE FLAG FROM SDWA */                       57700002
*/* D (YES,,NO,PERC) ABEND IN SAME MEMORY AS CURRENT? */                57750002
         SPACE 2                                                        57800002
         LH    WKREG2,SDWAFMID         GET ABENDING ASID                57850002
         LTR   WKREG2,WKREG2           Q. SAME MEMORY                   57900002
         BNZ   PERC                    A. NO- CONTINUE WITH TERM.       57950002
         SPACE 2                                                        58000002
*/* D (YES,PERC,NO,) WAS RECOVERY PERCOLATED TO? */                     58050002
         SPACE 2                                                        58100002
         TM    SDWAERRC,SDWAPERC       Q. WAS RECOVERY PERC. TO         58150002
         BO    PERC                    A. YES- CONTINUE WITH TERM.      58200002
         SPACE 2                                                        58250002
*/* P GET ENVIRONMENT REGISTERS 3=CVT, 4=TCB, 5=SVRB, 7=ASCB */         58300002
         SPACE 2                                                        58350002
         L     CVTREG,CVTPTR           GET CVT ADDRESS                  58400002
         L     TCBREG,PSATOLD          SET UP ENVIRONMENT REGS.         58450002
         L     RBREG,N0(SDWAREG)       GET PARM AREA FROM SDWA          58500002
         L     RBREG,N0(RBREG)         GET SVRB FROM PARM AREA          58550002
         L     ASCBREG,PSAAOLD         GET ASCB                         58600002
         SPACE 2                                                        58650002
*/* D (NO,NXTTST,YES,) ERROR DURING PARM. CHK/PIE PROCING IN VLK00 */   58700003
         SPACE 2                                                        58750002
         TM    RBCSFLG1,RBCSPARM       Q. ERROR DURING PARM. CHECK      58800002
         BZ    NXTTST                  A. NO-CONTINUE                   58850002
         SPACE 2                                                        58854002
*/* D (YES,,NO,PGMCHK) WAS SYNCH IN PROCESS */                          58858002
*/* S IEAVPSER: CLEAN UP SPIE ENVIRONMENT */                            58860003
*/* P (,PGMXEND) CAUSE RETRY AND SKIP ABEND */                          58862002
         SPACE 2                                                        58866002
         TM    RBCDFLGS,RBCDSYNC       SYNCH IN PROCESS          M01978 58870002
         BZ    PGMCHK                  NO- CONTINUE              M01978 58874002
         LR    R1,R8                   SAVE SDWA PTR          @OZ07515  58874403
         L     R9,SPIERADR             BRANCH TO SPIE          @OZ07515 58874803
         BALR  R11,R9                  ERROR ROUTINE TO        @OZ07515 58875603
*                                      CLEAN UP INVALID        @OZ07515 58876403
*                                      SPIE ENVIRONMENT        @OZ07515 58877203
        LR   R8,R1                    RESTORE SDWA PTR  @OZ07515        58877603
         L     WKREG2,SYNCRTY          GET RETRY ADDRESS         M01978 58878002
         SETRP RETADDR=(WKREG2),RC=4,WKAREA=(SDWAREG),RECORD=YES,      X58882002
               RECPARM=PGMMERR                                   M01978 58886002
         B     PERC                    EXIT FROM ERROR ROUTINE   M01978 58890002
         SPACE 2                                                        58900002
*/*PGMCHK: D (NO,NXTTST,YES,) IS ABEND A PROGRAM CHECK? */              58910002
         SPACE 2                                                        59050002
PGMCHK   TM    SDWAERRA,SDWAPCHK       ABEND A PROGRAM CHECK     M01978 59100002
         BZ    NXTTST                  NO- CONTINUE                     59150002
         SPACE 2                                                        59200002
*/* D (YES,A206,NO,) ABEND A PROTECTION CHECK? */                       59210002
         SPACE 2                                                        59250002
         CLI   SDWAICD1,A0C4           PROTECTION CHECK ABEND           59260002
         BE    A206                    YES- CHANGE ABEND CODE TO 206    59270002
         SPACE 2                                                        59280002
*/* D (YES,A206,NO,) ABEND AN ADDRESSING ERROR? */                      59282002
         SPACE 2                                                        59290002
         CLI   SDWAICD1,A0C5           ADDRESSING CHECK ABEND           59292002
         BE    A206                    YES- CHANGE ABEND CODE TO 206    59294002
         SPACE 2                                                        59296002
*/* D (YES,A206,NO,) ABEND A SEGMENT EXCEPTION? */                      59296402
         SPACE 2                                                        59298002
         CLI   SDWAICD1,A0C10          SEGMENT EXCEPTION                59298402
         BE    A206                    YES- CHANGE ABEND CODE TO 206    59298802
         SPACE 2                                                        59299202
*/* D (NO,NXTTST,YES,) ABEND A PAGE EXCEPTION? */                       59299302
         SPACE 2                                                        59299602
         CLI   SDWAICD1,A0C11          PAGE EXCEPTION                   59299702
         BNE   NXTTST                  NO- CONTINUE                     59299802
         SPACE 2                                                        59300002
*/*A206: L (,PERC) SETRP-- RESET ABEND CONDITION CODE TO 206 */         59350002
         SPACE 2                                                        59400002
A206     SETRP COMPCOD=(X'206',SYSTEM),WKAREA=(SDWAREG) CAUSE 206 ABEND 59450002
         B     PERC                    GO RECORD ERROR                  59500002
         SPACE 2                                                        59550002
*/*NXTTST: P GET ADDRESS OF REG SAVE AREA (16 WORDS) */                 59600002
*/* S CDEQVER:VERIFY APPROPRIATE CDE QUE */                             59650002
         SPACE 2                                                        59700002
NXTTST   DS    0H                                                       59750002
         LA    R13,SDWASRSV            GET ADDRESS OF RETURN REGS.      59800002
         BAL   RETURN,CDEQVER          GO VERIFY PROPER QUEUE           59850002
         SPACE 2                                                        59900002
*/* L SETRP-- CAUSE ERROR TO BE RECORDED */                             59950002
*/*PERC: P RESTORE CALLERS RETURN REGISTER */                           60000002
*/* R RETURN VIA BR14 */                                                60050002
         SPACE 2                                                        60100002
         SETRP RECORD=YES,WKAREA=(SDWAREG),RECPARM=PGMMERR RECORD ERROR 60150002
PERC     LR    RETURN,R10              RESTORE CALLERS RETURN ADDR.     60200002
         BR    RETURN                  RETURN TO RTM                    60250002
         DROP  BASEREG                                                  60300002
         EJECT                                                          60350002
*/* E FRRPGMX */                                                        60400002
*/* P SET UP ADDRESSABILITY */                                          60450002
*/* P SAVE CALLERS RETURN ADDRESS IN WORK REG. (R10) */                 60500002
         SPACE 2                                                        60550002
FRRPGMX  DS    0H                      EXIT FRR                         60600002
         BALR  BASEREG,N0              SET UP ADDRESSABILITY            60650002
         USING *,BASEREG               TELL ASSEMBLER                   60700002
         LR    R10,RETURN              SAVE CALLERS RETURN ADDRESS      60750002
         SPACE 2                                                        60800002
*/* P PUT SDWA ADDRESS IN WKREG (R8) */                                 60850002
         SPACE 2                                                        60900002
         LR    SDWAREG,R1              PUT SDWA IN PROTECTED REG        60950002
         USING SDWA,SDWAREG            TELL ASSEMBLER WHERE IT IS       61000002
         SPACE 2                                                        61050002
*/* L SETRP-- CAUSE RECORDING ON TERMINATION */                         61100002
         SPACE 2                                                        61150002
         SETRP RECORD=YES,WKAREA=(SDWAREG),RECPARM=PGMXERR SET UP FOR   61200002
*                                      RECORDING                        61250002
         SPACE 2                                                        61850002
*/* P GET ABENDING ASID COMPARE FLAG FROM SDWA */                       61900002
*/* D (YES,,NO,PGMXPERC) ABEND IN SAME MEMORY AS CURRENT? */            61950002
         SPACE 2                                                        62000002
         LH    WKREG2,SDWAFMID         GET ASID OF CURRENT              62050002
         LTR   WKREG2,WKREG2           TEST IF SAME ADDRESS SPACE       62100002
         BNZ   PGMXPERC                NO- RETURN TO CALLER             62150002
         SPACE 2                                                        62200002
*/* P SET UP ENVIRONMENT REGISTERS 3=CVT, 4=TCB, 7=ASCB */              62250002
         SPACE 2                                                        62300002
         L     CVTREG,CVTPTR           GET CVT ADDRESS                  62350002
         L     TCBREG,PSATOLD          GET CURRENT TCB                  62400002
         L     R7,PSAAOLD              GET ASCB ADDRESS                 62450002
         SPACE 2                                                        62500002
*/* P GET 16 WORD REGISTER SAVE AREA */                                 62550002
*/* S CDEQVER:VERIFY APPROPRIATE CDE QUEUE */                           62600002
         SPACE 2                                                        62650002
         LA    R13,SDWASRSV            GET A REG. SAVE AREA             62700002
         BAL   RETURN,CDEQVER          VERIFY PROPER CDE QUEUE          62750002
         SPACE 2                                                        62760002
*/* P PUT EXIT'S FRRPARM LIST ADDRESS IN SDWA RETRY REGISTER 13 */      62770003
         SPACE 2                                                        62780002
         L     R13,N0(SDWAREG)         GET ADDR. OF PARM. AREA          62790002
         ST    R13,SDWASR13            PUT IN RETRY REGISTER   @ZA02733 62792003
*                                      AREA                    @ZA02733 62794003
         SPACE 2                                                        62796002
*/* P PUT ADDRESS OF IEAVLK02 BASE IN SDWA RETRY REGISTER 6 */          62798002
         SPACE 2                                                        62798402
         L     WKREG2,N4(R13)          GET MODULE BASE ADDRESS          62798802
         ST    WKREG2,SDWASR08         PUT IN RETRY REGS                62799202
         SPACE 2                                                        62800002
*/* D (YES,EOTR,NO,) PROGRESS STOPPED PRIOR TO EOTCHK? */      @ZA02733 62820003
         SPACE 2                                                        62900002
         ICM   WKREG2,N8,FRRPLCK0-FRRPLIST(R13) WAS PROGRESS   @ZA02733 62950003
*                                      STOPPED PROIR TO EOTCHK @ZA02733 63000003
         BZ    EOTR                    YES- RETRY AT EOTCHK    @ZA02733 63020003
         SPACE 2                                                        63400002
*/* L (,PGMXPERC) SETRP-- CAUSE RETRY AT FINIS */                       63450002
         SPACE 2                                                        63500002
         L     WKREG2,FINRETRY         GET RETRY ADDRESS         T1111  63520002
         SETRP RETADDR=(WKREG2),RETREGS=YES,RC=4,WKAREA=(SDWAREG) RETRY 63550002
         B     PGMXPERC                RETURN TO CALLER                 63600002
         SPACE 2                                                        63650002
*/*EOTR: P GET EOTCHK RETRY ADDRESS */                         @ZA02733 63670003
*/* P PUT TCB/SVRB ADDRESSES IN SDWA RETRY REGISTERS */                 63700003
*/* L SETRP-- CAUSE RETRY AT EOTCHK */                                  63750002
         SPACE 2                                                        63800002
EOTR     L     WKREG2,EOTRETRY         GET EOTCHK RETRY ADDR   @ZA02733 63820003
         L     TCBREG,N0(,R13)         POINT TO SAVE AREA      @ZA24616 63850003
         LM    TCBREG,RBREG,N36(TCBREG) LOAD TCB AND RB REGS   @ZA24616 63860003
         STM   TCBREG,RBREG,SDWASR04   SAVE IN RETRY REGISTERS          63900002
         SETRP RETADDR=(WKREG2),RETREGS=YES,RC=4,WKAREA=(SDWAREG)       63950002
         SPACE 2                                                        64000002
*/*PGMXPERC: P RESTORE CALLERS RETURN REGISTER (R10) */                 64050002
*/* R RETURN TO CALLER VIA BR14 */                                      64150002
         SPACE 2                                                        64200002
PGMXPERC LR    RETURN,R10              RESTORE CALLERS RETURN REG       64250002
         BR    RETURN                  RETURN TO CALLER                 64300002
         DROP  BASEREG                 NO LONGER NEED BASE              64350002
         EJECT                                                          64400002
*  CDE QUEUE VERIFY ROUTINE                                             64450002
*   PURPOSE:  TO DETERMINE IF THE JPQ OR THE LPA WAS BEING MODIFIED AT  64500002
*        THE TIME OF THE ERROR AND VERIFY THE ELEMENTS ON THAT QUEUE    64550002
*        ARE VALID. ALSO CHECKS THE LLS FOR VALIDITY AND TRUNCATES      64570003
*        THE QUEUE IF NECESSARY.                             @ZA12452   64600003
*                                                                       64650002
*   INPUT:                                                              64700002
*        R8 = ADDRESS OF SDWA                                           64750002
*        R3-4,7 = ENVIRONMENT REGISTERS                                 64800002
*        R13 = ADDRESS OF 16 WORD SAVE AREA                             64850002
*        R14 = RETURN ADDRESS                                           64900002
*        R15 = ENTRY POINT                                              64950002
*                                                                       65000002
*   OUTPUT:                                                             65050002
*        R0-2,8-9,11-12,15 - MODIFIED                                   65100002
*        R3-5,7,10,13-14 - UNCHANGED                                    65150002
*                                                                       65200002
         SPACE 1                                                        65250002
*/* E CDEQVER */                                                        65300002
*/* P SAVE CALLERS REGISTERS 0-15 IN R13 SAVE AREA */                   65310002
*/* P SET UP ADDRESSABILITY */                                          65350002
         SPACE 2                                                        65450002
CDEQVER  DS    0H                      VERIFIES CDE QUEUE               65500002
         USING CVT,CVTREG              ADDRESS THE CVT                  65510002
         STM   R0,R15,N0(R13)          SAVE CALLERS REGS                65520002
         BALR  BASEREG,N0              SET UP ADDRESSABILITY            65550002
         USING *,BASEREG               TELL ASSEMBLER                   65600002
         SPACE 2                                                        65606003
         LA    R1,TCBLLS               LOAD LIST QUEUE HEAD    @ZA12452 65612003
         L     R2,TCBLLS               LINK TO 1ST ELEMENT     @ZA12452 65618003
LLSCHK   LTR   R2,R2                   END OF QUEUE?           @ZA12452 65624003
         BZ    LLSEND                  YES. BR OUT OF LOOP     @ZA12452 65630003
         LRA   R3,0(R2)                ELEMENT ADDR VALID?     @ZA12452 65636003
         BNZ   LLSTRUNC                NO. TRUNCATE QUEUE      @ZA12452 65642003
         LA    R1,0(R2)                SAVE ADDR OF ELEMENT    @ZA12452 65648003
         L     R2,0(R2)                LINK TO NEXT ELEMENT    @ZA12452 65654003
         B     LLSCHK                  LOOP.                   @ZA12452 65660003
LLSTRUNC DS    0H                                              @ZA12452 65666003
         SR    R2,R2                   ZERO REG 2              @ZA12452 65672003
         ST    R2,0(R1)                ZERO PREV LINK FIELD    @ZA12452 65678003
LLSEND   DS    0H                                              @ZA12452 65684003
         SPACE 2                                                        65700002
*/* L GETMAIN-- GET QUEUE VERIFY WORK AREA REQUIRED SPACE */            65750002
         SPACE 2                                                        65800002
         GETMAIN RC,BRANCH=YES,LV=QVRSIZE,SP=253  GET QV WORKAREA       65850002
         SPACE 2                                                        65900002
*/* D (NO,,YES,CDECHEK) GETMAIN SUCCESSFUL? */                          65950002
*/* P (,NOFREE) SET RETURN CODE IN REGISTER 15=0 */                     66000002
         SPACE 2                                                        66050002
         LTR   R15,R15                 GETMAIN SUCCESSFUL?              66100002
         BZ    CDECHEK                 YES- INITIALIZE                  66150002
         SR    R15,R15                 SET 0 RETURN                     66200002
         B     NOFREE                  GO TO RETURN CODE                66250002
         SPACE 2                                                        66300002
*/*CDECHEK: P CLEAR PARAMETER WORK AREA */                              66350002
         SPACE 2                                                        66400002
CDECHEK  XC    N0(QVPLSIZE,R1),N0(R1)  CLEAR PARM AREA                  66450002
         USING QVPL,R1                 SET ADDRESSING TO PARM AREA      66500002
         SPACE 2                                                        66550002
*/* P RESTORE CVT ADDRESS DESTROYED BY GETMAIN */                       66560002
*/* P PUT CDE ELEMENT VERIFICATION ROUTINE ADDRESS IN QVPL */           66600002
         SPACE 2                                                        66650002
         L     CVTREG,CVTPTR           RESET CVT ADDRESS                66660002
         LA    WKREG2,CDEVER           GET CDE ELEMENT VER. ROUTINE     66700002
         ST    WKREG2,QVPLEVR          PUT IN PARM LIST                 66750002
         SPACE 2                                                        66800002
*/* P PUT ADDRESS OF SDWA VARIABLE RECORDING AREA IN QVPL */            66850002
         SPACE 2                                                        66900002
         LA    WKREG2,SDWARA           GET RECORD AREA ADDR.            66950002
         ST    WKREG2,QVPLODA          SAVE IN PARM LIST.               67000002
         SPACE 2                                                        67050002
*/* P PUT ADDRESS OF A WORKAREA FOR QUEUE VERIFIER IN QVPL */           67100002
         SPACE 2                                                        67150002
         LA    WKREG2,QVPLSIZE(R1)     CALCULATE ADDR. OF WORKAREA      67200002
         ST    WKREG2,QVPLWKA          STORE IN PARM LIST.              67250002
         SPACE 2                                                        67300002
*/* P SAVE CALLERS REGISTER SAVE AREA ADDRESS */                        67350002
*/* P GET A REGISTER SAVE AREA FOR QUEUE VERIFY ROUTINE */              67400002
*/* P PUT SDWA ADDRESS IN R0 */                                         67450002
         SPACE 2                                                        67500002
         LR    R10,R13                 SAVE CALLERS REG SAVE            67550002
         LA    R13,QVPLSIZE+QVPLWASZ(R1) GET QV REG SAVE AREA           67600002
         LR    R0,SDWAREG              PUT SDWA ADDR. IN R0 FOR ROUT.   67650002
         SPACE 2                                                        67700002
*/* L (HELD,LPAVER,NO,) SETLOCK-- TEST IF CMS LOCK IS HELD */           67750002
         SPACE 2                                                        67800002
         SETLOCK TEST,TYPE=CMS,BRANCH=(HELD,LPAVER) TEST LOCKS HELD     67850002
         SPACE 2                                                        67900002
*/* P PUT JPQ ERROR LABEL IN RECORDING AREA */                          67950002
*/* P INCREMENT AMOUNT USED COUNT BY MSG LENGTH (10BYTES) */            68000002
         SPACE 2                                                        68050002
         LA    WKREG2,SDWAVRA          GET RECORDING AREA ADDRESS       68100002
         MVC   N0(MSGLEN,WKREG2),JPQERR  PUT HEADER IN RECORDING AREA   68150002
         LA    WKREG2,MSGLEN           GET LENGTH OF HEADER             68200002
         STC   WKREG2,SDWAURAL         AND STORE IN USED PORTION COUNT  68250002
         SPACE 2                                                        68300002
*/* P PUT ADDRESS OF JPQ HEADER (TCBJPQ FROM JSTCB) IN QVPL */          68350002
         SPACE 2                                                        68400002
         L     WKREG2,TCBJSTCB         GET JSTCB                        68450002
         LA    WKREG2,TCBJPQ-TCB(WKREG2) GET JPQ ADDR.                  68500002
         ST    WKREG2,QVPLHDR          SAVE IN HEADER FIELD             68550002
         SPACE 2                                                        68600002
*/* L IEAQVER-- VERIFY SINGLE THREADED/ HEADER ONLY QUEUE     */        68650002
         SPACE 2                                                        68700002
         L     R15,QVRRTN              GET ADDR. OF QUEUE VER RTN.      68750002
         BALR  RETURN,R15              GO TO QUEUE VER. RTN.            68800002
         SPACE 2                                                        68860002
*/* P GET REASON CODE IN REGISTER WITHOUT INDICATORS */                 68870002
*/* D (YES,CDEQEXIT,NO,) ANY ERRORS FOUND? */                           68880002
         SPACE 2                                                        68892002
         SLL   R15,N24                 SHIFT REASON CODE TO HIGH BYTE   68894002
         LTR   R15,R15                 ANY ERRORS                       68896002
         BNZ   CDEQEXIT                YES - TERMINATE                  68898002
         SPACE 2                                                        68898402
*/* P (,CDEQEXIT) CLEAR USED PORTION OF RECORDING AREA IN SDWA */       68900002
         SPACE 2                                                        68950002
         SR    WKREG2,WKREG2           CLEAR REG TO PUT ZERO USED       69000002
         STC   WKREG2,SDWAURAL         COUNT IN SDWA RECORDING AREA     69050002
         B     CDEQEXIT                RETURN TO CALLLER                69100002
         SPACE 2                                                        69150002
*/*LPAVER: P PUT LPQ ERROR LABEL IN RECORDING AREA OF SDWA */           69200002
         SPACE 2                                                        69250002
LPAVER   LA    WKREG2,SDWAVRA          GET RECORDING AREA ADDRESS       69300002
         MVC   N0(MSGLEN,WKREG2),LPQERR  PUT HEADER IN RECORDING AREA   69350002
         LA    WKREG2,MSGLEN           GET LENGTH OF HEADER             69400002
         STC   WKREG2,SDWAURAL         AND STORE IN USED PORTION COUNT  69450002
         SPACE 2                                                        69500002
*/* P PUT ADDRESS OF LPA QUEUE HEADER IN QVPL (IEAQLPAQ) */             69550002
         SPACE 2                                                        69600002
         L     WKREG2,CVTQLPAQ         GET LPA QUEUE HEADER             69650002
         ST    WKREG2,QVPLHDR          SAVE IN PARM AREA                69700002
         SPACE 2                                                        69750002
*/* L IEAVQVER-- VERIFY SINGLE THREADED/ HEADER ONLY QUEUE */           69800002
         SPACE 2                                                        69850002
         L     R15,QVRRTN              GET ADDR. OF QUEUE RTN.          69900002
         BALR  RETURN,R15              QUEUE VER. RTN.                  69950002
         SPACE 2                                                        70000002
*/* P GET REASON CODE IN REGISTER WITHOUT INDICATORS */                 70050002
*/* D (YES,RECRDLPA,NO,) ANY ERRORS FOUND? */                           70100002
*/* P (,CDEQEXIT) ZERO COUNT USED IN RECORDING AREA IN SDWA */          70150002
         SPACE 2                                                        70200002
         SLL   R15,N24                 SHIFT REASON CODE TO HIGH BYTE   70250002
         LTR   R15,R15                 ANY ERRORS                       70300002
         BNZ   RECRDLPA                YES - CAUSE WTO BEFORE EXIT      70350002
         SR    WKREG2,WKREG2           CLEAR REG TO PUT ZERO USED       70400002
         STC   WKREG2,SDWAURAL         COUNT IN SDWA RECORDING AREA     70450002
         B     CDEQEXIT                END                              70500002
         SPACE 2                                                        70550002
*/*RECRDLPA: P SAVE QVPL ADDRESS OVER RECORD INTERFACE */               70600002
*/* P GET REGISTER SAVE AREA FOR RECORD */                              70650002
*/* L RECORD-- CAUSE ASYNCROUS WTO WITH MESSAGE IEA959I */              70700002
*/* P RESTORE QVPL ADDRESS INTO R1 */                                   70750002
         SPACE 2                                                        70800002
RECRDLPA LR    WKREG2,R1               SAVE QVPL ADDR. OVER RECORD      70850002
         LA    R13,QVPLSIZE+QVPLWASZ(R1) GET REGISTER SAVE AREA @M05550 70900002
         RECORD TYPE=WTO,RCVRY=SETFRR,DATAADR=IEA959,LENGTH=MSGLNTH,   *70950002
               BUFFER=YES                                               71000002
         LR    R1,WKREG2               RESTORE QVPL AREA ADDRESS        71050002
         SPACE 2                                                        71100002
*/*CDEQEXIT: L FREEMAIN-- FREE QUEUE VERIFIER WORK SPACE AND PARM LIST  71150002
*/**/                                                                   71200002
*/* P RESTORE CALLERS REGISTER SAVE AREA ADDR. FROM R10 */              71250002
*/*NOFREE: P RESTORE CALLERS REGISTERS */                               71300002
*/* R RETURN TO CALLER VIA BR14 */                                      71350002
         SPACE 2                                                        71400002
CDEQEXIT FREEMAIN RC,LV=QVRSIZE,A=(1),SP=253,BRANCH=YES FREE QVPL/REGSA 71450002
         LR    R13,R10                 RESTORE CALLERS SAVE REGS        71500002
NOFREE   LM    R0,R14,N0(R13)          RESOTRE CALLERS REGS      M01976 71550002
         BR    RETURN                  RETURN TO CALLER                 71600002
         DROP  BASEREG                 FREE BASE                        71650002
         DROP  CVTREG                  FREE CVT POINTER                 71660002
         EJECT                                                          71700002
*********************************************************************** 71710003
*                                                                       71720003
*  CDE ELEMENT VERIFICATION ROUTINE                                     71750002
*    PURPOSE: TO VERIFY THAT THE ELEMENT PASSED AS INPUT IS A CDE       71800002
*                                                                       71850002
*    INPUT:                                                             71900002
*        R0  = ADDRESS OF ELEMENT TO BE VERIFIED                        71950002
*        R1  = ADDRESS OF SDWA                                          72000002
*        R14 = RETURN ADDRESS                                           72050002
*        R15 = ENTRY POINT ADDRESS                                      72100002
*                                                                       72150002
*    OUTPUT:                                                            72200002
*        R15 = RETURN CODE                                              72250002
*          0 = VALID                                                    72300002
*          4 = INVALID (REMOVE ELEMENT)                                 72350002
*          8 = INVALID (TRUNCATE QUEUE)                                 72400002
*        R1,8-13 = UNCHANGED                                            72450003
*        R2-7 = UNPREDICTABLE                                           72490003
*                                                                       72530003
*********************************************************************** 72570003
         SPACE 1                                                        72610003
CDEVER   DS    0H                      CDE ELEMENT VERIFIER    @ZA19996 72650003
         BALR  BASEREG,N0              SET UP ADDRESSIBILITY   @ZA19996 72680003
         USING *,BASEREG               TELL ASSEMBLER          @ZA19996 72710003
         LR    R7,RETURN               SAVE CALLERS RETURN ADR @ZA19996 72740003
         LR    R4,R0                   CDE TO BE VERIFIED      @ZA19996 72770003
         USING CDENTRY,R4              BASE FOR CDE DSECT      @ZA19996 72800003
*********************************************************************** 72890003
*                                                                       72930003
*   VERIFY THAT CDE CAN BE ADDRESSED BY CALLING THE ADDRESS VERIFY      72970003
*   ROUTINE WITH THE ADDRESS OF THE CDE IN REG 2 AND THE LENGTH OF      73010003
*   THE CDE IN REG 0                                           @ZA19996 73050003
*                                                                       73080003
*********************************************************************** 73110003
         SPACE 1                                                        73140003
         LA    R2,CDENTRY              PUT CDE IN USABLE REG   @ZA19996 73170003
         LA    R0,CDESIZE              SIZE OF ELEMENT TO CHK  @ZA19996 73200003
         L     R15,ADVER               ADDRESS VERIFIER RTN.   @ZA19996 73230003
         BALR  RETURN,R15              GO TO ADDR. VER. RTN.   @ZA19996 73260003
         LTR   R15,R15                 ADDRESS VALID?          @ZA19996 73290003
         BNZ   CDRET08                 NO. RETURN WITH CODE 8  @ZA19996 73320003
         SPACE 1                                                        73450003
*********************************************************************** 73490003
*                                                                       73530003
*   VERIFY THAT THE NAME FIELD IN THE CDE CONTAINS ALFANUMERIC          73570003
*   CHARACTERS. CALL INTERNAL SUBROUTINE NAMEVER.              @ZA19996 73610003
*                                                                       73640003
*********************************************************************** 73670003
         SPACE 1                                                        73700003
         LA    R2,CDNAME               ADR MODULE NAME FIELD   @ZA19996 73730003
         BAL   R14,NAMEVER             CALL NAMEVER ROUTINE    @ZA19996 73760003
         LTR   R15,R15                 NAME FIELD VALID?       @ZA19996 73790003
         BNZ   CDRET08                 NO. RETURN WITH CODE 8  @ZA19996 73820003
         SPACE 1                                                        73930003
*********************************************************************** 73970003
*                                                                       74010003
*   IF THE CDE IS A MINOR, VERIFY THAT THE MAJOR CDE CAN BE ADDRESSED   74050003
*   AND THAT THE MAJOR CDE CONTAINS ALFANUMERIC CHARACTERS IN ITS       74090003
*   MODULE NAME FIELD                                          @ZA19996 74130003
*                                                                       74160003
*********************************************************************** 74190003
         SPACE 1                                                        74220003
         TM    CDATTR,CDMIN            IS THE CDE A MINOR?     @ZA19996 74250003
         BZ    XTLVER                  NO. DO TESTS FOR MAJOR  @ZA19996 74280003
         L     R2,CDXLMJP              YES. GET MAJOR POINTER  @ZA19996 74310003
         LTR   R2,R2                   MAJOR POINTER = ZERO?   @ZA19996 74340003
         BZ    CDRET04                 YES. RETURN WITH CODE 4 @ZA19996 74370003
         LA    R0,CDESIZE              LENGTH OF CDE           @ZA19996 74400003
         L     R15,ADVER               ADDRESS VERIFY ROUTINE  @ZA19996 74430003
         BALR  R14,R15                 VERIFY MAJOR CDE ADDR   @ZA19996 74460003
         LTR   R15,R15                 ADDRESS VALID?          @ZA19996 74490003
         BNZ   CDRET04                 NO. RETURN WITH CODE 4  @ZA19996 74520003
         LA    R2,CDNAME-CDENTRY(R2)   ADDR MODULE NAME FIELD  @ZA19996 74550003
         BAL   R14,NAMEVER             VER MOD NAME IN MAJOR   @ZA19996 74580003
         LTR   R15,R15                 MODULE NAME VALID?      @ZA19996 74610003
         BNZ   CDRET04                 NO. RETURN WITH CODE 4  @ZA19996 74640003
         B     CDRET00                 YES. MINOR CDE O.K.     @ZA19996 74670003
         SPACE 1                                                        74890003
*********************************************************************** 74930003
*                                                                       74970003
*   FOR MAJOR CDE, VERIFY THAT THE EXTENT LIST POINTER IS EITHER        75010003
*   ZERO (VALID FOR CDE BUILT BY IDENTIFY FUNCTION), OR POINTS TO       75050003
*   AN ADDRESSABLE LOCATION.                                   @ZA19996 75090003
*                                                                       75120003
*********************************************************************** 75150003
         SPACE 1                                                        75180003
XTLVER   DS    0H                                              @ZA19996 75210003
         L     R2,CDXLMJP              GET EXTENT LIST POINTER @ZA19996 75240003
         LTR   R2,R2                   DOES IT EQUAL ZERO?     @ZA19996 75270003
         BZ    CDRET00                 YES. MAJOR CDE O.K.     @ZA19996 75300003
         LA    R0,16                   LENGTH OF XTLST         @ZA19996 75330003
         L     R15,ADVER               ADDRESS VERIFY ROUTINE  @ZA19996 75360003
         BALR  R14,R15                 VERIFY ADDRESS          @ZA19996 75390003
         LTR   R15,R15                 XTLST ADDRESSABLE?      @ZA19996 75420003
         BNZ   CDRET04                 NO. RETURN WITH CODE 4  @ZA19996 75450003
         SPACE 2                                                        75480003
CDRET00  SR    R15,R15                 RETURN CODE = 0         @ZA19996 75510003
         B     CDVEREND                EXIT                    @ZA19996 75540003
CDRET04  LA    R15,4                   RETURN CODE = 4         @ZA19996 75570003
         B     CDVEREND                EXIT                    @ZA19996 75600003
CDRET08  LA    R15,8                   RETURN CODE = 8         @ZA19996 75630003
CDVEREND LR    R14,R7                  RESTORE RETURN REGISTER @ZA19996 75660003
         BR    R14                     BR BACK TO QUEUE VERIFY @ZA19996 75690003
         EJECT                                                          75930003
*********************************************************************** 75970003
*                                                                       76010003
*   NAMEVER ROUTINE - CALLED FOR INPUT CDE AND MAJOR CDE IF INPUT       76050003
*   CDE IS A MINOR. VERIFIES THAT THE MODULE NAME FIELD CONTAINS        76090003
*   ALFANUMERIC CHARACTERS. INPUT: R2 CONTAINS ADDRESS OF CDE TO        76130003
*   BE VERIFIED. OUTPUT: R15 CONTAINS RETURN CODE - 0 IF NAME FIELD     76170003
*   VALID, 4 IF NAME FIELD NOT VALID.                          @ZA19996 76210003
*                                                                       76240003
*********************************************************************** 76270003
         SPACE 1                                                        76300003
NAMEVER  DS    0H                                              @ZA19996 76330003
         LA    R0,8               EIGHT BYTES TO BE CHECKED    @ZA19996 76360003
         LA    R3,OKCHARS         POINTER TO VALID CHAR TABLE  @ZA19996 76380003
NAMECMPR CLC   0(1,R2),0(R3)      BYTE IN NAME = CHAR IN TABLE?@ZA19996 76400003
         BE    NAMEINCR           YES. CHECK NEXT BYTE IN NAME @ZA19996 76420003
         LA    R3,1(R3)           NO. TRY NEXT CHAR IN TABLE.  @ZA19996 76440003
         CLI   0(R3),X'00'        END OF TABLE?                @ZA19996 76460003
         BNE   NAMECMPR           NO. GO AHEAD AND COMPARE     @ZA19996 76540003
         LA    R15,4              YES. NAME FIELD INVALID      @ZA19996 76570003
         BR    R14                RETURN WITH CODE = 4         @ZA19996 76600003
NAMEINCR LA    R2,1(R2)           BUMP POINTER IN NAME FIELD   @ZA19996 76630003
         LA    R3,OKCHARS         BEGINNING OF VALID CHAR TABLE@ZA19996 76660003
         BCT   R0,NAMECMPR        LOOP IF MORE BYTES TO CHECK  @ZA19996 76670003
         SR    R15,R15            ALL BYTES CHECKED.           @ZA19996 76720003
         BR    R14                RETURN WITH CODE = 0.        @ZA19996 76750003
         SPACE 2                                                        76780003
OKCHARS  DC    C' $#@ABCD'        VALID CHARACTERS FOR MODULE  @ZA19996 76810003
         DC    C'EFGHIJKL'          NAME.                      @ZA19996 76840003
         DC    C'MNOPQRST'                                     @ZA19996 76870003
         DC    C'UVWXYZ01'                                     @ZA19996 76900003
         DC    C'23456789'                                     @ZA19996 76930003
         DC    X'00'                   END OF TABLE INDICATOR  @ZA19996 76960003
         SPACE 2                                                        76990003
         DROP  R4                      RELEASE CDE             @ZA19996 77020003
         DROP  BASEREG                 RELEASE BASE            @ZA19996 77050003
         EJECT                                                          77370003
*/* FOOTING                                                             78050002
*/*                                                                     78100002
*/*  */                                                                 78150002
*/*IEAVLK03: END */                                                     78200002
         TITLE '       IEAVLK03   GENERAL MODULE EQUATES AND CONSTANTS' 78250002
QVRRTN   DC    V(IEAVEQV1)             ENTRY TO QUEUE VERIFY ROUTINE    78450002
ADVER    DC    V(IEAVEADV)             ENTRY TO ADDRESS VERIFY ROUTINE  78500002
SPIERADR DC    V(IEAVSPER)             SPIE ERROR RTN         @OZ07515  78520003
JPQERR   DC    CL10'JPQ ERROR '        ERROR LABEL                      78550002
JPQEND   EQU   *                                                        78600002
LPQERR   DC    CL10'LPA ERROR '        ERROR LABEL                      78650002
LPAEND   EQU   *                                                        78700002
XLSTHEAD DC    F'16'                   LENGTH OF 16                     78800002
         DC    F'1'                    COUNT OF 1 BLOCK                 78850002
         DC    X'80'                   END-OF-LIST INDICATOR            78900002
IEA959   WTO   'IEA959I  ERROR CAUSED ACTIVE LPA TO BE TRUNCATED, MODUL*78950002
               E CONTROL MAY BE LOST',MF=L,ROUTCDE=2,DESC=4      @M7603 79000002
MSGEND   EQU   *                       END OF MSG TO OPERATOR           79050002
MSGLNTH  EQU   MSGEND-IEA959           LENGTH OF TOTAL MSG AND CODES    79100002
PGMXERR  DC    CL8'IEAVLK02'           MODULE IN ERROR                  79150002
         DC    CL8'IEAPPGMX'           CSECT IN ERROR                   79200002
         DC    CL8'FRRPGMX'            RECOVERY ROUTINE                 79250002
PGMMERR  DC    CL8'IEAVLK00'           MODULE IN ERROR                  79300002
         DC    CL8'IEAVLK00'           CSECT IN ERROR                   79350002
         DC    CL8'FRRPGMMG'           RECOVERY ROUTINE                 79400002
EOTRETRY DC    A(EOTCHK)               ADDRESS OF EOT RTN.              79450002
FINRETRY DC    A(FINIS)                ADDRESS OF RETURN TO CALLER      79500002
SYNCRTY  DC    A(SYNCR)                ADDRESS OF SYNCH RETURN   M01978 79520002
         TITLE '       IEAVLK03 MAPPING MACROS'                         79550002
FRRPLIST DSECT                         FRRPARM LIST            @ZA02733 79552003
FRRPLWD0 DS    0F                      WORD ZERO               @ZA02733 79554003
FRRPLSAV DS    F                       SAVE AREA ADDRESS       @ZA02733 79556003
FRRPLWD1 DS    0F                      WORD ONE                @ZA02733 79558003
FRRPLBAS DS    F                       IEAVLK02 BASE ADDRESS   @ZA02733 79560003
FRRPLWD2 DS    0F                      WORD TWO                @ZA02733 79562003
FRRPLR11 DS    F                       GR11 SAVE AREA          @ZA02733 79564003
FRRPLWD3 DS    0F                      WORD THREE              @ZA02733 79566003
FRRPLR12 DS    F                       GR12 SAVE AREA          @ZA02733 79568003
FRRPLWD4 DS    0F                      WORD FOUR               @ZA02733 79570003
FRRPLR13 DS    F                       GR13 SAVE AREA          @ZA02733 79572003
FRRPLWD5 DS    0F                      WORD FIVE               @ZA02733 79574003
FRRPLCHK DS    0F                      PROGRESS CHECK WORD     @ZA02733 79576003
FRRPLCK0 DS    B                       EOTCHK CHECK POINT      @ZA02733 79578003
FRRPLCK1 DS    B                       RESERVED                @ZA02733 79580003
FRRPLCK2 DS    B                       RESERVED                @ZA02733 79582003
FRRPLCK3 DS    B                       RESERVED                @ZA02733 79584003
         IHACDE                                                         79600002
CDEEND   EQU   *                                                        79650002
CDESIZE  EQU   CDEEND-CDENTRY          SIZE OF CDE                      79700002
         EJECT                                                          79750002
         CVT   DSECT=YES,PREFIX=NO                                      79800002
         EJECT                                                          79850002
         IHAPSA                                                         79900002
         EJECT                                                          80250002
         IHAQVPL                                                        80300002
QVRSIZE  EQU   QVPLSIZE+QVPLWASZ+REGSAVE  SIZE NEEDED FOR QV RTN        80350002
         EJECT                                                          80400002
         IHARB                                                          80450002
*******************************************************************     80500002
*                                                                       80550002
*                REQUEST BLOCK ADDITIONAL LABELS INTERNAL               80600002
*                                                                       80650002
******************************************************************      80700002
         ORG   RBEXSAVE                MAPPED INTO RBEXSAVE             80750002
RBCSEXSA EQU   *                       PROGRAM MANAGER USAGE OF         80800002
*                                      RB EXTENDED SAVE AREA FOR        80850002
*                                      REENTRANT DATA AREA              80900002
RBCSNAME DS    CL8                     ENTRY POINT NAME CALLER PASSED   80950002
RBCSDE   DS    0A                      ADDRESS OF DE SAVE AREA          81000002
         DS    C                       BYTE RESERVED                    81050002
RBCSDEA  DS    AL3                     3 BYTE ADDRESS                   81100002
RBCSERRA DS    F                       ADDRESS OF ERROR ROUTINE         81150002
RBCSFLG1 DS    B                       FLAG BYTE                        81200002
RBCSGSF  EQU   X'80'                   GOOD SEARCH INDICATOR            81250002
*                                      ON MEANS IEAVVMSR WAS            81300002
*                                      SUCCESSFUL USED ONLY             81350002
*                                      IEAVLK01                         81400002
RBCSSYSR EQU   X'40'                   SYSTEM REQUEST FLAG              81450002
RBCSPARM EQU   X'20'                   PARMATER CHECKING IN PROGRESS    81500002
RBCSERIN EQU   X'10'                   ERROR RETURN WAS REQUESTED       81550002
RBCSABEN EQU   X'08'                   ISSUE 906 ABEND                  81600002
RBCSA306 EQU   X'04'                   ISSUE 306 ABEND                  81650002
RBCSFLG2 DS    B                       RESERVED FLAGS                   81750002
RBCSFLG3 DS    B                       RESERVED FLAGS                   81800002
RBCSFLG4 DS    B                       RESERVED FLAGS                   81850002
RBCSWORK DS    0A                      ADDRESS OF BLDL FETCH W.A.       81900002
         DS    C                       RESERVED BYTE                    81950002
RBCSWRKA DS    AL3                     3 BYTE ADDRESS                   82000002
RBCSLLE  DS    0A                      ADDRESS OF LLE DURING LOAD       82050002
         DS    C                       RESERVED BYTE                    82100002
RBCSLLEA DS    AL3                     3 BYTE ADDRESS                   82150002
RBCSFRRA DS    F                       SAVE AREA FOR RECOVERY RTN.      82200002
*                                      PARM LIST                        82250002
RBCSGR15 DS    F                       SAVE AREA FOR REGS 15 TO 1       82300002
RBCSGR0  DS    F                       OVER MODESET MACRO               82350002
RBCSGR1  DS    F                       INTERFACE                        82400002
RBCSRESV DS    2F                      RESERVED FOR FUTURE EXPANSION    82450002
         EJECT                                                          82500002
         IHASDWA                                                        82650002
         EJECT                                                          82700002
         IKJTCB                                                         82750002
         EJECT                                                          82800002
         END                                                            82900002
./  ADD  SSI=72080246,NAME=IEAVNPA5
         TITLE 'IEAVNPA5, APF TABLE INITIALIZATION ROUTINE             *00001000
                        '                                               00002000
IEAVNPA5 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'IEAVNPA5  73.324'                                 0001 00009000
NPA5APF  DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00166-NPA5APF)                                    00013000
         ENTRY NPA5APF                                                  00014000
         DROP  @15                                                      00015000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00016000
         BALR  @10,0                                               0001 00017000
@PSTART  DS    0H                                                  0001 00018000
         USING @PSTART,@10                                         0001 00019000
         ST    @13,@SA00001+4                                      0001 00020000
         LA    @14,@SA00001                                        0001 00021000
         ST    @14,8(,@13)                                         0001 00022000
         LR    @13,@14                                             0001 00023000
         AH    @15,4(,@15)                                         0001 00024000
         BR    @15                                                 0001 00025000
@EP00001 DS    0H                                                  0002 00026000
*                                                                       00027000
** REFS ARE GENERATED FOR NVT FIELDS THAT CONTAIN ADDRESSES OF          00028000
** NIP SERVICE ROUTINES, SO IEAPMNIP MACRO CALLS TO THESE ROUTINES      00029000
** WILL ASSEMBLE PROPERLY.                                              00030000
*/*                    END OF CVT MACRO                              */ 00031000
*                                                                  0166 00032000
*                                                                  0166 00033000
*/********************************************************************/ 00034000
*/*                                                                  */ 00035000
*/*        SUBROUTINE NPA5APF                                        */ 00036000
*/*                                                                  */ 00037000
*/*        FUNCTION - BUILD THE SYSTEM APF TABLE                     */ 00038000
*/*                                                                  */ 00039000
*/*        INPUT    - (1) REG 3 (POINTER TO CVT)                     */ 00040000
*/*                   (2) APF PARMLIB MEMBER, IEAPAKXX               */ 00041000
*/*                                                                  */ 00042000
*/*        OUTPUT   - (1) CVTAUTHL - POINTER TO THE SYSTEM APF TABLE */ 00043000
*/*                   (2) SYSTEM APF TABLE COMPLETE                  */ 00044000
*/*                                                                  */ 00045000
*/********************************************************************/ 00046000
*                                                                  0166 00047000
*NPA5APF:                                                          0166 00048000
*   ENTRY;                                                         0166 00049000
@EP00166 DS    0H                                                  0167 00050000
*   RESPECIFY                                                      0167 00051000
*    (RCVT,                                                        0167 00052000
*     RPARM0,                                                      0167 00053000
*     TEXTPTR,                                                     0167 00054000
*     APFPTR,                                                      0167 00055000
*     RNVT) RESTRICTED;                                            0167 00056000
*   RPARM0=APFTABSZ;                /* SETTUP FOR GETMAIN OF APF   0168 00057000
*                                      TABLE                         */ 00058000
         L     RPARM0,APFTABSZ                                     0168 00059000
*   GENERATE REFS(RPARM0) SETS(RPARM)(GETMAIN R,LV=(RPARM0));/* ISSUE   00060000
*                                      GETMAIN FOR 2040 BYTES FROM 0169 00061000
*                                      SP245                         */ 00062000
         GETMAIN R,LV=(RPARM0)                                          00063000
*   RESPECIFY                                                      0170 00064000
*    (RPARM) RESTRICTED;                                           0170 00065000
*   APFSAVE=RPARM;                  /* SAVE PTR TO START OF TABLE    */ 00066000
         ST    RPARM,APFSAVE                                       0171 00067000
*   APFPTR=RPARM+2;                 /* INIT APF TABLE POINTER        */ 00068000
         LA    @12,2                                               0172 00069000
         LR    APFPTR,RPARM                                        0172 00070000
         ALR   APFPTR,@12                                          0172 00071000
*   RESPECIFY                                                      0173 00072000
*    (RPARM,                                                       0173 00073000
*     RPARM0) UNRESTRICTED;                                        0173 00074000
*                                                                  0173 00075000
*   /*****************************************************************/ 00076000
*   /*                                                               */ 00077000
*   /* THE SYSTEM APF TABLE WILL ALWAYS CONTAIN SYS1.LINKLIB AND     */ 00078000
*   /* SYS1.SVCLIB AS ENTRIES.                                       */ 00079000
*   /*                                                               */ 00080000
*   /*****************************************************************/ 00081000
*                                                                  0174 00082000
*   RESPECIFY                                                      0174 00083000
*    (DEBPTR,                                                      0174 00084000
*     DEBDAPTR) RESTRICTED;                                        0174 00085000
*   APFTAB=LINKLIB;                 /* INIT LINKLIB ENTRY            */ 00086000
         MVI   APFTAB+19(APFPTR),C' '                              0175 00087000
         MVC   APFTAB+20(31,APFPTR),APFTAB+19(APFPTR)              0175 00088000
         MVC   APFTAB(19,APFPTR),LINKLIB                           0175 00089000
*   DEBPTR=CVTLINK->DCBDEBAD;       /* POINT TO DEB BASIC SECTION    */ 00090000
         L     @11,CVTLINK(,CVTPTR)                                0176 00091000
         SLR   DEBPTR,DEBPTR                                       0176 00092000
         ICM   DEBPTR,7,DCBDEBAD(@11)                              0176 00093000
*   DEBDAPTR=ADDR(DEBBASND);        /* POINT TO DEB DA SECTION       */ 00094000
         LA    DEBDAPTR,DEBBASND(,DEBPTR)                          0177 00095000
*   APFTVOL=DEBUCBAD->UCBVOLI;      /* INIT LINKLIB VOLID IN TAB     */ 00096000
         L     @11,DEBUCBAD(,DEBDAPTR)                             0178 00097000
         MVC   APFTVOL(6,APFPTR),UCBVOLI(@11)                      0178 00098000
*   APFPTR=APFPTR+19;               /* POINT TO NXT ENTRY-SVCLIB     */ 00099000
         AH    APFPTR,@CH00079                                     0179 00100000
*   APFTAB=SVCLIB;                  /* INIT SVCLIB ENTRY             */ 00101000
         MVI   APFTAB+18(APFPTR),C' '                              0180 00102000
         MVC   APFTAB+19(32,APFPTR),APFTAB+18(APFPTR)              0180 00103000
         MVC   APFTAB(18,APFPTR),SVCLIB                            0180 00104000
*   DEBPTR=CVTSVDCB->DCBDEBAD;      /* POINT TO DEB BASIC SECTION    */ 00105000
         L     @11,CVTSVDCB(,CVTPTR)                               0181 00106000
         SLR   DEBPTR,DEBPTR                                       0181 00107000
         ICM   DEBPTR,7,DCBDEBAD(@11)                              0181 00108000
*   DEBDAPTR=ADDR(DEBBASND);        /* POINT TO DEB DA SECTION       */ 00109000
         LA    DEBDAPTR,DEBBASND(,DEBPTR)                          0182 00110000
*   APFTVOL=DEBUCBAD->UCBVOLI;      /* INIT SVCLIB VOLID IN TAB      */ 00111000
         L     @11,DEBUCBAD(,DEBDAPTR)                             0183 00112000
         MVC   APFTVOL(6,APFPTR),UCBVOLI(@11)                      0183 00113000
*   RESPECIFY                                                      0184 00114000
*    (DEBPTR,                                                      0184 00115000
*     DEBDAPTR) UNRESTRICTED;                                      0184 00116000
*   APFPTR=APFPTR+18;               /* POINT TO NEXT ENTRY           */ 00117000
         AH    APFPTR,@CH00090                                     0185 00118000
*   APFSVCLK=APFPTR;                /* SAVE PTR TO END OF LAST ENT   */ 00119000
         ST    APFPTR,APFSVCLK                                     0186 00120000
*   ENTRYCTR=2;                     /* UPDATE COUNTER WITH NO. ENT   */ 00121000
*                                                                  0187 00122000
         STH   @12,ENTRYCTR                                        0187 00123000
*   /*****************************************************************/ 00124000
*   /*                                                               */ 00125000
*   /* IF APF=XX HAS BEEN SPECIFIED BY OPERATOR, PROCESS IEAAPFXX    */ 00126000
*   /* MEMBER OF SYS1.PARMLIB.                                       */ 00127000
*   /*                                                               */ 00128000
*   /*****************************************************************/ 00129000
*                                                                  0188 00130000
*   RESPECIFY                                                      0188 00131000
*     PARMTAB BASED(NVTPTAB);                                      0188 00132000
*   RESPECIFY                                                      0189 00133000
*    (SCNPTR) RESTRICTED;                                          0189 00134000
*   SCNPTR=APF;                     /* GET POINTER TO SUBSTRING      */ 00135000
         L     @12,NVTPTAB(,RNVT)                                  0190 00136000
         L     SCNPTR,APF(,@12)                                    0190 00137000
*   IF SCNPTR=0 THEN                /* WAS APF SPECIFIED?            */ 00138000
         LTR   SCNPTR,SCNPTR                                       0191 00139000
         BNZ   @RF00191                                            0191 00140000
*     DO;                           /* APF NOT SPECIFIED             */ 00141000
*       CALL NPA5COMP;              /* COMPLETE TABLE BUILD          */ 00142000
         BAL   @14,NPA5COMP                                        0193 00143000
*       RETURN;                     /* RETURN TO CALLER              */ 00144000
@EL00001 L     @13,4(,@13)                                         0194 00145000
@EF00001 DS    0H                                                  0194 00146000
@ER00001 LM    @14,@12,12(@13)                                     0194 00147000
         BR    @14                                                 0194 00148000
*     END;                                                         0195 00149000
*   ELSE                                                           0196 00150000
*     ;                             /* APF SPECIFIED                 */ 00151000
@RF00191 DS    0H                                                  0197 00152000
*NPA5SCHK:                          /* CHECK SUBSTRING               */ 00153000
*   CALL NPA5APRM;                  /* SYNTAX CHECK APF SUBSTRING    */ 00154000
NPA5SCHK BAL   @14,NPA5APRM                                        0197 00155000
*   IF PRMRC¬='00'X THEN            /* WAS THERE A PARAMETER ERROR   */ 00156000
         CLI   PRMRC,X'00'                                         0198 00157000
         BE    @RF00198                                            0198 00158000
*     DO;                           /* YES                           */ 00159000
*       ERRORCD=PINV;               /* SET ERROR CAUSE CODE          */ 00160000
         MVI   ERRORCD,X'04'                                       0200 00161000
*       GO TO NPA5EROR;             /* PROCESS ERROR                 */ 00162000
         B     NPA5EROR                                            0201 00163000
*     END;                                                         0202 00164000
*   ELSE                                                           0203 00165000
*     ;                             /* PARAMETER SPECIFICATION OK    */ 00166000
*                                                                  0203 00167000
@RF00198 DS    0H                                                  0204 00168000
*   /*****************************************************************/ 00169000
*   /*                                                               */ 00170000
*   /* READ PARMLIB (IEAAPFXX) TEXT RECORDS UNTIL ALL ENTRIES ARE    */ 00171000
*   /* PROCESSED.                                                    */ 00172000
*   /*                                                               */ 00173000
*   /*****************************************************************/ 00174000
*                                                                  0204 00175000
*   DO WHILE NPA5AEND='0'B;         /* LOOP TILL ALL TXT RECORDS HAVE   00176000
*                                      BEEN READ                     */ 00177000
         B     @DE00204                                            0204 00178000
@DL00204 DS    0H                                                  0205 00179000
*NPA5TEXT:                                                         0205 00180000
*     CALL NPA5TXTR;                /* READ A TEXT RECORD            */ 00181000
NPA5TEXT BAL   @14,NPA5TXTR                                        0205 00182000
*     IF TXTRC¬='00'X THEN          /* WAS READ SUCCESSFUL?          */ 00183000
         CLI   TXTRC,X'00'                                         0206 00184000
         BNE   @RT00206                                            0206 00185000
*       GO TO NPA5EROR;             /* NO - PROCESS ERROR            */ 00186000
*     ELSE                                                         0208 00187000
*       ;                           /* YES - CONTINUE                */ 00188000
*     APFLIBSZ=0;                   /* INIT LIBRARY SIZE TO 0        */ 00189000
         SLR   @12,@12                                             0209 00190000
         STH   @12,APFLIBSZ                                        0209 00191000
*NPA5SCAN:                                                         0210 00192000
*     LIBPTR=TEXTPTR;               /* SAVE PTR TO LIBRARY NAME      */ 00193000
NPA5SCAN ST    TEXTPTR,LIBPTR                                      0210 00194000
*     DO WHILE SCAN(1)¬=' ';        /* DETERMINE LIBNAME SIZE        */ 00195000
         B     @DE00211                                            0211 00196000
@DL00211 DS    0H                                                  0212 00197000
*       APFLIBSZ=APFLIBSZ+1;        /* INCREMENT LIBNAME COUNTER     */ 00198000
         LA    @12,1                                               0212 00199000
         LH    @11,APFLIBSZ                                        0212 00200000
         ALR   @11,@12                                             0212 00201000
         STH   @11,APFLIBSZ                                        0212 00202000
*       TEXTPTR=TEXTPTR+1;          /* POINT TO NEXT CHAR OF LIBNM   */ 00203000
         ALR   TEXTPTR,@12                                         0213 00204000
*     END;                          /* END OF SCAN LOOP              */ 00205000
@DE00211 CLI   SCAN(TEXTPTR),C' '                                  0214 00206000
         BNE   @DL00211                                            0214 00207000
*     IF APFLIBSZ>44 THEN           /* IS LIBNAME INVALID            */ 00208000
         LH    @12,APFLIBSZ                                        0215 00209000
         CH    @12,@CH00137                                        0215 00210000
         BNH   @RF00215                                            0215 00211000
*       DO;                         /* YES - PROCESS ERROR           */ 00212000
*         ERRORCD=LINV;             /* SET ERROR CAUSE CODE          */ 00213000
         MVI   ERRORCD,X'08'                                       0217 00214000
*         GO TO NPA5EROR;           /* PROCESS ERROR                 */ 00215000
         B     NPA5EROR                                            0218 00216000
*       END;                        /* END ERROR PROCESSING          */ 00217000
*     ELSE                                                         0220 00218000
*       ;                           /* VALID LIBNAME                 */ 00219000
@RF00215 DS    0H                                                  0221 00220000
*     IF APFLIBSZ=0 THEN            /* IS TEXT RECORD BLANK          */ 00221000
         ICM   @12,3,APFLIBSZ                                      0221 00222000
         BZ    @RT00221                                            0221 00223000
*       GO TO NPA5TEND;             /* YES - GET NEXT RECORD         */ 00224000
*     ELSE                                                         0223 00225000
*       ;                           /* NO - PROCESS LIBNAME IF     0223 00226000
*                                      STORAGE IS AVAILABLE          */ 00227000
*     IF((APFPTR+LENGTH(APFTENTR))-APFSAVE)>2040 THEN/* APF TABLE  0224 00228000
*                                      SIZE (2040) EXCEEDED          */ 00229000
         LA    @12,51                                              0224 00230000
         ALR   @12,APFPTR                                          0224 00231000
         SL    @12,APFSAVE                                         0224 00232000
         CH    @12,@CH02061                                        0224 00233000
         BNH   @RF00224                                            0224 00234000
*       DO;                         /* YES - PROCESS ERROR           */ 00235000
*         ERRORCD=STOR;             /* INDICATE CAUSE OF ERROR       */ 00236000
         MVI   ERRORCD,X'10'                                       0226 00237000
*         GO TO NPA5EROR;           /* PROCESS ERROR                 */ 00238000
         B     NPA5EROR                                            0227 00239000
*       END;                                                       0228 00240000
*     ELSE                                                         0229 00241000
*       ;                           /* STORAGE AVAILABLE             */ 00242000
@RF00224 DS    0H                                                  0230 00243000
*     APFTDSN=LIBPTR->SCAN(1:APFLIBSZ);/* MOVE DSSN TO TABLE         */ 00244000
         MVI   APFTDSN+1(APFPTR),C' '                              0230 00245000
         MVC   APFTDSN+2(42,APFPTR),APFTDSN+1(APFPTR)              0230 00246000
         LH    @12,APFLIBSZ                                        0230 00247000
         BCTR  @12,0                                               0230 00248000
         L     @11,LIBPTR                                          0230 00249000
         EX    @12,@SM02174                                        0230 00250000
*     DO WHILE SCAN(1)=' ';         /* SKIP BLANKS BEFORE VOLID      */ 00251000
         B     @DE00231                                            0231 00252000
@DL00231 DS    0H                                                  0232 00253000
*       TEXTPTR=TEXTPTR+1;          /* INCREMENT TO NXT CHAR         */ 00254000
         AH    TEXTPTR,@CH00034                                    0232 00255000
*     END;                          /* END OF SCAN-FOR-BLANKS LOOP   */ 00256000
*                                                                  0233 00257000
@DE00231 CLI   SCAN(TEXTPTR),C' '                                  0233 00258000
         BE    @DL00231                                            0233 00259000
*     /***************************************************************/ 00260000
*     /*                                                             */ 00261000
*     /* PROCESS VOLID FIELD                                         */ 00262000
*     /*                                                             */ 00263000
*     /***************************************************************/ 00264000
*                                                                  0234 00265000
*     APFVOLSZ=0;                   /* SET VOLID CHAR COUNTER TO 0   */ 00266000
         SLR   @12,@12                                             0234 00267000
         STH   @12,APFVOLSZ                                        0234 00268000
*     VOLPTR=TEXTPTR;               /* SAVE PTR TO VOLID             */ 00269000
*                                                                  0235 00270000
         ST    TEXTPTR,VOLPTR                                      0235 00271000
*     /***************************************************************/ 00272000
*     /*                                                             */ 00273000
*     /* DETERMINE DELIMITER FOLLOWING VOLID                         */ 00274000
*     /*                                                             */ 00275000
*     /***************************************************************/ 00276000
*                                                                  0236 00277000
*     DO WHILE SCAN(1)¬=' '&SCAN(1)¬=','&SCAN(1)¬='FF'X;/* CHARACTER    00278000
*                                      A DELIMITER?                  */ 00279000
         B     @DE00236                                            0236 00280000
@DL00236 DS    0H                                                  0237 00281000
*       APFVOLSZ=APFVOLSZ+1;        /* INCREMENT VOLID SIZE          */ 00282000
         LA    @12,1                                               0237 00283000
         LH    @11,APFVOLSZ                                        0237 00284000
         ALR   @11,@12                                             0237 00285000
         STH   @11,APFVOLSZ                                        0237 00286000
*       TEXTPTR=TEXTPTR+1;          /* POINT TO NXT CHARACTER        */ 00287000
         ALR   TEXTPTR,@12                                         0238 00288000
*     END;                          /* END OF VOLID SCAN LOOP        */ 00289000
@DE00236 CLI   SCAN(TEXTPTR),C' '                                  0239 00290000
         BE    @DC00236                                            0239 00291000
         CLI   SCAN(TEXTPTR),C','                                  0239 00292000
         BE    @DC00236                                            0239 00293000
         CLI   SCAN(TEXTPTR),X'FF'                                 0239 00294000
         BNE   @DL00236                                            0239 00295000
@DC00236 DS    0H                                                  0240 00296000
*     IF SCAN(1)='FF'X|APFVOLSZ>6 THEN/* VOLID ERROR                 */ 00297000
         CLI   SCAN(TEXTPTR),X'FF'                                 0240 00298000
         BE    @RT00240                                            0240 00299000
         LH    @12,APFVOLSZ                                        0240 00300000
         CH    @12,@CH00083                                        0240 00301000
         BNH   @RF00240                                            0240 00302000
@RT00240 DS    0H                                                  0241 00303000
*       DO;                         /* YES- EITHER VOLID MISSING   0241 00304000
*                                      (SCAN=FF) OR LIBSIZE TOO LARGE*/ 00305000
*         ERRORCD=VINV;             /* SET ERROR-CAUSE CODE          */ 00306000
         MVI   ERRORCD,X'0C'                                       0242 00307000
*         GO TO NPA5EROR;           /* PROCESS ERROR                 */ 00308000
         B     NPA5EROR                                            0243 00309000
*       END;                                                       0244 00310000
*     ELSE                                                         0245 00311000
*       ;                           /* NO- PROCESS VOLID             */ 00312000
@RF00240 DS    0H                                                  0246 00313000
*     APFWORK=APFLIBSZ+6;           /* SIZE OF LIBRARY AND VOLID     */ 00314000
         LA    @12,6                                               0246 00315000
         AH    @12,APFLIBSZ                                        0246 00316000
         STH   @12,APFWORK                                         0246 00317000
*     APFTLEN=AWORK2;               /* UPDATE LENGTH FIELD FOR THIS     00318000
*                                      ENTRY                         */ 00319000
         MVC   APFTLEN(1,APFPTR),AWORK2                            0247 00320000
*     APFTVOL=APFTVOL&&APFTVOL;     /* BLANK VOLID TABLE ENTRY       */ 00321000
         XC    APFTVOL(6,APFPTR),APFTVOL(APFPTR)                   0248 00322000
*     APFTVOL=VOLPTR->SCAN(1:APFVOLSZ);/* MOVE VOLID TO TABLE        */ 00323000
         MVI   APFTVOL+1(APFPTR),C' '                              0249 00324000
         MVC   APFTVOL+2(4,APFPTR),APFTVOL+1(APFPTR)               0249 00325000
         LH    @12,APFVOLSZ                                        0249 00326000
         BCTR  @12,0                                               0249 00327000
         L     @11,VOLPTR                                          0249 00328000
         EX    @12,@SM02176                                        0249 00329000
*     IF SCAN(1)=' ' THEN           /* LAST TEXT RECORD              */ 00330000
         CLI   SCAN(TEXTPTR),C' '                                  0250 00331000
         BNE   @RF00250                                            0250 00332000
*       NPA5AEND='1'B;              /* YES - SET SWITCH TO TERM      */ 00333000
         OI    NPA5AEND,B'01000000'                                0251 00334000
*     ELSE                                                         0252 00335000
*       ;                           /* NO - SCAN=,                   */ 00336000
@RF00250 DS    0H                                                  0253 00337000
*     APFPTR=APFPTR+APFWORK+1;      /* POINT TO NEXT TABLE ENTRY     */ 00338000
         LA    @12,1                                               0253 00339000
         LR    @11,APFPTR                                          0253 00340000
         AH    @11,APFWORK                                         0253 00341000
         ALR   @11,@12                                             0253 00342000
         LR    APFPTR,@11                                          0253 00343000
*     ENTRYCTR=ENTRYCTR+1;          /* UPDATE NO. ENTRIES COUNTER    */ 00344000
         AH    @12,ENTRYCTR                                        0254 00345000
         STH   @12,ENTRYCTR                                        0254 00346000
*NPA5TEND:                                                         0255 00347000
*   END;                            /* END ENTRY PROCESSING LOOP     */ 00348000
NPA5TEND DS    0H                                                  0255 00349000
@DE00204 TM    NPA5AEND,B'01000000'                                0255 00350000
         BZ    @DL00204                                            0255 00351000
*   CALL NPA5COMP;                  /* COMPLETE APF TABLE BUILD      */ 00352000
         BAL   @14,NPA5COMP                                        0256 00353000
*   RETURN;                         /* RETURN TO CALLER              */ 00354000
*                                                                  0257 00355000
         B     @EL00001                                            0257 00356000
*   /*****************************************************************/ 00357000
*   /*                                                               */ 00358000
*   /* BEGIN ERROR PROCESSING                                        */ 00359000
*   /*                                                               */ 00360000
*   /*****************************************************************/ 00361000
*                                                                  0258 00362000
*NPA5EROR:                                                         0258 00363000
*   CALL NPA5ERTN;                  /* CALL ERROR PROCESSING RTN     */ 00364000
NPA5EROR BAL   @14,NPA5ERTN                                        0258 00365000
*   IF PRMERRC¬=RETRY THEN          /* WAS RECOVERY SUCESSFUL        */ 00366000
         CLI   PRMERRC,X'00'                                       0259 00367000
         BE    @RF00259                                            0259 00368000
*     DO;                           /* NO - COMPLETE TABLE TO POINT     00369000
*                                      OF ERROR                      */ 00370000
*       CALL NPA5COMP;              /* COMPLETE TABLE BUILD          */ 00371000
         BAL   @14,NPA5COMP                                        0261 00372000
*       RETURN;                     /* RETURN TO CALLER              */ 00373000
         B     @EL00001                                            0262 00374000
*     END;                                                         0263 00375000
*   ELSE                                                           0264 00376000
*     ;                             /* RECOVERY SUCCESSFUL-REBUILD 0264 00377000
*                                      TABLE                         */ 00378000
@RF00259 DS    0H                                                  0265 00379000
*   APFPTR=APFSVCLK;                /* RESTORE PTR TO FIRST ENTRY  0265 00380000
*                                      FOLLOWING LINKLIB-SVCLIB    0265 00381000
*                                      ENTRIES                       */ 00382000
         L     APFPTR,APFSVCLK                                     0265 00383000
*   NPA5PARM='0'B;                  /* SET PDS READ FLAG             */ 00384000
*   NPA5AEND='0'B;                  /* SET PROCESS TXT RECORD FLAG   */ 00385000
         NI    NPA5PARM,B'00111111'                                0267 00386000
*   ENTRYCTR=2;                     /* SET COUNTER FOR NO. ENTRIES TO   00387000
*                                      2 (LINKLIB=SVCLIB)            */ 00388000
         MVC   ENTRYCTR(2),@CH00102                                0268 00389000
*   GO TO NPA5SCHK;                 /* CHECK SUBSTRING               */ 00390000
         B     NPA5SCHK                                            0269 00391000
*   RESPECIFY                                                      0270 00392000
*    (TEXTPTR,                                                     0270 00393000
*     APFPTR) UNRESTRICTED;                                        0270 00394000
*   GENERATE NOREFS NOSETS(EJECT);                                 0271 00395000
*                                                                  0271 00396000
         EJECT                                                          00397000
*/********************************************************************/ 00398000
*/*                                                                  */ 00399000
*/*        SUBROUTINE NPA5COMP                                       */ 00400000
*/*                                                                  */ 00401000
*/*        FUNCTION - COMPLETE APF TABLE BUILD PROCESSING            */ 00402000
*/*                                                                  */ 00403000
*/*        INPUT    - (1) RCVT  - POINTER TO CVT                     */ 00404000
*/*                   (2) APFPTR- POINTER TO END OF LAST ENTRY IN    */ 00405000
*/*                               APF TABLE                          */ 00406000
*/*                   (3) APFSAVE-POINTER TO START OF APF TABLE      */ 00407000
*/*                   (4) ENTRYCTR- NO. ENTRIES IN TABLE             */ 00408000
*/*                                                                  */ 00409000
*/*        OUTPUT   - (1) CVTAUTHL - POINTER TO THE SYSTEM APF TABLE */ 00410000
*/*                   (2) APF TABLE HEADER UPDATED WITH NO. ENTRIES  */ 00411000
*/*                       AND SIZE OF TABLE IN DOUBLEWORDS           */ 00412000
*/*                                                                  */ 00413000
*/********************************************************************/ 00414000
*                                                                  0272 00415000
*NPA5COMP:                                                         0272 00416000
*   PROC OPTIONS(NOSAVEAREA);                                      0272 00417000
         B     @PB00002                                            0272 00418000
NPA5COMP STM   @14,@12,12(@13)                                     0272 00419000
*   RESPECIFY                                                      0273 00420000
*    (RCVT,                                                        0273 00421000
*     RNVT,                                                        0273 00422000
*     APFPTR,                                                      0273 00423000
*     RPARM0) RESTRICTED;                                          0273 00424000
*   APFPTR=(APFPTR+7)&ROUNDDWD;     /* ROUND TO DWD BOUNDARY         */ 00425000
         LA    @12,7                                               0274 00426000
         ALR   @12,APFPTR                                          0274 00427000
         N     @12,@CF00110                                        0274 00428000
         LR    APFPTR,@12                                          0274 00429000
*   APFWORK=(APFPTR-APFSAVE)/8;     /* COMPUTE APF TABLE SIZE IN   0275 00430000
*                                      DOUBLEWORDS                   */ 00431000
         L     @12,APFSAVE                                         0275 00432000
         LR    @08,APFPTR                                          0275 00433000
         SLR   @08,@12                                             0275 00434000
         SRDA  @08,32                                              0275 00435000
         D     @08,@CF00040                                        0275 00436000
         STH   @09,APFWORK                                         0275 00437000
*   APFTABLN=AWORK2;                /* UPDATE TOTAL APF TABLE SIZE IN   00438000
*                                      APF HEADER                    */ 00439000
         MVC   APFTABLN(1,@12),AWORK2                              0276 00440000
*   APFTNENT=ECNTR2;                /* UPDATE NO. ENTRIES IN TABLE   */ 00441000
         MVC   APFTNENT(1,@12),ECNTR2                              0277 00442000
*   FMSIZE=2040-(APFWORK*8);        /* COMPUTE AMOUNT OF STORAGE NOT    00443000
*                                      USED                          */ 00444000
         SLA   @09,3                                               0278 00445000
         LCR   @09,@09                                             0278 00446000
         AH    @09,@CH02061                                        0278 00447000
         ST    @09,FMSIZE                                          0278 00448000
*   IF FMSIZE¬=0 THEN               /* IS A FREEMAIN NECESSARY       */ 00449000
         LTR   @09,@09                                             0279 00450000
         BZ    @RF00279                                            0279 00451000
*     DO;                           /* YES                           */ 00452000
*       FMSIZESP=SPF5;              /* SET SUBPOOL TO 245            */ 00453000
         MVI   FMSIZESP,X'F5'                                      0281 00454000
*       RPARM0=FMSIZE;              /* SETTUP REG 0 FOR FREEMAIN     */ 00455000
*                                                                  0282 00456000
         L     RPARM0,FMSIZE                                       0282 00457000
*       /*************************************************************/ 00458000
*       /*                                                           */ 00459000
*       /* ISSUE FREEMAIN TO FREE AREA NOT USED FROM ADDRESS APFPTR  */ 00460000
*       /* FOR RPARM0 BYTES                                          */ 00461000
*       /*                                                           */ 00462000
*       /*************************************************************/ 00463000
*                                                                  0283 00464000
*       GENERATE REFS(RPARM0,APFPTR) SETS(RPARM)                   0283 00465000
*           (FREEMAIN R,LV=(0),A=(APFPTR));/* FREE SPACE             */ 00466000
         FREEMAIN R,LV=(0),A=(APFPTR)                                   00467000
*     END;                                                         0284 00468000
*   ELSE                                                           0285 00469000
*     ;                             /* 2040 BYTES USED - NO FRMAIN   */ 00470000
@RF00279 DS    0H                                                  0286 00471000
*   CVTAUTHL=APFSAVE;               /* INSERT APF TAB ADDR IN CVT    */ 00472000
         MVC   CVTAUTHL(4,CVTPTR),APFSAVE                          0286 00473000
*   RETURN;                         /* RETURN TO CALLER              */ 00474000
@EL00002 DS    0H                                                  0287 00475000
@EF00002 DS    0H                                                  0287 00476000
@ER00002 LM    @14,@12,12(@13)                                     0287 00477000
         BR    @14                                                 0287 00478000
*   RESPECIFY                                                      0288 00479000
*    (RPARM0) UNRESTRICTED;                                        0288 00480000
*   END NPA5COMP;                                                  0289 00481000
@PB00002 DS    0H                                                  0290 00482000
*   GENERATE NOREFS NOSETS(EJECT);                                 0290 00483000
*                                                                  0290 00484000
         EJECT                                                          00485000
*/********************************************************************/ 00486000
*/*                                                                  */ 00487000
*/*        SUBROUTINE NPA5APRM                                       */ 00488000
*/*                                                                  */ 00489000
*/*        INPUT    - (1) SCNPTR - POINTER TO SUBSTRING INPUT        */ 00490000
*/*                                                                  */ 00491000
*/*        OUTPUT   - (1) PLISTNAM - NAME OF PARMLIB MEMBER, I.E.,   */ 00492000
*/*                                  IEAAPFXX                        */ 00493000
*/*                   (2) NPA5PARM - REQUEST TO READ PARMLIB MEMBER  */ 00494000
*/*                                  IEAAPFXX                        */ 00495000
*/*                                                                  */ 00496000
*/********************************************************************/ 00497000
*                                                                  0291 00498000
*NPA5APRM:                                                         0291 00499000
*   PROC OPTIONS(NOSAVEAREA);                                      0291 00500000
         B     @PB00003                                            0291 00501000
NPA5APRM STM   @14,@12,12(@13)                                     0291 00502000
*   RESPECIFY                                                      0292 00503000
*    (RCVT,                                                        0292 00504000
*     RNVT,                                                        0292 00505000
*     SCNPTR) RESTRICTED;                                          0292 00506000
*NPA5ALFT:                                                         0293 00507000
*   DO WHILE PARMCHAR(1)='(';       /* IF FIRST CHAR IS ( SKIP TO  0293 00508000
*                                      NEXT CHAR                     */ 00509000
NPA5ALFT B     @DE00293                                            0293 00510000
@DL00293 DS    0H                                                  0294 00511000
*     SCNPTR=SCNPTR+1;              /* INCREMENT TXT PTR             */ 00512000
         AH    SCNPTR,@CH00034                                     0294 00513000
*   END;                                                           0295 00514000
*                                                                  0295 00515000
@DE00293 CLI   PARMCHAR(SCNPTR),C'('                               0295 00516000
         BE    @DL00293                                            0295 00517000
*   /*****************************************************************/ 00518000
*   /*                                                               */ 00519000
*   /* INSURE NEXT 2 CHARACTERS ARE ALPHANUMERIC                     */ 00520000
*   /*                                                               */ 00521000
*   /*****************************************************************/ 00522000
*                                                                  0296 00523000
*   RESPECIFY                                                      0296 00524000
*    (RI) RESTRICTED;                                              0296 00525000
*   DO RI=0 TO 1 BY 1 WHILE PARMCHAR(1)>='0'&PARMCHAR(1)<='9'|/*   0297 00526000
*                                      CHECK FOR ALPHANUM            */ 00527000
*         PARMCHAR(1)>='A'&PARMCHAR(1)<='Z';/* CHARACTERS            */ 00528000
         SLR   RI,RI                                               0297 00529000
@DL00297 CLI   PARMCHAR(SCNPTR),C'0'                               0297 00530000
         BL    @GL00004                                            0297 00531000
         CLI   PARMCHAR(SCNPTR),C'9'                               0297 00532000
         BNH   @DB00297                                            0297 00533000
@GL00004 CLI   PARMCHAR(SCNPTR),C'A'                               0297 00534000
         BL    @DC00297                                            0297 00535000
         CLI   PARMCHAR(SCNPTR),C'Z'                               0297 00536000
         BH    @DC00297                                            0297 00537000
@DB00297 DS    0H                                                  0298 00538000
*     SCNPTR=SCNPTR+1;              /* INCREMENT TO NEXT CHAR        */ 00539000
         AH    SCNPTR,@CH00034                                     0298 00540000
*   END;                                                           0299 00541000
         AH    RI,@CH00034                                         0299 00542000
         CH    RI,@CH00034                                         0299 00543000
         BNH   @DL00297                                            0299 00544000
@DC00297 DS    0H                                                  0300 00545000
*   IF RI¬=2|PARMCHAR(1)¬=''''&PARMCHAR(1)¬=')' THEN               0300 00546000
         CH    RI,@CH00102                                         0300 00547000
         BNE   @RT00300                                            0300 00548000
         CLI   PARMCHAR(SCNPTR),C''''                              0300 00549000
         BE    @RF00300                                            0300 00550000
         CLI   PARMCHAR(SCNPTR),C')'                               0300 00551000
         BE    @RF00300                                            0300 00552000
@RT00300 DS    0H                                                  0301 00553000
*     DO;                           /* IF 2 CHAR NOT CHECKED ABOVE OR   00554000
*                                      PARMCHAR IS NOT A VALID     0301 00555000
*                                      DELIMITER, THEN RETURN WITH 0301 00556000
*                                      ERROR CONDITION               */ 00557000
*       PRMRC='04'X;                /* ERROR CODE TO CALLER          */ 00558000
         MVI   PRMRC,X'04'                                         0302 00559000
*       RETURN;                                                    0303 00560000
@EL00003 DS    0H                                                  0303 00561000
@EF00003 DS    0H                                                  0303 00562000
@ER00003 LM    @14,@12,12(@13)                                     0303 00563000
         BR    @14                                                 0303 00564000
*     END;                                                         0304 00565000
*   ELSE                                                           0305 00566000
*     ;                             /* SUBSTRING OK                  */ 00567000
@RF00300 DS    0H                                                  0306 00568000
*   RESPECIFY                                                      0306 00569000
*    (RI) UNRESTRICTED;                                            0306 00570000
*   SCNPTR=SCNPTR-2;                /* POINT TO FIRST VALID CHAR     */ 00571000
         BCTR  SCNPTR,0                                            0307 00572000
         BCTR  SCNPTR,0                                            0307 00573000
*   PLISTEL=PARMCHAR(1:2);          /* SUFFIX FOR IEAAPF MEMBER      */ 00574000
         MVC   PLISTEL(2),PARMCHAR(SCNPTR)                         0308 00575000
*   NPA5PARM='1'B;                  /* REQUEST TO READ PARMLIB MEMBER   00576000
*                                      IEAAPFXX                      */ 00577000
         OI    NPA5PARM,B'10000000'                                0309 00578000
*   PRMRC='00'X;                    /* SET GOOD RC                   */ 00579000
         MVI   PRMRC,X'00'                                         0310 00580000
*   RETURN;                         /* RETURN TO CALLER              */ 00581000
         B     @EL00003                                            0311 00582000
*   END NPA5APRM;                   /* END OF SUBROUTINE           0312 00583000
*                                                                    */ 00584000
@PB00003 DS    0H                                                  0313 00585000
*   GENERATE NOREFS NOSETS(EJECT);                                 0313 00586000
*                                                                  0313 00587000
         EJECT                                                          00588000
*/********************************************************************/ 00589000
*/*                                                                  */ 00590000
*/*        SUBROUTINE NPA5TXTR                                       */ 00591000
*/*                                                                  */ 00592000
*/*        INPUT    - (1) NPA5PARM- WHEN SET TO 1 INDICATES PARMLIB  */ 00593000
*/*                                 MEMBER IEAAPFXX SHOULD BE READ   */ 00594000
*/*                                 WHEN SET TO 0  INDICATES ONLY    */ 00595000
*/*                                 TXT READS FROM IEAAPFXX ARE      */ 00596000
*/*                                 REQUIRED                         */ 00597000
*/*                   (2) PLISTNAM- PARMLIB LIST NAME,I.E., IEAAPFXX */ 00598000
*/*                                                                  */ 00599000
*/*        OUTPUT   - (1) NPA5PARM- ON FIRST CALL TO THIS ROUTINE,IS */ 00600000
*/*                                 SET TO 0                         */ 00601000
*/*                   (2) TEXTPTR - POINTER TO FIRST NON-BLANK CHAR  */ 00602000
*/*                                 OF PARMLIB RECORD                */ 00603000
*/*                                                                  */ 00604000
*/********************************************************************/ 00605000
*                                                                  0314 00606000
*NPA5TXTR:                                                         0314 00607000
*   PROC OPTIONS(NOSAVE(TEXTPTR));                                 0314 00608000
         B     @PB00004                                            0314 00609000
NPA5TXTR STM   @14,@03,@SA00004                                    0314 00610000
         STM   @05,@12,@SA00004+24                                 0314 00611000
*NPA5TPRM:                                                         0315 00612000
*   RESPECIFY                                                      0315 00613000
*    (RCVT,                                                        0315 00614000
*     RNVT,                                                        0315 00615000
*     TEXTPTR) RESTRICTED;                                         0315 00616000
NPA5TPRM DS    0H                                                  0316 00617000
*   IF NPA5PARM='1'B THEN           /* REQUEST TO READ IEAAPFXX      */ 00618000
         TM    NPA5PARM,B'10000000'                                0316 00619000
         BNO   @RF00316                                            0316 00620000
*     DO;                           /* YES                           */ 00621000
*       RESPECIFY                                                  0318 00622000
*         NIPPAREA BASED(NVTPAREA);                                0318 00623000
*       NIPPANAM=PLISTNAM;          /* PASS IEAAPFXX TO NIPPMPDS     */ 00624000
         L     @12,NVTPAREA(,RNVT)                                 0319 00625000
         MVC   NIPPANAM(8,@12),PLISTNAM                            0319 00626000
*       CALL NIPPMPDS;              /* READ PARMLIB MEM IEAAPFXX     */ 00627000
         BAL   @14,NIPPMPDS                                        0320 00628000
*       GENERATE NOREFS NOSETS FLOWS(NPA5TGRC,NPA5TERR);           0321 00629000
               B   NPA5TGRC            READ SUCCESSFUL                  00630000
               B   NPA5TERR            READ ERROR                       00631000
*NPA5TGRC:                                                         0322 00632000
*       NPA5PARM='0'B;              /* ON SUBSEQUENT CALLS TO THIS 0322 00633000
*                                      RTN WILL READ TEXT RECORDS    */ 00634000
NPA5TGRC NI    NPA5PARM,B'01111111'                                0322 00635000
*     END;                                                         0323 00636000
*   ELSE                                                           0324 00637000
*     ;                             /* READ TEXT RECORD REGARDLESS OF   00638000
*                                      SWITCH SETTING                */ 00639000
@RF00316 DS    0H                                                  0325 00640000
*   CALL NIPPMTXT;                  /* READ TXT RCD                  */ 00641000
         BAL   @14,NIPPMTXT                                        0325 00642000
*   GENERATE NOREFS NOSETS FLOWS(NPA5TRTR,NPA5TERR);               0326 00643000
           B   NPA5TRTR                READ SUCCESSFUL                  00644000
           B   NPA5TERR                READ ERROR                       00645000
*NPA5TRTR:                                                         0327 00646000
*   RESPECIFY                                                      0327 00647000
*    (RPARM) RESTRICTED;                                           0327 00648000
NPA5TRTR DS    0H                                                  0328 00649000
*   TEXTPTR=RPARM;                  /* RETURN PTR TO TXT RECORD      */ 00650000
         LR    TEXTPTR,RPARM                                       0328 00651000
*   TXTRC='00'X;                    /* SET RC=0                      */ 00652000
         MVI   TXTRC,X'00'                                         0329 00653000
*   RETURN;                         /* RETURN TO CALLER              */ 00654000
@EL00004 DS    0H                                                  0330 00655000
@EF00004 DS    0H                                                  0330 00656000
@ER00004 LM    @14,@03,@SA00004                                    0330 00657000
         LM    @05,@12,@SA00004+24                                 0330 00658000
         BR    @14                                                 0330 00659000
*   RESPECIFY                                                      0331 00660000
*    (RPARM) UNRESTRICTED;                                         0331 00661000
*NPA5TERR:                                                         0332 00662000
*                                                                  0332 00663000
*   /*****************************************************************/ 00664000
*   /*                                                               */ 00665000
*   /* CALLING RTN WILL PROCESS READ ERROR                           */ 00666000
*   /*                                                               */ 00667000
*   /*****************************************************************/ 00668000
*                                                                  0332 00669000
*   NPA5RTRY='1'B;                  /* INDICATE DIAGNOSTIC ISSUED    */ 00670000
NPA5TERR OI    NPA5RTRY,B'00100000'                                0332 00671000
*   TXTRC='04'X;                    /* INDICATE ERROR                */ 00672000
         MVI   TXTRC,X'04'                                         0333 00673000
*   RETURN;                         /* CALLING ROUTINE WILL PROCES 0334 00674000
*                                      ERROR                         */ 00675000
         B     @EL00004                                            0334 00676000
*   END NPA5TXTR;                                                  0335 00677000
@PB00004 DS    0H                                                  0336 00678000
*   GENERATE NOREFS NOSETS(EJECT);                                 0336 00679000
*                                                                  0336 00680000
         EJECT                                                          00681000
*/********************************************************************/ 00682000
*/*                                                                  */ 00683000
*/*        SUBROUTINE NPA5ERTN                                       */ 00684000
*/*                                                                  */ 00685000
*/*        FUNCTION - WRITE INDICATIVE ERROR MESSAGE FOR ERROR DURING*/ 00686000
*/*                   APF TABLE PROCESSING                           */ 00687000
*/*                                                                  */ 00688000
*/*        INPUT    -(1) NPA5RTRY - WHEN SET TO 1 INDICATES THAT     */ 00689000
*/*                                 ERROR CAUSE (I/O ERROR) MESSAGE  */ 00690000
*/*                                 HAS PREVIOUSLY BEEN ISSUED AND   */ 00691000
*/*                                 THAT ONLY A RETRY MESSAGE IS     */ 00692000
*/*                                 REQUIRED.                        */ 00693000
*/*                  (2) ERRORCD  - INDICATES CAUSE OF ERROR, EITHER:*/ 00694000
*/*                                                                  */ 00695000
*/*                                PINV (X'04') - APF PARAMETER ERROR*/ 00696000
*/*                                                                  */ 00697000
*/*                                LINV (X'08') - APF LIBRARY INVALID*/ 00698000
*/*                                                                  */ 00699000
*/*                                VINV (X'0C') - VOLID IS MISSING   */ 00700000
*/*                                                                  */ 00701000
*/*                                STOR (X'10') - EXCEED MAX APF     */ 00702000
*/*                                               TABLE SIZE         */ 00703000
*/*                                                                  */ 00704000
*/*        OUTPUT   -(1) ERROR MESSAGE AND PROMPT TO RESPECIFY       */ 00705000
*/*                      PARAMETER                                   */ 00706000
*/*                                                                  */ 00707000
*/********************************************************************/ 00708000
*                                                                  0337 00709000
*NPA5ERTN:                                                         0337 00710000
*   PROC OPTIONS(NOSAVE(SCNPTR));                                  0337 00711000
         B     @PB00005                                            0337 00712000
NPA5ERTN STM   @14,@04,@SA00005                                    0337 00713000
         STM   @06,@12,@SA00005+28                                 0337 00714000
*   RESPECIFY                                                      0338 00715000
*    (RCVT,                                                        0338 00716000
*     RNVT,                                                        0338 00717000
*     SCNPTR) RESTRICTED;                                          0338 00718000
*                                                                  0338 00719000
*   /*****************************************************************/ 00720000
*   /*                                                               */ 00721000
*   /* SEE IF ONLY A RETRY IS REQUESTED                              */ 00722000
*   /*                                                               */ 00723000
*   /*****************************************************************/ 00724000
*                                                                  0339 00725000
*   IF NPA5RTRY='1'B|ERRORCD=PINV THEN/* RETRY ONLY ON I/O           */ 00726000
         TM    NPA5RTRY,B'00100000'                                0339 00727000
         BO    @RT00339                                            0339 00728000
         CLI   ERRORCD,X'04'                                       0339 00729000
         BE    @RT00339                                            0339 00730000
*     GO TO NPA5PRPT;               /* ERROR OR INVALID PARAMETER    */ 00731000
*                                                                  0340 00732000
*   /*****************************************************************/ 00733000
*   /*                                                               */ 00734000
*   /* WAS THE APF LIBRARY INVALID FORMAT                            */ 00735000
*   /*                                                               */ 00736000
*   /*****************************************************************/ 00737000
*                                                                  0341 00738000
*   IF ERRORCD=LINV THEN            /* LIBRARY INVALID               */ 00739000
         CLI   ERRORCD,X'08'                                       0341 00740000
         BNE   @RF00341                                            0341 00741000
*     MSG9I3=CAUSELIB;              /* YES - SET ERROR CAUSE         */ 00742000
         MVC   MSG9I3(24),CAUSELIB                                 0342 00743000
*   ELSE                                                           0343 00744000
*     ;                                                            0343 00745000
*                                                                  0343 00746000
@RF00341 DS    0H                                                  0344 00747000
*   /*****************************************************************/ 00748000
*   /*                                                               */ 00749000
*   /* WAS THE VOLID MISSING OR INCORRECT FORMAT                     */ 00750000
*   /*                                                               */ 00751000
*   /*****************************************************************/ 00752000
*                                                                  0344 00753000
*   IF ERRORCD=VINV THEN            /* VOLID INVALID ?               */ 00754000
         CLI   ERRORCD,X'0C'                                       0344 00755000
         BNE   @RF00344                                            0344 00756000
*     MSG9I3=CAUSEVOL;              /* YES - SET ERROR CAUSE         */ 00757000
         MVC   MSG9I3(24),CAUSEVOL                                 0345 00758000
*   ELSE                                                           0346 00759000
*     ;                                                            0346 00760000
*                                                                  0346 00761000
@RF00344 DS    0H                                                  0347 00762000
*   /*****************************************************************/ 00763000
*   /*                                                               */ 00764000
*   /* WAS MAX APF TABLE SIZE OF 2040 BYTES EXCEEDED                 */ 00765000
*   /*                                                               */ 00766000
*   /*****************************************************************/ 00767000
*                                                                  0347 00768000
*   IF ERRORCD=STOR THEN            /* STOR UNAVAILABLE              */ 00769000
         CLI   ERRORCD,X'10'                                       0347 00770000
         BNE   @RF00347                                            0347 00771000
*     MSG9I3=CAUSESTR;              /* YES - SET ERROR CAUSE         */ 00772000
         MVC   MSG9I3(24),CAUSESTR                                 0348 00773000
*   ELSE                                                           0349 00774000
*     ;                                                            0349 00775000
@RF00347 DS    0H                                                  0350 00776000
*   MSG9I1=PLISTNAM;                /* PARMLIB LIST NAME             */ 00777000
         MVI   MSG9I1+8,C' '                                       0350 00778000
         MVC   MSG9I1(8),PLISTNAM                                  0350 00779000
*   MSG9I2=APF1;                    /* MOVE PARAMETER TO MESSAGE     */ 00780000
*                                                                  0351 00781000
         MVI   MSG9I2+3,C' '                                       0351 00782000
         MVC   MSG9I2+4(2),MSG9I2+3                                0351 00783000
         MVC   MSG9I2(3),APF1                                      0351 00784000
*   /*****************************************************************/ 00785000
*   /*                                                               */ 00786000
*   /* ISSUE MESSAGE IEA352I LIST LIS FOR PRM INVALID- CAUSE         */ 00787000
*   /*                                                               */ 00788000
*   /*****************************************************************/ 00789000
*                                                                  0352 00790000
*   GENERATE REFS(RNVT,NVTWTO,MSG9S,MSG9I1,MSG9I2) SETS(RPARM,REXIT,    00791000
*       RENTRY)(IEAPMNIP TYPE=WTO,PARAM=MSG9S);/* ISSUE WTO          */ 00792000
         IEAPMNIP TYPE=WTO,PARAM=MSG9S                                  00793000
*NPA5PRPT:                                                         0353 00794000
*                                                                  0353 00795000
*   /*****************************************************************/ 00796000
*   /*                                                               */ 00797000
*   /* ISSUE PROMPT TO RESPECIFY OR CANCEL THE APF PARAMETER         */ 00798000
*   /*                                                               */ 00799000
*   /*****************************************************************/ 00800000
*                                                                  0353 00801000
*   PASSPARM=APF1;                  /* PASS APF PARAM TO PROMPT      */ 00802000
NPA5PRPT MVI   PASSPARM+3,C' '                                     0353 00803000
         MVC   PASSPARM+4(4),PASSPARM+3                            0353 00804000
         MVC   PASSPARM(3),APF1                                    0353 00805000
*   GENERATE REFS(PASSPARM,NVTPRMPT,RNVT) SETS(RPARM,REXIT,RENTRY) 0354 00806000
*       (IEAPMNIP TYPE=PRMPT,PARAM=PASSPARM,OPT=ERROR);            0354 00807000
*                                                                  0354 00808000
         IEAPMNIP TYPE=PRMPT,PARAM=PASSPARM,OPT=ERROR                   00809000
*   /*****************************************************************/ 00810000
*   /*                                                               */ 00811000
*   /* DID OPERATOR CANCEL THE MESSAGE                               */ 00812000
*   /*                                                               */ 00813000
*   /*****************************************************************/ 00814000
*                                                                  0355 00815000
*   RESPECIFY                                                      0355 00816000
*    (NPTEPTR) RESTRICTED;                                         0355 00817000
*   RESPECIFY                                                      0356 00818000
*     NIPPTE BASED(NPTEPTR);                                       0356 00819000
*   NPTEPTR=ADDR(APF);              /* GET PARMTAB ENTRY FOR APF     */ 00820000
         L     NPTEPTR,NVTPTAB(,RNVT)                              0357 00821000
         LA    NPTEPTR,APF(,NPTEPTR)                               0357 00822000
*   IF NIPPTCAN='1'B THEN                                          0358 00823000
         TM    NIPPTCAN(NPTEPTR),B'00100000'                       0358 00824000
         BNO   @RF00358                                            0358 00825000
*     DO;                                                          0359 00826000
*       PRMERRC=CANCEL;             /* OPERATOR CANCELLED RC=4       */ 00827000
         MVI   PRMERRC,X'04'                                       0360 00828000
*       NPA5RTRY='0'B;              /* RESET RETRY-ONLY FLAG         */ 00829000
         NI    NPA5RTRY,B'11011111'                                0361 00830000
*       RETURN;                     /* RETURN TO CALLER              */ 00831000
@EL00005 DS    0H                                                  0362 00832000
@EF00005 DS    0H                                                  0362 00833000
@ER00005 LM    @14,@04,@SA00005                                    0362 00834000
         LM    @06,@12,@SA00005+28                                 0362 00835000
         BR    @14                                                 0362 00836000
*     END;                                                         0363 00837000
*   ELSE                                                           0364 00838000
*     ;                             /* RETRY WITH NEW PARAM          */ 00839000
@RF00358 DS    0H                                                  0365 00840000
*   PRMERRC=RETRY;                  /* SET RC TO 0                   */ 00841000
         MVI   PRMERRC,X'00'                                       0365 00842000
*   SCNPTR=NIPPTADR;                /* RESTORE PTR TO PARMT ENTRY    */ 00843000
         L     SCNPTR,NIPPTADR(,NPTEPTR)                           0366 00844000
*   NPA5RTRY='0'B;                  /* RESET RETRY-ONLY FLAG         */ 00845000
         NI    NPA5RTRY,B'11011111'                                0367 00846000
*   RESPECIFY                                                      0368 00847000
*    (NPTEPTR) UNRESTRICTED;                                       0368 00848000
*   RETURN;                         /* RETURN TO CALLER              */ 00849000
         B     @EL00005                                            0369 00850000
*   END NPA5ERTN;                   /* END SUBROUTINE              0370 00851000
*                                                                    */ 00852000
@PB00005 DS    0H                                                  0371 00853000
*   GENERATE NOREFS NOSETS(EJECT);                                 0371 00854000
         EJECT                                                          00855000
*NP5PSPIO:                                                         0372 00856000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/* DUMMY PROCEDURE               */ 00857000
         B     @PB00006                                            0372 00858000
NP5PSPIO DS    0H                                                  0373 00859000
*   RESPECIFY                                                      0373 00860000
*    (RNVT,                                                        0373 00861000
*     RCVT) RESTRICTED;                                            0373 00862000
*   RESPECIFY                                                      0374 00863000
*    (NIPPMR00,                                                    0374 00864000
*     NIPPMR14,                                                    0374 00865000
*     NIPPMR15) RESTRICTED;                                        0374 00866000
*                                                                  0374 00867000
*/********************************************************************/ 00868000
*/*                                                                  */ 00869000
*/* MACRO-      IEAPSPIO                                             */ 00870000
*/*                                                                  */ 00871000
*/* STATUS-     VERSION DATE=10/24/73, VS/2 RELEASE 2                */ 00872000
*/*                                                                  */ 00873000
*/* FUNCTION-   IEAPSPIO IS PART OF THE  SUPERVISOR                  */ 00874000
*/*             INITIALIZATION PROCESS FOR VS2.                      */ 00875000
*/*                                                                  */ 00876000
*/*             THIS MACRO GENERATES INLINE PL/S STATEMENTS          */ 00877000
*/*             WHICH FORM A SUBROUTINE TO FIND AND READ TEXT        */ 00878000
*/*             RECORDS FROM SYS1.PARMLIB.                           */ 00879000
*/*                                                                  */ 00880000
*/*  REGISTER DEPENDENCIES-                                          */ 00881000
*/*                                                                  */ 00882000
*/*                 1. IEAPSPIO DEPENDS ON THE INCLUDING ROUTINES    */ 00883000
*/*                    BASE REGISTERS FOR ADDRESSABILITY             */ 00884000
*/*                                                                  */ 00885000
*/*                 2. REGISTER 3 MUST CONTAIN THE ADDRESS OF        */ 00886000
*/*                    THE CVT ON ENTRY                              */ 00887000
*/*                                                                  */ 00888000
*/*                 3. REGISTER 2 MUST CONTAIN THE ADDRESS OF        */ 00889000
*/*                    THE NVT ON ENTRY                              */ 00890000
*/*                                                                  */ 00891000
*/*                 4. REGISTER 14 MUST CONTAIN THE ADDRESS OF       */ 00892000
*/*                    THE CALLERS RETURN POINT ON ENTRY             */ 00893000
*/*                                                                  */ 00894000
*/* ENTRY POINTS-                                                    */ 00895000
*/*                                                                  */ 00896000
*/*    TWO CALLING SEQUENCRS ARE AVAILABLE.  ONE PROVIDES            */ 00897000
*/*    COMPATIBILITY WITH THE VS2-1 VERSION OF THIS MACRO,           */ 00898000
*/*    THE OTHER CALLING SEQUENCE WAS DEVELOPED EXPRESSLY            */ 00899000
*/*    FOR VS2-2.                                                    */ 00900000
*/*                                                                  */ 00901000
*/*        VS2-1 COMPATIBLE VERSION-                                 */ 00902000
*/*                                                                  */ 00903000
*/*            1. CALL NIPPMPDS TO LOCATE (VIA BLDL) THE MEMBER      */ 00904000
*/*               OF SYS1.PARMLIB                                    */ 00905000
*/*                                                                  */ 00906000
*/*            2. CALL NIPPMTXT TO READ A TEXT RECORD FROM           */ 00907000
*/*               SYS1.PARMLIB                                       */ 00908000
*/*                                                                  */ 00909000
*/*        VS2-2 VERSION-                                            */ 00910000
*/*                                                                  */ 00911000
*/*            1. CALL NIPPMMEM TO LOCATE THE MEMBER AND RETURN      */ 00912000
*/*               A TEXT RECORD                                      */ 00913000
*/*                                                                  */ 00914000
*/*            2. REPEAT CALL TO NIPPMMEM TO READ ADDITIONAL         */ 00915000
*/*               TEXT RECORDS                                       */ 00916000
*/*                                                                  */ 00917000
*/* OUTPUT (NORMAL) -                                                */ 00918000
*/*                                                                  */ 00919000
*/*     THE ROUTINE WILL SAVE AND RESTORE ALL GENERAL REGISTERS      */ 00920000
*/*     WITH THE EXCEPTION OF RPARM.  ON A SUCCESSFUL READ,          */ 00921000
*/*     RPARM (REGISTER 1) WILL BE SET TO POINT TO THE FIRST NON-    */ 00922000
*/*     BLANK CHARACTER IN THE TEXT RECORD.  IF THE RECORD           */ 00923000
*/*     COLUMNS 1 THRU 72 ALL CONTAIN BLANKS, RPARM WILL             */ 00924000
*/*     POINT TO A BLANK IN COLUMN 72.  IF COLUMNS 1 THRU 71         */ 00925000
*/*     ARE BLANK BUT COLUMN 72 IS NON-BLANK, THE ROUTINE            */ 00926000
*/*     WILL AUTOMATICALLY ATTEMPT TO READ THE NEXT RECORD.  IN      */ 00927000
*/*     ALL CASES, COLUMN 72 WILL BE SET TO BLANK AND COLUMN 73 WILL */ 00928000
*/*     BE SET TO X'FF'.                                             */ 00929000
*/*                                                                  */ 00930000
*/* EXIT (NORMAL)-                                                   */ 00931000
*/*                                                                  */ 00932000
*/*     VS2-1 AND VS2-2 VERSIONS RETURN TO THE ADDRESS FOUND         */ 00933000
*/*     IN REGISTER 14 ON ENTRY.                                     */ 00934000
*/*                                                                  */ 00935000
*/* EXIT (ERROR)-                                                    */ 00936000
*/*                                                                  */ 00937000
*/*     VS2-1 COMPATIBLE VERSION-                                    */ 00938000
*/*                                                                  */ 00939000
*/*         RETURN TO THE ADDRESS IN REGISTER 14 +4                  */ 00940000
*/*                                                                  */ 00941000
*/*         NOTE- WHEN AN ERROR OCCURS ON AN ATTEMP TO READ A RECORD */ 00942000
*/*               THAT DOES NOT EXIST (E-O-F),                       */ 00943000
*/*               IT IS CONSIDERED A PERMANENT I/O ERROR             */ 00944000
*/*                                                                  */ 00945000
*/*     VS2-2 VERSION-                                               */ 00946000
*/*                                                                  */ 00947000
*/*        RETURN TO THE ADDRESS FOUND IN REGISTER 14 ON ENTRY       */ 00948000
*/*        WITH REGISTER 1 (RPARM) SET TO A NEGATIVE VALUE.  IN THE  */ 00949000
*/*        CASE WHERE RPARM IS NEGATIVE ON RETURN, THE NIPPARC FIELD */ 00950000
*/*        OF THE NIP PATAMETER AREA WILL INDICATE THE REASON FOR    */ 00951000
*/*        FAILURE AS FOLLOWS-                                       */ 00952000
*/*                            4 - MEMBER NOT FOUND                  */ 00953000
*/*                            8 - I/O ERROR DURING BLDL             */ 00954000
*/*                            12- I/O ERROR DURING READ             */ 00955000
*/*                            16- END-OF-FILE                       */ 00956000
*/*                                                                  */ 00957000
*/*     COMMON TO BOTH VERSIONS-                                     */ 00958000
*/*                                                                  */ 00959000
*/*        AN INTERPRETIVE MESSAGE WILL BE WRITTEN TO THE OPERATOR   */ 00960000
*/*        FOR EACH OF THE FIRST THREE ERROR CONDITIONS LISTED       */ 00961000
*/*        ABOVE.  THE CALLER MAY SUPPRESS THE 'MEMBER NOT FOUND'    */ 00962000
*/*        MESSAGE BY SETTING THE NIPPAFL1 FLAG FIELD TO BINARY      */ 00963000
*/*        ONE IN THE NIP PARAMETER AREA BEFORE CALLING THIS         */ 00964000
*/*        ROUTINE.  NO MESSAGE WILL BE WRITTEN FOR THE E-O-F        */ 00965000
*/*        CONDITION IF THE VS2-2 VERSION IS USED.                   */ 00966000
*/*                                                                  */ 00967000
*/* MACROS-                                                          */ 00968000
*/*     THE FOLLOWING MAPPING MACROS MUST BE                         */ 00969000
*/*     INCLUDED IN THE MODULE WHICH INCLUDES                        */ 00970000
*/*     IEAPSPIO-                                                    */ 00971000
*/*                                       IEZIOB                     */ 00972000
*/*                                       IHANVT                     */ 00973000
*/*                                       IHAECB                     */ 00974000
*/*                                       IEAPPNIP                   */ 00975000
*/*                                       IEFUCBOB                   */ 00976000
*/*                                       CVT                        */ 00977000
*/*                                                                  */ 00978000
*/* NOTES-                                                           */ 00979000
*/*        THE FIRST FOUR LETTERS OF ALL IEAPSPIO SYMBOLES ARE:      */ 00980000
*/*        NIPP OR IPPM.                                             */ 00981000
*/*                                                                  */ 00982000
*/*        REGISTERS 0, 1, 14, AND 15 WILL BE UNRESTRICTED AT THE    */ 00983000
*/*        END OF THE SEGMENT GENERATED BY IEAPSPIO.                 */ 00984000
*/*                                                                  */ 00985000
*/*        NIPPAREA WILL BE BASED ON NVTPAREA AND IOBSTDRD WILL BE   */ 00986000
*/*        BASED ON THE ADDR OF NIPPAIOB AT THE END OF THE SEGMENT   */ 00987000
*/*        GENERATED BY IEAPSPIO                                     */ 00988000
*/*                                                                  */ 00989000
*/*        IEAPSPIO MUST BE INCLUDED IN A CODE SEGMENT,              */ 00990000
*/*        NOT AT THE TOP OF THE PROCEDURE WITH THE                  */ 00991000
*/*        MAPPING MACROS LISTED ABOVE.                              */ 00992000
*/*                                                            Y02752*/ 00993000
*/********************************************************************/ 00994000
*                                                                  0375 00995000
*   /*****************************************************************/ 00996000
*   /*                                                               */ 00997000
*   /* REGISTERS                                                     */ 00998000
*   /*                                                               */ 00999000
*   /*****************************************************************/ 01000000
*                                                                  0375 01001000
*   DCL                                                            0375 01002000
*     NIPPMR00 REG(0) PTR(24);                                     0375 01003000
*   DCL                                                            0376 01004000
*     NIPPMR01 REG(1) PTR(24);                                     0376 01005000
*   DCL                                                            0377 01006000
*     NIPPMR02 REG(2) PTR(24);                                     0377 01007000
*   DCL                                                            0378 01008000
*     NIPPMR06 REG(6) PTR(24);                                     0378 01009000
*   DCL                                                            0379 01010000
*     NIPPMR09 REG(9) PTR(24);                                     0379 01011000
*   DCL                                                            0380 01012000
*     NIPPMR12 REG(12) PTR(24);                                    0380 01013000
*   DCL                                                            0381 01014000
*     NIPPMR13 REG(13) PTR(24);                                    0381 01015000
*   DCL                                                            0382 01016000
*     NIPPMR14 REG(14) PTR(24);                                    0382 01017000
*   DCL                                                            0383 01018000
*     NIPPMR15 REG(15) PTR(24);                                    0383 01019000
*                                                                  0383 01020000
*   /*****************************************************************/ 01021000
*   /*                                                               */ 01022000
*   /* SAVE AREA FOR CALLER'S REGISTERS                              */ 01023000
*   /*                                                               */ 01024000
*   /*****************************************************************/ 01025000
*                                                                  0384 01026000
*   DCL                                                            0384 01027000
*     NIPPMREG(16) FIXED(31);                                      0384 01028000
*                                                                  0384 01029000
*   /*****************************************************************/ 01030000
*   /*                                                               */ 01031000
*   /* SAVE AREA FOR CALLER'S RETURN ADDRESS                         */ 01032000
*   /*                                                               */ 01033000
*   /*****************************************************************/ 01034000
*                                                                  0385 01035000
*   DCL                                                            0385 01036000
*     NIPPMADR PTR(31);                                            0385 01037000
*                                                                  0385 01038000
*   /*****************************************************************/ 01039000
*   /*                                                               */ 01040000
*   /* POINTER TO DCB FOR BLDL                                       */ 01041000
*   /*                                                               */ 01042000
*   /*****************************************************************/ 01043000
*                                                                  0386 01044000
*   DCL                                                            0386 01045000
*     NIPPMDCB PTR(31);                                            0386 01046000
*                                                                  0386 01047000
*   /*****************************************************************/ 01048000
*   /*                                                               */ 01049000
*   /* POINTER TO BLDL HEADER FOR BLDL                               */ 01050000
*   /*                                                               */ 01051000
*   /*****************************************************************/ 01052000
*                                                                  0387 01053000
*   DCL                                                            0387 01054000
*     NIPPMBDL PTR(31);                                            0387 01055000
*                                                                  0387 01056000
*   /*****************************************************************/ 01057000
*   /*                                                               */ 01058000
*   /* NORMAL RETURN TO CALLER                                       */ 01059000
*   /*                                                               */ 01060000
*   /*****************************************************************/ 01061000
*                                                                  0388 01062000
*   DCL                                                            0388 01063000
*     NIPPMAD0 LABEL BASED(NIPPMADR);                              0388 01064000
*                                                                  0388 01065000
*   /*****************************************************************/ 01066000
*   /*                                                               */ 01067000
*   /* ERROR RETURN TO CALLER                                        */ 01068000
*   /*                                                               */ 01069000
*   /*****************************************************************/ 01070000
*                                                                  0389 01071000
*   DCL                                                            0389 01072000
*     NIPPMAD4 LABEL BASED(NIPPMADR+4);                            0389 01073000
*                                                                  0389 01074000
*   /*****************************************************************/ 01075000
*   /*                                                               */ 01076000
*   /* ESTABLISH BASE FOR NIP COMMUNICATION AREA               Y02752*/ 01077000
*   /*                                                               */ 01078000
*   /*****************************************************************/ 01079000
*                                                                  0390 01080000
*   RESPECIFY                                                      0390 01081000
*     NIPPAREA BASED(NVTPAREA);     /*                         Y02752*/ 01082000
*                                                                  0390 01083000
*   /*****************************************************************/ 01084000
*   /*                                                               */ 01085000
*   /* ONE BYTE SCANNING FIELD                                       */ 01086000
*   /*                                                               */ 01087000
*   /*****************************************************************/ 01088000
*                                                                  0391 01089000
*   DCL                                                            0391 01090000
*     NIPPMBYT CHAR(1) BASED;                                      0391 01091000
*                                                                  0391 01092000
*   /*****************************************************************/ 01093000
*   /*                                                               */ 01094000
*   /* TEMPORARY POINTER                                       Y02752*/ 01095000
*   /*                                                               */ 01096000
*   /*****************************************************************/ 01097000
*                                                                  0392 01098000
*   DCL                                                            0392 01099000
*     NIPPMKPR PTR(31);             /*                         Y02752*/ 01100000
*                                                                  0392 01101000
*   /*****************************************************************/ 01102000
*   /*                                                               */ 01103000
*   /* INPUT RECORD READ FROM PARMLIB                          Y02752*/ 01104000
*   /*                                                               */ 01105000
*   /*****************************************************************/ 01106000
*                                                                  0393 01107000
*   DCL                                                            0393 01108000
*     NIPPMBUF CHAR(80) BASED(NIPPMR01);/*                     Y02752*/ 01109000
*                                                                  0393 01110000
*   /*****************************************************************/ 01111000
*   /*                                                               */ 01112000
*   /* MBBCCHHR OF PARMLIB MEMBERS                                   */ 01113000
*   /*                                                               */ 01114000
*   /*****************************************************************/ 01115000
*                                                                  0394 01116000
*   DCL                                                            0394 01117000
*     1 NIPPMMBC CHAR(8),                                          0394 01118000
*      2 NIPPMMBB CHAR(3),                                         0394 01119000
*      2 NIPPMCCH CHAR(5);                                         0394 01120000
*                                                                  0394 01121000
*   /*****************************************************************/ 01122000
*   /*                                                               */ 01123000
*   /* LOW ORDER 7 BYTES OF THE CSW STORED IN THE PARMLIB IOB BY EXCP*/ 01124000
*   /*                                                         Y02752*/ 01125000
*   /*                                                               */ 01126000
*   /*****************************************************************/ 01127000
*                                                                  0395 01128000
*   DCL                                                            0395 01129000
*     1 NIPPMCSW BASED(ADDR(IOBCSW)) BDY(BYTE),/*              Y02752*/ 01130000
*      2 * CHAR(3),                 /*                         Y02752*/ 01131000
*      2 NIPPMCS2 BIT(8),           /* I/O OPERATION STATUS FLAGS /*    01132000
*                                                              Y02752*/ 01133000
*      2 * CHAR(3);                 /*                         Y02752*/ 01134000
*                                                                  0395 01135000
*   /*****************************************************************/ 01136000
*   /*                                                               */ 01137000
*   /* MASK TO TEST THE STATUS FLAGS OF THE PARMLIB CSW        Y02752*/ 01138000
*   /*                                                               */ 01139000
*   /*****************************************************************/ 01140000
*                                                                  0396 01141000
*   DCL                                                            0396 01142000
*     NIPPMMK1 BIT(8) BDY(BYTE) INIT('11110010'B);/*           Y02752*/ 01143000
*                                                                  0396 01144000
*   /*****************************************************************/ 01145000
*   /*                                                               */ 01146000
*   /* INTERNALLY GENERATED LABELS                                   */ 01147000
*   /*                                                               */ 01148000
*   /*****************************************************************/ 01149000
*                                                                  0397 01150000
*   DCL                                                            0397 01151000
*     NIPPMMB1 LABEL GENERATED INTERNAL;                           0397 01152000
*   DCL                                                            0398 01153000
*     NIPPMMB2 LABEL GENERATED INTERNAL;                           0398 01154000
*   DCL                                                            0399 01155000
*     NIPPMTND LABEL GENERATED INTERNAL;                           0399 01156000
*                                                                  0399 01157000
*   /*****************************************************************/ 01158000
*   /*                                                               */ 01159000
*   /* MAPPING AREAS INTO ERROR MESSAGES                             */ 01160000
*   /*                                                               */ 01161000
*   /*****************************************************************/ 01162000
*                                                                  0400 01163000
*   DCL                                                            0400 01164000
*     NIPPMME1 CHAR(8) BASED(ADDR(NIPPMMB1));                      0400 01165000
*   DCL                                                            0401 01166000
*     NIPPMME2 CHAR(8) BASED(ADDR(NIPPMMB2));                      0401 01167000
*   DCL                                                            0402 01168000
*     NIPPMNAM CHAR(8) INIT(' ');   /* MEMBER NAME SAVE AREA   Y02752*/ 01169000
*   DCL                                                            0403 01170000
*     NIPPMNEG FIXED(31) INIT('FFFFFFFF'X);/* NEGATIVE VALUE   Y02752*/ 01171000
*   RESPECIFY                                                      0404 01172000
*     IOBSTDRD BASED(ADDR(NIPPAIOB));/* IOB BASE               Y02752*/ 01173000
*   RESPECIFY                                                      0405 01174000
*    (NIPPMR14,                                                    0405 01175000
*     NIPPMR15,                                                    0405 01176000
*     NIPPMR00,                                                    0405 01177000
*     NIPPMR01) RESTRICTED;         /*                         Y02752*/ 01178000
*NIPPMMEM:                                                         0406 01179000
*   NIPPMADR=NIPPMR14;              /* SAVE CALLER'S RETURN REGISTER    01180000
*                                                              Y02752*/ 01181000
NIPPMMEM ST    NIPPMR14,NIPPMADR                                   0406 01182000
*   GENERATE REFS(NIPPMR01,NIPPMR02) SETS(NIPPMREG);               0407 01183000
          STM   NIPPMR02,NIPPMR01,NIPPMREG   SAVE REGISTERS     Y02752  01184000
*   NIPPARC=NIPPARC&&NIPPARC;       /* SET RETURN CODE TO ZERO Y02752*/ 01185000
         L     @12,NVTPAREA(,RNVT)                                 0408 01186000
         L     @11,NIPPARC(,@12)                                   0408 01187000
         LR    @07,@11                                             0408 01188000
         XR    @07,@11                                             0408 01189000
         ST    @07,NIPPARC(,@12)                                   0408 01190000
*   IF NIPPMNAM=NIPPANAM            /* IS THIS NEW MEMBER NAME Y02752*/ 01191000
*     THEN                                                         0409 01192000
         CLC   NIPPMNAM(8),NIPPANAM(@12)                           0409 01193000
         BE    @RT00409                                            0409 01194000
*     GO TO NIPPMPRD;               /* NO- GO READ RECORD      Y02752*/ 01195000
*   NIPPMNAM=NIPPANAM;              /* YES- SAVE MEMBER NAME   Y02752*/ 01196000
         MVC   NIPPMNAM(8),NIPPANAM(@12)                           0411 01197000
*   GO TO NIPPMENT;                 /* GO FIND MEMBER          Y02752*/ 01198000
         B     NIPPMENT                                            0412 01199000
*NIPPMPDS:                                                         0413 01200000
*   NIPPMADR=NIPPMR14;              /* SAVE CALLER'S RETURN ADDR     */ 01201000
NIPPMPDS ST    NIPPMR14,NIPPMADR                                   0413 01202000
*   GENERATE REFS(NIPPMR01,NIPPMR02) SETS(NIPPMREG);               0414 01203000
         STM   NIPPMR02,NIPPMR01,NIPPMREG       SAVE REGS       Y02752  01204000
*   NIPPMNAM=NIPPMNAM&&NIPPMNAM;    /* CLEAR MEMBER NAME       Y02752*/ 01205000
         XC    NIPPMNAM(8),NIPPMNAM                                0415 01206000
*NIPPMENT:                                                         0416 01207000
*   NIPPMR01=ADDR(NIPPADCB)-44;     /* R1= ADDR OF DCB               */ 01208000
NIPPMENT L     @12,NVTPAREA(,RNVT)                                 0416 01209000
         LA    NIPPMR01,NIPPADCB(,@12)                             0416 01210000
         SH    NIPPMR01,@CH00137                                   0416 01211000
*   NIPPMR00=ADDR(NIPPABDL);        /* R0= ADDR OF BLDL LIST         */ 01212000
*                                                                  0417 01213000
         LA    NIPPMR00,NIPPABDL(,@12)                             0417 01214000
*   /*****************************************************************/ 01215000
*   /*                                                               */ 01216000
*   /* READ PDS ENTRY FOR MEMBER                                     */ 01217000
*   /*                                                               */ 01218000
*   /*****************************************************************/ 01219000
*                                                                  0418 01220000
*   GENERATE;                                                      0418 01221000
          BLDL (1),(0)                                                  01222000
*   NIPPARC=NIPPMR15;               /* SET RETURN CODE         Y02752*/ 01223000
         L     @12,NVTPAREA(,RNVT)                                 0419 01224000
         ST    NIPPMR15,NIPPARC(,@12)                              0419 01225000
*   IF NIPPMR15=4                   /* WAS MEMBER NAME FOUND   Y02752*/ 01226000
*     THEN                                                         0420 01227000
         CH    NIPPMR15,@CH00185                                   0420 01228000
         BE    @RT00420                                            0420 01229000
*     GO TO NIPPMPFN;               /* NO - TELL OPERATOR NOT FOUND  */ 01230000
*   IF NIPPMR15=8                   /* WAS THERE AN I/O ERROR        */ 01231000
*     THEN                                                         0422 01232000
         CH    NIPPMR15,@CH00040                                   0422 01233000
         BE    @RT00422                                            0422 01234000
*     GO TO NIPPMPER;               /* YES - TELL OPERATOR I/O ERROR */ 01235000
*                                                                  0423 01236000
*   /*****************************************************************/ 01237000
*   /*                                                               */ 01238000
*   /* SET UP PARAMETERS FOR CONVERSION ROUTINE                      */ 01239000
*   /*                                                               */ 01240000
*   /*****************************************************************/ 01241000
*                                                                  0424 01242000
*   NIPPMR00=NIPPATTR;              /* R0 = ACTUAL TTR               */ 01243000
         SLR   NIPPMR00,NIPPMR00                                   0424 01244000
         ICM   NIPPMR00,7,NIPPATTR(@12)                            0424 01245000
*   GENERATE;                                                      0425 01246000
         SLL   0,8(0)                    ZERO LOW BYTE IN REG 0         01247000
*   NIPPMR01=ADDR(NIPPADEB);        /* R1 = ADDR OF DEB              */ 01248000
         L     NIPPMR01,NVTPAREA(,RNVT)                            0426 01249000
         LA    NIPPMR01,NIPPADEB(,NIPPMR01)                        0426 01250000
*   NIPPMR15=CVTPCNVT;              /* R15 = ADDR OF CONVERSION    0427 01251000
*                                      ROUTINE                 Y02752*/ 01252000
*                                                                  0427 01253000
         L     NIPPMR15,CVTPCNVT(,CVTPTR)                          0427 01254000
*   /*****************************************************************/ 01255000
*   /*                                                               */ 01256000
*   /* CONVERT TTR TO CCHHR FORMAT                             Y02752*/ 01257000
*   /*                                                               */ 01258000
*   /*****************************************************************/ 01259000
*                                                                  0428 01260000
*   GENERATE REFS(NIPPMR02,NIPPMR13) SETS(NIPPMR14,NIPPMR15,NIPPMMBC);  01261000
*                                                          /*           01262000
         STM   NIPPMR02,NIPPMR13,NIPPMSAV SAVE REGISTERS        Y02752  01263000
         LA    NIPPMR02,NIPPMMBC          CONVERSION AREA       Y02752  01264000
         BALR  NIPPMR14,NIPPMR15          CALL CONVERT RTN      Y02752  01265000
**         RESTORE CSECT AND DSECT BASE REGISTERS               Y02752  01266000
*NIPPMRST  DS  0H                                               Y02752  01267000
NIPPMRST LM    NIPPMR02,NIPPMR13,NIPPMSAV-NIPPMRST(NIPPMR14)    Y02752  01268000
         BC    15,NIPPMSKP                SKIP SAVE AREA        Y02752  01269000
*NIPPMSAV  DS  0F                                               Y02752  01270000
NIPPMSAV DC    12F'0'                     DECLARE REG SAVE AREA Y02752  01271000
*NIPPMSKP DS  0H                                                Y02752  01272000
NIPPMSKP DS    0H                         RESUME EXECUTION      Y02752  01273000
*   IOBSEEK=NIPPMMBC;               /* RESET PARMLIB IOBSEEK TO THIS    01274000
*                                      MBBCCHHR                      */ 01275000
         L     @12,NVTPAREA(,RNVT)                                 0429 01276000
         LA    @11,NIPPAIOB(,@12)                                  0429 01277000
         MVC   IOBSEEK(8,@11),NIPPMMBC                             0429 01278000
*   NIPPASID=NIPPMCCH;              /* RESET PARMLIB SEARCH ID TO  0430 01279000
*                                      THIS CCHHR                    */ 01280000
         MVC   NIPPASID(5,@12),NIPPMCCH                            0430 01281000
*   IF NIPPMNAM=NIPPANAM            /* SEE IF MEM NAMES MATCH  Y02752*/ 01282000
*     THEN                                                         0431 01283000
         CLC   NIPPMNAM(8),NIPPANAM(@12)                           0431 01284000
         BE    @RT00431                                            0431 01285000
*     GO TO NIPPMPRD;               /* YES- NEW VERSION- GO READ   0432 01286000
*                                                              Y02752*/ 01287000
*   GENERATE REFS(NIPPMR01,NIPPMR02) SETS(NIPPMREG);               0433 01288000
          LM    NIPPMR02,NIPPMR01,NIPPMREG    RESTORE REGS      Y02752  01289000
*   GO TO NIPPMAD0;                 /* NORMAL RETURN TO CALLER Y02752*/ 01290000
         L     @12,NIPPMADR                                        0434 01291000
         BR    @12                                                 0434 01292000
*NIPPMPER:                                                         0435 01293000
*   NIPPMME1=NIPPANAM;              /* MOVE MEMBER NAME TO I/O ERROR    01294000
*                                      MESSAGE                       */ 01295000
*                                                                  0435 01296000
NIPPMPER LA    @12,NIPPMMB1                                        0435 01297000
         L     @11,NVTPAREA(,RNVT)                                 0435 01298000
         MVC   NIPPMME1(8,@12),NIPPANAM(@11)                       0435 01299000
*   /*****************************************************************/ 01300000
*   /*                                                               */ 01301000
*   /* WTO I/O ERROR DURING BLDL MESSAGE                             */ 01302000
*   /*                                                               */ 01303000
*   /*****************************************************************/ 01304000
*                                                                  0436 01305000
*   GENERATE REFS(NVTWTO) SETS(RPARM,REXIT,RENTRY);                0436 01306000
          IEAPMNIP TYPE=WTO,PARAM=NIPPMMS1 CALL WTO SERVICE ROUTINE     01307000
*   GO TO NIPPMPXT;                 /* ERROR RETURN TO CALLER        */ 01308000
         B     NIPPMPXT                                            0437 01309000
*NIPPMPFN:                                                         0438 01310000
*   IF NIPPMNAM=NIPPANAM            /* SEE IF MEMBER NAMES MATCH   0438 01311000
*                                                              Y02752*/ 01312000
*     THEN                                                         0438 01313000
NIPPMPFN L     @12,NVTPAREA(,RNVT)                                 0438 01314000
         CLC   NIPPMNAM(8),NIPPANAM(@12)                           0438 01315000
         BNE   @RF00438                                            0438 01316000
*     IF NIPPAFL1='1'B              /* YES- SUPPRESS MESSAGE?  Y02752*/ 01317000
*       THEN                                                       0439 01318000
         TM    NIPPAFL1(@12),B'10000000'                           0439 01319000
         BO    @RT00439                                            0439 01320000
*       GO TO NIPPMPXT;             /* YES- GO EXIT TO CALLER  Y02752*/ 01321000
*     ELSE                                                         0441 01322000
*       ;                           /*                         Y02752*/ 01323000
*   NIPPMME2=NIPPANAM;              /* MOVE MEMBER NAME TO NOT FOUND    01324000
*                                      MESSAGE                 Y02752*/ 01325000
*                                                                  0442 01326000
@RF00438 LA    @12,NIPPMMB2                                        0442 01327000
         L     @11,NVTPAREA(,RNVT)                                 0442 01328000
         MVC   NIPPMME2(8,@12),NIPPANAM(@11)                       0442 01329000
*   /*****************************************************************/ 01330000
*   /*                                                               */ 01331000
*   /* WTO MEMBER NOT FOUND IN DATA SET MESSAGE                      */ 01332000
*   /*                                                               */ 01333000
*   /*****************************************************************/ 01334000
*                                                                  0443 01335000
*   GENERATE REFS(NVTWTO) SETS(RPARM,REXIT,RENTRY);                0443 01336000
          IEAPMNIP TYPE=WTO,PARAM=NIPPMMS2 CALL WTO SERVICE ROUTINE     01337000
*NIPPMPXT:                                                         0444 01338000
*   IF NIPPMNAM=NIPPANAM            /* SEE IF NAMES MATCH      Y02752*/ 01339000
*     THEN                                                         0444 01340000
NIPPMPXT L     @12,NVTPAREA(,RNVT)                                 0444 01341000
         CLC   NIPPMNAM(8),NIPPANAM(@12)                           0444 01342000
         BNE   @RF00444                                            0444 01343000
*     DO;                                                          0445 01344000
*       NIPPMNAM=NIPPMNAM&&NIPPMNAM;/* FORCE NEW NAME PATH ON NEXT 0446 01345000
*                                      ENTRY                   Y02752*/ 01346000
         XC    NIPPMNAM(8),NIPPMNAM                                0446 01347000
*       NIPPMR01=NIPPMNEG;          /* SET NEGATIVE VALUE RC   Y02752*/ 01348000
         L     NIPPMR01,NIPPMNEG                                   0447 01349000
*       GENERATE SETS(NIPPMR02,NIPPMR00) REFS(NIPPMREG);           0448 01350000
          LM    NIPPMR02,NIPPMR00,NIPPMREG    RESTORE REGS      Y02752  01351000
*       GO TO NIPPMAD0;             /* EXIT TO CALLER          Y02752*/ 01352000
         L     @12,NIPPMADR                                        0449 01353000
         BR    @12                                                 0449 01354000
*     END;                          /*                         Y02752*/ 01355000
*   GENERATE SETS(NIPPMR02,NIPPMR01) REFS(NIPPMREG);               0451 01356000
@RF00444 DS    0H                                                  0451 01357000
*                                                           /* Y02752*/ 01358000
         LM    NIPPMR02,NIPPMR01,NIPPMREG     RESTORE REGS      Y02752  01359000
*   GO TO NIPPMAD4;                 /* READ ERROR - RETURN TO CALLER    01360000
*                                                                    */ 01361000
         L     @12,NIPPMADR                                        0452 01362000
         LA    @12,NIPPMAD4+4(,@12)                                0452 01363000
         BR    @12                                                 0452 01364000
*                                                                  0453 01365000
*   /*****************************************************************/ 01366000
*   /*                                                               */ 01367000
*   /* ROUTINE TO READ PARMLIB TEXT                                  */ 01368000
*   /*                                                               */ 01369000
*   /*****************************************************************/ 01370000
*                                                                  0453 01371000
*NIPPMTXT:                                                         0453 01372000
*   NIPPMADR=NIPPMR14;              /* SAVE CALLER'S RETURN ADDRESS  */ 01373000
NIPPMTXT ST    NIPPMR14,NIPPMADR                                   0453 01374000
*   GENERATE REFS(NIPPMR02,NIPPMR01) SETS(NIPPMREG);               0454 01375000
         STM   NIPPMR02,NIPPMR01,NIPPMREG   SAVE CALLERS REGS           01376000
*NIPPMPRD:                                                         0455 01377000
*   NIPPAECB=NIPPAECB&&NIPPAECB;    /* ZERO WAIT ECB                 */ 01378000
NIPPMPRD L     @12,NVTPAREA(,RNVT)                                 0455 01379000
         XC    NIPPAECB(4,@12),NIPPAECB(@12)                       0455 01380000
*   IOBSEEK(4:7)=NIPPASID;          /* FILL IN CCHH IN IOB           */ 01381000
*                                                                  0456 01382000
         LA    @11,NIPPAIOB(,@12)                                  0456 01383000
         MVC   IOBSEEK+3(4,@11),NIPPASID(@12)                      0456 01384000
*   /*****************************************************************/ 01385000
*   /*                                                               */ 01386000
*   /* REINITIALIZE IOB FLAGS                                        */ 01387000
*   /*                                                               */ 01388000
*   /*****************************************************************/ 01389000
*                                                                  0457 01390000
*   IOBFLAG1='42'X;                                                0457 01391000
         MVI   IOBFLAG1(@11),X'42'                                 0457 01392000
*   IOBFLAG2='00'X;                                                0458 01393000
         MVI   IOBFLAG2(@11),X'00'                                 0458 01394000
*   IOBFLAG3='00'X;                                                0459 01395000
         MVI   IOBFLAG3(@11),X'00'                                 0459 01396000
*   IOBERRCT='0000'X;                                              0460 01397000
         SLR   @12,@12                                             0460 01398000
         STH   @12,IOBERRCT(,@11)                                  0460 01399000
*   IOBCSW='00000000000000'X;                                      0461 01400000
         MVC   IOBCSW(7,@11),@CB02161                              0461 01401000
*   IOBSENS0='00'X;                                                0462 01402000
         MVI   IOBSENS0(@11),X'00'                                 0462 01403000
*   IOBSENS1='00'X;                                                0463 01404000
*                                                                  0463 01405000
         MVI   IOBSENS1(@11),X'00'                                 0463 01406000
*   /*****************************************************************/ 01407000
*   /*                                                               */ 01408000
*   /* READ PARMLIB TEXT RECORD                                      */ 01409000
*   /*                                                               */ 01410000
*   /*****************************************************************/ 01411000
*                                                                  0464 01412000
*   NIPPMR01=ADDR(NIPPAIOB);                                       0464 01413000
         LR    NIPPMR01,@11                                        0464 01414000
*   GENERATE;                                                      0465 01415000
          EXCP  (1)                 READ TEXT                           01416000
*   NIPPMR01=ADDR(NIPPAECB);                                       0466 01417000
         L     NIPPMR01,NVTPAREA(,RNVT)                            0466 01418000
         LA    NIPPMR01,NIPPAECB(,NIPPMR01)                        0466 01419000
*   GENERATE;                                                      0467 01420000
*                                                                  0467 01421000
          WAIT  ECB=(1)                  AWAIT I/O COMPLETION           01422000
*   /*****************************************************************/ 01423000
*   /*                                                               */ 01424000
*   /* TEST FOR I/O ERROR AFTER PARMLIB READ                   Y02752*/ 01425000
*   /*                                                               */ 01426000
*   /*****************************************************************/ 01427000
*                                                                  0468 01428000
*   IF NIPPAECC¬='7F'X              /* SKIP IF READ SUCCESSFUL Y02752*/ 01429000
*     THEN                                                         0468 01430000
         L     @12,NVTPAREA(,RNVT)                                 0468 01431000
         CLI   NIPPAECC(@12),X'7F'                                 0468 01432000
         BE    @RF00468                                            0468 01433000
*     DO;                                                          0469 01434000
*       IF NIPPMNAM=NIPPANAM        /* SEE IF MEMBER NAMES MATCH   0470 01435000
*                                                              Y02752*/ 01436000
*         THEN                                                     0470 01437000
         CLC   NIPPMNAM(8),NIPPANAM(@12)                           0470 01438000
         BNE   @RF00470                                            0470 01439000
*         DO;                                                      0471 01440000
*                                                                  0471 01441000
*           /*********************************************************/ 01442000
*           /*                                                       */ 01443000
*           /* DOES THE I/O ERROR REPRESENT EOF                Y02752*/ 01444000
*           /*                                                       */ 01445000
*           /*********************************************************/ 01446000
*                                                                  0472 01447000
*           IF NIPPAECC='41'X&      /* IOBCSW FIELD VALID?           */ 01448000
*                                                                  0472 01449000
*           /*********************************************************/ 01450000
*           /*                                                       */ 01451000
*           /* FALL THROUGH IF UNIT EXCEPTION, CHANNEL END AND DEVICE*/ 01452000
*           /* END FLAGS ARE ON IN THE IOBCSW                        */ 01453000
*           /*                                                       */ 01454000
*           /*********************************************************/ 01455000
*                                                                  0472 01456000
*               (NIPPMCS2|NIPPMMK1)='FF'X THEN                     0472 01457000
         CLI   NIPPAECC(@12),X'41'                                 0472 01458000
         BNE   @RF00472                                            0472 01459000
         LA    @11,NIPPAIOB(,@12)                                  0472 01460000
         LA    @11,IOBCSW(,@11)                                    0472 01461000
         MVC   @TS00001(1),NIPPMCS2(@11)                           0472 01462000
         OC    @TS00001(1),NIPPMMK1                                0472 01463000
         CLI   @TS00001,X'FF'                                      0472 01464000
         BNE   @RF00472                                            0472 01465000
*             DO;                                                  0473 01466000
*               NIPPARC=16;         /* INDICATE EOF CONDITION  Y02752*/ 01467000
         MVC   NIPPARC(4,@12),@CF00324                             0474 01468000
*               GOTO NIPPMPXT;      /* RETURN TO CALLER        Y02752*/ 01469000
         B     NIPPMPXT                                            0475 01470000
*             END;                  /*                         Y02752*/ 01471000
*         END;                      /*                         Y02752*/ 01472000
*       GOTO NIPPMTER;              /* INDICATE I/O ERROR      Y02752*/ 01473000
         B     NIPPMTER                                            0478 01474000
*     END;                          /*                         Y02752*/ 01475000
*   RESPECIFY                                                      0480 01476000
*     NIPPMBYT BASED(NIPPMR01);                                    0480 01477000
@RF00468 DS    0H                                                  0481 01478000
*   NIPPMR01=ADDR(NIPPARCD);        /* R1 = ADDR OF TEXT RECORD READ    01479000
*                                      IN                            */ 01480000
*                                                                  0481 01481000
         L     NIPPMR01,NVTPAREA(,RNVT)                            0481 01482000
         LA    NIPPMR01,NIPPARCD(,NIPPMR01)                        0481 01483000
*   /*****************************************************************/ 01484000
*   /*                                                               */ 01485000
*   /* SCAN THROUGH LEADING BLANK CHARACTERS                         */ 01486000
*   /*                                                               */ 01487000
*   /*****************************************************************/ 01488000
*                                                                  0482 01489000
*   NIPPMBUF(73:73)='FF'X;          /* PLACE 'FF'X IN COL 73         */ 01490000
         MVI   NIPPMBUF+72(NIPPMR01),X'FF'                         0482 01491000
*   NIPPMKPR=1;                     /* COUNT STARTS AT ONE           */ 01492000
         MVC   NIPPMKPR(4),@CF00034                                0483 01493000
*NIPPMPBK:                                                         0484 01494000
*   IF NIPPMBYT=' '                 /* IS THIS CHAR BLANK            */ 01495000
*     THEN                          /* YES - CHECK NEXT CHAR         */ 01496000
NIPPMPBK CLI   NIPPMBYT(NIPPMR01),C' '                             0484 01497000
         BNE   @RF00484                                            0484 01498000
*     DO;                                                          0485 01499000
*       NIPPMR01=NIPPMR01+1;        /* POINT TO NEXT CHAR      Y02752*/ 01500000
         LA    @12,1                                               0486 01501000
         ALR   NIPPMR01,@12                                        0486 01502000
*       NIPPMKPR=NIPPMKPR+1;        /* INCREMENT COUNTER       Y02752*/ 01503000
         AL    @12,NIPPMKPR                                        0487 01504000
         ST    @12,NIPPMKPR                                        0487 01505000
*       IF NIPPMKPR=72              /* ARE FIRST 71 CHARS BLANK    0488 01506000
*                                                              Y02752*/ 01507000
*         THEN                      /* YES-CHECK FOR CONTINUATION    */ 01508000
         CH    @12,@CH02170                                        0488 01509000
         BNE   @RF00488                                            0488 01510000
*         DO;                                                      0489 01511000
*           IF NIPPMBYT¬=' '        /* IS 72'ND CHAR BLK             */ 01512000
*             THEN                  /* NO - INDICATES CONTINUATION   */ 01513000
         CLI   NIPPMBYT(NIPPMR01),C' '                             0490 01514000
         BNE   @RT00490                                            0490 01515000
*             GO TO NIPPMPRD;       /* READ NEXT RECORD              */ 01516000
*           ELSE                    /* 72ND IS BLANK - NO          0492 01517000
*                                      CONTINUATION                  */ 01518000
*             GO TO NIPPMTND;       /* REG 1 POINTS TO 72ND BLANK. 0492 01519000
*                                      NORMAL RETURN TO CALLER       */ 01520000
         B     NIPPMTND                                            0492 01521000
*         END;                                                     0493 01522000
*       ELSE                                                       0494 01523000
*         GO TO NIPPMPBK;           /* COUNT IS NOT 72 YET- GO CHECK    01524000
*                                      NEXT CHAR                     */ 01525000
*     END;                                                         0495 01526000
*   ELSE                            /* FIRST 71 CHARS ARE NOT        */ 01527000
*     DO;                           /* BLANK                         */ 01528000
@RF00484 DS    0H                                                  0497 01529000
*       NIPPMKPR=NIPPMR01-NIPPMKPR+72;/* POINT TO 72'ND BYTE   Y02752*/ 01530000
         LR    @12,NIPPMR01                                        0497 01531000
         SL    @12,NIPPMKPR                                        0497 01532000
         AH    @12,@CH02170                                        0497 01533000
         ST    @12,NIPPMKPR                                        0497 01534000
*       RESPECIFY                                                  0498 01535000
*         NIPPMBYT BASED(NIPPMKPR); /*                         Y02752*/ 01536000
*       NIPPMBYT=' ';               /* INSURE BLANK AT END BY SETTING   01537000
*                                      72'ND BYTE TO BLK             */ 01538000
         MVI   NIPPMBYT(@12),C' '                                  0499 01539000
*     END;                                                         0500 01540000
*   GENERATE REFS(NIPPMREG) SETS(NIPPMR02,NIPPMR00);               0501 01541000
*                                                                /*     01542000
*NIPPMTND  DS  0H                                               Y02752  01543000
NIPPMTND LM    NIPPMR02,NIPPMR00,NIPPMREG     RESTORE CALLERS REGS      01544000
*   GO TO NIPPMAD0;                 /* NORMAL RETURN TO CALLER       */ 01545000
         L     @12,NIPPMADR                                        0502 01546000
         BR    @12                                                 0502 01547000
*NIPPMTER:                                                         0503 01548000
*   NIPPMR01=ADDR(NIPPAIOB);        /* R1 = ADDR OF PARMLIB IOB      */ 01549000
*                                                                  0503 01550000
NIPPMTER L     NIPPMR01,NVTPAREA(,RNVT)                            0503 01551000
         LA    NIPPMR01,NIPPAIOB(,NIPPMR01)                        0503 01552000
*   /*****************************************************************/ 01553000
*   /*                                                               */ 01554000
*   /* NIPSENSE - FORMAT AND WRITE I/O ERROR MESSAGE                 */ 01555000
*   /*                                                               */ 01556000
*   /*****************************************************************/ 01557000
*                                                                  0504 01558000
*   GENERATE REFS(NVTSENSE,NIPPMR01) SETS(RPARM,REXIT,RENTRY);     0504 01559000
         IEAPMNIP TYPE=SENSE,PARAM=NIPPMR01                             01560000
*   NIPPARC=12;                     /* SET RETURN CODE TO 12   Y02752*/ 01561000
         L     @12,NVTPAREA(,RNVT)                                 0505 01562000
         MVC   NIPPARC(4,@12),@CF00086                             0505 01563000
*   IF NIPPMNAM=NIPPANAM            /* SEE IF MEMBER NAMES MATCH   0506 01564000
*                                                              Y02752*/ 01565000
*     THEN                                                         0506 01566000
         CLC   NIPPMNAM(8),NIPPANAM(@12)                           0506 01567000
         BE    @RT00506                                            0506 01568000
*     GO TO NIPPMPXT;               /* YES-TAKE NEW VERSION EXIT   0507 01569000
*                                                              Y02752*/ 01570000
*   GENERATE REFS(NIPPMREG) SETS(NIPPMR01,NIPPMR02);               0508 01571000
         LM    NIPPMR02,NIPPMR01,NIPPMREG     RESTORE CALLERS REGS      01572000
*   GO TO NIPPMAD4;                 /* READ ERROR - RETURN TO CALLER    01573000
*                                      + 4                           */ 01574000
         L     @12,NIPPMADR                                        0509 01575000
         LA    @12,NIPPMAD4+4(,@12)                                0509 01576000
         BR    @12                                                 0509 01577000
*   RESPECIFY                                                      0510 01578000
*    (NIPPMR01,                                                    0510 01579000
*     NIPPMR00,                                                    0510 01580000
*     NIPPMR14,                                                    0510 01581000
*     NIPPMR15)                     /*                         Y02752*/ 01582000
*         UNRESTRICTED;                                            0510 01583000
*                                                                  0510 01584000
*   /*****************************************************************/ 01585000
*   /*                                                               */ 01586000
*   /* GENERATED MACRO PARAMETER LISTS FOR MESSAGES                  */ 01587000
*   /*                                                               */ 01588000
*   /*****************************************************************/ 01589000
*                                                                  0511 01590000
*   GENERATE DATA;                                                 0511 01591000
*   END NP5PSPIO;                   /* END OF DUMMY SUBROUTINE       */ 01592000
@EL00006 DS    0H                                                  0512 01593000
@EF00006 DS    0H                                                  0512 01594000
@ER00006 BR    @14                                                 0512 01595000
*   END IEAVNPA5                    /* END OF APF INIT ROUTINE     0513 01596000
*                                                                    */ 01597000
*                                                                  0513 01598000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01599000
*/*%INCLUDE SYSLIB  (IEAPMNIP)                                       */ 01600000
*/*%INCLUDE SYSLIB  (IHAECB  )                                       */ 01601000
*/*%INCLUDE SYSLIB  (IEZIOB  )                                       */ 01602000
*/*%INCLUDE SYSLIB  (IEZDEB  )                                       */ 01603000
*/*%INCLUDE SYSLIB  (IEAPPNIP)                                       */ 01604000
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */ 01605000
*/*%INCLUDE SYSLIB  (IHANVT  )                                       */ 01606000
*/*%INCLUDE SYSLIB  (CVT     )                                       */ 01607000
*/*%INCLUDE SYSLIB  (IEAPSPIO)                                       */ 01608000
*                                                                  0513 01609000
*       ;                                                          0513 01610000
         B     @EL00001                                            0513 01611000
@DATA    DS    0H                                                       01612000
@CH00102 DC    H'2'                                                     01613000
@CH00185 DC    H'4'                                                     01614000
@CH00083 DC    H'6'                                                     01615000
@CH00090 DC    H'18'                                                    01616000
@CH00079 DC    H'19'                                                    01617000
@CH00137 DC    H'44'                                                    01618000
@CH02170 DC    H'72'                                                    01619000
@CH02061 DC    H'2040'                                                  01620000
@SM02174 MVC   APFTDSN(0,APFPTR),SCAN(@11)                              01621000
@SM02176 MVC   APFTVOL(0,APFPTR),SCAN(@11)                              01622000
         DS    0F                                                       01623000
@SA00001 DS    18F                                                      01624000
@SA00004 DS    14F                                                      01625000
@SA00005 DS    14F                                                      01626000
         DS    0F                                                       01627000
@CF00034 DC    F'1'                                                     01628000
@CH00034 EQU   @CF00034+2                                               01629000
@CF00040 DC    F'8'                                                     01630000
@CH00040 EQU   @CF00040+2                                               01631000
@CF00086 DC    F'12'                                                    01632000
@CF00324 DC    F'16'                                                    01633000
@CF00110 DC    XL4'FFFFFFF8'                                            01634000
         DS    0D                                                       01635000
FMSIZE   DS    FL4                                                      01636000
         ORG   FMSIZE                                                   01637000
FMSIZESP DS    CL1                                                      01638000
@NM00002 DS    CL3                                                      01639000
         ORG   FMSIZE+4                                                 01640000
APFSAVE  DC    XL4'00'                                                  01641000
APFTABSZ DC    XL4'F50007F8'                                            01642000
APFSVCLK DS    A                                                        01643000
LIBPTR   DS    A                                                        01644000
VOLPTR   DS    A                                                        01645000
NIPPMADR DS    A                                                        01646000
NIPPMKPR DS    A                                                        01647000
NIPPMNEG DC    XL4'FFFFFFFF'                                            01648000
NIPPMBDL DS    A                                                        01649000
NIPPMDCB DS    A                                                        01650000
APFLIBSZ DC    XL2'00'                                                  01651000
APFVOLSZ DC    XL2'00'                                                  01652000
APFWORK  DS    FL2                                                      01653000
         ORG   APFWORK                                                  01654000
AWORK1   DS    FL1                                                      01655000
AWORK2   DS    FL1                                                      01656000
         ORG   APFWORK+2                                                01657000
ENTRYCTR DS    FL2                                                      01658000
         ORG   ENTRYCTR                                                 01659000
ECNTR1   DS    FL1                                                      01660000
ECNTR2   DS    FL1                                                      01661000
         ORG   ENTRYCTR+2                                               01662000
@TS00001 DS    CL1                                                      01663000
@CB02161 DC    X'00000000000000'                                        01664000
TXTRC    DC    X'00'                                                    01665000
PRMRC    DC    X'00'                                                    01666000
PRMERRC  DC    X'00'                                                    01667000
ERRORCD  DC    X'00'                                                    01668000
NPA5SWCH DC    X'00'                                                    01669000
         ORG   NPA5SWCH                                                 01670000
NPA5PARM DS    BL1                                                      01671000
NPA5AEND EQU   NPA5SWCH+0                                               01672000
NPA5RTRY EQU   NPA5SWCH+0                                               01673000
@NM00001 EQU   NPA5SWCH+0                                               01674000
         ORG   NPA5SWCH+1                                               01675000
PASSPARM DC    CL8'APF'                                                 01676000
LINKLIB  DS    CL19                                                     01677000
         ORG   LINKLIB                                                  01678000
LINKSIZE DC    X'12'                                                    01679000
LINKVOL  DC    CL6'      '                                              01680000
LINKNAME DC    CL12'SYS1.LINKLIB'                                       01681000
         ORG   LINKLIB+19                                               01682000
SVCLIB   DS    CL18                                                     01683000
         ORG   SVCLIB                                                   01684000
SVCSIZE  DC    X'11'                                                    01685000
SVCVOL   DC    CL6'      '                                              01686000
SVCNAME  DC    CL11'SYS1.SVCLIB'                                        01687000
         ORG   SVCLIB+18                                                01688000
PLISTNAM DS    CL8                                                      01689000
         ORG   PLISTNAM                                                 01690000
PLISTNM  DC    CL6'IEAAPF'                                              01691000
PLISTEL  DS    CL2                                                      01692000
         ORG   PLISTNAM+8                                               01693000
APF1     DC    CL3'APF'                                                 01694000
CAUSELIB DC    CL24'INCORRECT LIBNAME FORMAT'                           01695000
CAUSEVOL DC    CL24'INCORRECT VOLID FIELD'                              01696000
CAUSESTR DC    CL24'EXCEED APF TABLE STORAGE'                           01697000
NIPPMMBC DS    CL8                                                      01698000
         ORG   NIPPMMBC                                                 01699000
NIPPMMBB DS    CL3                                                      01700000
NIPPMCCH DS    CL5                                                      01701000
         ORG   NIPPMMBC+8                                               01702000
NIPPMMK1 DC    B'11110010'                                              01703000
NIPPMNAM DC    CL8' '                                                   01704000
         DS    CL2                                                      01705000
NIPPMREG DS    16F                                                      01706000
IEAVNPA5 CSECT                                                          01707000
MSG9S   DS    0H                                                        01708000
        IEAPMNIP TYPE=HEADER,MSGST=MSG9S,MSGEND=MSG9E                   01709000
MSG9P1  DC    C'IEA352I LIST '                                          01710000
MSG9I1  DC    CL9' '                                                    01711000
MSG9P2  DC    C'FOR '                                                   01712000
MSG9I2  DC    CL6' '                                                    01713000
MSG9P3  DC    C'INVALID - '                                             01714000
MSG9I3  DC    CL24' '                                                   01715000
MSG9E   EQU   *                                                         01716000
IEAVNPA5 CSECT                                                          01717000
*                              /*                                       01718000
*NIPPMMS1 DS   0F                                               Y02752  01719000
NIPPMMS1 DS    0F                                               Y02752  01720000
         IEAPMNIP TYPE=HEADER,MSGST=NIPPMMS1,MSGEND=NIPPMED1    Y02752  01721000
         DC    CL34'IEA300I I/O ERROR DURING BLDL FOR '                 01722000
*NIPPMMB1  EQU *                                                Y02752  01723000
NIPPMMB1 DC    CL8'        '                                            01724000
         DC    CL16' IN SYS1.PARMLIB'                                   01725000
*NIPPMED1 EQU   *                                               Y02752  01726000
NIPPMED1 EQU   *                                                Y02752  01727000
         SPACE 1                                                        01728000
*NIPPMMS2 DS    0F                                              Y02752  01729000
NIPPMMS2 DS    0F                                               Y02752  01730000
         IEAPMNIP TYPE=HEADER,MSGST=NIPPMMS2,MSGEND=NIPPMED2            01731000
         DC    CL8'IEA301I '                                            01732000
*NIPPMMB2 EQU  *                                                Y02752  01733000
NIPPMMB2 DC    CL8'        '                                    Y02752  01734000
         DC    CL26' NOT FOUND IN SYS1.PARMLIB'                         01735000
*NIPPMED2 EQU   *                                               Y02752  01736000
NIPPMED2 EQU   *                                                Y02752  01737000
IEAVNPA5 CSECT                                                          01738000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01739000
@01      EQU   01                                                       01740000
@02      EQU   02                                                       01741000
@03      EQU   03                                                       01742000
@04      EQU   04                                                       01743000
@05      EQU   05                                                       01744000
@06      EQU   06                                                       01745000
@07      EQU   07                                                       01746000
@08      EQU   08                                                       01747000
@09      EQU   09                                                       01748000
@10      EQU   10                                                       01749000
@11      EQU   11                                                       01750000
@12      EQU   12                                                       01751000
@13      EQU   13                                                       01752000
@14      EQU   14                                                       01753000
@15      EQU   15                                                       01754000
RBASE    EQU   @10                                                      01755000
SCNPTR   EQU   @05                                                      01756000
TEXTPTR  EQU   @04                                                      01757000
RPARM0   EQU   @00                                                      01758000
RI       EQU   @01                                                      01759000
RPARM    EQU   @01                                                      01760000
CVTPTR   EQU   @03                                                      01761000
DEBDAPTR EQU   @04                                                      01762000
NPTEPTR  EQU   @04                                                      01763000
IOBSTPTR EQU   @05                                                      01764000
APFPTR   EQU   @06                                                      01765000
DEBPTR   EQU   @07                                                      01766000
DEBSBPTR EQU   @07                                                      01767000
ECBPTR   EQU   @07                                                      01768000
IOBPRPTR EQU   @08                                                      01769000
DEBEXPTR EQU   @08                                                      01770000
UCBPTR   EQU   @09                                                      01771000
RNVT     EQU   @02                                                      01772000
RCVT     EQU   @03                                                      01773000
REXIT    EQU   @14                                                      01774000
RENTRY   EQU   @15                                                      01775000
NIPPMR00 EQU   @00                                                      01776000
NIPPMR14 EQU   @14                                                      01777000
NIPPMR15 EQU   @15                                                      01778000
NIPPMR01 EQU   @01                                                      01779000
NIPPMR02 EQU   @02                                                      01780000
NIPPMR13 EQU   @13                                                      01781000
NIPPMR06 EQU   @06                                                      01782000
NIPPMR09 EQU   @09                                                      01783000
NIPPMR12 EQU   @12                                                      01784000
PARMCHAR EQU   0                                                        01785000
SCAN     EQU   0                                                        01786000
APFTHDR  EQU   0                                                        01787000
APFTABLN EQU   APFTHDR                                                  01788000
APFTNENT EQU   APFTHDR+1                                                01789000
APFTAB   EQU   0                                                        01790000
APFTENTR EQU   APFTAB                                                   01791000
APFTLEN  EQU   APFTENTR                                                 01792000
APFTVOL  EQU   APFTENTR+1                                               01793000
APFTDSN  EQU   APFTENTR+7                                               01794000
NWTOHDR  EQU   0                                                        01795000
NWTOFL   EQU   NWTOHDR+2                                                01796000
NWTORLST EQU   0                                                        01797000
NWTORFL  EQU   NWTORLST+10                                              01798000
NIPSPE   EQU   0                                                        01799000
NIPMNTPL EQU   0                                                        01800000
NMNTDS   EQU   NIPMNTPL                                                 01801000
NMNTVS   EQU   NIPMNTPL+12                                              01802000
NMNTFL   EQU   NIPMNTPL+20                                              01803000
NIPOPNPL EQU   0                                                        01804000
NOPNDS   EQU   NIPOPNPL                                                 01805000
NOPNFL   EQU   NIPOPNPL+20                                              01806000
NIPSCHDL EQU   0                                                        01807000
ECB      EQU   0                                                        01808000
ECBRB    EQU   ECB                                                      01809000
ECBCC    EQU   ECBRB                                                    01810000
ECBCCCNT EQU   ECBRB+1                                                  01811000
IOBPREFX EQU   0                                                        01812000
IOBCFLG1 EQU   IOBPREFX                                                 01813000
IOBSTDRD EQU   0                                                        01814000
IOBFLAG1 EQU   IOBSTDRD                                                 01815000
IOBCYCCK EQU   IOBFLAG1                                                 01816000
IOBRSTRT EQU   IOBFLAG1                                                 01817000
IOBFLAG2 EQU   IOBSTDRD+1                                               01818000
IOBPURGE EQU   IOBFLAG2                                                 01819000
IOBRDHA0 EQU   IOBFLAG2                                                 01820000
IOBSENS0 EQU   IOBSTDRD+2                                               01821000
IOBS0B7  EQU   IOBSENS0                                                 01822000
IOBSENS1 EQU   IOBSTDRD+3                                               01823000
IOBECBPT EQU   IOBSTDRD+4                                               01824000
IOBFLAG3 EQU   IOBSTDRD+8                                               01825000
IOBFL3   EQU   IOBFLAG3                                                 01826000
IOBCSW   EQU   IOBSTDRD+9                                               01827000
IOBIOCSW EQU   IOBCSW                                                   01828000
IOBSTART EQU   IOBSTDRD+16                                              01829000
IOBDCBPT EQU   IOBSTDRD+20                                              01830000
IOBFLAG4 EQU   IOBDCBPT                                                 01831000
IOBRESTR EQU   IOBSTDRD+24                                              01832000
IOBINCAM EQU   IOBSTDRD+28                                              01833000
IOBBTAMF EQU   IOBINCAM                                                 01834000
IOBERRCT EQU   IOBSTDRD+30                                              01835000
DEBBASIC EQU   0                                                        01836000
DEBTCBAD EQU   DEBBASIC                                                 01837000
DEBDEBAD EQU   DEBBASIC+4                                               01838000
DEBIRBAD EQU   DEBBASIC+8                                               01839000
DEBOFLGS EQU   DEBIRBAD                                                 01840000
DEBOPATB EQU   DEBBASIC+12                                              01841000
DEBFLGS1 EQU   DEBBASIC+14                                              01842000
DEBUSRPG EQU   DEBBASIC+16                                              01843000
DEBRRQ   EQU   DEBBASIC+20                                              01844000
DEBECBAD EQU   DEBRRQ                                                   01845000
DEBDCBAD EQU   DEBBASIC+24                                              01846000
DEBPROTG EQU   DEBDCBAD                                                 01847000
DEBAPPAD EQU   DEBBASIC+28                                              01848000
DEBBASND EQU   DEBBASIC+32                                              01849000
DEBDASD  EQU   0                                                        01850000
DEBUCBAD EQU   DEBDASD                                                  01851000
DEBACSMD EQU   0                                                        01852000
DEBVOLSQ EQU   DEBACSMD                                                 01853000
DEBVOLBT EQU   DEBVOLSQ                                                 01854000
DEBDSNM  EQU   DEBACSMD+4                                               01855000
DEBUTSAA EQU   DEBDSNM                                                  01856000
DEBACS01 EQU   0                                                        01857000
DEBDSNAM EQU   DEBACS01                                                 01858000
DEBACS02 EQU   0                                                        01859000
DEBDBLK  EQU   DEBACS02                                                 01860000
DEBACS03 EQU   0                                                        01861000
DEBACS04 EQU   0                                                        01862000
DEBTBFRA EQU   DEBACS04                                                 01863000
DEBTCCWA EQU   DEBACS04+4                                               01864000
DEBACS05 EQU   0                                                        01865000
DEBFUCBA EQU   DEBACS05                                                 01866000
DEBLUCBA EQU   DEBACS05+4                                               01867000
DEBACS06 EQU   0                                                        01868000
DEBACS07 EQU   0                                                        01869000
DEBACS08 EQU   0                                                        01870000
DEBSUBNM EQU   0                                                        01871000
DEB      EQU   0                                                        01872000
DEBAVT   EQU   DEB                                                      01873000
DEBEOEA  EQU   DEBAVT                                                   01874000
DEBEOEAB EQU   DEBEOEA                                                  01875000
DEBSIOA  EQU   DEBAVT+4                                                 01876000
DEBSIOAB EQU   DEBSIOA                                                  01877000
DEBPCIA  EQU   DEBAVT+8                                                 01878000
DEBPCIAB EQU   DEBPCIA                                                  01879000
DEBCEA   EQU   DEBAVT+12                                                01880000
DEBCEAB  EQU   DEBCEA                                                   01881000
DEBXCEA  EQU   DEBAVT+16                                                01882000
DEBXCEAB EQU   DEBXCEA                                                  01883000
DEBPREFX EQU   DEB+20                                                   01884000
DEBXTNP  EQU   DEBPREFX+8                                               01885000
DEBXTN   EQU   0                                                        01886000
DEBXFLG1 EQU   DEBXTN+2                                                 01887000
NIPPAHDR EQU   0                                                        01888000
NIPPAREA EQU   0                                                        01889000
NIPPARC  EQU   NIPPAREA+8                                               01890000
NIPPABDL EQU   NIPPAREA+12                                              01891000
NIPPABDH EQU   NIPPABDL                                                 01892000
NIPPANAM EQU   NIPPABDL+4                                               01893000
NIPPATTR EQU   NIPPABDL+12                                              01894000
NIPPAIOD EQU   NIPPAREA+32                                              01895000
NIPPASID EQU   NIPPAIOD+32                                              01896000
NIPPAIOB EQU   NIPPAIOD+40                                              01897000
NIPPADCB EQU   NIPPAIOD+80                                              01898000
NIPPAECB EQU   NIPPAIOD+84                                              01899000
NIPPAECC EQU   NIPPAECB                                                 01900000
NIPPADEB EQU   NIPPAIOD+88                                              01901000
NIPPARCD EQU   NIPPAIOD+136                                             01902000
NIPPAFLG EQU   NIPPAREA+524                                             01903000
NIPPAFL1 EQU   NIPPAFLG                                                 01904000
PARMTAB  EQU   0                                                        01905000
APF      EQU   PARMTAB+8                                                01906000
NIPPTE   EQU   0                                                        01907000
NIPPTADR EQU   NIPPTE                                                   01908000
NIPPTOPF EQU   NIPPTE+4                                                 01909000
NIPPTCAN EQU   NIPPTOPF                                                 01910000
NIPPTATF EQU   NIPPTE+5                                                 01911000
DCB      EQU   0                                                        01912000
DCBDEBAD EQU   DCB+45                                                   01913000
UCB      EQU   0                                                        01914000
UCBOB    EQU   0                                                        01915000
UCBJBNR  EQU   UCBOB                                                    01916000
UCBFL5   EQU   UCBOB+1                                                  01917000
UCBAF    EQU   UCBFL5                                                   01918000
UCBSTAT  EQU   UCBOB+3                                                  01919000
UCBCHAN  EQU   UCBOB+4                                                  01920000
UCBSFLS  EQU   UCBOB+6                                                  01921000
UCBFLA   EQU   UCBSFLS                                                  01922000
UCBFL1   EQU   UCBFLA                                                   01923000
UCBBSY   EQU   UCBFL1                                                   01924000
UCBNRY   EQU   UCBFL1                                                   01925000
UCBPST   EQU   UCBFL1                                                   01926000
UCBCUB   EQU   UCBFL1                                                   01927000
UCBFLB   EQU   UCBSFLS+1                                                01928000
UCBCHM   EQU   UCBOB+8                                                  01929000
UCBCHM1  EQU   UCBCHM                                                   01930000
UCBPTH0  EQU   UCBCHM1                                                  01931000
UCBPTH1  EQU   UCBCHM1                                                  01932000
UCBWGT   EQU   UCBOB+12                                                 01933000
UCBTYP   EQU   UCBOB+16                                                 01934000
UCBTBYT1 EQU   UCBTYP                                                   01935000
UCB1FEA5 EQU   UCBTBYT1                                                 01936000
UCB1FEA6 EQU   UCBTBYT1                                                 01937000
UCBTBYT2 EQU   UCBTYP+1                                                 01938000
UCB2OPT2 EQU   UCBTBYT2                                                 01939000
UCBDUDN1 EQU   UCB2OPT2                                                 01940000
UCB2OPT3 EQU   UCBTBYT2                                                 01941000
UCBDUDN2 EQU   UCB2OPT3                                                 01942000
UCB2OPT4 EQU   UCBTBYT2                                                 01943000
UCB2OPT6 EQU   UCBTBYT2                                                 01944000
UCB2OPT7 EQU   UCBTBYT2                                                 01945000
UCBTBYT3 EQU   UCBTYP+2                                                 01946000
UCBDVCLS EQU   UCBTBYT3                                                 01947000
UCBTBYT4 EQU   UCBTYP+3                                                 01948000
UCBEXTPT EQU   UCBOB+20                                                 01949000
UCBFLC   EQU   UCBEXTPT                                                 01950000
UCBDEV   EQU   UCBOB+24                                                 01951000
UCBCMEXT EQU   0                                                        01952000
UCBATI   EQU   UCBCMEXT+3                                               01953000
@NM00060 EQU   UCBATI                                                   01954000
UCBFLP1  EQU   UCBCMEXT+5                                               01955000
UCBMT    EQU   0                                                        01956000
UCBOCR   EQU   0                                                        01957000
UCBUCS   EQU   0                                                        01958000
UCBUCSOP EQU   UCBUCS+4                                                 01959000
UCBFCBOP EQU   UCBUCS+5                                                 01960000
NVT      EQU   0                                                        01961000
NVTNPATR EQU   NVT+54                                                   01962000
NVTNPREN EQU   NVTNPATR                                                 01963000
NVTFLLB  EQU   NVT+55                                                   01964000
NVTABSAV EQU   NVT+140                                                  01965000
NVTFLCN  EQU   NVT+211                                                  01966000
NVTWTPSW EQU   NVT+224                                                  01967000
NVTWPSW2 EQU   NVTWTPSW+4                                               01968000
NVTFLWSC EQU   NVTWPSW2+3                                               01969000
NVTLOAD  EQU   NVT+232                                                  01970000
NVTSENSE EQU   NVT+236                                                  01971000
NVTSWAIT EQU   NVT+240                                                  01972000
NVTTIME  EQU   NVT+244                                                  01973000
NVTUCBFN EQU   NVT+248                                                  01974000
NVTWTO   EQU   NVT+252                                                  01975000
NVTWTOR  EQU   NVT+256                                                  01976000
NVTWTOR2 EQU   NVT+260                                                  01977000
NVTOPEN  EQU   NVT+264                                                  01978000
NVTMOUNT EQU   NVT+268                                                  01979000
NVTPRMPT EQU   NVT+272                                                  01980000
NVTVIRT  EQU   NVT+276                                                  01981000
NVTREAL  EQU   NVT+280                                                  01982000
NVTSCHED EQU   NVT+284                                                  01983000
NVTOPIO  EQU   NVT+288                                                  01984000
NVTPAREA EQU   NVT+368                                                  01985000
NVTPTAB  EQU   NVT+372                                                  01986000
NVTXCTL  EQU   NVT+428                                                  01987000
NVTLOCAT EQU   NVT+436                                                  01988000
NVTFLPO  EQU   NVT+528                                                  01989000
CVTMAP   EQU   0                                                        01990000
CVTLINK  EQU   CVTMAP+8                                                 01991000
CVTPCNVT EQU   CVTMAP+28                                                01992000
CVTDAR   EQU   CVTMAP+72                                                01993000
CVTFLGS1 EQU   CVTDAR                                                   01994000
CVTSVDCB EQU   CVTMAP+84                                                01995000
CVTDCB   EQU   CVTMAP+116                                               01996000
CVTOPTA  EQU   CVTMAP+182                                               01997000
CVTOPTB  EQU   CVTMAP+183                                               01998000
CVTGTF   EQU   CVTMAP+236                                               01999000
CVTGTFST EQU   CVTGTF                                                   02000000
CVTGTFS  EQU   CVTGTFST                                                 02001000
CVTSTATE EQU   CVTGTFST                                                 02002000
CVTTMODE EQU   CVTGTFST                                                 02003000
CVTFORM  EQU   CVTGTFST                                                 02004000
CVTUSR   EQU   CVTGTFST                                                 02005000
CVTAQAVT EQU   CVTMAP+240                                               02006000
CVTTCMFG EQU   CVTAQAVT                                                 02007000
CVTVOLM2 EQU   CVTMAP+244                                               02008000
CVTTATA  EQU   CVTVOLM2                                                 02009000
CVTTSKS  EQU   CVTTATA                                                  02010000
CVTVOLF2 EQU   CVTTSKS                                                  02011000
CVTTAT   EQU   CVTTATA+1                                                02012000
CVTATER  EQU   CVTMAP+248                                               02013000
CVTEXT1  EQU   CVTMAP+252                                               02014000
CVTPURG  EQU   CVTMAP+260                                               02015000
CVTQMSG  EQU   CVTMAP+268                                               02016000
CVTDMSR  EQU   CVTMAP+272                                               02017000
CVTAPF   EQU   CVTMAP+324                                               02018000
CVTEXT2  EQU   CVTMAP+328                                               02019000
CVTHJES  EQU   CVTMAP+332                                               02020000
CVTPGSIA EQU   CVTMAP+348                                               02021000
CVTA1F1  EQU   CVTMAP+356                                               02022000
CVTSYSK  EQU   CVTMAP+357                                               02023000
CVTVOLM1 EQU   CVTMAP+380                                               02024000
CVTVOLF1 EQU   CVTVOLM1                                                 02025000
CVTATMCT EQU   CVTMAP+388                                               02026000
CVTXTNT1 EQU   0                                                        02027000
CVTXTNT2 EQU   0                                                        02028000
CVTDSSV  EQU   CVTXTNT2                                                 02029000
CVTRSV90 EQU   CVTXTNT2+5                                               02030000
CVTQID   EQU   CVTXTNT2+24                                              02031000
CVTRV400 EQU   CVTXTNT2+52                                              02032000
CVTRV409 EQU   CVTXTNT2+53                                              02033000
CVTATCVT EQU   CVTXTNT2+64                                              02034000
CVTRV429 EQU   CVTXTNT2+84                                              02035000
CVTRV438 EQU   CVTXTNT2+85                                              02036000
CVTRV457 EQU   CVTXTNT2+112                                             02037000
CVTRV466 EQU   CVTXTNT2+113                                             02038000
CVTFIX   EQU   0                                                        02039000
CVTRELNO EQU   CVTFIX+252                                               02040000
NIPPMAD0 EQU   0                                                        02041000
NIPPMAD4 EQU   0                                                        02042000
NIPPMBYT EQU   0                                                        02043000
NIPPMBUF EQU   0                                                        02044000
NIPPMCSW EQU   0                                                        02045000
NIPPMCS2 EQU   NIPPMCSW+3                                               02046000
NIPPMME1 EQU   0                                                        02047000
NIPPMME2 EQU   0                                                        02048000
UCBBGN   EQU   0                                                        02049000
IOBORG01 EQU   IOBPREFX+8                                               02050000
IOBNIOBA EQU   IOBORG01                                                 02051000
IOBNFLG1 EQU   IOBNIOBA                                                 02052000
IOBORG02 EQU   IOBPREFX+8                                               02053000
IOBDQADA EQU   IOBORG02                                                 02054000
IOBDEQIN EQU   IOBDQADA                                                 02055000
IOBORG03 EQU   IOBPREFX+12                                              02056000
IOBORG04 EQU   IOBINCAM                                                 02057000
IOBORG12 EQU   IOBINCAM                                                 02058000
IOBFL4   EQU   IOBORG12                                                 02059000
IOBEXTEN EQU   IOBSTDRD+32                                              02060000
IOBSEEK  EQU   IOBEXTEN                                                 02061000
IOBBB    EQU   IOBSEEK+1                                                02062000
IOBCC    EQU   IOBSEEK+3                                                02063000
IOBHH    EQU   IOBSEEK+5                                                02064000
IOBORG05 EQU   IOBEXTEN                                                 02065000
IOBORG06 EQU   IOBEXTEN                                                 02066000
IOBNXTPT EQU   IOBORG06+4                                               02067000
IOBSTATA EQU   IOBNXTPT                                                 02068000
IOBORG07 EQU   IOBEXTEN+8                                               02069000
W1IEXTEN EQU   IOBORG07                                                 02070000
IOBORG08 EQU   IOBEXTEN+8                                               02071000
IOBINDCT EQU   IOBORG08+4                                               02072000
IOBUNSQR EQU   IOBORG08+5                                               02073000
IOBFCHAD EQU   IOBORG08+8                                               02074000
IOBORG09 EQU   IOBEXTEN+8                                               02075000
IOBDPLAD EQU   IOBORG09+4                                               02076000
IOBDTYPE EQU   IOBORG09+8                                               02077000
IOBDTYP2 EQU   IOBORG09+9                                               02078000
IOBDSTAT EQU   IOBORG09+10                                              02079000
IOBSTAT1 EQU   IOBDSTAT                                                 02080000
IOBORG10 EQU   IOBEXTEN+8                                               02081000
IOBSEEK2 EQU   IOBORG10                                                 02082000
IOBORG11 EQU   IOBEXTEN                                                 02083000
IOBERCT  EQU   IOBORG11                                                 02084000
IOBUCBXV EQU   IOBERCT                                                  02085000
IOBNAME  EQU   IOBORG11+4                                               02086000
DEBBAS02 EQU   DEBBASND                                                 02087000
DEBDDS1  EQU   DEBBAS02                                                 02088000
DEBSUCBA EQU   DEBDDS1                                                  02089000
DEBRDCB  EQU   DEBDDS1+4                                                02090000
DEBPDCB  EQU   DEBDDS1+8                                                02091000
DEBWDCB  EQU   DEBDDS1+12                                               02092000
DEBBAS01 EQU   DEBBASND                                                 02093000
DEBISAM  EQU   DEBBAS01                                                 02094000
DEBFIEAD EQU   DEBISAM                                                  02095000
DEBFPEAD EQU   DEBISAM+4                                                02096000
DEBFOEAD EQU   DEBISAM+8                                                02097000
DEBEXPT  EQU   DEBISAM+12                                               02098000
DEBRPSID EQU   DEBEXPT                                                  02099000
UCBOBS01 EQU   UCBDEV                                                   02100000
UCBVOLI  EQU   UCBOBS01+4                                               02101000
UCBSTAB  EQU   UCBOBS01+10                                              02102000
UCBBSVL  EQU   UCBSTAB                                                  02103000
UCBPRSRS EQU   UCBSTAB                                                  02104000
UCBDMCT  EQU   UCBOBS01+11                                              02105000
UCBFL4   EQU   UCBOBS01+13                                              02106000
UCBOBS02 EQU   UCBDEV                                                   02107000
UCBTFL1  EQU   UCBOBS02+19                                              02108000
UCBXTN   EQU   UCBOBS02+20                                              02109000
UCBVOPT  EQU   UCBXTN                                                   02110000
UCBOBS03 EQU   UCBDEV                                                   02111000
UCBXTADR EQU   UCBOBS03                                                 02112000
UCBOBS04 EQU   UCBDEV                                                   02113000
UCBBTA   EQU   UCBOBS04+12                                              02114000
UCBOBS06 EQU   UCBDEV                                                   02115000
UCBAOF   EQU   UCBOBS06                                                 02116000
UCBAOF1  EQU   UCBAOF                                                   02117000
UCBAOF2  EQU   UCBAOF+1                                                 02118000
@NM00059 EQU   UCBOBS06+3                                               02119000
UCBIRB   EQU   UCBOBS06+4                                               02120000
UCBGRAF  EQU   UCBIRB                                                   02121000
UCBLDNCA EQU   UCBOBS06+8                                               02122000
UCBRDYQ  EQU   UCBLDNCA                                                 02123000
UCBIRLN  EQU   UCBRDYQ                                                  02124000
UCBLDNCB EQU   UCBRDYQ+1                                                02125000
UCBCTLNK EQU   UCBOBS06+12                                              02126000
UCBOBS07 EQU   UCBDEV                                                   02127000
UCBOBS08 EQU   UCBDEV                                                   02128000
CVTS01   EQU   CVTPGSIA                                                 02129000
CVTLPDIA EQU   CVTS01+12                                                02130000
CVTDIRST EQU   CVTLPDIA                                                 02131000
CVTSLIDA EQU   CVTS01+24                                                02132000
CVTCTLFG EQU   CVTS01+50                                                02133000
CVTAUTHL EQU   CVTS01+136                                               02134000
CVTRV210 EQU   CVTS01+424                                               02135000
CVTRV219 EQU   CVTS01+425                                               02136000
CVTRV228 EQU   CVTS01+426                                               02137000
CVTRV237 EQU   CVTS01+427                                               02138000
CVTMFRTR EQU   CVTS01+452                                               02139000
CVTRV262 EQU   CVTS01+468                                               02140000
CVTRV271 EQU   CVTS01+469                                               02141000
CVTRV280 EQU   CVTS01+470                                               02142000
CVTRV289 EQU   CVTS01+471                                               02143000
CVTGSDA  EQU   CVTS01+600                                               02144000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02145000
CVTTPIO  EQU   CVTS01+608                                               02146000
CVTADV   EQU   CVTS01+604                                               02147000
CVTGSDAB EQU   CVTGSDA                                                  02148000
CVTQV3   EQU   CVTS01+596                                               02149000
CVTQV2   EQU   CVTS01+592                                               02150000
CVTQV1   EQU   CVTS01+588                                               02151000
CVTRPT   EQU   CVTS01+584                                               02152000
CVTSSRB  EQU   CVTS01+580                                               02153000
CVTCSDRL EQU   CVTS01+576                                               02154000
CVTEXP1  EQU   CVTS01+572                                               02155000
CVTRMPMT EQU   CVTS01+568                                               02156000
CVTRMPTT EQU   CVTS01+564                                               02157000
CVTVPSA  EQU   CVTS01+560                                               02158000
CVTVSTOP EQU   CVTS01+556                                               02159000
CVTGTFR8 EQU   CVTS01+552                                               02160000
CVTQUIT  EQU   CVTS01+548                                               02161000
CVTVACR  EQU   CVTS01+544                                               02162000
CVTWTCB  EQU   CVTS01+540                                               02163000
CVTSTPRS EQU   CVTS01+536                                               02164000
CVT0PT02 EQU   CVTS01+532                                               02165000
CVTDARCM EQU   CVTS01+528                                               02166000
CVTIRECM EQU   CVTS01+524                                               02167000
CVTJRECM EQU   CVTS01+520                                               02168000
CVTVEMS0 EQU   CVTS01+516                                               02169000
CVTSPFRR EQU   CVTS01+512                                               02170000
CVTRLSTG EQU   CVTS01+508                                               02171000
CVT0TC0A EQU   CVTS01+504                                               02172000
CVTGMBR  EQU   CVTS01+500                                               02173000
CVTLFRM  EQU   CVTS01+496                                               02174000
CVTRMBR  EQU   CVTS01+492                                               02175000
CVTVIOP  EQU   CVTS01+488                                               02176000
CVTRV307 EQU   CVTS01+486                                               02177000
CVTRV306 EQU   CVTS01+484                                               02178000
CVTRV305 EQU   CVTS01+482                                               02179000
CVTRV304 EQU   CVTS01+480                                               02180000
CVTRV303 EQU   CVTS01+478                                               02181000
CVTRV302 EQU   CVTS01+476                                               02182000
CVTRV301 EQU   CVTS01+475                                               02183000
CVTRV300 EQU   CVTS01+474                                               02184000
CVTRV299 EQU   CVTS01+473                                               02185000
CVTRV298 EQU   CVTS01+472                                               02186000
CVTRV297 EQU   CVTRV289                                                 02187000
CVTRV296 EQU   CVTRV289                                                 02188000
CVTRV295 EQU   CVTRV289                                                 02189000
CVTRV294 EQU   CVTRV289                                                 02190000
CVTRV293 EQU   CVTRV289                                                 02191000
CVTRV292 EQU   CVTRV289                                                 02192000
CVTRV291 EQU   CVTRV289                                                 02193000
CVTRV290 EQU   CVTRV289                                                 02194000
CVTRV288 EQU   CVTRV280                                                 02195000
CVTRV287 EQU   CVTRV280                                                 02196000
CVTRV286 EQU   CVTRV280                                                 02197000
CVTRV285 EQU   CVTRV280                                                 02198000
CVTRV284 EQU   CVTRV280                                                 02199000
CVTRV283 EQU   CVTRV280                                                 02200000
CVTRV282 EQU   CVTRV280                                                 02201000
CVTRV281 EQU   CVTRV280                                                 02202000
CVTRV279 EQU   CVTRV271                                                 02203000
CVTRV278 EQU   CVTRV271                                                 02204000
CVTRV277 EQU   CVTRV271                                                 02205000
CVTRV276 EQU   CVTRV271                                                 02206000
CVTRV275 EQU   CVTRV271                                                 02207000
CVTRV274 EQU   CVTRV271                                                 02208000
CVTRV273 EQU   CVTRV271                                                 02209000
CVTRV272 EQU   CVTRV271                                                 02210000
CVTRV270 EQU   CVTRV262                                                 02211000
CVTRV269 EQU   CVTRV262                                                 02212000
CVTRV268 EQU   CVTRV262                                                 02213000
CVTRV267 EQU   CVTRV262                                                 02214000
CVTRV266 EQU   CVTRV262                                                 02215000
CVTRV265 EQU   CVTRV262                                                 02216000
CVTRV264 EQU   CVTRV262                                                 02217000
CVTRV263 EQU   CVTRV262                                                 02218000
CVTVFP   EQU   CVTS01+464                                               02219000
CVTVSI   EQU   CVTS01+460                                               02220000
CVTVPSIB EQU   CVTS01+456                                               02221000
CVTMFACT EQU   CVTMFRTR                                                 02222000
CVTMFCTL EQU   CVTS01+448                                               02223000
CVTPVBP  EQU   CVTS01+444                                               02224000
CVTPWI   EQU   CVTS01+440                                               02225000
CVTRV254 EQU   CVTS01+438                                               02226000
CVTRV253 EQU   CVTS01+436                                               02227000
CVTRV252 EQU   CVTS01+434                                               02228000
CVTRV251 EQU   CVTS01+433                                               02229000
CVTRV250 EQU   CVTS01+432                                               02230000
CVTRV249 EQU   CVTS01+431                                               02231000
CVTRV248 EQU   CVTS01+430                                               02232000
CVTRV247 EQU   CVTS01+429                                               02233000
CVTRV246 EQU   CVTS01+428                                               02234000
CVTRV245 EQU   CVTRV237                                                 02235000
CVTRV244 EQU   CVTRV237                                                 02236000
CVTRV243 EQU   CVTRV237                                                 02237000
CVTRV242 EQU   CVTRV237                                                 02238000
CVTRV241 EQU   CVTRV237                                                 02239000
CVTRV240 EQU   CVTRV237                                                 02240000
CVTRV239 EQU   CVTRV237                                                 02241000
CVTRV238 EQU   CVTRV237                                                 02242000
CVTRV236 EQU   CVTRV228                                                 02243000
CVTRV235 EQU   CVTRV228                                                 02244000
CVTRV234 EQU   CVTRV228                                                 02245000
CVTRV233 EQU   CVTRV228                                                 02246000
CVTRV232 EQU   CVTRV228                                                 02247000
CVTRV231 EQU   CVTRV228                                                 02248000
CVTRV230 EQU   CVTRV228                                                 02249000
CVTRV229 EQU   CVTRV228                                                 02250000
CVTRV227 EQU   CVTRV219                                                 02251000
CVTRV226 EQU   CVTRV219                                                 02252000
CVTRV225 EQU   CVTRV219                                                 02253000
CVTRV224 EQU   CVTRV219                                                 02254000
CVTRV223 EQU   CVTRV219                                                 02255000
CVTRV222 EQU   CVTRV219                                                 02256000
CVTRV221 EQU   CVTRV219                                                 02257000
CVTRV220 EQU   CVTRV219                                                 02258000
CVTRV218 EQU   CVTRV210                                                 02259000
CVTRV217 EQU   CVTRV210                                                 02260000
CVTRV216 EQU   CVTRV210                                                 02261000
CVTRV215 EQU   CVTRV210                                                 02262000
CVTRV214 EQU   CVTRV210                                                 02263000
CVTRV213 EQU   CVTRV210                                                 02264000
CVTRV212 EQU   CVTRV210                                                 02265000
CVTRV211 EQU   CVTRV210                                                 02266000
CVTLCCAT EQU   CVTS01+420                                               02267000
CVTPCCAT EQU   CVTS01+416                                               02268000
CVTIPCRP EQU   CVTS01+412                                               02269000
CVTIPCRI EQU   CVTS01+408                                               02270000
CVTIPCDS EQU   CVTS01+404                                               02271000
CVTAIDVT EQU   CVTS01+400                                               02272000
CVTSSAP  EQU   CVTS01+396                                               02273000
CVTEHCIR EQU   CVTS01+392                                               02274000
CVTEHDEF EQU   CVTS01+388                                               02275000
CVTDAIR  EQU   CVTS01+384                                               02276000
CVTPERFM EQU   CVTS01+380                                               02277000
CVT044R2 EQU   CVTS01+376                                               02278000
CVTFETCH EQU   CVTS01+372                                               02279000
CVTRSTWD EQU   CVTS01+368                                               02280000
CVTSPOST EQU   CVTS01+364                                               02281000
CVTIOBP  EQU   CVTS01+360                                               02282000
CVTASMVT EQU   CVTS01+356                                               02283000
CVTRECRQ EQU   CVTS01+352                                               02284000
CVTWSAC  EQU   CVTS01+348                                               02285000
CVTWSAG  EQU   CVTS01+344                                               02286000
CVTWSAL  EQU   CVTS01+340                                               02287000
CVTSPSA  EQU   CVTS01+336                                               02288000
CVTGLMN  EQU   CVTS01+332                                               02289000
CVTVEAC0 EQU   CVTS01+328                                               02290000
CVT062R1 EQU   CVTS01+324                                               02291000
CVTRPOST EQU   CVTS01+320                                               02292000
CVTDQIQE EQU   CVTS01+316                                               02293000
CVTCSD   EQU   CVTS01+312                                               02294000
CVTLKRMA EQU   CVTS01+308                                               02295000
CVTRSPIE EQU   CVTS01+304                                               02296000
CVTRENQ  EQU   CVTS01+300                                               02297000
CVTLQCB  EQU   CVTS01+296                                               02298000
CVTFQCB  EQU   CVTS01+292                                               02299000
CVTQCS01 EQU   CVTS01+288                                               02300000
CVTAPFT  EQU   CVTS01+284                                               02301000
CVTPARRL EQU   CVTS01+280                                               02302000
CVTVWAIT EQU   CVTS01+276                                               02303000
CVTGSPL  EQU   CVTS01+272                                               02304000
CVTLSMQ  EQU   CVTS01+268                                               02305000
CVTGSMQ  EQU   CVTS01+264                                               02306000
CVTEXPRO EQU   CVTS01+260                                               02307000
CVTOPCTP EQU   CVTS01+256                                               02308000
CVTSIC   EQU   CVTS01+252                                               02309000
CVTTPIOS EQU   CVTS01+248                                               02310000
CVTRTMS  EQU   CVTS01+244                                               02311000
CVTSDBF  EQU   CVTS01+240                                               02312000
CVTSCBP  EQU   CVTS01+236                                               02313000
CVTSDMP  EQU   CVTS01+232                                               02314000
CVTSV60  EQU   CVTS01+228                                               02315000
CVTRTMCT EQU   CVTS01+224                                               02316000
CVTASCBL EQU   CVTS01+220                                               02317000
CVTASCBH EQU   CVTS01+216                                               02318000
CVTGDA   EQU   CVTS01+212                                               02319000
CVTASVT  EQU   CVTS01+208                                               02320000
CVTVVMDI EQU   CVTS01+204                                               02321000
CVTAQTOP EQU   CVTS01+200                                               02322000
CVTIOSCS EQU   CVTS01+196                                               02323000
CVTSDRM  EQU   CVTS01+192                                               02324000
CVTOPTE  EQU   CVTS01+188                                               02325000
CVTSTXU  EQU   CVTS01+184                                               02326000
CVTQUIS  EQU   CVTS01+180                                               02327000
CVTPARS  EQU   CVTS01+176                                               02328000
CVTS1EE  EQU   CVTS01+172                                               02329000
CVTFRAS  EQU   CVTS01+168                                               02330000
CVTQSAS  EQU   CVTS01+164                                               02331000
CVTCRAS  EQU   CVTS01+160                                               02332000
CVTCRMN  EQU   CVTS01+156                                               02333000
CVTDELCP EQU   CVTS01+152                                               02334000
CVTFRECL EQU   CVTS01+148                                               02335000
CVTGETCL EQU   CVTS01+144                                               02336000
CVTBLDCP EQU   CVTS01+140                                               02337000
CVTSCAN  EQU   CVTS01+132                                               02338000
CVTRV144 EQU   CVTS01+130                                               02339000
CVTMAXMP EQU   CVTS01+128                                               02340000
CVTSTCK  EQU   CVTS01+124                                               02341000
CVTRV139 EQU   CVTS01+123                                               02342000
CVTDSSAC EQU   CVTS01+122                                               02343000
CVTRV513 EQU   CVTS01+121                                               02344000
CVTIOSPL EQU   CVTS01+120                                               02345000
CVTPTGT  EQU   CVTS01+116                                               02346000
CVTCSPIE EQU   CVTS01+112                                               02347000
CVTSMFEX EQU   CVTS01+108                                               02348000
CVTOLT0A EQU   CVTS01+104                                               02349000
CVTSRBRT EQU   CVTS01+100                                               02350000
CVTPUTL  EQU   CVTS01+96                                                02351000
CVTSYSWT EQU   CVTS01+92                                                02352000
CVTRV327 EQU   CVTS01+88                                                02353000
CVTRV326 EQU   CVTS01+84                                                02354000
CVTRV325 EQU   CVTS01+80                                                02355000
CVTRV324 EQU   CVTS01+76                                                02356000
CVT0VL01 EQU   CVTS01+72                                                02357000
CVTSHRVM EQU   CVTS01+68                                                02358000
CVTRV332 EQU   CVTS01+64                                                02359000
CVTTAS   EQU   CVTS01+60                                                02360000
CVTRSCN  EQU   CVTS01+56                                                02361000
CVTTRAC2 EQU   CVTS01+54                                                02362000
CVTTRACE EQU   CVTS01+52                                                02363000
CVTAPG   EQU   CVTS01+51                                                02364000
CVTSDTRC EQU   CVTCTLFG                                                 02365000
CVTGTRCE EQU   CVTCTLFG                                                 02366000
CVTNOMP  EQU   CVTCTLFG                                                 02367000
CVTRSV79 EQU   CVTCTLFG                                                 02368000
CVTDSTAT EQU   CVTCTLFG                                                 02369000
CVTRSV78 EQU   CVTCTLFG                                                 02370000
CVTRV333 EQU   CVTCTLFG                                                 02371000
CVTRV323 EQU   CVTCTLFG                                                 02372000
CVTSPVLK EQU   CVTS01+49                                                02373000
CVTRSV77 EQU   CVTS01+48                                                02374000
CVTRV331 EQU   CVTS01+44                                                02375000
CVTRV330 EQU   CVTS01+40                                                02376000
CVTRV329 EQU   CVTS01+36                                                02377000
CVTRV328 EQU   CVTS01+32                                                02378000
CVTRV322 EQU   CVTS01+28                                                02379000
CVTSLID  EQU   CVTSLIDA+1                                               02380000
CVTSYLK  EQU   CVTSLIDA                                                 02381000
CVTRV321 EQU   CVTS01+20                                                02382000
CVTRV320 EQU   CVTS01+16                                                02383000
CVTLPDIR EQU   CVTLPDIA+1                                               02384000
CVTRSV69 EQU   CVTDIRST                                                 02385000
CVTRSV68 EQU   CVTDIRST                                                 02386000
CVTRSV67 EQU   CVTDIRST                                                 02387000
CVTRSV66 EQU   CVTDIRST                                                 02388000
CVTRSV65 EQU   CVTDIRST                                                 02389000
CVTRSV64 EQU   CVTDIRST                                                 02390000
CVTRSV63 EQU   CVTDIRST                                                 02391000
CVTDICOM EQU   CVTDIRST                                                 02392000
CVTPVTP  EQU   CVTS01+8                                                 02393000
CVTLPDSR EQU   CVTS01+4                                                 02394000
CVTGETL  EQU   CVTS01                                                   02395000
UCBRV042 EQU   UCBOBS08+5                                               02396000
UCBCTCF1 EQU   UCBOBS08+4                                               02397000
UCBCTCAD EQU   UCBOBS08                                                 02398000
UCBICNCB EQU   UCBOBS07+4                                               02399000
UCBRV040 EQU   UCBOBS07                                                 02400000
UCBCTLNA EQU   UCBCTLNK+1                                               02401000
UCBRLN   EQU   UCBCTLNK                                                 02402000
UCBRDYQA EQU   UCBLDNCB                                                 02403000
UCBINRLN EQU   UCBIRLN                                                  02404000
UCBIRBA  EQU   UCBIRB+1                                                 02405000
UCBRV039 EQU   UCBGRAF                                                  02406000
UCBDWNR  EQU   UCBGRAF                                                  02407000
UCBRPND  EQU   UCBGRAF                                                  02408000
UCBUPM   EQU   UCBGRAF                                                  02409000
UCBBTAM  EQU   UCBGRAF                                                  02410000
UCBDRNO  EQU   UCBGRAF                                                  02411000
UCBDRO   EQU   UCBGRAF                                                  02412000
UCBOIP   EQU   UCBGRAF                                                  02413000
UCBATRCD EQU   @NM00059                                                 02414000
UCBSKPFG EQU   @NM00059                                                 02415000
UCBRIPND EQU   @NM00059                                                 02416000
UCBRTIAC EQU   @NM00059                                                 02417000
UCBRSV79 EQU   @NM00059                                                 02418000
UCBRSV78 EQU   @NM00059                                                 02419000
UCBRSV77 EQU   @NM00059                                                 02420000
UCBOLTEP EQU   @NM00059                                                 02421000
UCBATNCT EQU   UCBOBS06+2                                               02422000
UCBRSV76 EQU   UCBAOF2                                                  02423000
UCBRSV75 EQU   UCBAOF2                                                  02424000
UCBRSV74 EQU   UCBAOF2                                                  02425000
UCBRSV73 EQU   UCBAOF2                                                  02426000
UCBRSV72 EQU   UCBAOF2                                                  02427000
UCBRSV71 EQU   UCBAOF2                                                  02428000
UCBRSV70 EQU   UCBAOF2                                                  02429000
UCBRSV69 EQU   UCBAOF2                                                  02430000
UCBRSV68 EQU   UCBAOF1                                                  02431000
UCBRSV67 EQU   UCBAOF1                                                  02432000
UCBRSV66 EQU   UCBAOF1                                                  02433000
UCBRSV65 EQU   UCBAOF1                                                  02434000
UCBRSV64 EQU   UCBAOF1                                                  02435000
UCBOFNL  EQU   UCBAOF1                                                  02436000
UCBOFSP  EQU   UCBAOF1                                                  02437000
UCBOFMCR EQU   UCBAOF1                                                  02438000
UCBBTB   EQU   UCBBTA+1                                                 02439000
UCBDI    EQU   UCBBTA                                                   02440000
UCBSNS   EQU   UCBOBS04+8                                               02441000
UCBTEB   EQU   UCBOBS04+4                                               02442000
UCBGCB   EQU   UCBOBS04+3                                               02443000
UCBOPEN  EQU   UCBOBS04+2                                               02444000
UCBSTART EQU   UCBOBS04                                                 02445000
UCBXTNB  EQU   UCBXTN+1                                                 02446000
UCBRSV22 EQU   UCBVOPT                                                  02447000
UCBRSV21 EQU   UCBVOPT                                                  02448000
UCBRSV20 EQU   UCBVOPT                                                  02449000
UCBESVE  EQU   UCBVOPT                                                  02450000
UCBERPC  EQU   UCBVOPT                                                  02451000
UCBESVC  EQU   UCBVOPT                                                  02452000
UCBEVA   EQU   UCBVOPT                                                  02453000
UCBESV   EQU   UCBVOPT                                                  02454000
UCBRV009 EQU   UCBTFL1                                                  02455000
UCBRV008 EQU   UCBTFL1                                                  02456000
UCBRV007 EQU   UCBTFL1                                                  02457000
UCBRV006 EQU   UCBTFL1                                                  02458000
UCBRV005 EQU   UCBTFL1                                                  02459000
UCBRV038 EQU   UCBTFL1                                                  02460000
UCBNSLTP EQU   UCBTFL1                                                  02461000
UCBNLTP  EQU   UCBTFL1                                                  02462000
UCBRES1B EQU   UCBOBS02+18                                              02463000
UCBFSER  EQU   UCBOBS02+12                                              02464000
@NM00058 EQU   UCBOBS02+4                                               02465000
UCBFSEQ  EQU   UCBOBS02+2                                               02466000
UCBFSCT  EQU   UCBOBS02                                                 02467000
UCBNEXP  EQU   UCBOBS01+20                                              02468000
UCBBASE  EQU   UCBOBS01+16                                              02469000
UCBRES1A EQU   UCBOBS01+15                                              02470000
UCBUSER  EQU   UCBOBS01+14                                              02471000
UCBFL47  EQU   UCBFL4                                                   02472000
UCBFL46  EQU   UCBFL4                                                   02473000
UCBFL45  EQU   UCBFL4                                                   02474000
UCBFL44  EQU   UCBFL4                                                   02475000
UCBDSS   EQU   UCBFL4                                                   02476000
UCBRV028 EQU   UCBFL4                                                   02477000
UCBWDAV  EQU   UCBFL4                                                   02478000
UCBDAVV  EQU   UCBFL4                                                   02479000
UCBSQC   EQU   UCBOBS01+12                                              02480000
UCBDATP  EQU   UCBOBS01+12                                              02481000
UCBDMC   EQU   UCBDMCT                                                  02482000
UCBMOUNT EQU   UCBDMCT                                                  02483000
UCBBNUL  EQU   UCBSTAB                                                  02484000
UCBSHAR  EQU   UCBSTAB                                                  02485000
UCBBSTR  EQU   UCBSTAB                                                  02486000
UCBBPUB  EQU   UCBSTAB                                                  02487000
UCBBPRV  EQU   UCBSTAB                                                  02488000
UCBBALB  EQU   UCBPRSRS                                                 02489000
UCBPGFL  EQU   UCBSTAB                                                  02490000
UCBDVSHR EQU   UCBBSVL                                                  02491000
UCBVTOC  EQU   UCBOBS01                                                 02492000
DEBEXPTA EQU   DEBEXPT+1                                                02493000
DEBRSV12 EQU   DEBRPSID                                                 02494000
DEBRSV11 EQU   DEBRPSID                                                 02495000
DEBRSV10 EQU   DEBRPSID                                                 02496000
DEBRSV09 EQU   DEBRPSID                                                 02497000
DEBRPSAP EQU   DEBRPSID                                                 02498000
DEBRPSO  EQU   DEBRPSID                                                 02499000
DEBRPSI  EQU   DEBRPSID                                                 02500000
DEBRPSP  EQU   DEBRPSID                                                 02501000
DEBFOEB  EQU   DEBFOEAD+1                                               02502000
DEBNOEE  EQU   DEBFOEAD                                                 02503000
DEBFPEB  EQU   DEBFPEAD+1                                               02504000
DEBNPEE  EQU   DEBFPEAD                                                 02505000
DEBFIEB  EQU   DEBFIEAD+1                                               02506000
DEBNIEE  EQU   DEBFIEAD                                                 02507000
DEBWDCBA EQU   DEBWDCB+1                                                02508000
DEBRSV08 EQU   DEBWDCB                                                  02509000
DEBPDCBA EQU   DEBPDCB+1                                                02510000
DEBRSV07 EQU   DEBPDCB                                                  02511000
DEBRDCBA EQU   DEBRDCB+1                                                02512000
DEBRSV06 EQU   DEBRDCB                                                  02513000
DEBSUCBB EQU   DEBSUCBA+1                                               02514000
DEBSDVM  EQU   DEBSUCBA                                                 02515000
IOBCSWSV EQU   IOBORG11+17                                              02516000
IOBSENSV EQU   IOBORG11+16                                              02517000
IOBRCD   EQU   IOBORG11+12                                              02518000
IOBMDREC EQU   IOBORG11+8                                               02519000
IOBNAMEA EQU   IOBNAME+1                                                02520000
IOBNAMSZ EQU   IOBNAME                                                  02521000
IOBERCTA EQU   IOBERCT+1                                                02522000
IOBRTYPE EQU   IOBUCBXV                                                 02523000
IOBRDCHP EQU   IOBORG10+20                                              02524000
IOBNEXTA EQU   IOBORG10+16                                              02525000
IOBREADA EQU   IOBORG10+12                                              02526000
IOBBUFC  EQU   IOBORG10+8                                               02527000
IOBSK2R  EQU   IOBSEEK2+7                                               02528000
IOBSK2HH EQU   IOBSEEK2+5                                               02529000
IOBSK2CC EQU   IOBSEEK2+3                                               02530000
IOBSK2BB EQU   IOBSEEK2+1                                               02531000
IOBSK2M  EQU   IOBSEEK2                                                 02532000
IOBCHNPR EQU   IOBORG09+40                                              02533000
IOBDNCRF EQU   IOBORG09+32                                              02534000
IOBRSV35 EQU   IOBORG09+24                                              02535000
IOBDQPTR EQU   IOBORG09+20                                              02536000
IOBRSV34 EQU   IOBORG09+18                                              02537000
IOBDBYTN EQU   IOBORG09+16                                              02538000
IOBDCPND EQU   IOBORG09+12                                              02539000
IOBSTAT2 EQU   IOBDSTAT+1                                               02540000
IOBSIORT EQU   IOBSTAT1                                                 02541000
IOBADDVU EQU   IOBSTAT1                                                 02542000
IOBBUFF  EQU   IOBSTAT1                                                 02543000
IOBENQUE EQU   IOBSTAT1                                                 02544000
IOBPASS2 EQU   IOBSTAT1                                                 02545000
IOBSYNCH EQU   IOBSTAT1                                                 02546000
IOBNEWVL EQU   IOBSTAT1                                                 02547000
IOBABNRM EQU   IOBSTAT1                                                 02548000
IOBRELEX EQU   IOBDTYP2                                                 02549000
IOBADDTY EQU   IOBDTYP2                                                 02550000
IOBTYPE  EQU   IOBDTYP2                                                 02551000
IOBRQUST EQU   IOBDTYP2                                                 02552000
IOBSUFFX EQU   IOBDTYP2                                                 02553000
IOBSBLKL EQU   IOBDTYP2                                                 02554000
IOBSKEY  EQU   IOBDTYP2                                                 02555000
IOBRELBL EQU   IOBDTYPE                                                 02556000
IOBRDEXC EQU   IOBDTYPE                                                 02557000
IOBDYNBF EQU   IOBDTYPE                                                 02558000
IOBACTAD EQU   IOBDTYPE                                                 02559000
IOBFDBCK EQU   IOBDTYPE                                                 02560000
IOBEXTSC EQU   IOBDTYPE                                                 02561000
IOBOVFLO EQU   IOBDTYPE                                                 02562000
IOBVERFY EQU   IOBDTYPE                                                 02563000
IOBDPLB  EQU   IOBDPLAD+1                                               02564000
IOBDAYLI EQU   IOBDPLAD                                                 02565000
IOBDIOBS EQU   IOBORG09+2                                               02566000
IOBDBYTR EQU   IOBORG09                                                 02567000
IOBBCHAD EQU   IOBORG08+12                                              02568000
IOBFCHNB EQU   IOBFCHAD+1                                               02569000
IOBCOUNT EQU   IOBFCHAD                                                 02570000
IOBASYN  EQU   IOBORG08+7                                               02571000
IOBAPP   EQU   IOBORG08+6                                               02572000
IOBRSV32 EQU   IOBUNSQR                                                 02573000
IOBRSV31 EQU   IOBUNSQR                                                 02574000
IOBRSV30 EQU   IOBUNSQR                                                 02575000
IOBKNRWR EQU   IOBUNSQR                                                 02576000
IOBKNWR  EQU   IOBUNSQR                                                 02577000
IOBNTAV2 EQU   IOBUNSQR                                                 02578000
IOBNTAV1 EQU   IOBUNSQR                                                 02579000
IOBCPBSY EQU   IOBUNSQR                                                 02580000
IOBCHNNL EQU   IOBINDCT                                                 02581000
IOBRSV29 EQU   IOBINDCT                                                 02582000
IOBRSV28 EQU   IOBINDCT                                                 02583000
IOBRSV27 EQU   IOBINDCT                                                 02584000
IOBKEYAD EQU   IOBINDCT                                                 02585000
IOBOVPTR EQU   IOBINDCT                                                 02586000
IOBUNSCH EQU   IOBINDCT                                                 02587000
IOBDEQCP EQU   IOBINDCT                                                 02588000
IOBCCWAD EQU   IOBORG08                                                 02589000
W1OEXTEN EQU   W1IEXTEN                                                 02590000
IOBCCW   EQU   IOBORG06+8                                               02591000
IOBNXTPB EQU   IOBNXTPT+1                                               02592000
IOBRSV26 EQU   IOBSTATA                                                 02593000
IOBRSV25 EQU   IOBSTATA                                                 02594000
IOBRSV24 EQU   IOBSTATA                                                 02595000
IOBRSV23 EQU   IOBSTATA                                                 02596000
IOBRSV22 EQU   IOBSTATA                                                 02597000
IOBRSV21 EQU   IOBSTATA                                                 02598000
IOBRSV20 EQU   IOBSTATA                                                 02599000
IOBAVLFL EQU   IOBSTATA                                                 02600000
IOBRSV37 EQU   IOBORG06+1                                               02601000
IOBUCBXG EQU   IOBORG06                                                 02602000
IOBCPA   EQU   IOBORG05+32                                              02603000
IOBERINF EQU   IOBORG05+16                                              02604000
IOBERCCW EQU   IOBORG05+8                                               02605000
IOBSNDPT EQU   IOBORG05+7                                               02606000
IOBRCVPT EQU   IOBORG05+6                                               02607000
IOBWORK  EQU   IOBORG05+1                                               02608000
IOBUCBX  EQU   IOBORG05                                                 02609000
IOBR     EQU   IOBSEEK+7                                                02610000
IOBHH2   EQU   IOBHH+1                                                  02611000
IOBHH1   EQU   IOBHH                                                    02612000
IOBCC2   EQU   IOBCC+1                                                  02613000
IOBCC1   EQU   IOBCC                                                    02614000
IOBBB2   EQU   IOBBB+1                                                  02615000
IOBBB1   EQU   IOBBB                                                    02616000
IOBM     EQU   IOBSEEK                                                  02617000
IOBRSV46 EQU   IOBFL4                                                   02618000
IOBRSV47 EQU   IOBFL4                                                   02619000
IOBENT   EQU   IOBFL4                                                   02620000
IOBEQP   EQU   IOBFL4                                                   02621000
IOBBUS   EQU   IOBFL4                                                   02622000
IOBDCK   EQU   IOBFL4                                                   02623000
IOBREJ   EQU   IOBFL4                                                   02624000
IOBOVR   EQU   IOBFL4                                                   02625000
IOBCRILC EQU   IOBORG04+1                                               02626000
IOBCRDCC EQU   IOBORG04                                                 02627000
IOBGQECB EQU   IOBORG03                                                 02628000
IOBSWAP  EQU   IOBORG02+4                                               02629000
IOBDQADB EQU   IOBDQADA+1                                               02630000
IOBRSV13 EQU   IOBDEQIN                                                 02631000
IOBRSV12 EQU   IOBDEQIN                                                 02632000
IOBRSV11 EQU   IOBDEQIN                                                 02633000
IOBRSV10 EQU   IOBDEQIN                                                 02634000
IOBRSV09 EQU   IOBDEQIN                                                 02635000
IOBRSV08 EQU   IOBDEQIN                                                 02636000
IOBRSV07 EQU   IOBDEQIN                                                 02637000
IOBDEQ   EQU   IOBDEQIN                                                 02638000
IOBNECB  EQU   IOBORG01+4                                               02639000
IOBNIOBB EQU   IOBNIOBA+1                                               02640000
IOBFIRST EQU   IOBNFLG1                                                 02641000
IOBUPERR EQU   IOBNFLG1                                                 02642000
IOBSPAN  EQU   IOBNFLG1                                                 02643000
IOBBKSPC EQU   IOBNFLG1                                                 02644000
IOBUPDAT EQU   IOBNFLG1                                                 02645000
IOBREAD  EQU   IOBNFLG1                                                 02646000
IOBWRITE EQU   IOBNFLG1                                                 02647000
IOBPRTOV EQU   IOBNFLG1                                                 02648000
@NM00081 EQU   NIPPMCSW+4                                               02649000
@NM00080 EQU   NIPPMCSW                                                 02650000
CVTLEVL  EQU   CVTRELNO+2                                               02651000
CVTNUMB  EQU   CVTRELNO                                                 02652000
CVTMDL   EQU   CVTFIX+250                                               02653000
@NM00079 EQU   CVTFIX+248                                               02654000
@NM00078 EQU   CVTFIX                                                   02655000
CVTRV482 EQU   CVTXTNT2+128                                             02656000
CVTRV481 EQU   CVTXTNT2+124                                             02657000
CVTRV480 EQU   CVTXTNT2+120                                             02658000
CVTRV479 EQU   CVTXTNT2+118                                             02659000
CVTRV478 EQU   CVTXTNT2+117                                             02660000
CVTRV477 EQU   CVTXTNT2+116                                             02661000
CVTRV476 EQU   CVTXTNT2+115                                             02662000
CVTRV475 EQU   CVTXTNT2+114                                             02663000
CVTRV474 EQU   CVTRV466                                                 02664000
CVTRV473 EQU   CVTRV466                                                 02665000
CVTRV472 EQU   CVTRV466                                                 02666000
CVTRV471 EQU   CVTRV466                                                 02667000
CVTRV470 EQU   CVTRV466                                                 02668000
CVTRV469 EQU   CVTRV466                                                 02669000
CVTRV468 EQU   CVTRV466                                                 02670000
CVTRV467 EQU   CVTRV466                                                 02671000
CVTRV465 EQU   CVTRV457                                                 02672000
CVTRV464 EQU   CVTRV457                                                 02673000
CVTRV463 EQU   CVTRV457                                                 02674000
CVTRV462 EQU   CVTRV457                                                 02675000
CVTRV461 EQU   CVTRV457                                                 02676000
CVTRV460 EQU   CVTRV457                                                 02677000
CVTRV459 EQU   CVTRV457                                                 02678000
CVTRV458 EQU   CVTRV457                                                 02679000
CVTRV456 EQU   CVTXTNT2+108                                             02680000
CVTRV455 EQU   CVTXTNT2+104                                             02681000
CVTRV454 EQU   CVTXTNT2+100                                             02682000
CVTRV453 EQU   CVTXTNT2+96                                              02683000
CVTRV452 EQU   CVTXTNT2+94                                              02684000
CVTRV451 EQU   CVTXTNT2+92                                              02685000
CVTRV450 EQU   CVTXTNT2+90                                              02686000
CVTRV449 EQU   CVTXTNT2+88                                              02687000
CVTRV448 EQU   CVTXTNT2+87                                              02688000
CVTRV447 EQU   CVTXTNT2+86                                              02689000
CVTRV446 EQU   CVTRV438                                                 02690000
CVTRV445 EQU   CVTRV438                                                 02691000
CVTRV444 EQU   CVTRV438                                                 02692000
CVTRV443 EQU   CVTRV438                                                 02693000
CVTRV442 EQU   CVTRV438                                                 02694000
CVTRV441 EQU   CVTRV438                                                 02695000
CVTRV440 EQU   CVTRV438                                                 02696000
CVTRV439 EQU   CVTRV438                                                 02697000
CVTRV437 EQU   CVTRV429                                                 02698000
CVTRV436 EQU   CVTRV429                                                 02699000
CVTRV435 EQU   CVTRV429                                                 02700000
CVTRV434 EQU   CVTRV429                                                 02701000
CVTRV433 EQU   CVTRV429                                                 02702000
CVTRV432 EQU   CVTRV429                                                 02703000
CVTRV431 EQU   CVTRV429                                                 02704000
CVTRV430 EQU   CVTRV429                                                 02705000
CVTRV428 EQU   CVTXTNT2+80                                              02706000
CVTRV427 EQU   CVTXTNT2+76                                              02707000
CVTRV426 EQU   CVTXTNT2+72                                              02708000
CVTRV425 EQU   CVTXTNT2+68                                              02709000
CVTATACT EQU   CVTATCVT                                                 02710000
CVTRV423 EQU   CVTXTNT2+62                                              02711000
CVTRV422 EQU   CVTXTNT2+60                                              02712000
CVTRV421 EQU   CVTXTNT2+58                                              02713000
CVTRV420 EQU   CVTXTNT2+56                                              02714000
CVTRV419 EQU   CVTXTNT2+55                                              02715000
CVTRV418 EQU   CVTXTNT2+54                                              02716000
CVTRV417 EQU   CVTRV409                                                 02717000
CVTRV416 EQU   CVTRV409                                                 02718000
CVTRV415 EQU   CVTRV409                                                 02719000
CVTRV414 EQU   CVTRV409                                                 02720000
CVTRV413 EQU   CVTRV409                                                 02721000
CVTRV412 EQU   CVTRV409                                                 02722000
CVTRV411 EQU   CVTRV409                                                 02723000
CVTRV410 EQU   CVTRV409                                                 02724000
CVTRV408 EQU   CVTRV400                                                 02725000
CVTRV407 EQU   CVTRV400                                                 02726000
CVTRV406 EQU   CVTRV400                                                 02727000
CVTRV405 EQU   CVTRV400                                                 02728000
CVTRV404 EQU   CVTRV400                                                 02729000
CVTRV403 EQU   CVTRV400                                                 02730000
CVTRV402 EQU   CVTRV400                                                 02731000
CVTRV401 EQU   CVTRV400                                                 02732000
CVTRSVA1 EQU   CVTXTNT2+48                                              02733000
CVTRSVA0 EQU   CVTXTNT2+44                                              02734000
CVTRSV99 EQU   CVTXTNT2+40                                              02735000
CVTRSV98 EQU   CVTXTNT2+36                                              02736000
CVTRSV97 EQU   CVTXTNT2+34                                              02737000
CVTRSV96 EQU   CVTXTNT2+32                                              02738000
CVTOLTEP EQU   CVTXTNT2+28                                              02739000
CVTQIDA  EQU   CVTQID+1                                                 02740000
CVTRSV95 EQU   CVTQID                                                   02741000
CVTRSV94 EQU   CVTXTNT2+20                                              02742000
CVTRSV93 EQU   CVTXTNT2+16                                              02743000
CVTRSV92 EQU   CVTXTNT2+12                                              02744000
CVTDEBVR EQU   CVTXTNT2+8                                               02745000
CVTRSV91 EQU   CVTXTNT2+6                                               02746000
CVTRSV9H EQU   CVTRSV90                                                 02747000
CVTRSV9G EQU   CVTRSV90                                                 02748000
CVTRSV9F EQU   CVTRSV90                                                 02749000
CVTRSV9E EQU   CVTRSV90                                                 02750000
CVTRSV9D EQU   CVTRSV90                                                 02751000
CVTRSV9C EQU   CVTRSV90                                                 02752000
CVTRSV9B EQU   CVTRSV90                                                 02753000
CVTRSV9A EQU   CVTRSV90                                                 02754000
CVTNUCLS EQU   CVTXTNT2+4                                               02755000
CVTDSSVA EQU   CVTDSSV+1                                                02756000
CVTRSV89 EQU   CVTDSSV                                                  02757000
CVTRSV88 EQU   CVTXTNT1+8                                               02758000
CVTRSV87 EQU   CVTXTNT1+4                                               02759000
CVTFACHN EQU   CVTXTNT1                                                 02760000
CVTRV488 EQU   CVTMAP+412                                               02761000
CVTRV487 EQU   CVTMAP+408                                               02762000
CVTRV486 EQU   CVTMAP+404                                               02763000
CVTRV485 EQU   CVTMAP+400                                               02764000
CVTRV484 EQU   CVTMAP+396                                               02765000
CVTAUTH  EQU   CVTMAP+392                                               02766000
CVTATMCA EQU   CVTATMCT+1                                               02767000
CVTATMST EQU   CVTATMCT                                                 02768000
CVTRSV61 EQU   CVTMAP+384                                               02769000
CVTVOLT1 EQU   CVTVOLM1+1                                               02770000
CVTVOLI1 EQU   CVTVOLF1                                                 02771000
CVTSTOA  EQU   CVTMAP+376                                               02772000
CVTRSV58 EQU   CVTMAP+374                                               02773000
CVTRSV57 EQU   CVTMAP+372                                               02774000
CVTDDCE  EQU   CVTMAP+368                                               02775000
CVTPNWFR EQU   CVTMAP+364                                               02776000
CVTSMF   EQU   CVTMAP+360                                               02777000
CVTSULK  EQU   CVTMAP+358                                               02778000
CVTSLKO  EQU   CVTSYSK                                                  02779000
CVTSLKP  EQU   CVTSYSK                                                  02780000
CVTSLKQ  EQU   CVTSYSK                                                  02781000
CVTSLKR  EQU   CVTSYSK                                                  02782000
CVTRSV56 EQU   CVTSYSK                                                  02783000
CVTRSV55 EQU   CVTSYSK                                                  02784000
CVTRSV54 EQU   CVTSYSK                                                  02785000
CVTRSV53 EQU   CVTSYSK                                                  02786000
CVTRSV52 EQU   CVTA1F1                                                  02787000
CVTRSV51 EQU   CVTA1F1                                                  02788000
CVTRSV50 EQU   CVTA1F1                                                  02789000
CVTRSV49 EQU   CVTA1F1                                                  02790000
CVTRSV48 EQU   CVTA1F1                                                  02791000
CVTRSV47 EQU   CVTA1F1                                                  02792000
CVTSRSW  EQU   CVTA1F1                                                  02793000
CVTPFSW  EQU   CVTA1F1                                                  02794000
CVTPCVT  EQU   CVTMAP+352                                               02795000
CVTRSV46 EQU   CVTMAP+344                                               02796000
CVTRSV45 EQU   CVTMAP+340                                               02797000
CVTRSV44 EQU   CVTMAP+338                                               02798000
CVTRSV43 EQU   CVTMAP+336                                               02799000
CVTHJESA EQU   CVTHJES+1                                                02800000
CVTRSV42 EQU   CVTHJES                                                  02801000
CVTEXT2A EQU   CVTEXT2+1                                                02802000
CVTRSV41 EQU   CVTEXT2                                                  02803000
CVTAPFA  EQU   CVTAPF+1                                                 02804000
CVTRSV40 EQU   CVTAPF                                                   02805000
CVTINTLA EQU   CVTMAP+320                                               02806000
CVTERPV  EQU   CVTMAP+316                                               02807000
CVTEORM  EQU   CVTMAP+312                                               02808000
CVTMCHPR EQU   CVTMAP+308                                               02809000
CVTTZ    EQU   CVTMAP+304                                               02810000
CVTJEPS  EQU   CVTMAP+300                                               02811000
CVTJESCT EQU   CVTMAP+296                                               02812000
CVTMODE  EQU   CVTMAP+292                                               02813000
CVTPTRV  EQU   CVTMAP+288                                               02814000
CVTREAL  EQU   CVTMAP+284                                               02815000
CVTRSV39 EQU   CVTMAP+280                                               02816000
CVTRSV38 EQU   CVTMAP+276                                               02817000
CVTDMSRA EQU   CVTDMSR+1                                                02818000
CVTRSV37 EQU   CVTDMSR                                                  02819000
CVTQMSGA EQU   CVTQMSG+1                                                02820000
CVTRSV36 EQU   CVTQMSG                                                  02821000
CVTAMFF  EQU   CVTMAP+264                                               02822000
CVTPURGA EQU   CVTPURG+1                                                02823000
CVTRSV35 EQU   CVTPURG                                                  02824000
CVTCBSP  EQU   CVTMAP+256                                               02825000
CVTATERA EQU   CVTATER+1                                                02826000
CVTSYST  EQU   CVTATER                                                  02827000
CVTVOLT2 EQU   CVTTAT                                                   02828000
CVTVOLI2 EQU   CVTVOLF2                                                 02829000
CVTAQAVB EQU   CVTAQAVT+1                                               02830000
CVTRSV34 EQU   CVTTCMFG                                                 02831000
CVTRSV33 EQU   CVTTCMFG                                                 02832000
CVTRSV32 EQU   CVTTCMFG                                                 02833000
CVTRSV31 EQU   CVTTCMFG                                                 02834000
CVTRSV30 EQU   CVTTCMFG                                                 02835000
CVTRSV29 EQU   CVTTCMFG                                                 02836000
CVTRSV28 EQU   CVTTCMFG                                                 02837000
CVTTCRDY EQU   CVTTCMFG                                                 02838000
CVTGTFA  EQU   CVTGTF+1                                                 02839000
CVTRSV27 EQU   CVTGTFST                                                 02840000
CVTRNIO  EQU   CVTGTFST                                                 02841000
CVTRV319 EQU   CVTUSR                                                   02842000
CVTRV318 EQU   CVTFORM                                                  02843000
CVTRV317 EQU   CVTTMODE                                                 02844000
CVTRV316 EQU   CVTSTATE                                                 02845000
CVTRV315 EQU   CVTGTFS                                                  02846000
CVTGTFAV EQU   CVTGTFS                                                  02847000
CVT0SCR1 EQU   CVTMAP+232                                               02848000
CVTRV515 EQU   CVTMAP+228                                               02849000
CVTRMS   EQU   CVTMAP+224                                               02850000
CVTPATCH EQU   CVTMAP+220                                               02851000
CVTTSCE  EQU   CVTMAP+216                                               02852000
CVTLNKSC EQU   CVTMAP+214                                               02853000
CVTQABST EQU   CVTMAP+212                                               02854000
CVTMDLDS EQU   CVTMAP+208                                               02855000
CVTUSER  EQU   CVTMAP+204                                               02856000
CVTABEND EQU   CVTMAP+200                                               02857000
CVTSMCA  EQU   CVTMAP+196                                               02858000
CVTRSV18 EQU   CVTMAP+192                                               02859000
CVTQLPAQ EQU   CVTMAP+188                                               02860000
CVTQCDSR EQU   CVTMAP+184                                               02861000
CVTRSV17 EQU   CVTOPTB                                                  02862000
CVTRSV16 EQU   CVTOPTB                                                  02863000
CVTFP    EQU   CVTOPTB                                                  02864000
CVTAPTHR EQU   CVTOPTB                                                  02865000
CVTNLOG  EQU   CVTOPTB                                                  02866000
CVTTOD   EQU   CVTOPTB                                                  02867000
CVTCTIMS EQU   CVTOPTB                                                  02868000
CVTPROT  EQU   CVTOPTB                                                  02869000
CVTXPFP  EQU   CVTOPTA                                                  02870000
CVTASCII EQU   CVTOPTA                                                  02871000
CVTRSV13 EQU   CVTOPTA                                                  02872000
CVTRSV12 EQU   CVTOPTA                                                  02873000
CVTNIP   EQU   CVTOPTA                                                  02874000
CVTDDR   EQU   CVTOPTA                                                  02875000
CVTAPR   EQU   CVTOPTA                                                  02876000
CVTCCH   EQU   CVTOPTA                                                  02877000
CVTSNCTR EQU   CVTMAP+180                                               02878000
CVTQMWR  EQU   CVTMAP+176                                               02879000
CVTQOCR  EQU   CVTMAP+172                                               02880000
CVT1EF00 EQU   CVTMAP+168                                               02881000
CVTMZ00  EQU   CVTMAP+164                                               02882000
CVTHEAD  EQU   CVTMAP+160                                               02883000
CVTRSV11 EQU   CVTMAP+156                                               02884000
CVT0PT01 EQU   CVTMAP+152                                               02885000
CVTMSER  EQU   CVTMAP+148                                               02886000
CVTIERLC EQU   CVTMAP+144                                               02887000
CVTILCH  EQU   CVTMAP+140                                               02888000
CVT0DS   EQU   CVTMAP+136                                               02889000
CVTFBOSV EQU   CVTMAP+132                                               02890000
CVTNUCB  EQU   CVTMAP+128                                               02891000
CVTIXAVL EQU   CVTMAP+124                                               02892000
CVTIOQET EQU   CVTMAP+120                                               02893000
CVTDCBA  EQU   CVTMAP+117                                               02894000
CVTMVS2  EQU   CVTDCB                                                   02895000
CVT6DAT  EQU   CVTDCB                                                   02896000
CVT4MPS  EQU   CVTDCB                                                   02897000
CVTRSV09 EQU   CVTDCB                                                   02898000
CVT4MS1  EQU   CVTDCB                                                   02899000
CVT2SPS  EQU   CVTDCB                                                   02900000
CVT1SSS  EQU   CVTDCB                                                   02901000
CVTRSV08 EQU   CVTDCB                                                   02902000
CVTSTB   EQU   CVTMAP+112                                               02903000
CVTQTD00 EQU   CVTMAP+108                                               02904000
CVTQTE00 EQU   CVTMAP+104                                               02905000
CVTCUCB  EQU   CVTMAP+100                                               02906000
CVTSJQ   EQU   CVTMAP+96                                                02907000
CVTPBLDL EQU   CVTMAP+92                                                02908000
CVTTPC   EQU   CVTMAP+88                                                02909000
CVTBRET  EQU   CVTMAP+82                                                02910000
CVTEXIT  EQU   CVTMAP+80                                                02911000
CVT0FN00 EQU   CVTMAP+76                                                02912000
CVTDARA  EQU   CVTDAR+1                                                 02913000
CVTRSV07 EQU   CVTFLGS1                                                 02914000
CVTRSV06 EQU   CVTFLGS1                                                 02915000
CVTRSV05 EQU   CVTFLGS1                                                 02916000
CVTRSV04 EQU   CVTFLGS1                                                 02917000
CVTRSV03 EQU   CVTFLGS1                                                 02918000
CVTRSV02 EQU   CVTFLGS1                                                 02919000
CVTRSV01 EQU   CVTFLGS1                                                 02920000
CVTDMPLK EQU   CVTFLGS1                                                 02921000
CVTXITP  EQU   CVTMAP+68                                                02922000
CVTZDTAB EQU   CVTMAP+64                                                02923000
CVTMSLT  EQU   CVTMAP+60                                                02924000
CVTDATE  EQU   CVTMAP+56                                                02925000
CVTBTERM EQU   CVTMAP+52                                                02926000
CVTSYSAD EQU   CVTMAP+48                                                02927000
CVTXTLER EQU   CVTMAP+44                                                02928000
CVTILK2  EQU   CVTMAP+40                                                02929000
CVTILK1  EQU   CVTMAP+36                                                02930000
CVTPRLTV EQU   CVTMAP+32                                                02931000
CVT0VL00 EQU   CVTMAP+24                                                02932000
CVTXAPG  EQU   CVTMAP+20                                                02933000
CVTBUF   EQU   CVTMAP+16                                                02934000
CVTJOB   EQU   CVTMAP+12                                                02935000
CVT0EF00 EQU   CVTMAP+4                                                 02936000
CVTTCBP  EQU   CVTMAP                                                   02937000
CVT      EQU   CVTMAP                                                   02938000
NVTRMSG  EQU   NVT+540                                                  02939000
NVTRLOCK EQU   NVT+536                                                  02940000
NVTRCODE EQU   NVT+532                                                  02941000
@NM00077 EQU   NVT+529                                                  02942000
@NM00076 EQU   NVTFLPO                                                  02943000
NVTFLWS  EQU   NVTFLPO                                                  02944000
NVTFLQS  EQU   NVTFLPO                                                  02945000
@NM00075 EQU   NVTFLPO                                                  02946000
NVTSYSP  EQU   NVTFLPO                                                  02947000
NVTFLLST EQU   NVTFLPO                                                  02948000
NVTAPQE  EQU   NVT+524                                                  02949000
NVTFBQE2 EQU   NVT+520                                                  02950000
NVTFBQE1 EQU   NVT+516                                                  02951000
@NM00074 EQU   NVT+512                                                  02952000
NVTREALR EQU   NVT+508                                                  02953000
NVTFASVT EQU   NVT+504                                                  02954000
NVTLPALG EQU   NVT+496                                                  02955000
NVTVRLNG EQU   NVT+492                                                  02956000
NVTVRREG EQU   NVT+488                                                  02957000
NVTLVIRT EQU   NVT+484                                                  02958000
NVTDIRA  EQU   NVT+480                                                  02959000
NVTLPAND EQU   NVT+476                                                  02960000
NVTRMSS  EQU   NVT+472                                                  02961000
NVTRPQE  EQU   NVT+468                                                  02962000
NVTRLLE  EQU   NVT+464                                                  02963000
NVTRJPQ  EQU   NVT+460                                                  02964000
NVTVMSS  EQU   NVT+456                                                  02965000
NVTVPQE  EQU   NVT+452                                                  02966000
NVTVLLE  EQU   NVT+448                                                  02967000
NVTVJPQ  EQU   NVT+444                                                  02968000
NVTLSEC  EQU   NVTLOCAT+4                                               02969000
NVTLFST  EQU   NVTLOCAT                                                 02970000
NVTXSEC  EQU   NVTXCTL+4                                                02971000
NVTXFST  EQU   NVTXCTL                                                  02972000
@NM00073 EQU   NVT+425                                                  02973000
NVTLPACT EQU   NVT+424                                                  02974000
NVTCSLPG EQU   NVT+420                                                  02975000
NVTCSIOB EQU   NVT+416                                                  02976000
NVTCSLNM EQU   NVT+412                                                  02977000
NVTCSLIB EQU   NVT+408                                                  02978000
NVTBLDL  EQU   NVT+404                                                  02979000
NVTVRBLD EQU   NVT+400                                                  02980000
@NM00072 EQU   NVT+392                                                  02981000
NVTVRTCB EQU   NVT+388                                                  02982000
NVTVVTCB EQU   NVT+384                                                  02983000
NVTSPUCB EQU   NVT+382                                                  02984000
NVTQSCNT EQU   NVT+380                                                  02985000
NVTQSBUF EQU   NVT+376                                                  02986000
NVTRPAGE EQU   NVT+364                                                  02987000
@NM00071 EQU   NVT+363                                                  02988000
NVTABWS1 EQU   NVT+362                                                  02989000
NVTABCD1 EQU   NVT+360                                                  02990000
@NM00070 EQU   NVT+358                                                  02991000
NVTCPUAD EQU   NVT+356                                                  02992000
NVTTOD   EQU   NVT+352                                                  02993000
NVTSPE   EQU   NVT+344                                                  02994000
NVTMBEND EQU   NVT+340                                                  02995000
NVTMBUF  EQU   NVT+336                                                  02996000
NVTDCBSN EQU   NVT+332                                                  02997000
NVTDCBOC EQU   NVT+328                                                  02998000
NVTDCBIC EQU   NVT+324                                                  02999000
@NM00069 EQU   NVT+308                                                  03000000
NVTNMBLD EQU   NVT+304                                                  03001000
NVTNIPM  EQU   NVT+292                                                  03002000
NVTIX    EQU   NVTFLWSC                                                 03003000
NVTFLWS1 EQU   NVTWPSW2+2                                               03004000
NVTIDPSW EQU   NVTWPSW2                                                 03005000
NVTWPSW1 EQU   NVTWTPSW                                                 03006000
NVTMCPSW EQU   NVT+216                                                  03007000
@NM00068 EQU   NVT+212                                                  03008000
@NM00067 EQU   NVTFLCN                                                  03009000
NVTFLRAC EQU   NVTFLCN                                                  03010000
NVTFLNCK EQU   NVTFLCN                                                  03011000
NVTFLNHC EQU   NVTFLCN                                                  03012000
NVTFLASM EQU   NVTFLCN                                                  03013000
NVTMP    EQU   NVTFLCN                                                  03014000
NVTFLIOC EQU   NVTFLCN                                                  03015000
NVTFLAC  EQU   NVTFLCN                                                  03016000
NVTFLSG  EQU   NVT+210                                                  03017000
NVTTRACE EQU   NVT+208                                                  03018000
NVTNXPTR EQU   NVT+204                                                  03019000
NVTNXSIZ EQU   NVT+202                                                  03020000
@NM00066 EQU   NVT+200                                                  03021000
NVTSGPSA EQU   NVT+196                                                  03022000
NVTN0MSG EQU   NVT+192                                                  03023000
NVTVVPG1 EQU   NVT+188                                                  03024000
NVTNBFND EQU   NVT+184                                                  03025000
NVTNUCND EQU   NVT+180                                                  03026000
NVTSTMAP EQU   NVT+176                                                  03027000
NVTRTMSA EQU   NVT+172                                                  03028000
NVTMFASA EQU   NVT+168                                                  03029000
NVTLSPQE EQU   NVT+164                                                  03030000
NVTALSQA EQU   NVT+160                                                  03031000
NVTPQSAV EQU   NVT+156                                                  03032000
NVTSVC60 EQU   NVT+148                                                  03033000
NVTABSEC EQU   NVTABSAV+4                                               03034000
NVTABFST EQU   NVTABSAV                                                 03035000
NVTNVSQA EQU   NVT+138                                                  03036000
NVTRSVMN EQU   NVT+136                                                  03037000
NVTNBMIN EQU   NVT+134                                                  03038000
NVTRGNAV EQU   NVT+132                                                  03039000
NVTLSQNO EQU   NVT+130                                                  03040000
NVTSQANO EQU   NVT+128                                                  03041000
NVTLSQAS EQU   NVT+124                                                  03042000
NVTLNGFX EQU   NVT+120                                                  03043000
@NM00065 EQU   NVT+112                                                  03044000
NVTASMAD EQU   NVT+108                                                  03045000
NVTNVRSZ EQU   NVT+104                                                  03046000
NVTMFA   EQU   NVT+100                                                  03047000
NVTDSSNG EQU   NVT+96                                                   03048000
NVTMSLNK EQU   NVT+92                                                   03049000
NVTVVMDI EQU   NVT+88                                                   03050000
NVTIGCER EQU   NVT+84                                                   03051000
NVTVBLDL EQU   NVT+80                                                   03052000
NVTSVCTB EQU   NVT+76                                                   03053000
NVTASTCB EQU   NVT+72                                                   03054000
NVTAASCB EQU   NVT+68                                                   03055000
NVTMASCB EQU   NVT+64                                                   03056000
NVTCMTCB EQU   NVT+60                                                   03057000
NVTMSTCB EQU   NVT+56                                                   03058000
@NM00064 EQU   NVTFLLB                                                  03059000
NVTFLSLB EQU   NVTFLLB                                                  03060000
@NM00063 EQU   NVTNPATR                                                 03061000
NVTNPREU EQU   NVTNPREN                                                 03062000
@NM00062 EQU   NVTNPREN                                                 03063000
NVTNPSFX EQU   NVT+53                                                   03064000
@NM00061 EQU   NVT+50                                                   03065000
NVTNPSUF EQU   NVT                                                      03066000
UCBERADR EQU   UCBUCS+12                                                03067000
UCBFCBID EQU   UCBUCS+8                                                 03068000
UCBERCNT EQU   UCBUCS+7                                                 03069000
UCBRSV51 EQU   UCBUCS+6                                                 03070000
UCBRSV50 EQU   UCBFCBOP                                                 03071000
UCBRSV49 EQU   UCBFCBOP                                                 03072000
UCBRSV48 EQU   UCBFCBOP                                                 03073000
UCBRSV47 EQU   UCBFCBOP                                                 03074000
UCBRSV46 EQU   UCBFCBOP                                                 03075000
UCBRSV45 EQU   UCBFCBOP                                                 03076000
UCBRSV44 EQU   UCBFCBOP                                                 03077000
UCBFCBO1 EQU   UCBFCBOP                                                 03078000
UCBUCSPE EQU   UCBUCSOP                                                 03079000
UCBRSV43 EQU   UCBUCSOP                                                 03080000
UCBRSV42 EQU   UCBUCSOP                                                 03081000
UCBRSV41 EQU   UCBUCSOP                                                 03082000
UCBRSV40 EQU   UCBUCSOP                                                 03083000
UCBRSV39 EQU   UCBUCSOP                                                 03084000
UCBUCSO2 EQU   UCBUCSOP                                                 03085000
UCBUCSO1 EQU   UCBUCSOP                                                 03086000
UCBUCSID EQU   UCBUCS                                                   03087000
UCBRDATA EQU   UCBOCR+4                                                 03088000
UCBFRID  EQU   UCBOCR                                                   03089000
UCBCLN   EQU   UCBMT+14                                                 03090000
UCBERG   EQU   UCBMT+12                                                 03091000
UCBMS    EQU   UCBMT+11                                                 03092000
UCBNB    EQU   UCBMT+10                                                 03093000
UCBPW    EQU   UCBMT+9                                                  03094000
UCBPR    EQU   UCBMT+8                                                  03095000
UCBSIO   EQU   UCBMT+6                                                  03096000
UCBTW    EQU   UCBMT+5                                                  03097000
UCBTR    EQU   UCBMT+4                                                  03098000
UCBTWT   EQU   UCBMT+3                                                  03099000
UCBTRT   EQU   UCBMT+2                                                  03100000
UCBCTD   EQU   UCBMT                                                    03101000
UCBASID  EQU   UCBCMEXT+14                                              03102000
UCBMFCNT EQU   UCBCMEXT+12                                              03103000
UCBPMSK  EQU   UCBCMEXT+10                                              03104000
UCBCCWOF EQU   UCBCMEXT+8                                               03105000
UCBRV041 EQU   UCBCMEXT+6                                               03106000
UCBRV036 EQU   UCBFLP1                                                  03107000
UCBRV035 EQU   UCBFLP1                                                  03108000
UCBRV034 EQU   UCBFLP1                                                  03109000
UCBRV033 EQU   UCBFLP1                                                  03110000
UCBRV032 EQU   UCBFLP1                                                  03111000
UCBRV031 EQU   UCBFLP1                                                  03112000
UCBRV030 EQU   UCBFLP1                                                  03113000
UCBNSRCH EQU   UCBFLP1                                                  03114000
UCBSNSCT EQU   UCBCMEXT+4                                               03115000
UCBHPDV  EQU   @NM00060                                                 03116000
UCBHALI  EQU   @NM00060                                                 03117000
UCBRSV09 EQU   @NM00060                                                 03118000
UCBRSV08 EQU   @NM00060                                                 03119000
UCBRSV07 EQU   @NM00060                                                 03120000
UCBRSV06 EQU   @NM00060                                                 03121000
UCBRSV05 EQU   @NM00060                                                 03122000
UCBRSV04 EQU   @NM00060                                                 03123000
UCBDTI   EQU   UCBCMEXT+2                                               03124000
UCBSTI   EQU   UCBCMEXT+1                                               03125000
UCBETI   EQU   UCBCMEXT                                                 03126000
UCBEXTP  EQU   UCBEXTPT+1                                               03127000
UCBDDRSW EQU   UCBFLC                                                   03128000
UCBTICBT EQU   UCBFLC                                                   03129000
UCBIVRR  EQU   UCBFLC                                                   03130000
UCBIVRS  EQU   UCBFLC                                                   03131000
UCBITF   EQU   UCBFLC                                                   03132000
UCBUDE   EQU   UCBFLC                                                   03133000
UCBWAA   EQU   UCBFLC                                                   03134000
UCBATTP  EQU   UCBFLC                                                   03135000
UCBUNTYP EQU   UCBTBYT4                                                 03136000
UCBRSV11 EQU   UCBDVCLS                                                 03137000
UCBRSV10 EQU   UCBDVCLS                                                 03138000
UCB3CHAR EQU   UCBDVCLS                                                 03139000
UCB3UREC EQU   UCBDVCLS                                                 03140000
UCB3DISP EQU   UCBDVCLS                                                 03141000
UCB3DACC EQU   UCBDVCLS                                                 03142000
UCB3COMM EQU   UCBDVCLS                                                 03143000
UCB3TAPE EQU   UCBDVCLS                                                 03144000
UCBDVPWR EQU   UCB2OPT7                                                 03145000
UCBVLPWR EQU   UCB2OPT6                                                 03146000
UCB2OPT5 EQU   UCBTBYT2                                                 03147000
UCBRWTAU EQU   UCB2OPT4                                                 03148000
UCBRPS   EQU   UCBDUDN2                                                 03149000
UCBRR    EQU   UCBDUDN1                                                 03150000
UCB2OPT1 EQU   UCBTBYT2                                                 03151000
UCB2OPT0 EQU   UCBTBYT2                                                 03152000
UCB1FEA7 EQU   UCBTBYT1                                                 03153000
UCBD6250 EQU   UCB1FEA6                                                 03154000
UCBD1600 EQU   UCB1FEA5                                                 03155000
UCB1FEA4 EQU   UCBTBYT1                                                 03156000
UCB1FEA3 EQU   UCBTBYT1                                                 03157000
UCB1FEA2 EQU   UCBTBYT1                                                 03158000
UCB1FEA1 EQU   UCBTBYT1                                                 03159000
UCB1FEA0 EQU   UCBTBYT1                                                 03160000
UCBNAME  EQU   UCBOB+13                                                 03161000
UCBRV029 EQU   UCBWGT                                                   03162000
UCBVHRSN EQU   UCBWGT                                                   03163000
UCBVORSN EQU   UCBWGT                                                   03164000
UCBMTPXP EQU   UCBWGT                                                   03165000
UCBREW   EQU   UCBWGT                                                   03166000
UCBPUB   EQU   UCBWGT                                                   03167000
UCBOUT   EQU   UCBWGT                                                   03168000
UCBIN    EQU   UCBWGT                                                   03169000
UCBCPU   EQU   UCBOB+11                                                 03170000
UCBLCI   EQU   UCBOB+10                                                 03171000
UCBCNT   EQU   UCBOB+9                                                  03172000
UCBRV017 EQU   UCBCHM1                                                  03173000
UCBRV016 EQU   UCBCHM1                                                  03174000
UCBRV015 EQU   UCBCHM1                                                  03175000
UCBRV014 EQU   UCBCHM1                                                  03176000
UCBSPB   EQU   UCBPTH1                                                  03177000
UCBPPB   EQU   UCBPTH1                                                  03178000
UCBSPA   EQU   UCBPTH0                                                  03179000
UCBPPA   EQU   UCBPTH0                                                  03180000
UCBFLB7  EQU   UCBFLB                                                   03181000
UCBFLB6  EQU   UCBFLB                                                   03182000
UCBFLB5  EQU   UCBFLB                                                   03183000
UCBFLB4  EQU   UCBFLB                                                   03184000
UCBRESVH EQU   UCBFLB                                                   03185000
UCBSPST  EQU   UCBFLB                                                   03186000
UCBASNS  EQU   UCBFLB                                                   03187000
UCBIORST EQU   UCBFLB                                                   03188000
UCBQISCE EQU   UCBFL1                                                   03189000
UCBACTV  EQU   UCBFL1                                                   03190000
UCBSAP   EQU   UCBFL1                                                   03191000
UCBNOTRC EQU   UCBCUB                                                   03192000
UCBPSNS  EQU   UCBFL1                                                   03193000
UCBUSING EQU   UCBPST                                                   03194000
UCBNOTRD EQU   UCBNRY                                                   03195000
UCBBUSYD EQU   UCBBSY                                                   03196000
UCBUA    EQU   UCBCHAN+1                                                03197000
UCBCHA   EQU   UCBCHAN                                                  03198000
UCBDADI  EQU   UCBSTAT                                                  03199000
UCBSYSR  EQU   UCBSTAT                                                  03200000
UCBPRES  EQU   UCBSTAT                                                  03201000
UCBALOC  EQU   UCBSTAT                                                  03202000
UCBUNLD  EQU   UCBSTAT                                                  03203000
UCBRESV  EQU   UCBSTAT                                                  03204000
UCBCHGS  EQU   UCBSTAT                                                  03205000
UCBONLI  EQU   UCBSTAT                                                  03206000
UCBID    EQU   UCBOB+2                                                  03207000
UCBALTPH EQU   UCBFL5                                                   03208000
UCBALTCU EQU   UCBFL5                                                   03209000
UCBNALOC EQU   UCBFL5                                                   03210000
UCBENVRD EQU   UCBFL5                                                   03211000
UCBVSDR  EQU   UCBFL5                                                   03212000
UCBSASK  EQU   UCBFL5                                                   03213000
UCBAMV   EQU   UCBAF                                                    03214000
UCBDCC   EQU   UCBFL5                                                   03215000
UCBMONT  EQU   UCBJBNR                                                  03216000
UCBRV011 EQU   UCBJBNR                                                  03217000
UCBRSV02 EQU   UCBJBNR                                                  03218000
UCBRSV01 EQU   UCBJBNR                                                  03219000
UCBRV003 EQU   UCBJBNR                                                  03220000
UCBRV002 EQU   UCBJBNR                                                  03221000
UCBJES3  EQU   UCBJBNR                                                  03222000
UCBVRDEV EQU   UCBJBNR                                                  03223000
UCBCMSEG EQU   UCBOB                                                    03224000
UCBPFXND EQU   UCB+512                                                  03225000
UCBIOQ   EQU   UCB+508                                                  03226000
UCBLOCK  EQU   UCB+504                                                  03227000
UCBPXST  EQU   UCB+504                                                  03228000
@NM00057 EQU   UCB                                                      03229000
@NM00056 EQU   DCB                                                      03230000
NIPPTSID EQU   NIPPTE+6                                                 03231000
@NM00055 EQU   NIPPTATF                                                 03232000
NIPPTMRG EQU   NIPPTATF                                                 03233000
@NM00054 EQU   NIPPTOPF                                                 03234000
NIPPTLST EQU   NIPPTOPF                                                 03235000
NIPPTOPI EQU   NIPPTOPF                                                 03236000
PTABEND  EQU   PARMTAB+264                                              03237000
@NM00053 EQU   PARMTAB+260                                              03238000
WTORPLY  EQU   PARMTAB+256                                              03239000
@NM00052 EQU   PARMTAB+252                                              03240000
WTOBFRS  EQU   PARMTAB+248                                              03241000
@NM00051 EQU   PARMTAB+244                                              03242000
VRREGN   EQU   PARMTAB+240                                              03243000
@NM00050 EQU   PARMTAB+236                                              03244000
VAL      EQU   PARMTAB+232                                              03245000
@NM00049 EQU   PARMTAB+228                                              03246000
SYSP     EQU   PARMTAB+224                                              03247000
@NM00048 EQU   PARMTAB+220                                              03248000
SQA      EQU   PARMTAB+216                                              03249000
@NM00047 EQU   PARMTAB+212                                              03250000
SMF      EQU   PARMTAB+208                                              03251000
@NM00046 EQU   PARMTAB+204                                              03252000
REAL     EQU   PARMTAB+200                                              03253000
@NM00045 EQU   PARMTAB+196                                              03254000
PAGEO    EQU   PARMTAB+192                                              03255000
@NM00044 EQU   PARMTAB+188                                              03256000
PAGEP    EQU   PARMTAB+184                                              03257000
@NM00043 EQU   PARMTAB+180                                              03258000
OPT      EQU   PARMTAB+176                                              03259000
@NM00042 EQU   PARMTAB+172                                              03260000
OPI      EQU   PARMTAB+168                                              03261000
@NM00041 EQU   PARMTAB+164                                              03262000
NUCMAP   EQU   PARMTAB+160                                              03263000
@NM00040 EQU   PARMTAB+156                                              03264000
MLPA     EQU   PARMTAB+152                                              03265000
@NM00039 EQU   PARMTAB+148                                              03266000
MAXUSER  EQU   PARMTAB+144                                              03267000
@NM00038 EQU   PARMTAB+140                                              03268000
LOGLMT   EQU   PARMTAB+136                                              03269000
@NM00037 EQU   PARMTAB+132                                              03270000
LOGCLS   EQU   PARMTAB+128                                              03271000
@NM00036 EQU   PARMTAB+124                                              03272000
LNK      EQU   PARMTAB+120                                              03273000
@NM00035 EQU   PARMTAB+116                                              03274000
IPS      EQU   PARMTAB+112                                              03275000
@NM00034 EQU   PARMTAB+108                                              03276000
HARDCPY  EQU   PARMTAB+104                                              03277000
@NM00033 EQU   PARMTAB+100                                              03278000
FIX      EQU   PARMTAB+96                                               03279000
@NM00032 EQU   PARMTAB+92                                               03280000
DUMP     EQU   PARMTAB+88                                               03281000
@NM00031 EQU   PARMTAB+84                                               03282000
CVIO     EQU   PARMTAB+80                                               03283000
@NM00030 EQU   PARMTAB+76                                               03284000
CSA      EQU   PARMTAB+72                                               03285000
@NM00029 EQU   PARMTAB+68                                               03286000
CPQE     EQU   PARMTAB+64                                               03287000
@NM00028 EQU   PARMTAB+60                                               03288000
CONT     EQU   PARMTAB+56                                               03289000
@NM00027 EQU   PARMTAB+52                                               03290000
CMD      EQU   PARMTAB+48                                               03291000
@NM00026 EQU   PARMTAB+44                                               03292000
CLPA     EQU   PARMTAB+40                                               03293000
@NM00025 EQU   PARMTAB+36                                               03294000
BLDLF    EQU   PARMTAB+32                                               03295000
@NM00024 EQU   PARMTAB+28                                               03296000
BLDL     EQU   PARMTAB+24                                               03297000
@NM00023 EQU   PARMTAB+20                                               03298000
APG      EQU   PARMTAB+16                                               03299000
@NM00022 EQU   PARMTAB+12                                               03300000
PTABSTRT EQU   PARMTAB                                                  03301000
NIPPABUF EQU   NIPPAREA+525                                             03302000
@NM00021 EQU   NIPPAFLG                                                 03303000
NIPPAPTB EQU   NIPPAREA+252                                             03304000
@NM00020 EQU   NIPPAREA+248                                             03305000
@NM00019 EQU   NIPPAECB+1                                               03306000
@NM00018 EQU   NIPPAIOD+37                                              03307000
NIPPATXT EQU   NIPPAIOD                                                 03308000
@NM00017 EQU   NIPPAREA+30                                              03309000
@NM00016 EQU   NIPPABDL+15                                              03310000
NIPPA2BF EQU   NIPPABDH                                                 03311000
@NM00015 EQU   NIPPAREA                                                 03312000
NIPPABYT EQU   NIPPAHDR+4                                               03313000
NIPPAQ   EQU   NIPPAHDR                                                 03314000
DEBXRV40 EQU   DEBXTN+28                                                03315000
DEBXRV39 EQU   DEBXTN+24                                                03316000
DEBXXARG EQU   DEBXTN+20                                                03317000
DEBXMCF2 EQU   DEBXTN+19                                                03318000
DEBXMCF1 EQU   DEBXTN+18                                                03319000
DEBXDSO2 EQU   DEBXTN+17                                                03320000
DEBXDSO1 EQU   DEBXTN+16                                                03321000
DEBXDBPR EQU   DEBXTN+12                                                03322000
DEBXDCBM EQU   DEBXTN+8                                                 03323000
DEBXDSAB EQU   DEBXTN+4                                                 03324000
DEBXRV48 EQU   DEBXTN+3                                                 03325000
DEBXRV47 EQU   DEBXFLG1                                                 03326000
DEBXRV46 EQU   DEBXFLG1                                                 03327000
DEBXRV45 EQU   DEBXFLG1                                                 03328000
DEBXRV44 EQU   DEBXFLG1                                                 03329000
DEBXRV43 EQU   DEBXFLG1                                                 03330000
DEBXRV42 EQU   DEBXFLG1                                                 03331000
DEBXTSKC EQU   DEBXFLG1                                                 03332000
DEBXCDCB EQU   DEBXFLG1                                                 03333000
DEBXLNGH EQU   DEBXTN                                                   03334000
DEBTBLOF EQU   DEBPREFX+14                                              03335000
DEBAMTYP EQU   DEBPREFX+13                                              03336000
DEBLNGTH EQU   DEBPREFX+12                                              03337000
DEBDCBMK EQU   DEBXTNP                                                  03338000
DEBDSCBA EQU   DEBPREFX+1                                               03339000
DEBWKARA EQU   DEBPREFX                                                 03340000
DEBXCEAD EQU   DEBXCEA+1                                                03341000
DEBXCENP EQU   DEBXCEAB                                                 03342000
DEBRSV35 EQU   DEBXCEAB                                                 03343000
DEBRSV34 EQU   DEBXCEAB                                                 03344000
DEBRSV33 EQU   DEBXCEAB                                                 03345000
DEBRSV32 EQU   DEBXCEAB                                                 03346000
DEBCEAD  EQU   DEBCEA+1                                                 03347000
DEBCENP  EQU   DEBCEAB                                                  03348000
DEBRSV31 EQU   DEBCEAB                                                  03349000
DEBRSV30 EQU   DEBCEAB                                                  03350000
DEBRSV29 EQU   DEBCEAB                                                  03351000
DEBRSV28 EQU   DEBCEAB                                                  03352000
DEBPCIAD EQU   DEBPCIA+1                                                03353000
DEBPCINP EQU   DEBPCIAB                                                 03354000
DEBRSV27 EQU   DEBPCIAB                                                 03355000
DEBRSV26 EQU   DEBPCIAB                                                 03356000
DEBRSV25 EQU   DEBPCIAB                                                 03357000
DEBRSV24 EQU   DEBPCIAB                                                 03358000
DEBSIOAD EQU   DEBSIOA+1                                                03359000
DEBSIONP EQU   DEBSIOAB                                                 03360000
DEBRSV23 EQU   DEBSIOAB                                                 03361000
DEBIOVR  EQU   DEBSIOAB                                                 03362000
DEBSIOX  EQU   DEBSIOAB                                                 03363000
DEBPGFX  EQU   DEBSIOAB                                                 03364000
DEBEOEAD EQU   DEBEOEA+1                                                03365000
DEBEOENP EQU   DEBEOEAB                                                 03366000
DEBRSV22 EQU   DEBEOEAB                                                 03367000
DEBRSV21 EQU   DEBEOEAB                                                 03368000
DEBRSV20 EQU   DEBEOEAB                                                 03369000
DEBRSV19 EQU   DEBEOEAB                                                 03370000
DEBSUBID EQU   DEBSUBNM                                                 03371000
DEBSIOA2 EQU   DEBACS08+24                                              03372000
DEBRPSIO EQU   DEBACS08+20                                              03373000
DEBFREED EQU   DEBACS08+16                                              03374000
@NM00014 EQU   DEBACS08+12                                              03375000
@NM00013 EQU   DEBACS08+8                                               03376000
DEBDISAD EQU   DEBACS08+4                                               03377000
@NM00012 EQU   DEBACS08                                                 03378000
DEBRPSST EQU   DEBACS07+64                                              03379000
DEBARECK EQU   DEBACS07+60                                              03380000
DEBAREWT EQU   DEBACS07+56                                              03381000
DEBACHK  EQU   DEBACS07+52                                              03382000
DEBAWRIT EQU   DEBACS07+48                                              03383000
DEBASETL EQU   DEBACS07+44                                              03384000
DEBAREAD EQU   DEBACS07+40                                              03385000
DEBCRECK EQU   DEBACS07+36                                              03386000
DEBCREWT EQU   DEBACS07+32                                              03387000
DEBCCHK  EQU   DEBACS07+28                                              03388000
DEBCWRIT EQU   DEBACS07+24                                              03389000
DEBCSETL EQU   DEBACS07+20                                              03390000
DEBCREAD EQU   DEBACS07+16                                              03391000
DEBWKPT5 EQU   DEBACS07+12                                              03392000
DEBWKPT4 EQU   DEBACS07+8                                               03393000
DEBGET   EQU   DEBACS07+4                                               03394000
@NM00011 EQU   DEBACS07                                                 03395000
DEBPUT   EQU   DEBACS06+4                                               03396000
DEBDCBFA EQU   DEBACS06                                                 03397000
DEBLUCBB EQU   DEBLUCBA+1                                               03398000
DEBRSV18 EQU   DEBLUCBA                                                 03399000
DEBFUCBB EQU   DEBFUCBA+1                                               03400000
DEBRSV17 EQU   DEBFUCBA                                                 03401000
DEBTCCWB EQU   DEBTCCWA+1                                               03402000
DEBRSV16 EQU   DEBTCCWA                                                 03403000
DEBTBFRB EQU   DEBTBFRA+1                                               03404000
DEBRSV15 EQU   DEBTBFRA                                                 03405000
DEBDBPEF EQU   DEBACS03+8                                               03406000
DEBDBPP  EQU   DEBACS03+4                                               03407000
DEBDTPP  EQU   DEBACS03                                                 03408000
DEBDBPE  EQU   DEBDBLK+1                                                03409000
DEBDBPT  EQU   DEBDBLK                                                  03410000
DEBEXTNM EQU   DEBDSNAM                                                 03411000
DEBRSV14 EQU   DEBDSNM+4                                                03412000
DEBUTSAB EQU   DEBUTSAA+1                                               03413000
DEBRSV13 EQU   DEBUTSAA                                                 03414000
DEBVOLNM EQU   DEBACSMD+2                                               03415000
DEBVLSEQ EQU   DEBVOLSQ+1                                               03416000
DEBRSV42 EQU   DEBVOLBT                                                 03417000
DEBRSV41 EQU   DEBVOLBT                                                 03418000
DEBRSV40 EQU   DEBVOLBT                                                 03419000
DEBRSV39 EQU   DEBVOLBT                                                 03420000
DEBRSV38 EQU   DEBVOLBT                                                 03421000
DEBRSV37 EQU   DEBVOLBT                                                 03422000
DEBRSV36 EQU   DEBVOLBT                                                 03423000
DEBEXFUL EQU   DEBVOLBT                                                 03424000
DEBNMTRK EQU   DEBDASD+14                                               03425000
DEBENDHH EQU   DEBDASD+12                                               03426000
DEBENDCC EQU   DEBDASD+10                                               03427000
DEBSTRHH EQU   DEBDASD+8                                                03428000
DEBSTRCC EQU   DEBDASD+6                                                03429000
DEBBINUM EQU   DEBDASD+4                                                03430000
DEBUCBA  EQU   DEBUCBAD+1                                               03431000
DEBDVMOD EQU   DEBUCBAD                                                 03432000
DEBAPPB  EQU   DEBAPPAD+1                                               03433000
DEBEXSCL EQU   DEBAPPAD                                                 03434000
DEBDCBB  EQU   DEBDCBAD+1                                               03435000
DEBDEBID EQU   DEBPROTG                                                 03436000
DEBECBB  EQU   DEBECBAD+1                                               03437000
DEBPRIOR EQU   DEBECBAD                                                 03438000
DEBUSRPB EQU   DEBUSRPG+1                                               03439000
DEBNMEXT EQU   DEBUSRPG                                                 03440000
DEBRSV05 EQU   DEBBASIC+15                                              03441000
DEBXTNIN EQU   DEBFLGS1                                                 03442000
DEBAPFIN EQU   DEBFLGS1                                                 03443000
DEBF1CEV EQU   DEBFLGS1                                                 03444000
DEBCINDI EQU   DEBFLGS1                                                 03445000
DEBRSV02 EQU   DEBFLGS1                                                 03446000
DEBRSV01 EQU   DEBFLGS1                                                 03447000
DEBEOFDF EQU   DEBFLGS1                                                 03448000
DEBPWCKD EQU   DEBFLGS1                                                 03449000
DEBQSCNT EQU   DEBBASIC+13                                              03450000
DEBACCS  EQU   DEBOPATB                                                 03451000
DEBPOSIT EQU   DEBOPATB                                                 03452000
DEBZERO  EQU   DEBOPATB                                                 03453000
DEBABEND EQU   DEBOPATB                                                 03454000
DEBIRBB  EQU   DEBIRBAD+1                                               03455000
DEBRERR  EQU   DEBOFLGS                                                 03456000
DEBLABEL EQU   DEBOFLGS                                                 03457000
DEBSPLIT EQU   DEBOFLGS                                                 03458000
DEBDCB   EQU   DEBOFLGS                                                 03459000
DEBRLSE  EQU   DEBOFLGS                                                 03460000
DEBEOF   EQU   DEBOFLGS                                                 03461000
DEBDISP  EQU   DEBOFLGS                                                 03462000
DEBDEBB  EQU   DEBDEBAD+1                                               03463000
DEBAMLNG EQU   DEBDEBAD                                                 03464000
DEBTCBB  EQU   DEBTCBAD+1                                               03465000
DEBNMSUB EQU   DEBTCBAD                                                 03466000
IOBRSV19 EQU   IOBINCAM+1                                               03467000
IOBOLTST EQU   IOBBTAMF                                                 03468000
IOBRFTMG EQU   IOBBTAMF                                                 03469000
IOBRSV17 EQU   IOBBTAMF                                                 03470000
IOBRSV16 EQU   IOBBTAMF                                                 03471000
IOBRSV15 EQU   IOBBTAMF                                                 03472000
IOBRSV14 EQU   IOBBTAMF                                                 03473000
IOBINUSE EQU   IOBBTAMF                                                 03474000
IOBPRMER EQU   IOBBTAMF                                                 03475000
IOBRSTRB EQU   IOBRESTR+1                                               03476000
IOBREPOS EQU   IOBRESTR                                                 03477000
IOBDCBPB EQU   IOBDCBPT+1                                               03478000
IOBRSV44 EQU   IOBFLAG4                                                 03479000
IOBRSV43 EQU   IOBFLAG4                                                 03480000
IOBRSV42 EQU   IOBFLAG4                                                 03481000
IOBRSV41 EQU   IOBFLAG4                                                 03482000
IOBRSV40 EQU   IOBFLAG4                                                 03483000
IOBRSV39 EQU   IOBFLAG4                                                 03484000
IOBRSV38 EQU   IOBFLAG4                                                 03485000
IOBGDPOL EQU   IOBFLAG4                                                 03486000
IOBSTRTB EQU   IOBSTART+1                                               03487000
IOBSIOCC EQU   IOBSTART                                                 03488000
IOBSTBYT EQU   IOBIOCSW+3                                               03489000
IOBCMDA  EQU   IOBIOCSW                                                 03490000
IOBLOG   EQU   IOBFL3                                                   03491000
IOBICL   EQU   IOBFL3                                                   03492000
IOBMSG   EQU   IOBFL3                                                   03493000
IOBCNC   EQU   IOBFL3                                                   03494000
IOBACU   EQU   IOBFL3                                                   03495000
IOBCDC   EQU   IOBFL3                                                   03496000
IOBICC   EQU   IOBFL3                                                   03497000
IOBCCC   EQU   IOBFL3                                                   03498000
IOBECBPB EQU   IOBECBPT+1                                               03499000
IOBECBCC EQU   IOBECBPT                                                 03500000
IOBS1B7  EQU   IOBSENS1                                                 03501000
IOBS1B6  EQU   IOBSENS1                                                 03502000
IOBS1B5  EQU   IOBSENS1                                                 03503000
IOBS1B4  EQU   IOBSENS1                                                 03504000
IOBS1B3  EQU   IOBSENS1                                                 03505000
IOBS1B2  EQU   IOBSENS1                                                 03506000
IOBS1B1  EQU   IOBSENS1                                                 03507000
IOBS1B0  EQU   IOBSENS1                                                 03508000
IOBSNSC9 EQU   IOBS0B7                                                  03509000
IOBS0B6  EQU   IOBSENS0                                                 03510000
IOBS0B5  EQU   IOBSENS0                                                 03511000
IOBS0B4  EQU   IOBSENS0                                                 03512000
IOBS0B3  EQU   IOBSENS0                                                 03513000
IOBS0B2  EQU   IOBSENS0                                                 03514000
IOBS0B1  EQU   IOBSENS0                                                 03515000
IOBS0B0  EQU   IOBSENS0                                                 03516000
IOBPNCH  EQU   IOBFLAG2                                                 03517000
IOBSTATO EQU   IOBFLAG2                                                 03518000
IOBSKUPD EQU   IOBFLAG2                                                 03519000
IOBALTTR EQU   IOBFLAG2                                                 03520000
IOBRRT2  EQU   IOBRDHA0                                                 03521000
IOBRRT3  EQU   IOBPURGE                                                 03522000
IOBSENSE EQU   IOBFLAG2                                                 03523000
IOBHALT  EQU   IOBFLAG2                                                 03524000
IOBSPSVC EQU   IOBRSTRT                                                 03525000
IOBUNREL EQU   IOBFLAG1                                                 03526000
IOBIOERR EQU   IOBFLAG1                                                 03527000
IOBFCREX EQU   IOBCYCCK                                                 03528000
IOBRPSTN EQU   IOBFLAG1                                                 03529000
IOBERRTN EQU   IOBFLAG1                                                 03530000
IOBCMDCH EQU   IOBFLAG1                                                 03531000
IOBDATCH EQU   IOBFLAG1                                                 03532000
IOBCNOPA EQU   IOBPREFX+12                                              03533000
IOBCICB  EQU   IOBPREFX+8                                               03534000
IOBCECB  EQU   IOBPREFX+4                                               03535000
IOBCONOP EQU   IOBPREFX+3                                               03536000
IOBCINOP EQU   IOBPREFX+2                                               03537000
IOBRSV05 EQU   IOBPREFX+1                                               03538000
IOBPCI   EQU   IOBCFLG1                                                 03539000
IOBRSTCH EQU   IOBCFLG1                                                 03540000
IOBABAPP EQU   IOBCFLG1                                                 03541000
IOBPTST  EQU   IOBCFLG1                                                 03542000
IOBRSV04 EQU   IOBCFLG1                                                 03543000
IOBRSV03 EQU   IOBCFLG1                                                 03544000
IOBRSV02 EQU   IOBCFLG1                                                 03545000
IOBRSV01 EQU   IOBCFLG1                                                 03546000
ECBRBA   EQU   ECBCCCNT                                                 03547000
@NM00010 EQU   ECBCC                                                    03548000
ECBPOSTB EQU   ECBCC                                                    03549000
ECBWAITB EQU   ECBCC                                                    03550000
NSCHDCPU EQU   NIPSCHDL+8                                               03551000
NSCHDPRM EQU   NIPSCHDL+4                                               03552000
NSCHDPTR EQU   NIPSCHDL                                                 03553000
@NM00009 EQU   NIPOPNPL+22                                              03554000
NOPNRC   EQU   NIPOPNPL+21                                              03555000
NOPNFLSX EQU   NOPNFL                                                   03556000
NOPNFLLC EQU   NOPNFL                                                   03557000
NOPNFLLB EQU   NOPNFL                                                   03558000
NOPNFLNB EQU   NOPNFL                                                   03559000
NOPNFLI  EQU   NOPNFL                                                   03560000
NOPNFLM  EQU   NOPNFL                                                   03561000
NOPNFAU  EQU   NOPNFL                                                   03562000
NOPNFRS  EQU   NOPNFL                                                   03563000
NOPNUCB  EQU   NIPOPNPL+16                                              03564000
NOPNDCB  EQU   NIPOPNPL+12                                              03565000
NOPNDSA  EQU   NOPNDS                                                   03566000
@NM00008 EQU   NIPMNTPL+21                                              03567000
NMNTFLB  EQU   NMNTFL                                                   03568000
NMNTFLC  EQU   NMNTFL                                                   03569000
NMNTFLI  EQU   NMNTFL                                                   03570000
NMNTFUS  EQU   NMNTFL                                                   03571000
@NM00007 EQU   NMNTFL                                                   03572000
NMNTDT   EQU   NIPMNTPL+18                                              03573000
NMNTUCB  EQU   NMNTVS                                                   03574000
NMNTDSA  EQU   NMNTDS                                                   03575000
NIPSPEA  EQU   NIPSPE+4                                                 03576000
NIPSPEQ  EQU   NIPSPE                                                   03577000
NWTORMSG EQU   NWTORLST+12                                              03578000
@NM00006 EQU   NWTORLST+11                                              03579000
@NM00005 EQU   NWTORFL                                                  03580000
NWTORFLB EQU   NWTORFL                                                  03581000
@NM00004 EQU   NWTORFL                                                  03582000
NWTORFLA EQU   NWTORFL                                                  03583000
NMTORRDL EQU   NWTORLST+8                                               03584000
NWTORECB EQU   NWTORLST+4                                               03585000
NWTORRPA EQU   NWTORLST                                                 03586000
@NM00003 EQU   NWTOFL                                                   03587000
NWTOFLNC EQU   NWTOFL                                                   03588000
NWTOFLNH EQU   NWTOFL                                                   03589000
NWTOLNG  EQU   NWTOHDR                                                  03590000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      03591000
@RT00206 EQU   NPA5EROR                                                 03592000
@RT00221 EQU   NPA5TEND                                                 03593000
@RT00339 EQU   NPA5PRPT                                                 03594000
@RT00409 EQU   NIPPMPRD                                                 03595000
@RT00420 EQU   NIPPMPFN                                                 03596000
@RT00422 EQU   NIPPMPER                                                 03597000
@RT00431 EQU   NIPPMPRD                                                 03598000
@RT00439 EQU   NIPPMPXT                                                 03599000
@RF00470 EQU   NIPPMTER                                                 03600000
@RF00472 EQU   NIPPMTER                                                 03601000
@RT00490 EQU   NIPPMPRD                                                 03602000
@RF00490 EQU   NIPPMTND                                                 03603000
@RF00488 EQU   NIPPMPBK                                                 03604000
@RT00506 EQU   NIPPMPXT                                                 03605000
@PB00006 EQU   @EL00001                                                 03606000
@ENDDATA EQU   *                                                        03607000
         END   IEAVNPA5                                                 03608000
./  ADD  SSI=63210194,NAME=IEAVNP05
         TITLE 'IEAVNP05, NIP MEMORY INITIALIZATION ROUTINE            *00001000
                        '                                               00002000
IEAVNP05 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IEAVNP05  76.321'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @09,0                                               0001 00011000
@PSTART  LA    @10,4095(,@09)                                      0001 00012000
         LA    @11,4095(,@10)                                      0001 00013000
         LA    @12,4095(,@11)                                      0001 00014000
         USING @PSTART,@09                                         0001 00015000
         USING @PSTART+4095,@10                                    0001 00016000
         USING @PSTART+8190,@11                                    0001 00017000
         USING @PSTART+12285,@12                                   0001 00018000
         ST    @13,@SA00001+4                                      0001 00019000
         LA    @14,@SA00001                                        0001 00020000
         ST    @14,8(,@13)                                         0001 00021000
         LR    @13,@14                                             0001 00022000
*                                                                  0073 00023000
*/********************************************************************/ 00024000
*/*                                                                  */ 00025000
*/*         REGISTER DEFINITIONS                                     */ 00026000
*/*                                                                  */ 00027000
*/********************************************************************/ 00028000
*                                                                  0073 00029000
*   ;                                                              0073 00030000
*                                                                  0073 00031000
*   /*****************************************************************/ 00032000
*   /*                                                               */ 00033000
*   /* GENERAL REGISTER 0                                            */ 00034000
*   /*                                                               */ 00035000
*   /*****************************************************************/ 00036000
*                                                                  0074 00037000
*   DCL                                                            0074 00038000
*     RLOAD PTR(24) REG(0);         /* LOAD ADDR RETURNED BY LOAD    */ 00039000
*   DCL                                                            0075 00040000
*     RPARM0 REG(0) PTR(31);        /* REG 0 - PARAMETER             */ 00041000
*   DCL                                                            0076 00042000
*     LV0 FIXED(31) REG(0);         /* BYTES & SPN FOR GETMAIN       */ 00043000
*   DCL                                                            0077 00044000
*     RDSR0 REG(0);                 /* REG 0 FOR DIRECTORY SRCH      */ 00045000
*   DCL                                                            0078 00046000
*     GPR00P REG(0);                /* FOR EXPANSION OF WAIT SVC     */ 00047000
*                                                                  0078 00048000
*   /*****************************************************************/ 00049000
*   /*                                                               */ 00050000
*   /* GENERAL REGISTER 1                                            */ 00051000
*   /*                                                               */ 00052000
*   /*****************************************************************/ 00053000
*                                                                  0079 00054000
*   DCL                                                            0079 00055000
*     GPR01P REG(1);                /* FOR EXPANSION OF WAIT SVC     */ 00056000
*   DCL                                                            0080 00057000
*     START FIXED(31) REG(1);       /* PGFIX/FREE START ADDRESS      */ 00058000
*   DCL                                                            0081 00059000
*     PGOUTST FIXED(31) REG(1);     /* PGOUT START ADDRESS           */ 00060000
*   DCL                                                            0082 00061000
*     RPARM PTR(24) REG(1) RESTRICTED;/* @ OF PARAM LIST             */ 00062000
*   DCL                                                            0083 00063000
*     RDSR1 REG(1);                 /* REG 1 FOR DIRECTORY SRCH      */ 00064000
*                                                                  0083 00065000
*   /*****************************************************************/ 00066000
*   /*                                                               */ 00067000
*   /* GENERAL REGISTER 2                                            */ 00068000
*   /*                                                               */ 00069000
*   /*****************************************************************/ 00070000
*                                                                  0084 00071000
*/*         DCL RNVT REG(2) PTR(31);     ** ADDRESS OF NVT           */ 00072000
*                                                                  0084 00073000
*   /*****************************************************************/ 00074000
*   /*                                                               */ 00075000
*   /* GENERAL REGISTER 3                                            */ 00076000
*   /*                                                               */ 00077000
*   /*****************************************************************/ 00078000
*                                                                  0084 00079000
*/*         DCL RCVT REG(3) PTR(31);    ** ADDRESS OF CVT            */ 00080000
*                                                                  0084 00081000
*   /*****************************************************************/ 00082000
*   /*                                                               */ 00083000
*   /* GENERAL REGISTER 4                                            */ 00084000
*   /*                                                               */ 00085000
*   /*****************************************************************/ 00086000
*                                                                  0084 00087000
*   DCL                                                            0084 00088000
*     DEBDAPTR PTR(24) REG(4);      /* EXTENT ADDRESS                */ 00089000
*   DCL                                                            0085 00090000
*     RLDADDR PTR(24) REG(4);       /* LOAD AREA ADDRESS             */ 00091000
*   DCL                                                            0086 00092000
*     TCBPTR PTR(24) REG(4);        /* ADDR OF TCB                   */ 00093000
*   DCL                                                            0087 00094000
*     RI FIXED(31) REG(4);          /* REG USED FOR INDEXING         */ 00095000
*   DCL                                                            0088 00096000
*     RTCB PTR(24) REG(4);          /* TCB ADDRESS                   */ 00097000
*   DCL                                                            0089 00098000
*     MLPASZ PTR(24) REG(4);        /* BYTE SIZE                     */ 00099000
*                                                                  0089 00100000
*   /*****************************************************************/ 00101000
*   /*                                                               */ 00102000
*   /* GENERAL REGISTER 5                                            */ 00103000
*   /*                                                               */ 00104000
*   /*****************************************************************/ 00105000
*                                                                  0090 00106000
*   DCL                                                            0090 00107000
*     SCVTSPTR PTR(24) REG(5);      /* SECONDARY CVT ADDRESS         */ 00108000
*   DCL                                                            0091 00109000
*     BLDLTSZ1 PTR(24) REG(5);      /* SIZE OF BLDL TABLE            */ 00110000
*   DCL                                                            0092 00111000
*     MVCLNG PTR(24) REG(5);        /* SIZE OF GETMAINED CORE        */ 00112000
*   DCL                                                            0093 00113000
*     SCNPTR PTR(24) REG(5);        /* SCAN PTR FOR DIRECTORY        */ 00114000
*   DCL                                                            0094 00115000
*     PDS1PTR PTR(24) REG(5);       /* PDS1 ENTRY ADDRESS            */ 00116000
*   DCL                                                            0095 00117000
*     PTRCVTEN PTR(24) REG(5);      /* SPECIAL CVT PTR               */ 00118000
*                                                                  0095 00119000
*   /*****************************************************************/ 00120000
*   /*                                                               */ 00121000
*   /* GENERAL REGISTER 6                                            */ 00122000
*   /*                                                               */ 00123000
*   /*****************************************************************/ 00124000
*                                                                  0096 00125000
*   DCL                                                            0096 00126000
*     DEBPTR PTR(24) REG(6);        /* DEB ADDRESS                   */ 00127000
*   DCL                                                            0097 00128000
*     LPDEPTR PTR(24) REG(6);       /* LPDE ADDRESS                  */ 00129000
*   DCL                                                            0098 00130000
*     RBLDL PTR(24) REG(6);         /* ADDR OF BLDL TABLE BUILT BY 0098 00131000
*                                      IEAVNP05                      */ 00132000
*   DCL                                                            0099 00133000
*     VRECBPTR PTR(24) REG(6);      /* V=R ECB ADDRESS               */ 00134000
*                                                                  0099 00135000
*   /*****************************************************************/ 00136000
*   /*                                                               */ 00137000
*   /* GENERAL REGISTER 7                                            */ 00138000
*   /*                                                               */ 00139000
*   /*****************************************************************/ 00140000
*                                                                  0100 00141000
*   DCL                                                            0100 00142000
*     BLDLTSZ2 PTR(24) REG(7);      /* SIZE OF BLDL TABLE            */ 00143000
*   DCL                                                            0101 00144000
*     CDENTPTR PTR(24) REG(7);      /* CDE ADDRESS                   */ 00145000
*   DCL                                                            0102 00146000
*     ECBPTR PTR(24) REG(7);        /* DIRECTORY READ ECB            */ 00147000
*   DCL                                                            0103 00148000
*     NP5R7 REG(7) PTR(31);         /* REG 7 - INTERFACE REG         */ 00149000
*   DCL                                                            0104 00150000
*     PDSPTRV PTR(24) REG(7);       /* PTR TO OPTIONAL PARTS OF THE     00151000
*                                      PDS                           */ 00152000
*   DCL                                                            0105 00153000
*     RTCB7 PTR(24) REG(7);         /* TCB ADDRESS                   */ 00154000
*   DCL                                                            0106 00155000
*     DCBPTR1 PTR(24) REG(7);       /* DCBPTR FOR LOAD               */ 00156000
*                                                                  0106 00157000
*   /*****************************************************************/ 00158000
*   /*                                                               */ 00159000
*   /* GENERAL REGISTER 8                                            */ 00160000
*   /*                                                               */ 00161000
*   /*****************************************************************/ 00162000
*                                                                  0107 00163000
*   DCL                                                            0107 00164000
*     NP5R8 REG(8) PTR(31);         /* REG 8 - INTERFACE REG         */ 00165000
*   DCL                                                            0108 00166000
*     SCANPTR PTR(24) REG(8);       /* DUMMY PTR FOR DSECT           */ 00167000
*   DCL                                                            0109 00168000
*     DEBEXPTR PTR(24) REG(8);      /* DUMMY DEB PTR                 */ 00169000
*   DCL                                                            0110 00170000
*     DEBSBPTR PTR(24) REG(8);      /* DUMMY DEB PTR                 */ 00171000
*   DCL                                                            0111 00172000
*     NPTEPTR PTR(24) REG(8);       /* ADDRESS OF NIPPTE             */ 00173000
*   DCL                                                            0112 00174000
*     LLEPTR PTR(24) REG(8);        /* LLE ADDRESS                   */ 00175000
*   DCL                                                            0113 00176000
*     PDS2PTR PTR(24) REG(8);       /* PDS FORM 2 ADDRESS            */ 00177000
*   DCL                                                            0114 00178000
*     RI2 FIXED(31) REG(8);         /* REG USED TO COMPUTE USER SVC  */ 00179000
*   DCL                                                            0115 00180000
*     VMADDR PTR(24) REG(8);        /* ADDR OF LPA                   */ 00181000
*   DCL                                                            0116 00182000
*     OPNPLPTR PTR(24) REG(8);      /* OPEN PARMLIST ADDRESS         */ 00183000
*   DCL                                                            0117 00184000
*     XTLSTPTR PTR(24) REG(8);      /* EXTENT LIST ADDRESS           */ 00185000
*                                                                  0117 00186000
*   /*****************************************************************/ 00187000
*   /*                                                               */ 00188000
*   /* GENERAL REGISTER 9                                            */ 00189000
*   /*                                                               */ 00190000
*   /*****************************************************************/ 00191000
*                                                                  0118 00192000
*   DCL                                                            0118 00193000
*     RBASE1 REG(9) PTR(31);        /* FIRST BASE REG                */ 00194000
*                                                                  0118 00195000
*   /*****************************************************************/ 00196000
*   /*                                                               */ 00197000
*   /* GENERAL REGISTER 10                                           */ 00198000
*   /*                                                               */ 00199000
*   /*****************************************************************/ 00200000
*                                                                  0119 00201000
*   DECLARE                                                        0119 00202000
*     RBASE2 REG(10) PTR(31);       /* SECOND CODE BASE              */ 00203000
*                                                                  0119 00204000
*   /*****************************************************************/ 00205000
*   /*                                                               */ 00206000
*   /* GENERAL REGISTER 11                                           */ 00207000
*   /*                                                               */ 00208000
*   /*****************************************************************/ 00209000
*                                                                  0120 00210000
*   DECLARE                                                        0120 00211000
*     RBASE3 REG(11) PTR(31);       /* THIRD CODE BASE               */ 00212000
*                                                                  0120 00213000
*   /*****************************************************************/ 00214000
*   /*                                                               */ 00215000
*   /* GENERAL REGISTER 12                                           */ 00216000
*   /*                                                               */ 00217000
*   /*****************************************************************/ 00218000
*                                                                  0121 00219000
*   DECLARE                                                        0121 00220000
*     RBASE4 REG(12) PTR(31);       /* FOURTH CODE BASE              */ 00221000
*                                                                  0121 00222000
*   /*****************************************************************/ 00223000
*   /*                                                               */ 00224000
*   /* GENERAL REGISTER 13                                           */ 00225000
*   /*                                                               */ 00226000
*   /*****************************************************************/ 00227000
*                                                                  0122 00228000
*   ;                                                              0122 00229000
*                                                                  0122 00230000
*/*         DCL * REG(13) PTR(31)       ** SAVE AREA POINTER         */ 00231000
*                                                                  0123 00232000
*   ;                                                              0123 00233000
*                                                                  0123 00234000
*   /*****************************************************************/ 00235000
*   /*                                                               */ 00236000
*   /* GENERAL REGISTER 14                                           */ 00237000
*   /*                                                               */ 00238000
*   /*****************************************************************/ 00239000
*                                                                  0124 00240000
*   ;                                                              0124 00241000
*                                                                  0124 00242000
*/*         DCL REXIT REG(14) PTR(31)   ** RETURN ADDRESS            */ 00243000
*                                                                  0125 00244000
*   ;                                                              0125 00245000
*                                                                  0125 00246000
*   /*****************************************************************/ 00247000
*   /*                                                               */ 00248000
*   /* GENERAL REGISTER 15                                           */ 00249000
*   /*                                                               */ 00250000
*   /*****************************************************************/ 00251000
*                                                                  0126 00252000
*   ;                                                              0126 00253000
*                                                                  0126 00254000
*/*         DCL RENTRY REG(15) PTR(31)  ** ENTRY POINT ADDRESS       */ 00255000
*                                                                  0127 00256000
*   DCL                                                            0127 00257000
*     RCODE REG(15) FIXED(31);      /* RETURN CODE                   */ 00258000
*   DCL                                                            0128 00259000
*     PGOUTEND FIXED(31) REG(15);   /* PGOUT END ADDRESS             */ 00260000
*   DCL                                                            0129 00261000
*     END1 FIXED(31) REG(15);       /* PGFIX/FREE END ADDRESS        */ 00262000
*                                                                  0130 00263000
*   /*****************************************************************/ 00264000
*   /*                                                               */ 00265000
*   /* DEFINE CONSTANTS AND VARIABLES FOR SCHED OF NIP SRB           */ 00266000
*   /*                                                               */ 00267000
*   /*****************************************************************/ 00268000
*                                                                  0130 00269000
*   DCL                                                            0130 00270000
*     CVTPTR PTR LOCATION(16);      /* ADDR OF CVT                   */ 00271000
*   DCL                                                            0131 00272000
*     REG1 REG(1) FIXED(31);        /* SET UP FOR XMPOST             */ 00273000
*   DCL                                                            0132 00274000
*     SRBPTR REG(6) PTR(31);        /* PTR TO SRB                    */ 00275000
*   DCL                                                            0133 00276000
*     XSRBPTR REG(7) PTR(31);       /* PTR TO SRB EXTENTION          */ 00277000
*   DCL                                                            0134 00278000
*     ASMVTPTR REG(8) PTR(31);      /* PTR TO ASMVT                  */ 00279000
*   DCL                                                            0135 00280000
*     REG10 REG(10) FIXED(31);      /* COMPLETN CODE FOR SRB         */ 00281000
*   DCL                                                            0136 00282000
*     REG11 REG(11) FIXED(31);      /* WORK REG FOR SETLOCK          */ 00283000
*   DCL                                                            0137 00284000
*     REG12 REG(12) FIXED(31);      /* WORK REG FOR SETLOCK          */ 00285000
*   DCL                                                            0138 00286000
*     REG13 REG(13) FIXED(31);      /* WORK REG FOR SETLOCK          */ 00287000
*   DCL                                                            0139 00288000
*     REG14 REG(14) FIXED(31);      /* WORK REG FOR SETLOCK          */ 00289000
*   DCL                                                            0140 00290000
*     1 NIPSRB FIXED(32),           /* SRB SUBPOOL AND SIZE          */ 00291000
*      2 SP245SRB BIT(8) INIT('F5'X),/* SRB TO SP245                 */ 00292000
*      2 SIZESRB FIXED(24) INIT(LENGTH(SRBSECT)+LENGTH(XSRBEXT));  0140 00293000
*                                                                  0140 00294000
*   /*****************************************************************/ 00295000
*   /*                                                               */ 00296000
*   /* DEFINE SRB EXTENTION                                          */ 00297000
*   /*                                                               */ 00298000
*   /*****************************************************************/ 00299000
*                                                                  0141 00300000
*   DCL                                                            0141 00301000
*     1 XSRBEXT CHAR(72) BASED(XSRBPTR) BDY(WORD),                 0141 00302000
*      2 XSAVEREG CHAR(64),         /* REG SAVE AREA FOR SRB         */ 00303000
*      2 XSAVE14 FIXED(32),         /* SRB SAVES CALLERS ADDR        */ 00304000
*      2 XECBXMP FIXED(32);         /* ECB FOR XMPOST IN SRB         */ 00305000
*                                                                  0141 00306000
*   /*****************************************************************/ 00307000
*   /*                                                               */ 00308000
*   /* INCLUDE AN SRB                                                */ 00309000
*   /*                                                               */ 00310000
*   /*****************************************************************/ 00311000
*                                                                  0142 00312000
*/*********SERVICE REQUEST BLOCK************************************ */ 00313000
*/*  OS/VS2 RELEASE 2    12/8/72   LEVEL=1                           */ 00314000
*/*     BAL- DSECT  ALWAYS PRODUCED, PERFORM USING ON SRBSECT        */ 00315000
*/*                                                                  */ 00316000
*/*     PL/S  - SRBSECT WILL BE BASED(SRBPTR) .                      */ 00317000
*/*        1. IF YOU WISH TO APPEND THE SRB TO THE END OF            */ 00318000
*/*           ANOTHER CONTROL BLOCK, SET %SRBLEVEL='N'               */ 00319000
*/*           WHERE N IS AN INTEGER BETWEEN 2 AND 3,INCLUSIVE.       */ 00320000
*/*           SRBSECT WILL THEN BE AN UNBASED LEVEL N  VARIABLE.     */ 00321000
*/*        2. IF YOU WISH TO APPEND ANOTHER CONTROL BLOCK TO THE END */ 00322000
*/*           OF THE SRB, SET %SRB9999=',', AND THE SEMICOLON AT     */ 00323000
*/*           THE END OF THE SRB WILL BE REPLACED WITH A COMMA.      */ 00324000
*/*                                                                  */ 00325000
*/*      EXAMPLE OF PLACING SRB BETWEEN TWO OTHER BLOCKS:            */ 00326000
*/*         %SRBLEVEL='2'     ;                                      */ 00327000
*/*         %SRB9999=',' ;                                           */ 00328000
*/*     DECLARE  1 MYBLOCK,                                          */ 00329000
*/*         2 MYFIELD,                                               */ 00330000
*/*        %INCLUDE SYSLIB(IHASRB)  ;                                */ 00331000
*/*         2 MYFIELD2 ;                                             */ 00332000
*/****************************************************************** */ 00333000
*                                                                  0142 00334000
*   DECLARE                                                        0142 00335000
*     1 SRBSECT BASED(SRBPTR) BDY(WORD),                           0142 00336000
*        4 SRB,                                                    0142 00337000
*          6 SRBID CHAR(4),         /* SRB EBCDIC ACRONYM            */ 00338000
*          6 SRBFLNK PTR(31),       /* FORWARD CHAIN FIELD           */ 00339000
*          6 SRBASCB PTR(31),       /* ADDRESS SPACE TO BE DISPATCHED*/ 00340000
*          6 SRBFLC BDY(WORD),      /* SRB AREA MOVED TO LOW CORE    */ 00341000
*            8 SRBCPAFF BIT(16),    /* CPU AFFINITY MASK             */ 00342000
*            8 SRBPASID FIXED(15),  /* PURGEDQ ASID                  */ 00343000
*            8 SRBPTCB PTR(31),     /* PURGEDQ TCB ADDRESS           */ 00344000
*          6 SRBEP PTR(31),         /* ENTRY POINT ADDRESS OF      0142 00345000
*                                      ASYNCHRONOUS ROUTINE          */ 00346000
*          6 SRBRMTR PTR(31),       /* ADDRESS OF RESOURCE MGR     0142 00347000
*                                      TERMINATION ROUTINE FOR     0142 00348000
*                                      PURGEDQ                       */ 00349000
*          6 SRBPARM PTR(31),       /* USER PARAMETER                */ 00350000
*          6 SRBSAVE PTR(31),       /* SAVE AREA POINTER FOR       0142 00351000
*                                      REDISPATCH OF SUSPENDED S SRB.*/ 00352000
*          6 SRBPKF BIT(8),         /* PROTECT KEY IN HIGH ORDER 4 0142 00353000
*                                      BITS, LOW ORDER BITS 0        */ 00354000
*          6 SRBPRIOR PTR(8),       /* PRIORITY LEVEL                */ 00355000
*          6 * CHAR(2),             /* RESERVED                      */ 00356000
*          6 * PTR(31)              /* RESERVED                      */ 00357000
*                ;                                                 0142 00358000
*                                                                  0142 00359000
*   /*****************************************************************/ 00360000
*   /*                                                               */ 00361000
*   /* INCLUDE PSA                                                   */ 00362000
*   /*                                                               */ 00363000
*   /*****************************************************************/ 00364000
*                                                                  0143 00365000
*/* **************************************************************** */ 00366000
*/*                                                                  */ 00367000
*/*            PREFIXED SAVE AREA                                    */ 00368000
*/*                                                                  */ 00369000
*/*  OS/VS2 RELEASE 4, 10/17/75, LEVEL=5                             */ 00370000
*/*                                                                  */ 00371000
*/*  METHOD OF ACCESS                                                */ 00372000
*/*      BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */ 00373000
*/*             USING ON PSA GIVES ADDRESSABILITY FOR ALL SYMBOLS.   */ 00374000
*/*      PL/S - PSA WILL BE BASED(0) FOR PL/S I OR LOCATION(0) FOR   */ 00375000
*/*             PL/S II UNLESS %PSABASE IS SET TO SOME OTHER VALUE   */ 00376000
*/*             BEFORE INCLUDE FOR MACRO.                            */ 00377000
*/*                                                                  */ 00378000
*/*  NOTE                                                            */ 00379000
*/*      THE LABELS BEGINNING WITH PSA OR FLC ARE THE PROPER LABELS  */ 00380000
*/*      TO USE.  THE OTHER LABELS ARE GIVEN AS ALIAS NAMES FOR      */ 00381000
*/*      COMPATIBILITY WITH LABELS USED FOR SYSTEM 360 LOW CORE.     */ 00382000
*/*                                                                  */ 00383000
*/* **************************************************************** */ 00384000
*                                                                  0143 00385000
*   DECLARE                                                        0143 00386000
*     1 PSA LOCATION(0) BDY(DWORD),                                0143 00387000
*      2 FLCRNPSW CHAR(8) BDY(DWORD),/* RESTART NEW PSW (AFTER IPL)  */ 00388000
*       3 FLCIPPSW CHAR(8) BDY(DWORD),/* IPL PSW                     */ 00389000
*      2 FLCROPSW CHAR(8) BDY(DWORD),/* RESTART OLD PSW (AFTER IPL)  */ 00390000
*       3 FLCICCW1 CHAR(8) BDY(DWORD),/* IPL CCW1                    */ 00391000
*      2 FLCICCW2 CHAR(8) BDY(DWORD),/* IPL CCW2                     */ 00392000
*       3 FLCCVT PTR(31),           /* ADDRESS OF CVT (AFTER IPL)    */ 00393000
*       3 * CHAR(4),                /* RESERVED (AFTER IPL)          */ 00394000
*      2 FLCEOPSW CHAR(8) BDY(DWORD),/* EXTERNAL OLD PSW             */ 00395000
*      2 FLCSOPSW CHAR(8) BDY(DWORD),/* SVC OLD PSW                  */ 00396000
*      2 FLCPOPSW CHAR(8) BDY(DWORD),/* PROGRAM CHECK OLD PSW        */ 00397000
*      2 FLCMOPSW CHAR(8) BDY(DWORD),/* MACHINE CHECK OLD PSW        */ 00398000
*      2 FLCIOPSW CHAR(8) BDY(DWORD),/* INPUT/OUTPUT OLD PSW         */ 00399000
*      2 FLCCSW CHAR(8) BDY(DWORD), /* CHANNEL STATUS WORD           */ 00400000
*      2 FLCCAW CHAR(4) BDY(WORD),  /* CHANNEL ADDRESS WORD          */ 00401000
*      2 FLCCVT2 PTR(31),           /* ADDRESS OF CVT - USED BY DUMP    00402000
*                                      ROUTINES ICB319               */ 00403000
*      2 FLCTIMER CHAR(4),          /* TIMER                         */ 00404000
*      2 FLCTRACE PTR(31),          /* ADDRESS OF TRACE TABLE HEADER */ 00405000
*      2 FLCENPSW CHAR(8) BDY(DWORD),/* EXTERNAL NEW PSW             */ 00406000
*      2 FLCSNPSW CHAR(8) BDY(DWORD),/* SVC NEW PSW                  */ 00407000
*      2 FLCPNPSW CHAR(8) BDY(DWORD),/* PROGRAM CHECK NEW PSW        */ 00408000
*      2 FLCMNPSW CHAR(8) BDY(DWORD),/* MACHINE CHECK NEW PSW        */ 00409000
*      2 FLCINPSW CHAR(8) BDY(DWORD),/* INPUT/OUTPUT NEW PSW         */ 00410000
*      2 * CHAR(4),                 /* RESERVED                      */ 00411000
*      2 PSAEEPSW CHAR(4) BDY(WORD),/* EXTENDED PSW DATA STORED ON 0143 00412000
*                                      EXTERNAL INTERRUPT MDC084     */ 00413000
*       3 PSASPAD FIXED(15),        /* ISSUING PROCESSOR'S PHYSICAL     00414000
*                                      ADDRESS ON EMS OR EXTERNAL  0143 00415000
*                                      CALL INTERRUPT MDC046         */ 00416000
*       3 FLCEICOD FIXED(15),       /* EXTERNAL INTERRUPTION CODE    */ 00417000
*      2 PSAESPSW CHAR(4) BDY(WORD),/* EXTENDED PSW DATA STORED ON 0143 00418000
*                                      SVC INTERRUPT MDC085          */ 00419000
*       3 * CHAR(1),                /* RESERVED - SET TO ZERO        */ 00420000
*       3 FLCSVILC PTR(8),          /* SVC INSTRUCTION LENGTH COUNTER   00421000
*                                      - NUMBER OF BYTES MDC079      */ 00422000
*        4 * BIT(5),                /* ALWAYS ZERO                   */ 00423000
*        4 FLCSILCB BIT(3),         /* SIGNIFICANT BITS IN ILC FIELD    00424000
*                                      - LAST BIT IS ALWAYS ZERO   0143 00425000
*                                      MDC080                        */ 00426000
*       3 FLCSVCN FIXED(15),        /* SVC INTERRUPTION CODE - SVC 0143 00427000
*                                      NUMBER MDC081                 */ 00428000
*      2 PSAEPPSW CHAR(8) BDY(WORD),/* EXTENDED PSW FOR PROGRAM    0143 00429000
*                                      INTERRUPT MDC086              */ 00430000
*       3 * CHAR(1),                /* RESERVED - SET TO ZERO        */ 00431000
*       3 FLCPIILC PTR(8),          /* PROGRAM INSTRUCTION LENGTH  0143 00432000
*                                      COUNTER - NUMBER OF BYTES IN     00433000
*                                      INSTRUCTION CAUSING PROGRAM 0143 00434000
*                                      INTERRUPTION MDC082           */ 00435000
*        4 * BIT(5),                /* ALWAYS ZERO                   */ 00436000
*        4 FLCPILCB BIT(3),         /* SIGNIFICANT BITS IN ILC FIELD    00437000
*                                      - LAST BIT IS ALWAYS ZERO   0143 00438000
*                                      MDC083                        */ 00439000
*       3 FLCPICOD FIXED(15),       /* PROGRAM INTERRUPTION CODE     */ 00440000
*        4 PSARV049 CHAR(1),        /* RESERVED FOR IMPRECISE      0143 00441000
*                                      INTERRUPTS MDC087             */ 00442000
*        4 PSAPICOD PTR(8),         /* 8-BIT INTERRUPT CODE MDC088   */ 00443000
*         5 PSAPIPER BIT(1),        /* PER INTERRUPT OCCURRED MDC089 */ 00444000
*         5 PSAPIMC BIT(1),         /* MONITOR CALL INTERRUPT      0143 00445000
*                                      OCCURRED MDC090               */ 00446000
*         5 PSAPIPC BIT(6),         /* AN UNSOLICITED PROGRAM CHECK     00447000
*                                      HAS OCCURRED IF ANY OF THESE 6   00448000
*                                      BITS ARE ON MDC091            */ 00449000
*       3 FLCTEA PTR(31),           /* TRANSLATION EXCEPTION ADDRESS */ 00450000
*        4 * CHAR(1),               /* RESERVED - SET TO ZERO        */ 00451000
*        4 FLCTEAA PTR(24),         /* TRANSLATION EXCEPTION ADDRESS */ 00452000
*      2 * CHAR(1),                 /* RESERVED - SET TO ZERO        */ 00453000
*      2 FLCMCNUM PTR(8),           /* MONITOR CLASS NUMBER          */ 00454000
*      2 FLCPERCD CHAR(1),          /* PROGRAM EVENT RECORDING CODE  */ 00455000
*      2 * CHAR(1),                 /* RESERVED - SET TO ZERO        */ 00456000
*      2 FLCPER PTR(31),            /* PER ADDRESS                   */ 00457000
*       3 * CHAR(1),                /* RESERVED - SET TO ZERO        */ 00458000
*       3 FLCPERA PTR(24),          /* PER ADDRESS                   */ 00459000
*      2 * CHAR(1),                 /* RESERVED - SET TO ZERO        */ 00460000
*      2 FLCMTRCD CHAR(3),          /* MONITOR CODE                  */ 00461000
*      2 * CHAR(8),                 /* RESERVED                      */ 00462000
*      2 FLCMCLA CHAR(344) BDY(DWORD),/* MACHINE CHECK LOGOUT AREA   */ 00463000
*       3 FLCCHNID CHAR(4),         /* CHANNEL ID                    */ 00464000
*       3 FLCIOEL PTR(31),          /* SAME AS FLCIOELA BELOW        */ 00465000
*        4 * CHAR(1),               /* RESERVED                      */ 00466000
*        4 FLCIOELA PTR(24),        /* I/O EXTENDED LOGOUT (IOEL)  0143 00467000
*                                      POINTER                       */ 00468000
*       3 FLCLCL CHAR(4),           /* LIMITED CHANNEL LOGOUT (ECSW) */ 00469000
*       3 * CHAR(2),                /* RESERVED                      */ 00470000
*       3 * CHAR(1),                /* RESERVED MDC051               */ 00471000
*       3 * CHAR(1),                /* RESERVED MDC052               */ 00472000
*       3 FLCIOA PTR(31),           /* I/O ADDRESS                   */ 00473000
*        4 * CHAR(1),               /* RESERVED                      */ 00474000
*        4 FLCIOAA PTR(24),         /* I/O ADDRESS                   */ 00475000
*       3 * CHAR(44),               /* RESERVED                      */ 00476000
*       3 FLCMCIC CHAR(8),          /* MACHINE-CHECK INTERRUPTION  0143 00477000
*                                      CODE                          */ 00478000
*       3 * CHAR(8),                /* RESERVED                      */ 00479000
*       3 FLCFSA PTR(31),           /* FAILING STORAGE ADDRESS       */ 00480000
*        4 * CHAR(1),               /* ZEROES                        */ 00481000
*        4 FLCFSAA PTR(24),         /* FAILING STORAGE ADDRESS       */ 00482000
*       3 FLCRGNCD CHAR(4),         /* REGION CODE                   */ 00483000
*       3 FLCFLA CHAR(96) BDY(WORD),/* FIXED LOGOUT AREA             */ 00484000
*       3 FLCFPSAV CHAR(32) BDY(DWORD),/* FLOATING POINT REGISTER  0143 00485000
*                                      SAVE AREA                     */ 00486000
*       3 FLCGRSAV(16) FIXED(31),   /* GENERAL REGISTER SAVE AREA    */ 00487000
*       3 FLCCRSAV(16) FIXED(31),   /* CONTROL REGISTER SAVE AREA    */ 00488000
*      2 FLCHDEND CHAR(0) BDY(DWORD),/* END OF HARDWARE ASSIGNMENTS  */ 00489000
*      2 PSAPSA CHAR(4) BDY(WORD),  /* CONTROL BLOCK ACRONYM IN    0143 00490000
*                                      EBCDIC                        */ 00491000
*      2 PSACPUPA PTR(15),          /* PHYSICAL CPU ADDRESS (CHANGED    00492000
*                                      DURING ACR) (MDC130)    YM3489*/ 00493000
*      2 PSACPULA PTR(15),          /* LOGICAL CPU ADDRESS           */ 00494000
*      2 PSAPCCAV PTR(31),          /* VIRTUAL ADDRESS OF PCCA       */ 00495000
*      2 PSAPCCAR PTR(31),          /* REAL ADDRESS OF PCCA          */ 00496000
*      2 PSALCCAV PTR(31),          /* VIRTUAL ADDRESS OF LCCA       */ 00497000
*      2 PSALCCAR PTR(31),          /* REAL ADDRESS OF LCCA          */ 00498000
*      2 PSATNEW PTR(31),           /* TCB NEW POINTER               */ 00499000
*      2 PSATOLD PTR(31),           /* TCB OLD POINTER               */ 00500000
*      2 PSAANEW PTR(31),           /* ASCB NEW POINTER              */ 00501000
*      2 PSAAOLD PTR(31),           /* ASCB OLD POINTER              */ 00502000
*      2 PSASUPER CHAR(4) BDY(WORD),/* SUPERVISOR CONTROL WORD       */ 00503000
*       3 PSASUP1 BIT(8),           /* FIRST BYTE OF PSASUPER        */ 00504000
*        4 PSAIO BIT(1),            /* I/O FLIH                      */ 00505000
*        4 PSASVC BIT(1),           /* SVC FLIH                      */ 00506000
*        4 PSAEXT BIT(1),           /* EXTERNAL FLIH                 */ 00507000
*        4 PSAPI BIT(1),            /* PROGRAM CHECK FLIH            */ 00508000
*        4 PSALOCK BIT(1),          /* LOCK ROUTINE                  */ 00509000
*        4 PSADISP BIT(1),          /* DISPATCHER                    */ 00510000
*        4 PSATCTL BIT(1),          /* TCTL RECOVERY FLAG (MDC310) 0143 00511000
*                                                            @Z40FP9A*/ 00512000
*        4 PSATYPE6 BIT(1),         /* TYPE 6 SVC IN CONTROL (MDC311)   00513000
*                                                            @Z40FP9A*/ 00514000
*       3 PSASUP2 BIT(8),           /* SECOND BYTE OF PSASUPER       */ 00515000
*        4 PSAIPCRI BIT(1),         /* SIGP - REMOTE IMMEDIATE       */ 00516000
*        4 PSAGTF BIT(1),           /* GTF GIVEN CONTROL FROM FLIH   */ 00517000
*        4 PSAIPCEC BIT(1),         /* EXTERNAL CALL SLIH IS ACTIVE     00518000
*                                      MDC047                        */ 00519000
*        4 PSAIPCES BIT(1),         /* EMERGENCY SIGNAL SLIH IS    0143 00520000
*                                      ACTIVE MDC048                 */ 00521000
*        4 PSAIPCE2 BIT(1),         /* EMERGENCY SIGNAL (EMS) SLIH 0143 00522000
*                                      RECURSIVE ENTRY FLAG MDC110   */ 00523000
*        4 PSAACR BIT(1),           /* AUTOMATIC CPU RECONFIGURATION    00524000
*                                      (ACR) IN CONTROL MDC119       */ 00525000
*        4 PSARTM BIT(1),           /* RECOVERY TERMINATION MONITOR     00526000
*                                      (RTM) IN CONTROL MDC120       */ 00527000
*        4 PSALCR BIT(1),           /* LOW CORE REFRESH ROUTINE IS 0143 00528000
*                                      ACTIVE MDC126                 */ 00529000
*       3 PSASUP3 BIT(8),           /* THIRD BYTE OF PSASUPER        */ 00530000
*        4 PSAIOSUP BIT(1),         /* IF ON, A MAINLINE IOS       0143 00531000
*                                      COMPONENT SUCH AS CHANNEL   0143 00532000
*                                      SCHEDULER HAS ENTERED A     0143 00533000
*                                      PHYSICALLY DISABLED STATE   0143 00534000
*                                      WITHOUT REGARD TO LOCKING   0143 00535000
*                                      REQUIREMENTS MDC127           */ 00536000
*        4 PSAPI2 BIT(1),           /* PROGRAM CHECK FLIH RECURSION     00537000
*                                      (MDC301)              @ZM08516*/ 00538000
*        4 PSAPSREG BIT(1),         /* PSA RECOVERY RECURSION      0143 00539000
*                                      (MDC302)              @ZM08516*/ 00540000
*        4 PSASPR BIT(1),           /* SUPER FRR IS ACTIVE (MDC305)     00541000
*                                                            @ZA02995*/ 00542000
*        4 PSAESTA BIT(1),          /* ESTAE RECOVERY ROUTINE ACTIVE    00543000
*                                      (MDC312)              @Z40FP9A*/ 00544000
*        4 PSARV012 BIT(1),         /* RESERVED                      */ 00545000
*        4 PSARV013 BIT(1),         /* RESERVED                      */ 00546000
*        4 PSARV014 BIT(1),         /* RESERVED                      */ 00547000
*       3 PSASUP4 BIT(8),           /* FOURTH BYTE OF PSASUPER       */ 00548000
*        4 PSARV015 BIT(1),         /* RESERVED                      */ 00549000
*        4 PSARV016 BIT(1),         /* RESERVED                      */ 00550000
*        4 PSARV017 BIT(1),         /* RESERVED                      */ 00551000
*        4 PSARV018 BIT(1),         /* RESERVED                      */ 00552000
*        4 PSARV019 BIT(1),         /* RESERVED                      */ 00553000
*        4 PSARV020 BIT(1),         /* RESERVED                      */ 00554000
*        4 PSARV021 BIT(1),         /* RESERVED                      */ 00555000
*        4 PSARV022 BIT(1),         /* RESERVED                      */ 00556000
*      2 PSAGPREG(3) FIXED(31),     /* REGISTER SAVE AREA FOR I/O  0143 00557000
*                                      FLIH, SVC FLIH, EXTERNAL FLIH    00558000
*                                      AND SYSTEM TRACE              */ 00559000
*      2 PSARSREG FIXED(31),        /* RESTART FLIH REGISTER SAVE    */ 00560000
*      2 PSAPIREG FIXED(31),        /* PROGRAM CHECK FLIH REGISTER 0143 00561000
*                                      SAVE                          */ 00562000
*      2 PSAEXPS1 CHAR(8) BDY(DWORD),/* EXTERNAL FLIH PSW SAVE AREA 1*/ 00563000
*      2 PSAEXPS2 CHAR(8) BDY(DWORD),/* EXTERNAL FLIH PSW SAVE AREA 2*/ 00564000
*      2 PSAMPSW CHAR(8) BDY(DWORD),/* SETLOCK MODEL PSW             */ 00565000
*      2 PSAMCHEX CHAR(8) BDY(DWORD),/* MCH EXIT PSW                 */ 00566000
*      2 PSAIPCR CHAR(4) BDY(WORD), /* IPC INSTRUCTION TO BE EXECUTED*/ 00567000
*      2 PSAIPCRM CHAR(1),          /* BYTE USED BY ABOVE IPC      0143 00568000
*                                      INSTRUCTION                   */ 00569000
*      2 * CHAR(3),                 /* RESERVED                      */ 00570000
*      2 PSAIPCD CHAR(4) BDY(WORD), /* IPC INSTRUCTION TO BE EXECUTED*/ 00571000
*      2 PSAIPCDM CHAR(1),          /* BYTE USED BY ABOVE IPC      0143 00572000
*                                      INSTRUCTION                   */ 00573000
*      2 * CHAR(3),                 /* RESERVED                      */ 00574000
*      2 PSAIPCSA FIXED(31),        /* IPC REGISTER SAVE AREA MDC049 */ 00575000
*      2 PSAHLHIS FIXED(31),        /* SAVE AREA FOR PSAHLHI MDC050  */ 00576000
*      2 PSARECUR CHAR(1),          /* RESTART FLIH RECURSION      0143 00577000
*                                      INDICATOR. IF X'00', FLIH NOT    00578000
*                                      IN CONTROL. IF X'FF', FLIH IN    00579000
*                                      CONTROL, ENTRY IS RECURSIVE 0143 00580000
*                                      MDC093                        */ 00581000
*      2 PSADSSGO PTR(8),           /* INITIALIZE DSS FLAG, SET BY 0143 00582000
*                                      OPERATOR. IF X'00', DSS NOT TO   00583000
*                                      BE ACTIVATED. IF NOT X'00', 0143 00584000
*                                      NEXT RESTART INTERRUPT FROM 0143 00585000
*                                      CONSOLE SHOULD INITIALIZE DSS.   00586000
*                                      MDC094                        */ 00587000
*      2 PSARV050 FIXED(15),        /* RESERVED                      */ 00588000
*      2 PSASRSA PTR(31),           /* REAL ADDRESS OF SAVE AREA USED   00589000
*                                      DURING STOP AND RESTART     0143 00590000
*                                      SUBROUTINE MDC095             */ 00591000
*      2 PSACLHT CHAR(56) BDY(WORD),/* CPU LOCKS HELD TABLE.       0143 00592000
*                                      INITIALIZED TO ZERO. IF LOCK     00593000
*                                      IS HELD, WORD REPRESENTING  0143 00594000
*                                      LOCK HAS ITS ADDRESS.         */ 00595000
*       3 PSADISPL PTR(31),         /* GLOBAL DISPATCHER LOCK        */ 00596000
*       3 PSAASML PTR(31),          /* AUXILIARY STORAGE MANAGEMENT     00597000
*                                      (ASM) LOCK MDC002             */ 00598000
*       3 PSASALCL PTR(31),         /* SPACE ALLOCATION LOCK MDC003  */ 00599000
*       3 PSAIOSSL PTR(31),         /* IOS SYNCHRONIZATION LOCK    0143 00600000
*                                      MDC010                        */ 00601000
*       3 PSAIOSCL PTR(31),         /* IOS CHANNEL AVAILABLE TABLE 0143 00602000
*                                      LOCK MDC004                   */ 00603000
*       3 PSAIOSUL PTR(31),         /* IOS UNIT CONTROL BLOCK LOCK 0143 00604000
*                                      MDC005                        */ 00605000
*       3 PSAIOSLL PTR(31),         /* IOS LOGICAL CHANNEL QUEUE LOCK   00606000
*                                      MDC006                        */ 00607000
*       3 PSATPNCL PTR(31),         /* TCAM'S TPNCP LOCK MDC007      */ 00608000
*       3 PSATPDNL PTR(31),         /* TCAM'S TPDNCB LOCK MDC008     */ 00609000
*       3 PSATPACL PTR(31),         /* TCAM'S TPACBDEB LOCK MDC009   */ 00610000
*       3 PSAOPTL PTR(31),          /* OPTIMIZER LOCK                */ 00611000
*       3 PSACMSL PTR(31),          /* CROSS MEMORY SERVICES LOCK    */ 00612000
*       3 PSALOCAL PTR(31),         /* LOCAL LOCK                    */ 00613000
*       3 PSARV023 PTR(31),         /* RESERVED LOCK                 */ 00614000
*      2 PSALKSA CHAR(64) BDY(WORD),/* SETLOCK REGISTER SAVE AREA    */ 00615000
*       3 PSALKR0 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 0 */ 00616000
*       3 PSALKR1 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 1 */ 00617000
*       3 PSALKR2 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 2 */ 00618000
*       3 PSALKR3 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 3 */ 00619000
*       3 PSALKR4 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 4 */ 00620000
*       3 PSALKR5 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 5 */ 00621000
*       3 PSALKR6 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 6 */ 00622000
*       3 PSALKR7 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 7 */ 00623000
*       3 PSALKR8 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 8 */ 00624000
*       3 PSALKR9 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 9 */ 00625000
*       3 PSALKR10 FIXED(31),       /* SETLOCK'S CALLER'S REGISTER 10*/ 00626000
*       3 PSALKR11 FIXED(31),       /* SETLOCK'S CALLER'S REGISTER 11*/ 00627000
*       3 PSALKR12 FIXED(31),       /* SETLOCK'S CALLER'S REGISTER 12*/ 00628000
*       3 PSALKR13 FIXED(31),       /* SETLOCK'S CALLER'S REGISTER 13*/ 00629000
*       3 PSALKR14 FIXED(31),       /* SETLOCK'S CALLER'S REGISTER 14*/ 00630000
*       3 PSALKR15 FIXED(31),       /* SETLOCK'S CALLER'S REGISTER 15*/ 00631000
*      2 PSAHLHI CHAR(4) BDY(WORD), /* HIGHEST LOCK HELD INDICATOR   */ 00632000
*       3 PSACLHS BIT(32) BDY(WORD),/* CPU LOCKS HELD STRING MDC122  */ 00633000
*      2 PSALITA PTR(31),           /* ADDRESS OF LOCK INTERFACE   0143 00634000
*                                      TABLE                         */ 00635000
*      2 PSAPSWSV CHAR(8) BDY(DWORD),/* PSW SAVE AREA FOR DISPATCHER    00636000
*                                      AND ACR                       */ 00637000
*      2 PSACR0 FIXED(31),          /* SAVE AREA FOR CONTROL REGISTER   00638000
*                                      0                             */ 00639000
*      2 PSAMCHFL BIT(8),           /* MCH RECURSION FLAGS           */ 00640000
*      2 PSASYMSK CHAR(1),          /* THIS FIELD WILL BE USED IN  0143 00641000
*                                      CONJUNCTION WITH THE STNSM  0143 00642000
*                                      INSTRUCTION TO PLACE IOS    0143 00643000
*                                      CHANNEL SCHEDULER INTO A    0143 00644000
*                                      DISABLED STATE AND          0143 00645000
*                                      SIMULTANEOUSLY SAVE THE SYSTEM   00646000
*                                      MASK OF THE CALLER MDC022     */ 00647000
*      2 PSARV061 CHAR(1),          /* RESERVED (MDC060)       YM4244*/ 00648000
*      2 PSAMCHIC CHAR(1),          /* MCH INITIALIZATION COMPLETE 0143 00649000
*                                      FLAGS MDC098                  */ 00650000
*      2 PSAWKRAP PTR(31),          /* REAL ADDRESS OF VARY CPU    0143 00651000
*                                      PARAMETER LIST MDC106         */ 00652000
*      2 PSAWKVAP PTR(31),          /* VIRTUAL ADDRESS OF VARY CPU 0143 00653000
*                                      PARAMETER LIST MDC107         */ 00654000
*      2 PSAVSTAP FIXED(15),        /* WORK AREA FOR VARY CPU MDC108 */ 00655000
*      2 PSACPUSA PTR(15),          /* PHYSICAL CPU ADDRESS (STATIC)    00656000
*                                      (MDC131)                YM3489*/ 00657000
*      2 PSASTOR FIXED(31),         /* MASTER MEMORY'S SEGMENT TABLE    00658000
*                                      ORIGIN REGISTER (STOR) VALUE  */ 00659000
*      2 PSADSSRS FIXED(31),        /* REGISTER SAVE FOR DSS PROGRAM    00660000
*                                      AND SVC INTERRUPT HANDLERS  0143 00661000
*                                      MDC053                        */ 00662000
*      2 PSADSSR2 FIXED(31),        /* REGISTER SAVE AREA FOR DSS I/O   00663000
*                                      AND EXTERNAL INTERRUPT      0143 00664000
*                                      HANDLERS MDC054               */ 00665000
*      2 PSADSSR3 FIXED(31),        /* REGISTER SAVE AREA FOR DSS  0143 00666000
*                                      ERROR RECOVERY ROUTINE MDC055 */ 00667000
*      2 PSADSSWK FIXED(31),        /* WORK AREA FOR DSS INTERRUPT 0143 00668000
*                                      HANDLERS MDC056               */ 00669000
*      2 PSADSSTS(5) FIXED(31),     /* REGISTER SAVE FOR DSS MODULES    00670000
*                                      MAKING CALLS TO IQATSS MDC023 */ 00671000
*      2 PSADSSFL CHAR(4) BDY(WORD),/* DSS FLAG BYTES MDC024         */ 00672000
*       3 PSADSSF1 BIT(8),          /* DSS STATUS BYTE MDC029        */ 00673000
*        4 PSADSSMV BIT(1),         /* DSS MONITORING, VS2 RUNNING 0143 00674000
*                                      MDC030                        */ 00675000
*        4 PSADSSDM BIT(1),         /* DSS IN VS2-2 VM MDC031        */ 00676000
*        4 PSADSSDD BIT(1),         /* DSS IN DSS VM MDC032          */ 00677000
*        4 PSADSSDW BIT(1),         /* DSS IN DSS WAIT MDC033        */ 00678000
*        4 PSADSSTP BIT(1),         /* DSS PROCESSING SIGP MDC034    */ 00679000
*        4 PSADSSSP BIT(1),         /* DSS SIGP PENDING MDC035       */ 00680000
*        4 PSADSSOI BIT(1),         /* DSS EXECUTING OVERLAID      0143 00681000
*                                      INSTRUCTION MDC036            */ 00682000
*        4 PSADSSPI BIT(1),         /* DSS EXECUTING PRIVILEGED    0143 00683000
*                                      INSTRUCTION MDC037            */ 00684000
*       3 PSADSSF2 CHAR(1),         /* SYSTEM STATUS BYTE MDC038     */ 00685000
*       3 PSADSSF3 BIT(8),          /* DSS FLAG BYTE MDC099          */ 00686000
*        4 PSADSSGP BIT(1),         /* DSS SIGP INDICATOR MDC100     */ 00687000
*        4 PSADSSES BIT(1),         /* ERROR SHORT SAVE INDICATOR  0143 00688000
*                                      MDC113                        */ 00689000
*        4 PSADSSNM BIT(1),         /* NON-MONITORABLE CODE INDICATOR   00690000
*                                      MDC114                        */ 00691000
*        4 PSADSSRW BIT(1),         /* DSS OWNS CVTRSTWD MDC117      */ 00692000
*        4 PSADSSMC BIT(1),         /* MACHINE CHECK RUNNING (MDC132)   00693000
*                                                              YM6287*/ 00694000
*        4 PSARV055 BIT(1),         /* RESERVED FOR DSS MDC100       */ 00695000
*        4 PSARV056 BIT(1),         /* RESERVED FOR DSS MDC100       */ 00696000
*        4 PSARV057 BIT(1),         /* RESERVED FOR DSS MDC100       */ 00697000
*       3 PSADSSF4 BIT(8),          /* DSS RECURSION FLAGS MDC101    */ 00698000
*        4 PSADSSRC BIT(1),         /* PROGRAM-SVC RECURSION FLAG  0143 00699000
*                                      MDC057                        */ 00700000
*        4 PSADSS12 BIT(1),         /* PROGRAM INTERRUPT 12 RECURSION   00701000
*                                      FLAG MDC058                   */ 00702000
*        4 PSADSSIE BIT(1),         /* I/O-EXTERNAL RECURSION FLAG 0143 00703000
*                                      MDC059                        */ 00704000
*        4 PSADSSC0 BIT(1),         /* CONTROL REGISTER 0 INVALID  0143 00705000
*                                      FLAG MDC092                   */ 00706000
*        4 PSADSSDE BIT(1),         /* DAT ERROR WHILE DSS RUNNING IN   00707000
*                                      VS2 VM MDC102                 */ 00708000
*        4 PSADSSVE BIT(1),         /* DAT ERROR WHILE DSS RUNNING IN   00709000
*                                      DSS VM MDC103                 */ 00710000
*        4 PSADSS10 BIT(1),         /* SEGMENT EXCEPTION RECURSION 0143 00711000
*                                      FLAG MDC104                   */ 00712000
*        4 PSADSS05 BIT(1),         /* ADDRESSING EXCEPTION RECURSION   00713000
*                                      FLAG MDC105                   */ 00714000
*      2 PSADSSRP CHAR(8) BDY(DWORD),/* DSS TO VS2-2 RESUME PSW    0143 00715000
*                                      MDC025                        */ 00716000
*      2 PSADSSPP CHAR(8) BDY(DWORD),/* DSS PSW FOR RETURNING CONTROL   00717000
*                                      FROM PRIVILEGED INSTRUCTION 0143 00718000
*                                      STREAM TO VS2 MDC026          */ 00719000
*      2 PSADSS14 FIXED(31),        /* RESTART SECOND LEVEL INTERRUPT   00720000
*                                      HANDLER CONTROL REGISTER 14 0143 00721000
*                                      SAVE AREA MDC115              */ 00722000
*      2 PSADSSFW FIXED(31),        /* FULL-WORD DSS WORK AREA MDC116*/ 00723000
*      2 PSADSSPR FIXED(31),        /* DSS REGISTER SAVE FOR       0143 00724000
*                                      PRIVILEGED INSTRUCTION STREAM    00725000
*                                      MDC028                        */ 00726000
*      2 PSADSSED CHAR(0) BDY(WORD),/* END OF DSS FIELDS MDC045      */ 00727000
*      2 PSARV025 FIXED(31),        /* RESERVED FOR DSS              */ 00728000
*      2 PSARV040 PTR(31),          /* RESERVED FOR DSS              */ 00729000
*      2 PSARV041 PTR(31),          /* RESERVED FOR DSS              */ 00730000
*      2 PSARV042 PTR(31),          /* RESERVED FOR DSS              */ 00731000
*      2 PSARV043 PTR(31),          /* RESERVED FOR DSS              */ 00732000
*      2 PSARV044 PTR(31),          /* RESERVED FOR DSS              */ 00733000
*      2 PSARV045 PTR(31),          /* RESERVED FOR DSS              */ 00734000
*      2 PSARSVT(16) PTR(31),       /* RECOVERY STACK VECTOR TABLE 0143 00735000
*                                      (EACH ELEMENT MAPPED BELOW) 0143 00736000
*                                      MDC064                        */ 00737000
*      2 PSASRPSW CHAR(8) BDY(DWORD),/* RESUME PSW FOR STOP AND    0143 00738000
*                                      RESTART SUBROUTINE MDC096     */ 00739000
*      2 PSARSPSW CHAR(8) BDY(DWORD),/* RESUME PSW FIELD FOR RESTART    00740000
*                                      INTERRUPT HANDLER MDC097      */ 00741000
*      2 PSASTART CHAR(16) BDY(DWORD),/* START FATHOM RECORDING    0143 00742000
*                                      MDC111                        */ 00743000
*      2 PSASTOP CHAR(16) BDY(DWORD),/* STOP FATHOM RECORDING MDC112 */ 00744000
*      2 PSASFACC CHAR(4) BDY(WORD),/* SETFRR ABEND COMPLETION CODE     00745000
*                                      USED WHEN A SETFRR ADD IS   0143 00746000
*                                      ISSUED AGAINST A FULL FRR   0143 00747000
*                                      STACK MDC123                  */ 00748000
*      2 PSALSFCC CHAR(4) BDY(WORD),/* A LOAD INSTRUCTION TO PRIME 0143 00749000
*                                      REGISTER 1 WITH THE SETFRR  0143 00750000
*                                      ABEND COMPLETION CODE IN    0143 00751000
*                                      PSASFACC MDC124               */ 00752000
*      2 PSASVC13 CHAR(2),          /* AN SVC 13 INSTRUCTION MDC125  */ 00753000
*      2 PSARV059 FIXED(15),        /* RESERVED                      */ 00754000
*      2 PSAPIR2 FIXED(31),         /* PROGRAM CHECK FLIH REGISTER 0143 00755000
*                                      SAVE (MDC303)         @ZM08516*/ 00756000
*      2 PSAPCPSW CHAR(8) BDY(DWORD),/* TEMPORARY OLD PSW STORAGE FOR   00757000
*                                      PROGRAM FLIH (MDC129)   YM0943*/ 00758000
*      2 PSAATCVT PTR(31),          /* ADDRESS OF VTAM ATCVT.      0143 00759000
*                                      INITIALIZED BY VTAM. (MDC300)    00760000
*                                                            @Z30AP9A*/ 00761000
*      2 PSAWTCOD PTR(31),          /* CALLER-SUPPLIED WAIT STATE  0143 00762000
*                                      INFORMATION FOR STOP/RESTART     00763000
*                                      (MDC306)              @ZA00904*/ 00764000
*      2 PSACDAL PTR(31),           /* ADDRESS OF COMMON DISPATCHER     00765000
*                                      ELEMENT FOR THIS CPU (MDC307)    00766000
*                                                            @Z40FP9A*/ 00767000
*      2 PSARV062 FIXED(31),        /* RESERVED              @Z40AQ9A*/ 00768000
*      2 PSAUSEND CHAR(0) BDY(DWORD),/* END OF ASSIGNED FIELDS MDC109*/ 00769000
*      2 * CHAR(2024) BDY(DWORD),   /* RESERVED              @Z40AQ9A*/ 00770000
*      2 PSASTAK CHAR(596) BDY(DWORD),/* NORMAL FRR STACK (MDC304) 0143 00771000
*                                                            @ZM32352*/ 00772000
*      2 * CHAR(428);               /* RESERVED FOR EXPANSION OF   0143 00773000
*                                      PSASTAK (MDC304)      @ZM32352*/ 00774000
*   DECLARE                                                        0144 00775000
*     FLC DEF(PSA) CHAR(LENGTH(PSA)) BDY(DWORD);                   0144 00776000
*   DECLARE                                                        0145 00777000
*     1 PSARSVTE CHAR(64) DEF(PSARSVT) BDY(WORD),/* RECOVERY STACK 0145 00778000
*                                      VECTOR TABLE MDC065           */ 00779000
*      2 PSACSTK PTR(31),           /* ADDRESS OF CURRENTLY USED   0145 00780000
*                                      FUNCTIONAL RECOVERY ROUTINE 0145 00781000
*                                      (FRR) STACK MDC061            */ 00782000
*      2 PSANSTK PTR(31),           /* ADDRESS OF NORMAL FRR STACK 0145 00783000
*                                      MDC062                        */ 00784000
*      2 PSASSTK PTR(31),           /* ADDRESS OF SVC-I/O- DISPATCHER   00785000
*                                      FRR STACK MDC063              */ 00786000
*      2 PSASSAV PTR(31),           /* ADDRESS OF INTERRUPTED STACK     00787000
*                                      SAVED BY SVC-I/O- DISPATCHER     00788000
*                                      MDC066                        */ 00789000
*      2 PSAMSTK PTR(31),           /* ADDRESS OF MCH FRR STACK    0145 00790000
*                                      MDC067                        */ 00791000
*      2 PSAMSAV PTR(31),           /* ADDRESS OF INTERRUPTED STACK     00792000
*                                      SAVED BY MCH MDC068           */ 00793000
*      2 PSAPSTK PTR(31),           /* ADDRESS OF PROGRAM CHECK FLIH    00794000
*                                      FRR STACK MDC069              */ 00795000
*      2 PSAPSAV PTR(31),           /* ADDRESS OF INTERRUPTED STACK     00796000
*                                      SAVED BY PROGRAM CHECK FLIH 0145 00797000
*                                      MDC070                        */ 00798000
*      2 PSAESTK1 PTR(31),          /* ADDRESS OF EXTERNAL FLIH FRR     00799000
*                                      STACK FOR NON- RECURSIVE    0145 00800000
*                                      ENTRIES MDC071                */ 00801000
*      2 PSAESAV1 PTR(31),          /* ADDRESS OF INTERRUPTED STACK     00802000
*                                      SAVED BY NON- RECURSIVE     0145 00803000
*                                      ENTRIES MDC072                */ 00804000
*      2 PSAESTK2 PTR(31),          /* ADDRESS OF EXTERNAL FLIH FRR     00805000
*                                      STACK FOR FIRST LEVEL       0145 00806000
*                                      RECURSIONS MDC073             */ 00807000
*      2 PSAESAV2 PTR(31),          /* ADDRESS OF INTERRUPTED STACK     00808000
*                                      SAVED BY EXTERNAL FLIH FOR  0145 00809000
*                                      FIRST LEVEL RECURSIONS MDC074 */ 00810000
*      2 PSAESTK3 PTR(31),          /* ADDRESS OF EXTERNAL FLIH FRR     00811000
*                                      STACK FOR SECOND LEVEL      0145 00812000
*                                      RECURSIONS AND ACR MDC075     */ 00813000
*      2 PSAESAV3 PTR(31),          /* ADDRESS OF INTERRUPTED STACK     00814000
*                                      SAVED BY EXTERNAL FLIH (ACR)     00815000
*                                      FOR SECOND LEVEL RECURSIONS 0145 00816000
*                                      MDC076                        */ 00817000
*      2 PSARSTK PTR(31),           /* ADDRESS OF RESTART FLIH FRR 0145 00818000
*                                      STACK MDC077                  */ 00819000
*      2 PSARSAV PTR(31);           /* ADDRESS OF INTERRUPTED STACK     00820000
*                                      SAVED BY RESTART FLIH MDC078  */ 00821000
*                                                                  0145 00822000
*   /*****************************************************************/ 00823000
*   /*                                                               */ 00824000
*   /* INCLUDE ASVMT                                                 */ 00825000
*   /*                                                               */ 00826000
*   /*****************************************************************/ 00827000
*                                                                  0146 00828000
*/*  MACMEAN ASMVT MEANS ASM VECTOR TABLE                            */ 00829000
*/*  MACCOMP Y-4SC1CW/PZD81                                          */ 00830000
*/*  MACSTAT Y-475073/415304                                         */ 00831000
*/* A-000000-999999                                          @Z40WPWJ*/ 00832000
*/* ******************************************************************/ 00833000
*/*                                                                  */ 00834000
*/*   NAME:  ILRASMVT                                                */ 00835000
*/*                                                                  */ 00836000
*/*   FUNCTION:  AUXILIARY STORAGE MANAGEMENT VECTOR TABLE           */ 00837000
*/*                                                                  */ 00838000
*/*   STATUS:  OS/VS2 RELEASE 4.1                                    */ 00839000
*/*                                                                  */ 00840000
*/*   EXTERNAL REFERENCES:  ASMVTPTR - USER DEFINED POINTER TO ASMVT */ 00841000
*/*                                                                  */ 00842000
*/*   REGISTERS USED:  N/A                                           */ 00843000
*/*                                                                  */ 00844000
*/*   REGISTERS CLOBBERED:  N/A                                      */ 00845000
*/*                                                                  */ 00846000
*/*   NOTES:  THE ASMVT PROVIDES A MEANS OF COMMUNICATION WITHIN ASM.*/ 00847000
*/*           THE ASMVT CONTAINS ALL GLOBAL COUNTS, POINTERS, ENTRY  */ 00848000
*/*           POINT ADDRESSES, AND WORK/SAVE AREAS USED BY RSM       */ 00849000
*/*           ROUTINES.  THE ASMVT IS POINTED TO BY THE CVT FIELD    */ 00850000
*/*           CVTASMVT.                                              */ 00851000
*/*                                                                  */ 00852000
*/*           THE ASMVT IS DIVIDED INTO SECTIONS RELATING TO THE     */ 00853000
*/*           DIFFERENT FUNCTIONAL AREAS OF ASM.  THE ENTRY POINT    */ 00854000
*/*           ADDRESSES, WORK/SAVE AREAS, AND CELLPOOL CONTROLLERS   */ 00855000
*/*           FOLLOW THE FUNCTIONAL SECTIONS.                        */ 00856000
*/*                                                                  */ 00857000
*/*   METHOD OF ACCESS:                                              */ 00858000
*/*           BAL - DSECT=NO SHOULD BE SPECIFIED ON THE MACRO CALL   */ 00859000
*/*                 TO AVOID CREATING A DSECT.  A USING ON ASMVT     */ 00860000
*/*                 WILL ESTABLISH ADDRESSABILITY FOR ALL SYMBOLS.   */ 00861000
*/*           PLS - DCL ASMVTPTR PTR(31)                             */ 00862000
*/*                 %INCLUDE SYSLIB(ILRASMVT)                        */ 00863000
*/*                                                                  */ 00864000
*/* ******************************************************************/ 00865000
*                                                                  0146 00866000
*   DECLARE                                                        0146 00867000
*     1 ASMVT BASED(ASMVTPTR) BDY(DWORD),/* ASM VECTOR TABLE         */ 00868000
*       3 ASMFLAG1 BIT(8),          /* ASM GLOBAL FLAG FIELD 1       */ 00869000
*         5 ASMDUPLX BIT(1),        /* DUPLEXING OPTION FLAG, 1 =  0146 00870000
*                                      DUPLEXING OF COMMON REQUESTED    00871000
*                                      DUPLEX PAGE DATA SET OPENED BY   00872000
*                                      RIM 0 = DUPLEXING NOT       0146 00873000
*                                      REQUESTED, NO DUPLEX DATA SET    00874000
*                                      OPENED BY RIM, OR DUPLEXING 0146 00875000
*                                      SUSPENDED IF DUPLEXING      0146 00876000
*                                      SUSPENDED FLAG IS ON          */ 00877000
*         5 ASMNOCWQ BIT(1),        /* NO COMMON WRITE QUEUE FLAG, 1    00878000
*                                      = DO NOT QUEUE WRITE IOE'S TO    00879000
*                                      COMMON WRITE QUEUE, 0 = DO  0146 00880000
*                                      NORMAL IOE QUEUING            */ 00881000
*         5 ASMNOLCL BIT(1),        /* NO LOCAL DATA PAGING FLAG, 1 =   00882000
*                                      ALL WRITE IOE'S MUST BE QUEUED   00883000
*                                      TO COMMON WRITE QUEUE, 0 =  0146 00884000
*                                      QUEUE IOE'S NORMALLY          */ 00885000
*         5 ASMRSV1 BIT(1),         /* RESERVED                      */ 00886000
*         5 ASMNODPX BIT(1),        /* DUPLEXING SUSPENDED FLAG, 1 =    00887000
*                                      DUPLEXING HAS BEEN SUSPENDED     00888000
*                                      BECAUSE THE DUPLEX PAGE DATA     00889000
*                                      SET IS FULL OR INOPERATIVE, 0    00890000
*                                      = DUPLEXING STILL ACTIVE IF 0146 00891000
*                                      REQUESTED                     */ 00892000
*         5 ASMPLPAF BIT(1),        /* PLPA DATA SET FULL FLAG, 1 =     00893000
*                                      PLPA DATA SET FULL, 0 = PLPA     00894000
*                                      DATA SET NOT FULL             */ 00895000
*         5 ASMCOMMF BIT(1),        /* COMMON DATA SET FULL FLAG, 1 =   00896000
*                                      COMMON DATA SET FULL, 0 =   0146 00897000
*                                      COMMON DATA SET NOT FULL      */ 00898000
*         5 ASMPLPAS BIT(1),        /* PLPA DATA SET SPILL FLAG, 1 =    00899000
*                                      PLPA DATA SET SPILLED TO    0146 00900000
*                                      COMMON DATA SET DURING PLPA 0146 00901000
*                                      BUILD AT NIP TIME, 0 = PLPA 0146 00902000
*                                      DATA SET NOT FULL AFTER PLPA     00903000
*                                      BUILD                         */ 00904000
*       3 ASMFLAG2 BIT(8),          /* ASM GLOBAL FLAG FIELD 2       */ 00905000
*         5 ASMCALLQ BIT(1),        /* QIOE CALLER FLAG, 1 = PAGE  0146 00906000
*                                      COMPLETION IS THE CALLER OF 0146 00907000
*                                      QIOE, 0 = QIOE CALLED BY SOME    00908000
*                                      OTHER ASM ROUTINE             */ 00909000
*         5 ASMNOSAV BIT(1),        /* NO SAVE FLAG, 1 =           0146 00910000
*                                      SYS1.STGINDEX UNAVAILABLE OR     00911000
*                                      FULL, SAVE REQUESTS NOT DONE,    00912000
*                                      0 = SYS1.STGINDEX AVAILABLE 0146 00913000
*                                      FOR USE                       */ 00914000
*         5 ASMNOTMR BIT(1),        /* NO TASK MODE RELEASE FLAG, 1 =   00915000
*                                      TASK MODE RELEASE (ILRTMRLG)     00916000
*                                      HAS SUFFERED INDETERMINATE  0146 00917000
*                                      ERRORS, DO NOT POST ITS ECB, 0   00918000
*                                      = ILRTMRLG RUNNING NORMALLY   */ 00919000
*         5 ASMNOTPT BIT(1),        /* NO TPARTABLE FLAG, 1 = A READ    00920000
*                                      OR WRITE OF TPARTABLE HAS   0146 00921000
*                                      FAILED, IT IS NOT UP TO DATE,    00922000
*                                      0 = TPARTABLE AVAILABLE AND 0146 00923000
*                                      CORRECT                       */ 00924000
*         5 ASMQUICK BIT(1),        /* QUICK START IPL FLAG, 1 = ASM    00925000
*                                      INITIALIZATION PROCESSED PLPA    00926000
*                                      IN QUICK START MODE (NOT    0146 00927000
*                                      CLPA), 0 = ASM INITIALIZATION    00928000
*                                      PROCESSED PLPA IN COLD START     00929000
*                                      MODE (CLPA), OR WAS FORCED TO    00930000
*                                      CONVERT TO COLD START MODE    */ 00931000
*         5 ASMWARM BIT(1),         /* WARM START IPL FLAG, 1 = ASM     00932000
*                                      INITIALIZATION PROCESSED VIO     00933000
*                                      DATA SETS IN WARM START MODE     00934000
*                                      (NOT CVIO), 0 = ASM         0146 00935000
*                                      INITIALIZATION PROCESSED VIO     00936000
*                                      DATA SETS IN CVIO MODE, OR WAS   00937000
*                                      FORCED TO CONVERT A WARM START   00938000
*                                      REQUEST TO CVIO               */ 00939000
*       3 ASMDSSFS CHAR(2),         /* IF NOT ZERO, FIRST SLOT NUMBER   00940000
*                                      OF DSS RESERVED AREA ON PLPA     00941000
*                                      PAGE DATASET          @ZA14260*/ 00942000
*       3 ASMSART PTR(31),          /* ADDRESS OF SWAP ACTIVITY    0146 00943000
*                                      REFERENCE TABLE - SART        */ 00944000
*       3 ASMPART PTR(31),          /* ADDRESS OF PAGING ACTIVITY  0146 00945000
*                                      REFERENCE TABLE - PART        */ 00946000
*       3 ASMGOS PTR(31),           /* ADDRESS OF ILRGOS, USED BY  0146 00947000
*                                      ILRCALL MACRO                 */ 00948000
*       3 ASMTRPAG PTR(31),         /* ADDRESS OF ILRTRPAG, ENTRY  0146 00949000
*                                      POINT IN ILRPOS, USED BY    0146 00950000
*                                      ILRCALL MACRO                 */ 00951000
*       3 ASMEREC PTR(31),          /* ADDRESS OF BAD SLOT ERROR   0146 00952000
*                                      RECORD MAINTAINED BY ILRCMP   */ 00953000
*       3 ASMMSGBF PTR(31),         /* ADDRESS OF MESSAGE BUFFER USED   00954000
*                                      BY ASM MESSAGE ROUTINE        */ 00955000
*       3 ASMRSV5 CHAR(4),          /* RESERVED                      */ 00956000
*/* ******************************************************************/ 00957000
*/*                                                                  */ 00958000
*/*   THE FOLLOWING SECTION OF THE ASMVT IS USED PRIMARILY BY THE    */ 00959000
*/*   I/O CONTROL MODULES OF ASM.                                    */ 00960000
*/*                                                                  */ 00961000
*/* ******************************************************************/ 00962000
*                                                                  0146 00963000
*       3 ASMSTAGQ CHAR(8) BDY(DWORD),/* I/O STAGING QUEUE CONTAINING   00964000
*                                      AIA'S WAITING FOR AVAILABLE 0146 00965000
*                                      IOE'S                         */ 00966000
*         5 ASMSTAGF PTR(31),       /* ADDRESS OF FIRST AIA ON     0146 00967000
*                                      STAGING QUEUE                 */ 00968000
*         5 ASMSTAGL PTR(31),       /* ADDRESS OF LAST AIA ON STAGING   00969000
*                                      QUEUE                         */ 00970000
*       3 ASMIORQR FIXED(31),       /* COUNT OF I/O REQUESTS (AIA'S)    00971000
*                                      RECEIVED BY I/O CONTROL, THIS    00972000
*                                      DOES NOT INCLUDE LSQA SWAP  0146 00973000
*                                      AIA'S                         */ 00974000
*       3 ASMIORQC FIXED(31),       /* COUNT OF I/O REQUESTS (AIA'S)    00975000
*                                      COMPLETED AND RETURNED TO RSM */ 00976000
*       3 ASMRSV6 CHAR(16),         /* RESERVED                      */ 00977000
*/* ******************************************************************/ 00978000
*/*                                                                  */ 00979000
*/*   THE FOLLOWING SECTION OF THE ASMVT IS USED PRIMARILY BY THE    */ 00980000
*/*   I/O SUBSYSTEM MODULES OF ASM.                                  */ 00981000
*/*                                                                  */ 00982000
*/* ******************************************************************/ 00983000
*                                                                  0146 00984000
*       3 ASMPCCWQ CHAR(8) BDY(DWORD),/* QUEUE OF AVAILABLE PCCW'S 0146 00985000
*                                      FOR SLOT SORT, QUEUE IS     0146 00986000
*                                      MAINTAINED BY COMPARE AND SWAP   00987000
*                                      LOGIC WHICH MAKES THE       0146 00988000
*                                      SYNCHRONIZATION COUNT       0146 00989000
*                                      NECESSARY                     */ 00990000
*         5 ASMPCCWA PTR(31),       /* ADDRESS OF FIRST AVAILABLE  0146 00991000
*                                      PCCW                          */ 00992000
*         5 ASMPCCWC FIXED(31),     /* SYNCHRONIZATION COUNT,      0146 00993000
*                                      DECREMENTED WHEN REMOVING   0146 00994000
*                                      PCCW'S, UNCHANGED WHEN ADDING    00995000
*                                      PCCW'S                        */ 00996000
*       3 ASMPCCWN FIXED(31),       /* NUMBER OF PCCW'S BUILT BY RIM */ 00997000
*       3 ASMBURST FIXED(31),       /* LENGTH OF SERVICE BURST FOR 0146 00998000
*                                      PAGE DATA SETS (IN          0146 00999000
*                                      MICROSECONDS)                 */ 01000000
*       3 ASMIOCNT FIXED(31),       /* COUNT OF STARTIO REQUESTS MADE   01001000
*                                      TO IOS THAT HAVE NOT COMPLETED*/ 01002000
*       3 ASMSRBCT FIXED(31),       /* NUMBER OF SRB'S SCHEDULED FOR    01003000
*                                      THE I/O SUBSYSTEM THAT HAVE 0146 01004000
*                                      NOT BEEN DISPATCHED, THIS   0146 01005000
*                                      COUNT SHOULD BE EITHER 0 OR 1,   01006000
*                                      IT IS MAINTAINED BY COMPARE 0146 01007000
*                                      AND SWAP LOGIC                */ 01008000
*       3 ASMPSRB PTR(31),          /* ADDRESS OF SRB USED TO      0146 01009000
*                                      SCHEDULE THE I/O SUBSYSTEM    */ 01010000
*       3 ASMRSV7 CHAR(16),         /* RESERVED                      */ 01011000
*/* ******************************************************************/ 01012000
*/*                                                                  */ 01013000
*/*   THE FOLLOWING SECTION OF THE ASMVT IS USED FOR PAGE DATA SET   */ 01014000
*/*   SLOT ACCOUNTING.                                               */ 01015000
*/*                                                                  */ 01016000
*/* ******************************************************************/ 01017000
*                                                                  0146 01018000
*       3 ASMBKSLT FIXED(31),       /* COUNT OF UNRESERVED LOCAL   0146 01019000
*                                      SLOTS, THIS COUNT IS        0146 01020000
*                                      DECREMENTED AND INCREMENTED 0146 01021000
*                                      FOR EACH ADDRESS SPACE OR VIO    01022000
*                                      LG CREATED OR DELETED         */ 01023000
*       3 ASMSLOTS FIXED(31),       /* COUNT OF TOTAL LOCAL SLOTS IN    01024000
*                                      ALL OPEN LOCAL PAGE DATA SETS */ 01025000
*       3 ASMVSC FIXED(31),         /* COUNT OF TOTAL LOCAL SLOTS  0146 01026000
*                                      ALLOCATED TO VIO PRIVATE AREA    01027000
*                                      PAGES                         */ 01028000
*       3 ASMNVSC FIXED(31),        /* COUNT OF TOTAL LOCAL SLOTS  0146 01029000
*                                      ALLOCATED TO NON-VIO PRIVATE     01030000
*                                      AREA PAGES                    */ 01031000
*       3 ASMERRS FIXED(31),        /* COUNT OF BAD SLOTS FOUND ON 0146 01032000
*                                      LOCAL DATA SETS DURING NORMAL    01033000
*                                      OPERATIONS                    */ 01034000
*/* ******************************************************************/ 01035000
*/*                                                                  */ 01036000
*/*   THE FOLLOWING SECTION OF THE ASMVT IS USED PRIMARILY BY THE    */ 01037000
*/*   VIO CONTROLLER AND THE GROUP OPERATOR MODULES.                 */ 01038000
*/*                                                                  */ 01039000
*/* ******************************************************************/ 01040000
*                                                                  0146 01041000
*       3 ASMSLOTV PTR(31),         /* ADDRESS OF THE SLOTV CONSTANT */ 01042000
*       3 ASMLGVT PTR(31),          /* ADDRESS OF THE LOGICAL GROUP     01043000
*                                      VECTOR TABLE                  */ 01044000
*       3 ASMSTGXA PTR(31),         /* ADDRESS OF THE ACB FOR      0146 01045000
*                                      SYS1.STGINDEX                 */ 01046000
*       3 ASMCINV FIXED(31),        /* NUMBER OF CONTROL INTERVALS IN   01047000
*                                      SYS1.STGINDEX                 */ 01048000
*       3 ASMLSAI CHAR(8) BDY(DWORD),/* ASM STORAGE LOCATOR 'S'    0146 01049000
*                                      SYMBOL GENERATOR, LAST 'S'  0146 01050000
*                                      SYMBOL ASSIGNED               */ 01051000
*         5 ASMLSAIL FIXED(31),     /* LOW WORD OF 'S' SYMBOL      0146 01052000
*                                      GENERATOR                     */ 01053000
*         5 ASMLSAIH FIXED(31),     /* HIGH WORD OF 'S' SYMBOL     0146 01054000
*                                      GENERATOR                     */ 01055000
*       3 ASMGOSQS CHAR(8) BDY(DWORD),/* DOUBLEWORD REFERENCE FOR GOS   01056000
*                                      WORK QUEUES                   */ 01057000
*         5 ASMGOSWT FIXED(31),     /* QUEUE OF ELEMENTS FOR ACE'S 0146 01058000
*                                      WAITING FOR VSAM BUFFER TO  0146 01059000
*                                      BECOME AVAILABLE, USED BY   0146 01060000
*                                      ILRGOS                        */ 01061000
*         5 ASMGOSWK FIXED(31),     /* FIFO WORK QUEUE OF ELEMENTS 0146 01062000
*                                      FOR ACE'S, USED BY ILRGOS TO     01063000
*                                      START OPERATIONS WAITING FOR     01064000
*                                      VSAM BUFFERS                  */ 01065000
*       3 ASMREQCT FIXED(31),       /* NUMBER OF SIMULTANEOUS      0146 01066000
*                                      REQUESTS THAT CAN BE MADE TO     01067000
*                                      VSAM, THIS NUMBER (MINUS ONE     01068000
*                                      FOR ILRTMRLG'S USE)         0146 01069000
*                                      CORRESPONDS TO THE STRING   0146 01070000
*                                      NUMBER PARAMETER ON THE OPEN     01071000
*                                      FOR SYS1.STGINDEX             */ 01072000
*       3 ASMTCBPT PTR(31),         /* ADDRESS OF ASM TCB            */ 01073000
*       3 ASMTMECB FIXED(31),       /* ECB USED BY ILRTMRLG TO WAIT     01074000
*                                      FOR WORK, THIS ECB IS POSTED     01075000
*                                      BY ILRRLG                     */ 01076000
*       3 ASMRLGRQ FIXED(31),       /* REQUEST QUEUE FOR ILRTMRLG  0146 01077000
*                                      CONSISTING OF ACE'S QUEUED BY    01078000
*                                      ILRRLG, QUEUE IS SERIALIZED BY   01079000
*                                      COMPARE AND SWAP LOGIC        */ 01080000
*       3 ASMRLGWQ FIXED(31),       /* WORK QUEUE FOR ILRTMRLG TO  0146 01081000
*                                      HOLD ACE'S MOVED FROM REQUEST    01082000
*                                      QUEUES                        */ 01083000
*       3 ASMTASCB PTR(31),         /* ADDRESS OF ASCB FOR ADDRESS 0146 01084000
*                                      SPACE IN WHICH ILRTMRLG IS  0146 01085000
*                                      RUNNING                       */ 01086000
*       3 ASMRSV8 CHAR(8),          /* RESERVED                      */ 01087000
*/* ******************************************************************/ 01088000
*/*                                                                  */ 01089000
*/*   THE FOLLOWING SECTION OF THE ASMVT CONTAINS ENTRY POINT        */ 01090000
*/*   ADDRESSES OF THOSE ASM ROUTINES OR SUBROUTINES THAT ARE CALLED */ 01091000
*/*   BY MORE THAN ONE MODULE, OR THAT RESIDE IN LPA.  LPA ROUTINE   */ 01092000
*/*   ENTRY POINTS ARE DETERMINED AT TASK MODE INITIALIZATION.       */ 01093000
*/*                                                                  */ 01094000
*/* ******************************************************************/ 01095000
*                                                                  0146 01096000
*       3 ASMPQIOE PTR(31),         /* ADDRESS OF ILRQIOE, SUBROUTINE   01097000
*                                      OF ILRPAGIO                   */ 01098000
*       3 ASMPFRSL PTR(31),         /* ADDRESS OF ILRFRSL1, FREESLOT    01099000
*                                      ENTRY POINT OF ILRFRSLT       */ 01100000
*       3 ASMPFRSW PTR(31),         /* ADDRESS OF ILRFLSW1, FREESWAP    01101000
*                                      ENTRY POINT OF ILRFRSLT       */ 01102000
*       3 ASMPTM PTR(31),           /* ADDRESS OF ILRPTM             */ 01103000
*       3 ASMPSWPD PTR(31),         /* ADDRESS OF ILRSWPDR           */ 01104000
*       3 ASMPSRMT PTR(31),         /* ADDRESS OF ILRPSRMT, PART   0146 01105000
*                                      MONITOR AND SWAP DRIVER RMTR  */ 01106000
*       3 ASMPSRBC PTR(31),         /* ADDRESS OF ILRSRBC            */ 01107000
*       3 ASMVRMTR PTR(31),         /* ADDRESS OF ILRSRBRM, ENTRY  0146 01108000
*                                      POINT OF ILRSRBC FOR VIO RMTR */ 01109000
*       3 ASMPEX PTR(31),           /* ADDRESS OF ILRPEX             */ 01110000
*       3 ASMPCMPD PTR(32),         /* ADDRESS OF ILRCMPDI, ENTRY  0146 01111000
*                                      POINT OF ILRCMP, THE HIGH   0146 01112000
*                                      ORDER BIT OF THIS POINTER IS     01113000
*                                      SET BY THE ASM RIM TO ALLOW 0146 01114000
*                                      ROUTINES BUILDING AN IOSB TO     01115000
*                                      SET THE DIE EXIT ADDRESS AND     01116000
*                                      THE NO-TRAS FLAG IN ONE     0146 01117000
*                                      INSTRUCTION                   */ 01118000
*       3 ASMPCMPN PTR(31),         /* ADDRESS OF ILRCMPNE, ENTRY  0146 01119000
*                                      POINT OF ILRCMP               */ 01120000
*       3 ASMPCMPA PTR(31),         /* ADDRESS OF ILRCMPAE, ENTRY  0146 01121000
*                                      POINT OF ILRCMP               */ 01122000
*       3 ASMPCMP PTR(31),          /* ADDRESS OF ILRCMP             */ 01123000
*       3 ASMPSAV PTR(31),          /* ADDRESS OF ILRSAV             */ 01124000
*       3 ASMPACT PTR(31),          /* ADDRESS OF ILRACT             */ 01125000
*       3 ASMPRLG PTR(31),          /* ADDRESS OF ILRRLG             */ 01126000
*       3 ASMPFRLG PTR(31),         /* ADDRESS OF ILRFRELG, ENTRY  0146 01127000
*                                      POINT OF ILRGOS               */ 01128000
*       3 ASMPMSG0 PTR(31),         /* ADDRESS OF ILRMSG00           */ 01129000
*       3 ASMPMSGS PTR(31),         /* ADDRESS OF ILRMSGSP, ENTRY  0146 01130000
*                                      POINT OF ILRMSG00             */ 01131000
*       3 ASMPVACQ PTR(31),         /* ADDRESS OF ILRVACQ2, ENTRY  0146 01132000
*                                      POINT OF ILRFRR01             */ 01133000
*       3 ASMPIOFR PTR(31),         /* ADDRESS OF ILRIOFRR, I/O    0146 01134000
*                                      CONTROL RECOVERY ROUTINE      */ 01135000
*       3 ASMPVACE PTR(31),         /* ADDRESS OF ILRVACE, ENTRY   0146 01136000
*                                      POINT OF ILRFRR01             */ 01137000
*       3 ASMRSV10 CHAR(16),        /* RESERVED                      */ 01138000
*/* ******************************************************************/ 01139000
*/*                                                                  */ 01140000
*/*   THE FOLLOWING SECTION OF THE ASMVT CONTAINS THE POOL           */ 01141000
*/*   CONTROLLERS THAT ARE USED BY THE GMA MACRO TO OBTAIN AND       */ 01142000
*/*   RELEASE CELLS FOR THOSE ROUTINES REQUIRING ONE OF THESE        */ 01143000
*/*   CONTROL BLOCKS.  THE POOL CONTROLLER MAPPING APPEARS AT THE    */ 01144000
*/*   END OF THE ASMVT.                                              */ 01145000
*/*                                                                  */ 01146000
*/* ******************************************************************/ 01147000
*                                                                  0146 01148000
*       3 ASMIOEPC CHAR(16) BDY(DWORD),/* IOE POOL CONTROLLER        */ 01149000
*       3 ASMBWKPC CHAR(16) BDY(DWORD),/* 256 BYTE WORKAREA POOL   0146 01150000
*                                      CONTROLLER                    */ 01151000
*       3 ASMSWKPC CHAR(16) BDY(DWORD),/* 512 BYTE WORKAREA POOL   0146 01152000
*                                      CONTROLLER, USED EXCLUSIVELY     01153000
*                                      BY ILRVSAMI                   */ 01154000
*       3 ASMACEPC CHAR(24) BDY(DWORD),/* ACE POOL CONTROLLER        */ 01155000
*/* ******************************************************************/ 01156000
*/*                                                                  */ 01157000
*/*   THE FOLLOWING SECTION OF THE ASMVT CONTAINS WORK-SAVE AREAS    */ 01158000
*/*   USED BY THE ASM ROUTINES THAT RUN WITH THE SALLOC LOCK.        */ 01159000
*/*                                                                  */ 01160000
*/* ******************************************************************/ 01161000
*                                                                  0146 01162000
*       3 ASMWKSA1 CHAR(80) BDY(DWORD),/* USED BY ILRPAGIO           */ 01163000
*       3 ASMWKSA2 CHAR(80) BDY(DWORD),/* USED BY ILRQIOE, SUBROUTINE   01164000
*                                      OF ILRPAGIO                   */ 01165000
*       3 ASMWKSA3 CHAR(80) BDY(DWORD),/* USED BY ILRPAGCM           */ 01166000
*       3 ASMWKSA4 CHAR(80) BDY(DWORD),/* USED BY ILRSWAP            */ 01167000
*       3 ASMWKSA5 CHAR(80) BDY(DWORD),/* USED BY ILRSLSQA,        0146 01168000
*                                      SUBROUTINE OF ILRSWAP         */ 01169000
*       3 ASMWKSA6 CHAR(80) BDY(DWORD),/* USED BY ILRPOS AND ILRVIOCM*/ 01170000
*       3 ASMWKSA7 CHAR(80) BDY(DWORD),/* USED BY ILRPEX AND ILRMSG00*/ 01171000
*       3 ASMSAVE CHAR(72) BDY(DWORD),/* STANDARD REGISTER SAVE AREA    01172000
*                                      USED BY ASM WHEN CALLING OTHER   01173000
*                                      ROUTINES                      */ 01174000
*       3 ASMRSV12 CHAR(24);        /* RESERVED                      */ 01175000
*/* ******************************************************************/ 01176000
*/*                                                                  */ 01177000
*/*   THE FOLLOWING IS THE MAPPING OF THE POOL CONTROLLERS CONTAINED */ 01178000
*/*   IN THE ASMVT.                                                  */ 01179000
*/*                                                                  */ 01180000
*/* ******************************************************************/ 01181000
*                                                                  0147 01182000
*   DECLARE                                                        0147 01183000
*     1 ASMPOOLS BASED BDY(DWORD),  /* CELLPOOL CONTROLLER MAPPING   */ 01184000
*       3 ASMCPID CHAR(4),          /* CELLPOOL IDENTIFIER           */ 01185000
*       3 ASMCPSIZ FIXED(15),       /* SIZE OF EACH CELL IN POOL     */ 01186000
*       3 ASMCPEXT FIXED(15),       /* NUMBER OF CELLS IN POOL     0147 01187000
*                                      EXTENSION                     */ 01188000
*       3 ASMCPAVQ CHAR(8) BDY(DWORD),/* AVAILABLE CELL POOL CONTROL */ 01189000
*         5 ASMCPAVL PTR(31),       /* ADDRESS OF FIRST AVAILABLE  0147 01190000
*                                      CELL IN POOL                  */ 01191000
*         5 ASMCPCNT FIXED(31),     /* COUNT FOR SYNCHRONIZATION OF     01192000
*                                      THIS POOL, DECREMENTED WHEN 0147 01193000
*                                      REMOVING A CELL FROM POOL,  0147 01194000
*                                      UNCHANGED WHEN PLACING A CELL    01195000
*                                      BACK IN THE POOL              */ 01196000
*       3 ASMCPRSQ CHAR(8) BDY(DWORD),/* ACE POOL ONLY, ACE RESERVE     01197000
*                                      CELL POOL CONTROL             */ 01198000
*         5 ASMCPTAK FIXED(31),     /* ACE POOL ONLY, NUMBER OF CELLS   01199000
*                                      TAKEN FROM RESERVE QUEUE      */ 01200000
*         5 ASMCPRES PTR(31);       /* ACE POOL ONLY, RESERVE QUEUE     01201000
*                                      OF ACE CELLS USED ONLY WHEN 0147 01202000
*                                      ACE REQUIRED BY ROUTINES    0147 01203000
*                                      RUNNING WITH THE SALLOC LOCK  */ 01204000
*/* ******************************************************************/ 01205000
*/*                                                                  */ 01206000
*/*   THE FOLLOWING ARE MAPPINGS OF SOME OF THE WORK-SAVE AREAS      */ 01207000
*/*   CONTAINED IN THE ASMVT.                                        */ 01208000
*/*                                                                  */ 01209000
*/* ******************************************************************/ 01210000
*                                                                  0148 01211000
*   DECLARE                                                        0148 01212000
*     1 ASM1WKSV CHAR(80) BDY(DWORD) DEFINED(ASMWKSA1),/* MAPPING OF    01213000
*                                      WORK-SAVE AREA USED BY      0148 01214000
*                                      ILRPAGIO                      */ 01215000
*       3 ASM1RGSV CHAR(60) BDY(DWORD),/* INPUT REGISTER SAVE AREA   */ 01216000
*         5 ASM1RG1 PTR(31),        /* SAVE AREA FOR REG 1           */ 01217000
*         5 * CHAR(52),             /* SAVE AREA FOR REG 2 TO REG 14 */ 01218000
*         5 ASM1RG15 PTR(31),       /* SAVE AREA FOR REG 15          */ 01219000
*       3 ASM1WRKA CHAR(20) BDY(WORD),/* WORK AREA                   */ 01220000
*         5 ASM1ASCB PTR(31),       /* ADDRESS OF ASCB               */ 01221000
*         5 ASM1NXTA PTR(31);       /* ADDRESS OF NEXT AIA           */ 01222000
*   DECLARE                                                        0149 01223000
*     1 ASM2WKSV CHAR(80) BDY(DWORD) DEFINED(ASMWKSA2),/* MAPPING OF    01224000
*                                      WORK-SAVE AREA USED BY ILRQIOE*/ 01225000
*       3 ASM2RGSV CHAR(52) BDY(DWORD),/* INPUT REGISTER SAVE AREA   */ 01226000
*       3 ASM2WRKA CHAR(28) BDY(WORD),/* WORK AREA                   */ 01227000
*         5 ASM2PAQ PTR(31),        /* PTR TO PRIVATE AREA IOE'S     */ 01228000
*         5 ASM2CAQ PTR(31),        /* PTR TO COMMON AREA IOE'S      */ 01229000
*         5 ASM2DUPQ PTR(31),       /* PTR TO DUPLEXED IOE'S         */ 01230000
*         5 ASM2FLGS BIT(8),        /* LOCAL SWITCHES                */ 01231000
*           7 ASM2RFLG BIT(1),      /* READ IOE PUT ON SOME PARTE    */ 01232000
*           7 ASM2WFLG BIT(1),      /* WRITE IOE BUILT               */ 01233000
*         5 * CHAR(3),              /* UNUSED                        */ 01234000
*         5 ASM2SR14 PTR(31);       /* SAVE AREA FOR REG 14          */ 01235000
*   DECLARE                                                        0150 01236000
*     1 ASM3WKSV CHAR(80) BDY(DWORD) DEFINED(ASMWKSA3),/* MAPPING OF    01237000
*                                      WORK-SAVE AREA USED BY      0150 01238000
*                                      ILRPAGCM                      */ 01239000
*       3 ASM3SWPQ PTR(31),         /* QUEUE OF AIA'S FOR SWAPCOMP 0150 01240000
*                                      RTN                           */ 01241000
*       3 ASM3GENQ PTR(31),         /* QUEUE OF AIA'S FOR PAGECOMP 0150 01242000
*                                      RTN                           */ 01243000
*       3 ASM3PIOP PTR(31),         /* QUEUE OF AIA'S FOR RETURN TO     01244000
*                                      PIOP                          */ 01245000
*       3 ASM3TMPA PTR(31),         /* SAVE AREA FOR NEXT AIA PTR    */ 01246000
*       3 ASM3GRPA PTR(31),         /* SAVE AREA FOR NEXT GROUP PTR  */ 01247000
*       3 ASM3R14A PTR(31),         /* SAVE AREA FOR 1ST LEVEL REG 14*/ 01248000
*       3 ASM3R14B PTR(31),         /* SAVE AREA FOR 2ND LEVEL REG 14*/ 01249000
*       3 ASM3SR13 PTR(31);         /* SAVE AREA FOR REG 13          */ 01250000
*   DECLARE                                                        0151 01251000
*     1 ASM4WKSV CHAR(80) BDY(DWORD) DEFINED(ASMWKSA4),/* MAPPING OF    01252000
*                                      WORK-SAVE AREA USED BY ILRSWAP*/ 01253000
*       3 ASM4RGSV CHAR(52) BDY(DWORD),/* INPUT REGISTER SAVE AREA   */ 01254000
*         5 ASM4RG2 PTR(31),        /* SAVE AREA FOR REG 2           */ 01255000
*         5 * CHAR(48);             /* SAVE AREA FOR REG 3 TO REG 14 */ 01256000
*   DECLARE                                                        0152 01257000
*     1 ASM5WKSV CHAR(80) BDY(DWORD) DEFINED(ASMWKSA5),/* MAPPING OF    01258000
*                                      WORK-SAVE AREA USED BY      0152 01259000
*                                      ILRSLSQA                      */ 01260000
*       3 ASM5RGSV CHAR(52) BDY(DWORD),/* INPUT REGISTER SAVE AREA   */ 01261000
*         5 ASM5RG2 PTR(31),        /* SAVE AREA FOR REG 2           */ 01262000
*         5 * CHAR(48),             /* SAVE AREA FOR REG 3 TO REG 14 */ 01263000
*       3 ASM5SR14 PTR(31),         /* SAVE AREA FOR REG 14          */ 01264000
*       3 ASM5GCTR FIXED(31),       /* COUNTER FOR GROUPING AIA'S    */ 01265000
*       3 ASM5AIA PTR(31),          /* TEMP SAVE AREA FOR AIA PTR    */ 01266000
*       3 ASM5FLGS BIT(8);          /* INTERNAL FLAGS                */ 01267000
*                                                                  0153 01268000
*   /*****************************************************************/ 01269000
*   /*                                                               */ 01270000
*   /* CONTROL BLOCK POINTERS                                        */ 01271000
*   /*                                                               */ 01272000
*   /*****************************************************************/ 01273000
*                                                                  0153 01274000
*   DCL                                                            0153 01275000
*     DCBPTR PTR(31);               /* ADDR OF DCB                   */ 01276000
*   DCL                                                            0154 01277000
*     IOBSTPTR PTR(31);             /* IOB BASIC ADDRESS             */ 01278000
*   DCL                                                            0155 01279000
*     IOBPRPTR PTR(31);             /* IOB PREFIX ADDRESS            */ 01280000
*   DCL                                                            0156 01281000
*     MNTPLPTR PTR(31);             /* MOUNT PARMLIST ADDRESS        */ 01282000
*   DCL                                                            0157 01283000
*     PDSAPTR PTR(31);              /* POINTER TO ALIAS SECTION OF 0157 01284000
*                                      PDS ENTRY - NP5CDESR          */ 01285000
*                                                                  0158 01286000
*   /*****************************************************************/ 01287000
*   /*                                                               */ 01288000
*   /* DATASET CONTROL BLOCK DSECT                                   */ 01289000
*   /*                                                               */ 01290000
*   /*****************************************************************/ 01291000
*                                                                  0158 01292000
*   DCL                                                            0158 01293000
*     1 DCB CHAR(48) BASED(DCBPTR) BDY(WORD),                      0158 01294000
*      2 * CHAR(45),                                               0158 01295000
*      2 DCBDEBAD PTR(24) BDY(BYTE);/* DEB ADDRESS                   */ 01296000
*                                                                  0159 01297000
*   /*****************************************************************/ 01298000
*   /*                                                               */ 01299000
*   /* GETMAIN FREEMAIN PARAMETERS                                   */ 01300000
*   /*                                                               */ 01301000
*   /*****************************************************************/ 01302000
*                                                                  0159 01303000
*   DCL                                                            0159 01304000
*     1 GETADDR BDY(WORD),                                         0159 01305000
*      2 LOWADDR FIXED(31) INIT(0), /* MIN NO OF BYTES               */ 01306000
*      2 HIADDR FIXED(31) INIT('FFFFFF'X);/* MAX NO BYTES            */ 01307000
*                                                                  0159 01308000
*   /*****************************************************************/ 01309000
*   /*                                                               */ 01310000
*   /* FREEMAIN PARAMETER                                            */ 01311000
*   /*                                                               */ 01312000
*   /*****************************************************************/ 01313000
*                                                                  0160 01314000
*   DCL                                                            0160 01315000
*     1 LPAAREA BDY(WORD),                                         0160 01316000
*      2 GTMAREA PTR(31),           /* ADDRESS OF AREA ALLOCATED     */ 01317000
*      2 GTMLNGTH FIXED(31);        /* NO. BYTES ACTUALLY ALLOC.     */ 01318000
*   DCL                                                            0161 01319000
*     1 CDESIZEP BDY(WORD),         /* PARAMETER WORD TO FREEMAIN A     01320000
*                                      CDE                           */ 01321000
*      2 * CHAR(1) INIT('FF'X),     /* SUBPOOL NUMBER                */ 01322000
*      2 * PTR(24) INIT(LENGTH(CDENTRY));/* NO. OF BYTES             */ 01323000
*   DCL                                                            0162 01324000
*     1 XLSIZEP BDY(WORD),          /* PARAMETER WORD TO FREEMAIN AN    01325000
*                                      EXTENT LIST                   */ 01326000
*      2 * CHAR(1) INIT('FF'X),     /* SUBPOOL NUMBER                */ 01327000
*      2 * PTR(24) INIT(LENGTH(XTLST));/* NO. OF BYTES               */ 01328000
*   DCL                                                            0163 01329000
*     1 LLESIZEP BDY(WORD),         /* PARAMETER WORD TO FREEMAIN A     01330000
*                                      LLE                           */ 01331000
*      2 * CHAR(1) INIT('FF'X),     /* SUBPOOL NUMBER                */ 01332000
*      2 * PTR(24) INIT(LENGTH(LLE));/* NO. OF BYTES                 */ 01333000
*   DCL                                                            0164 01334000
*     APARM PTR(31) INIT(ADDR(LPAAREA));/* A PARAMETER               */ 01335000
*                                                                  0164 01336000
*   /*****************************************************************/ 01337000
*   /*                                                               */ 01338000
*   /* SUBPOOL AND MODULE SIZE FOR FREEMAIN'ING CORE FOR AN MLPA OR  */ 01339000
*   /* AN LPA MODULE.                                                */ 01340000
*   /*                                                               */ 01341000
*   /*****************************************************************/ 01342000
*                                                                  0165 01343000
*   DCL                                                            0165 01344000
*     1 FMSIZE FIXED(31),           /* LOAD MODULE SIZE              */ 01345000
*      2 FMSIZESP CHAR(1) INIT('FC'X),/* SUBPOOL NBR                 */ 01346000
*      2 * CHAR(3);                                                0165 01347000
*                                                                  0165 01348000
*   /*****************************************************************/ 01349000
*   /*                                                               */ 01350000
*   /* DIRECTORY SEARCH ARGUMENT                                     */ 01351000
*   /*                                                               */ 01352000
*   /*****************************************************************/ 01353000
*                                                                  0166 01354000
*   DCL                                                            0166 01355000
*     1 NPA5SRCH CHAR(8),                                          0166 01356000
*      2 * CHAR(3) INIT('000000'X),                                0166 01357000
*      2 NPA5SRCC CHAR(4),          /* START ADDR OF DIRECTORY       */ 01358000
*      2 * CHAR(1) INIT('01'X);                                    0166 01359000
*                                                                  0166 01360000
*   /*****************************************************************/ 01361000
*   /*                                                               */ 01362000
*   /* SAVE AREA FOR DIRECTORY STARTING SEARCH ARGUMENT              */ 01363000
*   /*                                                               */ 01364000
*   /*****************************************************************/ 01365000
*                                                                  0167 01366000
*   DCL                                                            0167 01367000
*     NPA5SVST CHAR(8);                                            0167 01368000
*   DCL                                                            0168 01369000
*     ZEROQSR CHAR(1) INIT('00'X);  /* INITIALIZATION BYTE           */ 01370000
*   DCL                                                            0169 01371000
*     USERDL FIXED(31);             /* LENGTH OF USER DATA AREA IN 0169 01372000
*                                      PDS ENTRY                     */ 01373000
*   DCL                                                            0170 01374000
*     PDSLNG FIXED(31) INIT('00'X); /* PDS ENTRY LENGTH              */ 01375000
*   DCL                                                            0171 01376000
*     ACTLNG FIXED(31) INIT('00'X); /* PDS ENTRY LENGTH              */ 01377000
*   DCL                                                            0172 01378000
*     LPDECT FIXED(31) INIT('00'X); /* COUNT OF LPDE'S               */ 01379000
*                                                                  0172 01380000
*   /*****************************************************************/ 01381000
*   /*                                                               */ 01382000
*   /* SUBROUTINE RETURN CODE FIELDS                                 */ 01383000
*   /*                                                               */ 01384000
*   /*****************************************************************/ 01385000
*                                                                  0173 01386000
*   DCL                                                            0173 01387000
*     APFRC CHAR(1) INIT('00'X);    /* APF RETURN CODE               */ 01388000
*   DCL                                                            0174 01389000
*     IONDRC CHAR(1) INIT('00'X);   /* RET CODE - NPA5IOND           */ 01390000
*   DCL                                                            0175 01391000
*     ADDRRC CHAR(1) INIT('00'X);   /* RET CODE - NPA5ADDR           */ 01392000
*   DCL                                                            0176 01393000
*     DIRRC CHAR(1) INIT('00'X);    /* RET CODE - NPA5DIR            */ 01394000
*   DCL                                                            0177 01395000
*     SDIRRC CHAR(1) INIT('00'X);   /* RET CODE - NPA5SDIR           */ 01396000
*                                                                  0177 01397000
*   /*****************************************************************/ 01398000
*   /*                                                               */ 01399000
*   /* PARTITIONED DIRECTORY RECORD                                  */ 01400000
*   /*                                                               */ 01401000
*   /*****************************************************************/ 01402000
*                                                                  0178 01403000
*   DCL                                                            0178 01404000
*     1 NPA5POD CHAR(264),                                         0178 01405000
*      2 PDSKEY CHAR(8),            /* MODULE NAME OF LAST ENTRY     */ 01406000
*      2 PDSCT CHAR(2),             /* NO OF BYTES USED IN RCD       */ 01407000
*      2 PDSDATA CHAR(254);         /* ENTRIES                       */ 01408000
*   DCL                                                            0179 01409000
*     QUOT1 FIXED(31);              /* HASH TABLE INDEX              */ 01410000
*   DCL                                                            0180 01411000
*     NPA5REG5 FIXED(31);           /* SAVE PTR TO DIR RECORD        */ 01412000
*                                                                  0180 01413000
*   /*****************************************************************/ 01414000
*   /*                                                               */ 01415000
*   /* CCW SEQUENCE FOR READING IN THE DIRECTORY POD                 */ 01416000
*   /*                                                               */ 01417000
*   /*****************************************************************/ 01418000
*                                                                  0181 01419000
*   DCL                                                            0181 01420000
*     1 * BDY(DWORD),               /* CCW STRING                    */ 01421000
*      2 CCW1 CHAR(8) BDY(DWORD),                                  0181 01422000
*       3 CODE1 CHAR(1) INIT('31'X),/* SEARCH ID EQ                  */ 01423000
*       3 SADDR1 PTR(24) INIT(ADDR(NPA5SRCC)),/* ADR LPALIB          */ 01424000
*       3 FLAGS1 CHAR(1) INIT('40'X),/* COMMAND CHAINING             */ 01425000
*       3 * CHAR(1) INIT('00'X),                                   0181 01426000
*       3 COUNT1 CHAR(2) INIT('0005'X),/* CCHHR LENGTH               */ 01427000
*                                                                  0181 01428000
*     /***************************************************************/ 01429000
*     /*                                                             */ 01430000
*     /* TIC CHANNEL COMMAND WORD                                    */ 01431000
*     /*                                                             */ 01432000
*     /***************************************************************/ 01433000
*                                                                  0181 01434000
*      2 CCW2 CHAR(8) BDY(DWORD),                                  0181 01435000
*       3 CODE2 CHAR(1) INIT('08'X),/* TRANSFER IN CHANNEL           */ 01436000
*       3 SADDR2 PTR(24) INIT(ADDR(CCW1)),/* GO TO SEARCH            */ 01437000
*       3 FLAGS2 CHAR(1) INIT('40'X),/* COMMAND CHAINING             */ 01438000
*       3 * CHAR(1) INIT('00'X),                                   0181 01439000
*       3 COUNT2 CHAR(2) INIT('0000'X),/* NO LENGTH                  */ 01440000
*                                                                  0181 01441000
*     /***************************************************************/ 01442000
*     /*                                                             */ 01443000
*     /* READ A RECORD CCW                                           */ 01444000
*     /*                                                             */ 01445000
*     /***************************************************************/ 01446000
*                                                                  0181 01447000
*      2 CCW3 CHAR(8) BDY(DWORD),                                  0181 01448000
*       3 CODE3 CHAR(1) INIT('0E'X),/* READ KEY & DATA               */ 01449000
*       3 SADDR3 PTR(24) INIT(ADDR(NPA5POD)),/* BFR AREA             */ 01450000
*       3 FLAGS3 CHAR(1) INIT('40'X),/* COMMAND CHAINING             */ 01451000
*       3 * CHAR(1) INIT('00'X),                                   0181 01452000
*       3 COUNT3 CHAR(2) INIT('0108'X),/* 264 BYTE RECORD            */ 01453000
*                                                                  0181 01454000
*     /***************************************************************/ 01455000
*     /*                                                             */ 01456000
*     /* READ COUNT                                                  */ 01457000
*     /*                                                             */ 01458000
*     /***************************************************************/ 01459000
*                                                                  0181 01460000
*      2 CCW4 CHAR(8) BDY(DWORD),                                  0181 01461000
*       3 CODE4 CHAR(1) INIT('92'X),/* READ COUNT M-T                */ 01462000
*       3 SADDR4 PTR(24) INIT(ADDR(NPA5SRCC)),/* SEARCH ARG          */ 01463000
*       3 FLAGS4 CHAR(1) INIT('20'X),/* SILI                         */ 01464000
*       3 * CHAR(1) INIT('00'X),                                   0181 01465000
*       3 COUNT4 CHAR(2) INIT('0005'X);/* LENGTH OF CT FLD           */ 01466000
*/********************************************************************/ 01467000
*/*                                                                  */ 01468000
*/*         INCLUDE CONTENTS DIRECTORY ENTRY DSECT                   */ 01469000
*/*                                                                  */ 01470000
*/********************************************************************/ 01471000
*/*         %INCLUDE SYSLIB(IHACDE)                                  */ 01472000
*/*  *************************************************************** */ 01473000
*/*          MACCOMP OS/VS2,RELEASE 4        SC1CJ/PZD81             */ 01474000
*/*                                                                  */ 01475000
*/*          MACSTAT OS/VS2,RELEASE 4        74240                   */ 01476000
*/*                                                                  */ 01477000
*/*          MACMEAN  CDE MEANS CONTENTS DIRECTORY ENTRY             */ 01478000
*/*  *************************************************************** */ 01479000
*                                                                  0182 01480000
*   DECLARE                                                        0182 01481000
*     1 CDENTRY BASED(CDENTPTR),                                   0182 01482000
*      2 CDCHAIN PTR(31),           /* ADDRESS OF NEXT CDE IN QUEUE     01483000
*                                      (EITHER JPAQ OR LPAQ)         */ 01484000
*      2 CDRRBP PTR(31),            /* IF THE MODULE IS REENTERABLE,    01485000
*                                      THIS FIELD CONTAINS THE     0182 01486000
*                                      ADDRESS OF THE LAST RB THAT 0182 01487000
*                                      CONTROLLED THE MODULE. IF THE    01488000
*                                      MODULE IS SERIALLY REUSABLE,     01489000
*                                      THIS FIELD CONTAINS THE     0182 01490000
*                                      ADDRESS OF THE RB AT THE TOP     01491000
*                                      OF THE WAITING (RBPGMQ) QUEUE.   01492000
*                                      IF THE MODULE WAS REQUESTED 0182 01493000
*                                      ONLY THROUGH LOAD MACRO     0182 01494000
*                                      INSTRUCTIONS, CONTAINS ZERO.  */ 01495000
*      2 CDNAME CHAR(8),            /* 8 BYTE NAME                   */ 01496000
*      2 CDENTPT PTR(31),           /* MODULE'S RELOCATED ENTRY POINT   01497000
*                                      ADDRESS                       */ 01498000
*      2 CDXLMJP PTR(31),           /* EXTENT LIST ADDRESS OR MAJOR     01499000
*                                      CDE ADDRESS IF THIS CDE IS A     01500000
*                                      MINOR.                        */ 01501000
*      2 CDUSE PTR(15),             /* VALUE CONTAINS THE TOTAL    0182 01502000
*                                      MODULE USE COUNT              */ 01503000
*      2 * FIXED(15),               /* RESERVED - D                  */ 01504000
*      2 CDATTR CHAR(1),            /* ATTRIBUTE FLAGS               */ 01505000
*       3 CDNIP BIT(1),             /* MODULE LOAD BY NIP OR       0182 01506000
*                                      FIXED/MODIFIED LPA MODULE     */ 01507000
*       3 CDNIC BIT(1),             /* MODULE IS IN PROCESS OF BEING    01508000
*                                      LOADED                        */ 01509000
*       3 CDREN BIT(1),             /* MODULE IS REENTRABLE          */ 01510000
*       3 CDSER BIT(1),             /* MODULE IS SERIALLY REUSABLE   */ 01511000
*       3 CDNFN BIT(1),             /* MODULE IS NOT REUSABLE      0182 01512000
*                                      (NON-FUNCTIONAL)              */ 01513000
*       3 CDMIN BIT(1),             /* THIS IS A MINOR CDE           */ 01514000
*       3 CDJPA BIT(1),             /* MODULE IS IN JOB PACK AREA    */ 01515000
*       3 CDNLR BIT(1),             /* MODULE IS NOT LOADABLE-ONLY   */ 01516000
*      2 CDATTR2 CHAR(1),           /* SECOND ATTRIBUTE FIELD        */ 01517000
*       3 CDSPZ BIT(1),             /* MODULE IS IN SUBPOOL ZERO     */ 01518000
*       3 CDREL BIT(1),             /* MODULE IS INACTIVE AND MAY BE    01519000
*                                      RELEASED                      */ 01520000
*       3 CDXLE BIT(1),             /* EXTENT LIST HAS BEEN BUILT FOR   01521000
*                                      MODULE. MAIN STORAGE OCCUPIED    01522000
*                                      BY MODULE IS DESCRIBED THEREIN*/ 01523000
*       3 CDRLC BIT(1),             /* THIS CDE CONTAINS A MINOR   0182 01524000
*                                      ENTRY POINT ADDRESS THAT HAS     01525000
*                                      BEEN RELOCATED BY THE PROGRAM    01526000
*                                      FETCH ROUTINE                 */ 01527000
*       3 * BIT(1),                 /* RESERVED                      */ 01528000
*       3 CDOLY BIT(1),             /* MODULE IS IN OVERLAY FORMAT 0182 01529000
*                                      A27026                        */ 01530000
*       3 CDSYSLIB BIT(1),          /* AUTHORIZED LIBRARY MODULE     */ 01531000
*       3 CDAUTH BIT(1),            /* PROGRAM AUTHORIZATION FLAG  0182 01532000
*                                      ICB360                        */ 01533000
*      2 CDATTR3 CHAR(2);           /* RESERVED                      */ 01534000
*                                                                  0183 01535000
*/********************************************************************/ 01536000
*/*                                                                  */ 01537000
*/*         INCLUDE EVENT CONTROL BLOCK DSECT                        */ 01538000
*/*                                                                  */ 01539000
*/********************************************************************/ 01540000
*/*         %INCLUDE SYSLIB(IHAECB)                                  */ 01541000
*/* **************************************************************** */ 01542000
*/*                                                                  */ 01543000
*/*            EVENT CONTROL BLOCK (ECB) (OS/VS1 AND OS/VS2) AND     */ 01544000
*/*            EVENT CONTROL BLOCK EXTENSION (ECBE) (OS/VS2 ONLY)    */ 01545000
*/*                                                                  */ 01546000
*/*  OS/VS2 RELEASE 4, OS/VS1 RELEASE 5, 04/24/75, LEVEL=1           */ 01547000
*/*                                                                  */ 01548000
*/*  METHOD OF ACCESS                                                */ 01549000
*/*      BAL  - A DSECT IS PRODUCED FOR ECB UNLESS DSECT=NO IS       */ 01550000
*/*             SPECIFIED.  USING ON ECB GIVES ADDRESSABILITY FOR    */ 01551000
*/*             ALL ECB SYMBOLS.                                     */ 01552000
*/*             IF EXT=YES IS SPECIFIED, A DSECT IS PRODUCED FOR     */ 01553000
*/*             ECB EXTENSION (ECBE).  USING ON ECBE GIVES           */ 01554000
*/*             ADDRESSABILITY FOR ALL ECBE SYMBOLS.                 */ 01555000
*/*      PL/S - DCL ECBPTR PTR                                       */ 01556000
*/*             SPECIFY %ECBEXT='YES' BEFORE INCLUDING IHAECB IF     */ 01557000
*/*             THE ECB EXTENSION (ECBE) IS TO BE MAPPED.            */ 01558000
*/*             IF A MODULE USES THE ECB EXTENSION, A RESPECIFY      */ 01559000
*/*             STATEMENT MUST BE ISSUED ON ECBE.  ECBE IS BASED     */ 01560000
*/*             ON ECBEXTB, BUT THIS ADDRESS HAS THE LOW-ORDER 2     */ 01561000
*/*             BITS ON TO INDICATE THAT AN ECB EXTENSION EXISTS.    */ 01562000
*/*             THE ADDRESS IN ECBEXTB MUST BE PUT IN ANOTHER        */ 01563000
*/*             POINTER FIELD AND THE LOW-ORDER 2 BITS TURNED OFF    */ 01564000
*/*             IN ORDER TO OBTAIN PROPER ADDRESSABILITY TO THE      */ 01565000
*/*             EXTENSION.                                           */ 01566000
*/*                                                                  */ 01567000
*/*  NOTE                                                            */ 01568000
*/*      THE ECB IS USED FOR COMMUNICATION BETWEEN VARIOUS           */ 01569000
*/*      COMPONENTS OF THE CONTROL PROGRAM, AS WELL AS BETWEEN       */ 01570000
*/*      PROCESSING PROGRAMS AND THE CONTROL PROGRAM.  AN ECB IS     */ 01571000
*/*      THE SUBJECT OF WAIT AND POST MACRO INSTRUCTIONS.            */ 01572000
*/* **************************************************************** */ 01573000
*                                                                  0183 01574000
*   DECLARE                                                        0183 01575000
*     1 ECB BASED(ECBPTR) BDY(WORD),                               0183 01576000
*      2 ECBRB FIXED(31),           /* REQUEST BLOCK ADDRESS (WHILE     01577000
*                                      AWAITING COMPLETION OF AN   0183 01578000
*                                      EVENT)                        */ 01579000
*       3 ECBEVTB PTR(31),          /* ADDRESS OF EVENT TABLE      0183 01580000
*                                      (MDC300)              @X31ED9A*/ 01581000
*        4 ECBEXTB PTR(31),         /* ADDRESS OF ECB EXTENSION    0183 01582000
*                                      (OS/VS2) (MDC305)     @Z40EP9A*/ 01583000
*         5 ECBCC BIT(8),           /* COMPLETION CODE BYTE          */ 01584000
*          6 ECBWAITB BIT(1),       /* WAIT BIT                      */ 01585000
*          6 ECBPOSTB BIT(1),       /* POST BIT                      */ 01586000
*          6 * BIT(6),              /* COMPLETION CODE BITS          */ 01587000
*         5 ECBCCCNT CHAR(3) BDY(WORD,2),/* ZEROES OR REMAINDER OF 0183 01588000
*                                      COMPLETION CODE (AFTER      0183 01589000
*                                      COMPLETION OF THE EVENT)      */ 01590000
*          6 ECBRBA PTR(24),        /* REQUEST BLOCK ADDRESS (WHILE     01591000
*                                      AWAITING COMPLETION OF AN   0183 01592000
*                                      EVENT)                        */ 01593000
*           7 ECBEVTBA PTR(24),     /* ADDRESS OF EVENT TABLE      0183 01594000
*                                      (MDC302)              @X31ED9A*/ 01595000
*            8 ECBEXTBA PTR(24),    /* ADDRESS OF ECB EXTENSION    0183 01596000
*                                      (OS/VS2) (MDC306)     @Z40EP9A*/ 01597000
*             9 * CHAR(2),          /* FIRST TWO BYTES OF ECBEVTBA 0183 01598000
*                                                            @XM06072*/ 01599000
*             9 ECBBYTE3 BIT(8),    /* THIRD BYTE OF ECBEVTBA      0183 01600000
*                                      (MDC303)              @XM06072*/ 01601000
*              10 * BIT(6),         /* BITS 0-5 OF ECBBYTE3  @Z40EP9A*/ 01602000
*              10 ECBEXTND BIT(2),  /* ECB EXTENSION EXISTS (OS/VS2)    01603000
*                                      (MDC307)              @Z40EP9A*/ 01604000
*               11 * BIT(1),        /* BIT 6 OF ECBBYTE3     @Z40EP9A*/ 01605000
*               11 ECBEVNT BIT(1);  /* EXTENDED FORMAT ECB (MDC304)     01606000
*                                                            @XM06072*/ 01607000
*                                                                  0184 01608000
*/********************************************************************/ 01609000
*/*                                                                  */ 01610000
*/*         INCLUDE INPUT/OUTPUT CONTROL BLOCK DSECT                 */ 01611000
*/*                                                                  */ 01612000
*/********************************************************************/ 01613000
*/*         %INCLUDE SYSLIB(IEZIOB)                                  */ 01614000
*/*            INPUT/OUTPUT BLOCK                                    */ 01615000
*/*                                                                  */ 01616000
*/*  OS/VS2 RELEASE 4, OS/VS1 RELEASE 5, 10/30/75, LEVEL=4           */ 01617000
*/*                                                                  */ 01618000
*/*  METHOD OF ACCESS                                                */ 01619000
*/*      BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */ 01620000
*/*             USING ON IOB GIVES ADDRESSABILITY FOR ALL SYMBOLS.   */ 01621000
*/*      PL/S - DCL (IOBPRPTR,IOBSTPTR) PTR                          */ 01622000
*/*                                                                  */ 01623000
*                                                                  0184 01624000
*   DECLARE                                                        0184 01625000
*     1 IOBPREFX BASED(IOBPRPTR) BDY(WORD),                        0184 01626000
*                                                                  0184 01627000
*/*  *************************************************************** */ 01628000
*/*                                                                  */ 01629000
*/*                  PREFIX SECTIONS OF THE IOB                      */ 01630000
*/*                                                                  */ 01631000
*/*  *************************************************************** */ 01632000
*                                                                  0184 01633000
*     /***************************************************************/ 01634000
*     /*                                                             */ 01635000
*     /* **************************************** QSAM,BSAM,BPAM     */ 01636000
*     /* PREFIX CHAINED SCHEDULING *** 16 BYTES                      */ 01637000
*     /* ****************************************                    */ 01638000
*     /*                                                             */ 01639000
*     /***************************************************************/ 01640000
*                                                                  0184 01641000
*      2 IOBCFLG1 CHAR(1),          /* I/O INDICATORS                */ 01642000
*       3 IOBRSV01 BIT(1),          /* RESERVED                      */ 01643000
*       3 IOBRSV02 BIT(1),          /* RESERVED                      */ 01644000
*       3 IOBRSV03 BIT(1),          /* RESERVED                      */ 01645000
*       3 IOBRSV04 BIT(1),          /* RESERVED                      */ 01646000
*       3 IOBPTST BIT(1),           /* NOTE OR POINT OPERATION IS IN    01647000
*                                      PROCESS                       */ 01648000
*       3 IOBABAPP BIT(1),          /* ERROR HAS BEEN PROCESSED ONCE    01649000
*                                      BY ABNORMAL-END APPENDAGE   0184 01650000
*                                      ROUTINE                       */ 01651000
*       3 IOBRSTCH BIT(1),          /* RESTART CHANNEL               */ 01652000
*       3 IOBPCI BIT(1),            /* SET WHEN A PROGRAM-CONTROLLED    01653000
*                                      INTERRUPTION (PCI) OCCURS     */ 01654000
*      2 IOBRSV05 CHAR(1),          /* RESERVED                      */ 01655000
*      2 IOBCINOP CHAR(1),          /* OFFSET OF THE LAST I/O COMMAND   01656000
*                                      FOR INPUT OPERATION (NOP CCW)    01657000
*                                      FROM THE ORIGIN OF THE ICB    */ 01658000
*      2 IOBCONOP CHAR(1),          /* OFFSET OF THE LAST I/O COMMAND   01659000
*                                      FOR AN OUTPUT OPERATION (NOP     01660000
*                                      CCW) FROM THE ORIGIN OF THE 0184 01661000
*                                      ICB                           */ 01662000
*      2 IOBCECB FIXED(31),         /* EVENT CONTROL BLOCK USED BY 0184 01663000
*                                      BSAM OR QSAM. SHOWS THE STATUS   01664000
*                                      OF THE I/O OPERATION.         */ 01665000
*      2 IOBCICB PTR(31),           /* ADDRESS OF THE FIRST INTERRUPT   01666000
*                                      CONTROL BLOCK (ICB) ON THE ICB   01667000
*                                      QUEUE                         */ 01668000
*      2 IOBCNOPA PTR(31);          /* ADDRESS OF THE NOP COMMAND AT    01669000
*                                      THE END OF THE QUEUE          */ 01670000
*                                                                  0184 01671000
*   /*****************************************************************/ 01672000
*   /*                                                               */ 01673000
*   /* **************************************** QSAM,BSAM,BPAM PREFIX*/ 01674000
*   /* NORMAL SCHEDULING *** 8 BYTES                                 */ 01675000
*   /* ****************************************                      */ 01676000
*   /*                                                               */ 01677000
*   /*****************************************************************/ 01678000
*                                                                  0185 01679000
*   DECLARE                                                        0185 01680000
*     1 IOBORG01 DEF(IOBPREFX) POS(9) BDY(WORD),                   0185 01681000
*      2 IOBNIOBA PTR(31),          /* ADDRESS OF THE NEXT IOB     0185 01682000
*                                      ASSOCIATED WITH ONE PARTICULAR   01683000
*                                      DCB. THE IOB'S ARE CHAINED IN    01684000
*                                      SEQUENTIAL ORDER.             */ 01685000
*       3 IOBNFLG1 CHAR(1),         /* FLAG BYTE                     */ 01686000
*        4 IOBPRTOV BIT(1),         /* PRTOV HAS OCCURRED (PRINTER 0185 01687000
*                                      DEVICES) (MDC331)     @Z40FP9A*/ 01688000
*         5 IOBSEGMT BIT(1),        /* SEGMENTING OF A SPANNED RECORD   01689000
*                                      IS IN PROCESS (QSAM LOCATE  0185 01690000
*                                      MODE, LOGICAL RECORD        0185 01691000
*                                      INTERFACE, UPDATE PROCESSING)    01692000
*                                      (DIRECT ACCESS) (OS/VS2)    0185 01693000
*                                      (MDC332)              @Z40FP9A*/ 01694000
*        4 IOBWRITE BIT(1),         /* A WRITE OPERATION IS IN     0185 01695000
*                                      PROCESS                       */ 01696000
*        4 IOBREAD BIT(1),          /* A READ OPERATION IS IN PROCESS*/ 01697000
*        4 IOBUPDAT BIT(1),         /* UPDATE FLAG. SET ON TOGETHER     01698000
*                                      WITH BIT 1 OF THIS BYTE TO  0185 01699000
*                                      SHOW THAT THE BLOCK IS TO BE     01700000
*                                      UPDATED. CAN ONLY OCCUR IF THE   01701000
*                                      OPEN PARAMETER IS UPDAT.      */ 01702000
*        4 IOBBKSPC BIT(1),         /* IOB BEING USED FOR BACKSPACE,    01703000
*                                      CONTROL OR NOTE/POINT       0185 01704000
*                                      OPERATION                     */ 01705000
*        4 IOBSPAN BIT(1),          /* THE RECORD CURRENTLY BEING  0185 01706000
*                                      PROCESSED HAS MORE THAN ONE 0185 01707000
*                                      SEGMENT (QSAM LOCATE MODE,  0185 01708000
*                                      LOGICAL RECORD INTERFACE,   0185 01709000
*                                      UPDAT PROCESSING OF SPANNED 0185 01710000
*                                      RECORDS)                      */ 01711000
*        4 IOBUPERR BIT(1),         /* UPDATE CHANNEL PROGRAM HAS  0185 01712000
*                                      BEEN SPLIT INTO TWO PARTS   0185 01713000
*                                      MDC036                        */ 01714000
*        4 IOBFIRST BIT(1),         /* THIS IS THE FIRST IOB ON CHAIN*/ 01715000
*       3 IOBNIOBB PTR(24),         /* SAME AS IOBNIOBA ABOVE        */ 01716000
*      2 IOBNECB FIXED(31);         /* EVENT CONTROL BLOCK USED BY 0185 01717000
*                                      QSAM TO INDICATE THE STATUS OF   01718000
*                                      THE I/O EVENT                 */ 01719000
*                                                                  0185 01720000
*   /*****************************************************************/ 01721000
*   /*                                                               */ 01722000
*   /* **************************************** BDAM PREFIX *** 8    */ 01723000
*   /* BYTES ****************************************                */ 01724000
*   /*                                                               */ 01725000
*   /*****************************************************************/ 01726000
*                                                                  0186 01727000
*   DECLARE                                                        0186 01728000
*     1 IOBORG02 DEF(IOBPREFX) POS(9) BDY(WORD),                   0186 01729000
*      2 IOBDQADA PTR(31),          /* ADDRESS OF THE OTHER IOB    0186 01730000
*                                      REFERRED TO IN DESCRIPTION OF    01731000
*                                      IOBDEQ BELOW                  */ 01732000
*       3 IOBDEQIN CHAR(1),         /* DEQUEUE LOOP INDICATOR        */ 01733000
*        4 IOBDEQ BIT(1),           /* THIS IOB IS USING A TRACK THAT   01734000
*                                      WAS DEQUEUED BY ANOTHER IOB 0186 01735000
*                                      WHICH IS NOW WAITING TO     0186 01736000
*                                      DEQUEUE ANOTHER TRACK. THE  0186 01737000
*                                      OTHER IOB ENQUEUED ON TWO OR     01738000
*                                      MORE TRACKS TO FIND SPACE IN     01739000
*                                      WHICH TO WRITE/ADD A SPANNED     01740000
*                                      RECORD. THE OTHER IOB REMAINED   01741000
*                                      ENQUEUED UNTIL IT EITHER WROTE   01742000
*                                      THE RECORD OR DETERMINED THAT    01743000
*                                      THERE WAS ENOUGH CONTIGUOUS 0186 01744000
*                                      FREE SPACE ON THE TRACKS TO 0186 01745000
*                                      CONTAIN THE RECORD. AFTER THE    01746000
*                                      OTHER IOB DEQUEUED THE CURRENT   01747000
*                                      TRACK, THE DEQUEUEING WAS   0186 01748000
*                                      INTERRUPTED BY THE NEED OF  0186 01749000
*                                      THIS IOB FOR THE CURRENT    0186 01750000
*                                      TRACK.                        */ 01751000
*        4 IOBRSV07 BIT(1),         /* RESERVED                      */ 01752000
*        4 IOBRSV08 BIT(1),         /* RESERVED                      */ 01753000
*        4 IOBRSV09 BIT(1),         /* RESERVED                      */ 01754000
*        4 IOBRSV10 BIT(1),         /* RESERVED                      */ 01755000
*        4 IOBRSV11 BIT(1),         /* RESERVED                      */ 01756000
*        4 IOBRSV12 BIT(1),         /* RESERVED                      */ 01757000
*        4 IOBRSV13 BIT(1),         /* RESERVED                      */ 01758000
*       3 IOBDQADB PTR(24),         /* SAME AS IOBDQADA ABOVE        */ 01759000
*      2 IOBSWAP PTR(31);           /* ADDRESS OF THE SEGMENT WORK 0186 01760000
*                                      AREA USED BY THIS IOB TO READ    01761000
*                                      OR WRITE A RECORD OF A FORMAT    01762000
*                                      VS DATA SET                   */ 01763000
*                                                                  0186 01764000
*   /*****************************************************************/ 01765000
*   /*                                                               */ 01766000
*   /* **************************************** GAM,QISAM PREFIX *** */ 01767000
*   /* 4 BYTES ****************************************              */ 01768000
*   /*                                                               */ 01769000
*   /*****************************************************************/ 01770000
*                                                                  0187 01771000
*   DECLARE                                                        0187 01772000
*     1 IOBORG03 DEF(IOBPREFX) POS(13) BDY(WORD),                  0187 01773000
*      2 IOBGQECB FIXED(31);        /* EVENT CONTROL BLOCK THAT IS 0187 01774000
*                                      WITHIN FIRST IOB ONLY (GAM) 0187 01775000
*                                      EVENT CONTROL BLOCK USED TO 0187 01776000
*                                      INDICATE STATUS OF AN I/O   0187 01777000
*                                      EVENT (QISAM)                 */ 01778000
*/*  *************************************************************** */ 01779000
*/*                                                                  */ 01780000
*/*                  STANDARD SECTION OF THE IOB                     */ 01781000
*/*                                                                  */ 01782000
*/*  *************************************************************** */ 01783000
*                                                                  0188 01784000
*   DECLARE                                                        0188 01785000
*     1 IOBSTDRD BASED(IOBSTPTR) BDY(WORD),                        0188 01786000
*      2 IOBFLAG1 CHAR(1),          /* FLAG BYTE 1                   */ 01787000
*       3 IOBDATCH BIT(1),          /* DATA CHAINING USED IN CHANNEL    01788000
*                                      PROGRAM                       */ 01789000
*       3 IOBCMDCH BIT(1),          /* COMMAND CHAINING USED IN    0188 01790000
*                                      CHANNEL PROGRAM               */ 01791000
*       3 IOBERRTN BIT(1),          /* ERROR ROUTINE IS IN CONTROL   */ 01792000
*       3 IOBRPSTN BIT(1),          /* DEVICE IS TO BE REPOSITIONED  */ 01793000
*       3 IOBCYCCK BIT(1),          /* CYCLIC REDUNDANCY CHECK (CRC)    01794000
*                                      NEEDED (TAPE)                 */ 01795000
*        4 IOBFCREX BIT(1),         /* FETCH COMMAND RETRY EXIT    0188 01796000
*                                      (DIRECT ACCESS)               */ 01797000
*       3 IOBIOERR BIT(1),          /* EXCEPTIONAL CONDITION. AFTER     01798000
*                                      THE ERROR ROUTINE RETURNS AND    01799000
*                                      THIS BIT IS ON, THE ERROR IS     01800000
*                                      CONSIDERED PERMANENT.         */ 01801000
*       3 IOBUNREL BIT(1),          /* IOB UNRELATED FLAG (I.E.,   0188 01802000
*                                      NONSEQUENTIAL)                */ 01803000
*       3 IOBRSTRT BIT(1),          /* IF 1, RESTART ADDRESS IN IOB     01804000
*                                      TO BE USED. IF 0, START.    0188 01805000
*                                      (OS/VS1) MDC034               */ 01806000
*        4 IOBSPSVC BIT(1),         /* FOR SAM/PAM, SET BY SVC IF I/O   01807000
*                                      APPENDAGE SHOULD NOT PROCESS     01808000
*                                      INTERRUPT (OS/VS2) MDC035     */ 01809000
*      2 IOBFLAG2 CHAR(1),          /* FLAG BYTE 2                   */ 01810000
*       3 IOBHALT BIT(1),           /* HALT I/O HAS BEEN ISSUED BY 0188 01811000
*                                      SVC PURGE ROUTINE             */ 01812000
*       3 IOBSENSE BIT(1),          /* SENSE WILL NOT BE PERFORMED 0188 01813000
*                                      UNTIL THE DEVICE IS FREE      */ 01814000
*       3 IOBPURGE BIT(1),          /* IOB HAS BEEN PURGED TO ALLOW     01815000
*                                      I/O ACTIVITY TO QUIESCE.    0188 01816000
*                                      (OS/VS1) MDC046               */ 01817000
*        4 IOBRRT3 BIT(1),          /* TYPE 3 RELATED REQUEST      0188 01818000
*                                      (OS/VS2) MDC048               */ 01819000
*       3 IOBRDHA0 BIT(1),          /* HOME ADDRESS (R0) RECORD IS TO   01820000
*                                      BE READ. SEEK COMMAND NOT   0188 01821000
*                                      NEEDED. (OS/VS1) MDC047       */ 01822000
*        4 IOBRRT2 BIT(1),          /* TYPE 2 RELATED REQUEST      0188 01823000
*                                      (OS/VS2) MDC049               */ 01824000
*       3 IOBALTTR BIT(1),          /* NO TEST FOR OUT-OF-EXTENT. AN    01825000
*                                      ALTERNATE TRACK IS IN USE.    */ 01826000
*       3 IOBSKUPD BIT(1),          /* SEEK ADDRESS IS BEING UPDATED.   01827000
*                                      CYLINDER END OR FILE MASK   0188 01828000
*                                      VIOLATION HAS OCCURRED.       */ 01829000
*       3 IOBSTATO BIT(1),          /* DEVICE END STATUS HAS BEEN  0188 01830000
*                                      OR'ED WITH CHANNEL END STATUS    01831000
*                                      (GRAPHICS DEVICE)             */ 01832000
*       3 IOBPNCH BIT(1),           /* ERROR RECOVERY IN CONTROL FOR    01833000
*                                      A 2540 CARD PUNCH WITH THREE     01834000
*                                      BUFFERS. (QSAM) RESETPL MACRO    01835000
*                                      INSTRUCTION WAS USED. (BTAM)  */ 01836000
*      2 IOBSENS0 CHAR(1),          /* FIRST SENSE BYTE              */ 01837000
*       3 IOBS0B0 BIT(1),           /* BIT 0 (DEVICE DEPENDENT)      */ 01838000
*       3 IOBS0B1 BIT(1),           /* BIT 1 (DEVICE DEPENDENT)      */ 01839000
*       3 IOBS0B2 BIT(1),           /* BIT 2 (DEVICE DEPENDENT)      */ 01840000
*       3 IOBS0B3 BIT(1),           /* BIT 3 (DEVICE DEPENDENT)      */ 01841000
*       3 IOBS0B4 BIT(1),           /* BIT 4 (DEVICE DEPENDENT)      */ 01842000
*       3 IOBS0B5 BIT(1),           /* BIT 5 (DEVICE DEPENDENT)      */ 01843000
*       3 IOBS0B6 BIT(1),           /* BIT 6 (DEVICE DEPENDENT)      */ 01844000
*       3 IOBS0B7 BIT(1),           /* BIT 7 (DEVICE DEPENDENT)      */ 01845000
*        4 IOBSNSC9 BIT(1),         /* CHANNEL 9 SENSED IN CARRIAGE     01846000
*                                      TAPE                          */ 01847000
*      2 IOBSENS1 CHAR(1),          /* SECOND SENSE BYTE             */ 01848000
*       3 IOBS1B0 BIT(1),           /* BIT 0 (DEVICE DEPENDENT)      */ 01849000
*       3 IOBS1B1 BIT(1),           /* BIT 1 (DEVICE DEPENDENT)      */ 01850000
*       3 IOBS1B2 BIT(1),           /* BIT 2 (DEVICE DEPENDENT)      */ 01851000
*       3 IOBS1B3 BIT(1),           /* BIT 3 (DEVICE DEPENDENT)      */ 01852000
*       3 IOBS1B4 BIT(1),           /* BIT 4 (DEVICE DEPENDENT)      */ 01853000
*       3 IOBS1B5 BIT(1),           /* BIT 5 (DEVICE DEPENDENT)      */ 01854000
*       3 IOBS1B6 BIT(1),           /* BIT 6 (DEVICE DEPENDENT)      */ 01855000
*       3 IOBS1B7 BIT(1),           /* BIT 7 (DEVICE DEPENDENT)      */ 01856000
*      2 IOBECBPT PTR(31),          /* ADDRESS OF ECB TO BE POSTED ON   01857000
*                                      I/O COMPLETION                */ 01858000
*       3 IOBECBCC CHAR(1),         /* COMPLETION CODE FOR AN I/O  0188 01859000
*                                      REQUEST. THIS CODE WILL APPEAR   01860000
*                                      IN THE FIRST BYTE OF AN ECB.  */ 01861000
*       3 IOBECBPB PTR(24),         /* ADDRESS OF THE ECB TO BE    0188 01862000
*                                      POSTED UPON THE COMPLETION OF    01863000
*                                      AN I/O EVENT. FOR BSAM/BPAM,     01864000
*                                      ECB IS IN THE DECB. FOR QSAM,    01865000
*                                      ECB IS IN THE QSAM PREFIX OF     01866000
*                                      THE IOB.                      */ 01867000
*      2 IOBFLAG3 CHAR(1),          /* I/O SUPERVISOR ERROR ROUTINE     01868000
*                                      FLAG BYTE (DEVICE DEPENDENT)  */ 01869000
*       3 IOBFL3 BIT(8),            /* FLAG 3 - STATUS ERROR COUNTS     01870000
*                                      FOR MAGNETIC DOCUMENT READER     01871000
*                                      (3890) OR FLAGS FOR 3800    0188 01872000
*                                      (OS/VS1) (MDC307)     @X50AD9A*/ 01873000
*        4 IOBCCC BIT(1),           /* CHANNEL CONTROL CHECK ERROR 0188 01874000
*                                      COUNT (3890) MDC038           */ 01875000
*        4 IOBICC BIT(1),           /* INTERFACE CONTROL CHECK ERROR    01876000
*                                      COUNT (3890) MDC039           */ 01877000
*        4 IOBCDC BIT(1),           /* CHANNEL DATA CHECK ERROR    0188 01878000
*                                      (3890) MDC040                 */ 01879000
*        4 IOBACU BIT(1),           /* ATTENTION/CONTROL UNIT ERROR     01880000
*                                      (3890) MDC041                 */ 01881000
*        4 IOBCNC BIT(1),           /* CHAIN CHECK ERROR (3890)    0188 01882000
*                                      MDC042                        */ 01883000
*         5 IOBSDR BIT(1),          /* STATISTICS ONLY FLAG (3800) 0188 01884000
*                                      (MDC306)              @X50AD9A*/ 01885000
*        4 IOBMSG BIT(1),           /* MESSAGE FLAG (3890 OR 3800) 0188 01886000
*                                      (MDC308)              @X50AD9A*/ 01887000
*        4 IOBICL BIT(1),           /* INCORRECT LENGTH ERROR (3890)    01888000
*                                      MDC020                        */ 01889000
*         5 IOBJAM BIT(1),          /* SET ON WHEN JES SUBSYSTEM HAS    01890000
*                                      DETECTED A PAPER JAM SO 3800     01891000
*                                      ERP WILL SUPPRESS ITS       0188 01892000
*                                      INTERVENTION REQUIRED MESSAGE    01893000
*                                      (3800) (MDC330)       @X50AD9A*/ 01894000
*        4 IOBLOG BIT(1),           /* LOG OUT FLAG (3890 OR 3800) 0188 01895000
*                                      (MDC309)              @X50AD9A*/ 01896000
*      2 IOBCSW CHAR(7) BDY(WORD,2),/* LOW-ORDER SEVEN BYTES OF THE     01897000
*                                      LAST CSW THAT REFLECTS THE  0188 01898000
*                                      STATUS FOR THIS REQUEST       */ 01899000
*       3 IOBIOCSW CHAR(5) BDY(WORD,2),/* LOW-ORDER BYTES OF CSW FOR    01900000
*                                      MAGNETIC DOCUMENT READER    0188 01901000
*                                      (3890) (OS/VS1) MDC022        */ 01902000
*        4 IOBCMDA PTR(24) BDY(WORD,2),/* COMMAND ADDRESS          0188 01903000
*                                      (3890)MDC023                  */ 01904000
*        4 IOBSTBYT BIT(16),        /* STATUS BITS 32-47 (3890)    0188 01905000
*                                      MDC024                        */ 01906000
*         5 IOBUSTAT BIT(8),        /* CSW UNIT STATUS FLAGS (3800)     01907000
*                                      (MDC311)              @Z40MP9A*/ 01908000
*          6 IOBUSB0 BIT(1),        /* ATTENTION (MDC312)    @Z40MP9A*/ 01909000
*          6 IOBUSB1 BIT(1),        /* STATUS MODIFIER (MDC313)    0188 01910000
*                                                            @Z40MP9A*/ 01911000
*          6 IOBUSB2 BIT(1),        /* CONTROL UNIT END (MDC314)   0188 01912000
*                                                            @Z40MP9A*/ 01913000
*          6 IOBUSB3 BIT(1),        /* BUSY (MDC315)         @Z40MP9A*/ 01914000
*          6 IOBUSB4 BIT(1),        /* CHANNEL END (MDC316)  @Z40MP9A*/ 01915000
*          6 IOBUSB5 BIT(1),        /* DEVICE END (MDC317)   @Z40MP9A*/ 01916000
*          6 IOBUSB6 BIT(1),        /* UNIT CHECK (MDC318)   @Z40MP9A*/ 01917000
*          6 IOBUSB7 BIT(1),        /* UNIT EXCEPTION (MDC319)     0188 01918000
*                                                            @Z40MP9A*/ 01919000
*         5 IOBCSTAT BIT(8),        /* CSW CHANNEL STATUS FLAGS    0188 01920000
*                                      (3800) (MDC320)       @Z40MP9A*/ 01921000
*          6 IOBCSB0 BIT(1),        /* PROGRAM CONTROL INTERRUPT   0188 01922000
*                                      (MDC321)              @Z40MP9A*/ 01923000
*          6 IOBCSB1 BIT(1),        /* INCORRECT LENGTH (MDC322)   0188 01924000
*                                                            @Z40MP9A*/ 01925000
*          6 IOBCSB2 BIT(1),        /* PROGRAM CHECK (MDC323)      0188 01926000
*                                                            @Z40MP9A*/ 01927000
*          6 IOBCSB3 BIT(1),        /* PROTECTION CHECK (MDC324)   0188 01928000
*                                                            @Z40MP9A*/ 01929000
*          6 IOBCSB4 BIT(1),        /* CHANNEL DATA CHECK (MDC325) 0188 01930000
*                                                            @Z40MP9A*/ 01931000
*          6 IOBCSB5 BIT(1),        /* CHANNEL CONTROL CHECK (MDC326)   01932000
*                                                            @Z40MP9A*/ 01933000
*          6 IOBCSB6 BIT(1),        /* INTERFACE CONTROL CHECK     0188 01934000
*                                      (MDC327)              @Z40MP9A*/ 01935000
*          6 IOBCSB7 BIT(1),        /* CHAINING CHECK (MDC328)     0188 01936000
*                                                            @Z40MP9A*/ 01937000
*      2 IOBSTART PTR(31),          /* ADDRESS OF CHANNEL PROGRAM TO    01938000
*                                      BE EXECUTED                   */ 01939000
*       3 IOBSIOCC CHAR(1),         /* SIO CODE. BITS 2 AND 3 CONTAIN   01940000
*                                      CONDITION CODE RETURNED AFTER    01941000
*                                      EXECUTION OF SIO INSTRUCTION     01942000
*                                      FOR THIS I/O EVENT.           */ 01943000
*       3 IOBSTRTB PTR(24),         /* ADDRESS OF CHANNEL PROGRAM TO    01944000
*                                      BE EXECUTED                   */ 01945000
*      2 IOBDCBPT PTR(31),          /* ADDRESS OF DCB ASSOCIATED WITH   01946000
*                                      THIS IOB                      */ 01947000
*       3 IOBFLAG4 BIT(8),          /* FLAG BYTE MDC011              */ 01948000
*        4 IOBGDPOL BIT(1),         /* RE-ENTER SIO APPENDAGE FOR  0188 01949000
*                                      OLTEP GUARANTEED DEVICE PATH     01950000
*                                      MDC012                        */ 01951000
*        4 IOBCC3WE BIT(1),         /* USER REQUESTS THAT IOS POST A    01952000
*                                      X'6D' FOR A CONDITION CODE 3     01953000
*                                      ON ATTEMPTED I/O OPERATIONS 0188 01954000
*                                      (OS/VS2) (MDC310)     @Z309P9A*/ 01955000
*        4 IOBPMERR BIT(1),         /* VTAM SETS THIS BIT ON TO    0188 01956000
*                                      INDICATE TO IOS THAT VTAM   0188 01957000
*                                      SHOULD BE POSTED WITH A     0188 01958000
*                                      PERMANENT I/O ERROR BECAUSE 0188 01959000
*                                      ALL ALTERNATE PATHS TO THE  0188 01960000
*                                      3705 HAVE BEEN TRIED (OS/VS1)    01961000
*                                      (MDC329)              @X04BH9A*/ 01962000
*        4 IOBRSV40 BIT(1),         /* RESERVED                      */ 01963000
*        4 IOBRSV41 BIT(1),         /* RESERVED                      */ 01964000
*        4 IOBRSV42 BIT(1),         /* RESERVED                      */ 01965000
*        4 IOBJES3I BIT(1),         /* JES3 INTERVENTION REQUIRED  0188 01966000
*                                      NOTIFICATION. SETTING THIS BIT   01967000
*                                      WILL RESULT IN TURNING ON BIT    01968000
*                                      IOSPGDPX IN THE IOSB. (OS/VS2)   01969000
*                                      (MDC305)              @Y02BP9A*/ 01970000
*        4 IOBRSV44 BIT(1),         /* RESERVED                      */ 01971000
*       3 IOBDCBPB PTR(24),         /* ADDRESS OF DCB ASSOCIATED WITH   01972000
*                                      THIS IOB                      */ 01973000
*      2 IOBRESTR PTR(31),          /* AFTER SVC 16 (PURGE) - QUIESCE   01974000
*                                      - ADDRESS OF THE NEXT IOB IN     01975000
*                                      THE PURGE CHAIN. (LAST IOB IN    01976000
*                                      THE CHAIN, BYTE 4 IS FF.)   0188 01977000
*                                      DURING I/O SUPERVISOR WRITE-     01978000
*                                      TO-OPERATOR ROUTINE CONTROL -    01979000
*                                      CCHH PART OF THE ADDRESS OF A    01980000
*                                      DEFECTIVE TRACK. DURING I/O 0188 01981000
*                                      ERROR CORRECTION (MEANINGFUL     01982000
*                                      ONLY IF BIT 3 IN THE IOBFLAG1    01983000
*                                      FIELD IS ON) - ADDRESS OF THE    01984000
*                                      CHANNEL PROGRAM USED TO     0188 01985000
*                                      CORRECT AN ERROR CONDITION. 0188 01986000
*                                      AFTER I/O ERROR CORRECTION -     01987000
*                                      IF A CHANNEL PROGRAM IS     0188 01988000
*                                      RESTARTED THROUGH A CCW OTHER    01989000
*                                      THAN THE ONE POINTED TO BY THE   01990000
*                                      IOBSTART FIELD, ITS ADDRESS IS   01991000
*                                      HERE.                         */ 01992000
*       3 IOBREPOS CHAR(1),         /* DURING I/O ERROR CORRECTION 0188 01993000
*                                      (MEANINGFUL ONLY IF BIT 3 IN     01994000
*                                      THE IOBFLAG1 FIELD IS ON) FOR    01995000
*                                      MAGNETIC TAPE ONLY - THE    0188 01996000
*                                      CONTROL COMMAND (BSR, FSR,  0188 01997000
*                                      ERG) REQUIRED TO REPOSITION 0188 01998000
*                                      OVER A BLOCK.                 */ 01999000
*       3 IOBRSTRB PTR(24),         /* SAME AS IOBRESTR ABOVE        */ 02000000
*      2 IOBINCAM FIXED(15) BDY(WORD),/* QSAM, BSAM, EXCP ACCESS   0188 02001000
*                                      METHOD -- NORMAL SCHEDULING -    02002000
*                                      VALUE USED TO INCREMENT BLOCK    02003000
*                                      COUNT FIELD IN DCB FOR      0188 02004000
*                                      MAGNETIC TAPE. CHAINED      0188 02005000
*                                      SCHEDULING - ZEROS. QSAM, BSAM   02006000
*                                      -- OPERATION CODE OF WRITE CCW   02007000
*                                      WHEN A USASI CONTROL CHARACTER   02008000
*                                      AND NO DATA IS TO BE WRITTEN     02009000
*                                      (PRINTER AND CARD PUNCH ONLY) */ 02010000
*       3 IOBBTAMF CHAR(1),         /* FLAG BYTE FOR BTAM            */ 02011000
*        4 IOBPRMER BIT(1),         /* SAD OR ENABLE ISSUED BY OPEN     02012000
*                                      RESULTED IN A PERMANENT I/O 0188 02013000
*                                      ERROR                         */ 02014000
*        4 IOBINUSE BIT(1),         /* THIS IOB IS CURRENTLY IN USE     02015000
*                                      BY AN I/O OPERATION           */ 02016000
*        4 IOBRSV14 BIT(1),         /* RESERVED                      */ 02017000
*        4 IOBRSV15 BIT(1),         /* RESERVED                      */ 02018000
*        4 IOBRSV16 BIT(1),         /* RESERVED                      */ 02019000
*        4 IOBRSV17 BIT(1),         /* RESERVED                      */ 02020000
*        4 IOBRFTMG BIT(1),         /* A REQUEST-FOR-TEST MESSAGE  0188 02021000
*                                      RECEIVED FROM A REMOTE 3270 0188 02022000
*                                      DISPLAY STATION ICB478        */ 02023000
*        4 IOBOLTST BIT(1),         /* LINE IS UNDER ON-LINE TEST  0188 02024000
*                                      OPERATION                     */ 02025000
*       3 IOBRSV19 CHAR(1),         /* RESERVED                      */ 02026000
*      2 IOBERRCT FIXED(15);        /* USED BY I/O SUPERVISOR ERROR     02027000
*                                      ROUTINES TO COUNT TEMPORARY 0188 02028000
*                                      ERRORS DURING RETRY           */ 02029000
*   DECLARE                                                        0189 02030000
*     1 IOBORG04 DEF(IOBINCAM) BDY(WORD),                          0189 02031000
*      2 IOBCRDCC CHAR(1),          /* DATA CHECK ERROR COUNT      0189 02032000
*                                      (OPTICAL READER)              */ 02033000
*      2 IOBCRILC CHAR(1);          /* INCORRECT LENGTH ERROR COUNT     02034000
*                                      (OPTICAL READER)              */ 02035000
*   DECLARE                                                        0190 02036000
*     1 IOBORG12 DEF(IOBINCAM) BDY(WORD),                          0190 02037000
*      2 IOBFL4 BIT(8),             /* FLAG 4 - SENSE ERROR COUNTS 0190 02038000
*                                      FOR MAGNETIC DOCUMENT READER     02039000
*                                      (3890) (OS/VS1) MDC025        */ 02040000
*       3 IOBOVR BIT(1),            /* OVERRUN ERROR MDC026          */ 02041000
*       3 IOBREJ BIT(1),            /* COMMAND REJECT ERROR MDC027   */ 02042000
*       3 IOBDCK BIT(1),            /* DATA CHECK ERROR MDC028       */ 02043000
*       3 IOBBUS BIT(1),            /* BUS-OUT ERROR MDC029          */ 02044000
*       3 IOBEQP BIT(1),            /* EQUIPMENT CHECK ERROR MDC030  */ 02045000
*       3 IOBENT BIT(1),            /* FIRST TIME ENTRY SWITCH MDC045*/ 02046000
*       3 IOBRSV47 BIT(1),          /* RESERVED FOR 3890 MDC044      */ 02047000
*       3 IOBRSV46 BIT(1);          /* RESERVED FOR 3890 MDC033      */ 02048000
*/*  *************************************************************** */ 02049000
*/*                                                                  */ 02050000
*/*                 EXTENSION SECTIONS OF THE IOB                    */ 02051000
*/*                                                                  */ 02052000
*/*  *************************************************************** */ 02053000
*                                                                  0191 02054000
*   /*****************************************************************/ 02055000
*   /*                                                               */ 02056000
*   /* **************************************** DIRECT ACCESS        */ 02057000
*   /* EXTENSION *** 8 BYTES *****************************************/ 02058000
*   /*                                                               */ 02059000
*   /*****************************************************************/ 02060000
*                                                                  0191 02061000
*   DECLARE                                                        0191 02062000
*     1 IOBEXTEN DEF(IOBSTDRD) POS(33) BDY(WORD),                  0191 02063000
*      2 IOBSEEK CHAR(8) BDY(WORD), /* A SEEK ADDRESS (IN THE FORMAT    02064000
*                                      MBBCCHHR) USED WITH A CHANNEL    02065000
*                                      PROGRAM                       */ 02066000
*       3 IOBM CHAR(1),             /* THE NUMBER OF THE DEB EXTENT     02067000
*                                      TO BE USED FOR THIS REQUEST.     02068000
*                                      THE FIRST EXTENT IS NUMBER  0191 02069000
*                                      ZERO.                         */ 02070000
*       3 IOBBB CHAR(2),            /* BIN NUMBER(DATA CELL)         */ 02071000
*        4 IOBBB1 CHAR(1),                                         0191 02072000
*        4 IOBBB2 CHAR(1),                                         0191 02073000
*       3 IOBCC CHAR(2),            /* CYLINDER NUMBER               */ 02074000
*        4 IOBCC1 CHAR(1),                                         0191 02075000
*        4 IOBCC2 CHAR(1),                                         0191 02076000
*       3 IOBHH CHAR(2),            /* TRACK NUMBER                  */ 02077000
*        4 IOBHH1 CHAR(1),                                         0191 02078000
*        4 IOBHH2 CHAR(1),                                         0191 02079000
*       3 IOBR CHAR(1);             /* RECORD NUMBER                 */ 02080000
*                                                                  0191 02081000
*   /*****************************************************************/ 02082000
*   /*                                                               */ 02083000
*   /* **************************************** BTAM EXTENSION *** 40*/ 02084000
*   /* BYTES + CHANNEL PROGRAM                                       */ 02085000
*   /* ****************************************                      */ 02086000
*   /*                                                               */ 02087000
*   /*****************************************************************/ 02088000
*                                                                  0192 02089000
*   DECLARE                                                        0192 02090000
*     1 IOBORG05 DEF(IOBEXTEN) BDY(WORD),                          0192 02091000
*      2 IOBUCBX CHAR(1),           /* UCB INDEX. THE LINE NUMBER IS    02092000
*                                      USED AS AN INDEX TO LOCATE THE   02093000
*                                      PROPER UCB ADDRESS IN THE DEB.*/ 02094000
*      2 IOBWORK CHAR(5),           /* WORK AREA USED BY ERROR     0192 02095000
*                                      ROUTINES AND ON-LINE TERMINAL    02096000
*                                      TEST ROUTINES                 */ 02097000
*      2 IOBRCVPT CHAR(1),          /* RECEIVED ACK (ACK-0 OR ACK-1) */ 02098000
*      2 IOBSNDPT CHAR(1),          /* SENT ACK (ACK-0 OR ACK-1)     */ 02099000
*      2 IOBERCCW CHAR(8) BDY(WORD),/* CCW AREA USED BY THE BTAM   0192 02100000
*                                      ERROR RECOVERY ROUTINES       */ 02101000
*      2 IOBERINF CHAR(16) BDY(WORD),/* ERROR INFORMATION FIELD USED    02102000
*                                      BY THE BTAM ERROR RECOVERY  0192 02103000
*                                      ROUTINES                      */ 02104000
*      2 IOBCPA CHAR(8) BDY(WORD);  /* CHANNEL PROGRAMS AREA. THE  0192 02105000
*                                      LENGTH DEPENDS ON THE TERMINAL   02106000
*                                      AND THE OPTIONS.              */ 02107000
*                                                                  0192 02108000
*   /*****************************************************************/ 02109000
*   /*                                                               */ 02110000
*   /* **************************************** GAM EXTENSION *** 40 */ 02111000
*   /* BYTES ****************************************                */ 02112000
*   /*                                                               */ 02113000
*   /*****************************************************************/ 02114000
*                                                                  0193 02115000
*   DECLARE                                                        0193 02116000
*     1 IOBORG06 DEF(IOBEXTEN) BDY(WORD),                          0193 02117000
*       3 IOBUCBXG CHAR(1),         /* UCB INDEX                     */ 02118000
*       3 IOBRSV37 CHAR(3),         /* RESERVED                      */ 02119000
*       3 IOBNXTPT PTR(31),         /* ADDRESS OF NEXT AVAILABLE IOB.   02120000
*                                      SET TO ZERO IF THIS IS LAST 0193 02121000
*                                      IOB.                          */ 02122000
*        4 IOBSTATA CHAR(1),        /* STATUS INDICATORS             */ 02123000
*         5 IOBAVLFL BIT(1),        /* IF 0, IOB IS AVAILABLE. IF 1,    02124000
*                                      IOB IS NOT AVAILABLE          */ 02125000
*         5 IOBRSV20 BIT(1),        /* RESERVED                      */ 02126000
*         5 IOBRSV21 BIT(1),        /* RESERVED                      */ 02127000
*         5 IOBRSV22 BIT(1),        /* RESERVED                      */ 02128000
*         5 IOBRSV23 BIT(1),        /* RESERVED                      */ 02129000
*         5 IOBRSV24 BIT(1),        /* RESERVED                      */ 02130000
*         5 IOBRSV25 BIT(1),        /* RESERVED                      */ 02131000
*         5 IOBRSV26 BIT(1),        /* RESERVED                      */ 02132000
*        4 IOBNXTPB PTR(24),        /* SAME AS IOBNXTPT ABOVE        */ 02133000
*       3 IOBCCW CHAR(32) BDY(WORD);/* LIST OF CHANNEL COMMAND WORDS    02134000
*                                      TO TRANSFER DATA              */ 02135000
*                                                                  0193 02136000
*   /*****************************************************************/ 02137000
*   /*                                                               */ 02138000
*   /* **************************************** QISAM EXTENSION *** 2*/ 02139000
*   /* BYTES ****************************************                */ 02140000
*   /*                                                               */ 02141000
*   /*****************************************************************/ 02142000
*                                                                  0194 02143000
*   DECLARE                                                        0194 02144000
*     1 IOBORG07 DEF(IOBEXTEN) POS(9) BDY(WORD),                   0194 02145000
*      2 W1IEXTEN CHAR(2),          /* APPENDAGE CODES FOR BOTH    0194 02146000
*                                      NORMAL AND ABNORMAL CHANNEL 0194 02147000
*                                      END CONDITIONS                */ 02148000
*       3 W1OEXTEN CHAR(2);         /* SAME AS W1IEXTEN ABOVE        */ 02149000
*                                                                  0194 02150000
*   /*****************************************************************/ 02151000
*   /*                                                               */ 02152000
*   /* **************************************** BISAM EXTENSION ***  */ 02153000
*   /* 16 BYTES ****************************************             */ 02154000
*   /*                                                               */ 02155000
*   /*****************************************************************/ 02156000
*                                                                  0195 02157000
*   DECLARE                                                        0195 02158000
*     1 IOBORG08 DEF(IOBEXTEN) POS(9) BDY(WORD),                   0195 02159000
*      2 IOBCCWAD PTR(31),          /* FOR FIXED LENGTH RECORDS,   0195 02160000
*                                      ADDRESS OF FIRST CCW OF     0195 02161000
*                                      CHANNEL PROGRAM. FOR VARIABLE    02162000
*                                      LENGTH RECORDS, ADDRESS OF  0195 02163000
*                                      BUFFER, IF DYNAMIC BUFFERING     02164000
*                                      SPECIFIED, AFTER COMPLETION OF   02165000
*                                      READ FOR UPDATE (READ KU)     */ 02166000
*      2 IOBINDCT CHAR(1),          /* INDICATORS                    */ 02167000
*       3 IOBDEQCP BIT(1),          /* DEQUEUE CHANNEL PROGRAM FROM     02168000
*                                      QUEUE                         */ 02169000
*       3 IOBUNSCH BIT(1),          /* UNSCHEDULED QUEUE             */ 02170000
*       3 IOBOVPTR BIT(1),          /* IF 0, DECBAREA + 6 POINTS TO     02171000
*                                      OVERFLOW RECORD DATA. IF 1, 0195 02172000
*                                      DCBMSWA POINTS TO OVERFLOW  0195 02173000
*                                      RECORD KEY FOLLOWED BY DATA.  */ 02174000
*       3 IOBKEYAD BIT(1),          /* IF 0, DECBKEY POINTS TO     0195 02175000
*                                      OVERFLOW RECORD KEY. IF 1,  0195 02176000
*                                      DCBMSWA + 8 POINTS TO OVERFLOW   02177000
*                                      RECORD KEY.                   */ 02178000
*       3 IOBRSV27 BIT(1),          /* RESERVED                      */ 02179000
*       3 IOBRSV28 BIT(1),          /* RESERVED                      */ 02180000
*       3 IOBRSV29 BIT(1),          /* RESERVED                      */ 02181000
*       3 IOBCHNNL BIT(1),          /* IF 0, NORMAL CHANNEL END HAS     02182000
*                                      OCCURRED. IF 1, ABNORMAL    0195 02183000
*                                      CHANNEL END HAS OCCURRED.     */ 02184000
*      2 IOBUNSQR CHAR(1),          /* REASON FOR UNSCHEDULED QUEUE  */ 02185000
*       3 IOBCPBSY BIT(1),          /* CHANNEL PROGRAM CP1 OR CP2  0195 02186000
*                                      BUSY                          */ 02187000
*       3 IOBNTAV1 BIT(1),          /* NO CP4, CP5 OR CP6 AVAILABLE  */ 02188000
*       3 IOBNTAV2 BIT(1),          /* NO CP7 AVAILABLE              */ 02189000
*       3 IOBKNWR BIT(1),           /* WRITE KN IS IN EFFECT       0195 02190000
*                                      (UNSCHEDULED IOB IS FOR WRITE    02191000
*                                      KN)                           */ 02192000
*       3 IOBKNRWR BIT(1),          /* WRITE KN IS IN EFFECT       0195 02193000
*                                      (UNSCHEDULED IOB IS FOR READ     02194000
*                                      OR WRITE KN)                  */ 02195000
*       3 IOBRSV30 BIT(1),          /* RESERVED                      */ 02196000
*       3 IOBRSV31 BIT(1),          /* RESERVED                      */ 02197000
*       3 IOBRSV32 BIT(1),          /* RESERVED                      */ 02198000
*      2 IOBAPP CHAR(1),            /* APPENDAGE CODE                */ 02199000
*      2 IOBASYN CHAR(1),           /* ASYNCHRONOUS ROUTINE CODE     */ 02200000
*      2 IOBFCHAD PTR(31),          /* FORWARD CHAIN ADDRESS         */ 02201000
*       3 IOBCOUNT CHAR(1),         /* WRITE CHECK COUNTER           */ 02202000
*       3 IOBFCHNB PTR(24),         /* FORWARD CHAIN ADDRESS         */ 02203000
*      2 IOBBCHAD PTR(31);          /* BACKWARD CHAIN ADDRESS        */ 02204000
*                                                                  0195 02205000
*   /*****************************************************************/ 02206000
*   /*                                                               */ 02207000
*   /* **************************************** BDAM EXTENSION *** 40*/ 02208000
*   /* BYTES + CHANNEL PROGRAM                                       */ 02209000
*   /* ****************************************                      */ 02210000
*   /*                                                               */ 02211000
*   /*****************************************************************/ 02212000
*                                                                  0196 02213000
*   DECLARE                                                        0196 02214000
*     1 IOBORG09 DEF(IOBEXTEN) POS(9) BDY(WORD),                   0196 02215000
*      2 IOBDBYTR FIXED(15),        /* NUMBER OF UNUSED BYTES      0196 02216000
*                                      REMAINING ON THE TRACK        */ 02217000
*      2 IOBDIOBS FIXED(15),        /* OVERALL SIZE OF THE IOB       */ 02218000
*      2 IOBDPLAD PTR(31),          /* ADDRESS OF THE NEXT IOB IN THE   02219000
*                                      POOL OF IOB'S                 */ 02220000
*       3 IOBDAYLI CHAR(1),         /* ALL BITS SET TO ZERO INDICATE    02221000
*                                      THE AVAILABILITY OF THIS IOB  */ 02222000
*       3 IOBDPLB PTR(24),          /* ADDRESS OF THE NEXT IOB IN THE   02223000
*                                      POOL OF IOB'S                 */ 02224000
*      2 IOBDTYPE CHAR(1),          /* THE TYPE OF REQUEST AND     0196 02225000
*                                      SPECIFIED OPTIONS             */ 02226000
*       3 IOBVERFY BIT(1),          /* VERIFY                        */ 02227000
*       3 IOBOVFLO BIT(1),          /* OVERFLOW                      */ 02228000
*       3 IOBEXTSC BIT(1),          /* EXTENDED SEARCH               */ 02229000
*       3 IOBFDBCK BIT(1),          /* FEEDBACK                      */ 02230000
*       3 IOBACTAD BIT(1),          /* ACTUAL ADDRESSING             */ 02231000
*       3 IOBDYNBF BIT(1),          /* DYNAMIC BUFFERING             */ 02232000
*       3 IOBRDEXC BIT(1),          /* READ EXCLUSIVE                */ 02233000
*       3 IOBRELBL BIT(1),          /* RELATIVE BLOCK ADDRESSING     */ 02234000
*      2 IOBDTYP2 CHAR(1),          /* SECOND BYTE OF OPTIONS AND  0196 02235000
*                                      REQUESTS                      */ 02236000
*       3 IOBSKEY BIT(1),           /* KEY ADDRESS CODED AS 'S'      */ 02237000
*       3 IOBSBLKL BIT(1),          /* BLOCK LENGTH CODED AS 'S'     */ 02238000
*       3 IOBSUFFX BIT(2),          /* IF BITS 2 AND 3 ARE ONE, RU IS   02239000
*                                      SUFFIXED TO THE TYPE,       0196 02240000
*                                      INDICATING THAT THE FEEDBACK     02241000
*                                      ADDRESS IN DECNXADR CAN BE THE   02242000
*                                      ADDRESS OF EITHER THE NEXT  0196 02243000
*                                      DATA RECORD OR THE NEXT     0196 02244000
*                                      CAPACITY RECORD, WHICHEVER  0196 02245000
*                                      OCCURS FIRST. IF BIT 2 IS ZERO   02246000
*                                      AND BIT 3 IS ONE, R IS      0196 02247000
*                                      SUFFIXED TO THE TYPE,       0196 02248000
*                                      INDICATING THAT THE FEEDBACK     02249000
*                                      ADDRESS IN DECNXADR IS THE  0196 02250000
*                                      ADDRESS OF THE NEXT DATA    0196 02251000
*                                      RECORD.                       */ 02252000
*       3 IOBRQUST BIT(1),          /* IF 1, READ REQUEST. IF 0,   0196 02253000
*                                      WRITE REQUEST.                */ 02254000
*       3 IOBTYPE BIT(1),           /* IF 1, KEY TYPE. IF 0, ID TYPE.*/ 02255000
*       3 IOBADDTY BIT(1),          /* ADD TYPE                      */ 02256000
*       3 IOBRELEX BIT(1),          /* RELEX MACRO ISSUED            */ 02257000
*      2 IOBDSTAT CHAR(2),          /* STATUS OF THE I/O REQUEST     */ 02258000
*       3 IOBSTAT1 CHAR(1),         /* FLAG BYTE                     */ 02259000
*        4 IOBABNRM BIT(1),         /* ABNORMAL COMPLETION           */ 02260000
*        4 IOBNEWVL BIT(1),         /* ON EXTENDED SEARCH, THE NEXT     02261000
*                                      EXTENT IS ON A NEW VOLUME. THE   02262000
*                                      ASI ROUTINE MUST ISSUE THE  0196 02263000
*                                      EXCP MACRO. THE END-OF-EXTENT    02264000
*                                      APPENDAGE CANNOT.             */ 02265000
*        4 IOBSYNCH BIT(1),         /* MODULE WAS ENTERED VIA SYNCH     02266000
*                                      MDC037                        */ 02267000
*        4 IOBPASS2 BIT(1),         /* ON EXTENDED SEARCH, INDICATES    02268000
*                                      TO THE RELATIVE BLOCK       0196 02269000
*                                      CONVERSION ROUTINE THAT THE 0196 02270000
*                                      SECOND PASS OF A TWO-PASS   0196 02271000
*                                      CONVERSION ROUTINE HAS      0196 02272000
*                                      COMPLETED                     */ 02273000
*        4 IOBENQUE BIT(1),         /* FOR EXCLUSIVE CONTROL REQUEST,   02274000
*                                      INDICATES THAT A RECORD HAS 0196 02275000
*                                      BEEN ENQUEUED                 */ 02276000
*        4 IOBBUFF BIT(1),          /* A BUFFER HAS BEEN ASSIGNED TO    02277000
*                                      THIS IOB                      */ 02278000
*        4 IOBADDVU BIT(1),         /* IOB BEING USED TO ADD A     0196 02279000
*                                      VARIABLE (V) OR UNDEFINED (U)    02280000
*                                      TYPE RECORD TO THE DATA SET   */ 02281000
*        4 IOBSIORT BIT(1),         /* INDICATES TO THE DYNAMIC    0196 02282000
*                                      BUFFERING ROUTINE THAT IT WAS    02283000
*                                      ENTERED FROM, AND IS TO RETURN   02284000
*                                      TO, THE START I/O APPENDAGE 0196 02285000
*                                      MODULE                        */ 02286000
*       3 IOBSTAT2 CHAR(1),         /* ERROR CODE FOR ABNORMAL     0196 02287000
*                                      COMPLETION USED AS POST CODE     02288000
*                                      IN ECB                        */ 02289000
*      2 IOBDCPND PTR(31),          /* ADDRESS OF LOCATION WHERE   0196 02290000
*                                      CHANNEL END PROGRAM SHOULD END*/ 02291000
*      2 IOBDBYTN FIXED(15),        /* NUMBER OF BYTES NEEDED ON A 0196 02292000
*                                      TRACK TO WRITE A NEW BLOCK    */ 02293000
*      2 IOBRSV34 CHAR(2),          /* RESERVED                      */ 02294000
*      2 IOBDQPTR PTR(31),          /* ADDRESS OF IOB FOR NEXT I/O 0196 02295000
*                                      OPERATION TO BE EXECUTED      */ 02296000
*      2 IOBRSV35 CHAR(8) BDY(WORD),/* RESERVED                      */ 02297000
*      2 IOBDNCRF CHAR(8) BDY(WORD),/* COUNT FIELD FOR NEW BLOCK     */ 02298000
*      2 IOBCHNPR CHAR(0) BDY(WORD);/* CHANNEL PROGRAM USED TO     0196 02299000
*                                      TRANSFER DATA AS REQUESTED BY    02300000
*                                      THE READ OR WRITE MACRO     0196 02301000
*                                      INSTRUCTION STARTS HERE       */ 02302000
*                                                                  0196 02303000
*   /*****************************************************************/ 02304000
*   /*                                                               */ 02305000
*   /* **************************************** VSAM EXTENSION *** 24*/ 02306000
*   /* BYTES ****************************************                */ 02307000
*   /*                                                               */ 02308000
*   /*****************************************************************/ 02309000
*                                                                  0197 02310000
*   DECLARE                                                        0197 02311000
*     1 IOBORG10 DEF(IOBEXTEN) POS(9) BDY(WORD),                   0197 02312000
*      2 IOBSEEK2 CHAR(8) BDY(WORD),/* SEEK FIELD 2 ICB435           */ 02313000
*       3 IOBSK2M CHAR(1),          /* EXTENT NUMBER ICB435          */ 02314000
*       3 IOBSK2BB CHAR(2),         /* BIN NUMBER ICB435             */ 02315000
*       3 IOBSK2CC CHAR(2),         /* CYLINDER NUMBER ICB435        */ 02316000
*       3 IOBSK2HH CHAR(2),         /* HEAD NUMBER ICB435            */ 02317000
*       3 IOBSK2R CHAR(1),          /* RECORD NUMBER ICB435          */ 02318000
*      2 IOBBUFC PTR(31),           /* ADDRESS OF ASSOCIATED BUFFER     02319000
*                                      CONTROL BLOCK ICB435          */ 02320000
*      2 IOBREADA PTR(31),          /* ADDRESS OF FIRST READ CHANNEL    02321000
*                                      PROGRAM SEGMENT THAT HAS NOT     02322000
*                                      BEEN PROCESSED ICB435         */ 02323000
*      2 IOBNEXTA PTR(31),          /* ADDRESS OF NEXT ACTIVE IOB  0197 02324000
*                                      ICB435                        */ 02325000
*      2 IOBRDCHP PTR(31);          /* ADDRESS OF READ CHANNEL     0197 02326000
*                                      PROGRAM ICB435                */ 02327000
*                                                                  0197 02328000
*   /*****************************************************************/ 02329000
*   /*                                                               */ 02330000
*   /* **************************************** VTAM EXTENSION       */ 02331000
*   /* (OS/VS1 ONLY) *** 24 BYTES                                    */ 02332000
*   /* ****************************************                      */ 02333000
*   /*                                                               */ 02334000
*   /*****************************************************************/ 02335000
*                                                                  0198 02336000
*   DECLARE                                                        0198 02337000
*     1 IOBORG11 DEF(IOBEXTEN) BDY(WORD),                          0198 02338000
*      2 IOBERCT PTR(31),           /* SAME AS IOBERCTA BELOW MDC001 */ 02339000
*       3 IOBUCBXV PTR(8),          /* UCB INDEX MDC050              */ 02340000
*        4 IOBRTYPE BIT(8),         /* RECORD TYPE FOR OBR MDC002    */ 02341000
*       3 IOBERCTA PTR(24),         /* POINTER TO COUNTERS FOR SIO 0198 02342000
*                                      AND TEMPORARY ERRORS MDC003   */ 02343000
*      2 IOBNAME PTR(31),           /* SAME AS IOBNAMEA BELOW MDC004 */ 02344000
*       3 IOBNAMSZ BIT(8),          /* SIZE OF TERMINAL NAME MDC005  */ 02345000
*       3 IOBNAMEA PTR(24),         /* POINTER TO TERMINAL NAME    0198 02346000
*                                      MDC006                        */ 02347000
*      2 IOBMDREC PTR(31),          /* POINTER TO RECORD BEING PASSED   02348000
*                                      TO MISCELLANEOUS DATA RECORDER   02349000
*                                      MDC007                        */ 02350000
*      2 IOBRCD PTR(31),            /* POINTER TO QUEUE OF OBR     0198 02351000
*                                      RECORDS PASSED FROM 3705    0198 02352000
*                                      MDC008                        */ 02353000
*      2 IOBSENSV BIT(8),           /* SENSE BYTE SAVE AREA MDC009   */ 02354000
*      2 IOBCSWSV CHAR(7);          /* SAVE AREA FOR LAST 7 BYTES OF    02355000
*                                      CSW MDC010                    */ 02356000
*                                                                  0198 02357000
*   /*****************************************************************/ 02358000
*   /*                                                               */ 02359000
*   /* **************************************** 3540 EXTENSION *** 4 */ 02360000
*   /* BYTES                                                 @Z30OP9A*/ 02361000
*   /* ****************************************                      */ 02362000
*   /*                                                               */ 02363000
*   /*****************************************************************/ 02364000
*                                                                  0199 02365000
*   DECLARE                                                        0199 02366000
*     1 IOBORG13 DEF(IOBEXTEN) BDY(WORD),/*                  @Z30OP9A*/ 02367000
*      2 IOBSKADR CHAR(4) BDY(WORD),/* 3540 SEEK ADDRESS (MDC300)  0199 02368000
*                                                            @Z30OP9A*/ 02369000
*       3 IOBSKRV PTR(8),           /* RESERVED (MDC301)     @Z30OP9A*/ 02370000
*       3 IOBSKTT PTR(8),           /* TRACK NUMBER (MDC302) @Z30OP9A*/ 02371000
*       3 IOBSK0 PTR(8),            /* MUST BE ZERO (MDC303) @Z30OP9A*/ 02372000
*       3 IOBSKSS PTR(8);           /* SECTOR NUMBER (MDC304)      0199 02373000
*                                                            @Z30OP9A*/ 02374000
*                                                                  0200 02375000
*/********************************************************************/ 02376000
*/*                                                                  */ 02377000
*/*         INCLUDE LOAD LIST ELEMENT DSECT                          */ 02378000
*/*                                                                  */ 02379000
*/********************************************************************/ 02380000
*/*         %INCLUDE SYSLIB(IHALLE)                                  */ 02381000
*/*  *************************************************************** */ 02382000
*/*            LOAD LIST ELEMENT                                     */ 02383000
*/*                                                                  */ 02384000
*/*          AOS/2 REL 2, 03/26/72, LEVEL=3                          */ 02385000
*/*  *************************************************************** */ 02386000
*                                                                  0200 02387000
*   DECLARE                                                        0200 02388000
*     1 LLE BASED(LLEPTR),                                         0200 02389000
*      2 LLECHN PTR(31),            /* ADDRESS OF NEXT ELEMENT ON  0200 02390000
*                                      LOAD LIST                     */ 02391000
*      2 LLECDPT PTR(31),           /* ADDRESS OF CDE FOR MODULE     */ 02392000
*      2 LLECOUNT PTR(15),          /* RESPONSIBILITY COUNT. THE   0200 02393000
*                                      TOTAL NUMBER OF REQUESTS FOR     02394000
*                                      THE MODULE VIA THE LOAD MACRO    02395000
*                                      INSTRUCTION.                  */ 02396000
*      2 LLESYSCT PTR(15);          /* SYSTEM RESPONSIBILITY COUNT.     02397000
*                                      THE NUMBER OF REQUESTS FOR THE   02398000
*                                      MODULE VIA THE LOAD MACRO   0200 02399000
*                                      INSTRUCTION.                  */ 02400000
*                                                                  0201 02401000
*/********************************************************************/ 02402000
*/*                                                                  */ 02403000
*/*         INCLUDE LINK PACK DIRECTORY ENTRY DSECT                  */ 02404000
*/*                                                                  */ 02405000
*/********************************************************************/ 02406000
*/*         %INCLUDE SYSLIB(IHALPDE)                                 */ 02407000
*/*  *************************************************************** */ 02408000
*/*            MACCOMP OS/VS2,RELEASE 4    SC1CJ/PZD81               */ 02409000
*/*                                                                  */ 02410000
*/*            MACSTAT OS/VS2,RELEASE 4    74239                     */ 02411000
*/*                                                                  */ 02412000
*/*            MACMEAN LPDE MEANS LINK PACK DIRECTORY ENTRY          */ 02413000
*/*  *************************************************************** */ 02414000
*                                                                  0201 02415000
*   DECLARE                                                        0201 02416000
*     1 LPDE BASED(LPDEPTR),                                       0201 02417000
*      2 LPDECHN PTR(31),           /* ADDRESS OF NEXT LPDE IN CHAIN    02418000
*                                      OF LPDE SYNONYMS              */ 02419000
*      2 LPDERBP PTR(31),           /* RESERVED                      */ 02420000
*      2 LPDENAME CHAR(8),          /* EITHER MODULE NAME OR ALIAS 0201 02421000
*                                      NAME                          */ 02422000
*      2 LPDENTP PTR(31),           /* RELOCATED ENTRY POINT ADDRESS */ 02423000
*      2 LPDEXLP PTR(31),           /* RESERVED                      */ 02424000
*      2 LPDEUSE PTR(15),           /* COUNT FIELD - COUNT IS 1      */ 02425000
*      2 * PTR(15),                 /* RESERVED                      */ 02426000
*      2 LPDEATTR CHAR(1),          /* ATTRIBUTE FLAGS               */ 02427000
*       3 LPDENIP BIT(1),           /* MODULE LOADED BY NIP          */ 02428000
*       3 * BIT(1),                 /* RESERVED                      */ 02429000
*       3 LPDEREN BIT(1),           /* MODULE IS REENTERABLE         */ 02430000
*       3 LPDESER BIT(1),           /* MODULE IS SERIALLY REUSABLE   */ 02431000
*       3 * BIT(1),                 /* RESERVED                      */ 02432000
*       3 LPDEMIN BIT(1),           /* THIS IS A MINOR LPDE          */ 02433000
*       3 * BIT(1),                 /* RESERVED                      */ 02434000
*       3 LPDENLR BIT(1),           /* NOT LOADABLE ONLY             */ 02435000
*      2 LPDEATT2 CHAR(1),          /* SECOND ATTRIBUTE FLAG BYTE    */ 02436000
*       3 * BIT(2),                 /* RESERVED                      */ 02437000
*       3 LPDEXLE BIT(1),           /* EXTENT LIST BUILT - MAIN    0201 02438000
*                                      STORAGE OCCUPIED BY MODULE IS    02439000
*                                      DESCRIBED THEREIN             */ 02440000
*       3 LPDERLC BIT(1),           /* LPDE CONTAINS A RELOCATED   0201 02441000
*                                      ALIAS ENTRY POINT ADDRESS     */ 02442000
*       3 * BIT(1),                 /* RESERVED                      */ 02443000
*       3 * BIT(1),                 /* RESERVED                      */ 02444000
*       3 LPDESYSL BIT(1),          /* AUTHORIZED LIBRARY MODULE     */ 02445000
*       3 LPDEAUTH BIT(1),          /* PROGRAM AUTHORIZATION FLAG  0201 02446000
*                                      ICB360                        */ 02447000
*      2 LPDEATT3 FIXED(15),        /* RESERVED                      */ 02448000
*      2 LPDEMJNM CHAR(8) BDY(WORD),/* MAJOR LPDE ENTRY POINT NAME 0201 02449000
*                                      WHEN LPDEMIN=1 OR 8-BYTE    0201 02450000
*                                      EXTENT LIST IF LPDEMIN=0      */ 02451000
*       3 LPDEXTLN FIXED(31),       /* LENGTH OF MAIN STORAGE BLOCK     02452000
*                                      IN WHICH MODULE RESIDES       */ 02453000
*       3 LPDEXTAD PTR(31);         /* ADDRESS OF MAIN STORAGE BLOCK    02454000
*                                      IN WHICH MODULE RESIDES       */ 02455000
*                                                                  0202 02456000
*/********************************************************************/ 02457000
*/*                                                                  */ 02458000
*/*         INCLUDE NIP VECTOR TABLE DSECT                           */ 02459000
*/*                                                                  */ 02460000
*/********************************************************************/ 02461000
*/*         %DECLARE NVT CHAR           ** TYPE OF MAPPING           */ 02462000
*/*         %NVT = 'MAP'                ** REQUEST DSECT OF NVT      */ 02463000
*/*         %DECLARE TYP CHAR           ** EXTENT OF MAP REQUIRED    */ 02464000
*/*         %TYP = 'ALL'                ** REQUEST ENTIRE NVT        */ 02465000
*/*         %INCLUDE SYSLIB(IHANVT)                                  */ 02466000
*                                                                  0202 02467000
*   DECLARE                                                        0202 02468000
*     RNVT PTR(31) REG(2);          /* ADDRESS OF THE NVT            */ 02469000
*   DECLARE                                                        0203 02470000
*     RCVT PTR(31) REG(3);          /* ADDRESS OF THE CVT            */ 02471000
*   DECLARE                                                        0204 02472000
*     REXIT PTR(31) REG(14);        /* RETURN ADDRESS REGISTER       */ 02473000
*   DECLARE                                                        0205 02474000
*     RENTRY PTR(31) REG(15);       /* ENTRY ADDRESS REGISTER        */ 02475000
*/********************************************************************/ 02476000
*/*                     NIP  VECTOR  TABLE  (NVT)                    */ 02477000
*/*                                                                  */ 02478000
*/*                      DATE=5/1/75,VS2R4                 @Z40LPXC  */ 02479000
*/*                      DATE=5/24/76,VS2R3.7 SU7          @ZA10111  */ 02480000
*/*                                                                  */ 02481000
*/*       THE NIP VECTOR TABLE (NVT) IS THE BASIC CONTROL BLOCK      */ 02482000
*/*       USED FOR COMMUNICATION AND INFORMATION DURING NIP          */ 02483000
*/*       PROCESSING.  THE INITIAL PORTION OF THE NVT (INVT) IS      */ 02484000
*/*       ASSEMBLED INTO MODULE IEAVNIP0 AND CONTAINS FIELDS         */ 02485000
*/*       USED BY IEAVNIP0 AND V-CONS FOR NUCLEUS ENTRY POINTS.      */ 02486000
*/*       THE INITIAL NVT IS RELOCATED INTO MODULE IEAVNIPM          */ 02487000
*/*       IN WHICH THE REMAINDER OF THE NVT IS ASSEMBLED.            */ 02488000
*/*       THIS PORTION OF THE NVT CONTAINS POINTERS TO THE           */ 02489000
*/*       VARIOUS SERVICE ROUTINES CONTAINED IN IEAVNIPM PLUS        */ 02490000
*/*       ALL OTHER NVT FIELDS WHICH HAVE NO REQUIREMENT TO          */ 02491000
*/*       BE INCLUDED IN THE INITIAL NVT.  THE NVT RESIDES IN        */ 02492000
*/*       IEAVNIPM FOR THE REMAINDER OF NIP PROCESSING.              */ 02493000
*/*                                                                  */ 02494000
*/********************************************************************/ 02495000
*/*                                                                  */ 02496000
*/*            DISABLED WAIT STATE CODES LOADED BY NIP -             */ 02497000
*/*                                                                  */ 02498000
*                                                                  0206 02499000
*   DCL                                                            0206 02500000
*     NVTFLWIE BIT(8) CONSTANT('21'X);/* I/O ERROR ON CONSOLE EXCP   */ 02501000
*   DCL                                                            0207 02502000
*     NVTFLWAB BIT(8) CONSTANT('30'X);/* UNEXPECTED TASK ABEND       */ 02503000
*   DCL                                                            0208 02504000
*     NVTFLWNU BIT(8) CONSTANT('31'X);/* NO UCB FOR IPL UNIT         */ 02505000
*   DCL                                                            0209 02506000
*     NVTFLWNN BIT(8) CONSTANT('32'X);/* NIP MODULE NOT FOUND BY BLDL*/ 02507000
*   DCL                                                            0210 02508000
*     NVTFLWBN BIT(8) CONSTANT('33'X);/* I/O ERROR ON BLDL           */ 02509000
*   DCL                                                            0211 02510000
*     NVTFLWCP BIT(8) CONSTANT('34'X);/* CPU NOT 370 WITH RELOCATE   */ 02511000
*   DCL                                                            0212 02512000
*     NVTFLWCK BIT(8) CONSTANT('00'X);/* RESERVED                    */ 02513000
*   DCL                                                            0213 02514000
*     NVTFLWSQ BIT(8) CONSTANT('36'X);/* INITIAL SQA PAGES EXHAUSTED */ 02515000
*   DCL                                                            0214 02516000
*     NVTFLWNL BIT(8) CONSTANT('37'X);/* REQUIRED LIBRARY NOT FOUND  */ 02517000
*   DCL                                                            0215 02518000
*     NVTFLWRS BIT(8) CONSTANT('38'X);/* INSUFFICIENT REAL STORAGE 0215 02519000
*                                      FOR NIP                       */ 02520000
*   DCL                                                            0216 02521000
*     NVTFLWLC BIT(8) CONSTANT('0A'X);/* SYS1.LINKLIB NOT CATALOGED  */ 02522000
*   DCL                                                            0217 02523000
*     NVTFLWPR BIT(8) CONSTANT('39'X);/* PERM RESIDENT MOUNT CONFLICT*/ 02524000
*   DCL                                                            0218 02525000
*     NVTFLWCS BIT(8) CONSTANT('3A'X);/* ERROR DURING LPA COLDSTART  */ 02526000
*   DCL                                                            0219 02527000
*     NVTFLWAX BIT(8) CONSTANT('3B'X);/* REQUIRED LPA MODULE MISSING */ 02528000
*   DCL                                                            0220 02529000
*     NVTFLWNM BIT(8) CONSTANT('3C'X);/* INSUFFICIENT AUXILIARY    0220 02530000
*                                      STORAGE                       */ 02531000
*   DCL                                                            0221 02532000
*     NVTFLWSE BIT(8) CONSTANT('3F'X);/* NIP DIAGNOSED SYSTEM ERROR  */ 02533000
*   DCL                                                            0222 02534000
*     NVTFLWAM BIT(8) CONSTANT('40'X);/* UNEXPECTED NIP TASK ABEND   */ 02535000
*   DCL                                                            0223 02536000
*     NVTFLWNC BIT(8) CONSTANT('07'X);/* NO USABLE MASTER CONSOLE  0223 02537000
*                                      FOUND                         */ 02538000
*   DCL                                                            0224 02539000
*     NVTF0BCP BIT(8) CONSTANT('45'X);/* BLDCPOOL FAILED             */ 02540000
*   DCL                                                            0225 02541000
*     NVTF0UPC BIT(8) CONSTANT('46'X);/* NIP0 PROG CHECK             */ 02542000
*   DCL                                                            0226 02543000
*     NVTF0MFA BIT(8) CONSTANT('47'X);/* MALFUNCTION ALERT           */ 02544000
*   DCL                                                            0227 02545000
*     NVTWCN01 BIT(8) CONSTANT('63'X);/* GETMAIN FAILED              */ 02546000
*   DCL                                                            0228 02547000
*     NVTWCN02 BIT(8) CONSTANT('60'X);/* FINDPAGE FAILURE    @Z40WPXA*/ 02548000
*   DCL                                                            0229 02549000
*     NVTWCN03 BIT(8) CONSTANT('61'X);/* STORE CLOCK ERROR   @Z40WPXA*/ 02550000
*   DCL                                                            0230 02551000
*     NVTWCN05 BIT(8) CONSTANT('4A'X);/* TOD CLOCK ERROR             */ 02552000
*   DCL                                                            0231 02553000
*     NVTWCN06 BIT(8) CONSTANT('63'X);/* GETMAIN FAILED              */ 02554000
*   DCL                                                            0232 02555000
*     NVTWCN07 BIT(8) CONSTANT('5C'X);/* CANT RETRIEVE CATALOG     0232 02556000
*                                      POINTER FROM THE SYS1.NUCLEUS    02557000
*                                      D.S.                          */ 02558000
*   DCL                                                            0233 02559000
*     NVTWCN08 BIT(8) CONSTANT('5D'X);/* CANT READ DSCB FOR MASTER 0233 02560000
*                                      CATALOG                       */ 02561000
*   DCL                                                            0234 02562000
*     NVTWCN09 BIT(8) CONSTANT('5E'X);/* I/O ERROR READING CATALOG 0234 02563000
*                                      SELF-DESCRIB- ING RECORDS.    */ 02564000
*   DCL                                                            0235 02565000
*     NVTWCN10 BIT(8) CONSTANT('5F'X);/* CATALOG DAMAGE              */ 02566000
*   DCL                                                            0236 02567000
*     NVTWCN11 BIT(8) CONSTANT('64'X);/* RTM ENTERED AT NIP          */ 02568000
*   DCL                                                            0237 02569000
*     NVTWCN12 BIT(8) CONSTANT('65'X);/* INVALID SVC ISSUED          */ 02570000
*   DCL                                                            0238 02571000
*     NVTWCN13 BIT(8) CONSTANT('3D'X);/* IEAVCSEG FAILED             */ 02572000
*   DCL                                                            0239 02573000
*     NVTWCN14 BIT(8) CONSTANT('44'X);/* MACHINE CHECK               */ 02574000
*   DCL                                                            0240 02575000
*     NVTWCN15 BIT(8) CONSTANT('5B'X);/* RUNAWAY CPU                 */ 02576000
*   DCL                                                            0241 02577000
*     NVTWCN16 BIT(8) CONSTANT('5A'X);/* IPLED CPU OUT OF          0241 02578000
*                                      SYNCHRONIZATION               */ 02579000
*   DCL                                                            0242 02580000
*     NVTWCN17 BIT(8) CONSTANT('59'X);/* UNDEFINED BLDL RC           */ 02581000
*   DCL                                                            0243 02582000
*     NVTWCN18 BIT(8) CONSTANT('48'X);/* IEAVPCB FAILED              */ 02583000
*   DCL                                                            0244 02584000
*     NVTWCN19 BIT(8) CONSTANT('58'X);/* IEAVSPSA FAILED             */ 02585000
*   DCL                                                            0245 02586000
*     NVTVDASD BIT(8) CONSTANT('2D'X);/* UNCONDITIONAL MOUNT REQUEST    02587000
*                                      FOR VIRTUAL DASD DEVICE     0245 02588000
*                                                            @Y30LPXD*/ 02589000
*   DECLARE                                                        0246 02590000
*     1 NVT BDY(DWORD) BASED(RNVT), /* BEGIN BASED NVT               */ 02591000
*                                                                  0246 02592000
*     /***************************************************************/ 02593000
*     /*                                                             */ 02594000
*     /* NVT DESCRIPTORS FOR NIP LOADING                             */ 02595000
*     /*                                                             */ 02596000
*     /***************************************************************/ 02597000
*                                                                  0246 02598000
*      2 NVTNPSUF(26) CHAR(2),      /* RESERVED                      */ 02599000
*      2 * CHAR(01),                /* RESERVED                      */ 02600000
*      2 NVTNPSFX PTR(8),           /* INDEX TO NPSUF - THIS LOAD    */ 02601000
*      2 NVTNPATR CHAR(1),          /* MOD. ATTRIB. - THIS LOAD      */ 02602000
*       3 NVTNPREN BIT(2),          /* REENTRANT                     */ 02603000
*        4 * BIT(1),                /* RESERVED                      */ 02604000
*        4 NVTNPREU BIT(1),         /* REUSABLE                      */ 02605000
*       3 * BIT(6),                 /* RESERVED                      */ 02606000
*      2 NVTFLLB CHAR(1),           /* LIBRARY STATUS FLAGS          */ 02607000
*       3 NVTFLSLB BIT(1),          /* SVCLIB, LOGREC DEFINED        */ 02608000
*       3 * BIT(7),                 /* RESERVED                      */ 02609000
*                                                                  0246 02610000
*     /***************************************************************/ 02611000
*     /*                                                             */ 02612000
*     /* NVT POINTERS TO NUCLEUS CONTROL BLOCKS                      */ 02613000
*     /*                                                             */ 02614000
*     /***************************************************************/ 02615000
*                                                                  0246 02616000
*      2 NVTMSTCB PTR(31),          /* NIP/MASTER SCHEDULER TCB      */ 02617000
*      2 NVTCMTCB PTR(31),          /* COMM TASK TCB ADDRESS         */ 02618000
*      2 NVTMASCB PTR(31),          /* MASTERS ASCB ADDRESS          */ 02619000
*      2 NVTRSV41 PTR(31),          /* RESERVED              @Z40WPXA*/ 02620000
*      2 NVTRSV42 PTR(31),          /* RESERVED              @Z40WPXA*/ 02621000
*      2 NVTSVCTB PTR(31),          /* ADDRESS OF SVC TABLE          */ 02622000
*      2 NVTVBLDL PTR(31),          /* BLDL TABLE PTR ADDRESS        */ 02623000
*      2 NVTIGCER PTR(31),          /* SVC ERROR ROUTINE ADDR        */ 02624000
*      2 NVTVVMDI PTR(31),          /* LPA HASH VALUE ADDRESS        */ 02625000
*      2 NVTMSLNK PTR(31),          /* LINK PARMLIST ADDRESS         */ 02626000
*      2 NVTDSSNG PTR(31),          /* DSS MASK OUT RTN ADDRESS      */ 02627000
*      2 NVTMFA PTR(31),            /* ADDRESS OF SYSTEM MFA RTN     */ 02628000
*      2 NVTNVRSZ PTR(31),          /* NIP REGION UPPER LIMIT        */ 02629000
*      2 NVTRSV49 PTR(31),          /* RESERVED              @Z40WPXA*/ 02630000
*      2 * PTR(31),                 /* RESERVED                      */ 02631000
*      2 NVTIGXER PTR(31),          /* ESR ERROR ROUTINE     @Y30LPXD*/ 02632000
*      2 NVTLNGFX FIXED(31),        /* RSM LONG FIX AREA SIZE        */ 02633000
*      2 NVTLSQAS PTR(31),          /* END OF MASTERS LSQA           */ 02634000
*      2 NVTSQANO FIXED(15),        /* NO. INITIAL SQA PAGES         */ 02635000
*      2 NVTLSQNO FIXED(15),        /* NO. OF LSQA PAGES TO FIX      */ 02636000
*      2 NVTRGNAV FIXED(15),        /* NO. OF AVAILABLE PAGES        */ 02637000
*      2 NVTNBMIN FIXED(15),        /* MINIMUM NUC. BUF. PAGES       */ 02638000
*      2 NVTRSVMN FIXED(15),        /* MINIMUM RESRVD PAGES          */ 02639000
*      2 NVTNVSQA FIXED(15),        /* NUMBER OF VIRT SEG OF SQA     */ 02640000
*                                                                  0246 02641000
*     /***************************************************************/ 02642000
*     /*                                                             */ 02643000
*     /* NVT SAVE AREAS - NUCLEUS CONTROL BLOCKS                     */ 02644000
*     /*                                                             */ 02645000
*     /***************************************************************/ 02646000
*                                                                  0246 02647000
*      2 NVTABSAV CHAR(8) BDY(WORD),/* SVC TABLE - SVC 13            */ 02648000
*       3 NVTABFST PTR(31),                                        0246 02649000
*       3 NVTABSEC CHAR(4),                                        0246 02650000
*      2 NVTSVC60 CHAR(8),          /* SAVEAREA FOR SVC 60           */ 02651000
*      2 NVTPQSAV FIXED(31),        /* PVT ENTRY - GET SQA PAGE      */ 02652000
*      2 NVTALSQA PTR(31),          /* LOW ADDR OF M.S. LSQA         */ 02653000
*      2 NVTLSPQE PTR(31),          /* ADDR OR SPQE FOR LSQA         */ 02654000
*      2 NVTMFASA PTR(31),          /* SA OF MFA ROUTINE ADDR        */ 02655000
*      2 NVTRTMSA PTR(31),          /* ADDR OF RTM BRANCH ENTRY      */ 02656000
*      2 NVTSTMAP PTR(31),          /* ADDRESS OF STORAGE MAP        */ 02657000
*                                                                  0246 02658000
*     /***************************************************************/ 02659000
*     /*                                                             */ 02660000
*     /* NVT POINTERS TO NUCLEUS ADDITIONS                           */ 02661000
*     /*                                                             */ 02662000
*     /***************************************************************/ 02663000
*                                                                  0246 02664000
*      2 NVTNUCND PTR(31),          /* BUFFER - NEXT AVAIL BYTE      */ 02665000
*      2 NVTNBFND PTR(31),          /* END OF NUC BUFFER ADDR        */ 02666000
*      2 NVTVVPG1 PTR(31),          /* ADDRESS OF 1ST V=V PAGE       */ 02667000
*      2 NVTN0MSG PTR(31),          /* NIP0 MSGS ADDRESS             */ 02668000
*      2 NVTSGPSA PTR(31),          /* PTR TO SYSGENED PSA           */ 02669000
*      2 * FIXED(15),               /* RESERVED                      */ 02670000
*      2 NVTNXSIZ FIXED(15),        /* NIPX RESRVD AREA SIZE         */ 02671000
*      2 NVTNXPTR PTR(31),          /* NIPX NUC. RESRVD AREA PTR     */ 02672000
*                                                                  0246 02673000
*     /***************************************************************/ 02674000
*     /*                                                             */ 02675000
*     /* NVT SYSGEN VARIABLES                                        */ 02676000
*     /*                                                             */ 02677000
*     /***************************************************************/ 02678000
*                                                                  0246 02679000
*      2 NVTTRACE FIXED(15),        /* NO. TRACE TABLE ENTRIES       */ 02680000
*      2 NVTFLSG CHAR(1),           /* RESERVED                      */ 02681000
*                                                                  0246 02682000
*     /***************************************************************/ 02683000
*     /*                                                             */ 02684000
*     /* NVT STATUS FLAGS                                            */ 02685000
*     /*                                                             */ 02686000
*     /***************************************************************/ 02687000
*                                                                  0246 02688000
*      2 NVTFLCN CHAR(1),           /* MESSAGE HANDLING FLAGS        */ 02689000
*       3 NVTFLAC BIT(1),           /* ACTIVE MASTER CONSOLE         */ 02690000
*       3 NVTFLIOC BIT(1),          /* COMPOSITE MASTER              */ 02691000
*       3 NVTMP BIT(1),             /* MP SYSTEM IPLED               */ 02692000
*       3 NVTFLASM BIT(1),          /* NVTNVRSZ VALUE INVALID        */ 02693000
*       3 NVTFLNHC BIT(1),          /* HARDCOPY DISCONTINUED         */ 02694000
*       3 NVTFLNCK BIT(1),          /* TOD CLOCK INOPERATIVE         */ 02695000
*       3 NVTFLRAC BIT(1),          /* WTOR REPLY OUTSTANDING        */ 02696000
*       3 * BIT(1),                 /* RESERVED                      */ 02697000
*      2 * PTR(31),                 /* RESERVED                      */ 02698000
*      2 NVTMCPSW CHAR(8),          /* SAVEAREA FOR M/C NEW PSW      */ 02699000
*                                                                  0246 02700000
*     /***************************************************************/ 02701000
*     /*                                                             */ 02702000
*     /* NVT PSW DESCRIPTORS SYSTEM WAIT STATE PSW                   */ 02703000
*     /*                                                             */ 02704000
*     /***************************************************************/ 02705000
*                                                                  0246 02706000
*      2 NVTWTPSW CHAR(8) BDY(DWORD),                              0246 02707000
*                                                                  0246 02708000
*     /***************************************************************/ 02709000
*     /*                                                             */ 02710000
*     /* SYSTEM WAIT STATE PSW - WORD 1                              */ 02711000
*     /*                                                             */ 02712000
*     /***************************************************************/ 02713000
*                                                                  0246 02714000
*       3 NVTWPSW1 CHAR(4),                                        0246 02715000
*       3 NVTWPSW2 FIXED(31),       /* PORTION NIP UPDATES           */ 02716000
*        4 NVTIDPSW CHAR(2),        /* PSW ID - NIP MODULE NAME      */ 02717000
*/*                                                                  */ 02718000
*/*                     PSW ID CODES & ASSOCIATED NIP MODULE NAMES   */ 02719000
*/*                     ARE REFLECTED BELOW -                        */ 02720000
*/*                            X'07D4' - IEAVNIPM                    */ 02721000
*/*                            X'07E7' - IEAVNIPX                    */ 02722000
*/*                            X'0001' - IEAVNP01                    */ 02723000
*/*                            X'00A2' - IEAVNPA2 (MODULE IEAVNP02)  */ 02724000
*/*                            X'00B2' -IEAVNPB2 (MODULE IEAVNP02)   */ 02725000
*/*                            X'0003' - IEAVNP03                    */ 02726000
*/*                            X'0004' - IEAVNP04                    */ 02727000
*/*                            X'0005' - IEAVNP05                    */ 02728000
*/*                            X'00B5' - IEAVNPB5                    */ 02729000
*/*                            X'0006' - IEAVNP06                    */ 02730000
*/*                            X'00A6' - IEAVNPA6                    */ 02731000
*/*                            X'00B6' - IEAVNPB6                    */ 02732000
*/*                            X'0007' - IEAVNP07                    */ 02733000
*/*                            X'00A8' - IEAVNPA8 (MODULE IEAVNP08)  */ 02734000
*/*                            X'00B8' - IEAVNPB8 (MODULE IEAVNP08)  */ 02735000
*/*                            X'00C8' - IEAVNPC8 (MODULE IEAVNP08)  */ 02736000
*/*                            X'0009' - IEAVNP09                    */ 02737000
*/*                            X'0010' - IEAVNP10                    */ 02738000
*/*                            X'0011' - IEAVNP11                    */ 02739000
*/*                            X'0012' - IEAVNP12                    */ 02740000
*/*                            X'0013' - IEAVNP13                    */ 02741000
*/*                            X'0015' - IEAVNP15                    */ 02742000
*/*                            X'0016' - IEAVNP16                    */ 02743000
*/*                            X'0017' - IEAVNP17                    */ 02744000
*/*                                                                  */ 02745000
*                                                                  0246 02746000
*        4 NVTFLWS1 CHAR(1),        /* SYSTEM WSC - BYTE 1           */ 02747000
*        4 NVTFLWSC CHAR(1),        /* SYSTEM WSC - BYTE 2           */ 02748000
*         5 NVTIX CHAR(1),          /* * ID - END INITIAL NVT        */ 02749000
*                                                                  0246 02750000
*     /***************************************************************/ 02751000
*     /*                                                             */ 02752000
*     /* NVT POINTERS TO IEAVNIPM ROUTINES                           */ 02753000
*     /*                                                             */ 02754000
*     /***************************************************************/ 02755000
*                                                                  0246 02756000
*      2 NVTLOAD PTR(31),           /* LOAD ROUTINE ADDRESS          */ 02757000
*      2 NVTSENSE PTR(31),          /* SENSE ROUTINE ADDRESS         */ 02758000
*      2 NVTSWAIT PTR(31),          /* SYSTEM WAIT ROUTINE ADDR      */ 02759000
*      2 NVTTIME PTR(31),           /* TIME ROUTINE ADDRESS          */ 02760000
*      2 NVTUCBFN PTR(31),          /* UCB FIND ROUTINE ADDR         */ 02761000
*      2 NVTWTO PTR(31),            /* WTO ROUTINE ADDRESS           */ 02762000
*      2 NVTWTOR PTR(31),           /* WTOR ROUTINE ADDRESS          */ 02763000
*      2 NVTWTOR2 PTR(31),          /* WTOR WAIT RTN                 */ 02764000
*      2 NVTOPEN PTR(31),           /* NIPOPEN ROUTINE ADDRESS       */ 02765000
*      2 NVTMOUNT PTR(31),          /* NIPMOUNT ROUTINE ADDRESS      */ 02766000
*      2 NVTPRMPT PTR(31),          /* NIPPRMPT ROUTINE              */ 02767000
*      2 NVTVIRT PTR(31),           /* NIPSWAP TO V=V ROUTINE        */ 02768000
*      2 NVTREAL PTR(31),           /* NIPSWAP TO V=R ROUTINE        */ 02769000
*      2 NVTSCHED PTR(31),          /* NIP SCHEDULE ROUTINE          */ 02770000
*      2 NVTOPIO PTR(31),           /* NIP OPIO ROUTINE ADDRESS      */ 02771000
*      2 NVTNIPM(3) PTR(31),        /* IEAVNIPM BASE REGS            */ 02772000
*      2 NVTNMBLD PTR(31),          /* NIPM BLDL ENTRY               */ 02773000
*      2 *(4) FIXED(31),            /* RESERVED                      */ 02774000
*                                                                  0246 02775000
*     /***************************************************************/ 02776000
*     /*                                                             */ 02777000
*     /* NVT POINTERS TO IEAVNIPM DEFINED CONTROL BLOCKS AND POINTERS*/ 02778000
*     /*                                                             */ 02779000
*     /***************************************************************/ 02780000
*                                                                  0246 02781000
*      2 NVTDCBIC PTR(31),          /* INPUT CONSOLE DCB ADDR        */ 02782000
*      2 NVTDCBOC PTR(31),          /* OUTPUT CONSOLE DCB ADDR       */ 02783000
*      2 NVTDCBSN PTR(31),          /* SYS1.NUCLEUS DCB ADDR         */ 02784000
*                                                                  0246 02785000
*     /***************************************************************/ 02786000
*     /*                                                             */ 02787000
*     /* NVT POINTERS TO SQA BUFFERS/QUEUES                          */ 02788000
*     /*                                                             */ 02789000
*     /***************************************************************/ 02790000
*                                                                  0246 02791000
*      2 NVTMBUF PTR(31),           /* MSG BUFFER - NEXT BYTE        */ 02792000
*      2 NVTMBEND PTR(31),          /* END OF NIP MSG BUFFER         */ 02793000
*      2 NVTSPE(2) PTR(31),         /* NIPSPE QUEUE ORIGIN           */ 02794000
*                                                                  0246 02795000
*     /***************************************************************/ 02796000
*     /*                                                             */ 02797000
*     /* NVT SAVE AREAS USED BY IEAVNIPM ROUTINES                    */ 02798000
*     /*                                                             */ 02799000
*     /***************************************************************/ 02800000
*                                                                  0246 02801000
*      2 NVTTOD FIXED(31),          /* TOD CLOCK - HI 32 BITS        */ 02802000
*      2 NVTCPUAD CHAR(2),          /* ADDRESS OF CPU WITH CLOCK     */ 02803000
*      2 * CHAR(2),                 /* RESERVED                      */ 02804000
*      2 NVTABCD1 FIXED(15),        /* LEVEL 1 ABEND CODE            */ 02805000
*      2 NVTABWS1 CHAR(1),          /* NIPABEND ENTRY WS CODE        */ 02806000
*      2 * CHAR(1),                 /* RESERVED                      */ 02807000
*                                                                  0246 02808000
*     /***************************************************************/ 02809000
*     /*                                                             */ 02810000
*     /* NVT SAVE AREAS USED BY IEAVNPXX ROUTINES                    */ 02811000
*     /*                                                             */ 02812000
*     /***************************************************************/ 02813000
*                                                                  0246 02814000
*      2 NVTRSV43 PTR(31),          /* RESERVED              @Z40WPXA*/ 02815000
*      2 NVTPAREA PTR(31),          /* 1ST PARM AREA POINTER         */ 02816000
*      2 NVTPTAB PTR(31),           /* ORIGIN OF PARM TABLE          */ 02817000
*      2 NVTQSBUF PTR(31),          /* QUICK START BUFFER ADDR       */ 02818000
*      2 NVTRSV44 FIXED(15),        /* RESERVED              @Z40WPXA*/ 02819000
*      2 NVTSPUCB FIXED(16),        /* SYS1.PARMLIB UCB ADDR @Z30AAXC*/ 02820000
*      2 NVTVVTCB PTR(31),          /* NIP V=V TCB ADDRESS           */ 02821000
*      2 NVTVRTCB PTR(31),          /* NIP V=R TCB ADDRESS           */ 02822000
*      2 *(2) FIXED(31),            /* RESERVED FIELDS               */ 02823000
*      2 NVTVRBLD PTR(31),          /* LPA BLDL ENTRY ADDR (V=R)     */ 02824000
*      2 NVTBLDL PTR(31),           /* BLDL TABLE BUILD AREA @       */ 02825000
*      2 NVTCSLIB PTR(31),          /* SYS1.LPALIB DCB ADDRESS       */ 02826000
*      2 NVTCSLNM PTR(31),          /* CURRENT LPA NAME ADDR         */ 02827000
*      2 NVTCSIOB PTR(31),          /* ADDR OF IOB FOR FAILING     0246 02828000
*                                      COLDSTART I/O REQUESTS        */ 02829000
*      2 NVTCSLPG PTR(31),          /* LAST ASSIGNED ADDRESS IN    0246 02830000
*                                      COLDSTART LPA                 */ 02831000
*      2 NVTLPACT CHAR(1),          /* COUNT OF LPA ROUTINES ADDED BY   02832000
*                                      IEAVNIPM                      */ 02833000
*      2 * CHAR(3),                 /* RESERVED                      */ 02834000
*      2 NVTXCTL CHAR(8) BDY(WORD), /* SAVE XCTL ADDRESS             */ 02835000
*       3 NVTXFST PTR(31),                                         0246 02836000
*       3 NVTXSEC CHAR(4),                                         0246 02837000
*      2 NVTLOCAT CHAR(8) BDY(WORD),/* SAVE LOCATE SVCENT            */ 02838000
*       3 NVTLFST PTR(31),          /* POINTER TO SVC ROUTINE        */ 02839000
*       3 NVTLSEC CHAR(4),          /* FLAGS AND ATTRIBUTES          */ 02840000
*                                                                  0246 02841000
*     /***************************************************************/ 02842000
*     /*                                                             */ 02843000
*     /* SAVE AREA FOR V=V TCB JPQ FIELD                             */ 02844000
*     /*                                                             */ 02845000
*     /***************************************************************/ 02846000
*                                                                  0246 02847000
*      2 NVTVJPQ PTR(31),                                          0246 02848000
*                                                                  0246 02849000
*     /***************************************************************/ 02850000
*     /*                                                             */ 02851000
*     /* SAVE AREA FOR V=V TCB LLE FIELD                             */ 02852000
*     /*                                                             */ 02853000
*     /***************************************************************/ 02854000
*                                                                  0246 02855000
*      2 NVTVLLE PTR(31),                                          0246 02856000
*                                                                  0246 02857000
*     /***************************************************************/ 02858000
*     /*                                                             */ 02859000
*     /* SAVE AREA FOR V=V TCB PQE FIELD                             */ 02860000
*     /*                                                             */ 02861000
*     /***************************************************************/ 02862000
*                                                                  0246 02863000
*      2 NVTVPQE PTR(31),                                          0246 02864000
*                                                                  0246 02865000
*     /***************************************************************/ 02866000
*     /*                                                             */ 02867000
*     /* SAVE AREA FOR V=V TCB MSS FIELD                             */ 02868000
*     /*                                                             */ 02869000
*     /***************************************************************/ 02870000
*                                                                  0246 02871000
*      2 NVTVMSS PTR(31),                                          0246 02872000
*                                                                  0246 02873000
*     /***************************************************************/ 02874000
*     /*                                                             */ 02875000
*     /* SAVE AREA FOR V=R TCB JPQ FIELD                             */ 02876000
*     /*                                                             */ 02877000
*     /***************************************************************/ 02878000
*                                                                  0246 02879000
*      2 NVTRJPQ PTR(31),                                          0246 02880000
*                                                                  0246 02881000
*     /***************************************************************/ 02882000
*     /*                                                             */ 02883000
*     /* SAVE AREA FOR V=R TCB LLE FIELD                             */ 02884000
*     /*                                                             */ 02885000
*     /***************************************************************/ 02886000
*                                                                  0246 02887000
*      2 NVTRLLE PTR(31),                                          0246 02888000
*                                                                  0246 02889000
*     /***************************************************************/ 02890000
*     /*                                                             */ 02891000
*     /* SAVE AREA FOR V=R TCB PQE FIELD                             */ 02892000
*     /*                                                             */ 02893000
*     /***************************************************************/ 02894000
*                                                                  0246 02895000
*      2 NVTRPQE PTR(31),                                          0246 02896000
*                                                                  0246 02897000
*     /***************************************************************/ 02898000
*     /*                                                             */ 02899000
*     /* SAVE AREA FOR V=R TCB MSS FIELD                             */ 02900000
*     /*                                                             */ 02901000
*     /***************************************************************/ 02902000
*                                                                  0246 02903000
*      2 NVTRMSS PTR(31),                                          0246 02904000
*                                                                  0246 02905000
*     /***************************************************************/ 02906000
*     /*                                                             */ 02907000
*     /* HIGH VIRTUAL ADDRESS OF PLPA                                */ 02908000
*     /*                                                             */ 02909000
*     /***************************************************************/ 02910000
*                                                                  0246 02911000
*      2 NVTLPAND PTR(31),                                         0246 02912000
*      2 NVTRSV4A PTR(31),          /* RESERVED              @Z40WPXA*/ 02913000
*                                                                  0246 02914000
*     /***************************************************************/ 02915000
*     /*                                                             */ 02916000
*     /* CURRENT LOW VIRTUAL ADDRESS OF COMMON AREA                  */ 02917000
*     /*                                                             */ 02918000
*     /***************************************************************/ 02919000
*                                                                  0246 02920000
*      2 NVTLVIRT PTR(31),                                         0246 02921000
*                                                                  0246 02922000
*     /***************************************************************/ 02923000
*     /*                                                             */ 02924000
*     /* START OF V=R REGION                                         */ 02925000
*     /*                                                             */ 02926000
*     /***************************************************************/ 02927000
*                                                                  0246 02928000
*      2 NVTVRREG PTR(31),                                         0246 02929000
*                                                                  0246 02930000
*     /***************************************************************/ 02931000
*     /*                                                             */ 02932000
*     /* LENGTH OF V=R AREA AVAILABLE IN PAGES                       */ 02933000
*     /*                                                             */ 02934000
*     /***************************************************************/ 02935000
*                                                                  0246 02936000
*      2 NVTVRLNG FIXED(31),                                       0246 02937000
*      2 NVTRSV45 CHAR(8),          /* RESERVED              @Z40WPXA*/ 02938000
*                                                                  0246 02939000
*     /***************************************************************/ 02940000
*     /*                                                             */ 02941000
*     /* SAVEAREA FOR FINAL VERSION OF ASVT                          */ 02942000
*     /*                                                             */ 02943000
*     /***************************************************************/ 02944000
*                                                                  0246 02945000
*      2 NVTFASVT PTR(31),                                         0246 02946000
*                                                                  0246 02947000
*     /***************************************************************/ 02948000
*     /*                                                             */ 02949000
*     /* SAVE AREA FOR CVTREAL VALUE CALCULATED                      */ 02950000
*     /*                                                             */ 02951000
*     /***************************************************************/ 02952000
*                                                                  0246 02953000
*      2 NVTREALR PTR(31),                                         0246 02954000
*      2 * PTR(31),                 /* RESERVED                      */ 02955000
*      2 NVTRSV46 PTR(31),          /* RESERVED              @Z40WPXA*/ 02956000
*      2 NVTRSV47 PTR(31),          /* RESERVED              @Z40WPXA*/ 02957000
*      2 NVTRSV48 PTR(31),          /* RESERVED              @Z40WPXA*/ 02958000
*                                                                  0246 02959000
*     /***************************************************************/ 02960000
*     /*                                                             */ 02961000
*     /* SYSTEM PARAMETER OPTIONS                                    */ 02962000
*     /*                                                             */ 02963000
*     /***************************************************************/ 02964000
*                                                                  0246 02965000
*      2 NVTFLPO CHAR(1),           /* PARAMETER OPTION FLAGS        */ 02966000
*       3 NVTFLLST BIT(1),          /* - DISPLAY PARMLIB LISTS       */ 02967000
*       3 NVTSYSP BIT(1),           /* NIP03 IN PROMPT MODE          */ 02968000
*       3 * BIT(2),                 /* - RESERVED                    */ 02969000
*       3 NVTFLQS BIT(1),           /* - LPA IS QUICK-STARTABLE      */ 02970000
*       3 NVTFLWS BIT(1),           /* WARM START VAM DATA SETS      */ 02971000
*       3 * BIT(2),                 /* - RESERVED                    */ 02972000
*      2 * CHAR(3),                 /* RESERVED                      */ 02973000
*      2 NVTRCODE PTR(31),                                         0246 02974000
*      2 NVTRLOCK PTR(31),                                         0246 02975000
*      2 NVTRMSG PTR(31),                                          0246 02976000
*                                                                  0246 02977000
*     /***************************************************************/ 02978000
*     /*                                                             */ 02979000
*     /* LOW VIRTUAL ADDRESS OF PLPA                         @Z40WPXA*/ 02980000
*     /*                                                             */ 02981000
*     /***************************************************************/ 02982000
*                                                                  0246 02983000
*      2 NVTLPALO PTR(31),          /*                       @Z40WPXA*/ 02984000
*                                                                  0246 02985000
*     /***************************************************************/ 02986000
*     /*                                                             */ 02987000
*     /* LPA HASH VALUE                                      @Z40WPXA*/ 02988000
*     /*                                                             */ 02989000
*     /***************************************************************/ 02990000
*                                                                  0246 02991000
*      2 NVTLPAHA FIXED(31);        /*                       @Z40WPXA*/ 02992000
*   GENERATE REFS(NVTLOAD,NVTSENSE,NVTSWAIT,NVTTIME,NVTUCBFN,NVTWTO,    02993000
*       NVTWTOR,NVTWTOR2,NVTOPEN,NVTMOUNT,NVTVIRT,NVTREAL,NVTSCHED,     02994000
*       NVTOPIO);                                                  0247 02995000
*                                                                       02996000
** REFS ARE GENERATED FOR NVT FIELDS THAT CONTAIN ADDRESSES OF          02997000
** NIP SERVICE ROUTINES, SO IEAPMNIP MACRO CALLS TO THESE ROUTINES      02998000
** WILL ASSEMBLE PROPERLY.                                              02999000
*                                                                  0248 03000000
*/********************************************************************/ 03001000
*/*                                                                  */ 03002000
*/*         INCLUDE COMMUNICATIONS VECTOR TABLE DSECT                */ 03003000
*/*                                                                  */ 03004000
*/********************************************************************/ 03005000
*/*         %INCLUDE SYSLIB(CVT)                                     */ 03006000
*/*                                                                  */ 03007000
*/*      COMMUNICATION VECTOR TABLE                                  */ 03008000
*/*                                                                  */ 03009000
*/*      OS/VS2 RELEASE 4, 03/26/76, LEVEL=17                        */ 03010000
*/*                                                                  */ 03011000
*/*  METHOD OF ACCESS                                                */ 03012000
*/*      PL/S - DCL CVTPTR PTR                                       */ 03013000
*/*      BAL  - DSECT=YES SHOULD BE SPECIFIED ON MACRO CALL EXCEPT   */ 03014000
*/*             WHEN CALLED DURING SYSGEN TO CREATE CSECT.  CVT FOR  */ 03015000
*/*             OS/VS2 IS MAPPED UNLESS SYS=AOS1 IS SPECIFIED.  THE  */ 03016000
*/*             PREFIX IS NOT MAPPED UNLESS PREFIX=YES IS SPECIFIED. */ 03017000
*/*             A USING ON CVTMAP OR DSECT NAME WILL ESTABLISH       */ 03018000
*/*             ADDRESSABILITY FOR ALL SYMBOLS EXCEPT IN THE 2       */ 03019000
*/*             EXTENSIONS.  TO ESTABLISH ADDRESSABILITY FOR THE     */ 03020000
*/*             OS - OS/VS COMMON EXTENSION, YOU SHOULD CODE         */ 03021000
*/*                                                                  */ 03022000
*/*             L     REG,CVTEXT1                                    */ 03023000
*/*             USING CVTXTNT1,REG                                   */ 03024000
*/*                                                                  */ 03025000
*/*             TO ESTABLISH ADDRESSABILITY FOR THE OS/VS1 - OS/VS2  */ 03026000
*/*             COMMON EXTENSION, YOU SHOULD CODE                    */ 03027000
*/*                                                                  */ 03028000
*/*             L     REG,CVTEXT2                                    */ 03029000
*/*             USING CVTXTNT2,REG                                   */ 03030000
*/*                                                                  */ 03031000
*/*             WHERE REG IN EITHER CASE IS ANY REGISTER OTHER       */ 03032000
*/*             THAN ZERO.                                           */ 03033000
*/*                                                                  */ 03034000
*/*             WHEN LISTING IS SUPPRESSED, YOU CAN DETERMINE WHICH  */ 03035000
*/*             DSECT A SYMBOL IS IN BY USING THE STATEMENT NUMBER   */ 03036000
*/*             IN THE DEFN COLUMN IN THE CROSS REFERENCE LISTING.   */ 03037000
*/*             FOR EXAMPLE, ANY SYMBOL DEFINED BETWEEN THE          */ 03038000
*/*             STATEMENT NUMBERS FOR CVTXTNT1 AND CVTXTNT2 IS IN    */ 03039000
*/*             THE OS - OS/VS COMMON EXTENSION.                     */ 03040000
*/*                                                                  */ 03041000
*/*  F.E.'S                                                          */ 03042000
*/*      MICROFICHE LISTING - CVT                                    */ 03043000
*/*                                                                  */ 03044000
*/*  DEVELOPERS                                                      */ 03045000
*/*      BAL LISTING  - SPECIFY LIST=YES ON MACRO CALL               */ 03046000
*/*      PL/S LISTING - SPECIFY %IHALIST='YES' BEFORE INCLUDE        */ 03047000
*/*                                                                  */ 03048000
*/*      FOR INTEGRATION, A LISTING MUST NOT BE REQUESTED UNLESS     */ 03049000
*/*      YOUR MODULE CREATES THE CSECT.                              */ 03050000
*                                                                  0248 03051000
*                                                                  0248 03052000
*/*                    CVT PROPER                                    */ 03053000
*                                                                  0248 03054000
*   DECLARE                                                        0248 03055000
*     1 CVTMAP BASED(CVTPTR) BDY(WORD),                            0248 03056000
*      2 CVT CHAR(0) BDY(WORD),     /* BEGINNING OF CVT MDC150       */ 03057000
*      2 CVTTCBP PTR(31),           /* ADDRESS OF A DOUBLE WORD, THE    03058000
*                                      FIRST CONTAINING THE NEXT-TO-    03059000
*                                      BE-DISPATCHED TCB ADDRESS. THE   03060000
*                                      SECOND CONTAINING THE LAST  0248 03061000
*                                      (CURRENT) TCB ADDRESS. BOTH 0248 03062000
*                                      WORDS ARE IDENTICAL UNLESS THE   03063000
*                                      TASK GOES INTO A WAIT STATE.     03064000
*                                      WHEN IN A WAIT STATE, THE   0248 03065000
*                                      FIRST WORD IS SET TO ZERO   0248 03066000
*                                      UNTIL THE WAITING IS OVER AND    03067000
*                                      THEN BOTH WORDS ARE ONCE AGAIN   03068000
*                                      IDENTICAL. (OS/VS1) ADDRESS OF   03069000
*                                      4-WORD LIST OF ADDRESSES - THE   03070000
*                                      NEXT TCB, THE CURRENT TCB, THE   03071000
*                                      NEXT ASCB AND THE CURRENT   0248 03072000
*                                      ASCB, IN THAT ORDER (OS/VS2)     03073000
*                                      MDC026                        */ 03074000
*      2 CVT0EF00 PTR(31),          /* ADDRESS OF ROUTINE TO SCHEDULE   03075000
*                                      ASYNCHRONOUS EXITS            */ 03076000
*      2 CVTLINK PTR(31),           /* ADDRESS OF DCB FOR          0248 03077000
*                                      SYS1.LINKLIB DATA SET         */ 03078000
*      2 CVTJOB PTR(31),            /* ADDRESS OF QUEUE MANAGER    0248 03079000
*                                      RESIDENT DATA AREA (QMRES)  0248 03080000
*                                      (OS/VS1) (MDC083)       XM4042*/ 03081000
*      2 CVTBUF PTR(31),            /* ADDRESS OF THE BUFFER OF THE     03082000
*                                      RESIDENT CONSOLE INTERRUPT  0248 03083000
*                                      ROUTINE                       */ 03084000
*      2 CVTXAPG PTR(31),           /* ADDRESS OF I/O SUPERVISOR   0248 03085000
*                                      APPENDAGE VECTOR TABLE        */ 03086000
*      2 CVT0VL00 PTR(31),          /* ADDRESS OF ENTRY POINT OF THE    03087000
*                                      TASK SUPERVISOR'S ADDRESS   0248 03088000
*                                      VALIDITY CHECKING ROUTINE     */ 03089000
*      2 CVTPCNVT PTR(31),          /* ADDRESS OF ENTRY POINT OF THE    03090000
*                                      ROUTINE WHICH CONVERTS A    0248 03091000
*                                      RELATIVE TRACK ADDRESS (TTR)     03092000
*                                      TO AN ABSOLUTE TRACK ADDRESS     03093000
*                                      (MBBCCHHR)                    */ 03094000
*      2 CVTPRLTV PTR(31),          /* ADDRESS OF ENTRY POINT OF THE    03095000
*                                      ROUTINE WHICH CONVERTS AN   0248 03096000
*                                      ABSOLUTE TRACK ADDRESS      0248 03097000
*                                      (MBBCCHHR) TO A RELATIVE TRACK   03098000
*                                      ADDRESS (TTR)                 */ 03099000
*      2 CVTILK1 PTR(31),           /* ADDRESS OF THE CHANNEL AND  0248 03100000
*                                      CONTROL UNIT PORTION OF THE 0248 03101000
*                                      UCB LOOKUP TABLE              */ 03102000
*      2 CVTILK2 PTR(31),           /* ADDRESS OF THE UCB HALFWORD 0248 03103000
*                                      ADDRESS LIST PORTION OF THE 0248 03104000
*                                      UCB LOOKUP TABLE              */ 03105000
*      2 CVTXTLER PTR(31),          /* ADDRESS OF ERROR RECOVERY   0248 03106000
*                                      PROCEDURE (ERP) LOADER      0248 03107000
*                                      (IECVERPL) ENTRY POINT      0248 03108000
*                                      IECXTLER (MDC349)     @Z40AQ9A*/ 03109000
*      2 CVTSYSAD PTR(31),          /* ADDRESS OF THE SYSTEM       0248 03110000
*                                      RESIDENCE VOLUME ENTRY IN THE    03111000
*                                      UCB LOOKUP TABLE              */ 03112000
*      2 CVTBTERM PTR(31),          /* ADDRESS OF ENTRY POINT OF THE    03113000
*                                      ABTERM ROUTINE                */ 03114000
*      2 CVTDATE CHAR(4) BDY(WORD), /* CURRENT DATE IN PACKED DECIMAL*/ 03115000
*      2 CVTMSLT PTR(31),           /* ADDRESS OF THE MASTER COMMON     03116000
*                                      AREA IN MASTER SCHEDULER    0248 03117000
*                                      RESIDENT DATA AREA. NOTE - USE   03118000
*                                      CVTMSER INSTEAD TO ADDRESS  0248 03119000
*                                      MASTER SCHEDULER RESIDENT DATA   03120000
*                                      AREA.                         */ 03121000
*      2 CVTZDTAB PTR(31),          /* ADDRESS OF I/O DEVICE       0248 03122000
*                                      CHARACTERISTIC TABLE          */ 03123000
*      2 CVTXITP PTR(31),           /* ADDRESS OF ERROR INTERPRETER     03124000
*                                      ROUTINE                       */ 03125000
*      2 CVTDAR PTR(31),            /* SAME AS CVTDARA BELOW (OS/VS1)   03126000
*                                      MDC029                        */ 03127000
*       3 CVTFLGS1 BIT(8),          /* FLAG BYTE (OS/VS1) MDC030     */ 03128000
*        4 CVTDMPLK BIT(1),         /* SVC DUMP IS IN PROGRESS     0248 03129000
*                                      (OS/VS1) MDC030               */ 03130000
*        4 CVTRSV01 BIT(1),         /* RESERVED                      */ 03131000
*        4 CVTRSV02 BIT(1),         /* RESERVED                      */ 03132000
*        4 CVTRSV03 BIT(1),         /* RESERVED                      */ 03133000
*        4 CVTRSV04 BIT(1),         /* RESERVED                      */ 03134000
*        4 CVTRSV05 BIT(1),         /* RESERVED                      */ 03135000
*        4 CVTRSV06 BIT(1),         /* RESERVED                      */ 03136000
*        4 CVTRSV07 BIT(1),         /* RESERVED                      */ 03137000
*       3 CVTDARA PTR(24),          /* ADDRESS OF THE SYS1.DUMP I/O     03138000
*                                      CONTROL BLOCKS NEEDED BY    0248 03139000
*                                      ABEND'S DAMAGE ASSESSMENT   0248 03140000
*                                      ROUTINE (DAR) (OS/VS1) MDC029 */ 03141000
*      2 CVT0FN00 PTR(31),          /* ADDRESS OF ENTRY POINT OF THE    03142000
*                                      FINCH ROUTINE (OS/VS1)        */ 03143000
*      2 CVTEXIT CHAR(2) BDY(WORD), /* AN SVC 3 INSTRUCTION. EXIT TO    03144000
*                                      DISPATCHER.                   */ 03145000
*      2 CVTBRET CHAR(2) BDY(WORD,3),/* A BCR 15,14 INSTRUCTION.   0248 03146000
*                                      RETURN TO CALLER (USED BY DATA   03147000
*                                      MANAGEMENT ROUTINES)          */ 03148000
*      2 CVTSVDCB PTR(31),          /* ADDRESS OF THE DCB FOR THE  0248 03149000
*                                      SYS1.SVCLIB DATA SET          */ 03150000
*      2 CVTTPC PTR(31),            /* ADDRESS OF THE TIMER        0248 03151000
*                                      SUPERVISOR WORK AREA          */ 03152000
*      2 CVTPBLDL PTR(31),          /* ADDRESS OF BRANCH AND LINK  0248 03153000
*                                      (BALR) ENTRY POINT OF THE BLDL   03154000
*                                      ROUTINE (OS/VS1) MDC103       */ 03155000
*      2 CVTSJQ PTR(31),            /* ADDRESS OF THE SELECTED JOB 0248 03156000
*                                      QUEUE (OS/VS1)                */ 03157000
*      2 CVTCUCB PTR(31),           /* ADDRESS OF THE TABLE THAT   0248 03158000
*                                      CONTAINS THE CURRENT CONSOLE     03159000
*                                      UCB ADDRESSES                 */ 03160000
*      2 CVTQTE00 PTR(31),          /* ADDRESS OF THE TIMER ENQUEUE     03161000
*                                      ROUTINE FOR INTERVAL TIMER    */ 03162000
*      2 CVTQTD00 PTR(31),          /* ADDRESS OF THE TIMER DEQUEUE     03163000
*                                      ROUTINE FOR INTERVAL TIMER    */ 03164000
*      2 CVTSTB PTR(31),            /* ADDRESS OF THE I/O DEVICE   0248 03165000
*                                      STATISTICS TABLE              */ 03166000
*      2 CVTDCB CHAR(1) BDY(WORD),  /* OPERATING SYSTEM CONFIGURATION*/ 03167000
*        4 CVTRSV08 BIT(1),         /* RESERVED                      */ 03168000
*        4 CVT1SSS BIT(1),          /* PCP                           */ 03169000
*        4 CVT2SPS BIT(1),          /* MFT, OS/VS1                   */ 03170000
*        4 CVT4MS1 BIT(1),          /* MVT, OS/VS2                   */ 03171000
*        4 CVTRSV09 BIT(1),         /* RESERVED                      */ 03172000
*        4 CVT4MPS BIT(1),          /* MODEL 65 MULTIPROCESSING      */ 03173000
*        4 CVT6DAT BIT(1),          /* DYNAMIC ADDRESS TRANSLATION BY   03174000
*                                      CPU (OS/VS1, OS/VS2)          */ 03175000
*        4 CVTMVS2 BIT(1),          /* MULTIPLE MEMORY OPTION OF   0248 03176000
*                                      OS/VS2 IS PRESENT MDC131      */ 03177000
*      2 CVTDCBA PTR(24),           /* ADDRESS OF THE DCB FOR THE  0248 03178000
*                                      SYS1.LOGREC (OUTBOARD       0248 03179000
*                                      RECORDER) DATA SET FOR SYSTEM    03180000
*                                      ENVIRONMENT RECORDING (SER)   */ 03181000
*      2 CVTIOQET PTR(31),          /* ADDRESS OF IOS REQUEST ELEMENT   03182000
*                                      TABLE (OS/VS1) MDC020         */ 03183000
*      2 CVTIXAVL PTR(31),          /* ADDRESS OF THE I/O          0248 03184000
*                                      SUPERVISOR'S FREELIST POINTER    03185000
*                                      WHICH CONTAINS THE ADDRESS OF    03186000
*                                      THE NEXT REQUEST ELEMENT    0248 03187000
*                                      (OS/VS1) ADDRESS OF THE I/O 0248 03188000
*                                      SUPERVISOR'S COMMUNICATION  0248 03189000
*                                      AREA (IOCOM) (OS/VS2)         */ 03190000
*      2 CVTNUCB PTR(31),           /* LOWEST ADDRESS NOT IN THE   0248 03191000
*                                      NUCLEUS (ON PAGE BOUNDARY FOR    03192000
*                                      OS/VS1) (ON SEGMENT BOUNDARY     03193000
*                                      FOR OS/VS2) (MDC318)  @Z30AQ9A*/ 03194000
*      2 CVTFBOSV PTR(31),          /* ADDRESS OF PROGRAM FETCH    0248 03195000
*                                      ROUTINE                       */ 03196000
*      2 CVT0DS PTR(31),            /* ADDRESS OF ENTRY POINT OF THE    03197000
*                                      DISPATCHER                    */ 03198000
*      2 CVTILCH PTR(31),           /* ADDRESS OF THE LOGICAL CHANNEL   03199000
*                                      WORD TABLE                    */ 03200000
*      2 CVTIERLC PTR(31),          /* ADDRESS OF THE ASYNCHRONOUS 0248 03201000
*                                      EXIT QUEUE (OS/VS1) (MDC218)     03202000
*                                                              YM4043*/ 03203000
*       3 CVTRV516 PTR(31),         /* ** CVTIERLC FIELD UNUSED IN 0248 03204000
*                                      MVS ** (MDC218)         YM4043*/ 03205000
*      2 CVTMSER PTR(31),           /* ADDRESS OF DATA AREA OF MASTER   03206000
*                                      SCHEDULER RESIDENT DATA AREA  */ 03207000
*      2 CVT0PT01 PTR(31),          /* ADDRESS OF BRANCH ENTRY POINT    03208000
*                                      OF POST ROUTINE               */ 03209000
*      2 CVTRSV11 PTR(31),          /* ** CVTTRMTB FIELD UNUSED IN 0248 03210000
*                                      OS/VS **                      */ 03211000
*      2 CVTHEAD PTR(31),           /* ADDRESS OF THE HIGHEST      0248 03212000
*                                      PRIORITY TCB IN THE READY   0248 03213000
*                                      QUEUE (OS/VS1) MDC025         */ 03214000
*      2 CVTMZ00 PTR(31),           /* HIGHEST ADDRESS IN VIRTUAL  0248 03215000
*                                      STORAGE FOR THE MACHINE       */ 03216000
*      2 CVT1EF00 PTR(31),          /* ADDRESS OF ROUTINE WHICH    0248 03217000
*                                      CREATES IRB'S FOR EXITS       */ 03218000
*      2 CVTQOCR PTR(31),           /* GRAPHICS INTERFACE TASK (GFX)    03219000
*                                      FIELD. ADDRESS OF SEVENTH WORD   03220000
*                                      OF GFX PARAMETER LIST, IF GFX    03221000
*                                      IS ACTIVE. ZERO IF GFX IS NOT    03222000
*                                      ACTIVE.                       */ 03223000
*      2 CVTQMWR PTR(31),           /* ADDRESS OF QUEUE MANAGER'S  0248 03224000
*                                      SYSTEM OUTPUT COMMUNICATIONS-    03225000
*                                      DATA-AREA (CDA), WHICH IS   0248 03226000
*                                      STORED ON AN EXTERNAL DEVICE  */ 03227000
*      2 CVTSNCTR FIXED(15),        /* SERIAL NUMBER COUNTER FOR   0248 03228000
*                                      ASSIGNING SERIAL NUMBERS TO 0248 03229000
*                                      NON-SPECIFIC, UNLABELED     0248 03230000
*                                      MAGNETIC TAPE VOLUMES         */ 03231000
*      2 CVTOPTA CHAR(1),           /* OPTION INDICATORS             */ 03232000
*       3 CVTCCH BIT(1),            /* CHANNEL CHECK HANDLER (CCH) 0248 03233000
*                                      OPTION PRESENT - RECOVERY   0248 03234000
*                                      MANAGEMENT SUPPORT (RMS)    0248 03235000
*                                                              XM4686*/ 03236000
*       3 CVTAPR BIT(1),            /* ALTERNATE PATH RETRY (APR)  0248 03237000
*                                      OPTION PRESENT - RECOVERY   0248 03238000
*                                      MANAGEMENT SUPPORT (RMS)      */ 03239000
*       3 CVTDDR BIT(1),            /* DYNAMIC DEVICE RECONFIGURATION   03240000
*                                      (DDR) OPTION PRESENT -      0248 03241000
*                                      RECOVERY MANAGEMENT SUPPORT 0248 03242000
*                                      (RMS) (OS/VS1) DDR          0248 03243000
*                                      SYSTEM-INITIATED SWAP ACTIVE     03244000
*                                      (OS/VS2) MDC126               */ 03245000
*       3 CVTNIP BIT(1),            /* NIP IS EXECUTING              */ 03246000
*       3 CVTRSV12 BIT(1),          /* RESERVED                      */ 03247000
*       3 CVTRSV13 BIT(1),          /* RESERVED                      */ 03248000
*       3 CVTASCII BIT(1),          /* ASCII TAPE PROCESSING IS    0248 03249000
*                                      GENERATED IN THIS SYSTEM      */ 03250000
*       3 CVTXPFP BIT(1),           /* CPU HAS EXTENDED PRECISION  0248 03251000
*                                      FLOATING POINT FEATURE        */ 03252000
*      2 CVTOPTB CHAR(1),           /* MISCELLANEOUS FLAGS           */ 03253000
*       3 CVTPROT BIT(1),           /* CPU HAS STORE PROTECTION    0248 03254000
*                                      FEATURE (OS/VS1)              */ 03255000
*       3 CVTCTIMS BIT(1),          /* IF ON, HARDWARE HAS THE CLOCK    03256000
*                                      COMPARATOR AND CPU TIMER    0248 03257000
*                                      FEATURE INSTALLED, AND OS/VS1    03258000
*                                      SYSGEN HAS SPECIFIED THIS   0248 03259000
*                                      FEATURE (OS/VS1) MDC127       */ 03260000
*       3 CVTTOD BIT(1),            /* CPU HAS TIME-OF-DAY CLOCK   0248 03261000
*                                      FEATURE                       */ 03262000
*       3 CVTNLOG BIT(1),           /* SYS1.LOGREC IS UNAVAILABLE FOR   03263000
*                                      ERROR RECORDING. ALWAYS SET TO   03264000
*                                      ZERO FOR OS/VS1 ICB382        */ 03265000
*       3 CVTAPTHR BIT(1),          /* NIP SETS THIS BIT TO 1 WHEN 0248 03266000
*                                      DEVICE TESTING IS COMPLETE. IF   03267000
*                                      1, I/O SUPERVISOR USES AN   0248 03268000
*                                      ALTERNATE PATH TO A DEVICE  0248 03269000
*                                      WHEN A CONDITION CODE OF 3  0248 03270000
*                                      EXISTS. THIS BIT IS RESET BY     03271000
*                                      NIP TO 0 AFTER THE LINK PACK     03272000
*                                      AREA IS INITIALIZED.    YM2670*/ 03273000
*       3 CVTFP BIT(1),             /* CPU HAS FETCH PROTECTION    0248 03274000
*                                      FEATURE (OS/VS1) ICB427       */ 03275000
*       3 CVTRSV16 BIT(1),          /* RESERVED                      */ 03276000
*       3 CVTRSV17 BIT(1),          /* RESERVED                      */ 03277000
*      2 CVTQCDSR PTR(31),          /* CDE SEARCH ROUTINE ADDRESS  0248 03278000
*                                      (OS/VS2) ADDRESS OF THE     0248 03279000
*                                      ROUTINE THAT SEARCHES THE   0248 03280000
*                                      REENTERABLE LOAD MODULE QUEUE    03281000
*                                      (OS/VS1)                      */ 03282000
*      2 CVTQLPAQ PTR(31),          /* ADDRESS OF POINTER TO MOST  0248 03283000
*                                      RECENT ENTRY ON LINK PACK AREA   03284000
*                                      CDE QUEUE (OS/VS2) ADDRESS OF    03285000
*                                      THE REENTERABLE LOAD MODULE 0248 03286000
*                                      QUEUE (OS/VS1)                */ 03287000
*      2 CVTRSV18 PTR(31),          /* ** CVTMPCVT FIELD UNUSED IN 0248 03288000
*                                      OS/VS **                      */ 03289000
*      2 CVTSMCA PTR(31),           /* ADDRESS OF THE SYSTEM       0248 03290000
*                                      MANAGEMENT CONTROL AREA (SMCA)   03291000
*                                      IF THE SYSTEM MANAGEMENT    0248 03292000
*                                      FACILITIES (SMF) OPTION IS  0248 03293000
*                                      PRESENT IN THE SYSTEM.      0248 03294000
*                                      OTHERWISE, ZERO.              */ 03295000
*      2 CVTABEND PTR(31),          /* ADDRESS OF SECONDARY CVT FOR     03296000
*                                      ABEND IN EOT (OS/VS2) USED BY    03297000
*                                      AN INTERNAL ABEND TRACE     0248 03298000
*                                      ROUTINE FOR DEBUG PURPOSES  0248 03299000
*                                      (OS/VS1)                XM0615*/ 03300000
*      2 CVTUSER PTR(31),           /* A WORD AVAILABLE TO THE USER  */ 03301000
*      2 CVTMDLDS PTR(31),          /* RESERVED FOR MODEL-DEPENDENT     03302000
*                                      SUPPORT                       */ 03303000
*      2 CVTQABST CHAR(2) BDY(WORD),/* AN SVC 13 (ABEND) INSTRUCTION    03304000
*                                      (OS/VS2) RESERVED (OS/VS1)    */ 03305000
*      2 CVTLNKSC CHAR(2) BDY(WORD,3),/* AN SVC 6 (LINK) INSTRUCTION    03306000
*                                      ICB369                        */ 03307000
*      2 CVTTSCE PTR(31),           /* ADDRESS OF THE FIRST TIME   0248 03308000
*                                      SLICE CONTROL ELEMENT (TSCE)  */ 03309000
*      2 CVTPATCH PTR(31),          /* ADDRESS OF A 200-BYTE FE PATCH   03310000
*                                      AREA                          */ 03311000
*      2 CVTRMS PTR(31),            /* RECOVERY MANAGEMENT SUPPORT 0248 03312000
*                                      (RMS) COMMUNICATIONS VECTOR.     03313000
*                                      ADDRESS OF A MACHINE STATUS 0248 03314000
*                                      BLOCK.                        */ 03315000
*      2 CVTRV515 PTR(31),          /* ** CVTTSCVT FIELD UNUSED IN 0248 03316000
*                                      MVS ** (MDC037)       @Z40AQ9A*/ 03317000
*      2 CVT0SCR1 PTR(31),          /* ADDRESS OF THE SECTOR       0248 03318000
*                                      CALCULATION ROUTINE FOR     0248 03319000
*                                      ROTATIONAL POSITION SENSING 0248 03320000
*                                      (RPS)                         */ 03321000
*      2 CVTGTF PTR(31),            /* GENERALIZED TRACE FACILITY  0248 03322000
*                                      (GTF) CONTROL WORD ICB312     */ 03323000
*       3 CVTGTFST BIT(8),          /* GTF FLAG BYTE ICB312          */ 03324000
*        4 CVTGTFS BIT(2),          /* GTF STATUS (OS/VS1) MDC088    */ 03325000
*         5 CVTGTFAV BIT(1),        /* IF ZERO, GTF NOT ACTIVE. IF 0248 03326000
*                                      ONE, GTF ACTIVE. (OS/VS2)   0248 03327000
*                                      MDC098                        */ 03328000
*         5 CVTRV315 BIT(1),        /* RESERVED (OS/VS2)             */ 03329000
*        4 CVTSTATE BIT(1),         /* GTF IS IN CONTROL PROCESSING A   03330000
*                                      HOOK (OS/VS1) MDC093          */ 03331000
*         5 CVTRV316 BIT(1),        /* RESERVED (OS/VS2)             */ 03332000
*        4 CVTTMODE BIT(1),         /* IF 0, MODE=INT SPECIFIED. IF     03333000
*                                      1, MODE=EXT SPECIFIED WHICH 0248 03334000
*                                      MEANS TRACE DATA IS TO BE   0248 03335000
*                                      WRITTEN TO AN EXTERNAL DEVICE.   03336000
*                                      (OS/VS1) MDC094               */ 03337000
*         5 CVTRV317 BIT(1),        /* RESERVED (OS/VS2)             */ 03338000
*        4 CVTFORM BIT(1),          /* TRACE DATA IS TO BE FORMATTED    03339000
*                                      ON ABNORMAL TERMINATION     0248 03340000
*                                      (OS/VS1) MDC095               */ 03341000
*         5 CVTRV318 BIT(1),        /* RESERVED (OS/VS2)             */ 03342000
*        4 CVTUSR BIT(1),           /* TRACE=USR SPECIFIED.        0248 03343000
*                                      USER-REQUESTED TRACE DATA IS     03344000
*                                      TO BE INCLUDED IN THE TRACE 0248 03345000
*                                      DATA SET. (MDC317)    @Z30AP9A*/ 03346000
*        4 CVTRNIO BIT(1),          /* GTF IS ACTIVE AND TRACING RNIO   03347000
*                                      EVENTS MDC187                 */ 03348000
*        4 CVTRSV27 BIT(1),         /* RESERVED                      */ 03349000
*       3 CVTGTFA PTR(24),          /* ADDRESS OF THE MONITOR CALL 0248 03350000
*                                      VECTOR TABLE (OS/VS1) ADDRESS    03351000
*                                      OF MAIN MONITOR CALL ROUTING     03352000
*                                      TABLE, MCHEAD (OS/VS2) MDC156 */ 03353000
*      2 CVTAQAVT PTR(31),          /* ADDRESS OF THE FIRST WORD OF     03354000
*                                      THE TCAM DISPATCHER WHICH   0248 03355000
*                                      CONTAINS THE ADDRESS OF THE 0248 03356000
*                                      ADDRESS VECTOR TABLE (AVT). IF   03357000
*                                      ZERO, TCAM IS NOT STARTED     */ 03358000
*       3 CVTTCMFG CHAR(1),         /* TCAM FLAGS                    */ 03359000
*        4 CVTTCRDY BIT(1),         /* TCAM IS READY TO ACCEPT USERS */ 03360000
*        4 CVTLDEV BIT(1),          /* LOCAL DEVICE ATTACHED TO TCAM    03361000
*                                      (MDC357)              @Z40XA9A*/ 03362000
*        4 CVTRSV29 BIT(1),         /* RESERVED                      */ 03363000
*        4 CVTRSV30 BIT(1),         /* RESERVED                      */ 03364000
*        4 CVTRSV31 BIT(1),         /* RESERVED                      */ 03365000
*        4 CVTRSV32 BIT(1),         /* RESERVED                      */ 03366000
*        4 CVTRSV33 BIT(1),         /* RESERVED                      */ 03367000
*        4 CVTRSV34 BIT(1),         /* RESERVED                      */ 03368000
*       3 CVTAQAVB PTR(24),         /* SAME AS CVTAQAVT ABOVE        */ 03369000
*      2 CVTVOLM2 PTR(31),          /* ADDRESS OF TABLE FOR POWER  0248 03370000
*                                      WARNING FEATURE (PWF) (OS/VS2)   03371000
*                                      (MDC308)              @Z30AQ9A*/ 03372000
*       3 CVTTATA PTR(31),          /* ADDRESS OF THE FIRST ENTRY IN    03373000
*                                      THE TCB ADDRESS TABLE. THE  0248 03374000
*                                      FIRST ENTRY IS FOR PARTITION     03375000
*                                      0. (OS/VS1)                   */ 03376000
*        4 CVTTSKS PTR(8),          /* MAXIMUM ALLOWABLE NUMBER OF 0248 03377000
*                                      ENTRIES IN THE TCB ADDRESS  0248 03378000
*                                      TABLE (OS/VS1)                */ 03379000
*         5 CVTVOLF2 BIT(8),        /* PWF FLAG BYTE. THIS BYTE IS 0248 03380000
*                                      OVERLAID BY CVTVOLM2 AFTER PWF   03381000
*                                      INITIALIZATION. (OS/VS2)    0248 03382000
*                                      (MDC309)              @Z30AQ9A*/ 03383000
*          6 CVTVOLI2 BIT(1),       /* PWF INITIALIZATION HAS NOT  0248 03384000
*                                      OCCURRED (OS/VS2) (MDC310)  0248 03385000
*                                                            @Z30AQ9A*/ 03386000
*        4 CVTTAT PTR(24),          /* SAME AS CVTTATA ABOVE         */ 03387000
*         5 CVTVOLT2 PTR(24),       /* PWF RECHECK TIME DELAY. THIS     03388000
*                                      VALUE IS OVERLAID BY CVTVOLM2    03389000
*                                      AFTER PWF INITIALIZATION.   0248 03390000
*                                      (OS/VS2) (MDC311)     @Z30AQ9A*/ 03391000
*      2 CVTATER PTR(31),           /* ADDRESS OF THE SYSTEM ERROR 0248 03392000
*                                      TCB. THE PURGE ROUTINE USES 0248 03393000
*                                      THIS FIELD TO ACCESS THE SIRB.   03394000
*                                      (OS/VS1) ICB346               */ 03395000
*       3 CVTSYST PTR(8),           /* NUMBER OF ENTRIES IN THE TCB     03396000
*                                      ADDRESS TABLE FOR TCB'S     0248 03397000
*                                      CREATED DURING SYSTEM       0248 03398000
*                                      GENERATION (OS/VS1)           */ 03399000
*       3 CVTATERA PTR(24),         /* SAME AS CVTATER ABOVE         */ 03400000
*      2 CVTEXT1 PTR(31),           /* ADDRESS OF OS - OS/VS COMMON     03401000
*                                      EXTENSION ICB421              */ 03402000
*      2 CVTCBSP PTR(31),           /* ADDRESS OF ACCESS METHOD    0248 03403000
*                                      CONTROL BLOCK STRUCTURE MDC195*/ 03404000
*      2 CVTPURG PTR(31),           /* ADDRESS OF SUBSYSTEM PURGE  0248 03405000
*                                      ROUTINE ICB330                */ 03406000
*       3 CVTRSV35 PTR(8),          /* RESERVED ICB330               */ 03407000
*       3 CVTPURGA PTR(24),         /* ADDRESS OF SUBSYSTEM PURGE  0248 03408000
*                                      ROUTINE ICB330                */ 03409000
*      2 CVTAMFF CHAR(4),           /* RESERVED FOR ACCESS METHOD  0248 03410000
*                                      FLAGS ICB436                  */ 03411000
*      2 CVTQMSG PTR(31),           /* ADDRESS OF INFORMATION TO BE     03412000
*                                      PRINTED BY ABEND ICB307       */ 03413000
*       3 CVTRSV36 PTR(8),          /* RESERVED ICB307               */ 03414000
*       3 CVTQMSGA PTR(24),         /* ADDRESS OF INFORMATION TO BE     03415000
*                                      PRINTED BY ABEND ICB307       */ 03416000
*      2 CVTDMSR PTR(31),           /* SAME AS CVTDMSRA BELOW ICB346 */ 03417000
*       3 CVTRSV37 PTR(8),          /* RESERVED (OS/VS1) ICB346      */ 03418000
*        4 CVTDMSRF BIT(8),         /* OPEN/CLOSE/EOV FLAG BYTE.   0248 03419000
*                                      SETTING BOTH BIT 0 AND BIT 1     03420000
*                                      ON WILL CAUSE BOTH KINDS OF 0248 03421000
*                                      DUMPS TO BE TAKEN. THESE BITS    03422000
*                                      ARE USED DURING TESTING AND 0248 03423000
*                                      DEBUGGING WHEN OTHER DEBUG  0248 03424000
*                                      METHODS ARE INEFFECTIVE.    0248 03425000
*                                      (OS/VS2) (MDC350)     @Z40AQ9A*/ 03426000
*         5 CVTSDUMP BIT(1),        /* SET BY COREZAP. WILL CAUSE AN    03427000
*                                      SDUMP TO BE TAKEN AND IEC999I    03428000
*                                      MESSAGE ISSUED FOR EVERY ABEND   03429000
*                                      ISSUED WITHIN AN            0248 03430000
*                                      OPEN/CLOSE/EOV OR DADSM     0248 03431000
*                                      FUNCTION. (OS/VS2) (MDC351) 0248 03432000
*                                                            @Z40AQ9A*/ 03433000
*         5 CVTUDUMP BIT(1),        /* SET BY COREZAP. WILL CAUSE AN    03434000
*                                      ABEND DUMP TO BE TAKEN FOR  0248 03435000
*                                      EVERY ABEND ISSUED WITHIN AN     03436000
*                                      OPEN/CLOSE/EOV OR DADSM     0248 03437000
*                                      FUNCTION. (OS/VS2) (MDC352) 0248 03438000
*                                                            @Z40AQ9A*/ 03439000
*         5 CVTRV629 BIT(1),        /* RESERVED (OS/VS2)     @Z40AQ9A*/ 03440000
*         5 CVTRV630 BIT(1),        /* RESERVED (OS/VS2)     @Z40AQ9A*/ 03441000
*         5 CVTRV631 BIT(1),        /* RESERVED (OS/VS2)     @Z40AQ9A*/ 03442000
*         5 CVTRV632 BIT(1),        /* RESERVED (OS/VS2)     @Z40AQ9A*/ 03443000
*         5 CVTRV633 BIT(1),        /* RESERVED (OS/VS2)     @Z40AQ9A*/ 03444000
*         5 CVTRV634 BIT(1),        /* RESERVED (OS/VS2)     @Z40AQ9A*/ 03445000
*       3 CVTDMSRA PTR(24),         /* ADDRESS OF THE OPEN/CLOSE/EOV    03446000
*                                      SUPERVISORY ROUTINE IN THE  0248 03447000
*                                      NUCLEUS. THIS ROUTINE HANDLES    03448000
*                                      THE ROUTING OF CONTROL AMONG     03449000
*                                      THE I/O SUPPORT ROUTINES.   0248 03450000
*                                      ICB346                        */ 03451000
*      2 CVTRSV38 PTR(31),          /* RESERVED                      */ 03452000
*      2 CVTRSV39 PTR(31),          /* RESERVED                      */ 03453000
*/*            OS/VS1 - OS/VS2 COMMON SECTION                        */ 03454000
*                                                                  0248 03455000
*      2 CVTREAL PTR(31),           /* ADDRESS OF THE VIRTUAL STORAGE   03456000
*                                      BYTE FOLLOWING THE HIGHEST  0248 03457000
*                                      VIRTUAL=REAL STORAGE ADDRESS     03458000
*                                      ICB368                        */ 03459000
*      2 CVTPTRV PTR(31),           /* ADDRESS OF PAGING SUPERVISOR     03460000
*                                      GENERAL ROUTINE TO TRANSLATE     03461000
*                                      REAL ADDRESSES TO VIRTUAL   0248 03462000
*                                      ADDRESSES                     */ 03463000
*      2 CVTMODE PTR(31),           /* ADDRESS OF ROUTINE TO CHANGE     03464000
*                                      SYSTEM MASK (OS/VS1) (MDC217)    03465000
*                                                              YM4244*/ 03466000
*      2 CVTJESCT PTR(31),          /* ADDRESS OF JOB ENTRY SUBSYSTEM   03467000
*                                      (JES) CONTROL TABLE           */ 03468000
*      2 CVTJEPS PTR(31),           /* ADDRESS OF JOB ENTRY        0248 03469000
*                                      PERIPHERAL SERVICES (JEPS)  0248 03470000
*                                      MONITOR TCB (OS/VS1)    YM2702*/ 03471000
*      2 CVTTZ FIXED(31),           /* DIFFERENCE BETWEEN LOCAL TIME    03472000
*                                      AND GREENWICH MEAN TIME IN  0248 03473000
*                                      BINARY UNITS OF 1.048576    0248 03474000
*                                      SECONDS                       */ 03475000
*      2 CVTMCHPR PTR(31),          /* ADDRESS OF MACHINE CHECK    0248 03476000
*                                      PARAMETER LIST                */ 03477000
*      2 CVTEORM PTR(31),           /* HIGHEST REAL ADDRESS IN MAIN     03478000
*                                      STORAGE (OS/VS1) POTENTIAL  0248 03479000
*                                      REAL HIGH STORAGE ADDRESS   0248 03480000
*                                      (OS/VS2) MDC087               */ 03481000
*      2 CVTERPV PTR(31),           /* ADDRESS OF I/O SUPERVISOR   0248 03482000
*                                      SUBROUTINE TO CONVERT CCW DATA   03483000
*                                      ADDRESSES TO VIRTUAL ADDRESSES   03484000
*                                      (OS/VS1) (MDC219)       YM4043*/ 03485000
*       3 CVTRV517 PTR(31),         /* ** CVTERPV FIELD UNUSED IN MVS   03486000
*                                      ** (MDC219)             YM4043*/ 03487000
*      2 CVTINTLA PTR(31),          /* ADDRESS OF A TIME INTERVAL. 0248 03488000
*                                      I/O LOAD BALANCING COUNTS THE    03489000
*                                      NUMBER OF EXCP'S ISSUED DURING   03490000
*                                      THIS TIME INTERVAL AND USES 0248 03491000
*                                      THE VALUE IN DETERMINING THE     03492000
*                                      AMOUNT OF I/O ACTIVITY IN THE    03493000
*                                      SYSTEM. (OS/VS1) (MDC220)   0248 03494000
*                                                              YM4043*/ 03495000
*       3 CVTRV518 PTR(31),         /* ** CVTINTLA FIELD UNUSED IN 0248 03496000
*                                      MVS ** (MDC220)         YM4043*/ 03497000
*      2 CVTAPF PTR(31),            /* SAME AS CVTAPFA BELOW ICB360  */ 03498000
*       3 CVTRSV40 PTR(8),          /* RESERVED ICB360               */ 03499000
*       3 CVTAPFA PTR(24),          /* ADDRESS OF BRANCH ENTRY POINT    03500000
*                                      IN AUTHORIZED PROGRAM FACILITY   03501000
*                                      (APF) ROUTINE                 */ 03502000
*      2 CVTEXT2 PTR(31),           /* ADDRESS OF OS/VS1 - OS/VS2  0248 03503000
*                                      COMMON EXTENSION ICB330       */ 03504000
*       3 CVTRSV41 PTR(8),          /* RESERVED ICB330               */ 03505000
*       3 CVTEXT2A PTR(24),         /* SAME AS CVTEXT2 ABOVE ICB330  */ 03506000
*      2 CVTHJES PTR(31),           /* SAME AS CVTHJESA BELOW ICB454 */ 03507000
*       3 CVTRSV42 PTR(8),          /* RESERVED ICB454               */ 03508000
*       3 CVTHJESA PTR(24),         /* ADDRESS OF OPTIONAL JOB ENTRY    03509000
*                                      SUBSYSTEM (JES) COMMUNICATION    03510000
*                                      VECTOR TABLE ICB454           */ 03511000
*      2 CVTRSV43 FIXED(15),        /* RESERVED                      */ 03512000
*      2 CVTRSV44 FIXED(15),        /* RESERVED                      */ 03513000
*      2 CVTRSV45 PTR(31),          /* RESERVED                      */ 03514000
*      2 CVTRSV46 PTR(31),          /* RESERVED                      */ 03515000
*/*            OS/VS1 OVERLAY                                        */ 03516000
*                                                                  0248 03517000
*      2 CVTPGSIA PTR(31),          /* ADDRESS OF PAGING SUPERVISOR     03518000
*                                      INFORMATION AREA              */ 03519000
*      2 CVTPCVT PTR(31),           /* ADDRESS OF PAGED CVT EXTENSION*/ 03520000
*      2 CVTA1F1 CHAR(1),           /* PAGE FAULT FLAGS              */ 03521000
*       3 CVTPFSW BIT(1),           /* ONLY THE PAGING TASK MAY BE 0248 03522000
*                                      DISPATCHED                    */ 03523000
*       3 CVTSRSW BIT(1),           /* NO TASK EXCEPT THE PAGING TASK   03524000
*                                      MAY EXECUTE DISABLED CODE     */ 03525000
*       3 CVTRSV47 BIT(1),          /* RESERVED                      */ 03526000
*       3 CVTRSV48 BIT(1),          /* RESERVED                      */ 03527000
*       3 CVTRSV49 BIT(1),          /* RESERVED                      */ 03528000
*       3 CVTRSV50 BIT(1),          /* RESERVED                      */ 03529000
*       3 CVTRSV51 BIT(1),          /* RESERVED                      */ 03530000
*       3 CVTRSV52 BIT(1),          /* RESERVED                      */ 03531000
*      2 CVTSYSK CHAR(1),           /* SYSTEM LOCK. IF NOT ZERO, ONLY   03532000
*                                      THE PAGING TASK MAY BE      0248 03533000
*                                      DISPATCHED                    */ 03534000
*       3 CVTRSV53 BIT(1),          /* RESERVED                      */ 03535000
*       3 CVTRSV54 BIT(1),          /* RESERVED                      */ 03536000
*       3 CVTRSV55 BIT(1),          /* RESERVED                      */ 03537000
*       3 CVTRSV56 BIT(1),          /* RESERVED                      */ 03538000
*       3 CVTSLKR BIT(1),           /* MACHINE CHECK HANDLING IS IN     03539000
*                                      PROGRESS ICB320               */ 03540000
*       3 CVTSLKQ BIT(1),           /* SYSTEM QUEUE AREA (SQA) HAS 0248 03541000
*                                      BEEN EXHAUSTED                */ 03542000
*       3 CVTSLKP BIT(1),           /* LAST PAGING CONTROL BLOCK   0248 03543000
*                                      (PCB) HAS BEEN USED           */ 03544000
*       3 CVTSLKO BIT(1),           /* A ROUTINE RUNNING DISABLED HAS   03545000
*                                      PRODUCED A PAGE FAULT         */ 03546000
*      2 CVTSULK FIXED(15),         /* SUPERVISOR LOCK. NUMBER OF  0248 03547000
*                                      TASKS ATTEMPTING TO EXECUTE 0248 03548000
*                                      DISABLED ROUTINES. IF NOT   0248 03549000
*                                      ZERO, ONLY ENABLED TASKS MAY     03550000
*                                      RUN.                          */ 03551000
*      2 CVTSMF PTR(31),            /* ADDRESS OF SYSTEM MANAGEMENT     03552000
*                                      FACILITIES (SMF) TCB ICB395   */ 03553000
*      2 CVTPNWFR PTR(31),          /* ADDRESS OF ROUTINE WHICH FREES   03554000
*                                      THE 'EMERGENCY' WORK AREA   0248 03555000
*                                      (ICB413)                XM2452*/ 03556000
*      2 CVTDDCE PTR(31),           /* ADDRESS OF DYNAMIC DISPATCHING   03557000
*                                      CONTROL ELEMENT ICB466        */ 03558000
*      2 CVTRSV57 FIXED(15),        /* RESERVED                      */ 03559000
*      2 CVTRSV58 FIXED(15),        /* RESERVED                      */ 03560000
*      2 CVTSTOA FIXED(31),         /* SAVE AREA FOR THE REAL STORAGE   03561000
*                                      ADDRESS OF THE SEGMENT TABLE     03562000
*                                      ORIGIN ICB496                 */ 03563000
*      2 CVTVOLM1 PTR(31),          /* ADDRESS OF TABLE FOR POWER  0248 03564000
*                                      WARNING FEATURE (PWF) (MDC312)   03565000
*                                                            @X04AQ9A*/ 03566000
*       3 CVTVOLF1 BIT(8),          /* PWF FLAG BYTE. THIS BYTE IS 0248 03567000
*                                      OVERLAID BY CVTVOLM1 AFTER PWF   03568000
*                                      INITIALIZATION. (MDC313)    0248 03569000
*                                                            @X04AQ9A*/ 03570000
*        4 CVTVOLI1 BIT(1),         /* PWF INITIALIZATION HAS NOT  0248 03571000
*                                      OCCURRED (MDC314)     @X04AQ9A*/ 03572000
*       3 CVTVOLT1 PTR(24),         /* PWF RECHECK TIME DELAY. THIS     03573000
*                                      VALUE IS OVERLAID BY CVTVOLM1    03574000
*                                      AFTER PWF INITIALIZATION.   0248 03575000
*                                      (MDC315)              @X04AQ9A*/ 03576000
*      2 CVTRSV61 PTR(31),          /* RESERVED                      */ 03577000
*      2 CVTATMCT PTR(31),          /* POINTER TO VTAM CONTROL TABLE    03578000
*                                      MDC082                        */ 03579000
*       3 CVTATMST CHAR(1),         /* VTAM START STATUS MDC135      */ 03580000
*       3 CVTATMCA PTR(24),         /* POINTER TO VTAM CONTROL TABLE    03581000
*                                      MDC138                        */ 03582000
*      2 CVTAUTH PTR(31),           /* POINTER TO AUTHORIZED LIBRARY    03583000
*                                      TABLE MDC188                  */ 03584000
*      2 CVTACTAP PTR(31),          /* ADDRESS OF BRANCH ENTRY TO  0248 03585000
*                                      VTAM'S SVC ROUTINE ISTAPC42 0248 03586000
*                                      (MDC216)              @X31BH9A*/ 03587000
*      2 CVTRV485 PTR(31),          /* RESERVED MDC106               */ 03588000
*      2 CVTRV486 PTR(31),          /* RESERVED MDC106               */ 03589000
*      2 CVTRV487 PTR(31),          /* RESERVED MDC106               */ 03590000
*      2 CVTRV488 PTR(31);          /* RESERVED MDC106               */ 03591000
*/*            OS/VS2 OVERLAY                                        */ 03592000
*                                                                  0249 03593000
*   DECLARE                                                        0249 03594000
*     1 CVTS01 DEF(CVTPGSIA) BDY(WORD),                            0249 03595000
*      2 CVTGETL PTR(31),           /* ADDRESS OF IKJGETL, TSO GET 0249 03596000
*                                      LINE ROUTINE (MDC206)   YM2225*/ 03597000
*      2 CVTLPDSR PTR(31),          /* ADDRESS OF LINK PACK AREA   0249 03598000
*                                      (LPA) DIRECTORY SEARCH ROUTINE*/ 03599000
*      2 CVTPVTP PTR(31),           /* ADDRESS OF PAGE VECTOR TABLE  */ 03600000
*      2 CVTLPDIA PTR(31),          /* ADDRESS OF LINK PACK AREA   0249 03601000
*                                      (LPA) DIRECTORY (ON PAGE    0249 03602000
*                                      BOUNDARY)                     */ 03603000
*       3 CVTDIRST CHAR(1),         /* FLAG BYTE                     */ 03604000
*        4 CVTDICOM BIT(1),         /* LPA DIRECTORY HAS BEEN      0249 03605000
*                                      INITIALIZED BY NIP            */ 03606000
*        4 CVTRSV63 BIT(1),         /* RESERVED                      */ 03607000
*        4 CVTRSV64 BIT(1),         /* RESERVED                      */ 03608000
*        4 CVTRSV65 BIT(1),         /* RESERVED                      */ 03609000
*        4 CVTRSV66 BIT(1),         /* RESERVED                      */ 03610000
*        4 CVTRSV67 BIT(1),         /* RESERVED                      */ 03611000
*        4 CVTRSV68 BIT(1),         /* RESERVED                      */ 03612000
*        4 CVTRSV69 BIT(1),         /* RESERVED                      */ 03613000
*       3 CVTLPDIR PTR(24),         /* ADDRESS OF LPA DIRECTORY. ON     03614000
*                                      PAGE BOUNDARY                 */ 03615000
*      2 CVTRV320 PTR(31),          /* ** CVTPAGE1 FIELD UNUSED IN 0249 03616000
*                                      MVS ** (MDC112)       @Z40AQ9A*/ 03617000
*      2 CVTRV321 PTR(31),          /* ** CVTPGSUP FIELD UNUSED IN 0249 03618000
*                                      MVS ** (MDC113)       @Z40AQ9A*/ 03619000
*      2 CVTSLIDA CHAR(4) BDY(WORD),/* IDENTITY OF TCB CAUSING     0249 03620000
*                                      SUPERVISOR LOCK BYTE (CVTSYLK)   03621000
*                                      TO BE SET OR IDENTITY OF TCB     03622000
*                                      THAT SECOND EXIT PROCESSING IS   03623000
*                                      FOR WHEN CVTSEIC=1            */ 03624000
*       3 CVTSYLK CHAR(1),          /* SUPERVISOR LOCK. ONLY ENABLED    03625000
*                                      TASKS MAY BE DISPATCHED       */ 03626000
*       3 CVTSLID CHAR(3),          /* SAME AS CVTSLIDA ABOVE        */ 03627000
*      2 CVTRV322 PTR(31),          /* RESERVED FOR FUTURE USE     0249 03628000
*                                      (MDC343)              @Z40AQ9A*/ 03629000
*      2 CVTRV328 PTR(31),          /* ** CVTSEG AND CVTSEGA FIELDS     03630000
*                                      UNUSED IN MVS ** (MDC139)   0249 03631000
*                                                            @Z40AQ9A*/ 03632000
*      2 CVTRV329 PTR(31),          /* ** CVTSEGB FIELD UNUSED IN MVS   03633000
*                                      ** (MDC141)           @Z40AQ9A*/ 03634000
*      2 CVTRV330 PTR(31),          /* ** CVTSEGC AND SUBFIELDS    0249 03635000
*                                      UNUSED IN MVS ** (MDC142)   0249 03636000
*                                                            @Z40AQ9A*/ 03637000
*      2 CVTRV331 PTR(31),          /* ** CVTSEGD AND SUBFIELDS    0249 03638000
*                                      UNUSED IN MVS ** (MDC145)   0249 03639000
*                                                            @Z40AQ9A*/ 03640000
*      2 CVTRSV77 PTR(8),           /* RESERVED                      */ 03641000
*      2 CVTSPVLK PTR(8),           /* NUMBER OF TASKS WHICH HAVE  0249 03642000
*                                      TERMINATED WHILE OWNING     0249 03643000
*                                      SUPERVISOR LOCK WITHOUT     0249 03644000
*                                      OPERATOR HAVING YET BEEN    0249 03645000
*                                      NOTIFIED                      */ 03646000
*      2 CVTCTLFG CHAR(1),          /* SYSTEM CONTROL FLAGS          */ 03647000
*       3 CVTRV323 BIT(1),          /* ** CVTPSIC BIT UNUSED IN MVS     03648000
*                                      ** (MDC118)           @Z40AQ9A*/ 03649000
*       3 CVTRV333 BIT(1),          /* ** CVTAPGB BIT UNUSED IN MVS     03650000
*                                      ** (MDC151)           @Z40AQ9A*/ 03651000
*       3 CVTRSV78 BIT(1),          /* RESERVED ICB382               */ 03652000
*       3 CVTDSTAT BIT(1),          /* DEVSTAT OPTION IN EFFECT.   0249 03653000
*                                      DEVICE ADDRESS FOR 2319, 3330,   03654000
*                                      2314, 3330-1, 3340 CAN VARY 0249 03655000
*                                      ACROSS SYSTEMS MDC189         */ 03656000
*       3 CVTRSV79 BIT(1),          /* RESERVED                      */ 03657000
*       3 CVTNOMP BIT(1),           /* MULTIPROCESSING CODE IS NOT IN   03658000
*                                      THE SYSTEM MDC176             */ 03659000
*       3 CVTGTRCE BIT(1),          /* GENERALIZED TRACE FACILITY  0249 03660000
*                                      (GTF) HAS SUPPRESSED        0249 03661000
*                                      SUPERVISOR TRACE ICB446       */ 03662000
*       3 CVTSDTRC BIT(1),          /* SVC DUMP HAS SUPPRESSED     0249 03663000
*                                      SUPERVISOR TRACE ICB446       */ 03664000
*      2 CVTAPG CHAR(1),            /* DISPATCHING PRIORITY OF     0249 03665000
*                                      AUTOMATIC PRIORITY GROUP (APG)   03666000
*                                      ICB339                        */ 03667000
*      2 CVTTRACE CHAR(2) BDY(WORD),/* BRANCH ON REGISTER          0249 03668000
*                                      INSTRUCTION. SET BY NIP.    0249 03669000
*                                      REGISTER TEN FOR TRACE.     0249 03670000
*                                      REGISTER ELEVEN FOR NO TRACE. */ 03671000
*      2 CVTTRAC2 CHAR(2) BDY(WORD,3),/* BRANCH ON REGISTER 11     0249 03672000
*                                      INSTRUCTION. THIS ALLOWS FOR     03673000
*                                      SUPPRESSING TRACE DYNAMICALLY    03674000
*                                      BY SETTING CONDITION CODE MASK   03675000
*                                      TO ZERO IN FIRST INSTRUCTION     03676000
*                                      (CVTTRACE)                    */ 03677000
*      2 CVTRSCN PTR(31),           /* ADDRESS OF ROUTINE TO SCAN TCB   03678000
*                                      TREE                          */ 03679000
*      2 CVTTAS PTR(31),            /* ADDRESS OF ROUTINE TO TRANSFER   03680000
*                                      ADDRESS SPACE                 */ 03681000
*      2 CVTRV332 PTR(31),          /* ** CVTPVALD FIELD UNUSED IN 0249 03682000
*                                      MVS ** (MDC148)       @Z40AQ9A*/ 03683000
*      2 CVTSHRVM PTR(31),          /* LOWEST ADDRESS OF SHARED    0249 03684000
*                                      VIRTUAL STORAGE AREA. THIS  0249 03685000
*                                      ADDRESS WILL BE THE BEGINNING    03686000
*                                      OF THE COMMON SERVICE AREA  0249 03687000
*                                      (CSA) (MDC324)        @Z30AQ9A*/ 03688000
*      2 CVT0VL01 PTR(31),          /* ENTRY POINT ADDRESS OF      0249 03689000
*                                      VALIDITY CHECK ROUTINE      0249 03690000
*                                      (IEA0VL01) USED TO COMPARE  0249 03691000
*                                      PROTECT KEY OF AN ADDRESS WITH   03692000
*                                      TCB PROTECT KEY.              */ 03693000
*      2 CVTRV324 PTR(31),          /* ** CVTPFIXQ FIELD UNUSED IN 0249 03694000
*                                      MVS ** (MDC119)       @Z40AQ9A*/ 03695000
*      2 CVTRV325 PTR(31),          /* ** CVTPFIXR FIELD UNUSED IN 0249 03696000
*                                      MVS ** (MDC120)       @Z40AQ9A*/ 03697000
*      2 CVTRV326 PTR(31),          /* ** CVTPFIXP FIELD UNUSED IN 0249 03698000
*                                      MVS ** (MDC121)       @Z40AQ9A*/ 03699000
*      2 CVTASCRF PTR(31),          /* CREATED ASCB QUEUE HEADER   0249 03700000
*                                      (MDC337)              @ZA04120*/ 03701000
*      2 CVTASCRL PTR(31),          /* CREATED ASCB QUEUE TRAILER  0249 03702000
*                                      (MDC338)              @ZA04120*/ 03703000
*      2 CVTPUTL PTR(31),           /* ADDRESS OF IKJPUTL, TSO PUT 0249 03704000
*                                      LINE ROUTINE (MDC207)   YM2225*/ 03705000
*      2 CVTSRBRT PTR(31),          /* DISPATCHER RETURN ADDRESS FOR    03706000
*                                      SRB ROUTINES MDC130           */ 03707000
*      2 CVTOLT0A PTR(31),          /* BRANCH ENTRY TO OLTEP MEMORY     03708000
*                                      TERMINATION RESOURCE MANAGER     03709000
*                                      MDC129                        */ 03710000
*      2 CVTSMFEX PTR(31),          /* BRANCH ENTRY TO SYSTEM      0249 03711000
*                                      MANAGEMENT FACILITIES (SMF) 0249 03712000
*                                      EXCP COUNTING ROUTINE FOR VAM    03713000
*                                      WINDOW INTERCEPT MDC133       */ 03714000
*      2 CVTCSPIE PTR(31),          /* FOR CHECKPOINT/RESTART, BRANCH   03715000
*                                      ENTRY TO SPIE MDC149          */ 03716000
*      2 CVTPTGT PTR(31),           /* ADDRESS OF IKJPTGT, TSO PUTGET   03717000
*                                      ROUTINE (MDC208)        YM2225*/ 03718000
*      2 CVTIOSPL PTR(8),           /* PRIORITY LEVEL OF I/O       0249 03719000
*                                      SUPERVISOR CHANNEL SCHEDULER     03720000
*                                      MDC019                        */ 03721000
*      2 CVTRV513 CHAR(1),          /* RESERVED MDC165               */ 03722000
*      2 CVTDSSAC CHAR(1),          /* DYNAMIC SUPPORT SYSTEM (DSS)     03723000
*                                      ACTIVATED FLAG - USED BY    0249 03724000
*                                      RESTART FLIH. IF X'00', DSS 0249 03725000
*                                      NOT INITIALIZED. IF X'FF', DSS   03726000
*                                      HAS BEEN INITIALIZED. MDC163  */ 03727000
*      2 CVTRV139 PTR(8),           /* RESERVED                      */ 03728000
*      2 CVTSTCK PTR(31),           /* ADDRESS OF IKJSTCK, TSO STACK    03729000
*                                      ROUTINE (MDC209)        YM2225*/ 03730000
*      2 CVTMAXMP PTR(15),          /* FOR MEASUREMENT FACILITY    0249 03731000
*                                      (MF/1), MAXIMUM PHYSICAL CPU     03732000
*                                      ADDRESS SUPPORTED BY THIS   0249 03733000
*                                      RELEASE MDC165                */ 03734000
*      2 CVTRV144 FIXED(15),        /* RESERVED                      */ 03735000
*      2 CVTSCAN PTR(31),           /* ADDRESS OF IKJSCAN, TSO SCAN     03736000
*                                      ROUTINE (MDC210)        YM2225*/ 03737000
*      2 CVTAUTHL PTR(31),          /* POINTER TO AUTHORIZED LIBRARY    03738000
*                                      TABLE MDC001                  */ 03739000
*      2 CVTBLDCP PTR(31),          /* BRANCH ENTRY TO BUILD POOL  0249 03740000
*                                      MDC003                        */ 03741000
*      2 CVTGETCL PTR(31),          /* BRANCH ENTRY TO GET CELL    0249 03742000
*                                      MDC004                        */ 03743000
*      2 CVTFRECL PTR(31),          /* BRANCH ENTRY TO FREE CELL   0249 03744000
*                                      MDC005                        */ 03745000
*      2 CVTDELCP PTR(31),          /* BRANCH ENTRY TO DELETE POOL 0249 03746000
*                                      MDC006                        */ 03747000
*      2 CVTCRMN PTR(31),           /* BRANCH ENTRY TO SVC 120     0249 03748000
*                                      (GETMAIN/FREEMAIN:CRBRANCH) 0249 03749000
*                                      MDC007                        */ 03750000
*      2 CVTCRAS PTR(31),           /* BRANCH ENTRY TO 'CREATE     0249 03751000
*                                      ADDRESS SPACE' MDC008         */ 03752000
*      2 CVTQSAS PTR(31),           /* BRANCH ENTRY TO TASK        0249 03753000
*                                      TERMINATION MDC009            */ 03754000
*      2 CVTFRAS PTR(31),           /* BRANCH ENTRY TO FREE ADDRESS     03755000
*                                      SPACE MDC010                  */ 03756000
*      2 CVTS1EE PTR(31),           /* BRANCH ENTRY TO STAGE 1 EXIT     03757000
*                                      EFFECTOR MDC011               */ 03758000
*      2 CVTPARS PTR(31),           /* ADDRESS OF IKJPARS, TSO PARSE    03759000
*                                      ROUTINE (MDC211)        YM2225*/ 03760000
*      2 CVTQUIS PTR(31),           /* BRANCH ENTRY TO QUIESCE MDC013*/ 03761000
*      2 CVTSTXU PTR(31),           /* BRANCH ENTRY TO ATTENTION EXIT   03762000
*                                      EPILOGUE MDC014               */ 03763000
*      2 CVTOPTE PTR(31),           /* BRANCH ENTRY ADDRESS TO     0249 03764000
*                                      SYSEVENT MDC015               */ 03765000
*      2 CVTSDRM PTR(31),           /* BRNACH ENTRY ADDRESS OF THE 0249 03766000
*                                      RESOURCE MANAGER ROUTINE FOR     03767000
*                                      SVC DUMP. THIS ROUTINE CAN BE    03768000
*                                      INVOKED BY MEMORY TERMINATION    03769000
*                                      MDC077                        */ 03770000
*      2 CVTIOSCS PTR(31),          /* ENTRY POINT OF I/O SUPERVISOR    03771000
*                                      CHANNEL SCHEDULER MDC018      */ 03772000
*      2 CVTAQTOP PTR(31),          /* POINTER TO AREA CONTAINING  0249 03773000
*                                      QUIESCE DESCRIPTOR BLOCK    0249 03774000
*                                      (QDB'S) FOR DEVICE ALLOCATION    03775000
*                                      MDC021                        */ 03776000
*      2 CVTVVMDI PTR(31),          /* CONSTANT USED BY PAGED LINK 0249 03777000
*                                      PACK AREA (LPA) DIRECTORY   0249 03778000
*                                      SEARCH ALGORITHM MDC022       */ 03779000
*      2 CVTASVT PTR(31),           /* POINTER TO ADDRESS SPACE    0249 03780000
*                                      VECTOR TABLE (ASVT) MDC070    */ 03781000
*      2 CVTGDA PTR(31),            /* POINTER TO GLOBAL DATA AREA 0249 03782000
*                                      (GDA) IN SQA MDC024           */ 03783000
*      2 CVTASCBH PTR(31),          /* POINTER TO HIGHEST PRIORITY 0249 03784000
*                                      ADDRESS SPACE CONTROL BLOCK 0249 03785000
*                                      (ASCB) ON THE ASCB DISPATCHING   03786000
*                                      QUEUE (HEAD OF ASCB QUEUE)  0249 03787000
*                                      MDC027                        */ 03788000
*      2 CVTASCBL PTR(31),          /* POINTER TO LOWEST PRIORITY  0249 03789000
*                                      ASCB ON ASCB DISPATCHING QUEUE   03790000
*                                      MDC028                        */ 03791000
*      2 CVTRTMCT PTR(31),          /* POINTER TO                  0249 03792000
*                                      RECOVERY/TERMINATION CONTROL     03793000
*                                      TABLE MDC031                  */ 03794000
*      2 CVTSV60 PTR(31),           /* ADDRESS OF SVC 60 BRANCH ENTRY   03795000
*                                      POINT (MDC354)        @Z40FP9A*/ 03796000
*      2 CVTSDMP PTR(31),           /* ADDRESS OF SVC DUMP BRANCH  0249 03797000
*                                      ENTRY POINT MDC033            */ 03798000
*      2 CVTSCBP PTR(31),           /* ADDRESS OF SCB PURGE RESOURCE    03799000
*                                      MANAGER MDC034                */ 03800000
*      2 CVTSDBF PTR(31),           /* ADDRESS OF 4K SQA BUFFER USED    03801000
*                                      BY SVC DUMP. HIGH ORDER BIT OF   03802000
*                                      THIS CVT WORD IS USED AS LOCK    03803000
*                                      TO INDICATE BUFFER IS IN USE     03804000
*                                      MDC035                        */ 03805000
*      2 CVTRTMS PTR(31),           /* RTM1 INTERNAL SERVICABILITY 0249 03806000
*                                      LEVEL INDICATOR MDC036        */ 03807000
*      2 CVTTPIOS PTR(31),          /* ADDRESS OF THE TELEPROCESSING    03808000
*                                      I/O SUPERV1SOR ROUTINE (TPIOS)   03809000
*                                      MDC078                        */ 03810000
*      2 CVTSIC PTR(31),            /* BRANCH ENTRY ADDRESS OF THE 0249 03811000
*                                      ROUTINE TO SCHEDULE SYSTEM  0249 03812000
*                                      INITIALIZED CANCEL MDC042     */ 03813000
*      2 CVTOPCTP PTR(31),          /* ADDRESS OF SYSTEM RESOURCES 0249 03814000
*                                      MANAGER (SRM) CONTROL TABLE 0249 03815000
*                                      MDC043                        */ 03816000
*      2 CVTEXPRO PTR(31),          /* ADDRESS OF EXIT PROLOGUE/TYPE    03817000
*                                      1 EXIT MDC044                 */ 03818000
*      2 CVTGSMQ PTR(31),           /* ADDRESS OF GLOBAL SERVICE   0249 03819000
*                                      MANAGER QUEUE MDC045          */ 03820000
*      2 CVTLSMQ PTR(31),           /* ADDRESS OF LOCAL SERVICE    0249 03821000
*                                      MANAGER QUEUE MDC046          */ 03822000
*      2 CVTGSPL PTR(31),           /* ADDRESS OF GLOBAL SYSTEM    0249 03823000
*                                      PRIORITY LIST QUEUE MDC047    */ 03824000
*      2 CVTVWAIT PTR(31),          /* ADDRESS OF WAIT ROUTINE MDC048*/ 03825000
*      2 CVTPARRL PTR(31),          /* ADDRESS OF PARTIALLY LOADED 0249 03826000
*                                      DELETE QUEUE MDC049           */ 03827000
*      2 CVTAPFT PTR(31),           /* ADDRESS OF AUTHORIZED PROGRAM    03828000
*                                      FACILITY (APF) TABLE.       0249 03829000
*                                      INITIALIZED BY NIP. MDC050    */ 03830000
*      2 CVTQCS01 PTR(31),          /* BRANCH ENTRY ADDRESS TO     0249 03831000
*                                      PROGRAM MANAGER USED BY ATTACH   03832000
*                                      MDC051                        */ 03833000
*      2 CVTFQCB PTR(31),           /* POINTER TO FIRST MAJOR QCB FOR   03834000
*                                      ENQ MDC052                    */ 03835000
*      2 CVTLQCB PTR(31),           /* POINTER TO LAST MAJOR QCB FOR    03836000
*                                      ENQ MDC053                    */ 03837000
*      2 CVTRENQ PTR(31),           /* RESOURCE MANAGER ADDRESS FOR     03838000
*                                      ENQ MDC054                    */ 03839000
*      2 CVTRSPIE PTR(31),          /* RESOURCE MANAGER FOR SPIE   0249 03840000
*                                      MDC055                        */ 03841000
*      2 CVTLKRMA PTR(31),          /* RESOURCE MANAGER ADDRESS FOR     03842000
*                                      LOCK MANAGER MDC056           */ 03843000
*      2 CVTCSD PTR(31),            /* VIRTUAL ADDRESS OF COMMON   0249 03844000
*                                      SYSTEM DATA AREA (CSD).     0249 03845000
*                                      INITIALIZED BY NIP. MDC057    */ 03846000
*      2 CVTDQIQE PTR(31),          /* RESOURCE MANAGER FOR EXIT   0249 03847000
*                                      EFFECTORS MDC058              */ 03848000
*      2 CVTRPOST PTR(31),          /* RESOURCE MANAGER FOR POST   0249 03849000
*                                      MDC059                        */ 03850000
*      2 CVT062R1 PTR(31),          /* BRANCH ENTRY TO DETACH MDC060 */ 03851000
*      2 CVTVEAC0 PTR(31),          /* ASCBCHAP BRANCH ENTRY MDC061  */ 03852000
*      2 CVTGLMN PTR(31),           /* GLOBAL BRANCH ENTRY ADDRESS 0249 03853000
*                                      FOR GETMAIN/FREEMAIN MDC062   */ 03854000
*      2 CVTSPSA PTR(31),           /* POINTER TO GLOBAL WORK/SAVE 0249 03855000
*                                      AREA VECTOR TABLE (WSAG)    0249 03856000
*                                      MDC071                        */ 03857000
*      2 CVTWSAL PTR(31),           /* ADDRESS OF TABLE OF LENGTHS OF   03858000
*                                      LOCAL WORK/SAVE AREAS MDC072  */ 03859000
*      2 CVTRV149 PTR(31),          /* RESERVED (MDC073)       YM4043*/ 03860000
*      2 CVTWSAC PTR(31),           /* ADDRESS OF TABLE OF LENGTHS OF   03861000
*                                      CPU WORK/SAVE AREAS MDC074    */ 03862000
*      2 CVTRECRQ PTR(31),          /* ADDRESS OF THE RECORDING    0249 03863000
*                                      REQUEST FACILITY (PART OF RTM1   03864000
*                                      - CALLED BY RTM2 AND RMS)   0249 03865000
*                                      MDC075                        */ 03866000
*      2 CVTASMVT PTR(31),          /* POINTER TO AUXILIARY STORAGE     03867000
*                                      MANAGEMENT VECTOR TABLE (AMVT)   03868000
*                                      MDC076                        */ 03869000
*      2 CVTIOBP PTR(31),           /* ADDRESS OF THE BLOCK PROCESSOR   03870000
*                                      CVT MDC079                    */ 03871000
*      2 CVTSPOST PTR(31),          /* POST RESOURCE MANAGER       0249 03872000
*                                      TERMINATION ROUTINE (RMTR)  0249 03873000
*                                      ENTRY POINT MDC085            */ 03874000
*      2 CVTRSTWD FIXED(31),        /* RESTART RESOURCE MANAGEMENT 0249 03875000
*                                      WORD - CONTAINS IDENTIFIER OF    03876000
*                                      USER IF RESTART IS IN USE.  0249 03877000
*                                      OTHERWISE, ZERO. MDC161       */ 03878000
*      2 CVTFETCH PTR(31),          /* ADDRESS OF ENTRY POINT FOR  0249 03879000
*                                      BASIC FETCH MDC196            */ 03880000
*      2 CVT044R2 PTR(31),          /* ADDRESS OF IGC044R2 IN CHAP 0249 03881000
*                                      SERVICE ROUTINE MDC197        */ 03882000
*      2 CVTPERFM PTR(31),          /* ADDRESS OF THE PERFORMANCE  0249 03883000
*                                      WORK AREA. SET BY IGX00018. 0249 03884000
*                                      MDC205                        */ 03885000
*      2 CVTDAIR PTR(31),           /* ADDRESS OF IKJDAIR, TSO     0249 03886000
*                                      DYNAMIC ALLOCATION INTERFACE     03887000
*                                      ROUTINE (MDC212)        YM2225*/ 03888000
*      2 CVTEHDEF PTR(31),          /* ADDRESS OF IKJEHDEF, TSO    0249 03889000
*                                      DEFAULT SERVICE ROUTINE     0249 03890000
*                                      (MDC213)                YM2225*/ 03891000
*      2 CVTEHCIR PTR(31),          /* ADDRESS OF IKJEHCIR, TSO    0249 03892000
*                                      CATALOG INFORMATION ROUTINE 0249 03893000
*                                      (MDC214)                YM2225*/ 03894000
*      2 CVTSSAP PTR(31),           /* ADDRESS OF SYSTEM SAVE AREA 0249 03895000
*                                      MDC063                        */ 03896000
*      2 CVTAIDVT PTR(31),          /* POINTER TO APPENDAGE ID VECTOR   03897000
*                                      TABLE MDC064                  */ 03898000
*      2 CVTIPCDS PTR(31),          /* BRANCH ENTRY FOR DIRECT SIGNAL   03899000
*                                      SERVICE ROUTINE MDC065        */ 03900000
*      2 CVTIPCRI PTR(31),          /* BRANCH ENTRY FOR REMOTE     0249 03901000
*                                      IMMEDIATE SIGNAL SERVICE    0249 03902000
*                                      ROUTINE MDC066                */ 03903000
*      2 CVTIPCRP PTR(31),          /* BRANCH ENTRY FOR REMOTE     0249 03904000
*                                      PENDABLE SIGNAL SERVICE     0249 03905000
*                                      ROUTINE MDC067                */ 03906000
*      2 CVTPCCAT PTR(31),          /* POINTER TO PHYSICAL CCA VECTOR   03907000
*                                      TABLE MDC068                  */ 03908000
*      2 CVTLCCAT PTR(31),          /* POINTER TO LOGICAL CCA VECTOR    03909000
*                                      TABLE MDC069                  */ 03910000
*      2 CVTRV210 BIT(8),           /* RESERVED                      */ 03911000
*       3 CVTRV211 BIT(1),          /* RESERVED                      */ 03912000
*       3 CVTRV212 BIT(1),          /* RESERVED                      */ 03913000
*       3 CVTRV213 BIT(1),          /* RESERVED                      */ 03914000
*       3 CVTRV214 BIT(1),          /* RESERVED                      */ 03915000
*       3 CVTRV215 BIT(1),          /* RESERVED                      */ 03916000
*       3 CVTRV216 BIT(1),          /* RESERVED                      */ 03917000
*       3 CVTRV217 BIT(1),          /* RESERVED                      */ 03918000
*       3 CVTRV218 BIT(1),          /* RESERVED                      */ 03919000
*      2 CVTRV219 BIT(8),           /* RESERVED                      */ 03920000
*       3 CVTRV220 BIT(1),          /* RESERVED                      */ 03921000
*       3 CVTRV221 BIT(1),          /* RESERVED                      */ 03922000
*       3 CVTRV222 BIT(1),          /* RESERVED                      */ 03923000
*       3 CVTRV223 BIT(1),          /* RESERVED                      */ 03924000
*       3 CVTRV224 BIT(1),          /* RESERVED                      */ 03925000
*       3 CVTRV225 BIT(1),          /* RESERVED                      */ 03926000
*       3 CVTRV226 BIT(1),          /* RESERVED                      */ 03927000
*       3 CVTRV227 BIT(1),          /* RESERVED                      */ 03928000
*      2 CVTRV228 BIT(8),           /* RESERVED                      */ 03929000
*       3 CVTRV229 BIT(1),          /* RESERVED                      */ 03930000
*       3 CVTRV230 BIT(1),          /* RESERVED                      */ 03931000
*       3 CVTRV231 BIT(1),          /* RESERVED                      */ 03932000
*       3 CVTRV232 BIT(1),          /* RESERVED                      */ 03933000
*       3 CVTRV233 BIT(1),          /* RESERVED                      */ 03934000
*       3 CVTRV234 BIT(1),          /* RESERVED                      */ 03935000
*       3 CVTRV235 BIT(1),          /* RESERVED                      */ 03936000
*       3 CVTRV236 BIT(1),          /* RESERVED                      */ 03937000
*      2 CVTRV237 BIT(8),           /* RESERVED                      */ 03938000
*       3 CVTRV238 BIT(1),          /* RESERVED                      */ 03939000
*       3 CVTRV239 BIT(1),          /* RESERVED                      */ 03940000
*       3 CVTRV240 BIT(1),          /* RESERVED                      */ 03941000
*       3 CVTRV241 BIT(1),          /* RESERVED                      */ 03942000
*       3 CVTRV242 BIT(1),          /* RESERVED                      */ 03943000
*       3 CVTRV243 BIT(1),          /* RESERVED                      */ 03944000
*       3 CVTRV244 BIT(1),          /* RESERVED                      */ 03945000
*       3 CVTRV245 BIT(1),          /* RESERVED                      */ 03946000
*      2 CVTRV246 PTR(8),           /* RESERVED                      */ 03947000
*      2 CVTRV247 PTR(8),           /* RESERVED                      */ 03948000
*      2 CVTRV248 PTR(8),           /* RESERVED                      */ 03949000
*      2 CVTRV249 PTR(8),           /* RESERVED                      */ 03950000
*      2 CVTRV250 PTR(8),           /* RESERVED                      */ 03951000
*      2 CVTRV251 PTR(8),           /* RESERVED                      */ 03952000
*      2 CVTRV252 PTR(15),          /* RESERVED                      */ 03953000
*      2 CVTRV253 FIXED(15),        /* RESERVED                      */ 03954000
*      2 CVTRV254 FIXED(15),        /* RESERVED                      */ 03955000
*      2 CVTPWI PTR(31),            /* ADDRESS OF THE WINDOW       0249 03956000
*                                      INTERCEPT ROUTINE MDC104      */ 03957000
*      2 CVTPVBP PTR(31),           /* ADDRESS OF THE VIRTUAL BLOCK     03958000
*                                      PROCESSOR MDC105              */ 03959000
*      2 CVTMFCTL PTR(31),          /* POINTER TO MEASUREMENT      0249 03960000
*                                      FACILITY CONTROL BLOCK MDC100 */ 03961000
*      2 CVTMFRTR PTR(31),          /* IF MEASUREMENT FACILITY IS  0249 03962000
*                                      ACTIVE, CONTAINS ADDRESS OF 0249 03963000
*                                      MEASUREMENT FACILITY ROUTER.     03964000
*                                      OTHERWISE, ADDRESS OF CVTBRET.   03965000
*                                      MDC101                        */ 03966000
*       3 CVTMFACT BIT(1),          /* IF ONE, I/O SUPERVISOR AND  0249 03967000
*                                      TIMER SECOND LEVEL INTERRUPT     03968000
*                                      HANDLER HOOKS BRANCH TO     0249 03969000
*                                      MEASUREMENT FACILITY ROUTER 0249 03970000
*                                      MDC102                        */ 03971000
*      2 CVTVPSIB PTR(31),          /* BRANCH ENTRY TO PAGE SERVICES    03972000
*                                      MDC108                        */ 03973000
*      2 CVTVSI PTR(31),            /* BRANCH ENTRY TO VAM SERVICES     03974000
*                                      MDC109                        */ 03975000
*      2 CVTVFP PTR(31),            /* BRANCH ENTRY TO FINDPAGE    0249 03976000
*                                      MDC110                        */ 03977000
*      2 CVTRV262 BIT(8),           /* RESERVED                      */ 03978000
*       3 CVTRV263 BIT(1),          /* RESERVED                      */ 03979000
*       3 CVTRV264 BIT(1),          /* RESERVED                      */ 03980000
*       3 CVTRV265 BIT(1),          /* RESERVED                      */ 03981000
*       3 CVTRV266 BIT(1),          /* RESERVED                      */ 03982000
*       3 CVTRV267 BIT(1),          /* RESERVED                      */ 03983000
*       3 CVTRV268 BIT(1),          /* RESERVED                      */ 03984000
*       3 CVTRV269 BIT(1),          /* RESERVED                      */ 03985000
*       3 CVTRV270 BIT(1),          /* RESERVED                      */ 03986000
*      2 CVTRV271 BIT(8),           /* RESERVED                      */ 03987000
*       3 CVTRV272 BIT(1),          /* RESERVED                      */ 03988000
*       3 CVTRV273 BIT(1),          /* RESERVED                      */ 03989000
*       3 CVTRV274 BIT(1),          /* RESERVED                      */ 03990000
*       3 CVTRV275 BIT(1),          /* RESERVED                      */ 03991000
*       3 CVTRV276 BIT(1),          /* RESERVED                      */ 03992000
*       3 CVTRV277 BIT(1),          /* RESERVED                      */ 03993000
*       3 CVTRV278 BIT(1),          /* RESERVED                      */ 03994000
*       3 CVTRV279 BIT(1),          /* RESERVED                      */ 03995000
*      2 CVTRV280 BIT(8),           /* RESERVED                      */ 03996000
*       3 CVTRV281 BIT(1),          /* RESERVED                      */ 03997000
*       3 CVTRV282 BIT(1),          /* RESERVED                      */ 03998000
*       3 CVTRV283 BIT(1),          /* RESERVED                      */ 03999000
*       3 CVTRV284 BIT(1),          /* RESERVED                      */ 04000000
*       3 CVTRV285 BIT(1),          /* RESERVED                      */ 04001000
*       3 CVTRV286 BIT(1),          /* RESERVED                      */ 04002000
*       3 CVTRV287 BIT(1),          /* RESERVED                      */ 04003000
*       3 CVTRV288 BIT(1),          /* RESERVED                      */ 04004000
*      2 CVTRV289 BIT(8),           /* RESERVED                      */ 04005000
*       3 CVTRV290 BIT(1),          /* RESERVED                      */ 04006000
*       3 CVTRV291 BIT(1),          /* RESERVED                      */ 04007000
*       3 CVTRV292 BIT(1),          /* RESERVED                      */ 04008000
*       3 CVTRV293 BIT(1),          /* RESERVED                      */ 04009000
*       3 CVTRV294 BIT(1),          /* RESERVED                      */ 04010000
*       3 CVTRV295 BIT(1),          /* RESERVED                      */ 04011000
*       3 CVTRV296 BIT(1),          /* RESERVED                      */ 04012000
*       3 CVTRV297 BIT(1),          /* RESERVED                      */ 04013000
*      2 CVTTRCA PTR(31),           /* ADDRESS OF TRACE TABLE HEADER    04014000
*                                      (MDC327)              @ZA02352*/ 04015000
*      2 CVTRV302 PTR(15),          /* RESERVED                      */ 04016000
*      2 CVTRV303 PTR(15),          /* RESERVED                      */ 04017000
*      2 CVTRV304 FIXED(15),        /* RESERVED                      */ 04018000
*      2 CVTRV305 FIXED(15),        /* RESERVED                      */ 04019000
*      2 CVTRV306 FIXED(15),        /* RESERVED                      */ 04020000
*      2 CVTRV307 FIXED(15),        /* RESERVED                      */ 04021000
*      2 CVTVIOP PTR(31),           /* ENTRY POINT OF PAGE I/O POST     04022000
*                                      MDC111                        */ 04023000
*      2 CVTRMBR PTR(31),           /* ADDRESS OF REGMAIN BRANCH   0249 04024000
*                                      ENTRY MDC123                  */ 04025000
*      2 CVTLFRM PTR(31),           /* LIST FORMAT FREEMAIN BRANCH 0249 04026000
*                                      ENTRY POINT MDC124            */ 04027000
*      2 CVTGMBR PTR(31),           /* LIST FORMAT GETMAIN BRANCH  0249 04028000
*                                      ENTRY POINT MDC125            */ 04029000
*      2 CVT0TC0A PTR(31),          /* ADDRESS OF TASK CLOSE MODULE     04030000
*                                      IFG0TC0A MDC128               */ 04031000
*      2 CVTRLSTG FIXED(31),        /* SIZE OF ACTUAL REAL STORAGE 0249 04032000
*                                      ONLINE AT IPL TIME IN 'K'.  0249 04033000
*                                      VALUE PLACED HERE BY IEAVNIP0.   04034000
*                                      MDC153                        */ 04035000
*      2 CVTSPFRR PTR(31),          /* 'SUPER FRR' ADDRESS (ADDRESS     04036000
*                                      OF FUNCTIONAL RECOVERY ROUTINE   04037000
*                                      ESTABLISHED AT NIP0 TIME TO 0249 04038000
*                                      PROTECT SUPERVISOR CONTROL  0249 04039000
*                                      PROGRAM) MDC154               */ 04040000
*      2 CVTVEMS0 PTR(31),          /* ADDRESS OF MEMORY SWITCH    0249 04041000
*                                      ROUTINE MDC155                */ 04042000
*      2 CVTJRECM PTR(31),          /* ADDRESS OF SUBSYSTEM INTERFACE   04043000
*                                      RESOURCE MANAGER MDC157       */ 04044000
*      2 CVTIRECM PTR(31),          /* ADDRESS OF INITIATOR RESOURCE    04045000
*                                      MANAGER MDC158                */ 04046000
*      2 CVTDARCM PTR(31),          /* ADDRESS OF DEVICE ALLOCATION     04047000
*                                      RESOURCE MANAGER MDC159       */ 04048000
*      2 CVT0PT02 PTR(31),          /* ADDRESS OF POST ENTRY POINT 0249 04049000
*                                      IEA0PT02 MDC160               */ 04050000
*      2 CVTSTPRS PTR(31),          /* ENTRY POINT OF STOP AND     0249 04051000
*                                      RESTART SUBROUTINE MDC162     */ 04052000
*      2 CVTWTCB PTR(31),           /* ADDRESS OF WAIT STATE TCB   0249 04053000
*                                      MDC164                        */ 04054000
*      2 CVTVACR PTR(31),           /* ACR/VARY CPU CHANNEL RECOVERY    04055000
*                                      ROUTINE ADDRESS. ADDRESS    0249 04056000
*                                      FILLED IN BY VARY CPU       0249 04057000
*                                      PROCESSOR. MDC178             */ 04058000
*      2 CVTQUIT PTR(31),           /* VARY CPU SHUTDOWN ROUTINE   0249 04059000
*                                      ADDRESS. ADDRESS FILLED IN BY    04060000
*                                      VARY CPU PROCESSOR. MDC179    */ 04061000
*      2 CVTGTFR8 PTR(31),          /* GENERALIZED TRACE FACILITY  0249 04062000
*                                      (GTF) CONTROL REGISTER 8    0249 04063000
*                                      INITIALIZATION ROUTINE ADDRESS   04064000
*                                      MDC180                        */ 04065000
*      2 CVTVSTOP PTR(31),          /* ADDRESS OF VARY CPU STOP CPU     04066000
*                                      ROUTINE MDC169                */ 04067000
*      2 CVTVPSA PTR(31),           /* ADDRESS OF COPY OF SYSGEN'ED     04068000
*                                      PSA - PLACED HERE BY NIP    0249 04069000
*                                      MDC170                        */ 04070000
*      2 CVTRMPTT PTR(31),          /* ADDRESS OF ISTRAMA1, THE VTAM    04071000
*                                      RESOURCE MANAGER FOR NORMAL 0249 04072000
*                                      AND ABNORMAL TASK TERMINATION    04073000
*                                      (MDC322)              @Z30AP9A*/ 04074000
*      2 CVTRMPMT PTR(31),          /* ADDRESS OF ISTRAMA2, THE VTAM    04075000
*                                      RESOURCE MANAGER FOR NORMAL 0249 04076000
*                                      AND ABNORMAL MEMORY         0249 04077000
*                                      TERMINATION (MDC323)  @Z30AP9A*/ 04078000
*      2 CVTEXP1 PTR(31),           /* ADDRESS OF EXIT PROLOGUE WHICH   04079000
*                                      RETURNS TO THE DISPATCHER   0249 04080000
*                                      MDC173                        */ 04081000
*      2 CVTCSDRL PTR(31),          /* REAL ADDRESS OF COMMON SYSTEM    04082000
*                                      DATA AREA (CSD). INITIALIZED     04083000
*                                      BY NIP. MDC174                */ 04084000
*      2 CVTSSRB PTR(31),           /* STATUS STOP SRB ENTRY MDC175  */ 04085000
*      2 CVTRPT PTR(31),            /* ADDRESS OF IGARPT01 MODULE OF    04086000
*                                      RADIX PARTITION TREE SERVICES.   04087000
*                                      INITIALIZED BY NIP. MDC177    */ 04088000
*      2 CVTQV1 PTR(31),            /* ADDRESS OF QUEUE VERIFICATION    04089000
*                                      FOR SINGLE THREADED QUEUES  0249 04090000
*                                      WITH HEADERS ONLY MDC181      */ 04091000
*      2 CVTQV2 PTR(31),            /* ADDRESS OF QUEUE VERIFICATION    04092000
*                                      FOR SINGLE THREADED QUEUES  0249 04093000
*                                      WITH HEADER AND TRAILER MDC182*/ 04094000
*      2 CVTQV3 PTR(31),            /* ADDRESS OF QUEUE VERIFICATION    04095000
*                                      FOR DOUBLE THREADED QUEUES  0249 04096000
*                                      MDC183                        */ 04097000
*      2 CVTGSDA PTR(31),           /* ADDRESS OF GLOBAL SYSTEM    0249 04098000
*                                      DUPLEX AREA. ADDRESS FILLED IN   04099000
*                                      BY NIP0. MDC184               */ 04100000
*       3 CVTGSDAB BIT(1),          /* IF HIGH-ORDER BIT IS ONE,   0249 04101000
*                                      THERE IS A VALID VALUE IN   0249 04102000
*                                      FOLLOWING 31 BITS MDC185      */ 04103000
*      2 CVTADV PTR(31),            /* ADDRESS OF ADDRESS          0249 04104000
*                                      VERIFICATION ROUTINE MDC186   */ 04105000
*      2 CVTTPIO PTR(31),           /* ADDRESS OF VTAM TPIO (SVC 124)   04106000
*                                      ROUTINE MDC193                */ 04107000
*      2 CVTCRCA PTR(31),           /* WHEN CHANNEL RECONFIGURATION     04108000
*                                      HARDWARE (CRH) IS ACTIVE,   0249 04109000
*                                      ADDRESS OF CRH COMMUNICATION     04110000
*                                      AREA IECVCRCA. OTHERWISE,   0249 04111000
*                                      ZERO. (MDC306)        @Z30CQ9A*/ 04112000
*      2 CVTEVENT PTR(31),          /* BRANCH ENTRY ADDRESS TO EVENTS   04113000
*                                      (FAST MULTIPLE WAIT ROUTINE)     04114000
*                                      (MDC316)              @Z30HP9A*/ 04115000
*      2 CVTSSCR PTR(31),           /* ADDRESS OF STORAGE SYSTEM   0249 04116000
*                                      CONTROLLER RECOVERY MANAGER 0249 04117000
*                                      CLEANUP ROUTINE (SSC RMCR)  0249 04118000
*                                      (MDC319)              @Z30LP9A*/ 04119000
*      2 CVTCBBR PTR(31),           /* BRANCH ENTRY ADDRESS TO     0249 04120000
*                                      GETMAIN/FREEMAIN (MDC325)   0249 04121000
*                                                            @Z30EN9A*/ 04122000
*      2 CVTEFF02 PTR(31),          /* ADDRESS OF IKJEFF02, TSO    0249 04123000
*                                      MESSAGE ISSUER SERVICE ROUTINE   04124000
*                                      (MDC326)              @ZM30972*/ 04125000
*      2 CVTRV604 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/ 04126000
*      2 CVTRV605 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/ 04127000
*      2 CVTRV606 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/ 04128000
*      2 CVTRAC PTR(31),            /* ADDRESS OF ACCESS CONTROL CVT    04129000
*                                      (MDC320)              @Z40RP9A*/ 04130000
*      2 CVTCGK PTR(31),            /* ADDRESS OF ROUTINE USED TO  0249 04131000
*                                      CHANGE THE KEY OF VIRTUAL   0249 04132000
*                                      PAGES (MDC331)        @Z40EP9A*/ 04133000
*      2 CVTRV609 PTR(31),          /* RESERVED (MDC332)     @Z40AQ9A*/ 04134000
*      2 CVT0PT0E PTR(31),          /* ENTRY POINT TO IDENTIFY POST     04135000
*                                      EXIT ROUTINES (MDC334)      0249 04136000
*                                                            @Z40EP9A*/ 04137000
*      2 CVT0PT03 PTR(31),          /* POST REINVOCATION ENTRY POINT    04138000
*                                      FROM POST EXIT ROUTINES     0249 04139000
*                                      (MDC335)              @Z40EP9A*/ 04140000
*      2 CVTTCASP PTR(31),          /* RESERVED FOR FUTURE USE     0249 04141000
*                                      (MDC336)              @Z40DQ9A*/ 04142000
*      2 CVTASMRM PTR(31),          /* ADDRESS OF AUXILIARY STORAGE     04143000
*                                      MANAGEMENT RESOURCE MANAGER 0249 04144000
*                                      FOR ADDRESS SPACE TERMINATION    04145000
*                                      (MDC341)              @Z40WP9A*/ 04146000
*      2 CVTJTERM PTR(31),          /* ADDRESS OF AUXILIARY STORAGE     04147000
*                                      MANAGEMENT JOB TERMINATION  0249 04148000
*                                      RESOURCE MANAGER (MDC342)   0249 04149000
*                                                            @Z40WP9A*/ 04150000
*      2 CVTRSUME PTR(31),          /* ADDRESS OF RESUME FUNCTION  0249 04151000
*                                      (MDC344)              @Z40FP9A*/ 04152000
*      2 CVTTCTL PTR(31),           /* ADDRESS OF TRANSFER CONTROL 0249 04153000
*                                      (TCTL) FUNCTION (MDC345)    0249 04154000
*                                                            @Z40FP9A*/ 04155000
*      2 CVTCDAL PTR(31),           /* ADDRESS OF COMMON DISPATCHER     04156000
*                                      ACTIVE LIST (MDC346)  @Z40FP9A*/ 04157000
*      2 CVTT6SVC PTR(31),          /* ENTRY POINT ADDRESS FOR TYPE 6   04158000
*                                      SVC EXIT FUNCTION (MDC347)  0249 04159000
*                                                            @Z40FP9A*/ 04160000
*      2 CVTSUSP PTR(31),           /* ADDRESS OF SUSPEND ROUTINE  0249 04161000
*                                      (MDC348)              @Z40FP9A*/ 04162000
*      2 CVTIHASU PTR(31),          /* ADDRESS OF BIT STRING (MDC355)   04163000
*                                                            @Z404P9A*/ 04164000
*      2 CVTRV621 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/ 04165000
*      2 CVTRV622 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/ 04166000
*      2 CVTRV623 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/ 04167000
*      2 CVTRV624 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/ 04168000
*      2 CVTRV625 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/ 04169000
*      2 CVTRV626 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/ 04170000
*      2 CVTRV627 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/ 04171000
*      2 CVTRV628 PTR(31);          /* RESERVED (MDC307)     @Z30AQ9A*/ 04172000
*/*                                                                  */ 04173000
*/*            OS - OS/VS COMMON EXTENSION                           */ 04174000
*/*                                                                  */ 04175000
*                                                                  0250 04176000
*   DECLARE                                                        0250 04177000
*     1 CVTXTNT1 BASED(CVTEXT1),    /* START OF OS - OS/VS COMMON  0250 04178000
*                                      EXTENSION ICB421              */ 04179000
*      2 CVTFACHN PTR(31),          /* ADDRESS OF CHAIN OF DCB FIELD    04180000
*                                      AREAS (ISAM) ICB421           */ 04181000
*      2 CVTRSV87 PTR(31),          /* RESERVED                      */ 04182000
*      2 CVTRSV88 PTR(31);          /* RESERVED                      */ 04183000
*/*                                                                  */ 04184000
*/*            OS/VS1 - OS/VS2 COMMON EXTENSION                      */ 04185000
*/*                                                                  */ 04186000
*                                                                  0251 04187000
*   DECLARE                                                        0251 04188000
*     1 CVTXTNT2 BASED(CVTEXT2),    /* START OF OS/VS1 - OS/VS2    0251 04189000
*                                      EXTENSION                     */ 04190000
*      2 CVTDSSV PTR(31),           /* ADDRESS OF THE DYNAMIC SUPPORT   04191000
*                                      SYSTEM (DSS) VECTOR TABLE   0251 04192000
*                                      ICB313                        */ 04193000
*       3 CVTRSV89 PTR(8),          /* RESERVED ICB313               */ 04194000
*       3 CVTDSSVA PTR(24),         /* ADDRESS OF THE DSS VECTOR   0251 04195000
*                                      TABLE ICB313                  */ 04196000
*      2 CVTNUCLS CHAR(1),          /* IDENTIFICATION OF THE NUCLEUS    04197000
*                                      MEMBER NAME ICB322            */ 04198000
*      2 CVTFLGBT BIT(8),           /* FLAG BYTE (OS/VS1) (MDC301) 0251 04199000
*                                                            @X04EP9A*/ 04200000
*       3 CVTNPE BIT(1),            /* INDICATES NON-PAGING        0251 04201000
*                                      ENVIRONMENT (VM HANDSHAKING)     04202000
*                                      (OS/VS1) (MDC302)     @X04EP9A*/ 04203000
*       3 CVTVME BIT(1),            /* INDICATES MACHINE IS OPERATING   04204000
*                                      IN VM ENVIRONMENT (OS/VS1)  0251 04205000
*                                      (MDC303)              @X04EP9A*/ 04206000
*       3 CVTRSV9C BIT(1),          /* RESERVED                      */ 04207000
*       3 CVTRSV9D BIT(1),          /* RESERVED                      */ 04208000
*       3 CVTRSV9E BIT(1),          /* RESERVED                      */ 04209000
*       3 CVTRSV9F BIT(1),          /* RESERVED                      */ 04210000
*       3 CVTRSV9G BIT(1),          /* RESERVED                      */ 04211000
*       3 CVTRSV9H BIT(1),          /* RESERVED                      */ 04212000
*      2 CVTRSV91 FIXED(15),        /* RESERVED                      */ 04213000
*      2 CVTDEBVR PTR(31),          /* ADDRESS OF BRANCH ENTRY POINT    04214000
*                                      OF DEB VALIDITY CHECK ROUTINE    04215000
*                                      (ICB380)                XM9028*/ 04216000
*      2 CVTRSV92 PTR(31),          /* RESERVED (MDC190)       YM2278*/ 04217000
*      2 CVTRSV93 PTR(31),          /* RESERVED                      */ 04218000
*      2 CVTRSV94 PTR(31),          /* RESERVED                      */ 04219000
*      2 CVTQID PTR(31),            /* SAVE AS CVTQIDA BELOW ICB381  */ 04220000
*       3 CVTRSV95 PTR(8),          /* RESERVED ICB381               */ 04221000
*       3 CVTQIDA PTR(24),          /* ADDRESS OF QUEUE            0251 04222000
*                                      IDENTIFICATION (QID) TABLE  0251 04223000
*                                      PREFIX ICB381                 */ 04224000
*      2 CVTOLTEP PTR(31),          /* POINTER TO CONTROL BLOCK    0251 04225000
*                                      CREATED BY SVC 59 TO POINT TO    04226000
*                                      PSEUDO-DEB'S ICB423           */ 04227000
*      2 CVTRSV96 FIXED(15),        /* RESERVED                      */ 04228000
*      2 CVTRSV97 FIXED(15),        /* RESERVED                      */ 04229000
*      2 CVTRSV98 PTR(31),          /* RESERVED                      */ 04230000
*      2 CVTRSV99 PTR(31),          /* RESERVED (MDC329)     @Z40AQ9A*/ 04231000
*      2 CVTSKTA PTR(31),           /* ADDRESS OF STORAGE KEY TABLE     04232000
*                                      (VM HANDSHAKING) (OS/VS1)   0251 04233000
*                                      (MDC304)              @X04EP9A*/ 04234000
*      2 CVTICB PTR(31),            /* ADDRESS OF MASS STORAGE SYSTEM   04235000
*                                      (MSS) CONTROL BLOCK (MDC305)     04236000
*                                                            @Z30LP9A*/ 04237000
*      2 CVTRV400 BIT(8),           /* RESERVED                      */ 04238000
*       3 CVTRV401 BIT(1),          /* RESERVED                      */ 04239000
*       3 CVTRV402 BIT(1),          /* RESERVED                      */ 04240000
*       3 CVTRV403 BIT(1),          /* RESERVED                      */ 04241000
*       3 CVTRV404 BIT(1),          /* RESERVED                      */ 04242000
*       3 CVTRV405 BIT(1),          /* RESERVED                      */ 04243000
*       3 CVTRV406 BIT(1),          /* RESERVED                      */ 04244000
*       3 CVTRV407 BIT(1),          /* RESERVED                      */ 04245000
*       3 CVTRV408 BIT(1),          /* RESERVED                      */ 04246000
*      2 CVTRV409 BIT(8),           /* RESERVED                      */ 04247000
*       3 CVTRV410 BIT(1),          /* RESERVED                      */ 04248000
*       3 CVTRV411 BIT(1),          /* RESERVED                      */ 04249000
*       3 CVTRV412 BIT(1),          /* RESERVED                      */ 04250000
*       3 CVTRV413 BIT(1),          /* RESERVED                      */ 04251000
*       3 CVTRV414 BIT(1),          /* RESERVED                      */ 04252000
*       3 CVTRV415 BIT(1),          /* RESERVED                      */ 04253000
*       3 CVTRV416 BIT(1),          /* RESERVED                      */ 04254000
*       3 CVTRV417 BIT(1),          /* RESERVED                      */ 04255000
*      2 CVTRV418 PTR(8),           /* RESERVED                      */ 04256000
*      2 CVTRV419 PTR(8),           /* RESERVED                      */ 04257000
*      2 CVTRV420 PTR(15),          /* RESERVED                      */ 04258000
*      2 CVTRV421 FIXED(15),        /* RESERVED                      */ 04259000
*      2 CVTRV422 FIXED(15),        /* RESERVED                      */ 04260000
*      2 CVTRV423 FIXED(15),        /* RESERVED                      */ 04261000
*      2 CVTATCVT PTR(31),          /* POINTER TO VTAM'S CVT MDC080  */ 04262000
*       3 CVTATACT BIT(1),          /* IF ON, VTAM IS ACTIVE MDC081  */ 04263000
*      2 CVTRV425 PTR(31),          /* RESERVED                      */ 04264000
*      2 CVTRV426 PTR(31),          /* RESERVED                      */ 04265000
*      2 CVTRV427 PTR(31),          /* RESERVED                      */ 04266000
*      2 CVTRV428 FIXED(31),        /* RESERVED                      */ 04267000
*      2 CVTRV429 BIT(8),           /* RESERVED                      */ 04268000
*       3 CVTRV430 BIT(1),          /* RESERVED                      */ 04269000
*       3 CVTRV431 BIT(1),          /* RESERVED                      */ 04270000
*       3 CVTRV432 BIT(1),          /* RESERVED                      */ 04271000
*       3 CVTRV433 BIT(1),          /* RESERVED                      */ 04272000
*       3 CVTRV434 BIT(1),          /* RESERVED                      */ 04273000
*       3 CVTRV435 BIT(1),          /* RESERVED                      */ 04274000
*       3 CVTRV436 BIT(1),          /* RESERVED                      */ 04275000
*       3 CVTRV437 BIT(1),          /* RESERVED                      */ 04276000
*      2 CVTRV438 BIT(8),           /* RESERVED                      */ 04277000
*       3 CVTRV439 BIT(1),          /* RESERVED                      */ 04278000
*       3 CVTRV440 BIT(1),          /* RESERVED                      */ 04279000
*       3 CVTRV441 BIT(1),          /* RESERVED                      */ 04280000
*       3 CVTRV442 BIT(1),          /* RESERVED                      */ 04281000
*       3 CVTRV443 BIT(1),          /* RESERVED                      */ 04282000
*       3 CVTRV444 BIT(1),          /* RESERVED                      */ 04283000
*       3 CVTRV445 BIT(1),          /* RESERVED                      */ 04284000
*       3 CVTRV446 BIT(1),          /* RESERVED                      */ 04285000
*      2 CVTRV447 PTR(8),           /* RESERVED                      */ 04286000
*      2 CVTRV448 PTR(8),           /* RESERVED                      */ 04287000
*      2 CVTRV449 PTR(15),          /* RESERVED                      */ 04288000
*      2 CVTRV450 FIXED(15),        /* RESERVED                      */ 04289000
*      2 CVTRV451 FIXED(15),        /* RESERVED                      */ 04290000
*      2 CVTRV452 FIXED(15),        /* RESERVED                      */ 04291000
*      2 CVTRV453 PTR(31),          /* RESERVED                      */ 04292000
*      2 CVTRV454 PTR(31),          /* RESERVED                      */ 04293000
*      2 CVTRV455 PTR(31),          /* RESERVED                      */ 04294000
*      2 CVTRV456 PTR(31),          /* RESERVED                      */ 04295000
*      2 CVTRV457 BIT(8),           /* RESERVED                      */ 04296000
*       3 CVTRV458 BIT(1),          /* RESERVED                      */ 04297000
*       3 CVTRV459 BIT(1),          /* RESERVED                      */ 04298000
*       3 CVTRV460 BIT(1),          /* RESERVED                      */ 04299000
*       3 CVTRV461 BIT(1),          /* RESERVED                      */ 04300000
*       3 CVTRV462 BIT(1),          /* RESERVED                      */ 04301000
*       3 CVTRV463 BIT(1),          /* RESERVED                      */ 04302000
*       3 CVTRV464 BIT(1),          /* RESERVED                      */ 04303000
*       3 CVTRV465 BIT(1),          /* RESERVED                      */ 04304000
*      2 CVTRV466 BIT(8),           /* RESERVED                      */ 04305000
*       3 CVTRV467 BIT(1),          /* RESERVED                      */ 04306000
*       3 CVTRV468 BIT(1),          /* RESERVED                      */ 04307000
*       3 CVTRV469 BIT(1),          /* RESERVED                      */ 04308000
*       3 CVTRV470 BIT(1),          /* RESERVED                      */ 04309000
*       3 CVTRV471 BIT(1),          /* RESERVED                      */ 04310000
*       3 CVTRV472 BIT(1),          /* RESERVED                      */ 04311000
*       3 CVTRV473 BIT(1),          /* RESERVED                      */ 04312000
*       3 CVTRV474 BIT(1),          /* RESERVED                      */ 04313000
*      2 CVTRV475 PTR(8),           /* RESERVED                      */ 04314000
*      2 CVTRV476 PTR(8),           /* RESERVED                      */ 04315000
*      2 CVTRV477 PTR(8),           /* RESERVED                      */ 04316000
*      2 CVTRV478 PTR(8),           /* RESERVED                      */ 04317000
*      2 CVTRV479 FIXED(15),        /* RESERVED                      */ 04318000
*      2 CVTRV480 PTR(31),          /* RESERVED                      */ 04319000
*      2 CVTRV481 PTR(31),          /* RESERVED                      */ 04320000
*      2 CVTRV482 PTR(31);          /* RESERVED                      */ 04321000
*/*                       CVT PREFIX                                 */ 04322000
*                                                                  0252 04323000
*   DCL                                                            0252 04324000
*     1 CVTFIX BASED(CVTPTR-256) BDY(WORD),                        0252 04325000
*      2 * CHAR(248) BDY(WORD),     /* RESERVED                      */ 04326000
*      2 * CHAR(2) BDY(WORD),       /* RESERVED                      */ 04327000
*      2 CVTMDL CHAR(2) BDY(WORD,3),/* CPU MODEL NUMBER IN SIGNLESS     04328000
*                                      PACKED DECIMAL, I.E., A MODEL    04329000
*                                      145 WOULD BE REPRESENTED AS 0252 04330000
*                                      0145 HEX                      */ 04331000
*      2 CVTRELNO CHAR(4) BDY(WORD),/* RELEASE NUMBER (EBCDIC)       */ 04332000
*       3 CVTNUMB CHAR(2) BDY(WORD),/* RELEASE NUMBER                */ 04333000
*       3 CVTLEVL CHAR(2) BDY(WORD,3);/* LEVEL NUMBER OF THIS RELEASE*/ 04334000
*/*                    END OF CVT MACRO                              */ 04335000
*                                                                  0253 04336000
*                                                                  0253 04337000
*/********************************************************************/ 04338000
*/*                                                                  */ 04339000
*/*         INCLUDE PARTITIONED DATA SET DIRECTORY ENTRY DSECT       */ 04340000
*/*                                                                  */ 04341000
*/********************************************************************/ 04342000
*/*         %INCLUDE SYSLIB(IHAPDS)                                  */ 04343000
*/* **************************************************************** */ 04344000
*/*            PARTITIONED DATA SET (PDS) DIRECTORY ENTRY            */ 04345000
*/*                                                                  */ 04346000
*/*  OS/VS2 RELEASE 3, OS/VS1 RELEASE 4, 11/19/74, LEVEL=1           */ 04347000
*/*                                                                  */ 04348000
*/*      THE PDS DIRECTORY ENTRY MAY HAVE ANY OR ALL OF THE          */ 04349000
*/*      FOLLOWING FIVE SECTIONS IN THIS ORDER --                    */ 04350000
*/*      1.    BASIC (MAY OR MAY NOT CONTAIN 2 BLDL BYTES)           */ 04351000
*/*      2.    SCATTER LOAD   - OPTIONAL                             */ 04352000
*/*      3.    ALIAS          - OPTIONAL                             */ 04353000
*/*      4.    SSI            - OPTIONAL                             */ 04354000
*/*      5.    APF            - OPTIONAL                             */ 04355000
*/*                                                                  */ 04356000
*/*  METHOD OF ACCESS                                                */ 04357000
*/*      BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */ 04358000
*/*             USING ON PDS2 GIVES ADDRESSABILITY FOR ALL SYMBOLS.  */ 04359000
*/*             THE MACRO EXPANSION WILL INCLUDE THE TWO BYTES       */ 04360000
*/*             INSERTED BY BLDL UNLESS PDSBLDL=NO IS SPECIFIED.     */ 04361000
*/*      PL/S - DCL (PDS2PTR,PDSPTRV) PTR                            */ 04362000
*/*             THE MACRO EXPANSION WILL INCLUDE THE TWO BYTES       */ 04363000
*/*             INSERTED BY BLDL UNLESS %PDSBLDL='NO' IS SPECIFIED   */ 04364000
*/*             BEFORE INCLUDE FOR MACRO.                            */ 04365000
*/*                                                                  */ 04366000
*/*             THE FOLLOWING 4 PL/S STATEMENTS SHOW HOW THE         */ 04367000
*/*             STARTING ADDRESS OF ANY OF THE FOUR OPTIONAL         */ 04368000
*/*             SECTIONS OF USER DATA MAY BE OBTAINED.               */ 04369000
*/*                                                                  */ 04370000
*/*             (1) PDSPTRV=ADDR(PDSBCEND)                           */ 04371000
*/*             (2) IF PDS2SCTR='1'B THEN PDSPTRV=PDSPTRV +          */ 04372000
*/*                 LENGTH(PDSS01)                                   */ 04373000
*/*             (3) IF PDS2ALIS='1'B THEN PDSPTRV=PDSPTRV +          */ 04374000
*/*                 LENGTH(PDSS02)                                   */ 04375000
*/*             (4) IF PDS2SSI='1'B THEN PDSPTRV=PDSPTRV +           */ 04376000
*/*                 LENGTH(PDSS03)                                   */ 04377000
*/*                                                                  */ 04378000
*/*             STATEMENT (1) GETS THE ADDRESS FOR THE START OF THE  */ 04379000
*/*             OPTIONAL SECTIONS.  TO GET THE STARTING ADDRESS OF   */ 04380000
*/*             THE SCATTER LOAD SECTION, USE STATEMENT (1).  FOR    */ 04381000
*/*             THE ALIAS SECTION, USE STATEMENTS (1) AND (2).  FOR  */ 04382000
*/*             THE SSI SECTION, USE STATEMENTS (1), (2) AND (3)     */ 04383000
*/*             AND ADD ONE TO ADDRESS IN PDSPTRV IF ADDRESS IS NOT  */ 04384000
*/*             ON A HALF-WORD BOUNDARY.  FOR THE APF SECTION, USE   */ 04385000
*/*             ALL 4 STATEMENTS.                                    */ 04386000
*/* **************************************************************** */ 04387000
*                                                                  0253 04388000
*   DECLARE                                                        0253 04389000
*     1 PDS2 BASED(PDS2PTR) BDY(WORD),                             0253 04390000
*      2 PDS2NAME CHAR(8) BDY(WORD),/* LOAD MODULE MEMBER NAME OR  0253 04391000
*                                      ALIAS                         */ 04392000
*      2 PDS2TTRP CHAR(3) BDY(WORD),/* TTR OF FIRST BLOCK OF NAMED 0253 04393000
*                                      MEMBER                        */ 04394000
*      2 PDS2CNCT PTR(8),           /* CONCATENATION NUMBER OF THE 0253 04395000
*                                      DATA SET                      */ 04396000
*      2 PDS2LIBF CHAR(1),          /* LIBRARY FLAG FIELD            */ 04397000
*      2 PDS2INDC CHAR(1),          /* INDICATOR BYTE                */ 04398000
*       3 PDS2ALIS BIT(1),          /* NAME IN THE FIRST FIELD IS AN    04399000
*                                      ALIAS                         */ 04400000
*       3 PDS2NTTR BIT(2),          /* NUMBER OF TTR'S IN THE USER 0253 04401000
*                                      DATA FIELD                    */ 04402000
*       3 PDS2LUSR BIT(5),          /* LENGTH OF USER DATA FIELD IN     04403000
*                                      HALF WORDS                    */ 04404000
*      2 PDS2TTRT CHAR(3),          /* TTR OF FIRST BLOCK OF TEXT    */ 04405000
*       3 PDS2USRD CHAR(1),         /* START OF VARIABLE LENGTH USER    04406000
*                                      DATA FIELD                    */ 04407000
*      2 PDS2ZERO CHAR(1),          /* ZERO                          */ 04408000
*      2 PDS2TTRN CHAR(3),          /* TTR OF NOTE LIST OR         0253 04409000
*                                      SCATTER/TRANSLATION TABLE.  0253 04410000
*                                      USED FOR MODULES IN SCATTER 0253 04411000
*                                      LOAD FORMAT OR OVERLAY      0253 04412000
*                                      STRUCTURE ONLY.               */ 04413000
*      2 PDS2NL PTR(8),             /* NUMBER OF ENTRIES IN NOTE LIST   04414000
*                                      FOR MODULES IN OVERLAY      0253 04415000
*                                      STRUCTURE, OTHERWISE ZERO     */ 04416000
*      2 PDS2ATR CHAR(2),           /* TWO-BYTE MODULE ATTRIBUTE   0253 04417000
*                                      FIELD                         */ 04418000
*       3 PDS2ATR1 BIT(8),          /* FIRST BYTE OF MODULE ATTRIBUTE   04419000
*                                      FIELD                         */ 04420000
*        4 PDS2RENT BIT(1),         /* REENTERABLE                   */ 04421000
*        4 PDS2REUS BIT(1),         /* REUSABLE                      */ 04422000
*        4 PDS2OVLY BIT(1),         /* IN OVERLAY STRUCTURE          */ 04423000
*        4 PDS2TEST BIT(1),         /* MODULE TO BE TESTED - TESTRAN */ 04424000
*        4 PDS2LOAD BIT(1),         /* ONLY LOADABLE                 */ 04425000
*        4 PDS2SCTR BIT(1),         /* SCATTER FORMAT                */ 04426000
*        4 PDS2EXEC BIT(1),         /* EXECUTABLE                    */ 04427000
*        4 PDS21BLK BIT(1),         /* IF ZERO, MODULE CONTAINS    0253 04428000
*                                      MULTIPLE RECORDS WITH AT LEAST   04429000
*                                      ONE BLOCK OF TEXT. --- IF ONE,   04430000
*                                      MODULE CONTAINS NO RLD ITEMS     04431000
*                                      AND ONLY ONE BLOCK OF TEXT.   */ 04432000
*       3 PDS2ATR2 BIT(8),          /* SECOND BYTE OF MODULE       0253 04433000
*                                      ATTRIBUTE FIELD               */ 04434000
*        4 PDS2FLVL BIT(1),         /* IF ZERO, MODULE CAN BE      0253 04435000
*                                      PROCESSED BY ALL LEVELS OF  0253 04436000
*                                      LINKAGE EDITOR. --- IF ONE, 0253 04437000
*                                      MODULE CAN BE PROCESSED ONLY     04438000
*                                      BY F LEVEL OF LINKAGE EDITOR. */ 04439000
*        4 PDS2ORG0 BIT(1),         /* LINKAGE EDITOR ASSIGNED ORIGIN   04440000
*                                      OF FIRST BLOCK OF TEXT IS   0253 04441000
*                                      ZERO.                         */ 04442000
*        4 PDS2EP0 BIT(1),          /* ENTRY POINT ASSIGNED BY     0253 04443000
*                                      LINKAGE EDITOR IS ZERO        */ 04444000
*        4 PDS2NRLD BIT(1),         /* MODULE CONTAINS NO RLD ITEMS  */ 04445000
*        4 PDS2NREP BIT(1),         /* MODULE CANNOT BE REPROCESSED     04446000
*                                      BY LINKAGE EDITOR             */ 04447000
*        4 PDS2TSTN BIT(1),         /* MODULE CONTAINS TESTRAN SYMBOL   04448000
*                                      CARDS                         */ 04449000
*        4 PDS2LEF BIT(1),          /* MODULE CREATED BY LINKAGE   0253 04450000
*                                      EDITOR F                      */ 04451000
*        4 PDS2REFR BIT(1),         /* REFRESHABLE MODULE            */ 04452000
*      2 PDS2STOR PTR(24) BDY(BYTE),/* TOTAL CONTIGUOUS MAIN STORAGE    04453000
*                                      REQUIREMENT OF MODULE         */ 04454000
*      2 PDS2FTBL FIXED(15) BDY(BYTE),/* LENGTH OF FIRST BLOCK OF  0253 04455000
*                                      TEXT                          */ 04456000
*      2 PDS2EPA PTR(24) BDY(BYTE), /* ENTRY POINT ADDRESS ASSOCIATED   04457000
*                                      WITH MEMBER NAME OR WITH ALIAS   04458000
*                                      NAME IF ALIAS INDICATOR IS ONE*/ 04459000
*      2 * PTR(24) BDY(BYTE),       /* LINKAGE EDITOR ASSIGNED ORIGIN   04460000
*                                      OF FIRST BLOCK OF TEXT (OS USE   04461000
*                                      OF FIELD)                     */ 04462000
*       3 PDS2FTBO CHAR(3),         /* FLAG BYTES (AOS USE OF FIELD)    04463000
*                                      ICB269                        */ 04464000
*        4 PDS2FTB1 BIT(8),         /* BYTE 1 OF PDS2FTBO ICB269     */ 04465000
*         5 PDSAOSLE BIT(1),        /* MODULE HAS BEEN PROCESSED BY     04466000
*                                      AOS LINKAGE EDITOR ICB410     */ 04467000
*         5 * BIT(1),               /* RESERVED TO INDICATE ANOTHER     04468000
*                                      EXPANSION WHEN IT BECOMES   0253 04469000
*                                      NECESSARY ICB410              */ 04470000
*         5 PDS2PAGA BIT(1),        /* PAGE ALIGNMENT REQUIRED FOR 0253 04471000
*                                      LOAD MODULE ICB410            */ 04472000
*         5 PDS2SSI BIT(1),         /* SSI INFORMATION PRESENT ICB410*/ 04473000
*         5 PDSAPFLG BIT(1),        /* INFORMATION IN PDSAPF IS VALID   04474000
*                                      ICB360                        */ 04475000
*         5 * BIT(3),               /* RESERVED                      */ 04476000
*        4 PDS2FTB2 CHAR(1),        /* BYTE 2 OF PDS2FTBO ICB269     */ 04477000
*        4 PDS2FTB3 CHAR(1),        /* BYTE 3 OF PDS2FTBO ICB269     */ 04478000
*      2 PDSBCEND CHAR(0);          /* END OF BASIC SECTION          */ 04479000
*/*      THE FOLLOWING SECTION IS FOR LOAD MODULES WITH SCATTER LOAD */ 04480000
*                                                                  0254 04481000
*   DECLARE                                                        0254 04482000
*     1 PDSS01 BASED(PDSPTRV) BDY(BYTE),                           0254 04483000
*      2 PDS2SLSZ FIXED(15) BDY(BYTE),/* NUMBER OF BYTES IN SCATTER     04484000
*                                      LIST                          */ 04485000
*      2 PDS2TTSZ FIXED(15) BDY(BYTE),/* NUMBER OF BYTES IN        0254 04486000
*                                      TRANSLATION TABLE             */ 04487000
*      2 PDS2ESDT CHAR(2),          /* IDENTIFICATION OF ESD ITEM  0254 04488000
*                                      (ESDID) OF CONTROL SECTION TO    04489000
*                                      WHICH FIRST BLOCK OF TEXT   0254 04490000
*                                      BELONGS                       */ 04491000
*      2 PDS2ESDC CHAR(2),          /* IDENTIFICATION OF ESD ITEM  0254 04492000
*                                      (ESDID) OF CONTROL SECTION  0254 04493000
*                                      CONTAINING ENTRY POINT        */ 04494000
*      2 PDSS01ND CHAR(0);          /* END OF SCATTER LOAD SECTION   */ 04495000
*/*      THE FOLLOWING SECTION IS FOR LOAD MODULES WITH ALIAS NAMES  */ 04496000
*                                                                  0255 04497000
*   DECLARE                                                        0255 04498000
*     1 PDSS02 BASED(PDSPTRV) BDY(BYTE),                           0255 04499000
*      2 PDS2EPM PTR(24) BDY(BYTE), /* ENTRY POINT FOR MEMBER NAME   */ 04500000
*      2 PDS2MNM CHAR(8),           /* MEMBER NAME OF LOAD MODULE. 0255 04501000
*                                      WHEN THE FIRST FIELD        0255 04502000
*                                      (PDS2NAME) IS AN ALIAS NAME,     04503000
*                                      THIS FIELD CONTAINS THE     0255 04504000
*                                      ORIGINAL NAME OF THE MEMBER 0255 04505000
*                                      EVEN AFTER THE MEMBER HAS BEEN   04506000
*                                      RENAMED. (MDC302)     @Z30AQ9A*/ 04507000
*      2 PDSS02ND CHAR(0);          /* END OF ALIAS SECTION          */ 04508000
*/*      THE FOLLOWING SECTION IS FOR SSI INFORMATION AND IS ON      */ 04509000
*/*      A HALF-WORD BOUNDARY                                        */ 04510000
*                                                                  0256 04511000
*   DECLARE                                                        0256 04512000
*     1 PDSS03 BASED(PDSPTRV) BDY(HWORD),                          0256 04513000
*      2 PDSSSIWD CHAR(4),          /* SSI INFORMATION WORD          */ 04514000
*       3 PDSCHLVL PTR(8),          /* CHANGE LEVEL OF MEMBER        */ 04515000
*       3 PDSSSIFB BIT(8),          /* SSI FLAG BYTE                 */ 04516000
*        4 * BIT(1),                /* RESERVED                      */ 04517000
*        4 PDSFORCE BIT(1),         /* A FORCE CONTROL CARD WAS USED    04518000
*                                      WHEN EXECUTING THE IHGUAP   0256 04519000
*                                      PROGRAM                       */ 04520000
*        4 PDSUSRCH BIT(1),         /* A CHANGE WAS MADE TO MEMBER BY   04521000
*                                      THE INSTALLATION, AS OPPOSED     04522000
*                                      TO AN IBM-DISTRIBUTED CHANGE  */ 04523000
*        4 PDSEMFIX BIT(1),         /* SET WHEN AN EMERGENCY       0256 04524000
*                                      IBM-AUTHORIZED PROGRAM 'FIX'     04525000
*                                      IS MADE, AS OPPOSED TO CHANGES   04526000
*                                      THAT ARE INCLUDED IN AN IBM-     04527000
*                                      DISTRIBUTED MAINTENANCE     0256 04528000
*                                      PACKAGE                       */ 04529000
*        4 PDSDEPCH BIT(1),         /* A CHANGE MADE TO THE MEMBER IS   04530000
*                                      DEPENDENT UPON A CHANGE MADE     04531000
*                                      TO SOME OTHER MEMBER IN SYSTEM*/ 04532000
*        4 PDSSYSGN BIT(2),         /* FLAGS THAT INDICATE WHETHER OR   04533000
*                                      NOT A CHANGE TO THE MEMBER  0256 04534000
*                                      WILL NECESSITATE A PARTIAL OR    04535000
*                                      COMPLETE REGENERATION OF THE     04536000
*                                      SYSTEM                        */ 04537000
*        4 PDSIBMMB BIT(1),         /* MEMBER IS SUPPLIED BY IBM     */ 04538000
*       3 PDSMBRSN CHAR(2),         /* MEMBER SERIAL NUMBER          */ 04539000
*      2 PDSS03ND CHAR(0);          /* END OF SSI SECTION            */ 04540000
*/*      THE FOLLOWING SECTION IS FOR APF INFORMATION          ICB360*/ 04541000
*                                                                  0257 04542000
*   DECLARE                                                        0257 04543000
*     1 PDSS04 BASED(PDSPTRV) BDY(BYTE),                           0257 04544000
*      2 PDSAPF CHAR(2),            /* PROGRAM AUTHORIZATION FACILITY   04545000
*                                      (APF) FIELD ICB360            */ 04546000
*       3 PDSAPFCT PTR(8),          /* LENGTH OF PROGRAM           0257 04547000
*                                      AUTHORIZATION CODE (PDSAPFAC)    04548000
*                                      IN BYTES ICB360               */ 04549000
*       3 PDSAPFAC CHAR(1),         /* PROGRAM AUTHORIZATION CODE  0257 04550000
*                                      ICB360                        */ 04551000
*      2 PDSS04ND CHAR(0);          /* END OF APF SECTION ICB360     */ 04552000
*                                                                  0258 04553000
*/********************************************************************/ 04554000
*/*                                                                  */ 04555000
*/*         INCLUDE SECONDARY COMMUNICATIONS VECTOR TABLE DSECT      */ 04556000
*/*                                                                  */ 04557000
*/********************************************************************/ 04558000
*/*         %INCLUDE SYSLIB(IHASCVT)                                 */ 04559000
*/*                                                                  */ 04560000
*/*      OS/VS2 RELEASE 3, 05/22/74, LEVEL=1                         */ 04561000
*/*                                                                  */ 04562000
*/*  METHOD OF ACCESS                                                */ 04563000
*/*      BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */ 04564000
*/*             USING ON SCVTSECT GIVES ADDRESSABILITY FOR ALL       */ 04565000
*/*             SYMBOLS.                                             */ 04566000
*/*      PL/S - DCL SCVTSPTR PTR                                     */ 04567000
*/*                                                                  */ 04568000
*/*  F.E.'S                                                          */ 04569000
*/*      MICROFICHE LISTING - IHASCVT                                */ 04570000
*/*                                                                  */ 04571000
*/*  DEVELOPERS                                                      */ 04572000
*/*      BAL LISTING  - SPECIFY LIST=YES ON MACRO CALL               */ 04573000
*/*                                                                  */ 04574000
*/*      FOR INTEGRATION, A LISTING MUST NOT BE REQUESTED UNLESS     */ 04575000
*/*      YOUR MODULE CREATES THE CSECT.                              */ 04576000
*                                                                  0258 04577000
*   DECLARE                                                        0258 04578000
*     1 SCVTSECT BASED(SCVTSPTR) BDY(WORD),                        0258 04579000
*      2 SCVTPGTM PTR(31),          /* ADDR OF EOT TIMER PURGE     0258 04580000
*                                      ROUTINE                       */ 04581000
*      2 SCVTPGWR PTR(31),          /* ADDRESS OF WTO/WTOR RESOURCE     04582000
*                                      MANAGER. INITIALLY CONTAINS 0258 04583000
*                                      ADDRESS OF BR 14. CHANGED TO     04584000
*                                      IEECVPRG (MODULE IEAVMED2) BY    04585000
*                                      COMMUNICATIONS TASK         0258 04586000
*                                      INITIALIZATION (IEAVVINT).  0258 04587000
*                                      MDC013                        */ 04588000
*      2 SCVTSPET PTR(31),          /* ADDR OF EOT SUBPOOL RELEASE   */ 04589000
*      2 SCVTBR14 CHAR(2),          /* RETURN TO CALLER (BR 14)    0258 04590000
*                                      MDC014                        */ 04591000
*      2 * CHAR(2),                 /* RESERVED MDC014               */ 04592000
*      2 * PTR(31),                 /* ** SCVTERAS FIELD UNUSED IN 0258 04593000
*                                      OS/VS2 RELEASE 2 ** (MDC015)     04594000
*                                                              YM4043*/ 04595000
*      2 * PTR(31),                 /* ** SCVTQCBO FIELD UNUSED IN 0258 04596000
*                                      OS/VS2 REL 2 ** MDC006        */ 04597000
*      2 * PTR(31),                 /* ** SCVTPGEQ FIELD UNUSED IN 0258 04598000
*                                      OS/VS2 REL 2 ** MDC007        */ 04599000
*      2 SCVTRMBR PTR(31),          /* ADDR OF REGMAIN BRANCH ENTRY  */ 04600000
*      2 * PTR(31),                 /* ** SCVTPGIO FIELD UNUSED IN 0258 04601000
*                                      OS/VS2 RELEASE 2 ** (MDC016)     04602000
*                                                              YM4044*/ 04603000
*      2 SCVTRACE PTR(31),          /* ADDR OF POINTER TO TRACE    0258 04604000
*                                      ROUTINE                       */ 04605000
*      2 * PTR(31),                 /* ** SCVTTASW FIELD UNUSED IN 0258 04606000
*                                      OS/VS2 RELEASE 2 ** (MDC017)     04607000
*                                                              YM4044*/ 04608000
*      2 SCVTCDCL PTR(31),          /* ADDR OF CDCONTROL IN LINK     */ 04609000
*      2 SCVTLFRM PTR(31),          /* LIST FORMAT FREEMAIN BRANCH 0258 04610000
*                                      ENT PT                        */ 04611000
*      2 * PTR(31),                 /* ** SCVTPABL FIELD UNUSED IN 0258 04612000
*                                      OS/VS2 RELEASE 2 ** (MDC018)     04613000
*                                                              YM4044*/ 04614000
*      2 * PTR(31),                 /* ** SCVTDQTC FIELD UNUSED IN 0258 04615000
*                                      OS/VS2 RELEASE 2 ** (MDC019)     04616000
*                                                              YM4044*/ 04617000
*      2 SCVTHSKP PTR(31),          /* ADDR OF CDHKEEP IN EOT        */ 04618000
*      2 SCVTRPTR PTR(31),          /* ADDR OF TRACE TABLE POINTERS  */ 04619000
*      2 SCVTGMBR PTR(31),          /* LIST FORMAT GETMAIN BRANCH ENT   04620000
*                                      PT                            */ 04621000
*      2 * PTR(31),                 /* ** SCVTAUCT FIELD UNUSED IN 0258 04622000
*                                      VS2 **                        */ 04623000
*      2 * PTR(31),                 /* ** SCVTROCT FIELD UNUSED IN 0258 04624000
*                                      VS2 **                        */ 04625000
*      2 * PTR(31),                 /* ** SCVTROQ FIELD UNUSED IN VS2   04626000
*                                      **                            */ 04627000
*      2 * PTR(31),                 /* ** SCVTRIRB FIELD UNUSED IN 0258 04628000
*                                      VS2 **                        */ 04629000
*      2 * PTR(31),                 /* ** SCVTRTCB FIELD UNUSED IN 0258 04630000
*                                      VS2 **                        */ 04631000
*      2 SCVTCOMM PTR(31),          /* ADDR OF COMM TASK ROUTINE   0258 04632000
*                                      ICB408                        */ 04633000
*      2 * PTR(31),                 /* ** SCVTABLK FIELD UNUSED IN 0258 04634000
*                                      VS2 **                  YM2705*/ 04635000
*      2 * PTR(31),                 /* ** SCVTNFND FIELD UNUSED IN 0258 04636000
*                                      VS2 **                        */ 04637000
*      2 * PTR(31),                 /* ** SCVTRMTC FIELD UNUSED IN 0258 04638000
*                                      OS/VS2 REL 2 ** MDC003        */ 04639000
*      2 * PTR(31),                 /* ** SCVTMSSQ FIELD UNUSED IN 0258 04640000
*                                      OS/VS2 REL 2 ** MDC002        */ 04641000
*      2 SCVTCTCB PTR(31),          /* ADDR OF COMM TASK TCB         */ 04642000
*      2 * PTR(31),                 /* ** SCVTETCB FIELD UNUSED IN 0258 04643000
*                                      OS/VS2 REL 2 ** MDC008        */ 04644000
*      2 SCVTRXLQ PTR(31),          /* ADDR OF RECOVERY EXTENT LIST  */ 04645000
*      2 * PTR(31),                 /* ** SCVTRQND FIELD UNUSED IN 0258 04646000
*                                      OS/VS2 RELEASE 2 ** (MDC020)     04647000
*                                                              YM4044*/ 04648000
*      2 * PTR(31),                 /* ** SCVTTAR FIELD UNUSED IN VS2   04649000
*                                      **                            */ 04650000
*      2 SCVTSVCT PTR(31),          /* ORIGIN OF SVC TABLE           */ 04651000
*      2 * PTR(31),                 /* ** SCVTSTXP FIELD UNUSED IN 0258 04652000
*                                      OS/VS2 RELEASE 3 (MDC300)   0258 04653000
*                                                            @Y30HP9A*/ 04654000
*      2 SCVTTQE PTR(31),           /* ADDR OF TSO SUBSYSTEM'S TQE   */ 04655000
*      2 * PTR(31),                 /* ** SCVTRMSV FIELD UNUSED IN 0258 04656000
*                                      OS/VS2 REL 2 ** MDC004        */ 04657000
*      2 SCVTSTAT PTR(31),          /* ADDR OF SVC STATUS ROUTINE  0258 04658000
*                                      (IGC07902) ICB339             */ 04659000
*      2 SCVTQCBR PTR(31),          /* BRANCH ENTRY POINT TO       0258 04660000
*                                      GETMAIN/FREEMAIN QUICKCELL  0258 04661000
*                                      ROUTINE ICB339                */ 04662000
*      2 * PTR(31),                 /* ** SCVTABBR FIELD UNUSED IN 0258 04663000
*                                      OS/VS2 REL 2 ** MDC001        */ 04664000
*      2 * PTR(31),                 /* ** SCVTAPIO FIELD UNUSED IN 0258 04665000
*                                      OS/VS2 RELEASE 2 ** (MDC021)     04666000
*                                                              YM4044*/ 04667000
*      2 SCVTPTRM PTR(31),          /* ADDRESS OF REAL STORAGE     0258 04668000
*                                      MANAGER (RSM) TERMINATION   0258 04669000
*                                      RESOURCE MANAGER ROUTINE THAT    04670000
*                                      QUIESCES PAGING I/O AND PGFIX    04671000
*                                      REQUESTS MDC009               */ 04672000
*      2 * PTR(31),                 /* ** SCVTHOOK FIELD UNUSED IN 0258 04673000
*                                      OS/VS2 REL 2 ** MDC010        */ 04674000
*      2 SCVTPIQE PTR(31),          /* ADDRESS OF RESIDENT SUBROUTINE   04675000
*                                      (IEADQIQE) IN EOT TO REMOVE 0258 04676000
*                                      IQE'S FROM ASYNCHRONOUS EXIT     04677000
*                                      QUEUE ICB378                  */ 04678000
*      2 * PTR(31),                 /* ** SCVTTMBR FIELD UNUSED IN 0258 04679000
*                                      OS/VS2 RELEASE 2 ** (MDC022)     04680000
*                                                              YM4044*/ 04681000
*      2 * PTR(31);                 /* ** SCVTFOMG FIELD UNUSED IN 0258 04682000
*                                      OS/VS2 REL 2 ** MDC011        */ 04683000
*                                                                  0259 04684000
*/********************************************************************/ 04685000
*/*                                                                  */ 04686000
*/*         INCLUDE TASK CONTROL BLOCK DSECT                         */ 04687000
*/*                                                                  */ 04688000
*/********************************************************************/ 04689000
*/*         %INCLUDE SYSLIB(IKJTCB)                                  */ 04690000
*/*                                                                  */ 04691000
*/*            TASK CONTROL BLOCK                                    */ 04692000
*/*                                                                  */ 04693000
*/*  OS/VS2 RELEASE 4, 10/15/75, LEVEL=3                             */ 04694000
*/*                                                                  */ 04695000
*/*  METHOD OF ACCESS                                                */ 04696000
*/*      BAL  - A DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.    */ 04697000
*/*             USING ON TCBFIX GIVES ADDRESSABILITY FOR ALL SYMBOLS */ 04698000
*/*             IN PREFIX AND TCB PROPER.  TO GET ADDRESSABILITY FOR */ 04699000
*/*             THE OS/VS1 - OS/VS2 COMMON EXTENSION, YOU SHOULD     */ 04700000
*/*             CODE                                                 */ 04701000
*/*                                                                  */ 04702000
*/*             L     REG,TCBEXT2                                    */ 04703000
*/*             USING TCBXTNT2,REG                                   */ 04704000
*/*             WHERE REG IS ANY REGISTER OTHER THAN ZERO.           */ 04705000
*/*                                                                  */ 04706000
*/*             THIS MACRO ASSUMES A DEFAULT OF SYS=AOS2 WHICH MEANS */ 04707000
*/*             A MAPPING OF AN OS/VS2 TCB IS DESIRED.  IF A MAPPING */ 04708000
*/*             OF AN OS/VS1 TCB IS DESIRED, PUT SYS=AOS1 AS A       */ 04709000
*/*             PARAMETER ON THE MACRO CALL.  IF A MAPPING OF THE    */ 04710000
*/*             TCB FOR BOTH OS/VS1 AND OS/VS2 IS DESIRED, PUT       */ 04711000
*/*             SYS=BOTH AS A PARAMETER.                             */ 04712000
*/*                                                                  */ 04713000
*/*      PL/S - DCL TCBPTR PTR                                       */ 04714000
*/*                                                                  */ 04715000
*/*             THIS MACRO ASSUMES IT IS MAPPING AN OS/VS2 TCB.  IF  */ 04716000
*/*             AN OS/VS1 TCB MAPPING IS DESIRED, SPECIFY            */ 04717000
*/*             %TCBSYSTM='AOS1' OR IF A MAPPING OF THE TCB FOR      */ 04718000
*/*             BOTH OS/VS1 AND OS/VS2 IS DESIRED, SPECIFY           */ 04719000
*/*             %TCBSYSTM='BOTH' BEFORE THE INCLUDE FOR THIS MACRO.  */ 04720000
*/*             DO NOT SET TCBSYSTM TO 'AOS2' BECAUSE NULL MEANS     */ 04721000
*/*             OS/VS2.                                              */ 04722000
*/*                                                                  */ 04723000
*/*             MACRO VARIABLE TCBLEN IS SET TO THE LENGTH OF THE    */ 04724000
*/*             TCB INCLUDING THE PREFIX.  TCBLEN IS VALID IF        */ 04725000
*/*             TCBSYSTM IS 'AOS1' OR '' (OS/VS2), BUT IT IS NOT     */ 04726000
*/*             VALID IF TCBSYSTM='BOTH'.                            */ 04727000
*/*                                                                  */ 04728000
*/*  F.E.'S                                                          */ 04729000
*/*      MICROFICHE LISTING - IKJTCB                                 */ 04730000
*/*                                                                  */ 04731000
*/*  DEVELOPERS                                                      */ 04732000
*/*      BAL LISTING  - SPECIFY LIST=YES ON MACRO CALL.              */ 04733000
*/*      PL/S LISTING - SPECIFY %IHALIST='YES' BEFORE INCLUDE.       */ 04734000
*/*                                                                  */ 04735000
*/*      FOR INTEGRATION, A LISTING SHOULD NOT BE REQUESTED.         */ 04736000
*                                                                  0259 04737000
*                                                                  0259 04738000
*/*            TCB PREFIX                                            */ 04739000
*                                                                  0259 04740000
*   DECLARE                                                        0259 04741000
*     1 TCBFIX BASED(TCBPTR-32) BDY(DWORD),                        0259 04742000
*      2 TCBFRS CHAR(32) BDY(DWORD),/* FLOATING POINT REGISTER SAVE     04743000
*                                      AREA                          */ 04744000
*       3 TCBFRS0 CHAR(8) BDY(DWORD),/* SAVE AREA FOR FLOATING POINT    04745000
*                                      REGISTER 0                    */ 04746000
*       3 TCBFRS2 CHAR(8) BDY(DWORD),/* SAVE AREA FOR FLOATING POINT    04747000
*                                      REGISTER 2                    */ 04748000
*       3 TCBFRS4 CHAR(8) BDY(DWORD),/* SAVE AREA FOR FLOATING POINT    04749000
*                                      REGISTER 4                    */ 04750000
*       3 TCBFRS6 CHAR(8) BDY(DWORD);/* SAVE AREA FOR FLOATING POINT    04751000
*                                      REGISTER 6                    */ 04752000
*/*            TCB PROPER                                            */ 04753000
*                                                                  0260 04754000
*   DECLARE                                                        0260 04755000
*     1 TCB BASED(TCBPTR) BDY(DWORD),                              0260 04756000
*      2 TCBRBP PTR(31),            /* ADDRESS OF THE RB FOR       0260 04757000
*                                      EXECUTING PROGRAM             */ 04758000
*      2 TCBPIE PTR(31),            /* ADDRESS OF SPIE CONTROL AREA.    04759000
*                                      THE FIRST WORD OF THIS AREA 0260 04760000
*                                      CONTAINS THE PROGRAM INTERRUPT   04761000
*                                      ELEMENT (PIE) ADDRESS. MDC024 */ 04762000
*       3 TCBPMASK CHAR(1),         /* SPIE BITS                     */ 04763000
*        4 * BIT(4),                /* RESERVED                      */ 04764000
*        4 TCBPM BIT(4),            /* PROGRAM MASK AT TIME OF SPIE     04765000
*                                      INITIATION. MASK RESTORED AT     04766000
*                                      TIME OF SPIE NULLIFICATION.   */ 04767000
*       3 TCBPIEA PTR(24),          /* SAME AS TCBPIE ABOVE          */ 04768000
*      2 TCBDEB PTR(31),            /* ADDRESS OF THE DEB QUEUE      */ 04769000
*      2 TCBTIO PTR(31),            /* ADDRESS OF THE TASK I/O TABLE    04770000
*                                      (TIOT)                        */ 04771000
*      2 TCBCMP CHAR(4) BDY(WORD),  /* TASK COMPLETION CODE AND    0260 04772000
*                                      INDICATORS                    */ 04773000
*       3 TCBCMPF CHAR(1),          /* INDICATOR FLAGS               */ 04774000
*        4 TCBCREQ BIT(1),          /* A DUMP HAS BEEN REQUESTED     */ 04775000
*        4 TCBCSTEP BIT(1),         /* A STEP ABEND HAS BEEN       0260 04776000
*                                      REQUESTED                     */ 04777000
*        4 TCBCPP BIT(1),           /* SOME PROBLEM PROGRAM STORAGE     04778000
*                                      WAS OVERLAID BY THE SECOND  0260 04779000
*                                      LOAD OF ABEND. A FIRST LOAD 0260 04780000
*                                      OVERLAY IS INDICATED IN     0260 04781000
*                                      TCBFLGS FIELD (OFFSET 29    0260 04782000
*                                      DECIMAL) (OS/VS1) MDC054      */ 04783000
*         5 TCBDMPO BIT(1),         /* DUMP OPTIONS WERE PROVIDED ON    04784000
*                                      CALLRTM OR SETRP MACRO      0260 04785000
*                                      (OS/VS2) MDC060               */ 04786000
*        4 TCBSTCC BIT(1),          /* COMPLETION CODE IS NOT TO BE     04787000
*                                      STORED IN TCBCMPC (OFFSET 17     04788000
*                                      DECIMAL) IF AN ABEND IS     0260 04789000
*                                      ENCOUNTERED. THIS IS TO     0260 04790000
*                                      PREVENT AN OVERLAY OF THE   0260 04791000
*                                      ORIGINAL COMPLETION CODE.   0260 04792000
*                                      (OS/VS1) MDC055               */ 04793000
*         5 TCBNOCC BIT(1),         /* A COMPLETION CODE WAS NOT   0260 04794000
*                                      PROVIDED ON CALLRTM MACRO. A     04795000
*                                      DEFAULT CODE IS BEING USED. 0260 04796000
*                                      (OS/VS2) MDC061               */ 04797000
*        4 TCBCDBL BIT(1),          /* A DOUBLE ABEND HAS OCCURRED 0260 04798000
*                                      (OS/VS1) MDC056               */ 04799000
*         5 TCBCASID BIT(1),        /* ABEND WAS SCHEDULED VIA CROSS    04800000
*                                      MEMORY ABTERM (OS/VS2) MDC062 */ 04801000
*        4 TCBCWTO BIT(1),          /* A DUMP MESSAGE (WTO) IS TO BE    04802000
*                                      ISSUED TO THE OPERATOR      0260 04803000
*                                      (OS/VS1) MDC057               */ 04804000
*         5 TCBRV316 BIT(1),        /* RESERVED FOR CALLRTM FLAG   0260 04805000
*                                      (OS/VS2) MDC063               */ 04806000
*        4 TCBCIND BIT(1),          /* ABEND TO OUTPUT AN INDICATIVE    04807000
*                                      DUMP (OS/VS1) (MDC303)      0260 04808000
*                                                            @X04DA9A*/ 04809000
*         5 TCBRV317 BIT(1),        /* RESERVED FOR CALLRTM FLAG   0260 04810000
*                                      (OS/VS2) MDC063               */ 04811000
*        4 TCBCMSG BIT(1),          /* AN ABEND MESSAGE IS PROVIDED     04812000
*                                      TO BE PRINTED BY ABDUMP     0260 04813000
*                                      (OS/VS1) MDC059               */ 04814000
*         5 TCBRV318 BIT(1),        /* RESERVED FOR CALLRTM FLAG   0260 04815000
*                                      (OS/VS2) MDC063               */ 04816000
*       3 TCBCMPC CHAR(3),          /* SYSTEM COMPLETION CODE IN   0260 04817000
*                                      FIRST 12 BITS, USER COMPLETION   04818000
*                                      CODE IN LAST 12 BITS          */ 04819000
*      2 TCBTRN PTR(31),            /* ADDRESS OF TESTRAN CONTROL  0260 04820000
*                                      CORE TABLE                    */ 04821000
*       3 TCBABF CHAR(1),           /* FLAG BYTE                     */ 04822000
*        4 TCBMOD91 BIT(1),         /* BOTH TESTRAN AND DECIMAL    0260 04823000
*                                      SIMULATOR ON A MOD 91         */ 04824000
*        4 TCBNOCHK BIT(1),         /* SUPPRESS TAKING CHECKPOINTS 0260 04825000
*                                      FOR THIS STEP (JOB STEP TCB)  */ 04826000
*        4 TCBGRPH BIT(1),          /* THIS IS A GRAPHICS FOREGROUND    04827000
*                                      JOB OR THE GRAPHIC JOB      0260 04828000
*                                      PROCESSOR                     */ 04829000
*        4 TCBRSV01 BIT(1),         /* RESERVED                      */ 04830000
*        4 TCBTCPP BIT(1),          /* TCAM POST-PENDING (RORI)      */ 04831000
*        4 TCBTCP BIT(1),           /* TEST TASK - USED BY TEST SVC  */ 04832000
*        4 TCBOLTEP BIT(1),         /* OLTEP FUNCTIONS REQUIRE     0260 04833000
*                                      CLEANUP BEFORE ABNORMAL     0260 04834000
*                                      TERMINATION CAN BE INVOKED    */ 04835000
*        4 TCBRSV02 BIT(1),         /* RESERVED                      */ 04836000
*       3 TCBTRNB PTR(24),          /* ADDRESS OF TESTRAN CONTROL  0260 04837000
*                                      CORE TABLE                    */ 04838000
*      2 TCBMSS PTR(31),            /* FOR JOB STEP TCB, ADDRESS OF     04839000
*                                      THE BOUNDARY BOX. FOR SUBTASK    04840000
*                                      TCB, ADDRESS OF THE GOTTEN  0260 04841000
*                                      SUBTASK AREA QUEUE ELEMENT  0260 04842000
*                                      (GQE). A GQE IS PRESENT ONLY     04843000
*                                      IF THE SYSTEM HAS ISSUED A  0260 04844000
*                                      GETMAIN MACRO INSTRUCTION FOR    04845000
*                                      THE SPACE. (OS/VS1) ADDRESS OF   04846000
*                                      LAST SPQE ON MSS QUEUE      0260 04847000
*                                      (OS/VS2)                      */ 04848000
*       3 TCBRSV03 PTR(8),          /* ** TCBNROC FIELD UNUSED IN  0260 04849000
*                                      OS/VS **                      */ 04850000
*       3 TCBMSSB PTR(24),          /* SAME AS TCBMSS ABOVE          */ 04851000
*      2 TCBPKF CHAR(1),            /* STORAGE PROTECTION KEY FOR  0260 04852000
*                                      THIS TASK. IF THERE IS NO   0260 04853000
*                                      STORAGE PROTECTION, ALL BITS     04854000
*                                      ARE ZERO.                     */ 04855000
*       3 TCBFLAG BIT(4),           /* STORAGE PROTECTION KEY        */ 04856000
*       3 TCBZERO BIT(4),           /* MUST BE ZERO                  */ 04857000
*      2 TCBFLGS CHAR(5),           /* FLAG BYTE FIELDS              */ 04858000
*       3 TCBFLGS1 CHAR(1),         /* FIRST TCB FLAG BYTE           */ 04859000
*        4 TCBFA BIT(1),            /* ABNORMAL TERMINATION IN     0260 04860000
*                                      PROGRESS                      */ 04861000
*        4 TCBFE BIT(1),            /* NORMAL TERMINATION IN PROGRESS*/ 04862000
*        4 TCBFERA BIT(1),          /* ENTER ABEND ERASE ROUTINE WHEN   04863000
*                                      IN CONTROL AGAIN (OS/VS2)     */ 04864000
*        4 TCBNONPR BIT(1),         /* TASK IS NON-PREEMPTABLE     0260 04865000
*                                      (OS/VS2) (MDC320)     @Z40FP9A*/ 04866000
*        4 TCBPDUMP BIT(1),         /* PREVENT DUMP INDICATOR      0260 04867000
*                                      (OS/VS2)                      */ 04868000
*        4 TCBFT BIT(1),            /* TOP TASK IN TREE BEING      0260 04869000
*                                      ABTERMED (OS/VS2)             */ 04870000
*        4 TCBFS BIT(1),            /* ABTERM DUMP COMPLETED (OS/VS2)   04871000
*                                      PROBLEM PROGRAM STORAGE HAS 0260 04872000
*                                      BEEN OVERLAID TO PROCESS ABEND   04873000
*                                      (OS/VS1)                      */ 04874000
*        4 TCBFX BIT(1),            /* PROHIBIT QUEUEING OF        0260 04875000
*                                      ASYNCHRONOUS EXITS FOR THIS 0260 04876000
*                                      TASK                          */ 04877000
*       3 TCBFLGS2 CHAR(1),         /* SECOND FLAG BYTE              */ 04878000
*        4 TCBFOINP BIT(1),         /* THE TASK IS ABENDING AND IS IN   04879000
*                                      THE PROCESS OF (1) OPEN FOR 0260 04880000
*                                      DUMP DATA SET PROCESSING, (2)    04881000
*                                      CLOSE FOR USER DATA SET OR (3)   04882000
*                                      PURGE FOR ENQ'ED RESOURCES. 0260 04883000
*                                      THIS BIT IS USED IN         0260 04884000
*                                      CONJUNCTION WITH TCBSTACK.  0260 04885000
*                                      (OS/VS2) ICB374               */ 04886000
*        4 TCBFSTI BIT(1),          /* SECOND JOB STEP INTERVAL HAS     04887000
*                                      EXPIRED (OS/VS2 INITIATOR TCB)*/ 04888000
*        4 TCBFABOP BIT(1),         /* IF 1, THE SYSABEND DUMP DATA     04889000
*                                      SET HAS BEEN OPENED FOR ABEND.   04890000
*                                      IF 0, THE SYSUDUMP DUMP DATA     04891000
*                                      SET WAS OPENED. THIS BIT IS 0260 04892000
*                                      ONLY USED FOR THE JOB STEP TCB   04893000
*                                      AND IS USED IN CONJUNCTION  0260 04894000
*                                      WITH TCBFDSOP BIT. (OS/VS2) 0260 04895000
*                                      (ICB482)                YM0651*/ 04896000
*        4 TCBFSMC BIT(1),          /* TASK HAS ISSUED A SYSTEM-   0260 04897000
*                                      MUST-COMPLETE AND SET ALL   0260 04898000
*                                      OTHER TASKS IN THE SYSTEM   0260 04899000
*                                      NON-DISPATCHABLE              */ 04900000
*        4 TCBFJMC BIT(1),          /* TASK HAS ISSUED A STEP-MUST-     04901000
*                                      COMPLETE AND TURNED OFF ALL 0260 04902000
*                                      OTHER TASKS IN THE STEP       */ 04903000
*        4 TCBFDSOP BIT(1),         /* SYSABEND OPEN FOR JOB STEP  0260 04904000
*                                      (OS/VS2)                      */ 04905000
*        4 TCBFETXR BIT(1),         /* ETXR TO BE SCHEDULED          */ 04906000
*        4 TCBFTS BIT(1),           /* THIS TASK IS A MEMBER OF A  0260 04907000
*                                      TIME-SLICED GROUP             */ 04908000
*       3 TCBFLGS3 CHAR(1),         /* THIRD FLAG BYTE               */ 04909000
*        4 TCBFSM BIT(1),           /* ALL PSW'S IN SUPERVISOR STATE    04910000
*                                      (OS/VS2)                      */ 04911000
*        4 TCBADINP BIT(1),         /* USED IN CONJUNCTION WITH    0260 04912000
*                                      TCBONDSP. FLAG INDICATING THAT   04913000
*                                      ABDUMP IS CURRENTLY PROCESSING   04914000
*                                      FOR SOME TASK IN JOB STEP. A     04915000
*                                      HIGHER LEVEL TASK IS NOT    0260 04916000
*                                      ALLOWED TO ENTER MAINLINE   0260 04917000
*                                      ABEND PROCESSING IF THIS BIT     04918000
*                                      IS SET IN JOB STEP TCB UNLESS    04919000
*                                      JOB STEP TASK IS FAILING. BIT    04920000
*                                      SET ONLY IN JOB STEP TCB AND     04921000
*                                      TASK INVOKING ABDUMP. (OS/VS2)*/ 04922000
*        4 TCBABTRM BIT(1),         /* ABTERM BIT TO PREVENT MULTIPLE   04923000
*                                      ABENDS (OS/VS2)               */ 04924000
*        4 TCBABGM BIT(1),          /* GETMAIN IS TO DEFAULT LSQA  0260 04925000
*                                      REQUESTS TO SQA REQUESTS WHEN    04926000
*                                      REQUEST CANNOT BE SATISFIED 0260 04927000
*                                      FROM LSQA (OS/VS2)            */ 04928000
*        4 TCBRSV06 BIT(1),         /* RESERVED (OS/VS2)             */ 04929000
*        4 TCBRSV07 BIT(1),         /* RESERVED (OS/VS2)             */ 04930000
*        4 TCBRSV08 BIT(1),         /* RESERVED (OS/VS2)             */ 04931000
*        4 TCBDWSTA BIT(1),         /* TASK WAS DETATCHED WITH     0260 04932000
*                                      STAE=YES OPTION (OS/VS2)    0260 04933000
*                                      ICB315                        */ 04934000
*       3 TCBFLGS4 CHAR(1),         /* NON-DISPATCHABILITY FLAGS   0260 04935000
*                                      (OS/VS2) RESERVED BYTE      0260 04936000
*                                      (OS/VS1)                      */ 04937000
*        4 TCBNDUMP BIT(1),         /* ABDUMP NON-DISPATCHABILITY  0260 04938000
*                                      INDICATOR                     */ 04939000
*        4 TCBSER BIT(1),           /* SER1 NON-DISPATCHABILITY    0260 04940000
*                                      INDICATOR                     */ 04941000
*        4 TCBRQENA BIT(1),         /* I/O RQE'S EXHAUSTED           */ 04942000
*        4 TCBHNDSP BIT(1),         /* TASK OR JOB STEP IS         0260 04943000
*                                      MOMENTARILY 'FROZEN' UNTIL THE   04944000
*                                      REQUIRED RESOURCES ARE      0260 04945000
*                                      AVAILABLE. THE BIT IS SET   0260 04946000
*                                      THROUGH THE USE OF THE      0260 04947000
*                                      'STATUS' SVC. ICB453          */ 04948000
*        4 TCBUXNDV BIT(1),         /* TASK IS TEMPORARILY         0260 04949000
*                                      NON-DISPATCHABLE BECAUSE SMF     04950000
*                                      TIME LIMIT OR SYSOUT LIMIT  0260 04951000
*                                      USER EXIT ROUTINE IS BEING  0260 04952000
*                                      EXECUTED FOR THIS STEP        */ 04953000
*        4 TCBMPCVQ BIT(1),         /* VARY OR QUIESCE IN          0260 04954000
*                                      MULTIPROCESSING SYSTEM        */ 04955000
*        4 TCBMPCND BIT(1),         /* M65 MULTIPROCESSING         0260 04956000
*                                      NON-DISPATCHABILITY INDICATOR    04957000
*                                      FOR ALL CPU'S                 */ 04958000
*        4 TCBONDSP BIT(1),         /* TASK TERMINATING AND        0260 04959000
*                                      NON-DISPATCHABLE BECAUSE    0260 04960000
*                                      EITHER OPEN FOR DUMP DATA SET    04961000
*                                      IS IN PROCESS OR CLOSE BY   0260 04962000
*                                      ABEND IS IN PROCESS           */ 04963000
*       3 TCBFLGS5 CHAR(1),         /* MORE NON-DISPATCHABILITY    0260 04964000
*                                      FLAGS. IF ANY BIT IN THIS BYTE   04965000
*                                      IS 1, THE TASK IS           0260 04966000
*                                      NON-DISPATCHABLE.             */ 04967000
*        4 TCBFC BIT(1),            /* TASK TERMINATED (OS/VS2)      */ 04968000
*        4 TCBABWF BIT(1),          /* ABNORMAL WAIT (OS/VS2)        */ 04969000
*         5 TCBUXNDF BIT(1),        /* TASK IS TEMPORARILY         0260 04970000
*                                      NON-DISPATCHABLE BECAUSE SMF     04971000
*                                      TIME LIMIT OR SYSOUT LIMIT  0260 04972000
*                                      USER EXIT ROUTINE IS BEING  0260 04973000
*                                      EXECUTED FOR THIS STEP. THIS     04974000
*                                      BIT IS SET TO 1 IN ALL TCB'S     04975000
*                                      EXCEPT JOB STEP TCB. (OS/VS1)    04976000
*                                      ICB263                        */ 04977000
*        4 TCBPAGE BIT(1),          /* TASK IS NON-DISPATCHABLE DUE     04978000
*                                      TO EXCESSIVE PAGING RATE      */ 04979000
*        4 TCBANDSP BIT(1),         /* TASK IS TEMPORARILY         0260 04980000
*                                      NON-DISPATCHABLE BECAUSE IT 0260 04981000
*                                      WAS ATTACHED UNDER THE DISP=NO   04982000
*                                      OPERAND                       */ 04983000
*        4 TCBSYS BIT(1),           /* ANOTHER TASK IS IN SYSTEM-  0260 04984000
*                                      MUST-COMPLETE STATUS OR A   0260 04985000
*                                      SUMMARY BIT FOR FIELD TCBSYSCT*/ 04986000
*        4 TCBSTP BIT(1),           /* ANOTHER TASK IN THIS JOB STEP    04987000
*                                      IS IN STEP-MUST-COMPLETE    0260 04988000
*                                      STATUS                        */ 04989000
*        4 TCBFCD1 BIT(1),          /* INITIATOR WAITING FOR REGION     04990000
*                                      (OS/VS2)                      */ 04991000
*        4 TCBPNDSP BIT(1),         /* PRIMARY NON-DISPATCHABILITY 0260 04992000
*                                      BIT. THIS BIT IS SET TO 1 IF     04993000
*                                      ANY OF THE SECONDARY        0260 04994000
*                                      NON-DISPATCHABILITY BITS    0260 04995000
*                                      (OFFSETS 173, 174, 175, 200 OR   04996000
*                                      201 DECIMAL) IS SET TO 1. THIS   04997000
*                                      BIT IS SET TO 0 IF A SECONDARY   04998000
*                                      NON-DISPATCHABILITY BIT IS SET   04999000
*                                      TO 0 AND ALL OTHER SECONDARY     05000000
*                                      NON-DISPATCHABILITY BITS ARE     05001000
*                                      0.                            */ 05002000
*      2 TCBLMP PTR(8),             /* TASK LIMIT PRIORITY (OS/VS2)     05003000
*                                      NUMBER OF RESOURCES FOR WHICH    05004000
*                                      THIS TASK IS ENQUEUED (OS/VS1)*/ 05005000
*      2 TCBDSP PTR(8),             /* DISPATCHING PRIORITY FOR THIS    05006000
*                                      TASK                          */ 05007000
*      2 TCBLLS PTR(31),            /* ADDRESS OF LAST LOAD LIST   0260 05008000
*                                      ELEMENT (LLE) IN LOAD LIST  0260 05009000
*                                      (OS/VS2) ADDRESS OF THE PREFIX   05010000
*                                      OF THE MOST RECENTLY ADDED  0260 05011000
*                                      REQUEST BLOCK (RB-8) ON THE 0260 05012000
*                                      LIST OF PROGRAMS LOADED VIA 0260 05013000
*                                      THE LOAD MACRO INSTRUCTION  0260 05014000
*                                      (OS/VS1) MDC070               */ 05015000
*      2 TCBJLB PTR(31),            /* ADDRESS OF A JOBLIB DCB       */ 05016000
*      2 TCBJPQ PTR(31),            /* ADDRESS OF LAST CDE FOR JOB 0260 05017000
*                                      PACK AREA (JPA) CONTROL QUEUE    05018000
*                                      (OS/VS2)                      */ 05019000
*        4 TCBPURGE CHAR(1),        /* PURGE FLAGS (OS/VS2)          */ 05020000
*         5 TCBJPQF BIT(1),         /* JPQ PURGE FLAG                */ 05021000
*         5 TCBRSV09 BIT(1),        /* RESERVED                      */ 05022000
*         5 TCBRSV10 BIT(1),        /* RESERVED                      */ 05023000
*         5 TCBRSV11 BIT(1),        /* RESERVED                      */ 05024000
*         5 TCBRSV12 BIT(1),        /* RESERVED                      */ 05025000
*         5 TCBRSV13 BIT(1),        /* RESERVED                      */ 05026000
*         5 TCBRSV14 BIT(1),        /* RESERVED                      */ 05027000
*         5 TCBRSV15 BIT(1),        /* RESERVED                      */ 05028000
*        4 TCBJPQB PTR(24),         /* SAME AS TCBJPQ ABOVE          */ 05029000
*      2 TCBGRS CHAR(64) BDY(WORD), /* GENERAL REGISTER SAVE AREA    */ 05030000
*       3 TCBGRS0 PTR(31),          /* SAVE AREA FOR REGISTER 0      */ 05031000
*       3 TCBGRS1 PTR(31),          /* SAVE AREA FOR REGISTER 1      */ 05032000
*       3 TCBGRS2 PTR(31),          /* SAVE AREA FOR REGISTER 2      */ 05033000
*       3 TCBGRS3 PTR(31),          /* SAVE AREA FOR REGISTER 3      */ 05034000
*       3 TCBGRS4 PTR(31),          /* SAVE AREA FOR REGISTER 4      */ 05035000
*       3 TCBGRS5 PTR(31),          /* SAVE AREA FOR REGISTER 5      */ 05036000
*       3 TCBGRS6 PTR(31),          /* SAVE AREA FOR REGISTER 6      */ 05037000
*       3 TCBGRS7 PTR(31),          /* SAVE AREA FOR REGISTER 7      */ 05038000
*       3 TCBGRS8 PTR(31),          /* SAVE AREA FOR REGISTER 8      */ 05039000
*       3 TCBGRS9 PTR(31),          /* SAVE AREA FOR REGISTER 9      */ 05040000
*       3 TCBGRS10 PTR(31),         /* SAVE AREA FOR REGISTER 10     */ 05041000
*       3 TCBGRS11 PTR(31),         /* SAVE AREA FOR REGISTER 11     */ 05042000
*       3 TCBGRS12 PTR(31),         /* SAVE AREA FOR REGISTER 12     */ 05043000
*       3 TCBGRS13 PTR(31),         /* SAVE AREA FOR REGISTER 13     */ 05044000
*       3 TCBGRS14 PTR(31),         /* SAVE AREA FOR REGISTER 14     */ 05045000
*       3 TCBGRS15 PTR(31),         /* SAVE AREA FOR REGISTER 15     */ 05046000
*      2 TCBFSA PTR(31),            /* ADDRESS OF THE FIRST PROBLEM     05047000
*                                      PROGRAM SAVE AREA             */ 05048000
*       3 TCBQEL PTR(8),            /* ENQUEUE COUNT (OS/VS2)        */ 05049000
*       3 TCBFSAB PTR(24),          /* ADDRESS OF THE FIRST PROBLEM     05050000
*                                      PROGRAM SAVE AREA             */ 05051000
*      2 TCBTCB PTR(31),            /* ADDRESS OF NEXT TCB OF LOWER     05052000
*                                      PRIORITY ON THE READY QUEUE   */ 05053000
*      2 TCBTME PTR(31),            /* ADDRESS OF THE TIMER QUEUE  0260 05054000
*                                      ELEMENT (TQE)                 */ 05055000
*       3 TCBTQET BIT(1),           /* IF ZERO, TASK TYPE TQE. IF  0260 05056000
*                                      ONE, REAL/WAIT TYPE TQE.    0260 05057000
*                                      MDC028                        */ 05058000
*      2 TCBJSTCB PTR(31),          /* ADDRESS OF FIRST JOB STEP TCB    05059000
*                                      OR OF THIS TCB IF KEY ZERO  0260 05060000
*                                      (OS/VS2)                      */ 05061000
*       3 TCBRSV16 PTR(8),          /* RESERVED                      */ 05062000
*       3 TCBJSTCA PTR(24),         /* ADDRESS OF FIRST JOB STEP TCB    05063000
*                                      OR OF THIS TCB IF KEY ZERO  0260 05064000
*                                      (OS/VS2)                      */ 05065000
*      2 TCBNTC PTR(31),            /* ADDRESS OF THE TCB FOR THE  0260 05066000
*                                      TASK PREVIOUSLY ATTACHED BY 0260 05067000
*                                      THE TASK THAT ATTACHED THIS 0260 05068000
*                                      TASK                          */ 05069000
*      2 TCBOTC PTR(31),            /* ADDRESS OF THE TCB FOR THE  0260 05070000
*                                      TASK (THE ORIGINATING TASK) 0260 05071000
*                                      THAT ATTACHED THIS TASK. THIS    05072000
*                                      FIELD IS ZERO IN THE TCB FOR A   05073000
*                                      SYSTEM TASK.                  */ 05074000
*      2 TCBLTC PTR(31),            /* ADDRESS OF THE TCB FOR THE  0260 05075000
*                                      TASK LAST ATTACHED BY THIS  0260 05076000
*                                      TASK                          */ 05077000
*      2 TCBIQE PTR(31),            /* ADDRESS OF AN INTERRUPTION  0260 05078000
*                                      QUEUE ELEMENT (IQE) FOR     0260 05079000
*                                      SCHEDULING THE ETXR ROUTINE OF   05080000
*                                      THE TASK THAT ATTACHED THIS 0260 05081000
*                                      TASK                          */ 05082000
*      2 TCBECB PTR(31),            /* ADDRESS OF THE ECB THAT WILL     05083000
*                                      BE POSTED BY THE SUPERVISOR'S    05084000
*                                      TASK TERMINATION ROUTINES WHEN   05085000
*                                      NORMAL OR ABNORMAL TERMINATION   05086000
*                                      OCCURS.                       */ 05087000
*      2 TCBTSFLG BIT(8),           /* TIME SHARING FLAGS            */ 05088000
*       3 TCBTSTSK BIT(1),          /* SWAPPED TIME SHARING TASK   0260 05089000
*                                      (OS/VS1) MDC013               */ 05090000
*        4 TCBRV300 BIT(1),         /* RESERVED (WAS TCBTSTSK)     0260 05091000
*                                      (OS/VS2) MDC013               */ 05092000
*       3 TCBSTPPR BIT(1),          /* TASK SHOULD BE MADE         0260 05093000
*                                      NON-DISPATCHABLE VIA TCBSTPP     05094000
*                                      WHEN IT IS NO LONGER RUNNING A   05095000
*                                      PRIVILEGED PROGRAM            */ 05096000
*       3 TCBATT BIT(1),            /* TASK SHOULD NOT HAVE ATTENTION   05097000
*                                      EXITS SCHEDULED ON IT BY EXIT    05098000
*                                      EFFECTOR                      */ 05099000
*       3 TCBTIOTG BIT(1),          /* PURGE TGET/TPUT AFTER       0260 05100000
*                                      ATTENTION                     */ 05101000
*       3 TCBRSV17 BIT(1),          /* RESERVED                      */ 05102000
*       3 TCBRSV18 BIT(1),          /* RESERVED                      */ 05103000
*       3 TCBDYDSP BIT(1),          /* M195 TASK IS MEMBER OF DYNAMIC   05104000
*                                      DISPATCHING GROUP ICB262      */ 05105000
*       3 TCBCPUBN BIT(1),          /* FOR M195, ZERO MEANS I/O BOUND   05106000
*                                      AND ONE MEANS CPU BOUND ICB262*/ 05107000
*      2 TCBSTPCT PTR(8),           /* NUMBER OF SETTASK STARTS WHICH   05108000
*                                      MUST BE ISSUED BEFORE TASK IS    05109000
*                                      MADE DISPATCHABLE - FIELD NOT    05110000
*                                      RESTRICTED TO TSO             */ 05111000
*      2 TCBTSLP PTR(8),            /* LIMIT PRIORITY OF TIME SHARING   05112000
*                                      TASK                          */ 05113000
*      2 TCBTSDP CHAR(1),           /* DISPATCHING PRIORITY OF TIME     05114000
*                                      SHARING TASK                  */ 05115000
*      2 TCBPQE PTR(31),            /* POINTER TO DPQE MINUS 8 FOR 0260 05116000
*                                      THE JOB STEP (OS/VS2)         */ 05117000
*      2 TCBAQE PTR(31),            /* LIST ORIGIN OF AQE(S) FOR THIS   05118000
*                                      TASK (OS/VS2)                 */ 05119000
*      2 TCBSTAB PTR(31),           /* ADDRESS OF THE CURRENT STAE 0260 05120000
*                                      CONTROL BLOCK                 */ 05121000
*       3 TCBNSTAE CHAR(1),         /* FLAGS INTERNAL TO STAE ROUTINE*/ 05122000
*        4 TCBSTABE BIT(1),         /* ABEND ENTERED BECAUSE OF ERROR   05123000
*                                      IN STAE PROCESSING            */ 05124000
*        4 TCBQUIES BIT(1),         /* STAE INVOKED PURGE I/O ROUTINE   05125000
*                                      WITH QUIESCE I/O OPTION       */ 05126000
*        4 TCB33E BIT(1),           /* A 33E ABEND HAS OCCURRED FOR     05127000
*                                      TASK (OS/VS2)                 */ 05128000
*        4 TCBPPSUP BIT(1),         /* 1=SUPERVISOR MODE, 0=PROBLEM     05129000
*                                      PROGRAM MODE. INDICATOR TO  0260 05130000
*                                      SYNCH OF THE MODE OF THE USER    05131000
*                                      EXIT (OS/VS2) MDC032          */ 05132000
*        4 TCBHALT BIT(1),          /* PURGE I/O ROUTINE DID NOT   0260 05133000
*                                      SUCCESSFULLY QUIESCE I/O, BUT    05134000
*                                      I/O WAS HALTED                */ 05135000
*        4 TCBSYNCH BIT(1),         /* SYNCH ISSUED BY ASIR TO     0260 05136000
*                                      SCHEDULE EXIT ROUTINE (OS/VS2)*/ 05137000
*        4 TCBRV301 BIT(1),         /* RESERVED (WAS TCBNPURG)     0260 05138000
*                                      (OS/VS2) MDC007               */ 05139000
*        4 TCBSTCUR BIT(1),         /* STAE RECURSION VALID (OS/VS2)    05140000
*                                      ICB443                        */ 05141000
*       3 TCBSTABB PTR(24),         /* ADDRESS OF THE CURRENT STAE 0260 05142000
*                                      CONTROL BLOCK                 */ 05143000
*      2 TCBTCT PTR(31),            /* ADDRESS OF THE TIMING CONTROL    05144000
*                                      TABLE (TCT) IF SYSTEM       0260 05145000
*                                      MANAGEMENT FACILITIES (SMF) 0260 05146000
*                                      DATA IS BEING COLLECTED FOR 0260 05147000
*                                      THE TASK. ZERO IF SMF DATA IS    05148000
*                                      NOT BEING COLLECTED FOR THE 0260 05149000
*                                      TASK OR FOR OS/VS1, IF SMF IS    05150000
*                                      NOT IN THE SYSTEM. (MDC305) 0260 05151000
*                                                            @Z30AQ9A*/ 05152000
*       3 TCBTCTGF BIT(8),          /* FLAG BYTE FOR TIMING CONTROL     05153000
*                                      TABLE ICB318                  */ 05154000
*        4 TCBSMFGF BIT(1),         /* IF ZERO, THE TCT CORE TABLE IS   05155000
*                                      NOT BE TO UPDATED BY        0260 05156000
*                                      GETMAIN/FREEMAIN. IF ONE, THE    05157000
*                                      TCT CORE TABLE IS TO BE     0260 05158000
*                                      UPDATED BY GETMAIN/FREEMAIN.     05159000
*                                      ICB318                        */ 05160000
*        4 TCBRSV20 BIT(1),         /* RESERVED                      */ 05161000
*        4 TCBRSV97 BIT(1),         /* RESERVED                      */ 05162000
*        4 TCBRSV98 BIT(1),         /* RESERVED                      */ 05163000
*        4 TCBRSV99 BIT(1),         /* RESERVED                      */ 05164000
*        4 TCBRSV9A BIT(1),         /* RESERVED                      */ 05165000
*        4 TCBRSV9B BIT(1),         /* RESERVED                      */ 05166000
*        4 TCBRSV9C BIT(1),         /* RESERVED                      */ 05167000
*       3 TCBTCTB PTR(24),          /* SAME AS TCBTCT ABOVE          */ 05168000
*      2 TCBUSER PTR(31),           /* A WORD AVAILABLE TO THE USER  */ 05169000
*      2 TCBSCNDY CHAR(4) BDY(WORD),/* SECONDARY NON-DISPATCHABILITY    05170000
*                                      BITS. IF ANY BIT IN THE     0260 05171000
*                                      FOLLOWING FOUR BYTES IS 1, THE   05172000
*                                      PRIMARY NON-DISPATCHABILITY 0260 05173000
*                                      BIT (OFFSET 33.7 DECIMAL) IS     05174000
*                                      1, AND THE TASK IS          0260 05175000
*                                      NON-DISPATCHABLE.             */ 05176000
*       3 TCBNDSP CHAR(4) BDY(WORD),/* SAME AS TCBSCNDY              */ 05177000
*        4 TCBNDSP0 CHAR(1),        /* BYTE 0                        */ 05178000
*        4 TCBNDSP1 CHAR(1),        /* BYTE 1                        */ 05179000
*         5 TCBDARTN BIT(1),        /* THE TASK IS TEMPORARILY     0260 05180000
*                                      NON-DISPATCHABLE - DAMAGE   0260 05181000
*                                      ASSESSMENT ROUTINE (DAR)      */ 05182000
*         5 TCBDARPN BIT(1),        /* THE TASK IS PERMANENTLY     0260 05183000
*                                      NON-DISPATCHABLE - DAMAGE   0260 05184000
*                                      ASSESSMENT ROUTINE (DAR)      */ 05185000
*         5 TCBRSTND BIT(1),        /* THE TASK IS TEMPORARILY     0260 05186000
*                                      NON-DISPATCHABLE - RECOVERY 0260 05187000
*                                      MANAGEMENT SUPPORT AND SYSTEM    05188000
*                                      ERROR RECOVERY (RMS/SER)      */ 05189000
*         5 TCBRSPND BIT(1),        /* THE TASK IS PERMANENTLY     0260 05190000
*                                      NON-DISPATCHABLE - RECOVERY 0260 05191000
*                                      MANAGEMENT SUPPORT AND SYSTEM    05192000
*                                      ERROR RECOVERY (RMS/SER) (IF     05193000
*                                      THIS FLAG IS ON THEN THE    0260 05194000
*                                      PREVIOUS BIT MUST BE ON TOO)  */ 05195000
*         5 TCBDDRND BIT(1),        /* THE TASK IS IN DEVICE       0260 05196000
*                                      ALLOCATION AND DYNAMIC DEVICE    05197000
*                                      RECONFIGURATION (DDR) HAS MADE   05198000
*                                      IT NON-DISPATCHABLE - RECOVERY   05199000
*                                      MANAGEMENT SUPPORT AND SYSTEM    05200000
*                                      ERROR RECOVERY (RMS/SER)    0260 05201000
*                                      (OS/VS1) MDC046               */ 05202000
*         5 TCBTPSP BIT(1),         /* DISPATCHING OF TCAM TASK MUST    05203000
*                                      BE DELAYED UNTIL TCAM I/O   0260 05204000
*                                      APPENDAGE OR SVC ROUTINE HAS     05205000
*                                      COMPLETED EXECUTION (TCAM IN     05206000
*                                      MULTIPROCESSING ENVIRONMENT)  */ 05207000
*         5 TCBPIEND BIT(1),        /* SRB IS TO BE SCHEDULED TO   0260 05208000
*                                      PERFORM PIE/PICA PROCESSING 0260 05209000
*                                      (FIRST LEVEL INTERRUPT      0260 05210000
*                                      HANDLER) MDC026               */ 05211000
*         5 TCBRSV22 BIT(1),        /* RESERVED                      */ 05212000
*        4 TCBNDSP2 CHAR(1),        /* BYTE 2                        */ 05213000
*         5 TCBABD BIT(1),          /* ABDUMP IS PROCESSING (OS/VS1) */ 05214000
*         5 TCBSTPP BIT(1),         /* TASK SET NON-DISPATCHABLE BY     05215000
*                                      SETTASK                       */ 05216000
*         5 TCBNDSVC BIT(1),        /* TASK IS NON-DISPATCHABLE    0260 05217000
*                                      BECAUSE SVC DUMP IS EXECUTING    05218000
*                                      FOR ANOTHER TASK              */ 05219000
*         5 TCBNDTS BIT(1),         /* TASK IS NON-DISPATCHABLE    0260 05220000
*                                      BECAUSE IT IS BEING SWAPPED 0260 05221000
*                                      OUT                           */ 05222000
*         5 TCBIWAIT BIT(1),        /* TASK IS NON-DISPATCHABLE DUE     05223000
*                                      TO AN INPUT WAIT              */ 05224000
*         5 TCBOWAIT BIT(1),        /* TASK IS NON-DISPATCHABLE DUE     05225000
*                                      TO AN OUTPUT WAIT             */ 05226000
*         5 TCBDSS BIT(1),          /* DYNAMIC SUPPORT SYSTEM (DSS)     05227000
*                                      HAS SET THIS TASK           0260 05228000
*                                      NON-DISPATCHABLE ICB313       */ 05229000
*         5 TCBABE BIT(1),          /* ABEND ROUTINE WAS ENTERED BY     05230000
*                                      THIS TASK WHILE THE DCB FOR 0260 05231000
*                                      SYSABEND (OR SYSUDUMP) DATA 0260 05232000
*                                      SET WAS BEING OPENED FOR    0260 05233000
*                                      ANOTHER TASK (OS/VS1)         */ 05234000
*        4 TCBNDSP3 CHAR(1),        /* BYTE 3                        */ 05235000
*         5 TCBLJSND BIT(1),        /* TASK IS ABENDING AND        0260 05236000
*                                      NON-DISPATCHABLE BECAUSE IT 0260 05237000
*                                      HAS A JOB STEP SUBTASK.     0260 05238000
*                                      TCBONDSP MUST ALSO BE ON.   0260 05239000
*                                      (OS/VS2)                      */ 05240000
*         5 TCBRV302 BIT(1),        /* RESERVED (WAS TCBSTAND)     0260 05241000
*                                      (OS/VS2) MDC006               */ 05242000
*         5 TCBSRBND BIT(1),        /* TCB NON-DISPATCHABLE BECAUSE     05243000
*                                      SRB'S ARE STOPPED (OS/VS2)  0260 05244000
*                                      MDC045                        */ 05245000
*         5 TCBRSV24 BIT(1),        /* RESERVED                      */ 05246000
*         5 TCBRSV25 BIT(1),        /* RESERVED                      */ 05247000
*         5 TCBRSV26 BIT(1),        /* RESERVED                      */ 05248000
*         5 TCBRSV27 BIT(1),        /* RESERVED                      */ 05249000
*         5 TCBNDINT BIT(1),        /* INITIATOR SETS THIS BIT TO  0260 05250000
*                                      PREVENT JOB STEP EXECUTION IN    05251000
*                                      ORDER TO DO CANCEL PROCESSING    05252000
*                                      (CAN CANCEL LOOP) (OS/VS2)  0260 05253000
*                                      MDC075                        */ 05254000
*      2 TCBMDIDS FIXED(31),        /* RESERVED FOR MODEL-DEPENDENT     05255000
*                                      SUPPORT AND FOR IBM         0260 05256000
*                                      PROPRIETARY PROGRAMMING     0260 05257000
*                                      SUPPORT ICBXXX                */ 05258000
*      2 TCBJSCB PTR(31),           /* ADDRESS OF THE JOB STEP     0260 05259000
*                                      CONTROL BLOCK                 */ 05260000
*       3 TCBRECDE CHAR(1),         /* ABEND RECURSION BYTE ICB456   */ 05261000
*        4 TCBREC BIT(1),           /* VALID REENTRY TO ABEND IF   0260 05262000
*                                      NON-ZERO VALUE IN FOLLOWING 7    05263000
*                                      BITS ICB456                   */ 05264000
*        4 * BIT(7),                /* ABEND BITS ICB456             */ 05265000
*       3 TCBJSCBB PTR(24),         /* ADDRESS OF THE JOB STEP     0260 05266000
*                                      CONTROL BLOCK                 */ 05267000
*      2 TCBDDEXC FIXED(15),        /* NUMBER OF TIMES A DYNAMIC   0260 05268000
*                                      DISPATCHING TASK HAS HAD ITS     05269000
*                                      TIME SLICE EXPIRE (OS/VS1)  0260 05270000
*                                      ICB465                        */ 05271000
*      2 TCBDDWTC FIXED(15),        /* NUMBER OF TIMES A DYNAMIC   0260 05272000
*                                      DISPATCHING TASK IS NOT     0260 05273000
*                                      INTERRUPTED BY THE END OF A 0260 05274000
*                                      TIME SLICE BETWEEN WAITS    0260 05275000
*                                      (OS/VS1) ICB465               */ 05276000
*      2 TCBIOBRC PTR(31),          /* ADDRESS OF IOB RESTORE CHAIN     05277000
*                                      FOR I/O QUIESCED BY EOT YM2840*/ 05278000
*      2 TCBEXCPD PTR(31),          /* ADDRESS OF EXCP DEBUG AREA  0260 05279000
*                                      (OS/VS2) (MDC083)       YM4297*/ 05280000
*      2 TCBEXT1 PTR(31),           /* ADDRESS OF OS - OS/VS COMMON     05281000
*                                      EXTENSION ICB311              */ 05282000
*       3 TCBRSV32 PTR(8),          /* RESERVED ICB311               */ 05283000
*       3 TCBEXT1A PTR(24),         /* ADDRESS OF OS - OS/VS COMMON     05284000
*                                      EXTENSION ICB311              */ 05285000
*/*            OS/VS1 - OS/VS2 COMMON SECTION                        */ 05286000
*                                                                  0260 05287000
*      2 TCBBITS CHAR(4) BDY(WORD), /* FLAG BYTES. IF A BIT IN THE 0260 05288000
*                                      FOLLOWING TWO BYTES IS SET TO    05289000
*                                      1, THE PRIMARY              0260 05290000
*                                      NON-DISPATCHABILITY BIT     0260 05291000
*                                      (OFFSET 33.7 DECIMAL) IS SET     05292000
*                                      TO 1, AND THE TASK IS       0260 05293000
*                                      NON-DISPATCHABLE.             */ 05294000
*       3 TCBNDSP4 BIT(8),          /* SECONDARY NON-DISPATCHABILITY    05295000
*                                      FLAGS COMMON TO OS/VS1 AND  0260 05296000
*                                      OS/VS2. COORDINATED WITH    0260 05297000
*                                      PRIMARY NON-DISPATCHABILITY 0260 05298000
*                                      FLAG TCBPNDSP. THIS BYTE IS 0260 05299000
*                                      NOT CURRENTLY SUPPORTED BY  0260 05300000
*                                      OS/VS2. MDC076                */ 05301000
*        4 TCBRSV86 BIT(1),         /* RESERVED                      */ 05302000
*        4 TCBRSV87 BIT(1),         /* RESERVED                      */ 05303000
*        4 TCBRSV88 BIT(1),         /* RESERVED                      */ 05304000
*        4 TCBRSV89 BIT(1),         /* RESERVED                      */ 05305000
*        4 TCBRSV90 BIT(1),         /* RESERVED                      */ 05306000
*        4 TCBRSV91 BIT(1),         /* RESERVED                      */ 05307000
*        4 TCBRSV92 BIT(1),         /* RESERVED                      */ 05308000
*        4 TCBRSV93 BIT(1),         /* RESERVED                      */ 05309000
*       3 TCBNDSP5 BIT(8),          /* SECONDARY NON-DISPATCHABILITY    05310000
*                                      FLAGS UNIQUE TO OS/VS1 OR   0260 05311000
*                                      OS/VS2. COORDINATED WITH    0260 05312000
*                                      PRIMARY NON-DISPATCHABILITY 0260 05313000
*                                      FLAG TCBPNDSP. THIS BYTE IS 0260 05314000
*                                      NOT CURRENTLY SUPPORTED BY  0260 05315000
*                                      OS/VS2. MDC077                */ 05316000
*        4 TCBRSV94 BIT(1),         /* RESERVED (OS/VS2)             */ 05317000
*        4 TCBRSV95 BIT(1),         /* RESERVED (OS/VS2)             */ 05318000
*        4 TCBRSV74 BIT(1),         /* RESERVED                      */ 05319000
*        4 TCBRSV75 BIT(1),         /* RESERVED                      */ 05320000
*        4 TCBRSV76 BIT(1),         /* RESERVED                      */ 05321000
*        4 TCBRSV77 BIT(1),         /* RESERVED                      */ 05322000
*        4 TCBRSV78 BIT(1),         /* RESERVED                      */ 05323000
*        4 TCBRSV79 BIT(1),         /* RESERVED MDC075               */ 05324000
*       3 TCBFLGS6 CHAR(1),         /* TASK-RELATED FLAGS            */ 05325000
*        4 TCBRV BIT(1),            /* THE PARTITION IS FIXED IN REAL   05326000
*                                      STORAGE. VIRTUAL ADDRESSES ARE   05327000
*                                      EQUAL TO REAL ADDRESSES.      */ 05328000
*        4 TCBPIE17 BIT(1),         /* PAGE FAULT INTERRUPT IS TO BE    05329000
*                                      PASSED TO THE TASK'S INTERRUPT   05330000
*                                      EXIT AND AN 8-BYTE PICA IS IN    05331000
*                                      EFFECT FOR THIS TASK (OS/VS2)    05332000
*                                      ICB339                        */ 05333000
*        4 TCBCPU BIT(1),           /* TASK IS CPU-BOUND MEMBER OF 0260 05334000
*                                      AUTOMATIC PRIORITY GROUP (APG)   05335000
*                                      (OS/VS2)                      */ 05336000
*        4 TCBSPVLK BIT(1),         /* TASK SCHEDULED FOR ABTERM   0260 05337000
*                                      WHILE OWNING SUPERVISOR LOCK     05338000
*                                      (OS/VS2)                      */ 05339000
*        4 TCBRV303 BIT(1),         /* RESERVED (WAS TCBOLSQA)     0260 05340000
*                                      (OS/VS2) MDC014               */ 05341000
*        4 TCBMIGR BIT(1),          /* REGION SELECTED FOR MIGRATION    05342000
*                                      FROM PRIMARY PAGING DEVICE  0260 05343000
*                                      (OS/VS2)                      */ 05344000
*        4 TCBAPG BIT(1),           /* TASK IS IN AUTOMATIC PRIORITY    05345000
*                                      GROUP (APG) (OS/VS2)          */ 05346000
*        4 TCBNTJS BIT(1),          /* JOB STEP TASK BUT NOT HIGHEST    05347000
*                                      IN FAILING TREE (OS/VS2)      */ 05348000
*       3 TCBFLGS7 CHAR(1),         /* TASK-RELATED FLAGS            */ 05349000
*        4 TCBGPECB BIT(1),         /* TASK IS IN AN ECB WAIT FOR A     05350000
*                                      GETPART (OS/VS2) ICB339       */ 05351000
*        4 TCBRSV33 BIT(1),         /* RESERVED (OS/VS2)             */ 05352000
*        4 TCBRSV34 BIT(1),         /* RESERVED (OS/VS2)             */ 05353000
*        4 TCBSTACK BIT(1),         /* SET IN JOB STEP TCB TO      0260 05354000
*                                      INDICATE THAT A TASK IN THE 0260 05355000
*                                      JOB STEP IS IN SERIAL ABEND 0260 05356000
*                                      PROCESSING. USED IN         0260 05357000
*                                      CONJUNCTION WITH TCBFOINP.  0260 05358000
*                                      (OS/VS2) ICB374               */ 05359000
*        4 TCBSVCS BIT(1),          /* RESERVED (MDC315)     @Z40EP9A*/ 05360000
*        4 TCBRSTSK BIT(1),         /* RESIDENT SYSTEM TASK (OS/VS2) */ 05361000
*        4 TCBADMP BIT(1),          /* ALL OTHER TASKS IN JOB STEP 0260 05362000
*                                      HAVE BEEN SET NON-DISPATCHABLE   05363000
*                                      BY ABDUMP. THIS BIT IS SET TO    05364000
*                                      CONTROL JOB STEP DURING THE 0260 05365000
*                                      DUMPING PROCESS. (OS/VS2)     */ 05366000
*        4 TCBGTOFM BIT(1),         /* GENERALIZED TRACE FACILITY  0260 05367000
*                                      (GTF) TRACING HAS BEEN      0260 05368000
*                                      TEMPORARILY DISABLED UNDER  0260 05369000
*                                      THIS TASK ICB402              */ 05370000
*      2 TCBDAR CHAR(1),            /* DAMAGE ASSESSMENT ROUTINE   0260 05371000
*                                      (DAR) FLAGS                   */ 05372000
*       3 TCBDARP BIT(1),           /* PRIMARY DAR RECURSION. DAR HAS   05373000
*                                      BEEN ENTERED FOR THIS TASK    */ 05374000
*       3 TCBDARS BIT(1),           /* SECONDARY DAR RECURSION. IF 0260 05375000
*                                      DAR IS REENTERED, THIS TASK 0260 05376000
*                                      WILL BE SET NON-DISPATCHABLE. */ 05377000
*       3 TCBDARD BIT(1),           /* A DUMP HAS BEEN REQUESTED FOR    05378000
*                                      A WRITER OR SCHEDULER ABEND,     05379000
*                                      AND THE USER HAS NOT PROVIDED    05380000
*                                      A SYSABEND DD CARD (OS/VS1)   */ 05381000
*       3 TCBDARC BIT(1),           /* RECURSION PERMITTED IN CLOSE -   05382000
*                                      AFTER DAR PROCESSING COMPLETED   05383000
*                                      (PCP)                         */ 05384000
*        4 TCBDARMC BIT(1),         /* DAR HAS BEEN ENTERED TO HANDLE   05385000
*                                      A VALID RECURSION IN        0260 05386000
*                                      MUST-COMPLETE STATUS THROUGH     05387000
*                                      ABEND ICB264                  */ 05388000
*       3 TCBDARO BIT(1),           /* SYSTEM ERROR TASK IS FAILING.    05389000
*                                      DAR DUMP SHOULD NOT REQUEST 0260 05390000
*                                      ANY ERROR RECOVERY PROCEDURE     05391000
*                                      (ERP) PROCESSING.             */ 05392000
*       3 TCBDARWT BIT(1),          /* A WTO OPERATION WITH A      0260 05393000
*                                      'REINSTATEMENT FAILURE'     0260 05394000
*                                      MESSAGE IS IN PROCESS FOR DAR    05395000
*                                      ICB264                        */ 05396000
*       3 TCBDARMS BIT(1),          /* WTO OPERATION WITH A 'DAR IN     05397000
*                                      PROGRESS' MESSAGE IS IN     0260 05398000
*                                      PROCESS FOR DAR (OS/VS1)    0260 05399000
*                                      (MDC314)              @XA08316*/ 05400000
*       3 TCBEXSVC BIT(1),          /* THE DUMP SVC ROUTINE IS     0260 05401000
*                                      EXECUTING FOR THIS TASK       */ 05402000
*      2 TCBRSV37 PTR(8),           /* RESERVED FOR USER MDC080      */ 05403000
*      2 TCBSYSCT PTR(8),           /* NUMBER OF OUTSTANDING       0260 05404000
*                                      SYSTEM-MUST-COMPLETE REQUESTS    05405000
*                                      (ICB497)                YM3883*/ 05406000
*      2 TCBSTMCT PTR(8),           /* NUMBER OF OUTSTANDING       0260 05407000
*                                      STEP-MUST-COMPLETE REQUESTS 0260 05408000
*                                      (ICB497)                YM3883*/ 05409000
*      2 TCBEXT2 PTR(31) BDY(DWORD),/* SAME AS TCBEXT2A ICB311       */ 05410000
*       3 TCBRSV39 PTR(8),          /* RESERVED ICB311               */ 05411000
*       3 TCBEXT2A PTR(24),         /* ADDRESS OF OS/VS1 - OS/VS2  0260 05412000
*                                      COMMON EXTENSION ICB311       */ 05413000
*/*            OS/VS2 TCB OVERLAY                                    */ 05414000
*                                                                  0260 05415000
*      2 TCBAECB CHAR(4) BDY(DWORD,5),/* ABEND ECB. POSTED BY A    0260 05416000
*                                      MOTHER TASK IN RTM2 PROCESSING   05417000
*                                      WHEN A DAUGHTER IS WAITING TO    05418000
*                                      TERMINATE IT. MDC033          */ 05419000
*      2 TCBTIRB PTR(31),           /* ADDRESS OF TIRB FOR TASK      */ 05420000
*      2 TCBBACK PTR(31),           /* ADDRESS OF PREVIOUS TCB ON  0260 05421000
*                                      READY QUEUE. ZERO IN TOP TCB. */ 05422000
*      2 TCBRTWA PTR(31),           /* POINTER TO CURRENT RTM2 WORK     05423000
*                                      AREA MDC034                   */ 05424000
*      2 TCBIOTIM FIXED(31),        /* TIME IN 16-MICROSECOND UNITS     05425000
*                                      BETWEEN TIME ORIGINAL TIME  0260 05426000
*                                      SLICE INTERVAL WAS ASSIGNED 0260 05427000
*                                      AND TIME AUTOMATIC PRIORITY 0260 05428000
*                                      GROUP (APG) TASK WENT INTO  0260 05429000
*                                      VOLUNTARY WAIT                */ 05430000
*      2 TCBTMSAV FIXED(31),        /* TIME IN 16-MICROSECOND UNITS     05431000
*                                      REMAINING FROM ORIGINAL TIME     05432000
*                                      SLICE INTERVAL WHEN AUTOMATIC    05433000
*                                      PRIORITY GROUP (APG) TASK WAS    05434000
*                                      LAST DISPATCHED               */ 05435000
*      2 TCBABCUR CHAR(1),          /* ABEND RECURSION BYTE          */ 05436000
*      2 TCBRSVAA PTR(8),           /* RESERVED (ICB497)       YM3883*/ 05437000
*      2 TCBTID CHAR(1),            /* TASK ID NUMBER ICB374         */ 05438000
*      2 TCBRSV41 PTR(8),           /* RESERVED ICB374               */ 05439000
*      2 TCBXSCT CHAR(4) BDY(WORD), /* DISPATCHER INTERSECT CONTROL     05440000
*                                      WORD (MDC322)         @Z40FP9A*/ 05441000
*       3 TCBXSCT1 BIT(8),          /* FLAG BYTE (MDC323)    @Z40FP9A*/ 05442000
*        4 TCBACTIV BIT(1),         /* BIT ON MEANS THIS TCB IS    0260 05443000
*                                      CURRENTLY ACTIVE ON A CPU.  0260 05444000
*                                      USED TO SYNCHRONIZE SOME    0260 05445000
*                                      STATUS SAVING AND           0260 05446000
*                                      DISPATCHABILITY INDICATORS  0260 05447000
*                                      WHEN ACTIVE OR NOT UNDER THE     05448000
*                                      LOCAL LOCK. (MDC320)  @Z40FP9A*/ 05449000
*        4 TCBS3A BIT(1),           /* STAGE 3 EXIT EFFECTOR/RESUME/    05450000
*                                      TCTL INTERSECT FLAG (MDC324)     05451000
*                                                            @Z40FP9A*/ 05452000
*        4 TCBRV319 BIT(1),         /* RESERVED              @Z40FP9A*/ 05453000
*        4 TCBRV320 BIT(1),         /* RESERVED              @Z40FP9A*/ 05454000
*        4 TCBRV321 BIT(1),         /* RESERVED              @Z40FP9A*/ 05455000
*        4 TCBRV322 BIT(1),         /* RESERVED              @Z40FP9A*/ 05456000
*        4 TCBRV323 BIT(1),         /* RESERVED              @Z40FP9A*/ 05457000
*        4 TCBRV324 BIT(1),         /* RESERVED              @Z40FP9A*/ 05458000
*       3 TCBRV325 BIT(8),          /* RESERVED (MDC325)     @Z40FP9A*/ 05459000
*       3 TCBCCPVI FIXED(15),       /* ID OF THE CURRENT CPU RUNNING    05460000
*                                      THIS TASK. USED FOR RECOVERY     05461000
*                                      AND CPU AFFINITY. (MDC321)  0260 05462000
*                                                            @Z40FP9A*/ 05463000
*      2 TCBFOE PTR(31),            /* SAME AS TCBFOEA BELOW ICB339  */ 05464000
*       3 TCBRSV42 PTR(8),          /* RESERVED ICB339               */ 05465000
*       3 TCBFOEA PTR(24),          /* ADDRESS OF FIRST FIX OWNERSHIP   05466000
*                                      ELEMENT (FOE) IN LIST FOR THIS   05467000
*                                      TASK ICB339                   */ 05468000
*      2 TCBSWA PTR(31),            /* ADDRESS OF FIRST SCHEDULER  0260 05469000
*                                      WORK AREA (SWA) SPQE ON SWA 0260 05470000
*                                      SPQE CHAIN (MDC326)   @Z40AQ9A*/ 05471000
*      2 TCBSTAWA PTR(31),          /* ESTAE ROUTINE WORK AREA     0260 05472000
*                                      POINTER (MDC327)      @Z40FP9A*/ 05473000
*      2 TCBTCBID CHAR(4) BDY(WORD),/* CONTAINS BLOCK ID - 'TCB '  0260 05474000
*                                      MDC012                        */ 05475000
*      2 TCBRTM12 PTR(31),          /* POINTER TO PARAMETER AREAS  0260 05476000
*                                      PASSED FROM RTM1 TO RTM2    0260 05477000
*                                      MDC008                        */ 05478000
*      2 TCBESTAE CHAR(4) BDY(WORD),/* AREA TO CONTAIN RECOVERY DATA    05479000
*                                      FOR RTM MDC029                */ 05480000
*       3 TCBSCBKY CHAR(1),         /* KEY IN WHICH SYNCH IS TO PASS    05481000
*                                      CONTROL TO THE USER EXIT    0260 05482000
*                                      MDC030                        */ 05483000
*       3 TCBESTRM BIT(8),          /* ESTAE TERM OPTIONS MDC039     */ 05484000
*        4 TCBETERM BIT(1),         /* ESTAE EXIT ENTERED WITH TERM     05485000
*                                      OPTION MDC040                 */ 05486000
*        4 TCBRV308 BIT(1),         /* RESERVED                      */ 05487000
*        4 TCBRV309 BIT(1),         /* RESERVED                      */ 05488000
*        4 TCBRV310 BIT(1),         /* RESERVED                      */ 05489000
*        4 TCBRV311 BIT(1),         /* RESERVED                      */ 05490000
*        4 TCBRV312 BIT(1),         /* RESERVED                      */ 05491000
*        4 TCBRV313 BIT(1),         /* RESERVED                      */ 05492000
*        4 TCBRV314 BIT(1),         /* RESERVED                      */ 05493000
*       3 TCBERTYP PTR(8),          /* TYPE OF ERROR CAUSING ENTRY TO   05494000
*                                      THE RTM. SET BY RTM1. MDC052  */ 05495000
*       3 TCBMODE PTR(8),           /* MASK INDICATING MODE OF SYSTEM   05496000
*                                      AT TIME OF ERROR. SEE       0260 05497000
*                                      IHART1W/MODE FOR INDIVIDUAL 0260 05498000
*                                      BIT DEFINITIONS. MDC064       */ 05499000
*      2 TCBUKYSP PTR(31),          /* ADDRESS OF SPQE'S FOR SUBPOOLS   05500000
*                                      229 AND 230 (USER KEY STORAGE    05501000
*                                      IN THE PRIVATE AREA) MDC067   */ 05502000
*      2 TCBRV326 FIXED(15),        /* RESERVED (MDC321)     @Z40FP9A*/ 05503000
*      2 TCBAFFN BIT(16),           /* CPU AFFINITY INDICATOR MDC047 */ 05504000
*      2 TCBFBYT1 BIT(8),           /* FLAG BYTE MDC002              */ 05505000
*       3 TCBEOTFM BIT(1),          /* END OF TASK FLAG FOR FREEMAIN.   05506000
*                                      SET TO 1 BY TASK TERMINATION     05507000
*                                      AT START OF TERMINATION     0260 05508000
*                                      PROCESSING AND RESET TO 0 AT     05509000
*                                      FINISH. INDICATES THAT A    0260 05510000
*                                      FREEMAIN ON A BLOCK OF LOCAL     05511000
*                                      STORAGE THAT IS STILL FIXED BY   05512000
*                                      RSM SHOULD RESULT IN A RETURN    05513000
*                                      CODE OF 8 RATHER THAN ABNORMAL   05514000
*                                      TERMINATION. MDC002           */ 05515000
*       3 TCBRV327 BIT(1),          /* RESERVED (MDC320)     @Z40FP9A*/ 05516000
*       3 TCBNDIOS BIT(1),          /* TASK HAS BEEN SET NON-      0260 05517000
*                                      DISPATCHABLE VIA STATUSND   0260 05518000
*                                      WHILE SVC 16 (PURGE) SCANS THE   05519000
*                                      RB CHAIN PURGING APPENDAGE- 0260 05520000
*                                      SCHEDULED ASYNCHRONOUS EXIT 0260 05521000
*                                      ROUTINES RUNNING UNDER AN   0260 05522000
*                                      IRB/RQE OR NON-RESIDENT ERP'S    05523000
*                                      RUNNING UNDER THE SIRB MDC005 */ 05524000
*       3 TCBPGNLY BIT(1),          /* SET BY RTM2 TO INDICATE ONLY     05525000
*                                      PURGE PHASE TO BE PERFORMED 0260 05526000
*                                      MDC009                        */ 05527000
*       3 TCBRTM2 BIT(1),           /* SET BY RTM2 TO INDICATE RTM2     05528000
*                                      HAS BEEN ENTERED FOR THIS TASK   05529000
*                                      MDC010                        */ 05530000
*       3 TCBEOT BIT(1),            /* SET BY RTM2 TO INDICATE TO  0260 05531000
*                                      EXIT THAT END OF TASK       0260 05532000
*                                      PROCESSING IS COMPLETE MDC011 */ 05533000
*       3 TCBRV113 BIT(1),          /* RESERVED                      */ 05534000
*       3 TCBLLH BIT(1),            /* LOCALLY LOCKED TCB HAS PAGE 0260 05535000
*                                      FAULTED, AND I/O IS REQUIRED     05536000
*                                      (FIRST LEVEL INTERRUPT      0260 05537000
*                                      HANDLER) MDC027               */ 05538000
*      2 TCBFBYT2 BIT(8),           /* FLAG BYTE MDC035              */ 05539000
*       3 TCBCNCB BIT(1),           /* SET BY RTM2 IN THE JOB STEP 0260 05540000
*                                      TCB WHEN IT HAS BEEN ENTERED     05541000
*                                      ON THE TCB FOR AN X22 ABEND 0260 05542000
*                                      MDC036                        */ 05543000
*       3 TCBFMW BIT(1),            /* MOTHER WAITING FLAG. TURNED ON   05544000
*                                      IN A SUBTASK IN RTM2        0260 05545000
*                                      PROCESSING WHEN AN ANCESTOR 0260 05546000
*                                      TASK IS WAITING TO ABEND IT.     05547000
*                                      MDC037                        */ 05548000
*       3 TCBFDW BIT(1),            /* DAUGHTER WAITING FLAG. TURNED    05549000
*                                      ON IN A MOTHER TASK IN RTM2 0260 05550000
*                                      PROCESSING WHEN A DAUGHTER IS    05551000
*                                      WAITING TO ABEND IT. MDC038   */ 05552000
*       3 TCBFPRAP BIT(1),          /* SET BY RTM2 TO PREVENT      0260 05553000
*                                      PERCOLATION TO THE TASK OF AN    05554000
*                                      ASYNCHRONOUS ABEND MDC051     */ 05555000
*       3 TCBSSSYN BIT(1),          /* SYNCHRONIZED STATUS STOP    0260 05556000
*                                      PENDING FOR THIS TCB MDC053   */ 05557000
*       3 TCBECBNV BIT(1),          /* IF 1, ECB POINTED TO BY TCBECB   05558000
*                                      IS NOT TO BE VALIDITY CHECKED.   05559000
*                                      IF 0, ECB POINTED TO BY TCBECB   05560000
*                                      IS TO BE VALIDITY CHECKED.  0260 05561000
*                                      MDC071                        */ 05562000
*       3 TCBRV122 BIT(1),          /* RESERVED                      */ 05563000
*       3 TCBRV123 BIT(1),          /* RESERVED                      */ 05564000
*      2 TCBRV124 BIT(8),           /* RESERVED (MDC306)             */ 05565000
*       3 TCBRV125 BIT(1),          /* RESERVED (MDC307)             */ 05566000
*       3 TCBRV126 BIT(1),          /* RESERVED (MDC308)             */ 05567000
*       3 TCBRV127 BIT(1),          /* RESERVED                      */ 05568000
*       3 TCBRV128 BIT(1),          /* RESERVED                      */ 05569000
*       3 TCBRV129 BIT(1),          /* RESERVED                      */ 05570000
*       3 TCBRV130 BIT(1),          /* RESERVED                      */ 05571000
*       3 TCBRV131 BIT(1),          /* RESERVED                      */ 05572000
*       3 TCBRV132 BIT(1),          /* RESERVED                      */ 05573000
*      2 TCBRV133 BIT(8),           /* RESERVED                      */ 05574000
*       3 TCBRV134 BIT(1),          /* RESERVED                      */ 05575000
*       3 TCBRV135 BIT(1),          /* RESERVED                      */ 05576000
*       3 TCBRV136 BIT(1),          /* RESERVED                      */ 05577000
*       3 TCBRV137 BIT(1),          /* RESERVED                      */ 05578000
*       3 TCBRV138 BIT(1),          /* RESERVED                      */ 05579000
*       3 TCBRV139 BIT(1),          /* RESERVED                      */ 05580000
*       3 TCBRV140 BIT(1),          /* RESERVED                      */ 05581000
*       3 TCBRV141 BIT(1),          /* RESERVED                      */ 05582000
*      2 TCBRPT PTR(31),            /* ADDRESS OF RADIX PARTITION  0260 05583000
*                                      TREE FOR LOCAL STORAGE      0260 05584000
*                                      MANAGEMENT MDC068             */ 05585000
*      2 TCBDBTB PTR(31),           /* ADDRESS OF DEB TABLE. THERE IS   05586000
*                                      ONE DEB TABLE PER JOB STEP  0260 05587000
*                                      TCB. MDC073                   */ 05588000
*      2 TCBSWASA PTR(31),          /* ADDRESS OF SAVE AREA USED BY     05589000
*                                      SWA MANAGER MDC079            */ 05590000
*      2 TCBSVCA2 PTR(31),          /* RESERVED (MDC317)     @Z40EP9A*/ 05591000
*      2 * CHAR(0) BDY(DWORD);                                     0260 05592000
*                                                                  0260 05593000
*/*            OS/VS1 - OS/VS2 COMMON EXTENSION                      */ 05594000
*                                                                  0261 05595000
*   DECLARE                                                        0261 05596000
*     1 TCBXTNT2 BASED(TCBEXT2) BDY(DWORD),                        0261 05597000
*      2 TCBGTF PTR(31),            /* SAME AS TCBGTFA BELOW ICB312  */ 05598000
*       3 TCBTFLG BIT(8),           /* GENERALIZED TRACE FACILITY  0261 05599000
*                                      (GTF) FLAG BYTE ICB312        */ 05600000
*        4 TCBASYNC BIT(1),         /* GTF ASYNCHRONOUS GATHER     0261 05601000
*                                      ROUTINE IS IN CONTROL ICB312  */ 05602000
*        4 TCBERRTN BIT(1),         /* GTF ASYNCHRONOUS GATHER ERROR    05603000
*                                      ROUTINE IS IN CONTROL ICB312  */ 05604000
*        4 TCBDSPIT BIT(1),         /* MACHINE CHECK INTERRUPTION  0261 05605000
*                                      HANDLER SHOULD UNCONDITIONALLY   05606000
*                                      BRANCH TO DISPATCHER ICB312   */ 05607000
*        4 TCBRSV43 BIT(1),         /* RESERVED                      */ 05608000
*        4 TCBRSV44 BIT(1),         /* RESERVED                      */ 05609000
*        4 TCBRSV45 BIT(1),         /* RESERVED                      */ 05610000
*        4 TCBRSV46 BIT(1),         /* RESERVED                      */ 05611000
*        4 TCBRSV47 BIT(1),         /* RESERVED                      */ 05612000
*       3 TCBGTFA PTR(24),          /* ADDRESS OF GTF TEMPORARY TRACE   05613000
*                                      BUFFER ICB312                 */ 05614000
*      2 TCBRSVAB PTR(8),           /* RESERVED (ICB497)       YM3883*/ 05615000
*      2 TCBRCMP BIT(24),           /* MOST RECENT ABEND COMPLETION     05616000
*                                      CODE (INCLUDING VALID       0261 05617000
*                                      RECURSIONS IN STAE) ICB411    */ 05618000
*      2 TCBEVENT PTR(31),          /* ADDRESS OF EVENT TABLES QUEUE    05619000
*                                      (MDC304)              @X31ED9A*/ 05620000
*      2 TCBRSV49 PTR(31),          /* RESERVED                      */ 05621000
*      2 TCBRV142 PTR(31),          /* RESERVED                      */ 05622000
*      2 TCBRV143 PTR(31),          /* RESERVED                      */ 05623000
*      2 TCBRV144 FIXED(15),        /* RESERVED                      */ 05624000
*      2 TCBRV145 FIXED(15),        /* RESERVED                      */ 05625000
*      2 TCBRV146 BIT(8),           /* RESERVED                      */ 05626000
*       3 TCBRV147 BIT(1),          /* RESERVED                      */ 05627000
*       3 TCBRV148 BIT(1),          /* RESERVED                      */ 05628000
*       3 TCBRV149 BIT(1),          /* RESERVED                      */ 05629000
*       3 TCBRV150 BIT(1),          /* RESERVED                      */ 05630000
*       3 TCBRV151 BIT(1),          /* RESERVED                      */ 05631000
*       3 TCBRV152 BIT(1),          /* RESERVED                      */ 05632000
*       3 TCBRV153 BIT(1),          /* RESERVED                      */ 05633000
*       3 TCBRV154 BIT(1),          /* RESERVED                      */ 05634000
*      2 TCBRV155 BIT(8),           /* RESERVED                      */ 05635000
*       3 TCBRV156 BIT(1),          /* RESERVED                      */ 05636000
*       3 TCBRV157 BIT(1),          /* RESERVED                      */ 05637000
*       3 TCBRV158 BIT(1),          /* RESERVED                      */ 05638000
*       3 TCBRV159 BIT(1),          /* RESERVED                      */ 05639000
*       3 TCBRV160 BIT(1),          /* RESERVED                      */ 05640000
*       3 TCBRV161 BIT(1),          /* RESERVED                      */ 05641000
*       3 TCBRV162 BIT(1),          /* RESERVED                      */ 05642000
*       3 TCBRV163 BIT(1),          /* RESERVED                      */ 05643000
*      2 TCBRV164 BIT(8),           /* RESERVED                      */ 05644000
*       3 TCBRV165 BIT(1),          /* RESERVED                      */ 05645000
*       3 TCBRV166 BIT(1),          /* RESERVED                      */ 05646000
*       3 TCBRV167 BIT(1),          /* RESERVED                      */ 05647000
*       3 TCBRV168 BIT(1),          /* RESERVED                      */ 05648000
*       3 TCBRV169 BIT(1),          /* RESERVED                      */ 05649000
*       3 TCBRV170 BIT(1),          /* RESERVED                      */ 05650000
*       3 TCBRV171 BIT(1),          /* RESERVED                      */ 05651000
*       3 TCBRV172 BIT(1),          /* RESERVED                      */ 05652000
*      2 TCBRV173 BIT(8),           /* RESERVED                      */ 05653000
*       3 TCBRV174 BIT(1),          /* RESERVED                      */ 05654000
*       3 TCBRV175 BIT(1),          /* RESERVED                      */ 05655000
*       3 TCBRV176 BIT(1),          /* RESERVED                      */ 05656000
*       3 TCBRV177 BIT(1),          /* RESERVED                      */ 05657000
*       3 TCBRV178 BIT(1),          /* RESERVED                      */ 05658000
*       3 TCBRV179 BIT(1),          /* RESERVED                      */ 05659000
*       3 TCBRV180 BIT(1),          /* RESERVED                      */ 05660000
*       3 TCBRV181 BIT(1),          /* RESERVED                      */ 05661000
*      2 * CHAR(0) BDY(DWORD);                                     0261 05662000
*                                                                  0261 05663000
*/*                    END OF TCB                                    */ 05664000
*                                                                  0262 05665000
*                                                                  0262 05666000
*/********************************************************************/ 05667000
*/*                                                                  */ 05668000
*/*         INCLUDE EXTENT LIST DSECT                                */ 05669000
*/*                                                                  */ 05670000
*/********************************************************************/ 05671000
*/*         %INCLUDE SYSLIB(IHAXTLST)                                */ 05672000
*/*  *************************************************************** */ 05673000
*/*            EXTENT LIST                                           */ 05674000
*/*                                                                  */ 05675000
*/*  RELEASE 2 AOS (AOS/1 REL 2, AOS/2 REL 1), 6/04/71, LEVEL=1      */ 05676000
*/*  *************************************************************** */ 05677000
*                                                                  0262 05678000
*   DECLARE                                                        0262 05679000
*     1 XTLST BASED(XTLSTPTR),                                     0262 05680000
*      2 XTLLNTH FIXED(31),         /* NUMBER OF BYTES IN EXTENT LIST   05681000
*                                      (=16)                         */ 05682000
*      2 XTLNRFAC FIXED(31),        /* NUMBER OF RELOCATION FACTORS     05683000
*                                      (=1)                          */ 05684000
*      2 XTLMSBLA PTR(31),          /* WORD REFERENCE FOR XTLMSBLN   */ 05685000
*       3 * CHAR(1),                /* ONE BYTE OF X'80'             */ 05686000
*       3 XTLMSBLN PTR(24) BDY(BYTE),/* LENGTH OF MAIN STORAGE BLOCK */ 05687000
*      2 XTLMSBAA PTR(31),          /* WORD REFERENCE FOR XTLMSBAD   */ 05688000
*       3 * CHAR(1),                /* ONE BYTE OF X'00'             */ 05689000
*       3 XTLMSBAD PTR(24) BDY(BYTE);/* ADDRESS OF MAIN STORAGE BLOCK*/ 05690000
*                                                                  0263 05691000
*/********************************************************************/ 05692000
*/*                                                                  */ 05693000
*/*         INCLUDE NIP CONTROL BLOCKS DSECTS                        */ 05694000
*/*                                                                  */ 05695000
*/********************************************************************/ 05696000
*/*         %INCLUDE SYSLIB(IEAPMNIP)                                */ 05697000
*                                                                  0263 05698000
*   /*****************************************************************/ 05699000
*   /*                                                               */ 05700000
*   /* ** NIPWTO MESSAGE HEADER THE FOLLOWING STRUCTURE MAPS THE     */ 05701000
*   /* NIPWTO MESSAGE HEADER THAT IS GENERATED BY THE BAL MACRO      */ 05702000
*   /* -IEAPMNIP TYPE=HEADER- AND IS USED TO PASS INFORMATION TO THE */ 05703000
*   /* NIPWTO SERVICE ROUTINE. THE MESSAGE LENGTH FIELD, NWTOLNG,    */ 05704000
*   /* INCLUDES THE LENGTH OF THE MESSAGE HEADER ITSELF.             */ 05705000
*   /*                                                               */ 05706000
*   /*****************************************************************/ 05707000
*                                                                  0263 05708000
*   DECLARE                                                        0263 05709000
*     1 NWTOHDR BASED,              /* MESSAGE HEADER START          */ 05710000
*      2 NWTOLNG FIXED(15),         /* MESSAGE LENGTH                */ 05711000
*      2 NWTOFL CHAR(2),            /* NIP MESSAGE FLAGS             */ 05712000
*       3 NWTOFLNH BIT(1),          /* NOT TO BE HARDCOPIED          */ 05713000
*       3 NWTOFLNC BIT(1),          /* SUPRESS BLANK COMPRESS        */ 05714000
*       3 * BIT(14);                /* RESERVED                      */ 05715000
*                                                                  0263 05716000
*   /*****************************************************************/ 05717000
*   /*                                                               */ 05718000
*   /* ** END OF NIPWTO MESSAGE HEADER ** NIPWTOR PARAMETER LIST THE */ 05719000
*   /* FOLLOWING STRUCTURE MAPS THE NIPWTOR PARAMETER LIST THAT IS   */ 05720000
*   /* GENERATED BY THE BAL MACRO -IEAPMNIP TYPE=PLIST- AND IS USED  */ 05721000
*   /* TO PASS INFORMATION TO THE NIPWTOR SERVICE ROUTINE.           */ 05722000
*   /*                                                               */ 05723000
*   /*****************************************************************/ 05724000
*                                                                  0264 05725000
*   DECLARE                                                        0264 05726000
*     1 NWTORLST BASED,             /* PARM LIST START               */ 05727000
*      2 NWTORRPA PTR(31),          /* REPLY AREA ADDRESS            */ 05728000
*      2 NWTORECB PTR(31),          /* REPLY ECB ADDRESS             */ 05729000
*      2 NMTORRDL FIXED(15),        /* REPLY AREA LENGTH             */ 05730000
*      2 NWTORFL CHAR(1),           /* NIP WTOR FLAGS                */ 05731000
*       3 NWTORFLA BIT(1),          /* ASYNCHRONOUS REQUEST          */ 05732000
*       3 * BIT(3),                 /* RESERVED                      */ 05733000
*       3 NWTORFLB BIT(1),          /* PROVIDE SQA BUFFER            */ 05734000
*       3 * BIT(3),                 /* RESERVED                      */ 05735000
*      2 * CHAR(1),                 /* RESERVED                      */ 05736000
*      2 NWTORMSG PTR(31);          /* WTOR MESSAGE HEADER ADDRESS.  */ 05737000
*                                                                  0264 05738000
*   /*****************************************************************/ 05739000
*   /*                                                               */ 05740000
*   /* ** END OF NIPWTOR PARAMETER LIST ** NIP SYSTEM PARAMETER QUEUE*/ 05741000
*   /* ENTRY THE FOLLOWING STRUCTURE MAPS THE NIP SYSTEM PARAMETER   */ 05742000
*   /* ENTRY WHICH IS AN INTERNAL CONTROL BLOCK USED BY NIP TO TRACK */ 05743000
*   /* SQA BUFFERS USED TO CONTAIN WTOR REPLIES. THIS IS DONE SO THAT*/ 05744000
*   /* IEAVNIPX CAN FREE THESE AREAS AT THE END OF NIP PROCESSING.   */ 05745000
*   /* ONE SPE IS CONTAINED IN THE NVTSPE FIELD OF THE NVT. IF OTHERS*/ 05746000
*   /* ARE REQUIRED, THEY ARE OBTAINED DYNAMICALLY FROM SQA AND      */ 05747000
*   /* CHAINED TO THE ONE IN THE NVT.                                */ 05748000
*   /*                                                               */ 05749000
*   /*****************************************************************/ 05750000
*                                                                  0265 05751000
*   DECLARE                                                        0265 05752000
*     1 NIPSPE BASED,               /* NIPSPE START                  */ 05753000
*      2 NIPSPEQ PTR(31),           /* CHAIN PTR                     */ 05754000
*      2 NIPSPEA PTR(31);           /* PARAMETER PTR                 */ 05755000
*                                                                  0265 05756000
*   /*****************************************************************/ 05757000
*   /*                                                               */ 05758000
*   /* ** END OF NIPSPE ** NIPMOUNT PARAMETER LIST THE FOLLOWING     */ 05759000
*   /* STRUCTURE MAPS THE NIPMOUNT PARAMETER LIST THAT IS GENERATED  */ 05760000
*   /* BY THE BAL MACRO -IEAPMNIP TYPE=MOUNTPL AND IS USED TO PASS   */ 05761000
*   /* INFORMATION TO THE NIPMOUNT SERVICE ROUTINE. THIS MAPPING MUST*/ 05762000
*   /* BE INCLUDED IN ANY MODULE THAT USES THE NIPMOUNT SERVICE,     */ 05763000
*   /* SINCE IT IS REFERRED TO BY THE NIPMOUNT BAL CALL MACRO,       */ 05764000
*   /* IEAPMNIP TYPE=MOUNT.                                          */ 05765000
*   /*                                                               */ 05766000
*   /*****************************************************************/ 05767000
*                                                                  0266 05768000
*   DECLARE                                                        0266 05769000
*     1 NIPMNTPL BASED,             /* PARM LIST START               */ 05770000
*      2 NMNTDS CHAR(12),           /* DATASET NAME OR               */ 05771000
*       3 NMNTDSA PTR(31) BDY(BYTE),/* DS NAME ADDRESS               */ 05772000
*      2 NMNTVS CHAR(6),            /* VOLUME SERIAL OR              */ 05773000
*       3 NMNTUCB FIXED(31) BDY(BYTE),/* UCB ADDRESS                 */ 05774000
*      2 NMNTDT CHAR(2),            /* DEVICE TYPE                   */ 05775000
*      2 NMNTFL CHAR(1),            /* NIPMOUNT FLAGS                */ 05776000
*       3 * BIT(4),                 /* ** RESERVED **                */ 05777000
*       3 NMNTFUS BIT(1),           /* UCB SCAN ONLY REQUEST         */ 05778000
*       3 NMNTFLI BIT(1),           /* DS NAME ADDR GIVEN            */ 05779000
*       3 NMNTFLC BIT(1),           /* CONDITIONAL REQUEST           */ 05780000
*       3 NMNTFLB BIT(1),           /* UCB ADDRESS GIVEN             */ 05781000
*      2 * CHAR(3);                 /* ** RESERVED **                */ 05782000
*                                                                  0266 05783000
*   /*****************************************************************/ 05784000
*   /*                                                               */ 05785000
*   /* ** END OF NIPMOUNT PARAMETER LIST ** NIPOPEN PARAMETER LIST   */ 05786000
*   /* THE FOLLOWING STRUCTURE MAPS THE NIPOPEN PARAMETER LIST THAT  */ 05787000
*   /* IS GENERATED BY THE BAL MACRO -IEAPMNIP TYPE=OPENPL- AND IS   */ 05788000
*   /* USED TO PASS INFORMATION TO THE NIPOPEN SERVICE ROUTINE. THIS */ 05789000
*   /* MAPPING MUST BE INCLUDED IN ANY MODULE THAT USES THE NIPOPEN  */ 05790000
*   /* SERVICE, SINCE IT IS REFERRED TO BY THE NIPOPEN BAL CALL      */ 05791000
*   /* MACRO, IEAPMNIP TYPE=OPEN.                                    */ 05792000
*   /*                                                               */ 05793000
*   /*****************************************************************/ 05794000
*                                                                  0267 05795000
*   DECLARE                                                        0267 05796000
*     1 NIPOPNPL BASED,             /* PARM LIST START               */ 05797000
*      2 NOPNDS CHAR(12),           /* DATASET NAME OR               */ 05798000
*       3 NOPNDSA PTR(31) BDY(BYTE),/* DS NAME ADDRESS               */ 05799000
*      2 NOPNDCB PTR(31),           /* DCB ADDRESS                   */ 05800000
*      2 NOPNUCB PTR(32),           /* UCB ADDRESS           @Z30AAXC*/ 05801000
*      2 NOPNFL CHAR(1),            /* NIPOPEN FLAGS                 */ 05802000
*       3 NOPNFRS BIT(1),           /* PERMANENTLY RESIDENT DS       */ 05803000
*       3 NOPNFAU BIT(1),           /* AUTHORIZED LIBRARY FLAG       */ 05804000
*       3 NOPNFLM BIT(1),           /* SUPRESS DS NOT FOUND MSG      */ 05805000
*       3 NOPNFLI BIT(1),           /* DS NAME ADDR GIVEN            */ 05806000
*       3 NOPNFLNB BIT(1),          /* INITIALIZE BASIC DEB          */ 05807000
*       3 NOPNFLLB BIT(1),          /* END OF NUCLEUS DEB            */ 05808000
*       3 NOPNFLLC BIT(1),          /* CONDITIONAL REQUEST           */ 05809000
*       3 NOPNFLSX BIT(1),          /* FIRST EXTENT ONLY             */ 05810000
*      2 NOPNRC CHAR(1),            /* NIPOPEN RETURN CODE           */ 05811000
*      2 * CHAR(2);                 /* ** RESERVED **                */ 05812000
*                                                                  0267 05813000
*   /*****************************************************************/ 05814000
*   /*                                                               */ 05815000
*   /* ** END OF NIPOPEN PARAMETER LIST ** NIPSCHED PARAMETER LIST   */ 05816000
*   /* THE FOLLOWING STRUCTURE MAPS THE NIPSCHED PARAMETER LIST THAT */ 05817000
*   /* IS GENERATED BY THE BAL MACRO -IEAPMNIP TYPE=SCHEDL- AND IS   */ 05818000
*   /* USED TO PASS INFORMATION TO THE NIPSCHED SERVICE ROUTINE.     */ 05819000
*   /*                                                               */ 05820000
*   /*****************************************************************/ 05821000
*                                                                  0268 05822000
*   DECLARE                                                        0268 05823000
*     1 NIPSCHDL BASED,                                            0268 05824000
*      2 NSCHDPTR PTR(31),          /* ADDRESS OF ROUTINE TO SCHED   */ 05825000
*      2 NSCHDPRM PTR(31),          /* ADDRESS OF CALLERS AREA       */ 05826000
*      2 NSCHDCPU CHAR(2);          /* CPU ADDRESS FOR SCHEDULE      */ 05827000
*                                                                  0268 05828000
*   /*****************************************************************/ 05829000
*   /*                                                               */ 05830000
*   /* **** END OF NIPSCHED PARAMETER LIST                           */ 05831000
*   /*                                                               */ 05832000
*   /*****************************************************************/ 05833000
*                                                                  0269 05834000
*                                                                  0269 05835000
*/********************************************************************/ 05836000
*/*                                                                  */ 05837000
*/*         INCLUDE DIRECT ACCESS DEB AND DCB CONTROL BLOCKS         */ 05838000
*/*                                                                  */ 05839000
*/********************************************************************/ 05840000
*/*         %DECLARE NPBDEB CHAR        ** DEB GENERATION CONTROL VAR*/ 05841000
*/*         %NPBDEB = 'YES'             ** REQUEST DEB TO BE BUILT   */ 05842000
*/*         %DECLARE NPBDCB CHAR        ** DCB CONTROL VARIABLE      */ 05843000
*/*         %NPBDCB = 'YES'             ** REQUEST DCB TO BE BUILT   */ 05844000
*/*         %DECLARE DEB16 CHAR         ** DEB EXTENT OPTION         */ 05845000
*/*         %DEB16 = 'YES'              ** REQUEST 16 EXTENT DEB     */ 05846000
*/*         %DECLARE NPBECB CHAR        ** ECB OPTION VARIABLE       */ 05847000
*/*         %NPBECB = 'YES'             ** REQUEST ECB               */ 05848000
*/*         %DECLARE NPBIOB CHAR        ** IOB OPTION VARIABLE       */ 05849000
*/*         %NPBIOB = 'YES'             ** REQUEST IOB               */ 05850000
*/*         %INCLUDE SYSLIB(IEAPNPB)                                 */ 05851000
*/*****************************************************************  */ 05852000
*/*                                                                  */ 05853000
*/*                         I E A P N P B                            */ 05854000
*/*                     DATE=05/11/72,LEVEL=1                        */ 05855000
*/*                                                                  */ 05856000
*/*   THIS BSL MACRO PROVIDES EXPANSIONS OF CONTROL BLOCKS           */ 05857000
*/*   (IOB,ECB,DEB,DCB) INITIALIZED FOR I/O FOR DIRECT ACCESS        */ 05858000
*/*   AND TAPE DATA SETS, INPUT OR OUTPUT CONSOLES OR FOR            */ 05859000
*/*   CONSOLE TESTING.                                               */ 05860000
*/*                                                                  */ 05861000
*/*****************************************************************  */ 05862000
*                                                                  0269 05863000
*   DECLARE                                                        0269 05864000
*     1 *,                                                         0269 05865000
*      2 NPBNIOBF CHAR(4),          /* IOB PREFIX BYTES              */ 05866000
*                                                                  0269 05867000
*     /***************************************************************/ 05868000
*     /*                                                             */ 05869000
*     /* BYTE 0 - MAX RETRY                                          */ 05870000
*     /*                                                             */ 05871000
*     /***************************************************************/ 05872000
*                                                                  0269 05873000
*       3 NPBNIFB0 PTR(8) INIT(0),                                 0269 05874000
*       3 NPBNIFB1 CHAR(1) INIT('00'X),/* BYTE 1 :                   */ 05875000
*        4 NIPDSTAT BIT(1),         /* DEVICE STATUS                 */ 05876000
*        4 NIPDFEST BIT(1),         /* FEATURE TEST                  */ 05877000
*        4 NIPDRTY BIT(1),          /* RETRY OPTION                  */ 05878000
*        4 NIPDERR BIT(1),          /* REPORT ERRORS                 */ 05879000
*        4 NIPDMOD BIT(1),          /* TAPE MODE REQUIRED            */ 05880000
*        4 * BIT(3),                /* RESERVED                      */ 05881000
*       3 NPBNIFB2 CHAR(1) INIT('00'X),/* BYTE 2                     */ 05882000
*       3 NPBNIFB3 CHAR(1) INIT('00'X),/* BYTE 3 :                   */ 05883000
*        4 NIPDUNAV BIT(1),         /* UNAVAILABLE                   */ 05884000
*        4 NIPDCREJ BIT(1),         /* COMMAND REJECT                */ 05885000
*        4 NIPDOFFL BIT(1),         /* OFF-LINE                      */ 05886000
*        4 * BIT(5),                /* RESERVED                      */ 05887000
*      2 NIPIOBSN,                                                 0269 05888000
*       3 NPBNIOB,                                                 0269 05889000
*                                                                  0269 05890000
*     /***************************************************************/ 05891000
*     /*                                                             */ 05892000
*     /* FLAG AND SENSE BYTES                                        */ 05893000
*     /*                                                             */ 05894000
*     /***************************************************************/ 05895000
*                                                                  0269 05896000
*        4 NPBNFGSN CHAR(4) INIT('42000000'X),                     0269 05897000
*                                                                  0269 05898000
*     /***************************************************************/ 05899000
*     /*                                                             */ 05900000
*     /* IOBECBPT - ECB ADDRESS                                      */ 05901000
*     /*                                                             */ 05902000
*     /***************************************************************/ 05903000
*                                                                  0269 05904000
*        4 NPBNECBA PTR(31) INIT(ADDR(NPBNECB)),                   0269 05905000
*                                                                  0269 05906000
*     /***************************************************************/ 05907000
*     /*                                                             */ 05908000
*     /* FLAGS AND CSW IMAGE                                         */ 05909000
*     /*                                                             */ 05910000
*     /***************************************************************/ 05911000
*                                                                  0269 05912000
*        4 NPBNIOB1 CHAR(8) INIT('0000000000000000'X),             0269 05913000
*                                                                  0269 05914000
*     /***************************************************************/ 05915000
*     /*                                                             */ 05916000
*     /* IOBSTART - CHANNEL PROGRAM ADDRESS                          */ 05917000
*     /*                                                             */ 05918000
*     /***************************************************************/ 05919000
*                                                                  0269 05920000
*        4 NPBNCPAD PTR(31) INIT(0),                               0269 05921000
*                                                                  0269 05922000
*     /***************************************************************/ 05923000
*     /*                                                             */ 05924000
*     /* IOBDCBPT - DCB ADDRESS                                      */ 05925000
*     /*                                                             */ 05926000
*     /***************************************************************/ 05927000
*                                                                  0269 05928000
*        4 NPBNDCBP PTR(31) INIT(ADDR(NPBNDCB1)-40),               0269 05929000
*                                                                  0269 05930000
*     /***************************************************************/ 05931000
*     /*                                                             */ 05932000
*     /* REST OF IOB COMMON                                          */ 05933000
*     /*                                                             */ 05934000
*     /***************************************************************/ 05935000
*                                                                  0269 05936000
*        4 NPBNREST CHAR(8) INIT('0000000000000000'X),             0269 05937000
*                                                                  0269 05938000
*/**                       DASD  EXTENSION                        *  */ 05939000
*                                                                  0269 05940000
*     /***************************************************************/ 05941000
*     /*                                                             */ 05942000
*     /* IOBSEEK - MBBCCHHR                                          */ 05943000
*     /*                                                             */ 05944000
*     /***************************************************************/ 05945000
*                                                                  0269 05946000
*        4 NPBNSEEK CHAR(8) INIT('0000000000000000'X);             0269 05947000
*   DECLARE                                                        0270 05948000
*     1 NIPECBSN,                                                  0270 05949000
*      2 NPBNECB,                                                  0270 05950000
*                                                                  0270 05951000
*     /***************************************************************/ 05952000
*     /*                                                             */ 05953000
*     /* EVENT COMPLETION CODE                                       */ 05954000
*     /*                                                             */ 05955000
*     /***************************************************************/ 05956000
*                                                                  0270 05957000
*       3 NPBNCPCD CHAR(1) INIT('00'X),                            0270 05958000
*                                                                  0270 05959000
*     /***************************************************************/ 05960000
*     /*                                                             */ 05961000
*     /* RB ADDRESS OR REST OF COMPLETION CODE                       */ 05962000
*     /*                                                             */ 05963000
*     /***************************************************************/ 05964000
*                                                                  0270 05965000
*       3 NPBNRBAD PTR(24) INIT(0);                                0270 05966000
*   DECLARE                                                        0271 05967000
*     1 * BDY(DWORD,5),                                            0271 05968000
*                                                                  0271 05969000
*     /***************************************************************/ 05970000
*     /*                                                             */ 05971000
*     /* DEBLNGTH - DEB LENGTH                                       */ 05972000
*     /*                                                             */ 05973000
*     /***************************************************************/ 05974000
*                                                                  0271 05975000
*      2 NPBNLNTH CHAR(1) INIT('06'X),                             0271 05976000
*      2 NPBNRSVD PTR(24) INIT(0),  /* RESERVED                      */ 05977000
*/**               DEB  BASIC  SECTION                            *  */ 05978000
*                                                                  0271 05979000
*      2 NIPDEBSN,                                                 0271 05980000
*       3 NPBNDEB,                                                 0271 05981000
*                                                                  0271 05982000
*     /***************************************************************/ 05983000
*     /*                                                             */ 05984000
*     /* TCB ADDRESS - UNINITIALIZED                                 */ 05985000
*     /*                                                             */ 05986000
*     /***************************************************************/ 05987000
*                                                                  0271 05988000
*        4 NPBNDEB1 PTR(31) INIT(0),                               0271 05989000
*                                                                  0271 05990000
*     /***************************************************************/ 05991000
*     /*                                                             */ 05992000
*     /* DEBAMLNG - ACCESS METHOD SECTION LENGTH                     */ 05993000
*     /*                                                             */ 05994000
*     /***************************************************************/ 05995000
*                                                                  0271 05996000
*        4 NPBNAMLN CHAR(1) INIT('00'X),                           0271 05997000
*        4 NPBNDEB2 PTR(24) INIT(0),/* 3 BYTES - UNUSED              */ 05998000
*                                                                  0271 05999000
*     /***************************************************************/ 06000000
*     /*                                                             */ 06001000
*     /* DEBOFLGS - DATA SET STATUS                                  */ 06002000
*     /*                                                             */ 06003000
*     /***************************************************************/ 06004000
*                                                                  0271 06005000
*        4 NPBNOFLG CHAR(1) INIT('00'X) BDY(WORD),                 0271 06006000
*                                                                  0271 06007000
*     /***************************************************************/ 06008000
*     /*                                                             */ 06009000
*     /* FLAGS,ETC - UNINITIALIZED                                   */ 06010000
*     /*                                                             */ 06011000
*     /***************************************************************/ 06012000
*                                                                  0271 06013000
*        4 NPBNDEB3 CHAR(7) INIT('00000000000000'X),               0271 06014000
*                                                                  0271 06015000
*     /***************************************************************/ 06016000
*     /*                                                             */ 06017000
*     /* DEBNMEXT - NUMBER OF EXTENTS                                */ 06018000
*     /*                                                             */ 06019000
*     /***************************************************************/ 06020000
*                                                                  0271 06021000
*        4 NPBNNMXT CHAR(1) INIT('01'X),                           0271 06022000
*                                                                  0271 06023000
*     /***************************************************************/ 06024000
*     /*                                                             */ 06025000
*     /* IOB ADDRESS - UNINITIALIZED                                 */ 06026000
*     /*                                                             */ 06027000
*     /***************************************************************/ 06028000
*                                                                  0271 06029000
*        4 NPBNDEB4 PTR(24) INIT(0),                               0271 06030000
*                                                                  0271 06031000
*     /***************************************************************/ 06032000
*     /*                                                             */ 06033000
*     /* DEBPRIOR - TASK PRIORITY                                    */ 06034000
*     /*                                                             */ 06035000
*     /***************************************************************/ 06036000
*                                                                  0271 06037000
*        4 NPBNPRTY CHAR(1) INIT('00'X),                           0271 06038000
*                                                                  0271 06039000
*     /***************************************************************/ 06040000
*     /*                                                             */ 06041000
*     /* AN ECB ADDRESS - UNINITIALIZED                              */ 06042000
*     /*                                                             */ 06043000
*     /***************************************************************/ 06044000
*                                                                  0271 06045000
*        4 NPBNDEB5 PTR(24) INIT(0),                               0271 06046000
*                                                                  0271 06047000
*     /***************************************************************/ 06048000
*     /*                                                             */ 06049000
*     /* DEBPROTG,DEBDEBID                                           */ 06050000
*     /*                                                             */ 06051000
*     /***************************************************************/ 06052000
*                                                                  0271 06053000
*        4 NPBNKYID CHAR(1) INIT('0F'X),                           0271 06054000
*                                                                  0271 06055000
*     /***************************************************************/ 06056000
*     /*                                                             */ 06057000
*     /* DEBDCBAD - DCB ADDRESS                                      */ 06058000
*     /*                                                             */ 06059000
*     /***************************************************************/ 06060000
*                                                                  0271 06061000
*        4 NPBNDCBA PTR(24) INIT(ADDR(NPBNDCB1)-40),               0271 06062000
*                                                                  0271 06063000
*     /***************************************************************/ 06064000
*     /*                                                             */ 06065000
*     /* DEBEXSCL - EXTENT SCALE                                     */ 06066000
*     /*                                                             */ 06067000
*     /***************************************************************/ 06068000
*                                                                  0271 06069000
*        4 NPBNXSCL CHAR(1) INIT('00'X),                           0271 06070000
*                                                                  0271 06071000
*     /***************************************************************/ 06072000
*     /*                                                             */ 06073000
*     /* DEBAPPAD - APPENDAGE ADDRESS                                */ 06074000
*     /*                                                             */ 06075000
*     /***************************************************************/ 06076000
*                                                                  0271 06077000
*        4 NPBNAPAD PTR(24) INIT(0),                               0271 06078000
*                                                                  0271 06079000
*/**            DIRECT - ACCESS STORAGE DEVICE SECTION            *  */ 06080000
*                                                                  0271 06081000
*        4 *(64) FIXED(31) INIT((64)0);                            0271 06082000
*   DECLARE                                                        0272 06083000
*     1 *,                                                         0272 06084000
*      2 NPBNDCB1,                                                 0272 06085000
*                                                                  0272 06086000
*     /***************************************************************/ 06087000
*     /*                                                             */ 06088000
*     /* DCBMACRF - MACRO TYPE                                       */ 06089000
*     /*                                                             */ 06090000
*     /***************************************************************/ 06091000
*                                                                  0272 06092000
*        4 NPBNMACR CHAR(4) INIT('00008000'X) BDY(WORD),           0272 06093000
*                                                                  0272 06094000
*     /***************************************************************/ 06095000
*     /*                                                             */ 06096000
*     /* DCBIFLGS - FLAGS FOR IOS                                    */ 06097000
*     /*                                                             */ 06098000
*     /***************************************************************/ 06099000
*                                                                  0272 06100000
*        4 NPBNIFGS CHAR(1) INIT('00'X),                           0272 06101000
*                                                                  0272 06102000
*     /***************************************************************/ 06103000
*     /*                                                             */ 06104000
*     /* DCBDEBAD - DEB ADDRESS                                      */ 06105000
*     /*                                                             */ 06106000
*     /***************************************************************/ 06107000
*                                                                  0272 06108000
*        4 NPBNDEBA PTR(24) INIT(ADDR(NPBNDEB)),                   0272 06109000
*                                                                  0272 06110000
*     /***************************************************************/ 06111000
*     /*                                                             */ 06112000
*     /* DCBOFLGS - FLAGS FOR OPEN                                   */ 06113000
*     /*                                                             */ 06114000
*     /***************************************************************/ 06115000
*                                                                  0272 06116000
*        4 NPBNOFGS CHAR(4) INIT('12000000'X);                     0272 06117000
*                                                                  0272 06118000
*/*                     DATA CONTROL BLOCK BASE                      */ 06119000
*                                                                  0273 06120000
*   DECLARE                                                        0273 06121000
*     1 NIPDCBSN BASED(ADDR(NPBNMACR)-40),                         0273 06122000
*      2 NPBNDCB;                                                  0273 06123000
*                                                                  0274 06124000
*/********************************************************************/ 06125000
*/*                                                                  */ 06126000
*/*         INCLUDE DATA EXTENT BLOCK DSECT                          */ 06127000
*/*                                                                  */ 06128000
*/********************************************************************/ 06129000
*/*         %INCLUDE SYSLIB(IEZDEB)                                  */ 06130000
*/* **************************************************************** */ 06131000
*/*                                                                  */ 06132000
*/*            ***** DATA EXTENT BLOCK *****                         */ 06133000
*/*                                                                  */ 06134000
*/*  OS/VS2 RELEASE 4, 12/05/75, LEVEL=10                            */ 06135000
*/*                                                                  */ 06136000
*/*  METHOD OF ACCESS                                                */ 06137000
*/*      PL/S - DCL (DEBPTR,DEBDAPTR,DEBEXPTR,DEBSBPTR) PTR          */ 06138000
*/*      BAL  - FIVE DSECTS ARE PRODUCED.  USING ON A DSECT NAME     */ 06139000
*/*             GIVES ADDRESSABILITY FOR ALL SYMBOLS WITHIN THAT     */ 06140000
*/*             DSECT.  THE DSECT NAMES AND THE SECTIONS WITHIN EACH */ 06141000
*/*             DSECT ARE                                            */ 06142000
*/*                                                                  */ 06143000
*/*             DEB ***  APPENDAGE VECTOR TABLE SECTION              */ 06144000
*/*                      PREFIX TABLE                                */ 06145000
*/*                      BASIC SECTION                               */ 06146000
*/*                      UNIT RECORD, MAGNETIC TAPE AND              */ 06147000
*/*                        TELECOMMUNICATIONS DEVICES SECTION        */ 06148000
*/*                      3540 ACCESS METHOD DEPENDENT SECTN  @X04AA9A*/ 06149000
*/*                      ISAM DEPENDENT SECTION                      */ 06150000
*/*                      *** POINTERS TO THE DEB IN OTHER CONTROL    */ 06151000
*/*                          BLOCKS SUCH AS DCB POINT TO THE BASIC   */ 06152000
*/*                          SECTION.  USING ON DEBBASIC GIVES       */ 06153000
*/*                          ADDRESSABILITY FOR BASIC SECTION AND    */ 06154000
*/*                          NEXT TWO SECTIONS.  DEBAPPAD IN BASIC   */ 06155000
*/*                          SECTION CONTAINS ADDRESS OF APPENDAGE   */ 06156000
*/*                          VECTOR TABLE (AVT) SECTION.  PREFIX     */ 06157000
*/*                          FOLLOWS AVT SECTION.                    */ 06158000
*/*             DEBDASD  DIRECT ACCESS STORAGE DEVICE SECTION        */ 06159000
*/*             DEBACSMD EXCP, BSAM AND QSAM DEPENDENT SECTION       */ 06160000
*/*                      BPAM DEPENDENT SECTION                      */ 06161000
*/*                      BDAM DEPENDENT SECTION                      */ 06162000
*/*                      BTAM DEPENDENT SECTION                      */ 06163000
*/*                      GAM DEPENDENT SECTION                       */ 06164000
*/*                      ISAM LOAD MODE EXTENSION **                 */ 06165000
*/*                      ISAM SCAN MODE EXTENSION **                 */ 06166000
*/*                      BISAM MODE EXTENSION **                     */ 06167000
*/*                      ** FOR THESE 3 EXTENSIONS, LOAD REGISTER    */ 06168000
*/*                         FROM DEBEXPT IN ISAM DEPENDENT SECTION   */ 06169000
*/*                         TO SET REGISTER FOR USING.               */ 06170000
*/*             DEBSUBNM SUBROUTINE NAME SECTION                     */ 06171000
*/*             DEBXTN   EXTENSION FOR OS/VS2                        */ 06172000
*/*                                                                  */ 06173000
*/*             WHEN LISTING IS SUPPRESSED, YOU CAN DETERMINE WHICH  */ 06174000
*/*             DSECT A SYNBOL IS IN BY USING THE STARTMENT NUMBER   */ 06175000
*/*             IN THE DEFN COLUMN IN THE CROSS REFERENCE LISTING.   */ 06176000
*/*             FOR EXAMPLE, ANY SYMBOL DEFINED BETWEEN THE          */ 06177000
*/*             STATEMENT NUMBERS FOR DEBDASD AND DEBACSMD IS IN     */ 06178000
*/*             THE DIRECT ACCESS STORAGE DEVICE SECTION.            */ 06179000
*/*                                                                  */ 06180000
*/*  F.E.'S                                                          */ 06181000
*/*      MICROFICHE LISTING - IEZDEB                                 */ 06182000
*/*                                                                  */ 06183000
*/*  DEVELOPERS                                                      */ 06184000
*/*      BAL LISTING  - SPECIFY LIST=YES ON MACRO CALL               */ 06185000
*/*      PL/S LISTING - SPECIFY %IHALIST='YES' BEFORE INCLUDE        */ 06186000
*/*                                                                  */ 06187000
*/*      FOR INTEGRATION, A LISTING SHOULD NOT BE REQUESTED.         */ 06188000
*/*                                                                  */ 06189000
*/*  FUNCTION                                                        */ 06190000
*/*      THE DATA EXTENT BLOCK (DEB) CONTAINS AN EXTENSION OF        */ 06191000
*/*      INFORMATION IN THE DCB.  EACH DEB IS ASSOCIATED WITH A      */ 06192000
*/*      DCB, AND THE TWO POINT TO EACH OTHER.  THE DEB CONTAINS     */ 06193000
*/*      INFORMATION CONCERNING THE PHYSICAL CHARACTERISTICS OF      */ 06194000
*/*      THE DATA SET AND OTHER INFORMATION THAT IS USED BY THE      */ 06195000
*/*      CONTROL PROGRAM.                                            */ 06196000
*/*                                                                  */ 06197000
*/* **************************************************************** */ 06198000
*                                                                  0274 06199000
*                                                                  0274 06200000
*/*  *************************************************************** */ 06201000
*/*                   DEB BASIC SECTION                              */ 06202000
*/*  *************************************************************** */ 06203000
*                                                                  0274 06204000
*   DECLARE                                                        0274 06205000
*     1 DEBBASIC BASED(DEBPTR) BDY(WORD),                          0274 06206000
*       3 DEBTCBAD PTR(31),         /* ADDRESS OF TCB FOR THIS DEB   */ 06207000
*        4 DEBNMSUB CHAR(1),        /* NUMBER OF SUBROUTINES LOADED     06208000
*                                      BY OPEN EXECUTOR ROUTINES     */ 06209000
*        4 DEBTCBB PTR(24),         /* ADDRESS OF TCB FOR THIS DEB   */ 06210000
*       3 DEBDEBAD PTR(31),         /* ADDRESS OF THE NEXT DEB IN THE   06211000
*                                      SAME TASK                     */ 06212000
*        4 DEBAMLNG CHAR(1),        /* NUMBER OF BYTES IN THE ACCESS    06213000
*                                      METHOD DEPENDENT SECTION. FOR    06214000
*                                      BDAM THIS FIELD CONTAINS THE     06215000
*                                      LENGTH EXPRESSED IN NUMBER OF    06216000
*                                      WORDS                         */ 06217000
*        4 DEBDEBB PTR(24),         /* *** SAME AS DEBDEBAD ABOVE    */ 06218000
*       3 DEBIRBAD PTR(31),         /* IRB STORAGE ADDRESS USED FOR     06219000
*                                      APPENDAGE ASYNCHRONOUS EXITS  */ 06220000
*        4 DEBOFLGS CHAR(1),        /* DATA SET STATUS FLAGS         */ 06221000
*         5 DEBDISP BIT(2),         /* DATA SET DISPOSITION FLAGS    */ 06222000
*         5 DEBEOF BIT(1),          /* END-OF-FILE (EOF) ENCOUNTERED    06223000
*                                      (TAPE INPUT) FORMAT 1 DSCB BIT   06224000
*                                      93.0 INDICATES THAT THE     0274 06225000
*                                      CURRENT VOLUME IS THE LAST  0274 06226000
*                                      VOLUME OF THE DATA SET (DASD     06227000
*                                      INPUT)                        */ 06228000
*         5 DEBRLSE BIT(1),         /* RELEASE UNUSED EXTERNAL     0274 06229000
*                                      STORAGE (DASD) EMULATOR TAPE     06230000
*                                      WITH SECOND GENERATION FORMAT.   06231000
*                                      TAPE MAY CONTAIN BLOCKS     0274 06232000
*                                      SHORTER THAN 12 CHARACTERS  0274 06233000
*                                      (TAPE)                        */ 06234000
*         5 DEBDCB BIT(1),          /* DCB MODIFICATION              */ 06235000
*         5 DEBSPLIT BIT(1),        /* SPLIT CYLINDER (DASD) 7-TRACK    06236000
*                                      EMULATOR TAPE WITH POSSIBLE 0274 06237000
*                                      MIXED PARITY RECORDS (TAPE)   */ 06238000
*         5 DEBLABEL BIT(1),        /* NONSTANDARD LABELS            */ 06239000
*         5 DEBRERR BIT(1),         /* USE REDUCED ERROR RECOVERY  0274 06240000
*                                      PROCEDURE (TAPE) CONCATENATED    06241000
*                                      PARTITIONED ORGANIZATION DATA    06242000
*                                      SETS PROCESSED USING BPAM   0274 06243000
*                                      (DASD)                        */ 06244000
*        4 DEBIRBB PTR(24),         /* *** SAME AS DEBIRBAD ABOVE    */ 06245000
*       3 DEBOPATB CHAR(1),         /* FLAGS INDICATING BOTH THE   0274 06246000
*                                      METHOD OF I/O PROCESSING AND     06247000
*                                      THE DISPOSITION THAT IS TO BE    06248000
*                                      PERFORMED WHEN AN           0274 06249000
*                                      END-OF-VOLUME (EOV) CONDITION    06250000
*                                      OCCURS                        */ 06251000
*        4 DEBABEND BIT(1),         /* SET BY ABEND INDICATING A   0274 06252000
*                                      SYSABEND OR SYSUDUMP DATA SET    06253000
*                                      (OS/VS2)                      */ 06254000
*        4 DEBZERO BIT(1),          /* ALWAYS ZERO                   */ 06255000
*        4 DEBPOSIT BIT(2),         /* DATA SET POSITIONING FLAGS    */ 06256000
*        4 DEBACCS BIT(4),          /* TYPE OF I/O ACCESSING BEING 0274 06257000
*                                      DONE                          */ 06258000
*       3 DEBQSCNT CHAR(1),         /* PURGE (SVC 16) - QUIESCE    0274 06259000
*                                      COUNT. NUMBER OF DEVICES    0274 06260000
*                                      EXECUTING USER'S CHANNEL    0274 06261000
*                                      PROGRAMS, AS SHOWN BY BITS 5     06262000
*                                      AND 6 OF UCBFL1 FIELDS        */ 06263000
*       3 DEBFLGS1 CHAR(1),         /* FLAG FIELD                    */ 06264000
*        4 DEBPWCKD BIT(1),         /* PASSWORD WAS SUPPLIED DURING     06265000
*                                      OPEN. EOV WILL NOT REQUEST A     06266000
*                                      PASSWORD FOR EACH ADDITIONAL     06267000
*                                      VOLUME OF A MULTIVOLUME DATA     06268000
*                                      SET                           */ 06269000
*        4 DEBEOFDF BIT(1),         /* SET BY EOV TO INFORM CLOSE  0274 06270000
*                                      THAT AN END-OF-FILE HAS BEEN     06271000
*                                      ENCOUNTERED AND, THEREFORE, 0274 06272000
*                                      DEFERRED LABEL PROCESSING IS     06273000
*                                      ALLOWED                       */ 06274000
*        4 DEBRSIOA BIT(1),         /* SIO APPENDAGE RE-ENTRY      0274 06275000
*                                      AUTHORIZATION BIT (OS/VS1)  0274 06276000
*                                      (MDC331)              @XM06077*/ 06277000
*        4 DEBRSV02 BIT(1),         /* RESERVED                      */ 06278000
*        4 DEBCINDI BIT(1),         /* DCB ASSOCIATED WITH THIS DEB     06279000
*                                      IS BEING PROCESSED BY THE   0274 06280000
*                                      COMPATIBILITY INTERFACE     0274 06281000
*                                      ROUTINES (VSAM) ICB462        */ 06282000
*        4 DEBF1CEV BIT(1),         /* EOV PROCESSING OCCURRED DURING   06283000
*                                      CLOSE PROCESSING. TESTED AND     06284000
*                                      SET TO ZERO BY CLOSE, SET TO     06285000
*                                      ONE BY EOV. (ICB353) A42228   */ 06286000
*        4 DEBAPFIN BIT(1),         /* IF ON, AUTHORIZED PROGRAMS CAN   06287000
*                                      BE LOADED MDC001              */ 06288000
*        4 DEBXTNIN BIT(1),         /* IF ONE, DEB EXTENSION EXISTS     06289000
*                                      (OS/VS2) MDC007               */ 06290000
*       3 DEBRSV05 CHAR(1),         /* RESERVED                      */ 06291000
*       3 DEBUSRPG PTR(31),         /* ADDRESS OF FIRST IOB IN THE 0274 06292000
*                                      USER PURGE CHAIN (OS/VS1)   0274 06293000
*                                      ADDRESS OF PURGED I/O RESTORE    06294000
*                                      LIST (PIRL) (OS/VS2) (MDC029)    06295000
*                                                              YM3158*/ 06296000
*        4 DEBNMEXT CHAR(1),        /* NUMBER OF EXTENTS SPECIFIED IN   06297000
*                                      DSCB'S                        */ 06298000
*        4 DEBUSRPB PTR(24),        /* *** SAME AS DEBUSRPG ABOVE    */ 06299000
*       3 DEBRRQ PTR(31),           /* POINTER TO RELATED REQUEST  0274 06300000
*                                      QUEUE (OS/VS2) MDC026         */ 06301000
*        4 DEBECBAD PTR(31),        /* ADDRESS OF A PARAMETER LIST 0274 06302000
*                                      USED TO LOCATE THE PURGE ECB     06303000
*                                      FOR AN SVC PURGE REQUEST    0274 06304000
*                                      (OS/VS1) MDC025               */ 06305000
*         5 DEBPRIOR CHAR(1),       /* PRIORITY OF THE TASK OWNING 0274 06306000
*                                      DEB                           */ 06307000
*         5 DEBECBB PTR(24),        /* *** SAME AS DEBECBAD ABOVE    */ 06308000
*       3 DEBDCBAD PTR(31),         /* ADDRESS OF DCB ASSOCIATED WITH   06309000
*                                      THIS DEB                      */ 06310000
*        4 DEBPROTG CHAR(1),        /* TASK PROTECTION KEY IN HIGH-     06311000
*                                      ORDER 4 BITS                  */ 06312000
*         5 DEBDEBID CHAR(1),       /* A HEX F IN LOW-ORDER 4 BITS TO   06313000
*                                      IDENTIFY THIS BLOCK AS A DEB  */ 06314000
*        4 DEBDCBB PTR(24),         /* *** SAME AS DEBDCBAD ABOVE    */ 06315000
*       3 DEBAPPAD PTR(31),         /* ADDRESS OF THE I/O APPENDAGE     06316000
*                                      VECTOR TABLE                  */ 06317000
*        4 DEBEXSCL CHAR(1),        /* EXTENT SCALE- 4 FOR DIRECT  0274 06318000
*                                      ACCESS DEVICE AND 3525 CARD 0274 06319000
*                                      PUNCH WITH DEVICE-ASSOCIATED     06320000
*                                      DATA SET SUPPORT AND 2 FOR  0274 06321000
*                                      NONDIRECT ACCESS DEVICE AND 0274 06322000
*                                      COMMUNICATION DEVICE. THIS  0274 06323000
*                                      FIELD IS USED TO DETERMINE THE   06324000
*                                      SIZE OF THE DEVICE DEPENDENT     06325000
*                                      SECTION ICB394                */ 06326000
*        4 DEBAPPB PTR(24),         /* *** SAME AS DEBAPPAD ABOVE    */ 06327000
*       3 DEBBASND CHAR(0) BDY(WORD);                              0274 06328000
*                                                                  0274 06329000
*/*  *************************************************************** */ 06330000
*/*    UNIT RECORD, MAGNETIC TAPE, TELECOMMUNICATIONS DEVICES SECTION*/ 06331000
*/*                                                                  */ 06332000
*/*      NOTE  FOR TELECOMMUNICATIONS DEVICES, THE UCB ADDRESS       */ 06333000
*/*            IS REPEATED FOR EACH LINE ASSIGNED                    */ 06334000
*/*  *************************************************************** */ 06335000
*                                                                  0275 06336000
*   DECLARE                                                        0275 06337000
*     1 DEBBAS02 DEF(DEBBASND) BDY(WORD),                          0275 06338000
*       3 DEBDDS1 BDY(WORD),                                       0275 06339000
*        4 DEBSUCBA PTR(31),        /* ADDRESS OF UCB ASSOCIATED WITH   06340000
*                                      A GIVEN DATA SET              */ 06341000
*         5 DEBSDVM CHAR(1),        /* DEVICE MODIFIER. FOR MAGNETIC    06342000
*                                      TAPE, SET MODE OPERATION CODE.   06343000
*                                      FOR UNIT RECORD, NOT USED.    */ 06344000
*         5 DEBSUCBB PTR(24),       /* *** SAME AS DEBSUCBA ABOVE    */ 06345000
*        4 DEBDEVED CHAR(0) BDY(WORD),/* END OF COMMON UNIT RECORD 0275 06346000
*                                      FIELDS (MDC330)       @X04AA9A*/ 06347000
*/*      THE FOLLOWING FIELDS ARE PRESENT ONLY FOR THE 3525 WITH     */ 06348000
*/*      DEVICE-ASSOCIATED DATA SET SUPPORT                          */ 06349000
*                                                                  0275 06350000
*        4 DEBRDCB PTR(31),         /* ADDRESS OF DCB FOR THE READ 0275 06351000
*                                      ASSOCIATED DATA SET ICB394    */ 06352000
*         5 DEBRSV06 CHAR(1),       /* RESERVED ICB394               */ 06353000
*         5 DEBRDCBA PTR(24),       /* SAME AS DEBRDCB ABOVE ICB394  */ 06354000
*        4 DEBPDCB PTR(31),         /* ADDRESS OF DCB FOR THE PUNCH     06355000
*                                      ASSOCIATED DATA SET ICB394    */ 06356000
*         5 DEBRSV07 CHAR(1),       /* RESERVED ICB394               */ 06357000
*         5 DEBPDCBA PTR(24),       /* SAME AS DEBPDCB ABOVE ICB394  */ 06358000
*        4 DEBWDCB PTR(31),         /* ADDRESS OF DCB FOR THE PRINT     06359000
*                                      ASSOCIATED DATA SET ICB394    */ 06360000
*         5 DEBRSV08 CHAR(1),       /* RESERVED ICB394               */ 06361000
*         5 DEBWDCBA PTR(24);       /* SAME AS DEBWDCB ABOVE ICB394  */ 06362000
*/*  *************************************************************** */ 06363000
*/*                 3540 ACCESS METHOD DEPENDENT SECTION     @X04AA9A*/ 06364000
*/*                 (OS/VS1 ONLY)                            @X04AA9A*/ 06365000
*/*                                                                  */ 06366000
*/*      NOTE  THIS SECTION FOLLOWS DEBSUCBA IN UNIT RECORD,         */ 06367000
*/*            MAGNETIC TAPE, TELECOMMUNICATIONS DEVICES SECTION     */ 06368000
*/*            IF DEB IS FOR 3540 DEVICE.                    @X04AA9A*/ 06369000
*/*  *************************************************************** */ 06370000
*                                                                  0276 06371000
*   DECLARE                                                        0276 06372000
*     1 DEBACS09 DEF(DEBDEVED) BDY(WORD),/*                  @X04AA9A*/ 06373000
*      2 DEBASC09 CHAR(16) BDY(WORD),/* 3540 ACCESS METHOD DEPENDENT    06374000
*                                      SECTION (MDC317)      @X04AA9A*/ 06375000
*       3 DEBVOLAC CHAR(1),         /* VOLUME ACCESSABILITY INDICATOR   06376000
*                                      (MDC327)              @X04AA9A*/ 06377000
*       3 DEBDSSQL CHAR(1),         /* DATA SET SECURITY QUALIFIER 0276 06378000
*                                      (MDC328)              @X04AA9A*/ 06379000
*       3 DEBVSEQU PTR(8),          /* VOLUME SEQUENCE NUMBER      0276 06380000
*                                      (MDC318)              @X04AA9A*/ 06381000
*       3 DEBEAMFG BIT(8),          /* FLAG BYTE (MDC319)    @X04AA9A*/ 06382000
*        4 DEBMULTI BIT(1),         /* MULTI-VOLUME INDICATOR      0276 06383000
*                                      (MDC320)              @X04AA9A*/ 06384000
*        4 DEBDSOPN BIT(1),         /* DATA SET IS OPEN (MDC321)   0276 06385000
*                                                            @X04AA9A*/ 06386000
*        4 DEBVAMSG BIT(1),         /* VOLUME ACCESSABILITY MESSAGE     06387000
*                                      HAS BEEN ISSUED (MDC329)    0276 06388000
*                                                            @X04AA9A*/ 06389000
*        4 DEBSECVL BIT(1),         /* SECURE VOLUME (MDC332)      0276 06390000
*                                                            @X04AA9A*/ 06391000
*        4 DEBRV004 BIT(1),         /* RESERVED              @X04AA9A*/ 06392000
*        4 DEBRV005 BIT(1),         /* RESERVED              @X04AA9A*/ 06393000
*        4 DEBRV006 BIT(1),         /* RESERVED              @X04AA9A*/ 06394000
*        4 DEBRV007 BIT(1),         /* RESERVED              @X04AA9A*/ 06395000
*       3 DEBDSID CHAR(8),          /* DATA SET IDENTIFIER (DSID)  0276 06396000
*                                      (INPUT) (MDC305)      @X04AA9A*/ 06397000
*        4 DEBEXDTE CHAR(6),        /* EXPIRATION DATE (OUTPUT)    0276 06398000
*                                      (MDC333)              @X04AA9A*/ 06399000
*        4 DEBWTPTI CHAR(1),        /* WRITE PROTECT INDICATOR     0276 06400000
*                                      (OUTPUT) (MDC334)     @X04AA9A*/ 06401000
*        4 DEBRV008 CHAR(1),        /* RESERVED (OUTPUT) (MDC335)  0276 06402000
*                                                            @X04AA9A*/ 06403000
*       3 DEBEOD CHAR(4) BDY(WORD), /* END OF DATA (EOD) ADDRESS   0276 06404000
*                                      (INPUT) (MDC306)      @X04AA9A*/ 06405000
*        4 DEBBOE CHAR(4) BDY(WORD),/* BEGINNING OF EXTENT (BOE)   0276 06406000
*                                      ADDRESS (OUTPUT) (MDC322)   0276 06407000
*                                                            @X04AA9A*/ 06408000
*         5 DEBEODRV PTR(8),        /* RESERVED (MDC307)     @X04AA9A*/ 06409000
*          6 DEBBOERV PTR(8),       /* RESERVED (MDC323)     @X04AA9A*/ 06410000
*         5 DEBEODTT PTR(8),        /* EOD TRACK NUMBER (MDC308)   0276 06411000
*                                                            @X04AA9A*/ 06412000
*          6 DEBBOETT PTR(8),       /* BOE TRACK NUMBER (MDC324)   0276 06413000
*                                                            @X04AA9A*/ 06414000
*         5 DEBEOD0 PTR(8),         /* MUST BE ZERO (MDC309) @X04AA9A*/ 06415000
*          6 DEBBOE0 PTR(8),        /* MUST BE ZERO (MDC325) @X04AA9A*/ 06416000
*         5 DEBEODSS PTR(8),        /* EOD SECTOR NUMBER (MDC310)  0276 06417000
*                                                            @X04AA9A*/ 06418000
*          6 DEBBOESS PTR(8);       /* BOE SECTOR NUMBER (MDC326)  0276 06419000
*                                                            @X04AA9A*/ 06420000
*/*  *************************************************************** */ 06421000
*/*              DEB ISAM DEPENDENT SECTION                          */ 06422000
*/*                                                                  */ 06423000
*/*      NOTE  PRESENT ONLY IF ISAM IS USED.  FOLLOWS THE BASIC      */ 06424000
*/*            SECTION AND PRECEDES THE DIRECT ACCESS STORAGE        */ 06425000
*/*            DEVICE SECTION.  COUNTED AS ONE EXTENT IN DEBNMEXT.   */ 06426000
*/*  *************************************************************** */ 06427000
*                                                                  0277 06428000
*   DECLARE                                                        0277 06429000
*     1 DEBBAS01 DEF(DEBBASND) BDY(WORD),                          0277 06430000
*      2 DEBISAM BDY(WORD),                                        0277 06431000
*       3 DEBFIEAD PTR(31),         /* ADDRESS OF FIRST INDEX EXTENT */ 06432000
*        4 DEBNIEE CHAR(1),         /* NUMBER OF EXTENTS OF        0277 06433000
*                                      INDEPENDENT INDEX AREA        */ 06434000
*        4 DEBFIEB PTR(24),         /* *** SAME AS DEBFIEAD ABOVE    */ 06435000
*       3 DEBFPEAD PTR(31),         /* ADDRESS OF THE FIRST PRIME  0277 06436000
*                                      DATA EXTENT                   */ 06437000
*        4 DEBNPEE CHAR(1),         /* NUMBER OF EXTENTS OF PRIME  0277 06438000
*                                      DATA AREA (M=0 EXTENT)        */ 06439000
*        4 DEBFPEB PTR(24),         /* *** SAME AS DEBFPEAD ABOVE    */ 06440000
*       3 DEBFOEAD PTR(31),         /* ADDRESS OF THE FIRST OVERFLOW    06441000
*                                      EXTENT                        */ 06442000
*        4 DEBNOEE CHAR(1),         /* NUMBER OF EXTENTS OF        0277 06443000
*                                      INDEPENDENT OVERFLOW AREA     */ 06444000
*        4 DEBFOEB PTR(24),         /* *** SAME AS DEBFOEAD ABOVE    */ 06445000
*       3 DEBEXPT PTR(31),          /* ADDRESS OF ISAM DEB EXTENSION    06446000
*                                      ICB379                        */ 06447000
*        4 DEBRPSID BIT(8),         /* ROTATIONAL POSITION SENSING 0277 06448000
*                                      (RPS) DEVICE INDICATORS       */ 06449000
*         5 DEBRPSP BIT(1),         /* PRIME DATA AREA IS ON RPS   0277 06450000
*                                      DEVICE                        */ 06451000
*         5 DEBRPSI BIT(1),         /* INDEPENDENT INDEX AREA IS ON     06452000
*                                      RPS DEVICE                    */ 06453000
*         5 DEBRPSO BIT(1),         /* INDEPENDENT OVERFLOW AREA IS     06454000
*                                      ON RPS DEVICE                 */ 06455000
*         5 DEBRPSAP BIT(1),        /* RPS SIO APPENDAGE HAS BEEN  0277 06456000
*                                      LOADED                        */ 06457000
*         5 DEBRSV09 BIT(1),        /* RESERVED                      */ 06458000
*         5 DEBRSV10 BIT(1),        /* RESERVED                      */ 06459000
*         5 DEBRSV11 BIT(1),        /* RESERVED                      */ 06460000
*         5 DEBRSV12 BIT(1),        /* RESERVED                      */ 06461000
*        4 DEBEXPTA PTR(24);        /* SAME AS DEBEXPT ABOVE ICB379  */ 06462000
*/*  *************************************************************** */ 06463000
*/*           DIRECT ACCESS STORAGE DEVICE SECTION                   */ 06464000
*/*                                                                  */ 06465000
*/*      NOTE  IF ISAM IS BEING USED, THIS SECTION FOLLOWS THE       */ 06466000
*/*            ISAM DEVICE DEPENDENT SECTION.  OTHERWISE, IT         */ 06467000
*/*            FOLLOWS THE BASIC SECTION.                            */ 06468000
*/*                                                                  */ 06469000
*/*            THERE IS ONE OF THESE SECTIONS FOR EACH EXTENT.       */ 06470000
*/*  *************************************************************** */ 06471000
*                                                                  0278 06472000
*   DECLARE                                                        0278 06473000
*     1 DEBDASD BASED(DEBDAPTR) BDY(WORD),                         0278 06474000
*       3 DEBUCBAD PTR(31),         /* ADDRESS OF UCB ASSOCIATED WITH   06475000
*                                      THIS DATA EXTENT              */ 06476000
*        4 DEBDVMOD CHAR(1),        /* DEVICE MODIFIER - FILE MASK   */ 06477000
*        4 DEBUCBA PTR(24),         /* *** SAME AS DEBUCBAD ABOVE    */ 06478000
*       3 DEBBINUM CHAR(2),         /* BIN NUMBER                    */ 06479000
*       3 DEBSTRCC CHAR(2),         /* CYLINDER ADDRESS FOR THE START   06480000
*                                      OF AN EXTENT LIMIT            */ 06481000
*       3 DEBSTRHH CHAR(2),         /* READ/WRITE TRACK ADDRESS FOR     06482000
*                                      THE START OF AN EXTENT LIMIT  */ 06483000
*       3 DEBENDCC CHAR(2),         /* CYLINDER ADDRESS FOR THE END     06484000
*                                      OF AN EXTENT LIMIT            */ 06485000
*       3 DEBENDHH CHAR(2),         /* READ/WRITE TRACK ADDRESS FOR     06486000
*                                      THE END OF AN EXTENT LIMIT    */ 06487000
*       3 DEBNMTRK CHAR(2);         /* NUMBER OF TRACKS ALLOCATED TO    06488000
*                                      A GIVEN EXTENT. FOR SPLIT   0278 06489000
*                                      CYLINDER DATA SETS, THIS FIELD   06490000
*                                      REPRESENTS THE NUMBER OF    0278 06491000
*                                      TRACKS BETWEEN THE START    0278 06492000
*                                      ADDRESS OF THE EXTENT AND THE    06493000
*                                      END ADDRESS OF THE EXTENT.    */ 06494000
*/*  *************************************************************** */ 06495000
*/*      EXCP ACCESS METHOD, BSAM AND QSAM DEPENDENT SECTION         */ 06496000
*/*  *************************************************************** */ 06497000
*                                                                  0279 06498000
*   DECLARE                                                        0279 06499000
*     1 DEBACSMD BASED(DEBEXPTR) BDY(WORD),                        0279 06500000
*       3 DEBVOLSQ CHAR(2),         /* VOLUME SEQUENCE NUMBER FOR  0279 06501000
*                                      MULTIVOLUME SEQUENTIAL DATA 0279 06502000
*                                      SETS                          */ 06503000
*        4 DEBVOLBT BIT(8),         /* FIRST BYTE OF DEBVOLSQ      0279 06504000
*                                      (MDC016)               YA00318*/ 06505000
*         5 DEBEXFUL BIT(1),        /* SET BY EOV WHEN REWRITING AN     06506000
*                                      OLD DIRECT ACCESS DATA SET TO    06507000
*                                      INDICATE THAT ALL PREVIOUS  0279 06508000
*                                      EXISTING EXTENTS HAVE BEEN  0279 06509000
*                                      FILLED (MDC017)        YA00318*/ 06510000
*         5 DEBRSV36 BIT(1),        /* RESERVED MDC018               */ 06511000
*         5 DEBRSV37 BIT(1),        /* RESERVED MDC018               */ 06512000
*         5 DEBRSV38 BIT(1),        /* RESERVED MDC018               */ 06513000
*         5 DEBRSV39 BIT(1),        /* RESERVED MDC018               */ 06514000
*         5 DEBRSV40 BIT(1),        /* RESERVED MDC018               */ 06515000
*         5 DEBRSV41 BIT(1),        /* RESERVED MDC018               */ 06516000
*         5 DEBRSV42 BIT(1),        /* RESERVED MDC018               */ 06517000
*        4 DEBVLSEQ PTR(8),         /* FOR DIRECT ACCESS, SEQUENCE 0279 06518000
*                                      NUMBER OF THE VOLUME OF THE 0279 06519000
*                                      DATA SET RELATIVE TO THE FIRST   06520000
*                                      VOLUME OF THE DATA SET. FOR 0279 06521000
*                                      TAPE, SEQUENCE NUMBER OF THE     06522000
*                                      VOLUME OF THE DATA SET      0279 06523000
*                                      RELATIVE TO THE FIRST VOLUME     06524000
*                                      PROCESSED. (MDC019)    YA00318*/ 06525000
*       3 DEBVOLNM CHAR(2),         /* TOTAL NUMBER OF VOLUMES IN A     06526000
*                                      MULTIVOLUME SEQUENTIAL DATA 0279 06527000
*                                      SET.                          */ 06528000
*       3 DEBDSNM CHAR(8) BDY(WORD),/* MEMBER NAME. THIS FIELD     0279 06529000
*                                      APPEARS ONLY WHEN AN OUTPUT 0279 06530000
*                                      DATA SET HAS BEEN OPENED FOR A   06531000
*                                      MEMBER NAME AND THE DSCB    0279 06532000
*                                      SPECIFIES A PARTITIONED DATA     06533000
*                                      SET.                          */ 06534000
*         5 DEBUTSAA PTR(31),       /* ADDRESS OF THE USER TOTALING     06535000
*                                      SAVE AREA                     */ 06536000
*          6 DEBRSV13 CHAR(1),      /* RESERVED                      */ 06537000
*          6 DEBUTSAB PTR(24),      /* *** SAME AS DEBUTSAA ABOVE    */ 06538000
*         5 DEBRSV14 CHAR(4) BDY(WORD),/* RESERVED (IF USER TOTALING    06539000
*                                      WAS SPECIFIED)                */ 06540000
*       3 DEBBLKSI FIXED(15),       /* MAXIMUM BLOCK SIZE (MDC346) 0279 06541000
*                                                            @ZA03699*/ 06542000
*       3 DEBLRECL FIXED(15);       /* LOGICAL RECORD LENGTH (MDC347)   06543000
*                                                            @ZA03699*/ 06544000
*/*  *************************************************************** */ 06545000
*/*                BPAM DEPENDENT SECTION                            */ 06546000
*/*  *************************************************************** */ 06547000
*                                                                  0280 06548000
*   DECLARE                                                        0280 06549000
*     1 DEBACS01 BASED(DEBEXPTR) BDY(WORD),                        0280 06550000
*       3 DEBDSNAM CHAR(8) BDY(WORD),/* FOR A PARTITIONED DATA SET 0280 06551000
*                                      OPENED FOR OUTPUT FOR A MEMBER   06552000
*                                      NAME, THIS FIELD IS THE MEMBER   06553000
*                                      NAME.                         */ 06554000
*        4 DEBEXTNM CHAR(1);        /* FOR A PARTITIONED DATA SET  0280 06555000
*                                      OPENED FOR INPUT, EACH ONE- 0280 06556000
*                                      BYTE FIELD CONTAINS THE EXTENT   06557000
*                                      NUMBER OF THE FIRST EXTENT  0280 06558000
*                                      ENTRY FOR EACH DATA SET EXCEPT   06559000
*                                      THE FIRST, IF TWO OR MORE DATA   06560000
*                                      SETS ARE CONCATENATED. THE  0280 06561000
*                                      NUMBER OF BYTES IN THE FIELD     06562000
*                                      IS EQUAL TO ONE LESS THAN THE    06563000
*                                      NUMBER OF DATA SETS         0280 06564000
*                                      CONCATENATED.                 */ 06565000
*/*  *************************************************************** */ 06566000
*/*                BDAM DEPENDENT SECTION                            */ 06567000
*/*  *************************************************************** */ 06568000
*                                                                  0281 06569000
*   DECLARE                                                        0281 06570000
*     1 DEBACS02 BASED(DEBEXPTR) BDY(WORD),                        0281 06571000
*                                                                  0281 06572000
*/*                       *****************************************  */ 06573000
*/*                       * FOR FIXED LENGTH RECORDS WITH THE     *  */ 06574000
*/*                       * OPTION OF RELATIVE BLOCK ADDRESSING   *  */ 06575000
*/*                       * (BUT NOT TRACK OVERFLOW)              *  */ 06576000
*/*                       *****************************************  */ 06577000
*                                                                  0281 06578000
*       3 DEBDBLK FIXED(31),        /* ONE FOUR-BYTE FIELD FOR EACH     06579000
*                                      EXTENT DESCRIBED IN THE DEVICE   06580000
*                                      DEPENDENT SECTION.            */ 06581000
*        4 DEBDBPT PTR(8),          /* NUMBER OF BLOCKS PER TRACK    */ 06582000
*        4 DEBDBPE CHAR(3);         /* NUMBER OF BLOCKS PER EXTENT   */ 06583000
*   DECLARE                                                        0282 06584000
*     1 DEBACS03 BASED(DEBEXPTR) BDY(WORD),                        0282 06585000
*                                                                  0282 06586000
*/*                       *****************************************  */ 06587000
*/*                       * FOR FIXED LENGTH RECORDS WITH THE     *  */ 06588000
*/*                       * OPTION OF RELATIVE BLOCK ADDRESSING   *  */ 06589000
*/*                       * AND TRACK OVERFLOW.                   *  */ 06590000
*/*                       *****************************************  */ 06591000
*                                                                  0282 06592000
*       3 DEBDTPP FIXED(31),        /* NUMBER OF TRACKS PER PERIOD   */ 06593000
*       3 DEBDBPP FIXED(31),        /* NUMBER OF BLOCKS PER PERIOD   */ 06594000
*/*                       THE FOLLOWING FIELD OCCURS ONCE FOR        */ 06595000
*/*                       EACH EXTENT.                               */ 06596000
*                                                                  0282 06597000
*       3 DEBDBPEF FIXED(31);       /* NUMBER OF BLOCKS PER EXTENT   */ 06598000
*/*  *************************************************************** */ 06599000
*/*               BTAM DEPENDENT SECTION                             */ 06600000
*/*                                                                  */ 06601000
*/*      NOTE  THIS SEGMENT IS ALWAYS PRESENT FOR BTAM.  IT IS       */ 06602000
*/*            USED WHEN A BUFFER POOL OR DYNAMIC BUFFERING IS       */ 06603000
*/*            USED.  OTHERWISE, THE FIELDS ARE ZERO.                */ 06604000
*/*  *************************************************************** */ 06605000
*                                                                  0283 06606000
*   DECLARE                                                        0283 06607000
*     1 DEBACS04 BASED(DEBEXPTR) BDY(WORD),                        0283 06608000
*       3 DEBTBFRA PTR(31),         /* ADDRESS OF THE BUFFER ROUTINE */ 06609000
*        4 DEBRSV15 CHAR(1),        /* RESERVED                      */ 06610000
*        4 DEBTBFRB PTR(24),        /* ADDRESS OF THE BUFFER ROUTINE */ 06611000
*/*                       THE FOLLOWING FIELD IS REPEATED FOR EACH   */ 06612000
*/*                       CCW ON THE CHANNEL PROGRAM QUEUE           */ 06613000
*                                                                  0283 06614000
*       3 DEBTCCWA PTR(31),         /* ADDRESS OF THE FIRST (OR    0283 06615000
*                                      FOLLOWING) CCW ON THE QUEUE   */ 06616000
*        4 DEBRSV16 CHAR(1),        /* RESERVED                      */ 06617000
*        4 DEBTCCWB PTR(24);        /* *** SAME AS DEBCCWA ABOVE     */ 06618000
*/*  *************************************************************** */ 06619000
*/*                 GAM DEPENDENT SECTION                            */ 06620000
*/*  *************************************************************** */ 06621000
*                                                                  0284 06622000
*   DECLARE                                                        0284 06623000
*     1 DEBACS05 BASED(DEBEXPTR) BDY(WORD),                        0284 06624000
*       3 DEBFUCBA PTR(31),         /* ADDRESS OF FIRST UCB          */ 06625000
*        4 DEBRSV17 CHAR(1),        /* RESERVED                      */ 06626000
*        4 DEBFUCBB PTR(24),        /* ADDRESS OF FIRST UCB          */ 06627000
*       3 DEBLUCBA PTR(31),         /* ADDRESS OF LAST UCB           */ 06628000
*        4 DEBRSV18 CHAR(1),        /* RESERVED                      */ 06629000
*        4 DEBLUCBB PTR(24);        /* ADDRESS OF LAST UCB           */ 06630000
*/*  *************************************************************** */ 06631000
*/*               ISAM LOAD MODE EXTENSION                           */ 06632000
*/*  *************************************************************** */ 06633000
*                                                                  0285 06634000
*   DECLARE                                                        0285 06635000
*     1 DEBACS06 BASED(DEBEXPT) BDY(WORD),                         0285 06636000
*      2 DEBDCBFA PTR(31),          /* ADDRESS OF DCB FIELD AREA   0285 06637000
*                                      MDC013                        */ 06638000
*      2 DEBPUT PTR(31);            /* ADDRESS OF PUT MODULE ICB379  */ 06639000
*/*  *************************************************************** */ 06640000
*/*               ISAM SCAN MODE EXTENSION                           */ 06641000
*/*  *************************************************************** */ 06642000
*                                                                  0286 06643000
*   DECLARE                                                        0286 06644000
*     1 DEBACS07 BASED(DEBEXPT) BDY(WORD),                         0286 06645000
*      2 * PTR(31),                 /* DEBDCBFA - ADDRESS OF DCB   0286 06646000
*                                      FIELD AREA MDC014             */ 06647000
*      2 DEBGET PTR(31),            /* ADDRESS OF GET OR PUT MODULE -   06648000
*                                      THIS FIELD IS ALSO CALLED   0286 06649000
*                                      DEBPUT ICB379                 */ 06650000
*      2 DEBWKPT4 PTR(31),          /* SAME AS DCBWKPT4 - ADDRESS OF    06651000
*                                      UCB ICB379                    */ 06652000
*      2 DEBWKPT5 PTR(31),          /* SAME AS DCBWKPT5 - ADDRESS OF    06653000
*                                      GET APPENDAGE MODULE ICB379   */ 06654000
*      2 DEBCREAD PTR(31),          /* ADDRESS OF CHANNEL-END      0286 06655000
*                                      APPENDAGE FOR READ ICB379     */ 06656000
*      2 DEBCSETL PTR(31),          /* ADDRESS OF CHANNEL-END      0286 06657000
*                                      APPENDAGE FOR SETL ICB379     */ 06658000
*      2 DEBCWRIT PTR(31),          /* ADDRESS OF CHANNEL-END      0286 06659000
*                                      APPENDAGE FOR WRITE ICB379    */ 06660000
*      2 DEBCCHK PTR(31),           /* ADDRESS OF CHANNEL-END      0286 06661000
*                                      APPENDAGE FOR WRITE VALIDITY     06662000
*                                      CHECK ICB379                  */ 06663000
*      2 DEBCREWT PTR(31),          /* ADDRESS OF CHANNEL-END      0286 06664000
*                                      APPENDAGE FOR RE-WRITE ICB379 */ 06665000
*      2 DEBCRECK PTR(31),          /* ADDRESS OF CHANNEL-END      0286 06666000
*                                      APPENDAGE FOR RE-CHECK ICB379 */ 06667000
*      2 DEBAREAD PTR(31),          /* ADDRESS OF ABNORMAL-END     0286 06668000
*                                      APPENDAGE FOR READ ICB379     */ 06669000
*      2 DEBASETL PTR(31),          /* ADDRESS OF ABNORMAL-END     0286 06670000
*                                      APPENDAGE FOR SETL ICB379     */ 06671000
*      2 DEBAWRIT PTR(31),          /* ADDRESS OF ABNORMAL-END     0286 06672000
*                                      APPENDAGE FOR WRITE ICB379    */ 06673000
*      2 DEBACHK PTR(31),           /* ADDRESS OF ABNORMAL-END     0286 06674000
*                                      APPENDAGE FOR WRITE VALIDITY     06675000
*                                      CHECK ICB379                  */ 06676000
*      2 DEBAREWT PTR(31),          /* ADDRESS OF ABNORMAL-END     0286 06677000
*                                      APPENDAGE FOR RE-WRITE ICB379 */ 06678000
*      2 DEBARECK PTR(31),          /* ADDRESS OF ABNORMAL-END     0286 06679000
*                                      APPENDAGE FOR RE-CHECK ICB379 */ 06680000
*      2 DEBRPSST PTR(31);          /* ADDRESS OF RPS SIO APPENDAGE     06681000
*                                      IF ADDRSPC=REAL WAS NOT     0286 06682000
*                                      SPECIFIED ICB379              */ 06683000
*/*  *************************************************************** */ 06684000
*/*               BISAM MODE EXTENSION                               */ 06685000
*/*  *************************************************************** */ 06686000
*                                                                  0287 06687000
*   DECLARE                                                        0287 06688000
*     1 DEBACS08 BASED(DEBEXPT) BDY(WORD),                         0287 06689000
*      2 * PTR(31),                 /* DEBDCBFA - ADDRESS OF DCB   0287 06690000
*                                      FIELD AREA MDC015             */ 06691000
*      2 DEBDISAD PTR(31),          /* ADDRESS OF PRIVILEGED MODULE     06692000
*                                      ENTERED WHEN A BISAM MACRO  0287 06693000
*                                      INSTRUCTION IS EXECUTED ICB379*/ 06694000
*      2 * PTR(31),                 /* DEBWKPT4 - SAME AS DCBWKPT4 -    06695000
*                                      ADDRESS OF THE PART 1       0287 06696000
*                                      APPENDAGE MODULE (ABNORMAL AND   06697000
*                                      CHANNEL-END APPANDAGES) ICB379*/ 06698000
*      2 * PTR(31),                 /* DEBWKPT5 - SAME AS DCBWKPT5 -    06699000
*                                      ADDRESS OF THE PART 2       0287 06700000
*                                      APPENDAGE MODULE (ABNORMAL AND   06701000
*                                      CHANNEL-END APPANDAGES) ICB379*/ 06702000
*      2 DEBFREED PTR(31),          /* ADDRESS OF DYNAMIC BUFFERING     06703000
*                                      MODULE ICB379                 */ 06704000
*      2 DEBRPSIO PTR(31),          /* ADDRESS OF RPS SIO APPENDAGE     06705000
*                                      MODULE IF ADDRSPC=REAL WAS NOT   06706000
*                                      SPECIFIED AND IF DYNAMIC    0287 06707000
*                                      BUFFERING IS USED ICB379      */ 06708000
*      2 DEBSIOA2 PTR(31);          /* ADDRESS OF DYNAMIC BUFFERING     06709000
*                                      APPENDAGE MODULE DISPLACED BY    06710000
*                                      PAGE FIX (PGFX) APPENDAGE IF     06711000
*                                      ADDRSPC=REAL WAS NOT SPECIFIED   06712000
*                                      ICB379                        */ 06713000
*/*  *************************************************************** */ 06714000
*/*               SUBROUTINE NAME SECTION                            */ 06715000
*/*                                                                  */ 06716000
*/*      NOTE  FOLLOWS THE ACCESS METHOD DEPENDENT SECTION, OR THE   */ 06717000
*/*            DEVICE DEPENDENT SECTION IF THERE IS NO ACCESS        */ 06718000
*/*            METHOD SECTION.                                       */ 06719000
*/*  *************************************************************** */ 06720000
*                                                                  0288 06721000
*   DECLARE                                                        0288 06722000
*     1 DEBSUBNM BASED(DEBSBPTR) BDY(WORD),                        0288 06723000
*        4 DEBSUBID CHAR(2);        /* SUBORUTINE IDENTIFICATION.  0288 06724000
*                                      EACH ACCESS METHOD SUBROUTINE,   06725000
*                                      APPENDAGE SUBROUTINE, AND IRB    06726000
*                                      ROUTINE WILL HAVE A UNIQUE  0288 06727000
*                                      EIGHT-BYTE NAME. THE LOW-   0288 06728000
*                                      ORDER TWO BYTES OF EACH     0288 06729000
*                                      ROUTINE NAME WILL BE IN THIS     06730000
*                                      FIELD IF THE SUBROUTINE IS  0288 06731000
*                                      LOADED BY THE OPEN ROUTINES.  */ 06732000
*/*  *************************************************************** */ 06733000
*/*          APPENDAGE VECTOR TABLE SECTION OF THE DEB               */ 06734000
*/*  *************************************************************** */ 06735000
*                                                                  0289 06736000
*   DECLARE                                                        0289 06737000
*     1 DEB BASED(DEBAPPAD) BDY(WORD),                             0289 06738000
*      2 DEBAVT BDY(WORD),          /* APPENDAGE VECTOR TABLE        */ 06739000
*       3 DEBEOEA PTR(31),          /* ADDRESS OF END-OF-EXTENT    0289 06740000
*                                      APPENDAGE ROUTINE             */ 06741000
*        4 DEBEOEAB CHAR(1),        /* FLAG BYTE ICB280              */ 06742000
*         5 DEBRSV19 BIT(1),        /* RESERVED                      */ 06743000
*         5 DEBRSV20 BIT(1),        /* RESERVED                      */ 06744000
*         5 DEBRSV21 BIT(1),        /* RESERVED                      */ 06745000
*         5 DEBRSV22 BIT(1),        /* RESERVED                      */ 06746000
*         5 DEBEOENP BIT(4),        /* NUMBER OF 2K PAGES TO BE FIXED   06747000
*                                      FOR THE END-OF-EXTENT       0289 06748000
*                                      APPENDAGE ICB280              */ 06749000
*        4 DEBEOEAD PTR(24),        /* ADDRESS OF END-OF-EXTENT    0289 06750000
*                                      APPENDAGE ROUTINE ICB280      */ 06751000
*       3 DEBSIOA PTR(31),          /* ADDRESS OF START I/O APPENDAGE   06752000
*                                      ROUTINE                       */ 06753000
*        4 DEBSIOAB CHAR(1),        /* FLAG BYTE ICB280              */ 06754000
*         5 DEBPGFX BIT(1),         /* ADDRESS IN DEBSIOAD CAN BE  0289 06755000
*                                      USED TO DETERMINE THE ENTRY 0289 06756000
*                                      POINT TO THE PAGE FIX (PGFX)     06757000
*                                      APPENDAGE ROUTINE BY ADDING 4    06758000
*                                      TO ADDRESS IN DEBSIOAD ICB280 */ 06759000
*         5 DEBSIOX BIT(1),         /* IF ZERO, DO NOT ENTER SIO   0289 06760000
*                                      APPENDAGE WHEN ERP IS ACTIVE.    06761000
*                                      IF ONE, ENTER SIO APPENDAGE 0289 06762000
*                                      EVEN WHEN ERP IS ACTIVE.    0289 06763000
*                                      ICB372                        */ 06764000
*         5 DEBIOVR BIT(1),         /* IF ONE, EXCPVR REQUEST IS   0289 06765000
*                                      VALID. IF ZERO, EXCPVR REQUEST   06766000
*                                      IS INVALID AND WILL NOT BE  0289 06767000
*                                      EXECUTED. ICB401              */ 06768000
*         5 DEBFIX BIT(1),          /* INDICATION THAT DEB HAS BEEN     06769000
*                                      FIXED (OS/VS2) (MDC032) YM5929*/ 06770000
*         5 DEBSIONP BIT(4),        /* NUMBER OF 2K PAGES TO BE FIXED   06771000
*                                      FOR THE SIO APPENDAGE ICB280  */ 06772000
*        4 DEBSIOAD PTR(24),        /* ADDRESS OF START I/O APPENDAGE   06773000
*                                      ROUTINE ICB280                */ 06774000
*       3 DEBPCIA PTR(31),          /* ADDRESS OF PCI APPENDAGE    0289 06775000
*                                      ROUTINE                       */ 06776000
*        4 DEBPCIAB CHAR(1),        /* FLAG BYTE ICB280              */ 06777000
*         5 DEBRSV24 BIT(1),        /* RESERVED                      */ 06778000
*         5 DEBRSV25 BIT(1),        /* RESERVED                      */ 06779000
*         5 DEBRSV26 BIT(1),        /* RESERVED                      */ 06780000
*         5 DEBRSV27 BIT(1),        /* RESERVED                      */ 06781000
*         5 DEBPCINP BIT(4),        /* NUMBER OF 2K PAGES TO BE FIXED   06782000
*                                      FOR THE PCI APPENDAGE ROUTINE    06783000
*                                      ICB280                        */ 06784000
*        4 DEBPCIAD PTR(24),        /* ADDRESS OF PROGRAM-         0289 06785000
*                                      CONTROLLED-INTERRUPTION (PCI)    06786000
*                                      APPENDAGE ROUTINE ICB280      */ 06787000
*       3 DEBCEA PTR(31),           /* ADDRESS OF CHANNEL-END      0289 06788000
*                                      APPENDAGE ROUTINE             */ 06789000
*        4 DEBCEAB CHAR(1),         /* FLAG BYTE ICB280              */ 06790000
*         5 DEBRSV28 BIT(1),        /* RESERVED                      */ 06791000
*         5 DEBRSV29 BIT(1),        /* RESERVED                      */ 06792000
*         5 DEBRSV30 BIT(1),        /* RESERVED                      */ 06793000
*         5 DEBRSV31 BIT(1),        /* RESERVED                      */ 06794000
*         5 DEBCENP BIT(4),         /* NUMBER OF 2K PAGES TO BE FIXED   06795000
*                                      FOR THE CHANNEL-END APPENDAGE    06796000
*                                      ICB280                        */ 06797000
*        4 DEBCEAD PTR(24),         /* ADDRESS OF CHANNEL END      0289 06798000
*                                      APPENDAGE ROUTINE ICB280      */ 06799000
*       3 DEBXCEA PTR(31),          /* ADDRESS OF ABNORMAL-END     0289 06800000
*                                      APPENDAGE ROUTINE             */ 06801000
*        4 DEBXCEAB CHAR(1),        /* FLAG BYTE ICB280              */ 06802000
*         5 DEBRSV32 BIT(1),        /* RESERVED                      */ 06803000
*         5 DEBRSV33 BIT(1),        /* RESERVED                      */ 06804000
*         5 DEBRSV34 BIT(1),        /* RESERVED                      */ 06805000
*         5 DEBRSV35 BIT(1),        /* RESERVED                      */ 06806000
*         5 DEBXCENP BIT(4),        /* NUMBER OF 2K PAGES TO BE FIXED   06807000
*                                      FOR THE ABNORMAL-END APPENDAGE   06808000
*                                      ICB280                        */ 06809000
*        4 DEBXCEAD PTR(24),        /* ADDRESS OF ABNORMAL-END     0289 06810000
*                                      APPENDAGE ROUTINE ICB280      */ 06811000
*/*  *************************************************************** */ 06812000
*/*                  DEB PREFIX TABLE                                */ 06813000
*/*  *************************************************************** */ 06814000
*                                                                  0289 06815000
*      2 DEBPREFX BDY(WORD),        /* DEB PREFIX TABLE              */ 06816000
*       3 DEBWKARA CHAR(1) BDY(WORD),/* I/O SUPPORT WORK AREA (DIRECT   06817000
*                                      ACCESS)                       */ 06818000
*       3 DEBDSCBA CHAR(7) BDY(WORD,2),/* DSCB ADDRESS (BBCCHHR) USED   06819000
*                                      BY I/O SUPPORT (DIRECT ACCESS)*/ 06820000
*       3 DEBXTNP PTR(31),          /* POINTER TO DEB EXTENSION    0289 06821000
*                                      (OS/VS2) MDC008               */ 06822000
*        4 DEBDCBMK CHAR(4) BDY(WORD),/* DCB MODIFICATION MASK USED     06823000
*                                      BY I/O SUPPORT (OS/VS1) MDC009*/ 06824000
*       3 DEBLNGTH CHAR(1),         /* LENGTH OF DEB IN DOUBLE WORDS */ 06825000
*       3 DEBAMTYP CHAR(1),         /* ACCESS METHOD TYPE ICB380     */ 06826000
*       3 DEBTBLOF FIXED(15);       /* OFFSET IN THE DEB TABLE TO THE   06827000
*                                      ENTRY FOR THIS DEB ICB380     */ 06828000
*/*  *************************************************************** */ 06829000
*/*                  DEB EXTENSION (OS/VS2)                          */ 06830000
*/*  *************************************************************** */ 06831000
*                                                                  0290 06832000
*   DECLARE                                                        0290 06833000
*     1 DEBXTN BASED(DEBXTNP) BDY(WORD),                           0290 06834000
*      2 DEBXLNGH FIXED(15),        /* LENGTH OF DEB EXTENSION MDC002*/ 06835000
*      2 DEBXFLG1 BIT(8),           /* FLAG BYTE (MDC027)      YM1272*/ 06836000
*       3 DEBXCDCB BIT(1),          /* DEBDCBAD FIELD CONTAINS THE 0290 06837000
*                                      ADDRESS OF A COPIED DCB. USED    06838000
*                                      BY END-OF-VOLUME, TCLOSE AND     06839000
*                                      TASK CLOSE. (MDC028)    YM1272*/ 06840000
*       3 DEBXTSKC BIT(1),          /* TASK CLOSE IS CLOSING THE   0290 06841000
*                                      RELATED DCB. SET BY TASK CLOSE   06842000
*                                      AND INTERROGATED BY         0290 06843000
*                                      END-OF-VOLUME, FEOV AND TCLOSE   06844000
*                                      FOR DEB'S NOT ON THE CURRENT     06845000
*                                      TCB DEB CHAIN. (MDC031) YM2869*/ 06846000
*       3 DEBXDSSI BIT(1),          /* DATA SET SECURITY INDICATOR.     06847000
*                                      SET BY OPEN AND CHECKPOINT. 0290 06848000
*                                      INTERROGATED BY EOV. (MDC348)    06849000
*                                                            @Z40RP9A*/ 06850000
*       3 DEBXRV43 BIT(1),          /* RESERVED                      */ 06851000
*       3 DEBXRV44 BIT(1),          /* RESERVED                      */ 06852000
*       3 DEBXRV45 BIT(1),          /* RESERVED                      */ 06853000
*       3 DEBXRV46 BIT(1),          /* RESERVED                      */ 06854000
*       3 DEBXRV47 BIT(1),          /* RESERVED                      */ 06855000
*      2 DEBXRV48 CHAR(1),          /* RESERVED                      */ 06856000
*      2 DEBXDSAB PTR(31),          /* POINTER TO DSAB MDC004        */ 06857000
*      2 DEBXDCBM CHAR(4) BDY(WORD),/* DCB MODIFICATION MASK USED BY    06858000
*                                      I/O SUPPORT MDC005            */ 06859000
*      2 DEBXDBPR PTR(31),          /* POINTER TO DEB MDC006         */ 06860000
*      2 DEBXDSO1 BIT(8),           /* SAME AS DCBDSORG BYTE 1 MDC020*/ 06861000
*      2 DEBXDSO2 BIT(8),           /* SAME AS DCBDSORG BYTE 2 MDC021*/ 06862000
*      2 DEBXMCF1 BIT(8),           /* SAME AS DCBMACRF BYTE 1 MDC022*/ 06863000
*      2 DEBXMCF2 BIT(8),           /* SAME AS DCBMACRF BYTE 2 MDC023*/ 06864000
*      2 DEBXXARG PTR(31),          /* ADDRESS OF BDAM READ EXCLUSIVE   06865000
*                                      LIST MDC024                   */ 06866000
*      2 DEBXOPNJ PTR(31),          /* POINTER TO DSAB (SEPARATE FROM   06867000
*                                      DEBXDSAB) DYNAMICALLY       0290 06868000
*                                      ALLOCATED BY OPEN TYPE=J. THIS   06869000
*                                      POINTER WILL EXIST FOR      0290 06870000
*                                      NON-AUTHORIZED CALLERS OF OPEN   06871000
*                                      TYPE=J FOR A DIRECT ACCESS  0290 06872000
*                                      DATA SET WHERE THE DATA SET 0290 06873000
*                                      BEING OPENED IS DIFFERENT FROM   06874000
*                                      THE DATA SET DESCRIBED BY THE    06875000
*                                      DDNAME IN DCB AND THE JFCNWRIT   06876000
*                                      BIT IS ON IN THE JFCB. THE  0290 06877000
*                                      POINTER WILL BE USED BY CLOSE    06878000
*                                      TO DYNAMICALLY UNALLOCATE THE    06879000
*                                      DATA SET. (MDC352)    @ZA02193*/ 06880000
*      2 DEBXRV40 PTR(31);          /* RESERVED                      */ 06881000
*                                                                  0291 06882000
*/********************************************************************/ 06883000
*/*                                                                  */ 06884000
*/*         INCLUDE NIP PARAMETER AREA AND PARAMETER TABLE DSECTS    */ 06885000
*/*                                                                  */ 06886000
*/********************************************************************/ 06887000
*/*         %INCLUDE SYSLIB(IEAPPNIP)                                */ 06888000
*/*  *****************************************************************/ 06889000
*/*                          I E A P P N I P                         */ 06890000
*/*     MAPPING OF NIP PARAMETER AREA AND PARAMETER ADDRESS TABLE    */ 06891000
*/*                                                                  */ 06892000
*/*                     DATE=5/1/75,VS2-4 VERSION                    */ 06893000
*/*                                                                  */ 06894000
*/*  *****************************************************************/ 06895000
*/*  *****          NIP  PARAMETER  AREA  (NIPPAREA)            ******/ 06896000
*/*   PARAMETER AREA HEADER                                          */ 06897000
*                                                                  0291 06898000
*   DECLARE                                                        0291 06899000
*     1 NIPPAHDR CHAR(8) BDY(DWORD) BASED,                         0291 06900000
*      2 NIPPAQ PTR(31),            /* CHAIN PTR TO NEXT ON QUEUE    */ 06901000
*      2 NIPPABYT PTR(31);          /* PTR - NEXT AVAIL. BYTE        */ 06902000
*/*   PARAMETER AREA                                                 */ 06903000
*                                                                  0292 06904000
*   DECLARE                                                        0292 06905000
*     1 NIPPAREA BDY(DWORD) BASED,  /* PARAMETER AREA BEGINNING      */ 06906000
*      2 * CHAR(LENGTH(NIPPAHDR)),  /* PARMAREA HEADER               */ 06907000
*                                                                  0292 06908000
*     /***************************************************************/ 06909000
*     /*                                                             */ 06910000
*     /* HERE BEGINS: FOR INITIAL PARMAREA - INITIAL FIELDS FOR OTHER*/ 06911000
*     /* PARMAREAS - RECORD BUFFER AREA                              */ 06912000
*     /*                                                             */ 06913000
*     /***************************************************************/ 06914000
*                                                                  0292 06915000
*      2 NIPPARC FIXED(31),         /* RETURN CODE FROM IEAPSPIO     */ 06916000
*      2 NIPPABDL CHAR(18),         /* PARMLIB BLDL ENTRY            */ 06917000
*       3 NIPPABDH CHAR(4),         /* BLDL HEADER                   */ 06918000
*        4 NIPPA2BF CHAR(1),        /* BEGINNING OF BUFFER AREA      */ 06919000
*       3 NIPPANAM CHAR(8),         /* PARMLIB MEMBER NAME           */ 06920000
*       3 NIPPATTR CHAR(3),         /* MEMBER TTR ENTRY              */ 06921000
*       3 * CHAR(3),                /* * RESERVED FOR BLDL ENTRY *   */ 06922000
*      2 * CHAR(2),                 /* UNASSIGNED                    */ 06923000
*      2 NIPPAIOD CHAR(216) BDY(DWORD),/* I/O DATA AREA              */ 06924000
*       3 NIPPATXT CHAR(32),        /* CCW'S - READ TEXT RECORDS     */ 06925000
*       3 NIPPASID CHAR(5),         /* SEARCH ID FOR NEXT TEXT RCD   */ 06926000
*       3 * CHAR(3),                /* ** UNASSIGNED **              */ 06927000
*       3 NIPPAIOB CHAR(40),        /* PARMLIB IOB                   */ 06928000
*       3 NIPPADCB CHAR(4),         /* PARMLIB DCB                   */ 06929000
*       3 NIPPAECB CHAR(4),         /* PARMLIB ECB                   */ 06930000
*        4 NIPPAECC CHAR(1),        /* - PARMLIB ECB CONDITION CODE  */ 06931000
*        4 * CHAR(3),               /* - REST OF PARMLIB ECB         */ 06932000
*       3 NIPPADEB CHAR(48),        /* PARMLIB DEB                   */ 06933000
*       3 NIPPARCD CHAR(80),        /* READ AREA FOR PARMLIB RCDS    */ 06934000
*      2 * CHAR(4),                 /* UNASSIGNED                    */ 06935000
*      2 NIPPAPTB CHAR(320),        /* PARAMETER ADDR TABLE          */ 06936000
*      2 NIPPABUF CHAR(1);          /* BEGIN INITIAL PARMAREA BUFFER */ 06937000
*/*  *****             END  OF  NIP  PARAMETER  AREA            ******/ 06938000
*/*  *****             NIP  PARAMETER  ADDRESS  TABLE           ******/ 06939000
*/*   PARAMETER ADDRESS TABLE -                                      */ 06940000
*                                                                  0293 06941000
*   DECLARE                                                        0293 06942000
*     1 PARMTAB BASED,              /* BEGIN PARAMETER ADDRESS TAB   */ 06943000
*      2 PTABSTRT CHAR(8),          /* DUMMY HEADER                  */ 06944000
*      2 APF PTR(31),               /* AUTHORIZED PROG. LIBRARIES    */ 06945000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06946000
*      2 APG PTR(31),               /* AUTO. PRIORITY GROUP          */ 06947000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06948000
*      2 BLDL PTR(31),              /* PARMLIB MEMBER FOR BLDL       */ 06949000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06950000
*      2 BLDLF PTR(31),             /* FIXED BLDL LIST               */ 06951000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06952000
*      2 CLPA PTR(31),              /* CREATE LINK PACK AREA         */ 06953000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06954000
*      2 CMD PTR(31),               /* CANNED OPERATOR COMMANDS      */ 06955000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06956000
*      2 CONT PTR(31),              /* LINE CONTINUATION             */ 06957000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06958000
*      2 CPQE PTR(31),              /* CHANNEL PROG QUEUE EXTENSION  */ 06959000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06960000
*      2 CSA PTR(31),               /* COMMON SERVICE AREA SIZE      */ 06961000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06962000
*      2 CVIO PTR(31),              /* WARM START VAM DATA SETS      */ 06963000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06964000
*      2 DUMP PTR(31),              /* TAPE FOR SYS1.DUMP            */ 06965000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06966000
*      2 FIX PTR(31),               /* ROUTINES IN FIXED LPA EXTN    */ 06967000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06968000
*      2 HARDCPY PTR(31),           /* HARDCOPY LOG                  */ 06969000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06970000
*      2 IPS PTR(31),               /* OPTIMIZER IPS GROUP           */ 06971000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06972000
*      2 LNK PTR(31),               /* LNKLSTXX VALUES               */ 06973000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06974000
*      2 LOGCLS PTR(31),            /* LOG CLASS VALUES              */ 06975000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06976000
*      2 LOGLMT PTR(31),            /* LOG LIMIT VALUES              */ 06977000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06978000
*      2 MAXUSER PTR(31),           /* MAXIMUM NO. OF ADDRESS SPACES */ 06979000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06980000
*      2 MLPA PTR(31),              /* ROUTINES IN LPA EXTENSION     */ 06981000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06982000
*      2 NUCMAP PTR(31),            /* BUILD ANOTHER NUCMAP FOR DSS  */ 06983000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06984000
*      2 OPI PTR(31),               /* OPERATOR INTERVENTION         */ 06985000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06986000
*      2 OPT PTR(31),               /* OPTIMIZER TUNING PARAMETERS   */ 06987000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06988000
*      2 PAGEP PTR(31),             /* PAGE DS PARMS - PARMLIB       */ 06989000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06990000
*      2 PAGEO PTR(31),             /* PAGE DS PARMS - OPERATOR      */ 06991000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06992000
*      2 REAL PTR(31),              /* V=R ADDRESS LIMIT             */ 06993000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06994000
*      2 SMF PTR(31),               /* PTR TO SMF PARMLIB MEMBER     */ 06995000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06996000
*      2 SQA PTR(31),               /* SQA VIRTUAL SPACE             */ 06997000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 06998000
*      2 SYSP PTR(31),              /* SYSTEM PARAMETER LIST         */ 06999000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 07000000
*      2 VAL PTR(31),               /* VOLUME ATTRIBUTE PROCESSING   */ 07001000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 07002000
*      2 VRREGN PTR(31),            /* DEFAULT V=R SPACE ALLOCATED   */ 07003000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 07004000
*      2 WTOBFRS PTR(31),           /* NUMBER OF WTO BUFFERS         */ 07005000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 07006000
*      2 WTORPLY PTR(31),           /* WTOR REPLY BUFFER NUMBER      */ 07007000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID           */ 07008000
*      2 PURGE PTR(31),             /* PURGE KEYWORD         @Y30LPXD*/ 07009000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID   @Y30LPXD*/ 07010000
*      2 * CHAR(8),                 /* PARMLIB READ FLAGS    @Y30LPXD*/ 07011000
*       3 NIPPAFLG CHAR(1),         /* PARMLIB READ FLAGS    @Y30LPXD*/ 07012000
*        4 NIPPAFL1 BIT(1),         /* MEMBER NOT FOUND MSG SUPPRESS */ 07013000
*        4 * BIT(7),                /* RESERVED              @Y30LPXD*/ 07014000
*       3 * CHAR(7),                /* RESERVED              @Y30LPXD*/ 07015000
*      2 RSU PTR(31),               /* RSU PARM PTR          @Y30LPXD*/ 07016000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID   @Y30LPXD*/ 07017000
*      2 SWAP PTR(31),              /* SWAP DATA SETS        @Z40WPXA*/ 07018000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID   @Z40WPXA*/ 07019000
*      2 PAGNUM PTR(31),            /* PAGE/SWAP DS ADDITIONS      0293 07020000
*                                                            @Z40WPXA*/ 07021000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID   @Z40WPXA*/ 07022000
*      2 DUPLEX PTR(31),            /* COMMON DUPLEX OPTION  @Z40WPXA*/ 07023000
*      2 * CHAR(4),                 /* FLAGS AND SOURCE ID   @Z40WPXA*/ 07024000
*      2 PTABEND(2) PTR(31);        /* DUMMY TRAILER                 */ 07025000
*/*  *****        END  OF  NIP  PARAMETER  ADDRESS  TABLE       ******/ 07026000
*/*  *****         NIP  PARAMETER  ADDRESS  TABLE  ENTRY        ******/ 07027000
*/*   NIP PARMTAB ENTRY MAP                                          */ 07028000
*                                                                  0294 07029000
*   DECLARE                                                        0294 07030000
*     1 NIPPTE BASED,               /* BEGIN PARMTAB ENTRY           */ 07031000
*      2 NIPPTADR PTR(31),          /* PARAMETER ORIGIN ADDRESS      */ 07032000
*      2 NIPPTOPF CHAR(1),          /* OPTION FLAGS BYTE             */ 07033000
*       3 NIPPTOPI BIT(1),          /* OPI OPTION                    */ 07034000
*       3 NIPPTLST BIT(1),          /* LIST REQUEST OPTION           */ 07035000
*       3 NIPPTCAN BIT(1),          /* CANCEL REQUEST FLAG           */ 07036000
*       3 * BIT(5),                 /* ** UNASSIGNED **              */ 07037000
*      2 NIPPTATF CHAR(1),          /* ATTRIBUTE FLAGS BYTE          */ 07038000
*       3 NIPPTMRG BIT(1),          /* MERGE ATTRIBUTE               */ 07039000
*       3 * BIT(7),                 /* ** UNASSIGNED **              */ 07040000
*      2 NIPPTSID CHAR(2);          /* INPUT SOURCE ID : X'0000' - 0294 07041000
*                                      OPERATOR C'XX' - PLIB MEMBER     07042000
*                                      SUFFIX                        */ 07043000
*/*  *****    END OF NIP  PARAMETER  ADDRESS  TABLE  ENTRY      ******/ 07044000
*                                                                  0295 07045000
*                                                                  0295 07046000
*   /*****************************************************************/ 07047000
*   /*                                                               */ 07048000
*   /* ADDITIONAL FIELD PTRS                                         */ 07049000
*   /*                                                               */ 07050000
*   /*****************************************************************/ 07051000
*                                                                  0295 07052000
*   DCL                                                            0295 07053000
*     SAVE1 PTR(31);                /* SAVE REG 1 CHAR PTR           */ 07054000
*   DCL                                                            0296 07055000
*     SAVPTR PTR(31);               /* SAVE AREA FOR CARD IMAGE      */ 07056000
*   DCL                                                            0297 07057000
*     CHARSAV PTR(31);              /* SAVE AREA FOR CARD IMAGE      */ 07058000
*   DCL                                                            0298 07059000
*     NP5TBLND FIXED(31);           /* TABLE END FOR BLDL            */ 07060000
*   DCL                                                            0299 07061000
*     NA5CSGRP FIXED(31) INIT(0);   /* START LOAD MOD QUE            */ 07062000
*   DCL                                                            0300 07063000
*     NA5BLDIR FIXED(31);           /* POINTER TO START OF BLDL INFO    07064000
*                                      INDEX TABLE                   */ 07065000
*   DCL                                                            0301 07066000
*     XLSTSIZE PTR(31);             /* LENGTH OF XTENT LIST          */ 07067000
*                                                                  0301 07068000
*   /*****************************************************************/ 07069000
*   /*                                                               */ 07070000
*   /* VARIABLES FOR BUILDING DIRECTORY                              */ 07071000
*   /*                                                               */ 07072000
*   /*****************************************************************/ 07073000
*                                                                  0302 07074000
*   DCL                                                            0302 07075000
*     LDIRSIZE FIXED(31);           /* LPA DIRECTORY SIZE            */ 07076000
*   DCL                                                            0303 07077000
*     LDIREND FIXED(31) INIT(0);    /* LPA LAST ENTRY ADDR           */ 07078000
*   DCL                                                            0304 07079000
*     NPA5HASH FIXED(31);           /* DIRECTORY HASH VALUE          */ 07080000
*   DCL                                                            0305 07081000
*     1 NPA5LPDE CHAR(40) BDY(WORD),/* LPDE BEING BUILT              */ 07082000
*      2 *(10) FIXED(31) INIT((10)0);                              0305 07083000
*                                                                  0305 07084000
*   /*****************************************************************/ 07085000
*   /*                                                               */ 07086000
*   /* VALUE TO BE USED TO MARK AN LPDE AS ENTERED IN THE LINK PACK  */ 07087000
*   /* AREA DIRECTORY                                                */ 07088000
*   /*                                                               */ 07089000
*   /*****************************************************************/ 07090000
*                                                                  0306 07091000
*   DCL                                                            0306 07092000
*     NPA5LPFL CHAR(2) INIT('0001'X);                              0306 07093000
*   DCL                                                            0307 07094000
*     PAGEADDR PTR(31);             /* LOW ADDRESS ROUNDED DOWN      */ 07095000
*   DCL                                                            0308 07096000
*     NPA5CVTS FIXED(31);           /* SHARED VIRT MEM ADDR          */ 07097000
*/* EXTERNAL LABELS                                                  */ 07098000
*                                                                  0309 07099000
*   DCL                                                            0309 07100000
*     IEAVVMDI BASED(NVTVVMDI);     /* DIRECTORY SEARCH RTN          */ 07101000
*                                                                  0309 07102000
*   /*****************************************************************/ 07103000
*   /*                                                               */ 07104000
*   /* SYSTEM BLDL TABLE ADDRESS POINTER                             */ 07105000
*   /*                                                               */ 07106000
*   /*****************************************************************/ 07107000
*                                                                  0310 07108000
*   DCL                                                            0310 07109000
*     IEARESBL PTR(31) BASED(NVTVBLDL);                            0310 07110000
*                                                                  0310 07111000
*   /*****************************************************************/ 07112000
*   /*                                                               */ 07113000
*   /* ACTIVE CDE LIST                                               */ 07114000
*   /*                                                               */ 07115000
*   /*****************************************************************/ 07116000
*                                                                  0311 07117000
*   DCL                                                            0311 07118000
*     IEAQLPA PTR(31) BASED(CVTQLPAQ);                             0311 07119000
*   DCL                                                            0312 07120000
*     NP5XCTL CHAR(8) BASED(SCVTSVCT+56);/* XCTL ENTRY INTO SVC TABLE*/ 07121000
*   DCL                                                            0313 07122000
*     NP5STAE CHAR(8) BASED(SCVTSVCT+480);/* STAE ENTRY              */ 07123000
*/* SUBROUTINE RETURN CODE FIELDS                                    */ 07124000
*                                                                  0314 07125000
*   DCL                                                            0314 07126000
*     ERRORCD CHAR(1) INIT('00'X);  /* ERROR IN LPA COMMON           */ 07127000
*   DCL                                                            0315 07128000
*     PLISTRC CHAR(1) INIT('00'X);  /* NP5PLIST RETURN CODE          */ 07129000
*   DCL                                                            0316 07130000
*     PRMERRC CHAR(1) INIT('00'X);  /* ERROR RECORDER RTN CD         */ 07131000
*   DCL                                                            0317 07132000
*     LPLIBRC CHAR(1) INIT('00'X);  /* LPALIB OPEN ROUTINE RC        */ 07133000
*   DCL                                                            0318 07134000
*     POSTCD CHAR(1) INIT('00'X);   /* NPA5BLDL RTN CD               */ 07135000
*/* VARIABLE FIELDS                                                  */ 07136000
*                                                                  0319 07137000
*   DCL                                                            0319 07138000
*     LOADADR PTR(31);              /* PTR TO LOAD ADDR FOR FIX      */ 07139000
*   DCL                                                            0320 07140000
*     RMDR FIXED(31);               /* REMAINDER                     */ 07141000
*   DCL                                                            0321 07142000
*     SIZESAVE FIXED(31);           /* AMNT OVER MOD SIZE TO BE    0321 07143000
*                                      FREEMAINED                    */ 07144000
*                                                                  0321 07145000
*   /*****************************************************************/ 07146000
*   /*                                                               */ 07147000
*   /* IEAVNP05 SYSTEM MESSAGES                                      */ 07148000
*   /*                                                               */ 07149000
*   /*****************************************************************/ 07150000
*                                                                  0322 07151000
*   GENERATE DATA NOREFS NOSETS DEFS(MSG1S,MSG2S,MSG3S,MSG3I,MSG6S,     07152000
*       MSG6I1,MSG7S,MSG7I1,MSG8S,MSG8I1,MSG8I2,MSG9S,MSG9I1,MSG9I2,    07153000
*       MSGAS,MSGAI1,MSGAI2,MSGBS,MSGBI1,MSGCS,MSGCI1,MSGCI2,MSGDS,     07154000
*       MSGDI1,MSGDI2,MSGES,MSGEI1,MSGFS,MSGFI1,MSGGS,MSGGI1,MODMSGS,   07155000
*       MODLIST,MSG357I1,MSG357I2,M357FI1,M357FI2,MSG208I,MSG30I1, 0322 07156000
*       M301IFI1,MSG356I,M356FI1,M356FI2,MSG301I,MSGNXS,MSGNXMD);  0322 07157000
*                                                                  0322 07158000
*   /*****************************************************************/ 07159000
*   /*                                                               */ 07160000
*   /* MESSAGE VARIABLE FIELDS                                       */ 07161000
*   /*                                                               */ 07162000
*   /*****************************************************************/ 07163000
*                                                                  0323 07164000
*   DCL                                                            0323 07165000
*     MSG3I CHAR(6) GENERATED;      /* PARAMETER NAME                */ 07166000
*   DCL                                                            0324 07167000
*     MSG6I1 CHAR(9) GENERATED;     /* PARMLIB LIST NAME             */ 07168000
*   DCL                                                            0325 07169000
*     MSG7I1 CHAR(12) GENERATED;    /* DATASET NAME FIELD            */ 07170000
*   DCL                                                            0326 07171000
*     MSG8I1 CHAR(13) GENERATED;    /* DATASET NAME                  */ 07172000
*   DCL                                                            0327 07173000
*     MSG8I2 CHAR(8) GENERATED;     /* LIST NAME                     */ 07174000
*   DCL                                                            0328 07175000
*     MSG9I1 CHAR(9) GENERATED;     /* LIST NAME                     */ 07176000
*   DCL                                                            0329 07177000
*     MSG9I2 CHAR(6) GENERATED;     /* PARAMETER                     */ 07178000
*   DCL                                                            0330 07179000
*     1 MSG9I3 CHAR(24) GENERATED,  /* CAUSE                         */ 07180000
*      2 MSG9I3A CHAR(8),           /* USED FOR CAUSE MODNAME        */ 07181000
*      2 MSG9I3B CHAR(8),           /* USED FOR MODULE NAME          */ 07182000
*      2 * CHAR(8);                                                0330 07183000
*   DCL                                                            0331 07184000
*     MSGAI1 CHAR(9) GENERATED;     /* MEMBER NAME                   */ 07185000
*   DCL                                                            0332 07186000
*     MSGAI2 CHAR(12) GENERATED;    /* DATASET NAME                  */ 07187000
*   DCL                                                            0333 07188000
*     MSGBI1 CHAR(5) GENERATED;     /* PARAMETER FIELD               */ 07189000
*   DCL                                                            0334 07190000
*     MSGCI1 CHAR(6) GENERATED;     /* PARAMETER FIELD               */ 07191000
*   DCL                                                            0335 07192000
*     MSGCI2 CHAR(8) GENERATED;     /* MODULE NAME FIELD             */ 07193000
*   DCL                                                            0336 07194000
*     MSGDI1 CHAR(9) GENERATED;     /* MEMBER NAME FIELD             */ 07195000
*   DCL                                                            0337 07196000
*     MSGDI2 CHAR(12) GENERATED;    /* DSNAME FIELD                  */ 07197000
*   DCL                                                            0338 07198000
*     MSGEI1 CHAR(19) GENERATED;    /* CAUSE FIELD                   */ 07199000
*   DCL                                                            0339 07200000
*     MSGFI1 CHAR(9) GENERATED;     /* MEMBER NAME FIELD             */ 07201000
*   DCL                                                            0340 07202000
*     MSGGI1 CHAR(6) GENERATED;     /* CURRENT PARAMETER             */ 07203000
*   DCL                                                            0341 07204000
*     MODLIST CHAR(8) GENERATED;    /* FAILING MODULE NAMES          */ 07205000
*   DCL                                                            0342 07206000
*     M357FI0 CHAR(8) GENERATED;    /* LIST IN ERROR                 */ 07207000
*   DCL                                                            0343 07208000
*     M357FI1 CHAR(36) GENERATED;   /* ERROR CAUSE                   */ 07209000
*   DCL                                                            0344 07210000
*     M357FI2 CHAR(22) GENERATED;   /* SYSTEM ACTION                 */ 07211000
*   DCL                                                            0345 07212000
*     M301FI1 GEND CHAR(8);         /* MODULE NAME                   */ 07213000
*   DCL                                                            0346 07214000
*     M356FI1 GEND CHAR(8);         /* ALIAS NAME                    */ 07215000
*   DCL                                                            0347 07216000
*     M356FI2 GEND CHAR(8);         /* MODULE NAME                   */ 07217000
*   DCL                                                            0348 07218000
*     MSGNXMD GEND CHAR(8);         /* MODULE NAME           @ZD04022*/ 07219000
*                                                                  0349 07220000
*/********************************************************************/ 07221000
*                                                                  0349 07222000
*   /*****************************************************************/ 07223000
*   /*                                                               */ 07224000
*   /* ERROR CAUSE MESSAGES                                          */ 07225000
*   /*                                                               */ 07226000
*   /*****************************************************************/ 07227000
*                                                                  0349 07228000
*   DCL                                                            0349 07229000
*     CAUSE28 CHAR(12) INIT('XMPOST ERROR');                       0349 07230000
*   DCL                                                            0350 07231000
*     CAUSE24 CHAR(11) INIT('PGOUT ERROR');                        0350 07232000
*   DCL                                                            0351 07233000
*     CAUSE20 CHAR(12) INIT('LPALIB EMPTY');                       0351 07234000
*   DCL                                                            0352 07235000
*     CAUSE16 CHAR(10) INIT('DASD SPACE');                         0352 07236000
*   DCL                                                            0353 07237000
*     CAUSE4 CHAR(19) INIT('STORAGE UNAVAILABLE');                 0353 07238000
*   DCL                                                            0354 07239000
*     CAUSE32 CHAR(19) INIT('NON-EXECUTABLE MODS');/*        @ZD04022*/ 07240000
*   DCL                                                            0355 07241000
*     CAUSE8 CHAR(9) INIT('I/O ERROR');                            0355 07242000
*   DCL                                                            0356 07243000
*     CAUSEOP4 CHAR(18) INIT('LPALIB UNAVAILABLE');                0356 07244000
*   DCL                                                            0357 07245000
*     CAUSEMOD CHAR(8) INIT('MODNAME ');                           0357 07246000
*   DCL                                                            0358 07247000
*     CAUSELIB CHAR(24) INIT('INCORRECT LIBNAME FORMAT');          0358 07248000
*   DCL                                                            0359 07249000
*     CAUSENO CHAR(24) INIT('EXCEED MAX. BLDL ENTRIES');           0359 07250000
*   DCL                                                            0360 07251000
*     CAUSEVOL CHAR(24) INIT('INCORRECT VOLID FIELD');             0360 07252000
*                                                                  0360 07253000
*   /*****************************************************************/ 07254000
*   /*                                                               */ 07255000
*   /* SWITCHES FOR IEAVNP05                                         */ 07256000
*   /*                                                               */ 07257000
*   /*****************************************************************/ 07258000
*                                                                  0361 07259000
*   DCL                                                            0361 07260000
*     1 NP5SWCH CHAR(1) INIT('00'X),/* SWITCH BYTE                   */ 07261000
*      2 NP5LPAQ BIT(1),            /* INDICATES LPA QUEUE           */ 07262000
*      2 NP5PLLST BIT(1),           /* LIST FLAG IN PARMTAB          */ 07263000
*      2 NP5PLRF BIT(1),            /* PARMLIB PDS REFRESH           */ 07264000
*      2 NP5RTRY BIT(1),            /* RETRY MESSAGE ONLY            */ 07265000
*      2 NP5LIBNV BIT(1),           /* CURRENT LIBRARY INVALID       */ 07266000
*      2 NP5ENTFD BIT(1),           /* ENTRY FOUND                   */ 07267000
*      2 NP5APFSV BIT(1),           /* INDICATE SVCLIB IN PROC       */ 07268000
*      2 NP5DFRR BIT(1);            /* RELEASE REGION REQUEST        */ 07269000
*   DCL                                                            0362 07270000
*     1 NP5DPALS CHAR(1) INIT('00'X),/* ALIAS-DUPLICATE SWITCH BYTE  */ 07271000
*      2 NP5ACTVE BIT(1),           /* ACTIVE LPA SEARCH SWITCH      */ 07272000
*      2 NP5MAJOR BIT(1),           /* MAJOR FOUND SWITCH            */ 07273000
*      2 NP5CDEFD BIT(1),           /* DUPLICATE ENTRY               */ 07274000
*      2 NP5NONEX BIT(1),           /* LPALIB NON-EXEC MOD   @ZD04022*/ 07275000
*      2 * BIT(4);                  /* RESERVED              @ZD04022*/ 07276000
*   DCL                                                            0363 07277000
*     1 NP5BLDML,                                                  0363 07278000
*      2 NP5DCB PTR(31),            /* DCB PTR FOR NPA5 LOAD         */ 07279000
*      2 NP5BAREA CHAR(66);         /* BLDL AREA FOR MLPA            */ 07280000
*   DCL                                                            0364 07281000
*     BLDLAREA PTR(31);             /* ADDR OF BLDL TABLE ENTRY    0364 07282000
*                                      INTERNAL TO IEAVNP05          */ 07283000
*   DCL                                                            0365 07284000
*     BLDLSAV PTR(31);              /* ADDRESS OF BLDL TABLE IN SQA  */ 07285000
*                                                                  0365 07286000
*   /*****************************************************************/ 07287000
*   /*                                                               */ 07288000
*   /* BLDL ENTRY SAVE AREA                                          */ 07289000
*   /*                                                               */ 07290000
*   /*****************************************************************/ 07291000
*                                                                  0366 07292000
*   DCL                                                            0366 07293000
*     1 BLDLENT CHAR(64) BASED(BLDLSAV),                           0366 07294000
*      2 BLDLHDR CHAR(4),           /* BLDL HEADER                   */ 07295000
*       3 BLDLFF FIXED(15) BDY(BYTE),/* NO OF ENTRIES                */ 07296000
*       3 BLDLLL FIXED(15) BDY(BYTE),/* LENGTH OF ENTRY              */ 07297000
*      2 BLDLPDS CHAR(60),          /* PDS ENTRY                     */ 07298000
*       3 * CHAR(2),                /* USED TO MAKE PDS 1 FORMAT     */ 07299000
*       3 BLDL13 CHAR(58);          /* AND PDS 2 COMPATIBLE          */ 07300000
*                                                                  0366 07301000
*   /*****************************************************************/ 07302000
*   /*                                                               */ 07303000
*   /* LIBRARY NAMES                                                 */ 07304000
*   /*                                                               */ 07305000
*   /*****************************************************************/ 07306000
*                                                                  0367 07307000
*   DCL                                                            0367 07308000
*     LIBNAME CHAR(12);             /* LIBRARY NAME AREA             */ 07309000
*   DCL                                                            0368 07310000
*     SVCLIB CHAR(12) INIT('SYS1.SVCLIB ');                        0368 07311000
*   DCL                                                            0369 07312000
*     LINKLIB CHAR(13) INIT('SYS1.LINKLIB ');                      0369 07313000
*   DCL                                                            0370 07314000
*     LPALIB CHAR(12) INIT('SYS1.LPALIB ');                        0370 07315000
*                                                                  0370 07316000
*   /*****************************************************************/ 07317000
*   /*                                                               */ 07318000
*   /* TEMPORARY SAVE AREAS                                          */ 07319000
*   /*                                                               */ 07320000
*   /*****************************************************************/ 07321000
*                                                                  0371 07322000
*   DCL                                                            0371 07323000
*     SAVACTQ FIXED(31);            /* SAVE AREA FOR ACTIVE Q PTR    */ 07324000
*   DCL                                                            0372 07325000
*     LLSSAVE FIXED(31);            /* AREA FOR CURRENT TCBLLS       */ 07326000
*   DCL                                                            0373 07327000
*     JPQSAVE FIXED(31);            /* AREA FOR CURRENT TCBJPQ       */ 07328000
*   DCL                                                            0374 07329000
*     LLSSAV2 PTR(31);              /* CURRENT TCBLLS SAVE AREA      */ 07330000
*   DCL                                                            0375 07331000
*     JPQSAV2 PTR(31);              /* CURRENT TCBJPQ SAVE AREA      */ 07332000
*   DCL                                                            0376 07333000
*     SAVESCAN PTR(31);             /* SAVE AREA FOR SCAN PTR        */ 07334000
*                                                                  0376 07335000
*   /*****************************************************************/ 07336000
*   /*                                                               */ 07337000
*   /* FIELDS USED IN PROCESSING PARAMETERS                          */ 07338000
*   /*                                                               */ 07339000
*   /*****************************************************************/ 07340000
*                                                                  0377 07341000
*   DCL                                                            0377 07342000
*     PSAVAR CHAR(6);               /* CURRENT PARAMETER SAVE        */ 07343000
*   DCL                                                            0378 07344000
*     PLENGTH FIXED(31);            /* LENGTH OF CURRENT PARAM       */ 07345000
*   DCL                                                            0379 07346000
*     1 PLISTNAM CHAR(8),           /* PARAMETER LIST NAME           */ 07347000
*      2 PLISTNM CHAR(6),           /* FIRST 6 CHARS OF LIST NAME    */ 07348000
*      2 PLISTEL CHAR(2);           /* APPENDED 2 CHARS              */ 07349000
*   DCL                                                            0380 07350000
*     PARMCHAR CHAR(*) BASED(SCNPTR);/* PARMTAB CHARACTER            */ 07351000
*   DCL                                                            0381 07352000
*     TEXTCHAR CHAR(*) BASED;       /* PARMLIB TEXT RECORD           */ 07353000
*   DCL                                                            0382 07354000
*     MODNAM CHAR(8) BASED(NVTCSLNM);/* LAST MODULE LOADED           */ 07355000
*   DCL                                                            0383 07356000
*     1 CURMODUL CHAR(9),                                          0383 07357000
*      2 CURMOD CHAR(8),            /* CURRENT MODULE NAME           */ 07358000
*      2 * CHAR(1);                 /* FILL IF MODULE NAME GT 8      */ 07359000
*                                                                  0383 07360000
*   /*****************************************************************/ 07361000
*   /*                                                               */ 07362000
*   /* PARAMETER NAMES                                               */ 07363000
*   /*                                                               */ 07364000
*   /*****************************************************************/ 07365000
*                                                                  0384 07366000
*   DCL                                                            0384 07367000
*     FIXEQ CHAR(4) INIT('FIX=');   /* FIX PARAMETER                 */ 07368000
*   DCL                                                            0385 07369000
*     MLPAEQ CHAR(5) INIT('MLPA='); /* MODIFY LPA PARAM              */ 07370000
*   DCL                                                            0386 07371000
*     CLPAO CHAR(4) INIT('CLPA');   /* CLPA OPTION                   */ 07372000
*   DCL                                                            0387 07373000
*     BLDLFEQ CHAR(6) INIT('BLDLF=');/* BLDLF PARAMETER              */ 07374000
*   DCL                                                            0388 07375000
*     BLDLEQ CHAR(5) INIT('BLDL='); /* BLDL= PARAM SAVE              */ 07376000
*                                                                  0388 07377000
*   /*****************************************************************/ 07378000
*   /*                                                               */ 07379000
*   /* LIST NAME PREFIXES                                            */ 07380000
*   /*                                                               */ 07381000
*   /*****************************************************************/ 07382000
*                                                                  0389 07383000
*   DCL                                                            0389 07384000
*     IEAFIX CHAR(6) INIT('IEAFIX');/* LIST NAME FOR FIX             */ 07385000
*   DCL                                                            0390 07386000
*     IEALPA CHAR(6) INIT('IEALPA');/* MODIFY LIST NAME              */ 07387000
*   DCL                                                            0391 07388000
*     IEABLD CHAR(6) INIT('IEABLD');/* BLDL MODULE LIST              */ 07389000
*                                                                  0391 07390000
*   /*****************************************************************/ 07391000
*   /*                                                               */ 07392000
*   /* LPALIB DCB ADDRESS                                            */ 07393000
*   /*                                                               */ 07394000
*   /*****************************************************************/ 07395000
*                                                                  0392 07396000
*   DCL                                                            0392 07397000
*     LPADCB PTR(31) INIT(ADDR(NPBNMACR)-40);                      0392 07398000
*                                                                  0392 07399000
*   /*****************************************************************/ 07400000
*   /*                                                               */ 07401000
*   /* NIPMOUNT AND NIPOPEN PARAMETER LISTS                          */ 07402000
*   /*                                                               */ 07403000
*   /*****************************************************************/ 07404000
*                                                                  0393 07405000
*   GENERATE DATA NOREFS NOSETS DEFS(NP5MNT,NP5OPN);               0393 07406000
*                                                                  0393 07407000
*   /*****************************************************************/ 07408000
*   /*                                                               */ 07409000
*   /* LOCATE PARAMETER LIST                                         */ 07410000
*   /*                                                               */ 07411000
*   /*****************************************************************/ 07412000
*                                                                  0394 07413000
*   GENERATE DATA NOREFS NOSETS DEFS(LOCPLIST);                    0394 07414000
*   DCL                                                            0395 07415000
*     1 LOCAREA CHAR(265) BDY(DWORD),/* VOLUME-LIST BLOCK            */ 07416000
*      2 * CHAR(2),                                                0395 07417000
*      2 VOLPTR CHAR(12),                                          0395 07418000
*       3 * CHAR(2),                                               0395 07419000
*       3 VOLDC CHAR(2),            /* DEVICE CODE                   */ 07420000
*       3 VOLSER CHAR(6),           /* VOLUME SERIAL                 */ 07421000
*       3 VOLSEQ CHAR(2);           /* VOLUME SEQUENCE NO.           */ 07422000
*                                                                  0395 07423000
*   /*****************************************************************/ 07424000
*   /*                                                               */ 07425000
*   /* PDS 2 TTR FIELD                                               */ 07426000
*   /*                                                               */ 07427000
*   /*****************************************************************/ 07428000
*                                                                  0396 07429000
*   DCL                                                            0396 07430000
*     1 TTRP CHAR(3) DEF(PDS2TTRP),                                0396 07431000
*      2 PDS2TT CHAR(2),                                           0396 07432000
*      2 PDS2R CHAR(1);             /* SET TO ZERO IF BLDL FAILED FOR   07433000
*                                      THIS ENTRY                    */ 07434000
*                                                                  0397 07435000
*   /*****************************************************************/ 07436000
*   /*                                                               */ 07437000
*   /* LPA DIRECTORY HASH TABLE MADE UP OF PRIME NUMBERS WHICH ARE   */ 07438000
*   /* CLOSEST TO BUT LESS THAN A MULTIPLE OF ONE HUNDRED            */ 07439000
*   /*                                                               */ 07440000
*   /*****************************************************************/ 07441000
*                                                                  0397 07442000
*   DCL                                                            0397 07443000
*     NIPDIRHT(31) FIXED(31) INIT(5,97,199,293,397,499,599,691,797,887, 07444000
*         997,1097,1193,1297,1399,1499,1597,1699,1789,1889,1999,2099,   07445000
*         2179,2297,2399,2477,2593,2699,2797,2897,2999);           0397 07446000
*                                                                  0397 07447000
*   /*****************************************************************/ 07448000
*   /*                                                               */ 07449000
*   /* THE FOLLOWING TABLE CONSISTS OF FETCH , SPIE AND ATTENTION    */ 07450000
*   /* EXIT PURGE BRANCH ENTRY POINTS, AND THEIR CORRESPONDING CVT   */ 07451000
*   /* FIELDS (CVT OFFSET). THE CVT FIELDS WILL CONTAIN THE ADDRESS  */ 07452000
*   /* OF THE BRANCH ENTRY POINTS FOLLOWING COMPLETION OF SUBROUTINE */ 07453000
*   /* NP5BRENT.                                                     */ 07454000
*   /*                                                               */ 07455000
*   /*****************************************************************/ 07456000
*                                                                  0398 07457000
*   DCL                                                            0398 07458000
*     1 INITCVT(5),                 /* SYSTM BR ENTRY TAB    @Y30HPYC*/ 07459000
*      2 EPNAME CHAR(8) INIT('IEWFBOSV','IEWMSEPT','IEAVSPIE','IEAVSPI' 07460000
*            ,'IEAVAR06'),                                         0398 07461000
*      2 OFSETCVT FIXED INIT(ADDR(CVTFBOSV),ADDR(CVTFETCH),ADDR(   0398 07462000
*            CVTRSPIE),ADDR(CVTCSPIE),ADDR(CVTSTXU));              0398 07463000
*                                                                  0398 07464000
*   /*****************************************************************/ 07465000
*   /*                                                               */ 07466000
*   /* PACK AND LOAD LISTS - CONSTANT AND VARIABLES                  */ 07467000
*   /*                                                               */ 07468000
*   /*****************************************************************/ 07469000
*                                                                  0399 07470000
*   DCL                                                            0399 07471000
*     BRENTCVT PTR(31) BASED;       /* OFFSET IN CVT OF BRNCH ENT    */ 07472000
*   DCL                                                            0400 07473000
*     TEXTPTR PTR;                  /* POINTER TO CURRENT BYTE IN  0400 07474000
*                                      TEXT RECORD                   */ 07475000
*   DCL                                                            0401 07476000
*     LASTMOD PTR;                  /* POINTER TO LAST BLDL INFO   0401 07477000
*                                      TABLE ENTRY IN QUEUE BEING  0401 07478000
*                                      BUILT                         */ 07479000
*   DCL                                                            0402 07480000
*     SCAN CHAR(1) BASED(TEXTPTR);  /* CHARACTER IN INPUT RECORD   0402 07481000
*                                      BEING EXAMINED                */ 07482000
*   DCL                                                            0403 07483000
*     1 MODULE CHAR(8) BDY(WORD),   /* NAME OF LOAD MODULE           */ 07484000
*      2 MOD1 CHAR(4),              /* FIRST HALF OF NAME            */ 07485000
*      2 MOD2 CHAR(4);              /* REST OF NAME                  */ 07486000
*   DCL                                                            0404 07487000
*     DIRNTNO FIXED;                /* LPA DIRECTORY ENTRY NUMBER    */ 07488000
*   DCL                                                            0405 07489000
*     NP5BPTR PTR BASED;            /* BASED POINTER                 */ 07490000
*   DCL                                                            0406 07491000
*     1 * CHAR(1) INIT('00'X),      /* INTERNAL FLAGS                */ 07492000
*      2 LASTREQ BIT(1),            /* LAST LMQ PROCESSED            */ 07493000
*      2 PAKFOUND BIT(1),           /* LPA PACKING LIST MEMBER     0406 07494000
*                                      ALREADY LOCATED               */ 07495000
*      2 ENDOFQUE BIT(1),           /* END OF LMQ                    */ 07496000
*      2 MODERR BIT(1),             /* MODULE INVALIDLY SPECIFIED ON    07497000
*                                      PACKING LIST                  */ 07498000
*      2 PKERIND BIT(1),            /* HEADER ERROR MESSAGE ISSUED   */ 07499000
*      2 PKERIOF BIT(1),            /* I/O ERROR DURING ERROR      0406 07500000
*                                      RECOVERY                      */ 07501000
*      2 LDERIND BIT(1),            /* LOD00 HEADER ERROR MESSAGE  0406 07502000
*                                      ISSUED                        */ 07503000
*      2 STGRP BIT(1);              /* VALID START OF GROUP DETECTED */ 07504000
*   DCL                                                            0407 07505000
*     1 CSEIOERR,                   /* I/O ERROR CAUSE FOR MESSAGE 0407 07506000
*                                      IEA357I                       */ 07507000
*      2 * CHAR(20) INIT('I/O ERROR FOLLOWING '),                  0407 07508000
*      2 IOERMDN CHAR(8);           /* MODULE NAME                   */ 07509000
*   DCL                                                            0408 07510000
*     1 CSEMINV,                    /* MODULE NAME INVALID CAUSE FOR    07511000
*                                      MESSAGE IEA357I               */ 07512000
*      2 MNINVN CHAR(8),            /* MODULE NAME                   */ 07513000
*      2 * CHAR(8) INIT(' INVALID');                               0408 07514000
*   DCL                                                            0409 07515000
*     1 CSENAMNG,                   /* NAME NO GOOD CAUSE FOR MESSAGE   07516000
*                                      IEA357I                       */ 07517000
*      2 * CHAR(15) INIT('NAME FOLLOWING '),                       0409 07518000
*      2 NMMODNM CHAR(8),           /* MODULE NAME                   */ 07519000
*      2 * CHAR(9) INIT(' IMPROPER');                              0409 07520000
*   DCL                                                            0410 07521000
*     1 CSEDELNG,                   /* DELIMITER ERROR CAUSE FOR   0410 07522000
*                                      MESSAGE IEA357I               */ 07523000
*      2 * CHAR(20) INIT('DELIMITER FOLLOWING '),                  0410 07524000
*      2 DELMDNM CHAR(8),           /* MODULE NAME                   */ 07525000
*      2 * CHAR(8) INIT(' INVALID');                               0410 07526000
*   DCL                                                            0411 07527000
*     MODIGND CHAR(14) INIT('MODULE IGNORED');/* ACTION FOR MESSAGE     07528000
*                                      IEA357I                       */ 07529000
*   DCL                                                            0412 07530000
*     GRPSKIP CHAR(22) INIT('SKIPPING TO NEXT GROUP');/* ACTION FOR     07531000
*                                      MSG IEA357I                   */ 07532000
*   DCL                                                            0413 07533000
*     LISTTERM CHAR(15) INIT('LIST TERMINATED');/* ACTION FOR MESSAGE   07534000
*                                      IEA357I                       */ 07535000
*   DCL                                                            0414 07536000
*     CODE FIXED(15);               /* ERROR CODE                    */ 07537000
*   DCL                                                            0415 07538000
*     LASTMODN CHAR(8) BDY(WORD) INIT('***START');/* LAST VALID NAME    07539000
*                                      PROCESSED                     */ 07540000
*   DCL                                                            0416 07541000
*     ERRPTR BASED(RPARM) PTR(31);  /* ADDRESS OF PARAMETER FOR    0416 07542000
*                                      NP5PKERR - NPA5CERR           */ 07543000
*   DCL                                                            0417 07544000
*     ERRCOD FIXED(15) BASED(ERRPTR);/* PARMETER PASSED TO NP5PKERR -   07545000
*                                      NPA5CERR                      */ 07546000
*                                                                  0417 07547000
*   /*****************************************************************/ 07548000
*   /*                                                               */ 07549000
*   /* ERROR CAUSE - MODNAME NOT FOUND IN LPA                        */ 07550000
*   /*                                                               */ 07551000
*   /*****************************************************************/ 07552000
*                                                                  0418 07553000
*   DCL                                                            0418 07554000
*     1 LDNFLPA CHAR(25),           /* CAUSE TEXT                    */ 07555000
*      2 NFMODNM CHAR(8),           /* MODULE NAME                   */ 07556000
*      2 * CHAR(17) INIT(' NOT FOUND IN LPA');                     0418 07557000
*                                                                  0418 07558000
*   /*****************************************************************/ 07559000
*   /*                                                               */ 07560000
*   /* START OF LIST MODNAME ENTRY                                   */ 07561000
*   /*                                                               */ 07562000
*   /*****************************************************************/ 07563000
*                                                                  0419 07564000
*   DCL                                                            0419 07565000
*     LDSTART CHAR(8) CONSTANT('***START');                        0419 07566000
*                                                                  0419 07567000
*   /*****************************************************************/ 07568000
*   /*                                                               */ 07569000
*   /* MEMBER NAME OF LPA LOADING LIST                               */ 07570000
*   /*                                                               */ 07571000
*   /*****************************************************************/ 07572000
*                                                                  0420 07573000
*   DCL                                                            0420 07574000
*     LODLSTNM CHAR(8) CONSTANT('IEALOD00');                       0420 07575000
*                                                                  0420 07576000
*   /*****************************************************************/ 07577000
*   /*                                                               */ 07578000
*   /* BLDL INFORMATION TABLE ENTRY DSECT                            */ 07579000
*   /*                                                               */ 07580000
*   /*****************************************************************/ 07581000
*                                                                  0421 07582000
*   DCL                                                            0421 07583000
*     INFOPTR PTR(31) ABNORMAL;     /* BASE FOR DSECT                */ 07584000
*   DCL                                                            0422 07585000
*     1 INFODATA BASED(INFOPTR),    /* TABLE ENTRY                   */ 07586000
*      2 * CHAR(1),                 /* FLAG BYTE                     */ 07587000
*       3 * BIT(1),                 /* RESERVED                      */ 07588000
*       3 INFALIS BIT(1),           /* ALIAS INDICATOR               */ 07589000
*       3 INFLOAD BIT(1),           /* ONLY LOADABLE MOD             */ 07590000
*       3 INFEXEC BIT(1),           /* EXECUTABLE MODULE             */ 07591000
*       3 INF1BLK BIT(1),           /* ONLY 1 TXT BLOCK              */ 07592000
*       3 INFNRLD BIT(1),           /* NO RLD ITEMS IN MOD           */ 07593000
*       3 INFREFR BIT(1),           /* REFRESHABLE MODULE            */ 07594000
*       3 INFAOSLE BIT(1),          /* AOS LINK EDIT                 */ 07595000
*      2 INFSYNM PTR(24),           /* SYNONYM CHAIN PTR             */ 07596000
*      2 INFNAME CHAR(8),           /* MODULE NAME                   */ 07597000
*      2 INFMNM CHAR(8),            /* ALIAS - MAJOR NAME            */ 07598000
*       3 INFTTRP CHAR(3),          /* MAJOR - TTR 1ST BLK           */ 07599000
*       3 INFTTRT CHAR(3),          /* MAJOR - TTR 1ST TXT           */ 07600000
*       3 INFFTBL FIXED(15) BDY(BYTE),/* MAJOR - LEN 1ST TXT         */ 07601000
*      2 INFEPA PTR(24) BDY(BYTE),  /* ENTRY PT ADDR                 */ 07602000
*      2 INFSTOR PTR(24) BDY(BYTE), /* MODULE SIZE                   */ 07603000
*      2 INFAPF CHAR(2),            /* APF DATA                      */ 07604000
*      2 * CHAR(1),                 /* FLAG BYTE                     */ 07605000
*       3 INFIND BIT(1),            /* MODULE HAS BEEN LOADED OR IS     07606000
*                                      INVALID - WILL CORRESPOND WITH   07607000
*                                      LPDENIP                       */ 07608000
*       3 INFPAGA BIT(1),           /* PAGE ALIGNED MODULE           */ 07609000
*       3 INFAPFLG BIT(1),          /* APF DATA VALID                */ 07610000
*       3 INFORG0 BIT(1),           /* 1ST TXT ORIGIN = 0            */ 07611000
*       3 * BIT(4),                 /* UNUSED                        */ 07612000
*      2 INFCHAIN PTR(24),          /* NEXT ENTRY ON LIST            */ 07613000
*      2 INFEXTEN CHAR(8),          /* EXTEN FOR LPDEMJNM OF LPDE    */ 07614000
*       3 INFEXTLN FIXED(31),                                      0422 07615000
*       3 INFEXTAD PTR(31);                                        0422 07616000
*   DCL                                                            0423 07617000
*     INFOSTRT PTR(31);             /* ADDR FIRST ENTRY              */ 07618000
*   DCL                                                            0424 07619000
*     NEXTADDR PTR(31);             /* ADDR NEXT MODULE              */ 07620000
*   DCL                                                            0425 07621000
*     NEXTINFO PTR(31);             /* ADDR NEXT INFO ENT            */ 07622000
*   DCL                                                            0426 07623000
*     NPA5INFP PTR(31);             /* ADDR NEXT INFO SEG            */ 07624000
*   DCL                                                            0427 07625000
*     SLOTADDR PTR(31);             /* ADDR PRIMARY SLOT             */ 07626000
*   DCL                                                            0428 07627000
*     WASTE FIXED(31);              /* WASTED SPACE SIZE             */ 07628000
*   DCL                                                            0429 07629000
*     WASTEADR PTR(31);             /* WASTED SPACE ADDR             */ 07630000
*   DCL                                                            0430 07631000
*     BLDIREND PTR(31);             /* END OF INDEX ADDR             */ 07632000
*   DCL                                                            0431 07633000
*     INDEX FIXED;                  /* TABLE INDEX VALUE             */ 07634000
*   DCL                                                            0432 07635000
*     LPDEPAGE FIXED(31);           /* START OF PAGE IN LPA DIR      */ 07636000
*   DCL                                                            0433 07637000
*     LPDERMDR FIXED(31);           /* AMOUNT OVER PAGE SIZE-LPDE    */ 07638000
*   DCL                                                            0434 07639000
*     LPDEFRST FIXED(31);           /* FIRST LPDE ON PAGE NOT      0434 07640000
*                                      CROSSING PAGE BOUNDARY        */ 07641000
*   DCL                                                            0435 07642000
*     IXPAG FIXED(31);              /* END OF PAGE IN INDEX TABLE    */ 07643000
*   DCL                                                            0436 07644000
*     WORKLPDE FIXED(31);           /* WORK AREA                     */ 07645000
*   DCL                                                            0437 07646000
*     NPA5BPTR PTR(31) BASED;       /* BASED POINTER                 */ 07647000
*   DCL                                                            0438 07648000
*     1 NPA5WLST(12),               /* WASTED SPACE TABLE            */ 07649000
*      2 NPA5WSIZ FIXED INIT(0,64,128,256,512,1024,1536,2048,2560,3072, 07650000
*            3584,4096),            /* SIZE OF EACH AREA IN THE QUEUE*/ 07651000
*      2 NPA5WQNE PTR(31) INIT((DIM(NPA5WLST))0);/* ANY BOUNDARY   0438 07652000
*                                      QUEUES                        */ 07653000
*   DCL                                                            0439 07654000
*     IXLAST PTR;                   /* LAST INDEX VALUE              */ 07655000
*   DCL                                                            0440 07656000
*     IXAD PTR;                     /* ADDR OF INDEX ENTRY           */ 07657000
*   DCL                                                            0441 07658000
*     AVAIL FIXED;                  /* AVAIL STORAGE SIZE            */ 07659000
*   DCL                                                            0442 07660000
*     SAVEWAST FIXED;               /* SAVED WASTE SPACE             */ 07661000
*   DCL                                                            0443 07662000
*     SAVEADR FIXED;                /* SAVED WASTE ADDRESS           */ 07663000
*   DCL                                                            0444 07664000
*     NPA5CRIT FIXED;               /* LOADING CRITERION VALUE       */ 07665000
*   DCL                                                            0445 07666000
*     INDEX2 FIXED;                 /* 2ND TABLE INDEX               */ 07667000
*   DCL                                                            0446 07668000
*     NPA5FQHD PTR(31) INIT(0);     /* HEADER OF QUEUE OF WASTED   0446 07669000
*                                      SPACE CONTROL BLOCKS          */ 07670000
*   DCL                                                            0447 07671000
*     NPA5NWST PTR(31);             /* ADDRESS OF FIRST AVAILABLE  0447 07672000
*                                      BYTE IN WASTED SPACE CONTROL     07673000
*                                      BLOCK AREA                    */ 07674000
*   DCL                                                            0448 07675000
*     NPA5LWST PTR(31);             /* ADDRESS OF END OF WASTED SPACE   07676000
*                                      CONTROL BLOCK AREA            */ 07677000
*   DCL                                                            0449 07678000
*     WASTTBLS FIXED CONSTANT(8192);/* SIZE OF WASTED SPACE CONTROL     07679000
*                                      BLOCK AREA                    */ 07680000
*   DCL                                                            0450 07681000
*     WASTPTR PTR(31);              /* ADDRESS OF CURRENT WASTED   0450 07682000
*                                      SPACE CONTROL BLOCK           */ 07683000
*   DCL                                                            0451 07684000
*     1 WASTBLOK BASED(WASTPTR),    /* WASTED SPACE CONTROL BLOCK    */ 07685000
*      2 WASTNEXT PTR(31),          /* ADDRESS OF NEXT WASTBLOK IN 0451 07686000
*                                      QUEUE                         */ 07687000
*      2 WASTSIZE FIXED,            /* SIZE OF AREA REPRESENTED BY 0451 07688000
*                                      THIS BLOCK                    */ 07689000
*      2 WASTAREA PTR(31);          /* ADDRESS OF AREA REPRESENTED BY   07690000
*                                      THIS BLOCK                    */ 07691000
*   DCL                                                            0452 07692000
*     LASTPTR PTR(31);              /* POINTER TO PREVIOUS BLOCK ON     07693000
*                                      QUEUE                         */ 07694000
*   DCL                                                            0453 07695000
*     CURRPTR PTR(31);              /* POINTER TO CURRENT BLOCK ON 0453 07696000
*                                      QUEUE                         */ 07697000
*   DCL                                                            0454 07698000
*     1 * CHAR(1),                  /* FLAG BYTE                     */ 07699000
*      2 LASTBLOK BIT(1),           /* LAST DIR BLOCK                */ 07700000
*      2 LASTENT BIT(1),            /* LAST PDS ENTRY                */ 07701000
*      2 LASTLMQ BIT(1),            /* LAST MODULE QUEUE             */ 07702000
*      2 GLOAD BIT(1),              /* GROUP LOAD SPEC               */ 07703000
*      2 * BIT(4);                  /* UNUSED                        */ 07704000
*                                                                  0455 07705000
*/* UPON ENTRY IEAVNP05 TESTS THE NIP VECTOR TABLE TO DETERMINE      */ 07706000
*/* WHETHER A 'QUICK START' OF THE LPA HAS BEEN REQUESTED. IF NVTFLQS*/ 07707000
*/* IS SET, IEAVNP05 ENTERS THE NPA5INIT ROUTINE, IF NVTFLQS IS NOT  */ 07708000
*/* SET, NP5CSLPA IS ENTERED TO EFFECT A 'COLD START' CREATION OF    */ 07709000
*/* THE LPA.                                                         */ 07710000
*                                                                  0455 07711000
*   RESPECIFY                                                      0455 07712000
*     NVT BASED(RNVT);                                             0455 07713000
*   RESPECIFY                                                      0456 07714000
*    (RNVT) RESTRICTED;             /* NVT ADDRESS                   */ 07715000
*   RESPECIFY                                                      0457 07716000
*    (RCVT) RESTRICTED;             /* CVT ADDRESS                   */ 07717000
*   RESPECIFY                                                      0458 07718000
*    (RPARM) RESTRICTED;            /* R1 PARAMETER REG              */ 07719000
*   IEAQLPA=IEAQLPA&&IEAQLPA;       /* CLEAR ACTIVE QUEUE POINTER    */ 07720000
*                                                                  0459 07721000
         L     @08,CVTPTR                                          0459 07722000
         L     @08,CVTQLPAQ(,@08)                                  0459 07723000
         L     @15,IEAQLPA(,@08)                                   0459 07724000
         LR    @00,@15                                             0459 07725000
         XR    @00,@15                                             0459 07726000
         ST    @00,IEAQLPA(,@08)                                   0459 07727000
*   /*****************************************************************/ 07728000
*   /*                                                               */ 07729000
*   /* SEE IF QUICK START OPTION WAS SPECIFIED                       */ 07730000
*   /*                                                               */ 07731000
*   /*****************************************************************/ 07732000
*                                                                  0460 07733000
*   IF NVTFLQS¬='1'B THEN                                          0460 07734000
         TM    NVTFLQS(RNVT),B'00001000'                           0460 07735000
         BO    @RF00460                                            0460 07736000
*     DO;                                                          0461 07737000
*       CALL NP5CSLPA;              /* COLD START LPA                */ 07738000
         BAL   @14,NP5CSLPA                                        0462 07739000
*       GO TO NP5COMMN;             /* START COMMON PROCESSING       */ 07740000
         B     NP5COMMN                                            0463 07741000
*     END;                                                         0464 07742000
*   ELSE                                                           0465 07743000
*     ;                                                            0465 07744000
@RF00460 DS    0H                                                  0466 07745000
*   CALL NPA5INIT;                  /* SETTUP V=V AREA               */ 07746000
         BAL   @14,NPA5INIT                                        0466 07747000
*NP5COMMN:                                                         0467 07748000
*   CALL NP5FIX;                    /* MODIFY LPA - FIX              */ 07749000
NP5COMMN BAL   @14,NP5FIX                                          0467 07750000
*   CALL NP5BLDLF;                  /* DEFINE FIXED BLDL TABLE       */ 07751000
         BAL   @14,NP5BLDLF                                        0468 07752000
*   CALL NP5MLPA;                   /* MODIFY LPA - MLPA             */ 07753000
         BAL   @14,NP5MLPA                                         0469 07754000
*   CALL NP5BLDLP;                  /* DEFINE PAGED BLDL TABLE       */ 07755000
         BAL   @14,NP5BLDLP                                        0470 07756000
*   CALL NP5LPDIR;                  /* SET UP LPA DIRECTORY          */ 07757000
         BAL   @14,NP5LPDIR                                        0471 07758000
*   CALL IEAVNPS5;                  /* INIT SVC TABLE FOR 3/4 SVC AND   07759000
*                                      ESR TABLE FOR 3/4 SVC @Y30HPYC*/ 07760000
         L     @15,@CV00148                                        0472 07761000
         BALR  @14,@15                                             0472 07762000
*   CALL NP5LPLOD;                  /* PROCESS IEALOD00              */ 07763000
         BAL   @14,NP5LPLOD                                        0473 07764000
*   CALL NP5BRENT;                  /* INIT SYSTEM BRANCH ENTRIES    */ 07765000
         BAL   @14,NP5BRENT                                        0474 07766000
*   CALL IEAVNPA5;                  /* BUILD APF TABLE               */ 07767000
         L     @15,@CV00147                                        0475 07768000
         BALR  @14,@15                                             0475 07769000
*   CALL NPA5TERM;                  /* RELEASE BLDL SAVE IN SQA      */ 07770000
         BAL   @14,NPA5TERM                                        0476 07771000
*   RETURN;                         /* RETURN TO IEAVNIPM            */ 07772000
@EL00001 L     @13,4(,@13)                                         0477 07773000
@EF00001 DS    0H                                                  0477 07774000
@ER00001 LM    @14,@12,12(@13)                                     0477 07775000
         BR    @14                                                 0477 07776000
*   GENERATE NOREFS NOSETS(EJECT);                                 0478 07777000
*                                                                  0478 07778000
         EJECT                                                          07779000
*   /*****************************************************************/ 07780000
*   /*                                                               */ 07781000
*   /* LPA COLD START ROUTINE                                        */ 07782000
*   /*                                                               */ 07783000
*   /*****************************************************************/ 07784000
*                                                                  0479 07785000
*NP5CSLPA:                                                         0479 07786000
*   PROC;                                                          0479 07787000
         B     @PB00002                                            0479 07788000
NP5CSLPA STM   @14,@12,@SA00002                                    0479 07789000
*   CALL NP5LPLIB;                  /* OPEN SYS1.LPALIB              */ 07790000
*                                                                  0480 07791000
         BAL   @14,NP5LPLIB                                        0480 07792000
*   /*****************************************************************/ 07793000
*   /*                                                               */ 07794000
*   /* SEE IF OPEN WAS SUCCESSFUL                                    */ 07795000
*   /*                                                               */ 07796000
*   /*****************************************************************/ 07797000
*                                                                  0481 07798000
*   IF LPLIBRC=OPNOSUC4 THEN        /* OPEN WAS NOT SUCCESSFUL       */ 07799000
         CLI   LPLIBRC,X'04'                                       0481 07800000
         BNE   @RF00481                                            0481 07801000
*     CALL NPA5CERR(OPNUNSUC);      /* WRITE ERROR MSG               */ 07802000
         LA    @01,@AL00482                                        0482 07803000
         BAL   @14,NPA5CERR                                        0482 07804000
*   ELSE                                                           0483 07805000
*     ;                                                            0483 07806000
*                                                                  0483 07807000
@RF00481 DS    0H                                                  0484 07808000
*   /*****************************************************************/ 07809000
*   /*                                                               */ 07810000
*   /* GETMAIN SP252 FOR PLPA                                        */ 07811000
*   /*                                                               */ 07812000
*   /*****************************************************************/ 07813000
*                                                                  0484 07814000
*   CALL NPA5INIT;                  /* SETTUP FOR V=V REGION         */ 07815000
         BAL   @14,NPA5INIT                                        0484 07816000
*   LASTREQ='0'B;                   /* INITIALIZE FLAG               */ 07817000
*   PAKFOUND='0'B;                  /* INDICATE PACK LIST NOT YET  0486 07818000
*                                      LOCATED                       */ 07819000
         NI    LASTREQ,B'00111111'                                 0486 07820000
*   NXTPGOUT=NVTLVIRT-PGCRIT;       /* EST. START ADDRESS FOR FIRST     07821000
*                                      PGOUT OF LPA                  */ 07822000
         L     @08,NVTLVIRT(,RNVT)                                 0487 07823000
         LR    @00,@08                                             0487 07824000
         SL    @00,PGCRIT                                          0487 07825000
         ST    @00,NXTPGOUT                                        0487 07826000
*   LSTPGOUT=NVTLVIRT;              /* EST. HIGH ADDR FOR PGOUT      */ 07827000
*                                                                  0488 07828000
         ST    @08,LSTPGOUT                                        0488 07829000
*   /*****************************************************************/ 07830000
*   /*                                                               */ 07831000
*   /* BUILD BLDL INFORMATION TABLE FOR LPA MODULES                  */ 07832000
*   /*                                                               */ 07833000
*   /*****************************************************************/ 07834000
*                                                                  0489 07835000
*   CALL NPA5CLIN;                  /* BUILD TABLE                   */ 07836000
*                                                                  0489 07837000
         BAL   @14,NPA5CLIN                                        0489 07838000
*   /*****************************************************************/ 07839000
*   /*                                                               */ 07840000
*   /* LOAD MODULES SPECIFIED IN THE LPA PACK LIST                   */ 07841000
*   /*                                                               */ 07842000
*   /*****************************************************************/ 07843000
*                                                                  0490 07844000
*   CALL NPA5BLMQ;                  /* LOAD MODULE GROUPS            */ 07845000
*                                                                  0490 07846000
         BAL   @14,NPA5BLMQ                                        0490 07847000
*   /*****************************************************************/ 07848000
*   /*                                                               */ 07849000
*   /* LOAD MODULES NOT SPECIFIED IN THE LPA PACK LIST               */ 07850000
*   /*                                                               */ 07851000
*   /*****************************************************************/ 07852000
*                                                                  0491 07853000
*   CALL NPA5LIND;                  /* LOAD INDEPENDENT MODULES      */ 07854000
*                                                                  0491 07855000
         BAL   @14,NPA5LIND                                        0491 07856000
*   /*****************************************************************/ 07857000
*   /*                                                               */ 07858000
*   /* BUILD ALIAS ENTRIES FOR ALL MODULE ALIASES                    */ 07859000
*   /*                                                               */ 07860000
*   /*****************************************************************/ 07861000
*                                                                  0492 07862000
*   CALL NPA5ALIS;                  /* PROCESS ALIASES               */ 07863000
*                                                                  0492 07864000
         BAL   @14,NPA5ALIS                                        0492 07865000
*   /*****************************************************************/ 07866000
*   /*                                                               */ 07867000
*   /* BUILD LINK PACK AREA DIRECTORY                                */ 07868000
*   /*                                                               */ 07869000
*   /*****************************************************************/ 07870000
*                                                                  0493 07871000
*   CALL NPA5BDIR;                  /* BUILD DIRECTORY               */ 07872000
         BAL   @14,NPA5BDIR                                        0493 07873000
*   END NP5CSLPA;                   /* END OF SUBROUTINE             */ 07874000
@EL00002 DS    0H                                                  0494 07875000
@EF00002 DS    0H                                                  0494 07876000
@ER00002 LM    @14,@12,@SA00002                                    0494 07877000
         BR    @14                                                 0494 07878000
@PB00002 DS    0H                                                  0495 07879000
*   GENERATE NOREFS NOSETS(EJECT);                                 0495 07880000
         EJECT                                                          07881000
*NPA5INIT:                                                         0496 07882000
*   PROCEDURE;                      /* IEAVNP05 INIT ROUTINE         */ 07883000
         B     @PB00003                                            0496 07884000
NPA5INIT STM   @14,@12,@SA00003                                    0496 07885000
*   GENERATE REFS(NVTVIRT,RNVT) SETS(RENTRY,REXIT)(IEAPMNIP TYPE=VIRT); 07886000
         IEAPMNIP TYPE=VIRT                                             07887000
*                                   /* SWITCH TCB TO V=V             */ 07888000
*                                                                  0498 07889000
*   /*****************************************************************/ 07890000
*   /*                                                               */ 07891000
*   /* IEAVNP05 ALLOCATES ENTIRE REGION AS SP252 SPACE               */ 07892000
*   /*                                                               */ 07893000
*   /*****************************************************************/ 07894000
*                                                                  0498 07895000
*   GENERATE REFS(LOWADDR,APARM) SETS(RPARM,RCODE)                 0498 07896000
*       (GETMAIN VC,LA=LOWADDR,A=APARM,SP=252);                    0498 07897000
*                                                                  0498 07898000
         GETMAIN VC,LA=LOWADDR,A=APARM,SP=252                           07899000
*   /*****************************************************************/ 07900000
*   /*                                                               */ 07901000
*   /* IEAVNP05 MAY NOW USE FREEMAIN TO CONTROL START ADDR FOR LPA   */ 07902000
*   /* LOADING GET 64 BYTES FOR BLDL ENTRY SAVE AREA - SP245         */ 07903000
*   /*                                                               */ 07904000
*   /*****************************************************************/ 07905000
*                                                                  0499 07906000
*   GENERATE NOREFS SETS(RPARM0,RPARM)(GETMAIN R,LV=BLDLSAVL,SP=SP245); 07907000
         GETMAIN R,LV=BLDLSAVL,SP=SP245                                 07908000
*   BLDLSAV=RPARM;                  /* BLDL ENTRY SAVE AREA ADDR     */ 07909000
         ST    RPARM,BLDLSAV                                       0500 07910000
*   BLDLLL=LENGTH(BLDLPDS);         /* LENGTH OF BLDL ENTRY          */ 07911000
         L     @08,BLDLSAV                                         0501 07912000
         MVC   BLDLLL(2,@08),@CH00635                              0501 07913000
*   BLDLFF=1;                       /* NUMBER OF BLDL ENTRIES        */ 07914000
         MVC   BLDLFF(2,@08),@CH00264                              0502 07915000
*   RETURN;                         /* RETURN TO CALLER              */ 07916000
@EL00003 DS    0H                                                  0503 07917000
@EF00003 DS    0H                                                  0503 07918000
@ER00003 LM    @14,@12,@SA00003                                    0503 07919000
         BR    @14                                                 0503 07920000
*   GENERATE NOREFS NOSETS(EJECT);                                 0504 07921000
         EJECT                                                          07922000
*NPA5TERM:                                                         0505 07923000
*   ENTRY;                          /* IEAVNP05 TERM ROUTINE         */ 07924000
         B     @EC00505                                            0505 07925000
NPA5TERM STM   @14,@12,@SA00003                                    0505 07926000
@EC00505 DS    0H                                                  0506 07927000
*   RESPECIFY                                                      0506 07928000
*    (RENTRY) RESTRICTED;                                          0506 07929000
*                                                                  0506 07930000
*   /*****************************************************************/ 07931000
*   /*                                                               */ 07932000
*   /* FREE BLDL ENTRY SAVE AREA                                     */ 07933000
*   /*                                                               */ 07934000
*   /*****************************************************************/ 07935000
*                                                                  0507 07936000
*   GENERATE REFS(BLDLSAV) SETS(RPARM)                             0507 07937000
*       (FREEMAIN E,LV=BLDLSAVL,A=BLDLSAV,SP=SP245);               0507 07938000
*                                                                  0507 07939000
         FREEMAIN E,LV=BLDLSAVL,A=BLDLSAV,SP=SP245                      07940000
*   /*****************************************************************/ 07941000
*   /*                                                               */ 07942000
*   /* INSURE TCB IS V=R MODE BEFORE RETURN                          */ 07943000
*   /*                                                               */ 07944000
*   /*****************************************************************/ 07945000
*                                                                  0508 07946000
*   GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)(IEAPMNIP TYPE=REAL); 07947000
         IEAPMNIP TYPE=REAL                                             07948000
*                                   /* SWITCH TCB TO V=R             */ 07949000
*   RETURN;                         /* RETURN TO CALLER              */ 07950000
         B     @EL00003                                            0509 07951000
*   RESPECIFY                                                      0510 07952000
*    (RENTRY,                                                      0510 07953000
*     PGOUTST,                                                     0510 07954000
*     PGOUTEND) UNRESTRICTED;                                      0510 07955000
*   END NPA5INIT;                                                  0511 07956000
@PB00003 DS    0H                                                  0512 07957000
*   GENERATE NOREFS NOSETS(EJECT);                                 0512 07958000
*                                                                  0512 07959000
         EJECT                                                          07960000
*/********************************************************************/ 07961000
*/*                                                                  */ 07962000
*/*         SUBROUTINE NPA5CLIN                                      */ 07963000
*/*                                                                  */ 07964000
*/*         FUNCTION - CONTROLS THE BUILDING OF THE BLDL INFORMATION */ 07965000
*/*            TABLE FOR ALL THE MODULES WHICH ARE ON THE            */ 07966000
*/*            SYS1.LPALIB DATA SET                                  */ 07967000
*/*                                                                  */ 07968000
*/*         INPUT - NONE                                             */ 07969000
*/*                                                                  */ 07970000
*/*         OUTPUT - THE BLDL INFORMATION TABLE IS BUILD STARTING    */ 07971000
*/*            AT THE LOW END OF NIPS V=V REGION                     */ 07972000
*/*                                                                  */ 07973000
*/********************************************************************/ 07974000
*                                                                  0513 07975000
*NPA5CLIN:                          /* NPA5CLIN ENTRY PT             */ 07976000
*   PROCEDURE;                      /* BEGINNING OF SUBR             */ 07977000
         B     @PB00004                                            0513 07978000
NPA5CLIN STM   @14,@12,@SA00004                                    0513 07979000
*   RESPECIFY                                                      0514 07980000
*    (DEBPTR,                                                      0514 07981000
*     DEBDAPTR) RESTRICTED;                                        0514 07982000
*   NPA5INFP=NVTVVPG1;              /* SAVE STARTING ADDR            */ 07983000
         L     @08,NVTVVPG1(,RNVT)                                 0515 07984000
         ST    @08,NPA5INFP                                        0515 07985000
*   INFOPTR=NVTVVPG1;               /* SET UP POINTER TO FIRST INFO     07986000
*                                      TABLE ENTRY                   */ 07987000
         ST    @08,INFOPTR                                         0516 07988000
*   INFOSTRT=NVTVVPG1;              /* SAVE ADDRESS OF FIRST ENTRY   */ 07989000
         MVC   INFOSTRT(4),NVTVVPG1(RNVT)                          0517 07990000
*   LPDECT=0;                       /* SET NUMBER OF MODULES       0518 07991000
*                                      PROCESSED TO 0                */ 07992000
*                                                                  0518 07993000
         SLR   @08,@08                                             0518 07994000
         ST    @08,LPDECT                                          0518 07995000
*   /*****************************************************************/ 07996000
*   /*                                                               */ 07997000
*   /* INITIALIZE THE I/O CONTROL BLOCKS FOR SYS1.LPALIB I/O         */ 07998000
*   /*                                                               */ 07999000
*   /*****************************************************************/ 08000000
*                                                                  0519 08001000
*   IOBSTPTR=ADDR(NIPIOBSN);        /* POINT TO IOB                  */ 08002000
         LA    @08,NIPIOBSN                                        0519 08003000
         ST    @08,IOBSTPTR                                        0519 08004000
*   IOBDCBPB=NVTCSLIB;              /* POINT TO LPALIB DCB           */ 08005000
         L     @07,NVTCSLIB(,RNVT)                                 0520 08006000
         STCM  @07,7,IOBDCBPB(@08)                                 0520 08007000
*   DCBPTR=NVTCSLIB;                /* SAVE DCB POINTER              */ 08008000
         ST    @07,DCBPTR                                          0521 08009000
*   DEBPTR=DCBDEBAD;                /* POINT TO LPALIB DEB           */ 08010000
         SLR   DEBPTR,DEBPTR                                       0522 08011000
         ICM   DEBPTR,7,DCBDEBAD(@07)                              0522 08012000
*   DEBDAPTR=ADDR(DEBBASND);        /* POINT TO FIRST EXTENT       0523 08013000
*                                      DESCRIPTION                   */ 08014000
         LA    DEBDAPTR,DEBBASND(,DEBPTR)                          0523 08015000
*   IOBCC=DEBSTRCC;                 /* SET UP SEEK CC                */ 08016000
         MVC   IOBCC(2,@08),DEBSTRCC(DEBDAPTR)                     0524 08017000
*   IOBHH=DEBSTRHH;                 /* SET UP SEEK HH                */ 08018000
         MVC   IOBHH(2,@08),DEBSTRHH(DEBDAPTR)                     0525 08019000
*   NPA5SRCC(1:2)=DEBSTRCC;         /* SET UP SEARCH CC              */ 08020000
         MVC   NPA5SRCC(2),DEBSTRCC(DEBDAPTR)                      0526 08021000
*   NPA5SRCC(3:4)=DEBSTRHH;         /* SET UP SEARCH HH              */ 08022000
         MVC   NPA5SRCC+2(2),DEBSTRHH(DEBDAPTR)                    0527 08023000
*   NVTLPAND=NVTLVIRT;              /* UPDATE NVT WITH HIGH LPA    0528 08024000
*                                      ADDRESS               @Z40WPYB*/ 08025000
*                                                                  0528 08026000
         MVC   NVTLPAND(4,RNVT),NVTLVIRT(RNVT)                     0528 08027000
*   /*****************************************************************/ 08028000
*   /*                                                               */ 08029000
*   /* BUILD THE BLDL INFORMATION TABLE FOR EXECUTABLE MODS          */ 08030000
*   /*                                                               */ 08031000
*   /*****************************************************************/ 08032000
*                                                                  0529 08033000
*   LASTBLOK='0'B;                  /* INDICATE NOT END OF LPALIB  0529 08034000
*                                      DIRECTORY                     */ 08035000
         NI    LASTBLOK,B'01111111'                                0529 08036000
*   NP5NONEX='0'B;                  /* INITIALIZE NON-EXEC FLAG    0530 08037000
*                                                            @ZD04022*/ 08038000
         NI    NP5NONEX,B'11101111'                                0530 08039000
*   DO WHILE(LASTBLOK='0'B);        /* LOOP THROUGH LPALIB DIRECTORY    08040000
*                                      UNTIL LAST BLOCK IS PROCESSED */ 08041000
*                                                                  0531 08042000
         B     @DE00531                                            0531 08043000
@DL00531 DS    0H                                                  0532 08044000
*     /***************************************************************/ 08045000
*     /*                                                             */ 08046000
*     /* READ THE NEXT DIRECTORY BLOCK FROM SYS1.LPALIB              */ 08047000
*     /*                                                             */ 08048000
*     /***************************************************************/ 08049000
*                                                                  0532 08050000
*     CALL NPA5RBLK;                /* READ A BLOCK - NOTE THAT    0532 08051000
*                                      LASTBLOK WILL BE SET TO A 1 0532 08052000
*                                      WHEN THE LAST BLOCK HAS BEEN     08053000
*                                      READ IN                       */ 08054000
*                                                                  0532 08055000
         BAL   @14,NPA5RBLK                                        0532 08056000
*     /***************************************************************/ 08057000
*     /*                                                             */ 08058000
*     /* BUILD THE INFORMATION TABLE ENTRIES FOR THE MODULES LISTED  */ 08059000
*     /* IN THE DIRECTORY BLOCK JUST READ                            */ 08060000
*     /*                                                             */ 08061000
*     /***************************************************************/ 08062000
*                                                                  0533 08063000
*     CALL NPA5INFO;                /* BUILD TABLE ENTRIES           */ 08064000
         BAL   @14,NPA5INFO                                        0533 08065000
*   END;                            /* END OF SCAN LOOP              */ 08066000
@DE00531 TM    LASTBLOK,B'10000000'                                0534 08067000
         BZ    @DL00531                                            0534 08068000
*   IF NP5NONEX¬='0'B THEN          /* IF NON EXEC MODS      @ZD04022*/ 08069000
         TM    NP5NONEX,B'00010000'                                0535 08070000
         BZ    @RF00535                                            0535 08071000
*     CALL NPA5CERR(NONEX);         /* INDICATE ERROR        @ZD04022*/ 08072000
         LA    @01,@AL00536                                        0536 08073000
         BAL   @14,NPA5CERR                                        0536 08074000
*   IF LPDECT=0 THEN                /* TEST FOR EMPTY SYS1.LPALIB  0537 08075000
*                                      DATA SET                      */ 08076000
@RF00535 ICM   @08,15,LPDECT                                       0537 08077000
         BNZ   @RF00537                                            0537 08078000
*     CALL NPA5CERR(LPAMT);         /* YES, INDICATE ERROR           */ 08079000
*                                                                  0538 08080000
         LA    @01,@AL00538                                        0538 08081000
         BAL   @14,NPA5CERR                                        0538 08082000
*   /*****************************************************************/ 08083000
*   /*                                                               */ 08084000
*   /* CALCULATE THE HASH TABLE INDEX REQUIRED FOR THE LPA DIRECTORY */ 08085000
*   /* AND SET UP THE HASH POINTERS FOR THE BLDL INFORMATION TABLE   */ 08086000
*   /* ENTRIES                                                       */ 08087000
*   /*                                                               */ 08088000
*   /*****************************************************************/ 08089000
*                                                                  0539 08090000
*   CALL NPA5HSHA;                  /* INITIALIZE HASHING ALGORITHM  */ 08091000
*                                                                  0539 08092000
@RF00537 BAL   @14,NPA5HSHA                                        0539 08093000
*   /*****************************************************************/ 08094000
*   /*                                                               */ 08095000
*   /* VALIDITY CHECK THE ALIAS ENTRIES IN THE BLDL INFO TABLE AND   */ 08096000
*   /* REPORT ANY WHICH ARE INVALID                                  */ 08097000
*   /*                                                               */ 08098000
*   /*****************************************************************/ 08099000
*                                                                  0540 08100000
*   CALL NPA5VCHK;                  /* CHECK ALIASES                 */ 08101000
         BAL   @14,NPA5VCHK                                        0540 08102000
*   RETURN;                         /* RETURN TO CALLER              */ 08103000
@EL00004 DS    0H                                                  0541 08104000
@EF00004 DS    0H                                                  0541 08105000
@ER00004 LM    @14,@12,@SA00004                                    0541 08106000
         BR    @14                                                 0541 08107000
*   RESPECIFY                                                      0542 08108000
*    (DEBPTR,                                                      0542 08109000
*     DEBDAPTR) UNRESTRICTED;                                      0542 08110000
*   END NPA5CLIN;                                                  0543 08111000
@PB00004 DS    0H                                                  0544 08112000
*   GENERATE NOREFS NOSETS(EJECT);                                 0544 08113000
*                                                                  0544 08114000
         EJECT                                                          08115000
*/********************************************************************/ 08116000
*/*                                                                  */ 08117000
*/*         SUBROUTINE NPA5BLMQ                                      */ 08118000
*/*                                                                  */ 08119000
*/*         FUNCTION - BUILD A LOAD MODULE QUEUE TO CONTROL THE      */ 08120000
*/*            LOADING OF ORDERED LPA MODULES                        */ 08121000
*/*                                                                  */ 08122000
*/*         INPUT - THE LPA PACKING LIST MEMBER OF SYS1.PARMLIB      */ 08123000
*/*            THE ADDRESS OF THE LAST BYTE OF THE LIST EXAMINED     */ 08124000
*/*                                                                  */ 08125000
*/*         OUTPUT - A QUEUE OF BLDL INFORMATION TABLE ENTRIES       */ 08126000
*/*            POINTED TO BY NA5CSGRP                                */ 08127000
*/*                                                                  */ 08128000
*/********************************************************************/ 08129000
*                                                                  0545 08130000
*NPA5BLMQ:                                                         0545 08131000
*   PROC;                           /* BEGINNING OF SUBR             */ 08132000
         B     @PB00005                                            0545 08133000
NPA5BLMQ STM   @14,@12,@SA00005                                    0545 08134000
*   RESPECIFY                                                      0546 08135000
*     NIPPAREA BASED(NVTPAREA);     /*                               */ 08136000
*                                                                  0546 08137000
*   /*****************************************************************/ 08138000
*   /*                                                               */ 08139000
*   /* IF THE LPA PACKING LIST HAS NOT ALREADY BEEN LOCATED FIND IT  */ 08140000
*   /* NOW AND INITIALIZE FOR BUILDING QUEUES                        */ 08141000
*   /*                                                               */ 08142000
*   /*****************************************************************/ 08143000
*                                                                  0547 08144000
*   IF PAKFOUND='0'B THEN           /* WAS LIST FOUND                */ 08145000
         TM    PAKFOUND,B'01000000'                                0547 08146000
         BNZ   @RF00547                                            0547 08147000
*     DO;                           /* NO, FIND PACKING LIST MEMBER     08148000
*                                      OF PARMLIB                    */ 08149000
*       NIPPANAM=PAKLSTNM;          /* SET UP MEMBER NAME            */ 08150000
*                                                                  0549 08151000
         L     @08,NVTPAREA(,RNVT)                                 0549 08152000
         MVC   NIPPANAM(8,@08),@CC00071                            0549 08153000
*       /*************************************************************/ 08154000
*       /*                                                           */ 08155000
*       /* LOCATE SYS1.PARMLIB MEMBER FOR PACK LIST                  */ 08156000
*       /*                                                           */ 08157000
*       /*************************************************************/ 08158000
*                                                                  0550 08159000
*       GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)             0550 08160000
*           (IEAPMNIP TYPE=REAL);   /* SWITCH TCB TO V=R             */ 08161000
         IEAPMNIP TYPE=REAL                                             08162000
*       CALL NIPPMPDS;              /* LOCATE MEMBER                 */ 08163000
         BAL   @14,NIPPMPDS                                        0551 08164000
*       BC(15,NP5LMQ01);            /* MEMBER FOUND - OK             */ 08165000
         BC    15,NP5LMQ01                                         0552 08166000
*       BC(15,NP5LMQ02);            /* MEMBER NOT FOUND              */ 08167000
         BC    15,NP5LMQ02                                         0553 08168000
*NP5LMQ01:                                                         0554 08169000
*       GENERATE REFS(NVTVIRT,RNVT) SETS(RENTRY,REXIT)             0554 08170000
*           (IEAPMNIP TYPE=VIRT);   /* SWITCH TCB TO V=V PACK LIST 0554 08171000
*                                      MEMBER FOUND ON SYS1.PARMLIB -   08172000
*                                      CONTINUE PROCESSING           */ 08173000
NP5LMQ01 IEAPMNIP TYPE=VIRT                                             08174000
*       PAKFOUND='1'B;              /* INDICATE MEMBER FOUND         */ 08175000
         OI    PAKFOUND,B'01000000'                                0555 08176000
*       TEXTPTR=ADDR(' ');          /* POINT TO BLANK - THIS FORCES A   08177000
*                                      READ OF THE NEXT TEXT RECORD     08178000
*                                      OF THE PACK LIST MEMBER       */ 08179000
         LA    @08,@CC03588                                        0556 08180000
         ST    @08,TEXTPTR                                         0556 08181000
*     END;                                                         0557 08182000
*                                                                  0557 08183000
*   /*****************************************************************/ 08184000
*   /*                                                               */ 08185000
*   /* INITIALIZE FOR START OF LOAD MODULE QUEUE                     */ 08186000
*   /*                                                               */ 08187000
*   /*****************************************************************/ 08188000
*                                                                  0558 08189000
*   DO WHILE LASTREQ='0'B;          /* SETTUP GROUPS UNTIL LAST GROUP   08190000
*                                      IS PROCESSED                  */ 08191000
@RF00547 B     @DE00558                                            0558 08192000
@DL00558 DS    0H                                                  0559 08193000
*     CALL NP5STRTQ;                /* SETTUP FOR QUEUE              */ 08194000
*                                                                  0559 08195000
         BAL   @14,NP5STRTQ                                        0559 08196000
*     /***************************************************************/ 08197000
*     /*                                                             */ 08198000
*     /* ADD MODULES TO QUEUE UNTIL END IS FOUND                     */ 08199000
*     /*                                                             */ 08200000
*     /***************************************************************/ 08201000
*                                                                  0560 08202000
*     DO WHILE(ENDOFQUE='0'B);      /* LOOP UNTIL END                */ 08203000
*                                                                  0560 08204000
         B     @DE00560                                            0560 08205000
@DL00560 DS    0H                                                  0561 08206000
*       /*************************************************************/ 08207000
*       /*                                                           */ 08208000
*       /* ADD THE NEXT MODULE TO THE QUEUE                          */ 08209000
*       /*                                                           */ 08210000
*       /*************************************************************/ 08211000
*                                                                  0561 08212000
*       CALL NP5NXTMD;              /* PROCESS NEXT NAME             */ 08213000
         BAL   @14,NP5NXTMD                                        0561 08214000
*     END;                          /* END OF NAME PROCESS LOOP      */ 08215000
@DE00560 TM    ENDOFQUE,B'00100000'                                0562 08216000
         BZ    @DL00560                                            0562 08217000
*     IF STGRP='0'B THEN            /* TEST FOR NO GROUP - IF SO,  0563 08218000
*                                      THIS IS THE END OF THE PACK 0563 08219000
*                                      LIST                          */ 08220000
         TM    STGRP,B'00000001'                                   0563 08221000
         BNZ   @RF00563                                            0563 08222000
*NP5LMQ03:                                                         0564 08223000
*       LASTREQ='1'B;               /* PACK LIST NOT FOUND           */ 08224000
NP5LMQ03 OI    LASTREQ,B'10000000'                                 0564 08225000
*     ELSE                                                         0565 08226000
*                                                                  0565 08227000
*       /*************************************************************/ 08228000
*       /*                                                           */ 08229000
*       /* LOAD MODULES SPECIFIED ON THIS QUEUE                      */ 08230000
*       /*                                                           */ 08231000
*       /*************************************************************/ 08232000
*                                                                  0565 08233000
*       CALL NPA5GLOD;              /* LOAD MODULES                  */ 08234000
         B     @RC00563                                            0565 08235000
@RF00563 BAL   @14,NPA5GLOD                                        0565 08236000
*   END;                            /* LIST FINISHED ?               */ 08237000
@RC00563 DS    0H                                                  0566 08238000
@DE00558 TM    LASTREQ,B'10000000'                                 0566 08239000
         BZ    @DL00558                                            0566 08240000
*   RETURN;                         /* YES - RETURN                  */ 08241000
@EL00005 DS    0H                                                  0567 08242000
@EF00005 DS    0H                                                  0567 08243000
@ER00005 LM    @14,@12,@SA00005                                    0567 08244000
         BR    @14                                                 0567 08245000
*NP5LMQ02:                          /* LPA PACKING LIST NOT FOUND -     08246000
*                                      OUTPUT MESSAGE                */ 08247000
*                                                                  0568 08248000
*   /*****************************************************************/ 08249000
*   /*                                                               */ 08250000
*   /* SWITCH TO V=R TCB FOR WTO                                     */ 08251000
*   /*                                                               */ 08252000
*   /*****************************************************************/ 08253000
*                                                                  0568 08254000
*   GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)(IEAPMNIP TYPE=REAL); 08255000
NP5LMQ02 IEAPMNIP TYPE=REAL                                             08256000
*                                   /* SWITCH TO V=R                 */ 08257000
*                                                                  0569 08258000
*   /*****************************************************************/ 08259000
*   /*                                                               */ 08260000
*   /* IEA208I LPA PACKING FUNCTION INOPERATIVE                      */ 08261000
*   /*                                                               */ 08262000
*   /*****************************************************************/ 08263000
*                                                                  0569 08264000
*   GENERATE REFS(RNVT,NVTWTO,MSG208I) SETS(RPARM,RENTRY,REXIT)    0569 08265000
*       (IEAPMNIP TYPE=WTO,PARAM=MSG208I);/* WTO MSG                 */ 08266000
*                                                                  0569 08267000
         IEAPMNIP TYPE=WTO,PARAM=MSG208I                                08268000
*   /*****************************************************************/ 08269000
*   /*                                                               */ 08270000
*   /* SWITCH TCB BACK TO V=V                                        */ 08271000
*   /*                                                               */ 08272000
*   /*****************************************************************/ 08273000
*                                                                  0570 08274000
*   GENERATE REFS(NVTVIRT,RNVT) SETS(RENTRY,REXIT)(IEAPMNIP TYPE=VIRT); 08275000
         IEAPMNIP TYPE=VIRT                                             08276000
*                                   /* SWITCH TO V=V                 */ 08277000
*   GOTO NP5LMQ03;                  /* INDICATE END OF LIST          */ 08278000
         B     NP5LMQ03                                            0571 08279000
*   END NPA5BLMQ;                   /* END OF SUBROUTINE             */ 08280000
@PB00005 DS    0H                                                  0573 08281000
*   GENERATE NOREFS NOSETS(EJECT);                                 0573 08282000
*                                                                  0573 08283000
         EJECT                                                          08284000
*/********************************************************************/ 08285000
*/*                                                                  */ 08286000
*/*         SUBROUTINE NP5STRTQ                                      */ 08287000
*/*                                                                  */ 08288000
*/*         FUNCTION - LOCATE THE BEGINNING OF A LOAD MODULE         */ 08289000
*/*            QUEUE SPECIFICATION AND INITIALIZE TO BUILD THE QUEUE */ 08290000
*/*                                                                  */ 08291000
*/*         INPUT - THE LPA PACKING LIST MEMBER OF SYS1.PARMLIB      */ 08292000
*/*            THE ADDRESS OF THE NEXT CHARACTER TO EXAMINE IN THE   */ 08293000
*/*            CURRENT INPUT RECORD                                  */ 08294000
*/*                                                                  */ 08295000
*/*         OUTPUT - LOAD MODULE QUEUE PROCESSING IS INITIALIZED     */ 08296000
*/*                                                                  */ 08297000
*/********************************************************************/ 08298000
*                                                                  0574 08299000
*NP5STRTQ:                          /* NP5STRTQ ENTRY PT             */ 08300000
*   PROC;                           /* BEGINNING OF SUBR             */ 08301000
         B     @PB00006                                            0574 08302000
NP5STRTQ STM   @14,@12,@SA00006                                    0574 08303000
*   NA5CSGRP=0;                     /* ZERO QUEUE HEADER             */ 08304000
         SLR   @08,@08                                             0575 08305000
         ST    @08,NA5CSGRP                                        0575 08306000
*   LASTMOD=0;                      /* INIT LAST MODULE POINTER      */ 08307000
         ST    @08,LASTMOD                                         0576 08308000
*   ENDOFQUE='0'B;                  /* INITIALIZE END OF QUEUE     0577 08309000
*                                      INDICATOR                     */ 08310000
*   STGRP='0'B;                     /* INDICATE START OF GROUP NOT 0578 08311000
*                                      FOUND YET                     */ 08312000
         NI    ENDOFQUE,B'11011110'                                0578 08313000
*   IF SCAN=' ' THEN                /* TEST FOR END OF CURRENT INPUT    08314000
*                                      RECORD                        */ 08315000
         L     @08,TEXTPTR                                         0579 08316000
         CLI   SCAN(@08),C' '                                      0579 08317000
         BNE   @RF00579                                            0579 08318000
*     DO;                           /* YES, MUST READ NEXT RECORD OF    08319000
*                                      PACK LIST                     */ 08320000
*                                                                  0580 08321000
*       /*************************************************************/ 08322000
*       /*                                                           */ 08323000
*       /* READ THE NEXT RECORD FROM THE LPA PACKING LIST MEMBER OF  */ 08324000
*       /* SYS1.PARMLIB                                              */ 08325000
*       /*                                                           */ 08326000
*       /*************************************************************/ 08327000
*                                                                  0581 08328000
*       GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)             0581 08329000
*           (IEAPMNIP TYPE=REAL);   /* SWITCH TCB TO V=R             */ 08330000
         IEAPMNIP TYPE=REAL                                             08331000
*       CALL NIPPMTXT;              /* READ A TEXT RECORD            */ 08332000
         BAL   @14,NIPPMTXT                                        0582 08333000
*       BC(15,NP5STRT1);            /* RECORD READ OK                */ 08334000
         BC    15,NP5STRT1                                         0583 08335000
*       BC(15,NP5STRT2);            /* RECORD NOT READ               */ 08336000
         BC    15,NP5STRT2                                         0584 08337000
*NP5STRT1:                                                         0585 08338000
*       GENERATE REFS(NVTVIRT,RNVT) SETS(RENTRY,REXIT)             0585 08339000
*           (IEAPMNIP TYPE=VIRT);   /* SWITCH TCB TO V=V PROCESSING  */ 08340000
NP5STRT1 IEAPMNIP TYPE=VIRT                                             08341000
*       TEXTPTR=RPARM;              /* POINT TO FIRST BYTE IN THE  0586 08342000
*                                      RECORD                        */ 08343000
         ST    RPARM,TEXTPTR                                       0586 08344000
*     END;                                                         0587 08345000
*                                                                  0587 08346000
*   /*****************************************************************/ 08347000
*   /*                                                               */ 08348000
*   /* VALIDITY CHECK THE BEGINNING OF THE LIST                      */ 08349000
*   /*                                                               */ 08350000
*   /*****************************************************************/ 08351000
*                                                                  0588 08352000
*   IF SCAN='(' THEN                /* TEST FOR START OF LIST      0588 08353000
*                                      SPECIFICATION                 */ 08354000
@RF00579 L     @08,TEXTPTR                                         0588 08355000
         CLI   SCAN(@08),C'('                                      0588 08356000
         BNE   @RF00588                                            0588 08357000
*     DO;                           /* START OF GROUP                */ 08358000
*       STGRP='1'B;                 /* INDICATE GROUP STRT           */ 08359000
         OI    STGRP,B'00000001'                                   0590 08360000
*       TEXTPTR=TEXTPTR+1;          /* POINT PAST (                  */ 08361000
         AH    @08,@CH00264                                        0591 08362000
         ST    @08,TEXTPTR                                         0591 08363000
*     END;                          /*                               */ 08364000
*   ELSE                            /* NOT LEFT PAREN                */ 08365000
*     IF SCAN=' '|SCAN='FF'X THEN   /* TEST FOR END OF PACKING LIST     08366000
*                                      MEMBER                        */ 08367000
         B     @RC00588                                            0593 08368000
@RF00588 L     @08,TEXTPTR                                         0593 08369000
         CLI   SCAN(@08),C' '                                      0593 08370000
         BE    @RT00593                                            0593 08371000
         CLI   SCAN(@08),X'FF'                                     0593 08372000
         BNE   @RF00593                                            0593 08373000
@RT00593 DS    0H                                                  0594 08374000
*       ENDOFQUE='1'B;              /* END OF LIST                   */ 08375000
         OI    ENDOFQUE,B'00100000'                                0594 08376000
*     ELSE                          /* NOT END OF LIST               */ 08377000
*       DO;                         /* ATTEMPT RECOVERY              */ 08378000
*                                                                  0595 08379000
         B     @RC00593                                            0595 08380000
@RF00593 DS    0H                                                  0596 08381000
*         /***********************************************************/ 08382000
*         /*                                                         */ 08383000
*         /* PROCESS INVALID DELIMITER IN LIST                       */ 08384000
*         /*                                                         */ 08385000
*         /***********************************************************/ 08386000
*                                                                  0596 08387000
*         CALL NP5PKERR(DELERR);    /* PROCESS ERROR                 */ 08388000
         LA    @01,@AL00596                                        0596 08389000
         BAL   @14,NP5PKERR                                        0596 08390000
*         IF SCAN='(' THEN          /* WAS RECOVERY SUCCESSFUL       */ 08391000
         L     @08,TEXTPTR                                         0597 08392000
         CLI   SCAN(@08),C'('                                      0597 08393000
         BNE   @RF00597                                            0597 08394000
*           DO;                     /* YES, CAN CONTINUE             */ 08395000
*             STGRP='1'B;           /* INDICATE GROUP STRT           */ 08396000
         OI    STGRP,B'00000001'                                   0599 08397000
*             TEXTPTR=TEXTPTR+1;    /* POINT PAST (                  */ 08398000
         AH    @08,@CH00264                                        0600 08399000
         ST    @08,TEXTPTR                                         0600 08400000
*           END;                                                   0601 08401000
*       END;                                                       0602 08402000
*   RETURN;                         /* RETURN TO CALLER              */ 08403000
@EL00006 DS    0H                                                  0603 08404000
@EF00006 DS    0H                                                  0603 08405000
@ER00006 LM    @14,@12,@SA00006                                    0603 08406000
         BR    @14                                                 0603 08407000
*NP5STRT2:                          /* I/O ERROR OCCURRED WHILE    0604 08408000
*                                      READING RECORD                */ 08409000
*   CALL NP5PKERR(PKIOERR);         /* PROCESS ERROR                 */ 08410000
NP5STRT2 LA    @01,@AL00604                                        0604 08411000
         BAL   @14,NP5PKERR                                        0604 08412000
*   RETURN;                         /* RETURN TO CALLER              */ 08413000
         B     @EL00006                                            0605 08414000
*   GENERATE NOREFS NOSETS(EJECT);                                 0606 08415000
*                                                                  0606 08416000
         EJECT                                                          08417000
*/********************************************************************/ 08418000
*/*                                                                  */ 08419000
*/*         SUBROUTINE NP5NXTMD                                      */ 08420000
*/*                                                                  */ 08421000
*/*         FUNCTION - PROCESS NEXT MODULE SPECIFICATION IN THE      */ 08422000
*/*            LPA PACKING LIST                                      */ 08423000
*/*                                                                  */ 08424000
*/*         INPUT - LPA MODULE PACKING LIST MEMBER                   */ 08425000
*/*            ADDRESS OF THE NEXT BYTE IN THE CURRENT INPUT RECORD  */ 08426000
*/*            ADDRESS OF THE LAST MODULE ON THE QUEUE               */ 08427000
*/*            ADDRESS OF THE START OF THE QUEUE                     */ 08428000
*/*                                                                  */ 08429000
*/*         OUTPUT - THE NEXT MODULE SPECIFIED IS ADDED TO THE QUEUE */ 08430000
*/*                                                                  */ 08431000
*/********************************************************************/ 08432000
*                                                                  0607 08433000
*NP5NXTMD:                          /* NP5NXTMD ENTRY PT             */ 08434000
*   ENTRY;                          /* BEGINNING OF SUBR             */ 08435000
*                                                                  0607 08436000
         B     @EC00607                                            0607 08437000
NP5NXTMD STM   @14,@12,@SA00006                                    0607 08438000
@EC00607 DS    0H                                                  0608 08439000
*   /*****************************************************************/ 08440000
*   /*                                                               */ 08441000
*   /* IF THERE IS NO USEABLE DATA IN THE BUFFER, READ THE NEXT      */ 08442000
*   /* RECORD FROM THE LPA PACKING LIST MEMBER                       */ 08443000
*   /*                                                               */ 08444000
*   /*****************************************************************/ 08445000
*                                                                  0608 08446000
*   IF SCAN=' ' THEN                /* IS THERE ANY DATA             */ 08447000
         L     @08,TEXTPTR                                         0608 08448000
         CLI   SCAN(@08),C' '                                      0608 08449000
         BNE   @RF00608                                            0608 08450000
*     DO;                           /* NO, READ A RECORD             */ 08451000
*                                                                  0609 08452000
*       /*************************************************************/ 08453000
*       /*                                                           */ 08454000
*       /* READ THE NEXT RECORD FROM THE PARMLIB MEMBER              */ 08455000
*       /*                                                           */ 08456000
*       /*************************************************************/ 08457000
*                                                                  0610 08458000
*       GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)             0610 08459000
*           (IEAPMNIP TYPE=REAL);   /* SWITCH TCB TO V=R             */ 08460000
         IEAPMNIP TYPE=REAL                                             08461000
*       CALL NIPPMTXT;              /* READ A RECORD                 */ 08462000
         BAL   @14,NIPPMTXT                                        0611 08463000
*       BC(15,NP5NXTM1);            /* RECORD READ OK                */ 08464000
         BC    15,NP5NXTM1                                         0612 08465000
*       BC(15,NP5NXTM2);            /* ERROR ON READ                 */ 08466000
         BC    15,NP5NXTM2                                         0613 08467000
*NP5NXTM1:                                                         0614 08468000
*       GENERATE REFS(NVTVIRT,RNVT) SETS(RENTRY,REXIT)             0614 08469000
*           (IEAPMNIP TYPE=VIRT);   /* SWITCH TCB TO V=V PROCESSING  */ 08470000
NP5NXTM1 IEAPMNIP TYPE=VIRT                                             08471000
*       TEXTPTR=RPARM;              /* SAVE ADDRESS OF FIRST BYTE OF    08472000
*                                      RECORD                        */ 08473000
         ST    RPARM,TEXTPTR                                       0615 08474000
*     END;                          /*                               */ 08475000
*   MODULE='';                      /* BLANK OUT MODULE NAME         */ 08476000
*                                                                  0617 08477000
@RF00608 MVI   MODULE,C' '                                         0617 08478000
         MVC   MODULE+1(7),MODULE                                  0617 08479000
*   /*****************************************************************/ 08480000
*   /*                                                               */ 08481000
*   /* SCAN THE INPUT RECORD FOR A DELIMITER                         */ 08482000
*   /*                                                               */ 08483000
*   /*****************************************************************/ 08484000
*                                                                  0618 08485000
*   DO INDEX=1 TO 9                 /* 1-8 BYTE NAME VALID           */ 08486000
*         WHILE(SCAN¬=','&SCAN¬=')'&SCAN¬=' ');/* SCAN TILL DELIMITER   08487000
*                                      FOUND IN THE RECORD           */ 08488000
         LA    @08,1                                               0618 08489000
         ST    @08,INDEX                                           0618 08490000
@DL00618 L     @15,TEXTPTR                                         0618 08491000
         CLI   SCAN(@15),C','                                      0618 08492000
         BE    @DC00618                                            0618 08493000
         CLI   SCAN(@15),C')'                                      0618 08494000
         BE    @DC00618                                            0618 08495000
         CLI   SCAN(@15),C' '                                      0618 08496000
         BE    @DC00618                                            0618 08497000
*     IF INDEX<=8 THEN              /* TEST FOR VALID NUMBER OF    0619 08498000
*                                      CHARACTERS                    */ 08499000
         CH    @08,@CH00050                                        0619 08500000
         BH    @RF00619                                            0619 08501000
*       DO;                         /* VALID                         */ 08502000
*         MODULE(INDEX)=SCAN;       /* COPY CHAR JUST EXAMINED       */ 08503000
         LA    @14,MODULE-1(@08)                                   0621 08504000
         MVC   0(1,@14),SCAN(@15)                                  0621 08505000
*         TEXTPTR=TEXTPTR+1;        /* POINT TO NEXT CHARACTER       */ 08506000
         AH    @15,@CH00264                                        0622 08507000
         ST    @15,TEXTPTR                                         0622 08508000
*       END;                        /* CONTINUE SCAN                 */ 08509000
*     ELSE                          /* LONGER THAN 8 CHARACTERS      */ 08510000
*       CALL NP5PKERR(PKNAMNG);     /* WRITE ERROR MSG               */ 08511000
         B     @RC00619                                            0624 08512000
@RF00619 LA    @01,@AL00624                                        0624 08513000
         BAL   @14,NP5PKERR                                        0624 08514000
*   END;                            /* END OF SCAN LOOP - CONTINUE 0625 08515000
*                                      SCANNING UNTIL 8 BYTES HAVE 0625 08516000
*                                      BEEN COPIED OR A VALID      0625 08517000
*                                      DELIMITER HAS BEEN FOUND      */ 08518000
@RC00619 LA    @08,1                                               0625 08519000
         AL    @08,INDEX                                           0625 08520000
         ST    @08,INDEX                                           0625 08521000
         CH    @08,@CH00827                                        0625 08522000
         BNH   @DL00618                                            0625 08523000
@DC00618 DS    0H                                                  0626 08524000
*   IF SCAN=' ' THEN                /* WAS THE DELIMITER A BLANK     */ 08525000
         L     @08,TEXTPTR                                         0626 08526000
         CLI   SCAN(@08),C' '                                      0626 08527000
         BNE   @RF00626                                            0626 08528000
*     DO;                                                          0627 08529000
*       LASTMODN=MODULE;            /* SAVE NAME BEFORE BLANK        */ 08530000
         MVC   LASTMODN(8),MODULE                                  0628 08531000
*       CALL NP5PKERR(DELNG);       /* YES, PROCESS THE DELIMTER   0629 08532000
*                                      ERROR                         */ 08533000
         LA    @01,@AL00629                                        0629 08534000
         BAL   @14,NP5PKERR                                        0629 08535000
*     END;                                                         0630 08536000
*                                                                  0630 08537000
*   /*****************************************************************/ 08538000
*   /*                                                               */ 08539000
*   /* IF A MODULE NAME WAS SPECIFIED, ADD IT TO THE LOAD MODULE     */ 08540000
*   /* QUEUE BEING BUILT                                             */ 08541000
*   /*                                                               */ 08542000
*   /*****************************************************************/ 08543000
*                                                                  0631 08544000
*   IF INDEX>1 THEN                 /* WAS A NAME SPECIFIED IN THE 0631 08545000
*                                      LIST                          */ 08546000
@RF00626 L     @08,INDEX                                           0631 08547000
         CH    @08,@CH00264                                        0631 08548000
         BNH   @RF00631                                            0631 08549000
*     DO;                           /* YES, PROCESS IT               */ 08550000
*       LASTMODN=MODULE;            /* SAVE VALID NAME               */ 08551000
         MVC   LASTMODN(8),MODULE                                  0633 08552000
*       MODERR='0'B;                /* RESET ERROR FLAG              */ 08553000
*                                                                  0634 08554000
         NI    MODERR,B'11101111'                                  0634 08555000
*       /*************************************************************/ 08556000
*       /*                                                           */ 08557000
*       /* FIND THE BLDL INFORMATION TABLE ENTRY FOR THE SPECIFIED   */ 08558000
*       /* MODULE AND VALIDITY CHECK THE ENTRY                       */ 08559000
*       /*                                                           */ 08560000
*       /*************************************************************/ 08561000
*                                                                  0635 08562000
*       CALL NP5FINDE;              /* FIND ENTRY                    */ 08563000
         BAL   @14,NP5FINDE                                        0635 08564000
*       IF MODERR='0'B THEN         /* WAS MODULE FOUND OK           */ 08565000
         TM    MODERR,B'00010000'                                  0636 08566000
         BNZ   @RF00636                                            0636 08567000
*         DO;                       /* YES, ADD IT TO QUEUE          */ 08568000
*           IF NA5CSGRP=0 THEN      /* IS THE QUEUE EMPTY            */ 08569000
         ICM   @08,15,NA5CSGRP                                     0638 08570000
         BNZ   @RF00638                                            0638 08571000
*             NA5CSGRP=INFOPTR;     /* YES, START QUEUE              */ 08572000
         MVC   NA5CSGRP(4),INFOPTR                                 0639 08573000
*           ELSE                    /* NO, QUEUE STARTED             */ 08574000
*             LASTMOD->INFCHAIN=INFOPTR;/* ADD TO THE END OF THE   0640 08575000
*                                      QUEUE                         */ 08576000
         B     @RC00638                                            0640 08577000
@RF00638 L     @08,LASTMOD                                         0640 08578000
         MVC   INFCHAIN(3,@08),INFOPTR+1                           0640 08579000
*           LASTMOD=INFOPTR;        /* UPDATE END OF QUEUE POINTER   */ 08580000
@RC00638 MVC   LASTMOD(4),INFOPTR                                  0641 08581000
*         END;                                                     0642 08582000
*     END;                                                         0643 08583000
*                                                                  0643 08584000
@RF00636 DS    0H                                                  0644 08585000
*   /*****************************************************************/ 08586000
*   /*                                                               */ 08587000
*   /* PROCESS DELIMITER FOLLOWING NAME                              */ 08588000
*   /*                                                               */ 08589000
*   /*****************************************************************/ 08590000
*                                                                  0644 08591000
*   IF SCAN=')' THEN                /* IS IT END OF LIST             */ 08592000
@RF00631 L     @08,TEXTPTR                                         0644 08593000
         CLI   SCAN(@08),C')'                                      0644 08594000
         BNE   @RF00644                                            0644 08595000
*     DO;                           /* YES, END OF QUEUE             */ 08596000
*       ENDOFQUE='1'B;              /* INDICATE END OF QUEUE         */ 08597000
         OI    ENDOFQUE,B'00100000'                                0646 08598000
*       TEXTPTR=TEXTPTR+1;          /* POINT PAST RT PAREN           */ 08599000
         LA    @15,1                                               0647 08600000
         ALR   @08,@15                                             0647 08601000
         ST    @08,TEXTPTR                                         0647 08602000
*       IF SCAN=',' THEN            /* IS THERE A COMMA              */ 08603000
         CLI   SCAN(@08),C','                                      0648 08604000
         BNE   @RF00648                                            0648 08605000
*         TEXTPTR=TEXTPTR+1;        /* YES, POINT TO START OF THE  0649 08606000
*                                      NEXT LIST                     */ 08607000
         ALR   @08,@15                                             0649 08608000
         ST    @08,TEXTPTR                                         0649 08609000
*       ELSE                        /* NO, MUST BE END               */ 08610000
*         IF SCAN=' ' THEN          /* IS THERE A BLANK              */ 08611000
         B     @RC00648                                            0650 08612000
@RF00648 L     @08,TEXTPTR                                         0650 08613000
         CLI   SCAN(@08),C' '                                      0650 08614000
         BNE   @RF00650                                            0650 08615000
*           SCAN='FF'X;             /* INDICATE END OF LIST          */ 08616000
         MVI   SCAN(@08),X'FF'                                     0651 08617000
*         ELSE                      /* NO, INVALID DELIMITER         */ 08618000
*           DO;                                                    0652 08619000
*                                                                  0652 08620000
         B     @RC00650                                            0652 08621000
@RF00650 DS    0H                                                  0653 08622000
*             /*******************************************************/ 08623000
*             /*                                                     */ 08624000
*             /* PROCESS INVALID DELIMITER                           */ 08625000
*             /*                                                     */ 08626000
*             /*******************************************************/ 08627000
*                                                                  0653 08628000
*             CALL NP5PKERR(DELERR);/* PROCESS ERROR                 */ 08629000
         LA    @01,@AL00653                                        0653 08630000
         BAL   @14,NP5PKERR                                        0653 08631000
*             ENDOFQUE='1'B;        /* INDICATE END OF QUEUE         */ 08632000
         OI    ENDOFQUE,B'00100000'                                0654 08633000
*           END;                                                   0655 08634000
*     END;                                                         0656 08635000
*   ELSE                            /* NO, NOT END OF Q              */ 08636000
*     IF SCAN¬='FF'X THEN           /* TEST FOR END OF FILE DURING 0657 08637000
*                                      ERROR PROCESSING              */ 08638000
         B     @RC00644                                            0657 08639000
@RF00644 L     @08,TEXTPTR                                         0657 08640000
         CLI   SCAN(@08),X'FF'                                     0657 08641000
         BE    @RF00657                                            0657 08642000
*       TEXTPTR=TEXTPTR+1;          /* POINT PAST COMMA              */ 08643000
         AH    @08,@CH00264                                        0658 08644000
         ST    @08,TEXTPTR                                         0658 08645000
*   RETURN;                         /* RETURN TO CALLER              */ 08646000
         B     @EL00006                                            0659 08647000
*NP5NXTM2:                          /* I/O ERROR WHILE READING     0660 08648000
*                                      PARMLIB RECORD                */ 08649000
*                                                                  0660 08650000
*   /*****************************************************************/ 08651000
*   /*                                                               */ 08652000
*   /* PROCESS I/O ERROR ON PARMLIB                                  */ 08653000
*   /*                                                               */ 08654000
*   /*****************************************************************/ 08655000
*                                                                  0660 08656000
*   CALL NP5PKERR(PKIOERR);         /* PROCESS ERROR                 */ 08657000
NP5NXTM2 LA    @01,@AL00660                                        0660 08658000
         BAL   @14,NP5PKERR                                        0660 08659000
*   RETURN;                         /* RETURN TO CALLER              */ 08660000
         B     @EL00006                                            0661 08661000
*   END NP5STRTQ;                   /* END OF SUBROUTINE             */ 08662000
         B     @EL00006                                            0662 08663000
@PB00006 DS    0H                                                  0663 08664000
*   GENERATE NOREFS NOSETS(EJECT);                                 0663 08665000
*                                                                  0663 08666000
         EJECT                                                          08667000
*/********************************************************************/ 08668000
*/*                                                                  */ 08669000
*/*         SUBROUTINE NP5FINDE                                      */ 08670000
*/*                                                                  */ 08671000
*/*         FUNCTION - TO FIND AND VALIDATE THE BLDL INFORMATION     */ 08672000
*/*            TABLE ENTRY FOR A GIVEN MODULE TO BE ADDED TO THE     */ 08673000
*/*            LOAD MODULE QUEUE                                     */ 08674000
*/*                                                                  */ 08675000
*/*         INPUT - THE NAME OF THE MODULE TO BE FOUND               */ 08676000
*/*            THE ADDRESS OF THE START OF THE BLDL INFO INDEX TABLE */ 08677000
*/*            THE LPA DIRECTORY HASH VALUE                          */ 08678000
*/*                                                                  */ 08679000
*/*         OUTPUT - THE ADDRESS OF THE BLDL INFO TABLE ENTRY        */ 08680000
*/*                                                                  */ 08681000
*/********************************************************************/ 08682000
*                                                                  0664 08683000
*NP5FINDE:                          /* NP5FINDE ENTRY PT             */ 08684000
*   PROC;                           /* BEGINNING OF SUBR             */ 08685000
         B     @PB00007                                            0664 08686000
NP5FINDE STM   @14,@12,@SA00007                                    0664 08687000
*   DIRNTNO=(MOD1&&MOD2)//NVTLPAHA; /* CALCULATE THE LPA DIRECTORY 0665 08688000
*                                      INDEX FOR THE MODULE  @Z40WPYB*/ 08689000
         L     @08,MOD1                                            0665 08690000
         X     @08,MOD2                                            0665 08691000
         LR    @05,@08                                             0665 08692000
         SLR   @04,@04                                             0665 08693000
         D     @04,NVTLPAHA(,RNVT)                                 0665 08694000
         ST    @04,DIRNTNO                                         0665 08695000
*   SLOTADDR=(DIRNTNO*4)+NA5BLDIR;  /* CALCULATE THE ADDRESS OF THE     08696000
*                                      BLDL INFO INDEX TABLE ENTRY   */ 08697000
         SLA   @04,2                                               0666 08698000
         AL    @04,NA5BLDIR                                        0666 08699000
         ST    @04,SLOTADDR                                        0666 08700000
*   INFOPTR=SLOTADDR->NP5BPTR;      /* PICK UP ADDRESS OF FIRST BLDL    08701000
*                                      INFO TABLE ENTRY IN THE     0667 08702000
*                                      SYNONYM QUEUE                 */ 08703000
         MVC   INFOPTR(4),NP5BPTR(@04)                             0667 08704000
*   IF INFOPTR¬=0 THEN              /* TEST FOR NON-ZERO QUEUE HEADER*/ 08705000
*                                                                  0668 08706000
         ICM   @08,15,INFOPTR                                      0668 08707000
         BZ    @RF00668                                            0668 08708000
*     /***************************************************************/ 08709000
*     /*                                                             */ 08710000
*     /* SEARCH THE SYNONYM CHAIN FOR THE SPECIFIED MODULE           */ 08711000
*     /*                                                             */ 08712000
*     /***************************************************************/ 08713000
*                                                                  0669 08714000
*     DO WHILE(MODERR='0'B&INFNAME¬=MODULE);/* SCAN UNTIL THE GIVEN     08715000
*                                      MODULE NAME IS FOUND OR THE 0669 08716000
*                                      QUEUE IS FINISHED             */ 08717000
         B     @DE00669                                            0669 08718000
@DL00669 DS    0H                                                  0670 08719000
*       IF INFSYNM¬=0 THEN          /* ARE THERE ANY MORE MODULES IN    08720000
*                                      THIS SYNONYM CHAIN            */ 08721000
         L     @08,INFOPTR                                         0670 08722000
         ICM   @00,7,INFSYNM(@08)                                  0670 08723000
         BZ    @RF00670                                            0670 08724000
*         INFOPTR=INFSYNM;          /* YES, KEEP GOING               */ 08725000
         L     @08,INFOPTR                                         0671 08726000
         SLR   @00,@00                                             0671 08727000
         ICM   @00,7,INFSYNM(@08)                                  0671 08728000
         ST    @00,INFOPTR                                         0671 08729000
*       ELSE                        /* NO, END OF CHAIN              */ 08730000
*         MODERR='1'B;              /* MODULE NOT FOUND              */ 08731000
         B     @RC00670                                            0672 08732000
@RF00670 OI    MODERR,B'00010000'                                  0672 08733000
*     END;                          /* END OF SCAN LOOP              */ 08734000
@RC00670 DS    0H                                                  0673 08735000
@DE00669 TM    MODERR,B'00010000'                                  0673 08736000
         BNZ   @DC00669                                            0673 08737000
         L     @08,INFOPTR                                         0673 08738000
         CLC   INFNAME(8,@08),MODULE                               0673 08739000
         BNE   @DL00669                                            0673 08740000
@DC00669 DS    0H                                                  0674 08741000
*   ELSE                            /* NO ELEMENTS ON Q              */ 08742000
*     MODERR='1'B;                  /* INDICATE MODULE NOT FOUND     */ 08743000
         B     @RC00668                                            0674 08744000
@RF00668 OI    MODERR,B'00010000'                                  0674 08745000
*   IF MODERR='0'B THEN             /* WAS MODULE FOUND              */ 08746000
@RC00668 TM    MODERR,B'00010000'                                  0675 08747000
         BNZ   @RF00675                                            0675 08748000
*     IF INFIND='1'B THEN           /* YES, TEST FOR MODULE ALREADY     08749000
*                                      LOADED                        */ 08750000
         L     @08,INFOPTR                                         0676 08751000
         TM    INFIND(@08),B'10000000'                             0676 08752000
         BNO   @RF00676                                            0676 08753000
*       MODERR='1'B;                /* YES, INDICATE INVALID       0677 08754000
*                                      SPECIFICATION                 */ 08755000
         OI    MODERR,B'00010000'                                  0677 08756000
*     ELSE                          /* NO, CONTINUE CHECK            */ 08757000
*       IF INFALIS='1'B|INFCHAIN¬=0|INFOPTR=LASTMOD THEN/* TEST FOR A   08758000
*                                      MODULE WHICH IS AN ALIAS NAME    08759000
*                                      OR IS ALREADY ON THIS QUEUE   */ 08760000
         B     @RC00676                                            0678 08761000
@RF00676 L     @08,INFOPTR                                         0678 08762000
         TM    INFALIS(@08),B'01000000'                            0678 08763000
         BO    @RT00678                                            0678 08764000
         L     @08,INFOPTR                                         0678 08765000
         ICM   @00,7,INFCHAIN(@08)                                 0678 08766000
         BNZ   @RT00678                                            0678 08767000
         CLC   INFOPTR(4),LASTMOD                                  0678 08768000
         BNE   @RF00678                                            0678 08769000
@RT00678 DS    0H                                                  0679 08770000
*         MODERR='1'B;              /* INDICATE ERROR                */ 08771000
         OI    MODERR,B'00010000'                                  0679 08772000
*   IF MODERR='1'B THEN             /* WAS THERE AN ERROR            */ 08773000
*                                                                  0680 08774000
@RF00678 DS    0H                                                  0680 08775000
@RC00676 DS    0H                                                  0680 08776000
@RF00675 TM    MODERR,B'00010000'                                  0680 08777000
         BNO   @RF00680                                            0680 08778000
*     /***************************************************************/ 08779000
*     /*                                                             */ 08780000
*     /* PROCESS INVALID MODULE NAME SPECIFICATION                   */ 08781000
*     /*                                                             */ 08782000
*     /***************************************************************/ 08783000
*                                                                  0681 08784000
*     CALL NP5PKERR(NAMENG);        /* PROCESS ERROR                 */ 08785000
         LA    @01,@AL00681                                        0681 08786000
         BAL   @14,NP5PKERR                                        0681 08787000
*   RETURN;                         /* RETURN TO CALLER              */ 08788000
@EL00007 DS    0H                                                  0682 08789000
@EF00007 DS    0H                                                  0682 08790000
@ER00007 LM    @14,@12,@SA00007                                    0682 08791000
         BR    @14                                                 0682 08792000
*   GENERATE NOREFS NOSETS(EJECT);                                 0683 08793000
*                                                                  0683 08794000
         EJECT                                                          08795000
*/********************************************************************/ 08796000
*/*                                                                  */ 08797000
*/*         SUBROUTINE NPA5FSLT                                      */ 08798000
*/*                                                                  */ 08799000
*/*         FUNCTION - FIND SLOT IN BLDL INFORMATION INDEX TABLE     */ 08800000
*/*            FOR A GIVEN MODULE NAME                               */ 08801000
*/*                                                                  */ 08802000
*/*         INPUT - MODULE NAME (MODULE )                            */ 08803000
*/*                                                                  */ 08804000
*/*         OUTPUT - ADDRESS OF SLOT (SLOTADDR)                      */ 08805000
*/*                                                                  */ 08806000
*/********************************************************************/ 08807000
*                                                                  0684 08808000
*NPA5FSLT:                          /* NPA5FSLT ENTRY PT             */ 08809000
*   ENTRY;                          /* BEGINNING OF SUBR             */ 08810000
         B     @EC00684                                            0684 08811000
NPA5FSLT STM   @14,@12,@SA00007                                    0684 08812000
@EC00684 DS    0H                                                  0685 08813000
*   DIRNTNO=(MOD1&&MOD2)//NPA5HASH; /* CALCULATE INDEX INTO BLDL INFO   08814000
*                                      TABLE                         */ 08815000
         L     @04,MOD1                                            0685 08816000
         X     @04,MOD2                                            0685 08817000
         LR    @07,@04                                             0685 08818000
         SLR   @06,@06                                             0685 08819000
         D     @06,NPA5HASH                                        0685 08820000
         ST    @06,DIRNTNO                                         0685 08821000
*   SLOTADDR=(DIRNTNO*4)+NA5BLDIR;  /* CALCULATE ADDRESS OF SLOT     */ 08822000
         SLA   @06,2                                               0686 08823000
         AL    @06,NA5BLDIR                                        0686 08824000
         ST    @06,SLOTADDR                                        0686 08825000
*   RETURN;                         /* RETURN TO CALLER              */ 08826000
         B     @EL00007                                            0687 08827000
*   END NP5FINDE;                   /* END OF SUBROUTINE             */ 08828000
         B     @EL00007                                            0688 08829000
@PB00007 DS    0H                                                  0689 08830000
*   GENERATE NOREFS NOSETS(EJECT);                                 0689 08831000
*                                                                  0689 08832000
         EJECT                                                          08833000
*/********************************************************************/ 08834000
*/*                                                                  */ 08835000
*/*         SUBROUTINE NP5PKERR                                      */ 08836000
*/*                                                                  */ 08837000
*/*         FUNCTION - PROCESSES AN ERROR ENCOUNTERED WHILE          */ 08838000
*/*            ATTEMPTING TO BUILD A LOAD MODULE QUEUE TO SUPPORT    */ 08839000
*/*            THE LPA LOAD MODULE PACKING FUNCTION                  */ 08840000
*/*                                                                  */ 08841000
*/*         INPUT - REGISTER 1 POINTS TO THE ADDRESS OF A HALFWORD   */ 08842000
*/*            ERROR CODE                                            */ 08843000
*/*                                                                  */ 08844000
*/*         OUTPUT - TEXTPTR IS UPDATED TO POINT PAST THE ERROR      */ 08845000
*/*                                                                  */ 08846000
*/********************************************************************/ 08847000
*                                                                  0690 08848000
*NP5PKERR:                          /* NP5PKERR ENTRY PT             */ 08849000
*   PROC;                           /* BEGINNING OF SUBR             */ 08850000
         B     @PB00008                                            0690 08851000
NP5PKERR STM   @14,@12,@SA00008                                    0690 08852000
*   CODE=ERRCOD;                    /* COPY ERROR CODE               */ 08853000
         L     @08,ERRPTR(,RPARM)                                  0691 08854000
         LH    @08,ERRCOD(,@08)                                    0691 08855000
         STH   @08,CODE                                            0691 08856000
*   IF CODE=DELERR|CODE=DELNG THEN  /* TEST FOR DELIMITER ERROR LINK    08857000
*                                      MISSING (                     */ 08858000
         CH    @08,@CH00058                                        0692 08859000
         BE    @RT00692                                            0692 08860000
         CH    @08,@CH00067                                        0692 08861000
         BNE   @RF00692                                            0692 08862000
@RT00692 DS    0H                                                  0693 08863000
*     DO;                           /* DELIMITER ERROR               */ 08864000
*                                                                  0693 08865000
*       /*************************************************************/ 08866000
*       /*                                                           */ 08867000
*       /* IEA357I DELIMITER FOLLOWING MODNAME INVALID - SKIPPING TO */ 08868000
*       /* NEXT GROUP                                                */ 08869000
*       /*                                                           */ 08870000
*       /*************************************************************/ 08871000
*                                                                  0694 08872000
*       DELMDNM=LASTMODN;           /* PUT LAST VALID MODULE NAME  0694 08873000
*                                      INTO CAUSE OF ERROR           */ 08874000
         MVC   DELMDNM(8),LASTMODN                                 0694 08875000
*       M357FI1=CSEDELNG;           /* PUT CAUSE INTO MSG            */ 08876000
         MVC   M357FI1(36),CSEDELNG                                0695 08877000
*       M357FI2=GRPSKIP;            /* PUT ACTION INTO MSG           */ 08878000
         MVC   M357FI2(22),GRPSKIP                                 0696 08879000
*       IF CODE=DELNG THEN          /* IF DELIMITER IS NO GOOD       */ 08880000
         CLC   CODE(2),@CH00067                                    0697 08881000
         BE    @RT00697                                            0697 08882000
*         GOTO NP5SCANR;            /* SCAN FOR RIGHT PAREND         */ 08883000
*       ELSE                                                       0699 08884000
*         ;                                                        0699 08885000
*                                                                  0699 08886000
*       /*************************************************************/ 08887000
*       /*                                                           */ 08888000
*       /* SCAN FOR THE START OF THE NEXT GROUP SO PROCESSING CAN    */ 08889000
*       /* RESUME AFTER THE GROUP IN ERROR                           */ 08890000
*       /*                                                           */ 08891000
*       /*************************************************************/ 08892000
*                                                                  0700 08893000
*       DO WHILE(SCAN¬='(');        /* SCAN FOR LEFT PAREN           */ 08894000
         B     @DE00700                                            0700 08895000
@DL00700 DS    0H                                                  0701 08896000
*         IF SCAN=' ' THEN          /* TEST FOR BLANK                */ 08897000
         L     @08,TEXTPTR                                         0701 08898000
         CLI   SCAN(@08),C' '                                      0701 08899000
         BNE   @RF00701                                            0701 08900000
*           DO;                     /* BLANK - END OF RECORD - MUST     08901000
*                                      READ NEXT RECORD              */ 08902000
*                                                                  0702 08903000
*             /*******************************************************/ 08904000
*             /*                                                     */ 08905000
*             /* READ THE NEXT RECORD OF THE PACKING LIST            */ 08906000
*             /*                                                     */ 08907000
*             /*******************************************************/ 08908000
*                                                                  0703 08909000
*             GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)       0703 08910000
*                 (IEAPMNIP TYPE=REAL);/* SWITCH TCB TO V=R          */ 08911000
         IEAPMNIP TYPE=REAL                                             08912000
*             CALL NIPPMTXT;        /* READ A RECORD                 */ 08913000
         BAL   @14,NIPPMTXT                                        0704 08914000
*             BC(15,NP5PKER1);      /* I/O OK                        */ 08915000
         BC    15,NP5PKER1                                         0705 08916000
*             BC(15,NP5PKER2);      /* I/O ERROR - EOF               */ 08917000
         BC    15,NP5PKER2                                         0706 08918000
*NP5PKER1:                                                         0707 08919000
*             GENERATE REFS(NVTVIRT,RNVT) SETS(RENTRY,REXIT)       0707 08920000
*                 (IEAPMNIP TYPE=VIRT);/* SWITCH TCB TO V=V READ OK  */ 08921000
NP5PKER1 IEAPMNIP TYPE=VIRT                                             08922000
*             TEXTPTR=RPARM;        /* POINT TO FIRST CHARACTER OF 0708 08923000
*                                      NEW RECORD                    */ 08924000
         ST    RPARM,TEXTPTR                                       0708 08925000
*           END;                    /*                               */ 08926000
*         ELSE                      /* NOT BLANK - MORE DATA TO    0710 08927000
*                                      PROCESS                       */ 08928000
*           TEXTPTR=TEXTPTR+1;      /* STEP POINTER                  */ 08929000
         B     @RC00701                                            0710 08930000
@RF00701 LA    @08,1                                               0710 08931000
         AL    @08,TEXTPTR                                         0710 08932000
         ST    @08,TEXTPTR                                         0710 08933000
*       END;                        /* END OF SCAN LOOP              */ 08934000
@RC00701 DS    0H                                                  0711 08935000
@DE00700 L     @08,TEXTPTR                                         0711 08936000
         CLI   SCAN(@08),C'('                                      0711 08937000
         BNE   @DL00700                                            0711 08938000
*     END;                          /* END OF DELIMITER ERROR      0712 08939000
*                                      PROCESSING                    */ 08940000
*   IF CODE=PKIOERR THEN            /* TEST FOR I/O ERROR            */ 08941000
@RF00692 CLC   CODE(2),@CH00050                                    0713 08942000
         BNE   @RF00713                                            0713 08943000
*     DO;                           /* YES, I/O ERROR                */ 08944000
*NP5PKER5:                          /* PROCESS I/O ERROR             */ 08945000
*                                                                  0715 08946000
*       /*************************************************************/ 08947000
*       /*                                                           */ 08948000
*       /* IEA357I I/O ERROR FOLLOWING MODNAME - LIST TERMINATED     */ 08949000
*       /*                                                           */ 08950000
*       /*************************************************************/ 08951000
*                                                                  0715 08952000
*       IOERMDN=LASTMODN;           /* PUT LAST VALID MODULE NAME  0715 08953000
*                                      INTO TEXT                     */ 08954000
NP5PKER5 MVC   IOERMDN(8),LASTMODN                                 0715 08955000
*       M357FI1=CSEIOERR;           /* PUT CAUSE OF ERROR INTO     0716 08956000
*                                      MESSAGE                       */ 08957000
         MVI   M357FI1+28,C' '                                     0716 08958000
         MVC   M357FI1+29(7),M357FI1+28                            0716 08959000
         MVC   M357FI1(28),CSEIOERR                                0716 08960000
*       M357FI2=LISTTERM;           /* PUT ACTION TO MSG             */ 08961000
*                                                                  0717 08962000
         MVI   M357FI2+15,C' '                                     0717 08963000
         MVC   M357FI2+16(6),M357FI2+15                            0717 08964000
         MVC   M357FI2(15),LISTTERM                                0717 08965000
*       /*************************************************************/ 08966000
*       /*                                                           */ 08967000
*       /* FORCE TERMINATION OF LIST PROCESSING                      */ 08968000
*       /*                                                           */ 08969000
*       /*************************************************************/ 08970000
*                                                                  0718 08971000
*       TEXTPTR=ADDR('FF'X);        /* POINT TO END OF LIST INDICATOR*/ 08972000
         LA    @08,@CB00105                                        0718 08973000
         ST    @08,TEXTPTR                                         0718 08974000
*       ENDOFQUE='1'B;              /* INDICATE END OF CURRENT LOAD     08975000
*                                      MODULE QUEUE                  */ 08976000
*       PKERIOF='0'B;               /* RESET I/O ERROR DURING      0720 08977000
*                                      RECOVERY FLAG                 */ 08978000
         OI    ENDOFQUE,B'00100000'                                0720 08979000
         NI    PKERIOF,B'11111011'                                 0720 08980000
*     END;                          /* END OF I/O ERROR PROCESSING   */ 08981000
*   IF CODE=PKNAMNG THEN            /* TEST FOR NAME NO GOOD         */ 08982000
@RF00713 CLC   CODE(2),@CH00075                                    0722 08983000
         BNE   @RF00722                                            0722 08984000
*     DO;                           /* YES, NAME SYNTACTILLY INVALID */ 08985000
*                                                                  0723 08986000
*       /*************************************************************/ 08987000
*       /*                                                           */ 08988000
*       /* IEA357I NAME FOLLOWING MODNAME IMPROPER - SKIPPING TO NEXT*/ 08989000
*       /* GROUP                                                     */ 08990000
*       /*                                                           */ 08991000
*       /*************************************************************/ 08992000
*                                                                  0724 08993000
*       NMMODNM=LASTMODN;           /* PUT LAST VALID MODULE NAME  0724 08994000
*                                      INTO TEXT                     */ 08995000
         MVC   NMMODNM(8),LASTMODN                                 0724 08996000
*       M357FI1=CSENAMNG;           /* PUT ERROR CAUSE INTO MESSAGE  */ 08997000
         MVI   M357FI1+32,C' '                                     0725 08998000
         MVC   M357FI1+33(3),M357FI1+32                            0725 08999000
         MVC   M357FI1(32),CSENAMNG                                0725 09000000
*       M357FI2=GRPSKIP;            /* PUT ACTION INTO MSG           */ 09001000
         MVC   M357FI2(22),GRPSKIP                                 0726 09002000
*NP5SCANR:                                                         0727 09003000
*       INDEX=0;                    /* INDICATE NO NAME FOUND        */ 09004000
*                                                                  0727 09005000
NP5SCANR SLR   @08,@08                                             0727 09006000
         ST    @08,INDEX                                           0727 09007000
*       /*************************************************************/ 09008000
*       /*                                                           */ 09009000
*       /* SCAN FOR THE LEFT PARENTHESIS AT THE END OF THE GROUP SO  */ 09010000
*       /* PROCESSING CAN RESUME AFTER THE GROUP IN ERROR            */ 09011000
*       /*                                                           */ 09012000
*       /*************************************************************/ 09013000
*                                                                  0728 09014000
*       DO WHILE(SCAN¬=')');        /* SCAN FOR )                    */ 09015000
         B     @DE00728                                            0728 09016000
@DL00728 DS    0H                                                  0729 09017000
*         IF SCAN='FF'X THEN        /* TEST FOR END OF RECORD        */ 09018000
         L     @08,TEXTPTR                                         0729 09019000
         CLI   SCAN(@08),X'FF'                                     0729 09020000
         BNE   @RF00729                                            0729 09021000
*           DO;                     /* YES, END OF RECORD            */ 09022000
*                                                                  0730 09023000
*             /*******************************************************/ 09024000
*             /*                                                     */ 09025000
*             /* READ THE NEXT RECORD OF THE PACKING LIST            */ 09026000
*             /*                                                     */ 09027000
*             /*******************************************************/ 09028000
*                                                                  0731 09029000
*             GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)       0731 09030000
*                 (IEAPMNIP TYPE=REAL);/* SWITCH TCB TO V=R          */ 09031000
         IEAPMNIP TYPE=REAL                                             09032000
*             CALL NIPPMTXT;        /* READ A RECORD                 */ 09033000
         BAL   @14,NIPPMTXT                                        0732 09034000
*             BC(15,NP5PKER4);      /* I/O OK                        */ 09035000
         BC    15,NP5PKER4                                         0733 09036000
*             BC(15,NP5PKER2);      /* I/O ERROR                     */ 09037000
         BC    15,NP5PKER2                                         0734 09038000
*NP5PKER4:                                                         0735 09039000
*             GENERATE REFS(NVTVIRT,RNVT) SETS(RENTRY,REXIT)       0735 09040000
*                 (IEAPMNIP TYPE=VIRT);/* SWITCH TCB TO V=V I/O OK -    09041000
*                                      CONTINUE                      */ 09042000
NP5PKER4 IEAPMNIP TYPE=VIRT                                             09043000
*             TEXTPTR=RPARM;        /* POINT TO FIRST BYTE OF RECORD */ 09044000
         ST    RPARM,TEXTPTR                                       0736 09045000
*           END;                    /*                               */ 09046000
*         ELSE                      /* NOT BLANK - MORE DATA ON    0738 09047000
*                                      RECORD                        */ 09048000
*           TEXTPTR=TEXTPTR+1;      /* POINT PAST CHAR               */ 09049000
         B     @RC00729                                            0738 09050000
@RF00729 LA    @08,1                                               0738 09051000
         AL    @08,TEXTPTR                                         0738 09052000
         ST    @08,TEXTPTR                                         0738 09053000
*       END;                        /* END OF SCAN LOOP              */ 09054000
@RC00729 DS    0H                                                  0739 09055000
@DE00728 L     @08,TEXTPTR                                         0739 09056000
         CLI   SCAN(@08),C')'                                      0739 09057000
         BNE   @DL00728                                            0739 09058000
*     END;                          /* END OF INVALID NAME PROCESSING*/ 09059000
*   IF CODE=NAMENG THEN             /* TEST FOR MODULE NAME        0741 09060000
*                                      IMPROPERLY SPECIFIED          */ 09061000
@RF00722 CLC   CODE(2),@CH00061                                    0741 09062000
         BNE   @RF00741                                            0741 09063000
*     DO;                           /* YES, NAME NO GOOD             */ 09064000
*                                                                  0742 09065000
*       /*************************************************************/ 09066000
*       /*                                                           */ 09067000
*       /* IEA357I MODNAME INVALID - MODULE IGNORED                  */ 09068000
*       /*                                                           */ 09069000
*       /*************************************************************/ 09070000
*                                                                  0743 09071000
*       MNINVN=MODULE;              /* PUT MODULE NAME INTO TEXT     */ 09072000
         MVC   MNINVN(8),MODULE                                    0743 09073000
*       M357FI1=CSEMINV;            /* PUT ERROR CAUSE INTO MESSAGE  */ 09074000
         MVI   M357FI1+16,C' '                                     0744 09075000
         MVC   M357FI1+17(19),M357FI1+16                           0744 09076000
         MVC   M357FI1(16),CSEMINV                                 0744 09077000
*       M357FI2=MODIGND;            /* PUT ACTION INTO MSG           */ 09078000
         MVI   M357FI2+14,C' '                                     0745 09079000
         MVC   M357FI2+15(7),M357FI2+14                            0745 09080000
         MVC   M357FI2(14),MODIGND                                 0745 09081000
*     END;                          /* END OF INVALID MODULE NAME  0746 09082000
*                                      PROCESSING                    */ 09083000
*NP5PKER3:                          /* PUT OUT MESSAGE(S)            */ 09084000
*                                                                  0747 09085000
*   /*****************************************************************/ 09086000
*   /*                                                               */ 09087000
*   /* SWITCH TO V=R TCB FOR WTO                                     */ 09088000
*   /*                                                               */ 09089000
*   /*****************************************************************/ 09090000
*                                                                  0747 09091000
*   GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)(IEAPMNIP TYPE=REAL); 09092000
@RF00741 DS    0H                                                  0747 09093000
NP5PKER3 IEAPMNIP TYPE=REAL                                             09094000
*                                   /* SWITCH TO V=R                 */ 09095000
*   IF PKERIND='0'B THEN            /* WAS HEADER MESSAGE PRINTED  0748 09096000
*                                      BEFORE                        */ 09097000
         TM    PKERIND,B'00001000'                                 0748 09098000
         BNZ   @RF00748                                            0748 09099000
*     DO;                           /* NO, PRINT IT OUT              */ 09100000
*       PKERIND='1'B;               /* INDICATE HEADER MESSAGE ISSUED*/ 09101000
*                                                                  0750 09102000
         OI    PKERIND,B'00001000'                                 0750 09103000
*       /*************************************************************/ 09104000
*       /*                                                           */ 09105000
*       /* IEA357I ERRORS IN IEAPAK00 LIST                           */ 09106000
*       /*                                                           */ 09107000
*       /*************************************************************/ 09108000
*                                                                  0751 09109000
*       GENERATE REFS(RNVT,NVTWTO,MSG357I1) SETS(RPARM,REXIT,RENTRY)    09110000
*           (IEAPMNIP TYPE=WTO,PARAM=MSG357I1);/* WTO                */ 09111000
         IEAPMNIP TYPE=WTO,PARAM=MSG357I1                               09112000
*     END;                                                         0752 09113000
*   GENERATE REFS(RNVT,NVTWTO,MSG357I2,M357FI1,M357FI2) SETS(RPARM,     09114000
*       REXIT,RENTRY)(IEAPMNIP TYPE=WTO,PARAM=MSG357I2);/* WTO ERROR    09115000
*                                      MESSAGE                       */ 09116000
*                                                                  0753 09117000
@RF00748 DS    0H                                                  0753 09118000
         IEAPMNIP TYPE=WTO,PARAM=MSG357I2                               09119000
*   /*****************************************************************/ 09120000
*   /*                                                               */ 09121000
*   /* SWITCH TCB BACK TO V=V                                        */ 09122000
*   /*                                                               */ 09123000
*   /*****************************************************************/ 09124000
*                                                                  0754 09125000
*   GENERATE REFS(NVTVIRT,RNVT) SETS(RENTRY,REXIT)(IEAPMNIP TYPE=VIRT); 09126000
         IEAPMNIP TYPE=VIRT                                             09127000
*                                   /* SWITCH TO V=V                 */ 09128000
*   IF PKERIOF='1'B THEN            /* WAS AN I/O ERROR DETECTED   0755 09129000
*                                      DURING ATTEMPTED ERROR      0755 09130000
*                                      RECOVERY                      */ 09131000
         TM    PKERIOF,B'00000100'                                 0755 09132000
         BO    @RT00755                                            0755 09133000
*     GOTO NP5PKER5;                /* YES, PRINT I/O ERROR MESSAGE  */ 09134000
*   RETURN;                         /* RETURN TO CALLER              */ 09135000
@EL00008 DS    0H                                                  0757 09136000
@EF00008 DS    0H                                                  0757 09137000
@ER00008 LM    @14,@12,@SA00008                                    0757 09138000
         BR    @14                                                 0757 09139000
*NP5PKER2:                          /* I/O ERROR DURING ERROR      0758 09140000
*                                      RECOVERY                      */ 09141000
*   PKERIOF='1'B;                   /* INDICATE I/O ERROR            */ 09142000
NP5PKER2 OI    PKERIOF,B'00000100'                                 0758 09143000
*   CODE=PKIOERR;                   /* INDICATE I/O ERROR            */ 09144000
         MVC   CODE(2),@CH00050                                    0759 09145000
*   GOTO NP5PKER3;                  /* PRINT ORIGINAL ERROR AND    0760 09146000
*                                      PROCESS I/O ERROR             */ 09147000
         B     NP5PKER3                                            0760 09148000
*   END NP5PKERR;                   /* END OF SUBROUTINE             */ 09149000
@PB00008 DS    0H                                                  0762 09150000
*   GENERATE NOREFS NOSETS(EJECT);                                 0762 09151000
*                                                                  0762 09152000
         EJECT                                                          09153000
*/********************************************************************/ 09154000
*/*                                                                  */ 09155000
*/*         SUBROUTINE NPA5LIND                                      */ 09156000
*/*                                                                  */ 09157000
*/*         FUNCTION - CONTROLS THE LOADING OF THE LPA MODULES WHICH */ 09158000
*/*            WERE NOT SPECIFIED AS PART OF ORDERED GROUPS          */ 09159000
*/*                                                                  */ 09160000
*/*         INPUT - BLDL INFORMATION TABLE                           */ 09161000
*/*                                                                  */ 09162000
*/*         OUTPUT - THE MODULES ARE LOADED INTO THE LPA             */ 09163000
*/*                                                                  */ 09164000
*/********************************************************************/ 09165000
*                                                                  0763 09166000
*NPA5LIND:                          /* NPA5LIND ENTRY PT             */ 09167000
*   PROCEDURE;                      /* BEGINNING OF SUBR             */ 09168000
         B     @PB00009                                            0763 09169000
NPA5LIND STM   @14,@12,@SA00009                                    0763 09170000
*   DO INDEX2=DIM(NPA5WLST) TO 1 BY-1;/* LOAD MODULES IN MULTIPLE  0764 09171000
*                                      PASSES - ON EACH PASS, ONLY 0764 09172000
*                                      LOAD MODULES LARGER THAN THE     09173000
*                                      GIVEN CRITERION VALUE         */ 09174000
         LA    @08,12                                              0764 09175000
         ST    @08,INDEX2                                          0764 09176000
@DL00764 DS    0H                                                  0765 09177000
*     NPA5CRIT=NPA5WSIZ(INDEX2);    /* ESTABLISH CRITERION FOR THIS     09178000
*                                      LOADING PASS                  */ 09179000
         SLA   @08,3                                               0765 09180000
         L     @08,NPA5WSIZ-8(@08)                                 0765 09181000
         ST    @08,NPA5CRIT                                        0765 09182000
*     DO INFOPTR=INFOSTRT BY LENGTH(INFODATA) WHILE(INFNAME¬=DUMMY);    09183000
         L     @08,INFOSTRT                                        0766 09184000
         ST    @08,INFOPTR                                         0766 09185000
         B     @DE00766                                            0766 09186000
@DL00766 DS    0H                                                  0767 09187000
*                                   /* LOOP THROUGH THE ENTIRE TABLE */ 09188000
*       IF INFIND='0'B&INFALIS='0'B THEN/* TEST FOR BLDL INFO ENTRY     09189000
*                                      FOR A MAJOR NAME              */ 09190000
         L     @08,INFOPTR                                         0767 09191000
         TM    INFIND(@08),B'10000000'                             0767 09192000
         BNZ   @RF00767                                            0767 09193000
         L     @08,INFOPTR                                         0767 09194000
         TM    INFALIS(@08),B'01000000'                            0767 09195000
         BNZ   @RF00767                                            0767 09196000
*         IF INFSTOR>=NPA5CRIT|INFPAGA='1'B THEN/* TEST WHETHER THIS    09197000
*                                      MODULE IS TO BE LOADED IN THIS   09198000
*                                      PASS OR NOT                   */ 09199000
*                                                                  0768 09200000
         L     @08,INFOPTR                                         0768 09201000
         SLR   @00,@00                                             0768 09202000
         ICM   @00,7,INFSTOR(@08)                                  0768 09203000
         C     @00,NPA5CRIT                                        0768 09204000
         BNL   @RT00768                                            0768 09205000
         L     @08,INFOPTR                                         0768 09206000
         TM    INFPAGA(@08),B'01000000'                            0768 09207000
         BNO   @RF00768                                            0768 09208000
@RT00768 DS    0H                                                  0769 09209000
*           /*********************************************************/ 09210000
*           /*                                                       */ 09211000
*           /* LOAD THIS MODULE INTO THE LINK PACK AREA              */ 09212000
*           /*                                                       */ 09213000
*           /*********************************************************/ 09214000
*                                                                  0769 09215000
*           CALL NPA5ILOD;          /* LOAD THE MODULE               */ 09216000
         BAL   @14,NPA5ILOD                                        0769 09217000
*     END;                          /* END OF SCAN LOOP              */ 09218000
@RF00768 DS    0H                                                  0770 09219000
@RF00767 LA    @08,40                                              0770 09220000
         AL    @08,INFOPTR                                         0770 09221000
         ST    @08,INFOPTR                                         0770 09222000
@DE00766 L     @08,INFOPTR                                         0770 09223000
         CLC   INFNAME(8,@08),@CB00041                             0770 09224000
         BNE   @DL00766                                            0770 09225000
*   END;                            /* END OF LOADING PASS - LOOP  0771 09226000
*                                      TILL ALL MODULES LOADED       */ 09227000
         SLR   @08,@08                                             0771 09228000
         BCTR  @08,0                                               0771 09229000
         AL    @08,INDEX2                                          0771 09230000
         ST    @08,INDEX2                                          0771 09231000
         LTR   @08,@08                                             0771 09232000
         BP    @DL00764                                            0771 09233000
*   RETURN;                         /* RETURN TO CALLER              */ 09234000
@EL00009 DS    0H                                                  0772 09235000
@EF00009 DS    0H                                                  0772 09236000
@ER00009 LM    @14,@12,@SA00009                                    0772 09237000
         BR    @14                                                 0772 09238000
*   GENERATE NOREFS NOSETS(EJECT);                                 0773 09239000
*                                                                  0773 09240000
         EJECT                                                          09241000
*/********************************************************************/ 09242000
*/*                                                                  */ 09243000
*/*         SUBROUTINE NPA5ALIS                                      */ 09244000
*/*                                                                  */ 09245000
*/*         FUNCTION - BUILD THE LPDES FOR MODULE ALIASES            */ 09246000
*/*                                                                  */ 09247000
*/*         INPUT - BLDL INFORMATION TABLE                           */ 09248000
*/*                                                                  */ 09249000
*/*         OUTPUT - ALL BLDL INFO TABLE ENTRIES FOR ALIASES ARE     */ 09250000
*/*            REPLACED WITH THEIR LPDES                             */ 09251000
*/*                                                                  */ 09252000
*/********************************************************************/ 09253000
*                                                                  0774 09254000
*NPA5ALIS:                          /* NPA5ALIS ENTRY PT             */ 09255000
*   ENTRY;                          /* BEGINNING OF SUBR             */ 09256000
*                                                                  0774 09257000
         B     @EC00774                                            0774 09258000
NPA5ALIS STM   @14,@12,@SA00009                                    0774 09259000
@EC00774 DS    0H                                                  0775 09260000
*   /*****************************************************************/ 09261000
*   /*                                                               */ 09262000
*   /* LOOP THROUGH THE BLDL INFORMATION TABLE LOOKING FOR ALIAS     */ 09263000
*   /* ENTRIES TO BE PROCESSED                                       */ 09264000
*   /*                                                               */ 09265000
*   /*****************************************************************/ 09266000
*                                                                  0775 09267000
*   DO INFOPTR=INFOSTRT BY LENGTH(INFODATA) WHILE(INFNAME¬=DUMMY);/*    09268000
*                                      SEARCH ENTIRE TABLE FOR ALIAS    09269000
*                                      ENTRIES                       */ 09270000
         L     @08,INFOSTRT                                        0775 09271000
         ST    @08,INFOPTR                                         0775 09272000
         B     @DE00775                                            0775 09273000
@DL00775 DS    0H                                                  0776 09274000
*     IF INFIND='0'B&INFALIS='1'B THEN/* TEST FOR UNPROCESSED ALIAS  */ 09275000
*                                                                  0776 09276000
         L     @08,INFOPTR                                         0776 09277000
         TM    INFIND(@08),B'10000000'                             0776 09278000
         BNZ   @RF00776                                            0776 09279000
         L     @08,INFOPTR                                         0776 09280000
         TM    INFALIS(@08),B'01000000'                            0776 09281000
         BNO   @RF00776                                            0776 09282000
*       /*************************************************************/ 09283000
*       /*                                                           */ 09284000
*       /* BUILD THE LPDE FOR THIS ALIAS NAME                        */ 09285000
*       /*                                                           */ 09286000
*       /*************************************************************/ 09287000
*                                                                  0777 09288000
*       CALL NPA5ALPD;              /* BUILD ALIAS LPDE              */ 09289000
         BAL   @14,NPA5ALPD                                        0777 09290000
*   END;                            /* END OF SCAN LOOP              */ 09291000
@RF00776 LA    @08,40                                              0778 09292000
         AL    @08,INFOPTR                                         0778 09293000
         ST    @08,INFOPTR                                         0778 09294000
@DE00775 L     @08,INFOPTR                                         0778 09295000
         CLC   INFNAME(8,@08),@CB00041                             0778 09296000
         BNE   @DL00775                                            0778 09297000
*   RETURN;                         /* RETURN TO CALLER              */ 09298000
         B     @EL00009                                            0779 09299000
*   GENERATE NOREFS NOSETS(EJECT);                                 0780 09300000
*                                                                  0780 09301000
         EJECT                                                          09302000
*/********************************************************************/ 09303000
*/*                                                                  */ 09304000
*/*         SUBROUTINE NPA5BDIR                                      */ 09305000
*/*                                                                  */ 09306000
*/*         FUNCTION - BUILD THE LINK PACK AREA DIRECTORY            */ 09307000
*/*                                                                  */ 09308000
*/*         INPUT - THE LPDES FOR ALL THE LPA MODULES                */ 09309000
*/*            NVTLVIRT - THE LOWEST LPA ADDRESS USED                */ 09310000
*/*            LPDECT - THE NUMBER OF ENTRIES NEEDED                 */ 09311000
*/*                                                                  */ 09312000
*/*         OUTPUT - THE LPA DIRECTORY IS BUILT                      */ 09313000
*/*            NVTLVIRT IS UPDATED TO THE DIRECTORY START ADDRESS    */ 09314000
*/*            THE DIRECTORY ADDR IS IN THE NVT                      */ 09315000
*/*                                                                  */ 09316000
*/********************************************************************/ 09317000
*                                                                  0781 09318000
*NPA5BDIR:                          /* NPA5BDIR ENTRY PT             */ 09319000
*   ENTRY;                          /* BEGINNING OF SUBR             */ 09320000
         B     @EC00781                                            0781 09321000
NPA5BDIR STM   @14,@12,@SA00009                                    0781 09322000
@EC00781 DS    0H                                                  0782 09323000
*   RESPECIFY                                                      0782 09324000
*    (RLDADDR,                                                     0782 09325000
*     LPDEPTR) RESTRICTED;                                         0782 09326000
*   RLDADDR=(NVTLVIRT-LPDECT*LENGTH(LPDE))&ROUNDPAG;/* CALCULATE THE    09327000
*                                      ADDRESS OF THE LPA DIRECTORY  */ 09328000
         L     RLDADDR,LPDECT                                      0783 09329000
         MH    RLDADDR,@CH02665                                    0783 09330000
         LCR   RLDADDR,RLDADDR                                     0783 09331000
         AL    RLDADDR,NVTLVIRT(,RNVT)                             0783 09332000
         N     RLDADDR,@CF00123                                    0783 09333000
*   IF RLDADDR<NVTVVPG1 THEN        /* CHECK AVAILABLE VIRT STOR     */ 09334000
         C     RLDADDR,NVTVVPG1(,RNVT)                             0784 09335000
         BNL   @RF00784                                            0784 09336000
*     CALL NPA5CERR(STUNAV);        /* INDICATE STORAGE UNAVAL       */ 09337000
         LA    @01,@AL00785                                        0785 09338000
         BAL   @14,NPA5CERR                                        0785 09339000
*   NVTLVIRT=RLDADDR;               /* RESET LOW PTR TO DIRECTORY  0786 09340000
*                                      START ADDRESS.                */ 09341000
@RF00784 ST    RLDADDR,NVTLVIRT(,RNVT)                             0786 09342000
*   NVTLPALO=RLDADDR;               /* PUT INTO NVT          @Z40WPYB*/ 09343000
*                                                                  0787 09344000
         ST    RLDADDR,NVTLPALO(,RNVT)                             0787 09345000
*   /*****************************************************************/ 09346000
*   /*                                                               */ 09347000
*   /* BUILD THE DUMMY ENTRY AT THE END OF THE DIRECTORY             */ 09348000
*   /*                                                               */ 09349000
*   /*****************************************************************/ 09350000
*                                                                  0788 09351000
*   LPDEPTR=RLDADDR+(LPDECT-1)*LENGTH(LPDE);/* CALCULATE ADDRESS OF     09352000
*                                      THE DUMMY ENTRY               */ 09353000
         L     LPDEPTR,LPDECT                                      0788 09354000
         BCTR  LPDEPTR,0                                           0788 09355000
         MH    LPDEPTR,@CH02665                                    0788 09356000
         ALR   LPDEPTR,RLDADDR                                     0788 09357000
*   LPDE=LPDE&&LPDE;                /* CLEAR DUMMY ENTRY             */ 09358000
         XC    LPDE(40,LPDEPTR),LPDE(LPDEPTR)                      0789 09359000
*   LPDENAME=DUMMY;                 /* SET NAME TO FFF...            */ 09360000
*                                                                  0790 09361000
         MVC   LPDENAME(8,LPDEPTR),@CB00041                        0790 09362000
*   /*****************************************************************/ 09363000
*   /*                                                               */ 09364000
*   /* BUILD THE DIRECTORY BY COPYING ONE SYNONYM QUEUE AT A TIME    */ 09365000
*   /* FROM THE BLDL INFORMATION TABLE AREA                          */ 09366000
*   /*                                                               */ 09367000
*   /*****************************************************************/ 09368000
*                                                                  0791 09369000
*   DO SLOTADDR=NA5BLDIR TO BLDIREND BY 4;/* LOOP THROUGH THE BLDL 0791 09370000
*                                      INDEX TABLE                   */ 09371000
         L     @08,NA5BLDIR                                        0791 09372000
         ST    @08,SLOTADDR                                        0791 09373000
         B     @DE00791                                            0791 09374000
@DL00791 DS    0H                                                  0792 09375000
*     IF SLOTADDR->NPA5BPTR>1 THEN  /* TEST FOR SYNONYM QUEUE      0792 09376000
*                                      STARTING HERE                 */ 09377000
*                                                                  0792 09378000
         CLC   NPA5BPTR(4,@08),@CF00264                            0792 09379000
         BNH   @RF00792                                            0792 09380000
*       /*************************************************************/ 09381000
*       /*                                                           */ 09382000
*       /* COPY LPDES FOR THIS SYNONYM QUEUE TO DIRECTORY            */ 09383000
*       /*                                                           */ 09384000
*       /*************************************************************/ 09385000
*                                                                  0793 09386000
*       CALL NPA5RHSH;              /* COPY LPDES                    */ 09387000
         BAL   @14,NPA5RHSH                                        0793 09388000
*   END;                            /* END OF SCAN LOOP              */ 09389000
@RF00792 LA    @08,4                                               0794 09390000
         AL    @08,SLOTADDR                                        0794 09391000
         ST    @08,SLOTADDR                                        0794 09392000
@DE00791 C     @08,BLDIREND                                        0794 09393000
         BNH   @DL00791                                            0794 09394000
*   NVTVVPG1=INFOSTRT;              /* RESTORE NVTVVPG1              */ 09395000
*                                                                  0795 09396000
         MVC   NVTVVPG1(4,RNVT),INFOSTRT                           0795 09397000
*   /*****************************************************************/ 09398000
*   /*                                                               */ 09399000
*   /* MUST PAGE OUT ALL VIRTUAL STORAGE USED TO INSURE ALL REAL PAGE*/ 09400000
*   /* FRAMES ARE PLACED IN THE PAGE DATA SET. THIS WILL PERMIT NIP  */ 09401000
*   /* TO QUICK START THE PLPA ON SUBSEQUENT IPLS.                   */ 09402000
*   /*                                                               */ 09403000
*   /*****************************************************************/ 09404000
*                                                                  0796 09405000
*   RESPECIFY                                                      0796 09406000
*    (PGOUTST,                                                     0796 09407000
*     PGOUTEND,                                                    0796 09408000
*     RENTRY) RESTRICTED;                                          0796 09409000
*   PGOUTST=NVTLVIRT;               /* SETTUP START (LOW) ADDRESS    */ 09410000
         L     PGOUTST,NVTLVIRT(,RNVT)                             0797 09411000
*   PGOUTEND=NVTLPAND;              /* SETTUP END (HIGH)     @Z40WPYB*/ 09412000
         L     PGOUTEND,NVTLPAND(,RNVT)                            0798 09413000
*   GENERATE REFS(PGOUTST,PGOUTEND) SETS(RENTRY)(PGOUT R,A=(1),EA=(15)) 09414000
*       ;                           /* R1=START R15=END              */ 09415000
         PGOUT R,A=(1),EA=(15)                                          09416000
*   IF RENTRY¬=0 THEN               /* WAS THERE A PAGING ERROR      */ 09417000
         LTR   RENTRY,RENTRY                                       0800 09418000
         BZ    @RF00800                                            0800 09419000
*     CALL NPA5CERR(PGOUTERR);      /* YES - LOAD WAIT CODE          */ 09420000
         LA    @01,@AL00801                                        0801 09421000
         BAL   @14,NPA5CERR                                        0801 09422000
*   ELSE                                                           0802 09423000
*     ;                                                            0802 09424000
@RF00800 DS    0H                                                  0803 09425000
*   RESPECIFY                                                      0803 09426000
*    (PGOUTST,                                                     0803 09427000
*     PGOUTEND,                                                    0803 09428000
*     RENTRY) UNRESTRICTED;                                        0803 09429000
*   CALL NP5WTPAG;                  /* WAIT FOR PAGE I/O TO COMPLETE    09430000
*                                                            @Z40WPYB*/ 09431000
         BAL   @14,NP5WTPAG                                        0804 09432000
*   CALL ILRQSRIT;                  /* INITIALIZE THE QSR    @Z40WPYB*/ 09433000
         L     @15,@CV00149                                        0805 09434000
         BALR  @14,@15                                             0805 09435000
*   RETURN;                         /* RETURN TO CALLER              */ 09436000
         B     @EL00009                                            0806 09437000
*   RESPECIFY                                                      0807 09438000
*    (RLDADDR,                                                     0807 09439000
*     LPDEPTR) UNRESTRICTED;                                       0807 09440000
*   END NPA5LIND;                   /* END OF SUBROUTINE             */ 09441000
@PB00009 DS    0H                                                  0809 09442000
*   GENERATE NOREFS NOSETS(EJECT);                                 0809 09443000
*                                                                  0809 09444000
         EJECT                                                          09445000
*/********************************************************************/ 09446000
*/*                                                                  */ 09447000
*/*         SUBROUTINE NPA5RBLK                                      */ 09448000
*/*                                                                  */ 09449000
*/*         FUNCTION - READS A DIRECTORY BLOCK OF SYS1.LPALIB        */ 09450000
*/*                                                                  */ 09451000
*/*         INPUT - NONE                                             */ 09452000
*/*                                                                  */ 09453000
*/*         OUTPUT - THE NEXT DIRECTORY BLOCK IS READ INTO           */ 09454000
*/*            PDSDATA AND ITS KEY IS IN PDSKEY                      */ 09455000
*/*            WHEN THE LAST BLOCK HAS BEEN READ IN, LASTBLOK        */ 09456000
*/*            IS SET TO '1'B                                        */ 09457000
*/*                                                                  */ 09458000
*/********************************************************************/ 09459000
*                                                                  0810 09460000
*NPA5RBLK:                          /* NPA5RBLK ENTRY PT             */ 09461000
*   PROCEDURE OPTIONS(NOSAVE(RLDADDR));/* NOTE - RLDADDR IS PASSED 0810 09462000
*                                      BETWEEN SUBROUTINES CONTAINED    09463000
*                                      IN THIS AND OTHER PROCEDURES  */ 09464000
*                                                                  0810 09465000
         B     @PB00010                                            0810 09466000
NPA5RBLK STM   @14,@03,@SA00010                                    0810 09467000
         STM   @05,@12,@SA00010+24                                 0810 09468000
*   /*****************************************************************/ 09469000
*   /*                                                               */ 09470000
*   /* READ THE NEXT RECORD FROM SYS1.LPALIB                         */ 09471000
*   /*                                                               */ 09472000
*   /*****************************************************************/ 09473000
*                                                                  0811 09474000
*   CALL NPA5EXCP;                  /* READ A RECORD                 */ 09475000
*                                                                  0811 09476000
         BAL   @14,NPA5EXCP                                        0811 09477000
*   /*****************************************************************/ 09478000
*   /*                                                               */ 09479000
*   /* WAIT FOR THE I/O TO COMPLETE                                  */ 09480000
*   /*                                                               */ 09481000
*   /*****************************************************************/ 09482000
*                                                                  0812 09483000
*   CALL NPA5IOND;                  /* WAIT TILL POSTED              */ 09484000
         BAL   @14,NPA5IOND                                        0812 09485000
*   IF IONDRC¬=IONSUC THEN          /* TEST FOR GOOD I/O             */ 09486000
         CLI   IONDRC,X'04'                                        0813 09487000
         BE    @RF00813                                            0813 09488000
*     IF PDSKEY=DUMMY THEN          /* GOOD I/O, TEST FOR LAST     0814 09489000
*                                      DIRECTORY BLOCK               */ 09490000
         CLC   PDSKEY(8),@CB00041                                  0814 09491000
         BNE   @RF00814                                            0814 09492000
*       LASTBLOK='1'B;              /* LAST BLOCK - SET SW           */ 09493000
         OI    LASTBLOK,B'10000000'                                0815 09494000
*     ELSE                                                         0816 09495000
*       ;                           /* NOT LAST BLOCK                */ 09496000
@RF00814 DS    0H                                                  0817 09497000
*   ELSE                            /* I/O ERROR                     */ 09498000
*     DO;                           /* INDICATE ERROR                */ 09499000
         B     @RC00813                                            0817 09500000
@RF00813 DS    0H                                                  0818 09501000
*       NVTCSIOB=ADDR(NIPIOBSN);    /* PUT IOB ADDRESS INTO NVT FOR     09502000
*                                      NP05                          */ 09503000
         LA    @08,NIPIOBSN                                        0818 09504000
         ST    @08,NVTCSIOB(,RNVT)                                 0818 09505000
*       CALL NPA5CERR(IOERR);       /* PROCESS ERROR                 */ 09506000
         LA    @01,@AL00819                                        0819 09507000
         BAL   @14,NPA5CERR                                        0819 09508000
*     END;                                                         0820 09509000
*   RETURN;                         /* RETURN TO CALLER              */ 09510000
@EL00010 DS    0H                                                  0821 09511000
@EF00010 DS    0H                                                  0821 09512000
@ER00010 LM    @14,@03,@SA00010                                    0821 09513000
         LM    @05,@12,@SA00010+24                                 0821 09514000
         BR    @14                                                 0821 09515000
*   GENERATE NOREFS NOSETS(EJECT);                                 0822 09516000
*                                                                  0822 09517000
         EJECT                                                          09518000
*/********************************************************************/ 09519000
*/*                                                                  */ 09520000
*/*         SUBROUTINE NPA5INFO                                      */ 09521000
*/*                                                                  */ 09522000
*/*         FUNCTION - BUILD BLDL INFORMATION TABLE ENTRIES FOR THE  */ 09523000
*/*            MODULES SPECIFIED IN THE DIRECTORY BLOCK JUST READ    */ 09524000
*/*                                                                  */ 09525000
*/*         INPUT - DIRECTORY BLOCK IN PDSDATA AND KEY IN PDSKEY     */ 09526000
*/*            POINTER TO CURRENT INFORMATION TABLE ENTRY (INFOPTR)  */ 09527000
*/*                                                                  */ 09528000
*/*         OUTPUT - INFORMATION TABLE ENTRIES FOR THE MODULES       */ 09529000
*/*            INFOPTR IS SET TO POINT TO THE NEXT AVAILABLE SLOT    */ 09530000
*/*                                                                  */ 09531000
*/********************************************************************/ 09532000
*                                                                  0823 09533000
*NPA5INFO:                          /* NPA5INFO ENTRY PT             */ 09534000
*   ENTRY;                          /* BEGINNING OF SUBR             */ 09535000
         B     @EC00823                                            0823 09536000
NPA5INFO STM   @14,@03,@SA00010                                    0823 09537000
         STM   @05,@12,@SA00010+24                                 0823 09538000
@EC00823 DS    0H                                                  0824 09539000
*   RESPECIFY                                                      0824 09540000
*    (PDS2PTR,                                                     0824 09541000
*     PDSPTRV) RESTRICTED;          /*                               */ 09542000
*   PDS2PTR=ADDR(PDSDATA);          /* POINT TO FIRST DE             */ 09543000
         LA    PDS2PTR,PDSDATA                                     0825 09544000
*   LASTENT='0'B;                   /* INDICATE NOT LAST ENTRY IN  0826 09545000
*                                      BLOCK                         */ 09546000
*                                                                  0826 09547000
         NI    LASTENT,B'10111111'                                 0826 09548000
*   /*****************************************************************/ 09549000
*   /*                                                               */ 09550000
*   /* LOOP THROUGH THE DIRECTORY BLOCK, BUILDING A BLDL INFORMATION */ 09551000
*   /* TABLE ENTRY FOR EACH MODULE                                   */ 09552000
*   /*                                                               */ 09553000
*   /*****************************************************************/ 09554000
*                                                                  0827 09555000
*   DO WHILE(LASTENT='0'B);         /* PROCESS MODULES               */ 09556000
*                                                                  0827 09557000
         B     @DE00827                                            0827 09558000
@DL00827 DS    0H                                                  0828 09559000
*     /***************************************************************/ 09560000
*     /*                                                             */ 09561000
*     /* INSURE VIRTUAL ADDRESS SPACE FOR NEXT ENTRY                 */ 09562000
*     /*                                                             */ 09563000
*     /***************************************************************/ 09564000
*                                                                  0828 09565000
*     IF INFOPTR>NVTLVIRT THEN      /* CHECK FOR AVAIL STORAGE       */ 09566000
         CLC   INFOPTR(4),NVTLVIRT(RNVT)                           0828 09567000
         BNH   @RF00828                                            0828 09568000
*       CALL NPA5CERR(STUNAV);      /* INDICATE STOR UNAVAILABLE     */ 09569000
         LA    @01,@AL00829                                        0829 09570000
         BAL   @14,NPA5CERR                                        0829 09571000
*     ELSE                                                         0830 09572000
*       ;                                                          0830 09573000
@RF00828 DS    0H                                                  0831 09574000
*     INFODATA=INFODATA&&INFODATA;  /* ZERO DIRECTRY ENTRY           */ 09575000
*                                                                  0831 09576000
         L     @06,INFOPTR                                         0831 09577000
         XC    INFODATA(40,@06),INFODATA(@06)                      0831 09578000
*     /***************************************************************/ 09579000
*     /*                                                             */ 09580000
*     /* SET UP BLDL INFORMATION TABLE ENTRY                         */ 09581000
*     /*                                                             */ 09582000
*     /***************************************************************/ 09583000
*                                                                  0832 09584000
*     INFNAME=PDS2NAME;             /* MODULE NAME                   */ 09585000
         L     @06,INFOPTR                                         0832 09586000
         MVC   INFNAME(8,@06),PDS2NAME(PDS2PTR)                    0832 09587000
*     IF PDS2NAME=PDSKEY THEN       /* TEST FOR LAST ENTRY IN THIS 0833 09588000
*                                      DIRECTORY BLOCK               */ 09589000
         CLC   PDS2NAME(8,PDS2PTR),PDSKEY                          0833 09590000
         BNE   @RF00833                                            0833 09591000
*       LASTENT='1'B;               /* IF SO, SET SWITCH             */ 09592000
         OI    LASTENT,B'01000000'                                 0834 09593000
*     IF PDS2NAME¬=DUMMY THEN       /* TEST FOR LAST ENTRY           */ 09594000
@RF00833 CLC   PDS2NAME(8,PDS2PTR),@CB00041                        0835 09595000
         BE    @RF00835                                            0835 09596000
*       DO;                         /* PROCESS NEXT ENTRY            */ 09597000
*         INFTTRP=PDS2TTRP;         /* TTR OF FIRST BLOCK            */ 09598000
         L     @06,INFOPTR                                         0837 09599000
         MVC   INFTTRP(3,@06),PDS2TTRP(PDS2PTR)                    0837 09600000
*         PDS2PTR=PDS2PTR-2;        /* ADJUST POINTER TO ACCOUNT FOR    09601000
*                                      THE DIFFERENCE IN SIZE BETWEEN   09602000
*                                      THE ACTUAL DATA (PDS1 FORMAT)    09603000
*                                      AND THE DSECT (PDS2 FORMAT)   */ 09604000
         BCTR  PDS2PTR,0                                           0838 09605000
         BCTR  PDS2PTR,0                                           0838 09606000
*         INFEPA=PDS2EPA;           /* ENTRY POINT ADDRESS           */ 09607000
         L     @06,INFOPTR                                         0839 09608000
         MVC   INFEPA(3,@06),PDS2EPA(PDS2PTR)                      0839 09609000
*         IF PDSAOSLE='0'B          /* OS LINKAGE EDITOR             */ 09610000
*             &PDS2ALIS='1'B        /* ALIAS                         */ 09611000
*             &PDS2RENT='0'B        /* NOT REENTRANT                 */ 09612000
*             &PDS2REUS='0'B THEN   /* NOT REUSABLE - THIS IS A DUMMY   09613000
*                                      ALIAS ENTRY FOR WHICH THERE IS   09614000
*                                      NO ALIAS SECTION IN THE PDS   */ 09615000
         TM    PDSAOSLE(PDS2PTR),B'10000000'                       0840 09616000
         BNZ   @RF00840                                            0840 09617000
         TM    PDS2ALIS(PDS2PTR),B'10000000'                       0840 09618000
         BNO   @RF00840                                            0840 09619000
         TM    PDS2RENT(PDS2PTR),B'11000000'                       0840 09620000
         BNZ   @RF00840                                            0840 09621000
*           PDS2ALIS='0'B;          /* RESET ALIAS FLAG              */ 09622000
         NI    PDS2ALIS(PDS2PTR),B'01111111'                       0841 09623000
*         IF PDS2ALIS='1'B THEN     /* TEST FOR ALIAS                */ 09624000
@RF00840 TM    PDS2ALIS(PDS2PTR),B'10000000'                       0842 09625000
         BNO   @RF00842                                            0842 09626000
*           DO;                     /* BUILD ALIAS INFO              */ 09627000
*             INFALIS='1'B;         /* SET ALIAS FLAG                */ 09628000
         L     @06,INFOPTR                                         0844 09629000
         OI    INFALIS(@06),B'01000000'                            0844 09630000
*             PDSPTRV=ADDR(PDSBCEND);/* POINT PAST BASIC SECTION     */ 09631000
         LA    PDSPTRV,PDSBCEND(,PDS2PTR)                          0845 09632000
*             IF PDS2SCTR='1'B THEN /* SCTR DATA IN PDS              */ 09633000
         TM    PDS2SCTR(PDS2PTR),B'00000100'                       0846 09634000
         BNO   @RF00846                                            0846 09635000
*               PDSPTRV=PDSPTRV+LENGTH(PDSS01);/* YES, BYPASS SCTR 0847 09636000
*                                      DATA AND POINT TO ALIAS DATA  */ 09637000
         LA    PDSPTRV,8(,PDSPTRV)                                 0847 09638000
*             INFMNM=PDS2MNM;       /* MAJOR NAME                    */ 09639000
@RF00846 L     @06,INFOPTR                                         0848 09640000
         MVC   INFMNM(8,@06),PDS2MNM(PDSPTRV)                      0848 09641000
*           END;                                                   0849 09642000
*         ELSE                      /* NOT ALIAS ENTRY               */ 09643000
*           DO;                     /* BUILD MAJOR ENTRY             */ 09644000
         B     @RC00842                                            0850 09645000
@RF00842 DS    0H                                                  0851 09646000
*             IF PDS2LOAD='1'B THEN /* TEST LOAD FLAG                */ 09647000
         TM    PDS2LOAD(PDS2PTR),B'00001000'                       0851 09648000
         BNO   @RF00851                                            0851 09649000
*               INFLOAD='1'B;       /* LOADABLE ONLY                 */ 09650000
         L     @06,INFOPTR                                         0852 09651000
         OI    INFLOAD(@06),B'00100000'                            0852 09652000
*             IF PDS2EXEC='1'B THEN /* TEST EXEC FLAG                */ 09653000
@RF00851 TM    PDS2EXEC(PDS2PTR),B'00000010'                       0853 09654000
         BNO   @RF00853                                            0853 09655000
*               INFEXEC='1'B;       /* EXECUTABLE                    */ 09656000
         L     @06,INFOPTR                                         0854 09657000
         OI    INFEXEC(@06),B'00010000'                            0854 09658000
*             IF PDS21BLK='1'B THEN /* TEST 1BLK FLAG                */ 09659000
@RF00853 TM    PDS21BLK(PDS2PTR),B'00000001'                       0855 09660000
         BNO   @RF00855                                            0855 09661000
*               INF1BLK='1'B;       /* ONLY 1 TXT RECORD             */ 09662000
         L     @06,INFOPTR                                         0856 09663000
         OI    INF1BLK(@06),B'00001000'                            0856 09664000
*             IF PDS2NRLD='1'B THEN /* TEST NRLD FLAG                */ 09665000
@RF00855 TM    PDS2NRLD(PDS2PTR),B'00010000'                       0857 09666000
         BNO   @RF00857                                            0857 09667000
*               INFNRLD='1'B;       /* NO RLD ITEMS                  */ 09668000
         L     @06,INFOPTR                                         0858 09669000
         OI    INFNRLD(@06),B'00000100'                            0858 09670000
*             IF PDS2REFR='1'B THEN /* TEST REFR FLAG                */ 09671000
@RF00857 TM    PDS2REFR(PDS2PTR),B'00000001'                       0859 09672000
         BNO   @RF00859                                            0859 09673000
*               INFREFR='1'B;       /* REFRESHABLE                   */ 09674000
         L     @06,INFOPTR                                         0860 09675000
         OI    INFREFR(@06),B'00000010'                            0860 09676000
*             IF PDS2ORG0='1'B THEN /* TEST ORG0 FLAG                */ 09677000
@RF00859 TM    PDS2ORG0(PDS2PTR),B'01000000'                       0861 09678000
         BNO   @RF00861                                            0861 09679000
*               INFORG0='1'B;       /* ZERO ORIGIN TXT BLK           */ 09680000
         L     @06,INFOPTR                                         0862 09681000
         OI    INFORG0(@06),B'00010000'                            0862 09682000
*             INFTTRT=PDS2TTRT;     /* TTR OF 1ST TEXT BLK           */ 09683000
@RF00861 L     @06,INFOPTR                                         0863 09684000
         MVC   INFTTRT(3,@06),PDS2TTRT(PDS2PTR)                    0863 09685000
*             INFFTBL=PDS2FTBL;     /* FIRST TXT BLK LEN             */ 09686000
         L     @06,INFOPTR                                         0864 09687000
         MVC   INFFTBL(2,@06),PDS2FTBL(PDS2PTR)                    0864 09688000
*             INFSTOR=PDS2STOR;     /* MODULE SIZE                   */ 09689000
         L     @06,INFOPTR                                         0865 09690000
         MVC   INFSTOR(3,@06),PDS2STOR(PDS2PTR)                    0865 09691000
*             IF PDSAOSLE='1'B THEN /* AOS LINK EDIT                 */ 09692000
         TM    PDSAOSLE(PDS2PTR),B'10000000'                       0866 09693000
         BNO   @RF00866                                            0866 09694000
*               DO;                 /* YES, SPECIAL PROC             */ 09695000
*                 INFAOSLE='1'B;    /* AOS LINKAGE EDIT              */ 09696000
         L     @06,INFOPTR                                         0868 09697000
         OI    INFAOSLE(@06),B'00000001'                           0868 09698000
*                 IF PDS2PAGA='1'B THEN/* TEST PAGA FLG              */ 09699000
         TM    PDS2PAGA(PDS2PTR),B'00100000'                       0869 09700000
         BNO   @RF00869                                            0869 09701000
*                   INFPAGA='1'B;   /* PAGE ALIGNED MODULE           */ 09702000
         L     @06,INFOPTR                                         0870 09703000
         OI    INFPAGA(@06),B'01000000'                            0870 09704000
*                 IF PDSAPFLG='1'B THEN/* TEST APFLG                 */ 09705000
@RF00869 TM    PDSAPFLG(PDS2PTR),B'00001000'                       0871 09706000
         BNO   @RF00871                                            0871 09707000
*                   DO;             /* APF INFO EXISTS               */ 09708000
*                     INFAPFLG='1'B;/* APF IS VALID                  */ 09709000
         L     @06,INFOPTR                                         0873 09710000
         OI    INFAPFLG(@06),B'00100000'                           0873 09711000
*                     PDSPTRV=ADDR(PDSBCEND);/* POINT PAST BASIC   0874 09712000
*                                      SECTION                       */ 09713000
         LA    PDSPTRV,PDSBCEND(,PDS2PTR)                          0874 09714000
*                     IF PDS2SCTR='1'B THEN/* SCATTER?               */ 09715000
         TM    PDS2SCTR(PDS2PTR),B'00000100'                       0875 09716000
         BNO   @RF00875                                            0875 09717000
*                       PDSPTRV=PDSPTRV+LENGTH(PDSS01);/* YES, POINT    09718000
*                                      PAST SCATTER SECTION          */ 09719000
         LA    PDSPTRV,8(,PDSPTRV)                                 0876 09720000
*                     IF PDS2SSI='1'B THEN/* SSI?                    */ 09721000
@RF00875 TM    PDS2SSI(PDS2PTR),B'00010000'                        0877 09722000
         BNO   @RF00877                                            0877 09723000
*                       PDSPTRV=PDSPTRV+LENGTH(PDSS03)+1;/* YES,   0878 09724000
*                                      POINT PAST SSI SECTION - NOTE    09725000
*                                      - THE ADDRESS MUST BE ROUNDED    09726000
*                                      UP BY 1 BYTE BECAUSE THE SSI     09727000
*                                      SECTION STARTS ON A HALFWORD     09728000
*                                      BOUNDARY AND THERE IS NO ALIAS   09729000
*                                      SECTION                       */ 09730000
         LA    PDSPTRV,5(,PDSPTRV)                                 0878 09731000
*                     INFAPF=PDSAPF;/* APF DATA                      */ 09732000
@RF00877 L     @06,INFOPTR                                         0879 09733000
         MVC   INFAPF(2,@06),PDSAPF(PDSPTRV)                       0879 09734000
*                   END;                                           0880 09735000
*               END;                                               0881 09736000
@RF00871 DS    0H                                                  0882 09737000
*           END;                                                   0882 09738000
@RF00866 DS    0H                                                  0883 09739000
*         IF PDS2EXEC='0'B THEN     /* IS MOD NON-EXEC?      @ZD04022*/ 09740000
@RC00842 TM    PDS2EXEC(PDS2PTR),B'00000010'                       0883 09741000
         BNZ   @RF00883                                            0883 09742000
*           DO;                     /*                       @ZD04022*/ 09743000
*             GEN REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)            0885 09744000
*                 (IEAPMNIP TYPE=REAL);/* SWITCH TO V=R      @ZA14202*/ 09745000
         IEAPMNIP TYPE=REAL                                             09746000
*             MSGNXMD=INFNAME;      /* SEND MSG IEA358 I IF YES    0886 09747000
*                                                            @ZD04022*/ 09748000
         L     @06,INFOPTR                                         0886 09749000
         MVC   MSGNXMD(8),INFNAME(@06)                             0886 09750000
*             GEN REFS(RNVT,NVTWTO,MSGNXS) SETS(RPARM,REXIT,RENTRY)     09751000
*                 (IEAPMNIP TYPE=WTO,PARAM=MSGNXS);/*        @ZD04022*/ 09752000
         IEAPMNIP TYPE=WTO,PARAM=MSGNXS                                 09753000
*             GEN REFS(NVTVIRT,RNVT) SETS(RENTRY,REXIT)            0888 09754000
*                 (IEAPMNIP TYPE=VIRT);/* SWITCH TO V=V      @ZA14202*/ 09755000
         IEAPMNIP TYPE=VIRT                                             09756000
*             NP5NONEX='1'B;        /* SET NON-EXECUTABLE MODULE   0889 09757000
*                                      FOUND FLAG            @ZD04022*/ 09758000
         OI    NP5NONEX,B'00010000'                                0889 09759000
*           END;                    /*                       @ZD04022*/ 09760000
*         LPDECT=LPDECT+1;          /* STEP MODULE COUNT             */ 09761000
@RF00883 LA    @06,1                                               0891 09762000
         AL    @06,LPDECT                                          0891 09763000
         ST    @06,LPDECT                                          0891 09764000
*         PDS2PTR=PDS2PTR+14+(PDS2INDC&'1F'X)*2;/* POINT TO NEXT PDS    09765000
*                                      ENTRY                         */ 09766000
         LA    @06,14                                              0892 09767000
         ALR   @06,PDS2PTR                                         0892 09768000
         LA    @00,31                                              0892 09769000
         SLR   @04,@04                                             0892 09770000
         IC    @04,PDS2INDC(,PDS2PTR)                              0892 09771000
         NR    @00,@04                                             0892 09772000
         ALR   @00,@00                                             0892 09773000
         ALR   @06,@00                                             0892 09774000
         LR    PDS2PTR,@06                                         0892 09775000
*         INFOPTR=INFOPTR+LENGTH(INFODATA);/* POINT TO NEXT INFO   0893 09776000
*                                      TABLE ENTRY                   */ 09777000
         LA    @06,40                                              0893 09778000
         AL    @06,INFOPTR                                         0893 09779000
         ST    @06,INFOPTR                                         0893 09780000
*       END;                        /* IF DUMMY - SKIP ABOVE         */ 09781000
*   END;                            /* END OF DIRECTORY SCAN LOOP    */ 09782000
@RF00835 DS    0H                                                  0895 09783000
@DE00827 TM    LASTENT,B'01000000'                                 0895 09784000
         BZ    @DL00827                                            0895 09785000
*   RETURN;                         /* RETURN TO CALLER              */ 09786000
         B     @EL00010                                            0896 09787000
*   RESPECIFY                                                      0897 09788000
*    (PDS2PTR,                                                     0897 09789000
*     PDSPTRV) UNRESTRICTED;                                       0897 09790000
*   GENERATE NOREFS NOSETS(EJECT);                                 0898 09791000
*                                                                  0898 09792000
         EJECT                                                          09793000
*/********************************************************************/ 09794000
*/*                                                                  */ 09795000
*/*         SUBROUTINE NPA5HSHA                                      */ 09796000
*/*                                                                  */ 09797000
*/*         FUNCTION - CALCULATES THE PROPER HASH TABLE INDEX AND    */ 09798000
*/*            BUILDS THE HASHING ALGORITHM POINTERS IN THE BLDL     */ 09799000
*/*            INFORMATION TABLE ENTRIES                             */ 09800000
*/*                                                                  */ 09801000
*/*         INPUT - NUMBER OF MODULES IN DIRECTORY (LPDECT),PTR TO   */ 09802000
*/*                 LAST BLDL INFO TABLE ENTRY, I.E., DUMMY(INFOPTR) */ 09803000
*/*                                                                  */ 09804000
*/*         OUTPUT - HASH TABLE INDEX (NPA5HASH,NVTLPAHA)            */ 09805000
*/*            NVTVVPG1 POINTS TO THE SEGMENT ABOVE THE END OF       */ 09806000
*/*            THE BLDL INFORMATION TABLE                            */ 09807000
*/*                                                                  */ 09808000
*/********************************************************************/ 09809000
*                                                                  0899 09810000
*NPA5HSHA:                          /* NPA5HSHA ENTRY PT             */ 09811000
*   ENTRY;                          /* BEGINNING OF SUBR             */ 09812000
         B     @EC00899                                            0899 09813000
NPA5HSHA STM   @14,@03,@SA00010                                    0899 09814000
         STM   @05,@12,@SA00010+24                                 0899 09815000
@EC00899 DS    0H                                                  0900 09816000
*   RESPECIFY                                                      0900 09817000
*    (RLDADDR,                                                     0900 09818000
*     BLDLTSZ1,                                                    0900 09819000
*     BLDLTSZ2,                                                    0900 09820000
*     RBLDL) RESTRICTED;            /*                               */ 09821000
*   INFNAME=DUMMY;                  /* SET UP DUMMY ENTRY            */ 09822000
         L     @08,INFOPTR                                         0901 09823000
         MVC   INFNAME(8,@08),@CB00041                             0901 09824000
*   LPDECT=LPDECT+1;                /* STEP MODULE COUNT             */ 09825000
         LA    @08,1                                               0902 09826000
         L     @00,LPDECT                                          0902 09827000
         ALR   @00,@08                                             0902 09828000
         ST    @00,LPDECT                                          0902 09829000
*   NPA5HASH=NIPDIRHT(MIN(LPDECT/100+1,DIM(NIPDIRHT)));/* PICK UP  0903 09830000
*                                      PROPER HASH INDEX FROM THE  0903 09831000
*                                      HASH INDEX TABLE (NIPDIRHT)   */ 09832000
         LR    @14,@00                                             0903 09833000
         SRDA  @14,32                                              0903 09834000
         D     @14,@CF03665                                        0903 09835000
         ALR   @15,@08                                             0903 09836000
         LA    @08,31                                              0903 09837000
         CR    @15,@08                                             0903 09838000
         BNH   *+6                                                      09839000
         LR    @15,@08                                             0903 09840000
         SLA   @15,2                                               0903 09841000
         L     @08,NIPDIRHT-4(@15)                                 0903 09842000
         ST    @08,NPA5HASH                                        0903 09843000
*   NVTLPAHA=NPA5HASH;              /* PUT HASH VALUE INTO NVT     0904 09844000
*                                                            @Z40WPYB*/ 09845000
         ST    @08,NVTLPAHA(,RNVT)                                 0904 09846000
*   NA5BLDIR=INFOPTR+LENGTH(INFODATA);/* POINT TO BEGINNING OF INDEX    09847000
*                                      TABLE                         */ 09848000
         LA    @08,40                                              0905 09849000
         AL    @08,INFOPTR                                         0905 09850000
         ST    @08,NA5BLDIR                                        0905 09851000
*   BLDIREND=NA5BLDIR+(LPDECT-1)*4; /* CALCULATE ADDRESS OF END OF 0906 09852000
*                                      TABLE                         */ 09853000
         BCTR  @00,0                                               0906 09854000
         SLA   @00,2                                               0906 09855000
         ALR   @08,@00                                             0906 09856000
         ST    @08,BLDIREND                                        0906 09857000
*   NPA5NWST=BLDIREND+4;            /* SET UP BASE FOR WASTED AREA 0907 09858000
*                                      CONTROL BLOCK SPACE           */ 09859000
         AH    @08,@CH00058                                        0907 09860000
         ST    @08,NPA5NWST                                        0907 09861000
*   NPA5LWST=(NPA5NWST+WASTTBLS+PAGEM1)&ROUNDPAG;/* CALC ADDRESS OF     09862000
*                                      END OF WASTED AREA CONTROL  0908 09863000
*                                      BLOCK SPACE                   */ 09864000
         AH    @08,@CH04111                                        0908 09865000
         N     @08,@CF00123                                        0908 09866000
         ST    @08,NPA5LWST                                        0908 09867000
*   IF NPA5LWST>NVTLVIRT THEN       /* CHECK FOR AVAIL STORAGE       */ 09868000
         C     @08,NVTLVIRT(,RNVT)                                 0909 09869000
         BNH   @RF00909                                            0909 09870000
*     CALL NPA5CERR(STUNAV);        /* INDICATE STORAGE UNAVAIL      */ 09871000
         LA    @01,@AL00910                                        0910 09872000
         BAL   @14,NPA5CERR                                        0910 09873000
*   ELSE                                                           0911 09874000
*     ;                             /* STORAGE AVAILABLE             */ 09875000
@RF00909 DS    0H                                                  0912 09876000
*   RLDADDR=NA5BLDIR;               /* SET UP LOW ADDRESS            */ 09877000
*                                                                  0912 09878000
         L     @08,NA5BLDIR                                        0912 09879000
         LR    RLDADDR,@08                                         0912 09880000
*   /*****************************************************************/ 09881000
*   /*                                                               */ 09882000
*   /* CLEAR THE AREA FOR THE BLDL INDEX TABLE TO ZEROS              */ 09883000
*   /*                                                               */ 09884000
*   /*****************************************************************/ 09885000
*                                                                  0913 09886000
*   BLDLTSZ1=BLDIREND-NA5BLDIR+4;   /* CALCULATE LENGTH OF BLDL INFO    09887000
*                                      INDEX TABLE                   */ 09888000
         LCR   @08,@08                                             0913 09889000
         AL    @08,BLDIREND                                        0913 09890000
         LA    @08,4(,@08)                                         0913 09891000
         LR    BLDLTSZ1,@08                                        0913 09892000
*   RBLDL=ADDR(ZEROQSR);            /* POINT TO ZEROS                */ 09893000
         LA    RBLDL,ZEROQSR                                       0914 09894000
*   BLDLTSZ2=0;                     /* LENGTH OF SOURCE FIELD - THIS    09895000
*                                      FORCES PADDING OF ZEROS TO  0915 09896000
*                                      CLEAR AREA                    */ 09897000
         SLR   BLDLTSZ2,BLDLTSZ2                                   0915 09898000
*   GENERATE REFS(RLDADDR,BLDLTSZ1,RBLDL,BLDLTSZ2) SETS(RLDADDR,   0916 09899000
*       BLDLTSZ1,RBLDL,BLDLTSZ2)(MVCL  RLDADDR,RBLDL);/* CLEAR THE 0916 09900000
*                                      SPACE                         */ 09901000
         MVCL  RLDADDR,RBLDL                                            09902000
*   RESPECIFY                                                      0917 09903000
*    (RLDADDR,                                                     0917 09904000
*     BLDLTSZ1,                                                    0917 09905000
*     BLDLTSZ2,                                                    0917 09906000
*     RBLDL) UNRESTRICTED;                                         0917 09907000
*   BLDIREND->NPA5BPTR=1;           /* MARK DUMMY ENTRY INDEX TAB  0918 09908000
*                                      ENTRY AS 'MOVED TO DIREC'     */ 09909000
*                                                                  0918 09910000
         L     @08,BLDIREND                                        0918 09911000
         MVC   NPA5BPTR(4,@08),@CF00264                            0918 09912000
*   /*****************************************************************/ 09913000
*   /*                                                               */ 09914000
*   /* LOOP THROUGH ALL BLDL INFORMATION TABLE ENTRIES, PUTTING THE  */ 09915000
*   /* PROPER CHAIN POINTERS INTO THE SYNONYM CHAIN FIELDS NOTE -    */ 09916000
*   /* RPARM0 WILL BE RESTRICTED BEFORE FOLLOWING LOOP DUE TO BUG IN */ 09917000
*   /* PLS, AND UNRESTRICTED THEREAFTER                              */ 09918000
*   /*                                                               */ 09919000
*   /*****************************************************************/ 09920000
*                                                                  0919 09921000
*   RESPECIFY                                                      0919 09922000
*    (RPARM0) RESTRICTED;                                          0919 09923000
*   DO INFOPTR=NVTVVPG1 BY LENGTH(INFODATA) WHILE(INFNAME¬=DUMMY);/*    09924000
*                                      LOOP THRU TABLE               */ 09925000
         L     @08,NVTVVPG1(,RNVT)                                 0920 09926000
         ST    @08,INFOPTR                                         0920 09927000
         B     @DE00920                                            0920 09928000
@DL00920 DS    0H                                                  0921 09929000
*     MODULE=INFNAME;               /* PICK UP MODULE NAME           */ 09930000
*                                                                  0921 09931000
         L     @08,INFOPTR                                         0921 09932000
         MVC   MODULE(8),INFNAME(@08)                              0921 09933000
*     /***************************************************************/ 09934000
*     /*                                                             */ 09935000
*     /* FIND INDEX TABLE ENTRY FOR THIS MODULE NAME                 */ 09936000
*     /*                                                             */ 09937000
*     /***************************************************************/ 09938000
*                                                                  0922 09939000
*     CALL NPA5FSLT;                /* FIND SLOT                     */ 09940000
         BAL   @14,NPA5FSLT                                        0922 09941000
*     INFSYNM=SLOTADDR->NPA5BPTR;   /* COPY Q PTR                    */ 09942000
         L     @08,INFOPTR                                         0923 09943000
         L     @15,SLOTADDR                                        0923 09944000
         MVC   INFSYNM(3,@08),NPA5BPTR+1(@15)                      0923 09945000
*     SLOTADDR->NPA5BPTR=INFOPTR;   /* ADD TO TOP OF Q               */ 09946000
         L     @08,SLOTADDR                                        0924 09947000
         MVC   NPA5BPTR(4,@08),INFOPTR                             0924 09948000
*   END;                            /* END OF TABLE SCAN             */ 09949000
         LA    @08,40                                              0925 09950000
         AL    @08,INFOPTR                                         0925 09951000
         ST    @08,INFOPTR                                         0925 09952000
@DE00920 L     @08,INFOPTR                                         0925 09953000
         CLC   INFNAME(8,@08),@CB00041                             0925 09954000
         BNE   @DL00920                                            0925 09955000
*   RESPECIFY                                                      0926 09956000
*    (RPARM0) UNRESTRICTED;         /* RESTORE STATUS OF R0          */ 09957000
*   NVTVVPG1=(NPA5LWST+SEGMNTM1)&ROUNDSEG;/* STEP NVTVVPG1 PAST END     09958000
*                                      OF BLDL INFO TABLE AND ROUND     09959000
*                                      TO THE NEXT SEGMENT BOUNDARY  */ 09960000
         L     @08,@CF00048                                        0927 09961000
         AL    @08,NPA5LWST                                        0927 09962000
         N     @08,@CF00125                                        0927 09963000
         ST    @08,NVTVVPG1(,RNVT)                                 0927 09964000
*   RETURN;                         /* RETURN TO CALLER              */ 09965000
         B     @EL00010                                            0928 09966000
*   GENERATE NOREFS NOSETS(EJECT);                                 0929 09967000
*                                                                  0929 09968000
         EJECT                                                          09969000
*/********************************************************************/ 09970000
*/*                                                                  */ 09971000
*/*         SUBROUTINE NPA5VCHK                                      */ 09972000
*/*                                                                  */ 09973000
*/*         FUNCTION - VALIDITY CHECK ALL ALIAS ENTRIES AND REPORT   */ 09974000
*/*            ALL ENTRIES WHOSE MAJOR NAMES DO NOT EXIST IN THE     */ 09975000
*/*            BLDL TABLE AS MAJOR ENTRIES                           */ 09976000
*/*                                                                  */ 09977000
*/*         INPUT - BLDL INFORMATION TABLE                           */ 09978000
*/*                                                                  */ 09979000
*/*         OUTPUT - INVALID ENTRIES ARE REMOVED FROM THE SYNONYM    */ 09980000
*/*            QUEUES AND ARE MARKED AS ALREADY LOADED               */ 09981000
*/*                                                                  */ 09982000
*/********************************************************************/ 09983000
*                                                                  0930 09984000
*NPA5VCHK:                          /* NPA5VCHK ENTRY PT             */ 09985000
*   ENTRY;                          /* BEGINNING OF SUBR             */ 09986000
         B     @EC00930                                            0930 09987000
NPA5VCHK STM   @14,@03,@SA00010                                    0930 09988000
         STM   @05,@12,@SA00010+24                                 0930 09989000
@EC00930 DS    0H                                                  0931 09990000
*   RESPECIFY                                                      0931 09991000
*    (LPDEPTR) RESTRICTED;          /*                               */ 09992000
*   DO INFOPTR=INFOSTRT BY LENGTH(INFODATA) WHILE(INFNAME¬=DUMMY);/*    09993000
*                                      SCAN ENTIRE TABLE             */ 09994000
         L     @08,INFOSTRT                                        0932 09995000
         ST    @08,INFOPTR                                         0932 09996000
         B     @DE00932                                            0932 09997000
@DL00932 DS    0H                                                  0933 09998000
*     IF INFALIS='1'B THEN          /* LOOK FOR ALIAS ENTRIES        */ 09999000
         L     @08,INFOPTR                                         0933 10000000
         TM    INFALIS(@08),B'01000000'                            0933 10001000
         BNO   @RF00933                                            0933 10002000
*       DO;                         /* ALIAS ENTRY - TEST IT FOR   0934 10003000
*                                      VALIDITY                      */ 10004000
*         MODULE=INFMNM;            /* PICK UP MAJOR NAME            */ 10005000
*                                                                  0935 10006000
         L     @08,INFOPTR                                         0935 10007000
         MVC   MODULE(8),INFMNM(@08)                               0935 10008000
*         /***********************************************************/ 10009000
*         /*                                                         */ 10010000
*         /* FIND START OF SYNONYM QUEUE FOR THIS NAME               */ 10011000
*         /*                                                         */ 10012000
*         /***********************************************************/ 10013000
*                                                                  0936 10014000
*         CALL NPA5FSLT;            /* FIND QUEUE HEADER             */ 10015000
         BAL   @14,NPA5FSLT                                        0936 10016000
*         LPDEPTR=SLOTADDR->NPA5BPTR;/* PICK UP ADDRESS OF FIRST   0937 10017000
*                                      ENTRY IN Q                    */ 10018000
         L     @08,SLOTADDR                                        0937 10019000
         L     LPDEPTR,NPA5BPTR(,@08)                              0937 10020000
*         DO WHILE(LPDEPTR¬=0&LPDEPTR->INFNAME¬=MODULE);/* SEARCH THE   10021000
*                                      QUEUE FOR THE MODULE          */ 10022000
         B     @DE00938                                            0938 10023000
@DL00938 DS    0H                                                  0939 10024000
*           LPDEPTR=LPDEPTR->INFSYNM;/* PICK UP ADDRESS OF NEXT ENTRY   10025000
*                                      IN QUEUE                      */ 10026000
         SLR   @08,@08                                             0939 10027000
         ICM   @08,7,INFSYNM(LPDEPTR)                              0939 10028000
         LR    LPDEPTR,@08                                         0939 10029000
*         END;                      /* END OF SEARCH LOOP            */ 10030000
@DE00938 LTR   LPDEPTR,LPDEPTR                                     0940 10031000
         BZ    @DC00938                                            0940 10032000
         CLC   INFNAME(8,LPDEPTR),MODULE                           0940 10033000
         BNE   @DL00938                                            0940 10034000
@DC00938 DS    0H                                                  0941 10035000
*         IF LPDEPTR=0 THEN         /* WAS MODULE FOUND              */ 10036000
         LTR   LPDEPTR,LPDEPTR                                     0941 10037000
         BNZ   @RF00941                                            0941 10038000
*           DO;                     /* NO, ALIAS ENTRY IS INVALID    */ 10039000
*             M301FI1=MODULE;       /* PUT MODULE NAME INTO MESSAGE     10040000
*                                      IEA301I                       */ 10041000
         MVC   M301FI1(8),MODULE                                   0943 10042000
*             M356FI1=INFNAME;      /* PUT ALIAS NAME INTO MESSAGE 0944 10043000
*                                      IEA356I                       */ 10044000
         L     @08,INFOPTR                                         0944 10045000
         MVC   M356FI1(8),INFNAME(@08)                             0944 10046000
*             M356FI2=MODULE;       /* PUT MODULE NAME INTO MESSAGE     10047000
*                                      IEA356I                       */ 10048000
*                                                                  0945 10049000
         MVC   M356FI2(8),MODULE                                   0945 10050000
*             /*******************************************************/ 10051000
*             /*                                                     */ 10052000
*             /* SWITCH TO V=R TCB FOR WTO                           */ 10053000
*             /*                                                     */ 10054000
*             /*******************************************************/ 10055000
*                                                                  0946 10056000
*             GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)       0946 10057000
*                 (IEAPMNIP TYPE=REAL);/* SWITCH TO V=R              */ 10058000
         IEAPMNIP TYPE=REAL                                             10059000
*/********************************************************************/ 10060000
*/*                                                                  */ 10061000
*/*         IEA301I 'MODNAME' NOT FOUND IN SYS1.LPALIB               */ 10062000
*/*         IEA356I ALIAS 'ALIASNAME' OF MODULE 'MODNAME' IGNORED    */ 10063000
*/*                                                                  */ 10064000
*/********************************************************************/ 10065000
*                                                                  0947 10066000
*             GENERATE REFS(RNVT,NVTWTO,MSG301I,M301FI1,MSG356I,M356FI1 10067000
*                 ,M356FI2) SETS(RPARM,REXIT,RENTRY);              0947 10068000
*                                                                  0947 10069000
*                                                 /* WTO MSGS        */ 10070000
            IEAPMNIP TYPE=WTO,PARAM=MSG301I  WTO MSG IEA301I            10071000
            IEAPMNIP TYPE=WTO,PARAM=MSG356I  WTO MSG IEA356I            10072000
*             /*******************************************************/ 10073000
*             /*                                                     */ 10074000
*             /* SWITCH TCB BACK TO V=V                              */ 10075000
*             /*                                                     */ 10076000
*             /*******************************************************/ 10077000
*                                                                  0948 10078000
*             GENERATE REFS(NVTVIRT,RNVT) SETS(RENTRY,REXIT)       0948 10079000
*                 (IEAPMNIP TYPE=VIRT);/* SWITCH TO V=V              */ 10080000
         IEAPMNIP TYPE=VIRT                                             10081000
*             INFIND='1'B;          /* INDICATE MODULE ALREADY LOADED*/ 10082000
         L     @08,INFOPTR                                         0949 10083000
         OI    INFIND(@08),B'10000000'                             0949 10084000
*             LPDECT=LPDECT-1;      /* DECREMENT MODULE COUNT BY 1   */ 10085000
         L     @08,LPDECT                                          0950 10086000
         BCTR  @08,0                                               0950 10087000
         ST    @08,LPDECT                                          0950 10088000
*             MODULE=INFNAME;       /* PICK UP ALIAS NAME            */ 10089000
*                                                                  0951 10090000
         L     @08,INFOPTR                                         0951 10091000
         MVC   MODULE(8),INFNAME(@08)                              0951 10092000
*             /*******************************************************/ 10093000
*             /*                                                     */ 10094000
*             /* FIND START OF SYNONYM QUEUE CONTAINING ALIAS        */ 10095000
*             /*                                                     */ 10096000
*             /*******************************************************/ 10097000
*                                                                  0952 10098000
*             CALL NPA5FSLT;        /* FIND QUEUE HEADER             */ 10099000
         BAL   @14,NPA5FSLT                                        0952 10100000
*             LPDEPTR=SLOTADDR->NPA5BPTR;/* FIND FIRST ENTRY ON QUEUE*/ 10101000
         L     @08,SLOTADDR                                        0953 10102000
         L     LPDEPTR,NPA5BPTR(,@08)                              0953 10103000
*             IF LPDEPTR=INFOPTR THEN/* IS THIS ALIAS ENTRY          */ 10104000
         C     LPDEPTR,INFOPTR                                     0954 10105000
         BNE   @RF00954                                            0954 10106000
*               SLOTADDR->NPA5BPTR=INFSYNM;/* YES, REMOVE ALIAS ENTRY   10107000
*                                      FROM Q                        */ 10108000
         L     @07,INFOPTR                                         0955 10109000
         SLR   @00,@00                                             0955 10110000
         ICM   @00,7,INFSYNM(@07)                                  0955 10111000
         ST    @00,NPA5BPTR(,@08)                                  0955 10112000
*             ELSE                  /* NO, NOT START OF Q            */ 10113000
*               DO;                 /* FIND ALIAS ENTRY              */ 10114000
         B     @RC00954                                            0956 10115000
@RF00954 DS    0H                                                  0957 10116000
*                 DO WHILE(LPDEPTR->INFSYNM¬=INFOPTR);/* SCAN FOR  0957 10117000
*                                      ALIAS ENTRY                   */ 10118000
         B     @DE00957                                            0957 10119000
@DL00957 DS    0H                                                  0958 10120000
*                   LPDEPTR=LPDEPTR->INFSYNM;/* PICK UP NEXT ENTRY 0958 10121000
*                                      ADDRESS                       */ 10122000
         SLR   @08,@08                                             0958 10123000
         ICM   @08,7,INFSYNM(LPDEPTR)                              0958 10124000
         LR    LPDEPTR,@08                                         0958 10125000
*                 END;              /* END OF SCAN LOOP              */ 10126000
@DE00957 SLR   @08,@08                                             0959 10127000
         ICM   @08,7,INFSYNM(LPDEPTR)                              0959 10128000
         C     @08,INFOPTR                                         0959 10129000
         BNE   @DL00957                                            0959 10130000
*                 LPDEPTR->INFSYNM=INFSYNM;/* REMOVE ALIAS ENTRY FROM   10131000
*                                      QUEUE                         */ 10132000
         L     @08,INFOPTR                                         0960 10133000
         MVC   INFSYNM(3,LPDEPTR),INFSYNM(@08)                     0960 10134000
*               END;                                               0961 10135000
*           END;                    /* END OF ERROR PROCESSING       */ 10136000
@RC00954 DS    0H                                                  0963 10137000
*       END;                        /* END OF PROCESSING FOR THIS  0963 10138000
*                                      ALIAS ENTRY                   */ 10139000
@RF00941 DS    0H                                                  0964 10140000
*   END;                            /* END OF SCAN LOOP              */ 10141000
@RF00933 LA    @08,40                                              0964 10142000
         AL    @08,INFOPTR                                         0964 10143000
         ST    @08,INFOPTR                                         0964 10144000
@DE00932 L     @08,INFOPTR                                         0964 10145000
         CLC   INFNAME(8,@08),@CB00041                             0964 10146000
         BNE   @DL00932                                            0964 10147000
*   RETURN;                         /* RETURN TO CALLER              */ 10148000
         B     @EL00010                                            0965 10149000
*   RESPECIFY                                                      0966 10150000
*    (LPDEPTR) UNRESTRICTED;                                       0966 10151000
*   GENERATE NOREFS NOSETS(EJECT);                                 0967 10152000
*                                                                  0967 10153000
         EJECT                                                          10154000
*/********************************************************************/ 10155000
*/*                                                                  */ 10156000
*/*         SUBROUTINE NPA5GLOD                                      */ 10157000
*/*                                                                  */ 10158000
*/*         FUNCTION - LOAD THE MODULES SPECIFIED IN A PACKED GROUP  */ 10159000
*/*                                                                  */ 10160000
*/*         INPUT - NA5CSGRP POINTS TO THE BLDL INFO ENTRY FOR THE   */ 10161000
*/*            FIRST MODULE IN THE GROUP                             */ 10162000
*/*         OUTPUT - THE SPECIFIED MODULES ARE LOADED INTO THE       */ 10163000
*/*            LINK PACK AREA, THE BLDL INFORMATION TABLE ENTRIES    */ 10164000
*/*            FOR THOSE MODULES ARE REPLACED BY LPDES, AND          */ 10165000
*/*            CVTSHRVM IS UPDATED TO POINT TO THE BEGINNING OF      */ 10166000
*/*            THE GROUP JUST LOADED                                 */ 10167000
*/*                                                                  */ 10168000
*/********************************************************************/ 10169000
*                                                                  0968 10170000
*NPA5GLOD:                          /* NPA5GLOD ENTRY PT             */ 10171000
*   ENTRY;                          /* BEGINNING OF SUBR             */ 10172000
         B     @EC00968                                            0968 10173000
NPA5GLOD STM   @14,@03,@SA00010                                    0968 10174000
         STM   @05,@12,@SA00010+24                                 0968 10175000
@EC00968 DS    0H                                                  0969 10176000
*   RESPECIFY                                                      0969 10177000
*    (RLDADDR) RESTRICTED;                                         0969 10178000
*   IF NA5CSGRP=0 THEN              /* THIS CONDITION WILL RESULT    */ 10179000
         L     @08,NA5CSGRP                                        0970 10180000
         LTR   @08,@08                                             0970 10181000
         BZ    @RT00970                                            0970 10182000
*     RETURN;                       /* DURING ERROR PROCESSING IF  0971 10183000
*                                      FIRST MODULE IN GROUP IS    0971 10184000
*                                      INVALID.                      */ 10185000
*   RLDADDR=0;                      /* LOGICAL LOAD ADDR             */ 10186000
         SLR   RLDADDR,RLDADDR                                     0972 10187000
*   INFOPTR=NA5CSGRP;               /* POINT TO FIRST ENT            */ 10188000
*                                                                  0973 10189000
         ST    @08,INFOPTR                                         0973 10190000
*   /*****************************************************************/ 10191000
*   /*                                                               */ 10192000
*   /* CALCULATE THE TOTAL SIZE OF THE GROUP OF MODULES TO BE LOADED */ 10193000
*   /*                                                               */ 10194000
*   /*****************************************************************/ 10195000
*                                                                  0974 10196000
*   DO WHILE(INFOPTR¬=0);           /* SCAN ENTIRE GROUP             */ 10197000
         B     @DE00974                                            0974 10198000
@DL00974 DS    0H                                                  0975 10199000
*     NEXTADDR=RLDADDR+(INFSTOR+7)&ROUNDDWD;/* CALCULATE LOGICAL   0975 10200000
*                                      ADDRESS OF END OF THIS MODULE */ 10201000
         LA    @08,7                                               0975 10202000
         L     @05,INFOPTR                                         0975 10203000
         SLR   @00,@00                                             0975 10204000
         ICM   @00,7,INFSTOR(@05)                                  0975 10205000
         ALR   @08,@00                                             0975 10206000
         ALR   @08,RLDADDR                                         0975 10207000
         N     @08,@CF00121                                        0975 10208000
         ST    @08,NEXTADDR                                        0975 10209000
*     IF((NEXTADDR-1)&ROUNDPAG)¬=(RLDADDR&ROUNDPAG) THEN/* TEST FOR     10210000
*                                      END OF MODULE IN A DIFFERENT     10211000
*                                      PAGE FROM THE START OF THE  0976 10212000
*                                      MODULE                        */ 10213000
         LH    @05,@CH00123                                        0976 10214000
         LR    @00,@08                                             0976 10215000
         BCTR  @00,0                                               0976 10216000
         NR    @00,@05                                             0976 10217000
         LR    @15,RLDADDR                                         0976 10218000
         NR    @15,@05                                             0976 10219000
         CLR   @00,@15                                             0976 10220000
         BE    @RF00976                                            0976 10221000
*       DO;                         /* PAGE BOUNDARY CUTS THROUGH  0977 10222000
*                                      MODULE - AJUST LOAD ADDRESS IF   10223000
*                                      NECESSARY                     */ 10224000
*         WASTE=((RLDADDR+PAGEM1)&ROUNDPAG)-RLDADDR;/* CALC SPACE TO    10225000
*                                      BE WASTED                     */ 10226000
         LA    @00,4095                                            0978 10227000
         ALR   @00,RLDADDR                                         0978 10228000
         NR    @00,@05                                             0978 10229000
         SLR   @00,RLDADDR                                         0978 10230000
         ST    @00,WASTE                                           0978 10231000
*         IF WASTE¬=PAGE THEN       /* DOES ROUNDING WASTE AN ENTIRE    10232000
*                                      PAGE                          */ 10233000
         CH    @00,@CH00044                                        0979 10234000
         BE    @RF00979                                            0979 10235000
*           NEXTADDR=WASTE+NEXTADDR;/* NO, ROUND UP                  */ 10236000
         ALR   @00,@08                                             0980 10237000
         ST    @00,NEXTADDR                                        0980 10238000
*       END;                                                       0981 10239000
@RF00979 DS    0H                                                  0982 10240000
*     RLDADDR=NEXTADDR;             /* STEP TO NEXT ADDR             */ 10241000
@RF00976 L     RLDADDR,NEXTADDR                                    0982 10242000
*     INFOPTR=INFCHAIN;             /* FIND NEXT ENTRY               */ 10243000
         L     @08,INFOPTR                                         0983 10244000
         SLR   @05,@05                                             0983 10245000
         ICM   @05,7,INFCHAIN(@08)                                 0983 10246000
         ST    @05,INFOPTR                                         0983 10247000
*   END;                            /* END OF SCAN LOOP              */ 10248000
@DE00974 ICM   @08,15,INFOPTR                                      0984 10249000
         BNZ   @DL00974                                            0984 10250000
*   RLDADDR=(NVTLVIRT-RLDADDR)&ROUNDPAG;/* CALCULATE LOW ADDRESS OF     10251000
*                                      GROUP                         */ 10252000
         L     @08,NVTLVIRT(,RNVT)                                 0985 10253000
         SLR   @08,RLDADDR                                         0985 10254000
         N     @08,@CF00123                                        0985 10255000
         LR    RLDADDR,@08                                         0985 10256000
*   IF RLDADDR<NVTVVPG1 THEN        /* IS ADDRESS VALID              */ 10257000
         C     RLDADDR,NVTVVPG1(,RNVT)                             0986 10258000
         BNL   @RF00986                                            0986 10259000
*     CALL NPA5CERR(STUNAV);        /* NO, PROCESS ERROR             */ 10260000
         LA    @01,@AL00987                                        0987 10261000
         BAL   @14,NPA5CERR                                        0987 10262000
*   ELSE                                                           0988 10263000
*     ;                                                            0988 10264000
@RF00986 DS    0H                                                  0989 10265000
*   NVTLVIRT=RLDADDR;               /* UPDATE LOW V=V POINTER        */ 10266000
         ST    RLDADDR,NVTLVIRT(,RNVT)                             0989 10267000
*   INFOPTR=NA5CSGRP;               /* POINT TO FIRST MOD            */ 10268000
*                                                                  0990 10269000
         MVC   INFOPTR(4),NA5CSGRP                                 0990 10270000
*   /*****************************************************************/ 10271000
*   /*                                                               */ 10272000
*   /* LOAD THE MODULES INTO THE SPACE JUST CALCULATED               */ 10273000
*   /*                                                               */ 10274000
*   /*****************************************************************/ 10275000
*                                                                  0991 10276000
*   DO WHILE(INFOPTR¬=0);           /* PROCESS LIST                  */ 10277000
         B     @DE00991                                            0991 10278000
@DL00991 DS    0H                                                  0992 10279000
*     NEXTINFO=INFCHAIN;            /* SAVE CHAIN POINTER            */ 10280000
         L     @08,INFOPTR                                         0992 10281000
         SLR   @05,@05                                             0992 10282000
         ICM   @05,7,INFCHAIN(@08)                                 0992 10283000
         ST    @05,NEXTINFO                                        0992 10284000
*     INFPAGA='0'B;                 /* FORCE NO PAGE ALIGN           */ 10285000
*                                                                  0993 10286000
         L     @08,INFOPTR                                         0993 10287000
         NI    INFPAGA(@08),B'10111111'                            0993 10288000
*     /***************************************************************/ 10289000
*     /*                                                             */ 10290000
*     /* LOAD REQUESTED MODULE AND BUILD LPDE IN PLACE OF THE BLDL   */ 10291000
*     /* INFORMATION TABLE ENTRY                                     */ 10292000
*     /*                                                             */ 10293000
*     /***************************************************************/ 10294000
*                                                                  0994 10295000
*     CALL NPA5MLOD;                /* LOAD MODULE                   */ 10296000
         BAL   @14,NPA5MLOD                                        0994 10297000
*     INFOPTR=NEXTINFO;             /* POINT TO NEXT MOD             */ 10298000
         MVC   INFOPTR(4),NEXTINFO                                 0995 10299000
*   END;                            /* END OF LOAD LOOP              */ 10300000
@DE00991 SLR   @08,@08                                             0996 10301000
         C     @08,INFOPTR                                         0996 10302000
         BNE   @DL00991                                            0996 10303000
*   WASTE=PAGE-RLDADDR&OVERPAG;     /* CALCULATE SPACE LOST ON LAST     10304000
*                                      PAGE OF GROUP                 */ 10305000
         LH    @05,@CH00044                                        0997 10306000
         SLR   @05,RLDADDR                                         0997 10307000
         N     @05,@CF00127                                        0997 10308000
         ST    @05,WASTE                                           0997 10309000
*   IF WASTE>0 THEN                 /* IS SPACE WASTED               */ 10310000
         CR    @05,@08                                             0998 10311000
         BNH   @RF00998                                            0998 10312000
*     DO;                           /* YES, PROCESS WASTE            */ 10313000
*       WASTEADR=RLDADDR;           /* START ADDR OF WASTE           */ 10314000
*                                                                  1000 10315000
         ST    RLDADDR,WASTEADR                                    1000 10316000
*       /*************************************************************/ 10317000
*       /*                                                           */ 10318000
*       /* ADD WASTED SPACE TO QUEUE TO BE RECLAIMED LATER           */ 10319000
*       /*                                                           */ 10320000
*       /*************************************************************/ 10321000
*                                                                  1001 10322000
*       CALL NPA5WAST;              /* ADD SPACE TO QUEUE            */ 10323000
         BAL   @14,NPA5WAST                                        1001 10324000
*     END;                                                         1002 10325000
*   RETURN;                         /* RETURN TO CALLER              */ 10326000
         B     @EL00010                                            1003 10327000
*   RESPECIFY                                                      1004 10328000
*    (RLDADDR) UNRESTRICTED;                                       1004 10329000
*   GENERATE NOREFS NOSETS(EJECT);                                 1005 10330000
*                                                                  1005 10331000
         EJECT                                                          10332000
*/********************************************************************/ 10333000
*/*                                                                  */ 10334000
*/*         SUBROUTINE NPA5ILOD                                      */ 10335000
*/*                                                                  */ 10336000
*/*         FUNCTION - LOAD AN INDEPENDENT MODULE INTO THE LPA       */ 10337000
*/*                                                                  */ 10338000
*/*         INPUT - THE BLDL INFORMATION TABLE ENTRY FOR THE MODULE  */ 10339000
*/*            (POINTED TO BY INFOPTR)                               */ 10340000
*/*                                                                  */ 10341000
*/*         OUTPUT - THE MODULES IS LOADED IN THE LPA AND THE        */ 10342000
*/*            BLDL INFO TABLE ENTRY IS REPLACED BY THE LPDE         */ 10343000
*/*                                                                  */ 10344000
*/********************************************************************/ 10345000
*                                                                  1006 10346000
*NPA5ILOD:                          /* NPA5ILOD ENTRY PT             */ 10347000
*   ENTRY;                          /* BEGINNING OF SUBR             */ 10348000
         B     @EC01006                                            1006 10349000
NPA5ILOD STM   @14,@03,@SA00010                                    1006 10350000
         STM   @05,@12,@SA00010+24                                 1006 10351000
@EC01006 DS    0H                                                  1007 10352000
*   RESPECIFY                                                      1007 10353000
*    (RLDADDR) RESTRICTED;                                         1007 10354000
*   FMSIZE=(INFSTOR+7)&ROUNDDWD;    /* ROUND MODULE SIZE UP TO     1008 10355000
*                                      DOUBLEWORD MULTIPLE           */ 10356000
         LA    @08,7                                               1008 10357000
         L     @05,INFOPTR                                         1008 10358000
         SLR   @00,@00                                             1008 10359000
         ICM   @00,7,INFSTOR(@05)                                  1008 10360000
         ALR   @08,@00                                             1008 10361000
         N     @08,@CF00121                                        1008 10362000
         ST    @08,FMSIZE                                          1008 10363000
*   RLDADDR=0;                      /* ZERO LOAD ADDRESS             */ 10364000
         SLR   RLDADDR,RLDADDR                                     1009 10365000
*   WASTE=0;                        /* CLEAR WASTE COUNT             */ 10366000
         SLR   @05,@05                                             1010 10367000
         ST    @05,WASTE                                           1010 10368000
*   IF FMSIZE<PAGE&INFPAGA='0'B THEN/* TEST FOR A MODULE WHICH CAN 1011 10369000
*                                      FIT ON AN EXISTING PAGE - NOTE   10370000
*                                      - NO SPACE WILL BE RECLAIMED     10371000
*                                      IF A MODULE PACKING LIST WAS     10372000
*                                      NOT FOUND OR WAS NULL         */ 10373000
*                                                                  1011 10374000
         CH    @08,@CH00044                                        1011 10375000
         BNL   @RF01011                                            1011 10376000
         L     @08,INFOPTR                                         1011 10377000
         TM    INFPAGA(@08),B'01000000'                            1011 10378000
         BNZ   @RF01011                                            1011 10379000
*     /***************************************************************/ 10380000
*     /*                                                             */ 10381000
*     /* TRY TO FIND SOME WASTED SPACE WHICH CAN CONTAIN IT          */ 10382000
*     /*                                                             */ 10383000
*     /***************************************************************/ 10384000
*                                                                  1012 10385000
*     CALL NPA5RCLM;                /* RECLAIM SPACE                 */ 10386000
         BAL   @14,NPA5RCLM                                        1012 10387000
*   IF RLDADDR=0 THEN               /* TEST FOR SPACE NOT FOUND FOR     10388000
*                                      MODULE                        */ 10389000
@RF01011 SLR   @08,@08                                             1013 10390000
         CR    RLDADDR,@08                                         1013 10391000
         BNE   @RF01013                                            1013 10392000
*     DO;                           /* MODULE MUST BE LOADED BELOW 1014 10393000
*                                      CVTSHRVM                      */ 10394000
*       AVAIL=NVTLVIRT&OVERPAG;     /* CALC SPACE WHICH IS AVAILABLE    10395000
*                                      IN LAST PAGE USED             */ 10396000
         L     @05,NVTLVIRT(,RNVT)                                 1015 10397000
         LR    @00,@05                                             1015 10398000
         N     @00,@CF00127                                        1015 10399000
         ST    @00,AVAIL                                           1015 10400000
*       IF FMSIZE>AVAIL THEN        /* DOES MODULE FIT               */ 10401000
         C     @00,FMSIZE                                          1016 10402000
         BNL   @RF01016                                            1016 10403000
*         DO;                       /* NO, MUST DROP DOWN TO NEXT  1017 10404000
*                                      PAGE BOUNDARY                 */ 10405000
*           NVTLVIRT=NVTLVIRT&ROUNDPAG;/* ROUND DOWN TO PAGE BOUNDARY*/ 10406000
         N     @05,@CF00123                                        1018 10407000
         ST    @05,NVTLVIRT(,RNVT)                                 1018 10408000
*           WASTEADR=NVTLVIRT;      /* SET UP ADDRESS OF WASTED SPACE*/ 10409000
         ST    @05,WASTEADR                                        1019 10410000
*           WASTE=AVAIL;            /* SET UP LENGTH OF WASTED SPACE */ 10411000
         ST    @00,WASTE                                           1020 10412000
*           IF WASTE¬=0 THEN        /* TEST FOR NO WASTE             */ 10413000
*                                                                  1021 10414000
         CR    @00,@08                                             1021 10415000
         BE    @RF01021                                            1021 10416000
*             /*******************************************************/ 10417000
*             /*                                                     */ 10418000
*             /* ADD WASTED SPACE TO QUEUE                           */ 10419000
*             /*                                                     */ 10420000
*             /*******************************************************/ 10421000
*                                                                  1022 10422000
*             CALL NPA5WAST;        /* QUEUE SPACE                   */ 10423000
         BAL   @14,NPA5WAST                                        1022 10424000
*         END;                                                     1023 10425000
@RF01021 DS    0H                                                  1024 10426000
*       IF FMSIZE>=PAGE|INFPAGA='1'B THEN/* TEST FOR MODULE TO BE  1024 10427000
*                                      FORCED TO A PAGE BOUNDARY     */ 10428000
@RF01016 L     @08,FMSIZE                                          1024 10429000
         CH    @08,@CH00044                                        1024 10430000
         BNL   @RT01024                                            1024 10431000
         L     @08,INFOPTR                                         1024 10432000
         TM    INFPAGA(@08),B'01000000'                            1024 10433000
         BNO   @RF01024                                            1024 10434000
@RT01024 DS    0H                                                  1025 10435000
*         DO;                       /* MODULE MUST BE LOADED ON A  1025 10436000
*                                      PAGE BOUNDARY                 */ 10437000
*           RLDADDR=(NVTLVIRT-FMSIZE)&ROUNDPAG;/* CALCULATE LOAD   1026 10438000
*                                      ADDRESS                       */ 10439000
         L     @08,FMSIZE                                          1026 10440000
         L     @15,NVTLVIRT(,RNVT)                                 1026 10441000
         LR    RLDADDR,@15                                         1026 10442000
         SLR   RLDADDR,@08                                         1026 10443000
         N     RLDADDR,@CF00123                                    1026 10444000
*           WASTEADR=RLDADDR+FMSIZE;/* CALCULATE MODULE END ADDRESS -   10445000
*                                      IF THERE IS ANY WASTED SPACE,    10446000
*                                      IT WILL START HERE            */ 10447000
         LR    @05,RLDADDR                                         1027 10448000
         ALR   @05,@08                                             1027 10449000
         ST    @05,WASTEADR                                        1027 10450000
*           WASTE=NVTLVIRT-WASTEADR;/* CALCULATE SIZE OF WASTED SPACE*/ 10451000
         SLR   @15,@05                                             1028 10452000
         ST    @15,WASTE                                           1028 10453000
*           IF FMSIZE<PAGE THEN     /* TEST FOR PAGE ALIGNED MODULE     10454000
*                                      SMALLER THAN A PAGE           */ 10455000
         CH    @08,@CH00044                                        1029 10456000
         BNL   @RF01029                                            1029 10457000
*             INFPAGA='0'B;         /* YES, RESET PAGE ALIGN BIT TO     10458000
*                                      AVOID GETMAIN PROBLEM         */ 10459000
         L     @08,INFOPTR                                         1030 10460000
         NI    INFPAGA(@08),B'10111111'                            1030 10461000
*           ELSE                    /* NO, NOT SMALL MOD             */ 10462000
*             INFPAGA='1'B;         /* FORCE PAGE ALIGN              */ 10463000
         B     @RC01029                                            1031 10464000
@RF01029 L     @08,INFOPTR                                         1031 10465000
         OI    INFPAGA(@08),B'01000000'                            1031 10466000
*         END;                                                     1032 10467000
*       ELSE                        /* MODULE CAN BE LOADED ON A   1033 10468000
*                                      DOUBLEWORD BOUNDARY           */ 10469000
*         RLDADDR=NVTLVIRT-FMSIZE;  /* CALC LOAD ADDR                */ 10470000
         B     @RC01024                                            1033 10471000
@RF01024 L     RLDADDR,NVTLVIRT(,RNVT)                             1033 10472000
         SL    RLDADDR,FMSIZE                                      1033 10473000
*     END;                                                         1034 10474000
@RC01024 DS    0H                                                  1035 10475000
*   IF RLDADDR<NVTVVPG1 THEN        /* TEST FOR INV ADDR             */ 10476000
@RF01013 C     RLDADDR,NVTVVPG1(,RNVT)                             1035 10477000
         BNL   @RF01035                                            1035 10478000
*     CALL NPA5CERR(STUNAV);        /* PROCESS ERROR                 */ 10479000
         LA    @01,@AL01036                                        1036 10480000
         BAL   @14,NPA5CERR                                        1036 10481000
*   IF RLDADDR<NVTLVIRT THEN        /* TEST FOR MODULE LOADED BELOW     10482000
*                                      VALIDATED ADDRESS SPACE       */ 10483000
@RF01035 C     RLDADDR,NVTLVIRT(,RNVT)                             1037 10484000
         BNL   @RF01037                                            1037 10485000
*     NVTLVIRT=RLDADDR;             /* UPDATE LOW V=V POINTER        */ 10486000
         ST    RLDADDR,NVTLVIRT(,RNVT)                             1038 10487000
*   SAVEWAST=WASTE;                 /* SAVE WASTE COUNT OVER CALL TO    10488000
*                                      NPA5MLOD                      */ 10489000
@RF01037 MVC   SAVEWAST(4),WASTE                                   1039 10490000
*   SAVEADR=WASTEADR;               /* SAVE WASTE ADDRESS OVER CALL     10491000
*                                      TO NPA5MLOD                   */ 10492000
*                                                                  1040 10493000
         MVC   SAVEADR(4),WASTEADR                                 1040 10494000
*   /*****************************************************************/ 10495000
*   /*                                                               */ 10496000
*   /* LOAD THE MODULE INTO THE LPA AND CONVERT THE BLDL INFO TABLE  */ 10497000
*   /* ENTRY INTO AN LPDE                                            */ 10498000
*   /*                                                               */ 10499000
*   /*****************************************************************/ 10500000
*                                                                  1041 10501000
*   CALL NPA5MLOD;                  /* LOAD THE MODULE               */ 10502000
         BAL   @14,NPA5MLOD                                        1041 10503000
*   WASTE=SAVEWAST;                 /* RESTORE WASTE COUNT           */ 10504000
         L     @08,SAVEWAST                                        1042 10505000
         ST    @08,WASTE                                           1042 10506000
*   WASTEADR=SAVEADR;               /* RESTORE WASTE ADDR            */ 10507000
         MVC   WASTEADR(4),SAVEADR                                 1043 10508000
*   IF WASTE>0 THEN                 /* IS THERE ANY WASTE            */ 10509000
*                                                                  1044 10510000
         LTR   @08,@08                                             1044 10511000
         BNP   @RF01044                                            1044 10512000
*     /***************************************************************/ 10513000
*     /*                                                             */ 10514000
*     /* ADD WASTED SPACE TO QUEUE                                   */ 10515000
*     /*                                                             */ 10516000
*     /***************************************************************/ 10517000
*                                                                  1045 10518000
*     CALL NPA5WAST;                /* QUEUE SPACE                   */ 10519000
         BAL   @14,NPA5WAST                                        1045 10520000
*   RETURN;                         /* RETURN TO CALLER              */ 10521000
         B     @EL00010                                            1046 10522000
*   RESPECIFY                                                      1047 10523000
*    (RLDADDR) UNRESTRICTED;                                       1047 10524000
*   GENERATE NOREFS NOSETS(EJECT);                                 1048 10525000
*                                                                  1048 10526000
         EJECT                                                          10527000
*/********************************************************************/ 10528000
*/*                                                                  */ 10529000
*/*         SUBROUTINE NPA5ALPD                                      */ 10530000
*/*                                                                  */ 10531000
*/*         FUNCTION - BUILD AN LPDE FOR AN ALIAS NAME               */ 10532000
*/*                                                                  */ 10533000
*/*         INPUT - THE INFO TABLE ENTRY FOR THE ALIAS NAME          */ 10534000
*/*            THE BLDL INFO TABLE WITH LPDES FOR ALL MAJOR NAMES    */ 10535000
*/*                                                                  */ 10536000
*/*         OUTPUT - THE LPDE FOR THE ALIAS NAME IN PLACE OF THE     */ 10537000
*/*            BLDL INFO TABLE ENTRY                                 */ 10538000
*/*                                                                  */ 10539000
*/********************************************************************/ 10540000
*                                                                  1049 10541000
*NPA5ALPD:                          /* NPA5ALPD ENTRY PT             */ 10542000
*   ENTRY;                          /* BEGINNING OF SUBR             */ 10543000
         B     @EC01049                                            1049 10544000
NPA5ALPD STM   @14,@03,@SA00010                                    1049 10545000
         STM   @05,@12,@SA00010+24                                 1049 10546000
@EC01049 DS    0H                                                  1050 10547000
*   RESPECIFY                                                      1050 10548000
*    (LPDEPTR) RESTRICTED;                                         1050 10549000
*   MODULE=INFMNM;                  /* PICK UP MAJOR NAME            */ 10550000
*                                                                  1051 10551000
         L     @08,INFOPTR                                         1051 10552000
         MVC   MODULE(8),INFMNM(@08)                               1051 10553000
*   /*****************************************************************/ 10554000
*   /*                                                               */ 10555000
*   /* LOCATE LPDE FOR THE MAJOR NAME                                */ 10556000
*   /*                                                               */ 10557000
*   /*****************************************************************/ 10558000
*                                                                  1052 10559000
*   CALL NPA5FSLT;                  /* FIND INDEX ENTRY              */ 10560000
         BAL   @14,NPA5FSLT                                        1052 10561000
*   LPDEPTR=SLOTADDR->NPA5BPTR;     /* PICK UP FIRST LPDE ADDRESS    */ 10562000
         L     @08,SLOTADDR                                        1053 10563000
         L     LPDEPTR,NPA5BPTR(,@08)                              1053 10564000
*   DO WHILE(LPDENIP='0'B|LPDENAME¬=MODULE);/* SEARCH SYNONYM QUEUE     10565000
*                                      FOR THE LPDE FOR THE MAJOR  1054 10566000
*                                      NAME                          */ 10567000
         B     @DE01054                                            1054 10568000
@DL01054 DS    0H                                                  1055 10569000
*     LPDEPTR=LPDECHN;              /* STEP TO NEXT LPDE             */ 10570000
         L     LPDEPTR,LPDECHN(,LPDEPTR)                           1055 10571000
*   END;                            /* END OF SCAN LOOP              */ 10572000
*                                                                  1056 10573000
@DE01054 TM    LPDENIP(LPDEPTR),B'10000000'                        1056 10574000
         BZ    @DL01054                                            1056 10575000
         CLC   LPDENAME(8,LPDEPTR),MODULE                          1056 10576000
         BNE   @DL01054                                            1056 10577000
*   /*****************************************************************/ 10578000
*   /*                                                               */ 10579000
*   /* BUILD THE LPDE FOR THE ALIAS NAME                             */ 10580000
*   /*                                                               */ 10581000
*   /*****************************************************************/ 10582000
*                                                                  1057 10583000
*   NPA5LPDE=LPDE;                  /* COPY MAJOR LPDE               */ 10584000
         MVC   NPA5LPDE(40),LPDE(LPDEPTR)                          1057 10585000
*   LPDEPTR=ADDR(NPA5LPDE);         /* SET UP DSECT BASE             */ 10586000
         LA    LPDEPTR,NPA5LPDE                                    1058 10587000
*   LPDENTP=LPDEXTAD+INFEPA;        /* RELOCATE EPA                  */ 10588000
         L     @08,INFOPTR                                         1059 10589000
         SLR   @07,@07                                             1059 10590000
         ICM   @07,7,INFEPA(@08)                                   1059 10591000
         AL    @07,LPDEXTAD(,LPDEPTR)                              1059 10592000
         ST    @07,LPDENTP(,LPDEPTR)                               1059 10593000
*   LPDENAME=INFNAME;               /* COPY ALIAS NAME               */ 10594000
         L     @08,INFOPTR                                         1060 10595000
         MVC   LPDENAME(8,LPDEPTR),INFNAME(@08)                    1060 10596000
*   LPDEMJNM=INFMNM;                /* COPY MAJOR NAME               */ 10597000
         L     @08,INFOPTR                                         1061 10598000
         MVC   LPDEMJNM(8,LPDEPTR),INFMNM(@08)                     1061 10599000
*   LPDEMIN='1'B;                   /* SET MINOR LPDE FLAG           */ 10600000
         OI    LPDEMIN(LPDEPTR),B'00000100'                        1062 10601000
*   LPDERLC='1'B;                   /* SET ALIAS LPDE FLAG           */ 10602000
*   LPDEXLE='0'B;                   /* RESET XLST FLAG               */ 10603000
         OI    LPDERLC(LPDEPTR),B'00010000'                        1064 10604000
         NI    LPDEXLE(LPDEPTR),B'11011111'                        1064 10605000
*   LPDECHN=INFSYNM;                /* COPY SYNONYM CHAIN            */ 10606000
         L     @08,INFOPTR                                         1065 10607000
         SLR   @07,@07                                             1065 10608000
         ICM   @07,7,INFSYNM(@08)                                  1065 10609000
         ST    @07,LPDECHN(,LPDEPTR)                               1065 10610000
*   INFODATA=LPDE;                  /* REPLACE INFODATA WITH ALIAS 1066 10611000
*                                      LPDE                          */ 10612000
         L     @08,INFOPTR                                         1066 10613000
         MVC   INFODATA(40,@08),LPDE(LPDEPTR)                      1066 10614000
*   RETURN;                         /* RETURN TO CALLER              */ 10615000
         B     @EL00010                                            1067 10616000
*   RESPECIFY                                                      1068 10617000
*    (LPDEPTR) UNRESTRICTED;                                       1068 10618000
*   GENERATE NOREFS NOSETS(EJECT);                                 1069 10619000
*                                                                  1069 10620000
         EJECT                                                          10621000
*/********************************************************************/ 10622000
*/*                                                                  */ 10623000
*/*         SUBROUTINE NPA5RHSH                                      */ 10624000
*/*                                                                  */ 10625000
*/*         FUNCTION - REHASH LPDES TO THEIR PROPER PLACE IN THE     */ 10626000
*/*            LPA DIRECTORY                                         */ 10627000
*/*                                                                  */ 10628000
*/*         INPUT - SLOTADDR - POINTS TO INDEX TABLE ENTRY FOR       */ 10629000
*/*               THE SYNONYM QUEUE TO BE PROCESSED                  */ 10630000
*/*            BLDL INFORMATION TABLE CONTAINING LPDES TO BE RESASHED*/ 10631000
*/*                                                                  */ 10632000
*/*         OUTPUT - THE LPDES ON THE SYNONYM QUEUE ARE IN THEIR     */ 10633000
*/*            PROPER PLACES IN THE LPA DIRECTORY AND THE SYNONYM    */ 10634000
*/*            QUEUE IS MAINTAINED IN THE DIRECTORY                  */ 10635000
*/*            NOTE - THE BLDL INDEX TABLE ENTRY CORRESPONDING TO    */ 10636000
*/*            ALL LPDES IN USE NOW CONTAIN A NON-ZERO VALUE         */ 10637000
*/*                                                                  */ 10638000
*/********************************************************************/ 10639000
*                                                                  1070 10640000
*NPA5RHSH:                          /* NPA5RHSH ENTRY PT             */ 10641000
*   ENTRY;                          /* BEGINNING OF SUBR             */ 10642000
         B     @EC01070                                            1070 10643000
NPA5RHSH STM   @14,@03,@SA00010                                    1070 10644000
         STM   @05,@12,@SA00010+24                                 1070 10645000
@EC01070 DS    0H                                                  1071 10646000
*   RESPECIFY                                                      1071 10647000
*    (LPDEPTR) RESTRICTED;                                         1071 10648000
*   INDEX=SLOTADDR-NA5BLDIR;        /* CALCULATE OFFSET INTO INDEX 1072 10649000
*                                      TABLE                         */ 10650000
         L     @08,SLOTADDR                                        1072 10651000
         LR    @07,@08                                             1072 10652000
         SL    @07,NA5BLDIR                                        1072 10653000
         ST    @07,INDEX                                           1072 10654000
*   INFOPTR=SLOTADDR->NPA5BPTR;     /* PICK UP ADDRESS OF FIRST LPDE    10655000
*                                      ON QUEUE                      */ 10656000
*                                                                  1073 10657000
         MVC   INFOPTR(4),NPA5BPTR(@08)                            1073 10658000
*   /*****************************************************************/ 10659000
*   /*                                                               */ 10660000
*   /* PUT FIRST LPDE INTO DIRECTORY IN ITS PRIMARY SLOT             */ 10661000
*   /*                                                               */ 10662000
*   /*****************************************************************/ 10663000
*                                                                  1074 10664000
*   LPDEPTR=NVTLVIRT+INDEX*10;      /* CALCULATE ADDRESS OF PRIMARY     10665000
*                                      SLOT                          */ 10666000
         L     LPDEPTR,INDEX                                       1074 10667000
         MH    LPDEPTR,@CH03109                                    1074 10668000
         AL    LPDEPTR,NVTLVIRT(,RNVT)                             1074 10669000
*   LPDE=INFOPTR->LPDE;             /* COPY LPDE TO SLOT             */ 10670000
*                                                                  1075 10671000
         L     @08,INFOPTR                                         1075 10672000
         MVC   LPDE(40,LPDEPTR),LPDE(@08)                          1075 10673000
*   /*****************************************************************/ 10674000
*   /*                                                               */ 10675000
*   /* LOOP THROUGH THE SYNONYM CHAIN AND COPY ALL OTHER LPDES IN THE*/ 10676000
*   /* CHAIN INTO THE DIRECTORY                                      */ 10677000
*   /*                                                               */ 10678000
*   /*****************************************************************/ 10679000
*                                                                  1076 10680000
*   DO WHILE((LPDECHN&ZEROHIGH)¬=0);/* LOOP TILL END SYN CHAIN       */ 10681000
         B     @DE01076                                            1076 10682000
@DL01076 DS    0H                                                  1077 10683000
*     INFOPTR=LPDECHN;              /* POINT TO NEXT LPDE            */ 10684000
         MVC   INFOPTR(4),LPDECHN(LPDEPTR)                         1077 10685000
*     WORKLPDE=LPDEPTR;             /* MOVE LPDEPTR TO WORKAREA      */ 10686000
         ST    LPDEPTR,WORKLPDE                                    1078 10687000
*     LPDEPAGE=WORKLPDE&ROUNDPAG;   /* ROUND LPDE TO PAGE            */ 10688000
         L     @08,WORKLPDE                                        1079 10689000
         LR    @07,@08                                             1079 10690000
         N     @07,@CF00123                                        1079 10691000
         ST    @07,LPDEPAGE                                        1079 10692000
*     LPDERMDR=(WORKLPDE-LPDEPAGE)//40;/* COMPUTE AMOUNT OVER PAGE 1080 10693000
*                                      BOUNDARY THAT A PAGE        1080 10694000
*                                      OVERLAPPED LPDE OCCUPIES ON 1080 10695000
*                                      CURRENT PAGE                  */ 10696000
         LA    @15,40                                              1080 10697000
         LR    @04,@08                                             1080 10698000
         SLR   @04,@07                                             1080 10699000
         SRDA  @04,32                                              1080 10700000
         DR    @04,@15                                             1080 10701000
         ST    @04,LPDERMDR                                        1080 10702000
*     LPDEFRST=LPDEPAGE+LPDERMDR;   /* POINT TO FIRST LPDE ON THIS 1081 10703000
*                                      PAGE                          */ 10704000
         ALR   @07,@04                                             1081 10705000
         ST    @07,LPDEFRST                                        1081 10706000
*     INDEX=((LPDEFRST-NVTLVIRT)/40)*4;/* COMPUTE CORRESPONDING INDEX   10707000
*                                      TABLE ENTRY                   */ 10708000
         LR    @04,@07                                             1082 10709000
         SL    @04,NVTLVIRT(,RNVT)                                 1082 10710000
         SRDA  @04,32                                              1082 10711000
         DR    @04,@15                                             1082 10712000
         SLA   @05,2                                               1082 10713000
         ST    @05,INDEX                                           1082 10714000
*     IF LPDERMDR>16 THEN           /* DETERMINE THE NUMBER OF LPDES    10715000
*                                      THAT CAN FIT ON CURRENT PAGE -   10716000
*                                      THIS NUMBER X 4 IS LAST INDEX    10717000
*                                      TABLE ENTRY THAT MAPS TO LAST    10718000
*                                      LPDE ON THIS PAGE             */ 10719000
         L     @08,LPDERMDR                                        1083 10720000
         CH    @08,@CH00067                                        1083 10721000
         BNH   @RF01083                                            1083 10722000
*       IXPAG=400;                  /* 100 INDEX TABLE ENTRIES       */ 10723000
         MVC   IXPAG(4),@CF03684                                   1084 10724000
*     ELSE                                                         1085 10725000
*       IXPAG=404;                  /* 101 INDEX TABLE ENTRIES       */ 10726000
         B     @RC01083                                            1085 10727000
@RF01083 MVC   IXPAG(4),@CF03685                                   1085 10728000
*     IXLAST=MIN(BLDIREND,NA5BLDIR+INDEX+IXPAG);/* CALC LAST INDEX 1086 10729000
*                                      FOR THAT PAGE OF DIRECTORY    */ 10730000
@RC01083 L     @08,NA5BLDIR                                        1086 10731000
         AL    @08,INDEX                                           1086 10732000
         LR    @07,@08                                             1086 10733000
         AL    @07,IXPAG                                           1086 10734000
         L     @00,BLDIREND                                        1086 10735000
         CR    @00,@07                                             1086 10736000
         BNH   *+6                                                      10737000
         LR    @00,@07                                             1086 10738000
         ST    @00,IXLAST                                          1086 10739000
*     DO IXAD=NA5BLDIR+INDEX TO IXLAST BY 4 WHILE(IXAD->NPA5BPTR>0);    10740000
         ST    @08,IXAD                                            1087 10741000
         B     @DE01087                                            1087 10742000
@DL01087 ICM   @07,15,NPA5BPTR(@08)                                1087 10743000
         BNP   @DC01087                                            1087 10744000
*                                   /* SCAN THIS PAGE FOR AN UNUSED     10745000
*                                      ENTRY                         */ 10746000
*     END;                          /* END OF SCAN LOOP              */ 10747000
         AH    @08,@CH00058                                        1088 10748000
         ST    @08,IXAD                                            1088 10749000
@DE01087 C     @08,IXLAST                                          1088 10750000
         BNH   @DL01087                                            1088 10751000
@DC01087 DS    0H                                                  1089 10752000
*     IF IXAD>IXLAST THEN           /* WAS ENTRY FOUND               */ 10753000
         CLC   IXAD(4),IXLAST                                      1089 10754000
         BNH   @RF01089                                            1089 10755000
*       DO IXAD=NA5BLDIR TO BLDIREND BY 4 WHILE(IXAD->NPA5BPTR>0);/*    10756000
*                                      NO, SCAN ENTIRE DIRECTORY FOR    10757000
*                                      AN UNUSED ENTRY               */ 10758000
         L     @08,NA5BLDIR                                        1090 10759000
         ST    @08,IXAD                                            1090 10760000
         B     @DE01090                                            1090 10761000
@DL01090 ICM   @07,15,NPA5BPTR(@08)                                1090 10762000
         BNP   @DC01090                                            1090 10763000
*       END;                        /* END OF FULL SCAN              */ 10764000
         AH    @08,@CH00058                                        1091 10765000
         ST    @08,IXAD                                            1091 10766000
@DE01090 C     @08,BLDIREND                                        1091 10767000
         BNH   @DL01090                                            1091 10768000
@DC01090 DS    0H                                                  1092 10769000
*     INDEX=IXAD-NA5BLDIR;          /* CALCULATE OFFSET INTO INDEX 1092 10770000
*                                      TABLE                         */ 10771000
@RF01089 L     @08,IXAD                                            1092 10772000
         LR    @07,@08                                             1092 10773000
         SL    @07,NA5BLDIR                                        1092 10774000
         ST    @07,INDEX                                           1092 10775000
*     LPDECHN=NVTLVIRT+INDEX*10;    /* CALCULATE ADDRESS OF        1093 10776000
*                                      CORRESPONDING SLOT            */ 10777000
         MH    @07,@CH03109                                        1093 10778000
         AL    @07,NVTLVIRT(,RNVT)                                 1093 10779000
         ST    @07,LPDECHN(,LPDEPTR)                               1093 10780000
*     LPDEPTR=LPDECHN;              /* SET UP DSECT BASE             */ 10781000
         LR    LPDEPTR,@07                                         1094 10782000
*     LPDE=INFOPTR->LPDE;           /* COPY LPDE TO SLOT             */ 10783000
         L     @07,INFOPTR                                         1095 10784000
         MVC   LPDE(40,LPDEPTR),LPDE(@07)                          1095 10785000
*     IXAD->NPA5BPTR=1;             /* SET INDEX VALUE TO NON-ZERO 1096 10786000
*                                      VALUE                         */ 10787000
         MVC   NPA5BPTR(4,@08),@CF00264                            1096 10788000
*   END;                            /* END OF PROCESSING FOR THIS  1097 10789000
*                                      LPDE - LOOP TILL END OF     1097 10790000
*                                      SYNONYM QUEUE                 */ 10791000
@DE01076 L     @08,LPDECHN(,LPDEPTR)                               1097 10792000
         N     @08,@CF00134                                        1097 10793000
         LTR   @08,@08                                             1097 10794000
         BNZ   @DL01076                                            1097 10795000
*   RETURN;                         /* RETURN TO CALLER              */ 10796000
         B     @EL00010                                            1098 10797000
*   RESPECIFY                                                      1099 10798000
*    (LPDEPTR) UNRESTRICTED;                                       1099 10799000
*   END NPA5RBLK;                                                  1100 10800000
         B     @EL00010                                            1100 10801000
@PB00010 DS    0H                                                  1101 10802000
*   GENERATE NOREFS NOSETS(EJECT);                                 1101 10803000
*                                                                  1101 10804000
         EJECT                                                          10805000
*/********************************************************************/ 10806000
*/*                                                                  */ 10807000
*/*         SUBROUTINE NPA5MLOD                                      */ 10808000
*/*                                                                  */ 10809000
*/*         FUNCTION - SET UP TO LOAD A MODULE INTO THE LINK PACK    */ 10810000
*/*            AREA BY RECONSTRUCTING THE BLDL ENTRY DESCRIBING      */ 10811000
*/*            IT FROM THE BLDL INFORMATION TABLE                    */ 10812000
*/*                                                                  */ 10813000
*/*         INPUT - POINTER TO INFO TABLE ENTRY (INFOPTR)            */ 10814000
*/*                                                                  */ 10815000
*/*         OUTPUT - THE MODULE LOADED IN THE LPA, AND ITS BLDL      */ 10816000
*/*            INFO TABLE ENTRY REPLACED WITH ITS LPDE               */ 10817000
*/*                                                                  */ 10818000
*/********************************************************************/ 10819000
*                                                                  1102 10820000
*NPA5MLOD:                          /* NPA5MLOD ENTRY PT             */ 10821000
*   PROCEDURE OPTIONS(NOSAVE(RLDADDR));                            1102 10822000
         B     @PB00011                                            1102 10823000
NPA5MLOD STM   @14,@03,@SA00011                                    1102 10824000
         STM   @05,@12,@SA00011+24                                 1102 10825000
*   RESPECIFY                                                      1103 10826000
*    (PDS2PTR,                                                     1103 10827000
*     PDSPTRV,                                                     1103 10828000
*     RLDADDR) RESTRICTED;                                         1103 10829000
*   PDS2PTR=ADDR(BLDLPDS);          /* POINT TO BLDL AREA            */ 10830000
         L     @06,BLDLSAV                                         1104 10831000
         LA    PDS2PTR,BLDLPDS(,@06)                               1104 10832000
*   NVTCSLNM=PDS2PTR;               /* POINT NVT TO BLDL ENTRY SO  1105 10833000
*                                      NAME OF MODULE BEING LOADED 1105 10834000
*                                      CAN BE FOUND                  */ 10835000
         ST    PDS2PTR,NVTCSLNM(,RNVT)                             1105 10836000
*   BLDLPDS=BLDLPDS&&BLDLPDS;       /* CLEAR BLDL AREA               */ 10837000
*                                                                  1106 10838000
         XC    BLDLPDS(60,@06),BLDLPDS(@06)                        1106 10839000
*   /*****************************************************************/ 10840000
*   /*                                                               */ 10841000
*   /* RECONSTRUCT THE BLDL ENTRY                                    */ 10842000
*   /*                                                               */ 10843000
*   /*****************************************************************/ 10844000
*                                                                  1107 10845000
*   PDS2NAME=INFNAME;               /* MODULE NAME                   */ 10846000
         L     @06,INFOPTR                                         1107 10847000
         MVC   PDS2NAME(8,PDS2PTR),INFNAME(@06)                    1107 10848000
*   PDS2TTRP=INFTTRP;               /* TTR OF FIRST BLOCK            */ 10849000
         L     @06,INFOPTR                                         1108 10850000
         MVC   PDS2TTRP(3,PDS2PTR),INFTTRP(@06)                    1108 10851000
*   PDS2INDC='2C'X;                 /* LENGTH OF USER DATA AND FLAGS */ 10852000
         MVI   PDS2INDC(PDS2PTR),X'2C'                             1109 10853000
*   PDS2RENT='1'B;                  /* REENTRANT                     */ 10854000
*   PDS2REUS='1'B;                  /* REUSABLE                      */ 10855000
         OI    PDS2RENT(PDS2PTR),B'11000000'                       1111 10856000
*   PDS2TTRT=INFTTRT;               /* TTR OF FIRST TXT              */ 10857000
         L     @06,INFOPTR                                         1112 10858000
         MVC   PDS2TTRT(3,PDS2PTR),INFTTRT(@06)                    1112 10859000
*   IF INFLOAD='1'B THEN            /* TEST LOAD FLAG                */ 10860000
         L     @06,INFOPTR                                         1113 10861000
         TM    INFLOAD(@06),B'00100000'                            1113 10862000
         BNO   @RF01113                                            1113 10863000
*     PDS2LOAD='1'B;                /* ONLY LOADABLE                 */ 10864000
         OI    PDS2LOAD(PDS2PTR),B'00001000'                       1114 10865000
*   IF INFEXEC='1'B THEN            /* TEST EXEC FLAG                */ 10866000
@RF01113 L     @06,INFOPTR                                         1115 10867000
         TM    INFEXEC(@06),B'00010000'                            1115 10868000
         BNO   @RF01115                                            1115 10869000
*     PDS2EXEC='1'B;                /* EXECUTABLE MODULE             */ 10870000
         OI    PDS2EXEC(PDS2PTR),B'00000010'                       1116 10871000
*   IF INF1BLK='1'B THEN            /* TEST 1BLK FLAG                */ 10872000
@RF01115 L     @06,INFOPTR                                         1117 10873000
         TM    INF1BLK(@06),B'00001000'                            1117 10874000
         BNO   @RF01117                                            1117 10875000
*     PDS21BLK='1'B;                /* ONLY ONE TXT BLOCK            */ 10876000
         OI    PDS21BLK(PDS2PTR),B'00000001'                       1118 10877000
*   IF INFORG0='1'B THEN            /* TEST ORG0 FLAG                */ 10878000
@RF01117 L     @06,INFOPTR                                         1119 10879000
         TM    INFORG0(@06),B'00010000'                            1119 10880000
         BNO   @RF01119                                            1119 10881000
*     PDS2ORG0='1'B;                /* 1ST TXT ORIGIN = 0            */ 10882000
         OI    PDS2ORG0(PDS2PTR),B'01000000'                       1120 10883000
*   IF INFEPA=0 THEN                /* TEST FOR 0 ORIGIN             */ 10884000
@RF01119 L     @06,INFOPTR                                         1121 10885000
         ICM   @05,7,INFEPA(@06)                                   1121 10886000
         BNZ   @RF01121                                            1121 10887000
*     PDS2EP0='1'B;                 /* MOD ORIGIN = 0                */ 10888000
         OI    PDS2EP0(PDS2PTR),B'00100000'                        1122 10889000
*   IF INFNRLD='1'B THEN            /* TEST NRLD FLAG                */ 10890000
@RF01121 L     @06,INFOPTR                                         1123 10891000
         TM    INFNRLD(@06),B'00000100'                            1123 10892000
         BNO   @RF01123                                            1123 10893000
*     PDS2NRLD='1'B;                /* NO RLD ITEMS                  */ 10894000
         OI    PDS2NRLD(PDS2PTR),B'00010000'                       1124 10895000
*   IF INFREFR='1'B THEN            /* TEST REFR FLAG                */ 10896000
@RF01123 L     @06,INFOPTR                                         1125 10897000
         TM    INFREFR(@06),B'00000010'                            1125 10898000
         BNO   @RF01125                                            1125 10899000
*     PDS2REFR='1'B;                /* REFRESHABLE MODULE            */ 10900000
         OI    PDS2REFR(PDS2PTR),B'00000001'                       1126 10901000
*   PDS2STOR=INFSTOR;               /* MODULE SIZE                   */ 10902000
@RF01125 L     @06,INFOPTR                                         1127 10903000
         MVC   PDS2STOR(3,PDS2PTR),INFSTOR(@06)                    1127 10904000
*   PDS2FTBL=INFFTBL;               /* 1ST BLOCK LENGTH              */ 10905000
         L     @06,INFOPTR                                         1128 10906000
         MVC   PDS2FTBL(2,PDS2PTR),INFFTBL(@06)                    1128 10907000
*   PDS2EPA=INFEPA;                 /* ENTRY POINT ADDRESS           */ 10908000
         L     @06,INFOPTR                                         1129 10909000
         MVC   PDS2EPA(3,PDS2PTR),INFEPA(@06)                      1129 10910000
*   IF INFAOSLE='1'B THEN           /* TEST AOSLE FLAG               */ 10911000
         L     @06,INFOPTR                                         1130 10912000
         TM    INFAOSLE(@06),B'00000001'                           1130 10913000
         BNO   @RF01130                                            1130 10914000
*     DO;                           /* AOS LE - SPECIAL              */ 10915000
*       PDSAOSLE='1'B;              /* AOS LINKAGE EDITOR            */ 10916000
         OI    PDSAOSLE(PDS2PTR),B'10000000'                       1132 10917000
*       IF INFAPFLG='1'B THEN       /* TEST FOR APF INFO             */ 10918000
         L     @06,INFOPTR                                         1133 10919000
         TM    INFAPFLG(@06),B'00100000'                           1133 10920000
         BNO   @RF01133                                            1133 10921000
*         DO;                       /* PUT IN APF DATA               */ 10922000
*           PDSAPFLG='1'B;          /* SET APF FLAG                  */ 10923000
         OI    PDSAPFLG(PDS2PTR),B'00001000'                       1135 10924000
*           PDSPTRV=ADDR(PDSBCEND); /* POINT PAST BASIC SECTION      */ 10925000
         LA    PDSPTRV,PDSBCEND(,PDS2PTR)                          1136 10926000
*           PDSAPF=INFAPF;          /* PUT IN APF DATA               */ 10927000
         L     @06,INFOPTR                                         1137 10928000
         MVC   PDSAPF(2,PDSPTRV),INFAPF(@06)                       1137 10929000
*         END;                                                     1138 10930000
*       IF INFPAGA='1'B THEN        /* TEST PAGA FLAG                */ 10931000
@RF01133 L     @06,INFOPTR                                         1139 10932000
         TM    INFPAGA(@06),B'01000000'                            1139 10933000
         BNO   @RF01139                                            1139 10934000
*         PDS2PAGA='1'B;            /* PAGE ALIGNED MODULE           */ 10935000
         OI    PDS2PAGA(PDS2PTR),B'00100000'                       1140 10936000
*     END;                                                         1141 10937000
*                                                                  1141 10938000
@RF01139 DS    0H                                                  1142 10939000
*   /*****************************************************************/ 10940000
*   /*                                                               */ 10941000
*   /* CALCULATE SIZE TO BE FREEMAINED (AND RECLAIMED, IF NECESSARY) */ 10942000
*   /*                                                               */ 10943000
*   /*****************************************************************/ 10944000
*                                                                  1142 10945000
*   FMSIZE=(PDS2STOR+7)&ROUNDDWD;   /* ROUND SIZE UP TO DOUBLEWORD 1142 10946000
*                                      MULT                          */ 10947000
@RF01130 LA    @06,7                                               1142 10948000
         SLR   @05,@05                                             1142 10949000
         ICM   @05,7,PDS2STOR(PDS2PTR)                             1142 10950000
         ALR   @06,@05                                             1142 10951000
         N     @06,@CF00121                                        1142 10952000
         ST    @06,FMSIZE                                          1142 10953000
*   SIZESAVE=0;                     /* NOTHING TO RECLAIM            */ 10954000
         SLR   @05,@05                                             1143 10955000
         ST    @05,SIZESAVE                                        1143 10956000
*   NEXTADDR=RLDADDR+FMSIZE;        /* ADDRESS PAST MOD              */ 10957000
         ALR   @06,RLDADDR                                         1144 10958000
         ST    @06,NEXTADDR                                        1144 10959000
*   IF((NEXTADDR-1)&ROUNDPAG)¬=(RLDADDR&ROUNDPAG) THEN/* DOES MODULE    10960000
*                                      CROSS A PAGE BOUNDARY         */ 10961000
         LH    @15,@CH00123                                        1145 10962000
         BCTR  @06,0                                               1145 10963000
         NR    @06,@15                                             1145 10964000
         LR    @00,RLDADDR                                         1145 10965000
         NR    @00,@15                                             1145 10966000
         CLR   @06,@00                                             1145 10967000
         BE    @RF01145                                            1145 10968000
*     DO;                           /* YES, MUST ADJUST              */ 10969000
*       NEXTADDR=(RLDADDR+PAGEM1)&ROUNDPAG;/* CALCULATE ADDRESS OF 1147 10970000
*                                      NXT PAGE                      */ 10971000
         LA    @06,4095                                            1147 10972000
         ALR   @06,RLDADDR                                         1147 10973000
         NR    @06,@15                                             1147 10974000
         ST    @06,NEXTADDR                                        1147 10975000
*       WASTE=NEXTADDR-RLDADDR;     /* CALCULATE WASTED SPACE IF   1148 10976000
*                                      MODULE MOVED                  */ 10977000
         SLR   @06,RLDADDR                                         1148 10978000
         ST    @06,WASTE                                           1148 10979000
*       IF WASTE¬=PAGE&WASTE¬=0 THEN/* TEST FOR USELESS MOVE OF    1149 10980000
*                                      MODULE                        */ 10981000
         CH    @06,@CH00044                                        1149 10982000
         BE    @RF01149                                            1149 10983000
         CR    @06,@05                                             1149 10984000
         BE    @RF01149                                            1149 10985000
*         DO;                       /* MODULE MUST MOVE              */ 10986000
*           WASTEADR=RLDADDR;       /* ADDRESS OF WASTED SPACE       */ 10987000
         ST    RLDADDR,WASTEADR                                    1151 10988000
*           CALL NPA5WAST;          /* ADD SPACE TO QUEUE            */ 10989000
         BAL   @14,NPA5WAST                                        1152 10990000
*           RLDADDR=NEXTADDR;       /* CHANGE LOAD ADDRESS           */ 10991000
         L     RLDADDR,NEXTADDR                                    1153 10992000
*         END;                      /*                               */ 10993000
*       IF FMSIZE>=PAGE THEN        /* IS MODULE AT LEAST A PAGE IN     10994000
*                                      LENGTH                        */ 10995000
@RF01149 L     @06,FMSIZE                                          1155 10996000
         LH    @05,@CH00044                                        1155 10997000
         CR    @06,@05                                             1155 10998000
         BL    @RF01155                                            1155 10999000
*         DO;                       /* YES, SPECIAL LOAD             */ 11000000
*           SIZESAVE=PAGE-FMSIZE&OVERPAG;/* CALCULATE EXCESS IN LAST    11001000
*                                      PAGE                          */ 11002000
         LCR   @06,@06                                             1157 11003000
         ALR   @06,@05                                             1157 11004000
         N     @06,@CF00127                                        1157 11005000
         ST    @06,SIZESAVE                                        1157 11006000
*           IF SIZESAVE=PAGE THEN   /* TEST FOR WASTE OF A FULL PAGE */ 11007000
         CR    @06,@05                                             1158 11008000
         BNE   @RF01158                                            1158 11009000
*             SIZESAVE=0;           /* YES, NO WASTE                 */ 11010000
         SLR   @06,@06                                             1159 11011000
         ST    @06,SIZESAVE                                        1159 11012000
*           FMSIZE=FMSIZE+SIZESAVE; /* CALCULATE TOTAL SPACE TO BE 1160 11013000
*                                      FREEMAINED - THE AMOUNT IN  1160 11014000
*                                      SIZESAVE WILL BE RECLAIMED  1160 11015000
*                                      IMMEDIATELY AFTER THE MODULE     11016000
*                                      IS LOADED                     */ 11017000
@RF01158 L     @06,FMSIZE                                          1160 11018000
         AL    @06,SIZESAVE                                        1160 11019000
         ST    @06,FMSIZE                                          1160 11020000
*           PDS2PAGA='1'B;          /* SET PAGE ALIGN FLAG           */ 11021000
         OI    PDS2PAGA(PDS2PTR),B'00100000'                       1161 11022000
*         END;                                                     1162 11023000
*       NEXTADDR=RLDADDR+FMSIZE-SIZESAVE;/* CALC NEXT MOD STARTING 1163 11024000
*                                      ADDRESS                       */ 11025000
@RF01155 LR    @06,RLDADDR                                         1163 11026000
         AL    @06,FMSIZE                                          1163 11027000
         SL    @06,SIZESAVE                                        1163 11028000
         ST    @06,NEXTADDR                                        1163 11029000
*     END;                                                         1164 11030000
*                                                                  1164 11031000
*   /*****************************************************************/ 11032000
*   /*                                                               */ 11033000
*   /* LOAD SPECIFIED MODULE AND CONVERT BLDL INFORMATION TABLE ENTRY*/ 11034000
*   /* TO A LINK PACK DIRECTORY ENTRY                                */ 11035000
*   /*                                                               */ 11036000
*   /*****************************************************************/ 11037000
*                                                                  1165 11038000
*   CALL NPA5LODM;                  /* LOAD MODULE                   */ 11039000
@RF01145 BAL   @14,NPA5LODM                                        1165 11040000
*   RLDADDR=NEXTADDR;               /* UPDATE LOAD ADDRESS           */ 11041000
         L     RLDADDR,NEXTADDR                                    1166 11042000
*   RETURN;                         /* RETURN TO CALLER              */ 11043000
@EL00011 DS    0H                                                  1167 11044000
@EF00011 DS    0H                                                  1167 11045000
@ER00011 LM    @14,@03,@SA00011                                    1167 11046000
         LM    @05,@12,@SA00011+24                                 1167 11047000
         BR    @14                                                 1167 11048000
*   RESPECIFY                                                      1168 11049000
*    (PDS2PTR,                                                     1168 11050000
*     PDSPTRV,                                                     1168 11051000
*     RLDADDR) UNRESTRICTED;                                       1168 11052000
*   GENERATE NOREFS NOSETS(EJECT);                                 1169 11053000
*                                                                  1169 11054000
         EJECT                                                          11055000
*/********************************************************************/ 11056000
*/*                                                                  */ 11057000
*/*         SUBROUTINE NPA5RCLM                                      */ 11058000
*/*                                                                  */ 11059000
*/*         FUNCTION - RECLAIM WASTED SPACE TO LOAD A MODULE         */ 11060000
*/*                                                                  */ 11061000
*/*         INPUT - SIZE OF MODULE TO BE LOADED (FMSIZE)             */ 11062000
*/*            WASTED SPACE TABLE (NPA5WLST)                         */ 11063000
*/*                                                                  */ 11064000
*/*         OUTPUT - ADDRESS OF SPACE TO BE USED (RLDADDR) IF FOUND  */ 11065000
*/*                                                                  */ 11066000
*/********************************************************************/ 11067000
*                                                                  1170 11068000
*NPA5RCLM:                          /* NPA5RCLM ENTRY PT             */ 11069000
*   ENTRY;                          /* BEGINNING OF SUBR             */ 11070000
         B     @EC01170                                            1170 11071000
NPA5RCLM STM   @14,@03,@SA00011                                    1170 11072000
         STM   @05,@12,@SA00011+24                                 1170 11073000
@EC01170 DS    0H                                                  1171 11074000
*   RESPECIFY                                                      1171 11075000
*    (RLDADDR) RESTRICTED;          /*                               */ 11076000
*                                                                  1171 11077000
*   /*****************************************************************/ 11078000
*   /*                                                               */ 11079000
*   /* SEARCH THE QUEUES OF WASTED SPACE FOR A PLACE TO PUT THE      */ 11080000
*   /* MODULE                                                        */ 11081000
*   /*                                                               */ 11082000
*   /*****************************************************************/ 11083000
*                                                                  1172 11084000
*   DO INDEX=1 TO DIM(NPA5WLST)-1 WHILE(RLDADDR=0);/* LOOP UNTIL   1172 11085000
*                                      FOUND                         */ 11086000
         LA    @08,1                                               1172 11087000
         ST    @08,INDEX                                           1172 11088000
@DL01172 LTR   RLDADDR,RLDADDR                                     1172 11089000
         BNZ   @DC01172                                            1172 11090000
*     IF FMSIZE<NPA5WSIZ(INDEX+1) THEN/* WOULD THE MODULE FIT IN THE    11091000
*                                      SPACE REPRESENTED BY THIS   1173 11092000
*                                      QUEUE                         */ 11093000
         SLA   @08,3                                               1173 11094000
         L     @05,FMSIZE                                          1173 11095000
         C     @05,NPA5WSIZ(@08)                                   1173 11096000
         BNL   @RF01173                                            1173 11097000
*       DO;                         /* YES, SEE IF THERE ARE ANY   1174 11098000
*                                      USEABLE ENTRIES IN THIS QUEUE */ 11099000
*         LASTPTR=ADDR(NPA5WQNE(INDEX));/* POINT TO QUEUE HEADER     */ 11100000
         LA    @08,NPA5WQNE-8(@08)                                 1175 11101000
         ST    @08,LASTPTR                                         1175 11102000
*         WASTPTR=LASTPTR->WASTNEXT;/* PICK UP ADDRESS OF FIRST BLOCK   11103000
*                                      ON Q                          */ 11104000
         MVC   WASTPTR(4),WASTNEXT(@08)                            1176 11105000
*         DO WHILE(WASTPTR¬=0&WASTSIZE<FMSIZE);/* SEARCH THE QUEUE 1177 11106000
*                                      FOR AN AREA LARGE ENOUGH TO 1177 11107000
*                                      CONTAIN THE MODULE            */ 11108000
         B     @DE01177                                            1177 11109000
@DL01177 DS    0H                                                  1178 11110000
*           LASTPTR=WASTPTR;        /* SAVE ADDRESS OF CURRENT BLOCK */ 11111000
         L     @08,WASTPTR                                         1178 11112000
         ST    @08,LASTPTR                                         1178 11113000
*           WASTPTR=WASTNEXT;       /* PICK UP ADDRESS OF NEXT BLOCK */ 11114000
         L     @08,WASTNEXT(,@08)                                  1179 11115000
         ST    @08,WASTPTR                                         1179 11116000
*         END;                      /* END OF SEARCH LOOP            */ 11117000
@DE01177 L     @08,WASTPTR                                         1180 11118000
         LTR   @08,@08                                             1180 11119000
         BZ    @DC01177                                            1180 11120000
         L     @08,WASTSIZE(,@08)                                  1180 11121000
         C     @08,FMSIZE                                          1180 11122000
         BL    @DL01177                                            1180 11123000
@DC01177 DS    0H                                                  1181 11124000
*         IF WASTPTR¬=0 THEN        /* WAS AN AREA FOUND             */ 11125000
         L     @08,WASTPTR                                         1181 11126000
         LTR   @08,@08                                             1181 11127000
         BZ    @RF01181                                            1181 11128000
*           DO;                     /* YES, USE IT                   */ 11129000
*             LASTPTR->WASTNEXT=WASTNEXT;/* REMOVE THE BLOCK FROM THE   11130000
*                                      QUEUE                         */ 11131000
         L     @05,LASTPTR                                         1183 11132000
         MVC   WASTNEXT(4,@05),WASTNEXT(@08)                       1183 11133000
*             WASTE=WASTSIZE-FMSIZE;/* CALCULATE THE AMOUNT OF     1184 11134000
*                                      UNNEEDED SPACE IN THE AREA    */ 11135000
         L     @05,WASTSIZE(,@08)                                  1184 11136000
         SL    @05,FMSIZE                                          1184 11137000
         ST    @05,WASTE                                           1184 11138000
*             WASTEADR=WASTAREA;    /* CALCULATE THE ADDRESS OF THE     11139000
*                                      WASTED SPACE                  */ 11140000
         L     @15,WASTAREA(,@08)                                  1185 11141000
         ST    @15,WASTEADR                                        1185 11142000
*             RLDADDR=WASTAREA+WASTE;/* CALCULATE THE ADDRESS OF   1186 11143000
*                                      WHERE THE MODULE WILL BE    1186 11144000
*                                      LOADED                        */ 11145000
         ALR   @15,@05                                             1186 11146000
         LR    RLDADDR,@15                                         1186 11147000
*             WASTNEXT=NPA5FQHD;    /* ADD THE WASTED SPACE CONTROL     11148000
*                                      BLOCK TO THE START OF THE   1187 11149000
*                                      QUEUE OF AVAILABLE CONTROL  1187 11150000
*                                      BLOCKS                        */ 11151000
         MVC   WASTNEXT(4,@08),NPA5FQHD                            1187 11152000
*             NPA5FQHD=WASTPTR;     /* PUT THE ADDRESS OF THE BLOCK     11153000
*                                      INTO THE QUEUE HEADER         */ 11154000
*                                                                  1188 11155000
         ST    @08,NPA5FQHD                                        1188 11156000
*             /*******************************************************/ 11157000
*             /*                                                     */ 11158000
*             /* ADD THE UNNEEDED SPACE BACK TO THE WASTED SPACE     */ 11159000
*             /* QUEUES                                              */ 11160000
*             /*                                                     */ 11161000
*             /*******************************************************/ 11162000
*                                                                  1189 11163000
*             CALL NPA5WAST;        /* QUEUE THE SPACE               */ 11164000
         BAL   @14,NPA5WAST                                        1189 11165000
*           END;                                                   1190 11166000
*       END;                                                       1191 11167000
@RF01181 DS    0H                                                  1192 11168000
*   END;                            /* END OF SCAN LOOP              */ 11169000
@RF01173 LA    @08,1                                               1192 11170000
         AL    @08,INDEX                                           1192 11171000
         ST    @08,INDEX                                           1192 11172000
         CH    @08,@CH03233                                        1192 11173000
         BNH   @DL01172                                            1192 11174000
@DC01172 DS    0H                                                  1193 11175000
*   RETURN;                         /* RETURN TO CALLER              */ 11176000
         B     @EL00011                                            1193 11177000
*   RESPECIFY                                                      1194 11178000
*    (RLDADDR) UNRESTRICTED;                                       1194 11179000
*   END NPA5MLOD;                   /* END OF SUBROUTINE             */ 11180000
@PB00011 DS    0H                                                  1196 11181000
*   GENERATE NOREFS NOSETS(EJECT);                                 1196 11182000
*                                                                  1196 11183000
         EJECT                                                          11184000
*/********************************************************************/ 11185000
*/*                                                                  */ 11186000
*/*         SUBROUTINE NPA5LODM                                      */ 11187000
*/*                                                                  */ 11188000
*/*         FUNCTION - LOAD A MODULE INTO THE LINK PACK AREA AND     */ 11189000
*/*            CONVERT THE BLDL INFO ENTRY TO AN LPDE                */ 11190000
*/*                                                                  */ 11191000
*/*         INPUT - MODULE SIZE (FMSIZE), MODULE LOAD ADDRESS        */ 11192000
*/*            (RLDADDR), ADDRESS OF SYS1.LPALIB DCB (DCBPTR),       */ 11193000
*/*            BLDL ENTRY (BLDLPDS), SIZE TO BE RECLAIMED (SIZESAVE) */ 11194000
*/*                                                                  */ 11195000
*/*         OUTPUT - MODULE LOADED, LPDE IN PLACE OF INFO ENTRY      */ 11196000
*/*                                                                  */ 11197000
*/********************************************************************/ 11198000
*                                                                  1197 11199000
*NPA5LODM:                          /* NPA5LODM ENTRY PT             */ 11200000
*   PROCEDURE;                      /* BEGINNING OF SUBR             */ 11201000
         B     @PB00012                                            1197 11202000
NPA5LODM STM   @14,@12,@SA00012                                    1197 11203000
*   RESPECIFY                                                      1198 11204000
*    (RPARM0,                                                      1198 11205000
*     DCBPTR1,                                                     1198 11206000
*     RLDADDR) RESTRICTED;                                         1198 11207000
*   FMSIZESP=SPFC;                  /* APPEND SUBPOOL ID TO SIZE OF     11208000
*                                      MODULE                        */ 11209000
         MVI   FMSIZESP,X'FC'                                      1199 11210000
*   RPARM0=FMSIZE;                  /* SET UP REG 0                  */ 11211000
         L     RPARM0,FMSIZE                                       1200 11212000
*   GENERATE REFS(RPARM0,RLDADDR) SETS(RPARM)                      1201 11213000
*       (FREEMAIN R,LV=(0),A=(RLDADDR));/* FREE SPACE                */ 11214000
         FREEMAIN R,LV=(0),A=(RLDADDR)                                  11215000
*   DCBPTR1=DCBPTR;                 /* SET DCB PTR                   */ 11216000
         L     DCBPTR1,DCBPTR                                      1202 11217000
*   RPARM=ADDR(BLDLPDS);            /* SET UP REG 1                  */ 11218000
         L     RPARM,BLDLSAV                                       1203 11219000
         LA    RPARM,BLDLPDS(,RPARM)                               1203 11220000
*   GENERATE REFS(RPARM,DCBPTR1) SETS(RPARM0,RPARM)                1204 11221000
*       (LOAD  DE=(RPARM),DCB=(DCBPTR1));/* LOAD MODULE              */ 11222000
         LOAD  DE=(RPARM),DCB=(DCBPTR1)                                 11223000
*   IF SIZESAVE>0 THEN              /* MUST SPACE BE RECLAIMED       */ 11224000
         L     @08,SIZESAVE                                        1205 11225000
         LTR   @08,@08                                             1205 11226000
         BNP   @RF01205                                            1205 11227000
*     DO;                           /* YES, GET IT BACK              */ 11228000
*       FMSIZE=SIZESAVE;            /* SET UP GM SIZE                */ 11229000
         ST    @08,FMSIZE                                          1207 11230000
*       FMSIZESP=SPFC;              /* PUT IN SUBPOOL ID             */ 11231000
         MVI   FMSIZESP,X'FC'                                      1208 11232000
*       RPARM0=FMSIZE;              /* SET UP REG 0                  */ 11233000
         L     RPARM0,FMSIZE                                       1209 11234000
*       GENERATE REFS(RPARM0) SETS(RPARM)(GETMAIN R,LV=(0));/* GET 1210 11235000
*                                      BACK SPACE                    */ 11236000
         GETMAIN R,LV=(0)                                               11237000
*     END;                                                         1211 11238000
*   RESPECIFY                                                      1212 11239000
*    (PGOUTST,                                                     1212 11240000
*     PGOUTEND) RESTRICTED;                                        1212 11241000
*                                                                  1212 11242000
@RF01205 DS    0H                                                  1213 11243000
*   /*****************************************************************/ 11244000
*   /*                                                               */ 11245000
*   /* NEXT INSTRUCTIONS DETERMINE IF THE PLPA SHOULD BE PAGED OUT.  */ 11246000
*   /* TO CREATE OVERLAP BETWEEN PAGING AND LOADING IT IS DONE EVERY */ 11247000
*   /* 18000 HEX BYTES.                                              */ 11248000
*   /*                                                               */ 11249000
*   /*****************************************************************/ 11250000
*                                                                  1213 11251000
*   IF NVTLVIRT<NXTPGOUT THEN                                      1213 11252000
         L     @14,NXTPGOUT                                        1213 11253000
         C     @14,NVTLVIRT(,RNVT)                                 1213 11254000
         BNH   @RF01213                                            1213 11255000
*     DO;                           /* 18000 HEX BYTES SINCE LAST  1214 11256000
*                                      PGOUT - PAGE OUT THIS AREA    */ 11257000
*       PGOUTST=NXTPGOUT;           /* PGOUT START (LOW) ADDRESS     */ 11258000
         LR    PGOUTST,@14                                         1215 11259000
*       PGOUTEND=LSTPGOUT;          /* PGOUT END (HIGH) ADDRESS      */ 11260000
         L     PGOUTEND,LSTPGOUT                                   1216 11261000
*       LSTPGOUT=PGOUTST;           /* SETTUP HIGH ADDRESS FOR NEXT     11262000
*                                      PGOUT                         */ 11263000
         ST    PGOUTST,LSTPGOUT                                    1217 11264000
*       NXTPGOUT=PGOUTST-PGCRIT;    /* SETTUP LOW ADDRESS OF NEXT  1218 11265000
*                                      PGOUT                         */ 11266000
         LR    @14,PGOUTST                                         1218 11267000
         SL    @14,PGCRIT                                          1218 11268000
         ST    @14,NXTPGOUT                                        1218 11269000
*       GENERATE REFS(PGOUTST,PGOUTEND) SETS(RENTRY)               1219 11270000
*           (PGOUT R,A=(1),EA=(15));/* R1=START R15=END              */ 11271000
         PGOUT R,A=(1),EA=(15)                                          11272000
*       IF RENTRY¬=0 THEN           /* WAS THERE A PAGING ERROR      */ 11273000
         LTR   RENTRY,RENTRY                                       1220 11274000
         BZ    @RF01220                                            1220 11275000
*         CALL NPA5CERR(PGOUTERR);  /* YES - LOAD WAIT CODE          */ 11276000
         LA    @01,@AL01221                                        1221 11277000
         BAL   @14,NPA5CERR                                        1221 11278000
*       ELSE                                                       1222 11279000
*         ;                                                        1222 11280000
@RF01220 DS    0H                                                  1223 11281000
*       CALL NP5WTPAG;              /* WAIT FOR PAGE I/O TO COMP     */ 11282000
         BAL   @14,NP5WTPAG                                        1223 11283000
*     END;                                                         1224 11284000
*                                                                  1224 11285000
*   /*****************************************************************/ 11286000
*   /*                                                               */ 11287000
*   /* CONVERT BLDL INFORMATION TABLE ENTRY TO LPDE                  */ 11288000
*   /*                                                               */ 11289000
*   /*****************************************************************/ 11290000
*                                                                  1225 11291000
*   CALL NPA5CLPD;                  /* CONVERT TO LPDE               */ 11292000
@RF01213 BAL   @14,NPA5CLPD                                        1225 11293000
*   RETURN;                         /* RETURN TO CALLER              */ 11294000
@EL00012 DS    0H                                                  1226 11295000
@EF00012 DS    0H                                                  1226 11296000
@ER00012 LM    @14,@12,@SA00012                                    1226 11297000
         BR    @14                                                 1226 11298000
*   RESPECIFY                                                      1227 11299000
*    (RPARM0,                                                      1227 11300000
*     DCBPTR1) UNRESTRICTED;                                       1227 11301000
*   END NPA5LODM;                   /* END OF SUBROUTINE             */ 11302000
@PB00012 DS    0H                                                  1229 11303000
*   GENERATE NOREFS NOSETS(EJECT);                                 1229 11304000
         EJECT                                                          11305000
*NP5WTPAG:                          /* WAIT FOR PGOUT TO COMPLTE     */ 11306000
*   PROC;                                                          1230 11307000
         B     @PB00013                                            1230 11308000
NP5WTPAG STM   @14,@12,@SA00013                                    1230 11309000
*   RESPECIFY                                                      1231 11310000
*    (SRBPTR,                                                      1231 11311000
*     XSRBPTR,                                                     1231 11312000
*     ASMVTPTR,                                                    1231 11313000
*     RPARM0,                                                      1231 11314000
*     RPARM) RESTRICTED;                                           1231 11315000
*   ASMVTPTR=CVTASMVT;              /* GET PTR TO ASMVT              */ 11316000
         L     @14,CVTPTR                                          1232 11317000
         L     ASMVTPTR,CVTASMVT(,@14)                             1232 11318000
*   RPARM0=NIPSRB;                  /* SET SP AND LEN FOR SRB        */ 11319000
         L     RPARM0,NIPSRB                                       1233 11320000
*   GENERATE REFS(RPARM0) SETS(RPARM)(GETMAIN R,LV=(RPARM0));/* GET     11321000
*                                      AREA FOR SRB SP245            */ 11322000
         GETMAIN R,LV=(RPARM0)                                          11323000
*   XSRBPTR=RPARM+LENGTH(SRBSECT);  /* SET PTR TO SRB EXT.           */ 11324000
         LA    XSRBPTR,44                                          1235 11325000
         ALR   XSRBPTR,RPARM                                       1235 11326000
*   SRBPTR=RPARM;                   /* SET PTR TO SRB                */ 11327000
         LR    SRBPTR,RPARM                                        1236 11328000
*   RESPECIFY                                                      1237 11329000
*    (RPARM0,                                                      1237 11330000
*     RPARM) UNRESTRICTED;                                         1237 11331000
*   SRB=SRB&&SRB;                   /* CLEAR SRB                     */ 11332000
         XC    SRB(44,SRBPTR),SRB(SRBPTR)                          1238 11333000
*   XSRBEXT=XSRBEXT&&XSRBEXT;       /* CLEAR SRB EXTENTION           */ 11334000
*                                                                  1239 11335000
         XC    XSRBEXT(72,XSRBPTR),XSRBEXT(XSRBPTR)                1239 11336000
*   /*****************************************************************/ 11337000
*   /*                                                               */ 11338000
*   /* INIT SRB                                                      */ 11339000
*   /*                                                               */ 11340000
*   /*****************************************************************/ 11341000
*                                                                  1240 11342000
*   SRBPARM=XSRBPTR;                /* SET R1 FOR ENTRY TO SRB       */ 11343000
         ST    XSRBPTR,SRBPARM(,SRBPTR)                            1240 11344000
*   SRBASCB=NVTMASCB;               /* MASTER'S ASCB         @Z40WPYD*/ 11345000
         MVC   SRBASCB(4,SRBPTR),NVTMASCB(RNVT)                    1241 11346000
*   SRBEP=ADDR(NIPSRBEP);           /* SRB ENTRY POINT IN NIP05      */ 11347000
         LA    @14,NIPSRBEP                                        1242 11348000
         ST    @14,SRBEP(,SRBPTR)                                  1242 11349000
*NP5RESCH:                                                         1243 11350000
*   XECBXMP=0;                      /* CLEAR ECB FOR XMPOST          */ 11351000
NP5RESCH SLR   @14,@14                                             1243 11352000
         ST    @14,XECBXMP(,XSRBPTR)                               1243 11353000
*   STM(RPARM0,RENTRY,XSAVEREG);    /* SAVE REG FOR SRB              */ 11354000
         STM   RPARM0,RENTRY,XSAVEREG(XSRBPTR)                     1244 11355000
*   RESPECIFY                                                      1245 11356000
*    (RPARM) RESTRICTED;                                           1245 11357000
*   RPARM=SRBPTR;                   /* SET PTR TO SRB PARMS          */ 11358000
         LR    RPARM,SRBPTR                                        1246 11359000
*   RESPECIFY                                                      1247 11360000
*     CVTMAP BASED(CVTPTR);         /* SCHED USES LOC 16             */ 11361000
*   GENERATE REFS(CVTPTR,CVTGSMQ,CVTLSMQ,SRBFLNK,SRBSECT);         1248 11362000
            SCHEDULE SRB=(1),SCOPE=LOCAL  SCHED SRB TO ASM              11363000
*   RESPECIFY                                                      1249 11364000
*     CVTMAP BASED(RCVT);           /* BACK TO R3 FOR CVT BASE       */ 11365000
*   RPARM=ADDR(XECBXMP);            /* SET ADDR OF ECB FOR WAIT      */ 11366000
         LA    RPARM,XECBXMP(,XSRBPTR)                             1250 11367000
*   GENERATE REFS(RPARM) SETS(RPARM0,RPARM);                       1251 11368000
              WAIT ECB=(RPARM)         WAIT FOR XMPOST FRM SRB          11369000
*   IF ASMIORQR¬=ASMIORQC THEN      /* HAS ALL PAGE I/O COMPLETD     */ 11370000
         CLC   ASMIORQR(4,ASMVTPTR),ASMIORQC(ASMVTPTR)             1252 11371000
         BNE   @RT01252                                            1252 11372000
*     GOTO NP5RESCH;                /* NO - RESCHEDULE SRB           */ 11373000
*   ELSE                                                           1254 11374000
*     ;                             /* YES - CONTINUE LOADING        */ 11375000
*   RESPECIFY                                                      1255 11376000
*    (RPARM) UNRESTRICTED;                                         1255 11377000
*   RESPECIFY                                                      1256 11378000
*    (RPARM0) RESTRICTED;                                          1256 11379000
*   RPARM0=NIPSRB;                  /* SP AND SIZE FOR FREEMAIN      */ 11380000
         L     RPARM0,NIPSRB                                       1257 11381000
*   GENERATE REFS(RPARM0,SRBPTR) SETS(RPARM);                      1258 11382000
              FREEMAIN R,LV=(0),A=(SRBPTR)   FREE SRB AREA SP245        11383000
*   RESPECIFY                                                      1259 11384000
*    (RPARM0,                                                      1259 11385000
*     SRBPTR,                                                      1259 11386000
*     XSRBPTR,                                                     1259 11387000
*     ASMVTPTR,                                                    1259 11388000
*     RPARM) UNRESTRICTED;                                         1259 11389000
*   RETURN;                         /* RETURN TO CALLER              */ 11390000
@EL00013 DS    0H                                                  1260 11391000
@EF00013 DS    0H                                                  1260 11392000
@ER00013 LM    @14,@12,@SA00013                                    1260 11393000
         BR    @14                                                 1260 11394000
*NP5XMPER:                                                         1261 11395000
*   CALL NPA5CERR(XMPSTERR);        /* TERMINATE COLD START          */ 11396000
NP5XMPER LA    @01,@AL01261                                        1261 11397000
         BAL   @14,NPA5CERR                                        1261 11398000
*   END NP5WTPAG;                   /* END OF SUBROUTINE             */ 11399000
         B     @EL00013                                            1262 11400000
@PB00013 DS    0H                                                  1263 11401000
*   GENERATE NOREFS NOSETS(EJECT);                                 1263 11402000
         EJECT                                                          11403000
*NIPSRBEP:                          /* SRB TO ALLOW ASM TO CONTNU  1264 11404000
*                                      PAGE I/O WHILE NIP05 TESTS  1264 11405000
*                                      ASMVT FOR COMPLETION.         */ 11406000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1264 11407000
         B     @PB00014                                            1264 11408000
NIPSRBEP DS    0H                                                  1265 11409000
*   RESPECIFY                                                      1265 11410000
*    (XSRBPTR,                                                     1265 11411000
*     RENTRY,                                                      1265 11412000
*     REXIT) RESTRICTED;                                           1265 11413000
*   XSRBPTR=RPARM;                  /* REG1 PASSED BY NIP05          */ 11414000
         LR    XSRBPTR,RPARM                                       1266 11415000
*   XSAVE14=REXIT;                  /* SAVE CALLERS RETURN ADDR      */ 11416000
         ST    REXIT,XSAVE14(,XSRBPTR)                             1267 11417000
*   GENERATE REFS(PSALITA,FLC) SETS(REG11,REG12,REG13,REG14);      1268 11418000
               SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  X11419000
               RELATED=(ASMVT,IEAVNP05(NIPSRBEP))                       11420000
*   LM(RPARM0,RENTRY,XSAVEREG);     /* RESTORE NIP05 REGS            */ 11421000
         LM    RPARM0,RENTRY,XSAVEREG(XSRBPTR)                     1269 11422000
*   RENTRY=CVT0PT01;                /* BR ENTRY FOR XMPOST           */ 11423000
         L     RENTRY,CVT0PT01(,RCVT)                              1270 11424000
*   GENERATE REFS(XECBXMP,XSRBEXT,XSRBPTR,NVTMASCB,NVT,RNVT,NP5XMPER)   11425000
*       SETS(REG1,REG10,REG11,REG12,REG13,REXIT,RENTRY);           1271 11426000
*                                                                  1271 11427000
            LA  REG12,NP5XMPER          SET ERET ROUTINE ADDR           11428000
            LA  REG11,XECBXMP-XSRBEXT(,XSRBPTR) PTR TO ECB FOR XMPOST   11429000
            LA  REG1,1                  SETUP TO TURN ON SIGN BIT       11430000
            SLL REG1,31                 TURN ON SIGN BIT                11431000
            OR  REG11,REG1              INDICATE XMPOST                 11432000
            SR  REG10,REG10             ZERO COMPLETION CODE            11433000
            L   REG13,NVTMASCB-NVT(,RNVT) PTR TO MASTER ASCB            11434000
            BALR REXIT,RENTRY           BRANCH ENTER XMPOST             11435000
*   /*****************************************************************/ 11436000
*   /*                                                               */ 11437000
*   /* FREE THE LOCAL LOCK                                           */ 11438000
*   /*                                                               */ 11439000
*   /*****************************************************************/ 11440000
*                                                                  1272 11441000
*   GENERATE REFS(PSALITA,FLC) SETS(REG11,REG12,REG13,REG14);      1272 11442000
              SETLOCK RELEASE,TYPE=LOCAL,                              X11443000
               RELATED=(ASMVT,IEAVNP05(NIPSRBEP))                       11444000
*   REXIT=XSAVE14;                  /* RESTORE CALLERS RET ADDR      */ 11445000
         L     REXIT,XSAVE14(,XSRBPTR)                             1273 11446000
*   GENERATE;                                                      1274 11447000
            BR  REXIT                   RETURN TO CALLER                11448000
*   RESPECIFY                                                      1275 11449000
*    (XSRBPTR,                                                     1275 11450000
*     RENTRY,                                                      1275 11451000
*     REXIT) UNRESTRICTED;                                         1275 11452000
*   END NIPSRBEP;                   /* END OF SUBROUTINE             */ 11453000
@EL00014 DS    0H                                                  1276 11454000
@EF00014 DS    0H                                                  1276 11455000
@ER00014 BR    @14                                                 1276 11456000
@PB00014 DS    0H                                                  1277 11457000
*   GENERATE NOREFS NOSETS(EJECT);                                 1277 11458000
*                                                                  1277 11459000
         EJECT                                                          11460000
*/********************************************************************/ 11461000
*/*                                                                  */ 11462000
*/*         SUBROUTINE NPA5CLPD                                      */ 11463000
*/*                                                                  */ 11464000
*/*         FUNCTION - BUILD AN LPDE IN PLACE OF A BLDL INFORMATION  */ 11465000
*/*            TABLE ENTRY FOR THE MODULE JUST LOADED, AND RELEASE   */ 11466000
*/*            THE CDE, LLE, AND EXTENT LIST FOR THE MODULE          */ 11467000
*/*                                                                  */ 11468000
*/*         INPUT - THE JOB PACK QUEUE ON THE V=V TCB                */ 11469000
*/*                                                                  */ 11470000
*/*         OUTPUT - THE LPDE IS BUILT IN PLACE OF THE INFO ENTRY    */ 11471000
*/*                                                                  */ 11472000
*/********************************************************************/ 11473000
*                                                                  1278 11474000
*NPA5CLPD:                          /* NPA5CLPD ENTRY PT             */ 11475000
*   PROCEDURE;                      /* BEGINNING OF SUBR             */ 11476000
         B     @PB00015                                            1278 11477000
NPA5CLPD STM   @14,@12,@SA00015                                    1278 11478000
*   RESPECIFY                                                      1279 11479000
*    (CDENTPTR,                                                    1279 11480000
*     XTLSTPTR,                                                    1279 11481000
*     LLEPTR,                                                      1279 11482000
*     RPARM0,                                                      1279 11483000
*     RPARM,                                                       1279 11484000
*     LPDEPTR) RESTRICTED;                                         1279 11485000
*                                                                  1279 11486000
*   /*****************************************************************/ 11487000
*   /*                                                               */ 11488000
*   /* BUILD THE LPDE                                                */ 11489000
*   /*                                                               */ 11490000
*   /*****************************************************************/ 11491000
*                                                                  1280 11492000
*   CDENTPTR=NVTVVTCB->TCBJPQB;     /* PICK UP CDE ADR               */ 11493000
         L     @14,NVTVVTCB(,RNVT)                                 1280 11494000
         SLR   CDENTPTR,CDENTPTR                                   1280 11495000
         ICM   CDENTPTR,7,TCBJPQB(@14)                             1280 11496000
*   NVTVVTCB->TCBJPQB=0;            /* CLEAR JPQ POINTER             */ 11497000
         SLR   @05,@05                                             1281 11498000
         STCM  @05,7,TCBJPQB(@14)                                  1281 11499000
*   LPDEPTR=ADDR(NPA5LPDE);         /* LPDE BUILD AREA               */ 11500000
         LA    LPDEPTR,NPA5LPDE                                    1282 11501000
*   LPDE=LPDE&&LPDE;                /* CLEAR LPDE AREA               */ 11502000
         XC    LPDE(40,LPDEPTR),LPDE(LPDEPTR)                      1283 11503000
*   CDJPA='0'B;                     /* CLEAR JPA BIT                 */ 11504000
         NI    CDJPA(CDENTPTR),B'11111101'                         1284 11505000
*   LPDEATTR=CDATTR;                /* COPY COMMON FLAGS             */ 11506000
         MVC   LPDEATTR(1,LPDEPTR),CDATTR(CDENTPTR)                1285 11507000
*   LPDENTP=CDENTPT;                /* ENTRY POINT ADDRESS           */ 11508000
         MVC   LPDENTP(4,LPDEPTR),CDENTPT(CDENTPTR)                1286 11509000
*   LPDEATT2=CDATTR2;               /* MORE COMMON FLAGS             */ 11510000
         MVC   LPDEATT2(1,LPDEPTR),CDATTR2(CDENTPTR)               1287 11511000
*   LPDENAME=CDNAME;                /* MODULE NAME                   */ 11512000
         MVC   LPDENAME(8,LPDEPTR),CDNAME(CDENTPTR)                1288 11513000
*   LPDENIP='1'B;                   /* MOD LOADED BY NIP             */ 11514000
         OI    LPDENIP(LPDEPTR),B'10000000'                        1289 11515000
*   XTLSTPTR=CDXLMJP;               /* POINT TO XTLST                */ 11516000
         L     XTLSTPTR,CDXLMJP(,CDENTPTR)                         1290 11517000
*   LPDEXTLN=XTLMSBLA;              /* MODULE LENGTH                 */ 11518000
         MVC   LPDEXTLN(4,LPDEPTR),XTLMSBLA(XTLSTPTR)              1291 11519000
*   LPDEXTAD=XTLMSBAA;              /* MODULE LOAD ADDR              */ 11520000
         MVC   LPDEXTAD(4,LPDEPTR),XTLMSBAA(XTLSTPTR)              1292 11521000
*   LPDECHN=INFSYNM;                /* COPY SYNONYM PTR              */ 11522000
         L     @14,INFOPTR                                         1293 11523000
         SLR   @05,@05                                             1293 11524000
         ICM   @05,7,INFSYNM(@14)                                  1293 11525000
         ST    @05,LPDECHN(,LPDEPTR)                               1293 11526000
*   INFODATA=LPDE;                  /* REPLACE INFO TABLE ENTRY WITH    11527000
*                                      LPDE                          */ 11528000
*                                                                  1294 11529000
         L     @14,INFOPTR                                         1294 11530000
         MVC   INFODATA(40,@14),LPDE(LPDEPTR)                      1294 11531000
*   /*****************************************************************/ 11532000
*   /*                                                               */ 11533000
*   /* FREE THE CONTENTS SUPERVISION CONTROL BLOCKS                  */ 11534000
*   /*                                                               */ 11535000
*   /*****************************************************************/ 11536000
*                                                                  1295 11537000
*   RPARM0=XLSIZEP;                 /* XTLST FM PARM                 */ 11538000
         L     RPARM0,XLSIZEP                                      1295 11539000
*   GENERATE REFS(RPARM0,XTLSTPTR) SETS(RPARM)                     1296 11540000
*       (FREEMAIN R,LV=(0),A=(XTLSTPTR));/* FREE XL                  */ 11541000
         FREEMAIN R,LV=(0),A=(XTLSTPTR)                                 11542000
*   RPARM0=CDESIZEP;                /* CDE FM PARM                   */ 11543000
         L     RPARM0,CDESIZEP                                     1297 11544000
*   GENERATE REFS(RPARM0,CDENTPTR) SETS(RPARM)                     1298 11545000
*       (FREEMAIN R,LV=(0),A=(CDENTPTR));/* FREE CDE                 */ 11546000
         FREEMAIN R,LV=(0),A=(CDENTPTR)                                 11547000
*   LLEPTR=NVTVVTCB->TCBLLS;        /* POINT TO LLE                  */ 11548000
         L     @14,NVTVVTCB(,RNVT)                                 1299 11549000
         L     LLEPTR,TCBLLS(,@14)                                 1299 11550000
*   NVTVVTCB->TCBLLS=0;             /* CLEAR LLE QUEUE               */ 11551000
         SLR   @05,@05                                             1300 11552000
         ST    @05,TCBLLS(,@14)                                    1300 11553000
*   RPARM0=LLESIZEP;                /* LLE FM PARM                   */ 11554000
         L     RPARM0,LLESIZEP                                     1301 11555000
*   GENERATE REFS(RPARM0,LLEPTR) SETS(RPARM)                       1302 11556000
*       (FREEMAIN R,LV=(0),A=(LLEPTR));/* FREE LLE                   */ 11557000
         FREEMAIN R,LV=(0),A=(LLEPTR)                                   11558000
*   RETURN;                         /* RETURN TO CALLER              */ 11559000
@EL00015 DS    0H                                                  1303 11560000
@EF00015 DS    0H                                                  1303 11561000
@ER00015 LM    @14,@12,@SA00015                                    1303 11562000
         BR    @14                                                 1303 11563000
*   RESPECIFY                                                      1304 11564000
*    (CDENTPTR,                                                    1304 11565000
*     XTLSTPTR,                                                    1304 11566000
*     LLEPTR,                                                      1304 11567000
*     RPARM0,                                                      1304 11568000
*     LPDEPTR) UNRESTRICTED;                                       1304 11569000
*   END NPA5CLPD;                   /* END OF SUBROUTINE             */ 11570000
@PB00015 DS    0H                                                  1306 11571000
*   GENERATE NOREFS NOSETS(EJECT);                                 1306 11572000
*                                                                  1306 11573000
         EJECT                                                          11574000
*/********************************************************************/ 11575000
*/*                                                                  */ 11576000
*/*         SUBROUTINE NPA5WAST                                      */ 11577000
*/*                                                                  */ 11578000
*/*         FUNCTION - TO ADD AN AREA OF WASTED SPACE TO THE PROPER  */ 11579000
*/*            QUEUE SO THAT IT MAY BE RECLAIMED LATER               */ 11580000
*/*                                                                  */ 11581000
*/*         INPUT - THE SIZE OF THE WASTED AREA (WASTE)              */ 11582000
*/*            THE ADDRESS OF THE WASTED AREA (WASTEADR)             */ 11583000
*/*            THE LIST OF WASTED SPACE ALREADY QUEUED (NPA5WLST)    */ 11584000
*/*                                                                  */ 11585000
*/*            OR QUEUES) WHICH REPRESENT AREAS WHICH CAN BE         */ 11586000
*/*            CONTAINED WITHIN THE GIVEN SPACE                      */ 11587000
*/*                                                                  */ 11588000
*/********************************************************************/ 11589000
*                                                                  1307 11590000
*NPA5WAST:                          /* NPA5WAST ENTRY PT             */ 11591000
*   PROCEDURE;                      /* BEGINNING OF SUBR             */ 11592000
         B     @PB00016                                            1307 11593000
NPA5WAST STM   @14,@12,12(@13)                                     1307 11594000
*   IF WASTE>0 THEN                 /* TEST FOR ANY SPACE TO BE    1308 11595000
*                                      QUEUED                        */ 11596000
         ICM   @14,15,WASTE                                        1308 11597000
         BNP   @RF01308                                            1308 11598000
*     DO;                           /* YES, ADD THE SPACE TO THE   1309 11599000
*                                      PROPER WASTE QUEUE            */ 11600000
*       DO INDEX=DIM(NPA5WLST) TO 1 BY-1 WHILE(WASTE<NPA5WSIZ(INDEX));  11601000
         LA    @14,12                                              1310 11602000
         ST    @14,INDEX                                           1310 11603000
@DL01310 LR    @08,@14                                             1310 11604000
         SLA   @08,3                                               1310 11605000
         L     @05,WASTE                                           1310 11606000
         C     @05,NPA5WSIZ-8(@08)                                 1310 11607000
         BNL   @DC01310                                            1310 11608000
*                                   /* SEARCH FOR THE QUEUE THE AREA    11609000
*                                      FITS INTO                     */ 11610000
*       END;                        /* END OF SEARCH LOOP            */ 11611000
*                                                                  1311 11612000
         BCTR  @14,0                                               1311 11613000
         ST    @14,INDEX                                           1311 11614000
         LTR   @14,@14                                             1311 11615000
         BP    @DL01310                                            1311 11616000
@DC01310 DS    0H                                                  1312 11617000
*       /*************************************************************/ 11618000
*       /*                                                           */ 11619000
*       /* FIND (OR CREATE) AN WASTED SPACE CONTROL BLOCK            */ 11620000
*       /*                                                           */ 11621000
*       /*************************************************************/ 11622000
*                                                                  1312 11623000
*       IF NPA5FQHD=0 THEN          /* ARE THERE ANY AVAILABLE BLOCKS*/ 11624000
         ICM   @14,15,NPA5FQHD                                     1312 11625000
         BNZ   @RF01312                                            1312 11626000
*         DO;                       /* NO, CREATE ONE                */ 11627000
*           WASTPTR=NPA5NWST;       /* POINT TO FREE AREA            */ 11628000
         L     @14,NPA5NWST                                        1314 11629000
         ST    @14,WASTPTR                                         1314 11630000
*           NPA5NWST=NPA5NWST+LENGTH(WASTBLOK);/* UPDATE FREE AREA 1315 11631000
*                                      POINTER                       */ 11632000
         AH    @14,@CH00075                                        1315 11633000
         ST    @14,NPA5NWST                                        1315 11634000
*         END;                      /*                               */ 11635000
*       ELSE                        /* YES, USE ONE                  */ 11636000
*         DO;                       /* DEQUEUE THE BLOCK             */ 11637000
         B     @RC01312                                            1317 11638000
@RF01312 DS    0H                                                  1318 11639000
*           WASTPTR=NPA5FQHD;       /* POINT TO THE BLOCK            */ 11640000
         L     @14,NPA5FQHD                                        1318 11641000
         ST    @14,WASTPTR                                         1318 11642000
*           NPA5FQHD=WASTNEXT;      /* DEQUEUE IT                    */ 11643000
         MVC   NPA5FQHD(4),WASTNEXT(@14)                           1319 11644000
*         END;                      /*                               */ 11645000
*       WASTAREA=WASTEADR;          /* PUT ADDRESS OF WASTED AREA  1321 11646000
*                                      INTO BLOCK                    */ 11647000
@RC01312 L     @14,WASTPTR                                         1321 11648000
         MVC   WASTAREA(4,@14),WASTEADR                            1321 11649000
*       WASTSIZE=WASTE;             /* PUT SIZE OF WASTED AREA INTO     11650000
*                                      BLOCK                         */ 11651000
*                                                                  1322 11652000
         MVC   WASTSIZE(4,@14),WASTE                               1322 11653000
*       /*************************************************************/ 11654000
*       /*                                                           */ 11655000
*       /* ADD THE BLOCK TO THE PROPER PLACE IN THE QUEUE            */ 11656000
*       /*                                                           */ 11657000
*       /*************************************************************/ 11658000
*                                                                  1323 11659000
*       LASTPTR=ADDR(NPA5WQNE(INDEX));/* POINT TO QUEUE HEADER       */ 11660000
         L     @14,INDEX                                           1323 11661000
         SLA   @14,3                                               1323 11662000
         LA    @14,NPA5WQNE-8(@14)                                 1323 11663000
         ST    @14,LASTPTR                                         1323 11664000
*       CURRPTR=LASTPTR->WASTNEXT;  /* PICK UP ADDRESS OF FIRST BLOCK   11665000
*                                      ON Q                          */ 11666000
         MVC   CURRPTR(4),WASTNEXT(@14)                            1324 11667000
*       DO WHILE(CURRPTR¬=0&CURRPTR->WASTSIZE<WASTE);/* SCAN THE   1325 11668000
*                                      QUEUE FOR THE PROPER PLACE FOR   11669000
*                                      THE BLOCK                     */ 11670000
         B     @DE01325                                            1325 11671000
@DL01325 DS    0H                                                  1326 11672000
*         LASTPTR=CURRPTR;          /* SAVE CURRENT BLOCK ADDRESS    */ 11673000
         L     @14,CURRPTR                                         1326 11674000
         ST    @14,LASTPTR                                         1326 11675000
*         CURRPTR=LASTPTR->WASTNEXT;/* PICK UP ADDRESS OF NEXT BLOCK */ 11676000
         MVC   CURRPTR(4),WASTNEXT(@14)                            1327 11677000
*       END;                        /* END OF SCAN LOOP              */ 11678000
@DE01325 L     @14,CURRPTR                                         1328 11679000
         LTR   @14,@14                                             1328 11680000
         BZ    @DC01325                                            1328 11681000
         L     @14,WASTSIZE(,@14)                                  1328 11682000
         C     @14,WASTE                                           1328 11683000
         BL    @DL01325                                            1328 11684000
@DC01325 DS    0H                                                  1329 11685000
*       WASTNEXT=LASTPTR->WASTNEXT; /* ADD BLOCK TO THIS POINT IN THE   11686000
*                                      QUEUE                         */ 11687000
         L     @14,WASTPTR                                         1329 11688000
         L     @08,LASTPTR                                         1329 11689000
         MVC   WASTNEXT(4,@14),WASTNEXT(@08)                       1329 11690000
*       LASTPTR->WASTNEXT=WASTPTR;  /* POINT LAST QUEUE ELEMENT TO 1330 11691000
*                                      THE NEW BLOCK                 */ 11692000
         ST    @14,WASTNEXT(,@08)                                  1330 11693000
*       WASTE=0;                    /* INDICATE AREA ALL ACCOUNTED 1331 11694000
*                                      FOR                           */ 11695000
         SLR   @14,@14                                             1331 11696000
         ST    @14,WASTE                                           1331 11697000
*     END;                                                         1332 11698000
*   RETURN;                         /* RETURN TO CALLER              */ 11699000
@EL00016 DS    0H                                                  1333 11700000
@EF00016 DS    0H                                                  1333 11701000
@ER00016 LM    @14,@12,12(@13)                                     1333 11702000
         BR    @14                                                 1333 11703000
*   END NPA5WAST;                   /* END OF SUBROUTINE             */ 11704000
         B     @EL00016                                            1334 11705000
@PB00016 DS    0H                                                  1335 11706000
*   GENERATE NOREFS NOSETS(EJECT);                                 1335 11707000
*                                                                  1335 11708000
         EJECT                                                          11709000
*/********************************************************************/ 11710000
*/*         SUBROUTINE NPA5CERR                                      */ 11711000
*/*                                                                  */ 11712000
*/*         FUNCTION - WRITE INDICATIVE MSG FOR COLD START ERROR     */ 11713000
*/*         INPUT - A STANDARD PARAMETER LIST CONTAING THE ERROR     */ 11714000
*/*                 CODE TO BE PLSTED - REG 1 POINTS TO THE ADDRSSS  */ 11715000
*/*                 OF THE 3 BYTES CONTAING THE ERROR CODE.          */ 11716000
*/*                                                                  */ 11717000
*/*****************************************************************  */ 11718000
*                                                                  1336 11719000
*NPA5CERR:                                                         1336 11720000
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);                          1336 11721000
         B     @PB00017                                            1336 11722000
NPA5CERR DS    0H                                                  1337 11723000
*   GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)(IEAPMNIP TYPE=REAL); 11724000
         IEAPMNIP TYPE=REAL                                             11725000
*                                   /* SWITCH TO V=R                 */ 11726000
*   CODE=ERRCOD;                    /* COPY ERROR CODE               */ 11727000
         L     @14,ERRPTR(,RPARM)                                  1338 11728000
         MVC   CODE(2),ERRCOD(@14)                                 1338 11729000
*NP5CSERR:                          /* SEE IF TASK HAS POSTED AN I/O    11730000
*                                      ERROR                         */ 11731000
*   IF CODE=IOERR THEN              /* I/0 ERROR POSTED              */ 11732000
NP5CSERR LH    @14,CODE                                            1339 11733000
         CH    @14,@CH00050                                        1339 11734000
         BE    @RT01339                                            1339 11735000
*     GO TO NP5CSIO;                /* SEND I/O ERROR MESSAGE        */ 11736000
*   ELSE                                                           1341 11737000
*     ;                                                            1341 11738000
*                                                                  1341 11739000
*   /*****************************************************************/ 11740000
*   /*                                                               */ 11741000
*   /* SEE IF LPALIB EMPTY                                           */ 11742000
*   /*                                                               */ 11743000
*   /*****************************************************************/ 11744000
*                                                                  1342 11745000
*   IF CODE=LPAMT THEN              /* LPALIB EMPTY                  */ 11746000
         CH    @14,@CH00061                                        1342 11747000
         BNE   @RF01342                                            1342 11748000
*NP5CSLER:                                                         1343 11749000
*     DO;                                                          1343 11750000
*                                                                  1343 11751000
NP5CSLER DS    0H                                                  1344 11752000
*       /*************************************************************/ 11753000
*       /*                                                           */ 11754000
*       /* MOVE ERROR CAUSE 'LPALIB EMPTY' TO MESSAGE                */ 11755000
*       /*                                                           */ 11756000
*       /*************************************************************/ 11757000
*                                                                  1344 11758000
*       MSGEI1=CAUSE20;             /* CAUSE IS LPALIB EMPTY         */ 11759000
         MVI   MSGEI1+12,C' '                                      1344 11760000
         MVC   MSGEI1+13(6),MSGEI1+12                              1344 11761000
         MVC   MSGEI1(12),CAUSE20                                  1344 11762000
*       GO TO NP5CSFAL;             /* SEND CLPA FAILED MESSAGE      */ 11763000
         B     NP5CSFAL                                            1345 11764000
*     END;                                                         1346 11765000
*                                                                  1346 11766000
*   /*****************************************************************/ 11767000
*   /*                                                               */ 11768000
*   /* SEE IF PGOUT ERROR                                            */ 11769000
*   /*                                                               */ 11770000
*   /*****************************************************************/ 11771000
*                                                                  1347 11772000
*   IF CODE=PGOUTERR THEN                                          1347 11773000
@RF01342 CLC   CODE(2),@CH00063                                    1347 11774000
         BNE   @RF01347                                            1347 11775000
*     DO;                           /* PAGEOUT ERROR                 */ 11776000
*                                                                  1348 11777000
*       /*************************************************************/ 11778000
*       /*                                                           */ 11779000
*       /* MOVE ERROR CAUSE 'PGOUT ERROR' TO MESSAGE                 */ 11780000
*       /*                                                           */ 11781000
*       /*************************************************************/ 11782000
*                                                                  1349 11783000
*       MSGEI1=CAUSE24;             /* CAUSE IS PGOUT ERROR          */ 11784000
         MVI   MSGEI1+11,C' '                                      1349 11785000
         MVC   MSGEI1+12(7),MSGEI1+11                              1349 11786000
         MVC   MSGEI1(11),CAUSE24                                  1349 11787000
*       NVTCSLNM=0;                 /* SUPPRESS LAST MOD. MSG.       */ 11788000
         SLR   @14,@14                                             1350 11789000
         ST    @14,NVTCSLNM(,RNVT)                                 1350 11790000
*       GO TO NP5CSFAL;             /* SEND CLPA FAILED MSG.         */ 11791000
         B     NP5CSFAL                                            1351 11792000
*     END;                                                         1352 11793000
*                                                                  1352 11794000
*   /*****************************************************************/ 11795000
*   /*                                                               */ 11796000
*   /* SEE IF XMPOST ERROR                                           */ 11797000
*   /*                                                               */ 11798000
*   /*****************************************************************/ 11799000
*                                                                  1353 11800000
*   IF CODE=XMPSTERR THEN           /* XMPOST ERROR ?                */ 11801000
@RF01347 CLC   CODE(2),@CH00065                                    1353 11802000
         BNE   @RF01353                                            1353 11803000
*     DO;                           /* YES                           */ 11804000
*                                                                  1354 11805000
*       /*************************************************************/ 11806000
*       /*                                                           */ 11807000
*       /* MOVE ERROR CAUSE 'XMPOST ERROR' TO MESSAGE                */ 11808000
*       /*                                                           */ 11809000
*       /*************************************************************/ 11810000
*                                                                  1355 11811000
*       MSGEI1=CAUSE28;             /* CAUSE IS PGFIX/FREE           */ 11812000
         MVI   MSGEI1+12,C' '                                      1355 11813000
         MVC   MSGEI1+13(6),MSGEI1+12                              1355 11814000
         MVC   MSGEI1(12),CAUSE28                                  1355 11815000
*       NVTCSLNM=0;                 /* SUPPRESS LAST MOD MSG         */ 11816000
         SLR   @14,@14                                             1356 11817000
         ST    @14,NVTCSLNM(,RNVT)                                 1356 11818000
*       GO TO NP5CSFAL;             /* SEND CLPA FAILED MSG          */ 11819000
         B     NP5CSFAL                                            1357 11820000
*     END;                                                         1358 11821000
*                                                                  1358 11822000
*   /*****************************************************************/ 11823000
*   /*                                                               */ 11824000
*   /* SEE IF OPEN LPALIB UNSUCCESSFUL                               */ 11825000
*   /*                                                               */ 11826000
*   /*****************************************************************/ 11827000
*                                                                  1359 11828000
*   IF CODE=OPNUNSUC THEN           /* DASD PAGED UNAVAILABLE        */ 11829000
@RF01353 LH    @14,CODE                                            1359 11830000
         CH    @14,@CH00067                                        1359 11831000
         BE    @RT01359                                            1359 11832000
*     GOTO NP5CSLIB;                                               1360 11833000
*                                                                  1360 11834000
*   /*****************************************************************/ 11835000
*   /*                                                               */ 11836000
*   /* SEE IF THERE WERE ANY NON-EXECUTABLE MODULES ON LPALIB        */ 11837000
*   /*                                                               */ 11838000
*   /*****************************************************************/ 11839000
*                                                                  1361 11840000
*   IF CODE=NONEX THEN              /* NON-EXECUTABLES?      @ZD04022*/ 11841000
         CH    @14,@CH00069                                        1361 11842000
         BNE   @RF01361                                            1361 11843000
*     DO;                           /*                       @ZD04022*/ 11844000
*                                                                  1362 11845000
*       /*************************************************************/ 11846000
*       /*                                                           */ 11847000
*       /* MOVE ERROR CAUSE 'NON-EXECUTABLE MODS' TO MESSAGE         */ 11848000
*       /*                                                           */ 11849000
*       /*************************************************************/ 11850000
*                                                                  1363 11851000
*       MSGEI1=CAUSE32;             /* CAUSE32 IS NON-EXEC   @ZD04022*/ 11852000
         MVC   MSGEI1(19),CAUSE32                                  1363 11853000
*       NVTCSLNM=0;                 /* SUPPRESS LAST MOD MSG @ZD04022*/ 11854000
         SLR   @14,@14                                             1364 11855000
         ST    @14,NVTCSLNM(,RNVT)                                 1364 11856000
*       GOTO NP5CSFAL;              /* SEND CPLA FAILED MSG  @ZD04022*/ 11857000
         B     NP5CSFAL                                            1365 11858000
*     END;                          /*                       @ZD04022*/ 11859000
*   ELSE                                                           1367 11860000
*     DO;                                                          1367 11861000
*                                                                  1367 11862000
@RF01361 DS    0H                                                  1368 11863000
*       /*************************************************************/ 11864000
*       /*                                                           */ 11865000
*       /* MOVE ERROR CAUSE 'STORAGE UNAVAILABLE' TO MSG             */ 11866000
*       /*                                                           */ 11867000
*       /*************************************************************/ 11868000
*                                                                  1368 11869000
*       MSGEI1=CAUSE4;              /* CAUSE IS STORAGE UNAVAIL.     */ 11870000
         MVC   MSGEI1(19),CAUSE4                                   1368 11871000
*       GO TO NP5CSFAL;             /* SEND CLPA FAILED MSG          */ 11872000
         B     NP5CSFAL                                            1369 11873000
*     END;                                                         1370 11874000
*NP5CSIO:                                                          1371 11875000
*   RPARM=NVTCSIOB;                 /* IOB ADDR FOR COLD START IO    */ 11876000
*                                                                  1371 11877000
NP5CSIO  L     RPARM,NVTCSIOB(,RNVT)                               1371 11878000
*   /*****************************************************************/ 11879000
*   /*                                                               */ 11880000
*   /* WRITE I/O ERROR MESSAGE                                       */ 11881000
*   /*                                                               */ 11882000
*   /*****************************************************************/ 11883000
*                                                                  1372 11884000
*   GENERATE REFS(RNVT,NVTSENSE,RPARM) SETS(REXIT,RENTRY)          1372 11885000
*       (IEAPMNIP TYPE=SENSE,PARAM=RPARM);                         1372 11886000
*                                                                  1372 11887000
         IEAPMNIP TYPE=SENSE,PARAM=RPARM                                11888000
*   /*****************************************************************/ 11889000
*   /*                                                               */ 11890000
*   /* MOVE ERROR CAUSE 'I/O ERROR' TO MESSAGE                       */ 11891000
*   /*                                                               */ 11892000
*   /*****************************************************************/ 11893000
*                                                                  1373 11894000
*   MSGEI1=CAUSE8;                  /* CAUSE IS I/O ERROR            */ 11895000
         MVI   MSGEI1+9,C' '                                       1373 11896000
         MVC   MSGEI1+10(9),MSGEI1+9                               1373 11897000
         MVC   MSGEI1(9),CAUSE8                                    1373 11898000
*   GO TO NP5CSFAL;                 /* SEND CLPA FAILED MESSAGE      */ 11899000
         B     NP5CSFAL                                            1374 11900000
*NP5CSLIB:                          /* MOVE ERROR CAUSE 'LPALIB    1375 11901000
*                                      UNAVAILABLE' TO MESSAGE       */ 11902000
*   MSGEI1=CAUSEOP4;                /* CAUSE IS LPALIB UNAVAIL.      */ 11903000
NP5CSLIB MVI   MSGEI1+18,C' '                                      1375 11904000
         MVC   MSGEI1(18),CAUSEOP4                                 1375 11905000
*NP5CSFAL:                          /* SEND CLPA FAILED - CAUSE    1376 11906000
*                                      MESSAGE                       */ 11907000
*                                                                  1376 11908000
*   /*****************************************************************/ 11909000
*   /*                                                               */ 11910000
*   /* IEAN05I CLPA FAILED - CAUSE                                   */ 11911000
*   /*                                                               */ 11912000
*   /*****************************************************************/ 11913000
*                                                                  1376 11914000
*   GENERATE REFS(RNVT,NVTWTO,MSGES,MSGEI1) SETS(RPARM,REXIT,RENTRY)    11915000
*       (IEAPMNIP TYPE=WTO,PARAM=MSGES);                           1376 11916000
*                                                                  1376 11917000
NP5CSFAL IEAPMNIP TYPE=WTO,PARAM=MSGES                                  11918000
*   /*****************************************************************/ 11919000
*   /*                                                               */ 11920000
*   /* SEE IF ANY MODULES HAVE BEEN LOADED                           */ 11921000
*   /*                                                               */ 11922000
*   /*****************************************************************/ 11923000
*                                                                  1377 11924000
*   RESPECIFY                                                      1377 11925000
*     MODNAM BASED(NVTCSLNM);                                      1377 11926000
*   IF NVTCSLNM=0 THEN              /* NONE LOADED                   */ 11927000
         L     @14,NVTCSLNM(,RNVT)                                 1378 11928000
         LTR   @14,@14                                             1378 11929000
         BZ    @RT01378                                            1378 11930000
*     GO TO NP5SW3A;                /* GO PUT SYSTEM INTO WAIT       */ 11931000
*   ELSE                                                           1380 11932000
*     ;                                                            1380 11933000
*                                                                  1380 11934000
*   /*****************************************************************/ 11935000
*   /*                                                               */ 11936000
*   /* MOVE PARAMETER 'CLPA' & LAST LOADED MODULE TO MESSAGE         */ 11937000
*   /*                                                               */ 11938000
*   /*****************************************************************/ 11939000
*                                                                  1381 11940000
*   MSGCI1=CLPAO;                   /* CURRENT PARAMETER             */ 11941000
         MVI   MSGCI1+4,C' '                                       1381 11942000
         MVI   MSGCI1+5,C' '                                       1381 11943000
         MVC   MSGCI1(4),CLPAO                                     1381 11944000
*   MSGCI2=MODNAM;                  /* CURRENT MODULE NAME           */ 11945000
*                                                                  1382 11946000
         MVC   MSGCI2(8),MODNAM(@14)                               1382 11947000
*   /*****************************************************************/ 11948000
*   /*                                                               */ 11949000
*   /* SEND CLPA INPUT TERMINATES WITH MODNAME MESSAGE IEAN05I PRM   */ 11950000
*   /* INPUT TERMINATED AT MOD                                       */ 11951000
*   /*                                                               */ 11952000
*   /*****************************************************************/ 11953000
*                                                                  1383 11954000
*   GENERATE REFS(RNVT,NVTWTO,MSGCS,MSGCI1,MSGCI2) SETS(RPARM,REXIT,    11955000
*       RENTRY)(IEAPMNIP TYPE=WTO,PARAM=MSGCS);                    1383 11956000
         IEAPMNIP TYPE=WTO,PARAM=MSGCS                                  11957000
*NP5SW3A:                                                          1384 11958000
*   NVTFLWSC='3A'X;                 /* SET WAIT STATE CODE IN NVT    */ 11959000
NP5SW3A  MVI   NVTFLWSC(RNVT),X'3A'                                1384 11960000
*   GENERATE REFS(RNVT,NVTSWAIT,NVTFLWSC) SETS(REXIT,RENTRY)       1385 11961000
*       (IEAPMNIP TYPE=SWAIT);      /* PUT SYSTEM INTO WAIT          */ 11962000
         IEAPMNIP TYPE=SWAIT                                            11963000
*   END NPA5CERR;                   /* END OF SUBROUTINE             */ 11964000
@EL00017 DS    0H                                                  1386 11965000
@EF00017 DS    0H                                                  1386 11966000
@ER00017 BR    @14                                                 1386 11967000
@PB00017 DS    0H                                                  1387 11968000
*   GENERATE NOREFS NOSETS(EJECT);                                 1387 11969000
*                                                                  1387 11970000
         EJECT                                                          11971000
*/* THE NP5LPDIR ROUTINE OBTAINS THE VIRTUAL ADDRESS OF THE LPA      */ 11972000
*/* DIRECTORY FROM THE BUFFERED NIPQSR  RECORD AND PLACES THIS ADD-  */ 11973000
*/* RESS IN THE CVT. THE NP5LPDIR ROUTINE THEN SETS THE DIRECTORY-   */ 11974000
*/* AVAILABLE FLAG IN THE CVT AND MOVES THE LPA HASH NUMBER FROM     */ 11975000
*/* NIPQSR  TO THE NUCLEUS-RESIDENT IEAVLK00 ROUTINE AT THE ENTRY    */ 11976000
*/* IEAVVMDI. THE NP5LPDIR ROUTINE PLACES THE LPA DIRECTORY ADDRESS  */ 11977000
*/* IN THE CVT TO IDENTIFY THE LOCATION WHICH CURRENTLY REPRESENTS   */ 11978000
*/* THE LOW END OF THE SHARED AREA.                                  */ 11979000
*/* THE LOG REC BIT IN THE CVT IS SET ON TO INDICATE THAT ERROR      */ 11980000
*/* RECORDINGS CAN BE MADE TO THE LOG.  THE  XCTL AND STAE SVC       */ 11981000
*/* ENTRIES ARE REPLACED IN THE SVC TABLE.                           */ 11982000
*                                                                  1388 11983000
*NP5LPDIR:                                                         1388 11984000
*   PROC OPTIONS(NOSAVEAREA);       /* PUT LPA DIR ADDR IN CVT       */ 11985000
         B     @PB00018                                            1388 11986000
NP5LPDIR STM   @14,@12,12(@13)                                     1388 11987000
*   RESPECIFY                                                      1389 11988000
*    (SCVTSPTR) RESTRICTED;                                        1389 11989000
*   CVTLPDIR=NVTLPALO;              /* SET LPA DIRECTORY ADDR        */ 11990000
         MVC   CVTLPDIR(3,RCVT),NVTLPALO+1(RNVT)                   1390 11991000
*   CVTVVMDI=NVTLPAHA;              /* MOVE LPA HASH NUMBER IN       */ 11992000
         MVC   CVTVVMDI(4,RCVT),NVTLPAHA(RNVT)                     1391 11993000
*   CVTDICOM='1'B;                  /* INDICATE LPA DIREC. AVAIL     */ 11994000
         OI    CVTDICOM(RCVT),B'10000000'                          1392 11995000
*   CVTAPTHR='0'B;                  /* INDICATE ALTERNATE PATH RETRY    11996000
*                                      NOW AVAILABLE                 */ 11997000
*   CVTNLOG='0'B;                   /* TURN OFF LOG REC BIT IN CVT   */ 11998000
         NI    CVTAPTHR(RCVT),B'11100111'                          1394 11999000
*   SCVTSPTR=CVTABEND;              /* GET ADDR OF SECONDARY CVT     */ 12000000
         L     SCVTSPTR,CVTABEND(,RCVT)                            1395 12001000
*   NP5XCTL=NVTXCTL;                /* RESTORE XCTL ENTRY ADDR       */ 12002000
         L     @14,SCVTSVCT(,SCVTSPTR)                             1396 12003000
         MVC   NP5XCTL+56(8,@14),NVTXCTL(RNVT)                     1396 12004000
*   NP5STAE=NVTSVC60;               /* RESTORE STAE SVC ENTRY        */ 12005000
         MVC   NP5STAE+480(8,@14),NVTSVC60(RNVT)                   1397 12006000
*   RETURN;                         /* RETURN TO CALLER              */ 12007000
@EL00018 DS    0H                                                  1398 12008000
@EF00018 DS    0H                                                  1398 12009000
@ER00018 LM    @14,@12,12(@13)                                     1398 12010000
         BR    @14                                                 1398 12011000
*   RESPECIFY                                                      1399 12012000
*    (SCVTSPTR) UNRESTRICTED;                                      1399 12013000
*   END NP5LPDIR;                   /* END OF SUBROUTINE             */ 12014000
@PB00018 DS    0H                                                  1401 12015000
*   GENERATE NOREFS NOSETS(EJECT);                                 1401 12016000
         EJECT                                                          12017000
*NP5FIX:                                                           1402 12018000
*   PROC;                           /* FIX ROUTINE                   */ 12019000
         B     @PB00019                                            1402 12020000
NP5FIX   STM   @14,@12,@SA00019                                    1402 12021000
*   RESPECIFY                                                      1403 12022000
*     PARMTAB BASED(NVTPTAB);                                      1403 12023000
*   RESPECIFY                                                      1404 12024000
*     NIPPTE BASED(NPTEPTR);                                       1404 12025000
*   RESPECIFY                                                      1405 12026000
*    (SCNPTR) RESTRICTED;                                          1405 12027000
*   SCNPTR=FIX;                     /* ROUTINES IN FIXED LPA         */ 12028000
*                                                                  1406 12029000
         L     @14,NVTPTAB(,RNVT)                                  1406 12030000
         L     SCNPTR,FIX(,@14)                                    1406 12031000
*   /*****************************************************************/ 12032000
*   /*                                                               */ 12033000
*   /* SEE IF FIX PARAMETER WAS SPECIFIED                            */ 12034000
*   /*                                                               */ 12035000
*   /*****************************************************************/ 12036000
*                                                                  1407 12037000
*   IF SCNPTR=0 THEN                /* NO FIX PARAMETER SPECIFIED    */ 12038000
         LTR   SCNPTR,SCNPTR                                       1407 12039000
         BZ    @RT01407                                            1407 12040000
*     GO TO NP5FXXIT;               /* SKIP FIX PARAM PROCESSING     */ 12041000
*   ELSE                                                           1409 12042000
*     ;                                                            1409 12043000
*   GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)(IEAPMNIP TYPE=REAL); 12044000
         IEAPMNIP TYPE=REAL                                             12045000
*                                   /* SWITCH TCB TO V=R             */ 12046000
*   RESPECIFY                                                      1411 12047000
*     TCB BASED(TCBPTR);                                           1411 12048000
*   RESPECIFY                                                      1412 12049000
*    (TCBPTR) RESTRICTED;                                          1412 12050000
*   TCBPTR=NVTVRTCB;                /* ADDR OF NIP'S V=R TCB         */ 12051000
         L     TCBPTR,NVTVRTCB(,RNVT)                              1413 12052000
*   LLSSAVE=TCBLLS;                 /* SAVE CURRENT VALUE OF         */ 12053000
         MVC   LLSSAVE(4),TCBLLS(TCBPTR)                           1414 12054000
*   JPQSAVE=TCBJPQ;                 /* TCBLLS & TCBJPQ               */ 12055000
         MVC   JPQSAVE(4),TCBJPQ(TCBPTR)                           1415 12056000
*   NP5LPAQ='1'B;                   /* INDICATE NIP'S TCBJPQ REFLECTS   12057000
*                                      LPA QUEUE                     */ 12058000
*                                                                  1416 12059000
         OI    NP5LPAQ,B'10000000'                                 1416 12060000
*   /*****************************************************************/ 12061000
*   /*                                                               */ 12062000
*   /* UNHOOK NIP PROGRAMS FROM QUEUE                                */ 12063000
*   /*                                                               */ 12064000
*   /*****************************************************************/ 12065000
*                                                                  1417 12066000
*   TCBLLS=0;                       /* TAKE NIP LLE'S OFF CHAIN      */ 12067000
         SLR   @14,@14                                             1417 12068000
         ST    @14,TCBLLS(,TCBPTR)                                 1417 12069000
*   TCBJPQ=0;                       /* TAKE NIP PROGRAMS OFF Q       */ 12070000
*                                                                  1418 12071000
         ST    @14,TCBJPQ(,TCBPTR)                                 1418 12072000
*   /*****************************************************************/ 12073000
*   /*                                                               */ 12074000
*   /* POINT TO BLDL ENTRY INTERNAL TO IEAVNP05                      */ 12075000
*   /*                                                               */ 12076000
*   /*****************************************************************/ 12077000
*                                                                  1419 12078000
*   RESPECIFY                                                      1419 12079000
*     BLDLENT BASED(BLDLAREA);                                     1419 12080000
*   NVTVRBLD=ADDR(NP5BAREA);        /* PUT BLDL ENTRY ADDR IN NVT    */ 12081000
         LA    @14,NP5BAREA                                        1420 12082000
         ST    @14,NVTVRBLD(,RNVT)                                 1420 12083000
*   BLDLAREA=ADDR(NP5BAREA);                                       1421 12084000
         ST    @14,BLDLAREA                                        1421 12085000
*   BLDLLL=LENGTH(BLDLPDS);         /* LENGTH OF BLDL ENTRY          */ 12086000
         MVC   BLDLLL(2,@14),@CH00635                              1422 12087000
*   BLDLFF=1;                       /* NO. OF BLDL ENTRIES           */ 12088000
         MVC   BLDLFF(2,@14),@CH00264                              1423 12089000
*   PSAVAR=FIXEQ;                   /* MOVE 'FIX=' INTO CURRENT PARM    12090000
*                                      SAVE AREA                     */ 12091000
         MVI   PSAVAR+4,C' '                                       1424 12092000
         MVI   PSAVAR+5,C' '                                       1424 12093000
         MVC   PSAVAR(4),FIXEQ                                     1424 12094000
*   PLENGTH=LENGTH(FIXEQ);          /* SET PARM LENGTH               */ 12095000
         MVC   PLENGTH(4),@CF00058                                 1425 12096000
*   RESPECIFY                                                      1426 12097000
*    (NPTEPTR) RESTRICTED;                                         1426 12098000
*   NPTEPTR=ADDR(FIX);              /* GET PARMTAB ENTRY FOR FIX     */ 12099000
         L     NPTEPTR,NVTPTAB(,RNVT)                              1427 12100000
         LA    NPTEPTR,FIX(,NPTEPTR)                               1427 12101000
*   NPTESAV=NPTEPTR;                /* SAVE ADDRESS OF FIX ENTRY     */ 12102000
*                                                                  1428 12103000
         ST    NPTEPTR,NPTESAV                                     1428 12104000
*   /*****************************************************************/ 12105000
*   /*                                                               */ 12106000
*   /* SET SWITCH IN IEAVNP05 TO INDICATE WHETHER LIST FLAG IS ON    */ 12107000
*   /*                                                               */ 12108000
*   /*****************************************************************/ 12109000
*                                                                  1429 12110000
*   IF NIPPTLST='1'B THEN           /* LIST FLAG IS ON               */ 12111000
         TM    NIPPTLST(NPTEPTR),B'01000000'                       1429 12112000
         BNO   @RF01429                                            1429 12113000
*     NP5PLLST='1'B;                /* SET ON FLAG IN IEAVNP05       */ 12114000
         OI    NP5PLLST,B'01000000'                                1430 12115000
*   ELSE                            /* LIST FLAG IS OFF              */ 12116000
*     NP5PLLST='0'B;                /* SET OFF FLAG IN IEAVNP05      */ 12117000
         B     @RC01429                                            1431 12118000
@RF01429 NI    NP5PLLST,B'10111111'                                1431 12119000
*   RESPECIFY                                                      1432 12120000
*    (NPTEPTR) UNRESTRICTED;                                       1432 12121000
@RC01429 DS    0H                                                  1433 12122000
*   PLISTNM=IEAFIX;                 /* SET FIRST 6 CHARS OF NAME     */ 12123000
         MVC   PLISTNM(6),IEAFIX                                   1433 12124000
*   CALL NP5MLPRM;                  /* SCAN PARM & PROCESS LISTS     */ 12125000
         BAL   @14,NP5MLPRM                                        1434 12126000
*   RESPECIFY                                                      1435 12127000
*    (SCNPTR) UNRESTRICTED;                                        1435 12128000
*   RPARM=NVTVRTCB;                 /* ADDR OF V=R TCB               */ 12129000
         L     RPARM,NVTVRTCB(,RNVT)                               1436 12130000
*   CALL NP5QLPAQ;                  /* ENQUE ANY FIX RTNS ON ACTIVE     12131000
*                                      LPA QUEUE                     */ 12132000
         BAL   @14,NP5QLPAQ                                        1437 12133000
*   TCBLLS=LLSSAVE;                 /* RESTORE TCBLLE AND TCBJPQ     */ 12134000
         MVC   TCBLLS(4,TCBPTR),LLSSAVE                            1438 12135000
*   TCBJPQ=JPQSAVE;                 /* FIELDS IN NIP'S V=R TCB       */ 12136000
         MVC   TCBJPQ(4,TCBPTR),JPQSAVE                            1439 12137000
*   RESPECIFY                                                      1440 12138000
*    (TCBPTR) UNRESTRICTED;                                        1440 12139000
*   NP5LPAQ='0'B;                   /* NIP'S TCB NO LONGER RE- FLECTS   12140000
*                                      LPA QUEUE                     */ 12141000
         NI    NP5LPAQ,B'01111111'                                 1441 12142000
*NP5FXXIT:                                                         1442 12143000
*   RETURN;                         /* RETURN TO CALLER              */ 12144000
@EL00019 DS    0H                                                  1442 12145000
@EF00019 DS    0H                                                  1442 12146000
@ER00019 LM    @14,@12,@SA00019                                    1442 12147000
         BR    @14                                                 1442 12148000
*   GENERATE NOREFS NOSETS(EJECT);                                 1443 12149000
         EJECT                                                          12150000
*NP5MLPA:                                                          1444 12151000
*   ENTRY;                          /* MLPA ROUTINE                  */ 12152000
         B     @EC01444                                            1444 12153000
NP5MLPA  STM   @14,@12,@SA00019                                    1444 12154000
@EC01444 DS    0H                                                  1445 12155000
*   RESPECIFY                                                      1445 12156000
*    (SCNPTR) RESTRICTED;                                          1445 12157000
*   SCNPTR=MLPA;                    /* ROUTINES IN MODIFIED LPA      */ 12158000
*                                                                  1446 12159000
         L     @14,NVTPTAB(,RNVT)                                  1446 12160000
         L     SCNPTR,MLPA(,@14)                                   1446 12161000
*   /*****************************************************************/ 12162000
*   /*                                                               */ 12163000
*   /* SEE IF MLPA PARAMETER WAS SPECIFIED                           */ 12164000
*   /*                                                               */ 12165000
*   /*****************************************************************/ 12166000
*                                                                  1447 12167000
*   IF SCNPTR=0 THEN                /* MLPA NOT SPECIFIED            */ 12168000
         LTR   SCNPTR,SCNPTR                                       1447 12169000
         BZ    @RT01447                                            1447 12170000
*     GO TO NP5MAXIT;               /* SKIP MLPA PROCESSING          */ 12171000
*   ELSE                                                           1449 12172000
*     ;                                                            1449 12173000
*                                                                  1449 12174000
*   /*****************************************************************/ 12175000
*   /*                                                               */ 12176000
*   /* MUST SWITCH TO V=R TCB, FOR IF FIX PARAMETER IS NOT SPECIFIED */ 12177000
*   /* BLDL FOR IEAMLPXX WILL FAIL.                                  */ 12178000
*   /*                                                               */ 12179000
*   /*****************************************************************/ 12180000
*                                                                  1450 12181000
*   GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)(IEAPMNIP TYPE=REAL); 12182000
         IEAPMNIP TYPE=REAL                                             12183000
*                                   /* SWITCH TCB TO V=R             */ 12184000
*   RESPECIFY                                                      1451 12185000
*     TCB BASED(TCBPTR);                                           1451 12186000
*   RESPECIFY                                                      1452 12187000
*    (TCBPTR) RESTRICTED;                                          1452 12188000
*   TCBPTR=NVTVRTCB;                /* ADDR OF NIP'S V=R TCB         */ 12189000
         L     TCBPTR,NVTVRTCB(,RNVT)                              1453 12190000
*   LLSSAVE=TCBLLS;                 /* SAVE CURRENT VALUE OF         */ 12191000
         MVC   LLSSAVE(4),TCBLLS(TCBPTR)                           1454 12192000
*   JPQSAVE=TCBJPQ;                 /* TCBLLS & TCBJPQ               */ 12193000
         MVC   JPQSAVE(4),TCBJPQ(TCBPTR)                           1455 12194000
*   NP5LPAQ='1'B;                   /* INDICATE NIP'S TCBJPQ REFLECTS   12195000
*                                      LPA QUEUE                     */ 12196000
*                                                                  1456 12197000
         OI    NP5LPAQ,B'10000000'                                 1456 12198000
*   /*****************************************************************/ 12199000
*   /*                                                               */ 12200000
*   /* UNHOOK NIP PROGRAMS FROM QUEUE                                */ 12201000
*   /*                                                               */ 12202000
*   /*****************************************************************/ 12203000
*                                                                  1457 12204000
*   TCBLLS=0;                       /* TAKE NIP LLE'S OFF CHAIN      */ 12205000
         SLR   @14,@14                                             1457 12206000
         ST    @14,TCBLLS(,TCBPTR)                                 1457 12207000
*   TCBJPQ=0;                       /* TAKE NIP PROGRAMS OFF Q       */ 12208000
         ST    @14,TCBJPQ(,TCBPTR)                                 1458 12209000
*   RESPECIFY                                                      1459 12210000
*     BLDLENT BASED(BLDLAREA);                                     1459 12211000
*   NVTVRBLD=ADDR(NP5BAREA);        /* PUT BLDL ENTRY ADDR IN NVT    */ 12212000
         LA    @14,NP5BAREA                                        1460 12213000
         ST    @14,NVTVRBLD(,RNVT)                                 1460 12214000
*   BLDLAREA=ADDR(NP5BAREA);                                       1461 12215000
         ST    @14,BLDLAREA                                        1461 12216000
*   BLDLLL=LENGTH(BLDLPDS);         /* LENGTH OF BLDL ENTRY          */ 12217000
         MVC   BLDLLL(2,@14),@CH00635                              1462 12218000
*   BLDLFF=1;                       /* NO. OF BLDL ENTRIES           */ 12219000
         MVC   BLDLFF(2,@14),@CH00264                              1463 12220000
*   PSAVAR=MLPAEQ;                  /* PUT MLPA= IN PARM SAVE        */ 12221000
         MVI   PSAVAR+5,C' '                                       1464 12222000
         MVC   PSAVAR(5),MLPAEQ                                    1464 12223000
*   PLENGTH=LENGTH(MLPAEQ);         /* SET PARAM LENGTH              */ 12224000
         MVC   PLENGTH(4),@CF00267                                 1465 12225000
*   RESPECIFY                                                      1466 12226000
*    (NPTEPTR) RESTRICTED;                                         1466 12227000
*   NPTEPTR=ADDR(MLPA);             /* GET PARMTAB ENTRY FOR MLPA    */ 12228000
         L     NPTEPTR,NVTPTAB(,RNVT)                              1467 12229000
         LA    NPTEPTR,MLPA(,NPTEPTR)                              1467 12230000
*   NPTESAV=NPTEPTR;                /* SAVE ADDRESS OF MLPA ENTRY    */ 12231000
*                                                                  1468 12232000
         ST    NPTEPTR,NPTESAV                                     1468 12233000
*   /*****************************************************************/ 12234000
*   /*                                                               */ 12235000
*   /* SET SWITCH IN IEAVNP05 TO INDICATE WHETHER LIST FLAG IS ON    */ 12236000
*   /*                                                               */ 12237000
*   /*****************************************************************/ 12238000
*                                                                  1469 12239000
*   IF NIPPTLST='1'B THEN           /* LIST FLAG IS ON               */ 12240000
         TM    NIPPTLST(NPTEPTR),B'01000000'                       1469 12241000
         BNO   @RF01469                                            1469 12242000
*     NP5PLLST='1'B;                /* SET ON FLAG IN IEAVNP05       */ 12243000
         OI    NP5PLLST,B'01000000'                                1470 12244000
*   ELSE                            /* LIST FLAG IS OFF              */ 12245000
*     NP5PLLST='0'B;                /* SET OFF FLAG IN IEAVNP05      */ 12246000
         B     @RC01469                                            1471 12247000
@RF01469 NI    NP5PLLST,B'10111111'                                1471 12248000
*   RESPECIFY                                                      1472 12249000
*    (NPTEPTR) UNRESTRICTED;                                       1472 12250000
@RC01469 DS    0H                                                  1473 12251000
*   PLISTNM=IEALPA;                 /* SET FIRST 6 CHARS OF NAME     */ 12252000
         MVC   PLISTNM(6),IEALPA                                   1473 12253000
*   CALL NP5MLPRM;                  /* SCAN PARM & PROCESS LISTS     */ 12254000
         BAL   @14,NP5MLPRM                                        1474 12255000
*   RESPECIFY                                                      1475 12256000
*    (SCNPTR) UNRESTRICTED;                                        1475 12257000
*                                                                  1475 12258000
*   /*****************************************************************/ 12259000
*   /*                                                               */ 12260000
*   /* MUST SWITCH TO V=V TCB SO THAT NP5QLPAQ WILL QUEUE TCBJPQ ON  */ 12261000
*   /* V=V TCB TO IEAQLPA.                                           */ 12262000
*   /*                                                               */ 12263000
*   /*****************************************************************/ 12264000
*                                                                  1476 12265000
*   GENERATE REFS(NVTVIRT,RNVT) SETS(RENTRY,REXIT)(IEAPMNIP TYPE=VIRT); 12266000
         IEAPMNIP TYPE=VIRT                                             12267000
*                                   /* SWITCH TCB TO V=V             */ 12268000
*   RPARM=NVTVVTCB;                 /* ADDR OF V=V TCB               */ 12269000
         L     RPARM,NVTVVTCB(,RNVT)                               1477 12270000
*   CALL NP5QLPAQ;                  /* ENQUE ANY MLPA RTNS ON ACTIVE    12271000
*                                      LPA QUEUE                     */ 12272000
*                                                                  1478 12273000
         BAL   @14,NP5QLPAQ                                        1478 12274000
*   /*****************************************************************/ 12275000
*   /*                                                               */ 12276000
*   /* SWITCH BACK TO V=R TCB                                        */ 12277000
*   /*                                                               */ 12278000
*   /*****************************************************************/ 12279000
*                                                                  1479 12280000
*   GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)(IEAPMNIP TYPE=REAL); 12281000
         IEAPMNIP TYPE=REAL                                             12282000
*                                   /* SWITCH TCB TO V=R             */ 12283000
*   TCBLLS=LLSSAVE;                 /* RESTORE TCBLLE AND TCBJPQ     */ 12284000
         MVC   TCBLLS(4,TCBPTR),LLSSAVE                            1480 12285000
*   TCBJPQ=JPQSAVE;                 /* FIELDS IN NIP'S V=R TCB       */ 12286000
         MVC   TCBJPQ(4,TCBPTR),JPQSAVE                            1481 12287000
*   RESPECIFY                                                      1482 12288000
*    (TCBPTR) UNRESTRICTED;                                        1482 12289000
*   NP5LPAQ='0'B;                   /* NIP'S TCB NO LONGER RE- FLECTS   12290000
*                                      LPA QUEUE                     */ 12291000
         NI    NP5LPAQ,B'01111111'                                 1483 12292000
*NP5MAXIT:                                                         1484 12293000
*   RETURN;                         /* RETURN TO CALLER              */ 12294000
         B     @EL00019                                            1484 12295000
*   END NP5FIX;                     /* END OF SUBROUTINE             */ 12296000
         B     @EL00019                                            1485 12297000
@PB00019 DS    0H                                                  1486 12298000
*   GENERATE NOREFS NOSETS(EJECT);                                 1486 12299000
         EJECT                                                          12300000
*NP5MLPRM:                                                         1487 12301000
*   PROC;                           /* MODIFY LPA COMMON RTN         */ 12302000
         B     @PB00020                                            1487 12303000
NP5MLPRM STM   @14,@12,@SA00020                                    1487 12304000
*   RESPECIFY                                                      1488 12305000
*    (RNVT,                                                        1488 12306000
*     RCVT,                                                        1488 12307000
*     SCNPTR) RESTRICTED;                                          1488 12308000
*                                                                  1488 12309000
*/*   SCAN THROUGH LEADING PARENTHESES                               */ 12310000
*                                                                  1489 12311000
*NP5PARND:                                                         1489 12312000
*   IF PARMCHAR(1)¬='(' THEN        /* CHAR IS OTHER THAN PAREN      */ 12313000
NP5PARND CLI   PARMCHAR(SCNPTR),C'('                               1489 12314000
         BNE   @RT01489                                            1489 12315000
*     GO TO NP5MLSUF;               /* SCAN NEXT TWO CHARS           */ 12316000
*   ELSE                                                           1491 12317000
*     DO;                                                          1491 12318000
*       SCNPTR=SCNPTR+1;            /* INCREMENT ONE CHARACTER       */ 12319000
         LA    SCNPTR,1(,SCNPTR)                                   1492 12320000
*       GO TO NP5PARND;             /* CHECK NEXT CHARACTER          */ 12321000
         B     NP5PARND                                            1493 12322000
*     END;                                                         1494 12323000
*   RESPECIFY                                                      1495 12324000
*    (RI) RESTRICTED;                                              1495 12325000
*NP5MLSUF:                          /* ARE NEXT 2 CHARACTERS       1496 12326000
*                                      ALPHA-NUMERIC                 */ 12327000
*   RI=0;                           /* ZERO OUT INCREMENT            */ 12328000
NP5MLSUF SLR   RI,RI                                               1496 12329000
*NP5MLSU2:                                                         1497 12330000
*   IF PARMCHAR(1)>='A'&PARMCHAR(1)<='Z'|PARMCHAR(1)>='0'&PARMCHAR(1)<= 12331000
*       '9' THEN                    /* CHARACTER IS ALPANUMERIC      */ 12332000
NP5MLSU2 CLI   PARMCHAR(SCNPTR),C'A'                               1497 12333000
         BL    @GL00020                                            1497 12334000
         CLI   PARMCHAR(SCNPTR),C'Z'                               1497 12335000
         BNH   @RT01497                                            1497 12336000
@GL00020 CLI   PARMCHAR(SCNPTR),C'0'                               1497 12337000
         BL    @RF01497                                            1497 12338000
         CLI   PARMCHAR(SCNPTR),C'9'                               1497 12339000
         BH    @RF01497                                            1497 12340000
@RT01497 DS    0H                                                  1498 12341000
*     DO;                                                          1498 12342000
*       IF RI=1 THEN                /* SECOND CHARACTER CHECKED      */ 12343000
         LA    @14,1                                               1499 12344000
         CR    RI,@14                                              1499 12345000
         BE    @RT01499                                            1499 12346000
*         GO TO NP5MLNEX;           /* CHECK FOR PAREN               */ 12347000
*       ELSE                        /* CHECK SECOND CHARACTER        */ 12348000
*         DO;                                                      1501 12349000
*           RI=1;                   /* INCREMENT TO SECOND CHAR      */ 12350000
         LR    RI,@14                                              1502 12351000
*           SCNPTR=SCNPTR+RI;       /* INCREMENT POINTER             */ 12352000
         ALR   SCNPTR,RI                                           1503 12353000
*           GO TO NP5MLSU2;         /* CHECK CHARACTER               */ 12354000
         B     NP5MLSU2                                            1504 12355000
*         END;                                                     1505 12356000
*     END;                                                         1506 12357000
*   ELSE                                                           1507 12358000
*NP5MLPNV:                                                         1507 12359000
*     DO;                                                          1507 12360000
@RF01497 DS    0H                                                  1507 12361000
NP5MLPNV DS    0H                                                  1508 12362000
*       ERRORCD=PINV;               /* PARAMETER IS INVALID          */ 12363000
         MVI   ERRORCD,X'04'                                       1508 12364000
*       GO TO NP5MLERR;             /* INVOKE ERROR ROUTINE          */ 12365000
         B     NP5MLERR                                            1509 12366000
*     END;                                                         1510 12367000
*NP5MLNEX:                                                         1511 12368000
*   SCNPTR=SCNPTR+1;                /* INCREMENT CHARACTER PTR       */ 12369000
NP5MLNEX LA    SCNPTR,1(,SCNPTR)                                   1511 12370000
*   RESPECIFY                                                      1512 12371000
*    (RI) UNRESTRICTED;                                            1512 12372000
*                                                                  1512 12373000
*   /*****************************************************************/ 12374000
*   /*                                                               */ 12375000
*   /* SEE IF CHARACTER FOLLOWING 2 CHAR SUFFIX IS A COMMA, QUOTE OR */ 12376000
*   /* PARENTESIS                                                    */ 12377000
*   /*                                                               */ 12378000
*   /*****************************************************************/ 12379000
*                                                                  1513 12380000
*   IF PARMCHAR(1)¬=','&PARMCHAR(1)¬=''''&PARMCHAR(1)¬=')' THEN/*  1513 12381000
*                                      CHAR IS NOT A PROPER DELIM    */ 12382000
         CLI   PARMCHAR(SCNPTR),C','                               1513 12383000
         BE    @RF01513                                            1513 12384000
         CLI   PARMCHAR(SCNPTR),C''''                              1513 12385000
         BE    @RF01513                                            1513 12386000
         CLI   PARMCHAR(SCNPTR),C')'                               1513 12387000
         BNE   @RT01513                                            1513 12388000
*     GO TO NP5MLPNV;               /* PARAMETER IS INVALID          */ 12389000
*   ELSE                                                           1515 12390000
*     ;                                                            1515 12391000
@RF01513 DS    0H                                                  1516 12392000
*   SCNPTR=SCNPTR-2;                /* POINT BACK TO SUFFIX          */ 12393000
         BCTR  SCNPTR,0                                            1516 12394000
         BCTR  SCNPTR,0                                            1516 12395000
*   SAVESCAN=SCNPTR;                /* SAVE PTR TO INPUT             */ 12396000
         ST    SCNPTR,SAVESCAN                                     1517 12397000
*   PLISTEL=PARMCHAR(1:2);          /* APPEND 2 CHARS AT SCAN TO   1518 12398000
*                                      CURRENT LIST NAME             */ 12399000
         MVC   PLISTEL(2),PARMCHAR(SCNPTR)                         1518 12400000
*   NP5PLRF='1'B;                   /* IND. PARMLIB PDS REFRESH      */ 12401000
         OI    NP5PLRF,B'00100000'                                 1519 12402000
*NP5MLMOD:                          /* OBTAIN MODULE NAME FROM     1520 12403000
*                                      PARMLIB LIST                  */ 12404000
*   RPARM=CHARSAV;                  /* RESTORE TXT CHAR PTR          */ 12405000
NP5MLMOD L     RPARM,CHARSAV                                       1520 12406000
*   CALL NP5PLIST;                                                 1521 12407000
*                                                                  1521 12408000
         BAL   @14,NP5PLIST                                        1521 12409000
*   /*****************************************************************/ 12410000
*   /*                                                               */ 12411000
*   /* CHECK RETURN CODES FROM NP5PLIST                              */ 12412000
*   /*                                                               */ 12413000
*   /*****************************************************************/ 12414000
*                                                                  1522 12415000
*   IF PLISTRC=VALIDM THEN          /* VALID MODULE NAME             */ 12416000
         CLI   PLISTRC,X'00'                                       1522 12417000
         BNE   @RF01522                                            1522 12418000
*     DO;                                                          1523 12419000
*       CHARSAV=RPARM;              /* SAVE TXT CHAR PTR             */ 12420000
         ST    RPARM,CHARSAV                                       1524 12421000
*       GO TO NP5MLNAM;             /* PROCESS NAME                  */ 12422000
         B     NP5MLNAM                                            1525 12423000
*     END;                                                         1526 12424000
*   ELSE                                                           1527 12425000
*     ;                                                            1527 12426000
*                                                                  1527 12427000
@RF01522 DS    0H                                                  1528 12428000
*   /*****************************************************************/ 12429000
*   /*                                                               */ 12430000
*   /* SEE IF INVALID FORMAT                                         */ 12431000
*   /*                                                               */ 12432000
*   /*****************************************************************/ 12433000
*                                                                  1528 12434000
*   IF PLISTRC=INVFORM THEN         /* INVALID FORMAT - MOD          */ 12435000
         CLI   PLISTRC,X'04'                                       1528 12436000
         BNE   @RF01528                                            1528 12437000
*     DO;                                                          1529 12438000
*NP5MLMNV:                                                         1530 12439000
*       ERRORCD=MODINV;             /* INDICATE MODNAME IN LIST    1530 12440000
*                                      INVALID FOR SUBROUTINE        */ 12441000
NP5MLMNV MVI   ERRORCD,X'08'                                       1530 12442000
*       GO TO NP5MLERR;             /* INVOKE ERROR ROUTINE          */ 12443000
         B     NP5MLERR                                            1531 12444000
*     END;                                                         1532 12445000
*   ELSE                                                           1533 12446000
*     ;                                                            1533 12447000
*                                                                  1533 12448000
@RF01528 DS    0H                                                  1534 12449000
*   /*****************************************************************/ 12450000
*   /*                                                               */ 12451000
*   /* SEE IF INVALID FORMAT FOR LIBRARY                             */ 12452000
*   /*                                                               */ 12453000
*   /*****************************************************************/ 12454000
*                                                                  1534 12455000
*   IF PLISTRC=INVFORL THEN         /* INVALID FORMAT - LIBRARY      */ 12456000
         CLI   PLISTRC,X'08'                                       1534 12457000
         BNE   @RF01534                                            1534 12458000
*     DO;                                                          1535 12459000
*NP5MLLNV:                                                         1536 12460000
*       ERRORCD='0C'X;              /* INDICATE LIB NAME IN LIST   1536 12461000
*                                      INVALID FOR SUBROUTINE        */ 12462000
NP5MLLNV MVI   ERRORCD,X'0C'                                       1536 12463000
*       GO TO NP5MLERR;             /* INVOKE ERROR TOUTINE          */ 12464000
         B     NP5MLERR                                            1537 12465000
*     END;                                                         1538 12466000
*   ELSE                                                           1539 12467000
*     ;                                                            1539 12468000
*                                                                  1539 12469000
@RF01534 DS    0H                                                  1540 12470000
*   /*****************************************************************/ 12471000
*   /*                                                               */ 12472000
*   /* SEE IF END OF INPUT LIST                                      */ 12473000
*   /*                                                               */ 12474000
*   /*****************************************************************/ 12475000
*                                                                  1540 12476000
*   IF PLISTRC=INPUTND THEN         /* END OF INPUT LIST             */ 12477000
         CLI   PLISTRC,X'0C'                                       1540 12478000
         BE    @RT01540                                            1540 12479000
*     GO TO NP5MLPMX;               /* CHECK NEXT SUFFIX             */ 12480000
*                                                                  1541 12481000
*   /*****************************************************************/ 12482000
*   /*                                                               */ 12483000
*   /* SEE IF APF REQUEST                                            */ 12484000
*   /*                                                               */ 12485000
*   /*****************************************************************/ 12486000
*                                                                  1542 12487000
*   ELSE                                                           1542 12488000
*     ;                                                            1542 12489000
*   IF PLISTRC='14'X THEN                                          1543 12490000
         CLI   PLISTRC,X'14'                                       1543 12491000
         BE    @RT01543                                            1543 12492000
*     GO TO NP5MLXIT;               /* APF REQUEST- RETURN TO NP5APF */ 12493000
*   NP5RTRY='1'B;                   /* DISANOSTIC ALREADY ISSUED   1545 12494000
*                                      RETRY MESSAGE ONLY            */ 12495000
         OI    NP5RTRY,B'00010000'                                 1545 12496000
*NP5MLERR:                                                         1546 12497000
*   CALL NP5PRMER;                  /* INVOKE ERROR RECORDER RTN     */ 12498000
*                                                                  1546 12499000
NP5MLERR BAL   @14,NP5PRMER                                        1546 12500000
*   /*****************************************************************/ 12501000
*   /*                                                               */ 12502000
*   /* CHECK RETURN CODES SEE IF RETRY WITH NEW PARAMETER            */ 12503000
*   /*                                                               */ 12504000
*   /*****************************************************************/ 12505000
*                                                                  1547 12506000
*   IF PRMERRC=RETRY0 THEN          /* RETRY WITH NEW PARAMETER      */ 12507000
         CLI   PRMERRC,X'00'                                       1547 12508000
         BE    @RT01547                                            1547 12509000
*     GO TO NP5PARND;               /* PROCESS NEW PARAMETER         */ 12510000
*   ELSE                                                           1549 12511000
*NP5MLXIT:                                                         1549 12512000
*     RETURN;                       /* RETURN TO CALLER              */ 12513000
@EL00020 DS    0H                                                  1549 12514000
@EF00020 DS    0H                                                  1549 12515000
@ER00020 LM    @14,@12,@SA00020                                    1549 12516000
         BR    @14                                                 1549 12517000
*NP5MLPMX:                                                         1550 12518000
*   SCNPTR=SAVESCAN+2;              /* INCR PTR PAST CURRENT SUFFIX  */ 12519000
*                                                                  1550 12520000
NP5MLPMX L     @14,SAVESCAN                                        1550 12521000
         LA    @14,2(,@14)                                         1550 12522000
         LR    SCNPTR,@14                                          1550 12523000
*   /*****************************************************************/ 12524000
*   /*                                                               */ 12525000
*   /* SEE IF NEXT CHAR IS A COMMA                                   */ 12526000
*   /*                                                               */ 12527000
*   /*****************************************************************/ 12528000
*                                                                  1551 12529000
*   IF PARMCHAR(1)=',' THEN         /* CHARACTER IS A COMMA          */ 12530000
         CLI   PARMCHAR(SCNPTR),C','                               1551 12531000
         BNE   @RF01551                                            1551 12532000
*     DO;                                                          1552 12533000
*       SCNPTR=SCNPTR+1;            /* INCREMENT PAST COMMA          */ 12534000
         LA    SCNPTR,1(,SCNPTR)                                   1553 12535000
*       GO TO NP5MLSUF;             /* CHECK NEW SUFFIX              */ 12536000
         B     NP5MLSUF                                            1554 12537000
*     END;                                                         1555 12538000
*   ELSE                                                           1556 12539000
*     GO TO NP5MLXIT;               /* RETURN                        */ 12540000
*   RESPECIFY                                                      1557 12541000
*    (PDS2PTR) RESTRICTED;                                         1557 12542000
*NP5MLNAM:                          /* MOVE CURRENT MODULE NAME TO 1558 12543000
*                                      BLDL ENTRY AREA               */ 12544000
*   PDS2PTR=NVTVRBLD+LENGTH(BLDLHDR);/* ADDR OF 1ST ENTRY            */ 12545000
NP5MLNAM L     @14,NVTVRBLD(,RNVT)                                 1558 12546000
         LA    @14,4(,@14)                                         1558 12547000
         LR    PDS2PTR,@14                                         1558 12548000
*   PDS2NAME=CURMOD;                /* CURRENT MODULE NAME           */ 12549000
*                                                                  1559 12550000
         MVC   PDS2NAME(8,PDS2PTR),CURMOD                          1559 12551000
*   /*****************************************************************/ 12552000
*   /*                                                               */ 12553000
*   /* ISSUE BLDL FOR INPUT NAME                                     */ 12554000
*   /*                                                               */ 12555000
*   /*****************************************************************/ 12556000
*                                                                  1560 12557000
*   SAVPTR=RPARM;                   /* SAVE CARD IMAGE PTR           */ 12558000
         ST    RPARM,SAVPTR                                        1560 12559000
*   RPARM=DCBPTR;                   /* DCB ADDR FOR BLDL             */ 12560000
         L     RPARM,DCBPTR                                        1561 12561000
*   RESPECIFY                                                      1562 12562000
*    (RCODE) RESTRICTED;                                           1562 12563000
*   GENERATE REFS(RPARM,NP5BAREA) SETS(RPARM0,RPARM,RCODE);        1563 12564000
*                                                                  1563 12565000
          BLDL (RPARM),NP5BAREA                                         12566000
*   /*****************************************************************/ 12567000
*   /*                                                               */ 12568000
*   /* SEE IF BLDL WAS SUCCESSFUL                                    */ 12569000
*   /*                                                               */ 12570000
*   /*****************************************************************/ 12571000
*                                                                  1564 12572000
*   IF RCODE=BLD0 THEN              /* BLDL WAS SUCCESSFUL           */ 12573000
         LTR   RCODE,RCODE                                         1564 12574000
         BZ    @RT01564                                            1564 12575000
*     GO TO NP5MLLMD;               /* GET PDS INFORMATION           */ 12576000
*   ELSE                                                           1566 12577000
*     ;                                                            1566 12578000
*                                                                  1566 12579000
*   /*****************************************************************/ 12580000
*   /*                                                               */ 12581000
*   /* WAS THERE A BLDL ERROR                                        */ 12582000
*   /*                                                               */ 12583000
*   /*****************************************************************/ 12584000
*                                                                  1567 12585000
*   IF RCODE=BLD4 THEN              /* MODULE NOT FOUND              */ 12586000
         CH    RCODE,@CH00058                                      1567 12587000
         BE    @RT01567                                            1567 12588000
*     GO TO NP5MLNFN;               /* WRITE MESSAGE                 */ 12589000
*   ELSE                                                           1569 12590000
*     ;                                                            1569 12591000
*   RESPECIFY                                                      1570 12592000
*    (RCODE) UNRESTRICTED;                                         1570 12593000
*                                                                  1570 12594000
*   /*****************************************************************/ 12595000
*   /*                                                               */ 12596000
*   /* I/O ERROR IN BLDL MOVE CURRENT MODULE & DATA SET NAMES TO MSG */ 12597000
*   /*                                                               */ 12598000
*   /*****************************************************************/ 12599000
*                                                                  1571 12600000
*   MSGAI1=PDS2NAME;                /* CURRENT MODULE NAME           */ 12601000
         MVI   MSGAI1+8,C' '                                       1571 12602000
         MVC   MSGAI1(8),PDS2NAME(PDS2PTR)                         1571 12603000
*   MSGAI2=LIBNAME;                 /* CURRENT LIST DATASET NAME     */ 12604000
*                                                                  1572 12605000
         MVC   MSGAI2(12),LIBNAME                                  1572 12606000
*   /*****************************************************************/ 12607000
*   /*                                                               */ 12608000
*   /* IEAN05I I/O ERROR DURING BLDL FOR MEM IN DSN                  */ 12609000
*   /*                                                               */ 12610000
*   /*****************************************************************/ 12611000
*                                                                  1573 12612000
*   GENERATE REFS(RNVT,NVTWTO,MSGAS,MSGAI1,MSGAI2) SETS(RPARM,REXIT,    12613000
*       RENTRY)(IEAPMNIP TYPE=WTO,PARAM=MSGAS);                    1573 12614000
         IEAPMNIP TYPE=WTO,PARAM=MSGAS                                  12615000
*   GO TO NP5MLMOD;                 /* GET NEXT MODULE FROM LIST     */ 12616000
         B     NP5MLMOD                                            1574 12617000
*NP5MLNFN:                          /* MODULE NOT FOUND BY BLDL      */ 12618000
*                                                                  1575 12619000
*   /*****************************************************************/ 12620000
*   /*                                                               */ 12621000
*   /* MOVE CURRENT MODULE & DATA SET NAMES TO MESSAGE               */ 12622000
*   /*                                                               */ 12623000
*   /*****************************************************************/ 12624000
*                                                                  1575 12625000
*   MSGDI1=PDS2NAME;                /* CURRENT MODULE NAME           */ 12626000
NP5MLNFN MVI   MSGDI1+8,C' '                                       1575 12627000
         MVC   MSGDI1(8),PDS2NAME(PDS2PTR)                         1575 12628000
*   MSGDI2=LIBNAME;                 /* CURRENT LIST DATASET NAME     */ 12629000
*                                                                  1576 12630000
         MVC   MSGDI2(12),LIBNAME                                  1576 12631000
*   /*****************************************************************/ 12632000
*   /*                                                               */ 12633000
*   /* IEAN05I MEM NOT FOUND IN DSN                                  */ 12634000
*   /*                                                               */ 12635000
*   /*****************************************************************/ 12636000
*                                                                  1577 12637000
*   GENERATE REFS(RNVT,NVTWTO,MSGDS,MSGDI1,MSGDI2) SETS(RPARM,REXIT,    12638000
*       RENTRY)(IEAPMNIP TYPE=WTO,PARAM=MSGDS);                    1577 12639000
         IEAPMNIP TYPE=WTO,PARAM=MSGDS                                  12640000
*   GO TO NP5MLMOD;                 /* GET NEXT MODULE FROM LIST     */ 12641000
         B     NP5MLMOD                                            1578 12642000
*NP5MLLMD:                                                         1579 12643000
*                                                                  1579 12644000
*   /*****************************************************************/ 12645000
*   /*                                                               */ 12646000
*   /* TO AVOID INCORRECT CDES AND INCORRECT ALIASES, THE FOLLOWING  */ 12647000
*   /* TESTS ARE MADE. IF THE LOAD MODULE WAS CREATED BY THE OS      */ 12648000
*   /* LINKAGE EDITOR AND THE ALIAS BIT IS ON IN THE DIRECTORY THE   */ 12649000
*   /* REENTRANT OR THE REUSABLE BIT MUXT BE ON. IF NOT, THE ALIAS   */ 12650000
*   /* BIT IS TURNED ON , AND A COPY OF THE MODULE IS LOADED FOR     */ 12651000
*   /* EVERY ALIAS THAT IS ALSO ADDED.                               */ 12652000
*   /*                                                               */ 12653000
*   /*****************************************************************/ 12654000
*                                                                  1579 12655000
*   IF PDS2ALIS='1'B&PDSAOSLE='0'B&PDS2RENT='0'B&PDS2REUS='0'B THEN     12656000
NP5MLLMD TM    PDS2ALIS(PDS2PTR),B'10000000'                       1579 12657000
         BNO   @RF01579                                            1579 12658000
         TM    PDSAOSLE(PDS2PTR),B'10000000'                       1579 12659000
         BNZ   @RF01579                                            1579 12660000
         TM    PDS2RENT(PDS2PTR),B'11000000'                       1579 12661000
         BNZ   @RF01579                                            1579 12662000
*     PDS2ALIS='0'B;                                               1580 12663000
*                                                                  1580 12664000
         NI    PDS2ALIS(PDS2PTR),B'01111111'                       1580 12665000
*   /*****************************************************************/ 12666000
*   /*                                                               */ 12667000
*   /* SEE IF CURRENT OPTION IS FIX                                  */ 12668000
*   /*                                                               */ 12669000
*   /*****************************************************************/ 12670000
*                                                                  1581 12671000
*   IF PSAVAR(1:PLENGTH)=FIXEQ(1:PLENGTH) THEN/* CURRENT OPTION IS 1581 12672000
*                                      FIX                           */ 12673000
@RF01579 L     @14,PLENGTH                                         1581 12674000
         BCTR  @14,0                                               1581 12675000
         EX    @14,@SC04134                                        1581 12676000
         BE    @RT01581                                            1581 12677000
*     GO TO NP5MLVR;                /* LOAD IN V=R SPACE             */ 12678000
*   ELSE                                                           1583 12679000
*     ;                                                            1583 12680000
*   GENERATE REFS(NVTVIRT,RNVT) SETS(RENTRY,REXIT)(IEAPMNIP TYPE=VIRT); 12681000
         IEAPMNIP TYPE=VIRT                                             12682000
*                                   /* SWITCH TO V=V                 */ 12683000
*   RESPECIFY                                                      1585 12684000
*     BLDLENT BASED(BLDLSAV);                                      1585 12685000
*   BLDLENT=NVTVRBLD->BLDLENT;      /* MOVE BLDL ENTRY IN IEAVNP05 TO   12686000
*                                      BLDL ENTRY IN SQA             */ 12687000
*                                                                  1586 12688000
         L     @14,BLDLSAV                                         1586 12689000
         L     @07,NVTVRBLD(,RNVT)                                 1586 12690000
         MVC   BLDLENT(64,@14),BLDLENT(@07)                        1586 12691000
*   /*****************************************************************/ 12692000
*   /*                                                               */ 12693000
*   /* SEARCH FOR DUPLICATE OR ALIAS MODULE BEFORE LOADING           */ 12694000
*   /*                                                               */ 12695000
*   /*****************************************************************/ 12696000
*                                                                  1587 12697000
*   CALL NP5CDESR;                  /* SEARCH TCBJPQ AND IEAQLPA     */ 12698000
         BAL   @14,NP5CDESR                                        1587 12699000
*   IF NP5CDEFD='1'B THEN           /* WAS A CDE FOUND               */ 12700000
         TM    NP5CDEFD,B'00100000'                                1588 12701000
         BO    @RT01588                                            1588 12702000
*     GO TO NP5MREAL;               /* YES - DUP. GET NXT MOD        */ 12703000
*   ELSE                                                           1590 12704000
*     ;                             /* SETTUP TO LOAD MODULE         */ 12705000
*   CALL NPA5ADDR;                  /* CALCULATE MODULE LOAD ADDR    */ 12706000
*                                                                  1591 12707000
         BAL   @14,NPA5ADDR                                        1591 12708000
*   /*****************************************************************/ 12709000
*   /*                                                               */ 12710000
*   /* SEE IF STORAGE IS UNAVAILABLE                                 */ 12711000
*   /*                                                               */ 12712000
*   /*****************************************************************/ 12713000
*                                                                  1592 12714000
*   IF ADDRRC=STRUNAV THEN          /* STORAGE IS UNAVAILABLE        */ 12715000
         CLI   ADDRRC,X'04'                                        1592 12716000
         BNE   @RF01592                                            1592 12717000
*     DO;                                                          1593 12718000
*       GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)             1594 12719000
*           (IEAPMNIP TYPE=REAL);   /* SWITCH TO V=R                 */ 12720000
         IEAPMNIP TYPE=REAL                                             12721000
*       GO TO NP5MLNCR;             /* WRITE MESSAGE                 */ 12722000
         B     NP5MLNCR                                            1595 12723000
*     END;                                                         1596 12724000
*   ELSE                                                           1597 12725000
*     ;                                                            1597 12726000
@RF01592 DS    0H                                                  1598 12727000
*   CALL NPA5LOAD;                  /* LOAD MODULE TO V=V AREA       */ 12728000
         BAL   @14,NPA5LOAD                                        1598 12729000
*NP5MREAL:                                                         1599 12730000
*   GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)(IEAPMNIP TYPE=REAL); 12731000
NP5MREAL IEAPMNIP TYPE=REAL                                             12732000
*                                   /* SWITCH TO V=R                 */ 12733000
*   GO TO NP5MLMOD;                 /* GET NEXT MODULE FORM LIST     */ 12734000
         B     NP5MLMOD                                            1600 12735000
*NP5MLVR:                           /* PROCESSING FOR FIX OPTION     */ 12736000
*                                                                  1601 12737000
*   /*****************************************************************/ 12738000
*   /*                                                               */ 12739000
*   /* SEARCH FOR DUPLICATE OR ALIAS MODULE BEFORE LOADING           */ 12740000
*   /*                                                               */ 12741000
*   /*****************************************************************/ 12742000
*                                                                  1601 12743000
*   CALL NP5CDESR;                  /* SEARCH TCBJPQ AND IEAQLPA     */ 12744000
NP5MLVR  BAL   @14,NP5CDESR                                        1601 12745000
*   IF NP5CDEFD='1'B THEN           /* WAS A CDE FOUND               */ 12746000
         TM    NP5CDEFD,B'00100000'                                1602 12747000
         BO    @RT01602                                            1602 12748000
*     GO TO NP5MLMOD;               /* YES - DUP. GET NXT MOD        */ 12749000
*   ELSE                                                           1604 12750000
*     ;                             /* SETTUP TO LOAD MODULE         */ 12751000
*                                                                  1604 12752000
*   /*****************************************************************/ 12753000
*   /*                                                               */ 12754000
*   /* RESET PAGE ALIGN FLAG IN CURRENT BLDL ENTRY                   */ 12755000
*   /*                                                               */ 12756000
*   /*****************************************************************/ 12757000
*                                                                  1605 12758000
*   PDS2PAGA='0'B;                                                 1605 12759000
*                                                                  1605 12760000
         NI    PDS2PAGA(PDS2PTR),B'11011111'                       1605 12761000
*   /*****************************************************************/ 12762000
*   /*                                                               */ 12763000
*   /* FLAG BLDL ENTRY SERIALLY REUSABLE                             */ 12764000
*   /*                                                               */ 12765000
*   /*****************************************************************/ 12766000
*                                                                  1606 12767000
*   PDS2REUS='1'B;                                                 1606 12768000
*                                                                  1606 12769000
*   /*****************************************************************/ 12770000
*   /*                                                               */ 12771000
*   /* FLAG BLDL ENTRY NOT REENTRANT                                 */ 12772000
*   /*                                                               */ 12773000
*   /*****************************************************************/ 12774000
*                                                                  1607 12775000
*   PDS2RENT='0'B;                                                 1607 12776000
*                                                                  1607 12777000
         OI    PDS2REUS(PDS2PTR),B'01000000'                       1607 12778000
         NI    PDS2RENT(PDS2PTR),B'01111111'                       1607 12779000
*   /*****************************************************************/ 12780000
*   /*                                                               */ 12781000
*   /* NEXT AVAILABLE V=R ADDR ROUNDED UP TO DBWRD BNDRY             */ 12782000
*   /*                                                               */ 12783000
*   /*****************************************************************/ 12784000
*                                                                  1608 12785000
*   LOADADR=(NVTNUCND+7)&ROUNDDWD;                                 1608 12786000
         LA    @14,7                                               1608 12787000
         AL    @14,NVTNUCND(,RNVT)                                 1608 12788000
         N     @14,@CF00121                                        1608 12789000
         ST    @14,LOADADR                                         1608 12790000
*   RESPECIFY                                                      1609 12791000
*    (MLPASZ) RESTRICTED;                                          1609 12792000
*NP5MLLOD:                                                         1610 12793000
*   MLPASZ=PDS2STOR;                /* SIZE OF MODULE TO LOAD        */ 12794000
NP5MLLOD SLR   MLPASZ,MLPASZ                                       1610 12795000
         ICM   MLPASZ,7,PDS2STOR(PDS2PTR)                          1610 12796000
*   SIZESAVE=SIZESAVE&&SIZESAVE;    /* CLEAR RMDR FIELD FOR SIZE     */ 12797000
*                                                                  1611 12798000
         L     @14,SIZESAVE                                        1611 12799000
         LR    @00,@14                                             1611 12800000
         XR    @00,@14                                             1611 12801000
         ST    @00,SIZESAVE                                        1611 12802000
*   /*****************************************************************/ 12803000
*   /*                                                               */ 12804000
*   /* CHECK FOR MODULE SIZE GREATER THAN 4096. IF GREATER, THEN THE */ 12805000
*   /* SIZE MUST BE ROUNDED UP TO THE NEXT MULTIPLE OF 4K. THE AMOUNT*/ 12806000
*   /* OVER THE MODULE SIZE THAT IS FREE- MAINED MUST BE GETMAINED   */ 12807000
*   /* BACK AGAIN.                                                   */ 12808000
*   /*                                                               */ 12809000
*   /*****************************************************************/ 12810000
*                                                                  1612 12811000
*   IF MLPASZ>PAGE THEN                                            1612 12812000
         LH    @14,@CH00044                                        1612 12813000
         CR    MLPASZ,@14                                          1612 12814000
         BNH   @RF01612                                            1612 12815000
*     DO;                                                          1613 12816000
*                                                                  1613 12817000
*       /*************************************************************/ 12818000
*       /*                                                           */ 12819000
*       /* ROUND BEGIN ADDR TO NEXT 4K BOUNDARY                      */ 12820000
*       /*                                                           */ 12821000
*       /*************************************************************/ 12822000
*                                                                  1614 12823000
*       LOADADR=(LOADADR+PAGEM1)&ROUNDPAG;                         1614 12824000
         LA    @00,4095                                            1614 12825000
         AL    @00,LOADADR                                         1614 12826000
         N     @00,@CF00123                                        1614 12827000
         ST    @00,LOADADR                                         1614 12828000
*       SIZESAVE=PAGE-(MLPASZ&OVERPAG);/* AMOUNT OVER MODULE SIZE    */ 12829000
*                                                                  1615 12830000
         LR    @00,MLPASZ                                          1615 12831000
         N     @00,@CF00127                                        1615 12832000
         LCR   @00,@00                                             1615 12833000
         ALR   @00,@14                                             1615 12834000
         ST    @00,SIZESAVE                                        1615 12835000
*       /*************************************************************/ 12836000
*       /*                                                           */ 12837000
*       /* IF SIZE IS EQUAL TO A MULTIPLE OF 4K ZERO OUT REMAINDER   */ 12838000
*       /* FIELD, FOR THERE IS NO REMAINDER.                         */ 12839000
*       /*                                                           */ 12840000
*       /*************************************************************/ 12841000
*                                                                  1616 12842000
*       IF SIZESAVE=PAGE THEN                                      1616 12843000
         CR    @00,@14                                             1616 12844000
         BNE   @RF01616                                            1616 12845000
*         SIZESAVE=SIZESAVE&&SIZESAVE;                             1617 12846000
         LR    @14,@00                                             1617 12847000
         XR    @14,@00                                             1617 12848000
         ST    @14,SIZESAVE                                        1617 12849000
*       MLPASZ=MLPASZ+SIZESAVE;     /* UP MOD SIZE TO NEXT MULTIPLE     12850000
*                                      OF 4K                         */ 12851000
@RF01616 AL    MLPASZ,SIZESAVE                                     1618 12852000
*     END;                                                         1619 12853000
*                                                                  1619 12854000
*   /*****************************************************************/ 12855000
*   /*                                                               */ 12856000
*   /* SEE IF THERE IS SPACE AVAILABLE FOR THIS LOAD                 */ 12857000
*   /*                                                               */ 12858000
*   /*****************************************************************/ 12859000
*                                                                  1620 12860000
*   IF LOADADR+MLPASZ<=NVTNBFND THEN/* SPACE AVAILABLE               */ 12861000
@RF01612 L     @14,LOADADR                                         1620 12862000
         LR    @00,MLPASZ                                          1620 12863000
         ALR   @00,@14                                             1620 12864000
         C     @00,NVTNBFND(,RNVT)                                 1620 12865000
         BH    @RF01620                                            1620 12866000
*     DO;                                                          1621 12867000
*                                                                  1621 12868000
*       /*************************************************************/ 12869000
*       /*                                                           */ 12870000
*       /* FREE AREA FOR LOAD                                        */ 12871000
*       /*                                                           */ 12872000
*       /*************************************************************/ 12873000
*                                                                  1622 12874000
*       RPARM=LOADADR;              /* LOAD ADDR FOR MACRO           */ 12875000
         LR    RPARM,@14                                           1622 12876000
*       GENERATE REFS(RPARM,MLPASZ) SETS(RPARM0,RPARM)             1623 12877000
*           (FREEMAIN  R,LV=(MLPASZ),A=(RPARM),SP=251);            1623 12878000
*                                                                  1623 12879000
         FREEMAIN  R,LV=(MLPASZ),A=(RPARM),SP=251                       12880000
*       /*************************************************************/ 12881000
*       /*                                                           */ 12882000
*       /* LOAD MODULE INTO FIX AREA                                 */ 12883000
*       /*                                                           */ 12884000
*       /*************************************************************/ 12885000
*                                                                  1624 12886000
*       RPARM=DCBPTR;               /* DCB PTR FOR LOAD              */ 12887000
         L     RPARM,DCBPTR                                        1624 12888000
*       GENERATE(LOAD DE=(PDS2PTR),DCB=(RPARM));                   1625 12889000
         LOAD DE=(PDS2PTR),DCB=(RPARM)                                  12890000
*       NVTNUCND=LOADADR+MLPASZ;    /* RESET NVTNUCND                */ 12891000
         LR    @14,MLPASZ                                          1626 12892000
         AL    @14,LOADADR                                         1626 12893000
         ST    @14,NVTNUCND(,RNVT)                                 1626 12894000
*       IF SIZESAVE¬=0 THEN                                        1627 12895000
         L     @14,SIZESAVE                                        1627 12896000
         LTR   @14,@14                                             1627 12897000
         BZ    @RF01627                                            1627 12898000
*         DO;                                                      1628 12899000
*           MLPASZ=SIZESAVE;        /* GETMAIN BACK CORE NOT USED BY    12900000
*                                      LOAD                          */ 12901000
         LR    MLPASZ,@14                                          1629 12902000
*NP5MLLO2:                                                         1630 12903000
*           GENERATE REFS(MLPASZ) SETS(RPARM0,RPARM)               1630 12904000
*               (GETMAIN R,LV=(MLPASZ),SP=SP251);                  1630 12905000
NP5MLLO2 GETMAIN R,LV=(MLPASZ),SP=SP251                                 12906000
*         END;                                                     1631 12907000
*       RESPECIFY                                                  1632 12908000
*        (MLPASZ) UNRESTRICTED;                                    1632 12909000
*       GO TO NP5MLMOD;             /* GET NEXT MODULE FROM LIST     */ 12910000
         B     NP5MLMOD                                            1633 12911000
*     END;                                                         1634 12912000
*   ELSE                                                           1635 12913000
*     ;                                                            1635 12914000
@RF01620 DS    0H                                                  1636 12915000
*NP5MLNCR:                                                         1636 12916000
*   CALL NP5LPNCR;                  /* WRITE STORAGE UNAVAILABLE     */ 12917000
NP5MLNCR BAL   @14,NP5LPNCR                                        1636 12918000
*   NVTFLWSC='38'X;                 /* SET WAIT STATE CODE IN NVT    */ 12919000
         MVI   NVTFLWSC(RNVT),X'38'                                1637 12920000
*   GENERATE REFS(RNVT,NVTSWAIT,NVTFLWSC) SETS(REXIT,RENTRY)       1638 12921000
*       (IEAPMNIP TYPE=SWAIT);      /* PLACE SYSTEM IN WAIT STATE    */ 12922000
         IEAPMNIP TYPE=SWAIT                                            12923000
*   RESPECIFY                                                      1639 12924000
*    (PDS2PTR,                                                     1639 12925000
*     SCNPTR) UNRESTRICTED;                                        1639 12926000
*   GENERATE NOREFS NOSETS(EJECT);                                 1640 12927000
         EJECT                                                          12928000
*NP5QLPAQ:                                                         1641 12929000
*   ENTRY;                          /* ACTIVE LPA ENQUEUE RTN        */ 12930000
         B     @EC01641                                            1641 12931000
NP5QLPAQ STM   @14,@12,@SA00020                                    1641 12932000
@EC01641 DS    0H                                                  1642 12933000
*   RESPECIFY                                                      1642 12934000
*    (TCBPTR) RESTRICTED;                                          1642 12935000
*   TCBPTR=RPARM;                   /* ADDR OF TCB USED FOR LOAD     */ 12936000
*                                                                  1643 12937000
         LR    TCBPTR,RPARM                                        1643 12938000
*   /*****************************************************************/ 12939000
*   /*                                                               */ 12940000
*   /* IS THERE A LOAD LIST                                          */ 12941000
*   /*                                                               */ 12942000
*   /*****************************************************************/ 12943000
*                                                                  1644 12944000
*   IF TCBJPQ=0 THEN                /* NO LOAD LIST                  */ 12945000
         SLR   @14,@14                                             1644 12946000
         L     @08,TCBJPQ(,TCBPTR)                                 1644 12947000
         CR    @08,@14                                             1644 12948000
         BE    @RT01644                                            1644 12949000
*     GO TO NP5QLXIT;               /* SKIP LPA QUEUE PROCESSING     */ 12950000
*   ELSE                                                           1646 12951000
*     ;                                                            1646 12952000
*                                                                  1646 12953000
*   /*****************************************************************/ 12954000
*   /*                                                               */ 12955000
*   /* IS THERE AN ACTIVE LPA                                        */ 12956000
*   /*                                                               */ 12957000
*   /*****************************************************************/ 12958000
*                                                                  1647 12959000
*   IF IEAQLPA=0 THEN               /* NO ACTIVE LPA                 */ 12960000
         L     @05,CVTQLPAQ(,RCVT)                                 1647 12961000
         C     @14,IEAQLPA(,@05)                                   1647 12962000
         BNE   @RF01647                                            1647 12963000
*     IEAQLPA=TCBJPQ;               /* ESTABLISH ACTIVE LPA QUEUE    */ 12964000
         ST    @08,IEAQLPA(,@05)                                   1648 12965000
*   ELSE                                                           1649 12966000
*     DO;                                                          1649 12967000
         B     @RC01647                                            1649 12968000
@RF01647 DS    0H                                                  1650 12969000
*       RESPECIFY                                                  1650 12970000
*        (CDENTPTR) RESTRICTED;                                    1650 12971000
*       CDENTPTR=IEAQLPA;           /* GET CDE QUEUE ORIGIN          */ 12972000
*                                                                  1651 12973000
         L     @14,CVTQLPAQ(,RCVT)                                 1651 12974000
         L     CDENTPTR,IEAQLPA(,@14)                              1651 12975000
*       /*************************************************************/ 12976000
*       /*                                                           */ 12977000
*       /* FOLLOW CDE CHAIN TO THE LAST CDE                          */ 12978000
*       /*                                                           */ 12979000
*       /*************************************************************/ 12980000
*                                                                  1652 12981000
*NP5QLADD:                                                         1652 12982000
*       IF CDCHAIN¬=0 THEN          /* MORE ON CHAIN                 */ 12983000
NP5QLADD L     @14,CDCHAIN(,CDENTPTR)                              1652 12984000
         LTR   @14,@14                                             1652 12985000
         BZ    @RF01652                                            1652 12986000
*         DO;                                                      1653 12987000
*           CDENTPTR=CDCHAIN;       /* GET NEXT CDE ADDRESS          */ 12988000
         LR    CDENTPTR,@14                                        1654 12989000
*           GO TO NP5QLADD;         /* CHECK NEXT CDE                */ 12990000
         B     NP5QLADD                                            1655 12991000
*         END;                                                     1656 12992000
*       ELSE                                                       1657 12993000
*         ;                                                        1657 12994000
*                                                                  1657 12995000
@RF01652 DS    0H                                                  1658 12996000
*       /*************************************************************/ 12997000
*       /*                                                           */ 12998000
*       /* CHAIN THE FIRST CDE IN JPQ TO THE LAST LPA CDE            */ 12999000
*       /*                                                           */ 13000000
*       /*************************************************************/ 13001000
*                                                                  1658 13002000
*       CDCHAIN=TCBJPQ;             /* FIRST TO LAST                 */ 13003000
         MVC   CDCHAIN(4,CDENTPTR),TCBJPQ(TCBPTR)                  1658 13004000
*     END;                                                         1659 13005000
*                                                                  1659 13006000
*   /*****************************************************************/ 13007000
*   /*                                                               */ 13008000
*   /* UNHOOK LPA QUEUE FROM NIP'S TASK                              */ 13009000
*   /*                                                               */ 13010000
*   /*****************************************************************/ 13011000
*                                                                  1660 13012000
*   TCBJPQ=0;                       /* RESET TCBJPQ VALUE TO ZERO    */ 13013000
*                                                                  1660 13014000
@RC01647 SLR   @14,@14                                             1660 13015000
         ST    @14,TCBJPQ(,TCBPTR)                                 1660 13016000
*   /*****************************************************************/ 13017000
*   /*                                                               */ 13018000
*   /* SET ALL CDE'S ON LPA QUEUE REENTRANT & LOADED BY NIP          */ 13019000
*   /*                                                               */ 13020000
*   /*****************************************************************/ 13021000
*                                                                  1661 13022000
*   CDENTPTR=IEAQLPA;               /* GET CDE QUEUE ORIGIN          */ 13023000
         L     @14,CVTQLPAQ(,RCVT)                                 1661 13024000
         L     CDENTPTR,IEAQLPA(,@14)                              1661 13025000
*NP5QLTCB:                                                         1662 13026000
*   CDNIP='1'B;                     /* LOADED BY NIP                 */ 13027000
NP5QLTCB DS    0H                                                  1663 13028000
*   CDREN='1'B;                     /* REENTRANT                     */ 13029000
*   CDJPA='0'B;                     /* NOT JOB PACK AREA             */ 13030000
         OI    CDNIP(CDENTPTR),B'10100000'                         1664 13031000
         NI    CDJPA(CDENTPTR),B'11111101'                         1664 13032000
*   CDUSE='0001'X;                  /* USE COUNT OF ONE              */ 13033000
         MVC   CDUSE(2,CDENTPTR),@CH03111                          1665 13034000
*   CDENTPTR=CDCHAIN;               /* GET NEXT CDE ADDR             */ 13035000
*                                                                  1666 13036000
         L     CDENTPTR,CDCHAIN(,CDENTPTR)                         1666 13037000
*   /*****************************************************************/ 13038000
*   /*                                                               */ 13039000
*   /* SEE IF AT END OF CHAIN                                        */ 13040000
*   /*                                                               */ 13041000
*   /*****************************************************************/ 13042000
*                                                                  1667 13043000
*   IF CDENTPTR¬=0 THEN             /* MORE CDE'S ON CHAIN           */ 13044000
         LTR   CDENTPTR,CDENTPTR                                   1667 13045000
         BNZ   @RT01667                                            1667 13046000
*     GO TO NP5QLTCB;               /* SET NEXT CDE                  */ 13047000
*   ELSE                                                           1669 13048000
*     ;                                                            1669 13049000
*   RESPECIFY                                                      1670 13050000
*    (CDENTPTR) UNRESTRICTED;                                      1670 13051000
*   CALL NP5FJPQ;                   /* PURGE LLE'S FOR LPA MODULE    */ 13052000
         BAL   @14,NP5FJPQ                                         1671 13053000
*NP5QLXIT:                                                         1672 13054000
*   RETURN;                         /* RETURN TO CALLER              */ 13055000
         B     @EL00020                                            1672 13056000
*   RESPECIFY                                                      1673 13057000
*    (TCBPTR) UNRESTRICTED;                                        1673 13058000
*   GENERATE NOREFS NOSETS(EJECT);                                 1674 13059000
         EJECT                                                          13060000
*NP5BLDLF:                                                         1675 13061000
*   ENTRY;                          /* BLDL TABLE - BLDLF ROUTINE    */ 13062000
         B     @EC01675                                            1675 13063000
NP5BLDLF STM   @14,@12,@SA00020                                    1675 13064000
@EC01675 DS    0H                                                  1676 13065000
*   RESPECIFY                                                      1676 13066000
*    (SCNPTR) RESTRICTED;                                          1676 13067000
*   SCNPTR=BLDLF;                   /* GET ADDRESS OF BLDLF LIST     */ 13068000
*                                                                  1677 13069000
         L     @14,NVTPTAB(,RNVT)                                  1677 13070000
         L     SCNPTR,BLDLF(,@14)                                  1677 13071000
*   /*****************************************************************/ 13072000
*   /*                                                               */ 13073000
*   /* WAS BLDLF PARAMETER SPECIFIED                                 */ 13074000
*   /*                                                               */ 13075000
*   /*****************************************************************/ 13076000
*                                                                  1678 13077000
*   IF SCNPTR=0 THEN                /* BLDLF NOT SPECIFIED           */ 13078000
         LTR   SCNPTR,SCNPTR                                       1678 13079000
         BZ    @RT01678                                            1678 13080000
*     GO TO NP5BFXIT;               /* SKIP BLDLF PROCESSING         */ 13081000
*   ELSE                                                           1680 13082000
*     ;                             /* PROCESS BLDLF                 */ 13083000
*   GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)(IEAPMNIP TYPE=REAL); 13084000
         IEAPMNIP TYPE=REAL                                             13085000
*                                   /* SWITCH TCB TO V=R             */ 13086000
*   PSAVAR=BLDLFEQ;                 /* PUT BLDLF= IN CURRENT SAVE    */ 13087000
         MVC   PSAVAR(6),BLDLFEQ                                   1682 13088000
*   PLENGTH=LENGTH(BLDLFEQ);        /* SET LENGTH OF BLDLF=          */ 13089000
         MVC   PLENGTH(4),@CF00282                                 1683 13090000
*   RESPECIFY                                                      1684 13091000
*    (NPTEPTR) RESTRICTED;          /* RESTRICT REGISTER 8           */ 13092000
*   NPTEPTR=ADDR(BLDLF);            /* PARMTAB ENTRY FOR BLDLF       */ 13093000
         L     NPTEPTR,NVTPTAB(,RNVT)                              1685 13094000
         LA    NPTEPTR,BLDLF(,NPTEPTR)                             1685 13095000
*   NPTESAV=NPTEPTR;                /* SAVE PTR TO PARMTAB ENTRY     */ 13096000
*                                                                  1686 13097000
         ST    NPTEPTR,NPTESAV                                     1686 13098000
*   /*****************************************************************/ 13099000
*   /*                                                               */ 13100000
*   /* SET SWITCH IN IEAVNP05 TO INDICATE WHETHER LIST FLAG IS ON    */ 13101000
*   /*                                                               */ 13102000
*   /*****************************************************************/ 13103000
*                                                                  1687 13104000
*   IF NIPPTLST='1'B THEN           /* LIST FLAG IS ON               */ 13105000
         TM    NIPPTLST(NPTEPTR),B'01000000'                       1687 13106000
         BNO   @RF01687                                            1687 13107000
*     NP5PLLST='1'B;                /* SET ON FLAG IN IEAVNP05       */ 13108000
         OI    NP5PLLST,B'01000000'                                1688 13109000
*   ELSE                            /* LIST FLAG IS OFF              */ 13110000
*     NP5PLLST='0'B;                /* SET OFF FLAG IN IEAVNP05      */ 13111000
         B     @RC01687                                            1689 13112000
@RF01687 NI    NP5PLLST,B'10111111'                                1689 13113000
*   RESPECIFY                                                      1690 13114000
*    (NPTEPTR) UNRESTRICTED;                                       1690 13115000
*                                                                  1690 13116000
@RC01687 DS    0H                                                  1691 13117000
*   /*****************************************************************/ 13118000
*   /*                                                               */ 13119000
*   /* WAS BLDL PARAMETER ALSO SPECIFIED                             */ 13120000
*   /*                                                               */ 13121000
*   /*****************************************************************/ 13122000
*                                                                  1691 13123000
*   IF BLDL=0 THEN                  /* BLDL WAS NOT SPECIFIED        */ 13124000
         L     @14,NVTPTAB(,RNVT)                                  1691 13125000
         ICM   @08,15,BLDL(@14)                                    1691 13126000
         BZ    @RT01691                                            1691 13127000
*     GO TO NP5BFCOM;               /* PROCESS BLDLF LIST            */ 13128000
*   ELSE                                                           1693 13129000
*     ;                             /* BOTH BLDL AND BLDLF SPEC-   1693 13130000
*                                      IFIED                         */ 13131000
*                                                                  1693 13132000
*   /*****************************************************************/ 13133000
*   /*                                                               */ 13134000
*   /* SEND BLDL IGNORED MESSAGE                                     */ 13135000
*   /*                                                               */ 13136000
*   /*****************************************************************/ 13137000
*                                                                  1694 13138000
*   MSG3I=BLDLEQ(1:4);              /* PUT BLDL PARM INTO MSG        */ 13139000
*                                                                  1694 13140000
         MVI   MSG3I+4,C' '                                        1694 13141000
         MVI   MSG3I+5,C' '                                        1694 13142000
         MVC   MSG3I(4),BLDLEQ                                     1694 13143000
*   /*****************************************************************/ 13144000
*   /*                                                               */ 13145000
*   /* IEA107I PRM IGNORED                                           */ 13146000
*   /*                                                               */ 13147000
*   /*****************************************************************/ 13148000
*                                                                  1695 13149000
*   GENERATE REFS(RNVT,NVTWTO,MSG3S,MSG3I) SETS(RPARM,REXIT,RENTRY)     13150000
*       (IEAPMNIP TYPE=WTO,PARAM=MSG3S);                           1695 13151000
         IEAPMNIP TYPE=WTO,PARAM=MSG3S                                  13152000
*   BLDL=0;                         /* BYPASS PAGED BLDL PROC.       */ 13153000
         L     @14,NVTPTAB(,RNVT)                                  1696 13154000
         SLR   @08,@08                                             1696 13155000
         ST    @08,BLDL(,@14)                                      1696 13156000
*NP5BFCOM:                          /* SCAN PARAMETER & PROCESS LIST */ 13157000
*   CALL NP5BLPRM;                  /* BLDL COMMON ROUTINE           */ 13158000
NP5BFCOM BAL   @14,NP5BLPRM                                        1697 13159000
*   RESPECIFY                                                      1698 13160000
*    (SCNPTR) UNRESTRICTED;                                        1698 13161000
*NP5BFXIT:                                                         1699 13162000
*   RETURN;                         /* RETURN TO CALLER              */ 13163000
         B     @EL00020                                            1699 13164000
*   GENERATE NOREFS NOSETS(EJECT);                                 1700 13165000
         EJECT                                                          13166000
*NP5BLDLP:                                                         1701 13167000
*   ENTRY;                          /* BLDL TABLE - BLDL ROUTINE     */ 13168000
         B     @EC01701                                            1701 13169000
NP5BLDLP STM   @14,@12,@SA00020                                    1701 13170000
@EC01701 DS    0H                                                  1702 13171000
*   RESPECIFY                                                      1702 13172000
*    (SCNPTR) RESTRICTED;                                          1702 13173000
*   SCNPTR=BLDL;                    /* GET BLDL LIST FROM PARMTAB    */ 13174000
*                                                                  1703 13175000
         L     @14,NVTPTAB(,RNVT)                                  1703 13176000
         L     SCNPTR,BLDL(,@14)                                   1703 13177000
*   /*****************************************************************/ 13178000
*   /*                                                               */ 13179000
*   /* WAS BLDL SPECIFIED                                            */ 13180000
*   /*                                                               */ 13181000
*   /*****************************************************************/ 13182000
*                                                                  1704 13183000
*   IF SCNPTR=0 THEN                /* BLDL NOT SPECIFIED            */ 13184000
         LTR   SCNPTR,SCNPTR                                       1704 13185000
         BZ    @RT01704                                            1704 13186000
*     GO TO NP5BPXIT;               /* SKIP BLDL PROCESSING          */ 13187000
*   ELSE                                                           1706 13188000
*     ;                             /* CONTINUE WITH BLDL            */ 13189000
*   GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)(IEAPMNIP TYPE=REAL); 13190000
         IEAPMNIP TYPE=REAL                                             13191000
*                                   /* SWITCH TCB TO V=R             */ 13192000
*   RESPECIFY                                                      1708 13193000
*    (NPTEPTR) RESTRICTED;          /* RESTRICT REGISTER 8           */ 13194000
*   NPTEPTR=ADDR(BLDL);             /* PARMTAB ENTRY ADDRESS         */ 13195000
         L     NPTEPTR,NVTPTAB(,RNVT)                              1709 13196000
         LA    NPTEPTR,BLDL(,NPTEPTR)                              1709 13197000
*   NPTESAV=NPTEPTR;                /* SAVE PTR TO PARMTAB ENTRY     */ 13198000
         ST    NPTEPTR,NPTESAV                                     1710 13199000
*   PSAVAR=BLDLEQ;                  /* PUT BLDL= INTO SAVE           */ 13200000
         MVI   PSAVAR+5,C' '                                       1711 13201000
         MVC   PSAVAR(5),BLDLEQ                                    1711 13202000
*   PLENGTH=LENGTH(BLDLEQ);         /* GET LENGTH OF BLDL=           */ 13203000
*                                                                  1712 13204000
         MVC   PLENGTH(4),@CF00267                                 1712 13205000
*   /*****************************************************************/ 13206000
*   /*                                                               */ 13207000
*   /* SET SWITCH IN IEAVNP05 TO INDICATE WHETHER LIST FLAG IS ON    */ 13208000
*   /*                                                               */ 13209000
*   /*****************************************************************/ 13210000
*                                                                  1713 13211000
*   IF NIPPTLST='1'B THEN           /* LIST FLAG IS ON               */ 13212000
         TM    NIPPTLST(NPTEPTR),B'01000000'                       1713 13213000
         BNO   @RF01713                                            1713 13214000
*     NP5PLLST='1'B;                /* SET ON FLAG IN IEAVNP05       */ 13215000
         OI    NP5PLLST,B'01000000'                                1714 13216000
*   ELSE                            /* LIST FLAG IS OFF              */ 13217000
*     NP5PLLST='0'B;                /* SET OFF FLAG IN IEAVNP05      */ 13218000
         B     @RC01713                                            1715 13219000
@RF01713 NI    NP5PLLST,B'10111111'                                1715 13220000
*   RESPECIFY                                                      1716 13221000
*    (NPTEPTR) UNRESTRICTED;                                       1716 13222000
@RC01713 DS    0H                                                  1717 13223000
*NP5BPCOM:                          /* SCAN PARAMETER & PROCESS LIST */ 13224000
*   CALL NP5BLPRM;                  /* BLDL COMMON ROUTINE           */ 13225000
NP5BPCOM BAL   @14,NP5BLPRM                                        1717 13226000
*   RESPECIFY                                                      1718 13227000
*    (SCNPTR) UNRESTRICTED;                                        1718 13228000
*NP5BPXIT:                                                         1719 13229000
*   GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)(IEAPMNIP TYPE=REAL); 13230000
NP5BPXIT IEAPMNIP TYPE=REAL                                             13231000
*                                   /* SWITCH TCB TO V=R             */ 13232000
*   RETURN;                                                        1720 13233000
         B     @EL00020                                            1720 13234000
*   END NP5MLPRM;                   /* END OF SUBROUTINE             */ 13235000
         B     @EL00020                                            1721 13236000
@PB00020 DS    0H                                                  1722 13237000
*   GENERATE NOREFS NOSETS(EJECT);                                 1722 13238000
*                                                                  1722 13239000
         EJECT                                                          13240000
*   /*****************************************************************/ 13241000
*   /*                                                               */ 13242000
*   /* ROUTINE TO SEARCH THE ACTIVE LPA (IEAQLPA) AND TCBJPQ FOR     */ 13243000
*   /* DUPLICATE MODULES AND ALIASES THAT HAVE NOT BEEN LOADED       */ 13244000
*   /*                                                               */ 13245000
*   /*****************************************************************/ 13246000
*                                                                  1723 13247000
*NP5CDESR:                                                         1723 13248000
*   PROC OPTIONS(NOSAVEAREA);                                      1723 13249000
         B     @PB00021                                            1723 13250000
NP5CDESR STM   @14,@12,12(@13)                                     1723 13251000
*   RESPECIFY                                                      1724 13252000
*    (TCBPTR,                                                      1724 13253000
*     CDENTPTR,                                                    1724 13254000
*     PDS2PTR) RESTRICTED;                                         1724 13255000
*   TCBPTR=NVTVRTCB;                /* GET POINTER TO TCB            */ 13256000
         L     TCBPTR,NVTVRTCB(,RNVT)                              1725 13257000
*   NP5DPALS='00'X;                 /* CLEAR DUPLICATE - ALIAS SWITCH*/ 13258000
         MVI   NP5DPALS,X'00'                                      1726 13259000
*   IF TCBJPQ=0 THEN                /* NO JPQ - CHECK IEAQLPA        */ 13260000
         L     @14,TCBJPQ(,TCBPTR)                                 1727 13261000
         LTR   @14,@14                                             1727 13262000
         BZ    @RT01727                                            1727 13263000
*     GO TO NP5CQLPA;               /* SETTUP FOR IEAQLPA SRCH       */ 13264000
*   ELSE                                                           1729 13265000
*     ;                                                            1729 13266000
*   CDENTPTR=TCBJPQ;                /* SEARCH TCBJPQ FOR MODULE      */ 13267000
         LR    CDENTPTR,@14                                        1730 13268000
*NP5CSRCH:                                                         1731 13269000
*   DO WHILE CDENTPTR¬=0;           /* SEARCH THRU CDE CHAIN         */ 13270000
NP5CSRCH B     @DE01731                                            1731 13271000
@DL01731 DS    0H                                                  1732 13272000
*     IF PDS2NAME¬=CDNAME THEN      /* UNEQUAL - CHECK ALIAS         */ 13273000
         CLC   PDS2NAME(8,PDS2PTR),CDNAME(CDENTPTR)                1732 13274000
         BE    @RF01732                                            1732 13275000
*       DO;                                                        1733 13276000
*         IF PDS2ALIS='1'B THEN     /* IS THIS AN ALIAS ENTRY        */ 13277000
         TM    PDS2ALIS(PDS2PTR),B'10000000'                       1734 13278000
         BNO   @RF01734                                            1734 13279000
*           DO;                     /* SETTUP FOR MAJNAME CHECK      */ 13280000
*             PDSAPTR=ADDR(PDSBCEND);/* PNT PAST BASIC SCTN          */ 13281000
         LA    @14,PDSBCEND(,PDS2PTR)                              1736 13282000
         ST    @14,PDSAPTR                                         1736 13283000
*             IF PDS2SCTR='1'B THEN /* SCTR LOAD PRESENT             */ 13284000
         TM    PDS2SCTR(PDS2PTR),B'00000100'                       1737 13285000
         BNO   @RF01737                                            1737 13286000
*               PDSAPTR=PDSAPTR+LENGTH(PDSS01);/* STEP PAST SCTR DATA   13287000
*                                      IN PDS                        */ 13288000
         AH    @14,@CH00050                                        1738 13289000
         ST    @14,PDSAPTR                                         1738 13290000
*             ELSE                                                 1739 13291000
*               ;                   /* NO SCTR PRESENT               */ 13292000
@RF01737 DS    0H                                                  1740 13293000
*             IF PDSAPTR->PDS2MNM=CDNAME THEN/* SEE IF MAJOR IS    1740 13294000
*                                      ALREADY LOADED                */ 13295000
         L     @14,PDSAPTR                                         1740 13296000
         CLC   PDS2MNM(8,@14),CDNAME(CDENTPTR)                     1740 13297000
         BNE   @RF01740                                            1740 13298000
*               NP5MAJOR='1'B;      /* INDICATE MAJOR FOUND AND    1741 13299000
*                                      CONTINUE SEARCH               */ 13300000
         OI    NP5MAJOR,B'01000000'                                1741 13301000
*             ELSE                                                 1742 13302000
*               ;                   /* NOT MAJOR                     */ 13303000
@RF01740 DS    0H                                                  1743 13304000
*           END;                    /* END OF ALIAS PROCESSING       */ 13305000
*         ELSE                                                     1744 13306000
*           ;                       /* NOT ALIAS                     */ 13307000
@RF01734 DS    0H                                                  1745 13308000
*       END;                        /* END NOT DUPLICATE PROC        */ 13309000
*     ELSE                          /* DUPLICATE - BYPASS LOADNG     */ 13310000
*       DO;                                                        1746 13311000
         B     @RC01732                                            1746 13312000
@RF01732 DS    0H                                                  1747 13313000
*         NP5CDEFD='1'B;            /* INDICATE DUPLICATE ENTRY      */ 13314000
         OI    NP5CDEFD,B'00100000'                                1747 13315000
*         RETURN;                   /* RETURN TO CALLER              */ 13316000
@EL00021 DS    0H                                                  1748 13317000
@EF00021 DS    0H                                                  1748 13318000
@ER00021 LM    @14,@12,12(@13)                                     1748 13319000
         BR    @14                                                 1748 13320000
*       END;                                                       1749 13321000
*     CDENTPTR=CDCHAIN;             /* POINT TO NEXT CDE             */ 13322000
@RC01732 L     CDENTPTR,CDCHAIN(,CDENTPTR)                         1750 13323000
*   END;                            /* END OF CDE SEARCH LOOP        */ 13324000
@DE01731 LTR   CDENTPTR,CDENTPTR                                   1751 13325000
         BNZ   @DL01731                                            1751 13326000
*NP5CQLPA:                                                         1752 13327000
*   IF NP5ACTVE='0'B THEN           /* HAS THE ACTIVE LPA BEEN     1752 13328000
*                                      SEARCHED                      */ 13329000
NP5CQLPA TM    NP5ACTVE,B'10000000'                                1752 13330000
         BNZ   @RF01752                                            1752 13331000
*     DO;                           /* NO SETTUP FOR SEARCH          */ 13332000
*       CDENTPTR=IEAQLPA;           /* GET PTR TO ACTIVE QUEUE       */ 13333000
         L     @14,CVTQLPAQ(,RCVT)                                 1754 13334000
         L     CDENTPTR,IEAQLPA(,@14)                              1754 13335000
*       NP5ACTVE='1'B;              /* INDICATE ACTIVE SEARCHED      */ 13336000
         OI    NP5ACTVE,B'10000000'                                1755 13337000
*       GO TO NP5CSRCH;             /* SEARCH THE ACTIVE LPA QUE     */ 13338000
         B     NP5CSRCH                                            1756 13339000
*     END;                                                         1757 13340000
*   ELSE                                                           1758 13341000
*     ;                             /* ACTIVE LPA HAS BEEN SRCHD     */ 13342000
@RF01752 DS    0H                                                  1759 13343000
*   IF NP5MAJOR='1'B THEN           /* WAS MAJOR OF ALIAS FOUND      */ 13344000
         TM    NP5MAJOR,B'01000000'                                1759 13345000
         BNO   @RF01759                                            1759 13346000
*     DO;                           /* YES - LOAD ALIAS              */ 13347000
*       PDS2REUS='1'B;              /* INSURE DUPLIC IS NOT LOADD    */ 13348000
         OI    PDS2REUS(PDS2PTR),B'01000000'                       1761 13349000
*       RPARM=DCBPTR;               /* SETTUP REG WITH DCB NOTE -  1762 13350000
*                                      LOADING THE ALIAS BUILDS THE     13351000
*                                      MINOR CDE ON TCBJPQ           */ 13352000
         L     RPARM,DCBPTR                                        1762 13353000
*       GENERATE(LOAD DE=(PDS2PTR),DCB=(RPARM));/* LD ALIAS          */ 13354000
         LOAD DE=(PDS2PTR),DCB=(RPARM)                                  13355000
*       NP5CDEFD='1'B;              /* INDICATE BYPASS LOAD IN     1764 13356000
*                                      CALLING ROUTINE               */ 13357000
         OI    NP5CDEFD,B'00100000'                                1764 13358000
*       RETURN;                     /* RETURN TO CALLER              */ 13359000
         B     @EL00021                                            1765 13360000
*     END;                                                         1766 13361000
*   ELSE                                                           1767 13362000
*     ;                             /* MAJOR NOT FOUND               */ 13363000
@RF01759 DS    0H                                                  1768 13364000
*   NP5CDEFD='0'B;                  /* INDICATOR THAT MODULE SHOULD     13365000
*                                      BE LOADED                     */ 13366000
         NI    NP5CDEFD,B'11011111'                                1768 13367000
*   RETURN;                         /* RETURN TO CALLER              */ 13368000
         B     @EL00021                                            1769 13369000
*   END NP5CDESR;                   /* END OF CDE SEARCH RTN         */ 13370000
@PB00021 DS    0H                                                  1771 13371000
*   GENERATE NOREFS NOSETS(EJECT);                                 1771 13372000
*                                                                  1771 13373000
         EJECT                                                          13374000
*   /*****************************************************************/ 13375000
*   /*                                                               */ 13376000
*   /* LPA MODULE ADDRESS ROUTINE INPUT: BLDL ENTRY IN SQA CONTAINS A*/ 13377000
*   /* PDS ENTRY(FORMAT 1 OR 2)                                      */ 13378000
*   /*                                                               */ 13379000
*   /*****************************************************************/ 13380000
*                                                                  1772 13381000
*NPA5ADDR:                                                         1772 13382000
*   PROCEDURE OPTIONS(NOSAVE(RLDADDR));                            1772 13383000
         B     @PB00022                                            1772 13384000
NPA5ADDR STM   @14,@03,12(@13)                                     1772 13385000
         STM   @05,@12,40(@13)                                     1772 13386000
*   RESPECIFY                                                      1773 13387000
*    (PDS2PTR) RESTRICTED;                                         1773 13388000
*                                                                  1773 13389000
*   /*****************************************************************/ 13390000
*   /*                                                               */ 13391000
*   /* GET CURRENT MODULE SIZE FROM PDS ENTRY IN SAVE AREA           */ 13392000
*   /*                                                               */ 13393000
*   /*****************************************************************/ 13394000
*                                                                  1774 13395000
*   PDS2PTR=BLDLSAV+LENGTH(BLDLHDR);/* PDS ENTRY IN BLDL AREA        */ 13396000
         L     @14,BLDLSAV                                         1774 13397000
         LA    @14,4(,@14)                                         1774 13398000
         LR    PDS2PTR,@14                                         1774 13399000
*   FMSIZE=PDS2STOR;                /* CURRENT MODULE SIZE           */ 13400000
         SLR   @14,@14                                             1775 13401000
         ICM   @14,7,PDS2STOR(PDS2PTR)                             1775 13402000
         ST    @14,FMSIZE                                          1775 13403000
*   RESPECIFY                                                      1776 13404000
*    (RLDADDR) RESTRICTED;                                         1776 13405000
*                                                                  1776 13406000
*   /*****************************************************************/ 13407000
*   /*                                                               */ 13408000
*   /* GET NEXT AVAILABLE V=V ADDRESS FROM NVT                       */ 13409000
*   /*                                                               */ 13410000
*   /*****************************************************************/ 13411000
*                                                                  1777 13412000
*   RLDADDR=NVTLVIRT-FMSIZE;        /* LOAD ADDR FOR MODULE          */ 13413000
         L     @06,NVTLVIRT(,RNVT)                                 1777 13414000
         LR    RLDADDR,@06                                         1777 13415000
         SLR   RLDADDR,@14                                         1777 13416000
*   SIZESAVE=SIZESAVE&&SIZESAVE;    /* CLEAR RMDR FIELD              */ 13417000
         L     @05,SIZESAVE                                        1778 13418000
         LR    @00,@05                                             1778 13419000
         XR    @00,@05                                             1778 13420000
         ST    @00,SIZESAVE                                        1778 13421000
*   RLDADDR=RLDADDR&ROUNDDWD;       /* ROUND DOWN TO DOUBLE WORD   1779 13422000
*                                      BOUNDARY                      */ 13423000
         LH    @05,@CH00121                                        1779 13424000
         NR    RLDADDR,@05                                         1779 13425000
*   RMDR=NVTLVIRT&ROUNDPAG;         /* ROUND DOWN TO PAGE BOUNDARY   */ 13426000
*                                                                  1780 13427000
         LH    @00,@CH00123                                        1780 13428000
         NR    @06,@00                                             1780 13429000
         ST    @06,RMDR                                            1780 13430000
*   /*****************************************************************/ 13431000
*   /*                                                               */ 13432000
*   /* WAS A PAGE BOUNDARY CROSSED                                   */ 13433000
*   /*                                                               */ 13434000
*   /*****************************************************************/ 13435000
*                                                                  1781 13436000
*   IF RLDADDR<RMDR THEN            /* PAGE BOUNDARY WAS CROSSED     */ 13437000
         CR    RLDADDR,@06                                         1781 13438000
         BNL   @RF01781                                            1781 13439000
*     DO;                                                          1782 13440000
*       NVTLVIRT=RMDR;              /* SET LOW V M ADR = CALC ADR    */ 13441000
         ST    @06,NVTLVIRT(,RNVT)                                 1783 13442000
*       RLDADDR=NVTLVIRT-FMSIZE;    /* MODULE ADDR                   */ 13443000
         SLR   @06,@14                                             1784 13444000
         LR    RLDADDR,@06                                         1784 13445000
*       RLDADDR=RLDADDR&ROUNDDWD;   /* ROUND DOWN TO A DOUBLE WORD 1785 13446000
*                                      BOUNDARY                      */ 13447000
*                                                                  1785 13448000
         NR    RLDADDR,@05                                         1785 13449000
*       /*************************************************************/ 13450000
*       /*                                                           */ 13451000
*       /* IS MODULE GREATER THAN PAGE SIZE                          */ 13452000
*       /*                                                           */ 13453000
*       /*************************************************************/ 13454000
*                                                                  1786 13455000
*       IF FMSIZE>PAGE THEN         /* PUT MODULE ON PAGE BOUNDARY   */ 13456000
         LH    @06,@CH00044                                        1786 13457000
         CR    @14,@06                                             1786 13458000
         BNH   @RF01786                                            1786 13459000
*         DO;                                                      1787 13460000
*           RLDADDR=RLDADDR&ROUNDPAG;/* ROUND DOWN TO A PAGE BOUNDARY*/ 13461000
         NR    RLDADDR,@00                                         1788 13462000
*           SIZESAVE=PAGE-(FMSIZE&OVERPAG);                        1789 13463000
*                                                                  1789 13464000
         N     @14,@CF00127                                        1789 13465000
         LCR   @14,@14                                             1789 13466000
         ALR   @14,@06                                             1789 13467000
         ST    @14,SIZESAVE                                        1789 13468000
*           /*********************************************************/ 13469000
*           /*                                                       */ 13470000
*           /* CHECK REMAINDER. IF IT IS EQUAL TO 4096 THERE IS NO   */ 13471000
*           /* REMAINDER.                                            */ 13472000
*           /*                                                       */ 13473000
*           /*********************************************************/ 13474000
*                                                                  1790 13475000
*           IF SIZESAVE=PAGE THEN   /* ZERO REMAINDER FIELD          */ 13476000
         CR    @14,@06                                             1790 13477000
         BNE   @RF01790                                            1790 13478000
*             SIZESAVE=0;                                          1791 13479000
         SLR   @14,@14                                             1791 13480000
         ST    @14,SIZESAVE                                        1791 13481000
*           FMSIZE=FMSIZE+SIZESAVE; /* INCREASE SIZE TO NEXT PAGE  1792 13482000
*                                      SIZE                          */ 13483000
@RF01790 L     @14,FMSIZE                                          1792 13484000
         AL    @14,SIZESAVE                                        1792 13485000
         ST    @14,FMSIZE                                          1792 13486000
*           PDS2PAGA='1'B;          /* SET PAGE ALIGN FLAG ON        */ 13487000
         OI    PDS2PAGA(PDS2PTR),B'00100000'                       1793 13488000
*         END;                                                     1794 13489000
*       ELSE                                                       1795 13490000
*         ;                         /* MODULE NOT GREATER THAN PAGE     13491000
*                                      SIZE                          */ 13492000
@RF01786 DS    0H                                                  1796 13493000
*     END;                                                         1796 13494000
*   ELSE                                                           1797 13495000
*     ;                             /* PAGE BOUNDARY NOT CROSSED     */ 13496000
@RF01781 DS    0H                                                  1798 13497000
*NPA5APAL:                          /* IS PAGE ALIGN FLAG ON IN PDS     13498000
*                                      ENTRY                         */ 13499000
*   IF PDS2PAGA='1'B THEN           /* PAGE ALIGN FLAG ON            */ 13500000
NPA5APAL TM    PDS2PAGA(PDS2PTR),B'00100000'                       1798 13501000
         BNO   @RF01798                                            1798 13502000
*     DO;                                                          1799 13503000
*       IF FMSIZE¬>PAGE THEN                                       1800 13504000
         L     @14,FMSIZE                                          1800 13505000
         CH    @14,@CH00044                                        1800 13506000
         BH    @RF01800                                            1800 13507000
*         PDS2PAGA='0'B;            /* SUPPRESS PAGE ALIGN TO AVOID     13508000
*                                      SPLIT DQES                    */ 13509000
         NI    PDS2PAGA(PDS2PTR),B'11011111'                       1801 13510000
*       RLDADDR=RLDADDR&ROUNDPAG;   /* ROUND DOWN TO PAGE BOUNDARY   */ 13511000
@RF01800 N     RLDADDR,@CF00123                                    1802 13512000
*     END;                                                         1803 13513000
*   RESPECIFY                                                      1804 13514000
*    (PDS2PTR) UNRESTRICTED;                                       1804 13515000
@RF01798 DS    0H                                                  1805 13516000
*NPA5ANPA:                          /* DOES CALCULATED LOAD ADDRESS     13517000
*                                      FALL BELOW V=V LINE           */ 13518000
*   IF RLDADDR<NVTVVPG1 THEN        /* NOT ENOUGH ROOM               */ 13519000
NPA5ANPA C     RLDADDR,NVTVVPG1(,RNVT)                             1805 13520000
         BNL   @RF01805                                            1805 13521000
*     DO;                           /* SET RETURN CODE FOR           */ 13522000
*NPA5ANCR:                                                         1807 13523000
*       ADDRRC=STORUN;              /* NO STORAGE AVAILABLE          */ 13524000
NPA5ANCR MVI   ADDRRC,X'04'                                        1807 13525000
*       RETURN;                     /* RETURN TO CALLER              */ 13526000
@EL00022 DS    0H                                                  1808 13527000
@EF00022 DS    0H                                                  1808 13528000
@ER00022 LM    @14,@03,12(@13)                                     1808 13529000
         LM    @05,@12,40(@13)                                     1808 13530000
         BR    @14                                                 1808 13531000
*     END;                                                         1809 13532000
*   ELSE                                                           1810 13533000
*     ;                             /* VIRTUAL STORAGE AVAILABLE     */ 13534000
@RF01805 DS    0H                                                  1811 13535000
*   RETURN;                         /* RETURN TO CALLER              */ 13536000
         B     @EL00022                                            1811 13537000
*   RESPECIFY                                                      1812 13538000
*    (RLDADDR) UNRESTRICTED;                                       1812 13539000
*   END NPA5ADDR;                   /* END OF SUBROUTINE             */ 13540000
@PB00022 DS    0H                                                  1814 13541000
*   GENERATE NOREFS NOSETS(EJECT);                                 1814 13542000
*                                                                  1814 13543000
         EJECT                                                          13544000
*   /*****************************************************************/ 13545000
*   /*                                                               */ 13546000
*   /* LINK PACK AREA LOAD ROUTINE LOAD ADDRESS IS ADDRESS CALCULATED*/ 13547000
*   /* BY NPA5ADDR                                                   */ 13548000
*   /*                                                               */ 13549000
*   /*****************************************************************/ 13550000
*                                                                  1815 13551000
*NPA5LOAD:                                                         1815 13552000
*   PROCEDURE OPTIONS(NOSAVEAREA);                                 1815 13553000
         B     @PB00023                                            1815 13554000
NPA5LOAD STM   @14,@12,12(@13)                                     1815 13555000
*   RESPECIFY                                                      1816 13556000
*    (RLDADDR,                                                     1816 13557000
*     RBLDL,                                                       1816 13558000
*     RLOAD,                                                       1816 13559000
*     DCBPTR1) RESTRICTED;                                         1816 13560000
*                                                                  1816 13561000
*   /*****************************************************************/ 13562000
*   /*                                                               */ 13563000
*   /* FREE AREA OF V=V STORAGE FOR SIZE OF MODULE TO BE LOADED AT   */ 13564000
*   /* ADDRESS CALCULATED BY NPA5ADDR                                */ 13565000
*   /*                                                               */ 13566000
*   /*****************************************************************/ 13567000
*                                                                  1817 13568000
*   FMSIZESP=SPFC;                  /* PUT SUBPOOL NBR WITH SIZE     */ 13569000
         MVI   FMSIZESP,X'FC'                                      1817 13570000
*   RLOAD=FMSIZE;                   /* LOAD REG 0 WITH SP AND SIZE   */ 13571000
         L     RLOAD,FMSIZE                                        1818 13572000
*   GENERATE REFS(RLOAD,RLDADDR) SETS(RPARM);                      1819 13573000
*                                                                  1819 13574000
          FREEMAIN   R,LV=(0),A=(RLDADDR)                               13575000
*   /*****************************************************************/ 13576000
*   /*                                                               */ 13577000
*   /* FLAG BLDL ENTRY REENTRANT & REUSABLE FOR SP252 LOAD           */ 13578000
*   /*                                                               */ 13579000
*   /*****************************************************************/ 13580000
*                                                                  1820 13581000
*   RESPECIFY                                                      1820 13582000
*    (PDS2PTR) RESTRICTED;                                         1820 13583000
*   PDS2PTR=BLDLSAV+LENGTH(BLDLHDR);/* PDS ENTRY IN BLDL AREA        */ 13584000
         L     PDS2PTR,BLDLSAV                                     1821 13585000
         LA    PDS2PTR,4(,PDS2PTR)                                 1821 13586000
         ST    PDS2PTR,@TF00001                                    1821 13587000
*   PDS2RENT='1'B;                  /* REENTRANT MODULE              */ 13588000
*   PDS2REUS='1'B;                  /* REUSABLE MODULE               */ 13589000
         OI    PDS2RENT(PDS2PTR),B'11000000'                       1823 13590000
*   RESPECIFY                                                      1824 13591000
*    (PDS2PTR) UNRESTRICTED;                                       1824 13592000
*   DCBPTR1=DCBPTR;                 /* DCB ADDR TO REG               */ 13593000
         L     DCBPTR1,DCBPTR                                      1825 13594000
*   RPARM=BLDLSAV+LENGTH(BLDLHDR);  /* POINT TO NAME FIELD           */ 13595000
         L     RPARM,@TF00001                                      1826 13596000
*   NVTLVIRT=RLDADDR;               /* UPDATE SHARED VIRT MEMORY   1827 13597000
*                                      ADDRESS                       */ 13598000
         ST    RLDADDR,NVTLVIRT(,RNVT)                             1827 13599000
*   GENERATE REFS(RPARM,DCBPTR1) SETS(RLOAD,RPARM)                 1828 13600000
*       (LOAD DE=(RPARM),DCB=(DCBPTR1));/* LOAD MODULE               */ 13601000
*                                                                  1828 13602000
         LOAD DE=(RPARM),DCB=(DCBPTR1)                                  13603000
*   /*****************************************************************/ 13604000
*   /*                                                               */ 13605000
*   /* SEE IF A GETMAIN MUST BE ISSUED                               */ 13606000
*   /*                                                               */ 13607000
*   /*****************************************************************/ 13608000
*                                                                  1829 13609000
*   IF SIZESAVE¬=0                  /* MODULE OVER PAGE SIZE         */ 13610000
*     THEN                                                         1829 13611000
         L     @14,SIZESAVE                                        1829 13612000
         LTR   @14,@14                                             1829 13613000
         BZ    @RF01829                                            1829 13614000
*     DO;                                                          1830 13615000
*       FMSIZE=SIZESAVE;            /* SIZE FOR GETMAIN              */ 13616000
         ST    @14,FMSIZE                                          1831 13617000
*       FMSIZESP=SPFC;              /* PUT SUBPOOL NBR WITH SIZE     */ 13618000
         MVI   FMSIZESP,X'FC'                                      1832 13619000
*       RLOAD=FMSIZE;               /* LOAD RG0 WITH SP AND SIZE     */ 13620000
         L     RLOAD,FMSIZE                                        1833 13621000
*       GENERATE REFS(RLOAD) SETS(RPARM);                          1834 13622000
          GETMAIN R,LV=(0)                                              13623000
*       RESPECIFY                                                  1835 13624000
*        (RBLDL) UNRESTRICTED;                                     1835 13625000
*       RETURN;                     /* RETURN TO CALLER              */ 13626000
@EL00023 DS    0H                                                  1836 13627000
@EF00023 DS    0H                                                  1836 13628000
@ER00023 LM    @14,@12,12(@13)                                     1836 13629000
         BR    @14                                                 1836 13630000
*     END;                                                         1837 13631000
*   ELSE                                                           1838 13632000
*     ;                             /* MODULE SIZE LESS THAN 4K      */ 13633000
@RF01829 DS    0H                                                  1839 13634000
*   RETURN;                         /* RETURN TO CALLER              */ 13635000
         B     @EL00023                                            1839 13636000
*   RESPECIFY                                                      1840 13637000
*    (RLDADDR,                                                     1840 13638000
*     RLOAD) UNRESTRICTED;                                         1840 13639000
*   END NPA5LOAD;                   /* END OF SUBROUTINE             */ 13640000
@PB00023 DS    0H                                                  1842 13641000
*   GENERATE NOREFS NOSETS(EJECT);                                 1842 13642000
         EJECT                                                          13643000
*NPA5EXCP:                          /* EXCP ROUTINE                  */ 13644000
*   PROCEDURE OPTIONS(NOSAVEAREA);                                 1843 13645000
*                                                                  1843 13646000
         B     @PB00024                                            1843 13647000
NPA5EXCP STM   @14,@12,12(@13)                                     1843 13648000
*   /*****************************************************************/ 13649000
*   /*                                                               */ 13650000
*   /* NPA5EXCP & NPA5IOND USE I/O CONTROL BLOCKS DEFINED IN IEAVNP05*/ 13651000
*   /*                                                               */ 13652000
*   /*****************************************************************/ 13653000
*                                                                  1844 13654000
*   IOBSTPTR=ADDR(NIPIOBSN);        /* ADDR OF DIRECTORY IOB         */ 13655000
         LA    @14,NIPIOBSN                                        1844 13656000
         ST    @14,IOBSTPTR                                        1844 13657000
*   IOBSTART=ADDR(CCW1);            /* DIRECTORY READ CCW ADDR       */ 13658000
         LA    @08,CCW1                                            1845 13659000
         ST    @08,IOBSTART(,@14)                                  1845 13660000
*   IOBFLAG1='42'X;                 /* SET CHAINING AND UNRELATED  1846 13661000
*                                      REQUEST FLAGS                 */ 13662000
         MVI   IOBFLAG1(@14),X'42'                                 1846 13663000
*   IOBFLAG2='00'X;                 /* ZERO FLAGS                    */ 13664000
         MVI   IOBFLAG2(@14),X'00'                                 1847 13665000
*   IOBFLAG3='00'X;                 /* ZERO FLAGS                    */ 13666000
         MVI   IOBFLAG3(@14),X'00'                                 1848 13667000
*   IOBERRCT=0;                     /* SET ERROR COUNT TO ZERO       */ 13668000
         SLR   @08,@08                                             1849 13669000
         STH   @08,IOBERRCT(,@14)                                  1849 13670000
*   IOBCSW=IOBCSW&&IOBCSW;          /* ZERO CSW FIELD                */ 13671000
         XC    IOBCSW(7,@14),IOBCSW(@14)                           1850 13672000
*   IOBSENS0='00'X;                 /* ZERO SENSE BYTE               */ 13673000
         MVI   IOBSENS0(@14),X'00'                                 1851 13674000
*   IOBSENS1='00'X;                 /* ZERO SENSE BYTE               */ 13675000
         MVI   IOBSENS1(@14),X'00'                                 1852 13676000
*   IOBCC=NPA5SRCC(1:2);            /* SET SEEK CC IN IOB            */ 13677000
         MVC   IOBCC(2,@14),NPA5SRCC                               1853 13678000
*   IOBHH=NPA5SRCC(3:4);            /* SET SEEK HH IN IOB            */ 13679000
         MVC   IOBHH(2,@14),NPA5SRCC+2                             1854 13680000
*   RESPECIFY                                                      1855 13681000
*     ECB BASED(ECBPTR);                                           1855 13682000
*   RESPECIFY                                                      1856 13683000
*    (ECBPTR) RESTRICTED;                                          1856 13684000
*   ECBPTR=ADDR(NIPECBSN);          /* DIRECTORY READ ECB ADDR       */ 13685000
         LA    ECBPTR,NIPECBSN                                     1857 13686000
*   ECB=ECB&&ECB;                   /* CLEAR ECB                     */ 13687000
         XC    ECB(4,ECBPTR),ECB(ECBPTR)                           1858 13688000
*   RESPECIFY                                                      1859 13689000
*    (RPARM) RESTRICTED;                                           1859 13690000
*   RPARM=IOBSTPTR;                 /* ADDRESS OF IOB                */ 13691000
*                                                                  1860 13692000
         LR    RPARM,@14                                           1860 13693000
*   /*****************************************************************/ 13694000
*   /*                                                               */ 13695000
*   /* ISSUE I/O REQUEST                                             */ 13696000
*   /*                                                               */ 13697000
*   /*****************************************************************/ 13698000
*                                                                  1861 13699000
*   GENERATE REFS(RPARM) SETS(RPARM)(EXCP (RPARM));                1861 13700000
         EXCP (RPARM)                                                   13701000
*   RESPECIFY                                                      1862 13702000
*    (RPARM) UNRESTRICTED;                                         1862 13703000
*                                                                  1862 13704000
*   /*****************************************************************/ 13705000
*   /*                                                               */ 13706000
*   /* NPA5EXCP CALLER MUST WAIT FOR I/O BEFORE USING DATA           */ 13707000
*   /*                                                               */ 13708000
*   /*****************************************************************/ 13709000
*                                                                  1863 13710000
*   RETURN;                         /* RETURN TO CALLER              */ 13711000
@EL00024 DS    0H                                                  1863 13712000
@EF00024 DS    0H                                                  1863 13713000
@ER00024 LM    @14,@12,12(@13)                                     1863 13714000
         BR    @14                                                 1863 13715000
*   RESPECIFY                                                      1864 13716000
*    (ECBPTR) UNRESTRICTED;                                        1864 13717000
*   END NPA5EXCP;                   /* END OF SUBROUTINE             */ 13718000
*NPA5IOND:                          /* I/O WAIT ROUTINE              */ 13719000
*   PROCEDURE OPTIONS(NOSAVEAREA);                                 1866 13720000
NPA5IOND STM   @14,@12,12(@13)                                     1866 13721000
*   RESPECIFY                                                      1867 13722000
*    (ECBPTR) RESTRICTED;                                          1867 13723000
*   ECBPTR=ADDR(NIPECBSN);          /* DIRECTORY READ ECB            */ 13724000
*                                                                  1868 13725000
         LA    ECBPTR,NIPECBSN                                     1868 13726000
*   /*****************************************************************/ 13727000
*   /*                                                               */ 13728000
*   /* WAIT FOR I/O TO COMPLETE                                      */ 13729000
*   /*                                                               */ 13730000
*   /*****************************************************************/ 13731000
*                                                                  1869 13732000
*   GENERATE REFS(ECBPTR) SETS(RPARM0,RPARM)(WAIT ECB=(ECBPTR));   1869 13733000
*                                                                  1869 13734000
         WAIT ECB=(ECBPTR)                                              13735000
*   /*****************************************************************/ 13736000
*   /*                                                               */ 13737000
*   /* CHECK ECB COMPLETION CODE                                     */ 13738000
*   /*                                                               */ 13739000
*   /*****************************************************************/ 13740000
*                                                                  1870 13741000
*   IF ECBCC¬='7F'X THEN            /* ABNORMAL COMPLETION           */ 13742000
         CLI   ECBCC(ECBPTR),X'7F'                                 1870 13743000
         BE    @RF01870                                            1870 13744000
*     DO;                                                          1871 13745000
*NPA5IOER:                                                         1872 13746000
*       NVTCSIOB=IOBSTPTR;          /* PUT IN NVT TO TRACE ERROR     */ 13747000
NPA5IOER MVC   NVTCSIOB(4,RNVT),IOBSTPTR                           1872 13748000
*       IONDRC=IONSUC;              /* I/O NOT SUCCESSFUL            */ 13749000
         MVI   IONDRC,X'04'                                        1873 13750000
*     END;                                                         1874 13751000
*   RETURN;                         /* RETURN TO CALLER              */ 13752000
@EL00025 DS    0H                                                  1875 13753000
@EF00025 DS    0H                                                  1875 13754000
@ER00025 LM    @14,@12,12(@13)                                     1875 13755000
         BR    @14                                                 1875 13756000
*   RESPECIFY                                                      1876 13757000
*    (ECBPTR) UNRESTRICTED;                                        1876 13758000
*   END NPA5IOND;                   /* END OF SUBROUTINE             */ 13759000
         B     @EL00025                                            1877 13760000
@PB00025 DS    0H                                                  1878 13761000
*   GENERATE NOREFS NOSETS(EJECT);                                 1878 13762000
         EJECT                                                          13763000
*NP5FJPQ:                                                          1879 13764000
*   PROC OPTIONS(NOSAVEAREA);       /* NIP PURGE LLE/JPQ ROUTINE     */ 13765000
         B     @PB00026                                            1879 13766000
NP5FJPQ  STM   @14,@12,12(@13)                                     1879 13767000
*   RESPECIFY                                                      1880 13768000
*    (TCBPTR) RESTRICTED;                                          1880 13769000
*NP5FJLLE:                          /* SEE IF THERE ARE ANY LLE'S    */ 13770000
*   IF TCBLLS=0 THEN                /* NO LLE'S ON CHAIN             */ 13771000
NP5FJLLE L     @14,TCBLLS(,TCBPTR)                                 1881 13772000
         LTR   @14,@14                                             1881 13773000
         BZ    @RT01881                                            1881 13774000
*     GO TO NP5FJCDE;               /* PURGE JPQ                     */ 13775000
*   ELSE                                                           1883 13776000
*     ;                                                            1883 13777000
*   RESPECIFY                                                      1884 13778000
*    (LLEPTR) RESTRICTED;                                          1884 13779000
*   LLEPTR=TCBLLS;                  /* ADDRESS OF CURRENT LLE        */ 13780000
         LR    LLEPTR,@14                                          1885 13781000
*   TCBLLS=LLECHN;                  /* LLE CHAIN ADDRESS             */ 13782000
*                                                                  1886 13783000
         MVC   TCBLLS(4,TCBPTR),LLECHN(LLEPTR)                     1886 13784000
*   /*****************************************************************/ 13785000
*   /*                                                               */ 13786000
*   /* FREE LLE'S                                                    */ 13787000
*   /*                                                               */ 13788000
*   /*****************************************************************/ 13789000
*                                                                  1887 13790000
*   GENERATE REFS(LLEPTR) SETS(RPARM0,RPARM)                       1887 13791000
*       (FREEMAIN R,LV=LLESIZE,A=(LLEPTR),SP=SP255);               1887 13792000
         FREEMAIN R,LV=LLESIZE,A=(LLEPTR),SP=SP255                      13793000
*   GO TO NP5FJLLE;                 /* FREE NEXT LLE                 */ 13794000
         B     NP5FJLLE                                            1888 13795000
*   RESPECIFY                                                      1889 13796000
*    (LLEPTR) UNRESTRICTED;                                        1889 13797000
*NP5FJCDE:                          /* SEE IF THERE ARE ANY CDE'S    */ 13798000
*   IF TCBJPQ=0 THEN                /* NO CDE'S ON QUEUE             */ 13799000
NP5FJCDE ICM   @14,15,TCBJPQ(TCBPTR)                               1890 13800000
         BZ    @RT01890                                            1890 13801000
*     GO TO NP5FJXIT;               /* SKIP JPQ PURGE PROCESSING     */ 13802000
*   ELSE                                                           1892 13803000
*     ;                                                            1892 13804000
*   RESPECIFY                                                      1893 13805000
*    (CDENTPTR) RESTRICTED;                                        1893 13806000
*   CDENTPTR=TCBJPQB;               /* GET ADDR OF CURRENT CDE       */ 13807000
*                                                                  1894 13808000
         SLR   CDENTPTR,CDENTPTR                                   1894 13809000
         ICM   CDENTPTR,7,TCBJPQB(TCBPTR)                          1894 13810000
*   /*****************************************************************/ 13811000
*   /*                                                               */ 13812000
*   /* SEE IF THIS IS A CDE WITH AN EXTENT LIST                      */ 13813000
*   /*                                                               */ 13814000
*   /*****************************************************************/ 13815000
*                                                                  1895 13816000
*   IF CDXLE='1'B THEN              /* EXTENT LIST FOR THIS CDE      */ 13817000
         TM    CDXLE(CDENTPTR),B'00100000'                         1895 13818000
         BNO   @RF01895                                            1895 13819000
*     DO;                                                          1896 13820000
*       RESPECIFY                                                  1897 13821000
*        (XTLSTPTR) RESTRICTED;                                    1897 13822000
*       XTLSTPTR=CDXLMJP;           /* EXTENT LIST ADDR FROM CDE     */ 13823000
         L     XTLSTPTR,CDXLMJP(,CDENTPTR)                         1898 13824000
*       XLSTSIZE=XTLLNTH;           /* EXTENT LIST SIZE              */ 13825000
*                                                                  1899 13826000
         L     @14,XTLLNTH(,XTLSTPTR)                              1899 13827000
         ST    @14,XLSTSIZE                                        1899 13828000
*       /*************************************************************/ 13829000
*       /*                                                           */ 13830000
*       /* FREE EXTENT LIST FOR THIS CDE                             */ 13831000
*       /*                                                           */ 13832000
*       /*************************************************************/ 13833000
*                                                                  1900 13834000
*       RPARM=XLSTSIZE;             /* LOAD SIZE FOR FREEMAIN        */ 13835000
         LR    RPARM,@14                                           1900 13836000
*       GENERATE REFS(RPARM,XTLSTPTR) SETS(RPARM0,RPARM)           1901 13837000
*           (FREEMAIN R,LV=(RPARM),A=(XTLSTPTR),SP=255);           1901 13838000
         FREEMAIN R,LV=(RPARM),A=(XTLSTPTR),SP=255                      13839000
*       RESPECIFY                                                  1902 13840000
*        (XTLSTPTR) UNRESTRICTED;                                  1902 13841000
*     END;                                                         1903 13842000
*   ELSE                                                           1904 13843000
*     ;                                                            1904 13844000
@RF01895 DS    0H                                                  1905 13845000
*   TCBJPQ=CDCHAIN;                 /* GET NEXT CDE                  */ 13846000
*                                                                  1905 13847000
         MVC   TCBJPQ(4,TCBPTR),CDCHAIN(CDENTPTR)                  1905 13848000
*   /*****************************************************************/ 13849000
*   /*                                                               */ 13850000
*   /* FREE CURRENT CDE                                              */ 13851000
*   /*                                                               */ 13852000
*   /*****************************************************************/ 13853000
*                                                                  1906 13854000
*   GENERATE REFS(CDENTPTR) SETS(RPARM0,RPARM)                     1906 13855000
*       (FREEMAIN R,LV=CDESIZE,A=(CDENTPTR),SP=SP255);             1906 13856000
         FREEMAIN R,LV=CDESIZE,A=(CDENTPTR),SP=SP255                    13857000
*   GO TO NP5FJCDE;                 /* PROCESS NEXT CDE              */ 13858000
         B     NP5FJCDE                                            1907 13859000
*   RESPECIFY                                                      1908 13860000
*    (CDENTPTR) UNRESTRICTED;                                      1908 13861000
*NP5FJXIT:                                                         1909 13862000
*   RETURN;                         /* RETURN TO CALLER              */ 13863000
*   RESPECIFY                                                      1910 13864000
*    (TCBPTR) UNRESTRICTED;                                        1910 13865000
*   END NP5FJPQ;                    /* END OF SUBROUTINE             */ 13866000
@EL00026 DS    0H                                                  1911 13867000
@EF00026 DS    0H                                                  1911 13868000
@ER00026 LM    @14,@12,12(@13)                                     1911 13869000
         BR    @14                                                 1911 13870000
@PB00026 DS    0H                                                  1912 13871000
*   GENERATE NOREFS NOSETS(EJECT);                                 1912 13872000
         EJECT                                                          13873000
*NP5BLPRM:                                                         1913 13874000
*   PROC;                           /* BLDL COMMON ROUTINE           */ 13875000
         B     @PB00027                                            1913 13876000
NP5BLPRM STM   @14,@12,@SA00027                                    1913 13877000
*   RESPECIFY                                                      1914 13878000
*    (SCNPTR) RESTRICTED;                                          1914 13879000
*NP5BLRTY:                          /* SCAN THROUGH LEADING        1915 13880000
*                                      PARENTHESES                   */ 13881000
*   IF PARMCHAR(1)='(' THEN         /* CHAR IS PARENTHESIS           */ 13882000
NP5BLRTY CLI   PARMCHAR(SCNPTR),C'('                               1915 13883000
         BNE   @RF01915                                            1915 13884000
*     DO;                                                          1916 13885000
*       SCNPTR=SCNPTR+1;            /* INCREMENT ONE CHARACTER       */ 13886000
         LA    SCNPTR,1(,SCNPTR)                                   1917 13887000
*       GO TO NP5BLRTY;             /* CHECK NEXT CHARACTER          */ 13888000
         B     NP5BLRTY                                            1918 13889000
*     END;                                                         1919 13890000
*   ELSE                                                           1920 13891000
*     ;                                                            1920 13892000
*                                                                  1920 13893000
@RF01915 DS    0H                                                  1921 13894000
*   /*****************************************************************/ 13895000
*   /*                                                               */ 13896000
*   /* ARE NEXT 2 CHARACTERS ALPHANUMERIC                            */ 13897000
*   /*                                                               */ 13898000
*   /*****************************************************************/ 13899000
*                                                                  1921 13900000
*   RESPECIFY                                                      1921 13901000
*    (RI) RESTRICTED;                                              1921 13902000
*NP5BLNXT:                                                         1922 13903000
*   RI=0;                           /* SET CHAR CTR TO ZERO          */ 13904000
NP5BLNXT SLR   RI,RI                                               1922 13905000
*NP5BLNX2:                                                         1923 13906000
*   IF PARMCHAR(1)>='0'&PARMCHAR(1)<='9'|PARMCHAR(1)>='A'&PARMCHAR(1)<= 13907000
*       'Z' THEN                    /* CHARACTER IS ALPHANUMERIC     */ 13908000
NP5BLNX2 CLI   PARMCHAR(SCNPTR),C'0'                               1923 13909000
         BL    @GL00027                                            1923 13910000
         CLI   PARMCHAR(SCNPTR),C'9'                               1923 13911000
         BNH   @RT01923                                            1923 13912000
@GL00027 CLI   PARMCHAR(SCNPTR),C'A'                               1923 13913000
         BL    @RF01923                                            1923 13914000
         CLI   PARMCHAR(SCNPTR),C'Z'                               1923 13915000
         BH    @RF01923                                            1923 13916000
@RT01923 DS    0H                                                  1924 13917000
*     DO;                                                          1924 13918000
*                                                                  1924 13919000
*       /*************************************************************/ 13920000
*       /*                                                           */ 13921000
*       /* SEE WHICH CHARACTER WE ARE CHECKING                       */ 13922000
*       /*                                                           */ 13923000
*       /*************************************************************/ 13924000
*                                                                  1925 13925000
*       IF RI=1 THEN                /* CHECKED SECOND CHARACTER      */ 13926000
         LA    @14,1                                               1925 13927000
         CR    RI,@14                                              1925 13928000
         BE    @RT01925                                            1925 13929000
*         GO TO NP5BLNEX;           /* CHECK FOR PAREN               */ 13930000
*       ELSE                        /* CHECK NEXT CHARACTER          */ 13931000
*         DO;                                                      1927 13932000
*           RI=1;                   /* INCREMENT COUNTER             */ 13933000
         LR    RI,@14                                              1928 13934000
*           SCNPTR=SCNPTR+RI;       /* INCREMENT PTR                 */ 13935000
         ALR   SCNPTR,RI                                           1929 13936000
*           GO TO NP5BLNX2;         /* CHECK NEXT CHARACTER          */ 13937000
         B     NP5BLNX2                                            1930 13938000
*         END;                                                     1931 13939000
*       RESPECIFY                                                  1932 13940000
*        (RI) UNRESTRICTED;                                        1932 13941000
*     END;                                                         1933 13942000
*   ELSE                                                           1934 13943000
*NP5BLPNV:                                                         1934 13944000
*     DO;                                                          1934 13945000
@RF01923 DS    0H                                                  1934 13946000
NP5BLPNV DS    0H                                                  1935 13947000
*       ERRORCD=PINV;               /* PARAMETER IS INVALID          */ 13948000
         MVI   ERRORCD,X'04'                                       1935 13949000
*       GO TO NP5BLERR;             /* INVOKE ERROR ROUTINE          */ 13950000
         B     NP5BLERR                                            1936 13951000
*     END;                                                         1937 13952000
*NP5BLNEX:                                                         1938 13953000
*   SCNPTR=SCNPTR+1;                /* EXAMINE FOLLOWING CHAR        */ 13954000
*                                                                  1938 13955000
NP5BLNEX LA    SCNPTR,1(,SCNPTR)                                   1938 13956000
*   /*****************************************************************/ 13957000
*   /*                                                               */ 13958000
*   /* DOES QUOTE OR PAREN FOLLOW 2 CHAR SUFFIX                      */ 13959000
*   /*                                                               */ 13960000
*   /*****************************************************************/ 13961000
*                                                                  1939 13962000
*   IF PARMCHAR(1)¬=''''&PARMCHAR(1)¬=')' THEN/* NOT A VALID       1939 13963000
*                                      DELIMITER                     */ 13964000
         CLI   PARMCHAR(SCNPTR),C''''                              1939 13965000
         BE    @RF01939                                            1939 13966000
         CLI   PARMCHAR(SCNPTR),C')'                               1939 13967000
         BNE   @RT01939                                            1939 13968000
*     GO TO NP5BLPNV;               /* INDICATE PARAMETER INVALID    */ 13969000
*   ELSE                                                           1941 13970000
*     ;                                                            1941 13971000
@RF01939 DS    0H                                                  1942 13972000
*   RESPECIFY                                                      1942 13973000
*     BLDLENT BASED(BLDLAREA);                                     1942 13974000
*   BLDLAREA=(NVTNUCND+3)&ROUNDWRD;                                1943 13975000
         LA    @14,3                                               1943 13976000
         AL    @14,NVTNUCND(,RNVT)                                 1943 13977000
         N     @14,@CF00119                                        1943 13978000
         ST    @14,BLDLAREA                                        1943 13979000
*   NVTBLDL=BLDLAREA;               /* PUT BLDL AREA @ IN NVT        */ 13980000
         ST    @14,NVTBLDL(,RNVT)                                  1944 13981000
*   BLDLFF=0;                       /* ZERO NO. OF ENTRIES           */ 13982000
         SLR   @08,@08                                             1945 13983000
         STH   @08,BLDLFF(,@14)                                    1945 13984000
*   BLDLLL=LENGTH(BLDLPDS);         /* LENGTH OF ENTRY               */ 13985000
         MVC   BLDLLL(2,@14),@CH00635                              1946 13986000
*   RESPECIFY                                                      1947 13987000
*    (PDS2PTR) RESTRICTED;                                         1947 13988000
*   NP5TBLND=NVTBLDL+LENGTH(BLDLHDR);                              1948 13989000
         LA    @06,4                                               1948 13990000
         LR    @04,@14                                             1948 13991000
         ALR   @04,@06                                             1948 13992000
         ST    @04,NP5TBLND                                        1948 13993000
*   PDS2PTR=BLDLAREA+LENGTH(BLDLHDR);/* POINT TO BLDL ENTRY          */ 13994000
         ALR   @14,@06                                             1949 13995000
         LR    PDS2PTR,@14                                         1949 13996000
*   PLISTNM=IEABLD;                 /* SET FIRST 6 CHARS OF NAME     */ 13997000
         MVC   PLISTNM(6),IEABLD                                   1950 13998000
*   SCNPTR=SCNPTR-2;                /* RESET SCAN PTR TO SUFFIX      */ 13999000
         BCTR  SCNPTR,0                                            1951 14000000
         BCTR  SCNPTR,0                                            1951 14001000
*   PLISTEL=PARMCHAR(1:2);          /* APPEND SUFFIX                 */ 14002000
         MVC   PLISTEL(2),PARMCHAR(SCNPTR)                         1952 14003000
*   NP5PLRF='1'B;                   /* IND. PARMLIB PDS REFRESH      */ 14004000
         OI    NP5PLRF,B'00100000'                                 1953 14005000
*NP5BLMOD:                          /* OBTAIN MODULE NAME FROM     1954 14006000
*                                      PARMLIB LIST                  */ 14007000
*   CALL NP5PLIST;                                                 1954 14008000
NP5BLMOD BAL   @14,NP5PLIST                                        1954 14009000
*   SAVPTR=RPARM;                   /* SAVE REG FOR BLDLF            */ 14010000
*                                                                  1955 14011000
         ST    RPARM,SAVPTR                                        1955 14012000
*   /*****************************************************************/ 14013000
*   /*                                                               */ 14014000
*   /* CHECK RETURN CODES FROM NP5PLIST                              */ 14015000
*   /*                                                               */ 14016000
*   /*****************************************************************/ 14017000
*                                                                  1956 14018000
*   IF PLISTRC=VALIDM THEN          /* VALID MODULE NAME             */ 14019000
         CLI   PLISTRC,X'00'                                       1956 14020000
         BE    @RT01956                                            1956 14021000
*     GO TO NP5BLNAM;               /* PROCESS NAME                  */ 14022000
*   ELSE                                                           1958 14023000
*     ;                                                            1958 14024000
*                                                                  1958 14025000
*   /*****************************************************************/ 14026000
*   /*                                                               */ 14027000
*   /* SEE IF INVALID FORMAT                                         */ 14028000
*   /*                                                               */ 14029000
*   /*****************************************************************/ 14030000
*                                                                  1959 14031000
*   IF PLISTRC=INVFORM THEN         /* INVALID FORMAT - MOD          */ 14032000
         CLI   PLISTRC,X'04'                                       1959 14033000
         BNE   @RF01959                                            1959 14034000
*     DO;                                                          1960 14035000
*NP5BLMNV:                                                         1961 14036000
*       ERRORCD=MODINV;             /* INDICATE MODNAME IN LIST    1961 14037000
*                                      INVALID FOR SUBROUTINE        */ 14038000
NP5BLMNV MVI   ERRORCD,X'08'                                       1961 14039000
*       GO TO NP5BLERR;             /* INVOKE ERROR RECORDER RTN     */ 14040000
         B     NP5BLERR                                            1962 14041000
*     END;                                                         1963 14042000
*   ELSE                                                           1964 14043000
*     ;                                                            1964 14044000
*                                                                  1964 14045000
@RF01959 DS    0H                                                  1965 14046000
*   /*****************************************************************/ 14047000
*   /*                                                               */ 14048000
*   /* SEE IF INVALID FORMAT FOR LIBRARY                             */ 14049000
*   /*                                                               */ 14050000
*   /*****************************************************************/ 14051000
*                                                                  1965 14052000
*   IF PLISTRC=INVFORL THEN         /* INVALID FORMAT - LIB          */ 14053000
         CLI   PLISTRC,X'08'                                       1965 14054000
         BNE   @RF01965                                            1965 14055000
*     DO;                                                          1966 14056000
*NP5BLLNV:                                                         1967 14057000
*       ERRORCD=LIBINV;             /* INDICATE LIBNAME IN LIST    1967 14058000
*                                      INVALID FOR SUBROUTINE        */ 14059000
NP5BLLNV MVI   ERRORCD,X'0C'                                       1967 14060000
*       GO TO NP5BLERR;             /* INVOKE ERROR RECORDER RTN     */ 14061000
         B     NP5BLERR                                            1968 14062000
*     END;                                                         1969 14063000
*   ELSE                                                           1970 14064000
*     ;                                                            1970 14065000
*                                                                  1970 14066000
@RF01965 DS    0H                                                  1971 14067000
*   /*****************************************************************/ 14068000
*   /*                                                               */ 14069000
*   /* SEE IF END OF INPUT LIST                                      */ 14070000
*   /*                                                               */ 14071000
*   /*****************************************************************/ 14072000
*                                                                  1971 14073000
*   IF PLISTRC=INPUTND THEN         /* END OF INPUT LIST             */ 14074000
         CLI   PLISTRC,X'0C'                                       1971 14075000
         BE    @RT01971                                            1971 14076000
*     GO TO NP5BLTAB;               /* BUILD BLDL TABLE              */ 14077000
*   ELSE                                                           1973 14078000
*     ;                                                            1973 14079000
*   NP5RTRY='1'B;                   /* DIAGNOSTIC WAS ALREADY ISSUED    14080000
*                                      - RETRY MSG ONLY              */ 14081000
         OI    NP5RTRY,B'00010000'                                 1974 14082000
*NP5BLERR:                          /* INVOKE ERROR RECORDER ROUTINE */ 14083000
*   CALL NP5PRMER;                  /* ERROR RECORDER                */ 14084000
*                                                                  1975 14085000
NP5BLERR BAL   @14,NP5PRMER                                        1975 14086000
*   /*****************************************************************/ 14087000
*   /*                                                               */ 14088000
*   /* CHECK RETURN CODES FROM NP5PRMER SEE IF RETRY WITH NEW        */ 14089000
*   /* PARAMETER                                                     */ 14090000
*   /*                                                               */ 14091000
*   /*****************************************************************/ 14092000
*                                                                  1976 14093000
*   IF PRMERRC=RETRY0 THEN                                         1976 14094000
         CLI   PRMERRC,X'00'                                       1976 14095000
         BE    @RT01976                                            1976 14096000
*     GO TO NP5BLRTY;               /* RETRY WITH NEW PARAMETER      */ 14097000
*   ELSE                                                           1978 14098000
*     ;                                                            1978 14099000
*   GO TO NP5BLXIT;                 /* RETURN TO CALLER              */ 14100000
         B     NP5BLXIT                                            1979 14101000
*NP5BLTAB:                          /* SEE IF NUMBER OF ENTRIES IN 1980 14102000
*                                      BLDL TABLE IS ZERO            */ 14103000
*   IF BLDLFF=0 THEN                /* NO BLDL ENTRIES               */ 14104000
NP5BLTAB L     @14,BLDLAREA                                        1980 14105000
         ICM   @06,3,BLDLFF(@14)                                   1980 14106000
         BZ    @RT01980                                            1980 14107000
*     GO TO NP5BLXIT;               /* RETURN TO CALLER              */ 14108000
*   ELSE                                                           1982 14109000
*     ;                                                            1982 14110000
*                                                                  1982 14111000
*   /*****************************************************************/ 14112000
*   /*                                                               */ 14113000
*   /* ISSUE BLDL FOR INPUT NAMES                                    */ 14114000
*   /*                                                               */ 14115000
*   /*****************************************************************/ 14116000
*                                                                  1983 14117000
*   RPARM=DCBPTR;                   /* DCB ADDRESS FOR BLDL          */ 14118000
         L     RPARM,DCBPTR                                        1983 14119000
*   PDS2PTR=NVTBLDL;                /* BLDL ENTRY ADDR FOR BLDL      */ 14120000
         L     PDS2PTR,NVTBLDL(,RNVT)                              1984 14121000
*   RESPECIFY                                                      1985 14122000
*    (RCODE) RESTRICTED;                                           1985 14123000
*   GENERATE REFS(RPARM,PDS2PTR) SETS(RPARM0,RPARM,RCODE);         1986 14124000
*                                                                  1986 14125000
          BLDL (RPARM),(PDS2PTR)                                        14126000
*   /*****************************************************************/ 14127000
*   /*                                                               */ 14128000
*   /* SEE IF BLDL WAS SUCCESSFUL                                    */ 14129000
*   /*                                                               */ 14130000
*   /*****************************************************************/ 14131000
*                                                                  1987 14132000
*   IF RCODE=BLD0 THEN              /* BLDL WAS SUCCESSFUL           */ 14133000
         LTR   RCODE,RCODE                                         1987 14134000
         BZ    @RT01987                                            1987 14135000
*     GO TO NP5BLDOK;               /* BLDL TABLE COMPLETE           */ 14136000
*   ELSE                                                           1989 14137000
*     ;                                                            1989 14138000
*                                                                  1989 14139000
*   /*****************************************************************/ 14140000
*   /*                                                               */ 14141000
*   /* WAS THERE ABLDL ERROR                                         */ 14142000
*   /*                                                               */ 14143000
*   /*****************************************************************/ 14144000
*                                                                  1990 14145000
*   IF RCODE=BLD4 THEN              /* MODULE NOT FOUND              */ 14146000
         CH    RCODE,@CH00058                                      1990 14147000
         BE    @RT01990                                            1990 14148000
*     GO TO NP5BLNFN;               /* WRITE LIST OF MODS NOT FND    */ 14149000
*   ELSE                                                           1992 14150000
*     ;                                                            1992 14151000
*   RESPECIFY                                                      1993 14152000
*    (RCODE) UNRESTRICTED;                                         1993 14153000
*                                                                  1993 14154000
*   /*****************************************************************/ 14155000
*   /*                                                               */ 14156000
*   /* SEND I/O ERROR DURING BLDL MESSAGE IEA108I I/0 ERROR DURING   */ 14157000
*   /* BLDL                                                          */ 14158000
*   /*                                                               */ 14159000
*   /*****************************************************************/ 14160000
*                                                                  1994 14161000
*   GENERATE REFS(RNVT,NVTWTO,MSG1S) SETS(RPARM,REXIT,RENTRY)      1994 14162000
*       (IEAPMNIP TYPE=WTO,PARAM=MSG1S);                           1994 14163000
         IEAPMNIP TYPE=WTO,PARAM=MSG1S                                  14164000
*   GO TO NP5BLXIT;                 /* BLDL ERROR RTRN TO CALLER     */ 14165000
         B     NP5BLXIT                                            1995 14166000
*NP5BLNAM:                                                         1996 14167000
*                                                                  1996 14168000
*   /*****************************************************************/ 14169000
*   /*                                                               */ 14170000
*   /* SEE IF CURRENT LIBRARY IS SYS1.LINKLIB                        */ 14171000
*   /*                                                               */ 14172000
*   /*****************************************************************/ 14173000
*                                                                  1996 14174000
*   IF LIBNAME¬=LINKLIB(1:LENGTH(LIBNAME)) THEN/* LIBRARY NOT      1996 14175000
*                                      SYS1.LINKLIB                  */ 14176000
NP5BLNAM CLC   LIBNAME(12),LINKLIB                                 1996 14177000
         BNE   @RT01996                                            1996 14178000
*     GO TO NP5BLLNV;               /* LIBNAME IN LIST INVALID       */ 14179000
*   ELSE                                                           1998 14180000
*     ;                                                            1998 14181000
*                                                                  1998 14182000
*   /*****************************************************************/ 14183000
*   /*                                                               */ 14184000
*   /* SEE IF BLDL ENTRY COUNT IS VALID                              */ 14185000
*   /*                                                               */ 14186000
*   /*****************************************************************/ 14187000
*                                                                  1999 14188000
*   IF BLDLFF>=MAXENT THEN          /* ENTRY COUNT IS INVALID        */ 14189000
         L     @14,BLDLAREA                                        1999 14190000
         LH    @14,BLDLFF(,@14)                                    1999 14191000
         CH    @14,@CH00102                                        1999 14192000
         BL    @RF01999                                            1999 14193000
*     DO;                                                          2000 14194000
*NP5BLCNV:                                                         2001 14195000
*       ERRORCD=CNTINV;             /* SET ERROR CODE                */ 14196000
NP5BLCNV MVI   ERRORCD,X'10'                                       2001 14197000
*       GO TO NP5BLERR;             /* INVOKE ERROR RECORDER         */ 14198000
         B     NP5BLERR                                            2002 14199000
*     END;                                                         2003 14200000
*   ELSE                                                           2004 14201000
*     ;                                                            2004 14202000
*                                                                  2004 14203000
@RF01999 DS    0H                                                  2005 14204000
*   /*****************************************************************/ 14205000
*   /*                                                               */ 14206000
*   /* IS THERE SPACE FOR THIS ENTRY                                 */ 14207000
*   /*                                                               */ 14208000
*   /*****************************************************************/ 14209000
*                                                                  2005 14210000
*   NP5TBLND=NP5TBLND+BLDLLL;       /* SET PTR TO END OF TABLE       */ 14211000
         L     @14,BLDLAREA                                        2005 14212000
         LH    @14,BLDLLL(,@14)                                    2005 14213000
         AL    @14,NP5TBLND                                        2005 14214000
         ST    @14,NP5TBLND                                        2005 14215000
*   IF NP5TBLND>NVTNBFND THEN       /* NO SPACE FOR THIS ENTRY       */ 14216000
         C     @14,NVTNBFND(,RNVT)                                 2006 14217000
         BNH   @RF02006                                            2006 14218000
*NP5BLNCR:                                                         2007 14219000
*     DO;                                                          2007 14220000
*                                                                  2007 14221000
NP5BLNCR DS    0H                                                  2008 14222000
*       /*************************************************************/ 14223000
*       /*                                                           */ 14224000
*       /* WRITE REAL OR VIRTUAL STORAGE UNAVAILABLE FOR BLDL MESSAGE*/ 14225000
*       /*                                                           */ 14226000
*       /*************************************************************/ 14227000
*                                                                  2008 14228000
*       NP5RTRY='1'B;               /* INDICATE RETRY MSG ONLY       */ 14229000
         OI    NP5RTRY,B'00010000'                                 2008 14230000
*       MSGBI1=PSAVAR(1:PLENGTH-1); /* PUT PRM IN MSG                */ 14231000
*                                                                  2009 14232000
         MVI   MSGBI1+1,C' '                                       2009 14233000
         MVC   MSGBI1+2(3),MSGBI1+1                                2009 14234000
         L     @14,PLENGTH                                         2009 14235000
         BCTR  @14,0                                               2009 14236000
         BCTR  @14,0                                               2009 14237000
         EX    @14,@SM04137                                        2009 14238000
*       /*************************************************************/ 14239000
*       /*                                                           */ 14240000
*       /* IEAN05I REAL OR VIRTUAL SOTRAGE UNAVAILABLE FOR PRM       */ 14241000
*       /*                                                           */ 14242000
*       /*************************************************************/ 14243000
*                                                                  2010 14244000
*       GENERATE REFS(RNVT,NVTWTO,MSGBS,MSGBI1) SETS(RPARM,REXIT,RENTRY 14245000
*           )(IEAPMNIP TYPE=WTO,PARAM=MSGBS);                      2010 14246000
         IEAPMNIP TYPE=WTO,PARAM=MSGBS                                  14247000
*       GO TO NP5BLERR;             /* INVOKE ERROR RECORDER         */ 14248000
         B     NP5BLERR                                            2011 14249000
*     END;                                                         2012 14250000
*   ELSE                                                           2013 14251000
*     ;                             /* PROCESS BLDL TABLE            */ 14252000
*                                                                  2013 14253000
@RF02006 DS    0H                                                  2014 14254000
*   /*****************************************************************/ 14255000
*   /*                                                               */ 14256000
*   /* MOVE MODULE NAME (8 CHAR) TO CURRENT BLDL TABLE ENTRY         */ 14257000
*   /*                                                               */ 14258000
*   /*****************************************************************/ 14259000
*                                                                  2014 14260000
*   PDS2NAME=CURMOD;                                               2014 14261000
         MVC   PDS2NAME(8,PDS2PTR),CURMOD                          2014 14262000
*   BLDLFF=BLDLFF+1;                /* INCR NO OF ENTRIES            */ 14263000
         L     @14,BLDLAREA                                        2015 14264000
         LA    @06,1                                               2015 14265000
         AH    @06,BLDLFF(,@14)                                    2015 14266000
         STH   @06,BLDLFF(,@14)                                    2015 14267000
*   PDS2PTR=PDS2PTR+BLDLLL;         /* INCR TO NEXT BLDL TABLE ENTRY */ 14268000
         AH    PDS2PTR,BLDLLL(,@14)                                2016 14269000
*   GO TO NP5BLMOD;                 /* GET NEXT MODULE IN PARMLIB    */ 14270000
         B     NP5BLMOD                                            2017 14271000
*NP5BLNFN:                          /* BLDL FAILED - SEND DIAGNOSTIC */ 14272000
*                                                                  2018 14273000
*   /*****************************************************************/ 14274000
*   /*                                                               */ 14275000
*   /* SEND BLDL FAILED FOR FOLLOWING MODULES MESSAGE IEA109I BLDL   */ 14276000
*   /* FAILED FOR FOLLOWING MODULES                                  */ 14277000
*   /*                                                               */ 14278000
*   /*****************************************************************/ 14279000
*                                                                  2018 14280000
*   GENERATE REFS(RNVT,NVTWTO,MSG2S) SETS(RPARM,REXIT,RENTRY)      2018 14281000
*       (IEAPMNIP TYPE=WTO,PARAM=MSG2S);                           2018 14282000
*                                                                  2018 14283000
NP5BLNFN IEAPMNIP TYPE=WTO,PARAM=MSG2S                                  14284000
*   /*****************************************************************/ 14285000
*   /*                                                               */ 14286000
*   /* EXAMINE EACH BLDL TABLE ENTRY FOR BLDL FAILED FLAG            */ 14287000
*   /*                                                               */ 14288000
*   /*****************************************************************/ 14289000
*                                                                  2019 14290000
*   PDS2PTR=NVTBLDL+LENGTH(BLDLHDR);/* POINT TO 1ST ENTRY            */ 14291000
         L     @14,NVTBLDL(,RNVT)                                  2019 14292000
         LA    @14,4(,@14)                                         2019 14293000
         LR    PDS2PTR,@14                                         2019 14294000
*   RESPECIFY                                                      2020 14295000
*    (RI) RESTRICTED;               /* RESTRICT REGISTER 4           */ 14296000
*   DO RI=1 TO BLDLFF;              /* BLDLFF=NO.OF BLDL ENTRIES     */ 14297000
*                                                                  2021 14298000
         LA    RI,1                                                2021 14299000
         B     @DE02021                                            2021 14300000
@DL02021 DS    0H                                                  2022 14301000
*     /***************************************************************/ 14302000
*     /*                                                             */ 14303000
*     /* SEE IF BLDL FAILED FLAG IS ON                               */ 14304000
*     /*                                                             */ 14305000
*     /***************************************************************/ 14306000
*                                                                  2022 14307000
*     IF PDS2R='00'X THEN           /* MODULE MISSING                */ 14308000
         CLI   PDS2R(PDS2PTR),X'00'                                2022 14309000
         BNE   @RF02022                                            2022 14310000
*       DO;                                                        2023 14311000
*         MODLIST=PDS2NAME;         /* PDS MODULE NAME               */ 14312000
*                                                                  2024 14313000
         MVC   MODLIST(8),PDS2NAME(PDS2PTR)                        2024 14314000
*         /***********************************************************/ 14315000
*         /*                                                         */ 14316000
*         /* LIST EACH MISSING MODULE NAME                           */ 14317000
*         /*                                                         */ 14318000
*         /***********************************************************/ 14319000
*                                                                  2025 14320000
*         GENERATE REFS(RNVT,NVTWTO,MODMSGS,MODLIST) SETS(RPARM,REXIT,  14321000
*             RENTRY)(IEAPMNIP TYPE=WTO,PARAM=MODMSGS);            2025 14322000
         IEAPMNIP TYPE=WTO,PARAM=MODMSGS                                14323000
*       END;                                                       2026 14324000
*     ELSE                                                         2027 14325000
*       ;                           /* MODULE LOCATED,CONTINUE       */ 14326000
@RF02022 DS    0H                                                  2028 14327000
*     PDS2PTR=PDS2PTR+BLDLLL;       /* INCREMENT TO NEXT ENTRY       */ 14328000
         L     @14,BLDLAREA                                        2028 14329000
         AH    PDS2PTR,BLDLLL(,@14)                                2028 14330000
*   END;                                                           2029 14331000
         AL    RI,@CF00264                                         2029 14332000
@DE02021 L     @14,BLDLAREA                                        2029 14333000
         CH    RI,BLDLFF(,@14)                                     2029 14334000
         BNH   @DL02021                                            2029 14335000
*   RESPECIFY                                                      2030 14336000
*    (PDS2PTR,                                                     2030 14337000
*     RI) UNRESTRICTED;                                            2030 14338000
*NP5BLDOK:                          /* WAS THIS A BLDLF REQUEST      */ 14339000
*   IF PSAVAR(1:PLENGTH)=BLDLFEQ(1:PLENGTH) THEN/* BLDLF REQUEST     */ 14340000
NP5BLDOK L     @14,PLENGTH                                         2031 14341000
         BCTR  @14,0                                               2031 14342000
         EX    @14,@SC04139                                        2031 14343000
         BNE   @RF02031                                            2031 14344000
*NP5BLNUC:                                                         2032 14345000
*     NVTNUCND=NP5TBLND;            /* UPDATE TO END OF TABLE        */ 14346000
NP5BLNUC MVC   NVTNUCND(4,RNVT),NP5TBLND                           2032 14347000
*   ELSE                                                           2033 14348000
*     DO;                                                          2033 14349000
*                                                                  2033 14350000
         B     @RC02031                                            2033 14351000
@RF02031 DS    0H                                                  2034 14352000
*       /*************************************************************/ 14353000
*       /*                                                           */ 14354000
*       /* MOVE BLDL TABLE TO V=V STORAGE                            */ 14355000
*       /*                                                           */ 14356000
*       /*************************************************************/ 14357000
*                                                                  2034 14358000
*       CALL NPA5BLDL;                                             2034 14359000
*                                                                  2034 14360000
         BAL   @14,NPA5BLDL                                        2034 14361000
*       /*************************************************************/ 14362000
*       /*                                                           */ 14363000
*       /* CHECK FOR NORMAL END                                      */ 14364000
*       /*                                                           */ 14365000
*       /*************************************************************/ 14366000
*                                                                  2035 14367000
*       IF POSTCD¬=NORMND THEN      /* V=V DID NOT REACH NORM END    */ 14368000
         CLI   POSTCD,X'00'                                        2035 14369000
         BNE   @RT02035                                            2035 14370000
*         GO TO NP5BLNCR;           /* NO SPACE AVAILABLE            */ 14371000
*       ELSE                                                       2037 14372000
*         ;                                                        2037 14373000
*     END;                                                         2038 14374000
*NP5BLSET:                                                         2039 14375000
*   IEARESBL=NVTBLDL;               /* SET SYSTEM BLDL TABLE ADDR TO    14376000
*                                      @ OF TABLE JUST BUILT         */ 14377000
@RC02031 DS    0H                                                  2039 14378000
NP5BLSET L     @14,NVTVBLDL(,RNVT)                                 2039 14379000
         MVC   IEARESBL(4,@14),NVTBLDL(RNVT)                       2039 14380000
*   RESPECIFY                                                      2040 14381000
*    (SCNPTR) UNRESTRICTED;                                        2040 14382000
*NP5BLXIT:                                                         2041 14383000
*   RETURN;                         /* RETURN TO CALLER              */ 14384000
@EL00027 DS    0H                                                  2041 14385000
@EF00027 DS    0H                                                  2041 14386000
@ER00027 LM    @14,@12,@SA00027                                    2041 14387000
         BR    @14                                                 2041 14388000
*   END NP5BLPRM;                   /* END OF SUBROUTINE             */ 14389000
         B     @EL00027                                            2042 14390000
@PB00027 DS    0H                                                  2043 14391000
*   GENERATE NOREFS NOSETS(EJECT);                                 2043 14392000
         EJECT                                                          14393000
*NPA5BLDL:                                                         2044 14394000
*   PROC;                           /* BLDL TABLE ROUTINE            */ 14395000
         B     @PB00028                                            2044 14396000
NPA5BLDL STM   @14,@12,@SA00028                                    2044 14397000
*   GENERATE REFS(NVTVIRT,RNVT) SETS(RENTRY,REXIT)(IEAPMNIP TYPE=VIRT); 14398000
         IEAPMNIP TYPE=VIRT                                             14399000
*                                   /* SWITCH TO V=V                 */ 14400000
*   RESPECIFY                                                      2046 14401000
*     BLDLENT BASED(NVTBLDL);                                      2046 14402000
*   RESPECIFY                                                      2047 14403000
*    (BLDLTSZ1) RESTRICTED;                                        2047 14404000
*   BLDLTSZ1=(BLDLFF*BLDLLL)+LENGTH(BLDLHDR);/* SIZE OF BLDL TABLE   */ 14405000
         LA    @14,4                                               2048 14406000
         L     @08,NVTBLDL(,RNVT)                                  2048 14407000
         LH    BLDLTSZ1,BLDLFF(,@08)                               2048 14408000
         MH    BLDLTSZ1,BLDLLL(,@08)                               2048 14409000
         ALR   BLDLTSZ1,@14                                        2048 14410000
*   RESPECIFY                                                      2049 14411000
*     BLDLENT BASED(BLDLSAV);       /* BLDL AREA ADDRESS             */ 14412000
*   BLDLPDS=BLDLPDS&&BLDLPDS;       /* ZERO BLDL ENTRY AREA          */ 14413000
*                                                                  2050 14414000
         L     @08,BLDLSAV                                         2050 14415000
         XC    BLDLPDS(60,@08),BLDLPDS(@08)                        2050 14416000
*   /*****************************************************************/ 14417000
*   /*                                                               */ 14418000
*   /* SIMULATE PDS BLOCK                                            */ 14419000
*   /*                                                               */ 14420000
*   /*****************************************************************/ 14421000
*                                                                  2051 14422000
*   RESPECIFY                                                      2051 14423000
*    (PDS2PTR) RESTRICTED;                                         2051 14424000
*   PDS2PTR=BLDLSAV+LENGTH(BLDLHDR);/* PDS ENTRY IN BLDL AREA        */ 14425000
         L     @06,BLDLSAV                                         2052 14426000
         ALR   @06,@14                                             2052 14427000
         LR    PDS2PTR,@06                                         2052 14428000
*   PDS2STOR=BLDLTSZ1;              /* SET BLDL TABLE SIZE           */ 14429000
         STCM  BLDLTSZ1,7,PDS2STOR(PDS2PTR)                        2053 14430000
*   PDS2PAGA='1'B;                  /* SET PAGE ALIGN FLAG           */ 14431000
         OI    PDS2PAGA(PDS2PTR),B'00100000'                       2054 14432000
*   RESPECIFY                                                      2055 14433000
*    (RLDADDR) RESTRICTED;                                         2055 14434000
*                                                                  2055 14435000
*   /*****************************************************************/ 14436000
*   /*                                                               */ 14437000
*   /* BLDL TABLE WILL ALWAYS BEGIN ON A PAGE BOUNDARY               */ 14438000
*   /*                                                               */ 14439000
*   /*****************************************************************/ 14440000
*                                                                  2056 14441000
*   CALL NPA5ADDR;                  /* CALCULATE BLDL TABLE START    */ 14442000
*                                                                  2056 14443000
         BAL   @14,NPA5ADDR                                        2056 14444000
*   /*****************************************************************/ 14445000
*   /*                                                               */ 14446000
*   /* IS THERE STORAGE AVAILABLE FOR THE BLDL TABLE                 */ 14447000
*   /*                                                               */ 14448000
*   /*****************************************************************/ 14449000
*                                                                  2057 14450000
*   IF ADDRRC=STORUN THEN           /* STORAGE UNAVAILABLE           */ 14451000
         CLI   ADDRRC,X'04'                                        2057 14452000
         BE    @RT02057                                            2057 14453000
*     GO TO NPA5BSER;               /* INDICATE STORAGE UNAVAIL      */ 14454000
*   RESPECIFY                                                      2059 14455000
*    (RBLDL,                                                       2059 14456000
*     BLDLTSZ2) RESTRICTED;                                        2059 14457000
*   BLDLTSZ1=PDS2STOR;              /* RELOAD SIZE OF BLDL TABLE     */ 14458000
         SLR   BLDLTSZ1,BLDLTSZ1                                   2060 14459000
         ICM   BLDLTSZ1,7,PDS2STOR(PDS2PTR)                        2060 14460000
*   BLDLTSZ2=BLDLTSZ1;              /* LENGTH OF FROM FIELD          */ 14461000
*                                                                  2061 14462000
         LR    BLDLTSZ2,BLDLTSZ1                                   2061 14463000
*   /*****************************************************************/ 14464000
*   /*                                                               */ 14465000
*   /* ISSUE MVCL INSTRUCTION TO MOVE BLDL TABLE TO SP252            */ 14466000
*   /*                                                               */ 14467000
*   /*****************************************************************/ 14468000
*                                                                  2062 14469000
*   RBLDL=NVTBLDL;                  /* ADDR OF BLDL TABLE TO BE MOVED*/ 14470000
*                                                                  2062 14471000
         L     RBLDL,NVTBLDL(,RNVT)                                2062 14472000
*   /*****************************************************************/ 14473000
*   /*                                                               */ 14474000
*   /* RESET NVTBLDL TO THE ADDRESS OF THE SP252 BLDL TABLE          */ 14475000
*   /*                                                               */ 14476000
*   /*****************************************************************/ 14477000
*                                                                  2063 14478000
*   NVTBLDL=RLDADDR;                /* SP252 BLDL TABLE              */ 14479000
         ST    RLDADDR,NVTBLDL(,RNVT)                              2063 14480000
*   GENERATE REFS(RLDADDR,BLDLTSZ1,RBLDL,BLDLTSZ2) SETS(RLDADDR,   2064 14481000
*       BLDLTSZ1,RBLDL,BLDLTSZ2)(MVCL RLDADDR,RBLDL);/* MOVE BLDL  2064 14482000
*                                      TABLE                         */ 14483000
         MVCL RLDADDR,RBLDL                                             14484000
*   RESPECIFY                                                      2065 14485000
*    (RBLDL,                                                       2065 14486000
*     BLDLTSZ2) UNRESTRICTED;                                      2065 14487000
*   RLDADDR=NVTBLDL;                /* RELOAD BEGIN ADDRESS          */ 14488000
         L     RLDADDR,NVTBLDL(,RNVT)                              2066 14489000
*   NVTLVIRT=RLDADDR;               /* RESET CVTSHRVM TO NEXT      2067 14490000
*                                      AVAILABLE V=V SPACE           */ 14491000
         ST    RLDADDR,NVTLVIRT(,RNVT)                             2067 14492000
*   RESPECIFY                                                      2068 14493000
*    (RLDADDR,                                                     2068 14494000
*     BLDLTSZ1) UNRESTRICTED;                                      2068 14495000
*                                                                  2068 14496000
*   /*****************************************************************/ 14497000
*   /*                                                               */ 14498000
*   /* SET POST CODE TO INDICATE NORMAL END PC=12                    */ 14499000
*   /*                                                               */ 14500000
*   /*****************************************************************/ 14501000
*                                                                  2069 14502000
*   POSTCD=NORMND;                  /* BLDL REQUEST COMPLETE         */ 14503000
         MVI   POSTCD,X'00'                                        2069 14504000
*   GO TO NPA5BRTN;                 /* SWITCH TO V=R BEFORE RETURN   */ 14505000
         B     NPA5BRTN                                            2070 14506000
*NPA5BSER:                          /* SET POST CODE TO INDICATE   2071 14507000
*                                      STORAGE UNAVAILABLE PC=4      */ 14508000
*   POSTCD=STRUNAV;                 /* STORAGE UNAVAILABLE           */ 14509000
NPA5BSER MVI   POSTCD,X'04'                                        2071 14510000
*NPA5BRTN:                                                         2072 14511000
*   GENERATE REFS(NVTREAL,RNVT) SETS(RENTRY,REXIT)(IEAPMNIP TYPE=REAL); 14512000
NPA5BRTN IEAPMNIP TYPE=REAL                                             14513000
*                                   /* SWITCH TO V=R                 */ 14514000
*   RETURN;                         /* RETURN TO CALLER              */ 14515000
@EL00028 DS    0H                                                  2073 14516000
@EF00028 DS    0H                                                  2073 14517000
@ER00028 LM    @14,@12,@SA00028                                    2073 14518000
         BR    @14                                                 2073 14519000
*   END NPA5BLDL;                   /* END OF SUBROUTINE             */ 14520000
@PB00028 DS    0H                                                  2075 14521000
*   GENERATE NOREFS NOSETS(EJECT);                                 2075 14522000
         EJECT                                                          14523000
*NP5PLIST:                                                         2076 14524000
*   PROC OPTIONS(NOSAVE(RPARM));    /* PARMLIB LIST ROUTINE          */ 14525000
         B     @PB00029                                            2076 14526000
NP5PLIST STM   @14,@00,@SA00029                                    2076 14527000
         STM   @02,@12,@SA00029+12                                 2076 14528000
*   RESPECIFY                                                      2077 14529000
*    (SCNPTR,                                                      2077 14530000
*     PDS2PTR) RESTRICTED;                                         2077 14531000
*                                                                  2077 14532000
*   /*****************************************************************/ 14533000
*   /*                                                               */ 14534000
*   /* IS THIS A PARMLIB PDS REFRESH REQUEST                         */ 14535000
*   /*                                                               */ 14536000
*   /*****************************************************************/ 14537000
*                                                                  2078 14538000
*   IF NP5PLRF¬='1'B THEN           /* DO NOT REFRESH PARMLIB PDS    */ 14539000
         TM    NP5PLRF,B'00100000'                                 2078 14540000
         BNO   @RT02078                                            2078 14541000
*     GO TO NP5PLMDX;               /* SKIP PARMLIB PDS REFRESH      */ 14542000
*   ELSE                                                           2080 14543000
*     ;                                                            2080 14544000
*   NP5LIBNV='1'B;                  /* INDICATE CURRENT LIBRARY    2081 14545000
*                                      INVALID                       */ 14546000
         OI    NP5LIBNV,B'00001000'                                2081 14547000
*   RESPECIFY                                                      2082 14548000
*     NIPPAREA BASED(NVTPAREA);                                    2082 14549000
*   NIPPANAM=PLISTNAM;              /* MOVE LIST NAME TO INITIAL   2083 14550000
*                                      PARMAREA                      */ 14551000
*                                                                  2083 14552000
         L     @14,NVTPAREA(,RNVT)                                 2083 14553000
         MVC   NIPPANAM(8,@14),PLISTNAM                            2083 14554000
*   /*****************************************************************/ 14555000
*   /*                                                               */ 14556000
*   /* CALL NIPPMPDS TO READ PDS DATA FOR IEANNNXX                   */ 14557000
*   /*                                                               */ 14558000
*   /*****************************************************************/ 14559000
*                                                                  2084 14560000
*   CALL NIPPMPDS;                                                 2084 14561000
         BAL   @14,NIPPMPDS                                        2084 14562000
*   GENERATE NOREFS NOSETS FLOWS(NP5PLRD1,NP5PLERR);               2085 14563000
         B     NP5PLRD1                 READ SUCCESSFUL                 14564000
         B     NP5PLERR                 ERROR ON PDS READ               14565000
*NP5PLRD1:                          /* PROCESS PDS INFORMATION       */ 14566000
*   NP5PLRF='0'B;                   /* TURN OFF PDS REFRESH FLAG     */ 14567000
*                                                                  2086 14568000
NP5PLRD1 NI    NP5PLRF,B'11011111'                                 2086 14569000
*   /*****************************************************************/ 14570000
*   /*                                                               */ 14571000
*   /* IS PARMTAB LIST FLAG SET                                      */ 14572000
*   /*                                                               */ 14573000
*   /*****************************************************************/ 14574000
*                                                                  2087 14575000
*   IF NP5PLLST¬='1'B THEN          /* LIST FLAG NOT SET             */ 14576000
         TM    NP5PLLST,B'01000000'                                2087 14577000
         BNO   @RT02087                                            2087 14578000
*     GO TO NP5PLTXT;               /* SKIP MODULE LIST              */ 14579000
*   ELSE                                                           2089 14580000
*     ;                                                            2089 14581000
*                                                                  2089 14582000
*   /*****************************************************************/ 14583000
*   /*                                                               */ 14584000
*   /* MOVE PARMLIB LIST NAME TO MESSAGE                             */ 14585000
*   /*                                                               */ 14586000
*   /*****************************************************************/ 14587000
*                                                                  2090 14588000
*   MSG6I1=PLISTNAM;                /* PARMLIB LIST NAME             */ 14589000
*                                                                  2090 14590000
         MVI   MSG6I1+8,C' '                                       2090 14591000
         MVC   MSG6I1(8),PLISTNAM                                  2090 14592000
*   /*****************************************************************/ 14593000
*   /*                                                               */ 14594000
*   /* WRITE MODULE LIST HEADER MESSAGE IEAN05I LIS MODULE LIST      */ 14595000
*   /*                                                               */ 14596000
*   /*****************************************************************/ 14597000
*                                                                  2091 14598000
*   GENERATE REFS(RNVT,NVTWTO,MSG6S,MSG6I1) SETS(RPARM,REXIT,RENTRY)    14599000
*       (IEAPMNIP TYPE=WTO,PARAM=MSG6S);                           2091 14600000
         IEAPMNIP TYPE=WTO,PARAM=MSG6S                                  14601000
*NP5PLTXT:                          /* CALL NIPPMTXT TO READ IEANNNXX   14602000
*                                      TEXT RECORD                   */ 14603000
*   CALL NIPPMTXT;                                                 2092 14604000
NP5PLTXT BAL   @14,NIPPMTXT                                        2092 14605000
*   GENERATE NOREFS NOSETS FLOWS(NP5PLRD2,NP5PLERR);               2093 14606000
         B     NP5PLRD2                 SUCCESSFUL READ                 14607000
         B     NP5PLERR                 ERROR ON READ TEXT              14608000
*   RESPECIFY                                                      2094 14609000
*     TEXTCHAR BASED(RPARM);        /* BASE INPUT ON REG 1           */ 14610000
*NP5PLRD2:                          /* PROCESS TEXT RECORD           */ 14611000
*                                                                  2095 14612000
*   /*****************************************************************/ 14613000
*   /*                                                               */ 14614000
*   /* RPARM POINTS TO FIRST NON-BLANK CHARACTER IN RECORD IF NOT AN */ 14615000
*   /* EMPTY RECORD IS THE FIRST CHARACTER A BLANK                   */ 14616000
*   /*                                                               */ 14617000
*   /*****************************************************************/ 14618000
*                                                                  2095 14619000
*   IF TEXTCHAR(1)=' ' THEN         /* EMPTY RECORD                  */ 14620000
NP5PLRD2 CLI   TEXTCHAR(RPARM),C' '                                2095 14621000
         BE    @RT02095                                            2095 14622000
*     GO TO NP5PLEND;               /* INDICATE INPUT LIST END       */ 14623000
*   ELSE                                                           2097 14624000
*     ;                                                            2097 14625000
*                                                                  2097 14626000
*   /*****************************************************************/ 14627000
*   /*                                                               */ 14628000
*   /* IF THE SYSTEM APF TABLE IS BEING INITIALIZED (NP5APF) SET     */ 14629000
*   /* RETURN CODE TO 20 AND RETURN TO NP5MLPRM                      */ 14630000
*   /*                                                               */ 14631000
*   /*****************************************************************/ 14632000
*                                                                  2098 14633000
*   IF APFSAVE¬=0 THEN                                             2098 14634000
         ICM   @14,15,APFSAVE                                      2098 14635000
         BNZ   @RT02098                                            2098 14636000
*     GO TO NP5PLAPF;                                              2099 14637000
*   ELSE                                                           2100 14638000
*     ;                                                            2100 14639000
*                                                                  2100 14640000
*   /*****************************************************************/ 14641000
*   /*                                                               */ 14642000
*   /* IS THE MODULE IN SYS1.LPALIB                                  */ 14643000
*   /*                                                               */ 14644000
*   /*****************************************************************/ 14645000
*                                                                  2101 14646000
*   IF TEXTCHAR(1:LENGTH(LPALIB))=LPALIB THEN/* MODULE IN SYS1.LPALIB*/ 14647000
         CLC   TEXTCHAR(12,RPARM),LPALIB                           2101 14648000
         BE    @RT02101                                            2101 14649000
*     GO TO NP5PLLPA;               /* SEE IF SYS1.LPALIB IS OPEN    */ 14650000
*   ELSE                                                           2103 14651000
*     ;                                                            2103 14652000
*                                                                  2103 14653000
*   /*****************************************************************/ 14654000
*   /*                                                               */ 14655000
*   /* SEE IF MODULE RESIDES IN SYS1.LINKLIB                         */ 14656000
*   /*                                                               */ 14657000
*   /*****************************************************************/ 14658000
*                                                                  2104 14659000
*   IF TEXTCHAR(1:LENGTH(LINKLIB))=LINKLIB THEN/* MODULE IS IN     2104 14660000
*                                      SYS1.LINKLIB                  */ 14661000
         CLC   TEXTCHAR(13,RPARM),LINKLIB                          2104 14662000
         BE    @RT02104                                            2104 14663000
*     GO TO NP5PLLNK;               /* GET LINKLIB DCB ADDRESS       */ 14664000
*   ELSE                                                           2106 14665000
*     ;                                                            2106 14666000
*                                                                  2106 14667000
*   /*****************************************************************/ 14668000
*   /*                                                               */ 14669000
*   /* SEE IF MODULE RESIDES IN SYS1.SVCLIB                          */ 14670000
*   /*                                                               */ 14671000
*   /*****************************************************************/ 14672000
*                                                                  2107 14673000
*   IF TEXTCHAR(1:LENGTH(SVCLIB))=SVCLIB THEN/* MODULE IS IN       2107 14674000
*                                      SYS1.SVCLIB                   */ 14675000
         CLC   TEXTCHAR(12,RPARM),SVCLIB                           2107 14676000
         BE    @RT02107                                            2107 14677000
*     GO TO NP5PLSVC;               /* GET SVCLIB DCB ADDRESS        */ 14678000
*   ELSE                                                           2109 14679000
*     ;                                                            2109 14680000
*                                                                  2109 14681000
*   /*****************************************************************/ 14682000
*   /*                                                               */ 14683000
*   /* SEE IF THE CURRENT LIBRARY PREVIOUS TO CALL TO NIPPMTXT IS    */ 14684000
*   /* STILL VALID.                                                  */ 14685000
*   /*                                                               */ 14686000
*   /*****************************************************************/ 14687000
*                                                                  2110 14688000
*   IF NP5LIBNV='0'B THEN           /* CURRENT LIBRARY IS VALID      */ 14689000
         TM    NP5LIBNV,B'00001000'                                2110 14690000
         BZ    @RT02110                                            2110 14691000
*     GO TO NP5PLMOD;               /* PROCESS MODULE TEXT           */ 14692000
*   ELSE                            /* INFORM OPERATOR               */ 14693000
*     GO TO NP5PLLNV;               /* LIBRARY IS INVALID            */ 14694000
         B     NP5PLLNV                                            2112 14695000
*NP5PLLPA:                          /* CHECK TO SEE IF LPALIB IS OPEN*/ 14696000
*   DCBPTR=NVTCSLIB;                /* GET LPALIB DCB ADDRESS        */ 14697000
*                                                                  2113 14698000
NP5PLLPA L     @14,NVTCSLIB(,RNVT)                                 2113 14699000
         ST    @14,DCBPTR                                          2113 14700000
*   /*****************************************************************/ 14701000
*   /*                                                               */ 14702000
*   /* IS LPALIB DCB OPEN                                            */ 14703000
*   /*                                                               */ 14704000
*   /*****************************************************************/ 14705000
*                                                                  2114 14706000
*   IF NVTCSLIB¬=0 THEN             /* LPALIB IS OPEN                */ 14707000
         LTR   @14,@14                                             2114 14708000
         BNZ   @RT02114                                            2114 14709000
*     GO TO NP5PLLIB;               /* SET UP CURRENT LIBNAME        */ 14710000
*   ELSE                                                           2116 14711000
*     ;                             /* GO TO OPEN SYS1.LPALIB        */ 14712000
*   CALL NP5LPLIB;                  /* OPEN SYS1.LPALIB              */ 14713000
         BAL   @14,NP5LPLIB                                        2117 14714000
*   DCBPTR=NVTCSLIB;                /* PICK UP LPALIB DCB ADDRESS    */ 14715000
*                                                                  2118 14716000
         MVC   DCBPTR(4),NVTCSLIB(RNVT)                            2118 14717000
*   /*****************************************************************/ 14718000
*   /*                                                               */ 14719000
*   /* WAS OPEN SUCCESSFUL                                           */ 14720000
*   /*                                                               */ 14721000
*   /*****************************************************************/ 14722000
*                                                                  2119 14723000
*   IF LPLIBRC=OPENSUC THEN         /* SUCCESSFUL OPEN RC = 0        */ 14724000
         CLI   LPLIBRC,X'00'                                       2119 14725000
         BE    @RT02119                                            2119 14726000
*     GO TO NP5PLLIB;               /* SET UP CURRENT LIBNAME        */ 14727000
*   ELSE                                                           2121 14728000
*     ;                                                            2121 14729000
*                                                                  2121 14730000
*   /*****************************************************************/ 14731000
*   /*                                                               */ 14732000
*   /* MOVE CURRENT PARMLIB MEMBER NAME TO MSG                       */ 14733000
*   /*                                                               */ 14734000
*   /*****************************************************************/ 14735000
*                                                                  2122 14736000
*   MSG8I2=NIPPANAM;                /* CURRENT PARMLIB LIST NAME     */ 14737000
         L     @14,NVTPAREA(,RNVT)                                 2122 14738000
         MVC   MSG8I2(8),NIPPANAM(@14)                             2122 14739000
*   MSG8I1=LPALIB;                  /* SYS1.LPALIB DATASET NAME      */ 14740000
*                                                                  2123 14741000
         MVI   MSG8I1+12,C' '                                      2123 14742000
         MVC   MSG8I1(12),LPALIB                                   2123 14743000
*   /*****************************************************************/ 14744000
*   /*                                                               */ 14745000
*   /* SEND SYS1.LPALIB REQUIRED FOR MEM MESSAGE IEAN05I DSN REQUIRED*/ 14746000
*   /* FOR MEM MSG                                                   */ 14747000
*   /*                                                               */ 14748000
*   /*****************************************************************/ 14749000
*                                                                  2124 14750000
*   GENERATE REFS(RNVT,NVTWTO,MSG8S,MSG8I1,MSG8I2) SETS(RPARM,REXIT,    14751000
*       RENTRY)(IEAPMNIP TYPE=WTO,PARAM=MSG8S);                    2124 14752000
         IEAPMNIP TYPE=WTO,PARAM=MSG8S                                  14753000
*   GO TO NP5PLERR;                 /* SEND ERROR RETURN CODE        */ 14754000
         B     NP5PLERR                                            2125 14755000
*NP5PLSVC:                          /* MEMBER RESIDES IN SYS1.SVCLIB */ 14756000
*   DCBPTR=CVTSVDCB;                /* SET CURRENT DCB TO SVCLIB DCB */ 14757000
NP5PLSVC MVC   DCBPTR(4),CVTSVDCB(RCVT)                            2126 14758000
*   GO TO NP5PLLIB;                 /* SET UP CURRENT LIBNAME        */ 14759000
         B     NP5PLLIB                                            2127 14760000
*NP5PLLNK:                          /* MEMBER RESIDES IN SYS1.LINKLIB*/ 14761000
*   DCBPTR=0;                       /* SET CURRENT DCB TO LINKLIB DCB*/ 14762000
NP5PLLNK SLR   @14,@14                                             2128 14763000
         ST    @14,DCBPTR                                          2128 14764000
*NP5PLLIB:                          /* COMMON CODE FOR ALL LIBRARIES */ 14765000
*   LIBNAME=TEXTCHAR(1:LENGTH(LIBNAME));/* SET UP CURRENT LIBRARY  2129 14766000
*                                      NAME                          */ 14767000
NP5PLLIB MVC   LIBNAME(12),TEXTCHAR(RPARM)                         2129 14768000
*   NP5LIBNV='0'B;                  /* INDICATE LIBRARY VALID        */ 14769000
*                                                                  2130 14770000
         NI    NP5LIBNV,B'11110111'                                2130 14771000
*   /*****************************************************************/ 14772000
*   /*                                                               */ 14773000
*   /* SCAN THROUGH BLANKS FOLLOWING LIBRARY NAME                    */ 14774000
*   /*                                                               */ 14775000
*   /*****************************************************************/ 14776000
*                                                                  2131 14777000
*   RPARM=RPARM+LENGTH(LIBNAME);    /* STEP PAST LIBRARY NAME        */ 14778000
         LA    RPARM,12(,RPARM)                                    2131 14779000
*   SAVPTR=RPARM;                   /* STORE PTR FOR BLDLF           */ 14780000
*                                                                  2132 14781000
         ST    RPARM,SAVPTR                                        2132 14782000
*   /*****************************************************************/ 14783000
*   /*                                                               */ 14784000
*   /* SEE IF FIRST NON-BLANK CHARACTER IS VALID                     */ 14785000
*   /*                                                               */ 14786000
*   /*****************************************************************/ 14787000
*                                                                  2133 14788000
*NP5PLBLK:                                                         2133 14789000
*   IF TEXTCHAR(1)=' ' THEN         /* CHARACTER IS BLANK            */ 14790000
NP5PLBLK CLI   TEXTCHAR(RPARM),C' '                                2133 14791000
         BNE   @RF02133                                            2133 14792000
*     DO;                                                          2134 14793000
*       RPARM=RPARM+1;              /* INCREMENT POINTER             */ 14794000
         LA    RPARM,1(,RPARM)                                     2135 14795000
*       GO TO NP5PLBLK;             /* CHECK NEXT CHARACTER          */ 14796000
         B     NP5PLBLK                                            2136 14797000
*     END;                                                         2137 14798000
*   ELSE                                                           2138 14799000
*     ;                                                            2138 14800000
*                                                                  2138 14801000
@RF02133 DS    0H                                                  2139 14802000
*   /*****************************************************************/ 14803000
*   /*                                                               */ 14804000
*   /* SEE IF CHARACTER IS INVALID                                   */ 14805000
*   /*                                                               */ 14806000
*   /*****************************************************************/ 14807000
*                                                                  2139 14808000
*   IF TEXTCHAR(1)=CHARINV THEN     /* END OF INPUT                  */ 14809000
         CLI   TEXTCHAR(RPARM),X'FF'                               2139 14810000
         BE    @RT02139                                            2139 14811000
*     GO TO NP5PLEND;               /* ERROR-END OF INPUT            */ 14812000
*   ELSE                            /* CHARACTER IS VALID            */ 14813000
*     GO TO NP5PLMOD;               /* PROCESS MODULE TEXT           */ 14814000
         B     NP5PLMOD                                            2141 14815000
*NP5PLMDX:                          /* SEE IF CHARACTER FOLLOWING  2142 14816000
*                                      LAST CHARACTER IN THIS MODNAME   14817000
*                                      IS VALID                      */ 14818000
*   RPARM=SAVPTR;                   /* RESTORE CARD IMAGE PTR        */ 14819000
*                                                                  2142 14820000
NP5PLMDX L     RPARM,SAVPTR                                        2142 14821000
*   /*****************************************************************/ 14822000
*   /*                                                               */ 14823000
*   /* SEE IF CHARACTER IS A BLANK                                   */ 14824000
*   /*                                                               */ 14825000
*   /*****************************************************************/ 14826000
*                                                                  2143 14827000
*   IF TEXTCHAR(1)=' ' THEN         /* CHARACTER IS NOT A BLANK      */ 14828000
         CLI   TEXTCHAR(RPARM),C' '                                2143 14829000
         BE    @RT02143                                            2143 14830000
*     GO TO NP5PLEND;               /* END OF INPUT LIST             */ 14831000
*   ELSE                                                           2145 14832000
*     ;                                                            2145 14833000
*   IF TEXTCHAR(1)¬=',' THEN        /* CHARACTER IS NOT A COMMA      */ 14834000
         CLI   TEXTCHAR(RPARM),C','                                2146 14835000
         BNE   @RT02146                                            2146 14836000
*     GO TO NP5PLMOD;               /* INIT MODNAME WITH NEW MOD     */ 14837000
*   ELSE                                                           2148 14838000
*     ;                                                            2148 14839000
*   RPARM=RPARM+1;                  /* INCREMENT PTR TO NEXT CHAR    */ 14840000
*                                                                  2149 14841000
         LA    RPARM,1(,RPARM)                                     2149 14842000
*   /*****************************************************************/ 14843000
*   /*                                                               */ 14844000
*   /* IS NEXT CHARACTER A BLANK                                     */ 14845000
*   /*                                                               */ 14846000
*   /*****************************************************************/ 14847000
*                                                                  2150 14848000
*   IF TEXTCHAR(1)=' ' THEN         /* CHARACTER IS A BLANK          */ 14849000
         CLI   TEXTCHAR(RPARM),C' '                                2150 14850000
         BE    @RT02150                                            2150 14851000
*     GO TO NP5PLTXT;               /* READ IN NEXT TEXT RECORD      */ 14852000
*   ELSE                                                           2152 14853000
*     ;                                                            2152 14854000
*NP5PLMOD:                                                         2153 14855000
*   CURMOD=' ';                     /* INIT CURRENT MODNAME TO BLANK */ 14856000
*                                                                  2153 14857000
NP5PLMOD MVI   CURMOD+1,C' '                                       2153 14858000
         MVC   CURMOD+2(6),CURMOD+1                                2153 14859000
         MVI   CURMOD,C' '                                         2153 14860000
*   /*****************************************************************/ 14861000
*   /*                                                               */ 14862000
*   /* PUT MODULE NAME OF 8 CHARACTERS OR LESS INTO CURRENT MODNAME  */ 14863000
*   /*                                                               */ 14864000
*   /*****************************************************************/ 14865000
*                                                                  2154 14866000
*   RESPECIFY                                                      2154 14867000
*    (RI) RESTRICTED;                                              2154 14868000
*   RI=1;                           /* INIT CHARACTER INDEX          */ 14869000
         LA    RI,1                                                2155 14870000
*NP5PLCHA:                                                         2156 14871000
*   CURMOD(RI)=TEXTCHAR(1);         /* MOVE CHAR INTO MODNAME        */ 14872000
NP5PLCHA LA    @14,CURMOD-1(RI)                                    2156 14873000
         MVC   0(1,@14),TEXTCHAR(RPARM)                            2156 14874000
*   RI=RI+1;                        /* INCREMENT CHARACTER INDEX     */ 14875000
         LA    @14,1                                               2157 14876000
         ALR   RI,@14                                              2157 14877000
*   RPARM=RPARM+1;                  /* INCREMENT PAST COMMA          */ 14878000
*                                                                  2158 14879000
         ALR   RPARM,@14                                           2158 14880000
*   /*****************************************************************/ 14881000
*   /*                                                               */ 14882000
*   /* SEE IF CHARACTER INDEX IS GREATER THAN 9                      */ 14883000
*   /*                                                               */ 14884000
*   /*****************************************************************/ 14885000
*                                                                  2159 14886000
*   IF RI>9 THEN                    /* MODULE NAME TOO LONG          */ 14887000
         CH    RI,@CH00827                                         2159 14888000
         BH    @RT02159                                            2159 14889000
*     GO TO NP5PLMNV;               /* INVALID FORMAT - MOD          */ 14890000
*   ELSE                                                           2161 14891000
*     ;                                                            2161 14892000
*                                                                  2161 14893000
*   /*****************************************************************/ 14894000
*   /*                                                               */ 14895000
*   /* SEE IF NEXT CHARACTER IS A DELIMITER                          */ 14896000
*   /*                                                               */ 14897000
*   /*****************************************************************/ 14898000
*                                                                  2162 14899000
*   IF TEXTCHAR(1)¬=','&TEXTCHAR(1)¬=' ' THEN/* NOT A DELIMITER      */ 14900000
         CLI   TEXTCHAR(RPARM),C','                                2162 14901000
         BE    @RF02162                                            2162 14902000
         CLI   TEXTCHAR(RPARM),C' '                                2162 14903000
         BNE   @RT02162                                            2162 14904000
*     GO TO NP5PLCHA;               /* PUT NEXT CHAR IN MODNAME      */ 14905000
*   ELSE                                                           2164 14906000
*     ;                                                            2164 14907000
@RF02162 DS    0H                                                  2165 14908000
*   RESPECIFY                                                      2165 14909000
*    (RI) UNRESTRICTED;             /* RELEASE REGISTER 4            */ 14910000
*   SAVE1=RPARM;                    /* SAVE CHAR PTR OVER CALL       */ 14911000
*                                                                  2166 14912000
         ST    RPARM,SAVE1                                         2166 14913000
*   /*****************************************************************/ 14914000
*   /*                                                               */ 14915000
*   /* SEE IF PARMTAB LIST SWITCH IS SET                             */ 14916000
*   /*                                                               */ 14917000
*   /*****************************************************************/ 14918000
*                                                                  2167 14919000
*   IF NP5PLLST¬='1'B THEN          /* SWITCH IS OFF                 */ 14920000
         TM    NP5PLLST,B'01000000'                                2167 14921000
         BNO   @RT02167                                            2167 14922000
*     GO TO NP5PLXIT;               /* NORMAL RETURN                 */ 14923000
*   ELSE                                                           2169 14924000
*     ;                                                            2169 14925000
*                                                                  2169 14926000
*   /*****************************************************************/ 14927000
*   /*                                                               */ 14928000
*   /* MOVE CURRENT MODULE NAME TO MESSAGE TEXT AREA                 */ 14929000
*   /*                                                               */ 14930000
*   /*****************************************************************/ 14931000
*                                                                  2170 14932000
*   MODLIST=CURMOD;                 /* CURRENT MODULE NAME           */ 14933000
*                                                                  2170 14934000
         MVC   MODLIST(8),CURMOD                                   2170 14935000
*   /*****************************************************************/ 14936000
*   /*                                                               */ 14937000
*   /* SEND LIST CURRENT MODULE NAME                                 */ 14938000
*   /*                                                               */ 14939000
*   /*****************************************************************/ 14940000
*                                                                  2171 14941000
*   GENERATE REFS(RNVT,NVTWTO,MODMSGS,MODLIST) SETS(RPARM,REXIT,RENTRY) 14942000
*       (IEAPMNIP TYPE=WTO,PARAM=MODMSGS);                         2171 14943000
         IEAPMNIP TYPE=WTO,PARAM=MODMSGS                                14944000
*NP5PLXIT:                          /* NORMAL RETURN TO CALLER       */ 14945000
*   PLISTRC='0'B;                   /* VALID MODULE NAME RC = 0      */ 14946000
NP5PLXIT MVI   PLISTRC,B'00000000'                                 2172 14947000
*   RPARM=SAVE1;                    /* RESTORE CHAR PTR              */ 14948000
         L     RPARM,SAVE1                                         2173 14949000
*   RETURN;                         /* RETURN TO CALLER              */ 14950000
@EL00029 DS    0H                                                  2174 14951000
@EF00029 DS    0H                                                  2174 14952000
@ER00029 LM    @14,@00,@SA00029                                    2174 14953000
         LM    @02,@12,@SA00029+12                                 2174 14954000
         BR    @14                                                 2174 14955000
*NP5PLMNV:                          /* INVALID FORMAT - MOD RETURN   */ 14956000
*   PLISTRC=OPNOSUC4;               /* INVALID FORMAT - MOD RC=4     */ 14957000
NP5PLMNV MVI   PLISTRC,X'04'                                       2175 14958000
*   RETURN;                         /* RETURN TO CALLER              */ 14959000
         B     @EL00029                                            2176 14960000
*NP5PLLNV:                          /* CURRENT LIBRARY INVALID       */ 14961000
*   PLISTRC=INVFORL;                /* INVALID FORMAT MOD RC=8       */ 14962000
NP5PLLNV MVI   PLISTRC,X'08'                                       2177 14963000
*   RETURN;                         /* RETURN TO CALLER              */ 14964000
         B     @EL00029                                            2178 14965000
*NP5PLEND:                          /* END OF INPUT LIST             */ 14966000
*   PLISTRC=INPUTND;                /* END OF INPUT LIST RC = 12     */ 14967000
NP5PLEND MVI   PLISTRC,X'0C'                                       2179 14968000
*   RETURN;                         /* RETURN TO CALLER              */ 14969000
         B     @EL00029                                            2180 14970000
*NP5PLAPF:                                                         2181 14971000
*   PLISTRC=APFLG;                  /* APF REQUEST - RC=20           */ 14972000
NP5PLAPF MVI   PLISTRC,X'14'                                       2181 14973000
*   CHARSAV=RPARM;                  /* SAVE R1 FOR NP5APF            */ 14974000
         ST    RPARM,CHARSAV                                       2182 14975000
*   RETURN;                         /* RETURN TO CALLER              */ 14976000
         B     @EL00029                                            2183 14977000
*NP5PLERR:                          /* UNSUCCESSFUL READ - RETRY WITH   14978000
*                                      NEW PARAMETER                 */ 14979000
*   PLISTRC=UNSUCRD;                /* UNSUCCESSFUL READ- RC= 16     */ 14980000
NP5PLERR MVI   PLISTRC,X'10'                                       2184 14981000
*   RETURN;                                                        2185 14982000
         B     @EL00029                                            2185 14983000
*   RESPECIFY                                                      2186 14984000
*    (SCNPTR,                                                      2186 14985000
*     PDS2PTR) UNRESTRICTED;                                       2186 14986000
*   END NP5PLIST;                   /* END OF SUBROUTINE             */ 14987000
@PB00029 DS    0H                                                  2188 14988000
*   GENERATE NOREFS NOSETS(EJECT);                                 2188 14989000
         EJECT                                                          14990000
*NP5PRMER:                                                         2189 14991000
*   PROC OPTIONS(NOSAVEAREA,NOSAVE(SCNPTR));/* PARAMETER ERROR     2189 14992000
*                                      ROUTINE                       */ 14993000
         B     @PB00030                                            2189 14994000
NP5PRMER STM   @14,@04,12(@13)                                     2189 14995000
         STM   @06,@12,44(@13)                                     2189 14996000
*   RESPECIFY                                                      2190 14997000
*    (SCNPTR) RESTRICTED;                                          2190 14998000
*                                                                  2190 14999000
*   /*****************************************************************/ 15000000
*   /*                                                               */ 15001000
*   /* SEE IF ONLY A RETRY MSG IS TO BE ISSUED                       */ 15002000
*   /*                                                               */ 15003000
*   /*****************************************************************/ 15004000
*                                                                  2191 15005000
*   IF NP5RTRY='1'B THEN            /* RETRY MESSAGE ONLY            */ 15006000
         TM    NP5RTRY,B'00010000'                                 2191 15007000
         BO    @RT02191                                            2191 15008000
*     GO TO NP5PRPNV;               /* SET UP RETRY MESSAGE          */ 15009000
*   ELSE                                                           2193 15010000
*     ;                                                            2193 15011000
*                                                                  2193 15012000
*   /*****************************************************************/ 15013000
*   /*                                                               */ 15014000
*   /* WAS A LIST MODNAME INVALID                                    */ 15015000
*   /*                                                               */ 15016000
*   /*****************************************************************/ 15017000
*                                                                  2194 15018000
*   IF ERRORCD=MODINV THEN          /* MODNAME IN LIST INVALID       */ 15019000
         CLI   ERRORCD,X'08'                                       2194 15020000
         BE    @RT02194                                            2194 15021000
*     GO TO NP5PRMNV;               /* SET CAUSE TO MODNAME          */ 15022000
*   ELSE                                                           2196 15023000
*     ;                                                            2196 15024000
*                                                                  2196 15025000
*   /*****************************************************************/ 15026000
*   /*                                                               */ 15027000
*   /* WAS THE LIST LIBNAME INVALID                                  */ 15028000
*   /*                                                               */ 15029000
*   /*****************************************************************/ 15030000
*                                                                  2197 15031000
*   IF ERRORCD=LIBINV THEN          /* LIBNAME IN LIST INVALID       */ 15032000
         CLI   ERRORCD,X'0C'                                       2197 15033000
         BE    @RT02197                                            2197 15034000
*     GO TO NP5PRLNV;               /* SET CAUSE TO LIBNAME          */ 15035000
*   ELSE                                                           2199 15036000
*     ;                                                            2199 15037000
*                                                                  2199 15038000
*   /*****************************************************************/ 15039000
*   /*                                                               */ 15040000
*   /* WAS THE BLDL ENTRY COUNT INVALID                              */ 15041000
*   /*                                                               */ 15042000
*   /*****************************************************************/ 15043000
*                                                                  2200 15044000
*   IF ERRORCD=CNTINV THEN          /* BLDL ENTRY COUNT INVALID      */ 15045000
         CLI   ERRORCD,X'10'                                       2200 15046000
         BE    @RT02200                                            2200 15047000
*     GO TO NP5PRCNV;               /* SET CAUSE TO NO. ENTRIES      */ 15048000
*   ELSE                                                           2202 15049000
*     ;                                                            2202 15050000
*                                                                  2202 15051000
*   /*****************************************************************/ 15052000
*   /*                                                               */ 15053000
*   /* WAS THERE AN APF ENTRY WITH INCORRECT VOLID ?                 */ 15054000
*   /*                                                               */ 15055000
*   /*****************************************************************/ 15056000
*                                                                  2203 15057000
*   IF ERRORCD=VOLIDINV THEN                                       2203 15058000
         CLI   ERRORCD,X'14'                                       2203 15059000
         BE    @RT02203                                            2203 15060000
*     GO TO NP5PRVNV;               /* SET CAUSE TO INVALID VOLID    */ 15061000
*   ELSE                                                           2205 15062000
*     ;                                                            2205 15063000
*NP5PRPNV:                          /* PARAMETER SPECIFICATION IS  2206 15064000
*                                      INVALID                       */ 15065000
*                                                                  2206 15066000
*   /*****************************************************************/ 15067000
*   /*                                                               */ 15068000
*   /* MOVE CURRENT PARAMETER TO ERROR MSG TEXT                      */ 15069000
*   /*                                                               */ 15070000
*   /*****************************************************************/ 15071000
*                                                                  2206 15072000
*   PASSPARM=PSAVAR(1:PLENGTH-1);   /* MOVE IN CURRENT PARAM         */ 15073000
*                                                                  2206 15074000
NP5PRPNV MVI   PASSPARM+1,C' '                                     2206 15075000
         MVC   PASSPARM+2(6),PASSPARM+1                            2206 15076000
         L     @14,PLENGTH                                         2206 15077000
         BCTR  @14,0                                               2206 15078000
         BCTR  @14,0                                               2206 15079000
         EX    @14,@SM04142                                        2206 15080000
*   /*****************************************************************/ 15081000
*   /*                                                               */ 15082000
*   /* SEND - RESPECIFY OR CANCEL MESSAGE                            */ 15083000
*   /*                                                               */ 15084000
*   /*****************************************************************/ 15085000
*                                                                  2207 15086000
*   GENERATE REFS(PASSPARM,NVTPRMPT,RNVT) SETS(RPARM,REXIT,RENTRY) 2207 15087000
*       (IEAPMNIP TYPE=PRMPT,PARAM=PASSPARM,OPT=ERROR);            2207 15088000
         IEAPMNIP TYPE=PRMPT,PARAM=PASSPARM,OPT=ERROR                   15089000
*NP5PRMRC:                                                         2208 15090000
*   IF RPARM¬=0 THEN                                               2208 15091000
NP5PRMRC LTR   RPARM,RPARM                                         2208 15092000
         BZ    @RF02208                                            2208 15093000
*     DO;                                                          2209 15094000
*       MSGGI1=PASSPARM(1:5);       /* BAD PARAM TO MSG              */ 15095000
         MVI   MSGGI1+5,C' '                                       2210 15096000
         MVC   MSGGI1(5),PASSPARM                                  2210 15097000
*       GENERATE REFS(RNVT,NVTWTOR,MSGGS,MSGGI1) SETS(RPARM,REXIT, 2211 15098000
*           RENTRY)(IEAPMNIP TYPE=WTO,PARAM=MSGGS);/* CAUSE IS SYS.     15099000
*                                      ERROR                         */ 15100000
         IEAPMNIP TYPE=WTO,PARAM=MSGGS                                  15101000
*       NVTFLWSC='3F'X;             /* PUT SYSTEM IN WAIT STATE.     */ 15102000
         MVI   NVTFLWSC(RNVT),X'3F'                                2212 15103000
*       GENERATE REFS(RNVT,NVTSWAIT,NVTFLWSC) SETS(REXIT,RENTRY)   2213 15104000
*           (IEAPMNIP TYPE=SWAIT);                                 2213 15105000
         IEAPMNIP TYPE=SWAIT                                            15106000
*     END;                                                         2214 15107000
*   ELSE                                                           2215 15108000
*     ;                                                            2215 15109000
@RF02208 DS    0H                                                  2216 15110000
*NP5PRCAN:                                                         2216 15111000
*                                                                  2216 15112000
*   /*****************************************************************/ 15113000
*   /*                                                               */ 15114000
*   /* DID OPERATOR CANCEL THE MESSAGE                               */ 15115000
*   /*                                                               */ 15116000
*   /*****************************************************************/ 15117000
*                                                                  2216 15118000
*   RESPECIFY                                                      2216 15119000
*    (NPTEPTR) RESTRICTED;                                         2216 15120000
NP5PRCAN DS    0H                                                  2217 15121000
*   NPTEPTR=NPTESAV;                /* RESTORE PARMTAB ENTRY PTR     */ 15122000
         L     NPTEPTR,NPTESAV                                     2217 15123000
*   IF NIPPTCAN='1'B THEN           /* OPERATOR CANCELLED            */ 15124000
         TM    NIPPTCAN(NPTEPTR),B'00100000'                       2218 15125000
         BO    @RT02218                                            2218 15126000
*     GO TO NP5PRXIT;               /* NO RETRY - RETURN             */ 15127000
*   ELSE                                                           2220 15128000
*     ;                                                            2220 15129000
*                                                                  2220 15130000
*   /*****************************************************************/ 15131000
*   /*                                                               */ 15132000
*   /* SET SWITCH IN IEAVNP05 TO INDICATE WHETHER LIST FLAG IS ON    */ 15133000
*   /*                                                               */ 15134000
*   /*****************************************************************/ 15135000
*                                                                  2221 15136000
*   IF NIPPTLST='1'B THEN           /* LIST FLAG IS ON               */ 15137000
         TM    NIPPTLST(NPTEPTR),B'01000000'                       2221 15138000
         BNO   @RF02221                                            2221 15139000
*     NP5PLLST='1'B;                /* SET ON FLAG IN IEAVNP05       */ 15140000
         OI    NP5PLLST,B'01000000'                                2222 15141000
*   ELSE                            /* LIST FLAG IS OFF              */ 15142000
*     NP5PLLST='0'B;                /* SET OFF FLAG IN IEAVNP05      */ 15143000
         B     @RC02221                                            2223 15144000
@RF02221 NI    NP5PLLST,B'10111111'                                2223 15145000
*   SCNPTR=NIPPTADR;                /* RESTORE PTR TO PARMT ENTRY    */ 15146000
@RC02221 L     SCNPTR,NIPPTADR(,NPTEPTR)                           2224 15147000
*   PRMERRC=PRMERRC&&PRMERRC;       /* RETRY/NEW PARAMETER           */ 15148000
         XC    PRMERRC(1),PRMERRC                                  2225 15149000
*   NP5RTRY='0'B;                   /* TURN OFF NO ERR MSG FLAG      */ 15150000
         NI    NP5RTRY,B'11101111'                                 2226 15151000
*   RETURN;                         /* RETURN TO CALLER              */ 15152000
@EL00030 DS    0H                                                  2227 15153000
@EF00030 DS    0H                                                  2227 15154000
@ER00030 LM    @14,@04,12(@13)                                     2227 15155000
         LM    @06,@12,44(@13)                                     2227 15156000
         BR    @14                                                 2227 15157000
*NP5PRMNV:                          /* SET CAUSE IN ERROR MESSAGE TO    15158000
*                                      MODNAME                       */ 15159000
*   MSG9I3A=CAUSEMOD;               /* CAUSE OF ERROR IS MODNAME     */ 15160000
NP5PRMNV MVC   MSG9I3A(8),CAUSEMOD                                 2228 15161000
*   MSG9I3B=CURMOD;                 /* INVALID MODNAME               */ 15162000
*                                                                  2229 15163000
         MVC   MSG9I3B(8),CURMOD                                   2229 15164000
*   /*****************************************************************/ 15165000
*   /*                                                               */ 15166000
*   /* MOVE CURRENT MODULE NAME TO MESSAGE                           */ 15167000
*   /*                                                               */ 15168000
*   /*****************************************************************/ 15169000
*                                                                  2230 15170000
*   GO TO NP5PRMSG;                 /* SEND PRM INVALID MESSAGE      */ 15171000
         B     NP5PRMSG                                            2230 15172000
*NP5PRLNV:                          /* SET CAUSE IN ERROR MESSAGE TO    15173000
*                                      LIBNAME MISSING               */ 15174000
*   MSG9I3=CAUSELIB;                /* CAUSE IS LIBNAME MISSING      */ 15175000
NP5PRLNV MVC   MSG9I3(24),CAUSELIB                                 2231 15176000
*   GO TO NP5PRMSG;                 /* SEND PRM INVALID MESSAGE      */ 15177000
         B     NP5PRMSG                                            2232 15178000
*NP5PRCNV:                          /* SET CAUSE IN ERROR MESSAGE TO    15179000
*                                      NO. ENTRIES                   */ 15180000
*   MSG9I3=CAUSENO;                 /* LIST ENTRY COUNT INVALID      */ 15181000
NP5PRCNV MVC   MSG9I3(24),CAUSENO                                  2233 15182000
*   GO TO NP5PRMSG;                 /* SEND LIST INVALID MSG         */ 15183000
         B     NP5PRMSG                                            2234 15184000
*NP5PRVNV:                          /* SET CAUSE TO INVALID VOLID    */ 15185000
*   MSG9I3=CAUSEVOL;                /* CAUSE IS INVALID VOLID        */ 15186000
NP5PRVNV MVC   MSG9I3(24),CAUSEVOL                                 2235 15187000
*NP5PRMSG:                          /* MOVE PARMLIB LIST NAME &    2236 15188000
*                                      CURRENT PARAMETER TO MESSAGE  */ 15189000
*   MSG9I1=PLISTNAM;                /* PARMLIB LIST NAME             */ 15190000
NP5PRMSG MVI   MSG9I1+8,C' '                                       2236 15191000
         MVC   MSG9I1(8),PLISTNAM                                  2236 15192000
*   MSG9I2=PSAVAR(1:PLENGTH-1);     /* CURRENT PARAMETER             */ 15193000
*                                                                  2237 15194000
         MVI   MSG9I2+1,C' '                                       2237 15195000
         MVC   MSG9I2+2(4),MSG9I2+1                                2237 15196000
         L     @14,PLENGTH                                         2237 15197000
         BCTR  @14,0                                               2237 15198000
         BCTR  @14,0                                               2237 15199000
         EX    @14,@SM04144                                        2237 15200000
*   /*****************************************************************/ 15201000
*   /*                                                               */ 15202000
*   /* SEN LIST LIS FOR PRM INVALID - CAUSE MESSAGE IEAN05I LIST LIS */ 15203000
*   /* FOR PRM INVALID - CAUSE                                       */ 15204000
*   /*                                                               */ 15205000
*   /*****************************************************************/ 15206000
*                                                                  2238 15207000
*   GENERATE REFS(RNVT,NVTWTO,MSG9S,MSG9I1,MSG9I2) SETS(RPARM,REXIT,    15208000
*       RENTRY)(IEAPMNIP TYPE=WTO,PARAM=MSG9S);                    2238 15209000
         IEAPMNIP TYPE=WTO,PARAM=MSG9S                                  15210000
*   GO TO NP5PRPNV;                 /* PARAMETER NOT VALID-RETRY     */ 15211000
         B     NP5PRPNV                                            2239 15212000
*NP5PRXIT:                          /* RETURN SPECIFYING NO RETRY    */ 15213000
*   PRMERRC=NORETRY;                /* OPERATOR CANCELED RC = 4      */ 15214000
NP5PRXIT MVI   PRMERRC,X'04'                                       2240 15215000
*   NP5RTRY='0'B;                   /* RESET NO ERR MSG FLAG         */ 15216000
         NI    NP5RTRY,B'11101111'                                 2241 15217000
*   RETURN;                         /* RETURN TO CALLER              */ 15218000
         B     @EL00030                                            2242 15219000
*   RESPECIFY                                                      2243 15220000
*    (SCNPTR,                                                      2243 15221000
*     NPTEPTR) UNRESTRICTED;                                       2243 15222000
*   END NP5PRMER;                   /* END OF SUBROUTINE             */ 15223000
@PB00030 DS    0H                                                  2245 15224000
*   GENERATE NOREFS NOSETS(EJECT);                                 2245 15225000
         EJECT                                                          15226000
*NP5LPNCR:                                                         2246 15227000
*   PROC OPTIONS(NOSAVEAREA);       /* STORAGE UNAVAIL MSG RTN       */ 15228000
*                                                                  2246 15229000
         B     @PB00031                                            2246 15230000
NP5LPNCR STM   @14,@12,12(@13)                                     2246 15231000
*   /*****************************************************************/ 15232000
*   /*                                                               */ 15233000
*   /* MOVE CURRENT PARAMETER TO MESSAGE TEXTS                       */ 15234000
*   /*                                                               */ 15235000
*   /*****************************************************************/ 15236000
*                                                                  2247 15237000
*   MSGBI1=PSAVAR(1:PLENGTH-1);     /* PRM IN STORAGE MESSAGE        */ 15238000
         MVI   MSGBI1+1,C' '                                       2247 15239000
         MVC   MSGBI1+2(3),MSGBI1+1                                2247 15240000
         L     @14,PLENGTH                                         2247 15241000
         BCTR  @14,0                                               2247 15242000
         BCTR  @14,0                                               2247 15243000
         EX    @14,@SM04137                                        2247 15244000
*   MSGCI1=PSAVAR(1:PLENGTH-1);     /* PRM IN TERMINATED MESSAGE     */ 15245000
*                                                                  2248 15246000
         MVI   MSGCI1+1,C' '                                       2248 15247000
         MVC   MSGCI1+2(4),MSGCI1+1                                2248 15248000
         EX    @14,@SM04146                                        2248 15249000
*   /*****************************************************************/ 15250000
*   /*                                                               */ 15251000
*   /* IEAN05I REAL OR VIRTUAL STORAGE UNAVAILABLE FOR PRM           */ 15252000
*   /*                                                               */ 15253000
*   /*****************************************************************/ 15254000
*                                                                  2249 15255000
*   GENERATE REFS(RNVT,NVTWTO,MSGBS,MSGBI1) SETS(RPARM,REXIT,RENTRY)    15256000
*       (IEAPMNIP TYPE=WTO,PARAM=MSGBS);                           2249 15257000
*                                                                  2249 15258000
         IEAPMNIP TYPE=WTO,PARAM=MSGBS                                  15259000
*   /*****************************************************************/ 15260000
*   /*                                                               */ 15261000
*   /* MOVE CURRENT MODULE NAME FORM PDS ENTRY TO MSG TEXT           */ 15262000
*   /*                                                               */ 15263000
*   /*****************************************************************/ 15264000
*                                                                  2250 15265000
*   RESPECIFY                                                      2250 15266000
*    (PDS2PTR) RESTRICTED;                                         2250 15267000
*   MSGCI2=PDS2NAME;                /* CURRENT MODULE NAME           */ 15268000
*                                                                  2251 15269000
         MVC   MSGCI2(8),PDS2NAME(PDS2PTR)                         2251 15270000
*   /*****************************************************************/ 15271000
*   /*                                                               */ 15272000
*   /* SEND PRM INPUT TERMINATED AT MODNAME MESSAGE IEAN05I PRM INPUT*/ 15273000
*   /* TERMINATED AT MOD                                             */ 15274000
*   /*                                                               */ 15275000
*   /*****************************************************************/ 15276000
*                                                                  2252 15277000
*   GENERATE REFS(RNVT,NVTWTO,MSGCS,MSGCI1,MSGCI2) SETS(RPARM,REXIT,    15278000
*       RENTRY)(IEAPMNIP TYPE=WTO,PARAM=MSGCS);                    2252 15279000
         IEAPMNIP TYPE=WTO,PARAM=MSGCS                                  15280000
*   RETURN;                         /* RETURN TO CALLER              */ 15281000
@EL00031 DS    0H                                                  2253 15282000
@EF00031 DS    0H                                                  2253 15283000
@ER00031 LM    @14,@12,12(@13)                                     2253 15284000
         BR    @14                                                 2253 15285000
*   RESPECIFY                                                      2254 15286000
*    (PDS2PTR) UNRESTRICTED;                                       2254 15287000
*   END NP5LPNCR;                   /* END OF SUBROUTINE             */ 15288000
@PB00031 DS    0H                                                  2256 15289000
*   GENERATE NOREFS NOSETS(EJECT);                                 2256 15290000
         EJECT                                                          15291000
*NP5LPLIB:                                                         2257 15292000
*   PROC;                           /* LPALIB OPEN ROUTINE           */ 15293000
         B     @PB00032                                            2257 15294000
NP5LPLIB STM   @14,@12,@SA00032                                    2257 15295000
*   RESPECIFY                                                      2258 15296000
*    (TCBPTR) RESTRICTED;                                          2258 15297000
*   TCBPTR=NVTVRTCB;                /* ADDR OF NIP'S V=R TCB         */ 15298000
         L     TCBPTR,NVTVRTCB(,RNVT)                              2259 15299000
*   JPQSAV2=TCBJPQ;                 /* SAVE CURRENT JPQ PTR          */ 15300000
         MVC   JPQSAV2(4),TCBJPQ(TCBPTR)                           2260 15301000
*   LLSSAV2=TCBLLS;                 /* SAVE CURRENT LLE ADDRESS      */ 15302000
*                                                                  2261 15303000
         MVC   LLSSAV2(4),TCBLLS(TCBPTR)                           2261 15304000
*   /*****************************************************************/ 15305000
*   /*                                                               */ 15306000
*   /* DOES THIS TCB REFLECT THE LPA QUEUE                           */ 15307000
*   /*                                                               */ 15308000
*   /*****************************************************************/ 15309000
*                                                                  2262 15310000
*   IF NP5LPAQ¬='1'B THEN           /* TCB DOES NOT REFLECT LPA Q    */ 15311000
         TM    NP5LPAQ,B'10000000'                                 2262 15312000
         BNO   @RT02262                                            2262 15313000
*     GO TO NP5LPLOC;               /* FIND VOLID                    */ 15314000
*   ELSE                                                           2264 15315000
*     ;                             /* SAVE PTRS IN TCB              */ 15316000
*   TCBJPQ=JPQSAVE;                 /* RESTORE NIP'S TCBJPQ          */ 15317000
         MVC   TCBJPQ(4,TCBPTR),JPQSAVE                            2265 15318000
*   TCBLLS=LLSSAVE;                 /* RESTORE NIP'S TCBLLS          */ 15319000
         MVC   TCBLLS(4,TCBPTR),LLSSAVE                            2266 15320000
*NP5LPLOC:                          /* CALL LOCATE TO FIND         2267 15321000
*                                      SYS1.LPALIB VOLID             */ 15322000
*   SAVACTQ=IEAQLPA;                /* SAVE PTR OF ACTIVE QUE        */ 15323000
NP5LPLOC L     @14,CVTQLPAQ(,RCVT)                                 2267 15324000
         MVC   SAVACTQ(4),IEAQLPA(@14)                             2267 15325000
*   IEAQLPA=TCBJPQ;                 /* PUT NIP'S TCBJPQ ON ACTIVE  2268 15326000
*                                      QUEUE                         */ 15327000
         MVC   IEAQLPA(4,@14),TCBJPQ(TCBPTR)                       2268 15328000
*   RESPECIFY                                                      2269 15329000
*    (RCODE) RESTRICTED;                                           2269 15330000
*   GENERATE REFS(LOCPLIST) SETS(RPARM,RCODE)(LOCATE LOCPLIST);/*  2270 15331000
*                                      READ IN VOLUME BLOCK          */ 15332000
*                                                                  2270 15333000
         LOCATE LOCPLIST                                                15334000
*   /*****************************************************************/ 15335000
*   /*                                                               */ 15336000
*   /* SEE IF LOCATE WAS SUCCESSFUL                                  */ 15337000
*   /*                                                               */ 15338000
*   /*****************************************************************/ 15339000
*                                                                  2271 15340000
*   IF RCODE¬=0 THEN                /* LOCATE NOT SUCCESSFUL         */ 15341000
         LTR   RCODE,RCODE                                         2271 15342000
         BNZ   @RT02271                                            2271 15343000
*     GO TO NP5LPNFN;               /* SEND LOCATE FAILED MESSAGE    */ 15344000
*   ELSE                                                           2273 15345000
*     ;                             /* LOCATE SUCCESSFUL.CONTINUE    */ 15346000
*   RESPECIFY                                                      2274 15347000
*    (RCODE) UNRESTRICTED;                                         2274 15348000
*   IEAQLPA=SAVACTQ;                /* RESTORE ACTIVE Q POINTER      */ 15349000
*                                                                  2275 15350000
         L     @14,CVTQLPAQ(,RCVT)                                 2275 15351000
         MVC   IEAQLPA(4,@14),SAVACTQ                              2275 15352000
*   /*****************************************************************/ 15353000
*   /*                                                               */ 15354000
*   /* SET UP PARAMETERS FOR MOUNT REQUEST (UNCONDITIONAL)           */ 15355000
*   /*                                                               */ 15356000
*   /*****************************************************************/ 15357000
*                                                                  2276 15358000
*   MNTPLPTR=ADDR(NP5MNT);          /* ADDRESS OF MOUNT PLIST        */ 15359000
         LA    @14,NP5MNT                                          2276 15360000
         ST    @14,MNTPLPTR                                        2276 15361000
*   RESPECIFY                                                      2277 15362000
*     NIPMNTPL BASED(MNTPLPTR);     /* BASE MNT PARM                 */ 15363000
*   NMNTVS=VOLSER;                  /* VOL SER IN VOLUME BLOCK       */ 15364000
         MVC   NMNTVS(6,@14),VOLSER                                2278 15365000
*   NMNTDT=VOLDC;                   /* DEVICE CODE IN VOL BLK        */ 15366000
*                                                                  2279 15367000
         MVC   NMNTDT(2,@14),VOLDC                                 2279 15368000
*   /*****************************************************************/ 15369000
*   /*                                                               */ 15370000
*   /* INSURE VOLUME IS MOUNTED-RPARM- UCB ADDR ON RETURN            */ 15371000
*   /*                                                               */ 15372000
*   /*****************************************************************/ 15373000
*                                                                  2280 15374000
*   GENERATE REFS(RNVT,NVTLOAD,NP5MNT,NVTMOUNT) SETS(RPARM,REXIT,RENTRY 15375000
*       ,NMNTFL)(IEAPMNIP TYPE=MOUNT,PARAM=NP5MNT);                2280 15376000
*                                                                  2280 15377000
         IEAPMNIP TYPE=MOUNT,PARAM=NP5MNT                               15378000
*   /*****************************************************************/ 15379000
*   /*                                                               */ 15380000
*   /* SET UP PARAMETERS FOR OPEN REQUEST                            */ 15381000
*   /*                                                               */ 15382000
*   /*****************************************************************/ 15383000
*                                                                  2281 15384000
*   RESPECIFY                                                      2281 15385000
*    (OPNPLPTR) RESTRICTED;         /* RESTRICT REGISTER 8           */ 15386000
*   OPNPLPTR=ADDR(NP5OPN);          /* ADDRESS OF OPEN PLIST         */ 15387000
         LA    OPNPLPTR,NP5OPN                                     2282 15388000
*   RESPECIFY                                                      2283 15389000
*     NIPOPNPL BASED(OPNPLPTR);     /* BASE OPEN PARM ON R8          */ 15390000
*   NOPNDCB=LPADCB;                 /* ADDR OF LPALIB DCB            */ 15391000
         MVC   NOPNDCB(4,OPNPLPTR),LPADCB                          2284 15392000
*   NOPNUCB=RPARM;                  /* ADDR OF UCB FOR VOLUME        */ 15393000
*                                                                  2285 15394000
         ST    RPARM,NOPNUCB(,OPNPLPTR)                            2285 15395000
*   /*****************************************************************/ 15396000
*   /*                                                               */ 15397000
*   /* OPEN LPALIB DCB                                               */ 15398000
*   /*                                                               */ 15399000
*   /*****************************************************************/ 15400000
*                                                                  2286 15401000
*   GENERATE REFS(RNVT,NVTLOAD,NP5OPN,NVTOPEN) SETS(RPARM,REXIT,RENTRY, 15402000
*       NOPNFL,NOPNRC)                                             2286 15403000
*       (IEAPMNIP TYPE=OPEN,PARAM=NP5OPN,OPT=(NB,,LC,,,,AU));      2286 15404000
*                                                                  2286 15405000
         IEAPMNIP TYPE=OPEN,PARAM=NP5OPN,OPT=(NB,,LC,,,,AU)             15406000
*   /*****************************************************************/ 15407000
*   /*                                                               */ 15408000
*   /* WAS OPEN SUCCESSFUL                                           */ 15409000
*   /*                                                               */ 15410000
*   /*****************************************************************/ 15411000
*                                                                  2287 15412000
*   IF NOPNRC¬=OPNSUC THEN          /* OPEN WAS NOT SUCCESSFUL       */ 15413000
         CLI   NOPNRC(OPNPLPTR),X'00'                              2287 15414000
         BNE   @RT02287                                            2287 15415000
*     GO TO NP5LPERR;               /* LPALIB NOT OPENED             */ 15416000
*   ELSE                                                           2289 15417000
*     ;                             /* PERFORM LPALIB PROCESSING     */ 15418000
*   RESPECIFY                                                      2290 15419000
*    (OPNPLPTR) UNRESTRICTED;       /* RELEASE REGISTER 8            */ 15420000
*   NVTCSLIB=LPADCB;                /* PUT LPALIB DCB @ IN NVT       */ 15421000
         MVC   NVTCSLIB(4,RNVT),LPADCB                             2291 15422000
*   TCBJPQ=JPQSAV2;                 /* RESTORE SAVED JPQ VALUE       */ 15423000
         MVC   TCBJPQ(4,TCBPTR),JPQSAV2                            2292 15424000
*   TCBLLS=LLSSAV2;                 /* RESTORE SAVED LLE VALUE       */ 15425000
         MVC   TCBLLS(4,TCBPTR),LLSSAV2                            2293 15426000
*   LPLIBRC=LPLIBRC&&LPLIBRC;       /* SUCCESSFUL OPEN RC=0          */ 15427000
         XC    LPLIBRC(1),LPLIBRC                                  2294 15428000
*   RETURN;                         /* RETURN TO CALLER              */ 15429000
@EL00032 DS    0H                                                  2295 15430000
@EF00032 DS    0H                                                  2295 15431000
@ER00032 LM    @14,@12,@SA00032                                    2295 15432000
         BR    @14                                                 2295 15433000
*NP5LPNFN:                          /* SEND LOCATE FAILED FOR LPALIB    15434000
*                                      MESSAGE                       */ 15435000
*   MSG7I1=LPALIB;                  /* DSN IS SYS1.LPALIB            */ 15436000
*                                                                  2296 15437000
NP5LPNFN MVC   MSG7I1(12),LPALIB                                   2296 15438000
*   /*****************************************************************/ 15439000
*   /*                                                               */ 15440000
*   /* IEAN05A LOCATE FAILED FOR DSN                                 */ 15441000
*   /*                                                               */ 15442000
*   /*****************************************************************/ 15443000
*                                                                  2297 15444000
*   GENERATE REFS(RNVT,NVTWTO,MSG7S,MSG7I1) SETS(RPARM,REXIT,RENTRY)    15445000
*       (IEAPMNIP TYPE=WTO,PARAM=MSG7S);                           2297 15446000
         IEAPMNIP TYPE=WTO,PARAM=MSG7S                                  15447000
*NP5LPERR:                                                         2298 15448000
*   TCBJPQ=JPQSAV2;                 /* RESTORE SAVED JPQ VALUE       */ 15449000
NP5LPERR MVC   TCBJPQ(4,TCBPTR),JPQSAV2                            2298 15450000
*   TCBLLS=LLSSAV2;                 /* RESTORE SAVED LLE VALUE       */ 15451000
         MVC   TCBLLS(4,TCBPTR),LLSSAV2                            2299 15452000
*   LPLIBRC=OPENFAL;                /* OPEN FAILED RC=4              */ 15453000
         MVI   LPLIBRC,X'04'                                       2300 15454000
*   IEAQLPA=SAVACTQ;                /* RESTORE ACTIVE Q POINTER      */ 15455000
         L     @14,CVTQLPAQ(,RCVT)                                 2301 15456000
         MVC   IEAQLPA(4,@14),SAVACTQ                              2301 15457000
*   RESPECIFY                                                      2302 15458000
*    (TCBPTR) UNRESTRICTED;         /* RELEASE REGISTER 4            */ 15459000
*   RETURN;                         /* RETURN TO CALLER              */ 15460000
         B     @EL00032                                            2303 15461000
*   END NP5LPLIB;                   /* END OF SUBROUTINE             */ 15462000
@PB00032 DS    0H                                                  2305 15463000
*   GENERATE NOREFS NOSETS(EJECT);                                 2305 15464000
         EJECT                                                          15465000
*NP5LPLOD:                                                         2306 15466000
*   PROC OPTIONS(NOSAVEAREA);                                      2306 15467000
         B     @PB00033                                            2306 15468000
NP5LPLOD STM   @14,@12,12(@13)                                     2306 15469000
*NP5LPLD1:                                                         2307 15470000
*   ;                                                              2307 15471000
NP5LPLD1 DS    0H                                                  2308 15472000
*NP5LPLD2:                                                         2308 15473000
*   ;                                                              2308 15474000
*                                                                  2308 15475000
NP5LPLD2 DS    0H                                                  2309 15476000
*   /*****************************************************************/ 15477000
*   /*                                                               */ 15478000
*   /* THE NP5LPLOD ACCESSES THE IEALOD00 MEMBER OF SYS1.PARMLIB AND */ 15479000
*   /* ISSUES A 'LOAD' FOR EVERY VALID MODULE NAME ON THE LIST. NAMES*/ 15480000
*   /* WHICH ARE ALREADY ON THE LPA ACTIVE QUEUE ARE NOT RE-LOADED   */ 15481000
*   /* AND MODULES WHICH ARE SPECIFIED BUT NOT CONTAINED IN THE      */ 15482000
*   /* CURRENT LPA ARE IGNORED AND IDENTIFIED IN AN ERROR MESSAGE.   */ 15483000
*   /* THE LLE FOR EACH LOAD MODULE IS FREED AFTER THE MODULE'S LOAD */ 15484000
*   /* IS COMPLETE.                                                  */ 15485000
*   /*                                                               */ 15486000
*   /*****************************************************************/ 15487000
*                                                                  2309 15488000
*   RESPECIFY                                                      2309 15489000
*    (RDSR0,                        /* VVMSR REGISTER 0              */ 15490000
*     RDSR1,                        /* VVMSR REGISTER 1              */ 15491000
*     TCBPTR,                       /* TCB BASE REGISTER             */ 15492000
*     CDENTPTR,                     /* CDE BASE REGISTER             */ 15493000
*     LLEPTR,                                                      2309 15494000
*     SCNPTR,                       /* LLE BASE, TEXT PTR            */ 15495000
*     RENTRY) RESTRICTED;           /* BALR ENTRY REG                */ 15496000
*   RESPECIFY                                                      2310 15497000
*     NIPPAREA BASED(NVTPAREA);     /* SET PARMAREA BASE FOR PARMLIB    15498000
*                                      I/O                           */ 15499000
*   RESPECIFY                                                      2311 15500000
*     SCAN BASED(SCNPTR);                                          2311 15501000
*   TCBPTR=NVTVRTCB;                /* SETTUP TCB POINTER            */ 15502000
         L     TCBPTR,NVTVRTCB(,RNVT)                              2312 15503000
*   LASTMODN=LDSTART;               /* LAST MODULE = START           */ 15504000
         MVC   LASTMODN(8),@CC03446                                2313 15505000
*   NIPPANAM=LODLSTNM;              /* SET MEMBER NAME               */ 15506000
*                                                                  2314 15507000
         L     @14,NVTPAREA(,RNVT)                                 2314 15508000
         MVC   NIPPANAM(8,@14),@CC03458                            2314 15509000
*   /*****************************************************************/ 15510000
*   /*                                                               */ 15511000
*   /* CALL SYS1.PARMLIB MEMBER LOCATE ROUTINE                       */ 15512000
*   /*                                                               */ 15513000
*   /*****************************************************************/ 15514000
*                                                                  2315 15515000
*   CALL NIPPMPDS;                  /*                               */ 15516000
         BAL   @14,NIPPMPDS                                        2315 15517000
*   BC(15,NP5LDTXT);                /* FOUND - CONTINUE              */ 15518000
         BC    15,NP5LDTXT                                         2316 15519000
*   BC(15,NP5LDRTN);                /* NOT FOUND - RETURN            */ 15520000
         BC    15,NP5LDRTN                                         2317 15521000
*NP5LDTXT:                          /* READ A TEXT RECORD            */ 15522000
*   CALL NIPPMTXT;                  /* CALL READ ROUTINE             */ 15523000
NP5LDTXT BAL   @14,NIPPMTXT                                        2318 15524000
*   BC(15,NP5LDNX1);                /* READ - CONTINUE               */ 15525000
         BC    15,NP5LDNX1                                         2319 15526000
*   BC(15,NP5LDER1);                /* I/0 ERROR ON READ             */ 15527000
         BC    15,NP5LDER1                                         2320 15528000
*NP5LDNX1:                          /* BEGIN THIS RECORD             */ 15529000
*   SCNPTR=RPARM;                   /* SET TEXT BEGINNING            */ 15530000
*                                                                  2321 15531000
NP5LDNX1 LR    SCNPTR,RPARM                                        2321 15532000
*   /*****************************************************************/ 15533000
*   /*                                                               */ 15534000
*   /* IF TEXT CHARACTER IS A BLANK, A BLANK RECORD WAS READ. RETURN */ 15535000
*   /* TO CALLER.                                                    */ 15536000
*   /*                                                               */ 15537000
*   /*****************************************************************/ 15538000
*                                                                  2322 15539000
*   IF SCAN=' '                     /* BLANK RECORD READ?            */ 15540000
*     THEN                          /* IF SO -                       */ 15541000
         CLI   SCAN(SCNPTR),C' '                                   2322 15542000
         BE    @RT02322                                            2322 15543000
*     RETURN;                       /* RETURN TO CALLER              */ 15544000
*NP5LDNX2:                          /* FIND NEXT NAME                */ 15545000
*   MODULE='';                      /* BLANK MODULE NAME             */ 15546000
*                                                                  2324 15547000
NP5LDNX2 MVI   MODULE,C' '                                         2324 15548000
         MVC   MODULE+1(7),MODULE                                  2324 15549000
*   /*****************************************************************/ 15550000
*   /*                                                               */ 15551000
*   /* SCAN THRU CURRENT RECORD FOR A DELIMITER, MOVING THE MODULE   */ 15552000
*   /* NAME A CHARACTER AT A TIME.                                   */ 15553000
*   /*                                                               */ 15554000
*   /*****************************************************************/ 15555000
*                                                                  2325 15556000
*   DO INDEX=1 BY 1 WHILE(SCAN¬=','&SCAN¬=' ');                    2325 15557000
         LA    @14,1                                               2325 15558000
         ST    @14,INDEX                                           2325 15559000
         B     @DE02325                                            2325 15560000
@DL02325 DS    0H                                                  2326 15561000
*     IF INDEX<=8 THEN                                             2326 15562000
         L     @14,INDEX                                           2326 15563000
         CH    @14,@CH00050                                        2326 15564000
         BH    @RF02326                                            2326 15565000
*       DO;                         /* CNTINUE UNTIL ERR (INDEX=9)   */ 15566000
*         MODULE(INDEX)=SCAN;       /* MOVE A CHARACTER              */ 15567000
         LA    @06,MODULE-1(@14)                                   2328 15568000
         MVC   0(1,@06),SCAN(SCNPTR)                               2328 15569000
*         SCNPTR=SCNPTR+1;          /* CONTINUE SCAN                 */ 15570000
         LA    SCNPTR,1(,SCNPTR)                                   2329 15571000
*       END;                        /* END OF SCAN LOOP              */ 15572000
*                                                                  2330 15573000
*     /***************************************************************/ 15574000
*     /*                                                             */ 15575000
*     /* IF MORE THAN 8 CHARACTERS WERE SCANNED BEFORE ENCOUNTERING A*/ 15576000
*     /* DELIMITER, NAME IS INVLID.                                  */ 15577000
*     /*                                                             */ 15578000
*     /***************************************************************/ 15579000
*                                                                  2331 15580000
*     ELSE                                                         2331 15581000
*       GOTO NP5LDER2;              /* WRITE ERROR MSG               */ 15582000
*   END;                            /* END OF SCAN DO LOOP           */ 15583000
         AL    @14,@CF00264                                        2332 15584000
         ST    @14,INDEX                                           2332 15585000
@DE02325 CLI   SCAN(SCNPTR),C','                                   2332 15586000
         BE    @DC02325                                            2332 15587000
         CLI   SCAN(SCNPTR),C' '                                   2332 15588000
         BNE   @DL02325                                            2332 15589000
@DC02325 DS    0H                                                  2333 15590000
*   LASTMODN=MODULE;                /* SAVE AS LAST VALID MODULE NAME*/ 15591000
*                                                                  2333 15592000
         MVC   LASTMODN(8),MODULE                                  2333 15593000
*   /*****************************************************************/ 15594000
*   /*                                                               */ 15595000
*   /* IF NO MODULES ON ACTIVE QUEUE, SEARCH LPA DIRECTORY FOR THE   */ 15596000
*   /* MODULE.                                                       */ 15597000
*   /*                                                               */ 15598000
*   /*****************************************************************/ 15599000
*                                                                  2334 15600000
*   IF IEAQLPA=0                    /* ACTIVE QUEUE EMPTY?           */ 15601000
*     THEN                          /* IF SO -                       */ 15602000
         L     @14,CVTQLPAQ(,RCVT)                                 2334 15603000
         L     @14,IEAQLPA(,@14)                                   2334 15604000
         LTR   @14,@14                                             2334 15605000
         BZ    @RT02334                                            2334 15606000
*     GO TO NP5LDDSR;               /* SEARCH DIRECTORY              */ 15607000
*   CDENTPTR=IEAQLPA;               /* QUEUE NOT EMPTY - BEGIN     2336 15608000
*                                      SEARCHING QUEUE               */ 15609000
         LR    CDENTPTR,@14                                        2336 15610000
*NP5LDLPQ:                          /* QUEUE SEARCH LOOP             */ 15611000
*                                                                  2337 15612000
*   /*****************************************************************/ 15613000
*   /*                                                               */ 15614000
*   /* LOOP THRU ACTIVE LPA QUEUE COMPARING CDE NAMES WITH THE NAME  */ 15615000
*   /* OF THE MODULE TO BE LOADED.                                   */ 15616000
*   /*                                                               */ 15617000
*   /*****************************************************************/ 15618000
*                                                                  2337 15619000
*   IF CDNAME¬=LASTMODN             /* MODULE ON QUEUE ?             */ 15620000
*     THEN                          /* IF NOT -                      */ 15621000
NP5LDLPQ CLC   CDNAME(8,CDENTPTR),LASTMODN                         2337 15622000
         BE    @RF02337                                            2337 15623000
*     DO;                           /* CONTINUE DOWN Q               */ 15624000
*       CDENTPTR=CDCHAIN;           /* LOAD NEXT CDE ADDR            */ 15625000
*                                                                  2339 15626000
         L     CDENTPTR,CDCHAIN(,CDENTPTR)                         2339 15627000
*       /*************************************************************/ 15628000
*       /*                                                           */ 15629000
*       /* AT END OF LPA ACTIVE QUEUE ?                              */ 15630000
*       /*                                                           */ 15631000
*       /*************************************************************/ 15632000
*                                                                  2340 15633000
*       IF CDENTPTR¬=0              /* END OF QUEUE ?                */ 15634000
*         THEN                      /* IF NOT -                      */ 15635000
         LTR   CDENTPTR,CDENTPTR                                   2340 15636000
         BNZ   @RT02340                                            2340 15637000
*         GO TO NP5LDLPQ;           /* CONTINUE LOOP                 */ 15638000
*       ELSE                        /* IF SO -                       */ 15639000
*         GO TO NP5LDDSR;           /* SEARCH DIRECTORY              */ 15640000
         B     NP5LDDSR                                            2342 15641000
*     END;                                                         2343 15642000
*   ELSE                            /* MODULE FOUND ON LPA ACTIVE  2344 15643000
*                                      QUEUE                         */ 15644000
*     GO TO NP5LDNXT;               /* DONT LOAD MODULE - CONTINUE 2344 15645000
*                                      WITH LIST                     */ 15646000
*NP5LDDSR:                          /* SEARCH DIRECTORY              */ 15647000
*   RDSR0=LASTMODN(1:4);            /* LOAD MODULE NAME              */ 15648000
NP5LDDSR L     RDSR0,LASTMODN                                      2345 15649000
*   RDSR1=LASTMODN(5:8);            /* LOAD MODULE NAME              */ 15650000
         L     RDSR1,LASTMODN+4                                    2346 15651000
*   RENTRY=CVTLPDSR;                /* LOAD ADDRESS OF DIRECTORY   2347 15652000
*                                      SEARCH ROUTINE                */ 15653000
         L     RENTRY,CVTLPDSR(,RCVT)                              2347 15654000
*   GENERATE;                                                      2348 15655000
*                                       /* GENERATE LINKAGE          */ 15656000
            BALR  REXIT,RENTRY             CALL IEAVVMSR       YM4125   15657000
            B     NP5LDFND                 FOUND - CONTINUE    YM4125   15658000
            B     NP5LDER3                 NOT FOUND - ERROR   YM4125   15659000
*NP5LDFND:                          /* FOUND IN LPA                  */ 15660000
*   GEN(LOAD EPLOC=LASTMODN) ;      /* ISSUE MODULE LOAD             */ 15661000
NP5LDFND LOAD EPLOC=LASTMODN                                            15662000
*   LLEPTR=TCBLLS;                  /* LOAD LLE QUEUE ADDR           */ 15663000
         L     LLEPTR,TCBLLS(,TCBPTR)                              2350 15664000
*   TCBLLS=LLECHN;                  /* RESET QUEUE HEAD              */ 15665000
*                                                                  2351 15666000
         MVC   TCBLLS(4,TCBPTR),LLECHN(LLEPTR)                     2351 15667000
*   /*****************************************************************/ 15668000
*   /*                                                               */ 15669000
*   /* FREEMAIN SPACE OCCUPIED BY LLE                                */ 15670000
*   /*                                                               */ 15671000
*   /*****************************************************************/ 15672000
*                                                                  2352 15673000
*   GEN(FREEMAIN R,LV=LLESIZE,A=(LLEPTR),SP=SP255);/*                */ 15674000
         FREEMAIN R,LV=LLESIZE,A=(LLEPTR),SP=SP255                      15675000
*NP5LDNXT:                          /* FIND NEXT NAME                */ 15676000
*                                                                  2353 15677000
*   /*****************************************************************/ 15678000
*   /*                                                               */ 15679000
*   /* TEST CURRENT DELIMITER. IF COMMA, CONTINUE. IF BLANK, RETURN  */ 15680000
*   /* TO CALLER.                                                    */ 15681000
*   /*                                                               */ 15682000
*   /*****************************************************************/ 15683000
*                                                                  2353 15684000
*   IF SCAN=','                     /* DELIMITER COMMA ?             */ 15685000
*     THEN                          /* IF SO -                       */ 15686000
NP5LDNXT CLI   SCAN(SCNPTR),C','                                   2353 15687000
         BNE   @RF02353                                            2353 15688000
*     DO;                           /* CONTINUE SCAN                 */ 15689000
*       SCNPTR=SCNPTR+1;            /* INCREMENT POINTER             */ 15690000
         LA    SCNPTR,1(,SCNPTR)                                   2355 15691000
*       IF SCAN=' ' THEN            /* READ NXT TXT RECORD           */ 15692000
         CLI   SCAN(SCNPTR),C' '                                   2356 15693000
         BE    @RT02356                                            2356 15694000
*         GOTO NP5LDTXT;                                           2357 15695000
*       ELSE                                                       2358 15696000
*         ;                                                        2358 15697000
*       GOTO NP5LDNX2;              /* PROCESS NEXT MODULE NAME      */ 15698000
         B     NP5LDNX2                                            2359 15699000
*     END;                                                         2360 15700000
*   ELSE                            /* NOT A COMMA                   */ 15701000
*NP5LDRTN:                          /* RETURN TO CALLER              */ 15702000
*     RETURN;                       /* RETURN TO CALLER              */ 15703000
*NP5LDER1:                          /* WRITE I/O ERROR MSG           */ 15704000
*   IOERMDN=LASTMODN;               /* SET MODULE NAME               */ 15705000
NP5LDER1 MVC   IOERMDN(8),LASTMODN                                 2362 15706000
*   M357FI1=CSEIOERR;               /* SET ERROR CAUSE               */ 15707000
         MVI   M357FI1+28,C' '                                     2363 15708000
         MVC   M357FI1+29(7),M357FI1+28                            2363 15709000
         MVC   M357FI1(28),CSEIOERR                                2363 15710000
*   M357FI2=LISTTERM;               /* SET SYSTEM ACTION             */ 15711000
         MVI   M357FI2+15,C' '                                     2364 15712000
         MVC   M357FI2+16(6),M357FI2+15                            2364 15713000
         MVC   M357FI2(15),LISTTERM                                2364 15714000
*   SCNPTR=ADDR(' ');               /* FORCE TERMINATION             */ 15715000
         LA    SCNPTR,@CC03588                                     2365 15716000
*   GO TO NP5LDERR;                 /* WRITE MESSAGE                 */ 15717000
         B     NP5LDERR                                            2366 15718000
*NP5LDER2:                          /* WRITE BAD NAME MSG            */ 15719000
*   NMMODNM=LASTMODN;               /* SET MODULE NAME               */ 15720000
NP5LDER2 MVC   NMMODNM(8),LASTMODN                                 2367 15721000
*   M357FI1=CSENAMNG;               /* SET ERROR CAUSE               */ 15722000
         MVI   M357FI1+32,C' '                                     2368 15723000
         MVC   M357FI1+33(3),M357FI1+32                            2368 15724000
         MVC   M357FI1(32),CSENAMNG                                2368 15725000
*   M357FI2=LISTTERM;               /* SET SYSTEM ACTION             */ 15726000
         MVI   M357FI2+15,C' '                                     2369 15727000
         MVC   M357FI2+16(6),M357FI2+15                            2369 15728000
         MVC   M357FI2(15),LISTTERM                                2369 15729000
*   SCNPTR=ADDR(' ');               /* FORCE TERMINATION             */ 15730000
         LA    SCNPTR,@CC03588                                     2370 15731000
*   GO TO NP5LDERR;                 /* WRITE ERROR MESSAGE           */ 15732000
         B     NP5LDERR                                            2371 15733000
*NP5LDER3:                          /* MODULE NOT FOUND              */ 15734000
*   NFMODNM=LASTMODN;               /* SET MODULE NAME               */ 15735000
NP5LDER3 MVC   NFMODNM(8),LASTMODN                                 2372 15736000
*   M357FI1=LDNFLPA;                /* SET ERROR CAUSE               */ 15737000
         MVI   M357FI1+25,C' '                                     2373 15738000
         MVC   M357FI1+26(10),M357FI1+25                           2373 15739000
         MVC   M357FI1(25),LDNFLPA                                 2373 15740000
*   M357FI2=MODIGND;                /* SET SYSTEM ACTION             */ 15741000
         MVI   M357FI2+14,C' '                                     2374 15742000
         MVC   M357FI2+15(7),M357FI2+14                            2374 15743000
         MVC   M357FI2(14),MODIGND                                 2374 15744000
*NP5LDERR:                          /* WRITE ERROR MSG               */ 15745000
*                                                                  2375 15746000
*   /*****************************************************************/ 15747000
*   /*                                                               */ 15748000
*   /* HAS ERROR MESSAGE HEADER BEEN PUT OUT YET ?                   */ 15749000
*   /*                                                               */ 15750000
*   /*****************************************************************/ 15751000
*                                                                  2375 15752000
*   IF LDERIND='0'B                 /* HEADER OUT YET                */ 15753000
*     THEN                          /* IF NOT -                      */ 15754000
NP5LDERR TM    LDERIND,B'00000010'                                 2375 15755000
         BNZ   @RF02375                                            2375 15756000
*     DO;                           /* WRITE HEADER                  */ 15757000
*       M357FI0=LODLSTNM;           /* SET LIST NAME                 */ 15758000
         MVC   M357FI0(8),@CC03458                                 2377 15759000
*       LDERIND='1'B;               /* SET HEADER FLAG               */ 15760000
         OI    LDERIND,B'00000010'                                 2378 15761000
*/*               WRITE ERROR MESSAGE HEADER                         */ 15762000
*                                                                  2379 15763000
*       GEN(IEAPMNIP TYPE=WTO,PARAM=MSG357I1) ;/*                    */ 15764000
         IEAPMNIP TYPE=WTO,PARAM=MSG357I1                               15765000
*     END;                                                         2380 15766000
*                                                                  2380 15767000
*/*         WRITE ERROR MESSAGE                                      */ 15768000
*                                                                  2381 15769000
*   GEN(IEAPMNIP TYPE=WTO,PARAM=MSG357I2) ;/*                        */ 15770000
@RF02375 DS    0H                                                  2381 15771000
         IEAPMNIP TYPE=WTO,PARAM=MSG357I2                               15772000
*   GO TO NP5LDNXT;                 /* PROCEED WITH SCAN             */ 15773000
         B     NP5LDNXT                                            2382 15774000
*   RESPECIFY                                                      2383 15775000
*    (RDSR0,                        /* VVMSR REGISTER 0              */ 15776000
*     RDSR1,                        /* VVMSR REGISTER 1              */ 15777000
*     TCBPTR,                       /* TCB BASE REGISTER             */ 15778000
*     CDENTPTR,                     /* CDE BASE REGISTER             */ 15779000
*     LLEPTR,                                                      2383 15780000
*     SCNPTR,                       /* LLE BASE, TEXT PTR            */ 15781000
*     RENTRY) UNRESTRICTED;         /* BALR ENTRY REG                */ 15782000
*   END NP5LPLOD;                   /* END OF LOAD ROUTINE           */ 15783000
@EL00033 DS    0H                                                  2384 15784000
@EF00033 DS    0H                                                  2384 15785000
@ER00033 LM    @14,@12,12(@13)                                     2384 15786000
         BR    @14                                                 2384 15787000
@PB00033 DS    0H                                                  2385 15788000
*   GENERATE NOREFS NOSETS(EJECT);                                 2385 15789000
*                                                                  2385 15790000
         EJECT                                                          15791000
*/********************************************************************/ 15792000
*/*                                                                  */ 15793000
*/*         SUBROUTINE NP5BRENT                                      */ 15794000
*/*                                                                  */ 15795000
*/*         FUNCTION - INITIALIZES SYSTEM BRANCH ENTRY POINTS FOR    */ 15796000
*/*                    FETCH AND SPIE IN THE CVT.                    */ 15797000
*/*                                                                  */ 15798000
*/*         INPUT - (1) IEAQLPA - PTR TO ACTIVE LPA.                 */ 15799000
*/*                 (2) CVTLPDSR - BRANCH ENTRY TO LPDE SEARCH RTN.  */ 15800000
*/*                 (3) INITCVT - TABLE OF BRANCH ENTRY NAMES AND    */ 15801000
*/*                               CORRESPONDING OFFSET IN CVT TO     */ 15802000
*/*                               INSERT ENTRY ADDRESS.              */ 15803000
*/*         OUTPUT - BRANCH ENTRY POINTS DEFINED IN INITCVT INSERTED */ 15804000
*/*                  IN CORRECT CVT FIELDS.                          */ 15805000
*/*                                                                  */ 15806000
*/********************************************************************/ 15807000
*                                                                  2386 15808000
*NP5BRENT:                                                         2386 15809000
*   PROC OPTIONS(NOSAVEAREA);                                      2386 15810000
         B     @PB00034                                            2386 15811000
NP5BRENT STM   @14,@12,12(@13)                                     2386 15812000
*   RESPECIFY                                                      2387 15813000
*    (RI) RESTRICTED;                                              2387 15814000
*   DO RI=DIM(INITCVT) TO 1 BY-1;   /* LOOP THRU INITCVT TAB         */ 15815000
         LA    RI,5                                                2388 15816000
@DL02388 DS    0H                                                  2389 15817000
*     NP5ENTFD='0'B;                /* SET MODULE NOT FOUND    SWITCH*/ 15818000
         NI    NP5ENTFD,B'11111011'                                2389 15819000
*     MODULE=EPNAME(RI);            /* GET BRANCH ENT NAME FRM TAB   */ 15820000
*                                                                  2390 15821000
         LR    @14,RI                                              2390 15822000
         MH    @14,@CH00075                                        2390 15823000
         LA    @08,EPNAME-12(@14)                                  2390 15824000
         MVC   MODULE(8),0(@08)                                    2390 15825000
*     /***************************************************************/ 15826000
*     /*                                                             */ 15827000
*     /* SEARCH THE ACTIVE LPA FOR THE BRANCH ENTRY NAME.            */ 15828000
*     /*                                                             */ 15829000
*     /***************************************************************/ 15830000
*                                                                  2391 15831000
*     RESPECIFY                                                    2391 15832000
*      (CDENTPTR,                                                  2391 15833000
*       PTRCVTEN) RESTRICTED;                                      2391 15834000
*     CDENTPTR=IEAQLPA;             /* SET PTR TO ACTIVE QUEUE       */ 15835000
         L     @14,CVTQLPAQ(,RCVT)                                 2392 15836000
         L     CDENTPTR,IEAQLPA(,@14)                              2392 15837000
*     DO WHILE(CDENTPTR¬=0&NP5ENTFD='0'B);                         2393 15838000
         B     @DE02393                                            2393 15839000
@DL02393 DS    0H                                                  2394 15840000
*       IF CDNAME=MODULE THEN       /* IS THIS CORRECT CDE ?         */ 15841000
         CLC   CDNAME(8,CDENTPTR),MODULE                           2394 15842000
         BNE   @RF02394                                            2394 15843000
*         DO;                       /* YES - GET ENTRY POINT.        */ 15844000
*           PTRCVTEN=OFSETCVT(RI)+RCVT;/* COMPUTE OFFST IN CVT TO  2396 15845000
*                                      PLACE E.P. ADDR               */ 15846000
         LR    @14,RI                                              2396 15847000
         MH    @14,@CH00075                                        2396 15848000
         LR    PTRCVTEN,RCVT                                       2396 15849000
         AL    PTRCVTEN,OFSETCVT-12(@14)                           2396 15850000
*           PTRCVTEN->BRENTCVT=CDENTPT;/* INIT CVT FIELD.            */ 15851000
         MVC   BRENTCVT(4,PTRCVTEN),CDENTPT(CDENTPTR)              2397 15852000
*           NP5ENTFD='1'B;          /* INDICATE MODULE FOUND         */ 15853000
         OI    NP5ENTFD,B'00000100'                                2398 15854000
*         END;                                                     2399 15855000
*       ELSE                                                       2400 15856000
*         CDENTPTR=CDCHAIN;         /* GET NEXT CDE.                 */ 15857000
         B     @RC02394                                            2400 15858000
@RF02394 L     CDENTPTR,CDCHAIN(,CDENTPTR)                         2400 15859000
*     END;                          /* END OF CDE SEARCH LOOP        */ 15860000
@RC02394 DS    0H                                                  2401 15861000
@DE02393 LTR   CDENTPTR,CDENTPTR                                   2401 15862000
         BZ    @DC02393                                            2401 15863000
         TM    NP5ENTFD,B'00000100'                                2401 15864000
         BZ    @DL02393                                            2401 15865000
@DC02393 DS    0H                                                  2402 15866000
*     RESPECIFY                                                    2402 15867000
*      (CDENTPTR) UNRESTRICTED;                                    2402 15868000
*     RESPECIFY                                                    2403 15869000
*      (RPARM0,                                                    2403 15870000
*       RPARM) RESTRICTED;                                         2403 15871000
*                                                                  2403 15872000
*     /***************************************************************/ 15873000
*     /*                                                             */ 15874000
*     /* SEARCH THE LPA DIRECTORY VIA IEAVVMSR FOR MODNAME           */ 15875000
*     /*                                                             */ 15876000
*     /***************************************************************/ 15877000
*                                                                  2404 15878000
*     DO WHILE NP5ENTFD='0'B;       /* IF NOT FOUND IN ACTIVE LPA  2404 15879000
*                                      SEARCH LPDE'S                 */ 15880000
         B     @DE02404                                            2404 15881000
@DL02404 DS    0H                                                  2405 15882000
*       RPARM0=MOD1;                /* SET LEFT HALF OF NAME IN R0   */ 15883000
         L     RPARM0,MOD1                                         2405 15884000
*       RPARM=MOD2;                 /* SET RIGHT HALF OF NME IN R1   */ 15885000
         L     RPARM,MOD2                                          2406 15886000
*       RESPECIFY                                                  2407 15887000
*        (REXIT,                                                   2407 15888000
*         RENTRY) RESTRICTED;                                      2407 15889000
*       RENTRY=CVTLPDSR;            /* GET IEAVVMSR ENTRY ADDRESS    */ 15890000
         L     RENTRY,CVTLPDSR(,RCVT)                              2408 15891000
*       GENERATE REFS(RPARM0,RPARM,RCVT,RENTRY) SETS(RPARM0,NP5R7,NP5R8 15892000
*           ,RBASE1,REXIT) FLOWS(NP5SVCFD,NP5NOTFD);               2409 15893000
          BALR  REXIT,RENTRY                                            15894000
          B     NP5SVCFD                                                15895000
          B     NP5NOTFD                                                15896000
*NP5SVCFD:                                                         2410 15897000
*       RESPECIFY                                                  2410 15898000
*        (REXIT,                                                   2410 15899000
*         RENTRY) UNRESTRICTED;                                    2410 15900000
NP5SVCFD DS    0H                                                  2411 15901000
*       RESPECIFY                                                  2411 15902000
*        (LPDEPTR) RESTRICTED;                                     2411 15903000
*       LPDEPTR=RPARM0;             /* LPDE ADDRESS                  */ 15904000
         LR    LPDEPTR,RPARM0                                      2412 15905000
*       RESPECIFY                                                  2413 15906000
*        (RPARM0) UNRESTRICTED;                                    2413 15907000
*       PTRCVTEN=OFSETCVT(RI)+RCVT; /* COMPUTE OFFSET IN CVT TO PLACE   15908000
*                                      E.P. ADDRESS                  */ 15909000
         LR    @14,RI                                              2414 15910000
         MH    @14,@CH00075                                        2414 15911000
         LR    PTRCVTEN,RCVT                                       2414 15912000
         AL    PTRCVTEN,OFSETCVT-12(@14)                           2414 15913000
*       PTRCVTEN->BRENTCVT=LPDENTP; /* MOVE EP ADDR TO CVT           */ 15914000
         MVC   BRENTCVT(4,PTRCVTEN),LPDENTP(LPDEPTR)               2415 15915000
*       NP5ENTFD='1'B;              /* INDICATE FOUND CONDITION      */ 15916000
         OI    NP5ENTFD,B'00000100'                                2416 15917000
*     END;                          /* END OF LPDE SEARCH            */ 15918000
@DE02404 TM    NP5ENTFD,B'00000100'                                2417 15919000
         BZ    @DL02404                                            2417 15920000
*   END;                            /* END OF INITCVT LOOP           */ 15921000
         BCTR  RI,0                                                2418 15922000
         LTR   RI,RI                                               2418 15923000
         BP    @DL02388                                            2418 15924000
*   RESPECIFY                                                      2419 15925000
*    (RI,                                                          2419 15926000
*     LPDEPTR,                                                     2419 15927000
*     PTRCVTEN) UNRESTRICTED;                                      2419 15928000
*   RETURN;                         /* PROCESSING COMPLETE-RETURN    */ 15929000
@EL00034 DS    0H                                                  2420 15930000
@EF00034 DS    0H                                                  2420 15931000
@ER00034 LM    @14,@12,12(@13)                                     2420 15932000
         BR    @14                                                 2420 15933000
*NP5NOTFD:                                                         2421 15934000
*   MSGFI1=MODULE;                  /* MOVE MODULE NAME TO ERR MSG   */ 15935000
*                                                                  2421 15936000
NP5NOTFD MVI   MSGFI1+8,C' '                                       2421 15937000
         MVC   MSGFI1(8),MODULE                                    2421 15938000
*   /*****************************************************************/ 15939000
*   /*                                                               */ 15940000
*   /* ISSUE MSG IEA363I MOD NOT FOUND IN LPA.                       */ 15941000
*   /*                                                               */ 15942000
*   /*****************************************************************/ 15943000
*                                                                  2422 15944000
*   GENERATE REFS(RNVT,NVTWTO,MSGFS,MSGFI1) SETS(RPARM,REXIT,RENTRY)    15945000
*       (IEAPMNIP TYPE=WTO,PARAM=MSGFS);/* MSG IEA363I               */ 15946000
         IEAPMNIP TYPE=WTO,PARAM=MSGFS                                  15947000
*   NVTFLWSC='3B'X;                 /* SET WAIT STATE CODE IN NVT    */ 15948000
         MVI   NVTFLWSC(RNVT),X'3B'                                2423 15949000
*   GENERATE REFS(RNVT,NVTSWAIT,NVTFLWSC) SETS(REXIT,RENTRY)       2424 15950000
*       (IEAPMNIP TYPE=SWAIT);      /* SYSTEM WAIT CODE- 3B          */ 15951000
         IEAPMNIP TYPE=SWAIT                                            15952000
*   END NP5BRENT;                   /* END OF SUBROUTINE             */ 15953000
         B     @EL00034                                            2425 15954000
@PB00034 DS    0H                                                  2426 15955000
*   GENERATE NOREFS NOSETS(EJECT);                                 2426 15956000
         EJECT                                                          15957000
*NP5PSPIO:                                                         2427 15958000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/* DUMMY PROCEDURE               */ 15959000
         B     @PB00035                                            2427 15960000
NP5PSPIO DS    0H                                                  2428 15961000
*   RESPECIFY                                                      2428 15962000
*    (RNVT,                                                        2428 15963000
*     RCVT) RESTRICTED;                                            2428 15964000
*   RESPECIFY                                                      2429 15965000
*    (NIPPMR00,                                                    2429 15966000
*     NIPPMR14,                                                    2429 15967000
*     NIPPMR15) RESTRICTED;                                        2429 15968000
*                                                                  2429 15969000
*/********************************************************************/ 15970000
*/*                                                                  */ 15971000
*/* MACRO-      IEAPSPIO                                             */ 15972000
*/*                                                                  */ 15973000
*/* STATUS-     VERSION DATE=10/24/73, VS/2 RELEASE 2                */ 15974000
*/*                                                                  */ 15975000
*/* FUNCTION-   IEAPSPIO IS PART OF THE  SUPERVISOR                  */ 15976000
*/*             INITIALIZATION PROCESS FOR VS2.                      */ 15977000
*/*                                                                  */ 15978000
*/*             THIS MACRO GENERATES INLINE PL/S STATEMENTS          */ 15979000
*/*             WHICH FORM A SUBROUTINE TO FIND AND READ TEXT        */ 15980000
*/*             RECORDS FROM SYS1.PARMLIB.                           */ 15981000
*/*                                                                  */ 15982000
*/*  REGISTER DEPENDENCIES-                                          */ 15983000
*/*                                                                  */ 15984000
*/*                 1. IEAPSPIO DEPENDS ON THE INCLUDING ROUTINES    */ 15985000
*/*                    BASE REGISTERS FOR ADDRESSABILITY             */ 15986000
*/*                                                                  */ 15987000
*/*                 2. REGISTER 3 MUST CONTAIN THE ADDRESS OF        */ 15988000
*/*                    THE CVT ON ENTRY                              */ 15989000
*/*                                                                  */ 15990000
*/*                 3. REGISTER 2 MUST CONTAIN THE ADDRESS OF        */ 15991000
*/*                    THE NVT ON ENTRY                              */ 15992000
*/*                                                                  */ 15993000
*/*                 4. REGISTER 14 MUST CONTAIN THE ADDRESS OF       */ 15994000
*/*                    THE CALLERS RETURN POINT ON ENTRY             */ 15995000
*/*                                                                  */ 15996000
*/* ENTRY POINTS-                                                    */ 15997000
*/*                                                                  */ 15998000
*/*    TWO CALLING SEQUENCRS ARE AVAILABLE.  ONE PROVIDES            */ 15999000
*/*    COMPATIBILITY WITH THE VS2-1 VERSION OF THIS MACRO,           */ 16000000
*/*    THE OTHER CALLING SEQUENCE WAS DEVELOPED EXPRESSLY            */ 16001000
*/*    FOR VS2-2.                                                    */ 16002000
*/*                                                                  */ 16003000
*/*        VS2-1 COMPATIBLE VERSION-                                 */ 16004000
*/*                                                                  */ 16005000
*/*            1. CALL NIPPMPDS TO LOCATE (VIA BLDL) THE MEMBER      */ 16006000
*/*               OF SYS1.PARMLIB                                    */ 16007000
*/*                                                                  */ 16008000
*/*            2. CALL NIPPMTXT TO READ A TEXT RECORD FROM           */ 16009000
*/*               SYS1.PARMLIB                                       */ 16010000
*/*                                                                  */ 16011000
*/*        VS2-2 VERSION-                                            */ 16012000
*/*                                                                  */ 16013000
*/*            1. CALL NIPPMMEM TO LOCATE THE MEMBER AND RETURN      */ 16014000
*/*               A TEXT RECORD                                      */ 16015000
*/*                                                                  */ 16016000
*/*            2. REPEAT CALL TO NIPPMMEM TO READ ADDITIONAL         */ 16017000
*/*               TEXT RECORDS                                       */ 16018000
*/*                                                                  */ 16019000
*/* OUTPUT (NORMAL) -                                                */ 16020000
*/*                                                                  */ 16021000
*/*     THE ROUTINE WILL SAVE AND RESTORE ALL GENERAL REGISTERS      */ 16022000
*/*     WITH THE EXCEPTION OF RPARM.  ON A SUCCESSFUL READ,          */ 16023000
*/*     RPARM (REGISTER 1) WILL BE SET TO POINT TO THE FIRST NON-    */ 16024000
*/*     BLANK CHARACTER IN THE TEXT RECORD.  IF THE RECORD           */ 16025000
*/*     COLUMNS 1 THRU 72 ALL CONTAIN BLANKS, RPARM WILL             */ 16026000
*/*     POINT TO A BLANK IN COLUMN 72.  IF COLUMNS 1 THRU 71         */ 16027000
*/*     ARE BLANK BUT COLUMN 72 IS NON-BLANK, THE ROUTINE            */ 16028000
*/*     WILL AUTOMATICALLY ATTEMPT TO READ THE NEXT RECORD.  IN      */ 16029000
*/*     ALL CASES, COLUMN 72 WILL BE SET TO BLANK AND COLUMN 73 WILL */ 16030000
*/*     BE SET TO X'FF'.                                             */ 16031000
*/*                                                                  */ 16032000
*/* EXIT (NORMAL)-                                                   */ 16033000
*/*                                                                  */ 16034000
*/*     VS2-1 AND VS2-2 VERSIONS RETURN TO THE ADDRESS FOUND         */ 16035000
*/*     IN REGISTER 14 ON ENTRY.                                     */ 16036000
*/*                                                                  */ 16037000
*/* EXIT (ERROR)-                                                    */ 16038000
*/*                                                                  */ 16039000
*/*     VS2-1 COMPATIBLE VERSION-                                    */ 16040000
*/*                                                                  */ 16041000
*/*         RETURN TO THE ADDRESS IN REGISTER 14 +4                  */ 16042000
*/*                                                                  */ 16043000
*/*         NOTE- WHEN AN ERROR OCCURS ON AN ATTEMP TO READ A RECORD */ 16044000
*/*               THAT DOES NOT EXIST (E-O-F),                       */ 16045000
*/*               IT IS CONSIDERED A PERMANENT I/O ERROR             */ 16046000
*/*                                                                  */ 16047000
*/*     VS2-2 VERSION-                                               */ 16048000
*/*                                                                  */ 16049000
*/*        RETURN TO THE ADDRESS FOUND IN REGISTER 14 ON ENTRY       */ 16050000
*/*        WITH REGISTER 1 (RPARM) SET TO A NEGATIVE VALUE.  IN THE  */ 16051000
*/*        CASE WHERE RPARM IS NEGATIVE ON RETURN, THE NIPPARC FIELD */ 16052000
*/*        OF THE NIP PATAMETER AREA WILL INDICATE THE REASON FOR    */ 16053000
*/*        FAILURE AS FOLLOWS-                                       */ 16054000
*/*                            4 - MEMBER NOT FOUND                  */ 16055000
*/*                            8 - I/O ERROR DURING BLDL             */ 16056000
*/*                            12- I/O ERROR DURING READ             */ 16057000
*/*                            16- END-OF-FILE                       */ 16058000
*/*                                                                  */ 16059000
*/*     COMMON TO BOTH VERSIONS-                                     */ 16060000
*/*                                                                  */ 16061000
*/*        AN INTERPRETIVE MESSAGE WILL BE WRITTEN TO THE OPERATOR   */ 16062000
*/*        FOR EACH OF THE FIRST THREE ERROR CONDITIONS LISTED       */ 16063000
*/*        ABOVE.  THE CALLER MAY SUPPRESS THE 'MEMBER NOT FOUND'    */ 16064000
*/*        MESSAGE BY SETTING THE NIPPAFL1 FLAG FIELD TO BINARY      */ 16065000
*/*        ONE IN THE NIP PARAMETER AREA BEFORE CALLING THIS         */ 16066000
*/*        ROUTINE.  NO MESSAGE WILL BE WRITTEN FOR THE E-O-F        */ 16067000
*/*        CONDITION IF THE VS2-2 VERSION IS USED.                   */ 16068000
*/*                                                                  */ 16069000
*/* MACROS-                                                          */ 16070000
*/*     THE FOLLOWING MAPPING MACROS MUST BE                         */ 16071000
*/*     INCLUDED IN THE MODULE WHICH INCLUDES                        */ 16072000
*/*     IEAPSPIO-                                                    */ 16073000
*/*                                       IEZIOB                     */ 16074000
*/*                                       IHANVT                     */ 16075000
*/*                                       IHAECB                     */ 16076000
*/*                                       IEAPPNIP                   */ 16077000
*/*                                       IEFUCBOB                   */ 16078000
*/*                                       CVT                        */ 16079000
*/*                                                                  */ 16080000
*/* NOTES-                                                           */ 16081000
*/*        THE FIRST FOUR LETTERS OF ALL IEAPSPIO SYMBOLES ARE:      */ 16082000
*/*        NIPP OR IPPM.                                             */ 16083000
*/*                                                                  */ 16084000
*/*        REGISTERS 0, 1, 14, AND 15 WILL BE UNRESTRICTED AT THE    */ 16085000
*/*        END OF THE SEGMENT GENERATED BY IEAPSPIO.                 */ 16086000
*/*                                                                  */ 16087000
*/*        NIPPAREA WILL BE BASED ON NVTPAREA AND IOBSTDRD WILL BE   */ 16088000
*/*        BASED ON THE ADDR OF NIPPAIOB AT THE END OF THE SEGMENT   */ 16089000
*/*        GENERATED BY IEAPSPIO                                     */ 16090000
*/*                                                                  */ 16091000
*/*        IEAPSPIO MUST BE INCLUDED IN A CODE SEGMENT,              */ 16092000
*/*        NOT AT THE TOP OF THE PROCEDURE WITH THE                  */ 16093000
*/*        MAPPING MACROS LISTED ABOVE.                              */ 16094000
*/*                                                            Y02752*/ 16095000
*/********************************************************************/ 16096000
*                                                                  2430 16097000
*   /*****************************************************************/ 16098000
*   /*                                                               */ 16099000
*   /* REGISTERS                                                     */ 16100000
*   /*                                                               */ 16101000
*   /*****************************************************************/ 16102000
*                                                                  2430 16103000
*   DCL                                                            2430 16104000
*     NIPPMR00 REG(0) PTR(24);                                     2430 16105000
*   DCL                                                            2431 16106000
*     NIPPMR01 REG(1) PTR(24);                                     2431 16107000
*   DCL                                                            2432 16108000
*     NIPPMR02 REG(2) PTR(24);                                     2432 16109000
*   DCL                                                            2433 16110000
*     NIPPMR06 REG(6) PTR(24);                                     2433 16111000
*   DCL                                                            2434 16112000
*     NIPPMR09 REG(9) PTR(24);                                     2434 16113000
*   DCL                                                            2435 16114000
*     NIPPMR12 REG(12) PTR(24);                                    2435 16115000
*   DCL                                                            2436 16116000
*     NIPPMR13 REG(13) PTR(24);                                    2436 16117000
*   DCL                                                            2437 16118000
*     NIPPMR14 REG(14) PTR(24);                                    2437 16119000
*   DCL                                                            2438 16120000
*     NIPPMR15 REG(15) PTR(24);                                    2438 16121000
*                                                                  2438 16122000
*   /*****************************************************************/ 16123000
*   /*                                                               */ 16124000
*   /* SAVE AREA FOR CALLER'S REGISTERS                              */ 16125000
*   /*                                                               */ 16126000
*   /*****************************************************************/ 16127000
*                                                                  2439 16128000
*   DCL                                                            2439 16129000
*     NIPPMREG(16) FIXED(31);                                      2439 16130000
*                                                                  2439 16131000
*   /*****************************************************************/ 16132000
*   /*                                                               */ 16133000
*   /* SAVE AREA FOR CALLER'S RETURN ADDRESS                         */ 16134000
*   /*                                                               */ 16135000
*   /*****************************************************************/ 16136000
*                                                                  2440 16137000
*   DCL                                                            2440 16138000
*     NIPPMADR PTR(31);                                            2440 16139000
*                                                                  2440 16140000
*   /*****************************************************************/ 16141000
*   /*                                                               */ 16142000
*   /* POINTER TO DCB FOR BLDL                                       */ 16143000
*   /*                                                               */ 16144000
*   /*****************************************************************/ 16145000
*                                                                  2441 16146000
*   DCL                                                            2441 16147000
*     NIPPMDCB PTR(31);                                            2441 16148000
*                                                                  2441 16149000
*   /*****************************************************************/ 16150000
*   /*                                                               */ 16151000
*   /* POINTER TO BLDL HEADER FOR BLDL                               */ 16152000
*   /*                                                               */ 16153000
*   /*****************************************************************/ 16154000
*                                                                  2442 16155000
*   DCL                                                            2442 16156000
*     NIPPMBDL PTR(31);                                            2442 16157000
*                                                                  2442 16158000
*   /*****************************************************************/ 16159000
*   /*                                                               */ 16160000
*   /* NORMAL RETURN TO CALLER                                       */ 16161000
*   /*                                                               */ 16162000
*   /*****************************************************************/ 16163000
*                                                                  2443 16164000
*   DCL                                                            2443 16165000
*     NIPPMAD0 LABEL BASED(NIPPMADR);                              2443 16166000
*                                                                  2443 16167000
*   /*****************************************************************/ 16168000
*   /*                                                               */ 16169000
*   /* ERROR RETURN TO CALLER                                        */ 16170000
*   /*                                                               */ 16171000
*   /*****************************************************************/ 16172000
*                                                                  2444 16173000
*   DCL                                                            2444 16174000
*     NIPPMAD4 LABEL BASED(NIPPMADR+4);                            2444 16175000
*                                                                  2444 16176000
*   /*****************************************************************/ 16177000
*   /*                                                               */ 16178000
*   /* ESTABLISH BASE FOR NIP COMMUNICATION AREA               Y02752*/ 16179000
*   /*                                                               */ 16180000
*   /*****************************************************************/ 16181000
*                                                                  2445 16182000
*   RESPECIFY                                                      2445 16183000
*     NIPPAREA BASED(NVTPAREA);     /*                         Y02752*/ 16184000
*                                                                  2445 16185000
*   /*****************************************************************/ 16186000
*   /*                                                               */ 16187000
*   /* ONE BYTE SCANNING FIELD                                       */ 16188000
*   /*                                                               */ 16189000
*   /*****************************************************************/ 16190000
*                                                                  2446 16191000
*   DCL                                                            2446 16192000
*     NIPPMBYT CHAR(1) BASED;                                      2446 16193000
*                                                                  2446 16194000
*   /*****************************************************************/ 16195000
*   /*                                                               */ 16196000
*   /* TEMPORARY POINTER                                       Y02752*/ 16197000
*   /*                                                               */ 16198000
*   /*****************************************************************/ 16199000
*                                                                  2447 16200000
*   DCL                                                            2447 16201000
*     NIPPMKPR PTR(31);             /*                         Y02752*/ 16202000
*                                                                  2447 16203000
*   /*****************************************************************/ 16204000
*   /*                                                               */ 16205000
*   /* INPUT RECORD READ FROM PARMLIB                          Y02752*/ 16206000
*   /*                                                               */ 16207000
*   /*****************************************************************/ 16208000
*                                                                  2448 16209000
*   DCL                                                            2448 16210000
*     NIPPMBUF CHAR(80) BASED(NIPPMR01);/*                     Y02752*/ 16211000
*                                                                  2448 16212000
*   /*****************************************************************/ 16213000
*   /*                                                               */ 16214000
*   /* MBBCCHHR OF PARMLIB MEMBERS                                   */ 16215000
*   /*                                                               */ 16216000
*   /*****************************************************************/ 16217000
*                                                                  2449 16218000
*   DCL                                                            2449 16219000
*     1 NIPPMMBC CHAR(8),                                          2449 16220000
*      2 NIPPMMBB CHAR(3),                                         2449 16221000
*      2 NIPPMCCH CHAR(5);                                         2449 16222000
*                                                                  2449 16223000
*   /*****************************************************************/ 16224000
*   /*                                                               */ 16225000
*   /* CCHHR OF PARMLIB MEMBERS                              @ZA07472*/ 16226000
*   /*                                                               */ 16227000
*   /*****************************************************************/ 16228000
*                                                                  2450 16229000
*   DCL                                                            2450 16230000
*     1 NIPPMSID BDY(WORD) CHAR(5) BASED(ADDR(NIPPASID)),/*  @ZA07472*/ 16231000
*      2 NIPPMCC FIXED(15),         /* CYLINDER # OF SEARCH ID     2450 16232000
*                                                            @ZA07472*/ 16233000
*      2 NIPPMHH CHAR(2),           /* HEAD # OF SEARCH ID   @ZA07472*/ 16234000
*      2 NIPPMR CHAR(1);            /* RECORD # OF SEARCH ID @ZA07472*/ 16235000
*                                                                  2450 16236000
*   /*****************************************************************/ 16237000
*   /*                                                               */ 16238000
*   /* LOW ORDER 7 BYTES OF THE CSW STORED IN THE PARMLIB IOB BY EXCP*/ 16239000
*   /*                                                         Y02752*/ 16240000
*   /*                                                               */ 16241000
*   /*****************************************************************/ 16242000
*                                                                  2451 16243000
*   DCL                                                            2451 16244000
*     1 NIPPMCSW BASED(ADDR(IOBCSW)) BDY(BYTE),/*              Y02752*/ 16245000
*      2 * CHAR(3),                 /*                         Y02752*/ 16246000
*      2 NIPPMCS2 BIT(8),           /* I/O OPERATION STATUS FLAGS /*    16247000
*                                                              Y02752*/ 16248000
*      2 * CHAR(3);                 /*                         Y02752*/ 16249000
*                                                                  2451 16250000
*   /*****************************************************************/ 16251000
*   /*                                                               */ 16252000
*   /* MASKS TO TEST THE STATUS FLAGS OF THE PARMLIB CSW Y02752      */ 16253000
*   /*                                                               */ 16254000
*   /*****************************************************************/ 16255000
*                                                                  2452 16256000
*   DCL                                                            2452 16257000
*     NIPPMMK1 BIT(8) BDY(BYTE) INIT('11110010'B);/*           Y02752*/ 16258000
*   DCL                                                            2453 16259000
*     NIPPMMK2 BIT(8) BDY(BYTE) INIT('11110001'B);/*         @ZA07472*/ 16260000
*                                                                  2453 16261000
*   /*****************************************************************/ 16262000
*   /*                                                               */ 16263000
*   /* MASK TO TEST THE IOBSENSE FLAGS                       @ZA07472*/ 16264000
*   /*                                                               */ 16265000
*   /*****************************************************************/ 16266000
*                                                                  2454 16267000
*   DCL                                                            2454 16268000
*     NIPPMMK3 BIT(8) BDY(BYTE) INIT('00100000'B);/*         @ZA07472*/ 16269000
*                                                                  2454 16270000
*   /*****************************************************************/ 16271000
*   /*                                                               */ 16272000
*   /* INTERNALLY GENERATED LABELS                                   */ 16273000
*   /*                                                               */ 16274000
*   /*****************************************************************/ 16275000
*                                                                  2455 16276000
*   DCL                                                            2455 16277000
*     NIPPMMB1 LABEL GENERATED INTERNAL;                           2455 16278000
*   DCL                                                            2456 16279000
*     NIPPMMB2 LABEL GENERATED INTERNAL;                           2456 16280000
*   DCL                                                            2457 16281000
*     NIPPMTND LABEL GENERATED INTERNAL;                           2457 16282000
*                                                                  2457 16283000
*   /*****************************************************************/ 16284000
*   /*                                                               */ 16285000
*   /* MAPPING AREAS INTO ERROR MESSAGES                             */ 16286000
*   /*                                                               */ 16287000
*   /*****************************************************************/ 16288000
*                                                                  2458 16289000
*   DCL                                                            2458 16290000
*     NIPPMME1 CHAR(8) BASED(ADDR(NIPPMMB1));                      2458 16291000
*   DCL                                                            2459 16292000
*     NIPPMME2 CHAR(8) BASED(ADDR(NIPPMMB2));                      2459 16293000
*   DCL                                                            2460 16294000
*     NIPPMNAM CHAR(8) INIT(' ');   /* MEMBER NAME SAVE AREA   Y02752*/ 16295000
*   DCL                                                            2461 16296000
*     NIPPMNEG FIXED(31) INIT('FFFFFFFF'X);/* NEGATIVE VALUE   Y02752*/ 16297000
*   RESPECIFY                                                      2462 16298000
*     IOBSTDRD BASED(ADDR(NIPPAIOB));/* IOB BASE               Y02752*/ 16299000
*   RESPECIFY                                                      2463 16300000
*    (NIPPMR14,                                                    2463 16301000
*     NIPPMR15,                                                    2463 16302000
*     NIPPMR00,                                                    2463 16303000
*     NIPPMR01) RESTRICTED;         /*                         Y02752*/ 16304000
*NIPPMMEM:                                                         2464 16305000
*   NIPPMADR=NIPPMR14;              /* SAVE CALLER'S RETURN REGISTER    16306000
*                                                              Y02752*/ 16307000
NIPPMMEM ST    NIPPMR14,NIPPMADR                                   2464 16308000
*   GENERATE REFS(NIPPMR01,NIPPMR02) SETS(NIPPMREG);               2465 16309000
          STM   NIPPMR02,NIPPMR01,NIPPMREG   SAVE REGISTERS     Y02752  16310000
*   NIPPARC=NIPPARC&&NIPPARC;       /* SET RETURN CODE TO ZERO Y02752*/ 16311000
         L     @08,NVTPAREA(,RNVT)                                 2466 16312000
         L     @06,NIPPARC(,@08)                                   2466 16313000
         LR    @05,@06                                             2466 16314000
         XR    @05,@06                                             2466 16315000
         ST    @05,NIPPARC(,@08)                                   2466 16316000
*   IF NIPPMNAM=NIPPANAM            /* IS THIS NEW MEMBER NAME Y02752*/ 16317000
*     THEN                                                         2467 16318000
         CLC   NIPPMNAM(8),NIPPANAM(@08)                           2467 16319000
         BE    @RT02467                                            2467 16320000
*     GO TO NIPPMPRD;               /* NO- GO READ RECORD      Y02752*/ 16321000
*   NIPPMNAM=NIPPANAM;              /* YES- SAVE MEMBER NAME   Y02752*/ 16322000
         MVC   NIPPMNAM(8),NIPPANAM(@08)                           2469 16323000
*   GO TO NIPPMENT;                 /* GO FIND MEMBER          Y02752*/ 16324000
         B     NIPPMENT                                            2470 16325000
*NIPPMPDS:                                                         2471 16326000
*   NIPPMADR=NIPPMR14;              /* SAVE CALLER'S RETURN ADDR     */ 16327000
NIPPMPDS ST    NIPPMR14,NIPPMADR                                   2471 16328000
*   GENERATE REFS(NIPPMR01,NIPPMR02) SETS(NIPPMREG);               2472 16329000
         STM   NIPPMR02,NIPPMR01,NIPPMREG       SAVE REGS       Y02752  16330000
*   NIPPMNAM=NIPPMNAM&&NIPPMNAM;    /* CLEAR MEMBER NAME       Y02752*/ 16331000
         XC    NIPPMNAM(8),NIPPMNAM                                2473 16332000
*NIPPMENT:                                                         2474 16333000
*   NIPPMR01=ADDR(NIPPADCB)-44;     /* R1= ADDR OF DCB               */ 16334000
NIPPMENT L     @08,NVTPAREA(,RNVT)                                 2474 16335000
         LA    NIPPMR01,NIPPADCB(,@08)                             2474 16336000
         SH    NIPPMR01,@CH00310                                   2474 16337000
*   NIPPMR00=ADDR(NIPPABDL);        /* R0= ADDR OF BLDL LIST         */ 16338000
*                                                                  2475 16339000
         LA    NIPPMR00,NIPPABDL(,@08)                             2475 16340000
*   /*****************************************************************/ 16341000
*   /*                                                               */ 16342000
*   /* READ PDS ENTRY FOR MEMBER                                     */ 16343000
*   /*                                                               */ 16344000
*   /*****************************************************************/ 16345000
*                                                                  2476 16346000
*   GENERATE;                                                      2476 16347000
          BLDL (1),(0)                                                  16348000
*   NIPPARC=NIPPMR15;               /* SET RETURN CODE         Y02752*/ 16349000
         L     @08,NVTPAREA(,RNVT)                                 2477 16350000
         ST    NIPPMR15,NIPPARC(,@08)                              2477 16351000
*   IF NIPPMR15=4                   /* WAS MEMBER NAME FOUND   Y02752*/ 16352000
*     THEN                                                         2478 16353000
         CH    NIPPMR15,@CH00058                                   2478 16354000
         BE    @RT02478                                            2478 16355000
*     GO TO NIPPMPFN;               /* NO - TELL OPERATOR NOT FOUND  */ 16356000
*   IF NIPPMR15=8                   /* WAS THERE AN I/O ERROR        */ 16357000
*     THEN                                                         2480 16358000
         CH    NIPPMR15,@CH00050                                   2480 16359000
         BE    @RT02480                                            2480 16360000
*     GO TO NIPPMPER;               /* YES - TELL OPERATOR I/O ERROR */ 16361000
*                                                                  2481 16362000
*   /*****************************************************************/ 16363000
*   /*                                                               */ 16364000
*   /* SET UP PARAMETERS FOR CONVERSION ROUTINE                      */ 16365000
*   /*                                                               */ 16366000
*   /*****************************************************************/ 16367000
*                                                                  2482 16368000
*   NIPPMR00=NIPPATTR;              /* R0 = ACTUAL TTR               */ 16369000
         SLR   NIPPMR00,NIPPMR00                                   2482 16370000
         ICM   NIPPMR00,7,NIPPATTR(@08)                            2482 16371000
*   GENERATE;                                                      2483 16372000
         SLL   0,8(0)                    ZERO LOW BYTE IN REG 0         16373000
*   NIPPMR01=ADDR(NIPPADEB);        /* R1 = ADDR OF DEB              */ 16374000
         L     NIPPMR01,NVTPAREA(,RNVT)                            2484 16375000
         LA    NIPPMR01,NIPPADEB(,NIPPMR01)                        2484 16376000
*   NIPPMR15=CVTPCNVT;              /* R15 = ADDR OF CONVERSION    2485 16377000
*                                      ROUTINE                 Y02752*/ 16378000
*                                                                  2485 16379000
         L     NIPPMR15,CVTPCNVT(,RCVT)                            2485 16380000
*   /*****************************************************************/ 16381000
*   /*                                                               */ 16382000
*   /* CONVERT TTR TO CCHHR FORMAT                             Y02752*/ 16383000
*   /*                                                               */ 16384000
*   /*****************************************************************/ 16385000
*                                                                  2486 16386000
*   GENERATE REFS(NIPPMR02,NIPPMR13) SETS(NIPPMR14,NIPPMR15,NIPPMMBC);  16387000
*                                                          /*           16388000
         STM   NIPPMR02,NIPPMR13,NIPPMSAV SAVE REGISTERS        Y02752  16389000
         LA    NIPPMR02,NIPPMMBC          CONVERSION AREA       Y02752  16390000
         BALR  NIPPMR14,NIPPMR15          CALL CONVERT RTN      Y02752  16391000
**         RESTORE CSECT AND DSECT BASE REGISTERS               Y02752  16392000
*NIPPMRST  DS  0H                                               Y02752  16393000
NIPPMRST LM    NIPPMR02,NIPPMR13,NIPPMSAV-NIPPMRST(NIPPMR14)    Y02752  16394000
         BC    15,NIPPMSKP                SKIP SAVE AREA        Y02752  16395000
*NIPPMSAV  DS  0F                                               Y02752  16396000
NIPPMSAV DC    12F'0'                     DECLARE REG SAVE AREA Y02752  16397000
*NIPPMSKP DS  0H                                                Y02752  16398000
NIPPMSKP DS    0H                         RESUME EXECUTION      Y02752  16399000
*   IOBSEEK=NIPPMMBC;               /* RESET PARMLIB IOBSEEK TO THIS    16400000
*                                      MBBCCHHR                      */ 16401000
         L     @08,NVTPAREA(,RNVT)                                 2487 16402000
         MVC   IOBSEEK+72(8,@08),NIPPMMBC                          2487 16403000
*   NIPPASID=NIPPMCCH;              /* RESET PARMLIB SEARCH ID TO  2488 16404000
*                                      THIS CCHHR                    */ 16405000
         MVC   NIPPASID(5,@08),NIPPMCCH                            2488 16406000
*   IF NIPPMNAM=NIPPANAM            /* SEE IF MEM NAMES MATCH  Y02752*/ 16407000
*     THEN                                                         2489 16408000
         CLC   NIPPMNAM(8),NIPPANAM(@08)                           2489 16409000
         BE    @RT02489                                            2489 16410000
*     GO TO NIPPMPRD;               /* YES- NEW VERSION- GO READ   2490 16411000
*                                                              Y02752*/ 16412000
*   GENERATE REFS(NIPPMR01,NIPPMR02) SETS(NIPPMREG);               2491 16413000
          LM    NIPPMR02,NIPPMR01,NIPPMREG    RESTORE REGS      Y02752  16414000
*   GO TO NIPPMAD0;                 /* NORMAL RETURN TO CALLER Y02752*/ 16415000
         L     @08,NIPPMADR                                        2492 16416000
         BR    @08                                                 2492 16417000
*NIPPMPER:                                                         2493 16418000
*   NIPPMME1=NIPPANAM;              /* MOVE MEMBER NAME TO I/O ERROR    16419000
*                                      MESSAGE                       */ 16420000
*                                                                  2493 16421000
NIPPMPER LA    @08,NIPPMMB1                                        2493 16422000
         L     @06,NVTPAREA(,RNVT)                                 2493 16423000
         MVC   NIPPMME1(8,@08),NIPPANAM(@06)                       2493 16424000
*   /*****************************************************************/ 16425000
*   /*                                                               */ 16426000
*   /* WTO I/O ERROR DURING BLDL MESSAGE                             */ 16427000
*   /*                                                               */ 16428000
*   /*****************************************************************/ 16429000
*                                                                  2494 16430000
*   GENERATE REFS(NVTWTO) SETS(RPARM,REXIT,RENTRY);                2494 16431000
          IEAPMNIP TYPE=WTO,PARAM=NIPPMMS1 CALL WTO SERVICE ROUTINE     16432000
*   GO TO NIPPMPXT;                 /* ERROR RETURN TO CALLER        */ 16433000
         B     NIPPMPXT                                            2495 16434000
*NIPPMPFN:                                                         2496 16435000
*   IF NIPPMNAM=NIPPANAM            /* SEE IF MEMBER NAMES MATCH   2496 16436000
*                                                              Y02752*/ 16437000
*     THEN                                                         2496 16438000
NIPPMPFN L     @08,NVTPAREA(,RNVT)                                 2496 16439000
         CLC   NIPPMNAM(8),NIPPANAM(@08)                           2496 16440000
         BNE   @RF02496                                            2496 16441000
*     IF NIPPAFL1='1'B              /* YES- SUPPRESS MESSAGE?  Y02752*/ 16442000
*       THEN                                                       2497 16443000
         L     @08,NVTPTAB(,RNVT)                                  2497 16444000
         TM    NIPPAFL1(@08),B'10000000'                           2497 16445000
         BO    @RT02497                                            2497 16446000
*       GO TO NIPPMPXT;             /* YES- GO EXIT TO CALLER  Y02752*/ 16447000
*     ELSE                                                         2499 16448000
*       ;                           /*                         Y02752*/ 16449000
*   NIPPMME2=NIPPANAM;              /* MOVE MEMBER NAME TO NOT FOUND    16450000
*                                      MESSAGE                 Y02752*/ 16451000
*                                                                  2500 16452000
@RF02496 LA    @08,NIPPMMB2                                        2500 16453000
         L     @06,NVTPAREA(,RNVT)                                 2500 16454000
         MVC   NIPPMME2(8,@08),NIPPANAM(@06)                       2500 16455000
*   /*****************************************************************/ 16456000
*   /*                                                               */ 16457000
*   /* WTO MEMBER NOT FOUND IN DATA SET MESSAGE                      */ 16458000
*   /*                                                               */ 16459000
*   /*****************************************************************/ 16460000
*                                                                  2501 16461000
*   GENERATE REFS(NVTWTO) SETS(RPARM,REXIT,RENTRY);                2501 16462000
          IEAPMNIP TYPE=WTO,PARAM=NIPPMMS2 CALL WTO SERVICE ROUTINE     16463000
*NIPPMPXT:                                                         2502 16464000
*   IF NIPPMNAM=NIPPANAM            /* SEE IF NAMES MATCH      Y02752*/ 16465000
*     THEN                                                         2502 16466000
NIPPMPXT L     @08,NVTPAREA(,RNVT)                                 2502 16467000
         CLC   NIPPMNAM(8),NIPPANAM(@08)                           2502 16468000
         BNE   @RF02502                                            2502 16469000
*     DO;                                                          2503 16470000
*       NIPPMNAM=NIPPMNAM&&NIPPMNAM;/* FORCE NEW NAME PATH ON NEXT 2504 16471000
*                                      ENTRY                   Y02752*/ 16472000
         XC    NIPPMNAM(8),NIPPMNAM                                2504 16473000
*       NIPPMR01=NIPPMNEG;          /* SET NEGATIVE VALUE RC   Y02752*/ 16474000
         L     NIPPMR01,NIPPMNEG                                   2505 16475000
*       GENERATE SETS(NIPPMR02,NIPPMR00) REFS(NIPPMREG);           2506 16476000
          LM    NIPPMR02,NIPPMR00,NIPPMREG    RESTORE REGS      Y02752  16477000
*       GO TO NIPPMAD0;             /* EXIT TO CALLER          Y02752*/ 16478000
         L     @08,NIPPMADR                                        2507 16479000
         BR    @08                                                 2507 16480000
*     END;                          /*                         Y02752*/ 16481000
*   GENERATE SETS(NIPPMR02,NIPPMR01) REFS(NIPPMREG);               2509 16482000
@RF02502 DS    0H                                                  2509 16483000
*                                                           /* Y02752*/ 16484000
         LM    NIPPMR02,NIPPMR01,NIPPMREG     RESTORE REGS      Y02752  16485000
*   GO TO NIPPMAD4;                 /* READ ERROR - RETURN TO CALLER */ 16486000
         L     @08,NIPPMADR                                        2510 16487000
         LA    @08,NIPPMAD4+4(,@08)                                2510 16488000
         BR    @08                                                 2510 16489000
*                                                                  2511 16490000
*   /*****************************************************************/ 16491000
*   /*                                                               */ 16492000
*   /* ROUTINE TO READ PARMLIB TEXT                                  */ 16493000
*   /*                                                               */ 16494000
*   /*****************************************************************/ 16495000
*                                                                  2511 16496000
*NIPPMTXT:                                                         2511 16497000
*   NIPPMADR=NIPPMR14;              /* SAVE CALLER'S RETURN ADDRESS  */ 16498000
NIPPMTXT ST    NIPPMR14,NIPPMADR                                   2511 16499000
*   GENERATE REFS(NIPPMR02,NIPPMR01) SETS(NIPPMREG);               2512 16500000
         STM   NIPPMR02,NIPPMR01,NIPPMREG   SAVE CALLERS REGS           16501000
*NIPPMPRD:                                                         2513 16502000
*   NIPPAECB=NIPPAECB&&NIPPAECB;    /* ZERO WAIT ECB                 */ 16503000
NIPPMPRD L     @08,NVTPAREA(,RNVT)                                 2513 16504000
         XC    NIPPAECB(4,@08),NIPPAECB(@08)                       2513 16505000
*   IOBSEEK(4:7)=NIPPASID;          /* FILL IN CCHH IN IOB           */ 16506000
*                                                                  2514 16507000
         LA    @06,72                                              2514 16508000
         ALR   @06,@08                                             2514 16509000
         MVC   IOBSEEK+3(4,@06),NIPPASID(@08)                      2514 16510000
*   /*****************************************************************/ 16511000
*   /*                                                               */ 16512000
*   /* REINITIALIZE IOB FLAGS                                        */ 16513000
*   /*                                                               */ 16514000
*   /*****************************************************************/ 16515000
*                                                                  2515 16516000
*   IOBFLAG1='42'X;                                                2515 16517000
         MVI   IOBFLAG1(@06),X'42'                                 2515 16518000
*   IOBFLAG2='00'X;                                                2516 16519000
         MVI   IOBFLAG2(@06),X'00'                                 2516 16520000
*   IOBFLAG3='00'X;                                                2517 16521000
         MVI   IOBFLAG3(@06),X'00'                                 2517 16522000
*   IOBERRCT='0000'X;                                              2518 16523000
         SLR   @05,@05                                             2518 16524000
         STH   @05,IOBERRCT(,@06)                                  2518 16525000
*   IOBCSW='00000000000000'X;                                      2519 16526000
         MVC   IOBCSW(7,@06),@CB02682                              2519 16527000
*   IOBSENS0='00'X;                                                2520 16528000
         MVI   IOBSENS0(@06),X'00'                                 2520 16529000
*   IOBSENS1='00'X;                                                2521 16530000
*                                                                  2521 16531000
         MVI   IOBSENS1(@06),X'00'                                 2521 16532000
*   /*****************************************************************/ 16533000
*   /*                                                               */ 16534000
*   /* READ PARMLIB TEXT RECORD                                      */ 16535000
*   /*                                                               */ 16536000
*   /*****************************************************************/ 16537000
*                                                                  2522 16538000
*   NIPPMR01=ADDR(NIPPAIOB);                                       2522 16539000
         LA    NIPPMR01,NIPPAIOB(,@08)                             2522 16540000
*   GENERATE;                                                      2523 16541000
          EXCP  (1)                 READ TEXT                           16542000
*   NIPPMR01=ADDR(NIPPAECB);                                       2524 16543000
         L     NIPPMR01,NVTPAREA(,RNVT)                            2524 16544000
         LA    NIPPMR01,NIPPAECB(,NIPPMR01)                        2524 16545000
*   GENERATE;                                                      2525 16546000
*                                                                  2525 16547000
          WAIT  ECB=(1)                  AWAIT I/O COMPLETION           16548000
*   /*****************************************************************/ 16549000
*   /*                                                               */ 16550000
*   /* TEST FOR I/O ERROR AFTER PARMLIB READ                   Y02752*/ 16551000
*   /*                                                               */ 16552000
*   /*****************************************************************/ 16553000
*                                                                  2526 16554000
*   IF NIPPAECC¬='7F'X              /* SKIP IF READ SUCCESSFUL Y02752*/ 16555000
*     THEN                                                         2526 16556000
         L     @08,NVTPAREA(,RNVT)                                 2526 16557000
         CLI   NIPPAECC(@08),X'7F'                                 2526 16558000
         BE    @RF02526                                            2526 16559000
*     DO;                                                          2527 16560000
*       IF NIPPMNAM=NIPPANAM        /* SEE IF MEMBER NAMES MATCH   2528 16561000
*                                                              Y02752*/ 16562000
*         THEN                                                     2528 16563000
         CLC   NIPPMNAM(8),NIPPANAM(@08)                           2528 16564000
         BNE   @RF02528                                            2528 16565000
*         DO;                                                      2529 16566000
*                                                                  2529 16567000
*           /*********************************************************/ 16568000
*           /*                                                       */ 16569000
*           /* DOES THE I/O ERROR REPRESENT EOF                Y02752*/ 16570000
*           /*                                                       */ 16571000
*           /*********************************************************/ 16572000
*                                                                  2530 16573000
*           IF NIPPAECC='41'X&      /* IOBCSW FIELD VALID?           */ 16574000
*                                                                  2530 16575000
*           /*********************************************************/ 16576000
*           /*                                                       */ 16577000
*           /* FALL THROUGH IF UNIT EXCEPTION, CHANNEL END AND DEVICE*/ 16578000
*           /* END FLAGS ARE ON IN THE IOBCSW                        */ 16579000
*           /*                                                       */ 16580000
*           /*********************************************************/ 16581000
*                                                                  2530 16582000
*               (NIPPMCS2|NIPPMMK1)='FF'X THEN                     2530 16583000
         CLI   NIPPAECC(@08),X'41'                                 2530 16584000
         BNE   @RF02530                                            2530 16585000
         MVC   @TS00001(1),NIPPMCS2+81(@08)                        2530 16586000
         OC    @TS00001(1),NIPPMMK1                                2530 16587000
         CLI   @TS00001,X'FF'                                      2530 16588000
         BNE   @RF02530                                            2530 16589000
*             DO;                                                  2531 16590000
*               NIPPARC=16;         /* INDICATE EOF CONDITION  Y02752*/ 16591000
         MVC   NIPPARC(4,@08),@CF00067                             2532 16592000
*               GOTO NIPPMPXT;      /* RETURN TO CALLER        Y02752*/ 16593000
         B     NIPPMPXT                                            2533 16594000
*             END;                  /*                         Y02752*/ 16595000
*                                                                  2534 16596000
*           /*********************************************************/ 16597000
*           /*                                                       */ 16598000
*           /* DOES THE I/O ERROR REPRESENT END OF CYL?      @ZA07472*/ 16599000
*           /*                                                       */ 16600000
*           /*********************************************************/ 16601000
*                                                                  2535 16602000
*           IF NIPPAECC='41'X&      /*                       @ZA07472*/ 16603000
*               (NIPPMCS2|NIPPMMK2)='FF'X&/*                 @ZA07472*/ 16604000
*               (IOBSENS1&NIPPMMK3)='20'X THEN/*             @ZA07472*/ 16605000
*                                                                  2535 16606000
@RF02530 L     @08,NVTPAREA(,RNVT)                                 2535 16607000
         CLI   NIPPAECC(@08),X'41'                                 2535 16608000
         BNE   @RF02535                                            2535 16609000
         MVC   @TS00001(1),NIPPMCS2+81(@08)                        2535 16610000
         OC    @TS00001(1),NIPPMMK2                                2535 16611000
         CLI   @TS00001,X'FF'                                      2535 16612000
         BNE   @RF02535                                            2535 16613000
         MVC   @TS00001(1),IOBSENS1+72(@08)                        2535 16614000
         NC    @TS00001(1),NIPPMMK3                                2535 16615000
         CLI   @TS00001,X'20'                                      2535 16616000
         BNE   @RF02535                                            2535 16617000
*             /*******************************************************/ 16618000
*             /*                                                     */ 16619000
*             /* IF YES, MAKE SEEK ADDRESS POINT TO START OF NEXT    */ 16620000
*             /* CYLINDER                                    @ZA07472*/ 16621000
*             /*                                                     */ 16622000
*             /*******************************************************/ 16623000
*                                                                  2536 16624000
*             DO;                   /*                       @ZA07472*/ 16625000
*               NIPPMCC=NIPPMCC+1;  /* INCREMENT SEEK@ TO NEXT CYL,     16626000
*                                                            @ZA07472*/ 16627000
         AH    @08,@CH00037                                        2537 16628000
         LA    @06,1                                               2537 16629000
         AH    @06,NIPPMCC(,@08)                                   2537 16630000
         STH   @06,NIPPMCC(,@08)                                   2537 16631000
*               NIPPMHH=NIPPMHH&&NIPPMHH;/* HEAD 0,          @ZA07472*/ 16632000
         XC    NIPPMHH(2,@08),NIPPMHH(@08)                         2538 16633000
*               NIPPMR='01'X;       /* AND RECORD 1          @ZA07472*/ 16634000
         MVI   NIPPMR(@08),X'01'                                   2539 16635000
*               GOTO NIPPMRCR;      /* CONTINUE TO PROCESS TEXT    2540 16636000
*                                                            @ZA07472*/ 16637000
         B     NIPPMRCR                                            2540 16638000
*             END;                  /*                       @ZA07472*/ 16639000
*         END;                      /*                         Y02752*/ 16640000
*       GOTO NIPPMTER;              /* INDICATE I/O ERROR      Y02752*/ 16641000
         B     NIPPMTER                                            2543 16642000
*     END;                          /*                         Y02752*/ 16643000
*   RESPECIFY                                                      2545 16644000
*     NIPPMBYT BASED(NIPPMR01);                                    2545 16645000
@RF02526 DS    0H                                                  2546 16646000
*NIPPMRCR:                          /*                       @ZA07472*/ 16647000
*   NIPPMR01=ADDR(NIPPARCD);        /* R1 = ADDR OF TEXT RECORD READ    16648000
*                                      IN                            */ 16649000
*                                                                  2546 16650000
NIPPMRCR L     NIPPMR01,NVTPAREA(,RNVT)                            2546 16651000
         LA    NIPPMR01,NIPPARCD(,NIPPMR01)                        2546 16652000
*   /*****************************************************************/ 16653000
*   /*                                                               */ 16654000
*   /* SCAN THROUGH LEADING BLANK CHARACTERS                         */ 16655000
*   /*                                                               */ 16656000
*   /*****************************************************************/ 16657000
*                                                                  2547 16658000
*   NIPPMBUF(73:73)='FF'X;          /* PLACE 'FF'X IN COL 73         */ 16659000
         MVI   NIPPMBUF+72(NIPPMR01),X'FF'                         2547 16660000
*   NIPPMKPR=1;                     /* COUNT STARTS AT ONE           */ 16661000
         MVC   NIPPMKPR(4),@CF00264                                2548 16662000
*NIPPMPBK:                                                         2549 16663000
*   IF NIPPMBYT=' '                 /* IS THIS CHAR BLANK            */ 16664000
*     THEN                          /* YES - CHECK NEXT CHAR         */ 16665000
NIPPMPBK CLI   NIPPMBYT(NIPPMR01),C' '                             2549 16666000
         BNE   @RF02549                                            2549 16667000
*     DO;                                                          2550 16668000
*       NIPPMR01=NIPPMR01+1;        /* POINT TO NEXT CHAR      Y02752*/ 16669000
         LA    @08,1                                               2551 16670000
         ALR   NIPPMR01,@08                                        2551 16671000
*       NIPPMKPR=NIPPMKPR+1;        /* INCREMENT COUNTER       Y02752*/ 16672000
         AL    @08,NIPPMKPR                                        2552 16673000
         ST    @08,NIPPMKPR                                        2552 16674000
*       IF NIPPMKPR=72              /* ARE FIRST 71 CHARS BLANK    2553 16675000
*                                                              Y02752*/ 16676000
*         THEN                      /* YES-CHECK FOR CONTINUATION    */ 16677000
         CH    @08,@CH00214                                        2553 16678000
         BNE   @RF02553                                            2553 16679000
*         DO;                                                      2554 16680000
*           IF NIPPMBYT¬=' '        /* IS 72'ND CHAR BLK             */ 16681000
*             THEN                  /* NO - INDICATES CONTINUATION   */ 16682000
         CLI   NIPPMBYT(NIPPMR01),C' '                             2555 16683000
         BNE   @RT02555                                            2555 16684000
*             GO TO NIPPMPRD;       /* READ NEXT RECORD              */ 16685000
*           ELSE                    /* 72ND IS BLANK - NO          2557 16686000
*                                      CONTINUATION                  */ 16687000
*             GO TO NIPPMTND;       /* REG 1 POINTS TO 72ND BLANK. 2557 16688000
*                                      NORMAL RETURN TO CALLER       */ 16689000
         B     NIPPMTND                                            2557 16690000
*         END;                                                     2558 16691000
*       ELSE                                                       2559 16692000
*         GO TO NIPPMPBK;           /* COUNT IS NOT 72 YET- GO CHECK    16693000
*                                      NEXT CHAR                     */ 16694000
*     END;                                                         2560 16695000
*   ELSE                            /* FIRST 71 CHARS ARE NOT        */ 16696000
*     DO;                           /* BLANK                         */ 16697000
@RF02549 DS    0H                                                  2562 16698000
*       NIPPMKPR=NIPPMR01-NIPPMKPR+72;/* POINT TO 72'ND BYTE   Y02752*/ 16699000
         LR    @08,NIPPMR01                                        2562 16700000
         SL    @08,NIPPMKPR                                        2562 16701000
         AH    @08,@CH00214                                        2562 16702000
         ST    @08,NIPPMKPR                                        2562 16703000
*       RESPECIFY                                                  2563 16704000
*         NIPPMBYT BASED(NIPPMKPR); /*                         Y02752*/ 16705000
*       NIPPMBYT=' ';               /* INSURE BLANK AT END BY SETTING   16706000
*                                      72'ND BYTE TO BLK             */ 16707000
         MVI   NIPPMBYT(@08),C' '                                  2564 16708000
*     END;                                                         2565 16709000
*   GENERATE REFS(NIPPMREG) SETS(NIPPMR02,NIPPMR00);               2566 16710000
*                                                                /*     16711000
*NIPPMTND  DS  0H                                               Y02752  16712000
NIPPMTND LM    NIPPMR02,NIPPMR00,NIPPMREG     RESTORE CALLERS REGS      16713000
*   GO TO NIPPMAD0;                 /* NORMAL RETURN TO CALLER       */ 16714000
         L     @08,NIPPMADR                                        2567 16715000
         BR    @08                                                 2567 16716000
*NIPPMTER:                                                         2568 16717000
*   NIPPMR01=ADDR(NIPPAIOB);        /* R1 = ADDR OF PARMLIB IOB      */ 16718000
*                                                                  2568 16719000
NIPPMTER L     NIPPMR01,NVTPAREA(,RNVT)                            2568 16720000
         LA    NIPPMR01,NIPPAIOB(,NIPPMR01)                        2568 16721000
*   /*****************************************************************/ 16722000
*   /*                                                               */ 16723000
*   /* NIPSENSE - FORMAT AND WRITE I/O ERROR MESSAGE                 */ 16724000
*   /*                                                               */ 16725000
*   /*****************************************************************/ 16726000
*                                                                  2569 16727000
*   GENERATE REFS(NVTSENSE,NIPPMR01) SETS(RPARM,REXIT,RENTRY);     2569 16728000
         IEAPMNIP TYPE=SENSE,PARAM=NIPPMR01                             16729000
*   NIPPARC=12;                     /* SET RETURN CODE TO 12   Y02752*/ 16730000
         L     @08,NVTPAREA(,RNVT)                                 2570 16731000
         MVC   NIPPARC(4,@08),@CF00075                             2570 16732000
*   IF NIPPMNAM=NIPPANAM            /* SEE IF MEMBER NAMES MATCH   2571 16733000
*                                                              Y02752*/ 16734000
*     THEN                                                         2571 16735000
         CLC   NIPPMNAM(8),NIPPANAM(@08)                           2571 16736000
         BE    @RT02571                                            2571 16737000
*     GO TO NIPPMPXT;               /* YES-TAKE NEW VERSION EXIT   2572 16738000
*                                                              Y02752*/ 16739000
*   GENERATE REFS(NIPPMREG) SETS(NIPPMR01,NIPPMR02);               2573 16740000
         LM    NIPPMR02,NIPPMR01,NIPPMREG     RESTORE CALLERS REGS      16741000
*   GO TO NIPPMAD4;                 /* READ ERROR - RETURN TO CALLER    16742000
*                                      + 4                           */ 16743000
         L     @08,NIPPMADR                                        2574 16744000
         LA    @08,NIPPMAD4+4(,@08)                                2574 16745000
         BR    @08                                                 2574 16746000
*   RESPECIFY                                                      2575 16747000
*    (NIPPMR01,                                                    2575 16748000
*     NIPPMR00,                                                    2575 16749000
*     NIPPMR14,                                                    2575 16750000
*     NIPPMR15)                     /*                         Y02752*/ 16751000
*         UNRESTRICTED;                                            2575 16752000
*                                                                  2575 16753000
*   /*****************************************************************/ 16754000
*   /*                                                               */ 16755000
*   /* GENERATED MACRO PARAMETER LISTS FOR MESSAGES                  */ 16756000
*   /*                                                               */ 16757000
*   /*****************************************************************/ 16758000
*                                                                  2576 16759000
*   GENERATE DATA;                                                 2576 16760000
*   RESPECIFY                                                      2577 16761000
*    (RNVT,                                                        2577 16762000
*     RCVT) UNRESTRICTED;                                          2577 16763000
*   END NP5PSPIO;                   /* END OF DUMMY SUBROUTINE       */ 16764000
@EL00035 DS    0H                                                  2578 16765000
@EF00035 DS    0H                                                  2578 16766000
@ER00035 BR    @14                                                 2578 16767000
*   END IEAVNP05                    /* END OF MODULE                 */ 16768000
*                                                                  2579 16769000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 16770000
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */ 16771000
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */ 16772000
*/*%INCLUDE SYSLIB  (ILRASMVT)                                       */ 16773000
*/*%INCLUDE SYSLIB  (IHACDE  )                                       */ 16774000
*/*%INCLUDE SYSLIB  (IHAECB  )                                       */ 16775000
*/*%INCLUDE SYSLIB  (IEZIOB  )                                       */ 16776000
*/*%INCLUDE SYSLIB  (IHALLE  )                                       */ 16777000
*/*%INCLUDE SYSLIB  (IHALPDE )                                       */ 16778000
*/*%INCLUDE SYSLIB  (IHANVT  )                                       */ 16779000
*/*%INCLUDE SYSLIB  (CVT     )                                       */ 16780000
*/*%INCLUDE SYSLIB  (IHAPDS  )                                       */ 16781000
*/*%INCLUDE SYSLIB  (IHASCVT )                                       */ 16782000
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */ 16783000
*/*%INCLUDE SYSLIB  (IHAXTLST)                                       */ 16784000
*/*%INCLUDE SYSLIB  (IEAPMNIP)                                       */ 16785000
*/*%INCLUDE SYSLIB  (IEAPNPB )                                       */ 16786000
*/*%INCLUDE SYSLIB  (IEZDEB  )                                       */ 16787000
*/*%INCLUDE SYSLIB  (IEAPPNIP)                                       */ 16788000
*/*%INCLUDE SYSLIB  (IEAPSPIO)                                       */ 16789000
*                                                                  2579 16790000
*       ;                                                          2579 16791000
         B     @EL00001                                            2579 16792000
@DATA    DS    0H                                                       16793000
@CH00050 DC    H'8'                                                     16794000
@CH00827 DC    H'9'                                                     16795000
@CH03109 DC    H'10'                                                    16796000
@CH03233 DC    H'11'                                                    16797000
@CH00061 DC    H'20'                                                    16798000
@CH00063 DC    H'24'                                                    16799000
@CH00065 DC    H'28'                                                    16800000
@CH00069 DC    H'32'                                                    16801000
@CH02665 DC    H'40'                                                    16802000
@CH00310 DC    H'44'                                                    16803000
@CH00635 DC    H'60'                                                    16804000
@CH00037 DC    H'64'                                                    16805000
@CH00214 DC    H'72'                                                    16806000
@CH00044 DC    H'4096'                                                  16807000
@CH04111 DC    H'12287'                                                 16808000
@CH00102 DC    XL2'7FFF'                                                16809000
@CH03111 DC    XL2'0001'                                                16810000
@SC04134 CLC   PSAVAR(0),FIXEQ                                          16811000
@SM04137 MVC   MSGBI1(0),PSAVAR                                         16812000
@SC04139 CLC   PSAVAR(0),BLDLFEQ                                        16813000
@SM04142 MVC   PASSPARM(0),PSAVAR                                       16814000
@SM04144 MVC   MSG9I2(0),PSAVAR                                         16815000
@SM04146 MVC   MSGCI1(0),PSAVAR                                         16816000
         DS    0F                                                       16817000
@AL00482 EQU   *                       LIST WITH   1 ARGUMENT(S)        16818000
@AL00629 DC    A(@CF00067+2)           LIST WITH   1 ARGUMENT(S)        16819000
@AL00536 DC    A(@CH00069)             LIST WITH   1 ARGUMENT(S)        16820000
@AL00538 EQU   *                       LIST WITH   1 ARGUMENT(S)        16821000
@AL00681 DC    A(@CH00061)             LIST WITH   1 ARGUMENT(S)        16822000
@AL00596 EQU   *                       LIST WITH   1 ARGUMENT(S)        16823000
@AL00653 EQU   *                       LIST WITH   1 ARGUMENT(S)        16824000
@AL00785 EQU   *                       LIST WITH   1 ARGUMENT(S)        16825000
@AL00829 EQU   *                       LIST WITH   1 ARGUMENT(S)        16826000
@AL00910 EQU   *                       LIST WITH   1 ARGUMENT(S)        16827000
@AL00987 EQU   *                       LIST WITH   1 ARGUMENT(S)        16828000
@AL01036 DC    A(@CF00058+2)           LIST WITH   1 ARGUMENT(S)        16829000
@AL00604 EQU   *                       LIST WITH   1 ARGUMENT(S)        16830000
@AL00660 EQU   *                       LIST WITH   1 ARGUMENT(S)        16831000
@AL00819 DC    A(@CH00050)             LIST WITH   1 ARGUMENT(S)        16832000
@AL00624 DC    A(@CF00075+2)           LIST WITH   1 ARGUMENT(S)        16833000
@AL00801 EQU   *                       LIST WITH   1 ARGUMENT(S)        16834000
@AL01221 DC    A(@CH00063)             LIST WITH   1 ARGUMENT(S)        16835000
@AL01261 DC    A(@CH00065)             LIST WITH   1 ARGUMENT(S)        16836000
         DS    0F                                                       16837000
@SA00001 DS    18F                                                      16838000
@SA00002 DS    15F                                                      16839000
@SA00003 DS    15F                                                      16840000
@SA00019 DS    15F                                                      16841000
@SA00032 DS    15F                                                      16842000
@SA00004 DS    15F                                                      16843000
@SA00005 DS    15F                                                      16844000
@SA00009 DS    15F                                                      16845000
@SA00010 DS    14F                                                      16846000
@SA00006 DS    15F                                                      16847000
@SA00008 DS    15F                                                      16848000
@SA00007 DS    15F                                                      16849000
@SA00013 DS    15F                                                      16850000
@SA00011 DS    14F                                                      16851000
@SA00012 DS    15F                                                      16852000
@SA00015 DS    15F                                                      16853000
@SA00020 DS    15F                                                      16854000
@SA00029 DS    14F                                                      16855000
@SA00027 DS    15F                                                      16856000
@SA00028 DS    15F                                                      16857000
@TF00001 DS    F                                                        16858000
         DS    0F                                                       16859000
@CF00264 DC    F'1'                                                     16860000
@CH00264 EQU   @CF00264+2                                               16861000
@CF00058 DC    F'4'                                                     16862000
@CH00058 EQU   @CF00058+2                                               16863000
@CF00267 DC    F'5'                                                     16864000
@CF00282 DC    F'6'                                                     16865000
@CF00075 DC    F'12'                                                    16866000
@CH00075 EQU   @CF00075+2                                               16867000
@CF00067 DC    F'16'                                                    16868000
@CH00067 EQU   @CF00067+2                                               16869000
@CF03665 DC    F'100'                                                   16870000
@CF03684 DC    F'400'                                                   16871000
@CF03685 DC    F'404'                                                   16872000
@CF00048 DC    F'65535'                                                 16873000
@CF00119 DC    XL4'FFFFFFFC'                                            16874000
@CF00121 DC    XL4'FFFFFFF8'                                            16875000
@CH00121 EQU   @CF00121+2                                               16876000
@CF00123 DC    XL4'FFFFF000'                                            16877000
@CH00123 EQU   @CF00123+2                                               16878000
@CF00125 DC    XL4'FFFF0000'                                            16879000
@CF00127 DC    XL4'00000FFF'                                            16880000
@CF00134 DC    XL4'00FFFFFF'                                            16881000
@CV00147 DC    V(IEAVNPA5)                                              16882000
@CV00148 DC    V(IEAVNPS5)                                              16883000
@CV00149 DC    V(ILRQSRIT)                                              16884000
         DS    0D                                                       16885000
NXTPGOUT DS    F                                                        16886000
LSTPGOUT DS    F                                                        16887000
PGCRIT   DC    XL4'00018000'                                            16888000
NPTESAV  DS    F                                                        16889000
APFSAVE  DC    F'0'                                                     16890000
NIPSRB   DS    FL4                                                      16891000
         ORG   NIPSRB                                                   16892000
SP245SRB DC    X'F5'                                                    16893000
SIZESRB  DC    AL3(44+72)                                               16894000
         ORG   NIPSRB+4                                                 16895000
DCBPTR   DS    A                                                        16896000
IOBSTPTR DS    A                                                        16897000
IOBPRPTR DS    A                                                        16898000
MNTPLPTR DS    A                                                        16899000
PDSAPTR  DS    A                                                        16900000
APARM    DC    AL4(LPAAREA)                                             16901000
FMSIZE   DS    FL4                                                      16902000
         ORG   FMSIZE                                                   16903000
FMSIZESP DC    X'FC'                                                    16904000
@NM00038 DS    CL3                                                      16905000
         ORG   FMSIZE+4                                                 16906000
PDSLNG   DC    XL4'00'                                                  16907000
ACTLNG   DC    XL4'00'                                                  16908000
LPDECT   DC    XL4'00'                                                  16909000
SAVE1    DS    A                                                        16910000
SAVPTR   DS    A                                                        16911000
CHARSAV  DS    A                                                        16912000
NP5TBLND DS    F                                                        16913000
NA5CSGRP DC    F'0'                                                     16914000
NA5BLDIR DS    F                                                        16915000
XLSTSIZE DS    A                                                        16916000
LDIREND  DC    F'0'                                                     16917000
NPA5HASH DS    F                                                        16918000
LOADADR  DS    A                                                        16919000
RMDR     DS    F                                                        16920000
SIZESAVE DS    F                                                        16921000
BLDLAREA DS    A                                                        16922000
BLDLSAV  DS    A                                                        16923000
SAVACTQ  DS    F                                                        16924000
LLSSAVE  DS    F                                                        16925000
JPQSAVE  DS    F                                                        16926000
LLSSAV2  DS    A                                                        16927000
JPQSAV2  DS    A                                                        16928000
SAVESCAN DS    A                                                        16929000
PLENGTH  DS    F                                                        16930000
LPADCB   DC    AL4(NPBNMACR-40)                                         16931000
TEXTPTR  DS    A                                                        16932000
LASTMOD  DS    A                                                        16933000
DIRNTNO  DS    F                                                        16934000
INFOPTR  DS    A                                                        16935000
INFOSTRT DS    A                                                        16936000
NEXTADDR DS    A                                                        16937000
NEXTINFO DS    A                                                        16938000
NPA5INFP DS    A                                                        16939000
SLOTADDR DS    A                                                        16940000
WASTE    DS    F                                                        16941000
WASTEADR DS    A                                                        16942000
BLDIREND DS    A                                                        16943000
INDEX    DS    F                                                        16944000
LPDEPAGE DS    F                                                        16945000
LPDERMDR DS    F                                                        16946000
LPDEFRST DS    F                                                        16947000
IXPAG    DS    F                                                        16948000
WORKLPDE DS    F                                                        16949000
IXLAST   DS    A                                                        16950000
IXAD     DS    A                                                        16951000
AVAIL    DS    F                                                        16952000
SAVEWAST DS    F                                                        16953000
SAVEADR  DS    F                                                        16954000
NPA5CRIT DS    F                                                        16955000
INDEX2   DS    F                                                        16956000
NPA5FQHD DC    A(0)                                                     16957000
NPA5NWST DS    A                                                        16958000
NPA5LWST DS    A                                                        16959000
WASTPTR  DS    A                                                        16960000
LASTPTR  DS    A                                                        16961000
CURRPTR  DS    A                                                        16962000
NIPPMADR DS    A                                                        16963000
NIPPMKPR DS    A                                                        16964000
NIPPMNEG DC    XL4'FFFFFFFF'                                            16965000
LDIRSIZE DS    F                                                        16966000
NIPPMBDL DS    A                                                        16967000
NIPPMDCB DS    A                                                        16968000
NPA5CVTS DS    F                                                        16969000
NPA5REG5 DS    F                                                        16970000
PAGEADDR DS    A                                                        16971000
PGFIXECB DS    F                                                        16972000
QUOT1    DS    F                                                        16973000
SAVEPTR  DS    A                                                        16974000
USERDL   DS    F                                                        16975000
CODE     DS    H                                                        16976000
@TS00001 DS    CL1                                                      16977000
@CC00071 DC    C'IEAPAK00'                                              16978000
@CC03446 DC    C'***START'                                              16979000
@CC03458 DC    C'IEALOD00'                                              16980000
@CC03588 DC    C' '                                                     16981000
@CB00041 DC    X'FFFFFFFFFFFFFFFF'                                      16982000
@CB02682 DC    X'00000000000000'                                        16983000
@CB00105 EQU   @CB00041                                                 16984000
PASSPARM DC    X'4040404040404040'                                      16985000
         DS    CL1                                                      16986000
GETADDR  DS    CL8                                                      16987000
         ORG   GETADDR                                                  16988000
LOWADDR  DC    F'0'                                                     16989000
HIADDR   DC    XL4'FFFFFF'                                              16990000
         ORG   GETADDR+8                                                16991000
LPAAREA  DS    CL8                                                      16992000
         ORG   LPAAREA                                                  16993000
GTMAREA  DS    AL4                                                      16994000
GTMLNGTH DS    FL4                                                      16995000
         ORG   LPAAREA+8                                                16996000
CDESIZEP DS    CL4                                                      16997000
         ORG   CDESIZEP                                                 16998000
@NM00032 DC    X'FF'                                                    16999000
@NM00033 DC    AL3(32)                                                  17000000
         ORG   CDESIZEP+4                                               17001000
XLSIZEP  DS    CL4                                                      17002000
         ORG   XLSIZEP                                                  17003000
@NM00034 DC    X'FF'                                                    17004000
@NM00035 DC    AL3(16)                                                  17005000
         ORG   XLSIZEP+4                                                17006000
LLESIZEP DS    CL4                                                      17007000
         ORG   LLESIZEP                                                 17008000
@NM00036 DC    X'FF'                                                    17009000
@NM00037 DC    AL3(12)                                                  17010000
         ORG   LLESIZEP+4                                               17011000
NPA5SRCH DS    CL8                                                      17012000
         ORG   NPA5SRCH                                                 17013000
@NM00039 DC    X'000000'                                                17014000
NPA5SRCC DS    CL4                                                      17015000
@NM00040 DC    X'01'                                                    17016000
         ORG   NPA5SRCH+8                                               17017000
ZEROQSR  DC    X'00'                                                    17018000
APFRC    DC    X'00'                                                    17019000
IONDRC   DC    X'00'                                                    17020000
ADDRRC   DC    X'00'                                                    17021000
DIRRC    DC    X'00'                                                    17022000
SDIRRC   DC    X'00'                                                    17023000
NPA5POD  DS    CL264                                                    17024000
         ORG   NPA5POD                                                  17025000
PDSKEY   DS    CL8                                                      17026000
PDSCT    DS    CL2                                                      17027000
PDSDATA  DS    CL254                                                    17028000
         ORG   NPA5POD+264                                              17029000
         DS    CL2                                                      17030000
@NM00041 DS    CL32                                                     17031000
         ORG   @NM00041                                                 17032000
CCW1     DS    CL8                                                      17033000
         ORG   CCW1                                                     17034000
CODE1    DC    X'31'                                                    17035000
SADDR1   DC    AL3(NPA5SRCC)                                            17036000
FLAGS1   DC    X'40'                                                    17037000
@NM00042 DC    X'00'                                                    17038000
COUNT1   DC    X'0005'                                                  17039000
         ORG   @NM00041+8                                               17040000
CCW2     DS    CL8                                                      17041000
         ORG   CCW2                                                     17042000
CODE2    DC    X'08'                                                    17043000
SADDR2   DC    AL3(CCW1)                                                17044000
FLAGS2   DC    X'40'                                                    17045000
@NM00043 DC    X'00'                                                    17046000
COUNT2   DC    X'0000'                                                  17047000
         ORG   @NM00041+16                                              17048000
CCW3     DS    CL8                                                      17049000
         ORG   CCW3                                                     17050000
CODE3    DC    X'0E'                                                    17051000
SADDR3   DC    AL3(NPA5POD)                                             17052000
FLAGS3   DC    X'40'                                                    17053000
@NM00044 DC    X'00'                                                    17054000
COUNT3   DC    X'0108'                                                  17055000
         ORG   @NM00041+24                                              17056000
CCW4     DS    CL8                                                      17057000
         ORG   CCW4                                                     17058000
CODE4    DC    X'92'                                                    17059000
SADDR4   DC    AL3(NPA5SRCC)                                            17060000
FLAGS4   DC    X'20'                                                    17061000
@NM00045 DC    X'00'                                                    17062000
COUNT4   DC    X'0005'                                                  17063000
         ORG   @NM00041+32                                              17064000
@NM00122 DS    CL44                                                     17065000
         ORG   @NM00122                                                 17066000
NPBNIOBF DS    CL4                                                      17067000
         ORG   NPBNIOBF                                                 17068000
NPBNIFB0 DC    AL1(0)                                                   17069000
NPBNIFB1 DC    X'00'                                                    17070000
         ORG   NPBNIFB1                                                 17071000
NIPDSTAT DS    BL1                                                      17072000
NIPDFEST EQU   NPBNIFB1+0                                               17073000
NIPDRTY  EQU   NPBNIFB1+0                                               17074000
NIPDERR  EQU   NPBNIFB1+0                                               17075000
NIPDMOD  EQU   NPBNIFB1+0                                               17076000
@NM00123 EQU   NPBNIFB1+0                                               17077000
         ORG   NPBNIOBF+2                                               17078000
NPBNIFB2 DC    X'00'                                                    17079000
NPBNIFB3 DC    X'00'                                                    17080000
         ORG   NPBNIFB3                                                 17081000
NIPDUNAV DS    BL1                                                      17082000
NIPDCREJ EQU   NPBNIFB3+0                                               17083000
NIPDOFFL EQU   NPBNIFB3+0                                               17084000
@NM00124 EQU   NPBNIFB3+0                                               17085000
         ORG   @NM00122+4                                               17086000
NIPIOBSN DS    CL40                                                     17087000
         ORG   NIPIOBSN                                                 17088000
NPBNIOB  DS    CL40                                                     17089000
         ORG   NPBNIOB                                                  17090000
NPBNFGSN DC    X'42000000'                                              17091000
NPBNECBA DC    AL4(NPBNECB)                                             17092000
NPBNIOB1 DC    X'0000000000000000'                                      17093000
NPBNCPAD DC    A(0)                                                     17094000
NPBNDCBP DC    AL4(NPBNDCB1-40)                                         17095000
NPBNREST DC    X'0000000000000000'                                      17096000
NPBNSEEK DC    X'0000000000000000'                                      17097000
         ORG   @NM00122+44                                              17098000
NIPECBSN DS    CL4                                                      17099000
         ORG   NIPECBSN                                                 17100000
NPBNECB  DS    CL4                                                      17101000
         ORG   NPBNECB                                                  17102000
NPBNCPCD DC    X'00'                                                    17103000
NPBNRBAD DC    AL3(0)                                                   17104000
         ORG   NIPECBSN+4                                               17105000
         DS    CL4                                                      17106000
@NM00125 DS    CL292                                                    17107000
         ORG   @NM00125                                                 17108000
NPBNLNTH DC    X'06'                                                    17109000
NPBNRSVD DC    AL3(0)                                                   17110000
NIPDEBSN DS    CL288                                                    17111000
         ORG   NIPDEBSN                                                 17112000
NPBNDEB  DS    CL288                                                    17113000
         ORG   NPBNDEB                                                  17114000
NPBNDEB1 DC    A(0)                                                     17115000
NPBNAMLN DC    X'00'                                                    17116000
NPBNDEB2 DC    AL3(0)                                                   17117000
NPBNOFLG DC    X'00'                                                    17118000
NPBNDEB3 DC    X'00000000000000'                                        17119000
NPBNNMXT DC    X'01'                                                    17120000
NPBNDEB4 DC    AL3(0)                                                   17121000
NPBNPRTY DC    X'00'                                                    17122000
NPBNDEB5 DC    AL3(0)                                                   17123000
NPBNKYID DC    X'0F'                                                    17124000
NPBNDCBA DC    AL3(NPBNDCB1-40)                                         17125000
NPBNXSCL DC    X'00'                                                    17126000
NPBNAPAD DC    AL3(0)                                                   17127000
@NM00126 DC    64F'0'                                                   17128000
         ORG   @NM00125+292                                             17129000
@NM00127 DS    CL12                                                     17130000
         ORG   @NM00127                                                 17131000
NPBNDCB1 DS    CL12                                                     17132000
         ORG   NPBNDCB1                                                 17133000
NPBNMACR DC    X'00008000'                                              17134000
NPBNIFGS DC    X'00'                                                    17135000
NPBNDEBA DC    AL3(NPBNDEB)                                             17136000
NPBNOFGS DC    X'12000000'                                              17137000
         ORG   @NM00127+12                                              17138000
NPA5LPDE DS    CL40                                                     17139000
         ORG   NPA5LPDE                                                 17140000
@NM00180 DC    10F'0'                                                   17141000
         ORG   NPA5LPDE+40                                              17142000
NPA5LPFL DC    X'0001'                                                  17143000
ERRORCD  DC    X'00'                                                    17144000
PLISTRC  DC    X'00'                                                    17145000
PRMERRC  DC    X'00'                                                    17146000
LPLIBRC  DC    X'00'                                                    17147000
POSTCD   DC    X'00'                                                    17148000
CAUSE28  DC    CL12'XMPOST ERROR'                                       17149000
CAUSE24  DC    CL11'PGOUT ERROR'                                        17150000
CAUSE20  DC    CL12'LPALIB EMPTY'                                       17151000
CAUSE16  DC    CL10'DASD SPACE'                                         17152000
CAUSE4   DC    CL19'STORAGE UNAVAILABLE'                                17153000
CAUSE32  DC    CL19'NON-EXECUTABLE MODS'                                17154000
CAUSE8   DC    CL9'I/O ERROR'                                           17155000
CAUSEOP4 DC    CL18'LPALIB UNAVAILABLE'                                 17156000
CAUSEMOD DC    CL8'MODNAME '                                            17157000
CAUSELIB DC    CL24'INCORRECT LIBNAME FORMAT'                           17158000
CAUSENO  DC    CL24'EXCEED MAX. BLDL ENTRIES'                           17159000
CAUSEVOL DC    CL24'INCORRECT VOLID FIELD'                              17160000
NP5SWCH  DC    X'00'                                                    17161000
         ORG   NP5SWCH                                                  17162000
NP5LPAQ  DS    BL1                                                      17163000
NP5PLLST EQU   NP5SWCH+0                                                17164000
NP5PLRF  EQU   NP5SWCH+0                                                17165000
NP5RTRY  EQU   NP5SWCH+0                                                17166000
NP5LIBNV EQU   NP5SWCH+0                                                17167000
NP5ENTFD EQU   NP5SWCH+0                                                17168000
NP5APFSV EQU   NP5SWCH+0                                                17169000
NP5DFRR  EQU   NP5SWCH+0                                                17170000
         ORG   NP5SWCH+1                                                17171000
NP5DPALS DC    X'00'                                                    17172000
         ORG   NP5DPALS                                                 17173000
NP5ACTVE DS    BL1                                                      17174000
NP5MAJOR EQU   NP5DPALS+0                                               17175000
NP5CDEFD EQU   NP5DPALS+0                                               17176000
NP5NONEX EQU   NP5DPALS+0                                               17177000
@NM00182 EQU   NP5DPALS+0                                               17178000
         ORG   NP5DPALS+1                                               17179000
         DS    CL1                                                      17180000
NP5BLDML DS    CL70                                                     17181000
         ORG   NP5BLDML                                                 17182000
NP5DCB   DS    AL4                                                      17183000
NP5BAREA DS    CL66                                                     17184000
         ORG   NP5BLDML+70                                              17185000
LIBNAME  DS    CL12                                                     17186000
SVCLIB   DC    CL12'SYS1.SVCLIB '                                       17187000
LINKLIB  DC    CL13'SYS1.LINKLIB '                                      17188000
LPALIB   DC    CL12'SYS1.LPALIB '                                       17189000
PSAVAR   DS    CL6                                                      17190000
PLISTNAM DS    CL8                                                      17191000
         ORG   PLISTNAM                                                 17192000
PLISTNM  DS    CL6                                                      17193000
PLISTEL  DS    CL2                                                      17194000
         ORG   PLISTNAM+8                                               17195000
CURMODUL DS    CL9                                                      17196000
         ORG   CURMODUL                                                 17197000
CURMOD   DS    CL8                                                      17198000
@NM00184 DS    CL1                                                      17199000
         ORG   CURMODUL+9                                               17200000
FIXEQ    DC    CL4'FIX='                                                17201000
MLPAEQ   DC    CL5'MLPA='                                               17202000
CLPAO    DC    CL4'CLPA'                                                17203000
BLDLFEQ  DC    CL6'BLDLF='                                              17204000
BLDLEQ   DC    CL5'BLDL='                                               17205000
IEAFIX   DC    CL6'IEAFIX'                                              17206000
IEALPA   DC    CL6'IEALPA'                                              17207000
IEABLD   DC    CL6'IEABLD'                                              17208000
         DS    CL4                                                      17209000
LOCAREA  DS    CL265                                                    17210000
         ORG   LOCAREA                                                  17211000
@NM00185 DS    CL2                                                      17212000
VOLPTR   DS    CL12                                                     17213000
         ORG   VOLPTR                                                   17214000
@NM00186 DS    CL2                                                      17215000
VOLDC    DS    CL2                                                      17216000
VOLSER   DS    CL6                                                      17217000
VOLSEQ   DS    CL2                                                      17218000
         ORG   LOCAREA+265                                              17219000
         DS    CL3                                                      17220000
MODULE   DS    CL8                                                      17221000
         ORG   MODULE                                                   17222000
MOD1     DS    CL4                                                      17223000
MOD2     DS    CL4                                                      17224000
         ORG   MODULE+8                                                 17225000
@NM00187 DC    X'00'                                                    17226000
         ORG   @NM00187                                                 17227000
LASTREQ  DS    BL1                                                      17228000
PAKFOUND EQU   @NM00187+0                                               17229000
ENDOFQUE EQU   @NM00187+0                                               17230000
MODERR   EQU   @NM00187+0                                               17231000
PKERIND  EQU   @NM00187+0                                               17232000
PKERIOF  EQU   @NM00187+0                                               17233000
LDERIND  EQU   @NM00187+0                                               17234000
STGRP    EQU   @NM00187+0                                               17235000
         ORG   @NM00187+1                                               17236000
CSEIOERR DS    CL28                                                     17237000
         ORG   CSEIOERR                                                 17238000
@NM00188 DC    CL20'I/O ERROR FOLLOWING '                               17239000
IOERMDN  DS    CL8                                                      17240000
         ORG   CSEIOERR+28                                              17241000
CSEMINV  DS    CL16                                                     17242000
         ORG   CSEMINV                                                  17243000
MNINVN   DS    CL8                                                      17244000
@NM00189 DC    CL8' INVALID'                                            17245000
         ORG   CSEMINV+16                                               17246000
CSENAMNG DS    CL32                                                     17247000
         ORG   CSENAMNG                                                 17248000
@NM00190 DC    CL15'NAME FOLLOWING '                                    17249000
NMMODNM  DS    CL8                                                      17250000
@NM00191 DC    CL9' IMPROPER'                                           17251000
         ORG   CSENAMNG+32                                              17252000
CSEDELNG DS    CL36                                                     17253000
         ORG   CSEDELNG                                                 17254000
@NM00192 DC    CL20'DELIMITER FOLLOWING '                               17255000
DELMDNM  DS    CL8                                                      17256000
@NM00193 DC    CL8' INVALID'                                            17257000
         ORG   CSEDELNG+36                                              17258000
MODIGND  DC    CL14'MODULE IGNORED'                                     17259000
GRPSKIP  DC    CL22'SKIPPING TO NEXT GROUP'                             17260000
LISTTERM DC    CL15'LIST TERMINATED'                                    17261000
LASTMODN DC    CL8'***START'                                            17262000
LDNFLPA  DS    CL25                                                     17263000
         ORG   LDNFLPA                                                  17264000
NFMODNM  DS    CL8                                                      17265000
@NM00194 DC    CL17' NOT FOUND IN LPA'                                  17266000
         ORG   LDNFLPA+25                                               17267000
@NM00199 DS    CL1                                                      17268000
         ORG   @NM00199                                                 17269000
LASTBLOK DS    BL1                                                      17270000
LASTENT  EQU   @NM00199+0                                               17271000
LASTLMQ  EQU   @NM00199+0                                               17272000
GLOAD    EQU   @NM00199+0                                               17273000
@NM00200 EQU   @NM00199+0                                               17274000
         ORG   @NM00199+1                                               17275000
NIPPMMBC DS    CL8                                                      17276000
         ORG   NIPPMMBC                                                 17277000
NIPPMMBB DS    CL3                                                      17278000
NIPPMCCH DS    CL5                                                      17279000
         ORG   NIPPMMBC+8                                               17280000
NIPPMMK1 DC    B'11110010'                                              17281000
NIPPMMK2 DC    B'11110001'                                              17282000
NIPPMMK3 DC    B'00100000'                                              17283000
NIPPMNAM DC    CL8' '                                                   17284000
NPA5SVST DS    CL8                                                      17285000
         DS    CL3                                                      17286000
NIPDIRHT DC    F'5'                                                     17287000
         DC    F'97'                                                    17288000
         DC    F'199'                                                   17289000
         DC    F'293'                                                   17290000
         DC    F'397'                                                   17291000
         DC    F'499'                                                   17292000
         DC    F'599'                                                   17293000
         DC    F'691'                                                   17294000
         DC    F'797'                                                   17295000
         DC    F'887'                                                   17296000
         DC    F'997'                                                   17297000
         DC    F'1097'                                                  17298000
         DC    F'1193'                                                  17299000
         DC    F'1297'                                                  17300000
         DC    F'1399'                                                  17301000
         DC    F'1499'                                                  17302000
         DC    F'1597'                                                  17303000
         DC    F'1699'                                                  17304000
         DC    F'1789'                                                  17305000
         DC    F'1889'                                                  17306000
         DC    F'1999'                                                  17307000
         DC    F'2099'                                                  17308000
         DC    F'2179'                                                  17309000
         DC    F'2297'                                                  17310000
         DC    F'2399'                                                  17311000
         DC    F'2477'                                                  17312000
         DC    F'2593'                                                  17313000
         DC    F'2699'                                                  17314000
         DC    F'2797'                                                  17315000
         DC    F'2897'                                                  17316000
         DC    F'2999'                                                  17317000
INITCVT  DS    CL12                                                     17318000
         ORG   INITCVT+0                                                17319000
EPNAME   DC    CL8'IEWFBOSV'                                            17320000
OFSETCVT DC    AL4(CVTFBOSV)                                            17321000
         ORG   INITCVT+12                                               17322000
         ORG   INITCVT+12                                               17323000
         DC    CL8'IEWMSEPT'                                            17324000
         DC    AL4(CVTFETCH)                                            17325000
         ORG   INITCVT+24                                               17326000
         ORG   INITCVT+24                                               17327000
         DC    CL8'IEAVSPIE'                                            17328000
         DC    AL4(CVTRSPIE)                                            17329000
         ORG   INITCVT+36                                               17330000
         ORG   INITCVT+36                                               17331000
         DC    CL8'IEAVSPI'                                             17332000
         DC    AL4(CVTCSPIE)                                            17333000
         ORG   INITCVT+48                                               17334000
         ORG   INITCVT+48                                               17335000
         DC    CL8'IEAVAR06'                                            17336000
         DC    AL4(CVTSTXU)                                             17337000
         ORG   INITCVT+60                                               17338000
NPA5WLST DS    CL8                                                      17339000
         ORG   NPA5WLST+0                                               17340000
NPA5WSIZ DC    F'0'                                                     17341000
NPA5WQNE DC    A(0)                                                     17342000
         ORG   NPA5WLST+8                                               17343000
         ORG   NPA5WLST+8                                               17344000
         DC    F'64'                                                    17345000
         DC    A(0)                                                     17346000
         ORG   NPA5WLST+16                                              17347000
         ORG   NPA5WLST+16                                              17348000
         DC    F'128'                                                   17349000
         DC    A(0)                                                     17350000
         ORG   NPA5WLST+24                                              17351000
         ORG   NPA5WLST+24                                              17352000
         DC    F'256'                                                   17353000
         DC    A(0)                                                     17354000
         ORG   NPA5WLST+32                                              17355000
         ORG   NPA5WLST+32                                              17356000
         DC    F'512'                                                   17357000
         DC    A(0)                                                     17358000
         ORG   NPA5WLST+40                                              17359000
         ORG   NPA5WLST+40                                              17360000
         DC    F'1024'                                                  17361000
         DC    A(0)                                                     17362000
         ORG   NPA5WLST+48                                              17363000
         ORG   NPA5WLST+48                                              17364000
         DC    F'1536'                                                  17365000
         DC    A(0)                                                     17366000
         ORG   NPA5WLST+56                                              17367000
         ORG   NPA5WLST+56                                              17368000
         DC    F'2048'                                                  17369000
         DC    A(0)                                                     17370000
         ORG   NPA5WLST+64                                              17371000
         ORG   NPA5WLST+64                                              17372000
         DC    F'2560'                                                  17373000
         DC    A(0)                                                     17374000
         ORG   NPA5WLST+72                                              17375000
         ORG   NPA5WLST+72                                              17376000
         DC    F'3072'                                                  17377000
         DC    A(0)                                                     17378000
         ORG   NPA5WLST+80                                              17379000
         ORG   NPA5WLST+80                                              17380000
         DC    F'3584'                                                  17381000
         DC    A(0)                                                     17382000
         ORG   NPA5WLST+88                                              17383000
         ORG   NPA5WLST+88                                              17384000
         DC    F'4096'                                                  17385000
         DC    A(0)                                                     17386000
         ORG   NPA5WLST+96                                              17387000
NIPPMREG DS    16F                                                      17388000
IEAVNP05 CSECT                                                          17389000
*                                               /* ASSEMBLER EQUATES */ 17390000
BLDLSAVL  EQU 64                                                        17391000
CDESIZE   EQU 32                                                        17392000
LLESIZE   EQU 12                                                        17393000
SP251       EQU   251                   SUBPOOL 251                     17394000
SP245       EQU   245                   SUBPOOL 245                     17395000
SP255       EQU   255                   SUBPOOL 255                     17396000
IEAVNP05 CSECT                                                          17397000
MSG1S    DS    0H                                                       17398000
         IEAPMNIP TYPE=HEADER,MSGST=MSG1S,MSGEND=MSG1E                  17399000
MSG1P    DC    C'IEA108I PERMANENT I/O ERROR DURING BLDL'               17400000
MSG1E    EQU   *                                                        17401000
MSG2S    DS    0H                                                       17402000
         IEAPMNIP TYPE=HEADER,MSGST=MSG2S,MSGEND=MSG2E                  17403000
MSG2P    DC    C'IEA109I BLDL FAILED FOR FOLLOWING MODULES'             17404000
MSG2E    EQU   *                                                        17405000
MSG3S    DS    0H                                                       17406000
         IEAPMNIP TYPE=HEADER,MSGST=MSG3S,MSGEND=MSG3E                  17407000
MSG3P1   DC    C'IEA107I '                                              17408000
MSG3I    DC    CL6' '                                                   17409000
MSG3P2   DC    C'IGNORED'                                               17410000
MSG3E    EQU   *                                                        17411000
MSG6S    DS    0H                                                       17412000
         IEAPMNIP TYPE=HEADER,MSGST=MSG6S,MSGEND=MSG6E                  17413000
MSG6P1   DC    C'IEA350I '                                              17414000
MSG6I1   DC    CL9' '                                                   17415000
MSG6P2   DC    C'MODULE LIST'                                           17416000
MSG6E    EQU   *                                                        17417000
MSG7S    DS    0H                                                       17418000
         IEAPMNIP TYPE=HEADER,MSGST=MSG7S,MSGEND=MSG7E                  17419000
MSG7P1   DC    C'IEA326I LOCATE FAILED FOR '                            17420000
MSG7I1   DC    CL12' '                                                  17421000
MSG7E    EQU   *                                                        17422000
MSG8S    DS    0H                                                       17423000
         IEAPMNIP TYPE=HEADER,MSGST=MSG8S,MSGEND=MSG8E                  17424000
MSG8P1   DC    C'IEA351I '                                              17425000
MSG8I1   DC    CL13' '                                                  17426000
MSG8P2   DC    C'REQUIRED FOR '                                         17427000
MSG8I2   DC    CL8' '                                                   17428000
MSG8E    EQU   *                                                        17429000
MSG9S    DS    0H                                                       17430000
         IEAPMNIP TYPE=HEADER,MSGST=MSG9S,MSGEND=MSG9E                  17431000
MSG9P1   DC    C'IEA352I LIST '                                         17432000
MSG9I1   DC    CL9' '                                                   17433000
MSG9P2   DC    C'FOR '                                                  17434000
MSG9I2   DC    CL6' '                                                   17435000
MSG9P3   DC    C'INVALID - '                                            17436000
MSG9I3   DC    CL24' '                                                  17437000
MSG9E    EQU   *                                                        17438000
MSGAS    DS    0H                                                       17439000
         IEAPMNIP TYPE=HEADER,MSGST=MSGAS,MSGEND=MSGAE                  17440000
MSGAP1   DC    C'IEA300I I/O ERROR DURING BLDL FOR '                    17441000
MSGAI1   DC    CL9' '                                                   17442000
MSGAP2   DC    C'IN '                                                   17443000
MSGAI2   DC    CL12' '                                                  17444000
MSGAE    EQU   *                                                        17445000
MSGBS    DS    0H                                                       17446000
         IEAPMNIP TYPE=HEADER,MSGST=MSGBS,MSGEND=MSGBE                  17447000
MSGBP1   DC    C'IEA340I REAL OR VIRTUAL STORAGE NOT AVAILABLE FOR '    17448000
MSGBI1   DC    CL5' '                                                   17449000
MSGBE    EQU   *                                                        17450000
MSGCS    DS    0H                                                       17451000
         IEAPMNIP TYPE=HEADER,MSGST=MSGCS,MSGEND=MSGCE                  17452000
MSGCP1   DC    C'IEA353I '                                              17453000
MSGCI1   DC    CL6' '                                                   17454000
MSGCP2   DC    C'INPUT TERMINATED AT '                                  17455000
MSGCI2   DC    CL8' '                                                   17456000
MSGCE    EQU   *                                                        17457000
MSGDS    DS    0H                                                       17458000
         IEAPMNIP TYPE=HEADER,MSGST=MSGDS,MSGEND=MSGDE                  17459000
MSGDP1   DC    C'IEA301I '                                              17460000
MSGDI1   DC    CL9' '                                                   17461000
MSGDP2   DC    C'NOT FOUND IN '                                         17462000
MSGDI2   DC    CL12' '                                                  17463000
MSGDE    EQU   *                                                        17464000
MSGES    DS    0H                                                       17465000
         IEAPMNIP TYPE=HEADER,MSGST=MSGES,MSGEND=MSGEE                  17466000
MSGEP1   DC    C'IEA354I CLPA FAILED - '                                17467000
MSGEI1   DC    CL19' '                                                  17468000
MSGEE    EQU   *                                                        17469000
MSGFS    DS    0H                                                       17470000
         IEAPMNIP TYPE=HEADER,MSGST=MSGFS,MSGEND=MSGFE                  17471000
MSGFP1   DC    C'IEA363I '                                              17472000
MSGFI1   DC    CL9' '                                                   17473000
MSGFP2   DC    C'NOT FOUND IN LPA'                                      17474000
MSGFE    EQU   *                                                        17475000
MSGGS    DS    0H                                                       17476000
         IEAPMNIP TYPE=HEADER,MSGST=MSGGS,MSGEND=MSGGE                  17477000
MSGGP1   DC    C'IEA865I- SYSTEM ERROR DURING NIP PROCESSING FOR '      17478000
MSGGI1   DC    CL6' '                                                   17479000
MSGGP2   DC    C'PARAMETER- IPL TERMINATED'                             17480000
MSGGE    EQU   *                                                        17481000
MSG357I1    DS    0H                    MESSAGE HEADER START            17482000
            IEAPMNIP TYPE=HEADER,MSGST=MSG357I1,MSGEND=M357I1E          17483000
            DC    C'IEA357I ERRORS IN ' FIXED TEXT                      17484000
M357FI0     DC    C'IEAPAK00'           LIST NAME                       17485000
            DC    C' LIST'              FIXED TEXT                      17486000
M357I1E     EQU   *                     END OF MESSAGE                  17487000
MSG357I2    DS    0H                    MESSAGE HEADER START            17488000
            IEAPMNIP TYPE=HEADER,MSGST=MSG357I2,MSGEND=M357I2E          17489000
            DC    C'IEA357I '                                           17490000
M357FI1     DS    CL36                  CAUSE OF ERROR                  17491000
            DC    C' - '                FIXED TEXT                      17492000
M357FI2     DS    CL22                  SYSTEM ACTION                   17493000
M357I2E     EQU   *                     END OF MESSAGE                  17494000
MSG208I     DS    0H                    MESSAGE HEADER START            17495000
            IEAPMNIP TYPE=HEADER,MSGST=MSG208I,MSGEND=M208IE            17496000
            DC    C'IEA208I LPA PACKING FUNCTION INOPERATIVE'           17497000
M208IE      EQU   *                     END OF MESSAGE                  17498000
*                                                                       17499000
MSG301I     DS    0H                    START OF MSG HEADER             17500000
            IEAPMNIP TYPE=HEADER,MSGST=MSG301I,MSGEND=M301END           17501000
            DC    C'IEA301I '           MESSAGE ID                      17502000
M301FI1     DC    CL8' '                MODULE NAME                     17503000
            DC    C' NOT FOUND IN SYS1.LPALIB' MSG TEXT                 17504000
M301END     EQU   *                     END OF MESSAGE                  17505000
*                                                                       17506000
MSG356I     DS    0H                    START OF MSG HEADER             17507000
            IEAPMNIP TYPE=HEADER,MSGST=MSG356I,MSGEND=M356END           17508000
            DC    C'IEA356I ALIAS '     MESSAGE ID AND TEXT             17509000
M356FI1     DC    CL8' '                ALIAS NAME                      17510000
            DC    C' OF MODULE '        MESSAGE TEXT                    17511000
M356FI2     DC    CL8' '                MODULE NAME                     17512000
            DC    C' IGNORED'           MESSAGE TEXT                    17513000
M356END     EQU   *                     END OF MESSAGE                  17514000
MODMSGS  DS    0H                                                       17515000
         IEAPMNIP TYPE=HEADER,MSGST=MODMSGS,MSGEND=MODMSGE              17516000
MODLIST  DC    CL8' '                                                   17517000
MODMSGE  EQU   *                                                        17518000
MSGNXS   DS    0H                                            @ZD04022   17519000
         IEAPMNIP TYPE=HEADER,MSGST=MSGNXS,MSGEND=MSGNXE     @ZD04022   17520000
MSGNX1   DC    C'IEA358I SYS1.LPALIB MODULE '                @ZD04022   17521000
MSGNXMD  DC    8C' '                                         @ZD04022   17522000
MSGNX2   DC    C' NON-EXECUTABLE'                            @ZD04022   17523000
MSGNXE   EQU   *                                             @ZD04022   17524000
IEAVNP05 CSECT                                                          17525000
NP5MNT   DS    0F                                                       17526000
               IEAPMNIP TYPE=MOUNTPL,PARAM=SYS1.LPALIB                  17527000
NP5OPN   DS    0F                                                       17528000
               IEAPMNIP TYPE=OPENPL,PARAM=SYS1.LPALIB                   17529000
IEAVNP05 CSECT                                                          17530000
LOCPLIST CAMLST NAME,LPALIB,,LOCAREA                                    17531000
IEAVNP05 CSECT                                                          17532000
*                              /*                                       17533000
*NIPPMMS1 DS   0F                                               Y02752  17534000
NIPPMMS1 DS    0F                                               Y02752  17535000
         IEAPMNIP TYPE=HEADER,MSGST=NIPPMMS1,MSGEND=NIPPMED1    Y02752  17536000
         DC    CL34'IEA300I I/O ERROR DURING BLDL FOR '                 17537000
*NIPPMMB1  EQU *                                                Y02752  17538000
NIPPMMB1 DC    CL8'        '                                            17539000
         DC    CL16' IN SYS1.PARMLIB'                                   17540000
*NIPPMED1 EQU   *                                               Y02752  17541000
NIPPMED1 EQU   *                                                Y02752  17542000
         SPACE 1                                                        17543000
*NIPPMMS2 DS    0F                                              Y02752  17544000
NIPPMMS2 DS    0F                                               Y02752  17545000
         IEAPMNIP TYPE=HEADER,MSGST=NIPPMMS2,MSGEND=NIPPMED2            17546000
         DC    CL8'IEA301I '                                            17547000
*NIPPMMB2 EQU  *                                                Y02752  17548000
NIPPMMB2 DC    CL8'        '                                    Y02752  17549000
         DC    CL26' NOT FOUND IN SYS1.PARMLIB'                         17550000
*NIPPMED2 EQU   *                                               Y02752  17551000
NIPPMED2 EQU   *                                                Y02752  17552000
IEAVNP05 CSECT                                                          17553000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       17554000
@01      EQU   01                                                       17555000
@02      EQU   02                                                       17556000
@03      EQU   03                                                       17557000
@04      EQU   04                                                       17558000
@05      EQU   05                                                       17559000
@06      EQU   06                                                       17560000
@07      EQU   07                                                       17561000
@08      EQU   08                                                       17562000
@09      EQU   09                                                       17563000
@10      EQU   10                                                       17564000
@11      EQU   11                                                       17565000
@12      EQU   12                                                       17566000
@13      EQU   13                                                       17567000
@14      EQU   14                                                       17568000
@15      EQU   15                                                       17569000
RBASE1   EQU   @09                                                      17570000
RBASE2   EQU   @10                                                      17571000
RBASE3   EQU   @11                                                      17572000
RBASE4   EQU   @12                                                      17573000
RLOAD    EQU   @00                                                      17574000
RPARM0   EQU   @00                                                      17575000
RDSR0    EQU   @00                                                      17576000
PGOUTST  EQU   @01                                                      17577000
RPARM    EQU   @01                                                      17578000
RDSR1    EQU   @01                                                      17579000
DEBDAPTR EQU   @04                                                      17580000
RLDADDR  EQU   @04                                                      17581000
TCBPTR   EQU   @04                                                      17582000
RI       EQU   @04                                                      17583000
MLPASZ   EQU   @04                                                      17584000
SCVTSPTR EQU   @05                                                      17585000
BLDLTSZ1 EQU   @05                                                      17586000
SCNPTR   EQU   @05                                                      17587000
PTRCVTEN EQU   @05                                                      17588000
DEBPTR   EQU   @06                                                      17589000
LPDEPTR  EQU   @06                                                      17590000
RBLDL    EQU   @06                                                      17591000
BLDLTSZ2 EQU   @07                                                      17592000
CDENTPTR EQU   @07                                                      17593000
ECBPTR   EQU   @07                                                      17594000
NP5R7    EQU   @07                                                      17595000
PDSPTRV  EQU   @07                                                      17596000
DCBPTR1  EQU   @07                                                      17597000
NP5R8    EQU   @08                                                      17598000
DEBEXPTR EQU   @08                                                      17599000
DEBSBPTR EQU   @08                                                      17600000
NPTEPTR  EQU   @08                                                      17601000
LLEPTR   EQU   @08                                                      17602000
PDS2PTR  EQU   @08                                                      17603000
OPNPLPTR EQU   @08                                                      17604000
XTLSTPTR EQU   @08                                                      17605000
RCODE    EQU   @15                                                      17606000
PGOUTEND EQU   @15                                                      17607000
REG1     EQU   @01                                                      17608000
SRBPTR   EQU   @06                                                      17609000
XSRBPTR  EQU   @07                                                      17610000
ASMVTPTR EQU   @08                                                      17611000
REG10    EQU   @10                                                      17612000
REG11    EQU   @11                                                      17613000
REG12    EQU   @12                                                      17614000
REG13    EQU   @13                                                      17615000
REG14    EQU   @14                                                      17616000
RNVT     EQU   @02                                                      17617000
RCVT     EQU   @03                                                      17618000
REXIT    EQU   @14                                                      17619000
RENTRY   EQU   @15                                                      17620000
NIPPMR00 EQU   @00                                                      17621000
NIPPMR14 EQU   @14                                                      17622000
NIPPMR15 EQU   @15                                                      17623000
NIPPMR01 EQU   @01                                                      17624000
NIPPMR02 EQU   @02                                                      17625000
NIPPMR13 EQU   @13                                                      17626000
END1     EQU   @15                                                      17627000
GPR00P   EQU   @00                                                      17628000
GPR01P   EQU   @01                                                      17629000
LV0      EQU   @00                                                      17630000
MVCLNG   EQU   @05                                                      17631000
NIPPMR06 EQU   @06                                                      17632000
NIPPMR09 EQU   @09                                                      17633000
NIPPMR12 EQU   @12                                                      17634000
PDS1PTR  EQU   @05                                                      17635000
RI2      EQU   @08                                                      17636000
RTCB     EQU   @04                                                      17637000
RTCB7    EQU   @07                                                      17638000
SCANPTR  EQU   @08                                                      17639000
START    EQU   @01                                                      17640000
VMADDR   EQU   @08                                                      17641000
VRECBPTR EQU   @06                                                      17642000
CVTPTR   EQU   16                                                       17643000
PSA      EQU   0                                                        17644000
FLCRNPSW EQU   PSA                                                      17645000
FLCROPSW EQU   PSA+8                                                    17646000
FLCICCW2 EQU   PSA+16                                                   17647000
PSAEEPSW EQU   PSA+132                                                  17648000
PSAESPSW EQU   PSA+136                                                  17649000
FLCSVILC EQU   PSAESPSW+1                                               17650000
PSAEPPSW EQU   PSA+140                                                  17651000
FLCPIILC EQU   PSAEPPSW+1                                               17652000
FLCPICOD EQU   PSAEPPSW+2                                               17653000
PSAPICOD EQU   FLCPICOD+1                                               17654000
FLCTEA   EQU   PSAEPPSW+4                                               17655000
FLCPER   EQU   PSA+152                                                  17656000
FLCMCLA  EQU   PSA+168                                                  17657000
FLCIOEL  EQU   FLCMCLA+4                                                17658000
FLCIOA   EQU   FLCMCLA+16                                               17659000
FLCFSA   EQU   FLCMCLA+80                                               17660000
PSASUPER EQU   PSA+552                                                  17661000
PSASUP1  EQU   PSASUPER                                                 17662000
PSASUP2  EQU   PSASUPER+1                                               17663000
PSASUP3  EQU   PSASUPER+2                                               17664000
PSASUP4  EQU   PSASUPER+3                                               17665000
PSACLHT  EQU   PSA+640                                                  17666000
PSALKSA  EQU   PSA+696                                                  17667000
PSAHLHI  EQU   PSA+760                                                  17668000
PSALITA  EQU   PSA+764                                                  17669000
PSADSSFL EQU   PSA+836                                                  17670000
PSADSSF1 EQU   PSADSSFL                                                 17671000
PSADSSF3 EQU   PSADSSFL+2                                               17672000
PSADSSF4 EQU   PSADSSFL+3                                               17673000
PSARSVT  EQU   PSA+896                                                  17674000
SRBSECT  EQU   0                                                        17675000
SRB      EQU   SRBSECT                                                  17676000
SRBFLNK  EQU   SRB+4                                                    17677000
SRBASCB  EQU   SRB+8                                                    17678000
SRBFLC   EQU   SRB+12                                                   17679000
SRBEP    EQU   SRB+20                                                   17680000
SRBPARM  EQU   SRB+28                                                   17681000
XSRBEXT  EQU   0                                                        17682000
XSAVEREG EQU   XSRBEXT                                                  17683000
XSAVE14  EQU   XSRBEXT+64                                               17684000
XECBXMP  EQU   XSRBEXT+68                                               17685000
ASMVT    EQU   0                                                        17686000
ASMFLAG1 EQU   ASMVT                                                    17687000
ASMFLAG2 EQU   ASMVT+1                                                  17688000
ASMSTAGQ EQU   ASMVT+32                                                 17689000
ASMIORQR EQU   ASMVT+40                                                 17690000
ASMIORQC EQU   ASMVT+44                                                 17691000
ASMPCCWQ EQU   ASMVT+64                                                 17692000
ASMLSAI  EQU   ASMVT+144                                                17693000
ASMGOSQS EQU   ASMVT+152                                                17694000
ASMWKSA1 EQU   ASMVT+368                                                17695000
ASMWKSA2 EQU   ASMVT+448                                                17696000
ASMWKSA3 EQU   ASMVT+528                                                17697000
ASMWKSA4 EQU   ASMVT+608                                                17698000
ASMWKSA5 EQU   ASMVT+688                                                17699000
ASMPOOLS EQU   0                                                        17700000
ASMCPAVQ EQU   ASMPOOLS+8                                               17701000
ASMCPRSQ EQU   ASMPOOLS+16                                              17702000
DCB      EQU   0                                                        17703000
DCBDEBAD EQU   DCB+45                                                   17704000
CDENTRY  EQU   0                                                        17705000
CDCHAIN  EQU   CDENTRY                                                  17706000
CDNAME   EQU   CDENTRY+8                                                17707000
CDENTPT  EQU   CDENTRY+16                                               17708000
CDXLMJP  EQU   CDENTRY+20                                               17709000
CDUSE    EQU   CDENTRY+24                                               17710000
CDATTR   EQU   CDENTRY+28                                               17711000
CDNIP    EQU   CDATTR                                                   17712000
CDREN    EQU   CDATTR                                                   17713000
CDJPA    EQU   CDATTR                                                   17714000
CDATTR2  EQU   CDENTRY+29                                               17715000
CDXLE    EQU   CDATTR2                                                  17716000
XTLST    EQU   0                                                        17717000
XTLLNTH  EQU   XTLST                                                    17718000
XTLMSBLA EQU   XTLST+8                                                  17719000
XTLMSBAA EQU   XTLST+12                                                 17720000
LLE      EQU   0                                                        17721000
LLECHN   EQU   LLE                                                      17722000
ECB      EQU   0                                                        17723000
ECBRB    EQU   ECB                                                      17724000
ECBEVTB  EQU   ECBRB                                                    17725000
ECBEXTB  EQU   ECBEVTB                                                  17726000
ECBCC    EQU   ECBEXTB                                                  17727000
ECBCCCNT EQU   ECBEXTB+1                                                17728000
ECBRBA   EQU   ECBCCCNT                                                 17729000
ECBEVTBA EQU   ECBRBA                                                   17730000
ECBEXTBA EQU   ECBEVTBA                                                 17731000
ECBBYTE3 EQU   ECBEXTBA+2                                               17732000
ECBEXTND EQU   ECBBYTE3                                                 17733000
IOBPREFX EQU   0                                                        17734000
IOBCFLG1 EQU   IOBPREFX                                                 17735000
IOBSTDRD EQU   0                                                        17736000
IOBFLAG1 EQU   IOBSTDRD                                                 17737000
IOBCYCCK EQU   IOBFLAG1                                                 17738000
IOBRSTRT EQU   IOBFLAG1                                                 17739000
IOBFLAG2 EQU   IOBSTDRD+1                                               17740000
IOBPURGE EQU   IOBFLAG2                                                 17741000
IOBRDHA0 EQU   IOBFLAG2                                                 17742000
IOBSENS0 EQU   IOBSTDRD+2                                               17743000
IOBS0B7  EQU   IOBSENS0                                                 17744000
IOBSENS1 EQU   IOBSTDRD+3                                               17745000
IOBECBPT EQU   IOBSTDRD+4                                               17746000
IOBFLAG3 EQU   IOBSTDRD+8                                               17747000
IOBFL3   EQU   IOBFLAG3                                                 17748000
IOBCNC   EQU   IOBFL3                                                   17749000
IOBICL   EQU   IOBFL3                                                   17750000
IOBCSW   EQU   IOBSTDRD+9                                               17751000
IOBIOCSW EQU   IOBCSW                                                   17752000
IOBSTBYT EQU   IOBIOCSW+3                                               17753000
IOBUSTAT EQU   IOBSTBYT                                                 17754000
IOBCSTAT EQU   IOBSTBYT+1                                               17755000
IOBSTART EQU   IOBSTDRD+16                                              17756000
IOBDCBPT EQU   IOBSTDRD+20                                              17757000
IOBFLAG4 EQU   IOBDCBPT                                                 17758000
IOBDCBPB EQU   IOBDCBPT+1                                               17759000
IOBRESTR EQU   IOBSTDRD+24                                              17760000
IOBINCAM EQU   IOBSTDRD+28                                              17761000
IOBBTAMF EQU   IOBINCAM                                                 17762000
IOBERRCT EQU   IOBSTDRD+30                                              17763000
LPDE     EQU   0                                                        17764000
LPDECHN  EQU   LPDE                                                     17765000
LPDENAME EQU   LPDE+8                                                   17766000
LPDENTP  EQU   LPDE+16                                                  17767000
LPDEATTR EQU   LPDE+28                                                  17768000
LPDENIP  EQU   LPDEATTR                                                 17769000
LPDEMIN  EQU   LPDEATTR                                                 17770000
LPDEATT2 EQU   LPDE+29                                                  17771000
LPDEXLE  EQU   LPDEATT2                                                 17772000
LPDERLC  EQU   LPDEATT2                                                 17773000
LPDEMJNM EQU   LPDE+32                                                  17774000
LPDEXTLN EQU   LPDEMJNM                                                 17775000
LPDEXTAD EQU   LPDEMJNM+4                                               17776000
NVT      EQU   0                                                        17777000
NVTNPATR EQU   NVT+54                                                   17778000
NVTNPREN EQU   NVTNPATR                                                 17779000
NVTFLLB  EQU   NVT+55                                                   17780000
NVTMASCB EQU   NVT+64                                                   17781000
NVTVBLDL EQU   NVT+80                                                   17782000
NVTVVMDI EQU   NVT+88                                                   17783000
NVTABSAV EQU   NVT+140                                                  17784000
NVTSVC60 EQU   NVT+148                                                  17785000
NVTNUCND EQU   NVT+180                                                  17786000
NVTNBFND EQU   NVT+184                                                  17787000
NVTVVPG1 EQU   NVT+188                                                  17788000
NVTFLCN  EQU   NVT+211                                                  17789000
NVTWTPSW EQU   NVT+224                                                  17790000
NVTWPSW2 EQU   NVTWTPSW+4                                               17791000
NVTFLWSC EQU   NVTWPSW2+3                                               17792000
NVTLOAD  EQU   NVT+232                                                  17793000
NVTSENSE EQU   NVT+236                                                  17794000
NVTSWAIT EQU   NVT+240                                                  17795000
NVTTIME  EQU   NVT+244                                                  17796000
NVTUCBFN EQU   NVT+248                                                  17797000
NVTWTO   EQU   NVT+252                                                  17798000
NVTWTOR  EQU   NVT+256                                                  17799000
NVTWTOR2 EQU   NVT+260                                                  17800000
NVTOPEN  EQU   NVT+264                                                  17801000
NVTMOUNT EQU   NVT+268                                                  17802000
NVTPRMPT EQU   NVT+272                                                  17803000
NVTVIRT  EQU   NVT+276                                                  17804000
NVTREAL  EQU   NVT+280                                                  17805000
NVTSCHED EQU   NVT+284                                                  17806000
NVTOPIO  EQU   NVT+288                                                  17807000
NVTPAREA EQU   NVT+368                                                  17808000
NVTPTAB  EQU   NVT+372                                                  17809000
NVTVVTCB EQU   NVT+384                                                  17810000
NVTVRTCB EQU   NVT+388                                                  17811000
NVTVRBLD EQU   NVT+400                                                  17812000
NVTBLDL  EQU   NVT+404                                                  17813000
NVTCSLIB EQU   NVT+408                                                  17814000
NVTCSLNM EQU   NVT+412                                                  17815000
NVTCSIOB EQU   NVT+416                                                  17816000
NVTXCTL  EQU   NVT+428                                                  17817000
NVTLOCAT EQU   NVT+436                                                  17818000
NVTLPAND EQU   NVT+476                                                  17819000
NVTLVIRT EQU   NVT+484                                                  17820000
NVTFLPO  EQU   NVT+528                                                  17821000
NVTFLQS  EQU   NVTFLPO                                                  17822000
NVTLPALO EQU   NVT+544                                                  17823000
NVTLPAHA EQU   NVT+548                                                  17824000
CVTMAP   EQU   0                                                        17825000
CVTPCNVT EQU   CVTMAP+28                                                17826000
CVTDAR   EQU   CVTMAP+72                                                17827000
CVTFLGS1 EQU   CVTDAR                                                   17828000
CVTSVDCB EQU   CVTMAP+84                                                17829000
CVTDCB   EQU   CVTMAP+116                                               17830000
CVTFBOSV EQU   CVTMAP+132                                               17831000
CVTIERLC EQU   CVTMAP+144                                               17832000
CVT0PT01 EQU   CVTMAP+152                                               17833000
CVTOPTA  EQU   CVTMAP+182                                               17834000
CVTOPTB  EQU   CVTMAP+183                                               17835000
CVTNLOG  EQU   CVTOPTB                                                  17836000
CVTAPTHR EQU   CVTOPTB                                                  17837000
CVTQLPAQ EQU   CVTMAP+188                                               17838000
CVTABEND EQU   CVTMAP+200                                               17839000
CVTGTF   EQU   CVTMAP+236                                               17840000
CVTGTFST EQU   CVTGTF                                                   17841000
CVTGTFS  EQU   CVTGTFST                                                 17842000
CVTSTATE EQU   CVTGTFST                                                 17843000
CVTTMODE EQU   CVTGTFST                                                 17844000
CVTFORM  EQU   CVTGTFST                                                 17845000
CVTAQAVT EQU   CVTMAP+240                                               17846000
CVTTCMFG EQU   CVTAQAVT                                                 17847000
CVTVOLM2 EQU   CVTMAP+244                                               17848000
CVTTATA  EQU   CVTVOLM2                                                 17849000
CVTTSKS  EQU   CVTTATA                                                  17850000
CVTVOLF2 EQU   CVTTSKS                                                  17851000
CVTTAT   EQU   CVTTATA+1                                                17852000
CVTATER  EQU   CVTMAP+248                                               17853000
CVTEXT1  EQU   CVTMAP+252                                               17854000
CVTPURG  EQU   CVTMAP+260                                               17855000
CVTQMSG  EQU   CVTMAP+268                                               17856000
CVTDMSR  EQU   CVTMAP+272                                               17857000
CVTRSV37 EQU   CVTDMSR                                                  17858000
CVTDMSRF EQU   CVTRSV37                                                 17859000
CVTERPV  EQU   CVTMAP+316                                               17860000
CVTINTLA EQU   CVTMAP+320                                               17861000
CVTAPF   EQU   CVTMAP+324                                               17862000
CVTEXT2  EQU   CVTMAP+328                                               17863000
CVTHJES  EQU   CVTMAP+332                                               17864000
CVTPGSIA EQU   CVTMAP+348                                               17865000
CVTA1F1  EQU   CVTMAP+356                                               17866000
CVTSYSK  EQU   CVTMAP+357                                               17867000
CVTVOLM1 EQU   CVTMAP+380                                               17868000
CVTVOLF1 EQU   CVTVOLM1                                                 17869000
CVTATMCT EQU   CVTMAP+388                                               17870000
CVTXTNT1 EQU   0                                                        17871000
CVTXTNT2 EQU   0                                                        17872000
CVTDSSV  EQU   CVTXTNT2                                                 17873000
CVTFLGBT EQU   CVTXTNT2+5                                               17874000
CVTQID   EQU   CVTXTNT2+24                                              17875000
CVTRV400 EQU   CVTXTNT2+52                                              17876000
CVTRV409 EQU   CVTXTNT2+53                                              17877000
CVTATCVT EQU   CVTXTNT2+64                                              17878000
CVTRV429 EQU   CVTXTNT2+84                                              17879000
CVTRV438 EQU   CVTXTNT2+85                                              17880000
CVTRV457 EQU   CVTXTNT2+112                                             17881000
CVTRV466 EQU   CVTXTNT2+113                                             17882000
CVTFIX   EQU   0                                                        17883000
CVTRELNO EQU   CVTFIX+252                                               17884000
PDS2     EQU   0                                                        17885000
PDS2NAME EQU   PDS2                                                     17886000
PDS2TTRP EQU   PDS2+8                                                   17887000
PDS2INDC EQU   PDS2+13                                                  17888000
PDS2ALIS EQU   PDS2INDC                                                 17889000
PDS2TTRT EQU   PDS2+14                                                  17890000
PDS2ATR  EQU   PDS2+22                                                  17891000
PDS2ATR1 EQU   PDS2ATR                                                  17892000
PDS2RENT EQU   PDS2ATR1                                                 17893000
PDS2REUS EQU   PDS2ATR1                                                 17894000
PDS2LOAD EQU   PDS2ATR1                                                 17895000
PDS2SCTR EQU   PDS2ATR1                                                 17896000
PDS2EXEC EQU   PDS2ATR1                                                 17897000
PDS21BLK EQU   PDS2ATR1                                                 17898000
PDS2ATR2 EQU   PDS2ATR+1                                                17899000
PDS2ORG0 EQU   PDS2ATR2                                                 17900000
PDS2EP0  EQU   PDS2ATR2                                                 17901000
PDS2NRLD EQU   PDS2ATR2                                                 17902000
PDS2REFR EQU   PDS2ATR2                                                 17903000
PDS2STOR EQU   PDS2+24                                                  17904000
PDS2FTBL EQU   PDS2+27                                                  17905000
PDS2EPA  EQU   PDS2+29                                                  17906000
@NM00078 EQU   PDS2+32                                                  17907000
PDS2FTBO EQU   @NM00078                                                 17908000
PDS2FTB1 EQU   PDS2FTBO                                                 17909000
PDSAOSLE EQU   PDS2FTB1                                                 17910000
PDS2PAGA EQU   PDS2FTB1                                                 17911000
PDS2SSI  EQU   PDS2FTB1                                                 17912000
PDSAPFLG EQU   PDS2FTB1                                                 17913000
PDSBCEND EQU   PDS2+35                                                  17914000
PDSS01   EQU   0                                                        17915000
PDSS02   EQU   0                                                        17916000
PDS2MNM  EQU   PDSS02+3                                                 17917000
PDSS03   EQU   0                                                        17918000
PDSSSIWD EQU   PDSS03                                                   17919000
PDSSSIFB EQU   PDSSSIWD+1                                               17920000
PDSS04   EQU   0                                                        17921000
PDSAPF   EQU   PDSS04                                                   17922000
SCVTSECT EQU   0                                                        17923000
SCVTSVCT EQU   SCVTSECT+132                                             17924000
TCBFIX   EQU   0                                                        17925000
TCBFRS   EQU   TCBFIX                                                   17926000
TCB      EQU   0                                                        17927000
TCBPIE   EQU   TCB+4                                                    17928000
TCBPMASK EQU   TCBPIE                                                   17929000
TCBCMP   EQU   TCB+16                                                   17930000
TCBCMPF  EQU   TCBCMP                                                   17931000
TCBCPP   EQU   TCBCMPF                                                  17932000
TCBSTCC  EQU   TCBCMPF                                                  17933000
TCBCDBL  EQU   TCBCMPF                                                  17934000
TCBCWTO  EQU   TCBCMPF                                                  17935000
TCBCIND  EQU   TCBCMPF                                                  17936000
TCBCMSG  EQU   TCBCMPF                                                  17937000
TCBTRN   EQU   TCB+20                                                   17938000
TCBABF   EQU   TCBTRN                                                   17939000
TCBMSS   EQU   TCB+24                                                   17940000
TCBPKF   EQU   TCB+28                                                   17941000
TCBFLGS  EQU   TCB+29                                                   17942000
TCBFLGS1 EQU   TCBFLGS                                                  17943000
TCBFLGS2 EQU   TCBFLGS+1                                                17944000
TCBFLGS3 EQU   TCBFLGS+2                                                17945000
TCBFLGS4 EQU   TCBFLGS+3                                                17946000
TCBFLGS5 EQU   TCBFLGS+4                                                17947000
TCBABWF  EQU   TCBFLGS5                                                 17948000
TCBLLS   EQU   TCB+36                                                   17949000
TCBJPQ   EQU   TCB+44                                                   17950000
TCBPURGE EQU   TCBJPQ                                                   17951000
TCBJPQB  EQU   TCBJPQ+1                                                 17952000
TCBGRS   EQU   TCB+48                                                   17953000
TCBFSA   EQU   TCB+112                                                  17954000
TCBTME   EQU   TCB+120                                                  17955000
TCBJSTCB EQU   TCB+124                                                  17956000
TCBTSFLG EQU   TCB+148                                                  17957000
TCBTSTSK EQU   TCBTSFLG                                                 17958000
TCBSTAB  EQU   TCB+160                                                  17959000
TCBNSTAE EQU   TCBSTAB                                                  17960000
TCBTCT   EQU   TCB+164                                                  17961000
TCBTCTGF EQU   TCBTCT                                                   17962000
TCBSCNDY EQU   TCB+172                                                  17963000
TCBNDSP  EQU   TCBSCNDY                                                 17964000
TCBNDSP1 EQU   TCBNDSP+1                                                17965000
TCBNDSP2 EQU   TCBNDSP+2                                                17966000
TCBNDSP3 EQU   TCBNDSP+3                                                17967000
TCBJSCB  EQU   TCB+180                                                  17968000
TCBRECDE EQU   TCBJSCB                                                  17969000
TCBEXT1  EQU   TCB+196                                                  17970000
TCBBITS  EQU   TCB+200                                                  17971000
TCBNDSP4 EQU   TCBBITS                                                  17972000
TCBNDSP5 EQU   TCBBITS+1                                                17973000
TCBFLGS6 EQU   TCBBITS+2                                                17974000
TCBFLGS7 EQU   TCBBITS+3                                                17975000
TCBDAR   EQU   TCB+204                                                  17976000
TCBDARC  EQU   TCBDAR                                                   17977000
TCBEXT2  EQU   TCB+208                                                  17978000
TCBXSCT  EQU   TCB+240                                                  17979000
TCBXSCT1 EQU   TCBXSCT                                                  17980000
TCBFOE   EQU   TCB+244                                                  17981000
TCBESTAE EQU   TCB+264                                                  17982000
TCBESTRM EQU   TCBESTAE+1                                               17983000
TCBFBYT1 EQU   TCB+276                                                  17984000
TCBFBYT2 EQU   TCB+277                                                  17985000
TCBRV124 EQU   TCB+278                                                  17986000
TCBRV133 EQU   TCB+279                                                  17987000
TCBXTNT2 EQU   0                                                        17988000
TCBGTF   EQU   TCBXTNT2                                                 17989000
TCBTFLG  EQU   TCBGTF                                                   17990000
TCBRV146 EQU   TCBXTNT2+28                                              17991000
TCBRV155 EQU   TCBXTNT2+29                                              17992000
TCBRV164 EQU   TCBXTNT2+30                                              17993000
TCBRV173 EQU   TCBXTNT2+31                                              17994000
NWTOHDR  EQU   0                                                        17995000
NWTOFL   EQU   NWTOHDR+2                                                17996000
NWTORLST EQU   0                                                        17997000
NWTORFL  EQU   NWTORLST+10                                              17998000
NIPSPE   EQU   0                                                        17999000
NIPMNTPL EQU   0                                                        18000000
NMNTDS   EQU   NIPMNTPL                                                 18001000
NMNTVS   EQU   NIPMNTPL+12                                              18002000
NMNTDT   EQU   NIPMNTPL+18                                              18003000
NMNTFL   EQU   NIPMNTPL+20                                              18004000
NIPOPNPL EQU   0                                                        18005000
NOPNDS   EQU   NIPOPNPL                                                 18006000
NOPNDCB  EQU   NIPOPNPL+12                                              18007000
NOPNUCB  EQU   NIPOPNPL+16                                              18008000
NOPNFL   EQU   NIPOPNPL+20                                              18009000
NOPNRC   EQU   NIPOPNPL+21                                              18010000
NIPSCHDL EQU   0                                                        18011000
NIPDCBSN EQU   0                                                        18012000
DEBBASIC EQU   0                                                        18013000
DEBTCBAD EQU   DEBBASIC                                                 18014000
DEBDEBAD EQU   DEBBASIC+4                                               18015000
DEBIRBAD EQU   DEBBASIC+8                                               18016000
DEBOFLGS EQU   DEBIRBAD                                                 18017000
DEBOPATB EQU   DEBBASIC+12                                              18018000
DEBFLGS1 EQU   DEBBASIC+14                                              18019000
DEBUSRPG EQU   DEBBASIC+16                                              18020000
DEBRRQ   EQU   DEBBASIC+20                                              18021000
DEBECBAD EQU   DEBRRQ                                                   18022000
DEBDCBAD EQU   DEBBASIC+24                                              18023000
DEBPROTG EQU   DEBDCBAD                                                 18024000
DEBAPPAD EQU   DEBBASIC+28                                              18025000
DEBBASND EQU   DEBBASIC+32                                              18026000
DEBDASD  EQU   0                                                        18027000
DEBUCBAD EQU   DEBDASD                                                  18028000
DEBSTRCC EQU   DEBDASD+6                                                18029000
DEBSTRHH EQU   DEBDASD+8                                                18030000
DEBACSMD EQU   0                                                        18031000
DEBVOLSQ EQU   DEBACSMD                                                 18032000
DEBVOLBT EQU   DEBVOLSQ                                                 18033000
DEBDSNM  EQU   DEBACSMD+4                                               18034000
DEBUTSAA EQU   DEBDSNM                                                  18035000
DEBACS01 EQU   0                                                        18036000
DEBDSNAM EQU   DEBACS01                                                 18037000
DEBACS02 EQU   0                                                        18038000
DEBDBLK  EQU   DEBACS02                                                 18039000
DEBACS03 EQU   0                                                        18040000
DEBACS04 EQU   0                                                        18041000
DEBTBFRA EQU   DEBACS04                                                 18042000
DEBTCCWA EQU   DEBACS04+4                                               18043000
DEBACS05 EQU   0                                                        18044000
DEBFUCBA EQU   DEBACS05                                                 18045000
DEBLUCBA EQU   DEBACS05+4                                               18046000
DEBACS06 EQU   0                                                        18047000
DEBACS07 EQU   0                                                        18048000
DEBACS08 EQU   0                                                        18049000
DEBSUBNM EQU   0                                                        18050000
DEB      EQU   0                                                        18051000
DEBAVT   EQU   DEB                                                      18052000
DEBEOEA  EQU   DEBAVT                                                   18053000
DEBEOEAB EQU   DEBEOEA                                                  18054000
DEBSIOA  EQU   DEBAVT+4                                                 18055000
DEBSIOAB EQU   DEBSIOA                                                  18056000
DEBPCIA  EQU   DEBAVT+8                                                 18057000
DEBPCIAB EQU   DEBPCIA                                                  18058000
DEBCEA   EQU   DEBAVT+12                                                18059000
DEBCEAB  EQU   DEBCEA                                                   18060000
DEBXCEA  EQU   DEBAVT+16                                                18061000
DEBXCEAB EQU   DEBXCEA                                                  18062000
DEBPREFX EQU   DEB+20                                                   18063000
DEBXTNP  EQU   DEBPREFX+8                                               18064000
DEBXTN   EQU   0                                                        18065000
DEBXFLG1 EQU   DEBXTN+2                                                 18066000
NIPPAHDR EQU   0                                                        18067000
NIPPAREA EQU   0                                                        18068000
NIPPARC  EQU   NIPPAREA+8                                               18069000
NIPPABDL EQU   NIPPAREA+12                                              18070000
NIPPABDH EQU   NIPPABDL                                                 18071000
NIPPANAM EQU   NIPPABDL+4                                               18072000
NIPPATTR EQU   NIPPABDL+12                                              18073000
NIPPAIOD EQU   NIPPAREA+32                                              18074000
NIPPASID EQU   NIPPAIOD+32                                              18075000
NIPPAIOB EQU   NIPPAIOD+40                                              18076000
NIPPADCB EQU   NIPPAIOD+80                                              18077000
NIPPAECB EQU   NIPPAIOD+84                                              18078000
NIPPAECC EQU   NIPPAECB                                                 18079000
NIPPADEB EQU   NIPPAIOD+88                                              18080000
NIPPARCD EQU   NIPPAIOD+136                                             18081000
PARMTAB  EQU   0                                                        18082000
BLDL     EQU   PARMTAB+24                                               18083000
BLDLF    EQU   PARMTAB+32                                               18084000
FIX      EQU   PARMTAB+96                                               18085000
MLPA     EQU   PARMTAB+152                                              18086000
@NM00171 EQU   PARMTAB+272                                              18087000
NIPPAFLG EQU   @NM00171                                                 18088000
NIPPAFL1 EQU   NIPPAFLG                                                 18089000
NIPPTE   EQU   0                                                        18090000
NIPPTADR EQU   NIPPTE                                                   18091000
NIPPTOPF EQU   NIPPTE+4                                                 18092000
NIPPTLST EQU   NIPPTOPF                                                 18093000
NIPPTCAN EQU   NIPPTOPF                                                 18094000
NIPPTATF EQU   NIPPTE+5                                                 18095000
IEARESBL EQU   0                                                        18096000
IEAQLPA  EQU   0                                                        18097000
NP5XCTL  EQU   0                                                        18098000
NP5STAE  EQU   0                                                        18099000
BLDLENT  EQU   0                                                        18100000
BLDLHDR  EQU   BLDLENT                                                  18101000
BLDLFF   EQU   BLDLHDR                                                  18102000
BLDLLL   EQU   BLDLHDR+2                                                18103000
BLDLPDS  EQU   BLDLENT+4                                                18104000
PARMCHAR EQU   0                                                        18105000
TEXTCHAR EQU   0                                                        18106000
MODNAM   EQU   0                                                        18107000
BRENTCVT EQU   0                                                        18108000
SCAN     EQU   0                                                        18109000
NP5BPTR  EQU   0                                                        18110000
ERRPTR   EQU   0                                                        18111000
ERRCOD   EQU   0                                                        18112000
INFODATA EQU   0                                                        18113000
@NM00195 EQU   INFODATA                                                 18114000
INFALIS  EQU   @NM00195                                                 18115000
INFLOAD  EQU   @NM00195                                                 18116000
INFEXEC  EQU   @NM00195                                                 18117000
INF1BLK  EQU   @NM00195                                                 18118000
INFNRLD  EQU   @NM00195                                                 18119000
INFREFR  EQU   @NM00195                                                 18120000
INFAOSLE EQU   @NM00195                                                 18121000
INFSYNM  EQU   INFODATA+1                                               18122000
INFNAME  EQU   INFODATA+4                                               18123000
INFMNM   EQU   INFODATA+12                                              18124000
INFTTRP  EQU   INFMNM                                                   18125000
INFTTRT  EQU   INFMNM+3                                                 18126000
INFFTBL  EQU   INFMNM+6                                                 18127000
INFEPA   EQU   INFODATA+20                                              18128000
INFSTOR  EQU   INFODATA+23                                              18129000
INFAPF   EQU   INFODATA+26                                              18130000
@NM00197 EQU   INFODATA+28                                              18131000
INFIND   EQU   @NM00197                                                 18132000
INFPAGA  EQU   @NM00197                                                 18133000
INFAPFLG EQU   @NM00197                                                 18134000
INFORG0  EQU   @NM00197                                                 18135000
INFCHAIN EQU   INFODATA+29                                              18136000
INFEXTEN EQU   INFODATA+32                                              18137000
NPA5BPTR EQU   0                                                        18138000
WASTBLOK EQU   0                                                        18139000
WASTNEXT EQU   WASTBLOK                                                 18140000
WASTSIZE EQU   WASTBLOK+4                                               18141000
WASTAREA EQU   WASTBLOK+8                                               18142000
NIPPMAD0 EQU   0                                                        18143000
NIPPMAD4 EQU   0                                                        18144000
NIPPMBYT EQU   0                                                        18145000
NIPPMBUF EQU   0                                                        18146000
NIPPMSID EQU   0                                                        18147000
NIPPMCC  EQU   NIPPMSID                                                 18148000
NIPPMHH  EQU   NIPPMSID+2                                               18149000
NIPPMR   EQU   NIPPMSID+4                                               18150000
NIPPMCSW EQU   0                                                        18151000
NIPPMCS2 EQU   NIPPMCSW+3                                               18152000
NIPPMME1 EQU   0                                                        18153000
NIPPMME2 EQU   0                                                        18154000
IEAVVMDI EQU   0                                                        18155000
MSG9I3A  EQU   MSG9I3                                                   18156000
MSG9I3B  EQU   MSG9I3+8                                                 18157000
FLC      EQU   PSA                                                      18158000
PSARSVTE EQU   PSARSVT                                                  18159000
ASM1WKSV EQU   ASMWKSA1                                                 18160000
ASM1RGSV EQU   ASM1WKSV                                                 18161000
ASM1WRKA EQU   ASM1WKSV+60                                              18162000
ASM2WKSV EQU   ASMWKSA2                                                 18163000
ASM2WRKA EQU   ASM2WKSV+52                                              18164000
ASM2FLGS EQU   ASM2WRKA+12                                              18165000
ASM3WKSV EQU   ASMWKSA3                                                 18166000
ASM4WKSV EQU   ASMWKSA4                                                 18167000
ASM4RGSV EQU   ASM4WKSV                                                 18168000
ASM5WKSV EQU   ASMWKSA5                                                 18169000
ASM5RGSV EQU   ASM5WKSV                                                 18170000
IOBORG01 EQU   IOBPREFX+8                                               18171000
IOBNIOBA EQU   IOBORG01                                                 18172000
IOBNFLG1 EQU   IOBNIOBA                                                 18173000
IOBPRTOV EQU   IOBNFLG1                                                 18174000
IOBORG02 EQU   IOBPREFX+8                                               18175000
IOBDQADA EQU   IOBORG02                                                 18176000
IOBDEQIN EQU   IOBDQADA                                                 18177000
IOBORG03 EQU   IOBPREFX+12                                              18178000
IOBORG04 EQU   IOBINCAM                                                 18179000
IOBORG12 EQU   IOBINCAM                                                 18180000
IOBFL4   EQU   IOBORG12                                                 18181000
IOBEXTEN EQU   IOBSTDRD+32                                              18182000
IOBSEEK  EQU   IOBEXTEN                                                 18183000
IOBBB    EQU   IOBSEEK+1                                                18184000
IOBCC    EQU   IOBSEEK+3                                                18185000
IOBHH    EQU   IOBSEEK+5                                                18186000
IOBORG05 EQU   IOBEXTEN                                                 18187000
IOBORG06 EQU   IOBEXTEN                                                 18188000
IOBNXTPT EQU   IOBORG06+4                                               18189000
IOBSTATA EQU   IOBNXTPT                                                 18190000
IOBORG07 EQU   IOBEXTEN+8                                               18191000
W1IEXTEN EQU   IOBORG07                                                 18192000
IOBORG08 EQU   IOBEXTEN+8                                               18193000
IOBINDCT EQU   IOBORG08+4                                               18194000
IOBUNSQR EQU   IOBORG08+5                                               18195000
IOBFCHAD EQU   IOBORG08+8                                               18196000
IOBORG09 EQU   IOBEXTEN+8                                               18197000
IOBDPLAD EQU   IOBORG09+4                                               18198000
IOBDTYPE EQU   IOBORG09+8                                               18199000
IOBDTYP2 EQU   IOBORG09+9                                               18200000
IOBDSTAT EQU   IOBORG09+10                                              18201000
IOBSTAT1 EQU   IOBDSTAT                                                 18202000
IOBORG10 EQU   IOBEXTEN+8                                               18203000
IOBSEEK2 EQU   IOBORG10                                                 18204000
IOBORG11 EQU   IOBEXTEN                                                 18205000
IOBERCT  EQU   IOBORG11                                                 18206000
IOBUCBXV EQU   IOBERCT                                                  18207000
IOBNAME  EQU   IOBORG11+4                                               18208000
IOBORG13 EQU   IOBEXTEN                                                 18209000
IOBSKADR EQU   IOBORG13                                                 18210000
CVTS01   EQU   CVTPGSIA                                                 18211000
CVTLPDSR EQU   CVTS01+4                                                 18212000
CVTLPDIA EQU   CVTS01+12                                                18213000
CVTDIRST EQU   CVTLPDIA                                                 18214000
CVTDICOM EQU   CVTDIRST                                                 18215000
CVTLPDIR EQU   CVTLPDIA+1                                               18216000
CVTSLIDA EQU   CVTS01+24                                                18217000
CVTCTLFG EQU   CVTS01+50                                                18218000
CVTCSPIE EQU   CVTS01+112                                               18219000
CVTSTXU  EQU   CVTS01+184                                               18220000
CVTVVMDI EQU   CVTS01+204                                               18221000
CVTGSMQ  EQU   CVTS01+264                                               18222000
CVTLSMQ  EQU   CVTS01+268                                               18223000
CVTRSPIE EQU   CVTS01+304                                               18224000
CVTASMVT EQU   CVTS01+356                                               18225000
CVTFETCH EQU   CVTS01+372                                               18226000
CVTRV210 EQU   CVTS01+424                                               18227000
CVTRV219 EQU   CVTS01+425                                               18228000
CVTRV228 EQU   CVTS01+426                                               18229000
CVTRV237 EQU   CVTS01+427                                               18230000
CVTMFRTR EQU   CVTS01+452                                               18231000
CVTRV262 EQU   CVTS01+468                                               18232000
CVTRV271 EQU   CVTS01+469                                               18233000
CVTRV280 EQU   CVTS01+470                                               18234000
CVTRV289 EQU   CVTS01+471                                               18235000
CVTGSDA  EQU   CVTS01+600                                               18236000
DEBBAS02 EQU   DEBBASND                                                 18237000
DEBDDS1  EQU   DEBBAS02                                                 18238000
DEBSUCBA EQU   DEBDDS1                                                  18239000
DEBDEVED EQU   DEBDDS1+4                                                18240000
DEBRDCB  EQU   DEBDDS1+4                                                18241000
DEBPDCB  EQU   DEBDDS1+8                                                18242000
DEBWDCB  EQU   DEBDDS1+12                                               18243000
DEBACS09 EQU   DEBDEVED                                                 18244000
DEBASC09 EQU   DEBACS09                                                 18245000
DEBEAMFG EQU   DEBASC09+3                                               18246000
DEBDSID  EQU   DEBASC09+4                                               18247000
DEBEOD   EQU   DEBASC09+12                                              18248000
DEBBOE   EQU   DEBEOD                                                   18249000
DEBEODRV EQU   DEBBOE                                                   18250000
DEBEODTT EQU   DEBBOE+1                                                 18251000
DEBEOD0  EQU   DEBBOE+2                                                 18252000
DEBEODSS EQU   DEBBOE+3                                                 18253000
DEBBAS01 EQU   DEBBASND                                                 18254000
DEBISAM  EQU   DEBBAS01                                                 18255000
DEBFIEAD EQU   DEBISAM                                                  18256000
DEBFPEAD EQU   DEBISAM+4                                                18257000
DEBFOEAD EQU   DEBISAM+8                                                18258000
DEBEXPT  EQU   DEBISAM+12                                               18259000
DEBRPSID EQU   DEBEXPT                                                  18260000
TTRP     EQU   PDS2TTRP                                                 18261000
PDS2R    EQU   TTRP+2                                                   18262000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    18263000
PDS2TT   EQU   TTRP                                                     18264000
DEBEXPTA EQU   DEBEXPT+1                                                18265000
DEBRSV12 EQU   DEBRPSID                                                 18266000
DEBRSV11 EQU   DEBRPSID                                                 18267000
DEBRSV10 EQU   DEBRPSID                                                 18268000
DEBRSV09 EQU   DEBRPSID                                                 18269000
DEBRPSAP EQU   DEBRPSID                                                 18270000
DEBRPSO  EQU   DEBRPSID                                                 18271000
DEBRPSI  EQU   DEBRPSID                                                 18272000
DEBRPSP  EQU   DEBRPSID                                                 18273000
DEBFOEB  EQU   DEBFOEAD+1                                               18274000
DEBNOEE  EQU   DEBFOEAD                                                 18275000
DEBFPEB  EQU   DEBFPEAD+1                                               18276000
DEBNPEE  EQU   DEBFPEAD                                                 18277000
DEBFIEB  EQU   DEBFIEAD+1                                               18278000
DEBNIEE  EQU   DEBFIEAD                                                 18279000
DEBBOESS EQU   DEBEODSS                                                 18280000
DEBBOE0  EQU   DEBEOD0                                                  18281000
DEBBOETT EQU   DEBEODTT                                                 18282000
DEBBOERV EQU   DEBEODRV                                                 18283000
DEBRV008 EQU   DEBDSID+7                                                18284000
DEBWTPTI EQU   DEBDSID+6                                                18285000
DEBEXDTE EQU   DEBDSID                                                  18286000
DEBRV007 EQU   DEBEAMFG                                                 18287000
DEBRV006 EQU   DEBEAMFG                                                 18288000
DEBRV005 EQU   DEBEAMFG                                                 18289000
DEBRV004 EQU   DEBEAMFG                                                 18290000
DEBSECVL EQU   DEBEAMFG                                                 18291000
DEBVAMSG EQU   DEBEAMFG                                                 18292000
DEBDSOPN EQU   DEBEAMFG                                                 18293000
DEBMULTI EQU   DEBEAMFG                                                 18294000
DEBVSEQU EQU   DEBASC09+2                                               18295000
DEBDSSQL EQU   DEBASC09+1                                               18296000
DEBVOLAC EQU   DEBASC09                                                 18297000
DEBWDCBA EQU   DEBWDCB+1                                                18298000
DEBRSV08 EQU   DEBWDCB                                                  18299000
DEBPDCBA EQU   DEBPDCB+1                                                18300000
DEBRSV07 EQU   DEBPDCB                                                  18301000
DEBRDCBA EQU   DEBRDCB+1                                                18302000
DEBRSV06 EQU   DEBRDCB                                                  18303000
DEBSUCBB EQU   DEBSUCBA+1                                               18304000
DEBSDVM  EQU   DEBSUCBA                                                 18305000
CVTRV628 EQU   CVTS01+728                                               18306000
CVTRV627 EQU   CVTS01+724                                               18307000
CVTRV626 EQU   CVTS01+720                                               18308000
CVTRV625 EQU   CVTS01+716                                               18309000
CVTRV624 EQU   CVTS01+712                                               18310000
CVTRV623 EQU   CVTS01+708                                               18311000
CVTRV622 EQU   CVTS01+704                                               18312000
CVTRV621 EQU   CVTS01+700                                               18313000
CVTIHASU EQU   CVTS01+696                                               18314000
CVTSUSP  EQU   CVTS01+692                                               18315000
CVTT6SVC EQU   CVTS01+688                                               18316000
CVTCDAL  EQU   CVTS01+684                                               18317000
CVTTCTL  EQU   CVTS01+680                                               18318000
CVTRSUME EQU   CVTS01+676                                               18319000
CVTJTERM EQU   CVTS01+672                                               18320000
CVTASMRM EQU   CVTS01+668                                               18321000
CVTTCASP EQU   CVTS01+664                                               18322000
CVT0PT03 EQU   CVTS01+660                                               18323000
CVT0PT0E EQU   CVTS01+656                                               18324000
CVTRV609 EQU   CVTS01+652                                               18325000
CVTCGK   EQU   CVTS01+648                                               18326000
CVTRAC   EQU   CVTS01+644                                               18327000
CVTRV606 EQU   CVTS01+640                                               18328000
CVTRV605 EQU   CVTS01+636                                               18329000
CVTRV604 EQU   CVTS01+632                                               18330000
CVTEFF02 EQU   CVTS01+628                                               18331000
CVTCBBR  EQU   CVTS01+624                                               18332000
CVTSSCR  EQU   CVTS01+620                                               18333000
CVTEVENT EQU   CVTS01+616                                               18334000
CVTCRCA  EQU   CVTS01+612                                               18335000
CVTTPIO  EQU   CVTS01+608                                               18336000
CVTADV   EQU   CVTS01+604                                               18337000
CVTGSDAB EQU   CVTGSDA                                                  18338000
CVTQV3   EQU   CVTS01+596                                               18339000
CVTQV2   EQU   CVTS01+592                                               18340000
CVTQV1   EQU   CVTS01+588                                               18341000
CVTRPT   EQU   CVTS01+584                                               18342000
CVTSSRB  EQU   CVTS01+580                                               18343000
CVTCSDRL EQU   CVTS01+576                                               18344000
CVTEXP1  EQU   CVTS01+572                                               18345000
CVTRMPMT EQU   CVTS01+568                                               18346000
CVTRMPTT EQU   CVTS01+564                                               18347000
CVTVPSA  EQU   CVTS01+560                                               18348000
CVTVSTOP EQU   CVTS01+556                                               18349000
CVTGTFR8 EQU   CVTS01+552                                               18350000
CVTQUIT  EQU   CVTS01+548                                               18351000
CVTVACR  EQU   CVTS01+544                                               18352000
CVTWTCB  EQU   CVTS01+540                                               18353000
CVTSTPRS EQU   CVTS01+536                                               18354000
CVT0PT02 EQU   CVTS01+532                                               18355000
CVTDARCM EQU   CVTS01+528                                               18356000
CVTIRECM EQU   CVTS01+524                                               18357000
CVTJRECM EQU   CVTS01+520                                               18358000
CVTVEMS0 EQU   CVTS01+516                                               18359000
CVTSPFRR EQU   CVTS01+512                                               18360000
CVTRLSTG EQU   CVTS01+508                                               18361000
CVT0TC0A EQU   CVTS01+504                                               18362000
CVTGMBR  EQU   CVTS01+500                                               18363000
CVTLFRM  EQU   CVTS01+496                                               18364000
CVTRMBR  EQU   CVTS01+492                                               18365000
CVTVIOP  EQU   CVTS01+488                                               18366000
CVTRV307 EQU   CVTS01+486                                               18367000
CVTRV306 EQU   CVTS01+484                                               18368000
CVTRV305 EQU   CVTS01+482                                               18369000
CVTRV304 EQU   CVTS01+480                                               18370000
CVTRV303 EQU   CVTS01+478                                               18371000
CVTRV302 EQU   CVTS01+476                                               18372000
CVTTRCA  EQU   CVTS01+472                                               18373000
CVTRV297 EQU   CVTRV289                                                 18374000
CVTRV296 EQU   CVTRV289                                                 18375000
CVTRV295 EQU   CVTRV289                                                 18376000
CVTRV294 EQU   CVTRV289                                                 18377000
CVTRV293 EQU   CVTRV289                                                 18378000
CVTRV292 EQU   CVTRV289                                                 18379000
CVTRV291 EQU   CVTRV289                                                 18380000
CVTRV290 EQU   CVTRV289                                                 18381000
CVTRV288 EQU   CVTRV280                                                 18382000
CVTRV287 EQU   CVTRV280                                                 18383000
CVTRV286 EQU   CVTRV280                                                 18384000
CVTRV285 EQU   CVTRV280                                                 18385000
CVTRV284 EQU   CVTRV280                                                 18386000
CVTRV283 EQU   CVTRV280                                                 18387000
CVTRV282 EQU   CVTRV280                                                 18388000
CVTRV281 EQU   CVTRV280                                                 18389000
CVTRV279 EQU   CVTRV271                                                 18390000
CVTRV278 EQU   CVTRV271                                                 18391000
CVTRV277 EQU   CVTRV271                                                 18392000
CVTRV276 EQU   CVTRV271                                                 18393000
CVTRV275 EQU   CVTRV271                                                 18394000
CVTRV274 EQU   CVTRV271                                                 18395000
CVTRV273 EQU   CVTRV271                                                 18396000
CVTRV272 EQU   CVTRV271                                                 18397000
CVTRV270 EQU   CVTRV262                                                 18398000
CVTRV269 EQU   CVTRV262                                                 18399000
CVTRV268 EQU   CVTRV262                                                 18400000
CVTRV267 EQU   CVTRV262                                                 18401000
CVTRV266 EQU   CVTRV262                                                 18402000
CVTRV265 EQU   CVTRV262                                                 18403000
CVTRV264 EQU   CVTRV262                                                 18404000
CVTRV263 EQU   CVTRV262                                                 18405000
CVTVFP   EQU   CVTS01+464                                               18406000
CVTVSI   EQU   CVTS01+460                                               18407000
CVTVPSIB EQU   CVTS01+456                                               18408000
CVTMFACT EQU   CVTMFRTR                                                 18409000
CVTMFCTL EQU   CVTS01+448                                               18410000
CVTPVBP  EQU   CVTS01+444                                               18411000
CVTPWI   EQU   CVTS01+440                                               18412000
CVTRV254 EQU   CVTS01+438                                               18413000
CVTRV253 EQU   CVTS01+436                                               18414000
CVTRV252 EQU   CVTS01+434                                               18415000
CVTRV251 EQU   CVTS01+433                                               18416000
CVTRV250 EQU   CVTS01+432                                               18417000
CVTRV249 EQU   CVTS01+431                                               18418000
CVTRV248 EQU   CVTS01+430                                               18419000
CVTRV247 EQU   CVTS01+429                                               18420000
CVTRV246 EQU   CVTS01+428                                               18421000
CVTRV245 EQU   CVTRV237                                                 18422000
CVTRV244 EQU   CVTRV237                                                 18423000
CVTRV243 EQU   CVTRV237                                                 18424000
CVTRV242 EQU   CVTRV237                                                 18425000
CVTRV241 EQU   CVTRV237                                                 18426000
CVTRV240 EQU   CVTRV237                                                 18427000
CVTRV239 EQU   CVTRV237                                                 18428000
CVTRV238 EQU   CVTRV237                                                 18429000
CVTRV236 EQU   CVTRV228                                                 18430000
CVTRV235 EQU   CVTRV228                                                 18431000
CVTRV234 EQU   CVTRV228                                                 18432000
CVTRV233 EQU   CVTRV228                                                 18433000
CVTRV232 EQU   CVTRV228                                                 18434000
CVTRV231 EQU   CVTRV228                                                 18435000
CVTRV230 EQU   CVTRV228                                                 18436000
CVTRV229 EQU   CVTRV228                                                 18437000
CVTRV227 EQU   CVTRV219                                                 18438000
CVTRV226 EQU   CVTRV219                                                 18439000
CVTRV225 EQU   CVTRV219                                                 18440000
CVTRV224 EQU   CVTRV219                                                 18441000
CVTRV223 EQU   CVTRV219                                                 18442000
CVTRV222 EQU   CVTRV219                                                 18443000
CVTRV221 EQU   CVTRV219                                                 18444000
CVTRV220 EQU   CVTRV219                                                 18445000
CVTRV218 EQU   CVTRV210                                                 18446000
CVTRV217 EQU   CVTRV210                                                 18447000
CVTRV216 EQU   CVTRV210                                                 18448000
CVTRV215 EQU   CVTRV210                                                 18449000
CVTRV214 EQU   CVTRV210                                                 18450000
CVTRV213 EQU   CVTRV210                                                 18451000
CVTRV212 EQU   CVTRV210                                                 18452000
CVTRV211 EQU   CVTRV210                                                 18453000
CVTLCCAT EQU   CVTS01+420                                               18454000
CVTPCCAT EQU   CVTS01+416                                               18455000
CVTIPCRP EQU   CVTS01+412                                               18456000
CVTIPCRI EQU   CVTS01+408                                               18457000
CVTIPCDS EQU   CVTS01+404                                               18458000
CVTAIDVT EQU   CVTS01+400                                               18459000
CVTSSAP  EQU   CVTS01+396                                               18460000
CVTEHCIR EQU   CVTS01+392                                               18461000
CVTEHDEF EQU   CVTS01+388                                               18462000
CVTDAIR  EQU   CVTS01+384                                               18463000
CVTPERFM EQU   CVTS01+380                                               18464000
CVT044R2 EQU   CVTS01+376                                               18465000
CVTRSTWD EQU   CVTS01+368                                               18466000
CVTSPOST EQU   CVTS01+364                                               18467000
CVTIOBP  EQU   CVTS01+360                                               18468000
CVTRECRQ EQU   CVTS01+352                                               18469000
CVTWSAC  EQU   CVTS01+348                                               18470000
CVTRV149 EQU   CVTS01+344                                               18471000
CVTWSAL  EQU   CVTS01+340                                               18472000
CVTSPSA  EQU   CVTS01+336                                               18473000
CVTGLMN  EQU   CVTS01+332                                               18474000
CVTVEAC0 EQU   CVTS01+328                                               18475000
CVT062R1 EQU   CVTS01+324                                               18476000
CVTRPOST EQU   CVTS01+320                                               18477000
CVTDQIQE EQU   CVTS01+316                                               18478000
CVTCSD   EQU   CVTS01+312                                               18479000
CVTLKRMA EQU   CVTS01+308                                               18480000
CVTRENQ  EQU   CVTS01+300                                               18481000
CVTLQCB  EQU   CVTS01+296                                               18482000
CVTFQCB  EQU   CVTS01+292                                               18483000
CVTQCS01 EQU   CVTS01+288                                               18484000
CVTAPFT  EQU   CVTS01+284                                               18485000
CVTPARRL EQU   CVTS01+280                                               18486000
CVTVWAIT EQU   CVTS01+276                                               18487000
CVTGSPL  EQU   CVTS01+272                                               18488000
CVTEXPRO EQU   CVTS01+260                                               18489000
CVTOPCTP EQU   CVTS01+256                                               18490000
CVTSIC   EQU   CVTS01+252                                               18491000
CVTTPIOS EQU   CVTS01+248                                               18492000
CVTRTMS  EQU   CVTS01+244                                               18493000
CVTSDBF  EQU   CVTS01+240                                               18494000
CVTSCBP  EQU   CVTS01+236                                               18495000
CVTSDMP  EQU   CVTS01+232                                               18496000
CVTSV60  EQU   CVTS01+228                                               18497000
CVTRTMCT EQU   CVTS01+224                                               18498000
CVTASCBL EQU   CVTS01+220                                               18499000
CVTASCBH EQU   CVTS01+216                                               18500000
CVTGDA   EQU   CVTS01+212                                               18501000
CVTASVT  EQU   CVTS01+208                                               18502000
CVTAQTOP EQU   CVTS01+200                                               18503000
CVTIOSCS EQU   CVTS01+196                                               18504000
CVTSDRM  EQU   CVTS01+192                                               18505000
CVTOPTE  EQU   CVTS01+188                                               18506000
CVTQUIS  EQU   CVTS01+180                                               18507000
CVTPARS  EQU   CVTS01+176                                               18508000
CVTS1EE  EQU   CVTS01+172                                               18509000
CVTFRAS  EQU   CVTS01+168                                               18510000
CVTQSAS  EQU   CVTS01+164                                               18511000
CVTCRAS  EQU   CVTS01+160                                               18512000
CVTCRMN  EQU   CVTS01+156                                               18513000
CVTDELCP EQU   CVTS01+152                                               18514000
CVTFRECL EQU   CVTS01+148                                               18515000
CVTGETCL EQU   CVTS01+144                                               18516000
CVTBLDCP EQU   CVTS01+140                                               18517000
CVTAUTHL EQU   CVTS01+136                                               18518000
CVTSCAN  EQU   CVTS01+132                                               18519000
CVTRV144 EQU   CVTS01+130                                               18520000
CVTMAXMP EQU   CVTS01+128                                               18521000
CVTSTCK  EQU   CVTS01+124                                               18522000
CVTRV139 EQU   CVTS01+123                                               18523000
CVTDSSAC EQU   CVTS01+122                                               18524000
CVTRV513 EQU   CVTS01+121                                               18525000
CVTIOSPL EQU   CVTS01+120                                               18526000
CVTPTGT  EQU   CVTS01+116                                               18527000
CVTSMFEX EQU   CVTS01+108                                               18528000
CVTOLT0A EQU   CVTS01+104                                               18529000
CVTSRBRT EQU   CVTS01+100                                               18530000
CVTPUTL  EQU   CVTS01+96                                                18531000
CVTASCRL EQU   CVTS01+92                                                18532000
CVTASCRF EQU   CVTS01+88                                                18533000
CVTRV326 EQU   CVTS01+84                                                18534000
CVTRV325 EQU   CVTS01+80                                                18535000
CVTRV324 EQU   CVTS01+76                                                18536000
CVT0VL01 EQU   CVTS01+72                                                18537000
CVTSHRVM EQU   CVTS01+68                                                18538000
CVTRV332 EQU   CVTS01+64                                                18539000
CVTTAS   EQU   CVTS01+60                                                18540000
CVTRSCN  EQU   CVTS01+56                                                18541000
CVTTRAC2 EQU   CVTS01+54                                                18542000
CVTTRACE EQU   CVTS01+52                                                18543000
CVTAPG   EQU   CVTS01+51                                                18544000
CVTSDTRC EQU   CVTCTLFG                                                 18545000
CVTGTRCE EQU   CVTCTLFG                                                 18546000
CVTNOMP  EQU   CVTCTLFG                                                 18547000
CVTRSV79 EQU   CVTCTLFG                                                 18548000
CVTDSTAT EQU   CVTCTLFG                                                 18549000
CVTRSV78 EQU   CVTCTLFG                                                 18550000
CVTRV333 EQU   CVTCTLFG                                                 18551000
CVTRV323 EQU   CVTCTLFG                                                 18552000
CVTSPVLK EQU   CVTS01+49                                                18553000
CVTRSV77 EQU   CVTS01+48                                                18554000
CVTRV331 EQU   CVTS01+44                                                18555000
CVTRV330 EQU   CVTS01+40                                                18556000
CVTRV329 EQU   CVTS01+36                                                18557000
CVTRV328 EQU   CVTS01+32                                                18558000
CVTRV322 EQU   CVTS01+28                                                18559000
CVTSLID  EQU   CVTSLIDA+1                                               18560000
CVTSYLK  EQU   CVTSLIDA                                                 18561000
CVTRV321 EQU   CVTS01+20                                                18562000
CVTRV320 EQU   CVTS01+16                                                18563000
CVTRSV69 EQU   CVTDIRST                                                 18564000
CVTRSV68 EQU   CVTDIRST                                                 18565000
CVTRSV67 EQU   CVTDIRST                                                 18566000
CVTRSV66 EQU   CVTDIRST                                                 18567000
CVTRSV65 EQU   CVTDIRST                                                 18568000
CVTRSV64 EQU   CVTDIRST                                                 18569000
CVTRSV63 EQU   CVTDIRST                                                 18570000
CVTPVTP  EQU   CVTS01+8                                                 18571000
CVTGETL  EQU   CVTS01                                                   18572000
IOBSKSS  EQU   IOBSKADR+3                                               18573000
IOBSK0   EQU   IOBSKADR+2                                               18574000
IOBSKTT  EQU   IOBSKADR+1                                               18575000
IOBSKRV  EQU   IOBSKADR                                                 18576000
IOBCSWSV EQU   IOBORG11+17                                              18577000
IOBSENSV EQU   IOBORG11+16                                              18578000
IOBRCD   EQU   IOBORG11+12                                              18579000
IOBMDREC EQU   IOBORG11+8                                               18580000
IOBNAMEA EQU   IOBNAME+1                                                18581000
IOBNAMSZ EQU   IOBNAME                                                  18582000
IOBERCTA EQU   IOBERCT+1                                                18583000
IOBRTYPE EQU   IOBUCBXV                                                 18584000
IOBRDCHP EQU   IOBORG10+20                                              18585000
IOBNEXTA EQU   IOBORG10+16                                              18586000
IOBREADA EQU   IOBORG10+12                                              18587000
IOBBUFC  EQU   IOBORG10+8                                               18588000
IOBSK2R  EQU   IOBSEEK2+7                                               18589000
IOBSK2HH EQU   IOBSEEK2+5                                               18590000
IOBSK2CC EQU   IOBSEEK2+3                                               18591000
IOBSK2BB EQU   IOBSEEK2+1                                               18592000
IOBSK2M  EQU   IOBSEEK2                                                 18593000
IOBCHNPR EQU   IOBORG09+40                                              18594000
IOBDNCRF EQU   IOBORG09+32                                              18595000
IOBRSV35 EQU   IOBORG09+24                                              18596000
IOBDQPTR EQU   IOBORG09+20                                              18597000
IOBRSV34 EQU   IOBORG09+18                                              18598000
IOBDBYTN EQU   IOBORG09+16                                              18599000
IOBDCPND EQU   IOBORG09+12                                              18600000
IOBSTAT2 EQU   IOBDSTAT+1                                               18601000
IOBSIORT EQU   IOBSTAT1                                                 18602000
IOBADDVU EQU   IOBSTAT1                                                 18603000
IOBBUFF  EQU   IOBSTAT1                                                 18604000
IOBENQUE EQU   IOBSTAT1                                                 18605000
IOBPASS2 EQU   IOBSTAT1                                                 18606000
IOBSYNCH EQU   IOBSTAT1                                                 18607000
IOBNEWVL EQU   IOBSTAT1                                                 18608000
IOBABNRM EQU   IOBSTAT1                                                 18609000
IOBRELEX EQU   IOBDTYP2                                                 18610000
IOBADDTY EQU   IOBDTYP2                                                 18611000
IOBTYPE  EQU   IOBDTYP2                                                 18612000
IOBRQUST EQU   IOBDTYP2                                                 18613000
IOBSUFFX EQU   IOBDTYP2                                                 18614000
IOBSBLKL EQU   IOBDTYP2                                                 18615000
IOBSKEY  EQU   IOBDTYP2                                                 18616000
IOBRELBL EQU   IOBDTYPE                                                 18617000
IOBRDEXC EQU   IOBDTYPE                                                 18618000
IOBDYNBF EQU   IOBDTYPE                                                 18619000
IOBACTAD EQU   IOBDTYPE                                                 18620000
IOBFDBCK EQU   IOBDTYPE                                                 18621000
IOBEXTSC EQU   IOBDTYPE                                                 18622000
IOBOVFLO EQU   IOBDTYPE                                                 18623000
IOBVERFY EQU   IOBDTYPE                                                 18624000
IOBDPLB  EQU   IOBDPLAD+1                                               18625000
IOBDAYLI EQU   IOBDPLAD                                                 18626000
IOBDIOBS EQU   IOBORG09+2                                               18627000
IOBDBYTR EQU   IOBORG09                                                 18628000
IOBBCHAD EQU   IOBORG08+12                                              18629000
IOBFCHNB EQU   IOBFCHAD+1                                               18630000
IOBCOUNT EQU   IOBFCHAD                                                 18631000
IOBASYN  EQU   IOBORG08+7                                               18632000
IOBAPP   EQU   IOBORG08+6                                               18633000
IOBRSV32 EQU   IOBUNSQR                                                 18634000
IOBRSV31 EQU   IOBUNSQR                                                 18635000
IOBRSV30 EQU   IOBUNSQR                                                 18636000
IOBKNRWR EQU   IOBUNSQR                                                 18637000
IOBKNWR  EQU   IOBUNSQR                                                 18638000
IOBNTAV2 EQU   IOBUNSQR                                                 18639000
IOBNTAV1 EQU   IOBUNSQR                                                 18640000
IOBCPBSY EQU   IOBUNSQR                                                 18641000
IOBCHNNL EQU   IOBINDCT                                                 18642000
IOBRSV29 EQU   IOBINDCT                                                 18643000
IOBRSV28 EQU   IOBINDCT                                                 18644000
IOBRSV27 EQU   IOBINDCT                                                 18645000
IOBKEYAD EQU   IOBINDCT                                                 18646000
IOBOVPTR EQU   IOBINDCT                                                 18647000
IOBUNSCH EQU   IOBINDCT                                                 18648000
IOBDEQCP EQU   IOBINDCT                                                 18649000
IOBCCWAD EQU   IOBORG08                                                 18650000
W1OEXTEN EQU   W1IEXTEN                                                 18651000
IOBCCW   EQU   IOBORG06+8                                               18652000
IOBNXTPB EQU   IOBNXTPT+1                                               18653000
IOBRSV26 EQU   IOBSTATA                                                 18654000
IOBRSV25 EQU   IOBSTATA                                                 18655000
IOBRSV24 EQU   IOBSTATA                                                 18656000
IOBRSV23 EQU   IOBSTATA                                                 18657000
IOBRSV22 EQU   IOBSTATA                                                 18658000
IOBRSV21 EQU   IOBSTATA                                                 18659000
IOBRSV20 EQU   IOBSTATA                                                 18660000
IOBAVLFL EQU   IOBSTATA                                                 18661000
IOBRSV37 EQU   IOBORG06+1                                               18662000
IOBUCBXG EQU   IOBORG06                                                 18663000
IOBCPA   EQU   IOBORG05+32                                              18664000
IOBERINF EQU   IOBORG05+16                                              18665000
IOBERCCW EQU   IOBORG05+8                                               18666000
IOBSNDPT EQU   IOBORG05+7                                               18667000
IOBRCVPT EQU   IOBORG05+6                                               18668000
IOBWORK  EQU   IOBORG05+1                                               18669000
IOBUCBX  EQU   IOBORG05                                                 18670000
IOBR     EQU   IOBSEEK+7                                                18671000
IOBHH2   EQU   IOBHH+1                                                  18672000
IOBHH1   EQU   IOBHH                                                    18673000
IOBCC2   EQU   IOBCC+1                                                  18674000
IOBCC1   EQU   IOBCC                                                    18675000
IOBBB2   EQU   IOBBB+1                                                  18676000
IOBBB1   EQU   IOBBB                                                    18677000
IOBM     EQU   IOBSEEK                                                  18678000
IOBRSV46 EQU   IOBFL4                                                   18679000
IOBRSV47 EQU   IOBFL4                                                   18680000
IOBENT   EQU   IOBFL4                                                   18681000
IOBEQP   EQU   IOBFL4                                                   18682000
IOBBUS   EQU   IOBFL4                                                   18683000
IOBDCK   EQU   IOBFL4                                                   18684000
IOBREJ   EQU   IOBFL4                                                   18685000
IOBOVR   EQU   IOBFL4                                                   18686000
IOBCRILC EQU   IOBORG04+1                                               18687000
IOBCRDCC EQU   IOBORG04                                                 18688000
IOBGQECB EQU   IOBORG03                                                 18689000
IOBSWAP  EQU   IOBORG02+4                                               18690000
IOBDQADB EQU   IOBDQADA+1                                               18691000
IOBRSV13 EQU   IOBDEQIN                                                 18692000
IOBRSV12 EQU   IOBDEQIN                                                 18693000
IOBRSV11 EQU   IOBDEQIN                                                 18694000
IOBRSV10 EQU   IOBDEQIN                                                 18695000
IOBRSV09 EQU   IOBDEQIN                                                 18696000
IOBRSV08 EQU   IOBDEQIN                                                 18697000
IOBRSV07 EQU   IOBDEQIN                                                 18698000
IOBDEQ   EQU   IOBDEQIN                                                 18699000
IOBNECB  EQU   IOBORG01+4                                               18700000
IOBNIOBB EQU   IOBNIOBA+1                                               18701000
IOBFIRST EQU   IOBNFLG1                                                 18702000
IOBUPERR EQU   IOBNFLG1                                                 18703000
IOBSPAN  EQU   IOBNFLG1                                                 18704000
IOBBKSPC EQU   IOBNFLG1                                                 18705000
IOBUPDAT EQU   IOBNFLG1                                                 18706000
IOBREAD  EQU   IOBNFLG1                                                 18707000
IOBWRITE EQU   IOBNFLG1                                                 18708000
IOBSEGMT EQU   IOBPRTOV                                                 18709000
ASM5FLGS EQU   ASM5WKSV+64                                              18710000
ASM5AIA  EQU   ASM5WKSV+60                                              18711000
ASM5GCTR EQU   ASM5WKSV+56                                              18712000
ASM5SR14 EQU   ASM5WKSV+52                                              18713000
@NM00030 EQU   ASM5RGSV+4                                               18714000
ASM5RG2  EQU   ASM5RGSV                                                 18715000
@NM00029 EQU   ASM4RGSV+4                                               18716000
ASM4RG2  EQU   ASM4RGSV                                                 18717000
ASM3SR13 EQU   ASM3WKSV+28                                              18718000
ASM3R14B EQU   ASM3WKSV+24                                              18719000
ASM3R14A EQU   ASM3WKSV+20                                              18720000
ASM3GRPA EQU   ASM3WKSV+16                                              18721000
ASM3TMPA EQU   ASM3WKSV+12                                              18722000
ASM3PIOP EQU   ASM3WKSV+8                                               18723000
ASM3GENQ EQU   ASM3WKSV+4                                               18724000
ASM3SWPQ EQU   ASM3WKSV                                                 18725000
ASM2SR14 EQU   ASM2WRKA+16                                              18726000
@NM00028 EQU   ASM2WRKA+13                                              18727000
ASM2WFLG EQU   ASM2FLGS                                                 18728000
ASM2RFLG EQU   ASM2FLGS                                                 18729000
ASM2DUPQ EQU   ASM2WRKA+8                                               18730000
ASM2CAQ  EQU   ASM2WRKA+4                                               18731000
ASM2PAQ  EQU   ASM2WRKA                                                 18732000
ASM2RGSV EQU   ASM2WKSV                                                 18733000
ASM1NXTA EQU   ASM1WRKA+4                                               18734000
ASM1ASCB EQU   ASM1WRKA                                                 18735000
ASM1RG15 EQU   ASM1RGSV+56                                              18736000
@NM00027 EQU   ASM1RGSV+4                                               18737000
ASM1RG1  EQU   ASM1RGSV                                                 18738000
PSARSAV  EQU   PSARSVTE+60                                              18739000
PSARSTK  EQU   PSARSVTE+56                                              18740000
PSAESAV3 EQU   PSARSVTE+52                                              18741000
PSAESTK3 EQU   PSARSVTE+48                                              18742000
PSAESAV2 EQU   PSARSVTE+44                                              18743000
PSAESTK2 EQU   PSARSVTE+40                                              18744000
PSAESAV1 EQU   PSARSVTE+36                                              18745000
PSAESTK1 EQU   PSARSVTE+32                                              18746000
PSAPSAV  EQU   PSARSVTE+28                                              18747000
PSAPSTK  EQU   PSARSVTE+24                                              18748000
PSAMSAV  EQU   PSARSVTE+20                                              18749000
PSAMSTK  EQU   PSARSVTE+16                                              18750000
PSASSAV  EQU   PSARSVTE+12                                              18751000
PSASSTK  EQU   PSARSVTE+8                                               18752000
PSANSTK  EQU   PSARSVTE+4                                               18753000
PSACSTK  EQU   PSARSVTE                                                 18754000
@NM00181 EQU   MSG9I3+16                                                18755000
@NM00202 EQU   NIPPMCSW+4                                               18756000
@NM00201 EQU   NIPPMCSW                                                 18757000
INFEXTAD EQU   INFEXTEN+4                                               18758000
INFEXTLN EQU   INFEXTEN                                                 18759000
@NM00198 EQU   @NM00197                                                 18760000
@NM00196 EQU   @NM00195                                                 18761000
BLDL13   EQU   BLDLPDS+2                                                18762000
@NM00183 EQU   BLDLPDS                                                  18763000
NIPPTSID EQU   NIPPTE+6                                                 18764000
@NM00179 EQU   NIPPTATF                                                 18765000
NIPPTMRG EQU   NIPPTATF                                                 18766000
@NM00178 EQU   NIPPTOPF                                                 18767000
NIPPTOPI EQU   NIPPTOPF                                                 18768000
PTABEND  EQU   PARMTAB+312                                              18769000
@NM00177 EQU   PARMTAB+308                                              18770000
DUPLEX   EQU   PARMTAB+304                                              18771000
@NM00176 EQU   PARMTAB+300                                              18772000
PAGNUM   EQU   PARMTAB+296                                              18773000
@NM00175 EQU   PARMTAB+292                                              18774000
SWAP     EQU   PARMTAB+288                                              18775000
@NM00174 EQU   PARMTAB+284                                              18776000
RSU      EQU   PARMTAB+280                                              18777000
@NM00173 EQU   @NM00171+1                                               18778000
@NM00172 EQU   NIPPAFLG                                                 18779000
@NM00170 EQU   PARMTAB+268                                              18780000
PURGE    EQU   PARMTAB+264                                              18781000
@NM00169 EQU   PARMTAB+260                                              18782000
WTORPLY  EQU   PARMTAB+256                                              18783000
@NM00168 EQU   PARMTAB+252                                              18784000
WTOBFRS  EQU   PARMTAB+248                                              18785000
@NM00167 EQU   PARMTAB+244                                              18786000
VRREGN   EQU   PARMTAB+240                                              18787000
@NM00166 EQU   PARMTAB+236                                              18788000
VAL      EQU   PARMTAB+232                                              18789000
@NM00165 EQU   PARMTAB+228                                              18790000
SYSP     EQU   PARMTAB+224                                              18791000
@NM00164 EQU   PARMTAB+220                                              18792000
SQA      EQU   PARMTAB+216                                              18793000
@NM00163 EQU   PARMTAB+212                                              18794000
SMF      EQU   PARMTAB+208                                              18795000
@NM00162 EQU   PARMTAB+204                                              18796000
REAL     EQU   PARMTAB+200                                              18797000
@NM00161 EQU   PARMTAB+196                                              18798000
PAGEO    EQU   PARMTAB+192                                              18799000
@NM00160 EQU   PARMTAB+188                                              18800000
PAGEP    EQU   PARMTAB+184                                              18801000
@NM00159 EQU   PARMTAB+180                                              18802000
OPT      EQU   PARMTAB+176                                              18803000
@NM00158 EQU   PARMTAB+172                                              18804000
OPI      EQU   PARMTAB+168                                              18805000
@NM00157 EQU   PARMTAB+164                                              18806000
NUCMAP   EQU   PARMTAB+160                                              18807000
@NM00156 EQU   PARMTAB+156                                              18808000
@NM00155 EQU   PARMTAB+148                                              18809000
MAXUSER  EQU   PARMTAB+144                                              18810000
@NM00154 EQU   PARMTAB+140                                              18811000
LOGLMT   EQU   PARMTAB+136                                              18812000
@NM00153 EQU   PARMTAB+132                                              18813000
LOGCLS   EQU   PARMTAB+128                                              18814000
@NM00152 EQU   PARMTAB+124                                              18815000
LNK      EQU   PARMTAB+120                                              18816000
@NM00151 EQU   PARMTAB+116                                              18817000
IPS      EQU   PARMTAB+112                                              18818000
@NM00150 EQU   PARMTAB+108                                              18819000
HARDCPY  EQU   PARMTAB+104                                              18820000
@NM00149 EQU   PARMTAB+100                                              18821000
@NM00148 EQU   PARMTAB+92                                               18822000
DUMP     EQU   PARMTAB+88                                               18823000
@NM00147 EQU   PARMTAB+84                                               18824000
CVIO     EQU   PARMTAB+80                                               18825000
@NM00146 EQU   PARMTAB+76                                               18826000
CSA      EQU   PARMTAB+72                                               18827000
@NM00145 EQU   PARMTAB+68                                               18828000
CPQE     EQU   PARMTAB+64                                               18829000
@NM00144 EQU   PARMTAB+60                                               18830000
CONT     EQU   PARMTAB+56                                               18831000
@NM00143 EQU   PARMTAB+52                                               18832000
CMD      EQU   PARMTAB+48                                               18833000
@NM00142 EQU   PARMTAB+44                                               18834000
CLPA     EQU   PARMTAB+40                                               18835000
@NM00141 EQU   PARMTAB+36                                               18836000
@NM00140 EQU   PARMTAB+28                                               18837000
@NM00139 EQU   PARMTAB+20                                               18838000
APG      EQU   PARMTAB+16                                               18839000
@NM00138 EQU   PARMTAB+12                                               18840000
APF      EQU   PARMTAB+8                                                18841000
PTABSTRT EQU   PARMTAB                                                  18842000
NIPPABUF EQU   NIPPAREA+572                                             18843000
NIPPAPTB EQU   NIPPAREA+252                                             18844000
@NM00137 EQU   NIPPAREA+248                                             18845000
@NM00136 EQU   NIPPAECB+1                                               18846000
@NM00135 EQU   NIPPAIOD+37                                              18847000
NIPPATXT EQU   NIPPAIOD                                                 18848000
@NM00134 EQU   NIPPAREA+30                                              18849000
@NM00133 EQU   NIPPABDL+15                                              18850000
NIPPA2BF EQU   NIPPABDH                                                 18851000
@NM00132 EQU   NIPPAREA                                                 18852000
NIPPABYT EQU   NIPPAHDR+4                                               18853000
NIPPAQ   EQU   NIPPAHDR                                                 18854000
DEBXRV40 EQU   DEBXTN+28                                                18855000
DEBXOPNJ EQU   DEBXTN+24                                                18856000
DEBXXARG EQU   DEBXTN+20                                                18857000
DEBXMCF2 EQU   DEBXTN+19                                                18858000
DEBXMCF1 EQU   DEBXTN+18                                                18859000
DEBXDSO2 EQU   DEBXTN+17                                                18860000
DEBXDSO1 EQU   DEBXTN+16                                                18861000
DEBXDBPR EQU   DEBXTN+12                                                18862000
DEBXDCBM EQU   DEBXTN+8                                                 18863000
DEBXDSAB EQU   DEBXTN+4                                                 18864000
DEBXRV48 EQU   DEBXTN+3                                                 18865000
DEBXRV47 EQU   DEBXFLG1                                                 18866000
DEBXRV46 EQU   DEBXFLG1                                                 18867000
DEBXRV45 EQU   DEBXFLG1                                                 18868000
DEBXRV44 EQU   DEBXFLG1                                                 18869000
DEBXRV43 EQU   DEBXFLG1                                                 18870000
DEBXDSSI EQU   DEBXFLG1                                                 18871000
DEBXTSKC EQU   DEBXFLG1                                                 18872000
DEBXCDCB EQU   DEBXFLG1                                                 18873000
DEBXLNGH EQU   DEBXTN                                                   18874000
DEBTBLOF EQU   DEBPREFX+14                                              18875000
DEBAMTYP EQU   DEBPREFX+13                                              18876000
DEBLNGTH EQU   DEBPREFX+12                                              18877000
DEBDCBMK EQU   DEBXTNP                                                  18878000
DEBDSCBA EQU   DEBPREFX+1                                               18879000
DEBWKARA EQU   DEBPREFX                                                 18880000
DEBXCEAD EQU   DEBXCEA+1                                                18881000
DEBXCENP EQU   DEBXCEAB                                                 18882000
DEBRSV35 EQU   DEBXCEAB                                                 18883000
DEBRSV34 EQU   DEBXCEAB                                                 18884000
DEBRSV33 EQU   DEBXCEAB                                                 18885000
DEBRSV32 EQU   DEBXCEAB                                                 18886000
DEBCEAD  EQU   DEBCEA+1                                                 18887000
DEBCENP  EQU   DEBCEAB                                                  18888000
DEBRSV31 EQU   DEBCEAB                                                  18889000
DEBRSV30 EQU   DEBCEAB                                                  18890000
DEBRSV29 EQU   DEBCEAB                                                  18891000
DEBRSV28 EQU   DEBCEAB                                                  18892000
DEBPCIAD EQU   DEBPCIA+1                                                18893000
DEBPCINP EQU   DEBPCIAB                                                 18894000
DEBRSV27 EQU   DEBPCIAB                                                 18895000
DEBRSV26 EQU   DEBPCIAB                                                 18896000
DEBRSV25 EQU   DEBPCIAB                                                 18897000
DEBRSV24 EQU   DEBPCIAB                                                 18898000
DEBSIOAD EQU   DEBSIOA+1                                                18899000
DEBSIONP EQU   DEBSIOAB                                                 18900000
DEBFIX   EQU   DEBSIOAB                                                 18901000
DEBIOVR  EQU   DEBSIOAB                                                 18902000
DEBSIOX  EQU   DEBSIOAB                                                 18903000
DEBPGFX  EQU   DEBSIOAB                                                 18904000
DEBEOEAD EQU   DEBEOEA+1                                                18905000
DEBEOENP EQU   DEBEOEAB                                                 18906000
DEBRSV22 EQU   DEBEOEAB                                                 18907000
DEBRSV21 EQU   DEBEOEAB                                                 18908000
DEBRSV20 EQU   DEBEOEAB                                                 18909000
DEBRSV19 EQU   DEBEOEAB                                                 18910000
DEBSUBID EQU   DEBSUBNM                                                 18911000
DEBSIOA2 EQU   DEBACS08+24                                              18912000
DEBRPSIO EQU   DEBACS08+20                                              18913000
DEBFREED EQU   DEBACS08+16                                              18914000
@NM00131 EQU   DEBACS08+12                                              18915000
@NM00130 EQU   DEBACS08+8                                               18916000
DEBDISAD EQU   DEBACS08+4                                               18917000
@NM00129 EQU   DEBACS08                                                 18918000
DEBRPSST EQU   DEBACS07+64                                              18919000
DEBARECK EQU   DEBACS07+60                                              18920000
DEBAREWT EQU   DEBACS07+56                                              18921000
DEBACHK  EQU   DEBACS07+52                                              18922000
DEBAWRIT EQU   DEBACS07+48                                              18923000
DEBASETL EQU   DEBACS07+44                                              18924000
DEBAREAD EQU   DEBACS07+40                                              18925000
DEBCRECK EQU   DEBACS07+36                                              18926000
DEBCREWT EQU   DEBACS07+32                                              18927000
DEBCCHK  EQU   DEBACS07+28                                              18928000
DEBCWRIT EQU   DEBACS07+24                                              18929000
DEBCSETL EQU   DEBACS07+20                                              18930000
DEBCREAD EQU   DEBACS07+16                                              18931000
DEBWKPT5 EQU   DEBACS07+12                                              18932000
DEBWKPT4 EQU   DEBACS07+8                                               18933000
DEBGET   EQU   DEBACS07+4                                               18934000
@NM00128 EQU   DEBACS07                                                 18935000
DEBPUT   EQU   DEBACS06+4                                               18936000
DEBDCBFA EQU   DEBACS06                                                 18937000
DEBLUCBB EQU   DEBLUCBA+1                                               18938000
DEBRSV18 EQU   DEBLUCBA                                                 18939000
DEBFUCBB EQU   DEBFUCBA+1                                               18940000
DEBRSV17 EQU   DEBFUCBA                                                 18941000
DEBTCCWB EQU   DEBTCCWA+1                                               18942000
DEBRSV16 EQU   DEBTCCWA                                                 18943000
DEBTBFRB EQU   DEBTBFRA+1                                               18944000
DEBRSV15 EQU   DEBTBFRA                                                 18945000
DEBDBPEF EQU   DEBACS03+8                                               18946000
DEBDBPP  EQU   DEBACS03+4                                               18947000
DEBDTPP  EQU   DEBACS03                                                 18948000
DEBDBPE  EQU   DEBDBLK+1                                                18949000
DEBDBPT  EQU   DEBDBLK                                                  18950000
DEBEXTNM EQU   DEBDSNAM                                                 18951000
DEBLRECL EQU   DEBACSMD+14                                              18952000
DEBBLKSI EQU   DEBACSMD+12                                              18953000
DEBRSV14 EQU   DEBDSNM+4                                                18954000
DEBUTSAB EQU   DEBUTSAA+1                                               18955000
DEBRSV13 EQU   DEBUTSAA                                                 18956000
DEBVOLNM EQU   DEBACSMD+2                                               18957000
DEBVLSEQ EQU   DEBVOLSQ+1                                               18958000
DEBRSV42 EQU   DEBVOLBT                                                 18959000
DEBRSV41 EQU   DEBVOLBT                                                 18960000
DEBRSV40 EQU   DEBVOLBT                                                 18961000
DEBRSV39 EQU   DEBVOLBT                                                 18962000
DEBRSV38 EQU   DEBVOLBT                                                 18963000
DEBRSV37 EQU   DEBVOLBT                                                 18964000
DEBRSV36 EQU   DEBVOLBT                                                 18965000
DEBEXFUL EQU   DEBVOLBT                                                 18966000
DEBNMTRK EQU   DEBDASD+14                                               18967000
DEBENDHH EQU   DEBDASD+12                                               18968000
DEBENDCC EQU   DEBDASD+10                                               18969000
DEBBINUM EQU   DEBDASD+4                                                18970000
DEBUCBA  EQU   DEBUCBAD+1                                               18971000
DEBDVMOD EQU   DEBUCBAD                                                 18972000
DEBAPPB  EQU   DEBAPPAD+1                                               18973000
DEBEXSCL EQU   DEBAPPAD                                                 18974000
DEBDCBB  EQU   DEBDCBAD+1                                               18975000
DEBDEBID EQU   DEBPROTG                                                 18976000
DEBECBB  EQU   DEBECBAD+1                                               18977000
DEBPRIOR EQU   DEBECBAD                                                 18978000
DEBUSRPB EQU   DEBUSRPG+1                                               18979000
DEBNMEXT EQU   DEBUSRPG                                                 18980000
DEBRSV05 EQU   DEBBASIC+15                                              18981000
DEBXTNIN EQU   DEBFLGS1                                                 18982000
DEBAPFIN EQU   DEBFLGS1                                                 18983000
DEBF1CEV EQU   DEBFLGS1                                                 18984000
DEBCINDI EQU   DEBFLGS1                                                 18985000
DEBRSV02 EQU   DEBFLGS1                                                 18986000
DEBRSIOA EQU   DEBFLGS1                                                 18987000
DEBEOFDF EQU   DEBFLGS1                                                 18988000
DEBPWCKD EQU   DEBFLGS1                                                 18989000
DEBQSCNT EQU   DEBBASIC+13                                              18990000
DEBACCS  EQU   DEBOPATB                                                 18991000
DEBPOSIT EQU   DEBOPATB                                                 18992000
DEBZERO  EQU   DEBOPATB                                                 18993000
DEBABEND EQU   DEBOPATB                                                 18994000
DEBIRBB  EQU   DEBIRBAD+1                                               18995000
DEBRERR  EQU   DEBOFLGS                                                 18996000
DEBLABEL EQU   DEBOFLGS                                                 18997000
DEBSPLIT EQU   DEBOFLGS                                                 18998000
DEBDCB   EQU   DEBOFLGS                                                 18999000
DEBRLSE  EQU   DEBOFLGS                                                 19000000
DEBEOF   EQU   DEBOFLGS                                                 19001000
DEBDISP  EQU   DEBOFLGS                                                 19002000
DEBDEBB  EQU   DEBDEBAD+1                                               19003000
DEBAMLNG EQU   DEBDEBAD                                                 19004000
DEBTCBB  EQU   DEBTCBAD+1                                               19005000
DEBNMSUB EQU   DEBTCBAD                                                 19006000
NPBNDCB  EQU   NIPDCBSN                                                 19007000
NSCHDCPU EQU   NIPSCHDL+8                                               19008000
NSCHDPRM EQU   NIPSCHDL+4                                               19009000
NSCHDPTR EQU   NIPSCHDL                                                 19010000
@NM00121 EQU   NIPOPNPL+22                                              19011000
NOPNFLSX EQU   NOPNFL                                                   19012000
NOPNFLLC EQU   NOPNFL                                                   19013000
NOPNFLLB EQU   NOPNFL                                                   19014000
NOPNFLNB EQU   NOPNFL                                                   19015000
NOPNFLI  EQU   NOPNFL                                                   19016000
NOPNFLM  EQU   NOPNFL                                                   19017000
NOPNFAU  EQU   NOPNFL                                                   19018000
NOPNFRS  EQU   NOPNFL                                                   19019000
NOPNDSA  EQU   NOPNDS                                                   19020000
@NM00120 EQU   NIPMNTPL+21                                              19021000
NMNTFLB  EQU   NMNTFL                                                   19022000
NMNTFLC  EQU   NMNTFL                                                   19023000
NMNTFLI  EQU   NMNTFL                                                   19024000
NMNTFUS  EQU   NMNTFL                                                   19025000
@NM00119 EQU   NMNTFL                                                   19026000
NMNTUCB  EQU   NMNTVS                                                   19027000
NMNTDSA  EQU   NMNTDS                                                   19028000
NIPSPEA  EQU   NIPSPE+4                                                 19029000
NIPSPEQ  EQU   NIPSPE                                                   19030000
NWTORMSG EQU   NWTORLST+12                                              19031000
@NM00118 EQU   NWTORLST+11                                              19032000
@NM00117 EQU   NWTORFL                                                  19033000
NWTORFLB EQU   NWTORFL                                                  19034000
@NM00116 EQU   NWTORFL                                                  19035000
NWTORFLA EQU   NWTORFL                                                  19036000
NMTORRDL EQU   NWTORLST+8                                               19037000
NWTORECB EQU   NWTORLST+4                                               19038000
NWTORRPA EQU   NWTORLST                                                 19039000
@NM00115 EQU   NWTOFL                                                   19040000
NWTOFLNC EQU   NWTOFL                                                   19041000
NWTOFLNH EQU   NWTOFL                                                   19042000
NWTOLNG  EQU   NWTOHDR                                                  19043000
@NM00112 EQU   TCBXTNT2+32                                              19044000
TCBRV181 EQU   TCBRV173                                                 19045000
TCBRV180 EQU   TCBRV173                                                 19046000
TCBRV179 EQU   TCBRV173                                                 19047000
TCBRV178 EQU   TCBRV173                                                 19048000
TCBRV177 EQU   TCBRV173                                                 19049000
TCBRV176 EQU   TCBRV173                                                 19050000
TCBRV175 EQU   TCBRV173                                                 19051000
TCBRV174 EQU   TCBRV173                                                 19052000
TCBRV172 EQU   TCBRV164                                                 19053000
TCBRV171 EQU   TCBRV164                                                 19054000
TCBRV170 EQU   TCBRV164                                                 19055000
TCBRV169 EQU   TCBRV164                                                 19056000
TCBRV168 EQU   TCBRV164                                                 19057000
TCBRV167 EQU   TCBRV164                                                 19058000
TCBRV166 EQU   TCBRV164                                                 19059000
TCBRV165 EQU   TCBRV164                                                 19060000
TCBRV163 EQU   TCBRV155                                                 19061000
TCBRV162 EQU   TCBRV155                                                 19062000
TCBRV161 EQU   TCBRV155                                                 19063000
TCBRV160 EQU   TCBRV155                                                 19064000
TCBRV159 EQU   TCBRV155                                                 19065000
TCBRV158 EQU   TCBRV155                                                 19066000
TCBRV157 EQU   TCBRV155                                                 19067000
TCBRV156 EQU   TCBRV155                                                 19068000
TCBRV154 EQU   TCBRV146                                                 19069000
TCBRV153 EQU   TCBRV146                                                 19070000
TCBRV152 EQU   TCBRV146                                                 19071000
TCBRV151 EQU   TCBRV146                                                 19072000
TCBRV150 EQU   TCBRV146                                                 19073000
TCBRV149 EQU   TCBRV146                                                 19074000
TCBRV148 EQU   TCBRV146                                                 19075000
TCBRV147 EQU   TCBRV146                                                 19076000
TCBRV145 EQU   TCBXTNT2+26                                              19077000
TCBRV144 EQU   TCBXTNT2+24                                              19078000
TCBRV143 EQU   TCBXTNT2+20                                              19079000
TCBRV142 EQU   TCBXTNT2+16                                              19080000
TCBRSV49 EQU   TCBXTNT2+12                                              19081000
TCBEVENT EQU   TCBXTNT2+8                                               19082000
TCBRCMP  EQU   TCBXTNT2+5                                               19083000
TCBRSVAB EQU   TCBXTNT2+4                                               19084000
TCBGTFA  EQU   TCBGTF+1                                                 19085000
TCBRSV47 EQU   TCBTFLG                                                  19086000
TCBRSV46 EQU   TCBTFLG                                                  19087000
TCBRSV45 EQU   TCBTFLG                                                  19088000
TCBRSV44 EQU   TCBTFLG                                                  19089000
TCBRSV43 EQU   TCBTFLG                                                  19090000
TCBDSPIT EQU   TCBTFLG                                                  19091000
TCBERRTN EQU   TCBTFLG                                                  19092000
TCBASYNC EQU   TCBTFLG                                                  19093000
@NM00111 EQU   TCB+296                                                  19094000
TCBSVCA2 EQU   TCB+292                                                  19095000
TCBSWASA EQU   TCB+288                                                  19096000
TCBDBTB  EQU   TCB+284                                                  19097000
TCBRPT   EQU   TCB+280                                                  19098000
TCBRV141 EQU   TCBRV133                                                 19099000
TCBRV140 EQU   TCBRV133                                                 19100000
TCBRV139 EQU   TCBRV133                                                 19101000
TCBRV138 EQU   TCBRV133                                                 19102000
TCBRV137 EQU   TCBRV133                                                 19103000
TCBRV136 EQU   TCBRV133                                                 19104000
TCBRV135 EQU   TCBRV133                                                 19105000
TCBRV134 EQU   TCBRV133                                                 19106000
TCBRV132 EQU   TCBRV124                                                 19107000
TCBRV131 EQU   TCBRV124                                                 19108000
TCBRV130 EQU   TCBRV124                                                 19109000
TCBRV129 EQU   TCBRV124                                                 19110000
TCBRV128 EQU   TCBRV124                                                 19111000
TCBRV127 EQU   TCBRV124                                                 19112000
TCBRV126 EQU   TCBRV124                                                 19113000
TCBRV125 EQU   TCBRV124                                                 19114000
TCBRV123 EQU   TCBFBYT2                                                 19115000
TCBRV122 EQU   TCBFBYT2                                                 19116000
TCBECBNV EQU   TCBFBYT2                                                 19117000
TCBSSSYN EQU   TCBFBYT2                                                 19118000
TCBFPRAP EQU   TCBFBYT2                                                 19119000
TCBFDW   EQU   TCBFBYT2                                                 19120000
TCBFMW   EQU   TCBFBYT2                                                 19121000
TCBCNCB  EQU   TCBFBYT2                                                 19122000
TCBLLH   EQU   TCBFBYT1                                                 19123000
TCBRV113 EQU   TCBFBYT1                                                 19124000
TCBEOT   EQU   TCBFBYT1                                                 19125000
TCBRTM2  EQU   TCBFBYT1                                                 19126000
TCBPGNLY EQU   TCBFBYT1                                                 19127000
TCBNDIOS EQU   TCBFBYT1                                                 19128000
TCBRV327 EQU   TCBFBYT1                                                 19129000
TCBEOTFM EQU   TCBFBYT1                                                 19130000
TCBAFFN  EQU   TCB+274                                                  19131000
TCBRV326 EQU   TCB+272                                                  19132000
TCBUKYSP EQU   TCB+268                                                  19133000
TCBMODE  EQU   TCBESTAE+3                                               19134000
TCBERTYP EQU   TCBESTAE+2                                               19135000
TCBRV314 EQU   TCBESTRM                                                 19136000
TCBRV313 EQU   TCBESTRM                                                 19137000
TCBRV312 EQU   TCBESTRM                                                 19138000
TCBRV311 EQU   TCBESTRM                                                 19139000
TCBRV310 EQU   TCBESTRM                                                 19140000
TCBRV309 EQU   TCBESTRM                                                 19141000
TCBRV308 EQU   TCBESTRM                                                 19142000
TCBETERM EQU   TCBESTRM                                                 19143000
TCBSCBKY EQU   TCBESTAE                                                 19144000
TCBRTM12 EQU   TCB+260                                                  19145000
TCBTCBID EQU   TCB+256                                                  19146000
TCBSTAWA EQU   TCB+252                                                  19147000
TCBSWA   EQU   TCB+248                                                  19148000
TCBFOEA  EQU   TCBFOE+1                                                 19149000
TCBRSV42 EQU   TCBFOE                                                   19150000
TCBCCPVI EQU   TCBXSCT+2                                                19151000
TCBRV325 EQU   TCBXSCT+1                                                19152000
TCBRV324 EQU   TCBXSCT1                                                 19153000
TCBRV323 EQU   TCBXSCT1                                                 19154000
TCBRV322 EQU   TCBXSCT1                                                 19155000
TCBRV321 EQU   TCBXSCT1                                                 19156000
TCBRV320 EQU   TCBXSCT1                                                 19157000
TCBRV319 EQU   TCBXSCT1                                                 19158000
TCBS3A   EQU   TCBXSCT1                                                 19159000
TCBACTIV EQU   TCBXSCT1                                                 19160000
TCBRSV41 EQU   TCB+239                                                  19161000
TCBTID   EQU   TCB+238                                                  19162000
TCBRSVAA EQU   TCB+237                                                  19163000
TCBABCUR EQU   TCB+236                                                  19164000
TCBTMSAV EQU   TCB+232                                                  19165000
TCBIOTIM EQU   TCB+228                                                  19166000
TCBRTWA  EQU   TCB+224                                                  19167000
TCBBACK  EQU   TCB+220                                                  19168000
TCBTIRB  EQU   TCB+216                                                  19169000
TCBAECB  EQU   TCB+212                                                  19170000
TCBEXT2A EQU   TCBEXT2+1                                                19171000
TCBRSV39 EQU   TCBEXT2                                                  19172000
TCBSTMCT EQU   TCB+207                                                  19173000
TCBSYSCT EQU   TCB+206                                                  19174000
TCBRSV37 EQU   TCB+205                                                  19175000
TCBEXSVC EQU   TCBDAR                                                   19176000
TCBDARMS EQU   TCBDAR                                                   19177000
TCBDARWT EQU   TCBDAR                                                   19178000
TCBDARO  EQU   TCBDAR                                                   19179000
TCBDARMC EQU   TCBDARC                                                  19180000
TCBDARD  EQU   TCBDAR                                                   19181000
TCBDARS  EQU   TCBDAR                                                   19182000
TCBDARP  EQU   TCBDAR                                                   19183000
TCBGTOFM EQU   TCBFLGS7                                                 19184000
TCBADMP  EQU   TCBFLGS7                                                 19185000
TCBRSTSK EQU   TCBFLGS7                                                 19186000
TCBSVCS  EQU   TCBFLGS7                                                 19187000
TCBSTACK EQU   TCBFLGS7                                                 19188000
TCBRSV34 EQU   TCBFLGS7                                                 19189000
TCBRSV33 EQU   TCBFLGS7                                                 19190000
TCBGPECB EQU   TCBFLGS7                                                 19191000
TCBNTJS  EQU   TCBFLGS6                                                 19192000
TCBAPG   EQU   TCBFLGS6                                                 19193000
TCBMIGR  EQU   TCBFLGS6                                                 19194000
TCBRV303 EQU   TCBFLGS6                                                 19195000
TCBSPVLK EQU   TCBFLGS6                                                 19196000
TCBCPU   EQU   TCBFLGS6                                                 19197000
TCBPIE17 EQU   TCBFLGS6                                                 19198000
TCBRV    EQU   TCBFLGS6                                                 19199000
TCBRSV79 EQU   TCBNDSP5                                                 19200000
TCBRSV78 EQU   TCBNDSP5                                                 19201000
TCBRSV77 EQU   TCBNDSP5                                                 19202000
TCBRSV76 EQU   TCBNDSP5                                                 19203000
TCBRSV75 EQU   TCBNDSP5                                                 19204000
TCBRSV74 EQU   TCBNDSP5                                                 19205000
TCBRSV95 EQU   TCBNDSP5                                                 19206000
TCBRSV94 EQU   TCBNDSP5                                                 19207000
TCBRSV93 EQU   TCBNDSP4                                                 19208000
TCBRSV92 EQU   TCBNDSP4                                                 19209000
TCBRSV91 EQU   TCBNDSP4                                                 19210000
TCBRSV90 EQU   TCBNDSP4                                                 19211000
TCBRSV89 EQU   TCBNDSP4                                                 19212000
TCBRSV88 EQU   TCBNDSP4                                                 19213000
TCBRSV87 EQU   TCBNDSP4                                                 19214000
TCBRSV86 EQU   TCBNDSP4                                                 19215000
TCBEXT1A EQU   TCBEXT1+1                                                19216000
TCBRSV32 EQU   TCBEXT1                                                  19217000
TCBEXCPD EQU   TCB+192                                                  19218000
TCBIOBRC EQU   TCB+188                                                  19219000
TCBDDWTC EQU   TCB+186                                                  19220000
TCBDDEXC EQU   TCB+184                                                  19221000
TCBJSCBB EQU   TCBJSCB+1                                                19222000
@NM00110 EQU   TCBRECDE                                                 19223000
TCBREC   EQU   TCBRECDE                                                 19224000
TCBMDIDS EQU   TCB+176                                                  19225000
TCBNDINT EQU   TCBNDSP3                                                 19226000
TCBRSV27 EQU   TCBNDSP3                                                 19227000
TCBRSV26 EQU   TCBNDSP3                                                 19228000
TCBRSV25 EQU   TCBNDSP3                                                 19229000
TCBRSV24 EQU   TCBNDSP3                                                 19230000
TCBSRBND EQU   TCBNDSP3                                                 19231000
TCBRV302 EQU   TCBNDSP3                                                 19232000
TCBLJSND EQU   TCBNDSP3                                                 19233000
TCBABE   EQU   TCBNDSP2                                                 19234000
TCBDSS   EQU   TCBNDSP2                                                 19235000
TCBOWAIT EQU   TCBNDSP2                                                 19236000
TCBIWAIT EQU   TCBNDSP2                                                 19237000
TCBNDTS  EQU   TCBNDSP2                                                 19238000
TCBNDSVC EQU   TCBNDSP2                                                 19239000
TCBSTPP  EQU   TCBNDSP2                                                 19240000
TCBABD   EQU   TCBNDSP2                                                 19241000
TCBRSV22 EQU   TCBNDSP1                                                 19242000
TCBPIEND EQU   TCBNDSP1                                                 19243000
TCBTPSP  EQU   TCBNDSP1                                                 19244000
TCBDDRND EQU   TCBNDSP1                                                 19245000
TCBRSPND EQU   TCBNDSP1                                                 19246000
TCBRSTND EQU   TCBNDSP1                                                 19247000
TCBDARPN EQU   TCBNDSP1                                                 19248000
TCBDARTN EQU   TCBNDSP1                                                 19249000
TCBNDSP0 EQU   TCBNDSP                                                  19250000
TCBUSER  EQU   TCB+168                                                  19251000
TCBTCTB  EQU   TCBTCT+1                                                 19252000
TCBRSV9C EQU   TCBTCTGF                                                 19253000
TCBRSV9B EQU   TCBTCTGF                                                 19254000
TCBRSV9A EQU   TCBTCTGF                                                 19255000
TCBRSV99 EQU   TCBTCTGF                                                 19256000
TCBRSV98 EQU   TCBTCTGF                                                 19257000
TCBRSV97 EQU   TCBTCTGF                                                 19258000
TCBRSV20 EQU   TCBTCTGF                                                 19259000
TCBSMFGF EQU   TCBTCTGF                                                 19260000
TCBSTABB EQU   TCBSTAB+1                                                19261000
TCBSTCUR EQU   TCBNSTAE                                                 19262000
TCBRV301 EQU   TCBNSTAE                                                 19263000
TCBSYNCH EQU   TCBNSTAE                                                 19264000
TCBHALT  EQU   TCBNSTAE                                                 19265000
TCBPPSUP EQU   TCBNSTAE                                                 19266000
TCB33E   EQU   TCBNSTAE                                                 19267000
TCBQUIES EQU   TCBNSTAE                                                 19268000
TCBSTABE EQU   TCBNSTAE                                                 19269000
TCBAQE   EQU   TCB+156                                                  19270000
TCBPQE   EQU   TCB+152                                                  19271000
TCBTSDP  EQU   TCB+151                                                  19272000
TCBTSLP  EQU   TCB+150                                                  19273000
TCBSTPCT EQU   TCB+149                                                  19274000
TCBCPUBN EQU   TCBTSFLG                                                 19275000
TCBDYDSP EQU   TCBTSFLG                                                 19276000
TCBRSV18 EQU   TCBTSFLG                                                 19277000
TCBRSV17 EQU   TCBTSFLG                                                 19278000
TCBTIOTG EQU   TCBTSFLG                                                 19279000
TCBATT   EQU   TCBTSFLG                                                 19280000
TCBSTPPR EQU   TCBTSFLG                                                 19281000
TCBRV300 EQU   TCBTSTSK                                                 19282000
TCBECB   EQU   TCB+144                                                  19283000
TCBIQE   EQU   TCB+140                                                  19284000
TCBLTC   EQU   TCB+136                                                  19285000
TCBOTC   EQU   TCB+132                                                  19286000
TCBNTC   EQU   TCB+128                                                  19287000
TCBJSTCA EQU   TCBJSTCB+1                                               19288000
TCBRSV16 EQU   TCBJSTCB                                                 19289000
TCBTQET  EQU   TCBTME                                                   19290000
TCBTCB   EQU   TCB+116                                                  19291000
TCBFSAB  EQU   TCBFSA+1                                                 19292000
TCBQEL   EQU   TCBFSA                                                   19293000
TCBGRS15 EQU   TCBGRS+60                                                19294000
TCBGRS14 EQU   TCBGRS+56                                                19295000
TCBGRS13 EQU   TCBGRS+52                                                19296000
TCBGRS12 EQU   TCBGRS+48                                                19297000
TCBGRS11 EQU   TCBGRS+44                                                19298000
TCBGRS10 EQU   TCBGRS+40                                                19299000
TCBGRS9  EQU   TCBGRS+36                                                19300000
TCBGRS8  EQU   TCBGRS+32                                                19301000
TCBGRS7  EQU   TCBGRS+28                                                19302000
TCBGRS6  EQU   TCBGRS+24                                                19303000
TCBGRS5  EQU   TCBGRS+20                                                19304000
TCBGRS4  EQU   TCBGRS+16                                                19305000
TCBGRS3  EQU   TCBGRS+12                                                19306000
TCBGRS2  EQU   TCBGRS+8                                                 19307000
TCBGRS1  EQU   TCBGRS+4                                                 19308000
TCBGRS0  EQU   TCBGRS                                                   19309000
TCBRSV15 EQU   TCBPURGE                                                 19310000
TCBRSV14 EQU   TCBPURGE                                                 19311000
TCBRSV13 EQU   TCBPURGE                                                 19312000
TCBRSV12 EQU   TCBPURGE                                                 19313000
TCBRSV11 EQU   TCBPURGE                                                 19314000
TCBRSV10 EQU   TCBPURGE                                                 19315000
TCBRSV09 EQU   TCBPURGE                                                 19316000
TCBJPQF  EQU   TCBPURGE                                                 19317000
TCBJLB   EQU   TCB+40                                                   19318000
TCBDSP   EQU   TCB+35                                                   19319000
TCBLMP   EQU   TCB+34                                                   19320000
TCBPNDSP EQU   TCBFLGS5                                                 19321000
TCBFCD1  EQU   TCBFLGS5                                                 19322000
TCBSTP   EQU   TCBFLGS5                                                 19323000
TCBSYS   EQU   TCBFLGS5                                                 19324000
TCBANDSP EQU   TCBFLGS5                                                 19325000
TCBPAGE  EQU   TCBFLGS5                                                 19326000
TCBUXNDF EQU   TCBABWF                                                  19327000
TCBFC    EQU   TCBFLGS5                                                 19328000
TCBONDSP EQU   TCBFLGS4                                                 19329000
TCBMPCND EQU   TCBFLGS4                                                 19330000
TCBMPCVQ EQU   TCBFLGS4                                                 19331000
TCBUXNDV EQU   TCBFLGS4                                                 19332000
TCBHNDSP EQU   TCBFLGS4                                                 19333000
TCBRQENA EQU   TCBFLGS4                                                 19334000
TCBSER   EQU   TCBFLGS4                                                 19335000
TCBNDUMP EQU   TCBFLGS4                                                 19336000
TCBDWSTA EQU   TCBFLGS3                                                 19337000
TCBRSV08 EQU   TCBFLGS3                                                 19338000
TCBRSV07 EQU   TCBFLGS3                                                 19339000
TCBRSV06 EQU   TCBFLGS3                                                 19340000
TCBABGM  EQU   TCBFLGS3                                                 19341000
TCBABTRM EQU   TCBFLGS3                                                 19342000
TCBADINP EQU   TCBFLGS3                                                 19343000
TCBFSM   EQU   TCBFLGS3                                                 19344000
TCBFTS   EQU   TCBFLGS2                                                 19345000
TCBFETXR EQU   TCBFLGS2                                                 19346000
TCBFDSOP EQU   TCBFLGS2                                                 19347000
TCBFJMC  EQU   TCBFLGS2                                                 19348000
TCBFSMC  EQU   TCBFLGS2                                                 19349000
TCBFABOP EQU   TCBFLGS2                                                 19350000
TCBFSTI  EQU   TCBFLGS2                                                 19351000
TCBFOINP EQU   TCBFLGS2                                                 19352000
TCBFX    EQU   TCBFLGS1                                                 19353000
TCBFS    EQU   TCBFLGS1                                                 19354000
TCBFT    EQU   TCBFLGS1                                                 19355000
TCBPDUMP EQU   TCBFLGS1                                                 19356000
TCBNONPR EQU   TCBFLGS1                                                 19357000
TCBFERA  EQU   TCBFLGS1                                                 19358000
TCBFE    EQU   TCBFLGS1                                                 19359000
TCBFA    EQU   TCBFLGS1                                                 19360000
TCBZERO  EQU   TCBPKF                                                   19361000
TCBFLAG  EQU   TCBPKF                                                   19362000
TCBMSSB  EQU   TCBMSS+1                                                 19363000
TCBRSV03 EQU   TCBMSS                                                   19364000
TCBTRNB  EQU   TCBTRN+1                                                 19365000
TCBRSV02 EQU   TCBABF                                                   19366000
TCBOLTEP EQU   TCBABF                                                   19367000
TCBTCP   EQU   TCBABF                                                   19368000
TCBTCPP  EQU   TCBABF                                                   19369000
TCBRSV01 EQU   TCBABF                                                   19370000
TCBGRPH  EQU   TCBABF                                                   19371000
TCBNOCHK EQU   TCBABF                                                   19372000
TCBMOD91 EQU   TCBABF                                                   19373000
TCBCMPC  EQU   TCBCMP+1                                                 19374000
TCBRV318 EQU   TCBCMSG                                                  19375000
TCBRV317 EQU   TCBCIND                                                  19376000
TCBRV316 EQU   TCBCWTO                                                  19377000
TCBCASID EQU   TCBCDBL                                                  19378000
TCBNOCC  EQU   TCBSTCC                                                  19379000
TCBDMPO  EQU   TCBCPP                                                   19380000
TCBCSTEP EQU   TCBCMPF                                                  19381000
TCBCREQ  EQU   TCBCMPF                                                  19382000
TCBTIO   EQU   TCB+12                                                   19383000
TCBDEB   EQU   TCB+8                                                    19384000
TCBPIEA  EQU   TCBPIE+1                                                 19385000
TCBPM    EQU   TCBPMASK                                                 19386000
@NM00109 EQU   TCBPMASK                                                 19387000
TCBRBP   EQU   TCB                                                      19388000
TCBFRS6  EQU   TCBFRS+24                                                19389000
TCBFRS4  EQU   TCBFRS+16                                                19390000
TCBFRS2  EQU   TCBFRS+8                                                 19391000
TCBFRS0  EQU   TCBFRS                                                   19392000
@NM00108 EQU   SCVTSECT+180                                             19393000
@NM00107 EQU   SCVTSECT+176                                             19394000
SCVTPIQE EQU   SCVTSECT+172                                             19395000
@NM00106 EQU   SCVTSECT+168                                             19396000
SCVTPTRM EQU   SCVTSECT+164                                             19397000
@NM00105 EQU   SCVTSECT+160                                             19398000
@NM00104 EQU   SCVTSECT+156                                             19399000
SCVTQCBR EQU   SCVTSECT+152                                             19400000
SCVTSTAT EQU   SCVTSECT+148                                             19401000
@NM00103 EQU   SCVTSECT+144                                             19402000
SCVTTQE  EQU   SCVTSECT+140                                             19403000
@NM00102 EQU   SCVTSECT+136                                             19404000
@NM00101 EQU   SCVTSECT+128                                             19405000
@NM00100 EQU   SCVTSECT+124                                             19406000
SCVTRXLQ EQU   SCVTSECT+120                                             19407000
@NM00099 EQU   SCVTSECT+116                                             19408000
SCVTCTCB EQU   SCVTSECT+112                                             19409000
@NM00098 EQU   SCVTSECT+108                                             19410000
@NM00097 EQU   SCVTSECT+104                                             19411000
@NM00096 EQU   SCVTSECT+100                                             19412000
@NM00095 EQU   SCVTSECT+96                                              19413000
SCVTCOMM EQU   SCVTSECT+92                                              19414000
@NM00094 EQU   SCVTSECT+88                                              19415000
@NM00093 EQU   SCVTSECT+84                                              19416000
@NM00092 EQU   SCVTSECT+80                                              19417000
@NM00091 EQU   SCVTSECT+76                                              19418000
@NM00090 EQU   SCVTSECT+72                                              19419000
SCVTGMBR EQU   SCVTSECT+68                                              19420000
SCVTRPTR EQU   SCVTSECT+64                                              19421000
SCVTHSKP EQU   SCVTSECT+60                                              19422000
@NM00089 EQU   SCVTSECT+56                                              19423000
@NM00088 EQU   SCVTSECT+52                                              19424000
SCVTLFRM EQU   SCVTSECT+48                                              19425000
SCVTCDCL EQU   SCVTSECT+44                                              19426000
@NM00087 EQU   SCVTSECT+40                                              19427000
SCVTRACE EQU   SCVTSECT+36                                              19428000
@NM00086 EQU   SCVTSECT+32                                              19429000
SCVTRMBR EQU   SCVTSECT+28                                              19430000
@NM00085 EQU   SCVTSECT+24                                              19431000
@NM00084 EQU   SCVTSECT+20                                              19432000
@NM00083 EQU   SCVTSECT+16                                              19433000
@NM00082 EQU   SCVTSECT+14                                              19434000
SCVTBR14 EQU   SCVTSECT+12                                              19435000
SCVTSPET EQU   SCVTSECT+8                                               19436000
SCVTPGWR EQU   SCVTSECT+4                                               19437000
SCVTPGTM EQU   SCVTSECT                                                 19438000
PDSS04ND EQU   PDSS04+2                                                 19439000
PDSAPFAC EQU   PDSAPF+1                                                 19440000
PDSAPFCT EQU   PDSAPF                                                   19441000
PDSS03ND EQU   PDSS03+4                                                 19442000
PDSMBRSN EQU   PDSSSIWD+2                                               19443000
PDSIBMMB EQU   PDSSSIFB                                                 19444000
PDSSYSGN EQU   PDSSSIFB                                                 19445000
PDSDEPCH EQU   PDSSSIFB                                                 19446000
PDSEMFIX EQU   PDSSSIFB                                                 19447000
PDSUSRCH EQU   PDSSSIFB                                                 19448000
PDSFORCE EQU   PDSSSIFB                                                 19449000
@NM00081 EQU   PDSSSIFB                                                 19450000
PDSCHLVL EQU   PDSSSIWD                                                 19451000
PDSS02ND EQU   PDSS02+11                                                19452000
PDS2EPM  EQU   PDSS02                                                   19453000
PDSS01ND EQU   PDSS01+8                                                 19454000
PDS2ESDC EQU   PDSS01+6                                                 19455000
PDS2ESDT EQU   PDSS01+4                                                 19456000
PDS2TTSZ EQU   PDSS01+2                                                 19457000
PDS2SLSZ EQU   PDSS01                                                   19458000
PDS2FTB3 EQU   PDS2FTBO+2                                               19459000
PDS2FTB2 EQU   PDS2FTBO+1                                               19460000
@NM00080 EQU   PDS2FTB1                                                 19461000
@NM00079 EQU   PDS2FTB1                                                 19462000
PDS2LEF  EQU   PDS2ATR2                                                 19463000
PDS2TSTN EQU   PDS2ATR2                                                 19464000
PDS2NREP EQU   PDS2ATR2                                                 19465000
PDS2FLVL EQU   PDS2ATR2                                                 19466000
PDS2TEST EQU   PDS2ATR1                                                 19467000
PDS2OVLY EQU   PDS2ATR1                                                 19468000
PDS2NL   EQU   PDS2+21                                                  19469000
PDS2TTRN EQU   PDS2+18                                                  19470000
PDS2ZERO EQU   PDS2+17                                                  19471000
PDS2USRD EQU   PDS2TTRT                                                 19472000
PDS2LUSR EQU   PDS2INDC                                                 19473000
PDS2NTTR EQU   PDS2INDC                                                 19474000
PDS2LIBF EQU   PDS2+12                                                  19475000
PDS2CNCT EQU   PDS2+11                                                  19476000
CVTLEVL  EQU   CVTRELNO+2                                               19477000
CVTNUMB  EQU   CVTRELNO                                                 19478000
CVTMDL   EQU   CVTFIX+250                                               19479000
@NM00077 EQU   CVTFIX+248                                               19480000
@NM00076 EQU   CVTFIX                                                   19481000
CVTRV482 EQU   CVTXTNT2+128                                             19482000
CVTRV481 EQU   CVTXTNT2+124                                             19483000
CVTRV480 EQU   CVTXTNT2+120                                             19484000
CVTRV479 EQU   CVTXTNT2+118                                             19485000
CVTRV478 EQU   CVTXTNT2+117                                             19486000
CVTRV477 EQU   CVTXTNT2+116                                             19487000
CVTRV476 EQU   CVTXTNT2+115                                             19488000
CVTRV475 EQU   CVTXTNT2+114                                             19489000
CVTRV474 EQU   CVTRV466                                                 19490000
CVTRV473 EQU   CVTRV466                                                 19491000
CVTRV472 EQU   CVTRV466                                                 19492000
CVTRV471 EQU   CVTRV466                                                 19493000
CVTRV470 EQU   CVTRV466                                                 19494000
CVTRV469 EQU   CVTRV466                                                 19495000
CVTRV468 EQU   CVTRV466                                                 19496000
CVTRV467 EQU   CVTRV466                                                 19497000
CVTRV465 EQU   CVTRV457                                                 19498000
CVTRV464 EQU   CVTRV457                                                 19499000
CVTRV463 EQU   CVTRV457                                                 19500000
CVTRV462 EQU   CVTRV457                                                 19501000
CVTRV461 EQU   CVTRV457                                                 19502000
CVTRV460 EQU   CVTRV457                                                 19503000
CVTRV459 EQU   CVTRV457                                                 19504000
CVTRV458 EQU   CVTRV457                                                 19505000
CVTRV456 EQU   CVTXTNT2+108                                             19506000
CVTRV455 EQU   CVTXTNT2+104                                             19507000
CVTRV454 EQU   CVTXTNT2+100                                             19508000
CVTRV453 EQU   CVTXTNT2+96                                              19509000
CVTRV452 EQU   CVTXTNT2+94                                              19510000
CVTRV451 EQU   CVTXTNT2+92                                              19511000
CVTRV450 EQU   CVTXTNT2+90                                              19512000
CVTRV449 EQU   CVTXTNT2+88                                              19513000
CVTRV448 EQU   CVTXTNT2+87                                              19514000
CVTRV447 EQU   CVTXTNT2+86                                              19515000
CVTRV446 EQU   CVTRV438                                                 19516000
CVTRV445 EQU   CVTRV438                                                 19517000
CVTRV444 EQU   CVTRV438                                                 19518000
CVTRV443 EQU   CVTRV438                                                 19519000
CVTRV442 EQU   CVTRV438                                                 19520000
CVTRV441 EQU   CVTRV438                                                 19521000
CVTRV440 EQU   CVTRV438                                                 19522000
CVTRV439 EQU   CVTRV438                                                 19523000
CVTRV437 EQU   CVTRV429                                                 19524000
CVTRV436 EQU   CVTRV429                                                 19525000
CVTRV435 EQU   CVTRV429                                                 19526000
CVTRV434 EQU   CVTRV429                                                 19527000
CVTRV433 EQU   CVTRV429                                                 19528000
CVTRV432 EQU   CVTRV429                                                 19529000
CVTRV431 EQU   CVTRV429                                                 19530000
CVTRV430 EQU   CVTRV429                                                 19531000
CVTRV428 EQU   CVTXTNT2+80                                              19532000
CVTRV427 EQU   CVTXTNT2+76                                              19533000
CVTRV426 EQU   CVTXTNT2+72                                              19534000
CVTRV425 EQU   CVTXTNT2+68                                              19535000
CVTATACT EQU   CVTATCVT                                                 19536000
CVTRV423 EQU   CVTXTNT2+62                                              19537000
CVTRV422 EQU   CVTXTNT2+60                                              19538000
CVTRV421 EQU   CVTXTNT2+58                                              19539000
CVTRV420 EQU   CVTXTNT2+56                                              19540000
CVTRV419 EQU   CVTXTNT2+55                                              19541000
CVTRV418 EQU   CVTXTNT2+54                                              19542000
CVTRV417 EQU   CVTRV409                                                 19543000
CVTRV416 EQU   CVTRV409                                                 19544000
CVTRV415 EQU   CVTRV409                                                 19545000
CVTRV414 EQU   CVTRV409                                                 19546000
CVTRV413 EQU   CVTRV409                                                 19547000
CVTRV412 EQU   CVTRV409                                                 19548000
CVTRV411 EQU   CVTRV409                                                 19549000
CVTRV410 EQU   CVTRV409                                                 19550000
CVTRV408 EQU   CVTRV400                                                 19551000
CVTRV407 EQU   CVTRV400                                                 19552000
CVTRV406 EQU   CVTRV400                                                 19553000
CVTRV405 EQU   CVTRV400                                                 19554000
CVTRV404 EQU   CVTRV400                                                 19555000
CVTRV403 EQU   CVTRV400                                                 19556000
CVTRV402 EQU   CVTRV400                                                 19557000
CVTRV401 EQU   CVTRV400                                                 19558000
CVTICB   EQU   CVTXTNT2+48                                              19559000
CVTSKTA  EQU   CVTXTNT2+44                                              19560000
CVTRSV99 EQU   CVTXTNT2+40                                              19561000
CVTRSV98 EQU   CVTXTNT2+36                                              19562000
CVTRSV97 EQU   CVTXTNT2+34                                              19563000
CVTRSV96 EQU   CVTXTNT2+32                                              19564000
CVTOLTEP EQU   CVTXTNT2+28                                              19565000
CVTQIDA  EQU   CVTQID+1                                                 19566000
CVTRSV95 EQU   CVTQID                                                   19567000
CVTRSV94 EQU   CVTXTNT2+20                                              19568000
CVTRSV93 EQU   CVTXTNT2+16                                              19569000
CVTRSV92 EQU   CVTXTNT2+12                                              19570000
CVTDEBVR EQU   CVTXTNT2+8                                               19571000
CVTRSV91 EQU   CVTXTNT2+6                                               19572000
CVTRSV9H EQU   CVTFLGBT                                                 19573000
CVTRSV9G EQU   CVTFLGBT                                                 19574000
CVTRSV9F EQU   CVTFLGBT                                                 19575000
CVTRSV9E EQU   CVTFLGBT                                                 19576000
CVTRSV9D EQU   CVTFLGBT                                                 19577000
CVTRSV9C EQU   CVTFLGBT                                                 19578000
CVTVME   EQU   CVTFLGBT                                                 19579000
CVTNPE   EQU   CVTFLGBT                                                 19580000
CVTNUCLS EQU   CVTXTNT2+4                                               19581000
CVTDSSVA EQU   CVTDSSV+1                                                19582000
CVTRSV89 EQU   CVTDSSV                                                  19583000
CVTRSV88 EQU   CVTXTNT1+8                                               19584000
CVTRSV87 EQU   CVTXTNT1+4                                               19585000
CVTFACHN EQU   CVTXTNT1                                                 19586000
CVTRV488 EQU   CVTMAP+412                                               19587000
CVTRV487 EQU   CVTMAP+408                                               19588000
CVTRV486 EQU   CVTMAP+404                                               19589000
CVTRV485 EQU   CVTMAP+400                                               19590000
CVTACTAP EQU   CVTMAP+396                                               19591000
CVTAUTH  EQU   CVTMAP+392                                               19592000
CVTATMCA EQU   CVTATMCT+1                                               19593000
CVTATMST EQU   CVTATMCT                                                 19594000
CVTRSV61 EQU   CVTMAP+384                                               19595000
CVTVOLT1 EQU   CVTVOLM1+1                                               19596000
CVTVOLI1 EQU   CVTVOLF1                                                 19597000
CVTSTOA  EQU   CVTMAP+376                                               19598000
CVTRSV58 EQU   CVTMAP+374                                               19599000
CVTRSV57 EQU   CVTMAP+372                                               19600000
CVTDDCE  EQU   CVTMAP+368                                               19601000
CVTPNWFR EQU   CVTMAP+364                                               19602000
CVTSMF   EQU   CVTMAP+360                                               19603000
CVTSULK  EQU   CVTMAP+358                                               19604000
CVTSLKO  EQU   CVTSYSK                                                  19605000
CVTSLKP  EQU   CVTSYSK                                                  19606000
CVTSLKQ  EQU   CVTSYSK                                                  19607000
CVTSLKR  EQU   CVTSYSK                                                  19608000
CVTRSV56 EQU   CVTSYSK                                                  19609000
CVTRSV55 EQU   CVTSYSK                                                  19610000
CVTRSV54 EQU   CVTSYSK                                                  19611000
CVTRSV53 EQU   CVTSYSK                                                  19612000
CVTRSV52 EQU   CVTA1F1                                                  19613000
CVTRSV51 EQU   CVTA1F1                                                  19614000
CVTRSV50 EQU   CVTA1F1                                                  19615000
CVTRSV49 EQU   CVTA1F1                                                  19616000
CVTRSV48 EQU   CVTA1F1                                                  19617000
CVTRSV47 EQU   CVTA1F1                                                  19618000
CVTSRSW  EQU   CVTA1F1                                                  19619000
CVTPFSW  EQU   CVTA1F1                                                  19620000
CVTPCVT  EQU   CVTMAP+352                                               19621000
CVTRSV46 EQU   CVTMAP+344                                               19622000
CVTRSV45 EQU   CVTMAP+340                                               19623000
CVTRSV44 EQU   CVTMAP+338                                               19624000
CVTRSV43 EQU   CVTMAP+336                                               19625000
CVTHJESA EQU   CVTHJES+1                                                19626000
CVTRSV42 EQU   CVTHJES                                                  19627000
CVTEXT2A EQU   CVTEXT2+1                                                19628000
CVTRSV41 EQU   CVTEXT2                                                  19629000
CVTAPFA  EQU   CVTAPF+1                                                 19630000
CVTRSV40 EQU   CVTAPF                                                   19631000
CVTRV518 EQU   CVTINTLA                                                 19632000
CVTRV517 EQU   CVTERPV                                                  19633000
CVTEORM  EQU   CVTMAP+312                                               19634000
CVTMCHPR EQU   CVTMAP+308                                               19635000
CVTTZ    EQU   CVTMAP+304                                               19636000
CVTJEPS  EQU   CVTMAP+300                                               19637000
CVTJESCT EQU   CVTMAP+296                                               19638000
CVTMODE  EQU   CVTMAP+292                                               19639000
CVTPTRV  EQU   CVTMAP+288                                               19640000
CVTREAL  EQU   CVTMAP+284                                               19641000
CVTRSV39 EQU   CVTMAP+280                                               19642000
CVTRSV38 EQU   CVTMAP+276                                               19643000
CVTDMSRA EQU   CVTDMSR+1                                                19644000
CVTRV634 EQU   CVTDMSRF                                                 19645000
CVTRV633 EQU   CVTDMSRF                                                 19646000
CVTRV632 EQU   CVTDMSRF                                                 19647000
CVTRV631 EQU   CVTDMSRF                                                 19648000
CVTRV630 EQU   CVTDMSRF                                                 19649000
CVTRV629 EQU   CVTDMSRF                                                 19650000
CVTUDUMP EQU   CVTDMSRF                                                 19651000
CVTSDUMP EQU   CVTDMSRF                                                 19652000
CVTQMSGA EQU   CVTQMSG+1                                                19653000
CVTRSV36 EQU   CVTQMSG                                                  19654000
CVTAMFF  EQU   CVTMAP+264                                               19655000
CVTPURGA EQU   CVTPURG+1                                                19656000
CVTRSV35 EQU   CVTPURG                                                  19657000
CVTCBSP  EQU   CVTMAP+256                                               19658000
CVTATERA EQU   CVTATER+1                                                19659000
CVTSYST  EQU   CVTATER                                                  19660000
CVTVOLT2 EQU   CVTTAT                                                   19661000
CVTVOLI2 EQU   CVTVOLF2                                                 19662000
CVTAQAVB EQU   CVTAQAVT+1                                               19663000
CVTRSV34 EQU   CVTTCMFG                                                 19664000
CVTRSV33 EQU   CVTTCMFG                                                 19665000
CVTRSV32 EQU   CVTTCMFG                                                 19666000
CVTRSV31 EQU   CVTTCMFG                                                 19667000
CVTRSV30 EQU   CVTTCMFG                                                 19668000
CVTRSV29 EQU   CVTTCMFG                                                 19669000
CVTLDEV  EQU   CVTTCMFG                                                 19670000
CVTTCRDY EQU   CVTTCMFG                                                 19671000
CVTGTFA  EQU   CVTGTF+1                                                 19672000
CVTRSV27 EQU   CVTGTFST                                                 19673000
CVTRNIO  EQU   CVTGTFST                                                 19674000
CVTUSR   EQU   CVTGTFST                                                 19675000
CVTRV318 EQU   CVTFORM                                                  19676000
CVTRV317 EQU   CVTTMODE                                                 19677000
CVTRV316 EQU   CVTSTATE                                                 19678000
CVTRV315 EQU   CVTGTFS                                                  19679000
CVTGTFAV EQU   CVTGTFS                                                  19680000
CVT0SCR1 EQU   CVTMAP+232                                               19681000
CVTRV515 EQU   CVTMAP+228                                               19682000
CVTRMS   EQU   CVTMAP+224                                               19683000
CVTPATCH EQU   CVTMAP+220                                               19684000
CVTTSCE  EQU   CVTMAP+216                                               19685000
CVTLNKSC EQU   CVTMAP+214                                               19686000
CVTQABST EQU   CVTMAP+212                                               19687000
CVTMDLDS EQU   CVTMAP+208                                               19688000
CVTUSER  EQU   CVTMAP+204                                               19689000
CVTSMCA  EQU   CVTMAP+196                                               19690000
CVTRSV18 EQU   CVTMAP+192                                               19691000
CVTQCDSR EQU   CVTMAP+184                                               19692000
CVTRSV17 EQU   CVTOPTB                                                  19693000
CVTRSV16 EQU   CVTOPTB                                                  19694000
CVTFP    EQU   CVTOPTB                                                  19695000
CVTTOD   EQU   CVTOPTB                                                  19696000
CVTCTIMS EQU   CVTOPTB                                                  19697000
CVTPROT  EQU   CVTOPTB                                                  19698000
CVTXPFP  EQU   CVTOPTA                                                  19699000
CVTASCII EQU   CVTOPTA                                                  19700000
CVTRSV13 EQU   CVTOPTA                                                  19701000
CVTRSV12 EQU   CVTOPTA                                                  19702000
CVTNIP   EQU   CVTOPTA                                                  19703000
CVTDDR   EQU   CVTOPTA                                                  19704000
CVTAPR   EQU   CVTOPTA                                                  19705000
CVTCCH   EQU   CVTOPTA                                                  19706000
CVTSNCTR EQU   CVTMAP+180                                               19707000
CVTQMWR  EQU   CVTMAP+176                                               19708000
CVTQOCR  EQU   CVTMAP+172                                               19709000
CVT1EF00 EQU   CVTMAP+168                                               19710000
CVTMZ00  EQU   CVTMAP+164                                               19711000
CVTHEAD  EQU   CVTMAP+160                                               19712000
CVTRSV11 EQU   CVTMAP+156                                               19713000
CVTMSER  EQU   CVTMAP+148                                               19714000
CVTRV516 EQU   CVTIERLC                                                 19715000
CVTILCH  EQU   CVTMAP+140                                               19716000
CVT0DS   EQU   CVTMAP+136                                               19717000
CVTNUCB  EQU   CVTMAP+128                                               19718000
CVTIXAVL EQU   CVTMAP+124                                               19719000
CVTIOQET EQU   CVTMAP+120                                               19720000
CVTDCBA  EQU   CVTMAP+117                                               19721000
CVTMVS2  EQU   CVTDCB                                                   19722000
CVT6DAT  EQU   CVTDCB                                                   19723000
CVT4MPS  EQU   CVTDCB                                                   19724000
CVTRSV09 EQU   CVTDCB                                                   19725000
CVT4MS1  EQU   CVTDCB                                                   19726000
CVT2SPS  EQU   CVTDCB                                                   19727000
CVT1SSS  EQU   CVTDCB                                                   19728000
CVTRSV08 EQU   CVTDCB                                                   19729000
CVTSTB   EQU   CVTMAP+112                                               19730000
CVTQTD00 EQU   CVTMAP+108                                               19731000
CVTQTE00 EQU   CVTMAP+104                                               19732000
CVTCUCB  EQU   CVTMAP+100                                               19733000
CVTSJQ   EQU   CVTMAP+96                                                19734000
CVTPBLDL EQU   CVTMAP+92                                                19735000
CVTTPC   EQU   CVTMAP+88                                                19736000
CVTBRET  EQU   CVTMAP+82                                                19737000
CVTEXIT  EQU   CVTMAP+80                                                19738000
CVT0FN00 EQU   CVTMAP+76                                                19739000
CVTDARA  EQU   CVTDAR+1                                                 19740000
CVTRSV07 EQU   CVTFLGS1                                                 19741000
CVTRSV06 EQU   CVTFLGS1                                                 19742000
CVTRSV05 EQU   CVTFLGS1                                                 19743000
CVTRSV04 EQU   CVTFLGS1                                                 19744000
CVTRSV03 EQU   CVTFLGS1                                                 19745000
CVTRSV02 EQU   CVTFLGS1                                                 19746000
CVTRSV01 EQU   CVTFLGS1                                                 19747000
CVTDMPLK EQU   CVTFLGS1                                                 19748000
CVTXITP  EQU   CVTMAP+68                                                19749000
CVTZDTAB EQU   CVTMAP+64                                                19750000
CVTMSLT  EQU   CVTMAP+60                                                19751000
CVTDATE  EQU   CVTMAP+56                                                19752000
CVTBTERM EQU   CVTMAP+52                                                19753000
CVTSYSAD EQU   CVTMAP+48                                                19754000
CVTXTLER EQU   CVTMAP+44                                                19755000
CVTILK2  EQU   CVTMAP+40                                                19756000
CVTILK1  EQU   CVTMAP+36                                                19757000
CVTPRLTV EQU   CVTMAP+32                                                19758000
CVT0VL00 EQU   CVTMAP+24                                                19759000
CVTXAPG  EQU   CVTMAP+20                                                19760000
CVTBUF   EQU   CVTMAP+16                                                19761000
CVTJOB   EQU   CVTMAP+12                                                19762000
CVTLINK  EQU   CVTMAP+8                                                 19763000
CVT0EF00 EQU   CVTMAP+4                                                 19764000
CVTTCBP  EQU   CVTMAP                                                   19765000
CVT      EQU   CVTMAP                                                   19766000
NVTRMSG  EQU   NVT+540                                                  19767000
NVTRLOCK EQU   NVT+536                                                  19768000
NVTRCODE EQU   NVT+532                                                  19769000
@NM00075 EQU   NVT+529                                                  19770000
@NM00074 EQU   NVTFLPO                                                  19771000
NVTFLWS  EQU   NVTFLPO                                                  19772000
@NM00073 EQU   NVTFLPO                                                  19773000
NVTSYSP  EQU   NVTFLPO                                                  19774000
NVTFLLST EQU   NVTFLPO                                                  19775000
NVTRSV48 EQU   NVT+524                                                  19776000
NVTRSV47 EQU   NVT+520                                                  19777000
NVTRSV46 EQU   NVT+516                                                  19778000
@NM00072 EQU   NVT+512                                                  19779000
NVTREALR EQU   NVT+508                                                  19780000
NVTFASVT EQU   NVT+504                                                  19781000
NVTRSV45 EQU   NVT+496                                                  19782000
NVTVRLNG EQU   NVT+492                                                  19783000
NVTVRREG EQU   NVT+488                                                  19784000
NVTRSV4A EQU   NVT+480                                                  19785000
NVTRMSS  EQU   NVT+472                                                  19786000
NVTRPQE  EQU   NVT+468                                                  19787000
NVTRLLE  EQU   NVT+464                                                  19788000
NVTRJPQ  EQU   NVT+460                                                  19789000
NVTVMSS  EQU   NVT+456                                                  19790000
NVTVPQE  EQU   NVT+452                                                  19791000
NVTVLLE  EQU   NVT+448                                                  19792000
NVTVJPQ  EQU   NVT+444                                                  19793000
NVTLSEC  EQU   NVTLOCAT+4                                               19794000
NVTLFST  EQU   NVTLOCAT                                                 19795000
NVTXSEC  EQU   NVTXCTL+4                                                19796000
NVTXFST  EQU   NVTXCTL                                                  19797000
@NM00071 EQU   NVT+425                                                  19798000
NVTLPACT EQU   NVT+424                                                  19799000
NVTCSLPG EQU   NVT+420                                                  19800000
@NM00070 EQU   NVT+392                                                  19801000
NVTSPUCB EQU   NVT+382                                                  19802000
NVTRSV44 EQU   NVT+380                                                  19803000
NVTQSBUF EQU   NVT+376                                                  19804000
NVTRSV43 EQU   NVT+364                                                  19805000
@NM00069 EQU   NVT+363                                                  19806000
NVTABWS1 EQU   NVT+362                                                  19807000
NVTABCD1 EQU   NVT+360                                                  19808000
@NM00068 EQU   NVT+358                                                  19809000
NVTCPUAD EQU   NVT+356                                                  19810000
NVTTOD   EQU   NVT+352                                                  19811000
NVTSPE   EQU   NVT+344                                                  19812000
NVTMBEND EQU   NVT+340                                                  19813000
NVTMBUF  EQU   NVT+336                                                  19814000
NVTDCBSN EQU   NVT+332                                                  19815000
NVTDCBOC EQU   NVT+328                                                  19816000
NVTDCBIC EQU   NVT+324                                                  19817000
@NM00067 EQU   NVT+308                                                  19818000
NVTNMBLD EQU   NVT+304                                                  19819000
NVTNIPM  EQU   NVT+292                                                  19820000
NVTIX    EQU   NVTFLWSC                                                 19821000
NVTFLWS1 EQU   NVTWPSW2+2                                               19822000
NVTIDPSW EQU   NVTWPSW2                                                 19823000
NVTWPSW1 EQU   NVTWTPSW                                                 19824000
NVTMCPSW EQU   NVT+216                                                  19825000
@NM00066 EQU   NVT+212                                                  19826000
@NM00065 EQU   NVTFLCN                                                  19827000
NVTFLRAC EQU   NVTFLCN                                                  19828000
NVTFLNCK EQU   NVTFLCN                                                  19829000
NVTFLNHC EQU   NVTFLCN                                                  19830000
NVTFLASM EQU   NVTFLCN                                                  19831000
NVTMP    EQU   NVTFLCN                                                  19832000
NVTFLIOC EQU   NVTFLCN                                                  19833000
NVTFLAC  EQU   NVTFLCN                                                  19834000
NVTFLSG  EQU   NVT+210                                                  19835000
NVTTRACE EQU   NVT+208                                                  19836000
NVTNXPTR EQU   NVT+204                                                  19837000
NVTNXSIZ EQU   NVT+202                                                  19838000
@NM00064 EQU   NVT+200                                                  19839000
NVTSGPSA EQU   NVT+196                                                  19840000
NVTN0MSG EQU   NVT+192                                                  19841000
NVTSTMAP EQU   NVT+176                                                  19842000
NVTRTMSA EQU   NVT+172                                                  19843000
NVTMFASA EQU   NVT+168                                                  19844000
NVTLSPQE EQU   NVT+164                                                  19845000
NVTALSQA EQU   NVT+160                                                  19846000
NVTPQSAV EQU   NVT+156                                                  19847000
NVTABSEC EQU   NVTABSAV+4                                               19848000
NVTABFST EQU   NVTABSAV                                                 19849000
NVTNVSQA EQU   NVT+138                                                  19850000
NVTRSVMN EQU   NVT+136                                                  19851000
NVTNBMIN EQU   NVT+134                                                  19852000
NVTRGNAV EQU   NVT+132                                                  19853000
NVTLSQNO EQU   NVT+130                                                  19854000
NVTSQANO EQU   NVT+128                                                  19855000
NVTLSQAS EQU   NVT+124                                                  19856000
NVTLNGFX EQU   NVT+120                                                  19857000
NVTIGXER EQU   NVT+116                                                  19858000
@NM00063 EQU   NVT+112                                                  19859000
NVTRSV49 EQU   NVT+108                                                  19860000
NVTNVRSZ EQU   NVT+104                                                  19861000
NVTMFA   EQU   NVT+100                                                  19862000
NVTDSSNG EQU   NVT+96                                                   19863000
NVTMSLNK EQU   NVT+92                                                   19864000
NVTIGCER EQU   NVT+84                                                   19865000
NVTSVCTB EQU   NVT+76                                                   19866000
NVTRSV42 EQU   NVT+72                                                   19867000
NVTRSV41 EQU   NVT+68                                                   19868000
NVTCMTCB EQU   NVT+60                                                   19869000
NVTMSTCB EQU   NVT+56                                                   19870000
@NM00062 EQU   NVTFLLB                                                  19871000
NVTFLSLB EQU   NVTFLLB                                                  19872000
@NM00061 EQU   NVTNPATR                                                 19873000
NVTNPREU EQU   NVTNPREN                                                 19874000
@NM00060 EQU   NVTNPREN                                                 19875000
NVTNPSFX EQU   NVT+53                                                   19876000
@NM00059 EQU   NVT+52                                                   19877000
NVTNPSUF EQU   NVT                                                      19878000
LPDEATT3 EQU   LPDE+30                                                  19879000
LPDEAUTH EQU   LPDEATT2                                                 19880000
LPDESYSL EQU   LPDEATT2                                                 19881000
@NM00058 EQU   LPDEATT2                                                 19882000
@NM00057 EQU   LPDEATT2                                                 19883000
@NM00056 EQU   LPDEATT2                                                 19884000
LPDENLR  EQU   LPDEATTR                                                 19885000
@NM00055 EQU   LPDEATTR                                                 19886000
@NM00054 EQU   LPDEATTR                                                 19887000
LPDESER  EQU   LPDEATTR                                                 19888000
LPDEREN  EQU   LPDEATTR                                                 19889000
@NM00053 EQU   LPDEATTR                                                 19890000
@NM00052 EQU   LPDE+26                                                  19891000
LPDEUSE  EQU   LPDE+24                                                  19892000
LPDEXLP  EQU   LPDE+20                                                  19893000
LPDERBP  EQU   LPDE+4                                                   19894000
IOBRSV19 EQU   IOBINCAM+1                                               19895000
IOBOLTST EQU   IOBBTAMF                                                 19896000
IOBRFTMG EQU   IOBBTAMF                                                 19897000
IOBRSV17 EQU   IOBBTAMF                                                 19898000
IOBRSV16 EQU   IOBBTAMF                                                 19899000
IOBRSV15 EQU   IOBBTAMF                                                 19900000
IOBRSV14 EQU   IOBBTAMF                                                 19901000
IOBINUSE EQU   IOBBTAMF                                                 19902000
IOBPRMER EQU   IOBBTAMF                                                 19903000
IOBRSTRB EQU   IOBRESTR+1                                               19904000
IOBREPOS EQU   IOBRESTR                                                 19905000
IOBRSV44 EQU   IOBFLAG4                                                 19906000
IOBJES3I EQU   IOBFLAG4                                                 19907000
IOBRSV42 EQU   IOBFLAG4                                                 19908000
IOBRSV41 EQU   IOBFLAG4                                                 19909000
IOBRSV40 EQU   IOBFLAG4                                                 19910000
IOBPMERR EQU   IOBFLAG4                                                 19911000
IOBCC3WE EQU   IOBFLAG4                                                 19912000
IOBGDPOL EQU   IOBFLAG4                                                 19913000
IOBSTRTB EQU   IOBSTART+1                                               19914000
IOBSIOCC EQU   IOBSTART                                                 19915000
IOBCSB7  EQU   IOBCSTAT                                                 19916000
IOBCSB6  EQU   IOBCSTAT                                                 19917000
IOBCSB5  EQU   IOBCSTAT                                                 19918000
IOBCSB4  EQU   IOBCSTAT                                                 19919000
IOBCSB3  EQU   IOBCSTAT                                                 19920000
IOBCSB2  EQU   IOBCSTAT                                                 19921000
IOBCSB1  EQU   IOBCSTAT                                                 19922000
IOBCSB0  EQU   IOBCSTAT                                                 19923000
IOBUSB7  EQU   IOBUSTAT                                                 19924000
IOBUSB6  EQU   IOBUSTAT                                                 19925000
IOBUSB5  EQU   IOBUSTAT                                                 19926000
IOBUSB4  EQU   IOBUSTAT                                                 19927000
IOBUSB3  EQU   IOBUSTAT                                                 19928000
IOBUSB2  EQU   IOBUSTAT                                                 19929000
IOBUSB1  EQU   IOBUSTAT                                                 19930000
IOBUSB0  EQU   IOBUSTAT                                                 19931000
IOBCMDA  EQU   IOBIOCSW                                                 19932000
IOBLOG   EQU   IOBFL3                                                   19933000
IOBJAM   EQU   IOBICL                                                   19934000
IOBMSG   EQU   IOBFL3                                                   19935000
IOBSDR   EQU   IOBCNC                                                   19936000
IOBACU   EQU   IOBFL3                                                   19937000
IOBCDC   EQU   IOBFL3                                                   19938000
IOBICC   EQU   IOBFL3                                                   19939000
IOBCCC   EQU   IOBFL3                                                   19940000
IOBECBPB EQU   IOBECBPT+1                                               19941000
IOBECBCC EQU   IOBECBPT                                                 19942000
IOBS1B7  EQU   IOBSENS1                                                 19943000
IOBS1B6  EQU   IOBSENS1                                                 19944000
IOBS1B5  EQU   IOBSENS1                                                 19945000
IOBS1B4  EQU   IOBSENS1                                                 19946000
IOBS1B3  EQU   IOBSENS1                                                 19947000
IOBS1B2  EQU   IOBSENS1                                                 19948000
IOBS1B1  EQU   IOBSENS1                                                 19949000
IOBS1B0  EQU   IOBSENS1                                                 19950000
IOBSNSC9 EQU   IOBS0B7                                                  19951000
IOBS0B6  EQU   IOBSENS0                                                 19952000
IOBS0B5  EQU   IOBSENS0                                                 19953000
IOBS0B4  EQU   IOBSENS0                                                 19954000
IOBS0B3  EQU   IOBSENS0                                                 19955000
IOBS0B2  EQU   IOBSENS0                                                 19956000
IOBS0B1  EQU   IOBSENS0                                                 19957000
IOBS0B0  EQU   IOBSENS0                                                 19958000
IOBPNCH  EQU   IOBFLAG2                                                 19959000
IOBSTATO EQU   IOBFLAG2                                                 19960000
IOBSKUPD EQU   IOBFLAG2                                                 19961000
IOBALTTR EQU   IOBFLAG2                                                 19962000
IOBRRT2  EQU   IOBRDHA0                                                 19963000
IOBRRT3  EQU   IOBPURGE                                                 19964000
IOBSENSE EQU   IOBFLAG2                                                 19965000
IOBHALT  EQU   IOBFLAG2                                                 19966000
IOBSPSVC EQU   IOBRSTRT                                                 19967000
IOBUNREL EQU   IOBFLAG1                                                 19968000
IOBIOERR EQU   IOBFLAG1                                                 19969000
IOBFCREX EQU   IOBCYCCK                                                 19970000
IOBRPSTN EQU   IOBFLAG1                                                 19971000
IOBERRTN EQU   IOBFLAG1                                                 19972000
IOBCMDCH EQU   IOBFLAG1                                                 19973000
IOBDATCH EQU   IOBFLAG1                                                 19974000
IOBCNOPA EQU   IOBPREFX+12                                              19975000
IOBCICB  EQU   IOBPREFX+8                                               19976000
IOBCECB  EQU   IOBPREFX+4                                               19977000
IOBCONOP EQU   IOBPREFX+3                                               19978000
IOBCINOP EQU   IOBPREFX+2                                               19979000
IOBRSV05 EQU   IOBPREFX+1                                               19980000
IOBPCI   EQU   IOBCFLG1                                                 19981000
IOBRSTCH EQU   IOBCFLG1                                                 19982000
IOBABAPP EQU   IOBCFLG1                                                 19983000
IOBPTST  EQU   IOBCFLG1                                                 19984000
IOBRSV04 EQU   IOBCFLG1                                                 19985000
IOBRSV03 EQU   IOBCFLG1                                                 19986000
IOBRSV02 EQU   IOBCFLG1                                                 19987000
IOBRSV01 EQU   IOBCFLG1                                                 19988000
ECBEVNT  EQU   ECBEXTND                                                 19989000
@NM00051 EQU   ECBEXTND                                                 19990000
@NM00050 EQU   ECBBYTE3                                                 19991000
@NM00049 EQU   ECBEXTBA                                                 19992000
@NM00048 EQU   ECBCC                                                    19993000
ECBPOSTB EQU   ECBCC                                                    19994000
ECBWAITB EQU   ECBCC                                                    19995000
LLESYSCT EQU   LLE+10                                                   19996000
LLECOUNT EQU   LLE+8                                                    19997000
LLECDPT  EQU   LLE+4                                                    19998000
XTLMSBAD EQU   XTLMSBAA+1                                               19999000
@NM00114 EQU   XTLMSBAA                                                 20000000
XTLMSBLN EQU   XTLMSBLA+1                                               20001000
@NM00113 EQU   XTLMSBLA                                                 20002000
XTLNRFAC EQU   XTLST+4                                                  20003000
CDATTR3  EQU   CDENTRY+30                                               20004000
CDAUTH   EQU   CDATTR2                                                  20005000
CDSYSLIB EQU   CDATTR2                                                  20006000
CDOLY    EQU   CDATTR2                                                  20007000
@NM00047 EQU   CDATTR2                                                  20008000
CDRLC    EQU   CDATTR2                                                  20009000
CDREL    EQU   CDATTR2                                                  20010000
CDSPZ    EQU   CDATTR2                                                  20011000
CDNLR    EQU   CDATTR                                                   20012000
CDMIN    EQU   CDATTR                                                   20013000
CDNFN    EQU   CDATTR                                                   20014000
CDSER    EQU   CDATTR                                                   20015000
CDNIC    EQU   CDATTR                                                   20016000
@NM00046 EQU   CDENTRY+26                                               20017000
CDRRBP   EQU   CDENTRY+4                                                20018000
@NM00031 EQU   DCB                                                      20019000
ASMCPRES EQU   ASMCPRSQ+4                                               20020000
ASMCPTAK EQU   ASMCPRSQ                                                 20021000
ASMCPCNT EQU   ASMCPAVQ+4                                               20022000
ASMCPAVL EQU   ASMCPAVQ                                                 20023000
ASMCPEXT EQU   ASMPOOLS+6                                               20024000
ASMCPSIZ EQU   ASMPOOLS+4                                               20025000
ASMCPID  EQU   ASMPOOLS                                                 20026000
ASMRSV12 EQU   ASMVT+1000                                               20027000
ASMSAVE  EQU   ASMVT+928                                                20028000
ASMWKSA7 EQU   ASMVT+848                                                20029000
ASMWKSA6 EQU   ASMVT+768                                                20030000
ASMACEPC EQU   ASMVT+344                                                20031000
ASMSWKPC EQU   ASMVT+328                                                20032000
ASMBWKPC EQU   ASMVT+312                                                20033000
ASMIOEPC EQU   ASMVT+296                                                20034000
ASMRSV10 EQU   ASMVT+280                                                20035000
ASMPVACE EQU   ASMVT+276                                                20036000
ASMPIOFR EQU   ASMVT+272                                                20037000
ASMPVACQ EQU   ASMVT+268                                                20038000
ASMPMSGS EQU   ASMVT+264                                                20039000
ASMPMSG0 EQU   ASMVT+260                                                20040000
ASMPFRLG EQU   ASMVT+256                                                20041000
ASMPRLG  EQU   ASMVT+252                                                20042000
ASMPACT  EQU   ASMVT+248                                                20043000
ASMPSAV  EQU   ASMVT+244                                                20044000
ASMPCMP  EQU   ASMVT+240                                                20045000
ASMPCMPA EQU   ASMVT+236                                                20046000
ASMPCMPN EQU   ASMVT+232                                                20047000
ASMPCMPD EQU   ASMVT+228                                                20048000
ASMPEX   EQU   ASMVT+224                                                20049000
ASMVRMTR EQU   ASMVT+220                                                20050000
ASMPSRBC EQU   ASMVT+216                                                20051000
ASMPSRMT EQU   ASMVT+212                                                20052000
ASMPSWPD EQU   ASMVT+208                                                20053000
ASMPTM   EQU   ASMVT+204                                                20054000
ASMPFRSW EQU   ASMVT+200                                                20055000
ASMPFRSL EQU   ASMVT+196                                                20056000
ASMPQIOE EQU   ASMVT+192                                                20057000
ASMRSV8  EQU   ASMVT+184                                                20058000
ASMTASCB EQU   ASMVT+180                                                20059000
ASMRLGWQ EQU   ASMVT+176                                                20060000
ASMRLGRQ EQU   ASMVT+172                                                20061000
ASMTMECB EQU   ASMVT+168                                                20062000
ASMTCBPT EQU   ASMVT+164                                                20063000
ASMREQCT EQU   ASMVT+160                                                20064000
ASMGOSWK EQU   ASMGOSQS+4                                               20065000
ASMGOSWT EQU   ASMGOSQS                                                 20066000
ASMLSAIH EQU   ASMLSAI+4                                                20067000
ASMLSAIL EQU   ASMLSAI                                                  20068000
ASMCINV  EQU   ASMVT+140                                                20069000
ASMSTGXA EQU   ASMVT+136                                                20070000
ASMLGVT  EQU   ASMVT+132                                                20071000
ASMSLOTV EQU   ASMVT+128                                                20072000
ASMERRS  EQU   ASMVT+124                                                20073000
ASMNVSC  EQU   ASMVT+120                                                20074000
ASMVSC   EQU   ASMVT+116                                                20075000
ASMSLOTS EQU   ASMVT+112                                                20076000
ASMBKSLT EQU   ASMVT+108                                                20077000
ASMRSV7  EQU   ASMVT+92                                                 20078000
ASMPSRB  EQU   ASMVT+88                                                 20079000
ASMSRBCT EQU   ASMVT+84                                                 20080000
ASMIOCNT EQU   ASMVT+80                                                 20081000
ASMBURST EQU   ASMVT+76                                                 20082000
ASMPCCWN EQU   ASMVT+72                                                 20083000
ASMPCCWC EQU   ASMPCCWQ+4                                               20084000
ASMPCCWA EQU   ASMPCCWQ                                                 20085000
ASMRSV6  EQU   ASMVT+48                                                 20086000
ASMSTAGL EQU   ASMSTAGQ+4                                               20087000
ASMSTAGF EQU   ASMSTAGQ                                                 20088000
ASMRSV5  EQU   ASMVT+28                                                 20089000
ASMMSGBF EQU   ASMVT+24                                                 20090000
ASMEREC  EQU   ASMVT+20                                                 20091000
ASMTRPAG EQU   ASMVT+16                                                 20092000
ASMGOS   EQU   ASMVT+12                                                 20093000
ASMPART  EQU   ASMVT+8                                                  20094000
ASMSART  EQU   ASMVT+4                                                  20095000
ASMDSSFS EQU   ASMVT+2                                                  20096000
ASMWARM  EQU   ASMFLAG2                                                 20097000
ASMQUICK EQU   ASMFLAG2                                                 20098000
ASMNOTPT EQU   ASMFLAG2                                                 20099000
ASMNOTMR EQU   ASMFLAG2                                                 20100000
ASMNOSAV EQU   ASMFLAG2                                                 20101000
ASMCALLQ EQU   ASMFLAG2                                                 20102000
ASMPLPAS EQU   ASMFLAG1                                                 20103000
ASMCOMMF EQU   ASMFLAG1                                                 20104000
ASMPLPAF EQU   ASMFLAG1                                                 20105000
ASMNODPX EQU   ASMFLAG1                                                 20106000
ASMRSV1  EQU   ASMFLAG1                                                 20107000
ASMNOLCL EQU   ASMFLAG1                                                 20108000
ASMNOCWQ EQU   ASMFLAG1                                                 20109000
ASMDUPLX EQU   ASMFLAG1                                                 20110000
@NM00002 EQU   SRB+40                                                   20111000
@NM00001 EQU   SRB+38                                                   20112000
SRBPRIOR EQU   SRB+37                                                   20113000
SRBPKF   EQU   SRB+36                                                   20114000
SRBSAVE  EQU   SRB+32                                                   20115000
SRBRMTR  EQU   SRB+24                                                   20116000
SRBPTCB  EQU   SRBFLC+4                                                 20117000
SRBPASID EQU   SRBFLC+2                                                 20118000
SRBCPAFF EQU   SRBFLC                                                   20119000
SRBID    EQU   SRB                                                      20120000
@NM00026 EQU   PSA+3668                                                 20121000
PSASTAK  EQU   PSA+3072                                                 20122000
@NM00025 EQU   PSA+1048                                                 20123000
PSAUSEND EQU   PSA+1048                                                 20124000
PSARV062 EQU   PSA+1044                                                 20125000
PSACDAL  EQU   PSA+1040                                                 20126000
PSAWTCOD EQU   PSA+1036                                                 20127000
PSAATCVT EQU   PSA+1032                                                 20128000
PSAPCPSW EQU   PSA+1024                                                 20129000
PSAPIR2  EQU   PSA+1020                                                 20130000
PSARV059 EQU   PSA+1018                                                 20131000
PSASVC13 EQU   PSA+1016                                                 20132000
PSALSFCC EQU   PSA+1012                                                 20133000
PSASFACC EQU   PSA+1008                                                 20134000
PSASTOP  EQU   PSA+992                                                  20135000
PSASTART EQU   PSA+976                                                  20136000
PSARSPSW EQU   PSA+968                                                  20137000
PSASRPSW EQU   PSA+960                                                  20138000
PSARV045 EQU   PSA+892                                                  20139000
PSARV044 EQU   PSA+888                                                  20140000
PSARV043 EQU   PSA+884                                                  20141000
PSARV042 EQU   PSA+880                                                  20142000
PSARV041 EQU   PSA+876                                                  20143000
PSARV040 EQU   PSA+872                                                  20144000
PSARV025 EQU   PSA+868                                                  20145000
PSADSSED EQU   PSA+868                                                  20146000
PSADSSPR EQU   PSA+864                                                  20147000
PSADSSFW EQU   PSA+860                                                  20148000
PSADSS14 EQU   PSA+856                                                  20149000
PSADSSPP EQU   PSA+848                                                  20150000
PSADSSRP EQU   PSA+840                                                  20151000
PSADSS05 EQU   PSADSSF4                                                 20152000
PSADSS10 EQU   PSADSSF4                                                 20153000
PSADSSVE EQU   PSADSSF4                                                 20154000
PSADSSDE EQU   PSADSSF4                                                 20155000
PSADSSC0 EQU   PSADSSF4                                                 20156000
PSADSSIE EQU   PSADSSF4                                                 20157000
PSADSS12 EQU   PSADSSF4                                                 20158000
PSADSSRC EQU   PSADSSF4                                                 20159000
PSARV057 EQU   PSADSSF3                                                 20160000
PSARV056 EQU   PSADSSF3                                                 20161000
PSARV055 EQU   PSADSSF3                                                 20162000
PSADSSMC EQU   PSADSSF3                                                 20163000
PSADSSRW EQU   PSADSSF3                                                 20164000
PSADSSNM EQU   PSADSSF3                                                 20165000
PSADSSES EQU   PSADSSF3                                                 20166000
PSADSSGP EQU   PSADSSF3                                                 20167000
PSADSSF2 EQU   PSADSSFL+1                                               20168000
PSADSSPI EQU   PSADSSF1                                                 20169000
PSADSSOI EQU   PSADSSF1                                                 20170000
PSADSSSP EQU   PSADSSF1                                                 20171000
PSADSSTP EQU   PSADSSF1                                                 20172000
PSADSSDW EQU   PSADSSF1                                                 20173000
PSADSSDD EQU   PSADSSF1                                                 20174000
PSADSSDM EQU   PSADSSF1                                                 20175000
PSADSSMV EQU   PSADSSF1                                                 20176000
PSADSSTS EQU   PSA+816                                                  20177000
PSADSSWK EQU   PSA+812                                                  20178000
PSADSSR3 EQU   PSA+808                                                  20179000
PSADSSR2 EQU   PSA+804                                                  20180000
PSADSSRS EQU   PSA+800                                                  20181000
PSASTOR  EQU   PSA+796                                                  20182000
PSACPUSA EQU   PSA+794                                                  20183000
PSAVSTAP EQU   PSA+792                                                  20184000
PSAWKVAP EQU   PSA+788                                                  20185000
PSAWKRAP EQU   PSA+784                                                  20186000
PSAMCHIC EQU   PSA+783                                                  20187000
PSARV061 EQU   PSA+782                                                  20188000
PSASYMSK EQU   PSA+781                                                  20189000
PSAMCHFL EQU   PSA+780                                                  20190000
PSACR0   EQU   PSA+776                                                  20191000
PSAPSWSV EQU   PSA+768                                                  20192000
PSACLHS  EQU   PSAHLHI                                                  20193000
PSALKR15 EQU   PSALKSA+60                                               20194000
PSALKR14 EQU   PSALKSA+56                                               20195000
PSALKR13 EQU   PSALKSA+52                                               20196000
PSALKR12 EQU   PSALKSA+48                                               20197000
PSALKR11 EQU   PSALKSA+44                                               20198000
PSALKR10 EQU   PSALKSA+40                                               20199000
PSALKR9  EQU   PSALKSA+36                                               20200000
PSALKR8  EQU   PSALKSA+32                                               20201000
PSALKR7  EQU   PSALKSA+28                                               20202000
PSALKR6  EQU   PSALKSA+24                                               20203000
PSALKR5  EQU   PSALKSA+20                                               20204000
PSALKR4  EQU   PSALKSA+16                                               20205000
PSALKR3  EQU   PSALKSA+12                                               20206000
PSALKR2  EQU   PSALKSA+8                                                20207000
PSALKR1  EQU   PSALKSA+4                                                20208000
PSALKR0  EQU   PSALKSA                                                  20209000
PSARV023 EQU   PSACLHT+52                                               20210000
PSALOCAL EQU   PSACLHT+48                                               20211000
PSACMSL  EQU   PSACLHT+44                                               20212000
PSAOPTL  EQU   PSACLHT+40                                               20213000
PSATPACL EQU   PSACLHT+36                                               20214000
PSATPDNL EQU   PSACLHT+32                                               20215000
PSATPNCL EQU   PSACLHT+28                                               20216000
PSAIOSLL EQU   PSACLHT+24                                               20217000
PSAIOSUL EQU   PSACLHT+20                                               20218000
PSAIOSCL EQU   PSACLHT+16                                               20219000
PSAIOSSL EQU   PSACLHT+12                                               20220000
PSASALCL EQU   PSACLHT+8                                                20221000
PSAASML  EQU   PSACLHT+4                                                20222000
PSADISPL EQU   PSACLHT                                                  20223000
PSASRSA  EQU   PSA+636                                                  20224000
PSARV050 EQU   PSA+634                                                  20225000
PSADSSGO EQU   PSA+633                                                  20226000
PSARECUR EQU   PSA+632                                                  20227000
PSAHLHIS EQU   PSA+628                                                  20228000
PSAIPCSA EQU   PSA+624                                                  20229000
@NM00024 EQU   PSA+621                                                  20230000
PSAIPCDM EQU   PSA+620                                                  20231000
PSAIPCD  EQU   PSA+616                                                  20232000
@NM00023 EQU   PSA+613                                                  20233000
PSAIPCRM EQU   PSA+612                                                  20234000
PSAIPCR  EQU   PSA+608                                                  20235000
PSAMCHEX EQU   PSA+600                                                  20236000
PSAMPSW  EQU   PSA+592                                                  20237000
PSAEXPS2 EQU   PSA+584                                                  20238000
PSAEXPS1 EQU   PSA+576                                                  20239000
PSAPIREG EQU   PSA+572                                                  20240000
PSARSREG EQU   PSA+568                                                  20241000
PSAGPREG EQU   PSA+556                                                  20242000
PSARV022 EQU   PSASUP4                                                  20243000
PSARV021 EQU   PSASUP4                                                  20244000
PSARV020 EQU   PSASUP4                                                  20245000
PSARV019 EQU   PSASUP4                                                  20246000
PSARV018 EQU   PSASUP4                                                  20247000
PSARV017 EQU   PSASUP4                                                  20248000
PSARV016 EQU   PSASUP4                                                  20249000
PSARV015 EQU   PSASUP4                                                  20250000
PSARV014 EQU   PSASUP3                                                  20251000
PSARV013 EQU   PSASUP3                                                  20252000
PSARV012 EQU   PSASUP3                                                  20253000
PSAESTA  EQU   PSASUP3                                                  20254000
PSASPR   EQU   PSASUP3                                                  20255000
PSAPSREG EQU   PSASUP3                                                  20256000
PSAPI2   EQU   PSASUP3                                                  20257000
PSAIOSUP EQU   PSASUP3                                                  20258000
PSALCR   EQU   PSASUP2                                                  20259000
PSARTM   EQU   PSASUP2                                                  20260000
PSAACR   EQU   PSASUP2                                                  20261000
PSAIPCE2 EQU   PSASUP2                                                  20262000
PSAIPCES EQU   PSASUP2                                                  20263000
PSAIPCEC EQU   PSASUP2                                                  20264000
PSAGTF   EQU   PSASUP2                                                  20265000
PSAIPCRI EQU   PSASUP2                                                  20266000
PSATYPE6 EQU   PSASUP1                                                  20267000
PSATCTL  EQU   PSASUP1                                                  20268000
PSADISP  EQU   PSASUP1                                                  20269000
PSALOCK  EQU   PSASUP1                                                  20270000
PSAPI    EQU   PSASUP1                                                  20271000
PSAEXT   EQU   PSASUP1                                                  20272000
PSASVC   EQU   PSASUP1                                                  20273000
PSAIO    EQU   PSASUP1                                                  20274000
PSAAOLD  EQU   PSA+548                                                  20275000
PSAANEW  EQU   PSA+544                                                  20276000
PSATOLD  EQU   PSA+540                                                  20277000
PSATNEW  EQU   PSA+536                                                  20278000
PSALCCAR EQU   PSA+532                                                  20279000
PSALCCAV EQU   PSA+528                                                  20280000
PSAPCCAR EQU   PSA+524                                                  20281000
PSAPCCAV EQU   PSA+520                                                  20282000
PSACPULA EQU   PSA+518                                                  20283000
PSACPUPA EQU   PSA+516                                                  20284000
PSAPSA   EQU   PSA+512                                                  20285000
FLCHDEND EQU   PSA+512                                                  20286000
FLCCRSAV EQU   FLCMCLA+280                                              20287000
FLCGRSAV EQU   FLCMCLA+216                                              20288000
FLCFPSAV EQU   FLCMCLA+184                                              20289000
FLCFLA   EQU   FLCMCLA+88                                               20290000
FLCRGNCD EQU   FLCMCLA+84                                               20291000
FLCFSAA  EQU   FLCFSA+1                                                 20292000
@NM00022 EQU   FLCFSA                                                   20293000
@NM00021 EQU   FLCMCLA+72                                               20294000
FLCMCIC  EQU   FLCMCLA+64                                               20295000
@NM00020 EQU   FLCMCLA+20                                               20296000
FLCIOAA  EQU   FLCIOA+1                                                 20297000
@NM00019 EQU   FLCIOA                                                   20298000
@NM00018 EQU   FLCMCLA+15                                               20299000
@NM00017 EQU   FLCMCLA+14                                               20300000
@NM00016 EQU   FLCMCLA+12                                               20301000
FLCLCL   EQU   FLCMCLA+8                                                20302000
FLCIOELA EQU   FLCIOEL+1                                                20303000
@NM00015 EQU   FLCIOEL                                                  20304000
FLCCHNID EQU   FLCMCLA                                                  20305000
@NM00014 EQU   PSA+160                                                  20306000
FLCMTRCD EQU   PSA+157                                                  20307000
@NM00013 EQU   PSA+156                                                  20308000
FLCPERA  EQU   FLCPER+1                                                 20309000
@NM00012 EQU   FLCPER                                                   20310000
@NM00011 EQU   PSA+151                                                  20311000
FLCPERCD EQU   PSA+150                                                  20312000
FLCMCNUM EQU   PSA+149                                                  20313000
@NM00010 EQU   PSA+148                                                  20314000
FLCTEAA  EQU   FLCTEA+1                                                 20315000
@NM00009 EQU   FLCTEA                                                   20316000
PSAPIPC  EQU   PSAPICOD                                                 20317000
PSAPIMC  EQU   PSAPICOD                                                 20318000
PSAPIPER EQU   PSAPICOD                                                 20319000
PSARV049 EQU   FLCPICOD                                                 20320000
FLCPILCB EQU   FLCPIILC                                                 20321000
@NM00008 EQU   FLCPIILC                                                 20322000
@NM00007 EQU   PSAEPPSW                                                 20323000
FLCSVCN  EQU   PSAESPSW+2                                               20324000
FLCSILCB EQU   FLCSVILC                                                 20325000
@NM00006 EQU   FLCSVILC                                                 20326000
@NM00005 EQU   PSAESPSW                                                 20327000
FLCEICOD EQU   PSAEEPSW+2                                               20328000
PSASPAD  EQU   PSAEEPSW                                                 20329000
@NM00004 EQU   PSA+128                                                  20330000
FLCINPSW EQU   PSA+120                                                  20331000
FLCMNPSW EQU   PSA+112                                                  20332000
FLCPNPSW EQU   PSA+104                                                  20333000
FLCSNPSW EQU   PSA+96                                                   20334000
FLCENPSW EQU   PSA+88                                                   20335000
FLCTRACE EQU   PSA+84                                                   20336000
FLCTIMER EQU   PSA+80                                                   20337000
FLCCVT2  EQU   PSA+76                                                   20338000
FLCCAW   EQU   PSA+72                                                   20339000
FLCCSW   EQU   PSA+64                                                   20340000
FLCIOPSW EQU   PSA+56                                                   20341000
FLCMOPSW EQU   PSA+48                                                   20342000
FLCPOPSW EQU   PSA+40                                                   20343000
FLCSOPSW EQU   PSA+32                                                   20344000
FLCEOPSW EQU   PSA+24                                                   20345000
@NM00003 EQU   FLCICCW2+4                                               20346000
FLCCVT   EQU   FLCICCW2                                                 20347000
FLCICCW1 EQU   FLCROPSW                                                 20348000
FLCIPPSW EQU   FLCRNPSW                                                 20349000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      20350000
@RC00593 EQU   @EL00006                                                 20351000
@RC00588 EQU   @EL00006                                                 20352000
@RF00597 EQU   @EL00006                                                 20353000
@RF00657 EQU   @EL00006                                                 20354000
@RC00644 EQU   @EL00006                                                 20355000
@RF00680 EQU   @EL00007                                                 20356000
@RT00697 EQU   NP5SCANR                                                 20357000
@RT00755 EQU   NP5PKER5                                                 20358000
@RC00813 EQU   @EL00010                                                 20359000
@RT00970 EQU   @EL00010                                                 20360000
@RF00998 EQU   @EL00010                                                 20361000
@RC01029 EQU   @RC01024                                                 20362000
@RF01044 EQU   @EL00010                                                 20363000
@RT01252 EQU   NP5RESCH                                                 20364000
@RF01308 EQU   @EL00016                                                 20365000
@RT01339 EQU   NP5CSIO                                                  20366000
@RT01359 EQU   NP5CSLIB                                                 20367000
@RT01378 EQU   NP5SW3A                                                  20368000
NP5FXXIT EQU   @EL00019                                                 20369000
NP5MAXIT EQU   @EL00019                                                 20370000
@RT01489 EQU   NP5MLSUF                                                 20371000
@RT01499 EQU   NP5MLNEX                                                 20372000
@RT01513 EQU   NP5MLPNV                                                 20373000
@RT01540 EQU   NP5MLPMX                                                 20374000
@RT01547 EQU   NP5PARND                                                 20375000
@RF01547 EQU   @EL00020                                                 20376000
NP5MLXIT EQU   @EL00020                                                 20377000
@RF01551 EQU   NP5MLXIT                                                 20378000
@RT01564 EQU   NP5MLLMD                                                 20379000
@RT01567 EQU   NP5MLNFN                                                 20380000
@RT01581 EQU   NP5MLVR                                                  20381000
@RT01588 EQU   NP5MREAL                                                 20382000
@RT01602 EQU   NP5MLMOD                                                 20383000
@RF01627 EQU   NP5MLMOD                                                 20384000
@RT01667 EQU   NP5QLTCB                                                 20385000
NP5QLXIT EQU   @EL00020                                                 20386000
@RT01691 EQU   NP5BFCOM                                                 20387000
NP5BFXIT EQU   @EL00020                                                 20388000
@RT01704 EQU   NP5BPXIT                                                 20389000
@RT01727 EQU   NP5CQLPA                                                 20390000
@PB00024 EQU   @PB00025                                                 20391000
@RF01870 EQU   @EL00025                                                 20392000
@RT01881 EQU   NP5FJCDE                                                 20393000
NP5FJXIT EQU   @EL00026                                                 20394000
@RT01925 EQU   NP5BLNEX                                                 20395000
@RT01939 EQU   NP5BLPNV                                                 20396000
@RT01956 EQU   NP5BLNAM                                                 20397000
@RT01971 EQU   NP5BLTAB                                                 20398000
@RT01976 EQU   NP5BLRTY                                                 20399000
@RT01987 EQU   NP5BLDOK                                                 20400000
@RT01990 EQU   NP5BLNFN                                                 20401000
@RT01996 EQU   NP5BLLNV                                                 20402000
@RT02035 EQU   NP5BLNCR                                                 20403000
NP5BLXIT EQU   @EL00027                                                 20404000
@RT02057 EQU   NPA5BSER                                                 20405000
@RT02078 EQU   NP5PLMDX                                                 20406000
@RT02087 EQU   NP5PLTXT                                                 20407000
@RT02095 EQU   NP5PLEND                                                 20408000
@RT02098 EQU   NP5PLAPF                                                 20409000
@RT02101 EQU   NP5PLLPA                                                 20410000
@RT02104 EQU   NP5PLLNK                                                 20411000
@RT02107 EQU   NP5PLSVC                                                 20412000
@RT02110 EQU   NP5PLMOD                                                 20413000
@RF02110 EQU   NP5PLLNV                                                 20414000
@RT02114 EQU   NP5PLLIB                                                 20415000
@RT02119 EQU   NP5PLLIB                                                 20416000
@RT02139 EQU   NP5PLEND                                                 20417000
@RF02139 EQU   NP5PLMOD                                                 20418000
@RT02143 EQU   NP5PLEND                                                 20419000
@RT02146 EQU   NP5PLMOD                                                 20420000
@RT02150 EQU   NP5PLTXT                                                 20421000
@RT02159 EQU   NP5PLMNV                                                 20422000
@RT02162 EQU   NP5PLCHA                                                 20423000
@RT02167 EQU   NP5PLXIT                                                 20424000
@RT02191 EQU   NP5PRPNV                                                 20425000
@RT02194 EQU   NP5PRMNV                                                 20426000
@RT02197 EQU   NP5PRLNV                                                 20427000
@RT02200 EQU   NP5PRCNV                                                 20428000
@RT02203 EQU   NP5PRVNV                                                 20429000
@RT02218 EQU   NP5PRXIT                                                 20430000
@RT02262 EQU   NP5LPLOC                                                 20431000
@RT02271 EQU   NP5LPNFN                                                 20432000
@RT02287 EQU   NP5LPERR                                                 20433000
@RT02322 EQU   @EL00033                                                 20434000
@RF02326 EQU   NP5LDER2                                                 20435000
@RT02334 EQU   NP5LDDSR                                                 20436000
@RT02340 EQU   NP5LDLPQ                                                 20437000
@RF02340 EQU   NP5LDDSR                                                 20438000
@RF02337 EQU   NP5LDNXT                                                 20439000
@RT02356 EQU   NP5LDTXT                                                 20440000
@RF02353 EQU   @EL00033                                                 20441000
NP5LDRTN EQU   @EL00033                                                 20442000
@RT02467 EQU   NIPPMPRD                                                 20443000
@RT02478 EQU   NIPPMPFN                                                 20444000
@RT02480 EQU   NIPPMPER                                                 20445000
@RT02489 EQU   NIPPMPRD                                                 20446000
@RT02497 EQU   NIPPMPXT                                                 20447000
@RF02528 EQU   NIPPMTER                                                 20448000
@RF02535 EQU   NIPPMTER                                                 20449000
@RT02555 EQU   NIPPMPRD                                                 20450000
@RF02555 EQU   NIPPMTND                                                 20451000
@RF02553 EQU   NIPPMPBK                                                 20452000
@RT02571 EQU   NIPPMPXT                                                 20453000
@PB00035 EQU   @EL00001                                                 20454000
@RC00650 EQU   @RC00644                                                 20455000
@RC00648 EQU   @RC00644                                                 20456000
@RT01407 EQU   NP5FXXIT                                                 20457000
@RT01447 EQU   NP5MAXIT                                                 20458000
@RT01543 EQU   NP5MLXIT                                                 20459000
@RT01644 EQU   NP5QLXIT                                                 20460000
@RT01678 EQU   NP5BFXIT                                                 20461000
@RT01890 EQU   NP5FJXIT                                                 20462000
@RT01980 EQU   NP5BLXIT                                                 20463000
@ENDDATA EQU   *                                                        20464000
         END   IEAVNP05,(C'PLS1401',0701,76321)                         20465000
./  ADD  SSI=30571310,NAME=LINK
LINK     CSECT                                                          10000000
*********************************************************************** 10050000
*STATUS - RELEASE 1                                                   * 10100000
*                                                                     * 10150000
*FUNCTION - THIS ROUTINE SETS THE FIRST BYTE OF REGISTER 1 TO ZERO    * 10200000
*   TO INDICATE TO THE PROMPTER THAT THE LINKAGE EDITOR IS TO BE      * 10250000
*   INVOKED.                                                          * 10252000
*                                                                     * 10252400
*ENTRY POINTS - LINK                                                  * 10254000
*                                                                     * 10350000
*INPUT - REGISTER 1 POINTS TO THE PARAMETER LIST FROM THE TMP         * 10400000
*                                                                     * 10450000
*OUTPUT - N/A                                                         * 10500000
*                                                                     * 10550000
*EXTERNAL REFERENCES - N/A                                            * 10600000
*                                                                     * 10650000
*EXITS,NORMAL - THIS ROUTINE XCTLS TO AKJLKL01 - THE PROMPTER         * 10700000
*   PROCESSING MODULE.                                                * 10750000
*                                                                     * 10800000
*EXITS,ERROR - N/A                                                    * 10850000
*                                                                     * 10900000
*TABLES/WORKAREAS - N/A                                               * 10950000
*                                                                     * 11000000
*ATTRIBUTES - REENTERABLE,REUSABLE,REFRESHABLE                        * 11050000
*                                                                     * 11100000
*NOTES - THERE ARE NO CHARACTER CODE DEPENDENCIES.                    * 11150000
*                                                                     * 11200000
*********************************************************************** 11250000
         STM   14,12,12(13)            SAVE CALLER'S REGISTERS          20000000
         BALR  12,0                    DEFINE BASE REG                  30000000
         USING *,12                    ADDRESSABILITY                   40000000
         LA    1,0(1)                  ZERO HIGH BYTE OF REG.1          50000000
         XCTL  (2,12),EP=AKJLKL01,MF=(E,(1))  GO TO PROMPTER            60000000
PATCH    DS    F                       PATCH AREA                       60050000
         END   LINK                                                     70000000
