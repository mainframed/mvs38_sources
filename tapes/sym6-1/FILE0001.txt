./  ADD  SSI=72580455,NAME=AMCBS
*%GO TO CBSBSL1;                                       /*    @Z40BHUC*/ 03060048
* /*                                                         @Z40BHUC   03070048
         MACRO                                                          03080048
         AMCBS                                                          03090048
         AGO   .CBSBAL                                       @Z40BHUC   03100048
*                                                                    */ 03270048
 /********************************************************************/ 39060048
 /*                                                                  */ 39070048
 /*   MACRO NAME = AMCBS                                             */ 39080048
 /*                                                                  */ 39090048
 /*   DESCRIPTIVE NAME = ACCESS METHOD CONTROL BLOCK STRUCTURE BLOCK */ 39092048
 /*                                                                  */ 39094048
 /*   FUNCTION = THE ACCESS METHOD CONTROL BLOCK STRUCTURE (AMCBS)   */ 39096048
 /*              CONTAINS INFORMATION THAT IS USED BY OS/VS TO       */ 39098048
 /*              LOCATE THE MASTER CATALOG AND USER CATALOGS.  THE   */ 39098448
 /*              AMCBS IS COMPLETED WHEN THE MASTER CATALOG IS       */ 39099748
 /*              OPENED.                                             */ 39099848
 /*                                                                  */ 39103648
 /*              THE AMCBS CONTAINS:                                 */ 39104048
 /*                 * ENTRY POINTS TO VSAM CATALOG ROUTINES          */ 39104448
 /*                 * ENTRY POINTS TO GENCB, MODCB, SHOWCB ROUTINES  */ 39104848
 /*                 * POINTER TO THE MASTER CATALOG ACB              */ 39104948
 /*                 * POINTER TO THE CAXWA CHAIN                     */ 39105048
 /*                 * 8 DOUBLEWORDS FOR EACH OF THE VSAM SHARED      */ 39105248
 /*                     RESOURCE POOLS (GSR OPTION). THE FIRST WORD  */ 39106048
 /*                     OF EACH DOUBLWORD CONTAINS THE CELL USE      */ 39106448
 /*                     COUNT                                        */ 39107248
 /*                     THE SECOND WORD OF EACH DOUBLEWORD CONTAINS  */ 39108048
 /*                     THE ADDRESS OF THE CELL. A COMPARE AND SWAP  */ 39108848
 /*                     DOUBLE (CDS) INSTRUCTION IS USED TO SET THE  */ 39109648
 /*                     CELL USE COUNT AND THE CELL ADDRESS. @G38KSCM*/ 39110448
 /*                 * POINTER TO THE IDAVSI (VSAM SHARED INFO) CHAIN.*/ 39112148
 /*                   A VSI BIT INDICATING THAT UNUSED VSI'S LEFT    */ 39112548
 /*                   FROM ABEND MAY EXIST ON THE VSI CHAIN WHICH    */ 39112648
 /*                   REQUIRE CLEAN UP.                              */ 39114648
 /*                                                                  */ 39116648
 /*   CONTROL BLOCK STRUCTURE = THE AMCBS IS POINTED TO BY THE       */ 39117848
 /*                             CVT (CVTCBSP).                       */ 39119448
 /*                                                                  */ 39121048
 /*   INCLUDED MACROS = NONE                                         */ 39122648
 /*                                                                  */ 39124248
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 39125848
 /*                                                                  */ 39127448
 /*   CREATED BY: VSAM CATALOG MODULE IEAVNP11 DURING                */ 39127848
 /*               NIP MASTER CATALOG OPEN                            */ 39128248
 /*                                                                  */ 39128348
 /*   STATUS = MVS VERSION 1/RELEASE 1.                      @G38KSRL*/ 39131948
 /*                                                                  */ 39132648
 /*   COPYRIGHT = REFER TO MODULE ACB                        @G38KSRL*/ 39132848
 /*                                                                  */ 39133048
 /*   DATE OF LAST CHANGE = 22 JAN 76                        @Z40BHUC*/ 39133348
 /*                         08/16/76 CBUF SUPPORT            @G38KSRL*/ 39134048
 /*                                                                  */ 39134748
 /********************************************************************/ 39135148
*%CBSBSL1:  ;                                            /*  @Z40BHUC*/ 40000048
    DECLARE                                                             41000048
      1 AMCBS BASED(CBSPTR) BDY(DWORD), /* AMCBS LEVEL ONE   @Y30SSSB*/ 42000048
        2 CBSID CHAR(2),            /* AMCBS ID CHARACTER            */ 45000048
        2 CBSSIZ PTR(15),           /* LENGTH OF AMCBS               */ 48000048
        2 CBSMCSTA CHAR(4),         /* CCHH OF MASTER CATALOG  Y02020*/ 51000048
        2 CBSACB PTR(31),           /* PTR TO MASTER CATALOG'S ACB   */ 54000048
        2 CBSCBP PTR(31),           /* POINTER TO CONTROL BLOCK         57000048
                                       MANIPULATION ROUTINE          */ 57050048
        2 CBSCMP PTR(31),           /* POINTER TO CATALOG ROUTINE    */ 60000048
          3 CBSMCUCB PTR(31),       /* MASTER CATALOG UCB ADDRESS       60050048
                                       (NIP THROUGH MASTER CATALOG      60100048
                                       OPEN)                   Y02020*/ 60150048
        2 CBSCAXCN PTR(31),         /* POINTER TO CAXWA CHAIN        */ 63000048
        2 CBSCRACA PTR(31),         /* PTR TO CRA CAXWA CHN  @Y30SSSB*/ 63050048
        2 CBSCRTCB PTR(31),         /* CRA TASK TCB POINTER  @Y30SSSB*/ 63100048
        2 CBSVSRT(8)  CHAR(8) BDY(DWORD), /* CDS WORDS FOR CELLS FOR    63150048
                                                KEY 0 TO 7   @G38KSCM*/ 63180048
          3 CBSVUSE FIXED(31),      /* CELL USE COUNT        @G38KSCM*/ 63210048
          3 CBSVPTR PTR(31),        /* POINTER TO CELL       @G38KSCM*/ 63240048
        2 CBSVSICN PTR(31),         /* PTR TO IDAVSI CHAIN   @G38KSRS*/ 63300048
        2 CBSFLG1 BIT(8),           /* AMCBS FLAGS           @G38KSRS*/ 63310048
          3 CBSCUVSI BIT(1),        /* CLEAN UP OF VSI CHAIN IS         63320048
                                       REQUIRED              @G38KSRS*/ 63330048
          3 *      BIT(7),          /* RESERVED              @G38KSRS*/ 63340048
        2 *     CHAR(3);            /* RESERVED              @G38KSRS*/ 63350048
*%GOTO CBSBSL2 ;                                         /*  @Z40BHUC*/ 63400048
*/*                                                                     63450048
*/*                                                                     63500048
.CBSBAL   ANOP                                           /*  @Z40BHUC*/ 63550048
*      DUMMY AMCBS FOR CALL IN IDA019C1 FOR VS2 SYSTEM               *  63600048
         MEND                                            /*  @Z40BHUC*/ 63650048
*%CBSBSL2:;                                              /*  @Z40BHUC*/ 63700048
./  ADD  SSI=30020850,NAME=CATLG
* /*                                                                */  03050002
* /* MACCOMP Y-2 SC1DE/SJE92                                        */  03100002
* /* MACSTAT Y-2 72335/Y02020                                       */  03150002
* /*                                                                */  03200002
         MACRO                                                          03250002
&CATLBL  CATLG &MF=                                                     06000000
         AIF   ('&MF' NE 'L').C1                                        09000000
         AIF   ('&CATLBL' EQ '').C0                                     12000000
&CATLBL  DS    0H                       CATALOG MACRO LABEL             15000000
.C0      MEXIT                                                          18000000
.C1      AIF   ('&MF(1)' EQ 'E').C2                                     21000000
&CATLBL  SVC   26                       CALL AM/0 CATALOG               24000000
         MEXIT                                                          27000000
.C2      AIF   ('&MF(2)' EQ '' OR '&MF(2)' EQ '(1)').C3                 30000000
         AIF   ('&MF(2)'(1,1) EQ '(').C4                                33000000
&CATLBL  LA    1,&MF(2)                 LOAD CATALOG PARM REG           36000000
         AGO   .C5                                                      39000000
.C3      ANOP                                                           42000000
&CATLBL  SVC   26                       CALL AM/0 CATALOG               45000000
         MEXIT                                                          48000000
.C4      ANOP                                                           51000000
&CATLBL  LR    1,&MF(2)                 LOAD CATALOG PARM REG           54000000
.C5      SVC   26                       CALL AM/0 CATALOG               57000000
         MEND                                                           60000000
./  ADD  SSI=31310664,NAME=COMB
* /*                                                                 */ 03050002
* /* MACCOMP Y-2 SC1DE/SJD61                                         */ 03100002
* /* MACSTAT Y-2 73127/Y02020                                        */ 03110002
* /*                                                                 */ 03120002
         MACRO                                                          03150002
&N       COMB  &A                                                       06000000
         LCLA  &X                                                       09000000
         LCLC  &C,&L                                                    12000000
&X       SETA  N'&A                                                     15000000
&X       SETA  N'&A                                                     18000000
&N       DS    0CL&X                                                    21000000
&X       SETA  1                                                        24000000
.LOOP    ANOP                                                           27000000
&C       SETC  '&A(&X)'                                                 30000000
         AIF   (K'&C GE 6).BIG                                          33000000
         AIF   (K'&C EQ 5).MED                                          36000000
&L       SETC  '&C'(1,2)                                                39000000
         AGO   .OUT                                                     42000000
.MED     ANOP                                                           45000000
&L       SETC  '&C'(1,2).'&C'(5,1)                                      48000000
         AGO   .OUT                                                     51000000
.BIG     ANOP                                                           54000000
&L       SETC  '&C'(1,2).'&C'(5,2)                                      57000000
.OUT     ANOP                                                           60000000
         DC    AL1((8+Z&L-ZDT)/8)                                       63000000
&X       SETA  &X+1                                                     66000000
         AIF   (N'&A GE &X).LOOP                                        69000000
         MEND                                                           72000000
./  ADD  SSI=31310669,NAME=DICT
* /*                                                                 */ 03050002
* /* MACCOMP Y-2 SC1DE/SJD61                                         */ 03100002
* /* MACSTAT Y-2 73127/Y02020                                        */ 03150002
* /*                                                                 */ 03200002
         MACRO                                                          03250002
         DICT  &A,&B,&C,&D,&E                                           06000000
         LCLC  &N,&L,&M                                                 09000000
&L       SETC  '        '                                               12000000
&M       SETC  '&A'.'&L'(1,8-K'&A)                                      15000000
&N       SETC  '&M'(1,2).'&M'(5,2)                                      18000000
Z&N      DC    CL4'&N'                                                  21000000
         AIF   (&B EQ 32).COMB                                          24000000
         DC    AL1(&B),AL1(&C),AL1(&D),AL1(&E)                          27000000
         MEXIT                                                          30000000
.COMB    ANOP                                                           33000000
&L       SETC  'L''&N'                                                  36000000
         DC    AL1(&B),AL1(1+&N-ZCS),AL1(&L),AL1(&E)                    39000000
         MEND                                                           42000000
./  ADD  SSI=42831136,NAME=IDAAIR
*/********************************************************************/ 00050004
*/*                                                                  */ 00100004
*/*   MACRO NAME = IDAAIR                                            */ 00150004
*/*                                                                  */ 00200004
*/*   DESCRIPTIVE NAME =ALTERNATE INDEX RECORD                       */ 00250004
*/*                                                                  */ 00300004
*/*   FUNCTION = DESCRIBES THE ALTERNATE INDEX RECORD HEADER         */ 00350004
*/*                                                                  */ 00400004
*/*   INCLUDED MACROS = NONE                                         */ 00470004
*/*                                                                  */ 00480004
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00490004
*/*                                                                  */ 00492004
*/*   CREATED BY = RECORD MANAGEMENT MODULE IDA019RU                 */ 00494004
*/*                                                                  */ 00496004
*/*   STATUS = VS/1 RELEASE 4  (CHANGE FLAG @X04SVXX)                */ 00498004
*/*                                                                  */ 00498404
*/*   DATE OF LAST CHANGE = 9 AUG 74                                 */ 00498804
*/*                                                                  */ 00499204
*/********************************************************************/ 00499604
    DCL                                                                 00500004
      1 IDAAIX BASED,               /* ALTERNATE INDEX RECORD        */ 01000004
       2 AIXFG BIT(8),              /* FLAG FIELD                    */ 01500004
        3 * BIT(7),                 /* RESERVED                      */ 02000004
        3 AIXPKP BIT(1),            /* 0= RBA POINTERS 1=PRIME KEY      02500004
                                       POINTERS                      */ 03000004
       2 AIXPL FIXED(8),            /* LENGTH OF THE POINTER         */ 03500004
       2 AIXPC FIXED(15),           /* NUMBER OF POINTERS            */ 04000004
       2 AIXKL FIXED(8),            /* LENGTH OF AIX KEY             */ 04500004
       2 AIXKY CHAR(*);             /* AIX KEY                       */ 05000004
    DCL AIXPCMAX CONSTANT(32767)FIXED(15);/* MAXIMUM AIXPC VALUE     */ 05500004
./  ADD  SSI=82010221,NAME=IDAAMB
*/********************************************************************/ 00450037
*/*                                                                  */ 00500037
*/*   MACRO NAME = IDAAMB                                            */ 00550037
*/*                                                                  */ 00600037
*/*   DESCRIPTIVE NAME =ACCESS METHOD BLOCK                          */ 00650037
*/*                                                                  */ 00700037
*/*   FUNCTION = DESCRIBES DATA SET ATTRIBUTES AND SUPPLIES          */ 00750037
*/*              IOS COMPATIBLE FIELDS FOR I/O                       */ 00752037
*/*                                                                  */ 00760037
*/*   CONTROL BLOCK STRUCTURE = THE IDAAMB IS POINTED TO BY THE      */ 00770037
*/*              IDAAMBL                                             */ 00772037
*/*                                                                  */ 00780037
*/*   INCLUDED MACROS = NONE                                         */ 00790037
*/*                                                                  */ 00792037
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00794037
*/*                                                                  */ 00796037
*/*   CREATED BY = VSAM OPEN                                         */ 00798037
*/*                                                                  */ 00798437
*/*   STATUS = VS/1 RELEASE 4  (CHANGE FLAG @X04SVXX)                */ 00798837
*/*            VS/2 RELEASE 3  (CHANGE FLAG @Y30SDXX)                */ 00798904
*/*            IDATRACE SUPPORT (CHANGE FLAG @ZA29388)               */ 00799037
*/*                                                                  */ 00799237
*/*   DATE OF LAST CHANGE = 08/11/75                         @Z40WSRL*/ 00799604
*/*                                                                  */ 29900037
*/********************************************************************/ 29950037
*     DCL  1 IDAAMB  BASED ,                /* AMB                 */   30000037
*               2 AMBID         BIT(8),     /* AMB IDENTIFIER      */   30400037
*               2 AMBRSC        BIT(8),     /* RESOURCE TS BYTE    */   30800037
*               2 AMBLEN        FIXED(15),  /* AMB LENGTH          */   31200037
*               2 AMBLINK       PTR(31),    /* NEXT AMB            */   31600037
*               2 AMBBUFC       PTR(31),    /* BUFFER CONTROL      */   32000037
*               2 AMBPH         PTR(31),    /* PLACEHOLDER         */   32400037
*               2 AMBCACB       PTR(31),    /*PTR TO ACB OF CATALOG*/   32800037
*                                           /*USED TO ACCESS OBJECT*/   33200037
*               2 AMBDSB        PTR(31),    /* AMDSB POINTER       */   33600037
*               2 AMBEOVR       CHAR(1),    /* EOV REQUEST TYPE - NOT   34000037
*                                              USED IN MVM   @Y30DSJH*/ 34002037
*                 3 AMBFLG0     BIT(8),     /* MVM AMB FLAGS @Y30DSJH*/ 34004037
*                   4 AMBPSDS   BIT(1),     /* PAGE SPACE    @Y30DSJH*/ 34006037
*                   4 AMBSWSP   BIT(1),     /* SWAP SPACE    @Z40WSRL*/ 34006404
*                   4 *         BIT(6),     /* UNUSED IN MVM @Z40WSRL*/ 34008004
*               2 AMBFLG1       BIT(8),     /* FLAG BYTE ONE       */   34400037
*                 3 AMBCREAT    BIT(1),     /* ON IF IN CREATE MODE*/   34800037
*                3 AMBTYPE    BIT(1),       /*                       */ 35200037
*                3 AMBMCAT    BIT(1),       /* MASTER CATL           */ 35600037
*                3 AMBPCAT    BIT(1),       /* PRIVATE CATL          */ 36000037
*                 3 AMBSPEED  BIT(1),       /* CREATE SPEED OPITON */   36400037
*                 3 AMBUBF      BIT(1),     /* USER BUFFERING      */   36800037
*                 3 AMBJRN      BIT(1),     /* JOURNAL EXIT PRESENT*/   37200037
*                 3 AMBINBUF    BIT(1),     /* SHARED DS--DIRECT   */   37600037
*                                           /* REQ BFR INVALIDATION*/   38000037
*               2 AMBDSORG      BIT(16),    /* DATA SET ORGANIZ.   */   38400037
*                    3 *        BIT(12),     /* ALWAYS ZERO         */  38800037
*                    3 AMBDORGA BIT(1),      /* ACCESS METHOD INDIC */  39200037
*                    3 *        BIT(3),      /* ALWAYS ZERO         */  39600037
*               2 AMBIOBAD      PTR(31),    /* IOB ADDR            */   40000037
*                 3 AMBIOMB     PTR(31),    /* IOMB CHAIN IN MVM        40002037
*                                                            @Y30DSJH*/ 40004037
*               2 AMBCDSN       CHAR(3),    /* CATALOG DSN         */   40400037
*               2 AMBDDSN       CHAR(3),    /* DATA DSN            */   40800037
*               2 *             PTR(16),    /* RESERVED            */   41200037
*               2 AMBTIOT       FIXED(15),  /* OFFSET TO TIOT      */   41600037
*                2 AMBINFL      PTR(8),     /* INDICATOR FLAGS     */   42000037
*                  3 *          BIT(1),     /* RESERVED FOR EXCP   */   42400037
*                  3 *          BIT(2),     /* RESERVED            */   42800037
*                  3 AMBCAT     BIT(1),     /* AMB FOR VSAM CATLG  */   43200037
*                  3 AMBSCRA    BIT(1),     /* CATALOG CONTROL BLOCK    43210037
*                                              SYSTEM AREA   @X04SVLC*/ 43220037
*                  3 AMBUCRA    BIT(1),     /* CATALOG CONTROL BLOCK    43230037
*                                              USER AREA     @X04SVLC*/ 43240037
*                  3 AMBUPX     BIT(1),     /* SET ON IF UPGRADE TABLE  43250037
*                                              EXISTS        @X04SVLC*/ 43300037
*                  3 AMBSDS     BIT(1),     /* SET ON IF SYSTEM DATA    43350004
*                                              SET           @Z40WSRL*/ 43400004
*                2 AMBAMETH     PTR(8),     /* ACCESS METHOD TYPE  */   43600037
*                  %AMBVSAM='''11''X';      /* VSAM CODE           */   44000037
*               2 AMBDEBPT      PTR(31),    /* DEB ADDR            */   44400037
*                 3 AMBIFLGS    BIT(8),     /* IOS ERROR FLAGS     */   44800037
*                 3 AMBDEBAD    PTR(24),    /* DEB ADDR            */   45200037
*               2 AMBOFLGS      BIT(8),     /* OPEN FLAGS          */   45600037
*                 3 *       BIT(3),         /* ALWAYS ZERO          */  46000037
*                 3 AMBOPEN BIT(1),         /* AMB IS OPEN          */  46400037
*                 3 *       BIT(2),         /* ALWAYS ZERO          */  46800037
*                 3 AMBEXFG BIT(1),         /* USER EXIT FLAG       */  47200037
*                 3 AMBBUSY BIT(1),         /* BUSY BIT             */  47600037
*               2 AMBFLG2       PTR(8),     /* FLAG BYTE TWO @X04SVLC*/ 48000037
*                 3 AMBPUG BIT(1),          /* AMB PARTICIPATES IN      48050037
*                                              UPGRADE       @X04SVLC*/ 48100037
*               2 AMBRPT        FIXED(15),  /*                     */   48400037
*               2 AMBEDB        PTR(31),    /* EDB POINTER         */   48800037
*               2 AMBEOVPT      PTR(31),    /* PTR TO KEY OR RBA - NOT  49200037
*                                              USED IN MVM   @Y30DSJH*/ 49202037
*                 3 AMBAMBXN    PTR(31),    /* PTR TO AMB EXTENSION IN  49204037
*                                              MVM           @Y30DSJH*/ 49206037
*               2 AMBWKA        PTR(31),    /* WORK AREA PTR       */   49600037
*               2 AMBIWA        PTR(31),    /* INSERT WORK AREA PTR*/   50000037
*               2 *             PTR(31),    /* UNUSED        @Z30SSMR*/ 50450037
*               2 AMBPIXP       PTR(31),    /* PTR TO PRIME INDEX AMB*/ 50800037
*               2 AMBPAMBL      PTR(31),    /* PTR TO PRIMARY AMBL      51200037
*                                                            @X04SVLC*/ 51210037
*               2 AMBUPLH       PTR(31),    /* PTR TO UPGRADE PLH       51250037
*                                                            @X04SVLC*/ 51300037
*               2 AMBCSWD1 FIXED(31)BDY(WORD),/* CS WORD 1   @X04SVLC*/ 51310037
*                 3 AMBAFLG BIT(8), /* ADDITIONAL FLAGS      @X04SVLC*/ 51350037
*                   4 *      BIT(1),/* UNUSED                @X04SVLC*/ 51400037
*                   4 AMBLSR BIT(1),/* LSR OPTION            @X04SVLC*/ 51450037
*                   4 AMBGSR BIT(1),/* GSR OPTION            @Y30SDLP*/ 51460037
*                   4 AMBICI BIT(1),/* ICIP OPTION           @Y30SDLP*/ 51500037
*                   4 AMBDFR BIT(1),/* DEFER WRITES          @X04SVLC*/ 51550037
*                   4 AMBSIS BIT(1),/* SEQ INSERT STRAT      @X04SVLC*/ 51560037
*                   4 AMBCFX BIT(1),/* FIXED CTRL BLK OPTN   @Y30SDLP*/ 51562037
*                   4 *      BIT(1),/* UNUSED                @X04SVLC*/ 51564037
*                 3 * FIXED(8),     /* UNUSED                @X04SVLC*/ 51570037
*                 3 AMBRDCNT FIXED(15),/* NBR OF CIS READ FOR THIS AMB  51580037
*                                           - VS1 ONLY       @X04SVLC*/ 51590037
*               2 AMBBM2SH PTR(31), /* ADDR OF PLH DOING 2ND SEARCH     51592037
*                                      OF SUBPOOL - VS1 ONLY @X04SVLC*/ 51594037
*               2 AMBCPA PTR(31),   /* DB/DC - PTR TO WSHD.  NON DB/DC  51594237
*                                      & VS1 - UNUSED.  NON DB/DC & VS2 51594437
*                                      - PTR TO STATIC CPA'S @Y30DSJH*/ 51594637
*               2 AMBWSHD PTR(31),  /* PTR TO WORK SPACE HDR @X04SVLC*/ 51594837
*               2 AMBEXEX CHAR(8),  /* EXCEPTION EXIT NAME   @X04SVLC*/ 51595237
*               2 AMBSZRD FIXED(15),/* CP SIZE FOR READ      @X04SVLC*/ 51596037
*               2 AMBSZWR FIXED(15),/* CP SIZE FOR WRITE     @X04SVLC*/ 51598037
*               2 AMBSZFW FIXED(15),/* CP SIZE FORMAT WRITE  @X04SVLC*/ 51598437
*               2 AMBSZCP FIXED(15),/* SIZE FOR CPA BASE     @X04SVLC*/ 51598837
*               2 AMBVIOT PTR(31),  /* POINTER TO IDAVIOT    @X04SVLC*/ 51599237
*               2 AMBTRACE PTR(31); /* PTR TO TRACE TABLE    @ZA29388*/ 51599437
*  DCL   AMBINDEX BIT(1) CONSTANT('1'B);    /* INDEX TYPE AMB        */ 51600037
*  DCL   AMBDATA  BIT(1) CONSTANT('0'B);    /* DATA TYPE AMB         */ 52000037
* DCL AMBEOVMK BIT(8) CONSTANT('00000001'B); /* MOUNT BY KEY         */ 52400037
* DCL AMBEOVMR BIT(8) CONSTANT('10000001'B); /* MOUNT BY RBA         */ 52800037
* DCL AMBEOVAK BIT(8) CONSTANT('00000010'B); /* ALLOCATE BY KEY      */ 53200037
* DCL AMBEOVAR BIT(8) CONSTANT('10000010'B); /* ALLOCATE BY RBA      */ 53600037
* DCL AMBEOVUC BIT(8) CONSTANT('00000100'B); /* UPDATE CATALOG       */ 53650037
* DCL AMBEXOFF BIT(1) CONSTANT('1'B);       /* AMB NOT LOCKED       */  54000037
*%GOTO AMBBSL2 ;                                                        54400037
*/*                                                                */   54800037
*/*                                                                */   55200037
*/*                  ASSEMBLER DSECT FOR AMB                       */   55600037
*/*                                                                */   56000037
          MACRO                                                         56400037
         IDAAMB &DSECT=YES                                              56800037
          AIF   ('&DSECT' EQ 'NO').NODS                                 57200037
IDAAMB    DSECT                                                         57600037
          AGO   .AMBDSCT                                                58000037
.NODS     ANOP                                                          58400037
IDAAMB    DS    0F                       ACCESS METHOD BLOCK            58800037
.AMBDSCT  ANOP                                                          59200037
AMBID     DS    XL1                      AMB IDENTIFIER='40'            59600037
AMBRSC    DS    XL1                      RESOURCE TS BYTE               60000037
AMBIDENT  EQU   X'40'                    ID OF AMB                      60400037
AMBLEN    DS    H                        AMB LENGTH IN BYTES            60800037
AMBLINK   DS    A                        AMB LINK FIELD                 61200037
AMBBUFC   DS    A                        AMB BUFFER PTR                 61600037
AMBPH     DS    A                        AMB PLACE HOLDER               62000037
AMBCACB   DS    A                        PTR TO CATALOG ACB             62400037
AMBDSB    DS    A                        ADDRESS OF ASB                 62800037
AMBEOVR   DS    0BL1                     EOV REQUEST TYPE - NOT USED    63200037
*                                        BY EOV IN MVM         @Y30DSJH 63202037
AMBEOVMK  EQU   X'01'                    MOUNT BY KEY                   63600037
AMBEOVMR  EQU   X'81'                    MOUNT BY RBA                   64000037
AMBEOVAK  EQU   X'02'                    ALLOCATE BY KEY                64400037
AMBEOVAR  EQU   X'82'                    ALLOCATE BY RBA                64800037
AMBFLG0   DS    BL1                      MVM AMB FLAGS FIELD   @Y30DSJH 64802037
AMBPSDS   EQU   X'80'                    PAGE SPACE DATA SET   @Y30DSJH 64804037
AMBSWSP   EQU   X'40'                    SWAP SPACE DATA SET   @Z40WSRL 64854004
AMBFLG1   DS    BL1                      FLAG BYTE ONE                  65200037
AMBCREAT  EQU   X'80'                    ON IF IN CREATE MODE           65600037
AMBTYPE  EQU   X'40'                     TYPE OF AMB                    66000037
AMBMCAT  EQU   X'20'                     MASTER CATL                    66400037
AMBPCAT  EQU   X'10'                     PRIVATE CATL                   66800037
AMBSPEED  EQU   X'08'                    CREATE SPEED OPTION            67200037
AMBUBF   EQU   X'04'                     USER BUFFERING--CNV, MOVE MODE 67600037
AMBJRN   EQU   X'02'                     JOURNAL EXIT SPECIFIED         68000037
AMBINBUF EQU   X'01'                     SHARE--INVALIDATE DIR REQ BFRS 68400037
AMBDSORG  DS    BL2                      DS ORG FIELD                   68800037
AMBDORGA EQU   X'08'                     ACCESS METHOD INDICATOR        69200037
AMBIOBAD  DS    0A                       IOB ADDR              @Y30DSJH 69600037
AMBIOMB   DS    A                        IOMB CHAIN IN MVM     @Y30DSJH 69602037
AMBCDSN   DS    CL3                      CATALOG DSN                    70000037
AMBDDSN   DS    CL3                      DATA DSN                       70400037
          DS    H                        RESERVED                       70800037
AMBTIOT   DS    H                        OFFSET TO TIOT                 71200037
AMBINFL  DS    XL1                       INDICATOR FLAGS                71600037
AMBCAT   EQU   X'10'                     AMB FOR VSAM CATALOG           72000037
AMBSCRA   EQU   X'08'                    CATALOG CONTROL BLOCK          72010037
*                                        SYSTEM AREA           @X04SVLC 72020037
AMBUCRA   EQU   X'04'                    CATALOG CONTROL BLOCK          72030037
*                                        USER AREA             @X04SVLC 72040037
AMBUPX   EQU   X'02'                     UPGRADE TAB EXISTS    @X04SVLC 72050037
AMBSDS    EQU   X'01'                    SYSTEM DATA SET       @Z40WSRL 72100004
AMBAMETH DS    XL1                       ACCESS METHOD TYPE             72400037
AMBVSAM  EQU   X'11'                     VSAM CODE                      72800037
AMBIFLGS  DS    XL1                      ERROR FLAGS                    73200037
AMBDEBAD  DS    AL3                      ADDRESS OF DEB                 73600037
AMBOFLGS  DS    BL1                      OPEN FLAGS                     74000037
AMBOPEN   EQU   X'10'                    AMB IS OPEN                    74400037
AMBEXFG  EQU   X'02'               USER EXIT FLAG                       74800037
AMBBUSY   EQU   X'01'                    AMB IS BUSY                    75200037
AMBFLG2   DS    BL1                      FLAG BYTE TWO         @X04SVLC 75250037
AMBPUG    EQU   X'80'                    AMB PARTICIPATES IN            75300037
*                                              UPGRADE         @X04SVLC 75350037
AMBRPT    DS    H                                                       76000037
AMBEDB    DS    A                        ADDRESS OF EDB                 76400037
AMBEOVPT  DS    0A                       PTR TO KEY OR RBA FOR @Y30DSJH 76800037
*                                        EOV - NOT USED IN MVM @Y30DSJH 76802037
AMBAMBXN  DS    A                        PTR TO AMB EXTENSION  @Y30DSJH 76804037
*                                        IN MVM                @Y30DSJH 76806037
AMBWKA    DS    A                        WORK AREA PTR                  77200037
AMBIWA    DS    A                        INSERT WORK AREA PTR           77600037
         DS    A                         UNUSED                @Z30SSMR 78000037
AMBPIXP   DS    A                        POINTER TO PRIME INDEX AMB     78400037
AMBPAMBL DS    A                         PTR TO PRIMARY AMBL            78800037
AMBUPLH  DS    A                         PTR TO UPGRADE PLH    @X04SVLC 78850037
AMBCSWD1 DS    0A                        CS WORD 1            @X04SVLC  78850437
AMBAFLG  DS    BL1                       ADDITIONAL FLAGS      @X04SVLC 78850837
AMBLSR   EQU   X'40'                     LSR OPTION            @X04SVLC 78851637
AMBGSR   EQU   X'20'                     GSR OPTION           @X04SVLC  78851737
AMBICI   EQU   X'10'                     ICIP OPTION           @X04SVLC 78851837
AMBDFR   EQU   X'08'                     DEFER WRITES          @X04SVLC 78855737
AMBSIS   EQU   X'04'                     SEQ INSERT STRAT      @X04SVLC 78863937
AMBCFX   EQU   X'02'                     FIXED CNTL BLK OPTION @X04SVLC 78865937
         DS    AL1                       UNUSED                @X04SVLC 78867937
AMBRDCNT DS    H                         NBR OF CIS READ FOR THIS AMB   78877937
*                                                            @X04SVLC   78879937
AMBBM2SH DS    A                         ADDR OF PLH DOING 2ND SEARCH   78881937
*                                        OF SUBPOOL            @X04SVLC 78883937
AMBCPA   DS    A                         DB/DC - PTR TO WSHD. NON DB/DC 78900037
*                                        & VS1 - UNUSED.  NON DB/DC &   78902037
*                                        VS2 - STATIC CPA PTR. @Y30DSJH 78904037
AMBWSHD  DS    A                         PTR TO WORK SPACE HDR @X04SVLC 78904437
AMBEXEX  DS    CL8                       EXCEPTION EXIT NAME   @X04SVLC 78904837
AMBSZRD  DS    H                         CP SIZE FOR READ      @X04SVLC 78905237
AMBSZWR  DS    H                         CP SIZE FOR WRITE     @X04SVLC 78905637
AMBSZFW  DS    H                         CP SIZE FORMAT WRITE  @X04SVLC 78905737
AMBSZCP  DS    H                         SIZE FOR CPA BASE     @X04SVLC 78905837
AMBVIOT  DS    A                         POINTER TO IDAVIOT    @X04SVLC 78905937
AMBTRACE DS    A                         PTR TO TRACE TABLE    @ZA29388 78955937
AMBLENTH  EQU   *-IDAAMB                 LENGTH OF AMB IN BYTES         79200037
          MEND                                                          79600037
*                                                                       80000037
*                                                                       80400037
*%AMBBSL2: ;                                                            80800037
./  ADD  SSI=60480024,NAME=IDAAMBL
 /********************************************************************/ 00050003
 /*                                                                  */ 00100003
 /*   MACRO NAME = IDAAMBL                                           */ 00150003
 /*                                                                  */ 00200003
 /*   DESCRIPTIVE NAME = ACCESS METHOD BLOCK LIST.                   */ 00250003
 /*                                                                  */ 00300003
 /*   FUNCTION = THE AMBL DESCRIBES A VSAM CLUSTER AND POINTS TO THE */ 00350003
 /*              CLUSTER'S DATA SET AND INDEX AMB'S. WHEN THE CLUSTER*/ 00400003
 /*              IS OPENED, AN AMBL IS BUILT TO DESCRIBE THE CLUSTER.*/ 00450003
 /*              IF THE CLUSTER IS SHARED WITH OTHER USERS, THE      */ 00500003
 /*              EXISTING AMB'S ADDRESSES ARE PUT INTO THE AMBL.     */ 00550003
 /*                                                                  */ 00600003
 /*   CONTROL BLOCK STRUCTURE = THE AMBL IS POINTED TO BY AN ACB     */ 00650003
 /*                             (ACBAMBL).                           */ 00700003
 /*                                                                  */ 00750003
 /*   INCLUDED MACROS = NONE                                         */ 00800003
 /*                                                                  */ 00850003
 /*   METHOD OF ACCESS = PL/S - RESPECIFY IDAAMBL BASED.             */ 00900003
 /*                                                                  */ 00950003
 /*   CREATED BY: VSAM OPEN MODULE IDA0192F.                         */ 01000003
 /*                                                                  */ 01050003
 /*   STATUS = VS1 RELEASE 4, VS2 RELEASE 3,  (CHANGE FLAGS @X04SVXX)*/ 01100004
 /*                                                                  */ 01150003
 /*   DATE OF LAST CHANGE = 29/07/75                         @Z40WSRL*/ 01200004
 /*                                                                  */ 01250003
 /********************************************************************/ 01300003
         DCL 1 IDAAMBL BASED,                                           64546803
               2 AMBLPCHN     PTR(31),  /* PRIMARY CHAIN POINTER    */  64800003
               2 AMBLSCHN     PTR(31),  /* SECONDARY CHAIN POINTER  */  65400003
               2 AMBLACB      PTR(31),  /* POINTER TO ACB           */  66000003
               2 AMBLEOV      FIXED(31),/* EOV/RM INTERFACE         */  66600003
                 3 AMBLEFLG   CHAR(1),  /* EOV FLAGS                */  67200003
                   4 AMBLWAIT BIT(1),   /* EOV IS WAITING           */  67800003
                   4 AMBLESET BIT(1),   /* EOV RESET CONTROL BLOCKS. */ 68400003
                 3 AMBLCOMP   CHAR(1),  /* EOV LOCK                 */  69000003
                 3 *          CHAR(2),  /* NOT USED                 */  69600003
               2 AMBLDDNM     CHAR(8),  /* DDNAME FROM ACB          */  70200003
                 3 AMBLIDF    CHAR(8),  /* CLUSTER ID        @X04SVLC*/ 70250003
                   4 AMBLCACB PTR(31)BDY(BYTE),/* CAT ACB    @X04SVLC*/ 70300003
                   4 AMBLDCI  FIXED(24)BDY(BYTE),/* CI NBR   @X04SVLC*/ 70350003
                   4 AMBLQ    BIT(8),   /* QUALIFIER         @X04SVLC*/ 70450003
                    5 AMBLDDC BIT(1),/* DD CONNECT ONLY      @X04SVLC*/ 70500003
                    5 AMBLGSR BIT(1),/* OPENED FOR GSR       @X04SVLC*/ 70550003
                    5 AMBLLSR BIT(1),/* OPENED FOR LSR       @X04SVLC*/ 70600003
                    5 AMBLFSTP BIT(1),/* OPENED FOR FAST PATH           70650003
                                                             @X04SVLC*/ 70700003
                    5 AMBLUBF BIT(1),/* OPENED FOR USER BFR  @X04SVLC*/ 70750003
                    5 AMBLKSDS BIT(1),/* OPENED AS KSDS      @X04SVLC*/ 70760003
                    5 AMBLESDS BIT(1),/* OPENED AS ESDS      @X04SVLC*/ 70770003
                    5 AMBLDFR BIT(1),/* OPENED WITH DEFER OPTION        70780003
                                                             @X04SVLC*/ 70790003
               2 AMBLXPT      PTR(31),  /* PTR FR BASE AMBL TO PATH     70800003
                                           AMBL & VICE-VERSA @X04SVLC*/ 70850003
               2 AMBLVC       FIXED(15),/* VALID AMBL TABLE  @X04SVLC*/ 70950003
                 3 AMBLVRT    FIXED(8), /* RELATIVE VAT      @X04SVLC*/ 71000003
                 3 AMBLENO    FIXED(8), /* OFFSET WITHIN VAT @X04SVLC*/ 71050003
               2 AMBLTYPE     BIT(8),   /* STRUCTURE TYPE    @X04SVLC*/ 71060003
                 3 AMBLPATH   BIT(1),   /* ACB IS FOR PATH   @X04SVLC*/ 71070003
                 3 AMBLUPGR   BIT(1),   /* ACB FOR UPGRADE   @X04SVLC*/ 71080003
                 3 AMBLAIX    BIT(1),   /* ACB FOR AIX END USE-IMPLIES  71090003
                                           AMBLBASE ON       @X04SVLC*/ 71090403
                 3 AMBLBASE   BIT(1),   /* ACB FOR BASE      @X04SVLC*/ 71092003
                 3 AMBLFIX BIT(1),      /* STRUCTURE FIXED BY           71092403
                                           OPEN              @X04SVLC*/ 71092803
                 3 *          BIT(3),   /* UNUSED            @X04SVLC*/ 71094003
               2 *            CHAR(1),  /* UNUSED            @X04SVLC*/ 71100003
               2 AMBLID       CHAR(1),  /* AMBL IDENTIFER           */  73200003
               2 AMBLSHAR     BIT(8),   /* SHARING INDICATORS       */  73800003
                 3 AMBLPRIM   BIT(1),   /* P-AMBL INDICATOR         */  74400003
                 3 AMBLCATO   BIT(1),   /* CATALOG OPEN IND IS ON   */  75000003
                 3 AMBLWRIT   BIT(1),   /* OUTPUT/UPDATE SPECIFIED  */  75600003
                 3 *          BIT(5),   /* RESERVED                 */  76200003
               2 AMBLLEN      PTR(8),   /* AMBL LENGTH              */  76800003
               2 AMBLFLG1     BIT(8),   /* FLAG BYTE ONE            */  77400003
                 3 AMBLFULL   BIT(1),   /* FULL ACCESS OK           */  78000003
                 3 AMBLCINV   BIT(1),   /* CINV ACCESS OK           */  78600003
                 3 AMBLUPD    BIT(1),   /* UPDATE ACCESS OK         */  79200003
                 3 AMBLVVIC   BIT(1),   /* AMBL FOR VVIC DATA SET       79800003
                                                             @X04SVRP*/ 79810003
                   4 AMBLSDS  BIT(1),   /* AMBL FOR SYSTEM DATA SET     79820004
                                                             @Z40WSRL*/ 79830004
                 3 AMBLSCRA   BIT(1),   /* AMBL FOR SYSTEM CATALOG      79850003
                                           RECOVERY AREA     @X04SVRP*/ 79900003
                 3 AMBLUCRA   BIT(1),   /* AMBL FOR USER CATALOG        79950003
                                           RECOVERY AREA     @X04SVRP*/ 80000003
                 3 AMBLCAT    BIT(1),   /* IND ACB FOR A CATALOG    */  80400003
                 3 AMBLDUMY   BIT(1),   /* DD DUMMY SPECIFIED       */  81000003
                                        /* TO SIMPLIFY TESTING  FOR  */ 81050003
                                        /* SPECIAL DATA SETS IN      */ 81100003
                                        /* EXISTING CODE THE AMBLCAT */ 81150003
                                        /* AMBLVVIC AND AMBLSCRA     */ 81200003
                                        /* BITS ARE SET AS FOLLOWS:  */ 81250003
                                        /* VVIC SCRA X CAT TYPE OF   */ 81300003
                                        /*                 DATA SET  */ 81350003
                                        /*   0    0   X 0  CATALOG   */ 81400003
                                        /*   1    0   X 1  VVIC      */ 81450003
                                        /*   0    1   X 1  SCRA      */ 81500003
               2 AMBLFLG2     BIT(8),   /* FLAG BYTE TWO            */  81600003
                 3 *          BIT(3),   /* RESERVED          @Z30SSDT*/ 82860003
                 3 AMBLSTAG   BIT(1),   /* CLUSTER IS STAGED @X04ACPS*/ 82870003
                 3 *          BIT(4),   /* RESERVED          @X04ACPS*/ 82900003
               2 AMBLNST      CHAR(1),  /* NUMBER OF STRINGS         */ 83400003
               2 AMBLNUM      FIXED(15),/* NUMBER OF AMB PTRS IN    */  84000003
                                        /* AMBL                     */  84600003
               2 *            CHAR(1),  /* RESERVED                 */  85250003
               2 AMBLNIDS     PTR(8),   /* NUMBER IF IDS            */  85300003
               2 AMBLMIDS(5)  CHAR(2),  /* IDS OF MODULES LOADED    */  85350003
               2 AMBLDTA      PTR(31),  /* POINTER TO DATA AMB      */  85400003
               2 AMBLIX       PTR(31),  /* POINTER TO INDEX AMB     */  85450003
               2 AMBLBIB      PTR(31),  /* PTR TO BIB        @X04SVLC*/ 89410003
               2 AMBLCMB      PTR(31);  /* PTR TO CMB        @X04SVRP*/ 89460003
./  ADD  SSI=81790434,NAME=IDAAMBXN
*/********************************************************************/ 00050037
*/*                                                                  */ 00050437
*/*   MACRO NAME = IDAAMBXN                                          */ 00050837
*/*                                                                  */ 00050937
*/*   DESCRIPTIVE NAME = VSAM AMB EXTENSION - IOMB EXTENSION         */ 00057937
*/*                                                                  */ 00059937
*/*   FUNCTION =  TO PROVIDE ADDITIONAL FIELDS FOR MVM               */ 00061937
*/*                                                                  */ 00063937
*/*   INCLUDED MACROS = NONE                                         */ 00064837
*/*                                                                  */ 00064937
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00075537
*/*                                                                  */ 00085537
*/*   CREATED BY = VSAM OPEN                                         */ 00085937
*/*                                                                  */ 00086337
*/*   STATUS = VS/2 RELEASE 3    (CHANGE FLAG @Y30SDXX)              */ 00088504
*/*            VS/2 RELEASE 4.1  (CHANGE FLAG @Z40GSDT)              */ 00090504
*/*                                                                  */ 00090904
*/*   DATE OF LAST CHANGE = 15 AUGUST 75                             */ 00092504
*/*                         11 APR  77                       @ZA14809*/ 00092737
*/*                          9 MAY  77                       @ZA14824*/ 00092837
*/*                                                                  */ 00092937
*/********************************************************************/ 00094637
* /*                                                                 */ 00098337
* /*    MACCOMP                         Y-2 SC1DE/SJD61              */ 00100037
* /*    MACSTAT                         Y-2 73191/Y02113             */ 00107637
* /*                                                                 */ 00118237
*/********************************************************************/ 00120237
*/* VSAM IDAAMB EXTENSION                                            */ 00128237
*/********************************************************************/ 00128637
        DCL 1 IDAAMBXN BASED(AMBEOVPT), /*AMB EXTENSION BLK  @X30SDLC*/ 00128837
                2 AMBXEOV   BDY(WORD),  /* EOV INTERFACE FIELD.Y02113*/ 00139437
                  3 AMBXEVPT PTR(31),   /* EOV DATA PTR              */ 00150002
                  3 AMBXRSC  BIT(8),    /* RESOURCE T&S BYTE         */ 00200002
                  3 AMBXEOVR CHAR(1),   /* EOV REQUEST TYPE          */ 00250002
                  3 AMBXEVRC PTR(8),    /* AMEOV RETURN CODE @OZ04909*/ 00300037
                  3 *        BIT(8),    /* UNUSED            @OZ04909*/ 00310037
                2 AMBXASCB   PTR(31),   /* EOV CALLER ASCB   @OZ04909*/ 00400037
                2 AMBXECB    FIXED(31), /* ECB FOR AMEOV     @OZ04909*/ 00450037
                2 AMBXCSWD PTR(31)BDY(WORD),/* BFR MGR CS WD @Y30SDLC*/ 00460037
                  3 * FIXED(15),    /* UNUSED                @Y30SDLC*/ 00470037
                  3 AMBXRDCT FIXED(15),/* NBR CI READ        @Y30SDLC*/ 00480037
                2 AMBXBM2S PTR(31); /* ADDR OF PLH DOING 2ND SEARCH     00490037
                                       OF SUBPOOL            @Y30SDLC*/ 00492037
*/********************************************************************/ 00494037
*/* VSAM IDAIOMB EXTENSION                                           */ 00496037
*/********************************************************************/ 00498037
         DCL 1 IDAIOMBX BASED BDY(WORD),/* MVM IOMB EXT      @X30SDLC*/ 00500037
                2 IOMXLOCK CHAR(1),     /* RESOURCE T&S BYTE         */ 00550002
                2 IOMXFLGS BIT(8),      /* I/O MGR FLAGS       */       00600002
                  3 IOMXUSE BIT(1),     /* REDUNDANT BIT     @Y30SSMR*/ 00850037
                  3 IOMXEOVW BIT(1),    /* EOV WAIT FOR ASYN @ZA02269*/ 00910037
                  3 IOMXSCAN BIT(1),    /* SCANBUFF BIT      @ZA14824*/ 00920037
                  3 * BIT(5),           /* RESERVED          @ZA02269*/ 00925037
                2 * CHAR(2),            /* RESERVED          @Z40GSDT*/ 00930004
                2 IOMXPDET,         /* PD FIELDS             @X30SDLC*/ 00950037
                  3 IOMXBFLG FIXED(16), /* I/O FLAGS AT I/O INITIATION*/01000002
                  3 * CHAR(2),          /* RESERVED          @Z40GSDT*/ 01010004
                  3 IOMXR13S PTR(31),   /* USER SAVE AREA PTR*/         01050002
                  3 IOMXRPL PTR(31),    /*PTR TO HEAD RPL*/             01100002
                2 IOMXR14 PTR(31),      /*ASYNC REG 14 SAVE  @ZA14809*/ 01150037
                2 IOMXRECB CHAR(4) BDY(WORD), /*RECORD MGT I/O ECB */   01200004
                  3 IOMXECB PTR(31),    /* I/O ECB*/                    01250002
                    4 IOMXWAIT BIT(1),  /* I/O WAIT BIT*/               01300002
                    4 IOMXRSLT BIT(7),  /* I/O COMPLETION RESULT*/      01350002
                      5 IOMXPOST BIT(1),/* I/O POST BIT*/               01400002
                      5 IOMXIOCC BIT(6),/* I/O COMPLETION CODE*/        01450002
                    4 IOMXRBPT PTR(24); /* PTR TO RB OR RESULT*/        01500002
./  ADD  SSI=43190015,NAME=IDAAMDSB
*/********************************************************************/ 00050003
*/*                                                                  */ 00100003
*/*   MACRO NAME = IDAAMDSB                                          */ 00150003
*/*                                                                  */ 00200003
*/*   DESCRIPTIVE NAME =DATA SET CHARACTERISTICS                     */ 00250003
*/*              AND STATISTICS BLOCK                                */ 00300003
*/*                                                                  */ 00320003
*/*   FUNCTION = CONTAINS DATA SET CHARACTERISTICS AND STATISTICS    */ 00350003
*/*                                                                  */ 00400003
*/*   CONTROL BLOCK STRUCTURE = THE IDAAMDSB IS POINTED TO BY IDAAMB */ 00450003
*/*                                                                  */ 00500003
*/*   INCLUDED MACROS = NONE                                         */ 00550003
*/*                                                                  */ 00600003
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00650003
*/*                                                                  */ 00700003
*/*   CREATED BY = VSAM OPEN                                         */ 00750003
*/*                                                                  */ 00800003
*/*   STATUS = VS/1 RELEASE 4  (CHANGE FLAG @X04SVXX)                */ 00850003
*/*                                                                  */ 00900003
*/*   DATE OF LAST CHANGE = 8 AUG 74                                 */ 00950003
*/*                                                                  */ 01000003
*/********************************************************************/ 01050003
*        DCL 1 IDAAMDSB BASED,/* DATA SET CHAR./STATISTICS BLOCK     */ 02000003
*              2 AMDSBID      CHAR(1),  /* CONTROL BLOCK ID          */ 04000003
*              2 AMDATTR      CHAR(1),  /* ATTRIBUTES                */ 06000003
*                3 AMDDST     BIT(1),   /* KEY, CHRONOLOGIC          */ 08000003
*                3 AMDWCK     BIT(1),   /* WRITE CHECK               */ 10000003
*                3 AMDSDT     BIT(1),   /* SEQ SET WITH DATA         */ 12000003
*                3 AMDREPL BIT(1),      /* REPLICATION               */ 14000003
*                3 AMDORDER   BIT(1),   /* USE VOLS IN LIST ORDER    */ 16000003
*                3 AMDRANGE   BIT(1),   /* KEY RANGE DATA SET        */ 18000003
*                3 AMDRRDS    BIT(1),   /* RELATIVE RECORD DATA SET     18050003
*                                                            @X04SVLC*/ 18060003
*                3 AMDSPAN    BIT(1),   /* SPANNED RECORDS ARE ALLOWED  18100003
*                                                            @X04SVLC*/ 18150003
*              2 AMDLEN FIXED(15),      /* LENGTH OF AMDSB           */ 20000003
*              2 AMDNEST      FIXED(15),/* NO OF ENTRIES IN IDX SECTN*/ 22000003
*                3 AMDAXRKP   FIXED(15),/* RELATIVE KEY POSITION OF     22050003
*                                            ALTERNATE KEY   @X04SVLC*/ 22100003
*              2 AMDRKP       FIXED(15),/* RELATIVE KEY POSITION     */ 24000003
*              2 AMDKEYLN     FIXED(15),/* KEY LENGTH                */ 26000003
*              2 AMDPCTCA PTR(8),       /* % FREE CI IN CA           */ 28000003
*              2 AMDPCTCI PTR(8),       /* % FREE BYTES IN CI        */ 30000003
*              2 AMDCIPCA FIXED(15),    /* TOTAL NO. OF CIS PER CA   */ 32000003
*              2 AMDFSCA      FIXED(15),/* NO OF FREE CIS PER CA     */ 34000003
*              2 AMDFSCI      FIXED(31),/* NO OF FREE BYTES PER CI   */ 36000003
*              2 AMDCINV      FIXED(31),/* CONTROL INTERVAL SIZE     */ 38000003
*              2 AMDLRECL     FIXED(31),/* MAXIMUM RECORD SIZE       */ 40000003
*              2 AMDHLRBA     FIXED(32),/* RBA OF HIGH LEVEL IDX REC */ 42000003
*                3 AMDNSLOT   FIXED(31),/* NO. OF RECORD SLOTS PER CI   42050003
*                                                            @X04SVLC*/ 42100003
*              2 AMDSSRBA     FIXED(32),/* RBA OF FIRST SEQ SET REC  */ 44000003
*                3 AMDMAXRR   FIXED(31),/* MAX RELATIVE RECORD NUMBER   44050003
*                                                            @X04SVLC*/ 44150003
*              2 AMDPARDB     PTR(31),  /* PTR TO FIRST ARDB         */ 46000003
*              2 AMDATTR3   BIT(8),     /* ATTRIBUTES        @X04SVLC*/ 50050003
*                3 AMDUNQ     BIT(1),  /* ON=NON-UNIQUE KEYS @X04SVLC   50100003
*                                         OFF=UNIQUE KEYS    @X04SVLC*/ 50102003
*                3 AMDFAULT   BIT(1),  /* ON=CYLINDER FAULT ON SS1      50110003
*                                         OFF=STAGE THE DATA SET        50130003
*                                         (DEFAULT)          @X04SVLC*/ 50140003
*                3 AMDBIND    BIT(1),  /* ON=BIND THE DATA SET ON SS1   50142003
*                                         OFF=DO NOT BIND (DEFAULT)     50146003
*                                                            @X04SVLC*/ 50148003
*                3 AMDWAIT    BIT(1),  /* ON=WAIT ON A RELINQUISH       50148403
*                                         OFF=DO NOT WAIT (DEFAULT)     50149203
*                                                            @X04SVLC*/ 50149603
*                3 AMDLM      BIT(1),   /* ON=DATA SET LOADED           50149703
*                                          OFF=LOAD MODE OR NOT LOADED  50149803
*                                                            @X04SVLC*/ 50149903
*                3 *          BIT(3),   /* UNUSED            @X04SVLC*/ 50150003
*              2 *          CHAR(7),    /* UNUSED            @X04SVLC*/ 50200003
*              2 AMDSTAT      BDY(WORD),/* STATISTICS        @X04SVLC*/ 50250003
*                3 AMDSTSP    CHAR(8),  /*    SYSTEM TIME STAMP      */ 52000003
*                3 AMDNIL     FIXED(15),/* NUMBER INDEX LEVELS       */ 54000003
*                3 AMDNEXT    FIXED(15),/* NUMBER OF EXTENTS         */ 56000003
*                3 AMDNLR     FIXED(31),/* NUMBER LOGICAL RECORDS    */ 58000003
*                3 AMDDELR    FIXED(31),/* NUMBER DELETED RECORDS    */ 60000003
*                3 AMDIREC    FIXED(31),/* NUMBER INSERTED RECORDS   */ 62000003
*                3 AMDUPR     FIXED(31),/* NUMBER UPDATED RECORDS    */ 64000003
*                3 AMDRETR    FIXED(31),/* NUMBER RETRIEVED RECORDS  */ 66000003
*                3 AMDASPA    FIXED(31),/* BYTES OF FREE SPACE IN DS */ 68000003
*                3 AMDNCIS    FIXED(31),/* NUMBER OF CI SPLITS       */ 70000003
*                3 AMDNCAS    FIXED(31),/* NUMBER OF CA SPLITS       */ 72000003
*                3 AMDEXCP    FIXED(31);/* NUMBER OF EXCPS           */ 74000003
*                                                                       76000003
*                                                                       78000003
*                                                                       80000003
*%  DCL  (AMDKSDS,AMDCSDS) CHAR;                                        82000003
*%       AMDKSDS = '''1''B';            /* KEY SEQUENTIAL DATA SET   */ 84000003
*%       AMDCSDS = '''0''B';            /* CHRONOLOGIC SEQ DATA SET  */ 86000003
*%       AMDSBLEN = 'LENGTH(IDAAMDSB)'; /* LENGTH OF AMDSB           */ 88000003
./  ADD  SSI=42831140,NAME=IDAARDB
*/********************************************************************/ 00050004
*/*                                                                  */ 00100004
*/*   MACRO NAME = IDAARDB                                           */ 00150004
*/*                                                                  */ 00200004
*/*   DESCRIPTIVE NAME =ADDRESS RANGE DEFINITION BLOCK               */ 00250004
*/*                                                                  */ 00300004
*/*   FUNCTION = TO DEFINE THE HIGH AND LOW KEYS OF A KEY RANGE.     */ 00350004
*/*              IT DESCRIBES THE KEY RANGE, ITS LOCATION AND RBA    */ 00360004
*/*              EXTENTS.                                            */ 00370004
*/*                                                                  */ 00400004
*/*   CONTROL BLOCK STRUCTURE = THE QUEUE OF IDAARDBS ORIGINATES     */ 00450004
*/*              IN THE IDAAMDSB                                     */ 00460004
*/*                                                                  */ 00500004
*/*   INCLUDED MACROS = NONE                                         */ 00550004
*/*                                                                  */ 00600004
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00650004
*/*                                                                  */ 00700004
*/*   CREATED BY = VSAM OPEN                                         */ 00750004
*/*                                                                  */ 00800004
*/*   STATUS = VS/1 RELEASE 4  (CHANGE FLAG @X04SVXX)                */ 00850004
*/*                                                                  */ 00900004
*/*   DATE OF LAST CHANGE = 8 AUG 74                                 */ 00950004
*/*                                                                  */ 01000004
*/********************************************************************/ 01050004
*        DCL 1 IDAARDB BASED, /* ADDRESS RANGE DEFINITION BLOCK      */ 03000000
*              2 ARDID        CHAR(1),  /* CONTROL BLOCK ID          */ 06000000
*              2 ARDTYPE      CHAR(1),  /* ENTRY TYPE                */ 09000000
*                3 ARDKR      BIT(1),   /* KEY RANGE ENTRY           */ 12000000
*                3 ARDHLI     BIT(1),   /* HIGH LVS (OR TOTAL) INDEX */ 15000000
*                3 ARDSS      BIT(1),   /* SEQ SET FOR SS WITH DATA  */ 18000000
*                3 ARDUOVFL BIT(1),     /* USE OVFL FOR THIS KEY     */ 21000000
*                                       /* RANGE                     */ 24000000
*                3 ARDEOD     BIT(1),   /* END OF DATA ARDB          */ 27000000
*                3 ARDUSED    BIT(1),   /* ARDB HAS HAD SPACE REMOVED*/ 30000000
*              2 ARDLEN       FIXED(15),/* LENGTH OF THIS ARDB       */ 33000000
*              2 ARDNPTR      PTR(31),  /* PTR TO NEXT ARDB          */ 36000000
*              2 ARDHKRBA     FIXED(32),/* RBA OF HIGH KEY CI        */ 39000000
*              2 ARDHRBA      FIXED(32),/* HIGH USED RBA             */ 42000000
*              2 ARDERBA      FIXED(32),/* HIGH ALLOCATED RBA        */ 45000000
*              2 ARDVOLSR     CHAR(6),  /* SER OF HIGH RBA VOLUME    */ 48000000
*              2 ARDRELNO     FIXED(15),/* I/O SUPPORT-CATALOG INFO  */ 51000000
*              2 ARDPRF BIT(8),         /* PREFORMAT BYTE            */ 54000000
*                                       /* CORRESPONDS TO FIELD      */ 57000000
*                                       /*  ITYPEXT OF THE VSAM      */ 60000000
*                                       /*  CATALOG                  */ 63000000
*                3 ARDPRSS BIT(1),      /* SEQ SET WITH DATA         */ 66000000
*                3 ARDPRFMT BIT(1),     /* EXTENTS NOT PREFORMATTED  */ 69000000
*                3 * BIT(6),            /* RESERVED AND MUST AGREE   */ 72000000
*                                       /*  WITH ITYPEXT             */ 75000000
*              2 ARDKEYS      CHAR(*);  /* LOW AND HIGH KEY VALUES   */ 78000000
*                                       /* FOR KEY RANGE ENTRY,      */ 81000000
*                                       /* SIZE = 2*AMDKEYLN         */ 84000000
./  ADD  SSI=32291250,NAME=IDAARWA
* /* ARWA (VSAM RESTART WORK AREA) DECLARATION                      */  00600000
* /*                                                                 */ 00650002
* /* MACCOMP Y-2 SC1DE/SJD61                                         */ 00700002
* /* MACSTAT Y-2 73192/Y02113                                @Y021131*/ 00750002
* /*                                                                 */ 00800002
* /* DESCRIBES WORK AREA USED BY ALL AM/0 RESTART ROUTINES          */  01200000
* /* CREATED BY VSAM RESTART                                        */  01800000
* /*                                                                */  02400000
*%GOTO   ARWA1;                                                         03000000
* /*     ARWA DIGRAM                                                */  03600000
* /*  0 -------------------------------------------                 */  04200000
* /*    |                    |                    |                 */  04800000
* /*    |      ARWASIZE      |      ARWAACBN      |                 */  05400000
* /*  4 |--------------------|--------------------|                 */  06000000
* /*    |                    |          |         |                 */  06600000
* /*    |      ARWABUFS      | RESERVED |ARWAMCDE |                 */  07200000
* /*  8 |-----------------------------------------|                 */  07800000
* /*    |          |                              |                 */  08400000
* /*    | ARWARCDE |           ARWAOPEN           |                 */  09000000
* /* 12 |-----------------------------------------|                 */  09600000
* /*    |                                         |                 */  10200000
* /*    |                ARWARSWA                 |                 */  10800000
* /* 16 |-----------------------------------------|                 */  11400000
* /*    |                                         |                 */  12000000
* /*    |                ARWAUALP                 |                 */  12600000
* /* 20 |-----------------------------------------|                 */  13200000
* /*    |                                         |                 */  13800000
* /*    |                ARWAWALP                 |                 */  14400000
* /* 24 |-----------------------------------------|                 */  15000000
* /*    |                                         |                 */  15600000
* /*    |                ARWAACBU                 |                 */  16200000
* /* 28 |-----------------------------------------|                 */  16800000
* /*    |                                         |                 */  17400000
* /*    |                ARWAACBW                 |                 */  18000000
* /* 32 |-----------------------------------------|                 */  18600000
* /*    |                                         |                 */  19200000
* /*    |                ARWAAMLU                 |                 */  19800000
* /* 36 |-----------------------------------------|                 */  20400000
* /*    |                                         |                 */  21000000
* /*    |                ARWAAMLW                 |                 */  21600000
* /* 40 |-----------------------------------------|                 */  22200000
* /*    |                                         |                 */  22800000
* /*    |                ARWAAMBU                 |                 */  23400000
* /* 44 |-----------------------------------------|                 */  24000000
* /*    |                                         |                 */  24600000
* /*    |                ARWAAMBW                 |                 */  25200000
* /* 48 |-----------------------------------------|                 */  25800000
* /*    |                                         |                 */  26400000
* /*    |                ARWAAMBL                 |                 */  27000000
* /* 52 |-----------------------------------------|                 */  27600000
* /*    |                                         |                 */  28200000
* /*    |                ARWAWORK                 |                 */  28800000
* /* 56 |-----------------------------------------|                 */  29400000
* /*    |                                         |                 */  30000000
* /*    |                ARWAWAEP                 |                 */  30600000
* /* 60 |-----------------------------------------|                 */  31250000
* /*    |                                         |                 */  31300000
* /*    |                ARWAMDSB                 |                 */  31350000
* /* 64 |-----------------------------------------|                 */  31400000
* /*    |                                         |                 */  31500000
* /*    |                ARWABLPT                 |                 */  31550000
* /* 68 |-----------------------------------------|                 */  31650000
* /*    |                                         |                 */  31700000
* /*    |                ARWAMBPT                 |                 */  31750000
* /* 72 |-----------------------------------------|                 */  31770000
* /*    |                                         |                 */  31780000
* /*    |                ARWAXBEG                 |                 */  31790000
* /* 76 |-----------------------------------------|                 */  31794000
* /*    |          |                              |                 */  31794400
* /*    | ARWAXFL2 |           ARWAXEND           |                 */  31794800
* /* 80 |-----------------------------------------|                 */  31798800
* /*    |                                         |                 */  31799200
* /*    |                ARWAECB                  |                 */  31799600
* /* 84 |-----------------------------------------|                 */  31799800
* /*    |                                         |                 */  31799900
* /*    |                RESERVED                 |                 */  31849900
* /* 88 |-----------------------------------------|                 */  31899900
* /*    |                                         |                 */  31949900
* /*    |                RESERVED                 |                 */  31999900
* /* 92 |-----------------------------------------|                 */  32049900
* /*    |                                         |                 */  32059900
* /*    |                RESERVED                 |                 */  32069900
* /* 96 |-----------------------------------------|                 */  32079900
* /*    |                                         |                 */  32089900
* /*    |                RESERVED                 |                 */  32091900
* /* 100|-----------------------------------------|                 */  32093900
* /*    |                                         |                 */  32095900
* /*    |                RESERVED                 |                 */  32097900
* /* 104|-----------------------------------------|                 */  32098300
* /*    |                                         |                 */  32098700
* /*    |                RESERVED                 |                 */  32099100
* /* 108|-----------------------------------------|                 */  32099500
* /*    |                                         |                 */  32099600
* /*    |                RESERVED                 |                 */  32149600
* /* 112|-----------------------------------------|                 */  32159600
* /*    |                                         |                 */  32169600
* /*    |                RESERVED                 |                 */  32179600
* /* 116|-----------------------------------------|                 */  32189600
* /*    |                                         |                 */  32191600
* /*    |                RESERVED                 |                 */  32193600
* /* 120 -----------------------------------------           @Y021131*/ 32195602
* /*                                                                */  32299500
* /*     ARWA DECLARATION                                           */  32400000
* /*                                                                */  33000000
* /*                                                                */  33600000
*%ARWA1: ;                                                              34200000
* /*                                                                */  34800000
*        DCL  1 IDAARWA  BASED,              /* ARWA                */  35400000
*               2 ARWASIZE  FIXED(15),       /* ARWA SIZE           */  36000000
*               2 ARWAACBN    FIXED(15),     /* NUMBER OF USER ACBS */  36600000
*               2 ARWABUFS    FIXED(15),     /* USED TO COMPUTE         37250000
*                                               LENGTH OF THE ARDKEYS   37300000
*                                               FIELD IN THE ARDB   */  37350000
*               2 *           BIT(8),        /* RESERVED            */  37800000
*               2 ARWAMCDE    FIXED(8),      /* ERROR MESSAGE CODE  */  40200000
*               2 ARWARCDE    FIXED(8),      /* ERROR RETURN CODE   */  40800000
*               2 ARWAOPEN    PTR(24),       /* OPEN PARAMETER LIST */  41400000
*               2 ARWARSWA    PTR(31),       /* PTR VS  RESTART WA  */  42000000
*               2 ARWAAL      CHAR(8) BDY(WORD), /* PT ACB LISTS    */  42600000
*                 3 ARWAUALP  PTR(31),       /* PT USER/WORK ACB LIST   43200002
*                                                            @Y021131*/ 43250002
*                 3 ARWAWALP  PTR(31),       /* PT WORK ACBS @Y021131*/ 43800002
*               2 ARWAACB     CHAR(8) BDY(WORD), /* PT CURRENT ACBS */  44400000
*                 3 ARWAACBU  PTR(31),       /* PTR CURRENT USER ACB*/  45000000
*                 3 ARWAACBW  PTR(31),       /* PTR CURRENT WORK ACB*/  45600000
*               2 ARWAAML     CHAR(8) BDY(WORD), /* PT CURRENT AMBLS*/  46200000
*                 3 ARWAAMLU  PTR(31),       /* PTR  USER  AMBL     */  46800000
*                 3 ARWAAMLW  PTR(31),       /* PTR  WORK  AMBL     */  47400000
*               2 ARWAAMB     CHAR(8) BDY(WORD), /* PT CURRENT AMBS */  48000000
*                 3 ARWAAMBU  PTR(31),       /* PTR CURRENT USER AMB*/  48600000
*                 3 ARWAAMBW  PTR(31),       /* PTR CURRENT WORK AMB*/  49200000
*               2 ARWAAMBL    PTR(31),       /* SAVE JSCB AMBL PT   */  49800000
*               2 ARWAWORK    PTR(31),       /* WORK AREA           */  51000000
*               2 ARWARSA     CHAR(64) BDY(WORD), /* VSAM RESTART       53400000
*                                               ERROR MESSAGE AND       54000000
*                                               PAGE FIX WORK AREA  */  54010000
*                 3 ARWAWAEP  PTR(31),       /* POINTER TO WORK         54050000
*                                               ACB EXTENSION       */  54100000
*                 3 ARWAMDSB  PTR(31),       /* PT TO CURRENT AMDSB */  54600000
*                 3 ARWABLPT  PTR(31),       /* PT TO CURRENT AMBL  */  57600000
*                 3 ARWAMBPT  PTR(31),       /* PT TO CURRENT AMB   */  57650000
*                 3 ARWAXBEG  PTR(31),       /* PT MSTR BLK TO FIX  */  57660000
*                 3 ARWAXFL2  BIT(8),        /* END LIST INDICATOR  */  57670000
*                 3 ARWAXEND  PTR(24),       /* PT END OF MSTR BLK  */  57680000
*                 3 ARWAECB   CHAR(4),       /* PAGE FIX ECB        */  57700000
*                   4 *       CHAR(3),       /* RESERVE SECTION ECB */  57710000
*                   4 ARWACC  BIT(8),        /* ECB CONDITION CODE  */  57720000
*                     5 *     BIT(4),        /*   UNUSED            */  57740000
*                     5 ARWAFXER BIT(1),     /* PAGE FIX INDICATOR  */  57742000
*                     5 *     BIT(3),        /*     UNUSED          */  57744000
*                 3 *         PTR(31),       /* RESERVED            */  57900000
*                 3 *         PTR(31),       /* RESERVED            */  57950000
*                 3 *         PTR(31),       /* RESERVED            */  58000000
*                 3 *         PTR(31),       /* RESERVED            */  58050000
*                 3 *         PTR(31),       /* RESERVED            */  58100000
*                 3 *         PTR(31),       /* RESERVED            */  58150000
*                 3 *         PTR(31),       /* RESERVED            */  58200000
*                 3 *         PTR(31),       /* RESERVED     @Y021131*/ 58250002
*             2 ARWAUWAL CHAR(0); /* USER/WORK ACB LIST      @Y021131*/ 58350002
* /*                                                                */  67800000
*%GOTO ARWA2;                                                           68450000
* /*                                                                */  68500000
* /*                ARWA ASSEMBLER DSECT                            */  69000000
* /*                                                                */  69600000
         MACRO                                                          70200000
IGCARWA  DSECT                               ARWA DSECT                 70800000
ARWASIZE DS    H                             RESTART WORK AREA SIZE     71400000
ARWAACBN DS    H                             NUMBER OF OPEN VSAM ACBS   72000000
ARWABUFS DS    H                             LENGTH OF ARDKEYS FIELD    72600000
         DS    BL1                           RESERVED                   73200000
ARWAMCDE DS    XL1                           ERROR MESSAGE CODE         75600000
ARWARCDE DS    XL1                           ERROR RETURN CODE          76200000
ARWAOPEN DS    AL3                           PT TO OPEN PARAMETER LIST  76800000
ARWARSWA DS    A                             POINTER TO VS  RESTART WA  77400000
ARWAAL   DS    0CL8                          PTR USER / WORK ACB LIST   78000000
ARWAUALP DS    A                             POINTER TO USER ACB LIST   78600000
ARWAWALP DS    A                             POINTER TO WORK ACBS       79200002
ARWAACB  DS    0CL8                          PTR TO CURRENT ACBS        79800000
ARWAACBU DS    A                             PTR TO CURRENT USER ACB    80400000
ARWAACBW DS    A                             PTR TO CURRENT WORK ACB    81000000
ARWAAML  DS    0CL8                          PTR TO CURRENT AMBLS       81600000
ARWAAMLU DS    A                             PTR TO CURRENT USER AMBL   82200000
ARWAAMLW DS    A                             PTR TO CURRENT WORK AMBL   82800000
ARWAAMB  DS    0CL8                          PTR TO CURRENT AMBS        83400000
ARWAAMBU DS    A                             PTR TO CURRENT USER AMB    84000000
ARWAAMBW DS    A                             PTR TO CURRENT WORK AMB    84600000
ARWAAMBL DS    A                             SAVE AREA FOR JSCB AMBL PT 85200000
ARWAWORK DS    A                             WORK AREA                  85800000
ARWARSA  DS    0CL64                         PAGEFIX ERROR MSG WRK AREA 87000000
ARWAWAEP DC    A                             WORK ACB EXTENSION PT      88200000
ARWAMDSB DC    A                             CURRENT AMDSB POINTER      88250000
ARWABLPT DC    A                             CURRENT AMBL POINTER       88300000
ARWAMBPT DC    A                             CURRENT AMB POINTER        88350000
ARWAXBEG DC    A                             PT MASTER BLK TO BE FIXED  88400000
ARWAXFL2 DC    0BL1                          END OF LIST INDICATOR      88600002
ARWAXEND DC    A                             PT TO END OF MASTER BLK    88650000
ARWAECB  DC    0A                            MASTER BLOCK ECB           88652000
         DC    CL3                           RESERVE SECTION OF ECB     88660000
ARWACC   DC    CL1                           ECB CONDITION CODE         88670000
ARWAFXER EQU   X'08'                         PAGE FIX INDICATOR         88680000
         DC    A                             RESERVED                   88750000
         DC    A                             RESERVED                   88800000
         DC    A                             RESERVED                   88850000
         DC    A                             RESERVED                   88900000
         DC    A                             RESERVED                   88950000
         DC    A                             RESERVED                   89000000
         DC    A                             RESERVED                   89050000
         DC    A                             RESERVED                   89100000
         DC    A                             RESERVED                   89150000
         DC    A                             RESERVED                   89200000
ARWAPGFX DC    A                             ADDRESS OF PAGE FIX LIST   89250002
         DC    F                             RESERVED                   89300002
         MEND                                                           90600000
* /*                                                                */  91200000
* /*           END OF IGCARWA, AM/0 RESTART WORK AREA               */  91800000
* /*                                                                */  92400000
*%ARWA2:  ;                                                             93000000
./  ADD  SSI=42831141,NAME=IDABFR
 %IDABFR: MACRO;                                                        03000000
      IF MACLIST(1) = 'UPDATE'             /* SEE IF UPDATE          */ 36000000
        THEN                                                            39000000
          DO;                                                           42000000
          ANS('DO;  /* SET UPDATED BFR */');                            45000000
          ANS('BUFCORBA = BUFCDDDD;') SKIP;                             48000000
          ANS('BUFCMW = ON;') SKIP;                                     51000000
          ANS('END;') SKIP;                                             54000000
          RETURN CODE(0);                  /* EXIST FROM MACRO       */ 57000000
          END;                                                          60000000
          IF MACLIST(1) = 'SETORBA'                                     63000000
            THEN                                                        66000000
              DO;                                                       69000000
              ANS('DO; /* SET OUTPUT RBA */');                          72000000
              ANS('BUFCORBA = RPARM1;') SKIP;                           78000000
              ANS('BUFCMW = ON;  /* SET MUST WRITE */') SKIP;           78050004
              ANS('END;') SKIP;                                         81000000
              RETURN CODE(0);              /* EXIST FROM MACRO       */ 84000000
              END;                                                      87000000
            ELSE RETURN CODE(4);           /* UNKNOWN PARAMETER      */ 90000000
 %END IDABFR;                                                           93000000
./  ADD  SSI=50960007,NAME=IDABIB
 /********************************************************************/ 00050004
 /*                                                                  */ 00100004
 /*   MACRO NAME = IDABIB                                            */ 00150004
 /*                                                                  */ 00200004
 /*   DESCRIPTIVE NAME = BASE INFORMATION BLOCK                      */ 00250004
 /*                                                                  */ 00260004
 /*   FUNCTION = THE BIB CONTAINS INFORMATION RELATING TO THE        */ 00270004
 /*              OPERATIONAL SPHERE.                                 */ 00280004
 /*                                                                  */ 00290004
 /*   CONTROL BLOCK STRUCTURE = POINTED TO BY THE AMBL (AMBLBIB).    */ 00292004
 /*                                                                  */ 00294004
 /*   INCLUDED MACROS = NONE                                         */ 00296004
 /*                                                                  */ 00298004
 /*   METHOD OF ACCESS = PL/S - RESPECIFY IDABIB BASED.              */ 00298404
 /*                                                                  */ 00298804
 /*   CREATED BY: VSAM OPEN MODULE IDA0192A.                         */ 00299204
 /*                                                                  */ 00299604
 /*   STATUS = VS1 RELEASE 4, VS2 RELEASE 3.                         */ 00299704
 /*                                                                  */ 00299804
 /*   DATE OF LAST CHANGE = 22 JANUARY 75                            */ 00299903
 /*                                                                  */ 00303204
 /********************************************************************/ 00305204
    DCL 1 IDABIB BASED BDY (WORD),  /* BASE INFORMATION BLOCK        */ 00306704
          2 BIBHDR,                 /* BIB HEADER SECTION            */ 00310004
            3 BIBID CHAR(1),        /* CONTROL BLOCK ID              */ 00320004
            3 BIBFLG1 BIT(8),       /* BIB FLAG BYTE                 */ 00330004
              4 BIBVIRT BIT(1),     /* VIRTUAL UCB'S IN SPHERE       */ 00332004
              4 BIBREST BIT(1),     /* RESTART PROCESSING SPHERE     */ 00332403
              4 BIBCKPT BIT(1),     /* CHECKPOINT PROCESSING SPHERE  */ 00332803
              4 * BIT(5),           /* UNUSED                        */ 00334003
            3 BIBLEN FIXED(15),     /* LENGTH OF BIB                 */ 00340004
          2 BIBFLG2 BIT(8),         /* FLAGS                         */ 00350004
          2 * CHAR(3),              /* NOT USED                      */ 00400004
          2 BIBUPT PTR(31),         /* ADDR OF UPGRADE TABLE         */ 00450004
          2 BIBVMT PTR(31),         /* ADDR OF VOLUME MOUNT TABLE    */ 00500004
          2 BIBDACB PTR(31),        /* ADDR OF DUMMY ACB             */ 00550004
          2 BIBPAMBL PTR(31),       /* ADDR OF PRIMARY AMBL          */ 00600004
          2 BIBSPHPT PTR(31),       /* PTR TO SPHERE BLOCK           */ 00610004
          2 BIBPRSPH PTR(31),       /* PTR TO PROTECTED SPHERE BLK   */ 00620004
          2 BIBHEBPT PTR(31),       /* PTR TO FIRST HEB              */ 00630004
          2 BIBHEBFQ PTR(31),       /* PTR FIRST FREE HEADER ELEMENT */ 00640004
          2 BIBVCRT PTR(31),        /* ADDR OF VSAM C/R TABLE        */ 00650004
          2 BIBWSHD PTR(31),        /* ADDR OF WORK SPACE HEADER BLK */ 00700004
          2 BIBCSL PTR(31),         /* IN VS2, PTR TO CSL CHAIN.     */ 00710003
          2 BIBPSAB PTR(31),        /* ADDRS OF PROT SPHERE AMBL BLK.*/ 00712003
          2 BIBVGTT PTR(31),        /* IN VS2, ADDRESS OF SPHERE VGTT*/ 00720003
          2 BIBRTNS,                /* PTR'S TO RECORD MGMT ROUTINES */ 00750004
            3 BIBINTRF PTR(31),     /* INTERFACE ROUTINE             */ 00800004
            3 BIBCEAPP PTR(31),     /* CHANNEL END APPENDAGE         */ 00850004
            3 BIBASYRT PTR(31),     /* ASYNCHRONOUS ROUTINES         */ 00900004
            3 BIBSIOAP PTR(31),     /* START I/O APPENDAGE           */ 01000003
          2 BIBJOBNM CHAR(8),       /* JOBNAME OF ISSUER OF OPEN     */ 01050003
          2 BIBSTPNM CHAR(8),       /* STEP NAME OF OPENER           */ 01150003
          2 BIBDDNM CHAR(8),        /* DDNAME OF OPENER              */ 01200003
          2 BIBASCB PTR(31);        /* ASCB ADDR OF ISSUER OF OPEN   */ 01250003
./  ADD  SSI=51110856,NAME=IDABLPRM
*        %GOTO IDABLPL1;                /* BILINGUAL MAPPING            00050004
         MACRO                                                          00100004
&IDABLPN IDABLPRM &DSECT=NO             NO DSECT IS THE DEFAULT      */ 00150004
*%IDABLPL1: ;                                                           00200004
*/********************************************************************/ 00250004
*/*                                                                  */ 00300004
*/*   MACRO NAME = IDABLPRM                                          */ 00350004
*/*                                                                  */ 00400004
*/*   DESCRIPTIVE NAME = BUILD VSAM RESOURCE POOLS PARAMETER LIST.   */ 00450004
*/*                                                                  */ 00500004
*/*   FUNCTION = IDABLPRM MAPS THE ENTRIES IN THE PARAMETER LIST     */ 00550004
*/*              CREATED BY BLDVRP AND DELVRP MACROS.                */ 00600004
*/*                                                                  */ 00610004
*/*   CONTROL BLOCK STRUCTURE = GENERALLY POINTED TO BY REGISTER 2.  */ 00620004
*/*                                                                  */ 00630004
*/*   INCLUDED MACROS = NONE                                         */ 00640004
*/*                                                                  */ 00642004
*/*   METHOD OF ACCESS = PL/S - RESPECIFY IDABLPRM BASED.            */ 00644004
*/*                                                                  */ 00646004
*/*   CREATED BY: N/A                                                */ 00648004
*/*                                                                  */ 00648404
*/*   STATUS = VS1 RELEASE 4                                         */ 00648804
*/*                                                                  */ 00649204
*/*   DATE OF LAST CHANGE = 2 AUGUST 74                              */ 00649604
*/*                                                                  */ 00649704
*/********************************************************************/ 00649804
*        %GOTO IDABLPL2;                /*                              00650004
         AIF   ('&DSECT' EQ 'NO').IDABLP1                               00700004
&IDABLPN DSECT ,                        BLDVRP/DELVRP PARAMETER LIST    00750004
         AGO   .IDABLP2                                                 00800004
.IDABLP1 ANOP                                                           00850004
&IDABLPN DS    0F                       BLDVRP/DELVRP PARAMETER LIST    00900004
.IDABLP2 ANOP                                                           00950004
IDABLPRM EQU   *                        START OF BASIC PARAMETER LIST   01000004
BLPACBID DS    XL1                      ACBID - MUST BE X'A0'           01050004
BLPACBCD EQU   X'A0'                    ACBID CONSTANT                  01100004
BLPACBST DS    XL1                      ACBSTYP - MUST BE X'11'         01150004
BLPSTCD  EQU   X'11'                    ACBSTYP CONSTANT                01200004
         DS    H                        RESERVED                        01250004
BLPBUFLP DS    0A                       POINTER TO THE BUFFER LIST      01300004
BLPUACB  DS    0A                       POINTER TO THE USER ACB         01350004
BLPIOPLH DS    AL4                      POINTER TO I/O SUPPORT PLH      01400004
BLPKEYLN DS    XL1                      KEYLENGTH                       01450004
BLPSTRNO DS    XL1                      STRNGNO REQUESTS                01500004
BLPFLAGS DS    0BL2                     PARAMETER LIST FLAGS            01510004
BLPFLAG1 DS    BL1                      FLAG FIELD                      01550004
BLPFDBDC EQU   X'80'                    DBDC FLAG                       01600004
BLPFBLD  EQU   X'40'                    BLDVRP REQUEST FLAG             01650004
BLPFDEL  EQU   X'20'                    DELVRP REQUEST FLAG             01700004
BLPFLSR  EQU   X'10'                    LSR OPTION FLAG                 01750004
BLPFGSR  EQU   X'08'                    GSR OPTION FLAG                 01800004
BLPFIOBF EQU   X'04'                    FIX IOB'S REQUEST FLAG          01850004
BLPFBFRF EQU   X'02'                    FIX BUFFERS REQUEST FLAG        01900004
BLPFSTAD EQU   X'01'                    STRING ADD REQUEST FLAG         01950004
BLPFLAG2 DS    BL1                      FLAG FIELD                      02000004
BLPFPART EQU   X'80'                    PARTIAL BUILD REQUEST FLAG      02050004
BLPFUPGR EQU   X'40'                    UPGRADE SET FLAG                02100004
BLPFPATH EQU   X'20'                    PATH FLAG                       02150004
BLPFPRIM EQU   X'10'                    PRIM FLAG                       02200004
BLPFDATA EQU   X'08'                    DATA FLAG                       02250004
BLPFINDX EQU   X'04'                    INDEX FLAG                      02300004
BLPFIOSR EQU   X'02'                    I/O SUPPORT REQUEST FLAG        02350004
BLPFRSTR EQU   X'01'                    RESTART REQUEST FLAG            02360004
BLPOCODE DS    AL1                      SPECIAL USE CODE                02450004
BLPOACB  DS    AL3                      RESERVED                        02500004
         DS    2AL4                     RESERVED                        02550004
BLPIOACB DS    0A                       POINTER TO I/O SUPPORT ACB      02600004
         DS    XL3                      RESERVED                        02650004
BLPDSORG DS    XL1                      ACB DSORG                       02700004
BLPDSOCD EQU   X'08'                    ACBDSORG CONSTANT               02750004
         DS    5AL4                     RESERVED                        02800004
BLPOFLGS DS    XL1                      ACB OPEN FLAGS                  02850004
BLPOFLCD EQU   X'02'                    ACBOFLAGS CONSTANT              02900004
         DS    XL2                      RESERVED                        02950004
BLPERFLG DC    X'00'                    MUST BE X'00'                   03000004
BLPEND   EQU   *                        END OF BASIC PARAMETER LIST     03050004
BLPSIZE  EQU   BLPEND-IDABLPRM          SIZE OF BASIC PARAMETER LIST    03100004
BLPBUFL  DSECT ,                        BUFFER REQUEST LIST             03150004
BLPBUFSZ DS    F                        BUFFER SIZE                     03200004
BLPBRLFG DS    BL1                      BUFFER LIST FLAGS               03250004
BLPBFLST EQU   X'80'                    LAST BUFFER REQUEST FLAG        03300004
BLPBRSV1 EQU   X'7F'                    RESERVED                        03350004
         DS    CL1                      RESERVED                        03400004
BLPBFLCT DS    H                        BUFFER COUNT                    03450004
BLPPRMCD EQU   128                      ACB EOF CONSTANT                03500004
         MEND  , */                                                     03550004
 %IDABLPL2: ;                                                           03600004
    DCL 1 IDABLPRM BASED BDY (WORD), /* BLDVRP/DELVRP PARAMETER LIST */ 03650004
          2 BLPACBID FIXED (8),      /* ACBID - MUST BE X'A0'        */ 03700004
          2 BLPACBST FIXED (8),      /* ACBSTYP - MUST BE X'11'      */ 03750004
          2 * FIXED (15),            /* RESERVED                     */ 03800004
          2 BLPBUFLP PTR (31),       /* POINTER TO THE BUFFER LIST   */ 03850004
            3 BLPUACB PTR (31),      /* POINTER TO THE USER ACB      */ 03900004
              4 BLPIOPLH PTR (31),   /* POINTER TO I/O SUPPORT PLH   */ 03950004
          2 BLPKEYLN FIXED (8),      /* KEYLENGTH                    */ 04000004
          2 BLPSTRNO FIXED (8),      /* STRNGNO REQUESTS             */ 04050004
          2 BLPFLAGS BIT (16),       /* FLAG FIELD                   */ 04060004
            3 BLPFLAG1 BIT (8),      /* FLAG FIELD                   */ 04100004
              4 BLPFDBDC BIT (1),    /* DBDC FLAG                    */ 04150004
              4 BLPFBLD BIT (1),     /* BLDVRP REQUEST FLAG          */ 04200004
              4 BLPFDEL BIT (1),     /* DELVRP REQUEST FLAG          */ 04250004
              4 BLPFLSR BIT (1),     /* LSR OPTION FLAG              */ 04300004
              4 BLPFGSR BIT (1),     /* GSR OPTION FLAG              */ 04350004
              4 BLPFIOBF BIT (1),    /* FIX IOB'S REQUEST FLAG       */ 04400004
              4 BLPFBFRF BIT (1),    /* FIX BUFFERS REQUEST FLAG     */ 04450004
              4 BLPFSTAD BIT (1),    /* STRING ADD REQUEST FLAG      */ 04500004
            3 BLPFLAG2 BIT (8),      /* FLAG FIELD                   */ 04550004
              4 BLPFPART BIT (1),    /* PARTIAL BUILD REQUEST FLAG   */ 04600004
              4 BLPFUPGR BIT (1),    /* UPGRADE SET FLAG             */ 04650004
              4 BLPFPATH BIT (1),    /* PATH FLAG                    */ 04700004
              4 BLPFPRIM BIT (1),    /* PRIMARY FLAG                 */ 04750004
              4 BLPFDATA BIT (1),    /* DATA FLAG                    */ 04800004
              4 BLPFINDX BIT (1),    /* INDEX FLAG                   */ 04850004
              4 BLPFIOSR BIT (1),    /* I/O SUPPORT REQUEST FLAG     */ 04900004
              4 BLPFRSTR BIT (1),    /* RESTART REQUEST FLAG         */ 04950004
          2 BLPOCODE PTR (8),        /* SPECIAL USE FIELD            */ 05000004
          2 BLPOACB PTR (24),        /* ACB POINTER                  */ 05050004
          2 BLPCORE,                 /*REC MGT GETCORE REQUEST       */ 05100003
            3 BLPGFLG BIT(8),        /*GET CORE FLAG BYTE            */ 05101003
              4 BLPGREQ BIT(1),      /*GET CORE REQUEST INDIC        */ 05102003
              4 BLPGPG BIT(1),       /*GET CORE PAGE BDY REQUEST     */ 05103003
            3 BLPGSZ FIXED(24),      /*GET CORE LENGTH               */ 05104003
            3 BLPGSP CHAR(1),        /*GET CORE SUBPOOL              */ 05105003
            3 BLPGAD PTR(24),        /*GET CORE ADDRESS RETURN       */ 05106003
          2 BLPIOACB PTR (31),       /* POINTER TO I/O SUPPORT ACB   */ 05150004
            3 * (3) FIXED (8),       /* RESERVED                     */ 05200004
            3 BLPDSORG FIXED (8),    /* MUST BE X'08'                */ 05250004
          2 * (5) PTR (31),          /* RESERVED                     */ 05300004
          2 BLPOFLGS FIXED (8),      /* MUST BE X'02'                */ 05350004
          2 * (2) FIXED (8),         /* RESERVED                     */ 05400004
          2 BLPERFLG FIXED (8),      /* MUST BE X'00'                */ 05450004
        1 BLPBUFL (*) BASED(BLPBUFLP), /* BUFFER REQUEST LIST        */ 05500004
          2 BLPBUFSZ FIXED (31),     /* BUFFER SIZE                  */ 05550004
          2 BLPBRLFG,                /* BUFFER LIST FLAGS            */ 05600004
            3 BLPBFLST BIT (1),      /* LAST BUFFER REQUEST FLAG     */ 05650004
            3 * BIT (7),             /* RESERVED                     */ 05700004
          2 * FIXED (8),             /* RESERVED                     */ 05750004
          2 BLPBFLCT FIXED (15)      /* BUFFER COUNT                 */ 05800004
    ;                                                                   05850004
    DCL BLPSTCD FIXED (8) CONSTANT(17), /* ACBSTYP CONSTANT          */ 05900004
        BLPACBCD FIXED (8) CONSTANT (160), /* ACBID CONSTANT         */ 05950004
        BLPDSOCD FIXED (8) CONSTANT (8), /* ACBDSORG CONSTANT        */ 06000004
        BLPOFLCD FIXED (8) CONSTANT (2), /* ACBOFLAGS CONSTANT       */ 06050004
        BLPPRMCD FIXED (8) CONSTANT (128) /* ACB EOF CONSTANT        */ 06100004
    ;                                                                   06150004
./  ADD  SSI=42831144,NAME=IDABSPH
*/********************************************************************/ 00010000
*/*                                                                  */ 00020000
*/*   MACRO NAME = IDABSPH                                           */ 00030000
*/*                                                                  */ 00040000
*/*   DESCRIPTIVE NAME = BUFFER SUBPOOL HEADER                       */ 00042000
*/*                                                                  */ 00044000
*/*   FUNCTION =  DEFINES VSAM BUFFER POOL FOR SHARED RESOURCES      */ 00046000
*/*                                                                  */ 00048000
*/*   CONTROL BLOCK STRUCTURE = IDABSPH IS POINTED TO BY IDAAMB      */ 00048400
*/*                                                                  */ 00048800
*/*   INCLUDED MACROS = NONE                                         */ 00049200
*/*                                                                  */ 00049600
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00049700
*/*                                                                  */ 00049800
*/*   CREATED BY = VSAM BLDVRP                                       */ 00049900
*/*                                                                  */ 00066600
*/*   STATUS = VS/2 RELEASE 3  (CHANGE FLAG @Y30SDXX)                */ 00076600
*/*                                                                  */ 00078600
*/*   DATE OF LAST CHANGE = 19 SEPT 74                               */ 00080600
*/*                                                                  */ 00082600
*/********************************************************************/ 00083000
  DCL 1 IDABSPH BASED,              /* BUFFER SUBPOOL HEADER         */ 00083300
       2 BSPHID CHAR(1),            /* BSPH IDENTIFICATION           */ 00100004
       2 BSPHFLG1 BIT(8),           /* FLAG BYTE 1                   */ 00150004
        3 BSPHIOBF BIT(1),          /* I/O BLOCKS FIXED              */ 00200004
        3 BSPHBFRF BIT(1),          /* BUFFERS FIXED                 */ 00250004
       2 BSPHLEN FIXED(15),         /* LENGTH OF BSPH                */ 00300004
       2 BSPHNM CHAR(4),            /* EBCDIC BSPH ID                */ 00350004
       2 BSPHNBSP PTR(31),          /* NEXT BSPH                     */ 00400004
       2 BSPHBFNO FIXED(15),        /* NUMBER OF BUFFERS             */ 00450004
       2 BSPHERCT FIXED(15),        /* WRITE ERROR COUNT             */ 00500004
       2 BSPHBUFC PTR(31),          /* FIRST BUFC IN POOL            */ 00550004
       2 BSPHMDBT FIXED(32),        /* MODIFICATION BITS             */ 00600004
       2 BSPHBSZ FIXED(31),         /* BUFFER SIZE                   */ 00650004
       2 BSPHCSRC FIXED(31),        /* COMPARE/SWAP RESOURCE         */ 00700004
        3 BSPHFLG2 BIT(8),          /* FLAG BYTE 2                   */ 00750004
         4 BSPHAPRT BIT(1),         /* ARITHMETIC PROTECT BIT        */ 00800004
         4 BSPHPCUC BIT(1),         /* USE CHAIN CHANGING            */ 00850004
        3 * PTR(8),                 /* RESERVED                      */ 00900004
        3 BSPHPSUC FIXED(15),       /* NBR OF PLHS SEARCHING USE CHN */ 00950004
       2 BSPHCPLH PTR(31),          /* PLH CHANGING USE CHAIN        */ 01000004
       2 BSPHRDS FIXED(31),         /* NUMBER OF BUFFER READS        */ 01050004
       2 BSPHFND FIXED(31),         /* NBR TIMES RBA FOUND BY           01100004
                                       LOOK-ASIDE                    */ 01150004
       2 BSPHUIW FIXED(31),         /* NBR OF USER INITIATED WRITES  */ 01200004
       2 BSPHNUIW FIXED(31),        /* NON-UIW COUNT                 */ 01250004
       2 BSPHUTOP PTR(31),          /* PTR TO USE CHAIN TOP          */ 01300004
       2 BSPHUBTM PTR(31),          /* PTR TO BOTTOM OF USE CHAIN    */ 01350004
       2 BSPH1ST PTR(31);           /* POINTER TO 1ST IDABSPH        */ 01400004
./  ADD  SSI=42831147,NAME=IDABUFC
*/********************************************************************/ 00050004
*/*                                                                  */ 00100004
*/*   MACRO NAME = IDABUFC                                           */ 00150004
*/*                                                                  */ 00200004
*/*   DESCRIPTIVE NAME = VSAM BUFFER CONTROL BLOCK HEADER (IDABUFDR) */ 00250004
*/*              VSAM BUFFER CONTROL BLOCK (IDABUFC)                 */ 00260004
*/*                                                                  */ 00300004
*/*   FUNCTION = THIS MACRO CONTAINS:                                */ 00350004
*/*              IDABUFDR = ORIGIN OF THE COMMON BUFFER AND THE      */ 00360004
*/*               PREFORMAT BUFFER CHAINS                            */ 00370004
*/*              IDABUFC = DESCRIBES THE BUFFER                      */ 00380004
*/*                                                                  */ 00400004
*/*   CONTROL BLOCK STRUCTURE = IDABUFDR IS POINTED TO BY IDAAMB     */ 00450004
*/*                                                                  */ 00500004
*/*   INCLUDED MACROS = NONE                                         */ 00550004
*/*                                                                  */ 00600004
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00650004
*/*                                                                  */ 00700004
*/*   CREATED BY = VSAM OPEN                                         */ 00750004
*/*                                                                  */ 00800004
*/*   STATUS = VS/1 RELEASE 4  (CHANGE FLAG @X04SVXX)                */ 00850004
*/*                                                                  */ 00900004
*/*   DATE OF LAST CHANGE = 9 AUG 74                                 */ 00950004
*/********************************************************************/ 00960004
*  DCL 1 IDABUFDR BASED BDY(WORD),         /* BUFFER HEADER          */ 00970004
*        2 BUFDRID CHAR(1),                /* BUFFER HEADER ID      */  00980004
*        2 BUFDRNO PTR(8),                 /* NUMBER OF BUFFERS     */  00990004
*        2 BUFDRLEN FIXED(15),             /* LENGTH OF CNTL BLK    */  00992004
*        2 BUFDRPFB PTR(31),               /* FIRST PREFORMAT BUFC  */  00994004
*        2 BUFDRPFN PTR(8),                /* NO. OF PREFORMAT BUFCS*/  00996004
*        2 BUFDRCIX PTR(8),                /* NO OF COMMON IX BFRS  */  00998004
*          3 BUFDRMAX PTR(8),              /* MAX BFRS PER SEQ PLH  */  00998404
*        2 BUFDRTSB CHAR(1),               /* HDR TEST AND SET BYTE */  00998804
*        2 BUFDRFLG BIT(8),                /* BFR HEADER FLAGS      */  00999204
*          3 BUFDRREL BIT(1),              /* BFR REL FLG           */  00999604
*          3 BUFDRAVL BIT(1),              /* BFR AVAILABLE          */ 00999704
*          3 * BIT(6),                     /* UNUSED                 */ 00999804
*        2 BUFDBUFC PTR(31),               /* PTR TO 1ST BUFC@X04SVLC*/ 00999904
*        2 *        CHAR(4);               /* RESERVED              */  48000000
*/********************************************************************/ 48050004
*/* BUFFER CONTROL BLOCK                                             */ 48060004
*/********************************************************************/ 48100004
*  DCL 1 IDABUFC  BASED BDY(DWORD),        /* BUFC ENTRY     @X04SVLC*/ 48600004
*        2 BUFCAVL CHAR(1),                /* BUFFER TEST/SET BYTE  */  49200000
*          3 BUFCUCNT FIXED(8),            /* USE COUNT      @X04SVLC*/ 49250004
*        2 BUFCFLG1 BIT(8),                /* BUFC FLAGS--BYTE ONE  */  49800000
*          3 BUFCUPG BIT(1),               /* UPGRADE SET BUFC          50400004
*                                                           @X04SVLC*/  50450004
*          3 BUFCSEG BIT(1),               /* SEGMENTED REC IN BFR  */  51000000
*          3 BUFCINS BIT(1),               /* BUFC FOR INSERTS ONLY */  51600000
*          3 BUFCER1 BIT(1),               /* READ ERROR OCCURRED   */  52200000
*          3 BUFCER2 BIT(1),               /* WRITE ERROR OCCURRED  */  52800000
*          3 BUFCVAL BIT(1),               /* BUFCDDDD IS VALID     */  53400000
*          3 BUFCEXC BIT(1),               /* BFR IN EXCL CNTL      */  54000000
*          3 BUFCEPT BIT(1),               /* POST BIT               */ 54600000
*        2 BUFCIOFL BIT(8),                /* I/O MGR COMMUN FLAGS   */ 55200000
*          3 BUFCMW  BIT(1),               /* MUST WRITE THIS CINV   */ 55800000
*          3 BUFCFMT BIT(1),               /* FORMAT WRITE BUFC      */ 56400000
*          3 BUFCRRD BIT(1),               /* READ REQUIRED          */ 57000000
*          3 BUFCREAL BIT(1),              /* BUFCBAD IS A REAL ADDR */ 57600000
*          3 BUFCWC  BIT(1),               /* WRITE CHECK OPTION     */ 58200000
*          3 BUFCXEDB BIT(1),              /* NO EDB FOUND FOR RBA */   58800000
*          3 BUFCPFCP BIT(1),              /* PREFORMAT CP COMPLETE  */ 59400000
*          3 BUFCFIX  BIT(1),              /* BUFFER FIXED           */ 60000000
*        2 BUFCFLG2 BIT(8),         /* FLAG BYTE--TWO        @X04SVLC*/ 60600004
*          3 BUFCXDDR BIT(1),       /* SUPRESS DDR ON ERRORS @X04SVLC*/ 60610004
*          3 BUFCNLAS BIT(1),       /* NON-EXIST PG RD IND   @X04SVLC*/ 60620004
*          3 BUFCBSYR BIT(1),       /* BUSY READING          @X04SVLC*/ 60650004
*          3 BUFCBSYW BIT(1),       /* BUSY WRITING          @X04SVLC*/ 60700004
*          3 * BIT(4),              /* UNUSED                @X04SVLC*/ 60750004
*        2 BUFCPLH PTR(31),         /* POINTER TO PLH        @X04SVLC*/ 61200004
*          3 BUFCAMB PTR(31),       /* PTR TO AMB            @X04SVLC*/ 61210004
*        2 BUFCDDDD PTR(32),        /* INPUT RBA             @X04SVLC*/ 61800004
*        2 BUFCORBA PTR(32),        /* OUTPUT RBA            @X04SVLC*/ 63000004
*        2 BUFCCPA PTR(31),         /* CHAN PGM AREA ADDRESS @X04SVLC*/ 63600004
*        2 BUFCBAD PTR(31),         /* BUFFER ADDRESS        @X04SVLC*/ 64200004
*        2 BUFCNXT1 PTR(31),        /* NEXT BUFC IN I/O CHN  @X04SVLC*/ 64800004
*        2 BUFCINV    PTR(31),      /* INVOKERS FLD FOR ASM AND DB/DC   64804904
*                                                            @X04SVLC*/ 64805304
*          3 BUFCWLEN FIXED(15),    /* BUFC DATA LEN FOR VBP @X04SVLC*/ 64806004
*        2 BUFCDSPC   PTR(31),      /* DSPCT PTR FOR VBP.    @X04SVLC*/ 64808804
*        2 BUFCIDXL FIXED(8),       /* INDEX LEVEL           @X04SVLC*/ 64811604
*        2 BUFCNXT2 PTR(24),        /* NEXT LOGICAL BUFFER   @X04SVLC*/ 64814404
*        2 BUFXIRBA FIXED(32),      /* EXCL INPUT RBA        @X04SVLC*/ 64817204
*        2 BUFXORBA FIXED(32),      /* EXCL OUTPUT RBA       @X04SVLC*/ 64820004
*        2 BUFCHAIN PTR(31),        /* NEXT BUFC IN POOL     @X04SVLC*/ 64850004
*        2 BUFCMDBT FIXED(32),      /* MODIFICATION MASK     @X04SVLC*/ 64950004
*        2 BUFCUCUP PTR(31),        /* NXT BUFC UP USE CHN   @X04SVLC*/ 64960004
*        2 BUFCUCDN PTR(31),        /* NXT BUFC DOWN USE CHN @X04SVLC*/ 64970004
*        2 BUFCEND CHAR(0)BDY(DWORD);/* ROUND LEN TO DWORD   @X04SVLC*/ 65000004
*        DCL BUFCRSC1 CHAR(8)DEFINED(BUFCAVL);/* CDS RESOURCE           65100004
*                                                            @X04SVLC*/ 65150004
./  ADD  SSI=51790071,NAME=IDACALL
 %IDACALL:                                                              00555503
    MACRO KEYS(ADDBASE);                                                01111003
                                                                        01666503
 /* MACRO IS NEW FOR VSAM RELEASE 2                          @X04SVLC*/ 02222003
                                                                        02777503
    DCL                                                                 03333003
      ACOL FIXED;                                                       03888503
    ACOL=MACCOL+LENGTH(MACLIST)+8;                                      04444003
    ANS('I'||MACINDEX(3:4)||':') COL(2);                                04999503
    ANS('DO;') COL(MACCOL);                                             05555003
    ANS('/* IDACALL'||MACLIST) COL(44);                                 06110503
    ANS('*/') COL(70);                                                  06666003
    IF MACLIST(1) ¬= '' THEN                                            06716003
      DO;                                                               06766003
    ANS('CALL '||MACLIST(1)||';') SKIP COL(MACCOL+2);                   07221503
    ANS('/* EXIT TO '||MACLIST(1)) COL(44);                             07777003
    ANS('*/') COL(70);                                                  08332503
      END;                                                              08382503
    ANS('GEN(BALR @11,0);') SKIP COL(MACCOL+2);                         08888003
    ANS('/* LOAD ADDR OF REENTRY   */') COL(44);                        09443503
    ANS('GEN(USING *,@11);') SKIP COL(MACCOL+2);                        09999003
    ANS('/* ESTABLISH ADDRESSING   */') COL(44);                        10554503
    IF ADDBASE¬='' THEN             /* IF SECOND BAS NEEDED          */ 11110003
      DO;                                                               11665503
        ANS('GEN(USING *+4095,'||ADDBASE(1)||');') SKIP COL(MACCOL+2);  12221003
        ANS('/* ESTABLISH SECOND BASE  */') COL(44);                    12776503
        ACOL=ACOL+LENGTH(ADDBASE)+7;                                    13332003
        ANS('GEN(LA    '||ADDBASE(1)||',4095(@11));') SKIP COL(MACCOL+2 13887503
            );                                                          14443003
        ANS('/* LOAD SECOND BASE       */') COL(44);                    14998503
        ANS('GEN(L     '||ADDBASE(1)||',=A(@PSTART+4095));') SKIP COL(  19442503
            MACCOL+2);                                                  19998003
        ANS('/* RELOAD SECOND BASE     */') COL(44);                    20553503
        ANS('GEN(USING @PSTART+4095,'||ADDBASE(1)||');') SKIP COL(      21109003
            MACCOL+2);                                                  21664503
        ANS('/* ESTABLISH SECOND BASE  */') COL(44);                    22220003
      END;                                                              22775503
    ANS('GEN(L     @11,=A(@PSTART));') SKIP COL(MACCOL+2);              22825503
    ANS('/* RELOAD BASE            */') COL(44);                        22875503
    ANS('GEN(USING @PSTART,@11);') SKIP COL(MACCOL+2);                  22925503
    ANS('/* ESTABLISH ADDRESSING   */') COL(44);                        22975503
    ANS('END I'||MACINDEX(3:4)||';') SKIP COL(MACCOL);                  23331003
    ANS COL(ACOL);                                                      23886503
    %END;                                                               24442003
./  ADD  SSI=81720314,NAME=IDACIDF
*/********************************************************************/ 00050037
*/*                                                                  */ 00100037
*/*   MACRO NAME = IDACIDF                                           */ 00150037
*/*                                                                  */ 00200037
*/*   DESCRIPTIVE NAME = CONTROL INTERVAL DEFINITION FIELD           */ 00250037
*/*                                                                  */ 00300037
*/*   FUNCTION = DESCRIBES THE FREE SPACE IN A VSAM CONTROL INTERVAL */ 00350037
*/*                                                                  */ 00500037
*/*   INCLUDED MACROS = NONE                                         */ 00550037
*/*                                                                  */ 00600037
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00650037
*/*                                                                  */ 00700037
*/*   CREATED BY = VSAM RECORD MANAGEMENT                            */ 00750037
*/*                                                                  */ 00800037
*/*   STATUS = VS/1 RELEASE 4  (CHANGE FLAG @X04SVXX)                */ 00850037
*/*                                                                  */ 00900037
*/*   DATE OF LAST CHANGE = 9 AUG 74                                 */ 00950037
*/*                         28 MAR 78                       @ZA31009 */ 01000037
*/********************************************************************/ 01050037
*        DCL 1 IDACIDF BASED,  /* CONTROL INTERVAL DEFINITION FIELD  */ 03000037
*              2 CIDFOSET     PTR(15),  /* OFFSET TO FREE SPACE      */ 06000037
*              2 CIDFLL       PTR(15),  /* LENGTH OF FREE SPACE      */ 09000037
*                                       /* BOTH PTRS CONTAIN ZERO    */ 09050037
*                                       /* VALUE FOR SOFTWARE EOF    */ 09100037
*                3 CIDFBUSY   BIT(1),  /* CI SPLIT BUSY FLAG @ZA31009*/ 09150037
*                3 *          BIT(15);  /*FREE SPACE LENGTH  @ZA31009*/ 09200037
./  ADD  SSI=43440927,NAME=IDACLWRK
 /********************************************************************/ 00110004
 /*                                                                  */ 00120004
 /*   MACRO NAME = IDACLWRK                                          */ 00130004
 /*                                                                  */ 00140004
 /*   DESCRIPTIVE NAME = VSAM CLOSE AND T-CLOSE ACB WORK AREA.       */ 00142004
 /*                                                                  */ 00144004
 /*   FUNCTION = THE ACB WORK AREA IS USED FOR INTERNAL COMMUNICATION*/ 00146004
 /*              WITHIN THE CLOSE MODULES AND THE T-CLOSE MODULES.   */ 00148004
 /*                                                                  */ 00148404
 /*   CONTROL BLOCK STRUCTURE = THE IDACLWRK IS POINTED TO BY        */ 00150404
 /*                             REGISTER 4 (RCORE).                  */ 00152404
 /*                                                                  */ 00152604
 /*   INCLUDED MACROS = NONE                                         */ 00154604
 /*                                                                  */ 00156604
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY.               */ 00158604
 /*                                                                  */ 00162604
 /*   CREATED BY: VSAM CLOSE MODULE IDA0200T.                        */ 00164604
 /*               VSAM T-CLOSE MODULE IDA0231T.                      */ 00165004
 /*                                                                  */ 00166604
 /*   STATUS = VS1 RELEASE 4, VS2 RELEASE 3.                         */ 00176604
 /*                                                                  */ 00178604
 /*   DATE OF LAST CHANGE = 22 NOVEMBER 74                   @Z30SSRL*/ 00180603
 /*                                                                  */ 00182604
 /********************************************************************/ 00183004
    DCL                                                                 00183304
      1 IDACLWRK BASED(RCORE),      /* ACB WORK AREA                 */ 00193304
       2 CLWID CHAR(8),             /* CLOSE ACB WK AREA ID  @Z30SSRL*/ 00195303
       2 CLWCOMWK PTR(31),          /* ADDRESS OF COMMON WORK AREA   */ 00200004
       2 CLWAMBPT PTR(31),          /* CURRENT AMB POINTER           */ 00210004
       2 CLWSFI CHAR(12),           /* SUB FUNCTION INFORMATION AREA */ 00220004
       2 CLWBNOFL BIT(1),           /* INDICATE NO BUFFER FLUSH      */ 00250004
       2 CLWCNOUP BIT(1),           /* INDICATE NO CATALOG UPDATE    */ 00300004
       2 CLWNWRIT BIT(1),           /* INDICATE NO WRTBFR            */ 00350004
       2 CLWPATH BIT(1),            /* INDICATE PATH PROCESSING      */ 00400004
       2 CLWSPHCL BIT(1),           /* INDICATE CLOSE ENTIRE SPHERE  */ 00450004
       2 CLWDUMMY BIT(1),           /* INDICATE DUMMY DATA SET       */ 00500004
       2 CLWOUTPT BIT(1),           /* INDICATE BASE DATA SET OPENNED   00600004
                                       FOR OUTPUT                    */ 00650004
       2 CLWPARCL BIT(1),           /* INDICATE PARTIAL CLOSE        */ 00700004
       2 CLWPRMCL BIT(1),           /* INDICATE PRIMARY CLOSE        */ 00750004
       2 CLWSECCL BIT(1),           /* INDICATE SECONDARY CLOSE      */ 00800004
       2 CLWGMAIN BIT(1),           /* IND MODULE WORK AREA BUILT    */ 00850004
       2 CLWTERM  BIT(1);           /* INDICATE TERMINATING ERROR IN    00900004
                                       IDA0200B                      */ 00910004
./  ADD  SSI=53501161,NAME=IDACMB
 /********************************************************************/ 00010004
 /*                                                                  */ 00020004
 /*   MACRO NAME = IDACMB                                            */ 00030004
 /*                                                                  */ 00040004
 /*   DESCRIPTIVE NAME = CLUSTER MANAGEMENT BLOCK.                   */ 00050004
 /*                                                                  */ 00060004
 /*   FUNCTION = THE CMB POINTS TO CORE BLOCK HEADERS WHICH REFLECT  */ 00070004
 /*              GOTTEN CORE FOR AN ESDS OR A KSDS CONTROL BLOCK     */ 00080004
 /*              STRUCTURE.                                          */ 00090004
 /*                                                                  */ 00100004
 /*   CONTROL BLOCK STRUCTURE = POINTED TO BY THE AMBL (AMBLCMB).    */ 00110004
 /*                                                                  */ 00120004
 /*   INCLUDED MACROS = NONE                                         */ 00130004
 /*                                                                  */ 00140004
 /*   METHOD OF ACCESS = PL/S - RESPECIFY IDACMB BASED.              */ 00150004
 /*                                                                  */ 00160004
 /*   CREATED BY: VSAM OPEN MODULE IDA0192F.                         */ 00170004
 /*                                                                  */ 00180004
 /*   STATUS = VS2 RELEASE 3.                                        */ 00190003
 /*                                                                  */ 00200004
 /*   DATE OF LAST CHANGE = 10/22/74                                 */ 00210003
 /*                                                                  */ 00220004
 /********************************************************************/ 00230004
 DCL 1 IDACMB BASED,                /* CLUSTER MANAGEMENT BLOCK      */ 01400004
       2 CMBID    CHAR(1),          /* CONTROL BLOCK ID              */ 01500004
       2 *        CHAR(1),          /* UNUSED                        */ 01600004
       2 CMBLEN   FIXED(15),        /* LENGTH OF CMB                 */ 01700004
       2 CMBFLGS BIT(8),            /* INDICATOR FLAGS               */ 01710004
         3 CMBOUT BIT(1),           /* STRUCTURE ALLOWS OUTPUT       */ 01720004
       2 CMBNST CHAR(1),            /* NUMBER OF STRINGS             */ 01800004
       2 CMBCNT   FIXED(15),        /* NUMBER OF ENTRIES IN CMB      */ 01900004
       2 CMBPTRS,                   /* PTR'S TO STORAGE BLOCKS       */ 02000004
         3 CMBUSRPT PTR(31),        /* USER BLOCK HEADER             */ 02100003
         3 CMBPRPTR PTR(31),        /* PROTECT BLOCK HEADER          */ 02200003
         3 CMBSTPTR PTR(31),        /* NON-PROTECTED STRING BLK HDR  */ 02300003
         3 CMBUSPTR PTR(31),        /* NON-PROT UPGR STRING BLK HDR  */ 02400003
         3 CMBFSTPT PTR(31),        /* VS2 - GLOBAL FIXED STRING BLOCK  02500003
                                       HEADER                @ZA04718*/ 02550003
         3 CMBUFSPT PTR(31),        /* VS2 - GLOBAL UPGRADE FIXED       02600003
                                       STRING BLOCK HEADER   @ZA04718*/ 02650003
         3 CMBBFRPT PTR(31),        /* BUFFER BLOCK HEADER           */ 02700003
         3 CMBUBFPT PTR(31),        /* UPGRADE BUFFER BLOCK HEADER   */ 02800003
         3 CMBDEBPT PTR(31),        /* DEB BLOCK HEADER              */ 02900003
         3 CMBEDBPT PTR(31),        /* EDB BLOCK HEADER              */ 03000003
         3 CMBPSTPT PTR(31),        /* VS2 - PROTECTED STRING BLK HDR*/ 03100003
         3 CMBPUSPT PTR(31),        /* VS2 - PROT UPGR STRING BLK HDR*/ 03200003
         3 CMBFXDPT PTR(31),        /* FIXED BLOCK HEADER    @ZA04718*/ 03250003
         3 * PTR(31);               /* RESERVED              @ZA04718*/ 03350003
./  ADD  SSI=51900085,NAME=IDACPA
*/********************************************************************/ 00050004
*/*                                                                  */ 00100004
*/*   MACRO NAME = IDACPA                                            */ 00150004
*/*                                                                  */ 00200004
*/*   DESCRIPTIVE NAME = CHANNEL PROGRAM AREA                        */ 00250004
*/*                                                                  */ 00260004
*/*   FUNCTION =                                                     */ 00270004
*/*                                                                  */ 00270404
*/* THE CHANNEL PROGRAM AREA(CPA) CONTAINS A FIXED, HEADER SECTION   */ 00272004
*/* CONTAINING VARIOUS POINTERS AND PARAMETERS, AND OTHER SECTIONS   */ 00274004
*/* WHICH CONTAIN CHANNEL PROGRAM SEGMENTS AND ARGUMENTS NEEDED BY   */ 00276004
*/* THE CCW-S. THESE VARIOUS OTHER SECTIONS ARE LOCATED BY POINTERS  */ 00278004
*/* FROM THE FIXED SECTION SINCE THE AMOUNT OF SPACE REQUIRED FOR    */ 00278404
*/* THEM VARIES DEPENDING ON CONTROL INTERVAL SIZE, BLOCKSIZE, OPEN  */ 00278804
*/* OPTIONS SPECIFIED, ETC.                                          */ 00279204
*/*                                                                  */ 00280004
*/*   CONTROL BLOCK STRUCTURE = IDACPA IS POINTED TO BY IDABUFC      */ 00290004
*/*                                                                  */ 00292004
*/*   INCLUDED MACROS = NONE                                         */ 00294004
*/*                                                                  */ 00296004
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00298004
*/*                                                                  */ 00298404
*/*   CREATED BY = VSAM OPEN                                         */ 00298804
*/*                                                                  */ 00299204
*/*   STATUS = VS/1 RELEASE 4  (CHANGE FLAG @X04SVXX)                */ 00299604
*/*                                                                  */ 00299704
*/*   DATE OF LAST CHANGE = 13 AUG 74                                */ 00299804
*/*                                                                  */ 00299904
*/********************************************************************/ 00349904
*% GOTO CPAPLS1;                                                        00399904
*/*                                                                  */ 03600000
*/* READ AND WRITE CHANNEL COMMANDS SPECIFY AN INDIRECT DATA ADDRESS */ 03900000
*/* LIST AND POINT TO AN ADDRESS WITHIN THE AREA POINTED TO BY       */ 04200000
*/* CPAIDAL. THE REAL ADDRESSES IN CPAIDAL ARE FILLED IN LATER IN    */ 04500000
*/* CONJUNCTION WITH PAGE FIXING.  THE VIRTUAL ADDRESSES CORRESPONDING*/04800000
*/* TO THE REAL ADDRESSES ARE IN THE AREA POINTED TO BY CPAVPL.      */ 05100000
*/* THESE VIRTUAL ADDRESSES ARE NORMALLY SUPPLIED BY OPEN.           */ 05400000
*/* (EXCEPTION WHEN CPAVPLV IS OFF)                                  */ 05700000
*/* THE FIRST ADDRESS IS THE STARTING ADDRESS OF THE                 */ 06000000
*/* BUFFER. SUBSEQUENT ADDRESSES ARE OBTAINED BY INCREMENTING THE    */ 06300000
*/* PREVIOUS ADDRESS BY 2K OR PHYSICAL BLOCK SIZE, WHICHEVER IS LESS.*/ 06600000
*/*                                                                  */ 06900000
*/* IT IS ALSO ASSUMED BY THE I/O MANAGER THAT CCW LISTS WILL        */ 07200000
*/* EXIST, AS REQUIRED, AS SPECIFIED FOR EACH TYPE OF CHANNEL        */ 07500000
*/* PROGRAM SEGMENT.                                                 */ 07800000
*/*                                                                  */ 08100000
*/*                                                                  */ 08400000
*/* *** IMPORTANT NOTE: THE ENTIRE CPA MUST BE CONTAINED WITHIN      */ 08700000
*/*                     A SINGLE PAGE.                               */ 09000000
*/*          ALSO NOTE THAT CHANNEL PROGRAM SEGMENTS MUST BE         */ 09300000
*/*                    ON DOUBLE WORD BOUNDARIES.                    */ 09600000
*/*                                                                  */ 09900000
*/*                                                                  */ 10200000
*/* IN THE FOLLOWING DESCRIPTIONS,                                   */ 10500000
*/*     CC = COMMAND CHAIN                                           */ 10800000
*/*     MT = MULTI-TRACK MODE                                        */ 11100000
*/*     IDAL = INDIRECT DATA ADDRESS LIST                            */ 11400000
*/*     LL = PHYSICAL BLOCK SIZE (LPMBLKSZ)                          */ 11700000
*/*     N = NUMBER OF PHYSICAL BLOCKS PER CINV (CPABCINV)            */ 12000000
*/*     NT = NO TRANSFER                                             */ 12300000
*/*                                                                  */ 12600000
*/*                                                                  */ 12900000
*/*                                                                  */ 13200000
*/*                                                                  */ 13500000
*/******       UPDATE WRITE CHANNEL PROGRAM SEGMENT             ******/ 13800000
*/*                                                                  */ 14100000
*/*                                                                  */ 14400000
*/*                                                                  */ 14700000
*/* EVERY SEARCH ID CCW AFTER THE FIRST ONE IS A MULTI-TRACK SEARCH. */ 15000000
*/*                                                                  */ 15300000
*/*                                                                  */ 15600000
*/* (CPAWCPS POINTER MINUS 8)     (EXTRA CCW SLOT IF RPS DEVICE)     */ 15900000
*/* CPAWCPS->                     SEEKH       CPAWSEEK,CC,6          */ 16200000
*/*                         __  | SRCH ID EQ  SA,CC,5                */ 16500000
*/*                        |  _ | TIC         *-8                    */ 16800000
*/*                        |    | WD          DA1,(CC,IDAL),LL       */ 17100000
*/*                        |                                         */ 17400000
*/*                        |    | SRCH ID EQ  SA+5,(CC,MT),5         */ 17700000
*/*                        |   -| TIC         *-8                    */ 18000000
*/*                        |    | WD          DA2,(CC,IDAL),LL       */ 18300000
*/*            N GROUPS  --|       .                                 */ 18600000
*/*            OF 3 CCW-S  |       .                                 */ 18900000
*/*                                .                                 */ 19200000
*/*                        |    | SRCH ID EQ  SA+5*(N-1),(CC,MT),5   */ 19500000
*/*                        |   -| TIC         *-8                    */ 19800000
*/*                        |__  | WD          DA(N),(CC,IDAL),LL     */ 20100000
*/*                               NOP                                */ 20400000
*/*                                                                  */ 20700000
*/*                               |-------------------------------|  */ 21000000
*/* CPAIDAL->               DA1   |                               |  */ 21300000
*/*                               |  IF LL=4K, 2*N 4 BYTE ENTRIES |  */ 21600000
*/*  IF LL=4K,              DA2   |                               |  */ 21900000
*/*     DA(N)=DA(N-1)+8           |  IF LL<4K, N 4 BYTE ENTRIES   |  */ 22200000
*/*  IF LL<4K,              DA(N) |                               |  */ 22500000
*/*     DA(N)=DA(N-1)+4           |                               |  */ 22800000
*/*                               |-------------------------------|  */ 23100000
*/* CPAVPL->                      |                               |  */ 23400000
*/*                               |                               |  */ 23700000
*/*                               |                               |  */ 24000000
*/*                               |     SAME AS ABOVE             |  */ 24300000
*/*                               |                               |  */ 24600000
*/*                               |                               |  */ 24900000
*/*                               |------------------------------ |  */ 25200000
*/*                                                                  */ 25500000
*/* CPAWSID->               SA    |-------------------------------|  */ 25800000
*/*                               |  N 5 BYTE ENTRIES             |  */ 26100000
*/*                               |------------------------------ |  */ 26400000
*/*                                                                  */ 26700000
*/*                                                                  */ 27000000
*/*  BYTES REQUIRED BY CCW-S = (3*N+2(+1,IF RPS))*8                  */ 27300000
*/*                                                                  */ 27600000
*/*  BYTES REQUIRED FOR SID ARGS = 5*N                               */ 27900000
*/*                                                                  */ 28200000
*/*  BYTES REQUIRED FOR BOTH,                                        */ 28500000
*/*            CCW MINIMUM         24*N+16                           */ 28800000
*/*            SID ARGS            5*N                               */ 29100000
*/*                                -------                           */ 29400000
*/*            TOTAL MINIMUM       29*N+16                           */ 29700000
*/*                                                                  */ 30000000
*/*            ADDITIONAL IF RPS         8                           */ 30300000
*/*                                                                  */ 30600000
*/*                                                                  */ 30900000
*/*                                                                  */ 31200000
*/******           READ CHANNEL PROGRAM SEGMENT                 ******/ 31500000
*/*                                                                  */ 31800000
*/* EVERY READ CCW AFTER THE FIRST ONE IS A MULTI-TRACK READ.        */ 32100000
*/*                                                                  */ 32400000
*/*                                                                  */ 32700000
*/* (CPARCPS POINTER MINUS 8)      (EXTRA CCW SLOT IF RPS DEVICE)    */ 33000000
*/* CPARCPS->                      SEEKH      CPARSEEK,CC,6          */ 33300000
*/*                                SRCH ID EQ CPARSID,CC,5           */ 33600000
*/*                                TIC        *-8                    */ 33900000
*/*                            --- RD         DA1,(CC,IDAL),LL       */ 34200000
*/*                           |    RD         DA2,(CC,IDAL,MT),LL    */ 34500000
*/*            N READ         |     .                                */ 34800000
*/*            DATA CCW-S  ---|     .                                */ 35100000
*/*                           |     .                                */ 35400000
*/*                           |--- RD         DA(N),(CC,IDAL,MT),LL  */ 35700000
*/*                                NOP                               */ 36000000
*/*                                                                  */ 36300000
*/*                                |------------------------------|  */ 36600000
*/* CPAIDAL->                DA1   |                              |  */ 36900000
*/*                                |  IF LL=4K, 2*N 4 BYTE ENTRIES|  */ 37200000
*/*  IF LL=4K,               DA2   |                              |  */ 37500000
*/*     DA(N)=DA(N-1)+8            |  IF LL<4K, N 4 BYTE ENTRIES  |  */ 37800000
*/*  IF LL<4K,               DA(N) |                              |  */ 38100000
*/*     DA(N)=DA(N-1)+4            |                              |  */ 38400000
*/*                                |------------------------------|  */ 38700000
*/* CPAVPL->                       |                              |  */ 39000000
*/*                                |                              |  */ 39300000
*/*                                |                              |  */ 39600000
*/*                                |    SAME AS ABOVE             |  */ 39900000
*/*                                |                              |  */ 40200000
*/*                                |                              |  */ 40500000
*/*                                |------------------------------|  */ 40800000
*/*                                                                  */ 41100000
*/*                                                                  */ 41400000
*/*  BYTES REQUIRED BY CCW-S = (N+4(+1 IF RPS))*8                    */ 41700000
*/*                          = 8*N+32 (+8, IF RPS)                   */ 42000000
*/*                                                                  */ 42300000
*/*                                                                  */ 42600000
*/*                                                                  */ 42900000
*/*                                                                  */ 43200000
*/******       FORMAT WRITE CHANNEL PROGRAM SEGMENT             ******/ 43500000
*/*                                                                  */ 43800000
*/*                                                                  */ 44100000
*/* ONLY THE PART OF THE CHANNEL PROGRAM SEGMENT WHICH WRITES        */ 44400000
*/* THE FIRST BLOCK CAN BE PREBUILT. THEREFORE OPEN WILL             */ 44700000
*/* BUILD THE CHANNEL PROGRAM (6 CCW-S) AS IF THERE WERE             */ 45000000
*/* ONLY ONE PHYSICAL BLOCK PER CONTROL INTERVAL AND THE             */ 45300000
*/* I/O MANAGER WILL DYNAMICALLY MODIFY THE CCW LIST,                */ 45600000
*/* WHEN NECESSARY. OPEN WILL LEAVE SPACE FOR ADDITIONAL CCW-S.      */ 45900000
*/*                                                                  */ 46200000
*/*                                                                  */ 46500000
*/*                                                                  */ 46800000
*/* (CPAWCPS POINTER MINUS 8)     (EXTRA CCW SLOT IF RPS DEVICE)     */ 47100000
*/* CPAWCPS->                     SEEKH       CPAWSEEK,CC,6          */ 47400000
*/*                               SRCH ID EQ  SA,CC,5                */ 47700000
*/*                               TIC        *-8                     */ 48000000
*/*                               WCKD        FWCA1,DC,8             */ 48300000
*/*                               WCKD        DA1,(CC,IDAL),LL       */ 48600000
*/*                               NOP         ,SILI,2                */ 48900000
*/*                                                                  */ 49200000
*/*                                                                  */ 49500000
*/* CPAFWCNT->             FWCA1  |-------------------------------|  */ 49800000
*/*                               |                               |  */ 50100000
*/*                               | N 8 BYTE ENTRIES - USED TO    |  */ 50400000
*/*                               |                               |  */ 50700000
*/*                               | FORM COUNT FIELDS - CCHHRKDD  |  */ 51000000
*/*                               |                               |  */ 51300000
*/*                               |-------------------------------|  */ 51600000
*/*                                                                  */ 51900000
*/*                                                                  */ 52200000
*/* THE REST OF THE ITEMS IN THE ABOVE FORMAT WRITE CHANNEL          */ 52500000
*/* PROGRAM EXAMPLE ARE THE SAME AS IN THE UPDATE WRITE EXAMPLE      */ 52800000
*/*                                                                  */ 53100000
*/* TOTAL SPACE REQUIRED FOR CCW-S = 32*N+16 (+8 IF RPS)             */ 53400000
*/*                                                                  */ 53700000
*/* TOTAL BYTES REQUIRED,                                            */ 54000000
*/*                 CCW     32*N+16                                  */ 54300000
*/*            SID ARGS      5*N                                     */ 54600000
*/*           COUNT FLDS     8*N                                     */ 54900000
*/*                         -------                                  */ 55200000
*/*                         45*N+16    PLUS CPAIDAL AND CPAVPL SPACE */ 55500000
*/*           ADDITIONAL                                             */ 55800000
*/*               IF RPS          8                                  */ 56100000
*/*                                                                  */ 56400000
*/*                                                                  */ 56700000
*/******          WRITE CHECK CHANNEL PROGRAM SEGMENT           ******/ 57000000
*/*                                                                  */ 57300000
*/* EVERY READ CCW AFTER THE FIRST ONE IS A MULTI-TRACK READ.        */ 57600000
*/*                                                                  */ 57900000
*/*                                                                  */ 58200000
*/* CPAWCKS->                      SEEKH      CPAWSEEK,CC,6          */ 58500000
*/*                                SRCH ID EQ SA*,CC,5               */ 58800000
*/*                                TIC        *-8                    */ 59100000
*/*                            --- RD         DA1,(CC,NT),LL         */ 59400000
*/*                           |    RD         DA2,(CC,NT,MT),LL      */ 59700000
*/*             N READ        |     .                                */ 60000000
*/*             DATA CCW-S ---|     .                                */ 60300000
*/*                           |     .                                */ 60600000
*/*                           |--- RD         DA(N),(CC,NT,MT),LL    */ 60900000
*/*                                NOP                               */ 61200000
*/*                                                                  */ 61500000
*/*   *SA = CPAWCHR FOR UPDATE WRITE                                 */ 61800000
*/*       = CPAFWCHR (FIRST FIVE BYTES POINTED TO BY CPAFWCNT)       */ 62100000
*/*            FOR FORMAT WRITE                                      */ 62400000
*/*                                                                  */ 62700000
*/* BYTES REQUIRED BY CCW-S = (N+4)*8                                */ 63000000
*/*                         = 8*N+32                                 */ 63300000
*/*                                                                  */ 63600000
*/*                                                                  */ 63900000
*/********************************************************************/ 64200000
*/*                                                                  */ 64500000
*/*      CPA   DECLARATION                                           */ 64800000
*/*                                                                  */ 65100000
*%CPAPLS1: ;                                                            65400000
* /* CPA (CHANNEL PROGRAM AREA)                                      */ 65700000
 /*                                                                  */ 66000000
*  DCL 1 IDACPA BDY(WORD) BASED,    /* CPA                           */ 66300000
*        2 CPAID        CHAR(1),    /* CONTROL BLOCK ID              */ 66600000
*        2 *            CHAR(1),    /* RESERVED                      */ 66900000
*        2 CPALEN       FIXED(15),  /* CONTROL BLOCK SIZE            */ 67200000
*        2 CPAWREAL     PTR(31),    /* PREVIOUS REAL ADDR WRITE CP   */ 67500000
*        2 CPAWCPS      PTR(31),    /* PTR TO 1ST WRITE CCW (SEEK)   */ 67800000
*        2 CPAWCPE      PTR(31),    /* PTR TO LAST WRITE CCW(NOP/TIC)*/ 68100000
*        2 CPAWCKS      PTR(31),    /* PTR TO 1ST WRITE CHECK CCW    */ 68400000
*        2 CPAWCKE      PTR(31),    /* PTR TO LAST WRITE CHECK CCW   */ 68700000
*        2 CPARREAL     PTR(31),    /* PREVIOUS REAL ADDR READ CP    */ 69000000
*        2 CPARCPS      PTR(31),    /* PTR TO 1ST READ CCW           */ 69300000
*        2 CPARCPE      PTR(31),    /* PTR TO LAST READ CCW          */ 69600000
*        2 CPAWPHAD     CHAR(8),    /* WRITE PHYS ADDR - MBBCCHHR    */ 69900000
*          3 *          CHAR(1),                                        70200000
*          3 CPAWSEEK   CHAR(6),    /* WRITE SEEK ADDR               */ 70500000
*            4 CPAWBB   CHAR(2),                                        70800000
*            4 CPAWCHR  CHAR(5),                                        71100000
*          3 CPAWPHR    CHAR(1),                                        71400000
*        2 CPAWSID      PTR(31),    /* PTR TO WRITE SRCH ID ARG LIST */ 71700000
*        2 CPAFWCNT     PTR(31),    /* PTR TO FORMAT WRITE CNT FIELDS*/ 72000000
*        2 CPARPHAD     CHAR(8),    /* READ PHYS ADDR - MBBCCHHR     */ 72300000
*          3 *          CHAR(1),                                        72600000
*          3 CPARSEEK   CHAR(6),    /* READ SEEK ADDR                */ 72900000
*            4 CPARBB   CHAR(2),                                        73200000
*            4 CPARSID  CHAR(5),    /* READ SEARCH ID ARGUMENT       */ 73500000
*          3 *          CHAR(1),                                        73800000
*        2 CPAIDAL      PTR(31),    /* PTR TO REAL PAGE LIST         */ 74100000
*        2 CPAVPL       PTR(31),    /* PTR TO VIRT PAGE LIST         */ 74400000
*        2 CPAWORK1     PTR(31),    /* WORK AREA                     */ 74700000
*        2 CPAWORK2     PTR(31),    /* WORK AREA                     */ 75000000
*        2 CPABLKSZ     FIXED(31),  /* PHYS BLOCK SIZE FROM CONVERT  */ 75300000
*        2 CPABCINV     FIXED(15),  /* NBR OF BLOCKS PER CINV        */ 75600000
*        2 CPASSECT     PTR(8),     /* SET SECTOR ARG                */ 75900000
*        2 CPASTAT1     BIT(8),     /* CPA STATUS                    */ 76200000
*          3 CPAVPLV    BIT(1),     /* SET ON IN VPL VALID           */ 76500000
*        2 CPAFLAGS     CHAR(2),    /* I/O MANAGER FLAGS             */ 76800000
*          3 CPAFLAG1   CHAR(1),                                        77100000
*            4 CPAWV    BIT(1),     /* WRITE CHAN PROG SEG VALID     */ 77400000
*            4 CPAWCV   BIT(1),     /* WRITE CHK CHAN PROG SEG VALID */ 77700000
*            4 CPARV    BIT(1),     /* READ CHAN PROG SEG VALID      */ 78000000
*            4 CPAWRPS  BIT(1),     /* WRITE CP SEG FOR RPS DEVICE   */ 78300000
*            4 CPARRPS  BIT(1),     /* READ CP SEG FOR RPS DEVICE    */ 78600000
*            4 CPACHNED BIT(1),     /* CHAINING OF CP SEGS COMPLETE  */ 78900000
*            4 *        BIT(1),     /* RESERVED                      */ 79200000
*          3 CPAFLAG2   CHAR(1),                                        79500000
*            4 CPAWREPL BIT(1),     /* REPLICATED INDEX ON WRITE     */ 79800000
*            4 CPARREPL BIT(1),     /* REPLICATED INDEX ON READ      */ 80100000
*            4 CPAXLRA  BIT(1),     /* LRA INSTRUCTION ERROR         */ 80400000
*            4 CPAPFENT BIT(1),     /* PAGEFIX APPENDAGE ENTERED     */ 80700000
*            4 CPATKOFL BIT(1),     /* TRACK OVERFLOW IN MVM @Y30DSJH*/ 80702004
*        2 CPARSECT     PTR(8),     /* SET SECTOR ARG--READ  @X04SVMR*/ 80752004
*        2 CPAWSECT     PTR(8),     /* SET SECTOR ARG--WRITE @X04SVMR*/ 80802004
*        2 CPANXT1      PTR(31),    /* MVM STATIC CPA CHAIN  @Y30DSJH*/ 81100004
*        2 CPACPCHN     PTR(31);    /* MVM DYN CPA CHAIN FLD @Y30DSJH*/ 81200004
*/********************************************************************/ 81210004
*/* COMMON CHANNEL PROGRAM CCWS                                      */ 81220004
*/********************************************************************/ 81230004
    DCL 1 CPACCW BDY(DWORD)BASED,   /* FIRST 4 CCWS          @X04SVLC*/ 81250004
          2 CPACCWSK CHAR(8),       /* SEEK CCW              @X04SVLC*/ 81300004
          2 CPACCWSS CHAR(8),       /* SET SECTOR            @X04SVLC*/ 81350004
          2 CPACCWSI CHAR(8),       /* SEARCH ID             @X04SVLC*/ 81400004
          2 CPACCWTC CHAR(8);       /* TRANSFER IN CHANNEL   @X04SVLC*/ 81450004
./  ADD  SSI=31180088,NAME=IDACPDEF
* /*                                                               */   00650002
* /* MACCOMP Y-2 SC1DE/SJD61                                       */   00700002
* /* MACSTAT Y-2 73103/Y02113                                      */   00750002
* /*                                                               */   00800002
*/*       CHANGE LEVEL=00                                          */   01200000
*/*       DATE OF LAST CHANGE = 20 SEPT 71 ( 71*265 )              */   01800000
*/*       IDACPDEF, CHANNEL PROGRAM DEFINITION                     */   02400000
*/*                                                                */   03000000
*        DCL   1 IDACP   BASED,            /* CHAN PGM DEFINITION  */   04200000
*                2 IDACCW1,                /* SEEK HEAD            */   04800000
*                  3 IDACC1CC BIT(8),      /* COMMAND CODE         */   05400000
*                  3 IDACC1AD PTR(24),     /* COMMAND ADDRESS      */   06000000
*                  3 IDACC1ST BIT(16),     /* STATUS               */   06600000
*                  3 IDACC1NO FIXED(15),   /* RESIDUAL BYTE COUNT  */   07200000
*                2 IDACCW2,                /* SET SECTOR/NOP       */   07800000
*                  3 IDACC2CC BIT(8),      /* COMMAND CODE         */   08400000
*                  3 IDACC2AD PTR(24),     /* COMMAND ADDRESS      */   09000000
*                  3 IDACC2ST BIT(16),     /* STATUS               */   09600000
*                  3 IDACC2NO FIXED(15),   /* RESIDUAL BYTE COUNT  */   10200000
*                2 IDACCW3,                /* SEARCH ID            */   10800000
*                  3 IDACC3CC BIT(8),      /* COMMAND CODE         */   11400000
*                  3 IDACC3AD PTR(24),     /* COMMAND ADDRESS      */   12000000
*                  3 IDACC3ST BIT(16),     /* STATUS               */   12600000
*                  3 IDACC3NO FIXED(15),   /* RESIDUAL BYTE COUNT  */   13200000
*                2 IDACCW4,                /* TIC                  */   13800000
*                  3 IDACC4CC BIT(8),      /* COMMAND CODE         */   14400000
*                  3 IDACC4AD PTR(24),     /* COMMAND ADDRESS      */   15000000
*                  3 IDACCIOB PTR(31);     /* ADDRESS OF IOB       */   15600000
*        DCL   1 IDACCW5 BASED,            /* DATA TRANSFER DEFINED*/   16200000
*                2 IDACC5CC BIT(8),        /* COMMAND CODE         */   16800000
*                2 IDACC5AD PTR(24),       /* COMMAND ADDRESS      */   17400000
*                2 IDACC5ST BIT(16),       /* STATUS               */   18000000
*                2 IDACC5NO FIXED(15);     /* RESIDUAL BYTE COUNT  */   18600000
*        DCL   1 IDACCW6 BASED,            /* TIC/NOP SWITCH       */   19200000
*                2 IDACC6CC BIT(8),        /* COMMAND CODE         */   19800000
*                2 IDACC6AD PTR(24),       /* COMMAND ADDRESS      */   20400000
*                2 IDACC6ST BIT(16),       /* STATUS               */   21000000
*                2 IDACC6NO FIXED(15);     /* RESIDUAL BYTE COUNT  */   21600000
*%       DCL   SEEKHH   CHAR;              /* DEFINE HEAD SEEK     */   22200000
*%       DCL   SETSECT  CHAR;              /* SET SECTOR           */   22800000
*%       DCL   SIDEQ    CHAR;              /* SEARCH ID EQUAL      */   23400000
*%       DCL   TIC      CHAR;              /* TRANSFER IN CHANNEL  */   24000000
*%       DCL   NOP      CHAR;              /* NO OPERATION         */   24600000
*%       DCL   RDATA    CHAR;              /* READ DATA            */   25200000
*%       DCL   RCKD     CHAR;              /* RD COUNT, KEY, DATA  */   25800000
*%       DCL   WCKD     CHAR;              /* WRT COUNT, KEY, DATA */   26400000
*%       DCL   WD       CHAR;              /* WRITE DATA           */   27000000
*%       DCL   MT       CHAR;              /* MULTI-TRACK          */   27600000
*%       DCL   PCI      CHAR;              /* PROGRAMMED INTERRUPT */   28200000
*%       DCL   CC       CHAR;              /* COMMAND CHAINING     */   28800000
*%       DCL   DC       CHAR;              /* DATA CHAINING        */   29400000
*%       DCL   SILI     CHAR;              /* SUPPRESS INCORR LEN  */   30000000
*%       DCL   SKIP     CHAR;              /* SKIP DATA TRANSFER   */   30600000
*%       SEEKHH = '''1B''X';               /* SEEK HEAD            */   31200000
*%       SETSECT = '''23''X';              /* SET SECTOR           */   31800000
*%       SIDEQ = '''31''X';                /* SEARCH ID EQUAL      */   32400000
*%       TIC = '''08''X';                  /* TRANSFER IN CHANNEL  */   33000000
*%       NOP = '''03''X';                  /* NO OPERATION         */   33600000
*%       RDATA = '''06''X';                /* READ DATA            */   34200000
*%       RCKD = '''1E''X';                 /* RD COUNT, KEY, DATA  */   34800000
*%       WCKD = '''1D''X';                 /* WRT COUNT, KEY, DATA */   35400000
*%       WD = '''05''X';                   /* WRITE DATA           */   36000000
*%       MT = '''80''X';                   /* MULTI-TRACK          */   36600000
*%       PCI = '''08''X';                  /* PROGRAMMED INTERRUPT */   37200000
*%       CC = '''40''X';                   /* COMMAND CHAINING     */   37800000
*%       DC = '''80''X';                   /* DATA CHAINING        */   38400000
*%       SILI = '''20''X';                 /* SUPPRESS INCORR LEN  */   39000000
*%       SKIP = '''10''X';                 /* SKIP DATA TRANSFER   */   39600000
*%GOTO    IDACPSL2 ;                                                    40200000
*/*                                                                */   40800000
*/*                 ASSEMBLER DSECT FOR IDACPDEF                   */   41400000
*/*                                                                */   42000000
         MACRO                                                          42600000
         IDACPDEF  &DSECT=YES                                           43200000
.*         RELEASE 22 DELETIONS/CHANGES                                 43800000
.*         RELEASE 21 DELETIONS/CHANGES                                 44400000
.*         RELEASE 20 DELETIONS/CHANGES                                 45000000
* CONTROL                                                               45600000
NOP      EQU   X'03'                                                    46200000
SEEK     EQU   X'07'                                                    46800000
SEEKCC   EQU   X'0B'                                                    47400000
SEEKHH   EQU   X'1B'                                                    48000000
SFM      EQU   X'1F'                                                    48600000
SPACE    EQU   X'0F'                                                    49200000
TIC      EQU   X'08'                                                    49800000
*SEARCH  OPS                                                            50400000
MT       EQU   X'80'                                                    51000000
SHAEQ    EQU   X'39'                                                    51600000
SIDEQ    EQU   X'31'                                                    52200000
SIDHI    EQU   X'51'                                                    52800000
SIDEQHI  EQU   X'71'                                                    53400000
SKEQ     EQU   X'29'                                                    54000000
SKHI     EQU   X'49'                                                    54600000
SKEQHI   EQU   X'69'                                                    55200000
SETSECT  EQU   X'23'                                                    55800000
* READ   OPS                                                            56400000
RHA      EQU   X'1A'                                                    57000000
RDCNT    EQU   X'12'                                                    57600000
RR0      EQU   X'16'                                                    58200000
RDATA    EQU   X'06'                                                    58800000
RKD      EQU   X'0E'                                                    59400000
RCKD     EQU   X'1E'                                                    60000000
RDSECT   EQU   X'22'                                                    60600000
* WRITE  OPS                                                            61200000
WCKD     EQU   X'1D'                                                    61800000
WSCKD    EQU   X'01'                                                    62400000
WD       EQU   X'05'                                                    63000000
WKD      EQU   X'0D'                                                    63600000
WR0      EQU   X'15'                                                    64200000
* FLAGS                                                                 64800000
DC       EQU   X'80'                                                    65400000
CC       EQU   X'40'                                                    66000000
SILI     EQU   X'20'                                                    66600000
SKIP     EQU   X'10'                                                    67200000
PCI      EQU   X'08'                                                    67800000
* CP OFFSETS                                                            68400000
IDACPC4  EQU   4                        OFFSET TO SECOND HALF OF CCW    69000000
IDACPC6  EQU   6                        OFFSET TO FIRST BYTE OF COUNT   69600000
IDACPC7  EQU   7                        OFFSET TO SECOND BYTE OF COUNT  70200000
*                                                                       70800000
         AIF   ('&DSECT' EQ 'NO').IDACPM1                               71400000
IDACP    DSECT                          AM/0 CHANNEL PROGRAM DEFINITION 72000000
         AGO   .IDACPM2                                                 72600000
.IDACPM1 ANOP                                                           73200000
IDACP    DS    0D                       AM/0 CHANNEL PROGRAM DEFINITION 73800000
.IDACPM2 ANOP                                                           74400000
IDACCW1  CCW   SEEKHH,0,CC,6            SEEK TO CORRECT TRACK           75000000
IDACCW2  CCW   SETSECT,0,CC+SILI,1      SET SECTOR (NO OP FOR NON RPS)  75600000
IDACCW3  CCW   SIDEQ,0,CC,5             SEARCH ID (SILI AND COUNT OF 4  76200000
*                                       FOR REPLICATED INDEX READS)     76800000
IDACCW4  CCW   TIC,IDACCW3-IDACCW1,0,0  REPEAT UNTIL FOUND              77400000
IDACCIOB EQU   IDACCW4+IDACPC4          SECOND WORD USED FOR IOB PTR    78000000
*        THE VARIABLE SEGMENT OF THE CHANNEL PROGRAM FOLLOWS.           78600000
IDACCW5A CCW   RDATA+MT,0,CC,0          READ DATA/WRITE DATA--REPEATED  79200000
*        ONCE FOR EACH PHYSICAL BLOCK IN CONTROL INTERVAL OR ONCE FOR   79800000
*        EACH REPLICATED INDEX BLOCK.  IN NON-FIRST CHANNEL PROGRAM     80400000
*        SEGMENTS, THE PCI BIT MAY BE SET ALSO.  FOR FORMAT OR UPDATE   81000000
*        WRITE, CCW3 AND CCW4 ARE REPEATED FOR EACH CCW5 AND MT IS OFF. 81600000
IDACCW5B CCW   WD,0,CC,0                UPDATE WRITE VERSION            82200000
IDACCW5C CCW   WCKD,0,DC,8              FMT WRITE VERSION--WRITE COUNT  82800000
IDACCW5D CCW   WCKD,0,CC,0              FMT WRITE VERSION--WRITE DATA   83400000
IDACCW6  CCW   NOP,0,SILI,1             CC ON AND SET TO TIC IF CHANNEL 84000000
*        PROGRAM SEGMENTS ARE LINKED TOGETHER.                          84600000
         MEND                                                           85200000
*                     END OF ASSEMBLER DSECT                            85800000
*%IDACPSL2: ;                                                           86400000
./  ADD  SSI=60860637,NAME=IDACSL
 /********************************************************************/ 00050004
 /*                                                                  */ 00100004
 /*   MACRO NAME = IDACSL                                            */ 00150004
 /*                                                                  */ 00200004
 /*   DESCRIPTIVE NAME = CORE SAVE LIST.                             */ 00250004
 /*                                                                  */ 00300004
 /*   FUNCTION = IDACSL DEFINES THE STRUCTURE OF THE CORE SAVE LIST. */ 00350004
 /*              ALL SUCCESSFUL GETMAINS FOR VIRTUAL STORAGE WHICH   */ 00400004
 /*              ARE NOT NORMALLY FREED DURING OPEN TERMINATION ARE  */ 00450004
 /*              RECORED IN THIS LIST.  ADDITIONAL LISTS ARE CHAINED */ 00500003
 /*              AS REQUIRED.                                        */ 00510004
 /*                                                                  */ 00520004
 /*   CONTROL BLOCK STRUCTURE = POINTED TO BY THE OPEN ACB WORK AREA.*/ 00530004
 /*                                                                  */ 00540004
 /*   INCLUDED MACROS = NONE                                         */ 00542004
 /*                                                                  */ 00544004
 /*   METHOD OF ACCESS = PL/S - RESPECIFY IDACSL AND CSLENTRY BASED. */ 00546004
 /*                                                                  */ 00548004
 /*   CREATED BY: VSAM OPEN MODULE IDA0192M.                         */ 00548404
 /*                                                                  */ 00548804
 /*   STATUS = VS2 RELEASE 4                                 @Z40ESSR*/ 00549204
 /*                                                                  */ 00549604
 /*   DATE OF LAST CHANGE = 01/31/75                         @Z40ESSR*/ 00549704
 /*                                                                  */ 00549804
 /********************************************************************/ 00549904
    DCL 1 IDACSL BASED,             /* CORE SAVE LIST                */ 00550004
          2 CSLR0,                  /* USED TO LOAD FREEMAIN REG 0   */ 00560004
            3 CSLSUBPL FIXED (8),   /* SUBPOOL NUMBER OF THIS CSL    */ 00600004
            3 CSLLENTH FIXED (24),  /* LENGTH IN BYTES OF THIS CSL   */ 00650004
          2 CSLID    CHAR (8),      /* BLOCK IDENTIFIER              */ 00700004
          2 CSLNXPTR PTR (31),      /* PTR TO NEXT CSL OR 0 IF LAST     00750004
                                       CSL IN CHAIN                  */ 00800004
          2 CSLACTEN FIXED (15),    /* NUMBER OF ACTIVE ENTRIES      */ 00850004
          2 CSLGSRK FIXED(8),       /* GSR KEY - VS2         @Z40ESSR*/ 00900004
          2 *       FIXED(8),       /*  NOT USED             @Z40ESSR*/ 00910004
          2 CSLNTRYS (32) CHAR(12); /* CORE ENTRIES                  */ 00950004
    DCL 1 CSLENTRY BASED,           /* CORE SAVE LIST ENTRY          */ 01010004
          2 CSLFREMN,               /* FEEEMAIN INFORMATION          */ 01020004
            3 CSLPOOLN FIXED (8),   /* SUBPOOL NUMBER OF GOTTEN CORE */ 01050004
            3 CSLCORLN FIXED (24),  /* LENGTH OF BLOCK OF GOTTEN CORE*/ 01100004
            3 CSLCORPT PTR (31),    /* PTR TO BLOCK OF GOTTEN CORE   */ 01110004
          2 CSLFLAGS BIT(8),        /* FLAGS                         */ 01112003
            3 CSLKEY5  BIT(1),      /* CORE IS IN KEY 5 - VS2        */ 01114003
            3 CSLGSRKT  BIT(1),      /* CORE IN GSR KEY- VS2 @Z40ESSR*/ 01116004
                                   /* ELSE CORE IN KEY 0-VS2 @Z40ESSR*/ 01118004
            3 CSLJSTCB BIT(1),      /* CORE IS OWNED BY JOBSTEP TCB  */ 01122003
          2 CSLANCPT PTR(24);       /* PTR TO ADDR OF HEB HDR ELEM FOR  01160003
                                       THIS BLK OF CORE OR ZERO      */ 01170004
    DCL IDACSLID CHAR (8) CONSTANT (' IDACSL '); /* CHAR CONSTANT       01200004
                                       FOR CSLID                     */ 01250004
./  ADD  SSI=60920881,NAME=IDACTREC
 /********************************************************************/ 00050003
 /*                                                                  */ 00100003
 /*   MACRO NAME = IDACTREC                                          */ 00150003
 /*                                                                  */ 00200003
 /*   DESCRIPTIVE NAME = AMB WORK AREA.                              */ 00250003
 /*                                                                  */ 00300003
 /*   FUNCTION = THE AMB WORK AREA CONTAINS ALL THE CATALOG INFORMA- */ 00350003
 /*              TIONS OF AN AMB.                                    */ 00400003
 /*                                                                  */ 00450003
 /*   CONTROL BLOCK STRUCTURE = POINTED TO BY THE AMB (AMBWKA).      */ 00500003
 /*                                                                  */ 00550003
 /*   INCLUDED MACROS = NONE                                         */ 00600003
 /*                                                                  */ 00650003
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY FOR THE MAIN   */ 00700003
 /*                             SECTION.  RESPECIFY CTVOLENT BASED   */ 00750003
 /*                             FOR THE CATALOG VOLUME ENTRY.        */ 00800003
 /*                             RESPECIFY CTKEYENT BASED FOR THE KEY */ 00850003
 /*                             RANGE ENTRY.  RESPECIFY CTEXTENT     */ 00900003
 /*                             BASED FOR THE EXTENT ENTRY.          */ 00950003
 /*                                                                  */ 01000003
 /*   CREATED BY: VSAM OPEN MODULE IDA0192C.                         */ 01050003
 /*                                                                  */ 01100003
 /*   STATUS = VS1 RELEASE 4   (CHANGE FLAG @X04SVXX)                */ 01150003
 /*            VS2 RELEASE 3   (CHANGE FLAG @Z30SSXX)        @Z30SSRL*/ 01200003
 /*                                                                  */ 01250003
 /*   DATE OF LAST CHANGE = 3 MARCH 75                       @Z30SSRL*/ 01300004
 /*                                                                  */ 01350003
 /********************************************************************/ 01400003
   DCL 1 AMBWORK BASED(AMBWKA),     /* AMB WORK AREA         @X04SVRL*/ 01450003
     2 AMACATLG PTR,                /* POINTER TO CATLG ACB  @X04SVRL*/ 01500003
     2 AMATIOT FIXED(15),           /* OFFSET OF TIOT ENTRY  @X04SVRL*/ 01550003
     2 AMALEN FIXED(15),            /* LENGTH OF AMB WA              */ 01600003
     2 AMATIOE PTR,                 /* POINTER TO TIOT ENTRY @X04SVRL*/ 01650003
     2 VOLENTNO FIXED(15),          /* NUMBER OF VOLUME ENTRIES      */ 01700003
     2 CTINFO BDY(BYTE),            /* CATALOG INFO                  */ 01750003
              3 CTATTRA BIT(8),     /* DATA SET OPTIONS              */ 01800003
                4 CTAMDSPD BIT(1),  /* SPEED OPTION                  */ 01850003
                4 CTUNIQ BIT(1),    /* UNIQUE DATA SET               */ 01900003
                4 CTRELOP BIT(1),   /* RELEASE OPTION                */ 01950003
                4 CTERASE BIT(1),   /* ERASE OPTION                  */ 02000003
                4 *       BIT(1),   /* RESERVED                      */ 02050003
                4 CTRDONLY BIT(1),  /* INHIBIT UPDATES               */ 02100003
                4 CTTEMPEX BIT(1),  /* TEMPROARY EXPORT              */ 02150003
                4 CTTOVFL  BIT(1),  /* TRACK OVERFLOW IN MVM @Y30DSJH*/ 02200003
              3 CTATTRB BIT(8),     /* MISC INDICATORS               */ 02250003
                4 CTOPEN BIT(1),    /* DATA SET OPEN FOR WRITE       */ 02300003
                4 CTCYL BIT(1),     /* CYLINDER ALLOCATION           */ 02350003
                4 CTINDXSS BIT(1),  /* INDEX & SEQ SET W/DATA        */ 02400003
                4 CTINDX BIT(1),    /* INDEX DATA SET                */ 02450003
              3 CTSHROP BIT(8),     /* SHARE OPTIONS                 */ 02500003
                4 CTSHARE BIT(1),   /* FULL SHARE                    */ 02550003
                4 CTSHRW BIT(1),    /* WRITE INTEGRITY               */ 02600003
                4 CTSHRF BIT(1),    /* FULL INTEGRITY                */ 02650003
                4 CTHELP BIT(1),    /* INVALIDATE BUFFERS            */ 02700003
                4 CTSDHELP BIT(1),  /* SHARED DASD INVALIDATE BFRS   */ 02750003
                4 * BIT(1),         /* RESERVED              @Z40WSRL*/ 02800004
                4 CTINTDS BIT(1),   /* INTERNAL DATA SET     @Z40WSRL*/ 02810004
                4 CTUNUSE BIT(1),   /* DATA SET UNUSABLE             */ 02850003
              3 CTAUTH BIT(8),      /* AUTHORIZATION LEVEL   @X04SVRL*/ 02900003
                4 CTFULL BIT(1),    /* FULL AUTHORIZATION    @X04SVRL*/ 02950003
                4 CTCINV BIT(1),    /* CI AUTHORIZATION      @X04SVRL*/ 03000003
                4 CTUPD BIT(1),     /* UPDATE AUTHORIZATION  @X04SVRL*/ 03050003
              3 * CHAR(2),          /* NOT USED              @X04SVRL*/ 03100003
              3 CTBLKSZ,            /* PHYSICAL BLOCK SIZE           */ 03150003
              3 CTDEVTYP CHAR(4),   /* DEVICE TYPE           @X04SVRL*/ 03200003
                4 * CHAR(1),        /* NOT USED              @X04SVRL*/ 03250003
                4 CTDEV2 BIT(8),    /* 2ND BYTE OF DEV TYPE  @X04SVRL*/ 03300003
                  5 * BIT(3),       /* NOT USED              @X04SVRL*/ 03350003
                  5 CTBRPS BIT(1),  /* RPS DEVICE TYPE               */ 03400003
                  5 CTVIRT BIT(1),  /* VIRTUAL DEVICE TYPE   @X04SVRP*/ 03450003
              3 CTTRKAU,            /* TRKS/ALLOCATION UNIT          */ 03500003
              3 CTSTRKAU,           /* TRACK/ALLOCATION UNIT SS W/DTA*/ 03550003
              3 CTBLKTR,            /* PHYSICAL BLOCKS/TRACK         */ 03600003
              3 CTSBLKTR,           /* PHYSICAL BLOCKS/TRACK SS W/DTA*/ 03650003
              3 CTBYTAU  FIXED(31), /* BYTES/ALLOC FOR TRACK OVERFLOW   03700003
                                       IN MVM                @Y30DSJH*/ 03750003
              3 CTSBYTAU FIXED(31), /* BYTES/ALLOC FOR SS WITH DATA AND 03800003
                                       TRACK OVERFLOW IN MVM @Y30DSJH*/ 03850003
              3 CTBYTTRK FIXED(31), /* BYTES/TRACK FOR TRACK OVERFLOW   03900003
                                       IN MVM                @Y30DSJH*/ 03950003
              3 CTSBYTRK FIXED(31), /* BYTES/TRACK FOR SS WITH DATA AND 04000003
                                       TRACK OVERFLOW IN MVM @Y30DSJH*/ 04050003
              3 CTHSHDSN CHAR (3) , /* DATA SET NAME, HASHED         */ 04100003
              3 * CHAR(1),          /* NOT USED              @X04SVRL*/ 04150003
              3 CTHSHCAT PTR(31) ,  /* CATALOG ACB PTR       @X04SVRL*/ 04200003
              3 CTHURBA FIXED (32), /* DATA SET HIGH USED RBA        */ 04250003
              3 CTBUFSIZ,           /* MINIMUM BUFFER SPACE          */ 04300003
              3 CTCISIZ,            /* CI SIZE                       */ 04350003
              3 CTEXEX   CHAR(8),   /* EXCEPTION EXIT NAME   @X04SVGP*/ 04400003
              3 CTDATANM CHAR(44) , /* DATA SET NAME                 */ 04450003
              3 CTAMDSB  CHAR(LENGTH(IDAAMDSB)), /* AMDSB    @Y30DSJH*/ 04500003
              3 *        CHAR(4);   /* NOT USED              @Z30SSRL*/ 04700004
  DCL 1 CTVOLENT BASED,             /* CATALOG VOLUME ENTRY          */ 04750003
     2 CTVOLFLG BIT(8),             /* VOLUME FLAG                   */ 04800003
       3 CTVOLMT BIT(1),            /* VOL IS MOUNTED                */ 04850003
      3 CTOFLOW BIT(1),             /* OVERFLOW VOLUME               */ 04900003
     2 CTNOEXT FIXED(8),            /* NBR EXTENTS ON THIS VOLUME    */ 04950003
     2 * CHAR(2),                   /* NOT USED              @X04SVRL*/ 05000003
     2 CTVOLUCB PTR(31),            /* UCB ADDRESS                   */ 05050003
     2 CTNOKEY FIXED(15),           /* NUMBER OF KEY RANGES ON VOL   */ 05100003
     2 CTKEYLEN FIXED (15),         /* KEY LENGTH FOR KEY RANGE SPEC */ 05150003
     2 CTVOLSER CHAR(6),            /* VOLUME SERIAL NUMBER          */ 05200003
     2 * CHAR(2),                   /* NOT USED              @X04SVRL*/ 05250003
     2 CTKEYEN1 CHAR(*);            /* FIRST KEY ENTRY               */ 05300003
 DCL 1 CTKEYENT BASED,              /* KEY RANGE ENTRY               */ 05350003
     2 CTKEYFLG BIT(8),             /* KEY FLAG                      */ 05400003
       3 CTSSWDTA BIT(1),           /* SEQ SET WITH DATA             */ 05450003
       3 CTPRFMT BIT(1),            /* EXTENT NOT PREFORMATED        */ 05500003
     2 CTNOKEXT FIXED(8),           /* NBR EXTS THIS KEY RANGE       */ 05550003
     2 CTKRELNO FIXED(15),          /* VOL OCCURENCE NBR             */ 05600003
     2 CTKHKRBA FIXED(32),          /* HI KEY RBA                    */ 05650003
     2 CTKHURBA FIXED(32),          /* HIGH USED RBA THIS KEY RANGE  */ 05700003
      2 CTKHARBA FIXED(32),         /* HIGH ALLOCATED RBA THIS          05750003
                                       KEY RANGE                     */ 05800003
     2 CTKEY CHAR(*);               /* FIRST LOW KEY                 */ 05850003
   DCL 1 CTEXTENT BASED BDY(BYTE),  /* EXTENT ENTRY                  */ 05900003
     2 CTEXTFLG BIT(8),             /* ENTENT FLAG                   */ 05950003
     2 * CHAR(1),                   /* RESERVED                      */ 06000003
     2 CTABSBEG CHAR(4),            /* BEGINNING CCHH                */ 06050003
       3 CTCCBEG FIXED(16)BDY(BYTE),/* BEGINNING CC          @X04SVRL*/ 06100003
       3 CTHHBEG FIXED(16)BDY(BYTE),/* BEGINNING HH          @X04SVRL*/ 06150003
     2 CTABSEND CHAR(4),            /* ENDING CCHH                   */ 06200003
       3 CTCCEND FIXED(16)BDY(BYTE),/* ENDING CC             @X04SVRL*/ 06250003
       3 CTHHEND FIXED(16)BDY(BYTE),/* ENDING HH             @X04SVRL*/ 06300003
     2 CTNOTRKS FIXED(15)BDY(BYTE), /* NBR TRACKS IN EXTENT          */ 06350003
     2 CTRBABEG FIXED(32)BDY(BYTE), /* BEGINNING RBA                 */ 06400003
     2 CTRBAEND FIXED(32)BDY(BYTE), /* ENDING RBA                    */ 06450003
     2 * CHAR(*);                   /* NOT USED              @X04SVRL*/ 06500003
./  ADD  SSI=81720315,NAME=IDADIWA
*/********************************************************************/ 00050037
*/*                                                                  */ 00100037
*/*   MACRO NAME = IDADIWA                                           */ 00150037
*/*                                                                  */ 00200037
*/*   DESCRIPTIVE NAME = DATA INSERT WORK AREA                       */ 00250037
*/*                                                                  */ 00300037
*/*   FUNCTION = USED BY VSAM RECORD MANAGEMENT TO INSERT DATA       */ 00350037
*/*              INTO A CONTROL INTERVAL                             */ 00360037
*/*                                                                  */ 00400037
*/*   CONTROL BLOCK STRUCTURE = POINTED TO BY THE IDAAMB             */ 00450037
*/*                                                                  */ 00500037
*/*   INCLUDED MACROS = NONE                                         */ 00550037
*/*                                                                  */ 00600037
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00650037
*/*                                                                  */ 00700037
*/*   CREATED BY = VSAM OPEN                                         */ 00750037
*/*                                                                  */ 00800037
*/*   STATUS = VS/1 RELEASE 4  (CHANGE FLAG @X04SVXX)                */ 00850037
*/*                                                                  */ 00900037
*/*   DATE OF LAST CHANGE = 01 SEPT 77                       @ZA25653*/ 00950037
*/*                         23 AUG 74                                */ 00956037
*/*                         15 SEPT 76                       @ZA02289*/ 00970037
*/*                                                                  */ 01000037
*/********************************************************************/ 01050037
*  DCL 1 IDADIWA BDY(WORD) BASED,       /* DATA INSERT WORK AREA     */ 03000037
*        2 DIWID         CHAR(1),       /* CONTROL BLOCK ID          */ 06000037
*        2 DIWATV        CHAR(1),       /* INSERT IN PROGRESS - TEST */ 09000037
*                                       /* AND SET BYTE              */ 12000037
*        2 DIWLEN        FIXED(15),     /* CONTROL BLOCK LENGTH      */ 15000037
*        2 DIWFLG1       BIT(8),        /*   FLAGS                   */ 18000037
*          3 DIWCAS      BIT(1),        /* CONTROL AREA SPLIT IN     */ 21000037
*                                       /* PROGRESS                  */ 24000037
*          3 DIWCISPL    BIT(1),        /* CI SPLIT HAS OCCURRED     */ 27000037
*          3 DIWPFERR    BIT(1),           /* PREFORMAT I/O ERROR    */ 30000037
*          3 DIWEOKR     BIT(1),        /* CI SPLIT DUE TO EOKR      */ 33000037
*          3 DIWGSPC     BIT(1),        /* RCD NEEDS NEW CA  @X04SVLC*/ 36000037
*          3 DIWSHIFT    BIT(1),        /* ON--INSERT CI SHIFTING TO    36050037
*                                          RBA IN DIWINRBA   @ZA25653*/ 36060037
*          3 DIWNOT1     BIT(1),        /* ON--BUFFER HAD MIDDLE/LAST   36100037
*                                       SEG OF A SPANNED RCD @X04SVMR*/ 36200037
*          3 DIW1ST      BIT(1),        /* ON--BUFFER HAD MIDDLE/FIRST  36250037
*                                       SEG OF A SPANNED RCD @X04SVMR*/ 36300037
*        2 DIWFLG2       BIT(8),        /* FLAGS            @X04SVLC*/  39000037
*          3 DIWFSPF     BIT(1),        /* FREE SPACE PREFORMAT         39050037
*                                       NEEDED IN ESDS       @X04SVMR*/ 39100037
*        2 *             FIXED(15),     /* NOT USED                  */ 42000037
*        2 DIWLRBA       PTR(32),       /* CA SPLIT START RBA        */ 45000037
*        2 DIWHRBA       PTR(32),       /* CA SPLIT NEXT CA RBA      */ 48000037
*        2 DIWPLH        PTR(31),       /* PTR TO PLH USING DIWA     */ 51000037
*        2 DIWBUFC       PTR(31),       /* PTR TO INSERT WORK BUFC   */ 54000037
*        2 DIWSPLTP      PTR(31),       /* PTR TO SPLIT RDF          */ 57000037
*        2 DIWSAVE       BDY(WORD),     /* REGISTER SAVE AREA        */ 60000037
*          3 DIWSAVE1    PTR(31),       /* REGISTER SAVE 1           */ 63000037
*          3 DIWSAVE2    PTR(31),       /* REGISTER SAVE 2           */ 66000037
*          3 DIWSAVE3    PTR(31),       /* REGISTER SAVE 3           */ 69000037
*          3 DIWSAVE4    PTR(31),       /* REGISTER SAVE 4           */ 72000037
*          3 DIWSAVE5    PTR(31),       /* REGISTER SAVE 5           */ 75000037
*        2 DIWRKCT       PTR(32),       /* COUNTER FOR RK.   @ZA02289*/ 76000037
*        2 DIWINRBA      FIXED(32),     /* INSERT CI RBA     @ZA25653*/ 77000037
*        2 *             PTR(32),       /* RESERVED. TWO     @ZA02289*/ 78000037
*        2 *             PTR(32),       /* RESERVED. THREE   @ZA02289*/ 79000037
*        2 *             PTR(32),       /* RESERVED. FOUR    @ZA02289*/ 80000037
*        2 *             PTR(32),       /* RESERVED. FIVE    @ZA02289*/ 81000037
*        2 *             PTR(32),       /* RESERVED. SIX     @ZA02289*/ 82000037
*        2 *             PTR(32),       /* RESERVED. SEVEN   @ZA02289*/ 83000037
*        2 *             PTR(32),       /* RESERVED. EIGHT   @ZA02289*/ 84000037
*        2 *             PTR(32),       /* RESERVED. NINE    @ZA02289*/ 85000037
*        2 *             PTR(32),       /* RESERVED. TEN     @ZA02289*/ 86000037
*        2 *             PTR(32);       /* RESERVED. ELEVEN  @ZA02289*/ 87000037
./  ADD  SSI=32291288,NAME=IDADSECT
*%IF IDAMODNM = 'C05B' %THEN                                            00001002
*%GOTO IDAESTXA;                                           /*@Y021131*/ 00002002
*%IF IDAMODNM='I96C' %THEN                                              00003002
*%GOTO IDAESTXA;                                           /*@Y021131*/ 00004002
*%IF IDAMODNM='CKRA1' %THEN                                             00005002
*%GOTO IDAESTXA;                                           /*@Y021131*/ 00006002
* /******************************************************************/  00300090
* /*     THIS DSECT DEFINES THE WORK AREAS USED BY AM/0 CHECKPOINT  */  00600090
* /*     RESTART MODULES. IT ALSO CONTAINS ALL MACRO VARIABLES,     */  00900090
* /*     DECLARES AND EQUATES.                                      */  01200090
* /*                                                                */  01500090
* /*                                                                */  01550002
* /* MACCOMP Y-2 SC1DE/SJD61                                        */  01600002
* /* MACSTAT Y-2 73192/Y02113                                @Y021131*/ 01650002
* /*                                                                */  01700002
* /******************************************************************/  01800090
* /*                                                                */  02100090
* /*           FOLLOWING ARE THE REGISTER DECLARES                  */  02400090
* /*                                                                */  02700090
* /******************************************************************/  03000090
         DCL   PARAMREG  PTR(31)   REG(1);   /* CHKPT/REST W.A. PTR */  03300090
         DCL   RUAL      PTR(31)   REG(2);   /* USER ACB LIST PTR   */  03600090
         DCL   RLRCNT    PTR(31)   REG(2);   /* RECORDS ERASED COUNT*/  03900090
         DCL   RTIOTPTR  PTR(31)   REG(2);   /* TIOT DD NAME POINTER*/  04200090
         DCL   RACBCNT   PTR(31)   REG(3);   /* COUNT OF OPEN ACBS  */  04500090
         DCL   REODRET   PTR(31)   REG(3);   /* PTR EOD RETURN ADDR */  04800090
         DCL   RWORK1    PTR(31)   REG(3);   /* WORK REGISTER ONE   */  05100090
         DCL   RSAVE     PTR(31)   REG(4);   /* SAVE AOS REST WA PT */  05400090
         DCL   RARWA     PTR(31)   REG(4);   /* PTR AM/0 RESTART WA */  05700090
         DCL   RWORK2    PTR(31)   REG(5);   /* WORK REGISTER TWO   */  06000090
         DCL   RACBCUR   PTR(31)   REG(5);   /* INDEX TO CURRENT ACB*/  06300090
         DCL   RAMBCUR   PTR(31)   REG(6);   /* INDEX TO CURRENT AMB*/  06600090
         DCL   RWORK3    PTR(31)   REG(6);   /* WORK REGISTER THREE */  06900090
         DCL   RPASSCNT  PTR(31)   REG(7);   /* BUILD UAL WORK REG. */  07200090
         DCL   RWORK4    PTR(31)   REG(7);   /* WORK REGISTER FOUR  */  07500090
         DCL   RPTWAMBS  PTR(31)   REG(7);   /* POINTER WORK AMBS   */  07800090
         DCL   RPTUAMBS  PTR(31)   REG(8);   /* POINTER USER AMBS   */  08100090
         DCL   RUALEP    PTR(31)   REG(8);   /* PTR UAL ENTRY       */  08400090
         DCL   RWORK5    PTR(31)   REG(8);   /* WORK REGISTER FIVE  */  08700090
         DCL   RWKREG    PTR(31)   REG(9);   /* WORK REGISTER NINE  */  09000090
         DCL   RCREG     PTR(31)   REG(15);                             09300090
* /*                                                                */  09600090
* /******************************************************************/  09900090
* /*           MACRO VARIABLES                                      */  10200090
* /******************************************************************/  10500090
 %DCL (EIGHT,HIBITON,CKVALNOC,ONE,FOUR,CATERROR,SEVEN) CHAR;            11400002
 %DCL (CKPTER03,CKPTER40,CKPTER41,WAEOFSET,NOCORAM0,ZERO1) CHAR;        11700002
 %ZERO1    = '''00''X';                                                 12300090
 %CKPTER03 = '3';                            /* NO CORE AVAILABLE EC*/  13200090
 %CKPTER40 = '40';                           /* VALIDITY CHECK E.C. */  13500090
 %CKPTER41 = '41';                           /* CONFLICTING PARM.   */  13800090
         DCL ZERO CONSTANT(0);          /* INITIALIZE CONSTANT */       15000002
 %ONE      = '1';                            /* INITIALIZE CONSTANT */  15300090
 %FOUR     = '4';                            /* INITIALIZE CONSTANT */  15600090
 %SEVEN    = '7';                            /* INITIALIZE CONSTANT */  15900090
 %EIGHT    = '8';                            /* INITIALIZE CONSTANT */  16200090
 %EIGHTY   = '80';                           /* LENGTH WORK ACB+EXT.*/  16500090
 %NOCORAM0 = '55';                           /* NO CORE AVAILABLE EC*/  16800090
 %HIBITON  = '''80''X';                      /* TURN HI ORDER BIT ON*/  17100090
 %CKVALNOC = '''01''X';                      /* VALIDITY/NOCORE MSG */  17400090
 %ON       ='''1''B';                        /* BIT EQUAL ONE TEST  */  19800090
 %OFF      ='''0''B';                        /* BIT EQUAL ZERO TEST */  20100090
 %WAEOFSET = '76';                           /* OFFSET TO WACB EXT. */  21900090
* /******************************************************************/  22200090
* /*          INCLUDES AND CONTROL BLOCK DEFINITIONS                */  22500090
* /******************************************************************/  22800090
* /*                                                                */  23400090
* /*     THIS DSECT MAPS THE DEB USED BY AM/0 CHECKPOINT / RESTART  */  23700090
* /*                                                                */  24000090
*        %GOTO DEBPLS;                                                  24300090
         MACRO                                                          24600090
DEBDSECT DSECT      DATA EXTENT BLOCK                                   24900090
*                                                                       25200090
DEBNMSUB DS    0CL1                    NO. OF SUB RTNS                  25500090
DEBTCBAD DS    A                       TASK CONTROL BLOCK ADDR          25800090
DEBAMLNG DS    0CL1                    LENGTH OF ACCESS METHOD SEC      26100090
DEBDEBPT DS    0F                     SAME AS DEBDEBAD                  26400090
DEBDEBAD DS    A                       ADDR OF NEXT DEB IN DEB CHAIN    26700090
DEBOFLGS DS    0CL1                    DEB OPEN FLAGS                   27000090
DEBIRBAD DS    A                       ADDR OF THE IRB CONTROL BLOCK    27300090
DEBOPATB DS    0CL1                    OPEN ATRIBUTES                   27600090
DEBSYSPG DS    A                       SYSTEM PURGE FIELD               27900090
DEBNMEXT DS    0CL1                    NUMBER OF EXTENTS IN DEB         28200090
DEBUSRPG DS    A                       USER PURGE FIELD                 28500090
DEBPRIOR DS    0CL1                    INFO BYTE                        28800090
DEBECBAD DS    A                       EVENT CONTROL BLOCK ADDR         29100090
DEBPROTG DS    0CL1                    INFO BYTE                        29400090
DEBDEBID DS    0CL1                    INFO BYTE                        29700090
DEBDCBAD DS    A                       ADDR OF DCB                      30000090
DEBEXSCL DS    0CL1                    SCALING FACTOR OF DEB EXTENT     30300090
DEBAPPAD DS    A                       APPENDAGE TABLE ADDR             30600090
DEBDVMOD DS    0CL1                    DEVICE MODIFIER BYTE             30900090
DEBUCBAD DS    A                       UNIT CTL BLOCK ADDR              31200090
DEBTVLSQ DS    H                      VOLUME SEQUENCE FOR TAPE          31500090
DEBBINUM DS    H                       BIN NUMBER                       31800090
DEBTVLNM DS    H                      NO OF VOLUME FOR TAPE             32100090
DEBSTRCC DS    H                       START CYLINDER NUMBER            32400090
DEBSTRHH DS    H                       START HEAD NUMBER                32700090
DEBENDCC DS    H                       END CYLINDER NUMBER              33000090
DEBENDHH DS    H                       END HEAD NUMBER                  33300090
DEBNMTRK DS    H                       NUMBER OF TRACKS                 33600090
*                                                                     * 33900090
*  FOR ADDITIONAL EXTENTS ONN DIRECT ACCESS THE FOWOLLING FIELDS        34200090
*  WILL HAVE TO BE OFFSET ANOTHER 16 BYTES                              34500090
*                                                                     * 34800090
DEBVOLSQ DS    H                       VOL SEQUENCE NUMBER              35100090
DEBVOLNM DS    H                       VOLUME NUMBER                    35400090
*                                                                     * 35700090
*  FOR EACH SUBROUTINE LOADED BUMP THIS OFFSET BY 2                     36000090
*                                                                     * 36300090
DEBSUBID DS    H                       SUBROUTINE ID ( 2 BYTES )        36600090
*                                                                   */  36900090
* /*                                                                */  37200090
*                                                                   */  37500090
*%DEBPLS:  ;                                                            37800090
*DECLARE                                                                38100090
*  1 DEBDSECT  BASED,                                                   38400090
*   2 DEBTCBAD    PTR(31),               /* TASK CONTROL BLOCK ADDR  */ 38700090
*    3 DEBNMSUB    CHAR(1),              /* NO. OF SUB RTNS          */ 39000090
*   2 DEBDEBPT    PTR(31),               /* PTR TO NEXT DEB IN DEB      39300090
*                                           CHAIN                    */ 39600090
*    3 DEBAMLNG    CHAR(1),              /* LENGTH OF ACCESS METHOD     39900090
*                                           SEC                      */ 40200090
*    3 DEBDEBAD   PTR(24),               /* SAME AS DEBDEBPT         */ 40500090
*   2 DEBIRBAD    PTR(31),               /* ADDR OF THE IRB CONTROL     40800090
*                                           BLOCK                    */ 41100090
*    3 DEBOFLGS    CHAR(1),              /* DEB OPEN FLAGS           */ 41400090
*   2 DEBSYSPG    PTR(31),               /* SYSTEM PURGE FIELD       */ 41700090
*    3 DEBOPATB    CHAR(1),              /* OPEN ATRIBUTES           */ 42000090
*   2 DEBUSRPG    PTR(31),               /* USER PURGE FIELD         */ 42300090
*    3 DEBNMEXT    CHAR(1),              /* NUMBER OF EXTENTS IN DEB */ 42600090
*   2 DEBECBAD    PTR(31),               /* EVENT CONTROL BLOCK ADDR */ 42900090
*    3 DEBPRIOR    CHAR(1),              /* INFO BYTE                */ 43200090
*   2 DEBDCBAD    PTR(31),               /* ADDR OF DCB              */ 43500090
*    3 DEBPROTG    CHAR(1),              /* INFO BYTE                */ 43800090
*     4 DEBDEBID    CHAR(1),             /* INFO BYTE                */ 44100090
*   2 DEBAPPAD    PTR(31),               /* APPENDAGE TABLE ADDR     */ 44400090
*    3 DEBEXSCL    CHAR(1),              /* SCALING FACTOR OF DEB       44700090
*                                           EXTENT                   */ 45000090
*   2 DEBUCBAD    PTR(31),               /* UNIT CTL BLOCK ADDR      */ 45300090
*    3 DEBDVMOD    CHAR(1),              /* DEVICE MODIFIER BYTE     */ 45600090
*   2 DEBTVLSQ    FIXED(15),             /* VOL SEQ FOR TAPE         */ 45900090
*   2 DEBBINUM    FIXED(15),             /* BIN NUMBER               */ 46200090
*   2 DEBTVLNM    FIXED(15),             /* NO OF VOL FOR TAPE       */ 46500090
*   2 DEBSTRCC    FIXED(15),             /* START CYLINDER NUMBER    */ 46800090
*   2 DEBSTRHH    FIXED(15),             /* START HEAD NUMBER        */ 47100090
*   2 DEBENDCC    FIXED(15),             /* END CYLINDER NUMBER      */ 47400090
*   2 DEBENDHH    FIXED(15),             /* END HEAD NUMBER          */ 47700090
*   2 DEBNMTRK    FIXED(15),             /* NUMBER OF TRACKS         */ 48000090
* /*                                                                 */ 48300090
* /*     FOR ADDITIONAL EXTENT ON DIRECT ACCESS THE FOLLOWING        */ 48600090
* /*     FIELDS WILL HAVE TO BE OFFSET ANOTHER 16 BYTES              */ 48900090
* /*                                                                 */ 49200090
*   2 DEBVOLSQ    FIXED(15),             /* VOLUME SEQUENCE NUMBER   */ 49500090
*   2 DEBVOLNM    FIXED(15),             /* VOLUME NUMBER            */ 49800090
* /*                                                                 */ 50100090
* /*     FOR EACH SUBROUTINE LOADED BUMP THIS OFFSET BY 2            */ 50400090
* /*                                                                 */ 50700090
*   2 DEBSUBID    FIXED(15);             /* SUBROUTINE ID ( 2 BYTES )*/ 51000090
* /*     END OF DEB                                                  */ 51300090
* /*                                                                */  51900090
* /*     THIS DSECT MAPS THE TCB USED BY AM/0 CHECKPOINT RESTART    */  52200090
* /*                                                                */  52500090
*        %GOTO TCBPLS;                                                  52800090
         MACRO                                                          53100090
TCBDSECT DSECT      TASK CONTROL BLOCK                                  53400090
*                                                                       53700090
TCBRBP   DS    A                       POINTER TO EXECUTING RB          54000090
TCBPIE   DS    A                       POINTER TO PROG. INTERRUPT EL.   54300090
TCBDEB   DS    A                       POINTER TO DEB QUEUE             54600090
TCBTIO   DS    A                       POINTER TO TIOT                  54900090
TCBCMP   DS    F                       TASK COMPLETION CODE             55200090
TCBTRN   DS    A                       TESTRAN FIELD                    55500090
TCBMSS   DS    A                       DATA BLOCK QUEUE ELEMENT POINTER 55800090
TCBPRTK  DS    BL1                     PROTECTION TAG                   56100090
TCBFLGS  DS    BL5                     FLAG BYTES                       56400090
TCBLMP   DS    BL1                     LIMIT PRIORITY                   56700090
TCBDSP   DS    BL1                     DISPATCHING PRIORITY             57000090
TCBLLS   DS    A                       POINTER TO LOAD LIST             57300090
TCBJLB   DS    A                       POINTER TO JOBLIB DCB            57600090
TCBJSE   DS    A                       LIST OF INACTIVE PROGRAMS ADDR.  57900090
TCBGRS   DS    16F                     GENERAL REGISTER SAVE AREA       58200090
TCBIDF   DS    0BL1                    TCB IDENTIFIER FIELD             58500090
TCBFSA   DS    A                       POINTER TO 1ST PROB.PROG.SAVEAR  58800090
TCBTCB   DS    A                       NEXT TCB ON READY QUEUE POINTER  59100090
TCBTME   DS    A                       POINTER TO TIMER ELEMENT         59400090
         MEND                                                           59700090
*%TCBPLS:  ;                                                            60000090
*DECLARE                                                                60300090
*  1 TCBDSECT  BASED,                                                   60600090
*   2 TCBRBP      PTR(31),               /* POINTER TO EXECUTING RB  */ 60900090
*   2 TCBPIE      PTR(31),               /* POINTER TO PROG.            61200090
*                                           INTERRUPT EL.            */ 61500090
*   2 TCBDEB      PTR(31),               /* POINTER TO DEB QUEUE     */ 61800090
*   2 TCBTIO      PTR(31),               /* POINTER TO TIOT          */ 62100090
*   2 TCBCMP      FIXED(31),             /* TASK COMPLETION CODE     */ 62400090
*   2 TCBTRN      PTR(31),               /* TESTRAN FIELD            */ 62700090
*   2 TCBMSS      PTR(31),               /* DATA BLOCK QUEUE ELEMENT    63000090
*                                           POINTER                  */ 63300090
*   2 TCBPRTK     CHAR(1),               /* PROTECTION TAG           */ 63600090
*   2 TCBFLGS     CHAR(5),               /* FLAG BYTES               */ 63900090
*   2 TCBLMP      CHAR(1),               /* LIMIT PRIORITY           */ 64200090
*   2 TCBDSP      CHAR(1),               /* DISPATCHING PRIORITY     */ 64500090
*   2 TCBLLS      PTR(31),               /* POINTER TO LOAD LIST     */ 64800090
*   2 TCBJLB      PTR(31),               /* POINTER TO JOBLIB DCB    */ 65100090
*   2 TCBJSE      PTR(31),               /* LIST OF INACTIVE            65400090
*                                           PROGRAMS ADDR.           */ 65700090
*   2 TCBGRS   (16) FIXED(31),           /* GENERAL REGISTER SAVE       66000090
*                                           AREA                     */ 66300090
*   2 TCBFSA      PTR(31),               /* POINTER TO 1ST              66600090
*                                           PROB.PROG.SAVEAR         */ 66900090
*    3 TCBIDF      CHAR(1),              /* TCB IDENTIFIER FIELD     */ 67200090
*   2 TCBTCB      PTR(31),               /* NEXT TCB ON READY QUEUE     67500090
*                                           POINTER                  */ 67800090
*   2 TCBTME      PTR(31);               /* POINTER TO TIMER ELEMENT */ 68100090
* /*     END OF TCB                                                  */ 68400090
* %IF IGCUWALX¬='YES' %THEN %GOTO UWALX01;                 /*@Y021131*/ 68701002
* /* UWAL (USER/WORK ACB LIST)                               @Y021131*/ 68702002
*        DCL                                                            68703002
*          1 IGCUWAL BASED,             /* START OF LIST     @Y021131*/ 68704002
*            2 IGCUAL PTR(31),          /* A(USER ACB)       @Y021131*/ 68705002
*              3 UALFLAG BIT(8),        /* FLAG BYTE         @Y021131*/ 68706002
*              3 UALACBAD PTR(24),      /* A(USER ACB)       @Y021131*/ 68707002
*            2 IGCWAL PTR(31),          /* A(WORK ACB)       @Y021131*/ 68708002
*              3 WALFLAG BIT(8),        /* FLAG BYTE         @Y021131*/ 68709002
*              3 WALACBAD PTR(24),      /* A(USER ACB)       @Y021131*/ 68710002
*            2 IGCAMBL PTR(31);         /* A(USER AMBL)      @Y021131*/ 68711002
* %GOTO UWALX02;                                           /*@Y021131*/ 68712002
* %UWALX01:;                                               /*@Y021131*/ 68713002
* /* UAL (USER ACB LIST) DECLARATION                                */  69000090
* /* DESCRIBES LIST OF POINTERS TO USER ACB'S                       */  69300090
* /* CREATED BY AM/0 CHECKPOINT/RESTART                             */  69600090
*        DCL 1 IGCUAL      BASED,            /* UAL                 */  69900090
*              2 UALFLAG   BIT(8),           /* UAL FLAG BYTE       */  70200090
                3 UALDODSS  BIT(1),          /* DO DSS CHECKS       */  70500090
                3 UALDOBKO  BIT(1),          /* DO DATA SET BACKOFF */  70800090
                3 UALDOKEY  BIT(1),          /* DO KEYED PROCESSING */  71100090
                3 UALDOSTU  BIT(1),          /* DO STATISTICS UPDATE*/  71400090
                3 *         BIT(4),          /* RESERVED            */  71700090
*              2 UALACBAD  PTR(24);          /* POINTER TO USER ACB */  72000090
*%GOTO UAL1;                                                            72300090
         MACRO                                                          72600090
         IGCUAL                                                         72900090
IGCUAL   DSECT                                                          73200090
UALFLAG  DS    BL1                           UAL FLAG BYTE              73500090
UALACBAD DS    AL3                           POINTER TO USER ACB        73800090
         MEND                                                           74100090
*%UAL1: ;                                                               74400090
* /*           END OF UAL                                           */  74700090
* %UWALX02:;                                               /*@Y021131*/ 74701002
* /* WAE (WORK ACB EXTENSION) DECLARATION                           */  75300090
* /* DESCRIBES ACB PROCESSING FLAGS                                 */  75600090
* /* CREATED BY RESTART                                             */  75900090
*        DCL 1 IGCWAE        BASED,          /* WAE                 */  76200090
*              2 WAEFLAGS    BIT(8),         /* WAE FLAG BYTE       */  76500090
*                3 WAEDODSS  BIT(1),         /* DO DSS CHECKS       */  76800090
                 3 WAEREPOS  BIT(1),         /* DO DATA REPOSITION  */  77100090
*                3 WAEDOKEY  BIT(1),         /* DO KEYED PROCESSING */  77400090
*                3 WAEDOSTU  BIT(1),         /* DO STATISTICS UPDATE*/  77700090
*                3 *         BIT(4),         /* RESERVED            */  78000090
               2 WAEXLIST    PTR(24);        /* PTR ARWA EXIT LIST  */  78300090
*%GOTO WAE1;                                                            78600090
         MACRO                                                          78900090
         IGCWAE                                                         79200090
IGCWAE   DSECT                                                          79500090
WAEFLAGS DS    BL1                           WAE PROCESSING FLAGS       79800090
WAEDODSS EQU   X'80'                         DO DSS CHECKS              80100090
WAEREPOS EQU   X'40'                         DO DATA REPOSITION         80400090
WAEDOKEY EQU   X'20'                         DO KEYED PROCESSING        80700090
WAEDOSTU EQU   X'10'                         DO STATISTICS UPDATE       81000090
         DS    AL3                           RESERVED                   81300090
         MEND                                                           81600090
*%WAE1: ;                                                               81900090
* /*           END OF WAE                                           */  82200090
* %IF IGCUWALX='YES' %THEN %GOTO UWALX03;                  /*@Y021131*/ 82201002
* /* WAL (WORK ACB LIST) DECLARATION                                */  82800090
* /* DESCRIBES LIST OF POINTERS TO WORK ACB'S                       */  83100090
* /* CREATED BY CHECKPOINT/RESTART                                  */  83400090
*        DCL 1 IGCWAL      BASED,            /* WAL                 */  83700090
*              2 WALFLAG   BIT(8),           /* WAL FLAG BYTE       */  84000090
                3 WALDODSS  BIT(1),          /* DO DSS CHECKS       */  84300090
                3 WALDOBKO  BIT(1),          /* DO DATA SET BACKOFF */  84600090
                3 WALDOKEY  BIT(1),          /* DO KEYED PROCESSING */  84900090
                3 WALDOSTU  BIT(1),          /* DO STATISTICS UPDATE*/  85200090
                3 *         BIT(4),          /* RESERVED            */  85500090
*              2 WALACBAD  PTR(24);          /* POINTER TO WORK ACB */  85800090
* %UWALX03:;                                               /*@Y021131*/ 85801002
*%GOTO WAL1;                                                            86100090
         MACRO                                                          86400090
         IGCWAL                                                         86700090
IGCWAL   DSECT                                                          87000090
WALFLAG  DS    BL1                           WAL FLAG BYTE              87300090
WALACBAD DS    AL3                           POINTER TO WORK ACB        87600090
         MEND                                                           87900090
*%WAL1: ;                                                               88200090
* /*           END OF WAL                                           */  88500090
 %INCLUDE      SYSLIB(IDAAMB);                                          89100090
 %INCLUDE      SYSLIB(IDAAMBL);                                         89700090
 %INCLUDE      SYSLIB(IDAAMDSB);                                        90300090
 %INCLUDE      SYSLIB(IFGACB);                                          93900090
 %INCLUDE      SYSLIB(IFGRPL);                                          94500090
 %IDAESTXA:;                                               /*@Y021131*/ 94501002
         /* PARAMETER LIST FOR ESTAE ROUTINES                @Y021131*/ 94502002
 %IF IDAMODNM='C05B' %THEN                                              94503002
  %GOTO IDAESTX0;                                           /*@Y021131*/94504002
 %IF IDAMODNM='I96C' %THEN                                              94504202
  %GOTO IDAESTX0;                                           /*@Y021131*/94504402
         DCL 1 ESTAELST BASED,                                          94505002
 %GOTO IDAESTX1;                                           /*@Y021131*/ 94506002
 %IDAESTX0:;                                               /*@Y021131*/ 94506202
         DCL 1 ESTAELST,                                                94507002
 %IDAESTX1:;                                               /*@Y021131*/ 94508002
               2 ESTMODUL CHAR(4),      /* MODULE NAME       @Y021131*/ 94509002
               2 ESTCKWA PTR(31),       /* A(CHECKPOINT WORK AREA) */   94510002
 %IF IDAMODNM='I96C' % THEN                                             94511002
  %GOTO IDAESTX2;                                          /*@Y021131*/ 94512002
 %IF IDAMODNM='C05B' % THEN                                             94512202
  %GOTO IDAESTX2;                                          /*@Y021131*/ 94512402
 %IF IDAMODNM='CKRA1' % THEN                                            94512602
  %GOTO IDAESTX2;                                          /*@Y021131*/ 94512802
                 3 ESTRSWA PTR(31);     /* A(RESTART WORK AREA) */      94513002
 %GOTO IDAESTX9;                                           /*@Y021131*/ 94514002
 %IDAESTX2:;                                               /*@Y021131*/ 94515002
                 3 ESTRSWA PTR(31),     /* A(RESTART WORK AREA) */      94516002
               2 ESTSSCR PTR(31),       /* CURRENT SSCR      @Y021131*/ 94517002
               2 ESTAMB PTR(31),        /* CURRENT AMB       @Y021131*/ 94518002
               2 ESTIOMB PTR(31),       /* CURRENT IOMB      @Y021131*/ 94519002
               2 ESTRDATA PTR(31),     /* SAVE AREA FOR DATA REGISTER*/ 94519102
               2 ESTRBASE PTR(31),    /* SAVE AREA FOR BASE REGISTER */ 94519402
               2 ESTR14 PTR(31),        /* SAVE AREA FOR REG 14 */      94519602
 %IF IDAMODNM ¬= 'I96C' %THEN %GOTO IDAESTX3;              /*@Y021131*/ 94519702
               2 EST#SSCR FIXED(31);    /* NUMBER OF SSCRS CREATED */   94520002
 %GOTO IDAESTX9;                                           /*@Y021131*/ 94520102
 %IDAESTX3:;                                               /*@Y021131*/ 94520402
               2 EST#SSCR FIXED(31),    /* NUMBER OF SSCRS CREATED */   94520702
                 3 ESTBLNAM CHAR(4),    /* NAME OF LAST CONTROL BLOCK */94521002
               2 ESTASCB PTR(31),       /* ADDRESS OF THE ASCB          94521202
                                        USED TO LOACATE THE VGTT        94521402
                                        STRING               @Y021131*/ 94521602
               2 ESTGMLST PTR(31),      /* LAST AREA ACQUIRED IN SP245*/94522002
               2 ESTGMLEN FIXED(31),    /* LENGTH OF AREA ACQUIRED */   94522202
               2 ESTVGTT PTR(31);       /* ADDRESS OF LAST VGTT ACQUIRED94524002
                                                             @Y021131*/ 94525002
 %IDAESTX9:;                                               /*@Y021131*/ 94526002
         /* ERROR CODES                                      @Y021131*/ 94527002
         DCL ESTAEBAD CONSTANT(240);    /* ESTAE FAILED TO BE INVOKED */94528002
         DCL PGMCHKXX CONSTANT(241);    /* PROGRAM CHECK OCCURRED */    94529002
         DCL MCHCHKXX CONSTANT(242);    /* MACHINE CHECK OCCURRED */    94530002
         DCL BADSSCR CONSTANT(243);     /* SSCR FORMAT INVALID */       94531002
         DCL BADGETM CONSTANT(195);     /* GETMAIN FAILED    @Y021131*/ 94532002
./  ADD  SSI=51900091,NAME=IDADSL
 /********************************************************************/ 00050004
 /*                                                                  */ 00100004
 /*   MACRO NAME = IDADSL                                            */ 00150004
 /*                                                                  */ 00200004
 /*   DESCRIPTIVE NAME = DEB SAVE LIST.                              */ 00250004
 /*                                                                  */ 00300004
 /*   FUNCTION = ALL DEB'S SUCCESSFULLY CHAINED AND ADDED TO THE DEB */ 00350004
 /*              TABLE ARE RECORDED IN THIS LIST. ADDITIONAL LIST    */ 00400004
 /*              ARE CHAINED AS REQUIRED.                            */ 00450004
 /*                                                                  */ 00460004
 /*   CONTROL BLOCK STRUCTURE = POINTED TO BY THE OPEN ACB WORK AREA.*/ 00470004
 /*                                                                  */ 00480004
 /*   INCLUDED MACROS = NONE                                         */ 00490004
 /*                                                                  */ 00492004
 /*   METHOD OF ACCESS = PL/S - RESPECIFY IDADSL BASED.              */ 00494004
 /*                                                                  */ 00496004
 /*   CREATED BY: VSAM OPEN MODULE IDA0192A.                         */ 00498004
 /*                                                                  */ 00498404
 /*   STATUS = VS1 RELEASE 4, VS2 RELEASE 3.                         */ 00498804
 /*                                                                  */ 00499204
 /*   DATE OF LAST CHANGE = 2 AUGUST 74                              */ 00499604
 /*                                                                  */ 00499704
 /********************************************************************/ 00499804
    DCL 1 IDADSL BASED,             /* DEB SAVE LIST                 */ 00500004
          2 DSLSUBPL FIXED (8),     /* SUBPOOL NUMBER OF THIS DSL    */ 00550004
          2 DSLLENTH FIXED (24),    /* LENGTH IN BYTES OF THIS DSL   */ 00600004
          2 DSLID CHAR (8),         /* BLOCK IDENTIFIER              */ 00650004
          2 DSLNXPTR PTR (31),      /* POINTER TO NEXT DSL OR 0 IF      00700004
                                       LAST DSL IN CHAIN.            */ 00750004
          2 DSLACTEN FIXED (15),    /* NUMBER OF ACTIVE ENTRIES      */ 00800004
          2 * FIXED (15),           /* RESERVED                      */ 00850004
          2 DSLENTRY (16),          /* DEB ENTRIES                   */ 00900004
            3 DSLFLG BIT (8),       /* FLAGS                         */ 00950004
              4 * BIT (7),          /* RESERVED                      */ 01000004
              4 DSLFDDEB BIT (1),   /* BIT ON INDICATES DUMMY DEB    */ 01050004
            3 DSLDEBAD PTR (24)     /* ADDRESS OF DEB                */ 01100004
    ;                                                                   01150004
    DCL IDADSLID CHAR (8) CONSTANT (' IDADSL '); /* CHAR CONSTANT       01200004
                                       FOR DSLID                     */ 01250004
./  ADD  SSI=51900095,NAME=IDAEDB
*/********************************************************************/ 00050004
*/*                                                                  */ 00100004
*/*   MACRO NAME = IDAEDB                                            */ 00150004
*/*                                                                  */ 00200004
*/*   DESCRIPTIVE NAME =EXTENT DEFINITION BLOCK                      */ 00250004
*/*                                                                  */ 00300004
*/*   FUNCTION = DESCRIBES LOGICAL EXTENTS OF A VSAM DATA SET        */ 00350004
*/*                                                                  */ 00450004
*/*   CONTROL BLOCK STRUCTURE = THE IDAEDB IS POINTED TO BY THE      */ 00500004
*/*              IDAAMB                                              */ 00550004
*/*                                                                  */ 00600004
*/*   INCLUDED MACROS = NONE                                         */ 00650004
*/*                                                                  */ 00700004
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00750004
*/*                                                                  */ 00800004
*/*   CREATED BY = VSAM OPEN                                         */ 00850004
*/*                                                                  */ 00900004
*/*   STATUS = VS/1 RELEASE 4  (CHANGE FLAG @X04SVXX)                */ 00950004
*/*            VS/2 RELEASE 3  (CHANGE FLAG @Y30SDXX)                */ 01050004
*/*                                                                  */ 01060004
*/*   DATE OF LAST CHANGE = 30 AUG 74                                */ 01100004
*/*                                                                  */ 01150004
*/********************************************************************/ 01200004
*/********************************************************************/ 01250004
*/* EXTENT DEFINITION BLOCK HEADER                                   */ 01300004
*/********************************************************************/ 01350004
*        DCL 1 IDAEDBHD BASED,                                          42000000
*              2 EDBID       PTR(8),    /* EDB IDENTIFIER           */  43000000
*              2 EDBNO       PTR(8),    /* NUMBER OF ENTRIES        */  44000000
*              2 EDBLEN      FIXED(15), /* LENGTH OF ENTRY          */  45000000
*              2 EDBLPMBC    PTR(31);   /* PTR TO FIRST LPMB        */  46000000
*/********************************************************************/ 46050004
*/* EXTENT DEFINITION BLOCK                                          */ 46060004
*/********************************************************************/ 46100004
*        DCL 1 IDAEDB BASED,            /* ENTRY DEFINITION         */  47000000
*              2 *           CHAR(2),   /* NOT USED          @Y30DSJH*/ 48000004
*              2 EDBFLG1     BIT(8),    /* EDB FLAGS FOR MVM @Y30DSJH*/ 48002004
*                3 EDBLKR    BIT(1),    /* CATLG LOW KEY RNG @Y30DSJH*/ 48004004
*                3 EDBTOFLW  BIT(1),    /* TRACK OVERFLOW    @Y30DSJH*/ 48006004
*                3 EDBPSDS   BIT(1),    /* PAGE SPACE D.S.   @Y30DSJH*/ 48008004
*                3 *         BIT(5),    /* UNUSED            @Y30DSJH*/ 48010004
*              2 EDBM        PTR(8),    /* ENTENT NUMBER            */  49000000
*              2 EDBLPMBA    PTR(31),   /* ADDRESS OF LPMB          */  50000000
*              2 EDBSTTRK    PTR(31),   /* EXTENT RELATIVE TRK ADDR */  51000000
*              2 EDBLORBA    PTR(32),   /* LO RBA LIMIT             */  52000000
*              2 EDBHIRBA    PTR(32),   /* HI RBA LIMIT             */  53000004
*              2 EDBTKBAL    FIXED(31); /* MVM TRACK BAL CTR @Y30DSJH*/ 53002004
./  ADD  SSI=31180110,NAME=IDAEQUS
*        /*                                                          */ 03000000
*        /*    ASSEMBLER EQUATES                                     */ 03002002
* /*                                                                 */ 03040002
* /* MACCOMP Y-2 SC1DE/SJD61                                         */ 03050002
* /* MACSTAT Y-2 73103/Y02113                                        */ 03100002
* /*                                                                 */ 03150002
*        /*                                                          */ 09000000
*        GEN DATA;                                                      12000000
R0       EQU   0                        REGISTER ZERO                   15000000
CON0     EQU   C'0'                     USED BY TRANSLATE INST          18000000
K0       EQU   0                        OFFSET FOR MOVE INST            21000000
ONE      EQU   1                        MISCELLANEOUS EQUATE            24000000
TWO      EQU   2                        MISCELLANEOUS EQUATE            27000000
THREE    EQU   3                        MISCELLANEOUS EQUATE            30000000
FOUR     EQU   4                        MISCELLANEOUS EQUATE            33000000
FIVE     EQU   5                        MISCELLANEOUS EQUATE            36000000
SIX      EQU   6                        MISCELLANEOUS EQUATE            39000000
SEVEN    EQU   7                        MISCELLANEOUS EQUATE            42000000
EIGHT    EQU   8                        MISCELLANEOUS EQUATE            45000000
NINE     EQU   9                        MISCELLANEOUS EQUATE            48000000
ELEVEN   EQU   11                       MISCELLANEOUS EQUATE            51000000
TWELVE   EQU   12                       MISCELLANEOUS EQUATE            54000000
THIRTEEN EQU   13                       MISCELLANEOUS EQUATE            57000000
FOURTEEN EQU   14                       MISCELLANEOUS EQUATE            60000000
FIFTEEN  EQU   15                       MISCELLANEOUS EQUATE            63000000
SIXTEEN  EQU   16                       MISCELLANEOUS EQUATE            66000000
TWENTY   EQU   20                       MISCELLANEOUS EQUATE            69000000
TWENTY4  EQU   24                       MISCELLANEOUS EQUATE            72000000
TWENTY8  EQU   28                       MISCELLANEOUS EQUATE            75000000
THIRTY2  EQU   32                       MISCELLANEOUS EQUATE            78000000
*        @ENDGEN ;                                                      81000000
./  ADD  SSI=60920882,NAME=IDAERMAP
 /********************************************************************/ 00710004
 /*                                                                  */ 00720004
 /*   MACRO NAME = IDAERMAP                                          */ 00730004
 /*                                                                  */ 00740004
 /*   DESCRIPTIVE NAME = ERROR CODE MAPPING MACRO                    */ 00742004
 /*                                                                  */ 00744004
 /*   FUNCTION = THIS MACRO DEFINES AN ARRAY THAT MAPS THE ERROR CODE*/ 00746004
 /*              (PPCODE) IN THE IEC ERROR MESSAGE (DEFINED BY THE   */ 00748004
 /*              IDAPPCDE MACRO) INTO THE CORRESPONDING CODE THAT IS */ 00748404
 /*              SET IN THE ACBERFLG FIELD (DEFINED BY THE IDAERRCD  */ 00748804
 /*              MACRO).  THE PPCODE IS USED AS AN INDEX INTO THE    */ 00749204
 /*              ARRAY DEFINED BY THIS MACRO TO REFERENCE THE        */ 00749604
 /*              ACBERFLG CORRESPONDING TO THIS PPCODE.  THIS MACRO  */ 00749704
 /*              WILL NEED TO BE UPDATED WHENEVER THE IDAPPCDE OR    */ 00749804
 /*              IDAERRCD MACRO ARE CHANGED.                         */ 00749904
 /*                                                                  */ 00766604
 /*   CONTROL BLOCK STRUCTURE = NONE                                 */ 00776604
 /*                                                                  */ 00778604
 /*   INCLUDED MACROS = NONE                                         */ 00780604
 /*                                                                  */ 00782604
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00783004
 /*                                                                  */ 00783104
 /*   STATUS = VS1 RELEASE 4, VS2 RELEASE 3.                         */ 00783204
 /*                                                                  */ 00788804
 /*   DATE OF LAST CHANGE = 10/13/75                         @Z40WSRL*/ 00790804
 /*                                                                  */ 00792804
 /********************************************************************/ 00793204
    DCL                                                                 00794404
      IDAERMAP(256) FIXED(8) STATIC LOCAL INIT( /* ERROR CODE MAP    */ 00798404
          (3)0,                     /* NOT USED                      */ 00850004
          132,                      /* PP4                           */ 00900004
          (15)0,                    /* NOT USED                      */ 00950004
          136,                      /* PP20                          */ 01000004
          0,                        /* NOT USED                      */ 01050004
          184,                      /* PP22                          */ 01100004
          (5)0,                     /* NOT USED                      */ 01150004
          180,                      /* PP28                          */ 01200004
          (3)0,                     /* NOT USED                      */ 01250004
          148,                      /* PP32                          */ 01300004
          0,                        /* PP33                          */ 01350004
          0,                        /* PP34                          */ 01400004
          0,                        /* PP35                          */ 01450004
          144,                      /* PP36                          */ 01500004
          148,                      /* PP37                          */ 01550004
          196,                      /* PP38                          */ 01600004
          100,                      /* PP39                          */ 01650004
          152,                      /* PP40                          */ 01700004
          160,                      /* PP41                          */ 01750004
          (2)0,                     /* NOT USED                      */ 01800004
          160,                      /* PP44                          */ 01850004
          96,                       /* PP45                          */ 01900004
          192,                      /* PP46                          */ 01950004
          160,                      /* PP47                          */ 02000004
          160,                      /* PP48                          */ 02050004
          224,                      /* PP49                          */ 02100003
          176,                      /* PP50                          */ 02150004
          0,                        /* NOT USED                      */ 02200004
          168,                      /* PP52                          */ 02250004
          0,                        /* NOT USED                      */ 02300004
          160,                      /* PP54                          */ 02350004
          0,                        /* NOT USED                      */ 02400004
          116,                      /* PP56                          */ 02450004
          0,                        /* NOT USED                      */ 02500004
          108,                      /* PP58                          */ 02550004
          104,                      /* PP59                          */ 02602004
          240,                      /* PP60                          */ 02610004
          (7)0,                     /* NOT USED                      */ 02650004
          160,                      /* PP68                          */ 02700004
          (3)0,                     /* NOT USED                      */ 02750004
          160,                      /* PP72                          */ 02800004
          (3)0,                     /* NOT USED                      */ 02850004
          188,                      /* PP76                  @Z40WSRL*/ 02900004
          0,                        /* NOT USED                      */ 02950004
          188,                      /* PP78                          */ 03000004
          0,                        /* NOT USED                      */ 03050004
          160,                      /* PP80                          */ 03100004
          (3)0,                     /* NOT USED                      */ 03150004
          232,                      /* PP84                          */ 03200004
          (3)0,                     /* NOT USED                      */ 03250004
          160,                      /* PP88                          */ 03300004
          0,                        /* NOT USED                      */ 03350004
          0,                        /* PP90                          */ 03400004
          0,                        /* PP91                          */ 03450004
          236,                      /* PP92                          */ 03500004
          236,                      /* PP93                          */ 03550004
          0,                        /* PP94                          */ 03600004
          (5)0,                     /* NOT USED                      */ 03650004
          0,                        /* PP100                         */ 03700004
          (3)0,                     /* NOT USED                      */ 03750004
          0,                        /* PP104                         */ 03810004
          (3)0,                     /* NOT USED                      */ 03850004
          0,                        /* PP108                         */ 03900004
          (3)0,                     /* NOT USED                      */ 03950004
          0,                        /* PP112                         */ 04000004
          (3)0,                     /* NOT USED                      */ 04050004
          164,                      /* PP116                         */ 04100004
          (3)0,                     /* NOT USED                      */ 04150004
          220,                      /* PP120                         */ 04200004
          (3)0,                     /* NOT USED                      */ 04250004
          228,                      /* PP124                         */ 04300004
          (3)0,                     /* NOT USED                      */ 04350004
          184,                      /* PP128                         */ 04400004
          (3)0,                     /* NOT USED                      */ 04450004
          208,                      /* PP132                         */ 04500004
          (3)0,                     /* NOT USED                      */ 04550004
          160,                      /* PP136                         */ 04600004
          (3)0,                     /* NOT USED                      */ 04650004
          160,                      /* PP140                         */ 04700004
          (3)0,                     /* NOT USED                      */ 04750004
          160,                      /* PP144                         */ 04800004
          (3)0,                     /* NOT USED                      */ 04850004
          204,                      /* PP148                         */ 04900004
          (3)0,                     /* NOT USED                      */ 04950004
          212,                      /* PP152                         */ 05000004
          (3)0,                     /* NOT USED                      */ 05050004
          216,                      /* PP156                         */ 05100004
          (7)0,                     /* NOT USED                      */ 05150003
          160,                      /* PP164                         */ 05300004
          (3)0,                     /* NOT USED                      */ 05350004
          244,                      /* PP168                         */ 05400004
          (3)0,                     /* NOT USED                      */ 05450003
          200,                      /* PP172                         */ 05500004
          (3)0,                   /* PP173-PP175 ARE UNUSED. @Z30SSMD*/ 05510003
           0,              /* PP176, USE ACBERFLAG OF ZERO.  @Z30SSMD*/ 05520003
          (3)0,                   /* PP177-PP179 ARE UNUSED. @Z30SSMD*/ 05530003
           0,              /* PP180, USE ACBERFLAG OF ZERO.  @Z30SSMD*/ 05540003
          (3)0,                   /* PP181-PP183 ARE UNUSED. @Z30SSMD*/ 05542003
           0,              /* PP184, USE ACBERFLAG OF ZERO.  @Z30SSMD*/ 05544003
          (3)0,                   /* PP185-PP187 ARE UNUSED  @Z40WSRL*/ 05546004
           160,                   /* PP188                   @Z40WSRL*/ 05548004
          (3)0,                   /* PP189-PP191 ARE UNUSED  @Z40WSRL*/ 05548404
           160,                   /* PP192                   @Z40WSRL*/ 05548804
          (64)0);                  /* PP193-PP256 ARE UNUSED @Z40WSRL*/ 05550004
./  ADD  SSI=31180115,NAME=IDAERMSG
* /*                                                                 */ 02100402
         /* ERROR MESSAGE FIELDS                                    */  02102002
* /*                                                                 */ 02110002
* /* MACCOMP Y-2 SC1DE/SJD61                                         */ 02120002
* /* MACSTAT Y-2 73103/Y02113                                        */ 02130002
* /*                                                                 */ 02140002
         DCL 1 IDAERMSG  BASED,            /* I/O ERROR MESSAGE     */  04000000
               2 ERBASE,                   /* BASIC ERROR MSG       */  06000000
                   4 ERLGTH,               /* MESSAGE LENGTH FIELD  */  08000000
                     6 ERMLL1 FIXED(15),   /* BIG LL                */  10000000
                     6 ERMZERO1 FIXED(15), /* ZEROES                */  12000000
                     6 ERMLL2 FIXED(15),   /* LITTLE LL             */  14000000
                     6 ERMZERO2 FIXED(15), /* ZEROES                */  16000000
                   4 ERMBFRA  CHAR(4),     /* SYSTEM BUFFER ADDRESS */  18000000
                   4 ERDATE   CHAR(5),     /* DATE--YYDDD           */  20000000
                   4 ERCOMMA  CHAR(1),     /* COMMA                 */  22000000
                   4 ERTIME   CHAR(8),     /* TIME--HHMMSSTH        */  24000000
                   4 COMMA0 CHAR(1),       /* COMMA                 */  26000000
                   4 ERRBA    CHAR(8),     /* RBA IN ERROR           */ 28000000
                   4 COMMA05  CHAR(1),     /* COMMA                  */ 30000000
                   4 ERMDSID  CHAR(6),     /* DATA SET TYPE          */ 32000000
                   4 COMMA9   CHAR(1),     /* COMMA                  */ 34000000
                   4 ERMVOL   CHAR(6),     /* VOLUME SERIAL NUMBER   */ 36000000
                   4 COMMA1   CHAR(1),     /* COMMA                 */  38000000
                   4 ERJOBNM  CHAR(8),     /* JOB NAME FIELD        */  40000000
                   4 COMMA2   CHAR(1),     /* COMMA                 */  42000000
                   4 ERSTEPNM CHAR(8),     /* STEP NAME FIELS       */  44000000
                   4 COMMA3   CHAR(1),     /* COMMA                 */  46000000
                   4 ERUNIT   CHAR(3),     /* UNIT ADDRESS FIELD    */  48000000
                   4 COMMA4   CHAR(1),     /* COMMA                 */  50000000
                   4 ERUNTYPE CHAR(2),     /* UNIT TYPE FIELD       */  52000000
                   4 COMMA5   CHAR(1),     /* COMMA                 */  54000000
                   4 ERDDNM   CHAR(8),     /* DD NAME FIELD         */  56000000
                   4 COMMA6   CHAR(1),     /* COMMA                 */  58000000
                   4 EROPER   CHAR(6),     /* OPERATION ATTEMPTED   */  60000000
                   4 COMMA7   CHAR(1),     /* COMMA                 */  62000000
                   4 ERDESC   CHAR(15),    /* ERROR DESCRIPTION     */  64000000
                   4 COMMA8   CHAR(1),     /* COMMA                 */  66000000
                   4 ERDEVD   CHAR(21),    /*DEVICE DEPENDENT FIELDS*/  68000000
                     6 ERDASEEK CHAR(14),  /* ASTERISKS             */  70000000
                     6 ERDACOM  CHAR(1),   /* COMMA                 */  72000000
                     6 ERDAAM   CHAR(6);   /* ACCESS METHOD         */  74000000
./  ADD  SSI=81790433,NAME=IDAERRCD
 /********************************************************************/ 00010037
 /*                                                                  */ 00020037
 /*   MACRO NAME = IDAERRCD                                          */ 00030037
 /*                                                                  */ 00040037
 /*   DESCRIPTIVE NAME = VSAM OPEN/CLOSE/EOV ERROR CODES.            */ 00042037
 /*                                                                  */ 00044037
 /*   FUNCTION = THE ERROR CODE IS DETERMINED BY THE PROBLEM CODE    */ 00046037
 /*              RELATING TO A PROBLEM. THE ERROR CODE IS THEN MOVED */ 00048037
 /*              INTO THE ACB (ACBERFLG) TO COMMUNICATE WITH THE     */ 00048437
 /*              USER.                                               */ 00048837
 /*                                                                  */ 00049237
 /*   CONTROL BLOCK STRUCTURE = NONE                                 */ 00049637
 /*                                                                  */ 00049737
 /*   INCLUDED MACROS = NONE                                         */ 00049837
 /*                                                                  */ 00049937
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00099937
 /*                                                                  */ 00109937
 /*   CREATED BY: N/A                                                */ 00119937
 /*                                                                  */ 00129937
 /*   STATUS = VSAM MVS SELECTABLE UNIT 7                    @ZA16012*/ 00139907
 /*                                                                  */ 00141907
 /*   DATE OF LAST CHANGE = 05 AUG 1976                      @ZA16012*/ 00143907
 /*                                                                  */ 00145937
 /********************************************************************/ 00147937
   DCL (OPERR000 CONSTANT(0),     /* NO ERROR FOR OPEN OR CLOSE */      03000037
    OPERR004 CONSTANT(4),    /* WARNING - ACB ALREADY OPEN FOR OPEN OR  06000037
                                ACB NOT OPEN FOR CLOSE AND TCLOSE    */ 09000037
    OPERR080 CONSTANT(80),   /* WARNING - PROCESSING INTEGRITY */       12000037
    OPERR096 CONSTANT(96),   /* WARNING - UNUSABLE DATA SET OPENED      15000037
                                          FOR INPUT          @X04SVRL*/ 16000037
    OPERR100 CONSTANT(100),  /* WARNING - EMPTY UPGRADE AIX  @X04SVRL*/ 17000037
    OPERR104 CONSTANT(104),  /* WARNING-VOLUME TIMESTAMP DISCREPANCY    18000037
                                AND ACB INDICATES INPUT      @X04SVRP*/ 19000037
    OPERR108 CONSTANT(108),  /* WARNING-D.S. TIMESTAMP DISCREPANCY   */ 21000037
    OPERR116 CONSTANT(116),  /* WARNING - DATA SET NOT PROPERLY CLOSED*/24000037
    OPERR128 CONSTANT(128),  /* DD NAME NOT FOUND IN TIOT */            27000037
    OPERR132 CONSTANT(132),  /* I/O ERR RD/WRT JFCB */                  30000037
    OPERR136 CONSTANT(136),  /* NO CORE AVAILABLE */                    33000037
    OPERR144 CONSTANT(144),  /* I/O ERROR RD/WRT CATALOG ENT */         36000037
    OPERR148 CONSTANT(148),  /* CATALOG ENTRY NOT FOUND */              39000037
    OPERR152 CONSTANT(152),  /* DATA SET SECURITY INVALID */            42000037
    OPERR160 CONSTANT(160),  /* CONFLICTING PARAMETERS */               45000037
    OPERR164 CONSTANT(164),  /* I/O ERROR READING VOLUME LABEL */       48000037
    OPERR168 CONSTANT(168),  /* DATA SET NOT AVAILABLE */               51000037
    OPERR176 CONSTANT(176),  /* PGFIX FAILURE                       */  54000037
    OPERR180 CONSTANT(180),  /* CAT DOES NOT EXIST OR NOT OPEN      */  57000037
    OPERR184 CONSTANT(184),  /* I/O ERROR COMPLETING I/O REQUEST    */  60000037
    OPERR188 CONSTANT(188),  /* ACB IS NOT FOR A VALID DATA SET */      60050037
    OPERR192 CONSTANT(192),  /* UNUSABLE DATA SET OPENED FOR OUTPUT     60150037
                                                             @X04SVRL*/ 60250037
    OPERR196 CONSTANT(196),  /* ACCESS TO DATA REQUESTED VIA EMPTY      60350037
                                PATH AIX                     @X04SVRL*/ 60450037
    OPERR200 CONSTANT(200),  /* FMT 4 DSCB INDICATES VOL IS UNUSABLE    60550037
                                                             @X04SVRL*/ 60650037
    OPERR204 CONSTANT(204),  /* ACB INDICATES GSR OR CBIC BUT CALLER IS 60750007
                                NOT IN SUPERVISOR STATE AND KEY 0 TO 7  60810007
                                                             @ZA16012*/ 60870007
    OPERR208 CONSTANT(208),  /* ACB INDICATES GSR AND SYSTEM IS VS1     60950037
                                                             @X04SVRL*/ 61050037
    OPERR212 CONSTANT(212),  /* ACB INDICATES LSR/GSR AND DATA SET      61150037
                                IS EMPTY                     @X04SVRL*/ 61250037
    OPERR216 CONSTANT(216),  /* ACB INDICATES LSR/GSR AND KEY LENGTH    61350037
                                OF DS EXCEEDED MAXKEY IN BLDVRP MACRO   61450037
                                                             @X04SVRL*/ 61550037
    OPERR220 CONSTANT(220),  /* DB/DC - BSPH TOO SMALL       @X04SVGP*/ 61650037
    OPERR224 CONSTANT(224),  /*ICI PROCESSING AND CREATE MODE INDICATED 61700037
                                                             @X04SVRL*/ 61710037
    OPERR228 CONSTANT(228),  /* DB/DC - VSRT DOES NOT EXIST  @X04SVRL*/ 61750037
    OPERR232 CONSTANT(232),  /* RESET SPECIFIED FOR NON-REUSABLE DS     61850037
                                                             @X04SVRL*/ 61950037
    OPERR236 CONSTANT(236),  /* MSS STAGE OR DESTAGE ERROR   @X04SVRL*/ 62050037
    OPERR240 CONSTANT(240), /* VOLUME TIMESTAMP DISCREPANCY AND         62150037
                               ACB INDICATES OUTPUT          @X04SVRP*/ 62250037
    OPERR244 CONSTANT(244)) /* CRA VOLUME NOT MOUNTED        @X04SVRP*/ 62350037
         FIXED(31);          /* ERRORS DETECTED BY OPEN AND CLOSE   */  63000037
  /* THE FOLLOWING ERRORS ARE DETECTED BY OPEN, CLOSE, EOV OR        */ 66000037
  /* TCLOSE, BUT ERROR FLAGS ARE NOT SET IN THE ACB IN ORDER         */ 69000037
  /* NOT TO INTERFERE WITH ANY POSSIBLE PROCESSING BEING DONE        */ 72000037
  /* ON THAT ACB BY ANOTHER TASK:                                    */ 75000037
  /*     ACB BUSY                                                    */ 78000037
  /*     ACB DOES NOT BELONG TO JOB STEP ISSUING OPEN, CLOSE         */ 81000037
  /*       OR TCLOSE                                                 */ 84000037
./  ADD  SSI=42900112,NAME=IDAESL
 /********************************************************************/ 00050004
 /*                                                                  */ 00100004
 /*   MACRO NAME = IDAESL                                            */ 00150004
 /*                                                                  */ 00200004
 /*   DESCRIPTIVE NAME = ENQUEUE SAVE LIST.                          */ 00250004
 /*                                                                  */ 00300004
 /*   FUNCTION = IDAESL CONTAINS A LIST OF ALL ENQUEUES COMPLETED    */ 00350004
 /*              SUCCESSFULLY DURING OPEN PROCESSING. ADDITIONAL     */ 00400004
 /*              LISTS ARE CHAINED AS REQUIRED.                      */ 00450004
 /*                                                                  */ 00460004
 /*   CONTROL BLOCK STRUCTURE = POINTED TO THE OPEN ACB WORK AREA.   */ 00470004
 /*                                                                  */ 00480004
 /*   INCLUDED MACROS = NONE                                         */ 00490004
 /*                                                                  */ 00492004
 /*   METHOD OF ACCESS = PL/S - RESPECIFY IDAESL BASED.              */ 00494004
 /*                                                                  */ 00496004
 /*   CREATED BY: VSAM OPEN MODULE IDA0192A.                         */ 00498004
 /*                                                                  */ 00498404
 /*   STATUS = VS/1 RELEASE 4, VS2 RELEASE 3.                        */ 00498804
 /*                                                                  */ 00499204
 /*   DATE OF LAST CHANGE = 2 AUGUST 74                              */ 00499604
 /*                                                                  */ 00499704
 /********************************************************************/ 00499804
    DCL 1 IDAESL BASED BDY(WORD),   /* ENQUEUE SAVE LIST             */ 00500004
          2 ESLSUBPL FIXED (8),     /* SUBPOOL NUMBER OF THIS ESL    */ 00550004
          2 ESLLENTH FIXED (24),    /* LENGTH IN BYTES OF THIS ESL   */ 00600004
          2 ESLID CHAR (8),         /* BLOCK IDENTIFIER              */ 00650004
          2 ESLNXPTR PTR (31),      /* PTR TO NEXT ESL OR 0 IF LAST     00700004
                                       ESL IN CHAIN                  */ 00750004
          2 ESLACTEN FIXED (15),    /* NUMBER OF ACTIVE ENTRIES      */ 00800004
          2 * FIXED (15),           /* RESERVED                      */ 00850004
          2 ESLENTRY (16),          /* ENQUEUE ENTRIES              */  00900003
            3 ESLENQOP CHAR(1),     /* ENQUEUE OPTION FOR THIS ENTRY */ 00950003
            3 ESLRNAME,             /* ENQUEUE RNAME FOR THIS ENTRY  */ 00960003
              4 ESLCINBR CHAR(3),   /* CI NUMBER FOR THIS ENTRY      */ 01050003
              4 ESLACBAD CHAR(4),   /* POINTER TO ACB FOR THIS ENTRY */ 01060003
              4 ESLIO CHAR(1)       /* I OR O                        */ 01100003
    ;                                                                   01150004
    DCL IDAESLID CHAR (8) CONSTANT (' IDAESL '); /* CHAR CONSTANT       01200004
                                       FOR ESLID                     */ 01250004
./  ADD  SSI=31180120,NAME=IDAEXITR
* /*                                                                 */ 01050002
* /* MACCOMP Y-2 SC1DE/SJD61                                         */ 01100002
* /* MACSTAT Y-2 73103/Y02113                                        */ 01150002
* /*                                                                 */ 01200002
 @EJECT;                                                                01250002
 /*  IDAEXITR-- EXIT TO USER ROUTINE                                    02000000
 01  FUNCTION = SAVE VSAM REGISTERS, LOAD USER ROUTINE IF IT IS         03000000
                NOT IN CORE, RESTORE USER REGISTERS, BALR TO            04000000
                THE USER ROUTINE, RESTORE THE VSAM REGISTERS,           05000000
                AND DELETE THE USER ROUTINE IF IT WAS LOADED.           06000000
 01  INPUT    = RPARM1 POINTS TO DESIRED EXIT LIST ENTRY                07000000
 01  OUTPUT   = REGISTERS ARE UNCHANGED. IF USER ROUTINE DID NOT RETURN 08000000
                CONTROL, THE USER EXIT ROUTINE IS LEFT LOADED.       */ 09000000
 IDAEXITR:                                                              10000000
  PROC OPTIONS (NOSAVE, NOSAVEAREA);       /* INTERFACE TO USER RTN  */ 11000000
                                           /* SAVE VSAM REGISTERS    */ 12000000
  GEN (IDASVR14);                        /* SAVE RETURN REG          */ 13000000
  RESPECIFY IFGEXLEF BASED(RPARM1);      /* ENTRY BASE               */ 14000000
  RPLPLHPT = RPLH;                         /* PUT PLH POINTER IN RPL */ 15000000
  RFY (RWORK0, R13, R15) RSTD;             /* GET REGISTERS          */ 16000000
  GEN SETS (PLHSAVE1, PLHSAVE5);                                        17000000
         STM   RAMB,RWORK2,PLHSAVE1(RPLH) SAVE RAMB,ETC                 18000000
         STM   RPARM1,R13,PLHSAVE5(RPLH)  SAVE RPARM1 AND R13           19000000
 @ENDGEN                                                                20000000
  R15 = EXLEXITP;                          /* GET ROUTINE ADDRESS    */ 21000000
  RFY RWORK1 RSTD;                         /* GET REGISTER           */ 22000000
  /* LOAD THE USER EXIT ROUTINE IF REQUESTED                         */ 23000000
  IF EXLFLAG(EXLLINK) = ON                 /* SEE IF LOAD REQUIRED   */ 24000000
    THEN                                   /* IF SO, COME HERE       */ 25000000
      DO;                                                               26000000
      RWORK1 = R1;                         /* SAVE REGISTER ONE      */ 27000000
      GEN (LOAD  EPLOC=(R15));             /* LOAD ROUTINE           */ 28000000
      R15 = RWORK0;                        /* GET ADDR INTO R15      */ 29000000
      R1 = RWORK1;                         /* RESTORE REGISTER ONE   */ 30000000
      END;                                 /* END OF LOAD CODE       */ 31000000
      /* RESTORE USER REGISTERS AND BALR TO THE USER ROUTINE         */ 32000000
      GEN (LM @02,@12,TWENTY8(R13));       /* RESTORE USER REGS      */ 33000000
  /* TAKE USER EXIT                                                  */ 34000000
 ?IDACALL (USEREXIT);                                                   35000000
 /* RESTORE THE VSAM REGISTERS                                       */ 36000000
  RPLH = RPLPLHPT;                         /* RESTORE PLH POINTER    */ 37000000
  GEN;                                                                  38000000
         LM    RAMB,RWORK2,PLHSAVE1(RPLH) RESTORE RAMB,ETC.             39000000
         LM    RPARM1,R13,PLHSAVE5(RPLH)  RESTORE RPARM1 AND R13        40000000
 @ENDGEN                                                                41000000
 /* DELETE THE USER EXIT ROUTINE IF IT WAS LOADED                    */ 42000000
  IF EXLFLAG(EXLLINK) = ON                 /* SEE IF DELETE NEEDED   */ 43000000
    THEN                                   /* IF SO, COME HERE       */ 44000000
      DO;                                                               45000000
      RFY RWORK1 RSTD;                     /* GET REGISTER           */ 46000000
      RWORK1 = R1;                         /* SAVE REGISTER ONE      */ 47000000
      R15 = EXLEXITP;                      /* POINT TO ROUTINE NAME  */ 48000000
      GEN (DELETE EPLOC=(R15));            /* DELETE ROUTINE         */ 49000000
      R1 = RWORK1;                         /* RESTORE REGISTER ONE   */ 50000000
      RFY RWORK1 UNRSTD;                   /* DROP REGISTER          */ 51000000
      END;                                 /* END OF DELETE CODE     */ 52000000
  RFY (RWORK0, R13, R15) UNRSTD;           /* DROP REGISTERS         */ 53000000
  GEN (IDARST14);                        /* RESTORE RETURN           */ 54000000
  END IDAEXITR;                            /* END OF EXIT INTERFACE  */ 55000000
./  ADD  SSI=51230242,NAME=IDAFOREC
 /********************************************************************/ 00010003
 /*                                                          @X04SVRL*/ 00020003
 /*   MACRO NAME = IDAFOREC                                  @X04SVRL*/ 00030003
 /*                                                          @X04SVRL*/ 00040003
 /*   DESCRIPTIVE NAME = COMMON OPEN WORK AREA.              @X04SVRL*/ 00042003
 /*                                                          @X04SVRL*/ 00044003
 /*   FUNCTION = MAPS THE COMMON OPEN WORK AREA PASSED TO    @X04SVRL*/ 00046003
 /*              VSAM OPEN/CLOSE/EOV IN REGISTER 4.          @X04SVRL*/ 00048003
 /*                                                          @X04SVRL*/ 00048403
 /*   CONTROL BLOCK STRUCTURE = NONE                         @X04SVRL*/ 00048803
 /*                                                          @X04SVRL*/ 00049203
 /*   INCLUDED MACROS = IEFJFCBN                             @X04SVRL*/ 00049603
 /*                     IEFJFCBX                             @X04SVRL*/ 00049703
 /*                     IDAPDPRM                             @X04SVRL*/ 00049803
 /*                     IECDSECS (VS2 ONLY)                  @X04SVRL*/ 00049903
 /*                     IECDSECT (VS2 ONLY)                  @X04SVRL*/ 00066603
 /*                                                          @X04SVRL*/ 00076603
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY        @X04SVRL*/ 00078603
 /*                                                          @X04SVRL*/ 00080603
 /*   CREATED BY: IGC0001I, IGC00020, IGC0005E.              @X04SVRL*/ 00082603
 /*                                                          @X04SVRL*/ 00083003
 /*   STATUS = VS1 RELEASE 4   (CHANGE FLAG @X04SVXX)        @X04SVRL*/ 00083103
 /*            VS2 RELEASE 3   (CHANGE FLAG @Y30DSXX)        @X04SVRL*/ 00083203
 /*                                                          @X04SVRL*/ 00088803
 /*   DATE OF LAST CHANGE = 5 AUGUST 74                      @X04SVRL*/ 00090803
 /*                                                          @X04SVRL*/ 00092803
 /********************************************************************/ 00093203
 %IF ENV='VS2'  %THEN                   /*IF VS2 THEN BYPASS @Y30DSDT*/ 00094403
    %GOTO IDAFOR1;                      /* VS1 SECTION       @Y30DSDT*/ 00100003
 DCL FORECORE CHAR(496) BDY(DWORD) BASED(RCORE);                        00400003
   DCL 1 DXLBL DEFINED(FORECORE),                                       00800003
*                2 VOLLABI     CHAR(3), /* LABEL IDENTIFIER         */  01200003
*                2 VOLNO       CHAR(1), /* VOLUME LABEL NUMBER      */  01600003
*                2 VOLSERNO    CHAR(6),                                 02000003
*                2 VOLSEC      CHAR(1),                                 02400003
*                2 VOLVTOC     CHAR(5),                                 02800003
*                2 *           CHAR(5),                                 03200003
*                2 *           CHAR(10),/* RESERVED                 */  03600003
*                2 *           CHAR(10),/* RESERVED                 */  04000003
*                2 VOLOWNER    CHAR(10),/* OWNER NAME AND ADDR CODE */  04400003
*                2 *           CHAR(29);/* RESERVED                 */  04800003
   DCL 1 DSECT01 DEFINED(FORECORE) POS(38),                             05200003
*                2 AVOLOWNR    CHAR(14),/* ANSI OWNER ID            */  05600003
*                2 *           CHAR(28),/* RESERVED                 */  06000003
*                2 LABSTAND    CHAR(1); /* LABEL STANDARD LEVEL     */  06400003
   DCL 1 DSECT02 DEFINED(FORECORE),                                     06800003
*                2 FL1LABI     CHAR(3), /* LABEL IDENTIFIER         */  07200003
*                2 FL1NO       CHAR(1), /* FILE LABEL NUMBER        */  07600003
*                2 FL1ID       CHAR(17),/* FILE IDENTIFIER          */  08000003
*                2 FL1FILSR    CHAR(6), /* FILE SERIAL NUMBER       */  08400003
*                2 FL1VOLSQ    CHAR(4), /* VOL SEQ NUMBER           */  08800003
*                2 FL1FILSQ    CHAR(4), /* FILE SEQ NUMBER          */  09200003
*                2 FL1GNO      CHAR(4), /* GENERATION NUMBER        */  09600003
*                2 FL1VNG      CHAR(2), /* VERSION NUMBER OF GDG    */  10000003
*                2 FL1CREDT    CHAR(6), /* CREATION DATE            */  10400003
*                2 FL1EXPDT    CHAR(6), /* EXPIRATION DATE          */  10800003
*                2 FL1FSEC     CHAR(1), /* FILE SECURITY INDICATOR  */  11200003
*                2 FL1BLKCT    CHAR(6), /* BLOCK COUNT              */  11600003
*                2 FL1SYSCD    CHAR(13),/* SYSTEM CODE              */  12000003
*                2 FL1RES      CHAR(7), /* RESERVED                 */  12400003
*                  3 *         CHAR(1),                                 12800003
*                  3 FL1RES1   CHAR(6);                                 13200003
   DCL 1 DSECT03 DEFINED(FORECORE) POS(5),                              13600003
*                2 FL2RECFM    CHAR(1), /* RECORD FORMAT            */  14000003
*                2 FL2BLKL     CHAR(5), /* BLOCK LENGTH             */  14400003
*                2 FL2LRECL    CHAR(5), /* BLOCK FACTOR/REC LEN     */  14800003
*                2 FL2DEN      CHAR(1), /* DENSITY                  */  15200003
*                2 FL2FILP     CHAR(1), /* FILE POSITION            */  15600003
*                2 FL2JSID     CHAR(17),/* JOB/STEP ID              */  16000003
*                  3 FL2JOBD   CHAR(8), /* JOB IDENTIFICATION       */  16400003
*                  3 FL2JSSP   CHAR(1), /* SLASH                    */  16800003
*                  3 FL2STEPD  CHAR(8), /* STEP IDENTIFICATION      */  17200003
*                2 FL2TRTCH    CHAR(2), /* TAPE REC TECHNIQUE       */  17600003
*                2 FL2CNTRL    CHAR(1), /* CARRIAGE CONTROL CHAR    */  18000003
*                2 *           CHAR(1), /* RESERVED                 */  18400003
*                2 FL2BLKA     CHAR(1), /* BLOCK ATTRIBUTE          */  18800003
*                2 FL2RES      CHAR(41);/* RESERVED                 */  19200003
*        DCL      FL2BUFOF     CHAR(2) BASED(ADDR(DXLBL)+50);           19600003
   DCL 1 DXDSCB  DEFINED(FORECORE),                                     20000003
*                2 DSCFMTID    CHAR(1), /* ID                       */  20400003
*                2 DSCFILSR    CHAR(6), /* FILE SERIAL NUMBER       */  20800003
*                2 DSCVOLSR    CHAR(2),                                 21200003
*                2 DSCCREDT    CHAR(3), /* CREATION DATE            */  21600003
*                2 DSCEXPDT    CHAR(3), /* EXPIRATION DATE          */  22000003
*                2 DSCNOEXT    CHAR(1),                                 22400003
*                2 DSCBLDBL    CHAR(1),                                 22800003
*                2 *           CHAR(1),                                 23200003
*                2 DSCSYSCD    CHAR(13),/* SYSTEM CODE              */  23600003
*                2 *           CHAR(7),                                 24000003
*                2 DSCFILTY    CHAR(2), /* FILE TYPE                */  24400003
*                2 DSCRECFM    CHAR(1), /* RECORD FORMAT            */  24800003
*                2 DSCOPTCD    CHAR(1), /* OPTION CODE              */  25200003
*                2 DSCBLKL     CHAR(2), /* BLOCK LENGTH             */  25600003
*                2 DSCLRECL    CHAR(2), /* RECORD LENGTH            */  26000003
*                2 DSCKEYL     CHAR(1), /* KEY LENGTH               */  26400003
*                2 DSCRKP      CHAR(2), /* KEY LOCATION             */  26800003
*                2 DSCDSIND    CHAR(1),                                 27200003
*                2 DSCSCALO    CHAR(4),                                 27600003
*                2 DSCLSTAR    CHAR(5),                                 28000003
*                2 DSCTRBAL    CHAR(2),                                 28400003
*                2 DSCEXTYP    CHAR(1), /* EXTENT TYPE INDICATOR    */  28800003
*                2 DSCEXTSQ    CHAR(1), /* EXTENT SEQ NUMBER        */  29200003
*                2 DSCLOWLM    CHAR(4),                                 29600003
*                2 DSCUPPLM    CHAR(4),                                 30000003
*                2 DSCEXT1     CHAR(10),                                30400003
*                2 DSCEXT2     CHAR(10),                                30800003
*                2 DSCNEXT     CHAR(5); /* POINTER TO NEXT RECORD   */  31200003
   DCL   DSCCORE PTR(31) DEFINED(FORECORE) POS(97);                     31600003
   DCL   DSCBEND CHAR(0) DEFINED(FORECORE) POS(101);                    32000003
   DCL 1 DXDSCB3K DEFINED(FORECORE),                                    32400003
*                2 DSCBF3C     CHAR(4),                                 32800003
*                2 DSCBEXSK    CHAR(40),                                33200003
*                  3 DSCBEXTY  CHAR(1), /* EXTENT TYPE INDICATOR    */  33600003
*                  3 DSCBEXSQ  CHAR(1), /* EXTENT SEQ NUMBER        */  34000003
*                  3 DSCBLLMT  CHAR(4), /* CCHH LOWER LIMIT         */  34400003
*                  3 DSCBULMT  CHAR(4), /* CCHH UPPER LIMIT         */  34800003
*                  3 DSCBEX2   CHAR(10),/* ADDITIONAL EXTENT        */  35200003
*                  3 DSCBEX3   CHAR(10),/* ADDITIONAL EXTENT        */  35600003
*                  3 DSCBEX4   CHAR(10);/* ADDITIONAL EXTENT        */  36000003
   DCL 1 DSECT04  DEFINED(FORECORE),                                    36400003
*                2 DSCBFMID    CHAR(1), /* FORMAT ID 3              */  36800003
*                2 DSCBEXSD    CHAR(90),/* ADDITIONAL EXTENTS       */  37200003
*                  3 DSCBEX5   CHAR(10),                                37600003
*                  3 DSCBEX6   CHAR(10),                                38000003
*                  3 DSCBEX7   CHAR(10),                                38400003
*                  3 DSCBEX8   CHAR(10),                                38800003
*                  3 DSCBEX9   CHAR(10),                                39200003
*                  3 DSCBEXA   CHAR(10),                                39600003
*                  3 DSCBEXB   CHAR(10),                                40000003
*                  3 DSCBEXC   CHAR(10),                                40400003
*                  3 DSCBEXD   CHAR(10),                                40800003
*                2 DSCBNEXT    CHAR(5); /* CCHHR OF NEXT F3 DSCB    */  41200003
   DCL 1 DSECT05  DEFINED(FORECORE),                                    41600003
*                2 REPLYLTH    CHAR(1),                                 42000003
*                2 REPLYADR    PTR(24),                                 42400003
*                2 REPLYECB    CHAR(4),                                 42800003
*                2 MSGLSTSZ    FIXED(15),/* MSG LENGTH              */  43200003
*                2 MCSFLAGS    BIT(16), /* FLAG FIELD FOR MCS       */  43600003
*                2 MESSAGEA    CHAR(68),/* MESSAGE AREA             */  44000003
*                2 DESCODE     BIT(16), /* DESCRIPTOR CODE FOR MCS  */  44400003
*                2 ROUTCODE    BIT(16), /* ROUTING CODE FOR MCS     */  44800003
*                2 REPLY       CHAR(12);/* REPLY AREA               */  45200003
*%       DCL (MSERL,MINSTL,MUNL,MVOLL) FIXED;                           45600003
*%       MSERL  = 3;                                                    46000003
*%       MINSTL = 6;                                                    46400003
*%       MUNL   = 3;                                                    46800003
*%       MVOLL  = 6;                                                    47200003
   DCL 1 DSECT06  DEFINED(FORECORE) POS(13),                            47600003
*                2 MSGIOSUP    CHAR(3), /* I/O SUPPORT MSG ID       */  48000003
*                2 MSGINSTR    CHAR(6), /* MSG SERIAL               */  48400003
*                  3 MSGSER    CHAR(3), /* MSG SERIAL NUMBER        */  48800003
*                    4 *       CHAR(2),                                 49200003
*                    4 MSGSERLO CHAR(1),/* LOW ORDER BYTE OF MSG SER*/  49600003
*                  3 *         CHAR(2),                                 50000003
*                  3 MSGACTN   CHAR(1), /* OPERATOR ACTION CODE     */  50400003
*                2 MSGBLANK    CHAR(1), /* BLANK                    */  50800003
*                2 MSGUN       CHAR(3), /* UNIT NAME                */  51200003
*                2 MSGCOMM1    CHAR(1), /* COMMA                    */  51600003
*                2 MSGVOLSR    CHAR(6), /* VOLSER                   */  52000003
*                2 MSGCOMM2    CHAR(1), /* COMMA                    */  52400003
*                2 MSGTEXT     CHAR(47);/* MESSAGE TEXT             */  52800003
   DCL DXJBF CHAR(176) DEFINED(FORECORE) POS(101);                      53200003
*%GOTO IDAFOR2;                        /* BYPASS VS2 SECTION @Y30DSDT*/ 53250003
*%IDAFOR1: DCL (FORECORE,RWTG,RWTGC) CHAR;                 /*@Y30DSDT*/ 53300003
*%         FORECORE='FORCORE';                             /*@Y30DSDT*/ 53300803
*%         RWTG='IECWTGTB';            /* RWTG NOT VSAM REG  @Y30DSDT*/ 53301203
*%         RWTGC='*';                  /* RWTGC NOT VSAM REG @Y30DSDT*/ 53301603
*%         INCLUDE SYSLIB(IECDSECT);   /* VS2 FORCORE        @Y30DSDT*/ 53302003
*%         INCLUDE SYSLIB(IECDSECS);   /* VS2 FORCORE EXT.   @Y30DSDT*/ 53310003
*%         DEACTIVATE RWTG,RWTGC;                          /*@Y30DSDT*/ 53320003
*%IDAFOR2: ;                       /* VS1/VS2 COMMON SECTION @Y30DSDT*/ 53350003
 %IF NOJFCB='YES'                                                       53600003
    %THEN %GOTO NOJFCBA;                                                54000003
*%       DCL   JFCBPTR  CHAR;                                           54400003
*%       JFCBPTR = 'ADDR(DXJBF)';                                       54800003
*%       INCLUDE SYSLIB(IEFJFCBN);                                      55200003
*%       DCL   JFCBXPTR CHAR;                                           55600003
*%       JFCBXPTR = 'ADDR(DXJBF)';                                      56000003
*%       INCLUDE SYSLIB(IEFJFCBX);                                      56400003
         %NOJFCBA:;                                                     56800003
*%IF ENV='VS2'  %THEN                   /*IF VS2, BYPASS VS1 @Y30DSDT*/ 56850003
*   %GOTO IDAFOR3;                      /* SECTION           @Y30DSDT*/ 56900003
   DCL DXECB CHAR(4) DEFINED(FORECORE) POS(277);                        57200003
*% IF CONFLICT ¬= 'NO' %THEN %GOTO NORMAL;                              57600003
   DCL DXIOB CHAR(32) DEFINED(FORECORE) POS(281);                       58000003
*% GOTO BYPASS;                                                         58400003
*% NORMAL: ;                                                            58800003
   DCL 1 DXIOB DEFINED(FORECORE) POS(281),                              59200003
*                2 IOBFLAG1    BIT(8),                                  59600003
*                2 IOBFLAG2    BIT(8),                                  60000003
*                2 IOBSENSE    CHAR(2),                                 60400003
*                  3 IOBSENS0  BIT(8),                                  60800003
*                  3 IOBSENS1  BIT(8),                                  61200003
*                2 IOBECBPT    PTR(31),                                 61600003
*                  3 *         BIT(8),                                  62000003
*                  3 *         PTR(24),                                 62400003
*                2 IOBCSW,                                              62800003
*                  3 IOBCOMAD  CHAR(4),                                 63200003
*                  3 IOBSTAT0  BIT(8),                                  63600003
*                  3 IOBSTAT1  BIT(8),                                  64000003
*                  3 IOBCNT    FIXED(15),                               64400003
*                2 IOBSIOCC    BIT(8),                                  64800003
*                2 IOBSTART    PTR(24),                                 65200003
*                2 IOBWGHT     BIT(8),                                  65600003
*                2 IOBDCBPT    PTR(24),                                 66000003
*                2 *           CHAR(1),                                 66400003
*                2 *           CHAR(3),                                 66800003
*                2 IOBINCAM    FIXED(15),                               67200003
*                2 IOBERRCT    FIXED(15);                               67600003
*% BYPASS: ;                                                            68000003
   DCL DXDADDR CHAR(8) DEFINED(FORECORE) POS(313);                      68400003
   DCL 1 DYYYY DEFINED(FORECORE) POS(321),                              68800003
*                2 DXDEBDEB    PTR(31),                                 69200003
*                2 DXDEBIRB    PTR(31),                                 69600003
*                  3 DXDEBOFL  CHAR(1),                                 70000003
*                2 DXDEBSYS    PTR(31),                                 70400003
*                2 DXDEBUSR    PTR(31),                                 70800003
*                2 DXDEBECB    PTR(31),                                 71200003
*                2 DXDEBDCB    PTR(31),                                 71600003
*                  3 DXDCBAD   PTR(31),                                 72000003
*                    4 DXDEBID CHAR(1),                                 72400003
*                2 DXDEBAPP    PTR(31),                                 72800003
*                2 DXDEBUCB    PTR(31),                                 73200003
*                  3 DXDEBMOD  CHAR(1),                                 73600003
*                2 DXDEBBIN    CHAR(2),                                 74000003
*                2 DXDEBSCC    CHAR(2),                                 74400003
*                2 DXDEBSHH    CHAR(2),                                 74800003
*                2 DXDEBECC    CHAR(2),                                 75200003
*                2 DXDEBEHH    CHAR(2),                                 75600003
*                2 DXDEBNTR    CHAR(2);                                 76000003
   DCL   DXDEB                          DEFINED(FORECORE) POS(317);     76400003
   DCL   DXXXX CHAR(4)                  DEFINED(FORECORE) POS(365);     76800003
   DCL   DXDCB                          DEFINED(FORECORE) POS(321);     77200003
   DCL   DXDCBDEB PTR(31)               DEFINED(FORECORE) POS(365);     77600003
   DCL 1 DXCCW                          DEFINED(FORECORE) POS(369),     78000003
*                2 DXCCW1      CHAR(8),                                 78400003
*                2 DXCCW2      CHAR(8),                                 78800003
*                2 DXCCW3      CHAR(8),                                 79200003
*                2 DXCCW4      CHAR(8),                                 79600003
*                2 DXCCW5      CHAR(8),                                 80000003
*                2 DXCCW6      CHAR(8),                                 80400003
*                2 DXCCW7      CHAR(8),                                 80800003
*                2 DXCCW8      CHAR(8),                                 81200003
*                2 DXCCW9      CHAR(8),                                 81600003
*                2 DXCCW10     CHAR(8),                                 82000003
*                2 DXCCW11     CHAR(8),                                 82400003
*                2 DXCCW12     CHAR(8);                                 82800003
   DCL   DXVSAMID PTR(31) DEFINED(FORECORE) POS(489);                   83200003
*%IDAFOR3: ;                      /* VS1/VS2 COMMON SECTION @Y30DSDT*/  83250003
   DCL 1 PDWLIST DEFINED(FORECORE),    /* WRITE-TO-PROGRAMMER           83600003
                                          PARAMETER LIST            */  84000003
*                2 WTPLNGTH FIXED(15) UNSIGNED, /* LENGTH OF LIST   */  84400003
*                2 WTPFLGS FIXED(15) UNSIGNED, /* WTPFLAGS          */  84800003
*                2 WTPMSG CHAR(71),    /* TEXT OF MESSAGE           */  85200003
*                2 WTPROUT CHAR(4);    /* ROUTING CODES             */  85600003
*  % INCLUDE SYSLIB(IDAPDPRM);                                          86000003
*  RFY IDAPDPRM  BASED(ADDR(DXIOB));                                    86400003
*%IF ENV='VS2'  %THEN                  /* IF VS2, BYPASS VS1 @Y30DSDT*/ 86450003
*   %GOTO IDAFOR4;                     /*  DECLARE           @Y30DSDT*/ 86500003
   DCL 1 PDWWORK DEFINED(FORECORE) POS(321),                            86800003
*   %GOTO IDAFOR5;                     /* BYPASS VS2 DECLARE @Y30DSDT*/ 86850003
*%IDAFOR4: ;                                               /*@Y30DSDT*/ 86860003
   DCL 1 PDWWORK DEFINED(DXDCB),                           /*@Y30DSDT*/ 86900003
*%IDAFOR5: ;                                               /*@Y30DSDT*/ 86950003
*                2 PDWSAVE CHAR(64),   /* REGISTER SAVE AREA        */  87200003
*                2 PDWSAVEA PTR(31),   /* REG 14 SAVE AREA          */  87600003
*                2 PDWSAVEB PTR(31),   /* REG 14 SAVE AREA          */  88000003
*                2 PDWSAVEC PTR(31),   /* REG 14 SAVE AREA          */  88400003
*                2 PDWSAVED PTR(31),   /* REG 14 SAVE AREA  @X04SVRL*/  88450003
*                2 PDWMSGPT PTR(31),   /* PTR TO LOCATION IN USER'S     88500003
*                                         MESSAGE AREA      @X04SVRL*/  88550003
*                2 PDWERRCD PTR(31),   /* ERROR CODE                */  88800003
*                2 PDWORKSP CHAR(8) BDY(DWORD); /* DBL WORD WORK AREA*/ 89200003
*%IF ENV='VS2'  %THEN                   /*IF VS2, BYPASS VS1 @Y30DSDT*/ 89250003
*   %GOTO NOWTG;                        /* SECTION           @Y30DSDT*/ 89300003
*%       DCL DSECTSIZ FIXED;                                            89600003
*%       DSECTSIZ = 496;                                                90000003
* % IF WTGX ¬= 'YES' %THEN %GO TO NOWTG;                                90050003
*        DCL 1 WTG BASED     ,                                          90100003
*             2 WTGAREA  CHAR(29) ,     /* WTG TABLE BASIC SECTION  */  90150003
*              3 WTGMODNM CHAR(8) ,     /* MODULE NAME              */  90200003
*                4 *      CHAR(6) ,     /* FIRST SIX BYTES OF MODULE*/  90250003
*                4 WTGMODID CHAR(2),    /* MODULE ID                */  90300003
*              3 *          CHAR(6),    /* TTRSZE FLD OF BLDL       */  90350003
*              3 WTGTTR     CHAR(3);    /* TTR OF FIRST TEXT RECORD */  90400003
*        DCL WTGECBAD PTR(31) BASED(ADDR(WTGTTR)+2);                    90500003
*        DCL 1 DSECTT10 BASED(ADDR(WTGECBAD)+4) BDY(WORD),              90550003
*             2 *         CHAR(2),                                      90600003
*             2 WTGATTRB  BIT(16),      /* ATTRIBUTES OF MODULE     */  90650003
*             2 WTGMODSZ  CHAR(3),      /* MAIN STORAGE NEEDED      */  90700003
*             2 WTGTXTLN  CHAR(2),      /* LNG OF FIRST TXT REC     */  90750003
*             2 WTGLNG    PTR(8) ,      /* LNG OF WTG TABL DWORDS   */  90800003
*             2 WTGPATHS  BIT(16),      /* O/C PROC. INDICATORS     */  90850003
*               3 WTGPRLSE BIT(1),      /* DA PARTIAL RLSE REQ      */  90900003
*               3 WTGNSL   BIT(1),      /* NSL TAPE INPUT PROC.     */  90950003
*               3 WTGCLOS  BIT(1),      /* TCLOSE XCTL TO NSL RTNS  */  91000003
*               3 WTGSMF   BIT(1),      /* SMF IS ACTIVE            */  91050003
*               3 WTGJFCBW BIT(1),      /* JFCB ALTERED NEEDS JQ UPD*/  91100003
*               3 *        BIT(3),                                      91150003
*               3 WTGTRACE BIT(1),      /* OPT TRACE FACILITY REQD  */  91200003
*               3 WTGAM0   BIT(1),      /* VSAM ACBS IN PARM LIST   */  91250003
*               3 *        BIT(4),                                      91300003
*               3 WTGRECHK BIT(1),      /* INCORRECT NSL VOL MOUNTED*/  91350003
*               3 WTGOPD   BIT(1),      /* DCBS TO COMPLETE THEN    */  91400003
*                                       /* GET PROB DET FOR LAST LD */  91450003
*             2 *         CHAR(8),      /*                          */  91500003
*             2 WTGEND    CHAR(0);      /* END OF WTG TABLE         */  91550003
*        DCL 1 DSECT10A BDY(WORD) BASED,                                91600003
*             2 WTGENTRY  CHAR(8) BDY(WORD),/* FIRST ENTRY IN WTG   */  91650003
*               3 WTGIDTTR CHAR(5),     /* ID & TTR OF NEXT MODULE  */  91700003
*                 4 WTGID  CHAR(2),     /* MODULE ID                */  91750003
*                 4 WTGXTTR CHAR(3),    /* TTR OF MODULE            */  91800003
*               3 WTGCORE  PTR(24);     /* ADDR OF MAIN WORKAREA    */  91850003
* %NOWTG:  ;                                                            91900003
./  ADD  SSI=31180124,NAME=IDAFRCIO
* /*                                                                 */ 03050002
* /* MACCOMP Y-2 SC1DE/SJD61                                         */ 03100002
* /* MACSTAT Y-2 73103/Y02113                                        */ 03150002
* /*                                                                 */ 03200002
         MACRO                                                          03250002
&NAME    IDAFRCIO &RPL=                                                 06000000
         AIF   ('&RPL' NE '').OKY                                       09000000
         IHBERMAC 24                                                    12000000
         MEXIT                                                          15000000
.OKY     ANOP                                                           18000000
&NAME    DS    0H                                                       21000000
         AIF   ('&RPL'(1,1) EQ '(').RPLR                                24000000
         LA    1,&RPL                   LOAD RPL ADDRESS                27000000
         AGO   .RPLSET                                                  30000000
.RPLR    AIF   ('&RPL' EQ '(1)').RPLSET                                 33000000
         LR    1,&RPL(1)                LOAD RPL ADDRESS INTO REG. 1    36000000
.RPLSET  ANOP                                                           39000000
         LA    0,10                     INDICATE A FORCE I/O REQUEST    42000000
.TYPESET L     15,24(1)                 LOAD ACB ADDRESS FROM RPL       45000000
         L     15,8(15)                 LOAD VSAM INTERFACE RTN ADDR    48000000
         BALR  14,15                    LINK TO INTERFACE ROUTINE       51000000
         MEND                                                           54000000
./  ADD  SSI=43440075,NAME=IDAGMAIN
 %GOTO SKIP;                       /*SKIP MACRO PROLOG               */ 00010003
 /********************************************************************/ 00020004
 /*                                                                  */ 00030004
 /*   MACRO NAME = IDAGMAIN                                          */ 00040004
 /*                                                                  */ 00042004
 /*   DESCRIPTIVE NAME = GETMAIN FOR VSAM OPEN/CLOSE/EOV AUTOMATICS. */ 00044004
 /*                                                                  */ 00046004
 /*   FUNCTION = PERFORMS GETMAIN'S FOR VSAM OPEN/CLOSE/EOV MODULES. */ 00048004
 /*              IT GETS THE CORRECT AMOUNT OF STORAGE AREA FOR THE  */ 00048404
 /*              AUTOMATICS DECLARED BY THE MODULES.                 */ 00048804
 /*              REGISTER 15 CONTAINS ADDRESS OF GOTTEN CORE IF      */ 00049204
 /*              GETMAIN WAS SUCCESSFUL, OTHERWISE REISTER 15        */ 00049604
 /*              CONTAINS ZERO.                                      */ 00049704
 /*                                                                  */ 00049804
 /*   CONTROL BLOCK STRUCTURE = NONE                                 */ 00049904
 /*                                                                  */ 00066604
 /*   INCLUDED MACROS = NONE                                         */ 00076604
 /*                                                                  */ 00078604
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00080604
 /*                                                                  */ 00082604
 /*   CREATED BY: N/A                                                */ 00083004
 /*                                                                  */ 00083104
 /*   STATUS = VS1 RELEASE 4, VS2 RELEASE 3.                         */ 00083204
 /*                                                                  */ 00088804
 /*   DATE OF LAST CHANGE = 3 DECEMBER 74                    @Z30SSRL*/ 00090803
 /*                                                                  */ 00092804
 /********************************************************************/ 00093204
 %SKIP: ;                          /*END OF MACRO PROLOG             */ 00093604
 /********************************************************************/ 00094404
 /*           IDAGMAIN - GETS CORE STORAGE FOR AUTOMATICS.           */ 00100004
 /*                      FOR VS2 IDAGMAIN WILL MOVE THE      @Z30SSRL*/ 00102003
 /*                      ID AND DATE OF THE MODULE TO A      @Z30SSRL*/ 00104003
 /*                      LOCATION DIRECTLY AFTER THE PLS     @Z30SSRL*/ 00106003
 /*                      GENERATED SAVE AREA.                @Z30SSRL*/ 00108003
 /*           DATE OF LAST CHANGE = 3 DECEMBER 74            @Z30SSRL*/ 00110003
 /********************************************************************/ 00150004
   GEN;                                                                 00200004
 %        IF ENV='VS2'  %THEN          /* CHECK FOR VS2 SWITCH AND   */ 00250004
 %          GOTO IDAGMN1;              /* BYPASS VS1 CODE            */ 00300004
REG1SAVE EQU   20                       SAVE AREA FOR REGISTER 1        00310004
GMRESULT EQU   24                       SAVE AREA FOR ADDR OF GETMAIN   00320004
GMWORK   EQU   28                       ADDR OF WORK AREA FOR GETMAIN   00330004
WORKPOOL EQU   252                      SUBPOOL 252                     00340004
         L     @15,CVTPTR               LOAD POINTER TO THE CVT         00350004
         L     @15,CVTTCBP(,@15)        LOAD POINTER TO TCB POINTERS    00400004
         L     @15,TCBPTR(,@15)         LOAD POINTER TO TCB             00450004
         L     @15,TCBRBP(,@15)         LOAD POINTER OF RB              00500004
         LA    @15,XRBESA(,@15)         LOAD ADDRESS OF RB SAVE AREA    00550004
         STM   @05,@09,0(@15)           SAVE REG 5 TO 9 IN RB SAVE AREA 00600004
         LR    @05,@15                  SAVE ADDRESS OF RB SAVE AREA    00650004
         ST    @01,REG1SAVE(,@15)       SAVE REGISTER 1 IN 6TH WORD OF  00700004
*                                       RB SAVE AREA                    00750004
         LA    @01,GMWORK(,@15)         POINT TO GETMAIN WORK AREA      00800004
         LA    @06,GMRESULT(,@15)       POINT TO GETMAIN RESULT AREA IN 00850004
*                                       7TH WORD OF RB SAVE AREA        00900004
         LA    @09,WORKPOOL             LOAD SUBPOOL NUMBER             00950004
         L     @07,@SIZDATD             LOAD NUMBER OF BYTES REQUIRED   01000004
         GETMAIN EC,LV=(@07),A=(@06),SP=(@09),MF=(E,(@01)) DO GETMAIN   01050004
         SR    @09,@09                  ZERO PAD CHARACTER              01100004
         LTR   @15,@15                  TEST RETURN CODE FOR ERROR      01150004
         BNZ   GMN00100                 BRANCH IF ERROR ENCOUNTERED     01200004
*                                       IF NO ERROR WAS ENCOUNTERED     01250004
         L     @06,0(,@06)              GET ADDRESS OF ACQUIRED STORAGE 01300004
         MVCL  @06,@08                  ZERO THE ACQUIRED STORAGE       01350004
         B     GMN00200                 CONTINUE PROCESSING AT GMN00200 01400004
GMN00100 ST    @09,GMRESULT(,@05)       ZERO THE RESULT WORD IN RB      01450004
GMN00200 LR    @15,@05                  GET ADDRESS OF RB SAVE AREA     01500004
         LM    @05,@09,0(@15)           RESTORE REGISTER 5 THROUGH 9    01550004
         L     @01,REG1SAVE(,@15)       RESTORE REGISTER 1              01600004
         L     @15,GMRESULT(,@15)       LOAD GETMAIN RESULT             01650004
 %         GOTO IDAGMN2;               /* BYPASS VS2 CODE            */ 01700004
 %IDAGMN1: ;                           /* START VS2 CODE             */ 01750004
         L     @00,@SIZDATD             LOAD LENGTH OF AUTOMATICS       01800004
         GETMAIN RC,LV=(0),SP=0         ISSUE GETMAIN IN SUBPOOL ZERO   01850004
         LTR   @15,@15                  TEST RETURN CODE FOR ERROR      01900004
         BNZ   GMN00100                 BRANCH IF ERROR ENCOUNTERED     01950004
*                                       IF NO ERROR WAS ENCOUNTERED     02000004
         LR    @00,@01                  ADDRESS OF GOTTEN AREA IN R0    02050004
         LR    @14,@01                  SAVE THE ADDRESS IN REGISTER 14 02100004
         L     @01,@SIZDATD             LENGTH OF GOTTEN AREA           02150004
         MVCL  @00,@14                  ZERO THE GOTTEN AREA, R15=0     02200004
         LR    @15,@14                  ADDRESS OF AREA IN REGISTER 15  02250004
         ST    @15,8(,@13)              FORWARD CHAIN THIS SAVE AREA    02300004
 %   IF CALLER='192P'  %THEN        /* IF IT IS 192P                 */ 02302003
 %   GOTO NEXT;                     /* BYPASS SETTING ID             */ 02304003
         L     @01,@SIZDATD             LENGTH OF GOTTEN AREA           02306003
         ST    @01,88(,@15)             STORE LENGTH OF AREA            02310003
         LR    @14,@03                  LOAD BASE REGISTER OF MODULE    02312003
         LA    @01,23                   LOAD NEGATIVE OFFSET BYTE NO.   02312403
         SR    @14,@01                  NEGITIVE OFFSET 23 BYTES        02314003
         MVC   72(16,@15),0(@14)        GET MODULE NAME AND DATE        02320003
 %NEXT: ;                                                               02330003
         B     GMN00200                 BYPASS SETTING ERROR            02350004
GMN00100 SR    @15,@15                  REGISTER 15 = 0 INDICATES ERROR 02400004
GMN00200 EQU   *                        R15 CONTAINS ADDRESS OR ZERO    02450004
 %IDAGMN2: ;                                                            02500004
*        REGISTER 15 CONTAINS EITHER THE ADDRESS OF GOTTEN CORE OR      02550004
*        ZERO IF THE GETMAIN WAS UNSUCCESSFUL.                          02600004
 @ENDGEN;                                                               02650004
./  ADD  SSI=60860640,NAME=IDAHEB
 /********************************************************************/ 00050004
 /*                                                                  */ 00100004
 /*   MACRO NAME = IDAHEB                                            */ 00150004
 /*                                                                  */ 00200004
 /*   DESCRIPTIVE NAME = HEADER ELEMENT BLOCK.                       */ 00250004
 /*                                                                  */ 00300004
 /*   FUNCTION = THE HEB CONTAINS UP TO 16 ACTIVE CORE BLOCK HEADERS */ 00350004
 /*              USED TO REFLECT GOTTEN CORE FOR VSAM CONTROL BLOCKS.*/ 00400003
 /*              ADDITIONAL HEB(S) ARE CHAINED AS REQUIRED.          */ 00450004
 /*                                                                  */ 00500004
 /*   CONTROL BLOCK STRUCTURE = THE HEB IS POINTED TO BY THE BIB     */ 00550004
 /*                             (BIBHEBPT). THE FIRST FREE HEADER    */ 00600004
 /*                             ELEMENT IS POINTED TO BY (BIBHEBFQ). */ 00650004
 /*                                                                  */ 00660004
 /*   INCLUDED MACROS = NONE                                         */ 00670004
 /*                                                                  */ 00680004
 /*   METHOD OF ACCESS = PL/S - RESPECIFY IDAHEB AND HEBHDREL BASED. */ 00690004
 /*                                                                  */ 00692004
 /*   CREATED BY: VSAM OPEN MODULE IDA0192M.                         */ 00694004
 /*                                                                  */ 00696004
 /*   STATUS = VS2 RELEASE 4                                 @Z40ESSR*/ 00698004
 /*                                                                  */ 00698404
 /*   DATE OF LAST CHANGE = 04/11/75                         @Z40ESSR*/ 00698804
 /*                                                                  */ 00699204
 /********************************************************************/ 00699604
 DCL HEBNEL CONSTANT(16) FIXED(31); /* NUMBER OF ELEMENTS IN A HEB   */ 01012003
 DCL 1 HEBHDREL BASED BDY(WORD),    /* HEADER ELEMENT                */ 01050003
       2 HEBFREMN,                  /* FREEMAIN INFORMATION          */ 01100003
         3 HEBSP    FIXED(8),       /* SUBPOOL OF BLOCK              */ 01150003
         3 HEBLN    FIXED(24),      /* LENGTH OF BLOCK               */ 01200003
         3 HEBBLKPT PTR(31),        /* POINTER TO CORE BLOCK         */ 01250003
       2 HEBFLAGS BIT(8),           /* FLAGS                         */ 01300003
         3 HEBJSTCB BIT(1),         /* CORE IS OWNED BY JOBSTEP TCB  */ 01400003
         3 HEBKEY5  BIT(1),         /* STORAGE IS IN KEY 5 - VS2     */ 01402003
         3 HEBGSRKT BIT(1),         /* STOR IN GSR KEY - VS2 @Z40ESSR*/ 01404004
                                    /* NOTE - IF NOT KEY 5 OR GSR KEY   01406004
                                       GET CORE IN KEY 0     @Z40ESSR*/ 01408004
         3 HEBIOSUP BIT(1),         /* O/C/E SPECIAL REQUEST BLK -VS2*/ 01412003
         3 HEBRTFLG BIT(1),         /* RECOVERY/TERM FREED CORE - VS2*/ 01414003
       2 HEBAVSP  FIXED(24),        /* AMOUNT OF AVAILABLE CORE      */ 01450003
       2 HEBELCHN PTR(31),          /* PTR TO NEXT HDR ELEMENT       */ 01500003
       2 HEBNBYTE PTR(31),          /* PTR TO NEXT AVAIL BYT @Z40ESSR*/ 01550004
       2 * CHAR(4),                                        /*@Z40ESSR*/ 01600004
         3 HEBGSRK FIXED(8),        /*GSR KEY IF HEBGSRKT ON @Z40ESSR*/ 01650004
         3 *       FIXED(24);       /* UNUSED                @Z40ESSR*/ 01700004
 DCL 1 IDAHEB BASED BDY(WORD),      /* HEADER ELEMENT BLOCK  @Z40ESSR*/ 01750004
       2 HEBID    CHAR(1),          /* CONTROL BLOCK ID      @Z40ESSR*/ 01800004
       2 *        CHAR(1),          /* RESERVED - NOT USED   @Z40ESSR*/ 01850004
       2 HEBLEN   FIXED(15),        /* LENGTH OF HEB         @Z40ESSR*/ 01900004
       2 HEBNHEB  PTR (31),         /* POINTER TO NEXT HEB OR ZERO   */ 01950004
       2 *        CHAR(2),          /* UNUSED                @Z40ESSR*/ 02000004
       2 HEBCNT   FIXED(15),        /* NUMBER OF HEADER ELEMENTS     */ 02050004
       2 HEBHDELS(HEBNEL) CHAR(LENGTH(HEBHDREL));/* HDR ELEM @Z40ESSR*/ 02100004
./  ADD  SSI=51900097,NAME=IDAICWA
*/********************************************************************/ 00050004
*/*                                                                  */ 00100004
*/*   MACRO NAME = IDAICWA                                           */ 00150004
*/*                                                                  */ 00200004
*/*   DESCRIPTIVE NAME = INDEX CREATE WORK AREA                      */ 00250004
*/*                                                                  */ 00300004
*/*   FUNCTION = USED BY VSAM RECORD MAGANEMENT WHEN CREATING        */ 00350004
*/*         AN INDEX                                                 */ 00360004
*/*                                                                  */ 00400004
*/*   CONTROL BLOCK STRUCTURE = POINTED TO BY IDAAMB                 */ 00450004
*/*                                                                  */ 00500004
*/*   INCLUDED MACROS = NONE                                         */ 00550004
*/*                                                                  */ 00600004
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00650004
*/*                                                                  */ 00700004
*/*   CREATED BY = VSAM OPEN                                         */ 00750004
*/*                                                                  */ 00800004
*/*   STATUS = VS/1 RELEASE 4  (CHANGE FLAG @X04SVXX)                */ 00850004
*/*                                                                  */ 00900004
*/*   DATE OF LAST CHANGE = 9 AUG 74                                 */ 00950004
*/*                                                                  */ 00960004
*/********************************************************************/ 00970004
*  DCL 1  IDAICWA  BASED,                  /* INDEX CREATE WORK AREA */ 01000000
*        2 ICWID CHAR(1),                  /* CONTROL BLOCK ID     */   02000000
*        2 ICWFLG1 BIT(8),                 /* FLAG BYTE ONE        */   03000000
*          3 ICWWNF BIT(1),                /* ENTRY WILL NOT FIT     */ 04000000
*          3 ICWWAGM BIT(1),               /* WORK AREA NOT FROM OPEN*/ 05000000
*          3 ICWRBAOK BIT(1),              /* DONT GET RBA ON INITAL */ 06000000
*          3 ICWVSE BIT(1),                /* SECTION ENTRY IS VALID */ 07000000
*          3 ICWVNE BIT(1),                /* PREVIOUS ENTRY IS VALID*/ 08000000
*          3 ICWKRDS BIT(1),               /* KEY RANGE DATA SET     */ 09000000
*          3 ICWSPLIT BIT(1),              /* AREA USED BY SPLT I.R. */ 10000000
*          3 ICWENDRQ BIT(1),              /* CLOSE REQUIRES CI SPLT.*/ 11000000
*        2 ICWLEN FIXED(15),               /* LENGTH OF CONTROL BLK*/   12000000
*        2 ICWCHN PTR(31),                 /* PTR TO NEXT ICWA     */   13000000
*        2 ICWBUFC PTR(31),                /* PTR TO CURR IX BUFC  */   14000000
*        2 ICWCRBA PTR(32),                /* CURRENT INDEX RBA      */ 15000000
*        2 ICWPRBA PTR(32),                /* PREVIOUS INDEX RBA     */ 16000000
*        2 ICWPSEO PTR(15),                /* PRIOR SECT ENTRY PTR */   17000000
*        2 ICWSCNT PTR(15),                /* ENTRIES IN CURR SECT */   18000000
*        2 ICWADD PTR(31),                 /* PTR TO CURRENT W.A.    */ 19000000
*        2 ICWTBASE PTR(32),               /* BASE RBA SAVE POSITION */ 20000000
*        2 ICWTPTR PTR(31),                /* INDEX PTR SAVE POSITION*/ 21000000
*        2 ICWARDBP PTR(31),               /* POINTER TO CURRENT ARDB*/ 22000000
*        2 ICWLN FIXED(15),                /* INDEX LEVEL NUMBER     */ 23000000
*        2 ICWKEY1L FIXED(15),             /* LENGTH OF CURRENT KEY  */ 24000000
*        2 ICWKEY2L FIXED(15),             /* LENGTH OF PREVIOUS KEY */ 25000000
*        2 ICWKEY3L FIXED(15),             /* LENGTH OF SECTION KEY  */ 26000000
*        2 ICWNEST  FIXED(15),             /* NO ENTRYS IN INDX SECT */ 27000000
*        2 ICWNOSEG FIXED(15),             /* NO. SEGMENTS IN SPANNED   27050004
*                                             RECORD         @X04SVLC*/ 27100004
*        2 ICWCRSEG FIXED(15),             /* CURRENT SEGMENT BEING     27150004
*                                             PROCESSED      @X04SVLC*/ 27200004
*        2 ICWREQ PTR(8),                  /* REQUEST TYPE           */ 28000000
*        2 ICWPTL PTR(8),                  /* INDEX ENTRY POINTER LEN*/ 29000000
*        2 ICWCER PTR(8),                  /* REAR COMP. OF CUR ENTRY*/ 30000000
*        2 ICWCEF PTR(8),                  /* CURRENT ENTRY F      */   31000000
*        2 ICWCEL PTR(8),                  /* CURRENT ENTRY L      */   32000000
*        2 ICWCERP PTR(8),                 /* REAR COMP. OF PREVIOUS */ 33000000
*        2 ICWKEY1 CHAR(*);                /* FIRST KEY SAVED      */   34000000
*  DCL ICWKEY2 CHAR(*) BASED;              /* SECOND KEY SAVED     */   35000000
*  DCL ICWKEY3 CHAR(*) BASED;              /* THIRD KEY SAVED      */   36000000
./  ADD  SSI=42900118,NAME=IDAIDXCB
 /********************************************************************/ 00050003
 /*                                                                  */ 00100003
 /*   MACRO NAME = IDAIDXCB                                          */ 00150003
 /*                                                                  */ 00200003
 /*   DESCRIPTIVE NAME = IDENTIFICATION CONSTANTS FOR CONTROL BLOCKS.*/ 00250003
 /*                                                                  */ 00300003
 /*   FUNCTION = THE CONSTANTS IDENTIFY EACH TYPE OF CONTROL BLOCKS. */ 00350003
 /*                                                                  */ 00400003
 /*   CONTROL BLOCK STRUCTURE = NONE                                 */ 00450003
 /*                                                                  */ 00500003
 /*   INCLUDED MACROS = NONE                                         */ 00550003
 /*                                                                  */ 00600003
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00650003
 /*                                                                  */ 00700003
 /*   CREATED BY: N/A                                                */ 00750003
 /*                                                                  */ 00800003
 /*   STATUS = VS1 RELEASE 4   (CHANGE FLAG @X04SVXX)                */ 00850003
 /*            VS2 RELEASE 3   (CHANGE FLAG @Y30DSXX)                */ 00900003
 /*                                                                  */ 00950003
 /*   DATE OF LAST CHANGE = 5 AUGUST 74                              */ 01000003
 /*                                                                  */ 01050003
 /********************************************************************/ 01100003
   DCL (IDXAMB CONSTANT('01000000'B),      /* ID FOR AMB             */ 01150003
        IDXAMBL CONSTANT('01010000'B),     /* ID FOR AMBL            */ 01200003
        IDXAMDSB CONSTANT('01100000'B),    /* ID FOR AMDSB           */ 01250003
        IDXARDB CONSTANT('01100001'B),     /* ID FOR ARDB            */ 01300003
        IDXBIB CONSTANT('00010000'B),      /* ID FOR BIB     @X04SVRP*/ 01350003
        IDXBSPH CONSTANT('01110010'B),     /* ID FOR BSPH    @X04SVRP*/ 01400003
        IDXBUFC CONSTANT('01110000'B),     /* ID FOR BUFC    @X04SVRP*/ 01450003
        IDXBUFDR CONSTANT('01110000'B),    /* ID FOR BUFDR           */ 01500003
        IDXCMB CONSTANT('00010001'B),      /* ID FOR CMB     @X04SVRP*/ 01550003
        IDXCPA CONSTANT('01110001'B),      /* ID FOR CPA             */ 01600003
        IDXDEB CONSTANT('00001111'B),      /* ID FOR DEB             */ 01650003
        IDXDIWA CONSTANT('01000001'B),     /* ID FOR DIWA            */ 01700003
        IDXEDB CONSTANT('10010000'B),      /* ID FOR EDB             */ 01750003
        IDXHEB CONSTANT('00010011'B),      /* ID FOR HEB     @X04SVRP*/ 01800003
        IDXICWA CONSTANT('01000011'B),     /* ID FOR ICWA            */ 01850003
        IDXIMWA CONSTANT('01000010'B),     /* ID FOR IMWA            */ 01900003
        IDXLPMB CONSTANT('10010001'B),     /* ID FOR LPMB            */ 01950003
        IDXPLH CONSTANT('00110000'B),      /* ID FOR PLHDR           */ 02000003
        IDXUPT CONSTANT('01000101'B),      /* ID FOR UPT     @X04SVRP*/ 02050003
        IDXVAT CONSTANT('00010001'B),      /* ID FOR VAT     @X04SVRP*/ 02100003
        IDXVCRT CONSTANT('10000000'B),     /* ID FOR VCRT    @X04SVRP*/ 02150003
        IDXVIOT CONSTANT('00010110'B),     /* ID FOR VIOT    @X04SVRP*/ 02250003
        IDXVMT CONSTANT('00010010'B),      /* ID FOR VMT     @X04SVRP*/ 02300003
        IDXVSRT CONSTANT('00010101'B),     /* ID FOR VSRT    @X04SVRP*/ 02350003
        IDXWAX CONSTANT('01110011'B),      /* ID FOR WAX     @X04SVRP*/ 02400003
        IDXWSHD CONSTANT('01000100'B))     /* ID FOR WSHD    @X04SVRP*/ 02450003
                        BIT(8);                                         02500003
./  ADD  SSI=32291290,NAME=IDAIICB
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01050090
* /*                                                                 */ 01100090
* /*     ISAM INTERFACE CONTROL BLOCK  - IICB                        */ 02000090
* /*                                                                 */ 03000090
* /*                                                                 */ 03050002
* /* MACCOMP Y-2 SC1DE/SJD61                                         */ 03100002
* /* MACSTAT Y-2 73212/Y02113                                @Y021130*/ 03150002
* /*                                                                 */ 03200002
* /*     ISAM INTERFACE OPEN CREATES AND INITIALIZES THE IICB.       */ 04000090
* /*     IT IS USED TO POINT TO THE ISAM (DCB) AND VSAM (ACB         */ 05000090
* /*     AND RPL) CONTROL BLOCKS AND ASSOCIATED AREAS NEEDED BY      */ 06000090
* /*     THE ISAM INTERFACE.  IT IS POINTED TO BY THE ISAM DEB       */ 07000090
* /*     (DEBWKPT5) TO PROVIDE INTEGRITY AND BY THE RPL EXTENSION    */ 08000090
* /*     (RRLIICB) TO PROVIDE A CONNECTION TO THE VSAM CONTROL BLOCK */ 09000090
* /*     STRUCTURE.  IT IS FREED BY ISAM INTERFACE CLOSE.            */ 10000090
* /*                                                                 */ 11000090
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 11050090
* /*                                                                 */ 13000090
*   DCL  1 IDAIICB            BASED,    /* ISAM INTERFACE CONTROL BLK*/ 14000090
*          2 IICBID           PTR(8),   /* IICB ID X'80'             */ 15000090
*          2 *                PTR(8),   /* RESERVED                  */ 16000090
*          2 IICBLEN          FIXED(15),/* LENGTH OF IICB            */ 17000090
*          2 IIDCBPTR         PTR(31),  /* DCB POINTER               */ 18000090
*          2 IIACBPTR         PTR(31),  /* ABC POINTER               */ 19000090
*          2 IIRPLPTR         PTR(31),  /* RPL POINTER               */ 20000090
*                                       /* WORK AREA PTR             */ 21000090
*          2 IIW1CBF          PTR(31),  /* DUMMY SCAN WA PTR         */ 22000090
*            3 IISAVLRL       FIXED (15), /* SAVE REC LENGTH @Y021130*/ 22100002
*            3 IIMAXLRL       FIXED (15), /* MAX REC LENGTH  @Y021130*/ 22150002
*          2 IIKEYPT          PTR(31),  /* KEYSAVE PTR               */ 23000090
*          2 IIFLAG1          BIT(8),   /* ISAM INTERFACE FLAG BYTE 1*/ 24000090
*            3 IIFSCAN        BIT(1),   /* SCAN MODE                 */ 25000090
*            3 IIFGET         BIT(1),   /* FIRST GET                 */ 26000090
*            3 *              BIT(1),   /* RESERVED                  */ 27000090
*            3 IIFCLOSE       BIT(1),   /* CLOSE IN PROCESS          */ 28000090
*            3 IIDATA         BIT(1),   /* DATA ONLY RETRIVAL        */ 29000090
*            3 IIFTEST        BIT(1),   /* LOOP TEST BIT             */ 30000090
*            3 *              BIT(1),   /* RESERVED                  */ 31000090
*            3 IIQBFRS        BIT(1),   /* QISAM W/O BFRS-NO FREEMAIN*/ 32000090
*                                       /* GETMAIN/FREEMAIN LENGTHS  */ 33000090
*          2 IIACBL           FIXED(24),/* ACB,EXLST,IICB LENGTH     */ 34000002
*          2 IIFLAG2          BIT(8),   /* ISAM INTERFACE FLAG BYTE 2*/ 35000090
*                                       /* USED BY OPEN TO DESIGNATE */ 36000090
*                                       /* THE FIELDS BEING MERGED   */ 37000090
*                                       /* BY II.  II CLOSE USES THE */ 38000090
*                                       /* SAME MASK TO RESTORE THE  */ 39000090
*                                       /* DCB TO PRE-OPEN CONDITION */ 40000090
*            3 MRKP      BIT (1),       /* RELATIVE KEY POSITION     */ 41000090
*            3 MLRECL    BIT (1),       /* LOGICAL RECORD LENGTH     */ 42000090
*            3 MBLKSI    BIT (1),       /* BLOCK SIZE                */ 43000090
*            3 MOPTCD    BIT (1),       /* OPTION CODE               */ 44000090
*            3 MRECFM    BIT (1),       /* RECORD FORMAT             */ 45000090
*            3 MBUFL     BIT (1),       /* BUFFER LENGTH             */ 46000090
*            3 MBUFNO    BIT (1),       /* BUFFER NUMBER             */ 47000090
*            3 MKEYLE    BIT (1),       /* KEY LENGTH                */ 48000090
*          2 IIRPLL           FIXED(24),/* RPL, RPLE LENGTH-FREEMAIN */ 49000090
*          2 IIKEYSL          FIXED(15),/* KEY SAVE AREA LENGTH      */ 50000090
*          2 IIBUFL           FIXED(15),/* II SINGLE BUFFER LENGTH   */ 51000090
*          2 IIFLAG3          BIT(8),   /* ISAM INTERFACE FLAG BYTE 3*/ 52000090
*            3 MBFALN         BIT(1),   /* BFALN MERGE BIT           */ 53000090
*            3 *              BIT(7),   /* RESERVED                  */ 54000090
*          2 IIMSGL           FIXED(24),/* MESSAGE AREA LENGTH       */ 55000090
*          2 IIMSGPTR         PTR(31),  /* MESSAGE AREA POINTER      */ 56000090
*          2 IIBUFNO          PTR(8),   /* II BUFFER NUMBER          */ 57000090
*          2 IITBUFL          FIXED(24),/* TOTAL BCB & BUFFER LENGTH */ 58000090
*          2 IISVCLST         PTR(31),  /* SVC EXIT - SYNADAF        */ 59000090
*          2 IISAMSYN         CHAR(8),  /* ISAM SYNAD NAME           */ 60000090
*          2 IIREGSAV,                  /* REG SAVE AREA (II - VSAM) */ 60010002
*            3 *              PTR(31),  /*                           */ 60020002
*            3 IIREGBC        PTR(31),  /* PREVIOUS SAVE AREA PTR    */ 60030002
*            3 IIREGFC        PTR(31),  /* NEXT SAVE AREA PTR        */ 60040002
*            3 *              CHAR(60), /* REMAINDER OF SAVE AREA    */ 60042002
*          2 IIAUD  ,                   /* AUDIT INFORMATION @Y021130*/ 60050002
*            3 IIAUDHDR ,               /* FIRST WORD        @Y021130*/ 60100002
*             4 IIAUDFL1      BIT(8),   /* II AUDIT FLAGS    @Y021130*/ 60150002
*              5 AUDACBOP  BIT (1),     /* ACB OPEN ISSUED   @Y021130*/ 60200002
*              5 AUDACBRO  BIT (1),     /* ACB OPEN RETURNED @Y021130*/ 60250002
*              5 AUDDCBEX  BIT (1),     /* DCB EXIT TAKEN    @Y021130*/ 60300002
*              5 AUDDCBRT  BIT (1),     /* DCB EXIT RETURNED @Y021130*/ 60350002
*              5 AUDPRMOD  BIT (2),     /* PROCESSING MOD LOADED     */ 60400002
*                                       /* '11' = IDAIIPM3   @Y021130*/ 60450002
*                                       /* '10' = IDAIIPM2   @Y021130*/ 60500002
*                                       /* '01' = IDAIIPM1   @Y021130*/ 60550002
*              5 AUDIISYN  BIT (1),     /* II SYNAD LOADED   @Y021130*/ 60600002
*              5 AUDURSYN  BIT (1),     /* USER SYNAD LOADED @Y021130*/ 60650002
*             4 IIAUDFL2      BIT(8),   /* II AUDIT FLAGS    @Y021130*/ 60660002
*              5 AUDIIFBF  BIT (1),     /* IDAIIFBF LOADED   @Y021130*/ 60670002
*              5 AUDACBCL  BIT (1),     /* ACB CLOSE ISSUED  @Y021130*/ 60680002
*              5 AUDACBRC  BIT (1),     /* ACB CLOSE RETURN  @Y021130*/ 60690002
*              5 AUDBFREX  BIT (1),     /* FLUSH BFR EXIT    @Y021130*/ 60700002
*              5 AUDBFRRT  BIT (1),     /* FLUSH BFR RETURN  @Y021130*/ 60702002
*              5 AUDDEBXF  BIT (1),     /* DEB EXTENSION FREED       */ 60704002
*              5 *         BIT (2),     /* UNUSED            @Y021130*/ 60710002
*             4 IIGMCNTR   FIXED (15),  /* USED FOR OFFSET TO ENTRY  */ 60750002
*                                       /* OF GOTTEN CORE    @Y021130*/ 60800002
*            3 IIGMAUD ,                /* LIST OF CORE ADDRESSES    */ 60850002
*                                       /* GOTTEN            @Y021130*/ 60900002
*             4 AUDCIICB      PTR (31), /* ADDR IICB         @Y021130*/ 60950002
*             4 AUDCSPLI      PTR (32), /* SUBPOOL/LENGTH    @Y021130*/ 60960002
*              5 AUDCSPI    FIXED (8),  /* SUBPOOL           @Y021130*/ 60962002
*              5 AUDCLI     FIXED (24), /* LENGTH            @Y021130*/ 60964002
*             4 AUDCDEB       PTR (31), /* ADDR DEB          @Y021130*/ 60970002
*             4 AUDCSPLD      PTR (32), /* SUBPOOL/LENGTH    @Y021130*/ 60980002
*              5 AUDCSPD    FIXED (8),  /* SUBPOOL           @Y021130*/ 60982002
*              5 AUDCLD     FIXED (24), /* LENGTH            @Y021130*/ 60984002
*             4 AUDCBFRS      PTR (31), /* BUFFERS,RPLS,ETC  @Y021130*/ 60990002
*             4 AUDCSPLB      PTR (32), /* SUBPOOL/LENGTH    @Y021130*/ 60992002
*              5 AUDCSPB    FIXED (8),  /* SUBPOOL           @Y021130*/ 60992402
*              5 AUDCLB     FIXED (24), /* LENGTH            @Y021130*/ 60992802
*             4 AUDCMSGA      PTR (31), /* MESSAGE AREA      @Y021130*/ 60994002
*             4 AUDCSPLM      PTR (32), /* SUBPOOL/LENGTH    @Y021130*/ 60996002
*              5 AUDCSPM    FIXED (8),  /* SUBPOOL           @Y021130*/ 60998002
*              5 AUDCLM     FIXED (24); /* LENGTH            @Y021130*/ 60998402
*        /* AUDIT GETMAIN ENTRY DESCRIPTION                  @Y021130*/ 65010002
*        DCL 1 IIGMNTRY BASED (ADDR(IIAUD)+IIGMCNTR), /* DESCRIPTION */ 65050002
*                                       /* OF GOTTEN CORE ENTRIES    */ 65100002
*          2 IIGMADDR     PTR(31),      /* ADDRESS OF CORE   @Y021130*/ 65150002
*          2 IIGMSPLG ,                 /* SUBPOOL/LENGTH    @Y021130*/ 65200002
*            3 IIGMPOOL   FIXED(8),     /* SUBPOOL           @Y021130*/ 65250002
*            3 IIGMLEN    FIXED (24);   /* LENGTH            @Y021130*/ 65300002
./  ADD  SSI=40170598,NAME=IDAIIREG
* /*                                                                 */ 01000090
* /*     IDAIIREG                                                    */ 02000090
* /*                                                                 */ 03000090
* /*     ISAM INTERFACE REGISTER DECLARATIONS, CONSTANTS AND         */ 04000090
* /*     CONTROL BLOCK INCLUDES FOR THE IICB, DCB, RPL AND RPLE.     */ 05000090
* /*                                                                 */ 06000090
* /*                                                                 */ 06050002
* /* MACCOMP Y-2 SC1DE/SJD61                                         */ 06100002
* /* MACSTAT Y-2 73183/Y02113                                        */ 06150002
* /*                                                                 */ 06200002
* /*                                                                 */ 07000090
*   DCL  R0         REG (00)  PTR (31); /* PARAMETER REG             */ 08000090
*   DCL  R1         REG (01)  PTR (31); /* PARAMETER REG             */ 10000090
*   DCL  RDCB       REG (01)  PTR (31); /* DCB PTR                   */ 11000090
*   DCL  RDECB      REG (01)  PTR (31); /* DECB PTR                  */ 12000090
*   DCL  R2         REG (02)  PTR (31); /* WORK REG                  */ 13000090
*   DCL  RIICB      REG (02)  PTR (31); /* ISAM INTERFACE CB PTR     */ 14000090
*   DCL  R3         REG (03)  PTR (31); /* WORK REG                  */ 15000090
*   DCL  RRPL       REG (03)  PTR (31); /* RPL PTR                   */ 16000090
*   DCL  R4         REG (04)  PTR (31); /* WORK REG                  */ 17000090
*   DCL  RCORE      REG (04)  PTR (31); /* DCB WORK AREA PTR (O/C)   */ 18000090
*   DCL  R5         REG (05)  PTR (31); /* WORK REG                  */ 19000090
*   DCL  RBUFF      REG (05)  PTR (31); /* BUFFER PTR                */ 21000090
*   DCL  R6         REG (06)  PTR (31); /* WORK REG                  */ 22000090
*   DCL  RACB       REG (06)  PTR (31); /* ABC POINTER               */ 23000090
*   DCL  RWORK1     REG (06)  PTR (31); /* WORK REG                  */ 24000090
*   DCL  R7         REG (07)  PTR (31); /* WORK REG                  */ 25000090
*   DCL  RPARC      REG (07)  PTR (31); /* CURR ENTRY-PARM LIST (O/C)*/ 26000090
*   DCL  RWORK2     REG (07)  PTR (31); /* WORK REG                  */ 27000090
*   DCL  RFMADDR    REG (07)  PTR (31); /* FREEMAIN ADDR     @Y021130*/ 27050002
*   DCL  R8         REG (08)  PTR (31); /* WORK REG                  */ 28000090
*   DCL  RWORK3     REG (08)  PTR (31); /* WORK REG                  */ 29000090
*   DCL  RGMSP      REG (08)  PTR (31); /* GETMAIN SUBPOOL   @Y021130*/ 29050002
*   DCL  R9         REG (09)  PTR (31); /* WORK REG                  */ 30000090
*   DCL  JFCBPTR    REG (09)  PTR (31); /* JFCB POINTER              */ 31000090
*   DCL  RTIOT      REG (09)  PTR (31); /* TIOT DD ENTRY             */ 32000090
*   DCL  RGMLEN     REG (09)  PTR (31); /* GETMAIN LENGTH    @Y021130*/ 32050002
*   DCL  R10        REG (10)  PTR (31); /* WORK REG                  */ 33000090
*   DCL  RLKRETSV   REG (10)  PTR (31); /* LINKAGE SAVE REG  @Y021130*/ 33050002
*   DCL  R11        REG (11)  PTR (31); /* WORK REG                  */ 34000090
*   DCL  RDEB       REG (11)  PTR (31); /* DEB PTR                   */ 35000090
*   DCL  DEBPTR     REG (11)  PTR (31); /* DEB PTR                   */ 36000090
*   DCL  R12        REG (12)  PTR (31); /* SAVE AREA REG             */ 37000090
*   DCL  R13        REG (13)  PTR (31); /* SAVE AREA REG             */ 39000090
*   DCL  R14        REG (14)  PTR (31); /* RETURN ADDR REG           */ 40000090
*   DCL  R15        REG (15)  PTR (31); /* ENTRY POINT REG           */ 41000090
* /*                                                                 */ 42000090
* /*                                                                 */ 43000090
   DCL   ON         BIT(1)         CONSTANT ('1'B); /* BIT IS '1'B   */ 44000002
   DCL   OFF        BIT(1)         CONSTANT ('0'B); /* BIT IS '0'B   */ 45000002
   DCL   ZERO       FIXED (15)     CONSTANT (0); /* DATA TEST OF ZERO*/ 46000002
   DCL   ONE        FIXED (15)     CONSTANT (1); /* DATA TEST OF ONE */ 47000002
   DCL   SEVEN      FIXED (15)     CONSTANT (7); /* ROUNDING FACTOR  */ 48000002
   DCL   EIGHT      FIXED (15)     CONSTANT (8); /* ROUNDING FACTOR  */ 49000002
   DCL   BZERO      BIT (2)        CONSTANT ('00'B); /* BIT TEST     */ 50000002
   DCL   CZERO      BIT (8)        CONSTANT ('00000000'B);/* BIT TEST*/ 51000002
* /*                                                                 */ 52000090
* /*                                                                 */ 53000090
 @EJECT;                                                                53050090
 %INCLUDE SYSLIB(IDAIICB);                                              54000090
 @EJECT;                                                                55000090
 %INCLUDE SYSLIB (IHADCBDF);                                            56000090
 %DCBPTR='RDCB';                                                        57000090
 %DSORGIS=1;                                                            58000090
 %DEVDDA=1;                                                             59000090
 %INCLUDE SYSLIB (IHADCB);                                              60000090
 @EJECT;                                                                61000090
     /* RPL DECLARE                                                 */  61050002
 %INCLUDE SYSLIB (IFGRPL);                                              62000090
 @EJECT;                                                                63000090
 %INCLUDE SYSLIB (IDARPLE);                                             64000090
 @EJECT;                                                                65000090
* /*                                                                 */ 66000090
* /*                                                                 */ 67000090
         RESPECIFY  IDAIICB   BASED (RIICB);                            68000090
         RESPECIFY  IHADCB    BASED (RDCB);                             69000090
         RESPECIFY  IFGRPL    BASED (RRPL);                             70000090
         RESPECIFY  IDARPLE   BASED (RRPL + LENGTH (IFGRPL));           71000090
* /*                                                                 */ 72000090
         RESPECIFY (RIICB,                                              73000090
                    RDCB,                                               74000090
                    RRPL,                                               75000090
                    R14) RESTRICTED;                                    76000090
* /*                                                                 */ 77000090
./  ADD  SSI=51900099,NAME=IDAIMWA
*/********************************************************************/ 00050004
*/*                                                                  */ 00100004
*/*   MACRO NAME = IDAIMWA                                           */ 00150004
*/*                                                                  */ 00200004
*/*   DESCRIPTIVE NAME = INDEX MODIFICATION WORK AREA                */ 00250004
*/*                                                                  */ 00300004
*/*   FUNCTION = USED BY VSAM RECORD MANAGEMENT WHEN MODIFING        */ 00350004
*/*              AN INDEX                                            */ 00360004
*/*                                                                  */ 00400004
*/*   CONTROL BLOCK STRUCTURE = POINTED TO BY IDAAMB                 */ 00450004
*/*                                                                  */ 00500004
*/*   INCLUDED MACROS = NONE                                         */ 00550004
*/*                                                                  */ 00600004
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00650004
*/*                                                                  */ 00700004
*/*   CREATED BY = VSAM OPEN                                         */ 00750004
*/*                                                                  */ 00800004
*/*   STATUS = VS/1 RELEASE 4  (CHANGE FLAG @X04SVXX)                */ 00850004
*/*                                                                  */ 00900004
*/*   DATE OF LAST CHANGE = 9 AUG 74                                 */ 00950004
*/*                                                                  */ 01000004
*/********************************************************************/ 01050004
*        DCL 1 IDAIMWA BASED BDY(WORD),    /* INDEX INSERT WORK AREA */ 03000000
*              2 IMWID        CHAR(1),     /* CONTROL BLOCK ID       */ 06000000
*              2 IMWFLAGS     CHAR(1),     /* PROCESS FLAGS          */ 09000000
*                3 IMWNEWHL   BIT(1),      /* BUILD NEW HIGH LEVEL   */ 12000000
*                3 IMWRIPL    BIT(1),      /* RIPPLE INSERT          */ 15000000
*                3 IMWBSE     BIT(1),      /* BUILD SECTION ENTRY    */ 18000000
*              2 IMWLEN       FIXED(15),   /* CONTROL BLOCK LENGTH   */ 21000000
*              2 IMWIXSP      PTR(31),     /* PTR TO IX SEARCH PARML */ 24000000
*              2 IMWISWKA     CHAR(32) BDY(WORD), /* IX SEARCH PARML */ 27000000
*              2 IMWXKEYP     PTR(31),     /* PTR TO NEXT DATA KEY   */ 30000000
*              2 IMWIKEYP     PTR(31),     /* PTR TO INSERT KEY      */ 33000000
*              2 IMWXPTR      PTR(31),     /* NEXT ENTRY PTR VALUE   */ 36000000
*              2 IMWIPTR      PTR(31),     /* NEW ENTRY PTR VALUE    */ 39000000
*              2 IMWLBUFC     PTR(31),     /* LOW KEY DATA BUFC PTR  */ 42000000
*              2 IMWBUFP      PTR(31),     /* IDX RECORD PTR         */ 45000000
*              2 IMWFGAIN     PTR(8),      /* NEXT ENTRY F GAIN      */ 48000000
*              2 IMWIEL       PTR(8),      /* NEW ENTRY L VALUE      */ 51000000
*              2 IMWSVIEL     PTR(8),      /* SAVE L DURING RIPPLE   */ 54000000
*              2 *            PTR(8),      /* NOT USED               */ 57000000
*              2 IMWCIMVN     PTR(15),     /* NO. CIS TO MOVE BACK TO*/ 60000000
*                                          /* OLD CONTROL AREA       */ 63000000
*              2 IMWNSOFF     PTR(15),     /* OFFSET TO NEXT SECTION */ 66000000
*              2 *            PTR(31),     /* RESERVED FOR FUTURE USE*/ 69000000
*              2 IMWKEY1      CHAR(*);     /* INSERT KEY FOR MASS I. */ 72000000
./  ADD  SSI=31180084,NAME=IDAIOB
* /*                                                                 */ 01050002
* /* MACCOMP Y-2 SC1DE/SJD61                                         */ 01100002
* /* MACSTAT Y-2 73103/Y02113                                        */ 01150002
* /*                                                                 */ 01200002
*  DCL 1 IOBEXTN DEFINED(IOBSTDRD) POSITION(41),  /* IOB EXTENSION   */ 01250002
*        2 IOBBUFCS PTR(31),               /* PTR TO CURRENT I/O BUFC*/ 02000000
*        2 IOBIOMF BIT(8),                 /* I/O MANAGER FLAGS      */ 03000000
*          3 IOBAMUSE BIT(1),              /* IOB IN USE INDICATOR   */ 04000000
*          3 IOBMCSW  BIT(1),              /* CSW ADDR NOT IN CP     */ 05000000
*          3 IOBEOVW  BIT(1),              /* EOV IS WAITING FOR IOB */ 06000000
*          3 IOBEOVTS BIT(1),              /* EOV SET IOBLOCK        */ 07000000
*          3 *        BIT(4),              /* NOT USED               */ 08000000
*        2 IOBNMOD  PTR(8),                /* NO. MODULES IN VSL LIST*/ 09000000
*        2 IOBLOCK  CHAR(1),               /* PROCESS LOCK           */ 10000000
*        2 *        CHAR(1),               /* NOT USED               */ 11000000
*        2 IOBNBUF  FIXED(15),             /* NO. BUFFERS THIS REQ.  */ 12000000
*        2 IOBNSEG  FIXED(15),             /* NO. OF CHANNEL PROGRAM */ 13000000
*                                          /* SEQMENTS THIS REQUEST  */ 14000000
*        2 IOBPLH   PTR(31),               /* POINTER TO PLH         */ 15000000
*        2 IOBR14   PTR(31),               /* APPENDAGE R14 SAVE     */ 16000000
*        2 IOBVSL   PTR(31),               /* PTR TO VIRT ADDR LIST  */ 17000000
*                                          /* FOR PAGE FIX           */ 18000000
*        2 IOBMSAV1 PTR(31),               /* WORK AREA              */ 19000000
*        2 IOBMSAV2 PTR(31),               /* WORK AREA              */ 20000000
*        2 IOBMSAV3 PTR(31),               /* WORK AREA              */ 21000000
*        2 IOBMSAV4 PTR(31),               /* WORK AREA              */ 22000000
*        2 IOBMSAV5 PTR(31),               /* WORK AREA              */ 23000000
*        2 IOBMSAV6 PTR(31);               /* WORK AREA              */ 24000000
*%GOTO   IOBAPLS2;                                                      25000000
         MACRO                                                          26000000
         IDAIOB                                                         27000000
         ORG   IOBSTDRD+40              IOB EXTENSION                   28000000
IOBBUFCS DS    A                        POINTER TO CURRENT I/O BUFC     29000000
IOBIOMF  DS    BL1                      I/O MANAGER FLAGS               30000000
IOBAMUSE EQU   X'80'                    IOB IN USE INDICATOR            31000000
IOBMCSW  EQU   X'40'                    CSW ADDR NOT IN CP              32000000
IOBEOVW  EQU   X'20'                    EOV IS WAITING FOR IOB          33000000
IOBEOVTS EQU   X'10'                    EOV SET IOBLOCK                 34000000
IOBNMOD  DS    C                        NO. MODULES IN VSL LIST         35000000
IOBLOCK  DS    C                        NOT USED                        36000000
         DS    C                        NOT USED                        37000000
IOBNBUF  DS    H                        NO. BUFFERS FOR THIS REQUEST    38000000
IOBNSEG  DS    H                        NO. CP SEGS FOR THIS REQUEST    39000000
IOBPLH   DS    A                        POINTER TO PLH                  40000000
IOBR14   DS    F                        APPENDAGE R14 SAVE LOCATION     41000000
IOBVSL   DS    F                        PTR TO PAGE FIX VIRT ADDR LIST  42000000
IOBMSAV1 DS    F                        WORK AREA                       43000000
IOBMSAV2 DS    F                        WORK AREA                       44000000
IOBMSAV3 DS    F                        WORK AREA                       45000000
IOBMSAV4 DS    F                        WORK AREA                       46000000
IOBMSAV5 DS    F                        WORK AREA                       47000000
IOBMSAV6 DS    F                        WORK AREA                       48000000
         MEND                                                           49000000
*%IOBAPLS2: ;                                                           50000000
./  ADD  SSI=81790426,NAME=IDAIOMB
*/********************************************************************* 00300002
*                                                                     * 00350002
*   THIS MAPPING MACRO DESCRIBES THE CONTROL BLOCK PASSED TO THE I/O  * 00400002
*   MANAGER BY USERS SUCH AS RECORD MANAGEMENT AND ASM.  IT CONTAINS  * 00410002
*   POINTERS TO OTHER CONTROL BLOCKS, FLAGS FOR I/O MANAGER USE, AND  * 00450002
*   A SIXTEEN WORD SAVE AREA.  POINTERS TO THE FIRST BUFC AND CPA ARE * 00500002
*   INSERTED BY I/O MGR AFTER THEY HAVE BEEN VERIFIED.                * 00550002
*                                                                     * 00650002
*   THE IOMB IS USED IN CONJUNCTION WITH AN IOSB AND AN SRB FOR I/O   * 00700002
*   PURPOSES IN PLACE OF THE IOB USED BY OTHER IOS DRIVERS.  THE IOMB * 00750002
*   POINTS TO THE IOSB, WHICH POINTS TO THE SRB.                      * 00760002
*                                                                     * 00810002
*    09/18/74          LEVEL=01                                       * 00850037
*    08/15/75          LEVEL=02           CHANGE FLAG=@Z40GSDT        * 00860004
*                                                                     * 00900002
**********************************************************************/ 00950002
* %      GO TO IOMBPLS;             /* GO TO THE PLS VERSION         */ 00960002
         MACRO                                                          00970002
         IDAIOMB                                                        00980002
IOMB     DSECT                                                          00990002
         SPACE 1                                                        01000002
         DS    0F                                                       01050002
IOMBID   DS    XL4                  IOMB IDENTIFIER                     01100002
IOMBUFC  DS    F                    POINTER TO THE FIRST BUFC           01150002
IOMCPA   DS    F                    POINTER TO THE FIRST CPA            01200002
IOMPLH   DS    F                    POINTER TO THE PLH                  01250002
IOMAMB   DS    F                    POINTER TO THE AMB                  01300002
IOMIQE   DS    F                    POINTER TO THE IQE                  01350002
IOMECBPT DS    F                    POINTER TO THE ECB                  01400002
IOMVSL   DS    F                    POINTER TO THE VIRTUAL SUBAREA LIST 01450002
IOMPGAD  DS    F                    ADDR OF CALLER TO RECEIVE CONTROL   01500002
*                                   ON COMPLETION OF I/O OPERATION      01510002
*                                   (ZEROED FOR RECORD MANAGEMENT)      01520002
IOMIOSB  DS    F                    POINTER TO THE IOSB                 01550002
IOMFLAGS DS    0XL3                 INTERNAL FLAGS                      01600002
IOMFL    DS    XL2                  FLAGS TO BE RESET AFTER I/O         01650002
IOMAPEND EQU   X'C0'                ABNORMAL END AND NORMAL END ENTERED 01700002
IOMNE    EQU   X'80'                NORMAL END ENTERED                  01750002
IOMAE    EQU   X'40'                ABNORMAL END ENTERED                01800002
IOMPURGE EQU   X'20'                PURGE IN PROGRESS                   01850002
IOMCBERR EQU   X'08'                CONTROL BLOCK VALIDITY ERROR        01950002
IOMADERR EQU   X'04'                ERROR CONVERTING VPL TO IDAL        02000002
IOMPGFIX EQU   X'02'                PAGES FIXED                         02050002
IOMCSW   EQU   X'01'                CSW ADDRESS NOT VALID               02100002
*                                   SECOND BYTE OF IOMFL AND IOMFLAGS   02102002
IOMDDR   EQU   X'80'                DYNAMIC DEVICE RECONFIGURATION      02110002
IOMCPRB  EQU   X'40'                CALLER IN PROBLEM STATE    @ZA09130 02130037
IOMEEXIT EQU   X'08'                END APPENDAGE EXIT BIT     @ZA02276 02160037
IOMIRBSW EQU   X'04'                ASYNCH PROCESSING SCHED    @ZA02276 02210037
         SPACE 1                                                        02250002
*                                   THIRD BYTE OF IOMFLAGS              02260002
IOMSTIND DS    XL1                  ONE BYTE OF STATUS INDICATORS       02300002
IOMAMUSE EQU   X'80'                IOMB CURRENTLY IN USE               02350002
IOMEOVW  EQU   X'40'                EOV WAITING FOR IOMB                02400002
IOMEOVTS EQU   X'20'                EOV HAS SET IOMLOCK                 02450002
IOMEOVXC EQU   X'10'                END OF VOLUME INDICATOR             02500002
IOMLLOCK EQU   X'08'                LOCAL LOCK HELD                     02510002
IOMSLOC  EQU   X'04'                SALLOC HELD                @Y30SDLC 02520037
IOMSRBM  EQU   X'02'                USER IN SRB MODE           @Y30SDLP 02530037
IOMSR    EQU   X'01'                SUSPEND/RESUME INDICATOR   @Z40GSDT 02540004
IOMCKEY  DS    XL1                  USER KEY SAVED FOR APPENDAGE USE    02550002
IOMPFERR DS    XL1                  RETURN CODE FROM PAGEFIX            02600002
IOMLOCK  DS    XL1                  END OF VOLUME LOCK                  02650002
IOMNMOD  DS    H                    NUMBER OF MODULES TO BE FIXED       02700002
IOMNBUF  DS    H                    NUMBER OF BUFFERS                   02750002
IOMNSEG  DS    H                    NUMBER OF CHANNEL PROGRAM SEGMENTS  02800002
IOMSAVER DS    0CL64                16 WORD SAVE AND WORK AREA          02850002
IOMSAVE0 DS    F                                                        02900002
IOMSAVE1 DS    F                                                        02950002
IOMSAVE2 DS    F                                                        03000002
IOMSAVE3 DS    F                                                        03050002
IOMSAVE4 DS    F                                                        03100002
IOMSAVE5 DS    F                                                        03150002
IOMSAVE6 DS    F                                                        03200002
IOMSAVE7 DS    F                                                        03250002
IOMSAVE8 DS    F                                                        03300002
IOMSAVE9 DS    F                                                        03350002
IOMSAVEA DS    F                                                        03400002
IOMSAVEB DS    F                                                        03450002
IOMSAVEC DS    F                                                        03500002
IOMSAVED DS    F                                                        03550002
IOMSAVEE DS    F                                                        03600002
IOMSAVEF DS    F                                                        03650002
IOMNXT1  DS    F                    POINTER TO NEXT IOMB ON CHAIN       03700002
IOMUFLD  DS    F                    USER FIELD-PTR TO IDAIOMBX FOR RM   03710002
IOMSRBP  DS    F                    ADDRESS OF SUSPENDED RB    @Z40GSDT 03720004
IOMSTCB  DS    F                    TCB FOR SUSPENDED RB       @Z40GSDT 03730004
         MEND                                                           03750002
         EJECT                                                          03800002
* /*      IOMB DECLARATION                                           */ 07000002
* /*                                                                 */ 07050002
*%IOMBPLS: ;                                                            07060002
* /*                                                                 */ 07150002
*     DCL 1 IDAIOMB BASED BDY(WORD),                                    07200002
*           2 IOMBID     CHAR(4),   /* IOMB IDENTIFIER               */ 07250002
*           2 IOMBUFC    PTR(31),   /* FIRST BUFC ADDRESS            */ 07300002
*           2 IOMCPA     PTR(31),   /* 1ST CPA IN CHAIN              */ 07350002
*           2 IOMPLH     PTR(31),   /* PLH ADDRESS                   */ 07400002
*           2 IOMAMB     PTR(31),   /* AMB ADDRESS                   */ 07450002
*           2 IOMIQE     PTR(31),   /* IQE ADDRESS                   */ 07500002
*           2 IOMECBPT   PTR(31),   /* ECB ADDRESS                   */ 07550002
*           2 IOMVSL     PTR(31),   /* VIRTUAL SUBAREA LIST PTR      */ 07600002
*           2 IOMPGAD    PTR(31),   /* ADDR OF CALLER TO GET CONTROL    07650002
*                                      ON COMPLETION OF I/O OPERATION   07660002
*                                      (ZEROED FOR RECORD MGMT)      */ 07670002
*           2 IOMIOSB    PTR(31),   /* IOSB ADDRESS                  */ 07700002
*           2 IOMFLAGS   BIT(24),   /* INTERNAL FLAGS                */ 07750002
*             3 IOMFL    BIT(16),   /* FLAGS TO BE RESET AFTER I/O   */ 07800002
*               4 IOMAPEND BIT(2),  /* APPENDAGE FLAGS               */ 07850002
*                 5 IOMNE  BIT(1),  /* NE APPENDAGE COMPLETED        */ 07900002
*                 5 IOMAE  BIT(1),  /* AE APPENDAGE COMPLETED        */ 07950002
*               4 IOMPURGE BIT(1),  /* PURGE IN PROGRESS             */ 08000002
*               4 *        BIT(1),  /* RESERVED                      */ 08050002
*               4 IOMCBERR BIT(1),  /* CONTROL BLOCK VALIDITY ERROR  */ 08100002
*               4 IOMADERR BIT(1),  /* ERROR CONVERTING VPL TO IDAL  */ 08150002
*               4 IOMPGFIX BIT(1),  /* PAGES FIXED                   */ 08200002
*               4 IOMCSW   BIT(1),  /* CSW ADDRESS NOT VALID         */ 08250002
*               4 IOMDDR   BIT(1),  /* DYNAMIC DEVICE RECONFIGURATION*/ 08300002
*               4 IOMCPRB  BIT(1),  /* PROBLEM STATE CALLER  @ZA09130*/ 08310037
*               4 *        BIT(2),  /* RESERVED              @ZA09130*/ 08315037
*               4 IOMEEXIT BIT(1),  /* END APPENDAGE EXIT    @ZA02276*/ 08320037
*               4 IOMIRBSW BIT(1),  /* ASYNCH PROCESSING SCH @ZA02276*/ 08330037
*               4 *        BIT(2),  /* RESERVED              @ZA02276*/ 08340037
*             3 IOMSTIND   BIT(8),  /* STATUS INDICATORS             */ 08400002
*               4 IOMAMUSE BIT(1),  /* IOMB CURRENTLY IN USE         */ 08450002
*               4 IOMEOVW  BIT(1),  /* EOV WAITING FOR IOMB          */ 08500002
*               4 IOMEOVTS BIT(1),  /* EOV HAS SET IOMLOCK           */ 08550002
*               4 IOMEOVXC BIT(1),  /* END OF VOLUME INDICATOR       */ 08600002
*               4 IOMLLOCK BIT(1),  /* LOCAL LOCK HELD               */ 08610002
*               4 IOMSLOC  BIT(1),  /* SALLOC HELD           @Y30SDLC*/ 08620037
*               4 IOMSRBM  BIT(1),  /* USER IN SRB MODE      @Y30SDLP*/ 08630037
*               4 IOMSR    BIT(1),  /* SUSPEND/RESUME IND    @Z40GSDT*/ 08680004
*           2 IOMCKEY    CHAR(1),   /* USER KEY FOR APPENDAGE USE    */ 08700002
*           2 IOMPFERR   CHAR(1),   /* RETURN CODE FROM PAGE FIX     */ 08750002
*           2 IOMLOCK    CHAR(1),   /* END-OF-VOLUME LOCK            */ 08800002
*           2 IOMNMOD    PTR(16),   /* NUMBER OF MODULES TO BE FIXED */ 08850002
*           2 IOMNBUF    PTR(16),   /* NUMBER OF BUFFERS             */ 08900002
*           2 IOMNSEG    PTR(16),   /* NUMBER OF CHANNEL PGM SEGMENTS*/ 08950002
*           2 IOMSAVER   BDY(WORD), /* 16 WORD SAVE AND WORK AREA    */ 09000002
*             3 IOMSAVE0 PTR(31),                                       09050002
*             3 IOMSAVE1 PTR(31),                                       09100002
*             3 IOMSAVE2 PTR(31),                                       09150002
*             3 IOMSAVE3 PTR(31),                                       09200002
*             3 IOMSAVE4 PTR(31),                                       09250002
*             3 IOMSAVE5 PTR(31),                                       09300002
*             3 IOMSAVE6 PTR(31),                                       09350002
*             3 IOMSAVE7 PTR(31),                                       09400002
*             3 IOMSAVE8 PTR(31),                                       09450002
*             3 IOMSAVE9 PTR(31),                                       09500002
*             3 IOMSAVEA PTR(31),                                       09550002
*             3 IOMSAVEB PTR(31),                                       09600002
*             3 IOMSAVEC PTR(31),                                       09650002
*             3 IOMSAVED PTR(31),                                       09700002
*             3 IOMSAVEE PTR(31),                                       09750002
*             3 IOMSAVEF PTR(31),                                       09800002
*           2 IOMNXT1    PTR(31),   /* POINTER TO NEXT IOMB ON CHAIN */ 09850002
*           2 IOMUFLD    PTR(31),   /* USER FIELD   -                   09860004
*                                      PTR TO IDAIOMBX FOR REC MGMT  */ 09900002
*           2 IOMSRBP    PTR(31),   /* ADDR OF SUSPENDED RB  @Z40GSDT*/ 09950004
*           2 IOMSTCB    PTR(31);   /* TCB FOR SUSPENDED RB  @Z40GSDT*/ 10000004
./  ADD  SSI=33060026,NAME=IDAIOSCN
     /* REGISTER DECLARES */                                            01000000
* /* MACSTAT Y-2 73276/Y02113                                        */ 01150002
   DCL (R0 REG(00), R1 REG(01)) PTR(24) UNRESTRICTED;/* WORK REGISTERS*/02000000
   DCL (RACB REG(02),                   /* PTR TO ACB */                03000000
        RBASE REG(03),                  /* BASE REGISTER */             04000000
        RCORE REG(04))                  /* PTR TO WORK AREA */          05000000
                       PTR(24) RESTRICTED;                              06000000
   DCL ((RAMB,                          /* PTR TO AMB */                07000000
         RES) REG(05),                  /* PTR TO RESIDENT ROUTINE */   08000000
        (RWTG,                          /* PTR TO WTG TABLE */          09000000
         R6) REG(06),                   /* WORK REGISTER */             10000000
        (RPARC,                         /* PTR TO CURRENT ENTRY IN PARM 11000000
                                        LIST */                         12000000
         R7) REG(07),                   /* WORK REGISTER */             13000000
        (RWTGC,                         /* PTR TO CURRENT WTG ENTRY */  14000000
         R8) REG(08),                   /* WORK REGISTER */             15000000
        (RTIOT,                         /* POINTER TO TIOT */           16000000
         R9) REG(09))                   /* WORK REGISTER */             17000000
                 PTR(24) RESTRICTED;    /* RESTRICTED REGISTER POINTERS 18000000
                                         */                             19000000
   DCL ((RUCB,                          /* PTR TO UCB */                20000000
         R10) REG(10),                  /* WORK REGISTER */             21000000
        (RDEB,                          /* PTR TO DEB */                22000000
         R11) REG(11),                  /* WORK REGISTER */             23000000
         R12 REG(12),                   /* WORK REGISTER */             24000000
         R13 REG(13),                   /* WORK REGISTER */             25000000
         RET REG(14),                   /* RETURN REGISTER */           26000000
         (RETCODE,R15)REG(15))          /* RETURN CODE REGISTER */      27000000
               PTR(24) UNRESTRICTED;    /* WORK REGISTERS */            28000000
 @EJECT;                                                                29000000
     /* CONSTANT DECLARES */                                            30000000
   DCL (ON CONSTANT('1'B),              /* INDIC BIT IS SET TO 1 */     31000000
        OFF CONSTANT('0'B)) BIT(1);     /* INDIC BIT IS SET TO 0*/      32000000
   DCL (DWORDLEN CONSTANT(8),           /* BYTE LENGTH OF DWORD */      33000000
        FWORDLEN CONSTANT(4),           /* BYTE LENGTH OF WORD */       34000000
        HWORDLEN CONSTANT(2)) FIXED;    /* BYTE LENGTH OF HWORD */      35000000
   DCL (FIX CONSTANT(0),                                                36000000
       NOFIX CONSTANT(4)) FIXED;                                        37000000
   DCL (EXFGON CONSTANT('0'B),          /* USER EXIT */                 38000000
       EXFGOFF CONSTANT('1'B)) BIT(1);  /* USER EXIT NOT IN PROGRESS */ 39000000
   DCL (OPM CONSTANT(4),                                                40000000
       CLM CONSTANT(8),                                                 41000000
       OPO CONSTANT(12),                                                42000000
       OPP CONSTANT(16),                                                43000000
       VLT CONSTANT(20),                                                44000000
       CLR CONSTANT(24),                                                45000000
       PRE CONSTANT(32),                                                46000000
       DUM CONSTANT(28)) FIXED;                                         47000000
        DCL (MASTPOOL CONSTANT(250),/* SUBPOOL FOR MASTER BLOCK */      48000000
        SRBPOOL CONSTANT(245),       /* SUBPOOL FOR SRB,IOSB @Y021130*/ 48050002
        RDEBPOOL CONSTANT(230),     /* SUBPOOL FOR REAL DEB  @Y021130*/ 49000002
        DDEBPOOL CONSTANT(230),     /* SUBPOOL FOR DUMMY DEB @Y021130*/ 50000002
        FIXDPOOL CONSTANT(245),     /* SUBPOOL FOR FIXED CORE */        51000002
        PROTPOOL CONSTANT(252),     /* SUBPOOL FOR PROT BLKS @Y021130*/ 52000002
        LPMBPOOL CONSTANT(252),         /* SUBPOOL FOR LPMB */          53000002
        EDBPOOL CONSTANT(252),          /* SUBPOOL FOR EDB */           54000002
        CATPOOL CONSTANT(231),    /* CATALOG UNFIXED SUBPOOL @Y021130*/ 54050002
        CATPOOL2 CONSTANT(239),     /* CATALOG FIXED SUBPOOL @Y021130*/ 55000002
        WKPOOL CONSTANT(252),                                           56000000
        AMBLPOOL CONSTANT(252)) FIXED;  /* SUBPOOL FOR AMBL */          57000002
     /*  BASED DECLARES */                                              58000000
   DCL 1 MSTRBLK BASED,                 /* MASTER BLOCK FORMAT */       59000000
     2 MSTRHDR CHAR(16),                                                60000000
       3 MSTRNEXT PTR,                  /*   NEXT MASTER BLOCK */       61000000
       3 MSTRLAST PTR,                  /*   LAST MASTER BLOCK */       62000000
       3 *       FIXED(8),              /*                   @Y021130*/ 62050002
       3 MSTRKEY FIXED(8),              /*  SUBPOOL KEY      @Y021130*/ 62100002
       3 MSTRPOOL FIXED(8),             /*  SUBPOOL                 */  63000002
       3 MSTRCODE FIXED(8),             /*  FLAGS            @Y021130*/ 63050002
       3 MSTRLEN FIXED(31),            /*  LENGTH THIS BLOCK @Y021130*/ 64000002
     2 MSTRCORE CHAR(*);                /* REST OF MASTER BLOCK */      68000000
    DCL 1 ENQPARML BDY(WORD),       /* ENQ/DEQ PARAMETER LIST */        69000000
          2 ENQTCB PTR(31),         /* TCB FOR DIRECTED ENQ/DEQ */      70000000
          2 ENQPROPR,                                                   71000000
            3 EQNOPT1 BIT(8),                                           72000000
              4 ENQEND BIT(1),      /* 1 INDICS END OF LIST */          73000000
              4 ENQNEW BIT(1),      /* 0 INDICS NES FORM OF PARM LIST */74000000
              4 * BIT(5),                                               75000000
            4 ENQDIR BIT(1),        /* 1 INDICS DIRECTED ENQ/DEQ */     76000000
            3 ENQRLEN FIXED(8),     /* RNAME LENGTH */                  77000000
            3 ENQOPT2 BIT(8),       /* OPTION BYTE 2 */                 78000000
              4 ENQSHR BIT(1),      /* ENQ FOR SHARED CONTROL */        79000000
            3 ENQRETC FIXED(8),     /* ENQ/DEQ RETURN CODE */           80000000
            3 ENQQNADR PTR(31),     /* QNAME ADDRESS */                 81000000
          3 ENQRNADR PTR(31),       /* RNAME ADDRESS */                 82000000
          3 ENQUCADR PTR(31);       /* UCB ADDR FOR RESERVE */          83000000
    DCL 1 RNAME CHAR(8),            /* RNAME FOR ENQ/DEQ */             84000000
          2 * CHAR(3),              /* CI NBR FOR DS (DSN) */           85000000
        2 * CHAR(4),                /* ACB ADDR FOR CATALOG */          86000000
          2 * CHAR(1);              /* CONTROL CHAR - O=OUTPUT */       87000000
                                    /*                I=NOT OUTPUT */   88000000
                                    /*                B=BUSY */         89000000
./  ADD  SSI=51940280,NAME=IDAIRD
* /*                                                                 */ 03050002
* /* MACCOMP Y-2 SC1DE/SJD61                                         */ 03100002
* /* MACSTAT Y-2 73103/Y02113                                        */ 03150002
* /*                                                                 */ 03200002
*        DCL 1 IDAIXH BASED BDY(WORD),  /* INDEX RECORD HEADER       */ 03250002
*              2 IXHLL        CHAR(2),  /*                           */ 06000000
*              2 IXHFLPLN     CHAR(1),  /* LENGTH OF F + L + POINTER */ 09000000
*              2 IXHPTLS      CHAR(1),  /* POINTER LENGTH SPEC.      */ 12000000
*                                       /*   X'01'  1 BYTE POINTER   */ 15000000
*                                       /*   X'03'  2 BYTE POINTER   */ 18000000
*                                       /*   X'07'  3 BYTE POINTER   */ 21000000
*              2 IXHBRBA      PTR(32),  /*   BASE POINTER            */ 24000000
*              2 IXHHP        PTR(32),  /*   HORIZONTAL PTR          */ 27000000
*              2 IXHXX        PTR(32),  /*                           */ 30000000
*              2 IXHLV        PTR(8),   /* LEVEL NUMBER              */ 33000000
*              2 IXHFLGS      CHAR(1),  /* CONTROL INFORMATION FLAGS */ 36000000
                                        /*  ALL BITS RESERVED        */ 39000000
                                        /*  CURRENTLY SET TO ZERO    */ 42000000
*              2 IXHFSO       PTR(15),  /*   OFFSET TO INSERT SPACE  */ 45000000
*              2 IXHLEO       PTR(15),  /*   OFFSET TO LAST ENTRY    */ 48000000
*              2 IXHSEO       PTR(15);  /*   OFFSET TO FIRST SECT ENT*/ 51000000
*        DCL 1 IDAIBFLP  BASED,         /*  IX F,L,PTR 1 BYTE F,L    */ 54000000
*              2 IBFLPF       PTR(8),   /*  F -FRONT COMPRESSION     */ 57000000
*              2 IBFLPL       PTR(8),   /*  L -LENGTH OF KEY CHARS   */ 60000000
*              2 IBFLP3       CHAR(3),  /*    3 BYTE PTR             */ 63000000
*                3 IBFLP2     CHAR(2),  /*    2 BYTE PTR             */ 66000000
*                  4 IBFLP1   CHAR(1);  /*    1 BYTE PTR             */ 69000000
*        DCL 1 IDASELL BASED,           /*   SECTION ENTRY LL        */ 72000000
*              2 IXSELL       CHAR(2);  /*                           */ 75000000
*        DCL 1 IDAIXK  BASED,           /*                           */ 78000000
*              2 IXKEY        CHAR(1);  /*   ENTRY KEY CHARACTERS    */ 81000000
./  ADD  SSI=51900105,NAME=IDAIXSPL
*/********************************************************************/ 00050004
*/*                                                                  */ 00100004
*/*   MACRO NAME = IDAIXSPL                                          */ 00150004
*/*                                                                  */ 00200004
*/*   DESCRIPTIVE NAME = INDEX SEARCH PARAMETER LIST                 */ 00250004
*/*                                                                  */ 00300004
*/*   FUNCTION = USED TO SEARCH A VSAM INDEX RECORD FOR A PARTICULAR */ 00350004
*/*              KEY                                                 */ 00360004
*/*                                                                  */ 00400004
*/*   INCLUDED MACROS = NONE                                         */ 00550004
*/*                                                                  */ 00600004
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00650004
*/*                                                                  */ 00700004
*/*   CREATED BY = VSAM RECORD MANAGEMENT                            */ 00750004
*/*                                                                  */ 00800004
*/*   STATUS = VS/1 RELEASE 4  (CHANGE FLAG @X04SVXX)                */ 00850004
*/*                                                                  */ 00900004
*/*   DATE OF LAST CHANGE = 9 AUG 74                                 */ 00950004
*/*                                                                  */ 01000004
*/********************************************************************/ 01050004
*     DCL  1 IDAIXSPL  BASED,           /* INDEX SEARCH PARM LIST    */ 06000000
*            2 IXSSTRBA  PTR(32),       /* START SEARCH RBA          */ 08000000
*            2 IXSBUFC   PTR(31),       /* PTR TO INDEX BUFC         */ 10000000
*            2 IXSARG    PTR(31),       /* PTR TO SEARCH ARGUMENT    */ 12000000
*            2 IXSTLN    PTR(8),        /* TERMINATE LEVEL NO.       */ 14000000
*            2 IXSILN    PTR(8),        /* INITIAL LEVEL NO.         */ 16000000
*            2 IXSKLEN   PTR(15),       /* KEY LENGTH        @X04SVLC*/ 18050004
*            2 IXSNOSR   PTR(8),        /* NBR CIS -1 IN RCD @X04SVLC*/ 18100004
*            2 IXSBFLG   CHAR(1),       /* SCIB FLAGS                */ 20000000
*             3 IXSSSRH  BIT(1),        /* SECTION SEARCH            */ 22000000
              3 IXSLELV  BIT(1),        /* LAST ENTRY IN LEVEL       */ 24000000
              3 *        BIT(6),        /* UNUSED                    */ 26000000
*            2 IXSEKON   PTR(8),        /* LENGTH OF F+L+POINTER     */ 28000000
*            2 IXSPEC    PTR(8),        /* COUNT ON PREVIOUS ENTRY   */ 30000000
*            2 IXSHEP    PTR(31),       /* POINTER TO ENTRY FOUND    */ 32000000
*            2 IXSSEP    PTR(31),       /* POINTER TO SECT.          */ 34000000
*            2 IXSLEP    PTR(31);       /* POINTER TO LOW ENTRY IN   */ 36000000
*                                       /*  THE SECTION              */ 38000000
./  ADD  SSI=51900087,NAME=IDALPMB
*/********************************************************************/ 00050004
*/*                                                                  */ 00100004
*/*   MACRO NAME = IDALPMB                                           */ 00150004
*/*                                                                  */ 00200004
*/*   DESCRIPTIVE NAME = LOGICAL TO PHYSICAL MAPPING BLOCK           */ 00250004
*/*                                                                  */ 00300004
*/*   FUNCTION = USED TO MAP THE PHYSICAL ATTRIBUTES OF A VSAM DATA  */ 00350004
*/*                SET                                               */ 00352004
*/*                                                                  */ 00400004
*/*   CONTROL BLOCK STRUCTURE = POINTED TO BY THE IDAEDB             */ 00450004
*/*                                                                  */ 00500004
*/*   INCLUDED MACROS = NONE                                         */ 00550004
*/*                                                                  */ 00600004
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00650004
*/*                                                                  */ 00700004
*/*   CREATED BY = VSAM OPEN                                         */ 00750004
*/*                                                                  */ 00800004
*/*   STATUS = VS/1 RELEASE 4  (CHANGE FLAG @X04SVXX)                */ 00850004
*/*                                                                  */ 00900004
*/*   DATE OF LAST CHANGE = 13 AUG 74                                */ 00950004
*/*                                                                  */ 01000004
*/********************************************************************/ 01050004
*  DCL 1 IDALPMB BASED,                    /* LOGICAL TO PHYSICAL  */   02000000
*                                          /* MAPPING BLOCK        */   04000000
*        2 LPMBID CHAR(1),                 /* LPMB IDENTIFER       */   06000000
*        2 LPMBFLGS BIT(8),                /* FLAG BYTE ONE        */   08000000
*          3 LPMBRPS BIT(1),               /* ON FOR RPS DEVICE    */   10000000
*          3 LPMREPL BIT(1),               /* REPLICATED RECORDS   */   12000000
*          3 LPMSS   BIT(1),               /* SEQUENCE SET W/DATA  */   14000000
*          3 LPMBTOFL BIT(1),              /* MVM TRK OFLOW  @Y30DSJH*/ 14002004
*          3 LPMBSSTH BIT(1),              /* ON--SET SECTOR TABLE      14002400
*                                             IS HERE        @X04SVMR*/ 14002800
*          3 *        BIT(3),              /* UNUSED         @Y30DSJH*/ 14004000
*        2 LPMBLEN FIXED(15),              /* LENGTH OF LPMB       */   16000000
*        2 LPMAUSZ FIXED(31),              /* BYTES PER ALLOC UNIT */   18000000
*        2 LPMBPTRK FIXED(31),             /* BYTES PER TRACK      */   20000000
*        2 LPMBLKSZ FIXED(31),             /* PHYSICAL BLOCKSIZE   */   22000000
*        2 LPMTRKAU FIXED(15),             /* TRACKS PER ALLOC UNIT*/   24000000
*        2 LPMTPC FIXED(15),               /* TRACKS PER CYLINDER  */   26000000
*        2 LPMBLKTR FIXED(15),             /* BLOCKS PER TRACK     */   28000000
*        2 * FIXED(15),                    /* NOT USED       @X04SVLC*/ 30000004
*        2 LPMBEXT PTR(31),                /* RESERVED FOR PTR TO LPMB  30050004
*                                             EXTENSION WHEN DEFINED    30100000
*                                                            @X04SVLC*/ 30110004
*        2 LPMBSST CHAR(*);                /* SET SECTOR TAB @X04SVLC*/ 30200004
./  ADD  SSI=42900120,NAME=IDAOCECN
 /********************************************************************/ 00010003
 /*                                                                  */ 00020003
 /*   MACRO NAME = IDAOCECN                                          */ 00030003
 /*                                                                  */ 00040003
 /*   DESCRIPTIVE NAME = CONSTANTS USED BY OPEN/CLOSE/EOV MODULES.   */ 00042003
 /*                                                                  */ 00044003
 /*   FUNCTION = THESE ARE SOME CONSTANTS AND REGISTERS COMMONLY     */ 00046003
 /*              USED BY THE OPEN/CLOSE/EOV MODULES.                 */ 00048003
 /*                                                                  */ 00048403
 /*   CONTROL BLOCK STRUCTURE = NONE                                 */ 00048803
 /*                                                                  */ 00049203
 /*   INCLUDED MACROS = NONE                                         */ 00049603
 /*                                                                  */ 00049703
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00049803
 /*                                                                  */ 00049903
 /*   CREATED BY: N/A                                                */ 00066603
 /*                                                                  */ 00076603
 /*   STATUS = VS1 RELEASE 4, VS2 RELEASE 3.                         */ 00078603
 /*                                                                  */ 00080603
 /*   DATE OF LAST CHANGE = 2 AUGUST 74                              */ 00082603
 /*                                                                  */ 00083003
 /********************************************************************/ 00083103
     /* REGISTER DECLARES */                                            00083303
   DCL (R0 REG(00), R1 REG(01)) PTR(31) UNRESTRICTED;/* WORK REGISTERS*/00100004
   DCL (RACB REG(02),                   /* PTR TO ACB */                00150004
        RBASEA REG(03),                 /* BASE REGISTER */             00200004
       (RBASEB,R12) REG(12),            /* BASE REGISTER */             00250004
        R13 REG(13),                    /* PTR TO SAVE AREA */          00300004
       (RCORE,R4) REG(04))              /* PTR TO OPEN/CLOSE WKAREA */  00350004
                       PTR(31) RESTRICTED;                              00400004
   DCL (R5 REG(05),                    /* WORK REGISTER */              00450004
         R6 REG(06),                   /* WORK REGISTER */              00500004
         R7 REG(07),                   /* WORK REGISTER */              00550004
         R8 REG(08),                   /* WORK REGISTER */              00600004
        (RTIOT,                         /* POINTER TO TIOT */           00650004
         R9) REG(09),                  /* WORK REGISTER */              00700004
        (RUCB,                          /* PTR TO UCB */                00750004
         R10) REG(10),                  /* WORK REGISTER */             00800004
        (RDEB,                          /* PTR TO DEB */                00850004
         R11) REG(11),                  /* WORK REGISTER */             00900004
         RET REG(14),                   /* RETURN REGISTER */           00950004
         (RETCODE,R15)REG(15))          /* RETURN CODE REGISTER */      01000004
               PTR(31) UNRESTRICTED;    /* WORK REGISTERS */            01050004
     /* CONSTANT DECLARES */                                            01100004
   DCL (ON CONSTANT('1'B),              /* INDIC BIT IS SET TO 1 */     01200004
        OFF CONSTANT('0'B)) BIT(1);     /* INDIC BIT IS SET TO 0*/      01250004
   DCL (DWORDLEN CONSTANT(8),           /* BYTE LENGTH OF DWORD */      01300004
        FWORDLEN CONSTANT(4),           /* BYTE LENGTH OF WORD */       01350004
        HWORDLEN CONSTANT(2)) FIXED;    /* BYTE LENGTH OF HWORD */      01400004
   DCL (FIX CONSTANT(0),                                                01450004
       NOFIX CONSTANT(4)) FIXED;                                        01500004
   DCL (EXFGON CONSTANT('0'B),          /* USER EXIT */                 01550004
       EXFGOFF CONSTANT('1'B)) BIT(1);  /* USER EXIT NOT IN PROGRESS */ 01600004
   DCL (OP1 CONSTANT(4),                                                01650004
       CLM CONSTANT(8),                                                 01700004
       OPO CONSTANT(12),                                                01750004
       OPP CONSTANT(16),                                                01800004
       VLT CONSTANT(20),                                                01850004
       CLR CONSTANT(24),                                                01900004
       DUM CONSTANT(28),                                                01910004
       PRE CONSTANT(32),                                                01950004
       RCM CONSTANT(36),                                                02000004
       CLD CONSTANT(40),                                                02050004
       OP2 CONSTANT(44),                                                02100004
       CLC CONSTANT(48)) FIXED;                                         02150004
 %IF ENV='VS2'  %THEN                                                   02160004
    %GOTO IDAOCE1;                                                      02170004
   DCL PAGE CONSTANT(2048) FIXED(31);   /* VS1 PAGE SIZE    */          02180004
   DCL (RDEBPOOL CONSTANT(234),     /* SUBPOOL FOR REAL DEB */          02200004
        DDEBPOOL CONSTANT(252),         /* SUBPOOL FOR DUMMY DEB */     02250004
        FIXDPOOL CONSTANT(234),     /* SUBPOOL FOR FIXED CORE */        02300004
        FIXSTRPL CONSTANT(234),     /* SUBPOOL FOR FIXED STRING BLK */  02350004
        FIXUPGPL CONSTANT(234),     /* SUBPOOL FOR FIXED UPGRADE STR */ 02360004
        CATPOOL CONSTANT(241),        /* CATALOG BLOCK SUBPOOL  */      02400004
        PRTSPPL CONSTANT(252),     /* SUBPOOL FOR PROTECTED SPHERE BLK*/02400404
 %GOTO IDAOCE2;                                                         02402004
 %IDAOCE1: ;                                                            02404004
   DCL PAGE CONSTANT(4096) FIXED(31);   /* VS2 PAGE SIZE    */          02406004
   DCL (RDEBPOOL CONSTANT(230),     /* SUBPOOL FOR REAL DEB */          02410004
        DDEBPOOL CONSTANT(230),     /* SUBPOOL FOR DUMMY DEB */         02420004
        FIXDPOOL CONSTANT(245),     /* SUBPOOL FOR FIXED CORE */        02430004
        FIXSTRPL CONSTANT(245),     /* SUBPOOL FOR FIXED STRING BLK */  02440004
        FIXUPGPL CONSTANT(245),     /* SUBPOOL FOR FIXED UPGRADE STR */ 02442004
        CATPOOL CONSTANT(231),      /* CATALOG BLOCK SUBPOOL */         02442404
        FCATPOOL CONSTANT(231),     /* FETCH PROTECTED CATALOG BLOCK */ 02444004
        SCATPOOL CONSTANT(241),     /* STORE PROTECTED CATALOG BLOCK */ 02444404
        PRTSPPL CONSTANT(241),     /* SUBPOOL FOR PROTECTED SPHERE BLK*/02444804
        GSRSPOOL CONSTANT(241),     /* SUBPOOL FOR GSR CONTROL BLKS. */ 02445204
 %IDAOCE2: ;                                                            02446004
        WKPOOL CONSTANT(252),        /* SUBPOOL FOR GENERAL USE */      02450004
        EDBPOOL CONSTANT(252),          /* SUBPOOL FOR EDB */           02460004
        VATPOOL CONSTANT(252),     /* SUBPOOL FOR VAT            */     02500004
        SPBLKPL CONSTANT(250),     /* SUBPOOL FOR SPHERE BLK     */     02550004
        VMTPOOL CONSTANT(252),      /* SUBPOOL FOR VMT           */     02650004
        BIBPOOL CONSTANT(252),      /* SUBPOOL FOR BIB           */     02700004
        USERPOOL CONSTANT(250),     /* SUBPOOL FOR USER BLK       */    02750004
        PRTBLKPL CONSTANT(252),     /* PROTECTED USER BLK        */     02800004
        STRBLKPL CONSTANT(250),     /* SUBPOOL FOR STRING BLOCK   */    02850004
        UPSTRPL CONSTANT(250),      /* SUBPOOL FOR UPGRADE STR BLK */   02950004
        BFRPOOL CONSTANT(250),      /* SUBPOOL FOR BUFFER BLOCK  */     03050004
        UPGBFRPL CONSTANT(250),     /* SUBPOOL FOR UPGRADE BFR BLK */   03100004
        CMBPOOL CONSTANT(252),      /* SUBPOOL FOR CMB           */     03150004
        WSHDPL CONSTANT(250),     /* SUBPOOL FOR WSHD */                03160004
        AMBLPOOL CONSTANT(252)) FIXED;  /* SUBPOOL FOR AMBL */          03200004
./  ADD  SSI=60930075,NAME=IDAOPWRK
 /********************************************************************/ 00002004
 /*                                                                  */ 00004004
 /*   MACRO NAME = IDAOPWRK                                          */ 00006004
 /*                                                                  */ 00008004
 /*   DESCRIPTIVE NAME = VSAM OPEN ACB WORK AREA.                    */ 00010004
 /*                                                                  */ 00012004
 /*   FUNCTION = THIS MACRO DEFINES THE STRUCTURE OF THE OPEN VSAM   */ 00014004
 /*              ACB WORK AREA. THE ACB WORK AREA IS THE COMMON WORK */ 00016004
 /*              AREA USED BY VSAM OPEN ROUTINES.                    */ 00018004
 /*                                                                  */ 00020004
 /*   CONTROL BLOCK STRUCTURE = THE ACB WORK AREA IS POINTED TO BY   */ 00022004
 /*                             REGISTER 4 (RCORE).                  */ 00024004
 /*                                                                  */ 00026004
 /*   INCLUDED MACROS = NONE                                         */ 00028004
 /*                                                                  */ 00030004
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00032004
 /*                                                                  */ 00034004
 /*   CREATED BY: VSAM OPEN MODULE IDA0192A.                         */ 00036004
 /*                                                                  */ 00038004
 /*   STATUS = VS2 RELEASE 4                                 @Z40ESSR*/ 00040004
 /*                                                                  */ 00042004
 /*   DATE OF LAST CHANGE = 7/22/75                          @Z40WSRL*/ 00044004
 /*                                                                  */ 00046004
 /********************************************************************/ 00048004
    DECLARE                                                             00050003
      1 IDAOPWRK BASED(RCORE),      /* ACB WORK AREA                 */ 10800003
        3 OPWSUBPL FIXED(8),        /* SUBPOOL OF WORK AREA          */ 11700003
        3 OPWLENTH FIXED(24),       /* LENGTH OF WORK AREA           */ 12600003
        3 OPWID CHAR(8),            /* BLOCK IDENTIFIER              */ 13500003
        3 OPWFLGS1 BIT(8),          /* SPHERE FLAGS FOR SYSTEM DATA     14400003
                                       SETS                          */ 14402004
          5 OPWCAT   BIT(1),        /* CATALOG OPEN                  */ 15300003
          5 OPWSCRA  BIT(1),        /* SYS CATLG RECOVERY AREA OPEN  */ 17100003
          5 OPWVVIC  BIT(1),        /* VVIC DATA SET                 */ 17100403
            6 OPWSDS BIT(1),        /* IND SYSTEM DATA SET   @Z40WSRL*/ 17100804
          5 *        BIT(5),        /* RESERVED FOR SYSTEM DATA SETS */ 17102003
        3 OPWFLGS2 BIT(8),          /* SPHERE FLAGS NON-SYSTEM          18004003
                                       DATA SETS                     */ 18006004
          5 OPWUCRA  BIT(1),        /* USER CATLG RECOVERY AREA OPEN */ 18008003
          5 OPWIXDT  BIT(1),        /* INDEX BEING OPENED AS AN ESDS */ 18010003
          5 OPWAIXDT BIT(1),        /* AIX OPENED FOR END USE        */ 18012003
          5 OPWDUMMY BIT(1),        /* OPEN DUMMY DATA SET           */ 18012403
          5 *        BIT(4),        /* RESERVED                      */ 18014003
        3 OPWFLGS3 BIT(8),          /* INDICATORS FOR IDA0192F       */ 18016003
          5 OPWDAVAT BIT(1),        /* DUMMY AMBL ADDED TO VAT       */ 18018003
          5 OPWPUPGR BIT(1),        /* PATH ALSO IN UPGRADE SET      */ 18020003
          5 OPWUPGOP BIT(1),        /* UPGRADE SET OPENED            */ 18022003
          5 OPWNOWRK BIT(1),        /* MOD WORK AREA DOES NOT EXIST  */ 18022403
          5 OPWRSTRT BIT(1),        /* RESTART IN PROGRESS           */ 18022803
          5 *        BIT(3),        /* UNUSED                        */ 18024003
        3 OPWFLGS4 BIT(8),          /* AUTHORIZATION LEVEL           */ 20702003
          5 OPWFULL  BIT(1),        /* FULL ACCESS                   */ 20704003
          5 OPWCINV  BIT(1),        /* CONTROL INTERVAL ACCESS       */ 20706003
          5 OPWUPD   BIT(1),        /* UPDATE ACCESS                 */ 20708003
          5 *        BIT(5),        /* NOT USED                      */ 20710003
        3 OPWBIB PTR(31),           /* PTR TO BIB                    */ 20712003
        3 OPWCOMWA PTR(31),         /* PTR TO OPEN COMMON WORK AREA  */ 20712403
        3 OPWIDF,                   /* CLUSTER IDENTIFIER            */ 20714003
          5 OPWCACB PTR(31),        /* ADDRESS OF CATALOG ACB        */ 20716003
          5 OPWDCI PTR(24) BDY(WORD), /* CINV NO. OF DATA COMP       */ 20718003
          5 OPWQ BIT(8),            /* QUALIFIER FOR TYPE OF OPEN    */ 20720003
            7 OPWDDC  BIT(1),       /* CONNECT BY DD NAME            */ 20722003
            7 OPWGSR  BIT(1),       /* OPENED FOR GSR                */ 20724003
            7 OPWLSR  BIT(1),       /* OPENED FOR LSR                */ 20724403
            7 OPWFSTP BIT(1),       /* OPENED FOR ICI                */ 20724803
            7 OPWUBF  BIT(1),       /* OPENED FOR USER BUFFERING     */ 20725203
            7 OPWKSDS BIT(1),       /* OPENED AS KSDS                */ 20725603
            7 OPWESDS BIT(1),       /* OPENED AS ESDS                */ 20725703
            7 OPWDFR  BIT(1),       /* OPENED WITH DEFER WRT OPTION  */ 20727003
        3 OPWVSMPL,                 /* O/C/EOV VIRTUAL STORAGE          20727503
                                       MANAGER (VSM) PARAMETER LIST  */ 20728003
          5 OPWVMANC PTR(31),       /* PTR TO ANCHOR BLOCK           */ 20730003
          5 OPWVMSP  FIXED(8),      /* SUBPOOL FOR DIRECT REQUEST    */ 20732003
          5 OPWVMLNG FIXED(24),     /* AMOUNT OF STORAGE REQUESTED   */ 20736003
          5 OPWVMADR PTR(31),       /* ADDR OF GOTTEN STORAGE, ZERO     20738003
                                       IF STORAGE NOT OBTAINED       */ 20740003
          5 OPWVMTYP FIXED(8),      /* REQUEST TYPE                  */ 20740403
          5 OPWVMFLG BIT(8),        /* INDICATOR FLAGS               */ 20742003
            7 OPWVMPGB BIT(1),      /* GET STORAGE ON A PAGE BNDY    */ 20744003
            7 OPWVMKE5 BIT(1),      /* GET STORAGE IN KEY 5          */ 20746003
            7 OPWVMDXK BIT(1),      /* GET STORAGE IN GSR KEY           20748004
                                       NOTE - IF NOT KEY 5 & NOT GSR,   20750004
                                       GET CORE IN KEY 0     @Z40ESSR*/ 20752004
            7 OPWVMSRB BIT(1),      /* IND THIS IS A SPECIAL REQ BLK */ 20754403
            7 OPWVMNSL BIT(1),      /* DO NOT BLD A CSL FOR THIS REQ */ 20754803
            7 OPWVMTCB BIT(1),      /* CORE IS TO BE OWNED BY JOBSTEP   20755203
                                       TCB                           */ 20756003
          5 * CHAR(2),              /* NOT USED                      */ 20758003
        3 OPWVSMWA,                 /* O/C/EOV VSM WORK AREA         */ 20760003
          5 OPWVANCP PTR(31),       /* PTR TO ADDR OF FIRST HEB HDR     20762003
                                       ELEM ASSOCIATED WITH THIS REQ */ 20764003
          5 OPWVTBLP PTR(31),       /* PTR TO REQUEST TABLE USED BY     20766003
                                       THE GETSPACE ROUTINE          */ 20768003
          5 OPWVCSLP PTR(31),       /* USED TO SCAN FOR A CSL ENTRY  */ 20768403
          5 OPWVCSLE PTR(31),       /* POINTER TO CSL ENTRY          */ 20770003
          5 OPWVHDRE PTR(31),       /* POINTER TO HDR ELEMENT        */ 20772003
          5 OPWVR13  PTR(31),       /* SAVE AREA ADDRESS SAVE AREA   */ 20772403
          5 OPWVSAVE(4) FIXED(31),  /* SAVE AREA FOR IDA0192M        */ 20774003
          5 OPWVGSPL(3),            /* GET SPACE PARAMETER LISTS     */ 20776003
            7 OPWVGSSP FIXED(8),    /* SUBPOOL NUMBER                */ 20778003
            7 OPWVGETL FIXED(24),   /* LENGTH OF GOTTEN CORE         */ 20780003
            7 OPWVGSPT PTR(31),     /* POINTER TO GOTTEN CORE        */ 20782003
            7 OPWVGFLG BIT(8),      /* FLAGS FOR GET SPACE REQUEST -    20784003
                                       SEE OPWVMFLG ABOVE FOR A         20786003
                                       DESCRIPTION OF BIT SETTINGS   */ 20788003
            7 OPWVREQL FIXED(24),   /* LENGTH OF REQUEST             */ 20798003
          5 OPWVANCS PTR(31),       /* BIB ANCHOR PTR FOR SPHERE        20802403
                                       BLOCK REQUESTS                */ 20802803
          5 OPWVLSAV,               /* SAVE AREA FOR SETLOCK         */ 20803203
            7 OPWVRG12 PTR(31),     /* SAVE AREA FOR REG 12          */ 20803603
            7 OPWVRG13 PTR(31),     /* SAVE AREA FOR REG 13          */ 20803703
          5 OPWVFMPL,               /* FREEMAIN PARAMETER LIST       */ 20804003
            7 OPWVFMSP FIXED(8),    /* FREEMAIN SUBPOOL NUMBER       */ 20806003
            7 OPWVFMLN FIXED(24),   /* FREEMAIN LENGTH               */ 20808003
            7 OPWVFMPT PTR(31),     /* FREEMAIN POINTER              */ 20810003
        3 OPWSAVE,                  /* PTR'S TO SAVE LISTS           */ 20816003
          5 OPWCSL PTR(31),         /* PTR TO CORE SAVE LIST         */ 20818003
          5 OPWESL PTR(31),         /* PTR TO ENQ SAVE LIST          */ 20820003
          5 OPWPSL PTR(31),         /* PTR TO PAGE FIX SAVE LIST     */ 20822003
          5 OPWDSL PTR(31),         /* PTR TO DEB SAVE LIST          */ 20824003
          5 OPWSSL PTR(31),         /* PTR TO SWAP SAVE LIST         */ 20826003
        3 OPWCURPT PTR(31),         /* PTR TO CLUSTER BEING PROCESSED*/ 21600003
        3 OPWXAMBL PTR(31),         /* PTR TO CURRENT AMBL           */ 23400003
        3 OPWCAMBL PTR(31),         /* PTR TO AMBL CONNECTING TO     */ 24300003
        3 OPWBCON PTR(31),          /* PTR TO BASE AMBL CONNECTING TO*/ 25200003
        3 OPWPCON PTR(31),          /* PTR TO PATH AMBL CONNECTING TO*/ 27000003
        3 OPWBAMBL PTR(31),         /* PTR TO AMBL FOR BASE          */ 28800003
        3 OPWPAMBL PTR(31),         /* PTR TO AMBL FOR PATH          */ 29700003
        3 OPWCRA CHAR(6),           /* CRA VOLUME SERIAL NUMBER      */ 29702003
        3 * CHAR(1),                /* NOT USED                      */ 29704003
        3 OPWCATTR CHAR(1),         /* MVM CLUSTER ATTR FLAG         */ 29754003
          5 * BIT(6),               /* NOT USED              @Z40WSRL*/ 29804004
          5 OPWSWSP BIT(1),         /* SWAP SPACE            @Z40WSRL*/ 29814004
          5 OPWPSDS BIT(1),         /* PAGE SPACE DATA SET           */ 29854003
        3 OPWUPT PTR(31),           /* PTR TO UPT                    */ 30600403
        3 OPWUACB PTR(31),          /* PTR TO USER ACB               */ 31500003
        3 OPWWRKPT PTR(31),         /* PTR TO CURRENT AMBWK AREA     */ 36050003
        3 OPWDTWRK PTR(31),         /* PTR TO DATA AMB WORK AREA     */ 36900003
        3 OPWIXWRK PTR(31),         /* PTR TO INDEX AMB WORK AREA    */ 37800003
        3 OPWCTCB PTR(31),          /* PTR TO CURRENT TCB            */ 38700003
        3 OPWJSTCB PTR(31),         /* PTR TO JOB STEP TCB           */ 39600003
        3 OPWTIOT PTR(31),          /* PTR TO TIOT ENTRY             */ 39602003
        3 OPWBUFND FIXED(31),       /* NUMBER OF DATA BUFFERS        */ 39652003
        3 OPWBUFNI FIXED(31),       /* NUMBER OF INDEX BUFFERS       */ 39654003
        3 OPWCSTRN FIXED(8),        /* CURRENT STRING NUMBER         */ 40500003
        3 OPWSTRNO FIXED(8),        /* PATH STRING NO. IF PATH          41400003
                                       PROCESSING OTHERWISE BASE     */ 42300004
        3 OPWBSTRN FIXED(8),        /* BASE STRING NO. IF PATH          43200003
                                       PROCESSING                    */ 44100004
        3 * CHAR(1),                /* NOT USED                      */ 44150003
        3 OPWDACB CHAR(52),         /* DUMMY ACB FOR OPENING BASE    */ 69300003
        3 OPWSFI CHAR(12),          /* SUB-FUNCTION INFORMATION      */ 69350003
        3 OPWERMAP CHAR(256),       /* PPCODE TO ACBERFLG MAP        */ 69352003
        3 OPWSAVEA PTR(31),         /* SAVE AREA FOR RETURN ADDRESS  */ 69354003
        3 OPWBSECL,                 /* BASE CLUSTER INFORMATION      */ 70200003
          5 * BIT(8),               /* RESERVED FOR FLAGS            */ 71100003
          5 OPWBDTCI PTR(24),       /* BASE DATA CINV NUMBER         */ 72000003
          5 * BIT(8),               /* RESERVED FOR FLAGS            */ 72900003
          5 OPWBIXCI PTR(24),       /* BASE INDEX CINV NUMBER        */ 73800003
        3 OPWPTAIX,                 /* PATH AIX INFORMATION          */ 74700003
          5 * BIT(8),               /* RESERVED FOR FLAGS            */ 75600003
          5 OPWPDTCI PTR(24),       /* PATH AIX DATA CINV NUMBER     */ 76500003
          5 * BIT(8),               /* RESERVED FOR FLAGS            */ 77400003
          5 OPWPIXCI PTR(24),       /* PATH AIX INDEX CINV NUMBER    */ 78300003
        3 OPWNOUPG FIXED(8),        /* NO. OF UPGRADE AIX'S          */ 79200003
        3 OPW2YPLH PTR(24),         /* PLHNXT PTR FOR 2Y/2Z.         */ 80100003
        3 OPWUPAIX (*),             /* UPGRADE AIX INFORMATION       */ 81000003
          5 * BIT(8),               /* RESERVED FOR FLAGS            */ 81900003
          5 OPWUDTCI PTR(24),       /* UPGRADE AIX DATA CINV NUMBER  */ 82800003
          5 * BIT(8),               /* RESERVED FOR FLAGS            */ 83700003
          5 OPWUIXCI PTR(24);       /* UPGRADE AIX INDEX CINV NUMBER */ 84600003
                                                                        84602003
    /*****************************************************************/ 84604003
    /*  MAP FOR REFERENCING CURRENT CLUSTER INFORMATION              */ 84606003
    /*****************************************************************/ 84608003
    DECLARE                                                             85500003
      1 OPWCURCL BASED(OPWCURPT),   /* CLUSTER INFORMATION MAP       */ 86400003
        2 OPWCFLG1 BIT(8),          /* CLUSTER FLAGS SET BY SPHERE      87300003
                                       OPEN                          */ 88200004
          3 OPWBASE BIT(1),         /* OPEN BASE CLUSTER             */ 89100003
          3 OPWPATH BIT(1),         /* OPEN PATH AIX                 */ 90000003
          3 OPWUPGR BIT(1),         /* OPEN UPGRADE AIX              */ 90900003
          3 OPWSVWRK BIT(1),        /* DON'T FREE AMB WORK AREAS     */ 91800003
          3 OPWPRTBL BIT(1),        /* PARTIAL CONTROL BLOCK BUILD   */ 93600003
        2 OPWCDTCI PTR(24),         /* CINV NO. OF DATA COMPONENT    */ 94500003
        2 OPWFLG2 BIT(8),           /* CLUSTER FLAGS SET BY CLUSTER     95400003
                                       OPEN                          */ 96300004
          3 OPWDOPEN BIT(1),        /* OPEN INDR ON IN CTLG FOR DATA */ 97200003
          3 OPWMODWK BIT(1),        /* MODULE WORK AREA EXISTS       */ 98100003
          3 OPWEMPUP BIT(1),        /* IND EMPTY UPGRADE DS          */ 98150003
          3 OPWERR2B BIT(1),        /* IND TERMINATING ERROR IN 192B */ 98200003
          3 OPWIOPEN BIT(1),        /* OPEN INDR ON IN CTLG FOR INDX */ 98250003
        2 OPWCIXCI PTR(24);         /* CINV NO. OF INDEX COMPONENT   */ 99000003
                                                                        99002004
    /*****************************************************************/ 99004003
    /*  THE FOLLOWING CONSTANTS DEFINE THE REQUEST TYPE CODES USED IN*/ 99006003
    /*  THE VIRTUAL STORAGE MANAGER PARAMETER LIST TO CALL IDA0192M. */ 99008003
    /*  CODES 0 THROUGH 127 ARE RESERVED FOR REQUESTING SPACE IN     */ 99010003
    /*  CLUSTER RELATED BLOCKS AS THESE CODES ARE USED TO INDEX THE  */ 99012003
    /*  CORRESPONDING HEB HEADER ELEMENT ENTRY IN THE CMB.  CODES    */ 99014003
    /*  128 THROUGH 255 ARE USED FOR ALL OTHER TYPE REQUESTS.        */ 99016003
    /*****************************************************************/ 99018003
    DECLARE                         /* REQUEST TYPE CODES            */ 99020004
      USERBLK  FIXED(8) CONSTANT(1), /* USER BLOCK                   */ 99022004
      PROTBLK  FIXED(8) CONSTANT(2), /* PROTECT BLOCK                */ 99024004
      STRBLK   FIXED(8) CONSTANT(3), /* NON-PROTECTED STRING BLOCK   */ 99026003
      UPSTRBLK FIXED(8) CONSTANT(4), /* NON-PROT UPGRADE STRING BLK  */ 99028003
      FXSTRBLK FIXED(8) CONSTANT(5), /* GLOBAL FIXED STRING BLOCK    */ 99030003
      FUSTRBLK FIXED(8) CONSTANT(6), /* GLBL UPGRADE FIXED STRING BLK*/ 99032003
      BFRBLK   FIXED(8) CONSTANT(7), /* BUFFER BLOCK                 */ 99034004
      UPBFRBLK FIXED(8) CONSTANT(8), /* UPGRADE BUFFER BLOCK         */ 99036004
      DEBBLK   FIXED(8) CONSTANT(9), /* DEB BLOCK                    */ 99038004
      EDBBLK   FIXED(8) CONSTANT(10), /* EDB BLOCK                   */ 99040004
      PRSTRBLK FIXED(8) CONSTANT(11), /* PROTECTED STRING BLK        */ 99040403
      PRUSTRBK FIXED(8) CONSTANT(12), /* PROT UPGR STRING BLK        */ 99040803
      FIXEDBLK FIXED(8) CONSTANT(13), /* FIXED BLOCK         @ZA04718*/ 99041603
      SPHBLK   FIXED(8) CONSTANT(128), /* SPHERE BLOCK               */ 99059603
      PRSPHBLK FIXED(8) CONSTANT(129), /* PROTECTED SPHERE BLOCK     */ 99065403
      FREECLSP FIXED(8) CONSTANT(130), /* FREE EXCESS SPACE IN CLUSTER  99071203
                                          RELATED BLOCKS             */ 99077003
      FREESPH  FIXED(8) CONSTANT(131), /* FREE EXCESS SPACE IN SPHERE   99082803
                                          BLOCKS                     */ 99088603
      ERRCLNUP FIXED(8) CONSTANT(132), /* PERFORM ERROR CLEAN UP     */ 99094403
      DIRCTREQ FIXED(8) CONSTANT(133), /* DIRECT REQUEST FOR CORE    */ 99100203
      PSAMBLBK FIXED(8) CONSTANT(134), /* PROTECTED AMBL BLOCK       */ 99106003
      FREESREQ FIXED(8) CONSTANT(135); /* FREE SPECIAL REQ BLKS      */ 99156003
./  ADD  SSI=51900096,NAME=IDAPATCH
*%IDAPATCH:  MACRO;                                                     03000000
*  ANS ('GEN DATA; ');                                                  06000000
*  ANS (MACLIST(1)    ) SKIP COL(1);                                    09000000
*  ANS ('CSECT ') COL(10);                                              12000000
*  ANS ('PATCH     DC    ((*-@PSTART)/20)X''00''') SKIP COL(1);         15000000
*  ANS ('DEFINE 5 PERCENT PATCH AREA') COL(41);                         18000000
*  ANS ('ORG   PATCH') SKIP COL(10);                                    21000000
*  ANS ('RESET LOCATION COUNTER') COL(41);                              24000000
*  ANS ('DC    50X''00''') SKIP COL(10);                                27000000
*  ANS ('PROVIDE A 50 BYTE MINIMUM') COL(41);                           30000000
*  ANS ('ORG   ,') SKIP COL(10);                                        33000000
*  ANS ('RESET LOCATION TO HIGHER VALUE') COL(41);                      36000000
*  ANS ('@DATD    DSECT') SKIP COL(1);                                  39000000
*  ANS ('GO BACK TO DATA DSECT') COL(41);                               42000000
*  ANS ('@ENDGEN') SKIP COL(1);                                         45000000
*%END IDAPATCH;                                                         48000000
*%GOTO PATCH1;                                                          51000000
         MACRO                                                          54000000
         IDAPATCH                                                       57000000
PATCH    DC    ((*-@PSTART)/20)X'00'    DEFINE 5 PERCENT PATCH AREA     60000000
         ORG   PATCH                    RESET FOR OVERLAY               63000000
         DC    50X'00'                  PROVIDE A 50 BYTE MINIMUM       66000000
         ORG   ,                        RESET COUNTER TO HIGHER VALUE   69000000
         MEND                                                           72000000
*%PATCH: ;                                                              75000000
./  ADD  SSI=32000651,NAME=IDAPCTT
*/********************************************************************/ 00050002
*/*                                                                  */ 00100002
*/* MODULE-NAME = IDAPCTT                                            */ 00150002
*/*                                                                  */ 00200002
*/* DESCRIPTIVE-NAME = PCTT (PRIVATE CATALOG TERMINATION TABLE)      */ 00250002
*/*                                                                  */ 00300002
*/* COPYRIGHT = NONE                                                 */ 00350002
*/*                                                                  */ 00400002
*/* STATUS = VERSION 1 - JULY 9, 1973                                */ 00450002
*/*                                                                  */ 00500002
*/* FUNCTION = THE PRIVATE CATALOG TERMINATION TABLE, PCTT,          */ 00550002
*/*   IS USED TO RECORD THE OPEN STATUS OF PRIVATE CATALOGS.         */ 00600002
*/*   ONE OF ITS PRIMARY PURPOSES IS TO ENABLE PROPER CLEANUP        */ 00650002
*/*   AND FREEING OF CONTROL BLOCKS DURING TASK TERMINATION.         */ 00700002
*/*   (MOST OF THE CATALOG CONTROL BLOCKS ARE IN GLOBAL STORAGE.)    */ 00750002
*/*   THERE IS ONE PCTT PER MEMORY. THE PCTT IS LOCATED FROM THE     */ 00800002
*/*   ADDRESS SPACE CONTROL BLOCK, ASCB, FIELD - ASCBPCTT.           */ 00850002
*/*                                                                  */ 00900002
*/* NOTES = THE LABEL 'PCTT' IS DECLARED BASED ON ASCBPCTT.          */ 00950002
*@LISTPUSH;                                                             01000002
*@LISTOFF;                                                              01050002
*/*                                                                  */ 01100002
*/*    DEPENDENCIES = N/A                                            */ 01150002
*/*                                                                  */ 01200002
*/*    RESTRICTIONS = N/A                                            */ 01250002
*/*                                                                  */ 01300002
*/*    REGISTER-CONVENTIONS = N/A                                    */ 01350002
*/*                                                                  */ 01400002
*/*    PATCH-LABEL = N/A                                             */ 01450002
*/*                                                                  */ 01500002
*/* MODULE-TYPE = MAPPING MACRO                                      */ 01550002
*/*                                                                  */ 01600002
*/*    PROCESSOR = PLS2                                              */ 01650002
*/*                                                                  */ 01700002
*/*    MODULE-SIZE = N/A                                             */ 01750002
*/*                                                                  */ 01800002
*/*    ATTRIBUTES = N/A                                              */ 01850002
*/*                                                                  */ 01900002
*/* ENTRY-POINT = N/A                                                */ 01950002
*/*                                                                  */ 02000002
*/*    PURPOSE = N/A                                                 */ 02050002
*/*                                                                  */ 02100002
*/*    LINKAGE = N/A                                                 */ 02150002
*/*                                                                  */ 02200002
*/* INPUT = N/A                                                      */ 02250002
*/*                                                                  */ 02300002
*/* OUTPUT = N/A                                                     */ 02350002
*/*                                                                  */ 02400002
*/* EXIT-NORMAL = N/A                                                */ 02450002
*/*                                                                  */ 02500002
*/* EXIT-ERROR = N/A                                                 */ 02550002
*/*                                                                  */ 02600002
*/* EXTERNAL-REFERENCES = NONE                                       */ 02650002
*/*                                                                  */ 02700002
*/*    ROUTINES = N/A                                                */ 02750002
*/*                                                                  */ 02800002
*/*    DATA-AREAS = N/A                                              */ 02850002
*/*                                                                  */ 02900002
*/*    CONTROL-BLOCKS = N/A                                          */ 02950002
*/*                                                                  */ 03000002
*/* TABLES = N/A                                                     */ 03050002
*/*                                                                  */ 03100002
*/* MACROS = N/A                                                     */ 03150002
*@LISTPOP;                                                              03200002
*/*                                                                  */ 03250002
*/* CHANGE-ACTIVITY = NONE                                           */ 03300002
*/*                                                                  */ 03350002
*/*                                                                  */ 03400002
 /* PCTT                                                             */ 03450002
 /*                                                                  */ 03500002
 DCL 1 PCTT BASED(ASCBPCTT),                                            03550002
       2 PCTTHDR,                   /* PCTT HEADER                   */ 03600002
         3 PCTTID  CHAR(4),         /* PCTT ID - PCTT-               */ 03650002
         3 PCTTENBR PTR(31),        /* NBR OF SLOTS FOR ACB ADDRS    */ 03700002
         3 PCTTCURR PTR(31),        /* NBR USED SLOTS FOR ACB ADDRS  */ 03750002
         3 * PTR(31),               /* RESERVED                      */ 03800002
       2 PCTTENTR(4),               /* ACB ENTRIES                   */ 03850002
         3 PCTACBEN,                /* ACB ENTRY                     */ 03900002
           4 PCTFLGS1 CHAR(1),      /* FLAG BYTE                     */ 03950002
             5 PCTTCL BIT(1),       /* TEMPORARILY CLOSED            */ 04000002
           4 * CHAR(1),             /* RESERVED                      */ 04050002
           4 PCTTOPCT FIXED(15),    /* OPEN COUNT                    */ 04100002
           4 PCTTACB  PTR(31);      /* ACB ADDRESS SLOT              */ 04150002
./  ADD  SSI=81650198,NAME=IDAPDFCD
 /********************************************************************/ 00210004
 /*                                                                  */ 00220004
 /*   MACRO NAME = IDAPDFCD                                          */ 00230004
 /*                                                                  */ 00240004
 /*   DESCRIPTIVE NAME = VSAM OPEN/CLOSE/EOV PROBLEM DETERMINATION   */ 00242004
 /*                      MESSAGE FUNCTION CODES.                     */ 00244004
 /*                                                                  */ 00246004
 /*   FUNCTION = TO IDENTIFY THE FUNCTION BEING PERFORMED WHEN THE   */ 00248004
 /*              PROBLEM OCCURED.  THIS CODE IS INCLUDED IN THE      */ 00248404
 /*              PROBLEM DETERMINATION MESSAGE.                      */ 00248804
 /*                                                                  */ 00249204
 /*   CONTROL BLOCK STRUCTURE = NONE                                 */ 00249604
 /*                                                                  */ 00249704
 /*   INCLUDED MACROS = NONE                                         */ 00249804
 /*                                                                  */ 00249904
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00266604
 /*                                                                  */ 00276604
 /*   STATUS = VS1 RELEASE 4, VS2 RELEASE 3.                         */ 00278604
 /*                                                                  */ 00280604
 /*   DATE OF LAST CHANGE = 06/06/78                         @ZA33246*/ 00282637
 /*                                                                  */ 00283004
 /********************************************************************/ 00283104
    DCL                                                                 00283304
     (PDF1 CONSTANT(1),             /* IDA0192C--INITIALIZATION      */ 00300004
      PDF2 CONSTANT(2),             /* IDA0A92C--OBTAIN ASSOCIATED      00350004
                                       DATA SET CI NUMBERS           */ 00400004
      PDF3 CONSTANT(3),             /* IDA0192C--OBTAIN DATA SET        00450004
                                       ATTRIBUTES                    */ 00500004
      PDF4 CONSTANT(4),             /* IDA0192C--GET VOL INFO        */ 00550004
      PDF5 CONSTANT(5),             /* IDA0192C--UPDATE OPEN            00600004
                                       INDICATOR IN CATALOG          */ 00650004
      PDF6 CONSTANT(6),             /* IDA0192C--UPDATE CATALOG         00700004
                                       FOR CLOSE                     */ 00750004
      PDF7 CONSTANT(7),             /* IDA0192C--GET VOL TIME STAMP  */ 00800004
      PDF8 CONSTANT(8),             /* IDA0192C--RECORD MANAGEMENT      00850004
                                       CATALOG UPDATE                */ 00860004
      PDF9 CONSTANT(9),             /* IDA0192C--UPDATE PREFORMAT       00900004
                                       INDICATOR IN CATALOG          */ 00950004
      PDF10 CONSTANT(10),           /* IDA0192C--RETRIEVE 44 BYTE       00960004
                                       CLUSTER NAME                  */ 00970004
      PDF11 CONSTANT(11),           /* IDA0192C--RETRIEVE 44 BYTE       00980004
                                       ELEMENTARY DATA SET NAME      */ 00990004
      PDF20 CONSTANT(20),           /* IDA0192V--INITIALIZATION      */ 01000004
      PDF21 CONSTANT(21),           /* IDA0192V--CHECK VOL TIMESTAMP */ 01050004
      PDF22 CONSTANT(22),           /* IDA0192V--HANDLE MESSAGES     */ 01100004
      PDF23 CONSTANT(23),           /* IDA0192V--MOUNT VOLUME        */ 01150004
      PDF24 CONSTANT(24),           /* IDA0192V--MSS JES3    @ZA33246*/ 01170037
      PDF30 CONSTANT(30),           /* IDA0192S--INITIALIZATION      */ 01200004
      PDF31 CONSTANT(31),           /* IDA0192S--BUILD SMF RECORD    */ 01250004
      PDF40 CONSTANT(40),           /* IDA0192D--INITIALIZATION      */ 01260004
      PDF41 CONSTANT(41),           /* IDA0192D--BUILD UCB LIST      */ 01270004
      PDF42 CONSTANT(42),           /* IDA0192D--BUILD                  01280004
                                       ACQUIRE/RELINQUISH LIST       */ 01290004
      PDF43 CONSTANT(43))           /* IDA0192D--ACQUIRE/RELINQUISH     01292004
                                       EXTENTS                       */ 01294004
        FIXED(8);                                                       01296004
    DCL                                                                 01298004
     (PDF50 CONSTANT(50),           /* IDA0192Z--INITIALIZATION      */ 01300004
      PDF51 CONSTANT(51),           /* IDA0192Z--DETERMINE NUMBER       01350004
                                       OF BUFFERS NEEDED             */ 01400004
      PDF52 CONSTANT(52),           /* IDA0192Z--BUILD BUFFERS       */ 01450004
      PDF53 CONSTANT(53),           /* IDA0192Z--BUILD CNTRL BLOCKS  */ 01500004
      PDF54 CONSTANT(54),           /* IDA0192Y--BUILD STRING BLOCKS */ 01502037
      PDF60 CONSTANT(60),           /* IDA0192B--MOD INITIALIZATION  */ 01510004
      PDF61 CONSTANT(61),           /* IDA0192B--LOCATE DATA SET        01520004
                                                 ATTRIBUTES AND         01530004
                                                 VALIDITY CHECK      */ 01540004
      PDF62 CONSTANT(62),           /* IDA0192B--VOLUME PROCESSING   */ 01542004
      PDF63 CONSTANT(63),           /* IDA0192B--PREFORMAT EXTENT    */ 01544004
      PDF84 CONSTANT(84),           /* IDA0192B--SUBTASK SHARING     */ 01546004
      PDF70 CONSTANT(70),           /* IDA0192W--INITIALIZATION      */ 01550004
      PDF71 CONSTANT(71),           /* IDA0192W--BUILD CPA           */ 01600004
      PDF80 CONSTANT(80),           /* IFG0193A--READ JFCB           */ 01650004
      PDF81 CONSTANT(81),           /* IDA0192A--INITITALIZATION     */ 01700004
      PDF82 CONSTANT(82),           /* IDA0192A--VERIFY ACB          */ 01750004
      PDF83 CONSTANT(83),           /* IDA0192F--FIX CONTROL BLOCKS  */ 01800004
      PDF85 CONSTANT(85),           /* IDA0192F--MNT AND VERIFY VOLS */ 01900004
      PDF87 CONSTANT(87),           /* IDA0192A--CONNECT BASE        */ 01952004
      PDF88 CONSTANT(88),           /* IDA0192F--OPEN BASE CLUSTER   */ 01954004
      PDF89 CONSTANT(89),           /* IDA0192F--OPEN UPGRADE AIX    */ 01956004
      PDF90 CONSTANT(90),           /* IDA0192F--OPEN PATH AIX       */ 01958004
      PDF93 CONSTANT(93),           /* IDA0192A--BUILD DUMMY DEB     */ 01958104
      PDF95 CONSTANT(95),           /* IDA0192A--OPEN TERMINATION    */ 01958404
      PDF96 CONSTANT(96))           /* IDA0192A--OPEN ERROR CLEANUP  */ 01958804
        FIXED(8);                                                       01960004
    DCL                                                                 01970004
     (PDF100 CONSTANT(100),         /* IFG0200V--READ JFCB           */ 02000004
      PDF101 CONSTANT(101),         /* IDA0200T--INITIALIZATION      */ 02050004
      PDF103 CONSTANT(103),         /* IDA0200T--COMPLETE I/O        */ 02100004
      PDF104 CONSTANT(104),         /* IDA0200T--CLOSE PATH          */ 02110004
      PDF105 CONSTANT(105),         /* IDA0200T--CLOSE BASE          */ 02120004
      PDF106 CONSTANT(106),         /* IDA0200T--CLOSE SPHERE        */ 02130004
      PDF107 CONSTANT(107),         /* IDA0200T--CLOSE UPGRADE       */ 02140004
      PDF108 CONSTANT(108),         /* IDA0200T--VMT PROCESSING      */ 02142004
      PDF110 CONSTANT(110),         /* IDA0200B--INITIALIZATION      */ 02144004
      PDF111 CONSTANT(111),         /* IDA0200B--VALIDITY CHECK      */ 02146004
      PDF112 CONSTANT(112),         /* IDA0200B--SMF PROCESSING      */ 02148004
      PDF113 CONSTANT(113),         /* IDA0200B--UPDATE CATALOG      */ 02148404
      PDF114 CONSTANT(114),         /* IDA0200B--RELEASE CONTROL BLK */ 02148804
      PDF115 CONSTANT(115),         /* IDA0200B--WRITE BUFFER        */ 02148937
      PDF148 CONSTANT(148),         /* IDA0200T--FORCE DLVRP.@Z30SSMD*/ 02149037
      PDF149 CONSTANT(149))         /* IDAOCEA2--FORCE DLVRP.@Z30SSMD*/ 02149137
        FIXED(8);                                                       02149204
    DCL                                                                 02149604
     (PDF150 CONSTANT(150),         /* IGC0002C--READ JFCB           */ 02150004
      PDF151 CONSTANT(151),         /* IDA0231T--INITIALIZATION      */ 02200004
      PDF153 CONSTANT(153),         /* IDA0231T--COMPLETE I/O        */ 02250004
      PDF154 CONSTANT(154),         /* IDA0231T--TCLOSE PATH         */ 02260004
      PDF155 CONSTANT(155),         /* IDA0231T--TCLOSE BASE         */ 02270004
      PDF156 CONSTANT(156),         /* IDA0231T--TCLOSE UPGRADE      */ 02280004
      PDF157 CONSTANT(157),         /* IDA0231B--INITIALIZATION      */ 02290004
      PDF158 CONSTANT(158),         /* IDA0231B--VALIDITY CHECK      */ 02296004
      PDF159 CONSTANT(159),         /* IDA0231B--UPDATE CATALOG      */ 02298004
      PDF160 CONSTANT(160),         /* IDA0231B--SMF PROCESSING      */ 02298404
      PDF161 CONSTANT(161))         /* IDA0231B--WRITE BUFFER        */ 02298504
        FIXED(8);                                                       02298804
    DCL                                                                 02299204
     (PDF200 CONSTANT(200),         /* IFG0551F--READ JFCB           */ 02300004
      PDF201 CONSTANT(201),         /* IDA0557A--INITIALIZATION      */ 02350004
      PDF202 CONSTANT(202),         /* IDA0557A--LOCATE AND MNT VOL  */ 02400004
      PDF203 CONSTANT(203),         /* IDA0557A--ALLOCATE SPACE      */ 02450004
      PDF204 CONSTANT(204),         /* IDA0557A--SWITCH VOLUMES      */ 02500004
      PDF205 CONSTANT(205),         /* IDA0557A--BLD CONTROL BLOCKS  */ 02550004
      PDF206 CONSTANT(206),         /* IDA0557A--UPDATE SMF RECORD   */ 02600004
      PDF207 CONSTANT(207),         /* IDA0557A--PREFORMAT EXTENT    */ 02650004
      PDF208 CONSTANT(208),         /* IDA0557A--RECORD MANAGEMENT      02700004
                                       CATALOG UPDATE                */ 02750004
      PDF209 CONSTANT(209))         /* IDA0557A--RESET CNTRL BLOCKS  */ 02800004
        FIXED(8);                                                       02850004
./  ADD  SSI=42900501,NAME=IDAPDPRM
*% GO TO VS1;                                                           01000003
         MACRO                                                          02000003
         IDAPDPRM                                                       03000003
*% VS1: ;                                                               03010003
*/********************************************************************/ 03050003
*/*                                                                  */ 03100003
*/*   MACRO NAME = IDAPDPRM                                          */ 03150003
*/*                                                                  */ 03200003
*/*   DESCRIPTIVE NAME = PROBLEM DETERMINATION PARAMETER LIST.       */ 03250003
*/*                                                                  */ 03300003
*/*   FUNCTION = CONTAINS INFORMATIONS USED BY OPEN/CLOSE/EOV MODULES*/ 03350003
*/*              TO GENERATE THE PROBLEM DETERMINATION MESSAGES.     */ 03400003
*/*                                                                  */ 03450003
*/*   CONTROL BLOCK STRUCTURE = NONE                                 */ 03500003
*/*                                                                  */ 03550003
*/*   INCLUDED MACROS = NONE                                         */ 03600003
*/*                                                                  */ 03650003
*/*   METHOD OF ACCESS = PL/S - RESPECIFY IDAPDPRM BASED.            */ 03700003
*/*                                                                  */ 03750003
*/*   CREATED BY: N/A                                                */ 03800003
*/*                                                                  */ 03850003
*/*   STATUS = VS1 RELEASE 4   (CHANGE FLAG @X04SVXX)                */ 03900003
*/*            VS2 RELEASE 3   (CHANGE FLAG @Y30DSXX)                */ 03950003
*/*            VS2 RELEASE 3  ICR (CHANGE FLAG @Z30SSXX)             */ 03960003
*/*                                                                  */ 04000003
*/*   DATE OF LAST CHANGE = 04 OCTOBER 74                    @Z30SSMD*/ 04050000
*/*                                                                  */ 04100003
*/********************************************************************/ 04150003
*% GO TO VS1A;                                                          04200003
IDAPDPRM DSECT                          VSAM PD PARAMETER LIST          09000003
PDPCALL  DS    CL1                      CALLER IDENTIFICATION CODE      10000003
PDPCODE  DS    CL1                      INTERNAL PD CODE                11000003
PDPFUNC  DS    CL1                      FUNCTION CODE                   12000003
PDPSFC   DS    CL1                      SUB-FUNCTION RET CODE  @X04SVRP 13000003
PDPACB   DS    F                        ADDR OF USER ACB                14000003
PDPUCB   DS    F                        ADDR OF UCB                     15000003
PDPTIOT  DS    F                        ADDR OF TIOT ENTRY FOR DD NAME  16000003
PDPVLSER DS    F                        ADDR OF VOL SER NUMBER          17000003
PDPCLSNM DS    F                        ADDR OF 44 BYTE CLUSTER NAME    18000003
PDPDSN   DS    F                        ADDR OF 44 BYTE DS NAME         19000003
PDPCTACB DS    F                        ADDR OF CATALOG ACB             20000003
PDPKEY   DS    CL1                      KEY SAVE AREA FOR MVM  @Y30DSJH 20100003
PDPDSTYP DS    CL1                      DATA SET TYPE          @X04SVRL 20200003
PDPMSGFL DS    CL1                      MSG AREA FLAG          @X04SVRL 20300003
         DS    CL1                      UNUSED                 @X04SVRL 20400003
PDPSFI   DS    F                        ADDR OF EXTENDED SUB-FUNCTION   20500003
*                                       INFORMATION            @X04SVRP 20600003
PDPLNGTH EQU   *-IDAPDPRM               LENGTH OF PARAMETER LIST        21000003
* CALLER IDENTIFICATION CODES                                           22000003
PDPOPEN  EQU   0                        OPEN                            23000003
PDPCLOSE EQU   4                        CLOSE                           24000003
PDPEOV   EQU   8                        END-OF-VOLUME                   25000003
PDPTCLOS EQU   12                       TCLOSE                          26000003
* DATA SET IDENTIFICATION CODE                                 @X04SVRL 26100003
PDPNONM  EQU   0                        NO DATA SET NAME       @Z30SSMD 26150000
PDPDDNM  EQU   1                        DD DATA SET NAME       @Z30SSMD 26160000
PDPBASE  EQU   2                        BASE DATA SET          @Z30SSMD 26200000
PDPPATH  EQU   3                        PATH DATA SET          @Z30SSMD 26300000
PDPUPGR  EQU   4                        UPGRADE DATA SET       @Z30SSMD 26400000
* MESSAGE AREA FLAG                                            @X04SVRL 26500003
PDPNOTFC EQU   X'80'                    ON IND NOT FIRST CALL  @X04SVRL 26600003
PDPSPACE EQU   X'40'                    ON IND NO MORE SPACE   @X04SVRL 26700003
PDPNOTRC EQU   X'20'                    ON IND SUPRESS TRACE   @Z30SSMD 26750003
PDPNOMSG EQU   X'10'                    ON IND SUPRESS MSGAREA @Z30SSMD 26800003
         MEND                                                           27000003
*% VS1A: ;                                                              28000003
*   DCL 1 IDAPDPRM BDY(WORD) BASED,    /* VSAM PD PARAMETER LIST     */ 30000003
*         2 PDPCALL FIXED(8),          /* CALLER IDENTIFICATION      */ 31000003
*         2 PDPCODE  FIXED(8),         /* INTERNAL PD CODE           */ 32000003
*         2 PDPFUNC FIXED(8),          /* FUNCTION CODE              */ 33000003
*         2 PDPSFC FIXED(8),           /* SUB-FUNCTION CODE  @X04SVRP*/ 33500003
*         2 PDPACB PTR(31),            /* ADDR OF USER ACB           */ 35000003
*         2 PDPUCB PTR(31),            /* ADDR OF UCB                */ 36000003
*         2 PDPTIOT,                   /* ADDR OF TIOT ENTRY FOR        37000003
*                                         DD NAME                    */ 38000003
*         2 PDPVLSER PTR(31),          /* ADDR OF VOL SER NUMBER     */ 39000003
*         2 PDPCLSNM PTR(31),          /* ADDR OF 44 BYTE CLUSTER       40000003
*                                         NAME                       */ 41000003
*         2 PDPDSN   PTR(31),          /* ADDR OF 44 BYTE DS NAME    */ 42000003
*         2 PDPCTACB PTR(31),          /* ADDR OF CATALOG ACB        */ 43000003
*         2 PDPKEY   FIXED(8),         /* KEY SAVE FOR MVM   @Y30DSJH*/ 43100003
*         2 PDPDSTYP CHAR(1),          /* DATA SET TYPE      @X04SVRL*/ 43200003
*         2 PDPMSGFL CHAR(1),          /* MSG AREA FLAG      @X04SVRL*/ 43300003
*           3 PDPNOTFC BIT(1),         /* IND NOT FIRST CALL @X04SVRL*/ 43400003
*           3 PDPSPACE BIT(1),         /* IND NO MORE SPACE  @X04SVRL*/ 43500003
*           3 PDPNOTRC BIT(1),         /* IF ON THEN SUPRESS THE        43550003
*                                         GTF TRACE.VS2 ONLY.@Z30SSMD*/ 43560003
*           3 PDPNOMSG BIT(1),         /* IF ON THEN SUPRESS MSG  AREA  43570003
*                                         SUPPORT. VS2 ONLY. @Z30SSMD*/ 43580003
*         2 *        CHAR(1),          /* UNUSED             @X04SVRL*/ 43600003
*         2 PDPSFI PTR(31);            /* ADDR OF EXTENDED SUB-FUNCTION 43700003
*                                         INFORMATION        @X04SVRP*/ 43800003
*   /* CALLER IDENTIFICATION CODES                                   */ 44000003
*   DCL (PDPOPEN  CONSTANT(0),         /* OPEN                       */ 45000003
*        PDPCLOSE CONSTANT(4),         /* CLOSE                      */ 46000003
*        PDPEOV   CONSTANT(8),         /* END-OF-VOLUME              */ 47000003
*        PDPTCLOS CONSTANT(12))        /* TCLOSE                     */ 48000003
*          FIXED(8);                                                    49000003
*   /* DATA SET IDENTIFICATION CODES                         @X04SVRL*/ 52000003
*   DCL (PDPNONM  CONSTANT(0),         /* NO DATA SET NAME   @Z30SSMD*/ 55000000
*        PDPDDNM  CONSTANT(1),         /* DD NAME DATA SET   @Z30SSMD*/ 55050000
*        PDPBASE  CONSTANT(2),         /* BASE DATA SET      @Z30SSMD*/ 55100000
*        PDPPATH  CONSTANT(3),         /* PATH DATA SET      @Z30SSMD*/ 58000000
*        PDPUPGR  CONSTANT(4))         /* UPGRADE DATA SET   @Z30SSMD*/ 61000000
*          FIXED(8);                                                    64000003
./  ADD  SSI=31180049,NAME=IDAPFMT
* /*                                                                 */ 03050002
* /* MACCOMP Y-2 SC1DE/SJD61                                         */ 03100002
* /* MACSTAT Y-2 73103/Y02113                                        */ 03150002
* /*                                                                 */ 03200002
         MACRO                                                          03250002
&NAME    IDAPFMT  &RPL=,&TYPE=                                          06000000
         AIF   ('&RPL' NE '').OKY                                       09000000
         IHBERMAC 24                                                    12000000
         MEXIT                                                          15000000
.OKY     ANOP                                                           18000000
&NAME    DS    0H                                                       21000000
         AIF   ('&RPL'(1,1) EQ '(').RPLR                                24000000
         LA    1,&RPL                   LOAD RPL ADDRESS                27000000
         AGO   .RPLSET                                                  30000000
.RPLR    AIF   ('&RPL' EQ '(1)').RPLSET                                 33000000
         LR    1,&RPL(1)                LOAD RPL ADDRESS INTO REG. 1    36000000
.RPLSET  ANOP                                                           39000000
         AIF   ('&TYPE' EQ 'INDEX').INDEX                               42000000
         LA    0,8                      INDICATE A DATA PREFORMAT       45000000
         AGO   .TYPESET                                                 48000000
.INDEX   ANOP                                                           51000000
         LA    0,9                      INDICATE AN INDEX PREFORMAT     54000000
.TYPESET L     15,24(1)                 LOAD ACB ADDRESS FROM RPL       57000000
         L     15,8(15)                 LOAD VSAM INTERFACE RTN ADDR    60000000
         BALR  14,15                    LINK TO INTERFACE ROUTINE       63000000
         MEND                                                           66000000
./  ADD  SSI=81920314,NAME=IDAPLH
*/********************************************************************/ 00050037
*/*                                                                  */ 00100037
*/*   MACRO NAME = IDAPLH                                            */ 00150037
*/*                                                                  */ 00200037
*/*   DESCRIPTIVE NAME = VSAM PLACE HOLDER                           */ 00250004
*/*                                                                  */ 00300037
*/*   FUNCTION = THIS MACRO CONTAINS:                                */ 00350037
*/*              IDAPLHDR = PLACE HOLDER HEADER - CONTAINS THE       */ 00360037
*/*               NUMBER OF PLACE HOLDERS AND STATISTICS             */ 00370037
*/*              IDAPLH = CONTAINS POSITION INFORMATION              */ 00380037
*/*              PLHEXTEN = PLH EXTENSION PRESENT WHEN LSR OR GSR    */ 00390037
*/*               OPTIONS ARE IN EFFECT                              */ 00392037
*/*              PLHKEY = CONTAINS THE CURRENT KEY                   */ 00394037
*/*               THIS MACRO ALSO CONTAINS VARIOUS DECLARES FOR      */ 00396004
*/*               JOURNALING                                         */ 00398004
*/*                                                                  */ 00400037
*/*   CONTROL BLOCK STRUCTURE = THE IDAPLHDR IS POINTED TO BY THE    */ 00450037
*/*              IDAAMB. THE FIRST IDAPLH IS ADJACENT TO THE         */ 00460037
*/*              IDAPLHDR. SUBSEQUENT IDAPLHS ARE POINTED TO BY      */ 00470037
*/*              PLHCHAIN.                                           */ 00480037
*/*                                                                  */ 00500037
*/*   INCLUDED MACROS = NONE                                         */ 00550037
*/*                                                                  */ 00600037
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00650037
*/*                                                                  */ 00700037
*/*   CREATED BY = VSAM OPEN                                         */ 00750037
*/*                                                                  */ 00800037
*/*   STATUS = VS/2 RELEASE 4.1  (CHANGE FLAG @Z40GSXX)              */ 00850004
*/*                                                                  */ 00900037
*/*   DATE OF LAST CHANGE = 15 AUGUST 75                             */ 00950004
*/*                         3 JAN 77                          ZA14811*/ 00956037
*/*                         02 FEB 77               @XA16338,@ZA14830*/ 00970037
*/*                         04 APR 78                        @ZA32757*/ 00980037
*/*                                                                  */ 01000037
*/********************************************************************/ 01050037
*  DCL  1 IDAPLHDR BASED,                  /* LEVEL 1 DECLARE      */   09600037
*         2 PLHID CHAR(1),                 /* PLH ID '30'X         */   10000037
*         2 PLHCNT PTR(8),                 /* NUMBER OF PLH ENTRIES*/   10400037
*         2 PLHELTH PTR(15),               /* LENGTH OF EACH ENTRY */   10800037
*         2 PLHDRREQ FIXED(31),     /* DEFER REQUEST COUNT   @X04SVLC*/ 10810037
*         2 PLHDRMAX FIXED(15),     /* MAX NBR PLH IN CONCURRENT USE    10830037
*                                                            @X04SVLC*/ 10840037
*         2 PLHDRCUR FIXED(15),     /* CURRENT NBR OF ACTIVE PLHS       10842037
*                                                            @X04SVLC*/ 10844037
*         2 PLHIOSDQ PTR(31);       /* I/O SUPPORT DEFERRAL QUEUE       10850037
*                                      HEADER                @X04SVLC*/ 10860037
*/********************************************************************/ 10870037
*/* VSAM PLACE HOLDER                                                */ 10910037
*/********************************************************************/ 10960037
*  DCL  1 IDAPLH BASED,                    /* ENTRY DEFINITION     */   11200037
*         2 PLHAVL CHAR(1),                /* 0 IF ENTRY AVAILABLE */   11600037
*         2 PLHATV CHAR(1),                /* 0 IF NO ACTIVE REQ   */   12000037
*         2 PLHFLG1 BIT(8),                /* PROCESS FLAGS--BYTE 1*/   12400037
*           3 PLHEOVW BIT(1),              /* EOV WAITING          */   12800037
*           3 PLHENDRQ BIT(1),             /* ON IF ENDREQ ISSUED  */   13200037
*           3 PLHASKBF BIT(1),             /* LESS THAN MAX BFRS   */   13600037
*           3 PLHSSR BIT(1),               /* SEQ SET REQ          */   14000037
*           3 PLHRDEXC BIT(1),             /* PLH IN READ EXCL MODE*/   14400037
*           3 PLHASYRQ BIT(1),             /* IRB EXECUTION NEEDED */   14800037
*           3 PLHDRPND BIT(1),             /* DEFERRED REQ PENDING */   15200037
*           3 PLHSR BIT(1),           /* SUSPEND/RESUME PROCESSING IN   15600004
*                                        PLACE OF WAIT/POST @Z40GSDT*/  15650004
*         2 PLHFLG2 BIT(8),                /* PROCESS FLAGS--BYTE 2*/   16000037
*           3 PLHUPD BIT(1),               /* LAST REQUEST GET UPD */   16400037
*           3 PLHSQINS BIT(1),             /* SEQ INSERT MODE      */   16800037
*           3 PLHKEYMD BIT(1),             /* KEYED MODE             */ 17200037
*           3 PLHADDTE BIT(1),             /* ADD TO END PROCESSING*/   17600037
*           3 PLHKRE   BIT(1),             /* END OF KEY RANGE     */   18000037
*           3 PLHCIINS BIT(1),             /* CI SPLIT INSERT      */   18400037
*           3 PLHSVADV BIT(1),             /* SAVE PLHNOADV--SCANDATA*/ 18800037
*           3 PLHIWAIT BIT(1),             /* IDAWAIT TEST         */   18850037
*         2 PLHEFLGS BIT(16),              /* EXCEPTION FLAGS--1   */   19200037
*           3 PLHNOSPC BIT(1),             /* NO SPACE--CREATE MODE*/   19600037
*           3 PLH1ST   BIT(1),             /* 1ST REQ AFTER OPEN   */   20000037
*           3 PLHSKPER BIT(1),             /* SKIP ACROSS ERROR CNV*/   20400037
*           3 PLHSRINV BIT(1),      /* SPAN RCD EXCEPTION    @X04SVLC*/ 20800037
*           3 PLHNOADV BIT(1),             /* DONT ADVANCE PLH     */   21200037
*           3 PLHEODX BIT(1),              /* EODAD TAKEN          */   21600037
*           3 PLHINVAL BIT(1),             /* ON IF INVALID        */   22000037
*           3 PLHDSCAN BIT(1),             /* SCAN DATA AFTER RD EX*/   22400037
*           3 PLHRSTRT BIT(1),      /* RESTART FLAG          @X04SVLC*/ 22450037
*           3 * BIT(7),             /* RESERVED              @X04SVLC*/ 22800037
*         2 PLHFLG3 BIT(8),         /* FLAGS -- BYTE 3       @X04SVLC*/ 23200037
*           3 PLHSRBSG BIT(1),      /* SPAN RCD SEGS ARE INCONSISTANT   23250037
*                                                            @X04SVLC*/ 23300037
*           3 PLHRAHD BIT(1),       /* READ-AHEAD            @X04SVLC*/ 23310037
*           3 PLHSLVLD BIT(1),      /* ON IF 2ND LVL IDX VALID          23320037
*                                                            @X04SVLC*/ 23322037
*           3 PLHBWD BIT(1),        /* PREV REQ SPEC BWD DIRECTION      23330037
*                                                            @X04SVLC*/ 23342037
*           3 PLHRVRS BIT(1),       /* I/0 CHAIN REVERSED IF ON         23344037
*                                                            @X04SVLC*/ 23346037
*           3 PLHEOVDF BIT(1),     /* EOV DEFER ON IRB FLAG  @ZA10850*/ 23350037
*         2 PLHAFLGS BIT(8),       /* MORE FLAGS-NOT CLEARED @X04SVLC*/ 23370037
*           3 PLHDRLM BIT(1),       /* DIRECT REQ ISSUED DURING         23400037
*                                      CREATE                @X04SVLC*/ 23450037
*           3 PLHIOSRQ BIT(1),      /* I/O SUPPORT REQUEST   @ZA04719*/ 23500037
*           3 PLHVAMB BIT(1),       /* PLHAMB IS VALID       @X04SVLC*/ 23550037
*           3 PLHDBDC BIT(1),       /* PLH FROM SHR POOL     @X04SVLC*/ 23560037
*           3 PLHIOSID BIT(1),      /* I/O SUPPORT ID        @X04SVLC*/ 23570037
*           3 PLHRABWD BIT(1),      /* RA ENTERED IN BWD     @X04SVLC*/ 23580037
*           3 PLHRAE   BIT(1),      /* RA KEY EQUAL HIT      @ZA14811*/ 23590037
*         2 PLHACB   PTR(31),              /* POINTER TO ACB         */ 23600037
*         2 PLHDSTYP CHAR(1),              /* DATA SET TYPE          */ 24000037
*                                          /*     01 FOR DATA        */ 24400037
*                                          /*     02 FOR INDEX       */ 24800037
*         2 PLHRMIN  PTR(8),               /* READ THRESHOLD         */ 25200037
*         2 PLHFRCNT PTR(8),               /* FREE BFRS IN ENTRY   */   25600037
*         2 PLHBFRNO PTR(8),               /* TOTAL NO OF BFRS     */   26000037
*         2 PLHMRPL PTR(31),               /* ADDR OF HEADER RPL   */   26400037
*         2 PLHCRPL PTR(31),               /* ADDR OF CURRENT RPL  */   26800037
*         2 PLHDSIDA PTR(31),              /* PTR TO DSID          */   27200037
*         2 PLHCRBA PTR(32),               /* CURRENT RBA          */   27600037
*           3 PLHJORBA PTR(32),            /* JRNAD CHANGE--OLD RBA*/   28000037
*               5 PLHUPECB PTR(31),        /* UPAD ADDR ECB  @ZA07549*/ 28400037
*         2 PLHJRNLL FIXED(31),            /* JRNAD--LENGTH OF DATA*/   28500137
*         2 PLHJNRBA PTR(32),              /* JRNAD CHANGE--NEW RBA*/   28800037
*         2 PLHJCODE CHAR(1),              /* JRNAD ENTRY CODE     */   29000037
*           3 PLHUCODE CHAR(1),            /* UPAD EXIT CODE @ZA07549*/ 29200037
*         2 PLHRCODE PTR(8),               /* PREVIOUS REQUEST CODE*/   29600037
*         2 PLHEOVR CHAR(1),               /* EOV REQ CODE--ALLOC/MNT*/ 30000037
*         2 PLHRSCS BIT(8),              /* RESOURCE BITS AND FEEDBACK  30400037
*                                           CODE INDICATORS  @ZA32757*/ 30410037
*           3 PLHINEOV BIT(1),           /* EOV IN PROCESS   @ZA32757*/ 30420037
*           3 PLHBUFHD BIT(1),           /* PLH LOCKED DATA BUFC        30430037
*                                           HEADER           @ZA32757*/ 30440037
*           3 * BIT(2),                  /* RESERVED         @ZA32757*/ 30450037
*           3 PLHASYER BIT(1),           /* ASYNCH DEFERRED REQUEST     30460037
*                                           CANNOT BE RESTARTED BY      30470037
*                                           TERMRPL          @ZA32757*/ 30480037
*           3 PLHDSERR BIT(1),           /* POSSIBLE DATA SET ERROR     30520037
*                                           CONDITION DETECTED BY       30530037
*                                           TERMRPL:  (1) INCOMPLETE    30540037
*                                           I/O OR, (2) BUFFER IN MUST  30550037
*                                           WRITE STATUS     @ZA32757*/ 30560037
*           3 PLHDBPER BIT(1),           /* ERROR IN PLH DATA BUFC      30600037
*                                           POINTER DETECTED BY         30640037
*                                           TERMRPL          @ZA32757*/ 30680037
*           3 * BIT(1),                  /* RESERVED         @ZA32757*/ 30720037
*         2 PLHARDB    PTR(31),            /* CURRENT DATA ARDB PTR*/   30800037
*         2 PLHLRECL PTR(31),              /* LENGTH OF LAST RECORD*/   31200037
*         2 PLHDBUFC PTR(31),              /* PTR TO CURR DATA BUFC*/   31600037
*         2 PLHNBUFC PTR(31),              /* PTR TO NEXT READ BUFC*/   32000037
*         2 PLHRECP PTR(31),               /* BUFC CURR REC POINTER*/   32400037
*         2 PLHFSP PTR(31),                /* FREE SPACE POINTER   */   32800037
*         2 PLHRDFP PTR(31),               /* PTR TO CURRENT RDF   */   33200037
*         2 PLHRDFC PTR(15),               /* CURR RDF REPLIC CNT  */   33600037
*         2 PLHSRSID PTR(16),        /* SPAN RCD SEG ID      @X04SVLC*/ 34000037
*         2 PLHDIOB PTR(31),               /* PTR TO DATA IOB      */   34400037
*           3 PLHIIOB PTR(31),       /* PTR TO INDEX IOB     @X04SVLC*/ 34450037
*         2 PLHARET PTR(31),               /* ASYNCH RTN RETURN ADR*/   34800037
*    /* PLHSAVE1 - PLHSAVE6 ARE NOT TO BE USED BY BUFFER MANAGER,       34850037
*       I/O MANAGER, IDADRQ, OR IDATJXIT                     @X04SVLC*/ 34860037
*         2 PLHSAVE1 PTR(31),              /* REGISTER SAVE 1      */   35200037
*         2 PLHSAVE2 PTR(31),              /* REGISTER SAVE 2      */   35600037
*         2 PLHSAVE3 PTR(31),              /* REGISTER SAVE 3      */   36000037
*         2 PLHSAVE4 PTR(31),              /* REGISTER SAVE 4      */   36400037
*         2 PLHSAVE5 PTR(31),              /* REGISTER SAVE 5      */   36800037
*         2 PLHSAVE6 PTR(31),              /* REGISTER SAVE 6      */   37200037
*         2 PLHAMB PTR(31),          /* IDADRQ-IDATJXIT AMB SAVE AREA   37250037
*                                                            @X04SVLC*/ 37260037
*         2 PLHCHAIN PTR(31),        /* CHAIN PTR            @X04SVLC*/ 37300037
*         2 PLHRETO FIXED(15),             /* OFFSET TO CURR RETURN*/   37600037
*         2 PLHRETOS FIXED(15),      /* INITIAL OFFSET       @ZA16007*/ 38000037
*         2 PLHRET1(11) PTR(31),           /* 11 RETURN REGS         */ 38400037
*         2 PLHASAVE PTR(31),              /* ASYNCH SAVEAREA START*/   42800037
*         2 * PTR(31),                     /* 13 TH  RETURN REG    */   43200037
*         2 * PTR(31),                     /* 14 TH  RETURN REG    */   43600037
*         2 PLHAR14 PTR(31),               /* RETURN FROM ASYNCH     */ 44000037
*         2 PLHEOVPT PTR(31),              /* PTR TO RBA FOR EOV     */ 44400037
*           3 PLHDDDD PTR(32),             /* PREVIOUS REQUEST RBA   */ 44800037
*         2 PLHNRBA    PTR(32),            /* NEXT RBA               */ 45200037
*         2 PLHIBUFC PTR(31),              /* PTR TO INDEX BUFC      */ 45600037
*         2 PLHRBUFC PTR(31),        /* IDADRQ-IDATJXIT RBUFC SAVE AREA 46050037
*                                                            @X04SVLC*/ 46060037
*         2 PLHISPLP   PTR(31),            /* INDEX SEARCH PARML PTR */ 46400037
          2 PLHIXSPL BDY(WORD),            /* INDEX SEARCH PARM LIST */ 46800037
*           3 PLHSSRBA PTR(32),            /* INDEX CINV RBA         */ 47200037
*             4 PLHHIREC FIXED(32), /* HI-RECORD RBA         @X04SVLC*/ 47250037
            3 PLHIXBFC PTR(31),            /* PTR TO IX SRCH BUFC    */ 47600037
*           3 *        CHAR(24),           /*                        */ 48000037
*         2 PLHWAX PTR(31),         /* PTR TO PATH WORK AREA @X04SVLC*/ 48150037
*           3 PLHXPLH PTR(31),      /* PTR TO AIX PLH FR BASE           48154037
*                                                            @X04SVLC*/ 48156037
*         2 PLHLLOR PTR(31),        /* PTR LEAST LEN SEGMENT @X04SVLC*/ 48350037
*         2 PLHNOSEG FIXED(15),     /* NBR SEG SPAN RCD      @X04SVLC*/ 48352037
*         2 PLHSRCSG FIXED(15),     /* CUR SEG NBR SPAN RCD  @X04SVLC*/ 48354037
*         2 PLHSLRBA FIXED(32),     /* RBA 2ND LEVEL INDEX   @X04SVLC*/ 48356037
*         2 PLHKEYPT PTR(31),       /* PTR TO CUR KEY        @X04SVLC*/ 48358437
*         2 PLHDRRSC PTR(31),       /* ADDR OF DEFERRED REQUEST         48359637
*                                      FLAG BYTE             @X04SVLC*/ 48359737
*         2 PLHPARM1 PTR(31),       /* IDADRQ-IDATJXIT RPARM1 SAVE      48361737
*                                      AREA                  @X04SVLC*/ 48385537
*         2 PLHR13 PTR(31),         /* IDADRQ-I/O MGR R13 SAVE AREA     48407637
*                                                            @X04SVLC*/ 48429437
*         2 PLHDRMSK BIT(8),        /* MASK FOR DEFERRED REQUEST        48516637
*                                            RESOURCE TEST   #X04SVLC*/ 48538437
*         2 PLHTMRPL BIT(8),        /* TERMRPL PROCESS BITS  @ZA32757*/ 48744637
*           3 PLHTERM BIT(1),       /* TERMRPL IN PROCESS    @ZA32757*/ 48745437
*           3 PLHTMBUF BIT(1),    /* TERMRPL FREED BUFC HDR  @ZA32757*/ 48746237
*           3 PLHTMDIW BIT(1),      /* TERMRPL FREED DIWA    @ZA32757*/ 48747037
*           3 PLHTMDTA BIT(1),      /* TERMRPL FREED DATA BUFC          48747837
*                                                            @ZA32757*/ 48748637
*           3 PLHTMINX BIT(1),      /* TERMRPL FREED INDEX BUFC         48749437
*                                                            @ZA32757*/ 48750237
*           3 PLHTMIOB BIT(1),      /* TERMRPL FREED IOMB    @ZA32757*/ 48751037
*           3 * BIT(2),             /* RESERVED              @ZA32757*/ 48751837
*         2 * PTR(16),              /* RESERVED              @ZA32757*/ 48752637
*      /* CROSS - REGION POST PARM LIST                      @X04SVLC*/ 48754637
*         2 PLHECB PTR(31),         /* ADDR OF ECB           @X04SVLC*/ 48756437
*         2 PLHASCB PTR(31),        /* ADDR OF ASCB          @X04SVLC*/ 48758437
*         2 PLHERRET PTR(31),       /* ADDR OF ERROR RETURN  @X04SVLC*/ 48760437
*         2 PLHEND CHAR(*);         /* PLH END               @X04SVLC*/ 48766437
*/********************************************************************/ 48768437
*/* VSAM PLACE HOLDER EXTENSION                                      */ 48770437
*/********************************************************************/ 48772437
*  DCL 1 PLHEXTEN DEFINED(PLHEND),  /* LSR/GSR EXTENSION     @X04SVLC*/ 48776437
*         2 PLHRESR1 PTR(31),        /* ADDR OF SERIAL RESOURCE HELD    48776537
*                                                            @X04SVLC*/ 48776637
*         2 * BIT(8),                /* UNUSED               @X04SVLC*/ 48776737
*         2 PLHBMWRK BIT(8),         /* BUFFER MANAGER WORK FLAGS       48776837
*                                                            @X04SVLC*/ 48779637
*           3 PLHBMRDF BIT(1),       /* RBA FOUND FLAG       @X04SVLC*/ 48781637
*           3 PLHBEUC BIT(1),        /* END OF USE CHAIN     @X04SVLC*/ 48782037
*           3 PLHBMSOV BIT(1),       /* START OVER FLAG      @X04SVLC*/ 48782537
*         2 PLHRDCNT FIXED(15),      /* SA FOR AMBRDCNT      @X04SVLC*/ 48838837
*        2 PLHBMSV1 PTR(31),         /* BFR MGR SA           @X04SVLC*/ 48875937
*        2 PLHBMSV2 PTR(31),         /*                      @X04SVLC*/ 48922237
*        2 PLHBMSV3 PTR(31),         /*                      @X04SVLC*/ 48968537
*        2 PLHBMSV4 PTR(31),         /*                      @X04SVLC*/ 49014837
*        2 PLHBMSV5 PTR(31);         /*                      @X04SVLC*/ 49061137
*/********************************************************************/ 49071137
*/* VSAM PLACE HOLDER KEY                                            */ 49081137
*/********************************************************************/ 49091137
*  DCL PLHKEY CHAR(*)BASED(PLHKEYPT);         /* CURRENT KEY #X04SVLC*/ 49107437
*  DCL PLHRRN PTR(31) BASED(PLHKEYPT);/* PREV RELATIVE NUMBER@ZA14830*/ 49112437
*/********************************************************************/ 49117437
*/* VSAM PLACE HOLDER PUSH DOWN LIST                                 */ 49118437
*/********************************************************************/ 49119437
*  DCL PLHPDL (20) PTR(31) BASED;    /* R14 SAVE AREA        @ZA16007*/ 49120437
*  DCL PLHPDLE PTR(31)BASED(ADDR(PLHRET1)+PLHRETO);/* NXT SA @ZA16007*/ 49121437
*/********************************************************************/ 49122437
*/* VSAM JOURNALING CONSTANTS                                        */ 49127437
*/********************************************************************/ 49137437
*  DCL PLHTDATA BIT(8) CONSTANT('00000001'B); /* DATA  DS TYPE CODE  */ 49153737
*  DCL PLHTIDX  BIT(8) CONSTANT('00000010'B); /* INDEX DS TYPE CODE  */ 49200037
*  DCL PLHJGET BIT(8) CONSTANT('00000000'B); /* JRNAD ENTRY FOR GET  */ 49600037
*  DCL PLHJPUT BIT(8) CONSTANT('00000100'B); /* JRNAD ENTRY FOR PUT  */ 50000037
*  DCL PLHJERS BIT(8) CONSTANT('00001000'B); /* ERASE JRNAD ENTRY  */   50400037
*  DCL PLHJRBAC BIT(8) CONSTANT('00001100'B); /* RBA CHANGE--JRNAD */   50800037
*  DCL PLHJCAS BIT(8) CONSTANT('00100000'B); /* START OF CA SPLIT       50850037
*                                    JRNAD CODE              @X04SVLC*/ 50900037
*  DCL PLHJIER BIT(8) CONSTANT('00100100'B); /* PHYSICAL INPUT ERROR    50950037
*                                    JRNAD CODE              @X04SVLC*/ 51000037
*  DCL PLHJOER BIT(8) CONSTANT('00101000'B); /* PHYSICAL OUTPUT ERROR   51050037
*                                    JRNAD CODE              @X04SVLC*/ 51100037
*  DCL PLHJIXM BIT(8) CONSTANT('00101100'B); /* INDEX MODIFICATION      51150037
*                                    JRNAD CODE              @X04SVLC*/ 51160037
*  DCL PLHRSRSG BIT(8)CONSTANT('00010000'B);/* READ SPANNED RECORD      51170037
*                                       SEGMENT              @X04SVLC*/ 51180037
*  DCL PLHWSRSG BIT(8)CONSTANT('00010100'B);/* WRITE SPANNED RECORD     51190037
*                                       SEGMENT              @X04SVLC*/ 51192037
*/********************************************************************/ 54192037
*/* VSAM UPAD EXIT CONSTANTS                                 @ZA07549*/ 57192037
*/********************************************************************/ 60192037
*  DCL PLHUWAIT BIT(8) CONSTANT('00000000'B); /* UPAD WAIT EXIT CODE    63192037
*                                                            @ZA07549*/ 66192037
./  ADD  SSI=60930079,NAME=IDAPPCDE
 /********************************************************************/ 00050004
 /*                                                                  */ 00100004
 /*   MACRO NAME = IDAPPCDE                                          */ 00150004
 /*                                                                  */ 00160004
 /*   DESCRIPTIVE NAME = VSAM OPEN/CLOSE/EOV PROBLEM DETERMINATION   */ 00170004
 /*                      MESSAGE PROBLEM CODE.                       */ 00180004
 /*                                                                  */ 00190004
 /*   FUNCTION = IDENTIFY THE PROBLEM THAT CAUSED THE PROBLEM        */ 00192004
 /*              DETERMINATION MESSAGE.                              */ 00194004
 /*                                                                  */ 00196004
 /*   CONTROL BLOCK STRUCTURE = NONE                                 */ 00198004
 /*                                                                  */ 00198404
 /*   INCLUDED MACROS = NONE                                         */ 00198804
 /*                                                                  */ 00199204
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00199604
 /*                                                                  */ 00199704
 /*   CREATED BY: N/A                                                */ 00199804
 /*                                                                  */ 00199904
 /*   STATUS = VS1 RELEASE 4, VS2 RELEASE 3.                         */ 00216604
 /*                                                                  */ 00226604
 /*   DATE OF LAST CHANGE = 11/04/75                         @Z40WSRL*/ 00228604
 /*                                                                  */ 00230604
 /********************************************************************/ 00232604
    DCL                                                                 00233304
      (PP4 CONSTANT(4),             /* I/O ERROR READING JFCB        */ 00250004
      PP20 CONSTANT(20),            /* INSUFFICIENT VIRTUAL STORAGE  */ 00300004
      PP22 CONSTANT(22),            /* I/O ERROR COMPLETING I/O         00350004
                                       REQUESTS                      */ 00400004
      PP28 CONSTANT(28),            /* CATALOG DOES NOT EXIST OR IS     00450004
                                       NOT OPEN                      */ 00500004
      PP32 CONSTANT(32),            /* CATALOG ENTRY NOT FOUND       */ 00510004
      PP33 CONSTANT(33),            /* CANNOT EXTEND VSAM CATALOG    */ 00520004
      PP34 CONSTANT(34),            /* DATA SET HAS REACHED MAXIMUM     00530004
                                       NUMBER OF EXTENTS             */ 00540004
      PP35 CONSTANT(35),            /* CATALOG RECORD HAS EXCEEDED      00542004
                                       MAX NBR OF OCCURRENCES*/         00544004
      PP36 CONSTANT(36),            /* CATALOG I/O ERROR             */ 00544404
      PP37 CONSTANT(37),            /* UNEXPECTED RETURN CODE FROM      00546004
                                       CATALOG                       */ 00548004
      PP38 CONSTANT(38),            /* EMPTY PATH DATA SET           */ 00548404
      PP39 CONSTANT(39),            /* EMPTY UPGRADE AIX             */ 00549204
      PP40 CONSTANT(40),            /* SECURITY VIOLATION            */ 00550004
      PP41 CONSTANT(41),            /* BUFFER SPACE TO SMALL         */ 00600004
      PP44 CONSTANT(44),            /* USER BUFFERING AND NOT           00650004
                                       CINV PROCESSING               */ 00700004
      PP45 CONSTANT(45),            /* UNUSABLE DS OPEN FOR INPUT    */ 00710004
      PP46 CONSTANT(46),            /* UNUSABLE DS OPEN FOR OUTPUT   */ 00720004
      PP47 CONSTANT(47),            /* ICI & INCONSISTENT PARAMETERS */ 00730004
      PP48 CONSTANT(48),            /* RESET AND DS IS AN INDEX      */ 00740004
      PP49 CONSTANT(49),            /* ICI PROCESSING AND CREATE MODE*/ 00742003
      PP50 CONSTANT(50),            /* UNABLE TO PAGE FIX CNTRL BLKS */ 00750004
      PP52 CONSTANT(52),            /* UNABLE TO OBTAIN RESOURCE     */ 00800004
      PP54 CONSTANT(54),            /* KEYED ACCESSING AND NOT KSDS  */ 00850004
      PP56 CONSTANT(56),            /* DATA SET NOT CLOSED           */ 00900004
      PP58 CONSTANT(58),            /* INDEX TIMESTAMP LESS THAN        00950004
                                       DATA TIMESTAMP                */ 01000004
      PP59 CONSTANT(59),            /* VOLUME TIMESTAMP ERROR AND       01050004
                                       VOL BEING OPENED FOR INPUT    */ 01060004
      PP60 CONSTANT(60),            /* VOLUME TIMESTAMP ERROR AND       01070004
                                       VOL BEING OPENED FOR OUTPUT   */ 01080004
      PP68 CONSTANT(68),            /* INCONSISTENT DEVICE TYPES     */ 01100004
      PP72 CONSTANT(72),            /* EMPTY DS NOT OPEN FOR OUTPUT  */ 01150004
      PP76 CONSTANT(76),            /* INVALID ACB                   */ 01200004
      PP78 CONSTANT(78),            /* INVALID AMBL                  */ 01200404
      PP80 CONSTANT(80),            /* DS OPENED FOR CREATE WITH        01202004
                                       STRNO GREATER THAN 1          */ 01204004
      PP84 CONSTANT(84),            /* RESET SPECIFIED FOR NON-REUSABLE 01206004
                                       DATA SET                      */ 01208004
      PP88 CONSTANT(88),            /* RESET SPECIFIED FOR REAL PATH */ 01208404
      PP90 CONSTANT(90),            /* MSS MOUNT ERROR               */ 01210003
      PP91 CONSTANT(91),            /* MSS DEMOUNT ERROR             */ 01220003
      PP92 CONSTANT(92),            /* MSS ACQUIRE ERROR             */ 01230003
      PP93 CONSTANT(93),            /* MSS RELINQUISH ERROR          */ 01240003
      PP94 CONSTANT(94),            /* MSS UNABLE TO BIND            */ 01240403
      PP100 CONSTANT(100),          /* NO SPACE ON CANDIDATE VOLUMES */ 01242004
      PP104 CONSTANT(104),          /* NO VOLS AVAILABLE FOR            01244004
                                       SPACE ALLOCATION              */ 01246004
      PP108 CONSTANT(108),          /* UNABLE TO MOUNT VOLUME        */ 01248004
      PP112 CONSTANT(112),          /* UNABLE TO MOUNT VOLUME FOR       01248404
                                       SPACE ALLOCATION              */ 01248804
      PP116 CONSTANT(116),          /* I/O ERROR READING VOLUME LABEL   01250004
                                       OR FORMAT 4 DSCB              */ 01300004
      PP120 CONSTANT(120),          /* LSR/GSR AND CINV SIZE EXCEEDS    01310004
                                       MAXIMUM BUFFER SPACE          */ 01312004
      PP124 CONSTANT(124),          /* LSR/GSR - VSRT DOES NOT EXIST */ 01320004
      PP128 CONSTANT(128),          /* LSR/GSR - ERROR IN WRTBFR     */ 01330004
      PP132 CONSTANT(132),          /* GSR AND SYSTEM IS VS1         */ 01340004
      PP136 CONSTANT(136),          /* LSR/GSR AND RESET             */ 01342004
      PP140 CONSTANT(140),          /* LSR/GSR AND ICI               */ 01344004
      PP144 CONSTANT(144),          /* LSR/GSR AND USER BUFFERING    */ 01346004
      PP148 CONSTANT(148),          /* GSR AND CALLER NOT AUTHORIZED */ 01348004
      PP152 CONSTANT(152),          /* LSR/GSR AND DATA SET IS EMPTY */ 01348404
      PP156 CONSTANT(156),          /* LSR/GSR AND KEY LENGTH EXCEEDS   01348804
                                       MAXIMUM                       */ 01348904
      PP164 CONSTANT(164),          /* LSR/GSR WITH DFR AND SHARE       01349604
                                       OPTION IS 4                   */ 01399604
      PP168 CONSTANT(168),          /* CRA VOL NOT MOUNTED           */ 01449604
      PP172 CONSTANT(172),          /* FMT 4 DSCB INDICATES VOL IS      01499603
                                       UNUSABLE                      */ 01509604
      PP176 CONSTANT(176),          /* GSR FORCE DLVRP WAS DONE,        01519603
                                       DUMP WAS TAKEN.       @Z30SSMD*/ 01529603
      PP180 CONSTANT(180),          /* GSR FORCE DLVRP WAS DONE,        01539603
                                       PARTIAL DUMP WAS DONE.@Z30SSMD*/ 01541603
      PP184 CONSTANT(184),          /* GSR FORCE DLVRP WAS DONE, DUMP   01543604
                                       COULD NOT BE DONE.    @Z30SSMD*/ 01545603
      PP188 CONSTANT(188),          /* SYSTEM DATA SET DOES NOT SUPPORT 01547604
                                       THE LSR OR GSR OPTION @Z40WSRL*/ 01548004
      PP192 CONSTANT(192))          /* SYSTEM DATA SET DOES NOT SUPPORT 01548404
                                       PATH OR UPGRADE PROCESSING       01548804
                                                             @Z40WSRL*/ 01549204
        FIXED(8);                                                       01549604
./  ADD  SSI=51900100,NAME=IDAPSL
 /********************************************************************/ 00050004
 /*                                                                  */ 00100004
 /*   MACRO NAME = IDAPSL                                            */ 00150004
 /*                                                                  */ 00200004
 /*   DESCRIPTIVE NAME = PAGE SAVE LIST.                             */ 00250004
 /*                                                                  */ 00300004
 /*   FUNCTION = THE PSL CONTAINS A VARABLE NUMBER OF ENTRIES. ALL   */ 00350004
 /*              SUCCESSFUL FIXED STORAGE FOR AN OPEN IS REFLECTED   */ 00400004
 /*              IN THIS LIST. THERE IS A MAXIMUM OF 1 LIST PER ESDS */ 00450004
 /*              OR KSDS.                                            */ 00500004
 /*                                                                  */ 00550004
 /*   CONTROL BLOCK STRUCTURE = POINTED TO BY THE OPEN ACB WORK AREA.*/ 00560004
 /*                                                                  */ 00570004
 /*   INCLUDED MACROS = NONE                                         */ 00580004
 /*                                                                  */ 00590004
 /*   METHOD OF ACCESS = PL/S - RESPECIFY IDAPSL BASED.              */ 00592004
 /*                                                                  */ 00594004
 /*   CREATED BY: VSAM OPEN MODULE IDA0192A.                         */ 00596004
 /*                                                                  */ 00598004
 /*   STATUS = VS1 RELEASE 4, VS2 RELEASE 3.                         */ 00598404
 /*                                                                  */ 00598804
 /*   DATE OF LAST CHANGE = 1 AUGUST 74                              */ 00599204
 /*                                                                  */ 00599604
 /********************************************************************/ 00599704
    DCL 1 IDAPSL BASED,             /* PAGE SAVE LIST                */ 00600004
          2 PSLSUBPL FIXED (8),     /* SUBPOOL NUMBER OF THIS PSL    */ 00650004
          2 PSLLENTH FIXED (24),    /* LENGTH IN BYTES OF THIS PSL   */ 00700004
          2 PSLID CHAR (8),         /* BLOCK IDENTIFIER              */ 00750004
          2 PSLNXPTR PTR (31),      /* POINTER TO NEXT PSL OR 0 IF      00800004
                                       LAST PSL IN CHAIN             */ 00850004
          2 PSLENTRY (*),           /* PAGE SAVE ENTRY               */ 00900004
            3 PSLSTAD PTR (31),     /* STARTING ADDR OF FIXED AREA   */ 00950004
            3 PSLFLG BIT (8),       /* FLAGS                         */ 01000004
              4 PSLFLGLT BIT (1),   /* BIT ON INDICATES LAST ENTRY   */ 01050004
              4 * BIT (7),          /* RESERVED                      */ 01100004
            3 PSLENDAD PTR (24)     /* END ADDR+1 OF FIXED AREA      */ 01150004
    ;                                                                   01200004
    DCL IDAPSLID CHAR (8) CONSTANT (' IDAPSL '); /* CHAR CONSTANT       01250004
                                       FOR PSLID                     */ 01300004
./  ADD  SSI=51900104,NAME=IDARDF
*/********************************************************************/ 00050004
*/*                                                                  */ 00100004
*/*   MACRO NAME = IDARDF                                            */ 00150004
*/*                                                                  */ 00200004
*/*   DESCRIPTIVE NAME = VSAM RECORD DEFINITION FIELD                */ 00250004
*/*                                                                  */ 00300004
*/*   FUNCTION = DESCRIBES THE RECORD DEFINITION FIELD OF A VSAM     */ 00350004
*/*              RECORD                                              */ 00360004
*/*                                                                  */ 00500004
*/*   INCLUDED MACROS = NONE                                         */ 00550004
*/*                                                                  */ 00600004
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00650004
*/*                                                                  */ 00700004
*/*   CREATED BY = VSAM RECORD MANAGEMENT                            */ 00750004
*/*                                                                  */ 00800004
*/*   STATUS = VS/1 RELEASE 4  (CHANGE FLAG @X04SVXX)                */ 00850004
*/*                                                                  */ 00900004
*/*   DATE OF LAST CHANGE = 9 AUG 74                                 */ 00950004
*/*                                                                  */ 01000004
*/********************************************************************/ 01050004
*        DCL 1 IDARDF BASED,            /* RECORD DEFINITION FIELD   */ 03000000
*              2 RDFRBYTE     CHAR(1),  /*                           */ 06000000
*                3 RDFTYPE    BIT(1),   /* R TYPE                    */ 09000000
*                3 RDFCTNU    BIT(1),   /* CONTROL INFO. CONTINUATION*/ 12000000
*                3 RDFSEG     BIT(2),   /* SEGMENT TYPE INDICATOR    */ 15000000
*                  4 RDFNOT1 BIT(1),    /* OFF= NOT A SPAN RCD OR       15050004
*                                          FIRST SEG OF S.R. @X04SVLC*/ 15060004
*                                       /* ON = INTERMEDIATE OR LAST    15150004
*                                          SEGMENT OF A SPANNED         15160004
*                                          RCD               @X04SVLC*/ 15200004
*                  4 RDF1ST BIT(1),     /* OFF = NOT A SPAN RCD OR LAST 15250004
*                                          SEGMENT OF S.R.   @X04SVLC*/ 15300004
*                                       /* ON  = FIRST OR INTERMEDIATE  15350004
*                                          SEGMENT OF SPAN              15450004
*                                          RECORD            @X04SVLC*/ 15500004
*                                       /*  00 COMPLETE REC  @X04SVLC*/ 18000004
*                                       /*  01 FIRST SEGMENT @X04SVLC*/ 21000004
*                                       /*  10 LAST  SEGMENT @X04SVLC*/ 24000004
*                                       /*  11 INTERMEDIATE             27000004
*                                          SEGMENT           @X04SVLC*/ 27050004
*                3 RDFREPL    BIT(1),   /*  0 - LL IS RECORD LENGTH  */ 30000000
*                                        /*  1 - LL IS RECORD COUNT  */ 33000000
*                3 RDFEMPTY   BIT(1),   /* EMPTY RECORD      @X04SVLC*/ 33050004
*              2 RDFLL        CHAR(2);  /*                           */ 36000004
*/********************************************************************/ 36050004
*/* DATA DEFINITION                                                  */ 36060004
*/********************************************************************/ 36100004
*        DCL 1 IDADATA BASED,            /* DATA DECLARE     @X04SVLC*/ 36102004
*              2 AMDATA       CHAR(*);                     /*@X04SVLC*/ 36104004
*/********************************************************************/ 36150004
*/* KEY DEFINITION                                                   */ 36200004
*/********************************************************************/ 36250004
*        DCL 1 IDAKEY BASED,             /* KEY DECLARE      @X04SVLC*/ 36300004
*              2 KEY         CHAR(*);    /* KEY DECLARE      @X04SVLC*/ 36350004
       GEN DATA;                                           /*@X04SVLC*/ 39000004
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           42000000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              45000000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             48000000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                51000000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 51050004
RDFLEN   EQU   3                        LENGTH OF RDF                   54000000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         57000000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       60000000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  63000000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              66000000
         @ENDGEN;                                                       69000000
./  ADD  SSI=51900107,NAME=IDAREGS
*/********************************************************************/ 00050004
*/*                                                                  */ 00100004
*/*   MACRO NAME = IDAREGS                                           */ 00150004
*/*                                                                  */ 00200004
*/*   DESCRIPTIVE NAME =VSAM RECORD MANAGEMENT REGISTER DECLARES     */ 00250004
*/*                                                                  */ 00300004
*/*   FUNCTION = DECLARES REGISTERS USED BY VSAM RECORD MANAGEMENT   */ 00350004
*/*                                                                  */ 00400004
*/*   INCLUDED MACROS = NONE                                         */ 00550004
*/*                                                                  */ 00600004
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00650004
*/*                                                                  */ 00800004
*/*   STATUS = VS/1 RELEASE 4  (CHANGE FLAG @X04SVXX)                */ 00850004
*/*                                                                  */ 00900004
*/*   DATE OF LAST CHANGE = 9 AUG 74                                 */ 00950004
*/*                                                                  */ 01000004
*/********************************************************************/ 01050004
 DCL RWORK0         PTR(32)   REG(0);        /* REQ TYPE REG         */ 12000000
 DCL RRPL           PTR(31)   REG(1) RESTRICTED;  /* RPL REGISTER    */ 15000000
 DCL R1             PTR(31)   REG(1);        /* VOLATILE REG         */ 18000000
 DCL RPLH           PTR(31)   REG(2) RESTRICTED; /* PLH REGISTER     */ 21000000
 DCL RAMB           PTR(31)   REG(3) RESTRICTED;  /*  AMB REGISTER   */ 24000000
 DCL RBUFC          PTR(31)   REG(4) RESTRICTED; /* BUFC REGISTER    */ 27000000
 DCL RWORK1         PTR(31)   REG(5);        /* WORK REGISTER        */ 30000000
 DCL RWORK2         PTR(32)   REG(6);        /* WORK REGISTER        */ 33000000
 DCL RWORK3         PTR(31)   REG(7);        /* WORK REGISTER        */ 36000000
 DCL RWORK4         PTR(31)   REG(8);        /* WORK REGISTER        */ 39000000
 DCL RWORK5         PTR(31)   REG(9);        /* WORK REGISTER        */ 42000000
 DCL R10            PTR(31)   REG(10);           /* PL/S REGISTER    */ 45000000
 DCL R11            PTR(31)   REG(11);           /* PL/S REGISTER    */ 48000000
 DCL RPARM1         PTR(31)   REG(12) RESTRICTED;  /* PARAMETER REG  */ 51000000
 DCL R13            PTR(31)   REG(13);       /* ADDRESS OF SAVEAREA  */ 54000000
 DCL R14            PTR(31)   REG(14);       /* RETURN ADDRESS       */ 57000000
 DCL R15            PTR(31)   REG(15);       /* RETURN CODE/LINKAGE  */ 60000000
 DCL ON BIT(1)CONSTANT('1'B);       /* MEANING SET TO ONE    @X04SVLC*/ 60050004
 DCL OFF BIT(1)CONSTANT('0'B);      /* MEANING RESET TO ZERO @X04SVLC*/ 66000004
 DCL ZERO  FIXED(15) CONSTANT(0);   /* MEANING EXACTLY ZERO  @X04SVLC*/ 69000004
 DCL ONE   FIXED(15) CONSTANT(1);   /* MEANING EXACTLY ONE   @X04SVLC*/ 72000004
 DCL CZERO BIT(8) CONSTANT('00000000'B);/* MEANING CHARACTER ZERO       75000004
                                                             @X04SVLC*/ 75050004
 DCL EOV FIXED(15)CONSTANT(55);     /* EOV SVC NUMBER        @X04SVLC*/ 75100004
   DCL HWORD4 FIXED(15) INIT(4);        /* CONSTANT FOR LINKAGE      */ 84000000
./  ADD  SSI=32300023,NAME=IDARPLE
* /*                                                                 */ 03000000
* /*     RPLE - REQUEST PARAMENTER LIST EXTENSION                    */ 06000000
* /*                                                                 */ 09000000
* /*                                                                 */ 09050002
* /* MACCOMP Y-2 SC1DE/SJD61                                         */ 09100002
* /* MACSTAT Y-2 73183/Y02113                                        */ 09150002
* /*                                                                 */ 09200002
* /*     THIS EXTENSION IS CREATED BY THE ISAM INTERFACE OPEN        */ 12000000
* /*     ROUTINE.  IT IS LOCATED IMMEDIATELY AFTER THE RPL.          */ 15000000
* /*                                                                 */ 18000000
*  DCL   1 IDARPLE         BASED,       /* RPL EXTENSION             */ 21000000
*          2 RPLIICB       PTR (31),    /* PTR TO IICB               */ 24000000
*          2 RPLDECB       PTR (31),    /* PTR TO DECB (0-FREE RPL)  */ 27000000
*          2 RPLIIBFR      PTR (31),    /* PTR TO DYNAMIC BUFFER     */ 30000000
*          2 RPLRPLPT      PTR (31),    /* PTR TO NEXT RPL (0-LAST)  */ 33000000
*          2 RPLIITSB      CHAR(1),     /* TEST AND SET BYTE         */ 36000000
*          2 *             BIT (24),    /* RESERVED                  */ 39000000
*          2 RPLSAVE       PTR(31),     /* REG SAVE AREA             */ 42000000
*          2 RPLSAVE2      PTR (31);    /* SAVE AREA                */  45000000
./  ADD  SSI=51900109,NAME=IDARST14
         MACRO                                                          03000000
&NAME    IDARST14                                                       06000000
&NAME    LH    R14,PLHRETO(,RPLH)      GET CURRENT OFFSET               09000000
         SH    R14,HWORD4              BACK UP 1 WORD                   12000000
         STH   R14,PLHRETO(,RPLH)      STORE NEW OFFSET                 15000000
         L     R14,PLHRET1(R14,RPLH)   RESTORE R14                      18000000
         MEND                                                           21000000
./  ADD  SSI=60930080,NAME=IDARTMAC
*%GOTO PLSRTMAC;  /*                                                    19950002
          MACRO                                                         19960002
&LABEL   IDARTMAC                                                       19962002
*                                                                       19980002
*        LEVEL=1 02/24/75.                                              19985003
*                                                                       19986003
FORCORE   DSECT                                                         19990002
IDARSTAT  EQU DXATEXC1 *     RECOVERY ROUTINE STATUS AREA.              20019902
          ORG DXATEXC1 *     THIS IS THE SAME AS DXATEXC1.              20029902
RSTAT     DS  0F *           STATUS BITS FOR RECOVERY.                  20030103
RSTATOPT  DS  BL1 *          OPTION OR OPERATION.                       20030203
*                                                                       20030303
IDARLOAD EQU X'80'                IFG0192A IN PROGRESS.                 20030403
IDARIICL EQU X'40'                ISAM INTERFACE CLOSE IN PROGRESS.     20030503
IDARIIOP EQU X'20'                ISAM INTERFACE OPEN IN PROGRESS.      20030703
IDARTCLO EQU X'10'                VSAM TYPE=T CLOSE IN PROGRESS.        20030803
IDAREOV  EQU X'08'                VSAM EOV IN PROGRESS.                 20031303
IDARCLOS EQU X'04'                VSAM CLOSE IN PROGRESS.               20032303
IDAROPEN EQU X'02'                VSAM OPEN IN PROGRESS.                20032403
IDARVRP  EQU X'01'                BLDVRP OR DLVRP IN PROGRESS.          20032503
*                                                                       20032703
RSTATCRO  DS  BL1 *          CHECKPOINT/RESTART OPTION         @Z30SSDT 20032803
*                                                                       20037103
IDARCKPT EQU X'80'                CHECKPOINT IN PROGRESS.      @Z30SSDT 20039903
IDARRSTR EQU X'40'                RESTART IN PROGRESS.         @Z30SSDT 20041903
IDARCRCU EQU X'20'                CHECKPOINT/RESTART CLEANUP.  @Z30SSDT 20042103
IDARCURS EQU X'10'                RECURSION IF ON.             @Z30SSDT 20042503
*                                                                       20042703
RSTATOP2  DS  BL1  *         SECOND BYTE OF O/C/E INDICATORS.  @Z30SSMD 20042903
*                                                                       20043003
RSTATCSA  EQU X'80'          O/C/E IS OBTAINING CSA STORAGE.   @Z30SSMD 20043303
*                                                                       20043703
          DS  CL1  *         RESERVED - UNUSED.                         20044903
IDARRTN   EQU DXATEXC2 *     SECOND WORD OF STATUS                      20046603
          ORG DXATEXC2 *     ROUTINE IN CNTL.                           20050903
RSTATRTN  DS  CL4 *          ROUTINE IN CONTROL.                        20055203
          ORG DXATCOM1 *     DEFINE THE BASE FOR IDAESPL.               20059503
IDAESPL   DS CL16  *         BLD/DLVRP ESTAE P/L AREA.                  20063803
          ORG DXJBF *        BASE THE R/T SAVE AREA.                    20068103
IDARTSA  DS CL72 *          SAVE AREA FOR R/T IF BLDVRP/DLVRP.          20072403
*                                                                       20076703
*                                                                       20081002
*                                                                       20082202
     MEND   */                                                          20093502
*%PLSRTMAC:;                                                            20104802
*        /* IDAVGTT */                                                  20116102
*        /* -THE VGTT (VSAM GLOBAL TERMINATION TABLE) IS     @Z30SSMD*/ 20121103
*        /*  USED BY VSAM I/O SUPPORT TO KEEP TRACK OF       @Z30SSMD*/ 20126103
*        /*  GLOBAL RESOURCES WHICH MUST BE RELEASED UNDER   @Z30SSMD*/ 20127103
*        /*  TERMINATION CONDITIONS.                         @Z30SSMD*/ 20127303
*        /*                                                  @Z30SSMD*/ 20130603
*        /*  LEVEL=2  07/23/75.                              @Z40WSRL*/ 20131604
*        /*                                                  @Z30SSMD*/ 20132603
*        DCL 1 IDAVGTT BASED BDY(WORD),/* IDAVGTT- VSAM GLOBAL          20134103
*                                         TERMINATION TABLE. */         20137402
*              3 VGTTID CHAR(4),       /* BLOCK NAME ALWAYS = 'VGTT' */ 20138703
*              3 VGTTTYPE   BIT(8), /* TYPE OF VGTT          @Z30SSMD*/ 20210003
*                5 VGTTSDS BIT(1), /* SYSTEM DATA SET VGTT   @Z40WSRL*/ 20246004
*                5 VGTTGSR BIT(1), /* GSR VGTT, VGTT HAS USE COUNT.*/   20247003
*                5 VGTTLSR BIT(1), /* LSR VGTT.              @Z30SSMD*/ 20248003
*                5 VGTTCTLG BIT(1), /* CTLG OPEN IN PROGRESS.*/         20249003
*                5 VGTTOPEN BIT(1), /* NORMAL DATA SET VGTT. @Z30SSMD*/ 20249203
*                5 * BIT(3), /* RESERVED - UNUSED.           @Z30SSMD*/ 20249403
*              3 * CHAR(1),       /* RESERVED- UNUSED.       @Z30SSMD*/ 20250203
*              3 VGTTGSRK FIXED(8), /* GSR KEY IF VGTTGSR ON @Z40ESSR*/ 20251204
*              3 VGTTSP FIXED(8),      /* SUBPOOL IN WHICH THE VGTT AND 20255203
*                                       THE CORE RESIDE.     @Z30SSMD*/ 20260203
*              3 VGTTSIZE FIXED(31),   /* SIZE OF THE VGTT,BYTES.*/     20265203
*              3 VGTTNEXT PTR(31),     /* ADDRESS OF THE VGTT FOR       20450003
*                                       THE NEXT SPHERE,=0 IF LAST.*/   20500003
*              3 VGTTBIB PTR(31),     /* SPHERE IDENTIFIER @Z30SSMD*/   20550003
*              3 VGTTVUSE FIXED(31),      /* VSRT USE COUNT IF GSR.*/   20560003
*              3 VGTTPSB PTR(31),  /* PTR TO THE PROTECTED SPHERE BLK*/ 20565003
*              3 * PTR(31),                      /* RESERVED, UNUSED */ 21010003
*              3 VGTTCORE CHAR(*); /* IF LSR, THE CORE PREFIXED. */     21015003
*        /*                                                  @Z30SSMD*/ 21020003
*        /* MISCELLANEOUS DECLARES.                          @Z30SSMD*/ 21030003
*        /*                                                  @Z30SSMD*/ 21040003
*        DCL VGTTNAME CHAR(4) CONSTANT('VGTT'); /* NAME OF VGTT USED TO 21050002
*                                       FILL IN VGTTID FIELD */         21100002
*        /* IDARTSA - RESERVES A STANDARD 72 BYTE SAVE AREA IF          21100203
*                     BLDVRP/DLVRP IS IN PROGRESS.           @Z30SSMD*/ 21100303
*        DCL IDARTSA CHAR(72) DEFINED(DXJBF); /* R/T SAVE AREA.*/       21100603
*        /* IDAESPL - RESERVES 4 WORDS IN FORCORE FOR ESTAE IF          21101003
*           BLDVRP/DLVRP IS IN PROGRESS.                     @Z30SSMD*/ 21102003
*        DCL  IDAESPL CHAR(16) BDY(WORD) DEFINED(DXATCOM1);/*ESTAE P/L. 21105003
*                                                            @Z30SSMD*/ 21106003
*        /*  IDARRPL- PROVIDES IECRRPL COMPATABLITIY FOR IDAOCEA1. */   21107003
*        DCL 1 IDARRPL CHAR(4) DEFINED(DXATCOM1), /* VSAM R/T P/L.*/    21108003
*              2 * CHAR(1),/* IECRRPL COMPATABILITY.         @Z30SSMD*/ 21109003
*              2 IDARRFLG CHAR(1), /* IECRRPL COMPATABILITY. @Z30SSMD*/ 21109203
*                3 * BIT(4), /* IECRRPL COMPATABILITY.       @Z30SSMD*/ 21109403
*                3 RRPLVSAM BIT(1), /* RRFAMSTR COMPATABILITY. */       21109603
*                3 * BIT(3), /* IECRRPL COMPATABILITY.       @Z30SSMD*/ 21109803
*              2 * CHAR(2); /* IECRRPL COMPATABILITY.        @Z30SSMD*/ 21109903
*                                                                       21110002
*        /*                                                  @Z30SSMD*/ 21860003
*        /*     VSAM RECOVERY STATUS INDICATORS.             @Z30SSMD*/ 21870003
*        /*                                                  @Z30SSMD*/ 21880003
* DCL 1 IDARSTAT DEFINED(DXATEXC1),  /* RECOVERY ROUTINE STATUS AREA.*/ 21900002
*       2 RSTAT BIT(32),             /* STATUS FOR RECOVERY. @Z30SSMD*/ 22000003
*         3 RSTATOPT CHAR(1),        /* OPTION OR OPERATION.         */ 22050002
*         3 RSTATCRO CHAR(1),        /* CHECKPOINT/RESTRT OP @Z30SSDT*/ 22060003
*           4 IDARCKPT BIT(1),       /* CHECKPT IN PROGRESS  @Z30SSDT*/ 22070003
*           4 IDARRSTR BIT(1),       /* RESTART IN PROGRESS  @Z30SSDT*/ 22080003
*           4 IDARCRCU BIT(1),       /* C/R CLEANUP IN PROG  @Z30SSDT*/ 22090003
*           4 IDARCURS BIT(1),       /* RECURSION IF ON      @Z30SSDT*/ 22092003
*         3 RSTATOP2 CHAR(1),       /* O/C/E INDICATORS, 2ND BYTE.   */ 22100003
*           4 RSTATCSA BIT(1),      /* O/C/E OBTAINING CSA CORE.     */ 22100103
*           4 * BIT(7),             /* RESERVED - UNUSED, AVAILABLE. */ 22100203
*         3 *        CHAR(1);       /* RESERVED-UNUSED.      @Z30SSMD*/ 22100403
* DCL 1 IDARRTN DEFINED(DXATEXC2),  /* WORD TWO OF VSAM STATUS SWITCHES 22101003
*                                                            @Z30SSMD*/ 22101203
*        2 RSTATRTN CHAR(4);        /* RTNE IN CNTL.         @Z30SSMD*/ 22101403
*                                                                       22102002
*        /*                                                  @Z30SSMD*/ 22110003
*        /*      CONSTANTS FOR SETTING RSTATOPT.             @Z30SSMD*/ 22120003
*        /*                                                  @Z30SSMD*/ 22130003
* DCL IDARLOAD BIT(8) CONSTANT('80'X); /*IFG0192A/2Y IN CNTL.           22300003
*                                                            @Z30SSMD*/ 22301003
* DCL IDARIICL BIT(8) CONSTANT('40'X); /*II CLOSE IN PROGRESS. */       22305003
* DCL IDARIIOP BIT(8) CONSTANT('20'X); /*II OPEN IN PROGRESS. */        22350002
* DCL IDARTCLO BIT(8) CONSTANT('10'X); /*TCLOSE IN PROGRESS. */         22400002
* DCL IDAREOV  BIT(8) CONSTANT('08'X); /*EOV IN PROGRESS. */            22450002
* DCL IDARCLOS BIT(8) CONSTANT('04'X); /*CLOSE IN PROGRESS. */          22500002
* DCL IDAROPEN BIT(8) CONSTANT('02'X); /*OPEN IN PROGRESS. */           22550002
* DCL IDARVRP BIT(8) CONSTANT('01'X); /*BLDVRP/DLVRP IN PROGRESS.       22600003
*                                                            @Z30SSMD*/ 22605003
*                                                                       22610002
*        /*                                                  @Z30SSMD*/ 22650003
*        /*      CONSTANTS FOR SETTING RSTATRTN.             @Z30SSMD*/ 22700003
*        /*                                                  @Z30SSMD*/ 22750003
*                                                                       22752003
* DCL IDAR192A CHAR(4) CONSTANT('192A'); /*IDA0192A IN CNTL.@Z30SSMD*/  22765003
* DCL IDAR192B CHAR(4) CONSTANT('192B'); /*IDA0192B IN CNTL.@Z30SSMD*/  22766003
* DCL IDAR192C CHAR(4) CONSTANT('192C'); /*IDA0192C IN CNTL.@Z30SSMD*/  22770003
* DCL IDAR192D CHAR(4) CONSTANT('192D'); /*IDA0192D IN CNTL.@Z30SSMD*/  22780003
* DCL IDAR192F CHAR(4) CONSTANT('192F'); /*IDA0192F IN CNTL.@Z30SSMD*/  22781003
* DCL IDAR192G CHAR(4) CONSTANT('192G'); /*IDA0192G IN CNTL.@Z30SSMD*/  22785003
* DCL IDAR192M CHAR(4) CONSTANT('192M');/* IDA0192M IN CNTL.@Z30SSMD*/  22786003
* DCL IDAR192P CHAR(4) CONSTANT('192P'); /*IDA0192P IN CNTL.@Z30SSMD*/  22787003
* DCL IDAR192S CHAR(4) CONSTANT('192S'); /*IDA0192S IN CNTL.@Z30SSMD*/  22788003
* DCL IDAR192V CHAR(4) CONSTANT('192V'); /*IDA0192V IN CNTL.@Z30SSMD*/  22789003
* DCL IDAR192W CHAR(4) CONSTANT('192W'); /*IDA0192W IN CNTL.@Z30SSMD*/  22789203
* DCL IDAR192Y CHAR(4) CONSTANT('192Y');/* IDA0192Y IN CNTL.@Z30SSMD*/  22789403
* DCL IDAR192Z CHAR(4) CONSTANT('192Z'); /*IDA0192Z IN CNTL.@Z30SSMD*/  22789603
* DCL IDAR200B CHAR(4) CONSTANT('200B'); /*IDA0200B IN CNTL.@Z30SSMD*/  22790003
* DCL IDAR200T CHAR(4) CONSTANT('200T'); /*IDA0200T IN CNTL.@Z30SSMD*/  22791003
* DCL IDAR231B CHAR(4) CONSTANT('231B'); /*IDA0231B IN CNTL.@Z30SSMD*/  22794003
* DCL IDAR231T CHAR(4) CONSTANT('231T'); /*IDA0231T IN CNTL.@Z30SSMD*/  22799003
* DCL IDAR557A CHAR(4) CONSTANT('557A'); /*IDA0557A IN CNTL.@Z30SSMD*/  22804003
* DCL IDARA05B CHAR(4) CONSTANT('A05B'); /*IDA0A05B IN CNTL.@Z30SSDT*/  22854003
* DCL IDARC05B CHAR(4) CONSTANT('C05B'); /*IDA0C05B IN CNTL.@Z30SSDT*/  22904003
* DCL IDARC06C CHAR(4) CONSTANT('C06C'); /*IDA0C06C IN CNTL.@Z30SSDT*/  22954003
* DCL IDARI96C CHAR(4) CONSTANT('I96C'); /*IDA0I96C IN CNTL.@Z30SSDT*/  23004003
*                                                                       23160002
*        /*                                                  @Z30SSMD*/ 23350003
*        /* END OF IDARTMAC.                                 @Z30SSMD*/ 23400003
*        /*                                                  @Z30SSMD*/ 23450003
./  ADD  SSI=42900506,NAME=IDASFI
 /********************************************************************/ 00050004
 /*                                                                  */ 00100004
 /*   MACRO NAME = IDASFI                                            */ 00150004
 /*                                                                  */ 00200004
 /*   DESCRIPTIVE NAME = SUB-FUNCTION INFORMATION.                   */ 00250004
 /*                                                                  */ 00300004
 /*   FUNCTION = IDASFI DEFINES THE STRUCTURE OF THE PROBLEM         */ 00310004
 /*              DETERMINATION SUB-FUNCTION INFORMATION AREA.        */ 00320004
 /*                                                                  */ 00330004
 /*   CONTROL BLOCK STRUCTURE = N/A                                  */ 00340004
 /*                                                                  */ 00342004
 /*   INCLUDED MACROS = NONE                                         */ 00344004
 /*                                                                  */ 00346004
 /*   METHOD OF ACCESS = PL/S - RESPECIFY IDASFI BASED.              */ 00348004
 /*                                                                  */ 00348404
 /*   CREATED BY: N/A                                                */ 00348804
 /*                                                                  */ 00349204
 /*   STATUS = VS/1 RELEASE 4, VS2 RELEASE 3.                        */ 00349604
 /*                                                                  */ 00349704
 /*   DATE OF LAST CHANGE = 29 APRIL 74                              */ 00349804
 /*                                                                  */ 00349904
 /********************************************************************/ 00366604
   DCL 1 IDASFI BDY(WORD) BASED,    /* SUB-FUNCTION INFORMATION      */ 00383304
       2 SFIDESC FIXED(8),          /* FORMAT DESCRIPTOR CODE        */ 00400004
       2 * CHAR(3),                 /* UNUSED                        */ 00450004
       2 SFIRETCD FIXED(31),        /* SUB-FUNCTION RETURN CODE      */ 00500004
       2 * CHAR(1),                 /* RESERVED FOR REASON CODE      */ 00550004
       2 SFIRSNCD FIXED(8),         /* REASON CODE                   */ 00600004
       2 SFIMODID CHAR(2);          /* LAST TWO CHAR'S OF MOD NAME   */ 00650004
./  ADD  SSI=31180058,NAME=IDASMFR
* /*                                                                 */ 00650002
* /* MACCOMP Y-2 SC1DE/SJD61                                         */ 00700002
* /* MACSTAT Y-2 73103/Y02113                                        */ 00750002
* /*                                                                 */ 00800002
 %IDASMFR: MACRO;                                                       00850002
  DCL R CHAR;                           /*MACLIST ENTRY BEING PROCD*/   01200000
  DCL I FIXED;                          /*MACLIST NUMBER BEING PROCD*/  01800000
  DCL H CHAR;                           /*LABEL NAME HEADER*/           02400000
  DCL T CHAR;                                                           03000000
  DCL D CHAR;                                                           03600000
  I=0;                                  /*INIT COUNTER*/                04200000
 START:                                                                 04800000
   I=I+1;                               /*BUMP ENTRY NBR*/              05400000
   IF I>NUMBER(MACLIST) THEN GOTO SMFREND;  /*EXIT IF ALL PROC DONE*/   06000000
   R=MACLIST(I);                                                        06600000
   IF R='62' THEN GOTO BEGIN;           /*RECORD 62 IS SUPPORTED*/      07200000
   IF R='63' THEN GOTO BEGIN;           /*RECORD 63 IS SUPPORTED*/      07800000
   IF R='64' THEN GOTO BEGIN;           /*RECORD 64 IS SUPPORTED*/      08400000
   IF R='67' THEN GOTO BEGIN;           /*RECORD 67 IS SUPPORTED*/      09000000
   IF R='68' THEN GOTO BEGIN;           /*RECORD 68 IS SUPPORTED*/      09600000
   IF R='69' THEN GOTO BEGIN;           /*RECORD 69 IS SUPPORTED*/      10200000
   GOTO START;                                                          10800000
 BEGIN:                                                                 11400000
   ANS ('/* SMF RECORD '||R||'*/') COL(6);                              12000000
   ANS ('DCL 1 SMFRCD'||R||' BASED,/*FIRST LEVEL DCL*/') SKIP COL(4);   12600000
   H='SMF'||R;/*FORM HEADER*/                                           13200000
   T='2 '||H;                                                           13800000
   D='  3 '||H;                                                         14400000
   ANS (T||'LEN FIXED(15),/*RECORD LENGTH*/') SKIP COL(10);             15000000
   ANS (T||'SEG FIXED(15),/*SEGMENT DESCRIPTION*/') SKIP COL(10);       15600000
   ANS (T||'RSV CHAR(1),/*RESERVED*/') SKIP COL(10);                    16200000
   ANS (T||'RTY FIXED(8),/*RECORD TYPE '||R||'*/')  SKIP COL(10);       16800000
   ANS (T||'TME CHAR(4),/*TIME OF DAY*/') SKIP COL(10);                 17400000
   ANS (T||'DTE CHAR(4),/*DATE*/') SKIP COL(10);                        18000000
   ANS (T||'SID CHAR(2),/*SYSTEM IDENTIFICATION*/') SKIP COL(10);       18600000
   ANS (T||'MOD CHAR(2),/*SYSTEM MODULE ID*/') SKIP COL(10);            19200000
   ANS (T||'JNM CHAR(8),/*JOB NAME*/') SKIP COL(10);                    19800000
   ANS (T||'RST CHAR(4),/*READER START TIME*/')  SKIP COL(10);          20400000
   ANS (T||'RDT CHAR(4),/*READER START DATE*/')  SKIP COL(10);          21000000
   ANS (T||'UID CHAR(8),/*USER INDENTIFICATION*/')  SKIP COL(10);       21600000
   IF R='62' THEN GOTO REC62;                                           22200000
   IF R='63' THEN GOTO REC63;                                           22800000
   IF R='64' THEN GOTO REC64;                                           23400000
   IF R='67' THEN GOTO REC67;                                           24000000
   IF R='68' THEN GOTO REC68;                                           24600000
   IF R='69' THEN GOTO REC69;                                           25200000
   GOTO START;                                                          25800000
 REC62:                                                                 26400000
   ANS (T||'IND BIT(32),/*GOOD/BAD INDICATORS*/')  SKIP COL(10);        27000000
   ANS (D||'OOK BIT(1),/*OPEN WAS SUCCESSFUL*/') SKIP COL(10);          27600000
   ANS (D||'SVL BIT(1),/*SECURITY VIOLATION*/') SKIP COL(10);           28200000
   ANS (T||'CNM CHAR(44),/*CATALOG DATA SET NAME*/') SKIP COL(10);      28800000
   ANS (T||'CVS CHAR(6),/*CATALOG VOLUME SERIAL*/') SKIP COL(10);       29400000
   ANS (T||'DNM CHAR(44),/*DATA SET NAME*/') SKIP COL(10);              30000000
   ANS (T||'VCT FIXED(15),/*VOLUME COUNT*/') SKIP COL(10);              30600000
   ANS (T||'VLT (*),/*VOLUME LIST*/') SKIP COL(10);                     31200000
   ANS (D||'VSR CHAR(6),/*VOLUME SERIAL*/') SKIP COL(10);               31800000
   ANS (D||'DTY CHAR(4);/*DEVICE TYPE*/') SKIP COL(10);                 32400000
   GOTO START;                                                          33000000
 REC63:                                                                 33600000
   ANS (T||'CIN FIXED(15),/*INDICATORS*/') SKIP COL(10);                34200000
   ANS (T||'NES FIXED(15),/*NEW CATALOG ENT SIZE*/') SKIP COL(10);      34800000
   ANS (T||'OES FIXED(15),/*OLD CATALOG ENT SIZE*/') SKIP COL(10);      35400000
   ANS (T||'CNM CHAR(44),/*CATALOG NAME*/') SKIP COL(10);               36000000
   ANS (T||'NCT CHAR(*);/*NEW CATALOG ENT*/') SKIP COL(10);             36600000
   ANS ('DCL '||H||'OCT CHAR(*) BASED;/*OLD CATALOG ENT*/') SKIP COL(4);37200000
   GOTO START;                                                          37800000
 REC64:                                                                 38400000
   ANS (T||'RIN BIT(8),/*RECORDING INDICATORS*/') SKIP COL(10);         39000000
   ANS (D||'CLO BIT(1),/*RCD WRITTEN BY CLOSE*/') SKIP COL(10);         39600000
   ANS (D||'VSW BIT(1),/*RCD BY EOV-VOL SWITCH*/') SKIP COL(10);        40200000
   ANS ('3 '||H||'OSP BIT(1),/*RCD BY EOV-OUT OF SPACE*/') SKIP COL(12);40800000
   ANS (T||'DTY BIT(8),/*DATA SET TYPE*/') SKIP COL(10);                41400000
   ANS (D||'DTA BIT(1),/*DATA*/') SKIP COL(10);                         42000000
   ANS (D||'IDX BIT(1),/*INDEX*/') SKIP COL(10);                        42600000
   ANS (T||'CNM CHAR(44),/*CATALOG NAME*/') SKIP COL(10);               43200000
   ANS (T||'DNM CHAR(44),/*DATA SET NAME*/') SKIP COL(10);              43800000
   ANS (T||'NTR FIXED(15),/*NBR OF TRACKS REQD*/') SKIP COL(10);        44400000
   ANS (T||'CHR CHAR(4),/*CURRENT HIGH RBA*/') SKIP COL(10);            45000000
   ANS (T||'ESL FIXED(15),/*EXTENT SEGMENT LGTH*/') SKIP COL(10);       45600000
   ANS (T||'FEX CHAR(0);/*FIRST EXTENT*/') SKIP COL(10);                46200000
   ANS ('/* EXTENT TABLE - ONE PER VOLUME ON LINE AT TIME RECORD 64 WRIT46800000
 TEN */') SKIP COL(6);                                                  47400000
   ANS ('DCL 1 '||H||'EXT BASED,/*TABLE OF EXTENTS*/') SKIP COL(4);     48000000
   ANS (D||'FCC CHAR(4),/*FROM CCHH*/') SKIP COL(10);                   48600000
   ANS (D||'TCC CHAR(4),/*TO CCHH*/') SKIP COL(10);                     49200000
   ANS (D||'VSN CHAR(6),/*VOLUME SERIAL NBR*/') SKIP COL(10);           49800000
   ANS (D||'CUS CHAR(4),/*CUU AND SPINDLE ID*/') SKIP COL(10);          50400000
   ANS ('3 '||H||'UTY CHAR(4),/*UNIT TYPE - UCBTYPE */') SKIP COL(12);  51000000
   ANS ('        3  * CHAR(4);/*RESERVED*/') SKIP COL(10);              51600000
   ANS ('/* STATISTICS AT OPEN TIME */') SKIP COL(6);                   52200000
   ANS ('DCL 1 '||H||'STS BASED,/*DATA SET STATISTICS*/') SKIP COL(4);  52800000
   ANS (T||'SLN FIXED(31),/*STATISTICS SEG LGTH*/') SKIP COL(10);       53400000
   ANS (T||'NIL FIXED(31),/*NBR-INDEX LEVEL-OPEN*/') SKIP COL(10);      54000000
   ANS (T||'NEX FIXED(31),/*NBR-EXTENTS-OPEN*/') SKIP COL(10);          54600000
   ANS (T||'NLR FIXED(31),/*NBR-LOGICAL RCD-OPEN*/') SKIP COL(10);      55200000
   ANS (T||'NDE FIXED(31),/*NBR-DELETES-OPEN*/') SKIP COL(10);          55800000
   ANS (T||'NIN FIXED(31),/*NBR-INSERTS-OPEN*/') SKIP COL(10);          56400000
   ANS (T||'NUP FIXED(31),/*NBR-UPDATES-OPEN*/') SKIP COL(10);          57000000
   ANS (T||'NRE FIXED(31),/*NBR-RETRIEVES-OPEN*/') SKIP COL(10);        57600000
   ANS (T||'NFS FIXED(31),/*NBR-FREE SPACE-OPEN*/') SKIP COL(10);       58200000
   ANS (T||'NCS FIXED(31),/*NBR-CI SPLITS-OPEN*/') SKIP COL(10);        58800000
   ANS (T||'NAS FIXED(31),/*NBR-CA SPLITS-OPEN*/') SKIP COL(10);        59400000
   ANS (T||'NEP FIXED(31),/*NBR-EXCPS COUNT-OPEN*/') SKIP COL(10);      60000000
   ANS ('/*CHANGE IN STATISTICS DURING PROCESSING*/') SKIP COL(6);      60600000
   ANS (T||'DIL FIXED(31),/*CHANGE-NBR INDEX LEVEL*/') SKIP COL(10);    61200000
   ANS (T||'DEX FIXED(31),/*CHANGE-NBR EXTENTS*/') SKIP COL(10);        61800000
   ANS (T||'DLR FIXED(31),/*CHANGE-NBR LOGICAL RCD*/') SKIP COL(10);    62400000
   ANS (T||'DDE FIXED(31),/*CHANGE-NBR DELETES*/') SKIP COL(10);        63000000
   ANS (T||'DIN FIXED(31),/*CHANGE-NBR INSERTS*/') SKIP COL(10);        63600000
   ANS (T||'DUP FIXED(31),/*CHANGE-NBR UPDATES*/') SKIP COL(10);        64200000
   ANS (T||'DRE FIXED(31),/*CHANGE-NBR RETRIEVES*/') SKIP COL(10);      64800000
   ANS (T||'DFS FIXED(31),/*CHANGE-NBR FREE SPACE*/') SKIP COL(10);     65400000
   ANS (T||'DCS FIXED(31),/*CHANGE-NBR CI SPLITS*/') SKIP COL(10);      66000000
   ANS (T||'DAS FIXED(31),/*CHANGE-NBR CA SPLITS*/') SKIP COL(10);      66600000
   ANS (T||'DEP FIXED(31);/*CHANGE-NBR EXCP COUNT*/') SKIP COL(10);     67200000
   GOTO START;                                                          67800000
 REC67:                                                                 68400000
   ANS (T||'DIN BIT(8),/*DELETE INDICATORS*/') SKIP COL(10);            69000000
   ANS (D||'UNC BIT(1),/*UNCATALOG*/') SKIP COL(10);                    69600000
   ANS (D||'SCR BIT(1),/*SCRATCH*/') SKIP COL(10);                      70200000
   ANS (T||'DTY BIT(8),/*DATA SET TYPE*/') SKIP COL(10);                70800000
   ANS (D||'CLS BIT(1),/*CLUSTER*/') SKIP COL(10);                      71400000
   ANS (D||'USR BIT(1),/*USER DATA SET*/') SKIP COL(10);                72000000
   ANS (D||'IDX BIT(1),/*INDEX DATA SET*/') SKIP COL(10);               72600000
   ANS (T||'CNM CHAR(44),/*CATALOG NAME*/') SKIP COL(10);               73200000
   ANS (T||'DNM CHAR(44),/*DATA SET NAME*/') SKIP COL(10);              73800000
   ANS (T||'CES FIXED(15),/*CATALOG ENTRY SIZE*/') SKIP COL(10);        74400000
   ANS (T||'CEN CHAR(*);/*CATALOG ENTRY*/') SKIP COL(10);               75000000
   GOTO START;                                                          75600000
 REC68:                                                                 76200000
   ANS (T||'CNM CHAR(44),/*CATALOG NAME*/') SKIP COL(10);               76800000
   ANS (T||'ONM CHAR(44),/*OLD DATA SET NAME*/') SKIP COL(10);          77400000
   ANS (T||'NNM CHAR(44);/*NEW DATA SET NAME*/') SKIP COL(10);          78000000
   GOTO START;                                                          78600000
 REC69:                                                                 79200000
   ANS (T||'CUS CHAR(4),/*CUU AND SPINDLE ID*/') SKIP COL(10);          79800000
   ANS (T||'NDS FIXED(15),/*NBR AM/0 DATA SPACES*/') SKIP COL(10);      80400000
   ANS (T||'NUC FIXED(15),/*NBR UNALLOCATED CYL*/') SKIP COL(10);       81000000
   ANS (T||'NUT FIXED(15),/*NBR UNALLOCATED TRKS*/') SKIP COL(10);      81600000
   ANS (T||'LUC FIXED(15),/*LRGT NBR UNALLOC CYL*/') SKIP COL(10);      82200000
   ANS (T||'LUT FIXED(15),/*LRGT NBR ALLOC TRKS*/') SKIP COL(10);       82800000
   ANS (T||'CNM CHAR(44),/*CATALOG NAME*/') SKIP COL(10);               83400000
   ANS (T||'VSR CHAR(6);/*VOLUME SERIAL NBR*/') SKIP COL(10);           84000000
   GOTO START;                                                          84600000
 %SMFREND: END IDASMFR;                                                 85200000
./  ADD  SSI=42900508,NAME=IDASSL
 /********************************************************************/ 00050004
 /*                                                                  */ 00100004
 /*   MACRO NAME = IDASSL                                            */ 00150004
 /*                                                                  */ 00200004
 /*   DESCRIPTIVE NAME = SWAP SAVE LIST.                             */ 00250004
 /*                                                                  */ 00300004
 /*   FUNCTION = IDASSL CONTAINS A LIST OF CONTROL BLOCKS TO BE      */ 00350004
 /*              CHAINED AFTER OPEN IS GUARANTEED TO OPEN. ADDITIONAL*/ 00400004
 /*              LISTS ARE CHAINED AS REQUIRED.                      */ 00450004
 /*                                                                  */ 00460004
 /*   CONTROL BLOCK STRUCTURE = POINTED TO BY THE OPEN ACB WORK AREA.*/ 00470004
 /*                                                                  */ 00480004
 /*   INCLUDED MACROS = NONE                                         */ 00490004
 /*                                                                  */ 00492004
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00494004
 /*                                                                  */ 00496004
 /*   CREATED BY: VSAM OPEN MODULE IDA0192A.                         */ 00498004
 /*                                                                  */ 00498404
 /*   STATUS = VS1 RELEASE 4, VS2 RELEASE 3.                         */ 00498804
 /*                                                                  */ 00499204
 /*   DATE OF LAST CHANGE = 2 AUGUST 74                              */ 00499604
 /*                                                                  */ 00499704
 /********************************************************************/ 00499804
    DCL 1 IDASSL BASED,             /* SWAP SAVE LISTS               */ 00500004
          2 SSLSUBPL FIXED (8),     /* SUBPOOL NUMBER OF THIS SSL    */ 00550004
          2 SSLLENTH FIXED (24),    /* LENGTH OF THIS LIST           */ 00600004
          2 SSLID CHAR (8),         /* BLOCK IDENTIFER               */ 00650004
          2 SSLNXPTR PTR (31),      /* PTR TO NEXT SSL OR 0 IF END      00700004
                                       OF CHAIN                      */ 00750004
          2 SSLACEN FIXED (15),     /* NUMBER OF ACTIVE ENTRIES      */ 00800004
          2 * FIXED (15),           /* RESERVED                      */ 00850004
          2 SSLENTRY (16),          /* SWAP SAVE ENTRY               */ 00900004
            3 SSLSWPTR PTR (31),    /* PTR TO SWAP WORD              */ 00950004
            3 SSLSWAP FIXED (31)    /* SWAP CONTENTS                 */ 01000004
    ;                                                                   01050004
    DCL IDASSLID CHAR (8) CONSTANT (' IDASSL '); /* CHAR CONSTANT       01100004
                                       FOR SSLID                     */ 01150004
./  ADD  SSI=51900113,NAME=IDASVR14
         MACRO                                                          03000000
&NAME    IDASVR14                                                       06000000
&NAME    LH    R15,PLHRETO(,RPLH)      GET CURRENT OFFSET               09000000
         ST    R14,PLHRET1(R15,RPLH)   STORE R14                        12000000
         LA    R15,4(,R15)             ADVANCE OFFSET                   15000000
         STH   R15,PLHRETO(,RPLH)      STORE NEW OFFSET                 18000000
         MEND                                                           21000000
./  ADD  SSI=82090569,NAME=IDATRACE
*/******************************************************************/   00050006
*/*  MACRO NAME = IDATRACE                                         */   00100006
*/*                                                                */   00150006
*/*  DESCRIPTIVE NAME = VSAM TRACE WORK AREA DSECT                 */   00200006
*/*                                                                */   00250006
*/*  FUNCTION = DESCRIBES THE WORK AREA, DECB'S AND BUFFERS        */   00300006
*/*             FOR THE TRACE ROUTINES.                            */   00350006
*/*                                                                */   00400006
*/*  CONTROL BLOCK STRUCTURE = IDATRACE IS POINTED TO BY IDAAMB    */   00450006
*/*                                                                */   00500006
*/*  INCLUDED MACROS = NONE                                        */   00550006
*/*                                                                */   00600006
*/*  METHOD OF ACCESS = PL/S OR ASM.                               */   00650006
*/*                                                                */   00700006
*/*  CREATED BY = VSAM OPEN (CORE OBTAINED)                        */   00750006
*/*               IDA019SU (FIELDS INITIALIZED)                    */   00800006
*/*                                                                */   00850006
*/*  STATUS = VS/1 RELEASE 6                                       */   00900006
*/*           VS/2 RELEASE 3.7                                     */   00950006
*/*                                                                */   01000006
*/*  DATA OF LAST CHANGE = 19 MAY 1978                             */   01050006
*/*                                                                */   01100006
*/******************************************************************/   01150006
*  DCL 1 IDATRACE BASED ,               /* IDATRACE                */   01200006
*        2 SAVE1X ,                     /* MAIN SAVE AREA          */   01250006
*          3 TRAENTRY PTR(31),          /* IDA019ST ENTRY POINT    */   01300006
*          3 * CHAR(72),                /* SAVE AREA               */   01350006
*        2 PRTSAVE CHAR(64),            /* IDA019SU SAVE AREA      */   01400006
*        2 HOLDREGS CHAR(32),           /* WORK SAVE AREA          */   01450006
*        2 OLDSAVE PTR(31),             /* ADDRESS OF SWAPED SAVE  */   01500006
*        2 ROUTCDE PTR(31),             /* WTO ROUTE CODE          */   01550006
*        2 REPLY@ CHAR(24),             /* WTOR PARM LIST          */   01600006
*          3   *   CHAR(16),            /* INPUT AREA FOR WTORS    */   01650006
*          3 REPLYMSG BIT(32),          /* WTOR TEXT PARMS         */   01700006
*            4 REPLYLYL BIT(8),         /* INPUT REPLY LENGTH      */   01750006
*            4 REPLYIN BIT(24),         /* PTR TO REPLY INPUT AREA */   01800006
*          3 RELYECB CHAR(4),           /* ECB FOR WTOR            */   01850006
*        2 MSGLNG CHAR(4),              /* MESSAGE LENGTH          */   01900006
*        2 OUTLINE CHAR(133),           /* PRINT LINE              */   01950006
*          3 MESSAGES CHAR(133),        /* MESSAGE BUILD AREA      */   02000006
*           4 HEADER CHAR(133),         /* HEADER BUILD AREA       */   02050006
*            5 * BIT(8),                /*                         */   02100006
*            5 ADDRESS CHAR(6),         /* ADDRESS PART OF PRINT   */   02150006
*            5 * BIT(8),                /*                         */   02200006
*            5 DISPLACE CHAR(3),        /* DISPLACEMENT IN PRINT   */   02250006
*            5 * CHAR(2),               /*                         */   02300006
*            5 LINE1 CHAR(39),          /* FIRST PART OF PRINT     */   02350006
*            5 LINE2 CHAR(38),          /* 2ND PART OF PRINT       */   02400006
*            5 ENGLISH CHAR(34),        /* TRANSLATED PART OF PRINT*/   02450006
*            5 * CHAR(9),               /*                         */   02500006
*        2 DLLLINE CHAR(66),            /* DLL FORMAT BUILD AREA   */   02550006
*        2 OUTREG   CHAR(4) BDY(WORD),  /* INTERNAL RETURN REG     */   02600006
*        2 IBUFFC   CHAR(4),            /* ADDR OF INDEX BUFC      */   02650006
*        2 DBUFFC   CHAR(4),            /* ADDR OF DATA BUFC       */   02700006
*        2 UNPACK   CHAR(12),           /* FILED USED TO UNPACK    */   02750006
*        2 WORK1    CHAR(4),            /* START DUMP ADDRESS      */   02800006
*        2 WORK2    CHAR(4),            /* ALIGNED DUMP ADDRESS    */   02850006
*        2 WORK3    CHAR(4),            /* DDD VALUE               */   02900006
*        2 WORK5    CHAR(4),            /* END OF DATA FOR ZERO    */   02950006
*        2 WORK6    CHAR(4),            /* CURRENT PRINT LENGTH    */   03000006
*        2 IRBNUM   CHAR(4),            /* IRB INTERRUPT NUMBER    */   03050006
*        2 CPLH     CHAR(4),            /* CURRENT PLH ADDRESS     */   03100006
*        2 UPGPTR   CHAR(4),            /* UPG TABLE ADDRESS       */   03150006
*        2 INLENGTH CHAR(4),            /* REPLY LENGTH            */   03200006
*        2 AMBL     CHAR(4),            /* ADDRESS OF AMBL         */   03250006
*        2 IAMB     CHAR(4),            /* ADDRESS OF INDEX AMB    */   03300006
*        2 DAMB     CHAR(4),            /* ADDRESS OF DATA AMB     */   03350006
*        2 RPL      CHAR(4),            /* ADDRESS OF RPL          */   03400006
*        2 PLH      CHAR(4),            /* ADDRESS OF PLH          */   03450006
*        2 VATADDR  CHAR(4),            /* ADDRESS OF VAT          */   03500006
*        2 BUFFLEN  CHAR(4),            /* LENGTH OF USER BUFFERS  */   03550006
*        2 STATUS BIT(8),               /* 1 CALL STATUS FLAGS     */   03600006
*          3 WTOR BIT(1),               /* WTOR ISSUED             */   03650006
*          3 GOOD BIT(1),               /* CALL WAS HANDLED        */   03700006
*          3 INDXPROC BIT(1),           /* WORKING IN INDEX CBS    */   03750006
*          3 HEADOUT BIT(1),            /* HEADER MSG WAS ISSUED   */   03800006
*          3 UPGSHORT BIT(1),           /* SHORT UPG PRINT         */   03850006
*          3 PATHDONE BIT(1),           /* FINISHED PATH PROCESSING*/   03900006
*          3 BASEDONE BIT(1),           /* FINISHED BASE PROCESSING*/   03950006
*          3 UPGDONE BIT(1),            /* DOING UPG PROCESSING    */   04000006
*        2 STATUS2 CHAR(1),             /* 2 CALL STATUS FLAGS     */   04050006
*          3 UNSWAP BIT(1),             /* HAD TO UNSWAP THE PARM  */   04100006
*          3 * BIT(7),                  /*                         */   04150006
*        2 HOOKCALL CHAR(2),            /* CALLING HOOK NUMBER     */   04200006
*        2 SAVEIN1 CHAR(60) BDY(WORD),  /* INPUT REG SAVE AREA     */   04250006
*          3 * CHAR(4),                 /*                         */   04300006
*          3 RPLIN CHAR(4),             /* INPUTTED RPL ADDRESS    */   04350006
*          3 PLHIN CHAR(4),             /* INPUTTED PLH ADDRESS    */   04400006
*          3 AMBIN CHAR(4),             /* INPUTTED AMB ADDRESS    */   04450006
*          3 * CHAR(36),                /* INPUT REGS 4 THRU 12    */   04500006
*          3 R13IN CHAR(4),             /* INPUTTED REG 13         */   04550006
*          3 R14IN CHAR(4),             /* INPUTTED REG 14 (RETURN)*/   04600006
*        2 SAVE2X,                      /* SAME AS SAVE1X          */   04650006
*          3 SAVEIN2 CHAR(560),         /*                         */   04700006
*        2 SAVE3X,                      /* SAME AS SAVE1X          */   04750006
*          3 SAVEIN3 CHAR(560),         /*                         */   04800006
*        2 SAVE4X CHAR(20),             /* GETMAIN SAVE AREA 1     */   04850006
*        2 SAVE5X CHAR(20),             /* GETMAIN SAVE AREA 2     */   04900006
*        2 SAVE6X CHAR(20),             /* GETMAIN SAVE AREA 3     */   04950006
*        2 FLAG0 BIT(8),                /* CONTROL FLAGS           */   05000006
*          3 SWAPED   BIT(1),           /* PARM LIST IS SWAPED     */   05050006
*          3 *        BIT(1),           /*                         */   05100006
*          3 INDEXOFF BIT(1),           /* TURNED INDEX OPTION OFF */   05150006
*          3 NOCORE   BIT(1),           /* GETMAIN FAILED          */   05200006
*          3 NOSAVE   BIT(1),           /* NO SAVE AREA FOR ENTRY  */   05250006
*          3 CASPLIT  BIT(1),           /* CA SPLIT IN PROGRESS    */   05300006
*          3 CISPLIT  BIT(1),           /* CI SPLIT IN PROGRESS    */   05350006
*          3 NODDNAME BIT(1),           /* BAD TRACE DS DDNAME     */   05400006
*        2 FLAG1 BIT(8),                /*                         */   05450006
*          3 STOP     BIT(1),           /* TERMINATE BIT           */   05500006
*          3 COUNTOLY BIT(1),           /* COUNT MODE              */   05550006
*          3 MVS      BIT(1),           /* IOSB/IOMB, NOT IOB      */   05600006
*          3 ADDRONLY BIT(1),           /* ADDRESS DISPLAY MODE    */   05650006
*          3 PARMS    BIT(1),           /* HAVE INPUT PARMS        */   05700006
*          3 *        BIT(1),           /*                         */   05750006
*          3 RMERRCD  BIT(1),           /* HAVE ERROR CODE         */   05800006
*          3 COUNTING BIT(1),           /* HAVE START/STOP VALUES  */   05850006
*        2 FLAG2 BIT(8),                /* FLAGS TO DETERMINE THE  */   05900006
*          3 DATACB   BIT(1),           /* CONTROL BLOCKS TO PRINT */   05950006
*          3 INDEXCB  BIT(1),           /*                         */   06000006
*          3 RPLX     BIT(1),           /*                         */   06050006
*          3 ACBX     BIT(1),           /*                         */   06100006
*          3 PLHX     BIT(1),           /*                         */   06150006
*          3 ALLCB    BIT(1),           /*                         */   06200006
*          3 BUFFCX   BIT(1),           /*                         */   06250006
*          3 AMBLX    BIT(1),           /*                         */   06300006
*        2 FLAG3 BIT(8),                /*                         */   06350006
*          3 BUFFX    BIT(1),           /*                         */   06400006
*          3 IOBX     BIT(1),           /*                         */   06450006
*          3 CPAX     BIT(1),           /*                         */   06500006
*          3 ICWAX    BIT(1),           /*                         */   06550006
*          3 AMBX     BIT(1),           /*                         */   06600006
*          3 AMDSBX   BIT(1),           /*                         */   06650006
*          3 ARDBX    BIT(1),           /*                         */   06700006
*          3 DEBX     BIT(1),           /*                         */   06750006
*        2 FLAG4 BIT(8),                /*                         */   06800006
*          3 BSPHX    BIT(1),           /*                         */   06850006
*          3 UPTX     BIT(1),           /*                         */   06900006
*          3 BIBX     BIT(1),           /*                         */   06950006
*          3 HEBX     BIT(1),           /*                         */   07000006
*          3 VATX     BIT(1),           /*                         */   07050006
*          3 VSRTX    BIT(1),           /*                         */   07100006
*          3 RECDX    BIT(1),           /*                         */   07150006
*          3 KEYX     BIT(1),           /*                         */   07200006
*        2 FLAG5 BIT(8),                /*                         */   07250006
*          3 REGX     BIT(1),           /*                         */   07300006
*          3 IICBX    BIT(1),           /* LAST CB OPTION BIT      */   07350006
*          3 DLL      BIT(1),           /* WANTS OUTPUT IN DLL     */   07400006
*          3 PAPSAVE  BIT(1),           /* WANTS PAPER SAVE        */   07450006
*          3 NOTE1    BIT(1),           /* WANTS LIMIT PRINT       */   07500006
*          3 AIXX     BIT(1),           /* WANTS AIX RE-PROMPT     */   07550006
*          3 COUNTX   BIT(1),           /* WANTS COUNT PROMPT      */   07600006
*          3 ERRCDPMT BIT(1),           /* WANTS ERROR CODE PMT    */   07650006
*        2 FLAG6 BIT(8),                /* ERROR CODE FROM OPTR    */   07700006
*        2 AIXIN  CHAR(3),              /* AIX PARM LIST           */   07750006
*        2 AIXOPT BIT(8),               /* AIX FLAGS               */   07800006
*          3 * BIT(4),                  /* SAME AS FLAG 5 EXCEPT   */   07850006
*          3 ONLYCALL BIT(1),           /* PRINT ONLY THE CALLER   */   07900006
*          3 AIXNOAIX BIT(1),           /* DOESNT WANT AIX         */   07950006
*          3 AIXNOBSE BIT(1),           /* DOESNT WANT BASE        */   08000006
*          3 AIXUPG BIT(1),             /* DOES WANT UPG           */   08050006
*        2 UPGCOUNT BIT(8),             /* COUNTER OF UPGS DONE    */   08100006
*        2 PSWKEY BIT(8),               /* OPEN PSW KEY            */   08150006
*        2 ECB@ CHAR(4) BDY(WORD),      /* NORMAL WTOR ECB         */   08200006
*        2 LPMBADR CHAR(4),             /* VARIOUS CB POINTERS     */   08250006
*        2 IBUFFLEN CHAR(4),                                            08300006
*        2 DBUFFLEN CHAR(4),                                            08350006
*        2 HOOK CHAR(4),                /* ACTIVE TRACE HOOK NUMS  */   08400006
*        2 JOBNAME CHAR(8),             /* JOBNAME FOR MESSAGES    */   08450006
*        2 STEPNAME CHAR(8),            /* STEP NAME FOR MESSAGES  */   08500006
*        2 DDNAME CHAR(8),              /* DDNAME OF DS BEING TRAC */   08550006
*        2 COUNTS  CHAR(4),             /* START COUNT VALUE       */   08600006
*        2 COUNTE  CHAR(4),             /* STOP COUNT VALUE        */   08650006
*        2 COUNT2  CHAR(4),             /* TOTAL COUNT VALUE       */   08700006
*        2 COUNT   CHAR(4),             /* GOOD COUNT VALUES       */   08750006
*        2 DECB@0 CHAR(80),             /* 20 DECB ADDRESSS        */   08800006
*        2 OPENLST CHAR(4),             /* OPEN PARM LIST          */   08850006
*        2 CURREC CHAR(4) BDY(DWORD),   /* POINTER TO CURRENT REC  */   08900006
*        2 CURDECBT CHAR(4),            /* POINTER TO CUR DECB     */   08950006
*        2 ZEROLINE CHAR(40),           /* ZERO LINE MESSAGE AREA  */   09000006
*        2 TRACE CHAR(88),              /* TRACE OUTPUT DCB        */   09050006
*        2 DECB0 CHAR(400),             /* 20 DECBS                */   09100006
*        2 BUFFER0 CHAR(53200);         /* 20 BUFFERS              */   09150006
*/******************************************************************/   09200006
*%GOTO   IDAEND;                                                        09250006
         MACRO                                                          09300006
         IDATRACE  &DSECT=YES                                           09350006
         AIF ('&DSECT' EQ 'NO').NODS                                    09400006
IDATRACE DSECT                                                          09450006
.NODS    ANOP                                                           09500006
         AGO   .TRDSECT                                                 09550006
IDATRACE DS    0F                                                       09600006
.TRDSECT ANOP                                                           09650006
SAVE1X   DS    19F          MAIN SAVE AREA FOR EXTERNAL CALLS           09700006
PRTSAVE  DS    16F          IDA019SU SAVE AREA                          09750006
HOLDREGS DS    8F           WORKING SAVE AREA                           09800006
OLDSAVE  DS    F            ADDRESS OF SAVE AREA THAT WAS SWAPED        09850006
ROUTCDE  DS    F            ROUTING CODE FOR WTO                        09900006
REPLY@   DS    XL11         INPUT AREA FOR WTOR'S                       09950006
REPLY2   DS    XL5          PADDING THE INPUT AREA                      10000006
* WTO PARAMETER LIST                                                    10050006
REPLYMSG EQU   *                                                        10100006
REPLYLYL DS    XL1          REPLY INPUT LENGTH (10)                     10150006
REPLYIN  DS    XL3          ADDRESS OF THE REPLY AREA (REPLY)           10200006
RELYECB  DS    F            ADDRESS OF THE WTOR ECB                     10250006
MSGLNG   DS    F            LENGTH OF THE OUTPUT MESSAGE                10300006
*** OUTPUT AND MESSAGE BUILD AREA. ********************************     10350006
OUTLINE  DS    XL133               PRINT LINE                           10400006
MESSAGES EQU   OUTLINE                                                  10450006
HEADER   EQU   OUTLINE                                                  10500006
ADDRESS  EQU   OUTLINE+1                                                10550006
DISPLACE EQU   OUTLINE+8           DDD VALUE                            10600006
LINE1    EQU   OUTLINE+13          FIRST SECTION OF DUMP                10650006
LINE2    EQU   OUTLINE+52          SECOND SECTION OF DUMP               10700006
ENGLISH  EQU   OUTLINE+90          TRANSLATED PART OF DUMP              10750006
DLLLINE  DS    XL66                2ND PRINT LINE FOR DLL FORMAT        10800006
**********************************************************************  10850006
OUTREG   DS    F                                                        10900006
IBUFFC   DS    F                                                        10950006
DBUFFC   DS    F                                                        11000006
UNPACK   DS    3F                                                       11050006
WORK1    DS    F                      START DUMP ADDRESS                11100006
WORK2    DS    F                      ALIGNED DUMP ADDRESS              11150006
WORK3    DS    F                      DDD VALUE (LAST 3 BYTES)          11200006
WORK5    DS    F                      END OF DATA FOR ZEROCHECK         11250006
WORK6    DS    F                      CURRENT PRINT LENGTH              11300006
IRBNUM   DS    F                                                        11350006
CPLH     DS    F                                                        11400006
UPGPTR   DS    F                                                        11450006
INLENGTH DS    F                                                        11500006
AMBL     DS    F                      AMBL ADDRESS                      11550006
IAMB     DS    F                      INDEX AMB                         11600006
DAMB     DS    F                      DATA AMB                          11650006
RPL      DS    F                                                        11700006
PLH      DS    F                                                        11750006
VATADDR  DS    F                                                        11800006
BUFFLEN  DS    F                                                        11850006
STATUS   DS    XL1                                                      11900006
WTOR     EQU   128                                                      11950006
GOOD     EQU   64                                                       12000006
INDXPROC EQU   32                                                       12050006
HEADOUT  EQU   16                                                       12100006
UPGSHORT EQU   8                                                        12150006
PATHDONE EQU   4                                                        12200006
BASEDONE EQU   2                                                        12250006
UPGDONE  EQU   1                                                        12300006
STATUS2  DS    XL1                                                      12350006
UNSWAP   EQU   128                                                      12400006
HOOKCALL DS    XL2                    CALLER HOOK NUMBER                12450006
SAVEIN1  DS    15F                                                      12500006
RPLIN    EQU   SAVEIN1+4              ADDRESS OF CALLERS REG 1          12550006
PLHIN    EQU   SAVEIN1+8              ADDRESS OF CALLERS REG 2          12600006
AMBIN    EQU   SAVEIN1+12             ADDRESS OF CALLERS REG 3          12650006
R13IN    EQU   SAVEIN1+52             ADDRESS OF CALLERS REG 13         12700006
R14IN    EQU   SAVEIN1+56             ADDRESS OF CALLERS REG 14         12750006
*************************** END OF SAVE 1 ***************************** 12800006
SAVE2X   DC    (*-SAVE1X)X'00'        2ND SAVE AREA, SAME AS SAVE1.     12850006
SAVEIN2  EQU   SAVE2X+SAVEIN1-SAVE1X                                    12900006
*************************** END OF SAVE 2 ***************************** 12950006
SAVE3X   DC    (SAVE2X-SAVE1X)X'00'   3RD SAVE AREA, SAME AS SAVE1.     13000006
SAVEIN3  EQU   SAVE3X+SAVEIN1-SAVE1X                                    13050006
*************************** END OF SAVE 3 ***************************** 13100006
SAVE4X   DS    5F                     4TH SAVE AREA INCASE OF GETMAIN   13150006
SAVE5X   DS    5F                     5TH SAVE AREA INCASE OF GETMAIN   13200006
SAVE6X   DS    5F                     6TH SAVE AREA INCASE OF GETMAIN   13250006
************************** FLAG1 *************************              13300006
FLAG0    DS    XL1                                                      13350006
SWAPED   EQU   128                                                      13400006
INDEXOFF EQU   32                                                       13450006
NOCORE   EQU   16                                                       13500006
NOSAVE   EQU   8                                                        13550006
CASPLIT  EQU   4                                                        13600006
CISPLIT  EQU   2                                                        13650006
NODDNAME EQU   1                                                        13700006
FLAG1    DS    XL1                ***** FLAG 1                          13750006
STOP     EQU   128                                                      13800006
COUNTOLY EQU   64                                                       13850006
MVS      EQU   32                                                       13900006
ADDRONLY EQU   16                                                       13950006
PARMS    EQU   8                                                        14000006
UNUSED   EQU   4                                                        14050006
RMERRCD  EQU   2                   HAVE SUPPLIED ERROR CODE             14100006
COUNTING EQU   1                   DO COUNT VALUES                      14150006
FLAG2    DS    XL1                ***** FLAG 2                          14200006
DATACB   EQU   128                 WANTS DATA CB'S                      14250006
INDEXCB  EQU   64                  WANTS INDEX CB'S                     14300006
RPLX     EQU   32                  WANTS RPL                            14350006
ACBX     EQU   16                  WANTS ACB                            14400006
PLHX     EQU   8                   WANTS PLH                            14450006
ALLCB    EQU   4                   WANTS ALL CB'S PRINTED               14500006
BUFFCX   EQU   2                   WANTS BUFFC PRINT                    14550006
AMBLX    EQU   1                   WANTS AMBL PRINT                     14600006
FLAG3    DS    XL1                ***** FLAG 3                          14650006
BUFFX    EQU   128                 WANTS BUFFER PRINT                   14700006
IOBX     EQU   64                  WANTS IOB PRINT                      14750006
CPAX     EQU   32                                                       14800006
ICWAX    EQU   16                  WANTS ICWA, IMWA OR DIWA (IF DATA)   14850006
AMBX     EQU   8                   WANTS AMB PRINT                      14900006
AMDSBX   EQU   4                   WANTS AMDSB PRINT                    14950006
ARDBX    EQU   2                   WANTS ARDB, EDB, LPMB PRINT          15000006
DEBX     EQU   1                   WANTS DEB                            15050006
FLAG4    DS    XL1                ***** FLAG 4                          15100006
BSPHX    EQU   128                 WANTS BSPH PRINT                     15150006
UPTX     EQU   64                  WANTS UPT PRINT                      15200006
BIBX     EQU   32                  WANTS BIB AND CMB PRINT              15250006
HEBX     EQU   16                  WANTS HEB PRINT                      15300006
VATX     EQU   8                   WANTS VAT AND VMT PRINT              15350006
VSRTX    EQU   4                   WANTS VSRT PRINT                     15400006
RECDX    EQU   2                   WANTS USER RECORD                    15450006
KEYX     EQU   1                   WANTS SEARCH ARGUMENT                15500006
FLAG5    DS    XL1                ***** FLAG 5                          15550006
REGX     EQU   128                 WANTS REGS                           15600006
IICBX    EQU   64                  WANTS IICB AND DCB                   15650006
DLL      EQU   32                  WANTS OUTPUT IN DLL FORMAT           15700006
PAPSAVE  EQU   16                  WANTS PAPER SAVED                    15750006
NOTE1    EQU   8                   SINGLE PRINT OPTION                  15800006
AIXX     EQU   4                   WANTS REPROMPT FOR AIX STUFF         15850006
COUNTX   EQU   2                   COUNT MODE                           15900006
ERRCDPMT EQU   1                   PROMPT FOR ERROR CODE                15950006
FLAG6    DS    XL1                 ERROR CODE FROM OPERATOR             16000006
AIXIN    DS    XL3                 AIX PARM LIST                        16050006
AIXOPT   DS    XL1                 UNIQUE INFO FOR AIX                  16100006
ONLYCALL EQU   8                                                        16150006
AIXNOAIX EQU   4                                                        16200006
AIXNOBSE EQU   2                                                        16250006
AIXUPG   EQU   1                                                        16300006
UPGCOUNT DS    XL1                 COUNT OF UPGRADES DONE.              16350006
PSWKEY   DS    XL1                 PSW KEY                              16400006
ECB@     DS    F                   NORMAL WTOR ECB                      16450006
LPMBADR  DS    F                                                        16500006
IBUFFLEN DS    F                                                        16550006
DBUFFLEN DS    F                                                        16600006
HOOK     DS    F                                                        16650006
JOBNAME  DS    2F                                                       16700006
STEPNAME DS    2F                                                       16750006
DDNAME   DS    2F                                                       16800006
COUNTS   DS    F                                                        16850006
COUNTE   DS    F                                                        16900006
COUNT2   DS    F                                                        16950006
COUNT    DS    F                                                        17000006
DECB@0   DS    F                     A(DECB0)                           17050006
DECB@1   DS    F                     A(DECB1)                           17100006
DECB@2   DS    F                     A(DECB2)                           17150006
DECB@3   DS    F                     A(DECB3)                           17200006
DECB@4   DS    F                     A(DECB4)                           17250006
DECB@5   DS    F                     A(DECB5)                           17300006
DECB@6   DS    F                     A(DECB6)                           17350006
DECB@7   DS    F                     A(DECB7)                           17400006
DECB@8   DS    F                     A(DECB8)                           17450006
DECB@9   DS    F                     A(DECB9)                           17500006
DECB@10  DS    F                     A(DECB10)                          17550006
DECB@11  DS    F                     A(DECB11)                          17600006
DECB@12  DS    F                     A(DECB12)                          17650006
DECB@13  DS    F                     A(DECB13)                          17700006
DECB@14  DS    F                     A(DECB14)                          17750006
DECB@15  DS    F                     A(DECB15)                          17800006
DECB@16  DS    F                     A(DECB16)                          17850006
DECB@17  DS    F                     A(DECB17)                          17900006
DECB@18  DS    F                     A(DECB18)                          17950006
DECB@19  DS    F                     A(DECB19)                          18000006
OPENLST  DS    F                     OPEN PARM LIST                     18050006
         DS    0D           ALIGN FOR CDS INSTRUCTION                   18100006
CURREC   DS    F                     A(BUFFER1)                         18150006
CURDECBT DS    F                     A(DECB@0)                          18200006
ZEROLINE DS    CL40                  ZERO LINE MESSAGE                  18250006
**********************************************************************  18300006
*TRACE    DCB   DDNAME=TRACE,DSORG=PS,MACRF=W,RECFM=FBM,NCP=20,         18350006
*               BLKSIZE=2660,LRECL=133                                  18400006
TRACE    DS    CL88         ROOM FOR ONE DCB                            18450006
DECB0    DS    20XL20       20 DECBS                                    18500006
BUFFER0  DS    20CL2660     20 BUFFERS                                  18550006
         MEND                                                           18600006
*                                                                       18650006
*%IDAEND: ;                                                             18700006
./  ADD  SSI=50960009,NAME=IDAUPT
 /********************************************************************/ 00050004
 /*                                                                  */ 00100004
 /*   MACRO NAME = IDAUPT                                            */ 00150004
 /*                                                                  */ 00200004
 /*   DESCRIPTIVE NAME = UPGRADE TABLE.                              */ 00250004
 /*                                                                  */ 00300004
 /*   FUNCTION = THE UPT CONTAINS INFORMATION RELATING TO THE        */ 00310004
 /*              IMMEDIATE UPGRADE SET.                              */ 00320004
 /*                                                                  */ 00330004
 /*   CONTROL BLOCK STRUCTURE = POINTED TO BY THE BIB (BIBUPT)       */ 00340004
 /*                             WHENEVER THE IMMEDIATE UPGRADE SET   */ 00342004
 /*                             IS OPENED.                           */ 00344003
 /*                                                                  */ 00346004
 /*   INCLUDED MACROS = NONE                                         */ 00348004
 /*                                                                  */ 00348404
 /*   METHOD OF ACCESS = PL/S - RESPECIFY IDAUPT BASED.              */ 00348804
 /*                                                                  */ 00349204
 /*   CREATED BY: VSAM OPEN MODULE IDA0192F.                         */ 00349604
 /*                                                                  */ 00349704
 /*   STATUS = VS1 RELEASE 4, VS2 RELEASE 3.                         */ 00349804
 /*                                                                  */ 00349904
 /*   DATE OF LAST CHANGE = 1 AUGUST 74                              */ 00366604
 /*                                                                  */ 00376604
 /********************************************************************/ 00378604
    DCL                                                                 00383304
      1 IDAUPT BASED BDY(WORD),     /* UPGRADE TABLE                 */ 00400004
       2 UPTHDR,                    /* UPT HEADER SECTION            */ 00450004
        3 UPTID CHAR(1),            /* CONTROL BLOCK ID              */ 00500004
        3 UPTFLG0 BIT(8),           /* FLAGS                         */ 00550004
         4 UPTPWS BIT(1),           /* CONTINUE WITH SCAN            */ 00600004
        3 UPTLEN FIXED(15),         /* LENGTH OF UPT                 */ 00650004
       2 UPTNEW PTR(31),            /* ADDR OF NEW AIX RECORD        */ 00700004
       2 UPTOLD PTR(31),            /* ADDR OF OLD AIX RECORD        */ 00750004
       2 UPTRSC BIT(8),             /* RESOURCE BYTE -- USED TO         00800004
                                       SERIALIZE UPDATES             */ 00850004
       2 UPTNOENT FIXED(8),         /* NUMBER OF AIX ENTRIES         */ 00900004
       2 UPTLLEN FIXED(15),         /* LARGEST VALUE OF RKP + KEYLEN */ 00950004
       2 UPTSA CHAR(72) BDY(WORD),  /* SAVE AREA                     */ 01000004
        3 UPTBRPL PTR(31),          /* PTR TO BASE RPL               */ 01050003
        3 UPTLSA PTR(31),           /* LAST SAVE AREA                */ 01100004
        3 UPTBEREG FIXED(8),        /* BASE RPLERREG                 */ 01150004
        3 UPTBERCD FIXED(8),        /* BASE RPLERRCD                 */ 01160004
        3 * FIXED(8),               /* UNUSED                        */ 01170003
        3 UPTSARES BIT(8),          /* UPT SAVE AREA RESOURCE BYTE   */ 01180003
        3 UPTR14 PTR(31),           /* RETURN ADDR FROM IDA019R4        01200004
                                       AFTER I/O INITIATED           */ 01250004
        3 UPTR15 CHAR(56) BDY(WORD),/* REST OF SAVE AREA             */ 01300004
       2 UPTAXENT(*),               /* AIX ENTRY--ONE PER AIX        */ 01350004
        3 UPTRPL PTR(31),           /* ADDR OF UPGRADE RPL           */ 01400004
         4 UPTF1LOP BIT(8),         /* LAST OPERATION AGAINST UPG ACB*/ 01450004
        3 UPTFLG1 BIT(16),          /* FLAGS                         */ 01500004
         4 UPTF1LST BIT(1),         /* LAST ENTRY                    */ 01550004
         4 UPTF1ATV BIT(1),         /* ENTRY IS ACTIVE FOR UPGRADE   */ 01600004
         4 UPTF1NUK BIT(1),         /* NON-UNIQUE KEYS               */ 01650004
         4 UPTF1NOP BIT(1),         /* AIX NOT OPEN                  */ 01700004
         4 UPTF1NRF BIT(1),         /* NO RECORD FOUND ERR DETECTED  */ 01750004
         4 UPTF1KEY BIT(1),         /* KEY BEING WORKED UPON            01800004
                                       0=OLD KEY 1=NEW KEY           */ 01850004
         4 UPTF1RTY BIT(1),         /* LAST OPERATION BEING RETRIED  */ 01900004
         4 UPTF1UPG BIT(1),         /* AIX IS IN UPGRADE             */ 01950004
         4 UPTF1BKO BIT(1),         /* BACKOUT IS IN PROGRESS        */ 02000004
         4 UPTF1LOG BIT(1),         /* THIS AIX HAD LOGICAL ERROR    */ 02050004
         4 UPTF1PHY BIT(1),         /* THIS AIX HAD PHYSICAL ERROR   */ 02100004
         4 UPTF1ERA BIT(1),         /* BASE FUNCTION WAS ERASE       */ 02150004
         4 UPTF1PNU BIT(1),         /* BASE FUNCTION WAS PUT INSERT  */ 02200004
         4 UPTF1PUD BIT(1),         /* BASE FUNCTION WAS PUT UPDATE  */ 02250004
        3 UPTRKP FIXED(15),         /* RELATIVE KEY POSITION         */ 02300004
        3 UPTPASS FIXED(8),         /* PROCESSING PASS NUMBER        */ 02350004
        3 UPTLNCDE FIXED(8),        /* KEY LENGTH - ONE              */ 02400004
        3 UPTBG FIXED(15);          /* LENGTH OF RPLAREA FIELD       */ 02450004
    DCL                                                                 02500004
     (UPTOKEY CONSTANT('0'B),       /* OLD KEY FOR UPTF1KEY          */ 02550004
      UPTNKEY CONSTANT('1'B)) BIT(1);/* NEW KEY FOR UPTF1KEY         */ 02600004
    DCL                                                                 02650004
     (UPTLOPER CONSTANT('10000000'B),/* LAST OPERATION WAS ERASE     */ 02700004
      UPTLOPGU CONSTANT('01000000'B),/* LAST OPERATION WAS GET UPDATE*/ 02750004
      UPTLOPPU CONSTANT('00100000'B),/* LAST OPERATION WAS PUT UPDATE*/ 02800004
      UPTLOPPN CONSTANT('00010000'B),/* LAST OPERATION WAS PUT NUP   */ 02850004
      UPTLOPEN CONSTANT('00000000'B))/* LAST OPERATION WAS ENDREQ    */ 02900004
          BIT(8);                                                       02950004
./  ADD  SSI=50960011,NAME=IDAVAT
 /********************************************************************/ 00050004
 /*                                                                  */ 00100004
 /*   MACRO NAME = IDAVAT                                            */ 00150004
 /*                                                                  */ 00200004
 /*   DESCRIPTIVE NAME = VALID AMBL TABLE.                           */ 00250004
 /*                                                                  */ 00260004
 /*   FUNCTION = THE VAT CONTAINS THE ADDRESS OF EACH AMBL CREATED   */ 00270004
 /*              FOR A BASE KSDS.  THE VAT IS USED FOR VALIDITY CHECK*/ 00280004
 /*              OF AMBL'S.                                          */ 00290004
 /*                                                                  */ 00292004
 /*   CONTROL BLOCK STRUCTURE = POINTED TO BY THE JSCB (JSCBSHR).    */ 00294004
 /*                                                                  */ 00296004
 /*   INCLUDED MACROS = NONE                                         */ 00298004
 /*                                                                  */ 00298404
 /*   METHOD OF ACCESS = PL/S - RESPECIFY IDAVAT BASED.              */ 00298804
 /*                                                                  */ 00299204
 /*   CREATED BY: VSAM OPEN MODULE IDA0192F.                         */ 00299604
 /*                                                                  */ 00299704
 /*   STATUS = VS1 RELEASE 4, VS2 RELEASE 3.                         */ 00299804
 /*                                                                  */ 00299904
 /*   DATE OF LAST CHANGE = 1 AUGUST 74                              */ 00303204
 /*                                                                  */ 00305204
 /********************************************************************/ 00305604
    DCL 1 IDAVAT BASED BDY (DWORD), /* VALID AMBL TABLE              */ 00306704
          2 VATHDR,                 /* HEADER                        */ 00310004
            3 VATID CHAR(1),        /* CONTROL BLOCK ID              */ 00320004
            3 * CHAR(1),            /* RESERVED                      */ 00330004
            3 VATLEN FIXED(15),     /* LENGTH OF VAT                 */ 00340004
          2 VATNEXT PTR(31),        /* ADDRESS OF NEXT VAT           */ 00350004
          2 VATVSRT CHAR(8) BDY(DWORD), /* USED IN CDS INSTRUCTION   */ 00450004
            3 VATVUSE FIXED(31),    /* VSRT USE CNT                  */ 00452004
            3 VATVPTR PTR(31),      /* PTR TO VSRT                   */ 00456004
          2 VATPAMBL PTR(31),       /* ADR 1ST AMBL IN PRIMARY CHAIN */ 00458004
          2 VATVC FIXED(15),        /* USED BY AMBL FOR VALIDITY CHECK*/00460004
            3 VATVRT FIXED(8),      /* TABLE NUMBER                  */ 00500004
            3 VATENO FIXED(8),      /* NUMBER OF ENTRIES             */ 00510004
          2 * CHAR(2),              /* NOT USED                      */ 00520004
          2 VATNAE FIXED(31),       /* NUMBER OF ACTIVE ENTRIES      */ 00550004
          2 VATAMBL(16) PTR(31);    /* ADDRESSES OF VALID AMBL'S     */ 00600004
./  ADD  SSI=60990120,NAME=IDAVBPH
 /*      DATASET  PAGE  CORRESPONDENCE  TABLE                        */ 03350002
 /*                                                                  */ 03400002
 /*      NAME       :    IDAVBPH                                     */ 03450002
 /*                                                                  */ 03500002
 /*      OWNER      :    VIRTUAL BLOCK PROCESSOR(VBP)                */ 03550002
 /*                                                                  */ 03600002
 /*      LANGUAGE   :    PL/S                                        */ 03650002
 /*                                                                  */ 03700002
 /*      USAGE      :    USED BY VIO ONLY                    @Z40WSSR*/ 03750004
 /*                                                                  */ 03850002
 /*      DESCRIPTION:    VBP'S CONTROL BLOCK THAT DESCRIBES  @Z40WSSR*/ 03900004
 /*                      THE VIO DATASET. IT POINTS TO AN    @Z40WSSR*/ 03950004
 /*                      EXTENSION THAT IS USED TO BUILD ASM @Z40WSSR*/ 03960004
 /*                      AND RSM PARM LISTS(ACA & VCB)       @Z40WSSR*/ 03970004
 /*                                                                  */ 04000002
 /*      STORAGE ACQUIRED BY   IDAVBPO1 OR IDAVBPJ2 IN SWA   @Z40WSSR*/ 04050004
 /*      STORAGE RELEASED BY   IDAVBPS1 FOR DSPCT HEADER &   @Z40WSSR*/ 04100004
 /*                            IDAVBPS1/IDAVBPS2 FOR DSPCT-  @Z40WSSR*/ 04105004
 /*                            EXTENSION                     @Z40WSSR*/ 04106004
 /*      STATUS: VS2 RELEASE 4.1                             @Z40WSSR*/ 04110004
 /*      LAST CHANGE: 10/07/75                               @Z40WSSR*/ 04120004
 /*D066500                                                   @Z40WSSR*/ 04125004
 /*                                                                  */ 04150002
     DCL 1 VBPDSPCT BASED BDY(WORD),                                    04200002
           2 VBPHFIX BDY(WORD),          /*FIXED SECTION  */            04250002
            3 VBPHJJ BDY(WORD),          /*SECTION JOURNALED */         04300002
             4 VBPHNAME CHAR(4),        /* DSPCT BLOCK ID    @Z40WSSR*/ 04305004
             4 VBPHLEN       FIXED(32), /* LENGTH OF HEADER          */ 04350002
             4 VBPHLGN CHAR(8) BDY(WORD),/*LOGICAL GROUP NUMBER  */     04400002
               5 VBPHLGID    FIXED(32), /* LOGICAL GROUP IDENTIFIER */  04450002
                 6 VBPHLPG1  FIXED(16), /* ALL ZEROS                 */ 04500002
                 6 VBPHLPG2  FIXED(16), /* IDENTIFIER                 */04550002
             4 VBPHSYM CHAR(8) BDY(WORD),/* STORAGE LOCATOR SYMBOL   */ 04600002
               5 VBPHSYM1 FIXED(32), /* 1ST SUBFIELD */                 04650002
               5 VBPHSYM2 FIXED(32), /* 2ND SUBFIELD */                 04700002
             4 VBPHPNP FIXED(15),       /* IF VBPHPAS IS ON, 1 + NO.    04750004
   OF PAGES ASSIGNED IN PRIOR OPERATION                      @Z40WSSR*/ 04760004
             4 VBPHDSG       FIXED(16), /* DSPAGEID GENERATOR        */ 04850002
             4 VBPHDSSZ      FIXED(32), /* MAX. D/S SIZE IN PAGES    */ 04900002
             4 VBPHOPT       BIT(8),    /* PROCESSING OPTIONS        */ 04950002
               5 VBPHINS     BIT(1),    /* NOT USED            */       05000002
               5 VBPHPGLD    BIT(1),    /* NOT USED          */         05050002
               5 VBPHRST     BIT(1),   /* IF ON, DSPCT FROM JOB JOURNAL,05100004
                                 TO BE RESET BY IDAVBPO1.    @Z40WSSR*/ 05105004
               5 VBPHPAS BIT(1),        /* IF ON, ASSIGN DONE IN PRIOR  05150002
      REGUEST */                                                        05160002
               5 VBPHDEL BIT (1),   /* IF ON THEN AN ACTIVATE           05250002
                                      WAS ISSUED FOR THE LOGICAL        05252002
                                      GROUP BUT THE LOGICAL GROUP       05254002
                                      HAS BEEN RELEASED AND             05256002
                                      DOESN'T EXIST          @ZA00139*/ 05258002
               5 VBPHPADD BIT(1), /* IF ON, ASSIGN MAP PAGES DURING     05260004
                                      RESTART                @Z40WSSR*/ 05270004
               5 VBPHJRN BIT(1), /* IF VBPHJOU ON, PAGES ADDED SINCE    05275004
                                    JOURNALING. ELSE, PAGES ADDED SINCE 05280004
                                    CREATION                 @Z40WSSR*/ 05285004
               5 VBPHJOU BIT(1), /* DSPCT SAVED/JOURNALED    @Z40WSSR*/ 05290004
             4 VBPHSTA       BIT(8),    /* STATUS BYTE               */ 05300002
               5 VBPHOPE     BIT(1),    /* IDAVBPO1 IN PROGRESS      */ 05350002
               5 VBPHRW      BIT(1),/* IDAVBPP1  IN PROGRESS*/          05400002
               5 *      BIT(1),/* NOT USED                   @Z40WSSR*/ 05450004
               5 VBPHSCR     BIT(1),    /* IDAVBPS1 IN PROGRESS      */ 05500002
               5 VBPHCLO     BIT(1),    /* IDAVBPC1 IN PROGRESS      */ 05550002
               5 *     BIT(3), /* NOT USED                   @Z40WSSR*/ 05555004
             4 VBPHNMP     FIXED(15),/* CURRENT NO OF DSPCT MAP PAGES*/ 05750002
             4 VBPHMMP       FIXED(15), /* MAX. MAP PAGES REQD.      */ 05800002
             4 VBPHWSZ  FIXED(15), /* WINDOW SIZE IN PAGES   @Z40WSSR*/ 05850004
             4 VBPHWAD       PTR(31),   /* WINDOW ADDRESS            */ 05900002
             4 VBPHPRL       PTR(32),/* RELATIVE PAGE NO OF 1ST PAGE    05950002
      ASSIGNED TO WINDOW BY PRIOR ASSIGN REQUEST */                     05960002
             4 VBPHRBN       FIXED(32), /* RBN ASGNED BY IEFXB500    */ 06000002
           3 VBPHBUFC PTR(31), /*  ADDR OF BUFC */                      06050002
             4 VBPHVOP  PTR(31), /* ADDR OF VOPEN PARM LIST */          06100002
           3 VBPHFRAR PTR(31), /* PTR TO RECOVERY COMM. AREA */         06150002
           3 VBPHVCB PTR(31), /* ADDR OF DSPCT EXTENSION     @Z40WSSR*/ 06200004
           3 VBPHSAVE CHAR(72) BDY(WORD),/* 18 WORD REG. SAVE AREA   */ 06350002
             4 * PTR(31),                                               06400002
             4 VBPHSAVO PTR(31),       /* ADDR OF CALLERS SAVE AREA  */ 06450002
           3 SECSAVE CHAR(72) BDY(WORD),/* 2ND SAVE AREA */             06500002
            4 * PTR(31),                                                06550002
            4 SECSAVO PTR(31), /* ADDR OF CALLERS SAVE AREA */          06600002
      4 DSGSAVE FIXED(16),/* DSPAGEID GENERATOR SAVED IN IDAVBPJ2 */    06620002
      4 LGNSAVE CHAR(8),/* LGN SAVED IN IDAVBPJ2 */                     06630002
         4 OPTSAVE BIT(8), /* USED TO SAVE THE SCRATCH STATUS OF        06640002
                            THE DATA SET AND IS SAVED IN MODULE         06642002
                               IDAVBPJ2                      @ZA00139*/ 06644002
     3 VBPHSPUL BIT(8),/* SWA SUBPOOL NO. TO GET/FREEMAIN FOR THE DSPCT 06810002
   MAP                                                       @VS07802*/ 06812002
      3 VBPHJRNP PTR(24), /* ADDR OF IEFXB500 PASSED FROM IDDWIJRN TO   06820002
                         IDAVBPJ1                            @Z30TSWT*/ 06822002
   3 VBPHTCB PTR(32),/* TCB ADDR TO GET/FREEMAIN FOR THE DSPCT          06830002
   MAP AND DSPCT EXTENSION                                   @Z40WSSR*/ 06840004
           2 VBPHMAD(*) PTR(31);   /* MAP PAGE POINTERS. ONE PER        06850002
                                      EACH MAP PAGE */                  06900002
                                                                        06910004
   /*     DSPCT EXTENSION. IS IN LSQA SUBPOOL 255.           @Z40WSSR*/ 06950004
   /*     NO. OF MOVEOUT/ASSIGN VCBS=SIZE OF WINDOW IN PAGES @Z40WSSR*/ 06960004
   /*     STORAGE ACQUIRED BY IDAVBPO1 & RELEASED BY         @Z40WSSR*/ 07000004
   /*     IDAVBPS1                                           @Z40WSSR*/ 07050004
                                                                        07060004
   DCL 1 VBPVCB BDY(WORD) BASED(VBPHVCB), /* DSPCT EXTENSION @Z40WSSR*/ 07100004
         2 VBPVFXD,                                                     07102004
           3 VBPVNAME CHAR(4), /* ACRONYM ID - VCB           @Z40WSSR*/ 07110004
           3 VBPVLEN FIXED(31), /* LENGTH OF DSPCT EXTENSION @Z40WSSR*/ 07120004
           3 VBPVMAP   CHAR(24)BDY(WORD),/* USED AS AN ACA MAP & AS A   07150004
                                VCB FOR DSPCT PAGE MAPS      @Z40WSSR*/ 07200004
           3 VCBSAVAD PTR(31), /* PTR TO 1ST VCB             @Z40WSSR*/ 07205004
           3 VBPVAPTR PTR(31),  /* ADDR OF ASSIGN VCBS       @Z40WSSR*/ 07210004
         2 VBPVMOVE(*) CHAR(24);/* MOVEOUT VCBS              @Z40WSSR*/ 07250004
   DCL VBPVASIN(*) CHAR(24) BASED(VBPVAPTR); /* ASSIGN VCBS  @Z40WSSR*/ 07300004
./  ADD  SSI=53240952,NAME=IDAVBPI
 /*      VBP MODULE BRANCH VECTOR TABLE                              */ 00050002
 /*                                                                  */ 00100002
 /*  NAME:   IDAVBPI                                                 */ 00150002
 /*                                                                  */ 00200002
 /* OWNER:   VIRTUAL BLOCK PROCESSOR                                 */ 00250002
 /*                                                                  */ 00300002
 /* LANGUAGE:   PL/S 2                                               */ 00350002
 /*                                                                  */ 00400002
 /* USAGE:   MUST BE INCLUDED BY ALL PL/S MODULES THAT BRANCH INTO   */ 00450002
 /*          VBP MODULES                                             */ 00500002
 /*                                                                  */ 00550002
 /* DESCRIPTION:   MAPS THE TRANSFER VECTOR OF THE FOLLOWING         */ 00600002
 /*                VBP MODULES IN VBP LOAD MODULE - IDAVBPP1 @Z40WSSR*/ 00650004
 /*                IDAVBPO1  IDAVBPS1  IDAVBPC1              @Z40WSSR*/ 00700004
 /* STATUS:         VS2 RELEASE 4.1(CHANGE FLAG @Z40WSSR)    @Z40WSSR*/ 00760004
 /* DATE OF LAST CHANGE: 06/26/75                            @Z40WSSR*/ 00770004
 /*D7500,013000-013500                                       @Z40WSSR*/ 00780004
 /*                                                                  */ 00800002
     DCL VBPMOD(5) PTR(31) BASED(CVTPVBP);                 /*@Z40WSSR*/ 00850004
   /* PTR TO IDAVBPO1 */                                                01000002
     DCL VOPEN    ENTRY BASED(VBPMOD(1)) VALRG(0) OPTIONS(NOFLOWS);     01050002
   /* PTR TO IDAVBPP1 */                                                01100002
     DCL VREADWR  ENTRY BASED(VBPMOD(2)) VALRG(0) OPTIONS(NOFLOWS);     01150002
   /* PTR TO IDAVBPC1 */                                                01200002
     DCL VCLOSE   ENTRY BASED(VBPMOD(3)) VALRG(0) OPTIONS(NOFLOWS);     01250002
   /* PTR TO IDAVBPS1 */                                                01400002
     DCL VSCRATCH ENTRY BASED(VBPMOD(5)) VALRG(0) OPTIONS(NOFLOWS);     01450004
./  ADD  SSI=32650259,NAME=IDAVBPM
 /********************************************************************/ 00050002
 /*     DSPCT MAP ENTRY                                              */ 00100002
 /*      NAME     : IDAVBPM                                          */ 00150002
 /*      OWNER    : VIO                                              */ 00200002
 /*      LANGUAGE : PL/S II                                          */ 00250002
 /*      USAGE    : INTERNAL TO VBP. USED IN ALL VBP MODULES THAT    */ 00300002
 /*                 REFERENCE DSPCT MAP                              */ 00350002
 /*      DESCRIPTION:  MAPS EACH DSPCT MAP ENTRY.                    */ 00400002
 /*               INDICATES WHETHER THE CORRESPONDING DATA SET       */ 00450002
 /*               PAGE HAS BEEN WRITTEN OUT OR NOT                   */ 00460002
 /*                 ALSO HAS THE REAL STORAGE NUMBER(RSN) PASSED     */ 00470002
 /*           BY RSM USED TO RECLAIM THE VIO PAGES IN CORE           */ 00480002
 /********************************************************************/ 00500002
 /*                                                                  */ 00550002
     DCL MAPPAGE CHAR(4096) BASED(MAPPGPTR); /*MAP PAGE */              00600002
  /* MAP PAGE ENTRY */                                                  00610002
     DCL 1 VBPMAPE BASED(DSPCTMPR) BDY(HWORD),                          00650002
           2 VBPMFLG     BIT(8),        /* FLAG BYTE */                 00700002
             3 VBPMRLPG  BIT(1),/* IF ON, PAGE CORRESPONDING TO MAP     00800002
               ENTRY EXISTS ON AUXILIARY STORAGE */                     00810002
             3 *         BIT(7),        /* NOT USED                  */ 00850002
           2 *           BIT(8),        /* NOT USED */                  00900002
           2 VBPMRSN     FIXED(16);/* RSN USED FOR RECLAIMING VIO PAGES 01000002
              FROM REAL STORAGE.  */                                    01010002
./  ADD  SSI=50420211,NAME=IDAVCRT
*/********************************************************************/ 00100003
* /*                                                                 */ 00150000
* /*     IDAVCRT (VSAM CHECKPOINT RESTART TABLE) DECLARATION         */ 00200000
* /*                                                                 */ 00250000
* /* MACRO NAME : IDAVCRT                                            */ 00300000
* /*                                                                 */ 00350000
* /* DESCRIPTIVE NAME : VSAM CHECKPOINT RESTART TABLE                */ 00400000
* /*                                                                 */ 00450000
* /* FUNCTION : THE VSAM CHECKPOINT RESTART TABLE (VCRT) IS USED BY  */ 00500000
* /*       VSAM CHECKPOINT RESTART AS A MEANS OF PROCESSING THE      */ 00550000
* /*       ALTERNATE INDEX ENVIRONMENT OF VSAM RELEASE TWO. THE VCRT */ 00600000
* /*       IS SUBALLOCATED FROM VCRCORE, ALSO DESCRIBED BY THIS      */ 00610003
* /*       MACRO, AND CONTAINS A COUNT, BY ENTRY TYPE, OF EACH ENTRY */ 00650003
* /*       APPENDED TO THE VCRT. THERE ARE THREE TYPES OF ENTRIES:   */ 00700003
* /*                                                                 */ 00750000
* /*       1. THE FIRST ENTRY TYPE IS THE VCRT OPEN ENTRY USED BY    */ 00800003
* /*       VSAM RESTART TO REBUILD THE CONTROL BLOCKS REQUIRED FOR A */ 00850003
* /*       VALID RESTART.  THIS ENTRY IS EIGHT BYTES IN LENGTH AND   */ 00900003
* /*       CONTAINS POINTERS TO THE USER AMBL, AND A SAVE AREA FOR   */ 00950003
* /*       THE HEADER ELEMENT BLOCKS FOR THE CLUSTER.  THE SAVE AREA */ 01000003
* /*       POINTER WILL BE ZERO IF THE CLUSTER IS PART OF THE        */ 01050003
* /*       IMMEDIATE UPGRADE SET.                                    */ 01060003
* /*                                                                 */ 01100000
* /*       2. THE SECOND ENTRY TYPE IS THE VCRT UPGRADE ENTRY, WHICH */ 01150000
* /*       POINTS TO THE UPGRADE AMBLS AND THE HEB SAVE AREAS TO BE  */ 01200003
* /*       PROCESSED BY VSAM RESTART. THIS ENTRY IS EIGHT BYTES LONG */ 01250003
* /*       AND WILL EXIST ONLY IF THE IMMEDIATE UPGRADE SET FOR THIS */ 01300000
* /*       DATA SET WAS OPEN AT CHECKPOINT TIME.                     */ 01350000
* /*                                                                 */ 01400000
* /*       3. THE THIRD ENTRY TYPE IS THE VCRT INDEX ENTRY. EIGHT    */ 01800003
* /*       BYTES IN LENGTH, THIS ENTRY EXISTS ONLY IF THE BASE DATA  */ 01850000
* /*       SET IS A KSDS OPEN FOR CREATE MODE PROCESSING. THERE WILL */ 01900000
* /*       BE ONE INDEX ENTRY FOR EACH INDEX LEVEL THAT EXISTS AT    */ 01950000
* /*       CHECKPOINT TIME. THE INDEX ENTRY CONTAINS ICWA AND BUFFER */ 02000000
* /*       POINTERS FOR THE INDEX LEVEL IT REPRESENTS.               */ 02050000
* /*                                                                 */ 02100000
* /* CONTROL BLOCK STRUCTURE : THE VCRT IS POINTED TO BY THE BIB     */ 02150000
* /*                                                                 */ 02200000
* /* INCLUDED MACROS : NONE                                          */ 02250000
* /*                                                                 */ 02300000
* /* METHOD OF ACCESS : DECLARE VCRTPTR AS PTR, AND                  */ 02350003
* /*                    RESPECIFY VCRCORE AND VCRHEBSA BASED         */ 02360003
* /*                                                                 */ 02400000
* /* CREATED BY : VCRCORE IS CREATED BY VSAM CHECKPOINT AND FREED    */ 02450003
* /*       BY THE VSAM C/R CLEANUP ROUTINE IN IGC0I96C FOR ALL       */ 02500003
* /*       SITUATIONS, INCLUDING ERRORS IN VS CHECKPOINT.            */ 02550003
* /*                                                                 */ 02600000
* /* STATUS : VS2 RELEASE 3 - LEVEL = 0                              */ 02650003
* /*                                                                 */ 02700000
* /* DATE OF LAST CHANGE : 28 AUGUST 74                              */ 02750003
* /*                                                                 */ 02800000
*/********************************************************************/ 02850003
*@EJECT;                                                                02860003
*%GOTO   VCRT1;                                                         02900000
* /*                                                                 */ 02950000
* /*       VCRT DIAGRAM                                              */ 03000000
* /*                                                                 */ 03050000
* /*       0 *-----------------------------------------*             */ 03100003
* /*         |  VCRID  |           VCRFLAG1            |             */ 03200000
* /*       4 |-----------------------------------------|             */ 03250000
* /*         |                                         |             */ 03350000
* /*         |               VCRIDNM                   |             */ 03400000
* /*         |                                         |             */ 03500000
* /*      12 |-----------------------------------------|             */ 03550000
* /*         |               VCRCOREH                  |             */ 03800003
* /*      16 |-----------------------------------------|             */ 03850003
* /*         |      VCROPNCT      |      VCRUPGCT      |             */ 03950000
* /*      20 |-----------------------------------------|             */ 04000003
* /*         |      VCRIDXCT      |      RESERVED      |             */ 04100003
* /*      24 |-----------------------------------------|             */ 04150003
* /*         |               VCRCISIZ                  |             */ 04200003
* /*      28 |-----------------------------------------|             */ 04250003
* /*         |                VCRRBUF                  |             */ 04260003
* /*      32 |-----------------------------------------|             */ 04270003
* /*         |                VCROPN                   |             */ 04300003
* /*      36 |-----------------------------------------|             */ 04350003
* /*         |                VCRUPG                   |             */ 04400003
* /*      40 |-----------------------------------------|             */ 04450003
* /*         |                VCRIDX                   |             */ 04500003
* /*      44 *-----------------------------------------*             */ 04550003
* /*                                                                 */ 05250000
* /*                     VCRT OPEN ENTRY                             */ 05300000
* /*                                                                 */ 05350000
* /*         *-----------------------------------------*             */ 05400003
* /*         |                VCRHEBS                  |             */ 05450003
* /*         |        POINTER TO HEB SAVE AREA         |             */ 05500003
* /*         |-----------------------------------------|             */ 05550000
* /*         |                VCRAMBL                  |             */ 05600003
* /*         |          POINTER TO USER AMBL           |             */ 05650003
* /*         *-----------------------------------------*             */ 05850003
* /*                                                                 */ 06050000
* /*           THE VCRT UPGRADE ENTRY IS THE SAME AS THE OPEN ENTRY  */ 06100003
* /*                                                                 */ 06200000
* /*                THE VCRT INDEX ENTRY                             */ 06650000
* /*                                                                 */ 06700000
* /*         *-----------------------------------------*             */ 06750003
* /*         |                VCRICWA                  |             */ 06800000
* /*         |         POINTER TO INDEX ICWA           |             */ 06850003
* /*         |-----------------------------------------|             */ 06900000
* /*         |                VCRBUFPT                 |             */ 06950000
* /*         |       POINTER TO ASSOCIATED BUFFER      |             */ 07000003
* /*         *-----------------------------------------*             */ 07050003
* /*                                                                 */ 07100000
* /*                                                                 */ 07150000
*%VCRT1:  ;                                                             07250000
*        DCL  1 IDAVCRT  BASED(VCRTPTR),    /* IDAVCRT               */ 07350003
*               2 VCRID         BIT(8),     /* VCRT CONTROL BLOCK ID */ 07400000
*               2 VCRFLAG1      BIT(24),    /* VCRT FLAGS            */ 07450000
*                 3 VCRUPGSW    BIT(1),     /* VCRT ENTRY TYPE       */ 07500000
*                                           /* 1=PROCESS VCRT UPGRADE*/ 07550000
*                                           /* 0 = PROCESS VCRT OPEN */ 07600000
*                 3 VCRLSR      BIT(1),     /* LSR SPECIFIED         */ 07650000
*                 3 VCROUT      BIT(1),     /* OUTPUT ACB IS OPEN    */ 07700000
*                 3 *           BIT(21),    /* RESERVED              */ 07750000
*               2 VCRIDNM       CHAR(8),    /* VCRT CONTROL BLK NAME */ 07800000
*               2 VCRCOREH      PTR(31),    /* PTR TO HEAD OF VCRCORE*/ 07900003
*               2 VCROPNCT      FIXED(15),  /* OPEN ENTRY COUNT      */ 07950000
*               2 VCRUPGCT      FIXED(15),  /* UPGRADE ENTRY COUNT   */ 08000000
*               2 VCRIDXCT      FIXED(15),  /* INDEX ENTRY COUNT     */ 08050003
*               2 *             FIXED(15),  /* RESERVED              */ 08100003
*               2 VCRCISIZ      FIXED(31),  /* HIGH SPHERE CI SIZE   */ 08150003
*               2 VCRSPHPT      PTR(31),    /* PTR TO SPHERE HEB SAVE*/ 08160003
*               2 VCRRBUF       PTR(31),    /* PTR TO RESTART BUFFER */ 08200003
*               2 VCROPN        PTR(31),    /* PTR VCRT OPEN ENTRIES */ 08250003
*               2 VCRUPG        PTR(31),    /* PTR VCRT UPGRADE ENTRY*/ 08300003
*               2 VCRIDX        PTR(31);    /* PTR VCRT INDEX ENTRIES*/ 08400003
*/********************************************************************/ 08450003
*/*                                                                  */ 08500003
*/*             VCRT OPEN ENTRY                                      */ 08550003
*/*                                                                  */ 08600003
*/********************************************************************/ 08610003
*        DCL  1 VCRENTRY(*)     BASED(VCROPN),                          08650003
*               2 VCRHEBS       PTR(31),    /* POINTER TO HEB SAVE   */ 08700003
*               2 VCRAMBL       PTR(31);    /* POINTER TO USER AMBL  */ 08750003
*/********************************************************************/ 08950003
*/*                                                                  */ 09000003
*/*             VCRT UPGRADE ENTRY                                   */ 09050003
*/*                                                                  */ 09100003
*/********************************************************************/ 09150003
*        DCL  1 VCRUPGRD(*)     BASED(VCRUPG),                          09200003
*               2 VCRUHEBS      PTR(31),    /* POINTER TO HEB SAVE   */ 09250003
*               2 VCRUAMBL      PTR(31);    /* PTR TO UPGRADE AMBL   */ 09300003
*/********************************************************************/ 09350003
*/*                                                                  */ 09400003
*/*             VCRT INDEX ENTRY                                     */ 09450003
*/*                                                                  */ 09500003
*/********************************************************************/ 09550003
*        DCL  1 VCRINDEX(*)     BASED(VCRIDX),                          09600003
*               2 VCRICWA       PTR(31),    /* POINTER TO ICWA       */ 09650003
*               2 VCRBUFPT      PTR(31);    /* PTR TO ASSOCIATED BUF */ 09700003
*@EJECT;                                                                09710003
*/********************************************************************/ 09750003
*/*                                                                  */ 09800003
*/*             VCR CORE DESCRIPTION                                 */ 09850003
*/*                                                                  */ 09900003
*/********************************************************************/ 09950003
*        DCL  1 VCRCORE         BASED,                                  10000003
*               2 VCRCHDR,                  /* VCR CORE HEADER       */ 10050003
*                 3 VCRCNM      CHAR(8),    /* VCR CORE NAME FOR ID  */ 10100003
*                 3 VCRCNEXT    PTR(31),    /* PTR TO NEXT CORE BLK  */ 10150003
*                 3 VCRCDESC    FIXED(31),  /* CLEANUP INFORMATION   */ 10200003
*                   4 VCRCSP    FIXED(8),   /* SUBPOOL               */ 10250003
*                   4 VCRCLEN   FIXED(24),  /* LENGTH                */ 10300003
*                 3 VCRCPTRA    PTR(31),    /* PTR TO 1ST AVAIL BYTE */ 10350003
*                 3 VCRCLENA    FIXED(31),  /* LENGTH OF AVAIL CORE  */ 10400003
*               2 VCRCDATA      CHAR(*);    /* CORE FOR DATA         */ 10450003
*@SPACE;                                                                10460003
*/********************************************************************/ 10500003
*/*                                                                  */ 10550003
*/*             VCR HEB SAVE DESCRIPTION                             */ 10600003
*/*                                                                  */ 10650003
*/********************************************************************/ 10700003
*        DCL  1 VCRHEBSA        BASED,                                  10750003
*               2 VCRHHDR,                  /* HEADER PER CMB ENTRY  */ 10800003
*                 3 VCRHNENT    FIXED(15),  /* NUMBER OF ENTRIES     */ 10850003
*                 3 VCRHFLG     BIT(8),     /* HEADER FLAGS          */ 10900003
*                   4 VCRHFCON  BIT(1),     /* CONTINUATION HEADER   */ 10950003
*                   4 VCRHFREL  BIT(1),     /* FREEMAIN AT RESTART   */ 11050003
*                 3 VCRHCID     FIXED(8),   /* RELATIVE CMB ENTRY NO.*/ 11100003
*                 3 VCRHNEXT    PTR(31),    /* POINTER TO NEXT HEADER*/ 11150003
*               2 VCRHENT(*) CHAR(LENGTH(HEBHDREL)) BDY(WORD),/* HEADER 11200003
*                                         ELEMENT SAVED AT CHECKPOINT*/ 11210003
*                 3 VCRHEFMN,               /* FREEMAIN INFORMATION  */ 11250003
*                   4 VCRHESP   FIXED(8),   /* SUBPOOL OF STORAGE    */ 11300003
*                   4 VCRHELN   FIXED(24),  /* LENGTH OF GOTTEN CORE */ 11350003
*                   4 VCRHESPT  PTR(31);    /* STORAGE ADDRESS       */ 11400003
*@SPACE;                                                                11600003
*        DCL  VCRNAME  CHAR(8) CONSTANT('IDAVCRT ');/* VCRT ID NAME  */ 11700003
*        DCL  VCRCNAME CHAR(8) CONSTANT('VCRCORE ');/* VCR CORE NAME */ 11750003
./  ADD  SSI=42900515,NAME=IDAVIOT
    /*****************************************************************/ 00100000
    /*                                                               */ 00200000
    /* THE VIOT (VALID IOMB TABLE) CONTAINS THE ADDRESS OF EACH      */ 00300000
    /* VALID IOMB WITHIN THE SHARED RESOURCE POOL.  THIS BLOCK IS    */ 00400000
    /* POINTED TO BY THE VSRT AND BY ALL AMB'S UTILIZING THE SHARED  */ 00500000
    /* RESOURCE POOL.  THE VIOT IS ONLY DEFINED FOR VS2.             */ 00600000
    /*                                                               */ 00700000
    /* VS2 RELEASE 3, 4/30/74, LEVEL=0                               */ 00800000
    /*                                                               */ 00900000
    /* METHOD OF ACCESS - RESPECIFY IDAVIOT AND VIOPTR BASED.        */ 01000000
    /*                                                               */ 01100000
    /*****************************************************************/ 01200000
    DCL 1 IDAVIOT BASED BDY(WORD),  /* VALID IOMB TABLE              */ 01300000
          2 VIOHDR,                 /* CONTROL BLOCK HEADER          */ 01400000
            3 VIOID  CHAR(1),       /* BLOCK ID - CONSTANT X'16'     */ 01500000
            3 *      CHAR(1),       /* RESERVED                      */ 01600000
            3 VIOLEN FIXED(15);     /* LENGTH OF VIOT                */ 01700000
    DCL VIOPTR BASED PTR(31);       /* PTR TO VALID IOMB             */ 01800000
./  ADD  SSI=42900516,NAME=IDAVIRT
*% GOTO PLS2;                                                           00050000
         MACRO                                                          00100000
IDAVIRT  DSECT                                                          00150000
         DS    CL1                       RESERVED                       00200000
VIRTFLAG DS    XL1                       FLAGS DESCRIBING REQUEST       00250000
         DS    CL2                       RESERVED                       00300000
VIRTACB  DS    A                         POINTER TO ACB                 00350000
VIRTUCB  DS    A                         PTR TO VIRTUAL UCB             00400000
VIRTEXT  DS    A                         PTR TO EXTENT LIST             00450000
VIRTTIOE DS    A                         PTR TO TIOT ENTRY              00500000
VIRTLENG DS    H                         LENGTH OF EXTENT LIST          00550000
         DS    H                         RESERVED                       00600000
         MEND                                                           00650000
*%PLS2:;                                                                00700000
         DCL 1 IDAVIRT BDY(WORD) BASED,  /* STAGE VIRTUAL DEV PARM  */  00750000
               2 *        BIT(8),        /* RESERVED                */  00800000
               2 VIRTFLAG BIT(8),        /* FLAGS FOR OPTIONS       */  00850000
                 3 VIRTACQ  BIT(1),      /* PERFORM AN ACQUIRE      */  00900000
                 3 VIRTINHB BIT(1),      /* INHIBIT STAGING OR DESTG*/  00950000
                 3 VIRTNOUN BIT(1),      /* DO NOT UNBIND OR REL    */  01000000
                 3 VIRTBACB BIT(1),      /* ACQ OR REL BY ACB       */  01050000
                 3 VIRTBUCB BIT(1),      /* ACQ OR REL THIS UCB     */  01100000
                 3 VIRTBEXT BIT(1),      /* ACQ OR REL BY EXTENT LST*/  01150000
                 3 VIRTMNT  BIT(1),      /* VOLUME JUST MOUNTED     */  01200000
               2 *        FIXED(15),     /* RESERVED                */  01250000
               2 VIRTACB  PTR(31),       /* PTR TO ACB FOR DATA SET */  01300000
               2 VIRTUCB  PTR(31),       /* PTR TO UCB TO ACQ OR REL*/  01350000
               2 VIRTEXT  PTR(31),       /* PTR TO EXTENT LIST      */  01400000
               2 VIRTTIOE PTR(31),       /* PTR TO TIOT ENTRY       */  01450000
               2 VIRTLENG FIXED(15),     /* LENGTH OF EXTENT LIST   */  01500000
               2 *        FIXED(15);     /* RESERVED                */  01550000
./  ADD  SSI=50960012,NAME=IDAVMT
 /********************************************************************/ 00050004
 /*                                                                  */ 00100004
 /*   MACRO NAME = IDAVMT                                            */ 00150004
 /*                                                                  */ 00200004
 /*   DESCRIPTIVE NAME = VOLUME MOUNT TABLE.                         */ 00250004
 /*                                                                  */ 00260004
 /*   FUNCTION = THE VMT DESCRIBES VOLUME SERIAL NUMBERS TO BE       */ 00270004
 /*              MOUNTED.  A VMT IS CREATED FOR EACH DEVICE TYPE IN  */ 00280004
 /*              THE OPERATIONAL SPHERE.                             */ 00290004
 /*                                                                  */ 00292004
 /*   CONTROL BLOCK STRUCTURE = POINTED TO BY THE BIB (BIBVMT).      */ 00294004
 /*                                                                  */ 00296004
 /*   INCLUDED MACROS = NONE                                         */ 00298004
 /*                                                                  */ 00298404
 /*   METHOD OF ACCESS = PL/S - RESPECIFY IDAVMT BASED.              */ 00298804
 /*                                                                  */ 00299204
 /*   CREATED BY: VSAM OPEN MODULE IDA0192F.                         */ 00299604
 /*                                                                  */ 00299704
 /*   STATUS = VS1 RELEASE 4, VS2 RELEASE 3.                         */ 00299804
 /*                                                                  */ 00299904
 /*   DATE OF LAST CHANGE = 1 AUGUST 74                              */ 00303204
 /*                                                                  */ 00305204
 /********************************************************************/ 00305604
    DCL 1 IDAVMT BASED BDY (WORD),  /* VOLUME MOUNT TABLE            */ 00306704
          2 VMTHDR,                 /* VMT HEADER                    */ 00310004
            3 VMTID CHAR(1),        /* CONTROL BLOCK ID              */ 00320004
            3  *    CHAR(1),        /* RESERVED                      */ 00330004
            3 VMTLEN FIXED(15),     /* LENGTH OF VMT                 */ 00340004
          2 VMTNXT PTR(31),         /* ADDRESS OF NEXT VMT           */ 00350004
          2 VMTNOVOL FIXED(15),     /* NO. OF VOL ENTRIES IN TABLE   */ 00450004
          2 * CHAR(3),              /* NOT USED                      */ 00452004
          2 VMTDEV BIT(24),         /* DEVICE INFORMATION            */ 00460004
            3 VMTDVOPT BIT(8),      /* DEVICE OPTIONS                */ 00470004
            3 VMTDVTYP BIT(16),     /* DEVICE CLASS AND TYPE         */ 00480004
          2 VMTVOL(*),              /* VOLUME ENTRY -- 1 PER VOLUME  */ 00650004
            3 VMTUSECT FIXED(31),   /* USE COUNT                     */ 00700004
            3 VMTVFLG1 BIT(8),      /* VOLUME FLAGS                  */ 00710004
              4 VMTOPEN BIT(1),     /* VOL BEING PROCESSED BY OPEN   */ 00720004
              4 * BIT(7),           /* NOT USED                      */ 00730004
            3 * CHAR(1),            /* NOT USED                      */ 00740004
            3 VMTVLSER CHAR(6),     /* VOLUME SERIAL NUMBER          */ 00750004
            3 VMTUCB PTR(31);       /* ADDR OF UCB FOR VOLUME        */ 00800004
./  ADD  SSI=32650260,NAME=IDAVOP1
 /*                 VOPEN     INTERFACE     BLOCK                    */ 00050002
 /*                                                                  */ 00100002
 /*      NAME       :    IDAVOP1                                     */ 00150002
 /*                                                                  */ 00200002
 /*      OWNER      :    WINDOW INTERCEPT                            */ 00250002
 /*                                                                  */ 00300002
 /*      LANGUAGE   :    PL/S                                        */ 00350002
 /*                                                                  */ 00400002
 /*      DESCRIPTION:    PARAMETER CONTROL BLOCK BETWEEN IDDWITRM    */ 00450002
 /*                           AND  IDAVBPO1(VOPEN)                   */ 00500002
 /*                                                                  */ 00550002
 /*      STORAGE ACQUIRED BY WINDOW INTERCEPT                        */ 00600002
 /*                                                                  */ 00650002
 /*      REFERRED AND UPDATED BY VBP'S VOPEN                         */ 00700002
 /*                                                                  */ 00750002
     DCL 1 IDAVOP1  BASED BDY(WORD),                                    00800002
           2 VBPOHPTR    PTR(31),       /* DSPCT HEADER POINTER      */ 00850002
           2 VBPOWIA     PTR(31),       /* WINDOW ADDRESS            */ 00900002
           2 VBPOLEN     FIXED(31),     /* WINDOW LENGTH IN PAGES */    00950002
           2 VBPODSSZ    FIXED(32),     /* MAX DATASET SIZE IN BYTES */ 01000002
           2 VBPOFLG     BIT(8),        /* OPTION FLAG BYTE          */ 01050002
             3 VBPOPGLD  BIT(1),        /* PAGE LOAD REQUIRED        */ 01100002
             3 *         BIT(7);        /*   NOT USED                */ 01150002
./  ADD  SSI=62450130,NAME=IDAVSRB
*/********************************************************************/ 03000000
*/*                                                                  */ 06000000
*/*   MACRO NAME = IDAVSRB                                           */ 09000000
*/*                                                                  */ 12000000
*/*   DESCRIPTIVE NAME = VSAM SRB                                    */ 15000000
*/*                                                                  */ 18000000
*/*   FUNCTION = DECLARES SRB USED BY VSAM                           */ 21000000
*/*                                                                  */ 24000000
*/*   INCLUDED MACROS = IHASRB                                       */ 27000000
*/*                                                                  */ 30000000
*/*   METHOD OF ACCESS = PLS - SRBSECT IS BASED ON SRBPTR            */ 33000000
*/*                                                                  */ 36000000
*/*   STATUS = VS/2 RELEASE 3.7 - CHANGE FLAG @ZA10855               */ 39000000
*/*                                                                  */ 42000000
*/*   DATE OF LAST CHANGE = MAY 26, 1976                             */ 45000000
*/*                                                                  */ 48000000
*/********************************************************************/ 51000000
    %SRB9999=',';                   /* DO NOT CLOSE SRB STRUCTURE    */ 54000000
    %INCLUDE SYSLIB(IHASRB);        /* INCLUDE SYSTEM SRB MACRO      */ 57000000
          5 SRBVSAM,                /* VSAM SRB APPENDAGE            */ 60000000
           6 SRBVFLGS BIT(8),       /* VSAM PROCESSING FLAGS         */ 63000000
            7 SRBVFIX BIT(1),       /* VSAM CONTROL BLOCKS ARE FIXED */ 66000000
            7 * BIT(7),             /* RESERVED                      */ 69000000
           6 * CHAR(3);             /* RESERVED                      */ 72000000
./  ADD  SSI=60860642,NAME=IDAVSRT
 /********************************************************************/ 00050004
 /*                                                                  */ 00100004
 /*   MACRO NAME = IDAVSRT                                           */ 00150004
 /*                                                                  */ 00200004
 /*   DESCRIPTIVE NAME = VSAM SHARED RESOURCE TABLE.                 */ 00250004
 /*                                                                  */ 00300004
 /*   FUNCTION = THE VSRT CONTAINS POINTERS TO BUFFER AND PLH POOLS  */ 00350004
 /*              AS WELL AS POINTERS TO VARIOUS BLOCKS BUILT BY THE  */ 00400004
 /*              BLDVRP ROUTINES.                                    */ 00450004
 /*                                                                  */ 00500004
 /*   CONTROL BLOCK STRUCTURE = CHAINED OFF THE VAT (LSR OPTION) OR  */ 00510004
 /*                             THE AMCBS (GSR OPTION).              */ 00520004
 /*                                                                  */ 00530004
 /*   INCLUDED MACROS = NONE                                         */ 00540004
 /*                                                                  */ 00542004
 /*   METHOD OF ACCESS = PL/S - RESPECIFY IDAVSRT BASED.             */ 00544004
 /*                                                                  */ 00546004
 /*   CREATED BY: VSAM OPEN MODULE IDA0192Y.                         */ 00548004
 /*                                                                  */ 00548404
 /*   STATUS = VS2 RELEASE 4.                                @Z40ESSR*/ 00548804
 /*                                                                  */ 00549204
 /*   DATE OF LAST CHANGE = 31 JAN. 75.                      @Z40ESSR*/ 00549604
 /*                                                                  */ 00570003
 /********************************************************************/ 00580003
    DCL 1 IDAVSRT BASED BDY (WORD), /* VSAM SHARED RESOURCE POOL     */ 00590003
        2 VSRTBKID CHAR (1),        /* BLOCK ID                      */ 00600004
        2 VSRTKEY FIXED(8),         /* KEY OF GSR USER       @Z40ESSR*/ 00650004
        2 VSRTLEN FIXED (15),       /* VSRT LENGTH IN BYTES          */ 00700004
        2 VSRTID CHAR (8),          /* BLOCK IDENTIFIER              */ 00750004
        2 VSRTFLGS,                 /* FLAG BYTES                    */ 00800004
          3 VSRTGSRF BIT (1),       /* ON INDICATES GSR OPTION       */ 00850004
          3 VSRTLSRF BIT (1),       /* ON INDICATES LSR OPTION       */ 00900004
          3 VSRTIOBF BIT (1),       /* ON INDICATES IOB'S FIXED      */ 00910004
          3 VSRTBFRF BIT (1),       /* ON INDICATES BUFFERS FIXED    */ 00920004
          3 * BIT (12),             /* RESERVED                      */ 00950004
        2 VSRTKL FIXED (8),         /* MAX KEY LENGTH                */ 01000004
        2 VSRTSTRN FIXED (8),       /* STRNO FROM BLDVRP MACRO       */ 01050004
        2 VSRTPLHH PTR (31),        /* POINTER TO PLH HEADER         */ 01100004
        2 VSRTBUFH PTR (31),        /* POINTER TO BUFFER HEADER      */ 01150004
        2 VSRTCPAH PTR (31),        /* POINTER TO CPA HEADER         */ 01200004
        2 VSRTWAH PTR (31),         /* POINTER TO WORKAREA HEADER    */ 01250004
        2 VSRTVIOT PTR (31),        /* POINTER TO VIOT (0 IN VS1)    */ 01300004
        2 VSRTASCB PTR(31),     /* ADDRS OF ORIGINATING ASCB IF GSR. */ 01310003
        2 VSRTNEXT PTR(31),         /* ADDR OF NEXT VSRT             */ 01320004
        2 VSRTCSL (*),              /* ENTRIES FOR GOTTEN STORAGE    */ 01350004
          3 VSRTCSLF,               /* FLAGS                         */ 01400004
            4 VSRTCSFX BIT (1),     /* ON INDICATES FIXED STORAGE    */ 01450004
            4 VSRTCSVS BIT (1),     /* INDICATES BLOCK IS VSRT       */ 01500004
            4 VSRTCSBF BIT (1),     /* INDICATES BLOCK IS BUFFER     */ 01550004
              5 VSRTCSGT BIT(1), /*GSR KEY(VSRTKEY) CORE IND @Z40ESSR*/ 01560004
            4 VSRTCSPF BIT (1),     /* INDICATES  PFL BLOCK          */ 01600004
              5 VSRTCSVG BIT(1),    /* INDIC VGTT PREFIX BLK @Z30SSDP*/ 01610003
            4 VSRTCSWS BIT (1),     /* INDICATES BLOCK IS WORKING       01650004
                                       STORAGE                       */ 01660004
            4 VSRTCSPL BIT (1),     /* INDICATES BLOCK IS PLH'S      */ 01670004
            4 VSRTCSIO BIT (1),     /* INDICATES BLOCK IS IOB'S      */ 01680004
            4 VSRTCSBH BIT (1),     /* INDICATES BLOCK IS BUFFER     */ 01690004
          3 VSRTCSAD PTR (24),      /* POINTER TO GOTTEN STORAGE     */ 01700004
          3 VSRTCSSP FIXED (8),     /* SUBPOOL NUMBER                */ 01750004
          3 VSRTCSLN FIXED (24);    /* LENGTH OF GOTTEN STORAGE      */ 01800003
./  ADD  SSI=31180060,NAME=IDAVUCBL
* /*                                                                 */ 03050002
* /* MACCOMP Y-2 SC1DE/SJD61                                         */ 03100002
* /* MACSTAT Y-2 73103/Y02113                                        */ 03150002
* /*                                                                 */ 03200002
   DCL 1 IDAVUCBL BASED BDY(WORD),      /* UCB LIST */                  03250002
         2 * BIT(8),                                                    06000000
           3 VUCBLID BIT(1),            /* INDICATES UCB LIST */        09000000
           3 *       BIT(1),            /* MUST BE ZERO */              12000000
           3 VUCBLFAE BIT(1),           /* UCB LIST FREED AT END */     15000000
         2 * CHAR(1),                                                   18000000
         2 VUCBLNBR FIXED(15),          /* NUMBER OF UCB ENTRIES */     21000000
         2 VUCBLVLA PTR(31),            /* POINTER TO VOLUME LIST */    24000000
         2 VUCBLENT (*),                                                27000000
           3 * BIT(8),                                                  30000000
             4 VUCBLALC BIT(1),         /* INDICATES UCB ALLOCATED */   33000000
             4 VUCBLBAD BIT(1),         /* VOLUME NOT DISMOUNTABLE */   36000000
           3 VUCBLADR PTR(24);          /* POINTER TO UCB */            39000000
./  ADD  SSI=42910137,NAME=IDAVVOLL
 /********************************************************************/ 00050003
 /*                                                                  */ 00100003
 /*   MACRO NAME = IDAVVOLL                                          */ 00150003
 /*                                                                  */ 00200003
 /*   DESCRIPTIVE NAME = VOLUME LIST FOR VSAM VOLUME MOUNT.          */ 00250003
 /*                                                                  */ 00300003
 /*   FUNCTION = IDAVVOLL CONTAINS INFORMATIONS OF MOUNTED VOLUME.   */ 00350003
 /*                                                                  */ 00400003
 /*   CONTROL BLOCK STRUCTURE = N/A                                  */ 00450003
 /*                                                                  */ 00500003
 /*   INCLUDED MACROS = NONE                                         */ 00550003
 /*                                                                  */ 00600003
 /*   METHOD OF ACCESS = PL/S - RESPECIFY IDAVVOLL BASED.            */ 00650003
 /*                                                                  */ 00700003
 /*   CREATED BY: N/A                                                */ 00750003
 /*                                                                  */ 00800003
 /*   STATUS = VS1 RELEASE 4   (CHANGE FLAG @X04SVXX)                */ 00850003
 /*                                                                  */ 00900003
 /*   DATE OF LAST CHANGE = 1 AUGUST 74                              */ 00950003
 /*                                                                  */ 01000003
 /********************************************************************/ 01050003
   DCL 1 IDAVVOLL BASED BDY(WORD),      /* VOLUME LIST */               03000003
         2 * BIT(8),                                                    06000003
           3 *       BIT(1),            /* MUST BE ZERO              */ 09000003
           3 VVOLLID BIT(1),            /* INDICATES VOLUME LIST     */ 12000003
           3 VVOLLTIO BIT(1),           /* INDICS VUCBL CREATED      */ 15000003
           3 VVOLLOPE BIT(1),           /* CALLED BY OPEN            */ 18000003
            3 VVOLLEOV BIT(1),          /* CALLED BY EOV             */ 21000003
           3 VVOLLCAT BIT(1),           /* CALLED BY CATALOG         */ 24000003
           3 VVOLLSWD BIT(1),           /* SEQUENCE SET WITH DATA    */ 24050003
         2 * CHAR(1),                                                   27000003
         2 VVOLLNBR FIXED(15),          /* NUMBER OF VOLSER ENTRIES */  30000003
         2 VVOLLTAB PTR(31),            /* PTR TO TIOT DD ENTRY (TIOE)*/33000003
         2 VVOLLACB PTR(31),            /* PTR TO CATALOG ACB */        36000003
         2 VVOLLERR FIXED(31),          /* RETURN CODE       @X04SVRP*/ 36050003
           3 VVOLLPDC FIXED(8),         /* PROB DET ERR CODE @X04SVRP*/ 36100003
           3 VVOLLFNC FIXED(8),         /* FUNCTION CODE     @X04SVRP*/ 36150003
           3 VVOLLSFC FIXED(8),         /* SUB-FUNCTION CODE @X04SVRP*/ 36200003
           3 VVOLLCNT FIXED(8),         /* VOLUME COUNT      @X04SVRP*/ 36300003
         2 VVOLLSFI CHAR(12),           /* SUB-FUNCTION INFORMATION     36350003
                                                        AREA @X04SVRP*/ 36400003
         2 VVOLLBIB PTR(31),           /* PTR TO BIB         @X04SVRP*/ 36450003
         2 VVOLLDEB PTR(31),           /* PTR TO DEB         @X04SVRP*/ 36500003
         2 VVOLLENT (*),                                                39000003
           3 VVOLLUCB PTR(31),          /* PTR TO UCB USED           */ 42000003
           3 * BIT(16),                                                 45000003
             4 VVOLLMNT BIT(1),         /* INDICS VOLUME MOUNTED     */ 48000003
             4 VVOLLVFY BIT(1),         /* VOLUME IS VERIFIED        */ 51000003
           3 VVOLLVSR CHAR(6);          /* VOLSER FOR VOLUME         */ 54000003
./  ADD  SSI=61810694,NAME=IDAWAX
*/********************************************************************/ 00050037
*/*                                                                  */ 00100037
*/*   MACRO NAME = IDAWAX                                            */ 00150037
*/*                                                                  */ 00200037
*/*   DESCRIPTIVE NAME = WORK AREA FOR PATH PROCESSING               */ 00250037
*/*                                                                  */ 00300037
*/*   FUNCTION = CONTAINS POINTERS AND INDICATORS REQUIRED FOR PATH  */ 00350037
*/*              PROCESSING                                          */ 00360037
*/*                                                                  */ 00400037
*/*   CONTROL BLOCK STRUCTURE = POINTED TO BY THE IDAPLH WHEN AIX IS */ 00450037
*/*              OPENED FOR PATH PROCESSING                          */ 00452037
*/*                                                                  */ 00460037
*/*   INCLUDED MACROS = NONE                                         */ 00470037
*/*                                                                  */ 00480037
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00490037
*/*                                                                  */ 00492037
*/*   CREATED BY = VSAM OPEN                                         */ 00494037
*/*                                                                  */ 00496037
*/*   STATUS = VS/1 RELEASE 4  (CHANGE FLAG @X04SVXX)                */ 00498037
*/*                                                                  */ 00498437
*/*   DATE OF LAST CHANGE = 13 AUG 74                                */ 00498837
*/*                                                                  */ 00499237
*/********************************************************************/ 00499637
    DCL                                                                 00500037
      1 IDAWAX BASED(PLHWAX),       /* WORK AREA FOR PATH PROCESSING */ 01000037
       2 WAXID FIXED(8),            /* ID FIELD                      */ 01500037
       2 WAXFLG1 FIXED(8),          /* FLAGS                         */ 02000037
        3 WAXSRAB BIT(1),           /* ONE INDICATES SRA BUILT       */ 02500037
        3 WAXPUG BIT(1),            /* AIX IS IN UPGRADE SET         */ 03000037
        3 WAXPS BIT(1),             /* LAST OPERATION WAS A PUT SEQ  */ 03500037
        3 WAXNOADV BIT(1),          /* DON'T ADVANCE WAXXPTR @ZA10591*/ 03700037
       2 WAXLEN FIXED(15),          /* LENGTH OF IDAWAX              */ 04000037
       2 WAXPL FIXED(15),           /* AIX RECORD PTR LENGTH         */ 04500037
       2 WAXXXXX2 FIXED(15),        /* UNUSED                        */ 05000037
       2 WAXIRPL PTR(31),           /* POINTER TO INNER RPL          */ 05500037
       2 WAXURPL PTR(31),           /* POINTER TO USERS RPL          */ 06000037
       2 WAXRCDA PTR(31),           /* POINTER TO AIX RECORD         */ 06500037
       2 WAXXPTR PTR(31),           /* POINTER TO CURRENT AIX PTR    */ 07000037
       2 WAXEPTR PTR(31),           /* POINTER BEYOND LAST AIX PTR   */ 07500037
       2 WAXBPLH PTR(31),           /* POINTER TO BASE PLH           */ 08000037
       2 WAXSRAA PTR(31),           /* POINTER TO SAVED RECORD AREA  */ 08500037
       2 WAXSRAL FIXED(31),         /* LENGTH OF SAVED RECORD AREA   */ 09000037
       2 WAXXXXX3 FIXED(31);        /* UNUSED                        */ 09500037
./  ADD  SSI=81790437,NAME=IDAWSHD
*/********************************************************************/ 00010037
*/*                                                                  */ 00020037
*/*   MACRO NAME = IDAWSHD                                           */ 00030037
*/*                                                                  */ 00040037
*/*   DESCRIPTIVE NAME = WORKING STORAGE HEADER                      */ 00042037
*/*                                                                  */ 00044037
*/*   FUNCTION = DESCRIBES BLOCKS OF CORE THAT ARE USED FOR WORKING  */ 00046037
*/*              STORAGE                                             */ 00046437
*/*                                                                  */ 00048037
*/*   CONTROL BLOCK STRUCTURE = POINTED TO BY IDAAMB                 */ 00048437
*/*                                                                  */ 00048837
*/*   INCLUDED MACROS = NONE                                         */ 00049237
*/*                                                                  */ 00049637
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00049737
*/*                                                                  */ 00049837
*/*   CREATED BY = VSAM OPEN                                         */ 00049937
*/*                                                                  */ 00066637
*/*   STATUS = VS/1 RELEASE 4  (CHANGE FLAG @X04SVXX)                */ 00076637
*/*            @ZA26092                                              */ 00078637
*/*                                                                  */ 00079637
*/*   DATE OF LAST CHANGE = 15 APR 75                        @Z40ESSR*/ 00080604
*/*                       = 01 MAR 78                        @ZA29035*/ 00081637
*/*                                                                  */ 00082637
*/********************************************************************/ 00083037
* DCL 1 IDAWSHD BASED,              /* WORK SPACE HEADER             */ 00083337
*      2 WSHDID CHAR(1),            /* CONTROL BLOCK ID-X'44'        */ 00100037
*      2 WSHDPOOL FIXED(8),         /* SUBPOOL OF IDAWSHD            */ 00150037
*      2 WSHDLEN FIXED(15),         /* LENGTH OF WORK SPACE HEADER   */ 00200037
*      2 WSHDACHN PTR(31),          /* ACCESS CHAIN          @ZA29035*/ 00250037
*       3 WSHDGMTB BIT(8),          /* GETMAIN RESOURCE BYTE @ZA26092*/ 00270037
*       3 WSHDNEXT PTR(24),         /* PTR TO NEXT IDAWSHD   @ZA26092*/ 00290037
*      2 WSHDGMWA CHAR(10),         /* GETMAIN WORK AREA             */ 00350037
*      2 WSHDNUS FIXED(15),         /* NBR OF USED SLOTS             */ 00400037
*      2 WSHDGMRA PTR(31),          /* GETMAIN RESULT                */ 00450037
*      2 WSHDOCHN PTR(31),          /* ORDERED SLOT CHAIN            */ 00460037
*      2 WSHDSLT(4),                /* WORK SPACE SLOT               */ 00500037
*       3 WSHDSAD PTR(31),          /* POINTER TO BLOCK              */ 00510037
*        4 * BIT(8),                /* FLAG FIELD            @Z30SSMR*/ 00520037
*         5 * BIT(2),               /* RESERVED              @Z30SSMR*/ 00530037
*         5 WSHDGSR BIT(1),         /* CORE IS IN GSR KEY    @Z40ESSR*/ 00540004
*       3 WSHDSGMW,                 /* WORK AREA FOR SLOT GETMAIN    */ 00550037
*        4 WSHDSFM,                 /* FREEMAIN FIELD FOR DELVRP     */ 00600037
*         5 WSHDSFSP FIXED(8),      /* SUBPOOL FOR BLOCK             */ 00650037
*         5 WSHDSFLN FIXED(24),     /* LENGTH IN BYTES OF BLOCK      */ 00700037
*        4 WSHDSONX PTR(31),        /* PTR TO NEXT ON ORDERED CHN    */ 00750037
*        4 WSHDSBV FIXED(15),       /* NBR OF BYTES PRE SLOT BIT     */ 00800037
*        4 WSHDSFLG BIT(8),         /* WORK SPACE SLOT FLAGS         */ 00850037
*         5 WSHDSFNO BIT(1),        /* SLOT HAS NO AVAILABLE CORE    */ 00900037
*        4 WSHDSBM BIT(8);          /* BIT MASK                      */ 00950037
./  ADD  SSI=32120056,NAME=IDDTRACK
*        %GOTO VTRACK1; /*                                              10000002
         MACRO                                                          10050002
         IDDTRACK                                                       10100002
VTRACK   DSECT ,  */                                                    10150002
*%VTRACK1:;                                                             10200002
*                                                                       10250002
*/* **************************************************************** */ 10300002
*/*                                                                  */ 10350002
*/*                  ***** VIRTUAL TRACK *****                       */ 10400002
*/*           ALSO KNOWN AS VIRTUAL BUFFER OR WINDOW                 */ 10410002
*/*                                                                  */ 10450002
*/*   MVM RELEASE 1 8/9/72 LEVEL=0                                   */ 10500002
*/*                                                                  */ 10550002
*/*   METHOD OF ACCESS                                               */ 10600002
*/*                                                                  */ 10650002
*/*      PLS - MUST HAVE ADDRESSABILITY ON THE VDSCB                 */ 10700002
*/*      BAL - ONE DSECT PRODUCED. DO USING ON VTRACK.               */ 10750002
*/*                                                                  */ 10800002
*/*   FUNCTION                                                       */ 10850002
*/*      THE VIRTUAL TRACK CONTAINS THE DATA RECORDS WHICH REPRESENT */ 10900002
*/*      THE FORMAT OF THE DASD TRACK.  IT IS ACQUIRED, RELEASED AND */ 10950002
*/*      INITIALIZED BY THE WINDOW INTERCEPT.                        */ 11000002
*/*                                                                  */ 11050002
*/* **************************************************************** */ 11100002
*%GO TO VTRACK2; /*                                                     11150002
*                                                                       20000002
VTDATEND DS    AL4                      DISPLACEMENT FROM BEGINNING     20050002
*                                       OF TRACK TO THE END OF LAST     20100002
*                                       BYTE OF LAST RECORD             20150002
VTRKBAL  DS    AL4                      CURRENT TRACK BALANCE           20200002
VTST     DS    X                        TRACK STATUS                    20250002
VTINIT   EQU   X'80'                    TRACK INITIALIZED               20300002
VTOVFL   EQU   X'40'                    LAST RECORD IS AN OVERFLOW SEG. 20350002
VTUPDATE EQU   X'20'                    TRACK UPDATED                   20400002
*                                                                       20450002
VTHA     DS    0CL5                     HOME ADDRESS                    20500002
VTHAFLAG DS    CL1                      FLAG BYTE OF HOME ADDRESS       20550002
VTHACCHH DS    CL4                      ADDRESS PORTION OF HOME ADDR    20600002
VTR0     DS    0CL16                    RECORD ZERO                     20650002
VTR0CNT  DS    CL8                      R0 COUNT                        20700002
VTR0DATA DS    CL8                      R0 DATA                         20750002
VTR1     DS    X                        BEGINNING OF RECORD ONE         20800002
         MEND  ,         */                                             20850002
         %VTRACK2: ;                                                    30000002
* DECLARE 1 VTRACK BASED(VDSWINDW),      /* TRACK BEGINNING */          30050002
*          2 VTDATEND FIXED (31),       /* DISPLACEMENT FROM THE        30100002
*                                       BEGINNING OF TRACK TO THE END   30150002
*                                       OF LAST BYTE OF LAST RECORD */  30200002
*          2 VTRKBAL FIXED (31),        /* CURRENT TRACK BALANCE */     30300002
*          2 VTST CHAR (1),             /* TRACK STATUS */              30350002
*           3 VTINIT BIT (1),           /* TRACK INITIALIZED */         30400002
*           3 VTOVFL BIT (1),           /* LAST REC. IS OVERFLOW REC.*/ 30450002
*           3 VTUPDATE BIT (1),         /* TRACK UPDATED */             30550002
*          2 VTHA CHAR (5),             /* HOME ADDRESS */              30600002
*           3 VTHAFLAG CHAR (1),        /* FLAG BYTE OF HOME ADDRESS */ 30650002
*           3 VTHACCHH CHAR (4),        /* ADDRESS PORTION HOME ADDR */ 30700002
*          2 VTR0 CHAR (16),            /* RECORD ZERO */               30750002
*           3 VTR0CNT CHAR (8),         /* R0 COUNT */                  30800002
*           3 VTR0DATA CHAR (8),        /* R0 DATA */                   30850002
*          2 VTR1 CHAR (1);             /* BEGINNING OF RECORD ONE */   30900002
./  ADD  SSI=31771038,NAME=IDDVBPPL
*        %GOTO VBPPL1; /*                                               10000002
         MACRO                                                          10050002
         IDDVBPPL                                                       10100002
VBPPL    DSECT ,  */                                                    10150002
*%VBPPL1:;                                                              10200002
*                                                                       10250002
*/* **************************************************************** */ 10300002
*/*                                                                  */ 10350002
*/*       ***** VIRTUAL BLOCK PROCESSOR PARAMETER LIST *****         */ 10400002
*/*                                                                  */ 10450002
*/*   MVM RELEASE 1 8/9/72 LEVEL=0                                   */ 10500002
*/*                                                                  */ 10550002
*/*   METHOD OF ACCESS                                               */ 10600002
*/*                                                                  */ 10650002
*/*      PLS - INCLUDE IDDVDSCB MACRO                                */ 10700002
*/*      BAL - ONE DSECT PRODUCED. DO USING ON VBPPL.                */ 10750002
*/*                                                                  */ 10800002
*/*   FUNCTION                                                       */ 10850002
*/*      THE VBPPL CONTAINS THE VREADWR PARAMETER LIST PASSED TO     */ 10900002
*/*      VBP BY THE WINDOW INTERCEPT. IT IS ACQUIRED, RELEASED AND   */ 10950002
*/*      INITIALIZED BY THE WINDOW INTERCEPT.                        */ 11000002
*/*                                                                  */ 11050002
*/* **************************************************************** */ 11100002
*%GO TO VBPPL2; /*                                                      11150002
VBPPLSAV DS    18F                      WINDOW INTERCEPT REGISTER       20000002
*                                       SAVE AREA.                      20050002
VBPPLSV2 DS    18F                      SEOND SAVE AREA FOR WINDOW      20100002
*                                       INTERCEPT                       20150002
VBPOPPRM DS    0CL24                    VOPEN PARAMETER LIST            20200002
VBPRWPRM DS    CL40                     PARAMETER LIST PASSED TO        20250002
*                                       VBP ON VREAD OR VWRITE.         20300002
         MEND  ,         */                                             20350002
         %VBPPL2: ;                                                     30000002
* DECLARE 1 VBPPL BASED(VDSVBPPL),      /* BASIC PARAMETER LIST */      30050002
*      2 VBPPLSAV(18) FIXED(31),        /* WINDOW INTERCEPT             30100002
*                                         REGISTER SAVE AREA. */        30150002
*      2 VBPPLSV2(18) FIXED(31),        /* SECOND WINDOW INTERCEPT      30200002
*                                         REGISTER SAVE AREA. */        30250002
*      2 * BDY(WORD),                   /* USED FOR VREADWR AND         30300002
*                                         VOPEN PARAMETER LISTS */      30350002
*        3 VBPRWPRM CHAR(40) BDY(WORD), /* VREADWR */                   30400002
*          4 VBPOPPRM CHAR(24) BDY(WORD);/* VOPEN */                    30450002
./  ADD  SSI=32120058,NAME=IDDVDSCB
*        % GOTO VDSCB1;   /*                                            10000002
         MACRO                                                          10050002
         IDDVDSCB                                                       10100002
VDSCB    DSECT ,           */                                           10150002
*%VDSCB1: ;                                                             10200002
*                                                                       10250002
*/* ************************************************************** */   10300002
*/*                                                                */   10350002
*/*           ******* VIRTUAL DATA SET CONTROL BLOCK ******        */   10400002
*/*                                                                */   10450002
*/*   MVM RELEASE 1 8/9/72,LEVEL = 1.                              */   10500002
*/*   METHOD OF ACCESS                                             */   10550002
*/*      PL/S - DCL VDSCBPTR PTR                                   */   10600002
*/*      BAL  - ONE DSECT PRODUCED. DO USING ON VDSCB.             */   10650002
*/*                                                                */   10700002
*/*   FUNCTION                                                     */   10750002
*/*      THE VIO DATA SET CONTROL BLOCK CONTAINS THE FORMAT 1      */   10800002
*/*      DSCB AND THE UCB AND POINTERS TO OTHER VIO CONTROL        */   10850002
*/*      BLOCKS AND PARAMETER LISTS AND SAVE AREAS.                */   10900002
*/*                                                                */   10950002
*/* ************************************************************** */   11000002
*                                                                       11050002
*%GO TO VDSCB2;   /*                                                    11100002
VDSUCB   DS    CL45                    DIRECT ACCESS UCB FOR            20000002
*                                      THIS DATA SET.                   20050002
VDSSEEKA DS    CL7                     SEEK ADDR OF TRK IN THE WINDOW   20100002
VDSDSPCT DS    A                       POINTER TO DSPCT HEADER          20150002
VDSWICB  DS    A                       POINTER TO WICB.                 20200002
VDSVBPPL DS    A                       POINTER TO VBPPL.                20250002
VDSWINDW DS    A                       POINTER TO WINDOW.               20300002
VDSTRKSI DS    H                       MAXIMUM TRACK SIZE IN BYTES      20350002
VDSWINSI DS    H                       SIZE OF WINDOW IN BYTES          20400002
VDSABSTT DS    H                       ABSOLUTE TRACK NUMBER OF FIRST   20450002
*                                      TRACK IN THE DATA SET.           20500002
VDSNMTRK DS    H                       NUMBER OF TRACKS IN THE DATA     20550002
*                                      SET.                             20600002
VDSRBN   DS        F                   NO PASSED BY IEFXB500            20650002
VDSDSCB  DS    CL125                   FORMAT 1 DSCB.                   20700002
         MEND  ,   */                                                   20750002
         % VDSCB2: ;                                                    30000002
* DECLARE 1 VDSCB BASED(VDSCBPTR),                                      30050002
*          2 VDSUCB CHAR(45),           /* UCB FOR A VIRTUAL DEVICE */  30100002
*          2 VDSSEEKA CHAR(7),          /* SEEK ADDR OF TRK IN WINDOW*/ 30150002
*          2 VDSDSPCT PTR(31),          /* POINTER TO DSPCT HEADER */   30250002
*          2 VDSWICB PTR(31),           /* POINTER TO WICB */           30300002
*          2 VDSVBPPL PTR(31),          /* POINTER VBPPL */             30350002
*          2 VDSWINDW PTR(31),          /* POINTER TO WINDOW */         30400002
*          2 VDSTRKSI FIXED(15),        /* MAXIMUM TRACK SIZE IN BYTES*/30450002
*          2 VDSWINSI FIXED(15),        /* SIZE OF THE WINDOW IN BYTES*/30500002
*          2 VDSABSTT FIXED(15),        /* ABSOLUTE TRACK NUMBER OF THE 30550002
*                                       FIRST TRACK OF THE DATA SET */  30600002
*          2 VDSNMTRK FIXED(15),        /* NUMBER OF TRACKS IN THE DATA 30650002
*                                       SET */                          30700002
*          2 VDSRBN FIXED(32),          /* NO. PASSED BY IEFXB500*/     30750002
*          2 VDSDSCB CHAR(125);         /* FORMAT 1 DSCB */             30800002
./  ADD  SSI=53240962,NAME=IDDWICB
*        %GOTO WICB1;  /*                                               10000002
         MACRO                                                          10050002
         IDDWICB                                                        10100002
WICB     DSECT ,                        */                              10150002
*%WICB1:;                                                               10200002
*                                                                       10250002
*/* *************************************************************** */  10300002
*/*                                                                 */  10350002
*/*           ***** WINDOW INTERCEPT CONTROL BLOCK *****            */  10400002
*/*                                                                 */  10450002
*/*   VS2 RELEASE 4.1 7/8/75                                @Z40WSSR*/  10500004
*/*                                                                 */  10550002
*/*   METHOD OF ACCESS                                              */  10600002
*/*      PL/S - DCL WICBPTR PTR                                     */  10650002
*/*           - % IDDSWAPP = 'YES'  - INCLUDES THE EXCP INTERCEPT   */  10660002
*/*             FRR PARAMETER LIST.                                 */  10670002
*/*           - % IDDSWJRN = 'YES'  - INCLUDES WIJOURN FRR          */  10680002
*/*             PARAMETER LIST.                                     */  10690002
*/*           - % IDDCLSSW = 'YES'  - INCLUDES WICLOSE FRR          */  10692002
*/*             PARAMETER LIST.                                     */  10694002
*/*      BAL - ONE DSECT PRODUCED. DO USING ON WICB                 */  10700002
*/*                                                                 */  10750002
*/*   FUNCTION                                                      */  10800002
*/*      THE WINDOW INTERCEPT CONTROL BLOCK CONTAINS THE ACTIVE     */  10850002
*/*      FIELDS OF THE VAM DATA SET. IT IS ACQUIRED,RELEASED        */  10900002
*/*      AND MANIPULATED BY THE WINDOW INTERCEPT.                   */  10950002
*/*     IT ALSO CONTAINS STATUS AND CONTROL INFORMATION             */  10960002
*/*     THAT IS USED IN INTERPRETING AND SIMULATING EXECUTION       */  10970002
*/*     OF THE CHANNEL PROGRAM ASSOCIATED WITH THE EXCP REQUEST     */  10980002
*/*     THAT INITIATED VIO PROCESSING.                              */  10990002
*/*                                                                 */  11000002
*/* VS2 RELEASE 4.1 CHANGES:                                @Z40WSSR*/  11010004
*/* C511000, A511100                                        @Z40WSSR*/  11020004
*/* *************************************************************** */  11050002
*                                                                       11100002
*%GOTO WICB2;  /*                                                       11150002
WICB     DSECT ,                        BOUNDARY                        20000002
WICSEEKA DS    0CL8                     SEEK ADDRESS OF THE TRACK TO    20050002
*                                       BE PLACED IN THE WINDOW.        20100002
WICSKAM  DS    CL1                      M - EXTENT NUMBER               20150002
WICSKBCH DS    0CL6                     BBCCHH - SEEK ADDRESS           20200002
WICSKABB DS    CL2                      BB - BIN NUMBER                 20250002
WICSKACH DS    0CL4                     CCHH - SEEK ADDRESS             20300002
WICSKACC DS    CL2                      CC - CYLINDER NUMBER            20350002
WICSKAHH DS    CL2                      HH - HEAD NUMBER                20400002
WICSKAR  DS    CL1                      R - RECORD NUMBER               20450002
*                                                                       20500002
WICSTART DS    A                        ADDRESS OF THE FIRST CCW TO BE  20550002
*                                       INTERPRETED.                    20600002
WICAUDIT DS    AL3                      AUDIT TRAIL FLAGS.              20650002
*                                                                       20700002
WICPRT   DS    AL1                      PROTECT KEY FROM UCB            20750002
WICRSTCP DS    0CL16                    RESTART CHANNEL PROGRAM EXT     20800002
WICCCW1  DS    D                        DATA TRANSFER CCW               20850002
WICCCW2  DS    D                        TIC TO NEXT CCW                 20900002
WICERPSW DS    CL1                      ERP CONTROL SWITCHES            20950002
WICERPOV EQU   X'80'                    OVERRUN INCOMPLETE RESTARTED    21000002
WICERPWR EQU   X'40'                    WRITE CCW RESTARTED-            21050002
*                                       WILL BE RESET BY THE CPI        21100002
*                                       USED TO TEST FOR WRITE          21150002
*                                       PREREQUISITES                   21200002
WICERPSV DS    AL3                      ADDRESS OF CCW THAT WAS         21250002
*                                        RESTARTED. USED TO INTERPRET   21300002
*                                        THE CSW.                       21350002
WICCAM   DS    A                        ADDRESS OF THE COUNT FIELD OF   21400002
*                                       THE CURRENT RECORD.(CURSOR)     21450002
WICRELTP DS    H                        POSITION INDICATOR.             21500002
WICBFCNT EQU   1                        BEFORE COUNT                    21550002
WICBFKEY EQU   2                        BEFORE KEY                      21600002
WICBFDAT EQU   3                        BEFORE DATA                     21650002
WICAFDAT EQU   4                        AFTER DATA                      21700002
WICBFHA  EQU   5                        BEFORE HOME ADDRESS             21750002
WICBFR0  EQU   6                        BEFORE RECORD ZERO              21800002
WICAFR0  EQU   7                        AFTER RECORD ZERO               21850002
*                                                                       21900002
WICKL    DS    H                        CURRENT KEY LENGTH              21950002
WICDL    DS    F                        CURRENT DATA LENGTH             22000002
*                                                                       22050002
WICAVXFR DS    F                        NUMBER OF BYTES AVAILABLE FOR   22100002
*                                       A READ OR NON-FORMATTED WRITE.  22150002
WICREQXF DS    F                        ACCUMULATED BYTES TRANSFERRED   22200002
*                                       FOR AN AREA(COUNT, KEY OR DATA) 22250002
*                                       DURING A READ OF NON-FORMATTING 22300002
*                                       WRITE CCW.                      22350002
WICOFLG1 DS    CL1                      FLAGS FOR CURRENT OP CODE       22400002
*                                                                       22450002
WICWCKD  EQU   X'80'                    WRITE COUNT KEY DATA            22500002
WICWSCKD EQU   X'40'                    WRITE SPECIAL COUN KEY DATA     22550002
WICERASE EQU   X'20'                    ERASE                           22600002
WICFMTW  EQU   X'10'                    FORMAT WRITE SET FOR WCKD,      22650002
*                                       WSPCKD, AND ERASE               22700002
WICOVFOP EQU   X'08'                    SET FOR RD, RKD, RCKD, WD, WKD  22750002
*                                       QUALIFIES FOR OVERFLOW          22800002
*                                       PROCESSING                      22850002
WICSCHTC EQU   X'04'                    SEARCH TIC COMBINATION          22900002
WICSID   EQU   X'02'                    SEARCH ID OP CODE               22950002
*                                                                       23000002
WICOFLG2 DS    CL1                      FLAGS FOR CURRENT OP CODE       23050002
*                                                                       23100002
WICXFCOM EQU   X'80'                    TRANSFER COMPLETE OR NOT        23150002
*                                       DESIRED                         23200002
WICDATAX EQU   X'40'                    INDICATE THAT TRANSFER HAS      23250002
*                                       BEEN INITIATED                  23300002
WICINTRP EQU   X'20'                    INDICATE THAT A CONDITION       23350002
*                                       EXEIST FOR ENDING THE CHANNEL   23400002
*                                       PROGRAM INTERPRETATION          23450002
WICERROR EQU   X'10'                    INDICATE THAT AN ERROR HAS      23500002
*                                       BEEN DETECTED AFTER THE         23550002
*                                       OPERATION HAS STARTED           23600002
WICSCHEQ EQU   X'08'                    SET WHEN SID EQUAL OR SK        23650002
*                                       EQUAL OP CODE IS USED.          23700002
*                                       IF SEARCH IS A FULL SEARCH      23750002
*                                       THEN FLAG WICFSIDE OR           23800002
*                                       WICFSKE IS SET                  23850002
WICDC    EQU   X'04'                    DATA CHAINING REQUESTED         23900002
WICWRTIP EQU   X'02'                    WRITE IN PROCESS                23950002
*                                                                       24000002
WICSEQFG DS    CL1                      FLAGS FOR SEQUENCE CHECKING     24050002
*                                                                       24100002
WICLWCKD EQU   X'80'                    LAST OPERATION A WCKD           24150002
WICFSIDE EQU   X'40'                    A FULL SID EQUAL HAS BEEN       24200002
*                                       SATISFIED                       24250002
WICFSKE  EQU   X'20'                    A FULL SK EQUAL HAS BEEN        24300002
*                                       SATISFIED                       24350002
WICTICFG EQU   X'10'                    TIC BEING PROCESSED             24400002
*                                                                       24450002
WICXOFLG DS    CL1                      ACCROSS OP CODE FLAG            24500002
*                                                                       24550002
WICNDXPT EQU   X'80'                    INDEX POINT SWITCH              24600002
WICRCSKT EQU   X'40'                    READ COUNT SEARCH KEY TIC       24650002
*                                       COMBINATION DETECTED            24700002
WICWORK  DS    A                        GENERAL WORK AREA.              24750002
WICERDSP DS    H                        DISPLACEMNT INTO ERROR TABLE    24800002
WICLSTOP DS    AL1                      OPCODE OF LAST CCW.             24850002
WICCUROP DS    AL1                      CURRENT OP CODE                 24900002
WICRESTA DS    CL1                      FLAG TO RESTART CONDITIONS      24950002
WICPCIRS EQU   X'80'                    RESTARTING FROM PCI EXIT        25000002
WICOVFIP EQU   X'40'                    RESTARTING FROM OVERFLOW        25050002
*                                       RECORD PROCESSING               25100002
WICSEKRS EQU   X'20'                    SEEK ROUTINE CALLED THE TRK     25150002
*                                       ROUTINE                         25200002
WICTRKRS EQU   X'10'                    TRACK REQUEST RESTART FLAG      25250002
WICTRMSK EQU   X'08'                    TRACK MANAGER DETECTED AN       25300002
*                                       INVALID SEEK ARGGUMENT          25350002
WICRSTRT EQU   X'01'                    FOR ALL RESTART SITUATIONS      25400002
WICFMASK DS    CL1                      FILE MASK.                      25450002
*                                                                       25500002
WICFMVAL EQU   B'00100110'              MASK FOR CHECKING FILE MASK     25550002
*                                       BITS 2, 5, AND 6 MUST BE ZERO   25600002
WICFMWRT EQU   B'11000000'              BITS 0-1 DESCRIBE THE WRITE     25650002
*                                       BITS OF THE FILE MASK           25700002
WICFMW00 EQU   B'00000000'              '00' INHIBIT WHA AND WR0        25750002
WICFMW01 EQU   B'01000000'              '01' INHIBIT ALL WRITES         25800002
WICFMW10 EQU   B'10000000'              '10' INHIBIT WHA,WR0, FORMAT    25850002
*                                            WRITES                     25900002
WICFMW11 EQU   B'11000000'              '11' PERMIT ALL WRITES          25950002
*                                                                       26000002
WICFMSEK EQU   B'00011000'              BITS 3-5 DESCRIBE THE SEEK      26050002
*                                       BITS OF THE FILE MASK           26100002
WICFMS00 EQU   B'00000000'              '00' PERMIT ALL SEEK            26150002
WICFMS01 EQU   B'00001000'              '01' PERMIT CYL AND HEAD SEEKS  26200002
WICFMS10 EQU   B'00010000'              '10' PERMIT HEAD SEEKS          26250002
WICFMS11 EQU   B'00011000'              '11' INHIBIT ALL SEEKS          26300002
WICDVTAB DS    0CL16                    CONDENSED FORM OF DEVICE TABLE  26350002
WICMAXCC DS    H                        HIGHEST CYLINDER                26400002
WICMAXHH DS    H                        HIGHEST HEAD                    26450002
WICTRKCP DS    H                        TRACK CAPACITY                  26500002
WICIGAP  DS    H                        NORMAL-KEYED RECORD OVERHEAD    26550002
WICLGAP  DS    H                        LAST-KEYED RECORD OVERHEAD      26600002
WICKEYGP DS    H                        KEYED-RECORD OVERHEAD           26650002
WICTOL   DS    H                        TOLERANCE                       26700002
WICTOLSW EQU   WICTOL+1                 SECOND BYTE OF TOLERANCE        26750002
*                                       SERVES AS SWITCH AND IF ZERO    26800002
*                                       INDICATES TOLERANCE DOES NOT    26850002
WICTOLAP EQU   X'00'                    APPLY                           26900002
WICSECT  DS    AL1                      0-RPS NOT SUPPORTED,            26950002
*                                       ¬0-HIGHEST POSSIBLE SECTOR      27000002
WICNORPS EQU   X'00'                    NOT AN RPS DEVICE IF ZERO       27050002
WICDEVTP DS    CL1                      DEVICE TYPE FROM UCB            27100002
*                                                                       27150002
WIC2314  EQU   X'08'                    2314 DEVICE                     27200002
WICSENSE DS    CL2                      SAVE AREA FOR SENSE BYTES       27250002
WICEXPTR DS    A                        POINTER TO DEB EXTENT           27300002
*                                                                       27350002
WICREGSV DS    0CL24                    REGISTER SAVE AREA .            27400002
WICCSWSV DS    0CL7                     SAVE AREA FOR CSW               27450002
WICCCWER DS    0CL8                     FAKE ERROR CCW                  27500002
WICRGSV0 DS    F                        FIRST SLOT                      27550002
WICRGSV1 DS    F                        SECOND SLOT                     27600002
WICRGSV2 DS    F                        THIRD SLOT                      27650002
WICRGSV3 DS    F                        FOURTH SLOT                     27700002
WICRGSV4 DS    F                        FIFTH SLOT                      27750002
WICRGSV5 DS    F                        SIXTH SLOT                      27800002
WICDATND DS    A                        ADDRESS OF THE END OF CURRENT   27850002
*                                       TRACK.                          27900002
WICTCB   DS    A                   ADDR OF TCB GETMAINED UNDER VS05944  27910002
*                                                                       27950002
WICCPINT EQU   WICFMASK-WICAVXFR        FIELDS WHICH WILL BE ZEROED OUT 28000002
*                                       AT THE BEGINNING OF EACH CHAN-  28050002
*                                       NEL PROGRAM AND ARE THE FOLLOW- 28100002
*                                       ING                             28150002
*                                       WICAVXFR                        28200002
*                                       WICREQXF                        28250002
*                                       WICOFLG1                        28300002
*                                       WICOFLG2                        28350002
*                                       WICSEQFG                        28400002
*                                       WICXOFLG                        28450002
*                                       WICWORK                         28500002
*                                       WICERDSP                        28550002
*                                       WICLSTOP                        28600002
*                                       WICCUROP                        28650002
*                                       WICRESTA                        28700002
WICOPINT EQU   WICSEQFG-WICAVXFR        FIELD WHICH WILL BE ZEROED OUT  28750002
*                                       AT THE BEGINNING OF EACH OP     28800002
*                                       CODE PROCESS AND ARE THE        28850002
*                                       FOLLOWING                       28900002
*                                       WICAVXFR                        28950002
*                                       WICREQXF                        29000002
*                                       WICOFLG1                        29050002
*                                       WICOFLG2                        29100002
         MEND  ,                        */                              29150002
         %WICB2: ;                                                      30000002
* DECLARE 1 WICB BASED(VDSWICB) BDY(DWORD),                             30050002
*        2  WICSEEKA CHAR(8),           /*SEEK ADDRESS ADDRESS OF THE   30100002
*                                       TRACK TO BE PLACED IN THE       30150002
*                                       WINDOW */                       30200002
*          3 WICSKAM CHAR(1),           /* EXTENT NUMBER */             30250002
*          3 WICSKBCH CHAR(6),          /* BBCCHH */                    30300002
*            4 WICSKABB CHAR(2),        /* BB */                        30350002
*            4 WICSKACH CHAR(4),        /* CCHH */                      30400002
*              5 WICSKACC CHAR(2),      /* CC */                        30450002
*              5 WICSKAHH CHAR(2),      /* HH */                        30500002
*          3 WICSKAR CHAR(1),           /* R */                         30550002
*        2 WICSTART PTR(31),            /* STARTING ADDRESS OF CHANNEL  30600002
*                                       PROGRAM */                      30650002
*        2 WICAUDIT CHAR(3),            /* AUDIT FLAGS */               30700002
*        2 WICPRT FIXED(8),             /* PROTECTION KEY OF CURRENT    30750002
*                                       USER AND WICB AND WINDOW */     30800002
*        2 WICRSTCP CHAR(16) BDY(DWORD), /* RESTART CHANNEL PROGRAM     30850002
*                                       USED BY ERP FUNCTION */         30900002
*          3 WICCCW1 CHAR(8) BDY(DWORD), /* FIRST CCW */                30950002
*          3 WICCCW2 CHAR(8) BDY(DWORD), /* SECOND CCW */               31000002
*        2 WICERPSW CHAR(1),            /* ERP CONTROL SWITCHES */      31050002
*          3 WICERPOV BIT(1),           /* ERP RESTART OF OVERFLOW      31100002
*                                       INCOMPLETE IN PROGRESS */       31150002
*          3 WICERPWR BIT(1),           /* WRITE CCW RESTART - WILL BE  31200002
*                                       USED AND RESET BY THE CPI TO    31250002
*                                       SATISFY THE WRITE PREREQUISITES 31300002
*                                       FOR RESTARTED OVERFLOW          31350002
*                                       INCOMPLETE WRITE CCWS */        31400002
*          3 * BIT(6),                  /* UNUSED */                    31450002
*        2 WICERPSV PTR(24) BDY(WORD,2), /* ADDRESS OF CCW THAT WAS     31500002
*                                       RESTARTED */                    31550002
*        2 WICCAM PTR(31),              /* ADDRESS OF THE COUNT FIELD   31600002
*                                       OF THE CURRENT RECORD */        31650002
*        2 WICRELTP FIXED(15),          /* POSITON IN CURRENT RECORD    31700002
*                                       -COUNT KEY OR DATA R0 OR HA */  31750002
*        2 WICKL FIXED(15),             /* CURRENT KEY LENGTH */        31800002
*        2 WICDL FIXED(31),             /* CURRENT DATA LENGTH */       31850002
*        2 WICAVXFR FIXED(31),          /* NUMBER OF BYTES AVAILABLE    31900002
*                                       FOR A READ OR NON-FORMATTED     31950002
*                                       WRITE */                        32000002
*        2 WICREQXF FIXED(31),          /* ACCUMULATED BYTES            32050002
*                                       TRANSFERRED FOR AN AREA */      32100002
*        2 WICOFLG1 BIT(8),             /* FLAGS FOR CURRENT OPCODE */  32150002
*          3 WICWCKD BIT(1),            /* WRITE CKD */                 32200002
*          3 WICWSCKD BIT(1),           /* WRITE SPECIALIAL CKD */      32250002
*          3 WICERASE BIT(1),           /* ERASE */                     32300002
*          3 WICFMTW BIT(1),            /* FORMAT WRITE SET FOR WCKD */ 32350002
*          3 WICOVFOP BIT(1),           /* SET FOR RD, RKD ,RCKD, WD,   32400002
*                                       WKD QUALIFIES FOR OVERFLOW      32450002
*                                       PROCESSING */                   32500002
*          3 WICSCHTC BIT(1),           /* SRCHID TIC *-8 */            32550002
*          3 WICSID BIT(1),             /* SEARCH ID IN PROGRESS */     32600002
*          3 * BIT(1),                  /* UNUSED */                    32650002
*        2 WICOFLG2 BIT(8),             /* FLAGS FOR CURRENT OPCODE     32700002
*                                       CONTINUED */                    32750002
*          3 WICXFCOM BIT(1),           /* TRANSFER COMPLETE OR NOT     32800002
*                                       DESIRED */                      32850002
*          3 WICDATAX BIT(1),           /* TRANSFER HAS BEEN INITIATED  32900002
*                                       */                              32950002
*          3 WICINTRP BIT(1),           /* INDICATES THAT A CONDITION   33000002
*                                       EXISTS FOR ENDING THE CP        33050002
*                                       INTERPRETATION */               33100002
*          3 WICERROR BIT(1),           /* ERROR DETECTED AFTER THE     33150002
*                                       OPERATION WAS INITIATED */      33200002
*          3 WICSCHEQ BIT(1),           /* INDICATES SID OR SRCH KEY IS 33250002
*                                       USED. */                        33300002
*          3 WICDC BIT(1),              /* DATA CHAINING REQUESTED */   33350002
*          3 WICWRTIP BIT(1),           /* WRITE OPERATION IN PROGRESS  33400002
*                                       */                              33450002
*        2 WICSEQFG BIT(8),             /* FLAGS FOR SEQUENCE CHECKING  33500002
*                                       */                              33550002
*          3 WICLWCKD BIT(1),           /* LAST OPERATION WAS A WCKD */ 33600002
*          3 WICFSIDE BIT(1),           /* A FULL SID EQUAL HAS BEEN    33650002
*                                       SATISFIED */                    33700002
*          3 WICFSKE BIT(1),            /* A FULL SRCH KEY EQ HAS BEEN  33750002
*                                       SATISFIED */                    33800002
*          3 WICTICFG BIT(1),           /* TIC PROCESSING IN PROGRESS   33850002
*                                       */                              33900002
*        2 WICXOFLG BIT(8),             /* ACROSS OP CODE PROCESSING */ 33950002
*          3 WICNDXPT BIT(1),           /* INDEX POINT SWITCH */        34000002
*          3 WICRCSKT BIT(1),           /* READ COUNT SRCH KEY TIC *-16 34050002
*                                       COMBINATION IN PROGRESS */      34100002
*        2 WICWORK FIXED(31),           /* GENERAL WORK AREA */         34150002
*        2 WICERDSP  FIXED (15),        /* ERROR TABLE DISPLACEMENT */  34200002
*        2 WICLSTOP FIXED(8),           /* OPCODE OF THE LAST CCW */    34250002
*        2 WICCUROP FIXED(8),           /* OPCODE OF THE CURRENT CCW */ 34300002
*        2 WICRESTA BIT(8),             /* RESTART FLAGS */             34350002
*          3 WICPCIRS BIT(1),           /* PCI RESTART */               34400002
*          3 WICOVFIP BIT(1),           /* OVERFLOW INCOMPLETE RESTART  34450002
*                                       */                              34500002
*          3 WICSEKRS BIT(1),           /* SEEK ROUTINE CALLED THE      34550002
*                                       TRACK MANAGER */                34600002
*          3 WICTRKRS BIT(1),           /* TRACK REQUEST RESTART FLAG   34650002
*                                       */                              34700002
*          3 WICTRMSK BIT(1),           /* INVVALID SEEK DETECTED       34750002
*                                       BY THE TRACK MANAGER */         34800002
*          3 *        BIT(2),           /* UNUSED */                    34850002
*          3 WICRSTRT BIT(1),           /* FOR ALL RESTARTS */          34900002
*        2 WICFMASK FIXED(8),           /* FILE MASK */                 34950002
*        2 WICDVTAB,                    /* DEVICE TABLE INFORMATION */  35000002
*          3 WICMAXCC FIXED(15),        /* MAXIMUM CYLINDER NUMBER */   35050002
*          3 WICMAXHH FIXED(15),        /* MAXIMUM HEAD NUMBER */       35100002
*          3 WICTRKCP FIXED(15),        /* TRACK CAPACITY */            35150002
*          3 WICIGAP FIXED(15),         /* INTER RECORD OVERHEAD */     35200002
*            4 WICIGP CHAR(2),        /* SAME */                        35250002
*          3 WICLGAP FIXED(15),         /* LAST RECORD OVERHEAD */      35300002
*            4 WICLGP CHAR(2),          /* SAME */                      35350002
*          3 WICKEYGP FIXED(15),        /* KEYED RECORD OVERHEAD */     35400002
*            4 WICKYGP CHAR(2),         /* SAME */                      35450002
*          3 WICTOL FIXED(15),          /* TOLERANCE */                 35500002
*          3 WICSECT FIXED(8),          /* HIGH PERMISSABLE SECTOR - =0 35550030
*                                       RPS NOT SUPPORTED */            35600002
*          3 WICDEVTP FIXED(8),         /* DEVICE TYPE */               35650002
*        2 WICSENSE CHAR(2),            /* SAVE AREA FOR SENSE          35700002
*                                       INFORMATION */                  35750002
*        2 WICEXPTR PTR(31),            /* POINTER TO THE EXTENT IN THE 35800002
*                                       DEB */                          35850002
*        2 WICREGSV,                    /* REGISTER SAVE AREA */        35900002
*          3 WICRGSV0 FIXED(31),        /* FIRST SLOT */                36000002
*          3 WICRGSV1 FIXED(31),        /* SECOND SLOT */               36050002
*          3 WICRGSV2 FIXED(31),        /* THIRD SLOT */                36100002
*          3 WICRGSV3 FIXED(31),        /* FOURTH SLOT */               36150002
*          3 WICRGSV4 FIXED(31),        /* FIFTH SLOT */                36200002
*          3 WICRGSV5 FIXED(31),        /* SIXTH SLOT */                36250002
*        2 WICDATND PTR(31),            /* ADDRESS OF THE END OF THE    36300002
*                                       CURRENT TRACK */                36350002
*        2 WICTCB   PTR(31),            /* ADDR OF TCB GETMAINED        36360030
*                                         UNDER              @VS05944*/ 36370002
*        WICCSWSV CHAR(7) DEFINED WICREGSV, /* SAVE AREA FOR CSW */     36400002
*        WICCCWER CHAR(8) DEFINED WICREGSV; /* FAKE ERROR CCW */        36450002
 % IF IDDSWAPP¬='YES' %THEN                                             50000002
     %GOTO WICBXX01;                                                    50050002
       DCL  /* PARAMETER LIST EXCP INTERCEPT */                         50100002
          1 EIFRRPRM BASED(SDWAPARM), /* EXCP INTERCEPT FRR PARAMETER   50150002
                                        LIST */                         50160002
               2 EIRQEPTR PTR(31),      /* RQE ADDRESS */               50200002
               2 EIREG5 PTR(31),        /* REGISTER 5 SAVED FOR RETURN  50250002
               TO IOS */                                                50300002
               2 EIREG14 PTR(31),       /* REGISTER 14 SAVED FOR RETURN 50350002
               TO IOS */                                                50400002
               2 * CHAR(4),             /* FLAGS */                     50450002
                3 * CHAR(1),              /* FLAG BYTE 1 */             50500002
                 4 EIRECUR BIT(1);      /* RECURSIVE ERROR */           50550002
 %WICBXX01:;                                                            50560002
 %IF IDDSWJRN ¬= 'YES' %THEN                                            50570002
     %GOTO WICBXX02;                                                    50580002
         @EJECT;                                                        50590002
          DCL /* PARAMETERS PASSED TO JOURNAL FRR FROM IDDWIJRN */      50640002
          1 JRFRRPRM BASED(SDWAPARM),  /* BASE */                       50650002
               2 JRTCBPTR PTR(31),      /* A(TCB) PASSED TO WIJOURN */  50700002
               2 JRUCBPTR PTR(31);      /* A(CURRENT UCB) */            50750002
       DCL  /* PARAMETERS PASSED TO WIJOURN ESTAE ROUTINE */            50800002
 % IF IDDIN = 'YES' %THEN                                               50810002
     % GOTO WICBYY01;                                                   50820002
         1 ESTJPRMS BASED(SDWAPARM),  /* START */                       50850002
    % GOTO WICBYY02;                                                    50860002
 %WICBYY01:;                                                            50870002
         1 ESTJPRMS, /* START */                                        50880002
 %WICBYY02:;                                                            50890002
               2 ESJTCB PTR(31), /* ADDRESS OF TCB */                   50900002
               2 ESJUCB PTR(31), /* ADDRESS OF UCB */                   50950002
               2 ESJSAVE PTR(31), /* ADDRESS OF SAVE AREA */            51000002
               2 ESJBASE PTR(31), /* BASE REGISTER IN WIJOURN */        51050002
               2 ESJDATA PTR(31),/* DATA REGISTER IN WIJOURN @Z40WSSR*/ 51100004
               2 ESJTRFLG FIXED(31); /* ESTAE TRACE FLAG     @Z40WSSR*/ 51110004
 %WICBXX02:;                                                            51150002
 %IF IDDCLSSW ¬= 'YES' %THEN                                            51160002
    % GO TO WICBXX03;                                                   51170002
         DCL /* PARAMETERS PASSED TO WICLOSE FRR ROUTINE */             51220002
         1 CLSFRRPR BASED(SDWAPARM), /* START */                        51250002
               2 CLVDSCB PTR(31),     /* ADDRESS OF VDSCB */            51300002
               2 * CHAR(4),                                             51350002
                 3 * FIXED(8),                                          51400002
                   4 CLSTRMSW BIT(1);  /* =1 TRACK MANAGER IN CONTROL   51450002
                   */                                                   51500002
 %WICBXX03:;                                                            51550002
./  ADD  SSI=43100049,NAME=IEEVCHWA
*        %GOTO CHKPTWA1;                                                00610002
         MACRO                                                          00620002
         IEEVCHWA  &OWNWA,&VER=1                                        00650000
*        09/03/74  LEVEL=03                                    @Y30DSDT 00652003
.*       VERSION:                                                       00660002
.*       1 = OS                                                         00670002
.*       2 = AOS/1                                                      00680002
.*       3 = AOS/2                                                      00690002
         AIF   ('&VER' NE '2').LIB2XA1  TEST FOR AOS/1                  00700000
         IEFQMIOP                                                       01300000
QMLISTLN EQU   *-QMIOP             LENGTH OF PARM LIST                  01350002
.LIB2XA1 ANOP                                                           01400000
CHKWA    DSECT                     CHKPT WORK AREA                      01800002
CKWAOFST DS    F                   OFFSET TO CHKMAIN'S & CHKDCB'S W.A.  02400002
CKBFOFST DS    F                   OFFSET TO CHKPT'S BUFFER             03000002
*        REGISTER EQUATES                                               03600002
R0       EQU   0                                                        04200017
R1       EQU   1                                                        04800017
R2       EQU   2                                                        05400017
R3       EQU   3                                                        06000017
R4       EQU   4                                                        06600017
R5       EQU   5                                                        07200017
R6       EQU   6                                                        07800017
R7       EQU   7                                                        08400017
R8       EQU   8                                                        09000017
R9       EQU   9                                                        09600017
RA       EQU   10                                                       10200017
RB       EQU   11                                                       10800017
RC       EQU   12                                                       11400017
RD       EQU   13                                                       12000017
RE       EQU   14                                                       12600017
RF       EQU   15                                                       13200017
*                                                                       13800017
*             ********************************************************* 14400017
*             *                                                       * 15000017
*             *   THE INFORMATION MAPPED BY THIS MACRO IS SHARED      * 15600017
*             *        BY ALL CHKPT ROUTINES (CHKPT, CHKDCB,          * 16200017
*             *   PRESERVE, CHKMAIN, IORESUME, AND RETURN)            * 16800017
*             *                                                       * 17400017
*             ********************************************************* 18000017
CKWACL   DS    F                   LENGTH OF CHKWA                      18600002
CKBUFL   DS    F                   LENGTH OF CHKPT'S BUFFER             19200002
CKTCBAD  DS    F                   POINTER TO TCB OF P/P                19800002
*        THE ORDER OF THE NEXT TWO CARDS MUST BE CKPPM, CKPPE.          20400002
CKPPM    DS    F                   LOW ADDRESS OF P.P. CORE             21000002
CKPPE    DS    F                   HIGH ADDRESS OF P.P. CORE            21600002
CKPPML   DS    F                   LOW ADDR OF SECONDARY PP CORE        22200002
CKPPEL   DS    F                   HIGH ADDR OF SECONDARY PP CORE       22800002
CKTIOLN  DS    F                   LENGTH OF TIOT                       24000002
CKFLAG1  DS    CL1                 CHKPT HOUSEKEEPING FLAGS             24600002
CKTRKOV  EQU   64                  TRACK OVERFLOW SPECIFIED             24900002
CKTAPE   EQU   32                  CHKPT DATA SET ON TAPE               25200002
         AIF   ('&VER' NE '1').LIB1XA1  TEST FOR OS                     25210000
CKMFT    EQU   16                  MFT SYSTEM                           25800002
CKMVT    EQU   8                   MVT SYSTEM                           26400002
.LIB1XA1 ANOP                                                           26450000
CKCANCEL EQU   4                   REQUEST CANCELLED                    27000002
CKOPEN   EQU   2                   CHKPT ISSUED OPEN                    27600002
CKBPAM   EQU   1                   CHKPT DATA SET OPENED FOR BPAM       28200002
CKFLAG2  DS    CL1                                                      28800017
CKEOV    EQU   32                  INDICATES EOV HAS OCCURRED           29100002
CKUSPCHD EQU   4                   INDICATES USER SUPPLIED CHECKID      29400002
CKFREEM  EQU   2                   FREEMAIN AND CLOSE CHKWA IN CER      29700002
CKON     EQU   1                   INDICATES PURGED I/O                 29800002
         AIF   ('&VER' NE '3').LIB2XAA  TEST FOR AOS 1-2                29810000
CKDCBSI  DS    H                   SAVE AREA FOR USER BLKSIZE           29850002
.LIB2XAA ANOP                                                           29900000
CKRETCOD DS    CL2                 CHKPT RETURN CODE                    30000002
CKNORM   EQU   X'00'               CHKPT NORMAL                         30600002
CKPGMERR EQU   X'08'               CHKPT PROGRAM ERROR                  31200002
CKIOERR  EQU   X'0C'               INDICATES I/O ERROR                  31800002
CKPSBERR EQU   X'10'               CHKPT POSSIBLE ERROR                 32400002
CKMSGCOD DS    CL2                 CHKPT MESSAGE CODE                   33000002
CKSSCR   DS    F                   ADDR OF 1ST SSCR FOR VSAM     Y02076 33050002
CKDECB1  DS    0F                  MAPPING OF FIRST DECB                33600002
CKECB1   DS    F                                                        34200017
CKTYPE1  DS    H                                                        34800017
CKLNGTH1 DS    H                                                        35400017
CKDCBAD1 DS    0A                                                       36000002
CKDCBAD  DS    A                   ADDR OF CHKPT DCB                    36050002
CKAREA1  DS    F                                                        36600017
CKIOBPT1 DS    F                                                        37200017
CKDECB2  DS    0F                  MAPPING OF SECOND DECB               37800002
CKECB2   DS    F                                                        38400017
CKTYPE2  DS    H                                                        39000017
CKLNGTH2 DS    H                                                        39600017
CKDCBAD2 DS    F                                                        40200017
CKAREA2  DS    F                                                        40800017
CKIOBPT2 DS    F                                                        41400017
CKINT    DS    F                   DATA MANAGEMENT INTERFACE BYTE       41410002
CKSYNAD  DS    F                   SAVE AREA FOR DCBSYNAD FIELD         41420002
CKPARMAD DS    F                   ADDR OF PARM LIST                    41430002
CKUNIT   DS    CL3                 UNIT FOR CHKPT D.S.                  41440002
CKDDNAME DS    CL8                 CHKPT D.S. DDNAME                    41442002
CKVOLSER DS    CL6                 VOL.SER.NO.FOR CHKPT D.S.            41444002
CKCHEKID DS    2F                  GENERATED CHECKID                    41446002
CKTTR    DS    1F                  TTRZ FOR BPAM CHKPT DS               41448002
CKJCTMB  DS    2F                  MBBCCHHR OF JCT                      41448402
         AIF   ('&VER' NE '2').LIB2XA2  TEST FOR AOS/2                  41448802
CKDCBSI  DS    F                                                        41449202
CKDSDIN  DS    F                                                        41449602
CKDSDOUT DS    F                                                        41449702
CKJCMIN  DS    F                                                        41449802
CKJCMOUT DS    F                                                        41449902
.LIB2XA2 ANOP                                                           41466602
CKERAS00 DS    F                   ERASE AREA 00                 Y02076 41468602
CKERAS01 DS    F                   ERASE AREA 01                 Y02076 41470602
CKERAS02 DS    F                   ERASE AREA 02                 Y02076 41472602
CKERAS03 DS    F                   ERASE AREA 03                 Y02076 41474602
CKERAS04 DS    F                   ERASE AREA 04                 Y02076 41475002
CKERAS05 DS    F                   ERASE AREA 05                 Y02076 41475402
CKERAS06 DS    F                   ERASE AREA 06                 Y02076 41475802
CKERAS07 DS    F                   ERASE AREA 07                 Y02076 41476202
CKERAS08 DS    F                   ERASE AREA 08                 Y02076 41476302
CKERAS09 DS    F                   ERASE AREA 09                 Y02076 41476402
CKREGSAV DS    18F                 REGISTER SAVE AREA                   41476602
         AIF   ('&VER' NE '2').LIB2XA3  TEST FOR AOS/2                  41478602
         DS    0D                                                       41480602
CKDER    EQU   *                   READ IN AREA FOR DER AND JCT         41482602
.LIB2XA3 ANOP                                                           41483002
CKJCT    EQU   *                                                        41483102
         IEFAJCTB                                                       41483202
         ORG   INJMJCT+176                                              41488802
         DS    0D                                                       41490802
         AIF   ('&VER' EQ '2').LIB2XA4  TEST FOR AOS/2                  41492802
         DS    F                                                        41493202
DXECB    DS    0CL4                                                     41493602
         DC    X'00000000'                                              41494002
DXIOB    DS    0CL32                                                    41494102
IOBFLAG1 DC    X'00'                                                    41494202
IOBFLAG2 DC    X'00'                                                    41494302
IOBSENSE DS    0H                                                       41508202
IOBSENS0 DS    CL1                                                      41518202
IOBSENS1 DS    CL1                                                      41520202
IOBECBPT DS    XL1                                                      41520602
         DC    AL3(DXECB)          ECB ADDRESS                          41521002
IOBCSW   DS    0D                                                       41521402
IOBCOMAD DC    X'00000000'                                              41521802
IOBSTAT0 DC    X'00'                                                    41521902
IOBSTAT1 DC    X'00'                                                    41522002
IOBCNT   DC    X'0000'                                                  41522102
IOBSIOCC DS    XL1                                                      41526702
IOBSTART DC    AL3(DXCCW)          CHANNEL PROGRAM ADDRESS              41528702
IOBWGHT  DS    XL1                                                      41530702
IOBDCBPT DC    AL3(0)              DCB ADDRESS                          41531102
         DS    XL1                                                      41531202
         DS    XL3                                                      41531302
IOBINCAM DC    X'0000'                                                  41531402
IOBERRCT DS    XL2                                                      41536002
DXDAADR  DS    D                   MBBCCHHR SEEK ADDRESS                41538102
         CNOP  0,8                                                      41540102
DXCCW    DS    0CL24                                                    41540502
DXCCW1   DS    D                                                        41540602
DXCCW2   DS    D                                                        41540702
DXCCW3   DS    D                                                        41552502
.LIB2XA4 ANOP                                                           41562502
         AIF   ('&VER' NE '2').LIB2XA5  TEST FOR AOS/2                  41564502
CKQMLIST EQU   *                                                        41568402
         DS    CL(QMLISTLN)        Q MGR PARM LIST AREA                 41570402
         DS    0D                                                       41572402
CKPCT    EQU   *                   PAGE CTL TABLE START                 41576302
QMWKA    DS    CL256               Q MNGR WORK AREA                     41578302
         IEFJFCBN                                                       41580302
         ORG   INFMJFCB                                                 41584202
         IEFASIOT                                                       41586202
CKWAEND  EQU   *                                                        41588202
* END OF CHECKPOINT COMMON WORK AREA AND BEGINNING OF SCRATCH           41598502
* SPACE.  VARIOUS SECTIONS (HOUSEKEEPING, CKDCB, CKMAIN, PRESERVE,      41608502
* RESIO, AND EXIT) DEFINE THE SCRATCH SPACE DIFFERENTLY.  THIS          41608602
* SPACE EXTENDS FROM THE SYMBOL CKWAEND TO THE 200-BYTE SUR             41608702
* BUFFER AT THE HIGH-ADDRESS END OF THE WORK AREA.                      41612102
.LIB2XA5 ANOP                                                           41614102
         MEND                                                           41614502
 @EJECT;                                                                41615702
*%CHKPTWA1:  ;                                                          41619102
*                                        /* TEST FOR AOS/1   @Y30DSDT*/ 41629103
*%IF VER ¬='2'                                                          41629203
* %THEN                                                                 41629303
*   %GOTO LIB2XA1 ;                                        /*@Y30DSDT*/ 41632703
* /*******************************************************************/ 41636303
* /*           REGISTER DECLARES                                     */ 41639702
* /*******************************************************************/ 41650002
*        DCL R0 REG(0)  PTR(31);                                        41700002
*        DCL R1 REG(1)  PTR(31);                                        41750002
*        DCL R2 REG(2)  PTR(31);                                        41800002
*        DCL R3 REG(3)  PTR(31);                                        41850002
*        DCL R4 REG(4)  PTR(31);                                        41900002
*        DCL R5 REG(5)  PTR(31);                                        41950002
*        DCL R6 REG(6)  PTR(31);                                        42000002
*        DCL R7 REG(7)  PTR(31);                                        42050002
*        DCL R8 REG(8)  PTR(31);                                        42100002
*        DCL R9 REG(9)  PTR(31);                                        42150002
*        DCL RA REG(10) PTR(31);                                        42200002
*        DCL RB REG(11) PTR(31);                                        42250002
*        DCL RC REG(12) PTR(31);                                        42300002
*        DCL RD REG(13) PTR(31);                                        42350002
*        DCL RE REG(14) PTR(31);                                        42400002
*        DCL RF REG(15) PTR(31);                                        42450002
*%INCLUDE SYSLIB(IEFQMIOP);              /* INCLUDE Q MANAGER DSECT */  42580002
*%LIB2XA1:  ;                                                           42590002
*DECLARE                                                                42592002
*  1 CHKWA    BASED,                                                    42594002
*   2 CKWAOFST    FIXED(31),             /* OFFSET TO BEGINNING OF      42596002
*                                           CHKMAIN'S AND CHKDCB'S      42598002
*                                           W.A.                     */ 42598402
*   2 CKBFOFST    FIXED(31),             /* OFFSET TO BEGINNING OF      42598802
*                                           CHKPT'S BUFFER REGISTER */  42599202
*/*                                                                  */ 42599602
*/*           ****************************************************** */ 42599702
*/*           *                                                      */ 42599802
*/*           *   THE INFORMATION MAPPED BY THIS MACRO IS SHARED     */ 42599902
*/*           *        BY ALL CHKPT ROUTINES (CHKPT, CHKDCB,         */ 42649902
*/*           *    PRESERVE, CHKMAIN, IORESUME, AM/0, AND RETURN)    */ 42659902
*/*           *                                                      */ 42669902
*/*           ****************************************************** */ 42679902
*   2 CKWACL      FIXED(31),             /* LENGTH OF CHKWA          */ 42689902
*   2 CKBUFL      FIXED(31),             /* LENGTH OF CHKPT'S BUFFER */ 42691902
*   2 CKTCBAD     PTR(31),               /* POINTER TO TCB OF P/P    */ 42693902
* /* THE ORDER OF THE NEXT TWO CARDS MUST BE CKPPM, CKPPE.           */ 42695902
*   2 CKPPM       PTR(31),               /* PTR TO LOW ORDER ADDRESS    42697902
*                                           OF P.P. CORE             */ 42698302
*   2 CKPPE       PTR(31),               /* PTR TO HIGH ORDER           42698702
*                                           ADDRESS OF P.P. CORE     */ 42699102
*   2 CKPPML      PTR(31),               /* LOW ORDER ADDR OF           42699502
*                                           SECONDARY PP CORE        */ 42699602
*   2 CKPPEL      PTR(31),               /* HIGH ORDER ADDR OF          42699702
*                                           SECONDARY PP CORE        */ 42699802
*   2 CKTIOLN     FIXED(31),             /* LENGTH OF TIOT           */ 42749802
*   2 CKFLAG1     CHAR(1),               /* CHKPT HOUSEKEEPING FLAGS */ 42759802
*%DCL CKTRKOV  CHAR;                                                    42769802
*%CKTRKOV ='''40''X';                    /* TRACK OVERFLOW SPECIFIED */ 42779802
*%DCL CKTAPE   CHAR;                                                    42789802
*%CKTAPE  ='''20''X';                    /* CHKPT DATA SET ON TAPE.  */ 42791802
*                                        /* TEST FOR OS              */ 42793802
*%IF VER ¬='1'                                                          42795802
* %THEN                                                                 42797802
*   %GOTO LIB1XA1 ;                                                     42798202
*%DCL CKMFT    CHAR;                                                    42798602
*%CKMFT   ='''10''X';                    /* MFT SYSTEM               */ 42799002
*%DCL CKMVT    CHAR;                                                    42799402
*%CKMVT   ='''08''X';                    /* MVT SYSTEM               */ 42799502
*%LIB1XA1:  ;                                                           42799602
*%DCL CKCANCEL CHAR;                                                    42799702
*%CKCANCEL='''04''X';                    /* REQUEST CANCELLED        */ 42849702
*%DCL CKOPEN   CHAR;                                                    42859702
*%CKOPEN  ='''02''X';                    /* CHKPT ISSUED OPEN        */ 42869702
*%DCL CKBPAM   CHAR;                                                    42879702
*%CKBPAM  ='''01''X';                    /* CHKPT DATA SET OPENED       42889702
*                                           FOR BPAM                 */ 42891702
*   2 CKFLAG2     CHAR(1),                                              42893702
*%DCL CKEOV    CHAR;                                                    42895702
*%CKEOV   ='''20''X';                    /* INDICATES EOV HAS           42897702
*                                           OCCURRED.                */ 42898102
*%DCL CKUSPCHD CHAR;                                                    42898502
*%CKUSPCHD='''04''X';                    /* INDICATES USER SUPPLIED     42898902
*                                           CHECKID                  */ 42899302
*%DCL CKFREEM  CHAR;                                                    42899402
*%CKFREEM ='''02''X';                    /* INDICATES TO ONLY           42899502
*                                           FREEMAIN AND CLOSE CHKWA    42899602
*                                           IN CER                   */ 42949602
*%DCL CKON     CHAR;                                                    42959602
*%CKON    ='''01''X';                    /* INDICATES PURGED I/O     */ 42969602
*                                        /* TEST FOR AOS 1-2         */ 42979602
*%IF VER ¬='3'                                                          42989602
* %THEN                                                                 42991602
*   %GOTO LIB2XAA ;                                                     42993602
*   2 CKDCBSI     FIXED(15),             /* SAVE AREA FOR USER          42995602
*                                           BLKSIZE                  */ 42997602
*%LIB2XAA:  ;                                                           42998002
*   2 CKRETCOD    CHAR(2),               /* CHKPT RETURN CODE        */ 42998402
*    3 CKRETCD1   CHAR(1),               /* FIRST BYTE CHKPT R.C.    */ 42998802
*    3 CKRETCD2   CHAR(1),               /* SECOND BYTE CHKPT R.C.   */ 42999202
*%DCL CKNORM   CHAR;                                                    42999302
*%CKNORM  ='''00''X';                    /* CHKPT NORMAL             */ 42999402
*%DCL CKPGMERR CHAR;                                                    42999502
*%CKPGMERR='''08''X';                    /* CHKPT PROGRAM ERROR      */ 43049502
*%DCL CKIOERR  CHAR;                                                    43059502
*%CKIOERR ='''0C''X';                    /* INDICATES I/O ERROR      */ 43069502
*%DCL CKPSBERR CHAR;                                                    43079502
*%CKPSBERR='''10''X';                    /* CHKPT POSSIBLE ERROR     */ 43089502
*   2 CKMSGCOD    CHAR(2),               /* CHKPT MESSAGE CODE       */ 43091502
*    3 CKMSGCD1   CHAR(1),               /* FIRST BYTE MESSAGE CODE  */ 43093502
*    3 CKMSGCD2   CHAR(1),               /* SECOND BYTE MESSAGE CODE */ 43095502
*   2 CKSSCR      PTR(31),               /* ADDR OF 1ST VSAM SSCR    */ 43095902
*   2 CKDECB1     CHAR(20) BDY(WORD),    /* MAPPING OF 1ST DECB      */ 43097502
*    3 XCTLNAME   CHAR(8)  BDY(WORD),    /* XCTL MODULE NAME         */ 43097902
*     4 CKECB1    FIXED(31),                                            43098302
*     4 CKTYPE1   FIXED(15),                                            43098702
*     4 CKLNGTH1  FIXED(15),                                            43099102
*    3 CKDCBAD1   PTR(31),               /* ADDR OF CHKPT DCB.       */ 43099202
*     4 CKDCBAD   PTR(31),                                              43099302
*    3 CKAREA1    FIXED(31),                                            43099402
*    3 CKIOBPT1   FIXED(31),                                            43132902
*   2 CKDECB2     CHAR(20) BDY(WORD),    /* MAPPING OF SECOND DECB   */ 43142902
*    3 CKECB2     FIXED(31),                                            43152902
*    3 CKTYPE2    FIXED(15),                                            43162902
*    3 CKLNGTH2   FIXED(15),                                            43164902
*    3 CKDCBAD2   PTR(31),                                              43165302
*    3 CKAREA2    FIXED(31),                                            43165702
*    3 CKIOBPT2   FIXED(31),                                            43166102
*   2 CKINT       FIXED(31),             /* DATA MANAGEMENT             43166202
*                                           INTERFACE BYTE           */ 43166302
*   2 CKSYNAD     FIXED(31),             /* SAVE AREA FOR DCBSYNAD      43166402
*                                           FIELD                    */ 43177602
*   2 CKPARMAD    PTR(31),               /* ADDR OF PARM LIST        */ 43187602
*   2 CKUNIT      CHAR(3),               /* UNIT FOR CHKPT D.S.      */ 43188002
*   2 CKDDNAME    CHAR(8),               /* CHKPT D.S. DDNAME        */ 43188402
*   2 CKVOLSER    CHAR(6),               /* VOL.SER.NO.FOR CHKPT        43188502
*                                           D.S.                     */ 43188602
*   2 CKCHEKID (2) CHAR(4),              /* GENERATED CHECKID.       */ 43188702
*   2 CKTTR    (1) FIXED(31),            /* TTRZ FOR BPAM CHKPT D.S. */ 43192402
*   2 CKJCTMB  (2) FIXED(31),            /* MBBCCHHR OF JCT.         */ 43194402
*%IF VER ¬='2'                                                          43194802
* %THEN                                                                 43195202
*   %GOTO LIB2XA2 ;                                                     43195602
*                                        /* TEST FOR AOS/2           */ 43196002
*   2 CKDCBSI     FIXED(31),                                            43196102
*   2 CKDSDIN     FIXED(31),                                            43196202
*   2 CKDSDOUT    FIXED(31),                                            43246202
*   2 CKJCMIN     FIXED(31),                                            43256202
*   2 CKJCMOUT    FIXED(31),                                            43266202
*%LIB2XA2:  ;                                                           43276202
*   2 CKERAS00      FIXED(31),           /* ERASE AREA 00            */ 43278202
*   2 CKERAS01      FIXED(31),           /* ERASE AREA 01            */ 43280202
*   2 CKERAS02      FIXED(31),           /* ERASE AREA 02            */ 43282202
*   2 CKERAS03      FIXED(31),           /* ERASE AREA 03            */ 43284202
*   2 CKERAS04      FIXED(31),           /* ERASE AREA 04            */ 43284602
*   2 CKERAS05      FIXED(31),           /* ERASE AREA 05            */ 43285002
*   2 CKERAS06      FIXED(31),           /* ERASE AREA 06            */ 43285402
*   2 CKERAS07      FIXED(31),           /* ERASE AREA 07            */ 43285802
*   2 CKERAS08      FIXED(31),           /* ERASE AREA 08            */ 43285902
*   2 CKERAS09      FIXED(31),           /* ERASE AREA 09            */ 43286002
*   2 CKREGSAV (18) FIXED(31),           /* REGISTER SAVE AREA       */ 43286202
*                                        /* TEST FOR AOS/2           */ 43288202
*%IF VER ¬='2'                                                          43290202
* %THEN                                                                 43292202
*   %GOTO LIB2XA3 ;                                                     43294202
*   2 CKDER       CHAR(0) BDY(DWORD),    /* READ IN AREA FOR DER&JCT*/  43294602
*                                        /* IN AREA FOR DER AND JCT  */ 43295002
*%LIB2XA3:  ;                                                           43295402
*   2 CKJCT       CHAR(0) BDY(DWORD);    /* READIN AREA FOR DER, JCT*/  43295802
*%IF CKSHORT='YES'                       /* SHORT FORM OF    @Z30SSDT*/ 43299203
* %THEN                                  /* THE WORKAREA TO  @Z30SSDT*/ 43301203
*  %GOTO LIB2XA5 ;                       /* BE USED.         @Z30SSDT*/ 43301603
*%INCLUDE SYSLIB(IEFAJCTB);              /* INCLUDE JCT             */  43302603
*%IF VER='2'                                                            43306003
* %THEN                                                                 43309403
*   %GOTO LIB2XA4 ;                                                     43312802
*DECLARE                                 /* DECLARE CHECKPOINT IOB  */  43322802
*  1 CHKPTIOB BASED(ADDR(INJMJCT)+176) BDY(DWORD), /* BASED JCT+176 */  43324802
*   2 *           CHAR(4),               /*                         */  43326802
*   2 DXECB       FIXED(31),             /* ECB                     */  43328802
*   2 DXIOB       CHAR(32) BDY(WORD),    /* IOB                     */  43329202
*     3 IOBFLAG1    BIT(8),              /* IOB FLAG BYTE ONE       */  43329302
*       4 IOBDATCH  BIT(1),              /* DATA CHAINING USED      */  43329402
*       4 IOBCMDCH  BIT(1),              /* COMMAND CHAINING USED   */  43335002
*       4 IOBERRTN  BIT(1),              /* ERROR RTN IN CONTROL    */  43337002
*       4 IOBDVREP  BIT(1),              /* DEV. TO BE REPOSITIONED */  43339002
*       4 IOBCYCCK  BIT(1),              /* CYCLEC REDUNDANCY CHECK */  43339402
*                                        /* NEEDED (TAPE ONLY)      */  43339802
*        5 IOBFCREX BIT(1),              /* FETCH COMMAND RETRY EXIT*/  43340202
*                                        /* (DIRECT ACCESS ONLY)    */  43340302
*       4 IOBIOERR  BIT(1),              /* I/O ERROR HAS OCCURRED  */  43340402
*       4 IOBUNREL  BIT(1),              /* THIS I/O REQUEST IS     */  43340502
*                                        /*UNRELATED (NON-SEQUENTIAL*/  43390502
*       4 IOBRSTRT  BIT(1),              /* RESTART ADDR IN IOB IS  */  43400502
*                                        /* TO BE USED              */  43410502
*     3 IOBFLAG2    CHAR(1),             /* IOB FLAG BYTE TWO       */  43420502
*       4 IOBHALT   BIT(1),              /* HALT I/O HAS BEEN ISSUED*/  43430502
*                                        /* BY SVC PURGE ROUTINE    */  43432502
*       4 IOBCENSE  BIT(1),              /*ISSUE SENSE COMMAND AFTER*/  43434502
*                                        /* DEVICE END OCCURS       */  43436502
*       4 IOBPURGE  BIT(1),              /*IOB HAS BEEN PURGED ALLOW*/  43438502
*                                        /* I/O TO QUIESCE          */  43438902
*       4 IOBRDHA0  BIT(1),              /* HOME ADDRESS TO BE READ */  43439302
*                                        /* NO SEEK NEEDED          */  43439702
*       4 IOBALTTR  BIT(1),              /*NO TEST FOR OUT-OF-EXTENT*/  43440102
*                                        /* ALTERNATE TRACK IN USE  */  43440202
*       4 IOBSKUPD  BIT(1),              /* SEEK ADDRESS IS BEING   */  43440302
*                                        /* UPDATED CYLINDER END OR */  43440402
*                                        /* FILE MASK VIOLATION HAS */  43457102
*                                        /* OCCURRED.               */  43467102
*       4 IOBSTAT   BIT(1),              /* DEVICE END STATUS HAS   */  43469102
*                                        /* BEEN ORED WITH CHANNEL  */  43471102
*                                        /* END STATUS,GRAPHICS DEV.*/  43473102
*       4 IOBPNCH   BIT(1),              /* TURNED ON BY QSAM WHEN  */  43473502
*                                        /* ERROR RECOVERY IS TO BE */  43473602
*                                        /* PROVIDED FOR THE 2540   */  43473702
*                                        /* CARD PUNCH.             */  43479302
*     3 IOBSENSE    CHAR(2),             /* IOB SENSE BYTES         */  43481302
*       4 IOBSENS0  CHAR(1),             /* FIRST IOB SENSE BYTE    */  43483302
*         5 IOBS0B0 BIT(1),              /* BIT 0 (DEVICE DEPENDENT)*/  43483702
*         5 IOBS0B1 BIT(1),              /* BIT 1 (DEVICE DEPENDENT)*/  43484102
*         5 IOBSOB2 BIT(1),              /* BIT 2 (DEVICE DEPENDENT)*/  43484502
*         5 IOBS0B3 BIT(1),              /* BIT 3 (DEVICE DEPENDENT)*/  43484602
*         5 IOBS0B4 BIT(1),              /* BIT 4 (DEVICE DEPENDENT)*/  43484702
*         5 IOBS0B5 BIT(1),              /* BIT 5 (DEVICE DEPENDENT)*/  43484802
*         5 IOBS0B6 BIT(1),              /* BIT 6 (DEVICE DEPENDENT)*/  43534802
*         5 IOBS0B7 BIT(1),              /* BIT 7 (DEVICE DEPENDENT)*/  43544802
*           6 IOBSNSC9 BIT(1),           /* CHANNEL NINE SENSED IN  */  43554802
*                                        /* CARRIAGE TAPE           */  43564802
*       4 IOBSENS1  CHAR(1),             /* SECOND IOB SENSE BYTE   */  43574802
*         5 IOBS1B0 BIT(1),              /* BIT 0 (DEVICE DEPENDENT)*/  43576802
*         5 IOBS1B1 BIT(1),              /* BIT 1 (DEVICE DEPENDENT)*/  43578802
*         5 IOBS1B2 BIT(1),              /* BIT 2 (DEVICE DEPENDENT)*/  43580802
*         5 IOBS1B3 BIT(1),              /* BIT 3 (DEVICE DEPENDENT)*/  43582802
*         5 IOBS1B4 BIT(1),              /* BIT 4 (DEVICE DEPENDENT)*/  43583202
*         5 IOBS1B6 BIT(1),              /* BIT 6 (DEVICE DEPENDENT)*/  43583602
*         5 IOBS1B7 BIT(1),              /* BIT 7 (DEVICE DEPENDENT)*/  43584002
*     3 IOBECBPT    PTR(31),             /* ADDR OF ECB TO BE POSTED*/  43584402
*                                        /* ON I/O COMPLETION       */  43584502
*       4 IOBECBCC  CHAR(1),             /* COMPLETION CODE FOR     */  43584602
*                                        /* THIS I/O REQUEST        */  43584702
*       4 IOBECBAD  PTR(24) BDY(BYTE),   /* ADDR OF ECB TO BE POSTED*/  43601402
*     3 IOBCSW      CHAR(0),             /* CSW                     */  43611402
*     3 IOBCOMAD    CHAR(4),             /* CSW COMMAND ADDRESS     */  43613402
*     3 IOBSTAT0    CHAR(1),             /* CSW STATUS BYTE ONE     */  43615402
*     3 IOBSTAT1    CHAR(1),             /* CSW STATUS BYTE TWO     */  43617402
*     3 IOBCNT      FIXED(15),           /* CSW BYTE COUNT          */  43617802
*     3 IOBSIOCC    CHAR(1),             /* IOB SIO COMPLETION CODE */  43617902
*     3 IOBSTART    PTR(24),             /* IOB CHANNEL PROGRAM ADDR*/  43618002
*     3 IOBWGHT     CHAR(1),             /* RESERVED                */  43623602
*     3 IOBDCBPT    PTR(24),             /* IOB DCB ADDRESS         */  43625602
*     3 *           CHAR(1),             /* NOT USED BY CHECKPOINT  */  43627602
*     3 *           CHAR(3),             /* NOT USED BY CHECKPOINT  */  43628002
*     3 IOBINCAM    FIXED(15),           /* QSAM,BSAM,EXCP A.M.     */  43628402
*     3 IOBERRCT    FIXED(15),           /* IOB ERROR COUNT, RETRIES*/  43628802
*   2 DXDAADDR      CHAR(8)  BDY(DWORD), /* MBBCCHHR SEEK ADDRESS   */  43628902
*   2 DXCCW         CHAR(24) BDY(DWORD), /* CHANNEL COMMAND WORDS   */  43629002
*     3 DXCCW1      CHAR(8)  BDY(DWORD), /* CHANNEL COMMAND WORDS 1 */  43629102
*     3 DXCCW2      CHAR(8)  BDY(DWORD), /* CHANNEL COMMAND WORDS2  */  43671802
*     3 DXCCW3      CHAR(8) BDY(DWORD); /* CHANNEL COMMAND WORD3    */  43681802
*%LIB2XA4: ;                                                            43691802
*                                        /* TEST FOR AOS/2           */ 43701802
*%IF VER ¬='2'                                                          43711802
* %THEN                                                                 43713802
*   %GOTO LIB2XA5;                                                      43714202
*DECLARE CKQMLIST CHAR(LENGTH(QMIOP)) BASED(ADDR(ACTJNFLD)+156);        43714302
*DECLARE 1 QMWKA CHAR(256) BDY(DWORD) BASED,                            43714402
*          2 CKPCT CHAR(0);                                             43714502
*        RESPECIFY QMWKA BASED(ADDR(CKQMLIST)+LENGTH(QMIOP));           43728702
*%INCLUDE SYSLIB(IEFJFCBN);              /* INCLUDE JFCB            */  43738702
*%INCLUDE SYSLIB(IEFASIOT);              /* INCLUDE SIOT            */  43740702
*DECLARE CKWAEND CHAR(1);                                               43742702
* /*                                                                */  43742802
*        RESPECIFY INDMSIOT BASED(ADDR(INFMJFCB)); /* RESPECIFY SIOT*/  43742902
* /*                                                                */  43743002
* /*     END OF CHECKPOINT COMMON WORK AREA AND BEGINNING OF SCRATCH */ 43747702
* /*     SPACE. VARIOUS SECTIONS (HOUSEKEEPING, CKDCB, CKMAIN,       */ 43749702
* /*     PRESERVE, RESIO, AM00, AND EXIT) DEFINE THE SCRATCH SPACE   */ 43751702
* /*     DIFFERENTLY. THIS SPACE EXTENDS FROM THE SYSBOL CKWAEND TO  */ 43752102
* /*     THE 200-BYTE SUR BUFFER AT THE HIGH-ADDRESS END OF THE W.A. */ 43752502
*%LIB2XA5:  ;                                                           43764302
*%DEACTIVATE CKSHORT;                                      /*@Z30SSDT*/ 43814303
./  ADD  SSI=43100051,NAME=IEEVRSWA
*        %GOTO RSTWABSL;                                                01050002
         MACRO                                                          01100002
         IEEVRSWA  &VER=1                                               02010000
*        03/15/73  LEVEL=01                                             02020002
.*       VERSION:                                                       02060002
.*       1 = OS                                                         02110002
.*       2 = AOS/1                                                      02160002
.*       3 = AOS/2                                                      02210002
RSTWA    DSECT                     RESTART WORK AREA                    03000002
RSWAOFST DS    F                   OFFSET TO REPDCB'S W.A.              04000002
RSMWOFST DS    F                   OFFSET TO REPMAIN'S W&A.             05000002
RSBFOFST DS    F                   OFFSET TO RESTART'S BUFFER           06000002
*                                                                       07000017
*             ********************************************************* 08000017
*             *                                                       * 09000017
*             *   THE INFORMATION MAPPED BY THIS MACRO IS SHARED      * 10000017
*             *        BY ALL RESTART ROUTINES (RESTART,              * 11000017
*             *   REPMAIN, REPDCB, AND RETURN)                        * 12000017
*             *                                                       * 13000017
*             ********************************************************* 14000017
RSCKDCB  DS    F                   PTR TO OLD CHKPT DCB                 15000002
RSWACL   DS    F                   LENGTH OF RSTWA                      16000002
RSBUFL   DS    F                   LENGTH OF RESTART'S BUFFER           17000002
RSDCBFLG DS    0CL1                                                     17500017
RSDCBL   DS    F                   LENGTH OF REPDCB'S W.A.              18000002
RSINT    DS    F                   DATA MANAGEMENT INTERFACE BYTE       19000002
RSTCBAD  DS    F                   POINTER TO RESTART'S TCB             20000002
RSPPM    DS    F                   LOW ADDRESS OF P.P. CORE             21000002
RSPPE    DS    F                   HIGH ADDRESS OF P.P. CORE            22000002
RSPPML   DS    F                   LOW ADDR OF SECONDARY PP CORE        23000002
RSPPEL   DS    F                   HIGH ADDR OF SECONDARY PP CORE       24000002
RSTIOTO  DS    F                   LENGTH OF OLD TIOT                   25000002
RSTIOTAD DS    F                   POINTER TO OLD P/P TIOT              26000002
RSCIRTTR DS    F                   TTR OF FIRST CIR OF CHKPT DATA       27000002
*                                  SET (IF ON D.A. DEV)                 27050002
RSSVRBN  DS    F                   ADDR OF RESTART'S SVRB               28000002
RSFLAG1  DS    CL1                 RESTART HOUSEKEEPING FLAGS           29000002
RSBPAM   EQU   1                   CHKPT DATA SET WAS OPENED FOR BPAM   30000002
RSOPEN   EQU   2                   CHKPT OPENED  DATA SET               31000002
         AIF   ('&VER' NE '1').LIB1YA1  TEST FOR OS                     31050000
RSMVT    EQU   8                   INDICATES MVT SYSTEM                 32000002
RSMFT    EQU   16                  MFT SYSTEM                           33000002
.LIB1YA1 ANOP                                                           33100000
RSTAPE   EQU   32                  RESTART DATA SET ON TAPE             34000002
RSFLAG2  DS    CL1                                                      35000017
* RSFLAG2 BIT USAGE                                                     35050000
*  X'08' - USER DID NOT SPECIFY CHECK POINT DATA SET BLOCKSIZE          35100000
*  X'04' - A TCAM DEB EXISTS FOR THIS JOB                               35150000
RSDCBSI  DS    H                   SAVE AREA FOR USER BLKSIZE           35200002
RSRETCOD DS    H                   RETURN CODE AREA                     36000002
RESTART  EQU   4                   RETURN CODE - RESTART HAS OCCURRED   37000002
RSIOERR  EQU   X'0C'               INDICATES I/O ERROR                  37500002
RSSVRB   DS    F                   PCP - POINTS TO THE OLD CHKPT SVRB   38000002
*                                  MVT - FIELD NOT USED                 39000002
RSNSTAE  DS    F                   ANCHOR FOR USER SCB CHAIN     Y02076 39010002
RSPIE    DS    F                   ANCHOR FOR USER PIE CHAIN     Y02076 39020002
RSSSCR   DS    F                   ADDR OF 1ST SSCR FOR VSAM/    Y02076 39050002
*                                  ADDR OF QMNGR WORKAREA FOR    Y02076 39100002
*                                  TAPE POSITIONING              Y02076 39150002
RSBDCB   DS    22F                 DCB FOR CHKPT DATA SET               40000002
RSDECB1  DS    0F                  MAPPING OF DECB                      40300002
RSECB1   DS    F                                                        40600017
RSTYPE1  DS    H                                                        40900017
RSLNGTH1 DS    H                                                        41200017
RSDCBAD1 DS    F                                                        41500017
RSAREA1  DS    F                                                        41800017
RSIOBPT1 DS    F                                                        42100017
RSDCB    EQU   RSDCBAD1                                                 45000017
RSIOBCP  DS    30F                 IOB AND CHANNEL PROGRAM       Y02076 45050002
*                                  RELOCATION AREA               Y02076 45100002
RSERAS00 DS    F                   ERASE AREA 00                 Y02076 45150002
RSERAS01 DS    F                   ERASE AREA 01                 Y02076 45200002
RSERAS02 DS    F                   ERASE AREA 02                 Y02076 45250002
RSERAS03 DS    F                   ERASE AREA 03                 Y02076 45300002
RSERAS04 DS    F                   ERASE AREA 04                 Y02076 45350002
RSERAS05 DS    F                   ERASE AREA 05                 Y02076 45400002
RSERAS06 DS    F                   ERASE AREA 06                 Y02076 45450002
RSERAS07 DS    F                   ERASE AREA 07                 Y02076 45500002
RSERAS08 DS    F                   ERASE AREA 08                 Y02076 45550002
RSERAS09 DS    F                   ERASE AREA 09                 Y02076 45600002
RSREGSAV DS    18F                 REGISTER SAVE AREA                   46000002
         AIF   ('&VER' NE '2').LIB2YA1  TEST FOR AOS/2                  46052000
         ORG   RSREGSAV+12         AOS WORKAREAS OVERLAP REGSAVE        46060002
RPMWA    DS    F                   REPMAIN WORKAREA                     46100002
SIRPLIST DS    0F                  SIR PARAMETER LIST                   46150002
SIRECB   DS    0F                  ECB FIELD                            46200002
SIRTYPFG DS    XL1                 SIR TYPE                             46210002
SIRFIX   EQU   X'50'               LOAD AND FIX                         46300002
SIRFREE  EQU   X'20'               FREE                                 46350002
SIRCLEAR EQU   X'08'               CLEAR                                46400002
SIRLNG   EQU   X'02'               LONG TERM                            46450002
SIRSADD  DS    AL3                 START ADDRESS                        46500002
SIRENDFG DS    XL1                 END FLAG                             46550002
SIRLAST  EQU   X'80'               LAST ENTRY                           46600002
SIRAPB   EQU   X'20'               REAL ADDRESS PASSBACK                46650002
SIREADD  DS    AL3                 END ADDRESS                          46700002
         ORG   RSREGSAV+72         RESET LOCATION COUNTER               46710002
RSDSDIN  DS    F                   OLD DSD POINTERS                     46760002
RSDSDOUT DS    F                                                        46810000
RSJCMIN  DS    F                   OLD JCM POINTERS                     46860002
RSJCMOUT DS    F                                                        46910000
RSDSTEND DS    F                   END OF REPDCB'S DATA SET TBL         46960002
.LIB2YA1 ANOP                                                           46970000
RSTIOTL  DS    F                   LENGTH OF TIOT SAVE AREA             47000002
         DS    0D                                                       48000017
RSTIOT   EQU   *                   BEGINNING OF TIOT SAVE AREA          49000002
*                                  IN PCP THE NEW TIOT IS SAVED HERE    49050002
*                                  IN MVT THE OLD TIOT IS SAVED HERE    50000002
         MEND                                                           51000017
         %EJECT;                                                        51050002
*%RSTWABSL:  ;                                                          51100002
*DECLARE                                                                51150002
*  1 RSTWA  BOUNDARY(DWORD)  BASED,                                     51200000
*   2 RSWAOFST    FIXED(31),             /* OFFSET TO BEGINNING OF      51250002
*                                           REPDCB'S W.A.            */ 51300002
*   2 RSMWOFST    FIXED(31),             /* OFFSET TO BEGINNING OF      51350002
*                                           REPMAIN'S W&A.           */ 51400002
*   2 RSBFOFST    FIXED(31),             /* OFFSET TO BEGINNING OF      51450002
*                                           RESTART'S BUFFER        */  51500002
* /*                                                                */  51550002
* /*          *******************************************************/  51600002
* /*          *                                                     */  51650002
* /*          *   THE INFORMATION MAPPED BY THIS MACRO IS SHARED    */  51700002
* /*          *        BY ALL RESTART ROUTINES (RESTART,            */  51750002
* /*          *   REPMAIN, REPDCB, AND RETURN)                      */  51800002
* /*          *                                                     */  51850002
* /*          *******************************************************/  51900002
*   2 RSCKDCB     PTR(31),               /* PTR TO OLD CHKPT DCB,       51950002
*                                           FIELD IS FILLED IN BY       52000002
*                                           REPMAIN                  */ 52050002
*   2 RSWACL      FIXED(31),             /* LENGTH OF RSTWA          */ 52100002
*   2 RSBUFL      FIXED(31),             /* LENGTH OF RESTART'S         52150002
*                                           BUFFER                   */ 52200002
*   2 RSDCBL      FIXED(31),             /* LENGTH OF REPDCB'S W.A.  */ 52250002
*    3 RSDCBFLG    CHAR(1),                                             52300002
*   2 RSINT       FIXED(31),             /* DATA MANAGEMENT             52350002
*                                           INTERFACE BYTE           */ 52400002
*   2 RSTCBAD     PTR(31),               /* POINTER TO RESTART'S TCB */ 52450002
*   2 RSPPM       PTR(31),               /* PTR TO LOW ORDER ADDRESS    52500002
*                                           OF P.P. CORE             */ 52550002
*   2 RSPPE       PTR(31),               /* PTR TO HIGH ORDER           52600002
*                                           ADDRESS OF P.P. CORE     */ 52650002
*   2 RSPPML      PTR(31),               /* LOW ORDER ADDR OF           52700002
*                                           SECONDARY PP CORE        */ 52750002
*   2 RSPPEL      PTR(31),               /* HIGH ORDER ADDR OF          52800002
*                                           SECONDARY PP CORE        */ 52850002
*   2 RSTIOTO     FIXED(31),             /* LENGTH OF OLD TIOT       */ 52900002
*   2 RSTIOTAD    PTR(31),               /* POINTER TO OLD P/P TIOT     52950002
*                                           FILLED IN BY REPMAIN     */ 53000002
*   2 RSCIRTTR    CHAR(4),               /* TTR OF FIRST CIR OF         53050002
*                                           CHKPT DATA SET (IF ON       53100002
*                                           D.A. DEV)                */ 53150002
*   2 RSSVRBN     PTR(31),               /* ADDR OF RESTART'S SVRB.  */ 53200002
*   2 RSFLAG1     CHAR(1),               /* RESTART HOUSEKEEPING        53250002
*                                           FLAGS                    */ 53300002
*%DCL RSBPAM   CHAR;                                                    53350002
*%RSBPAM  ='''01''X';                    /* INDICATES CHKPT DATA SET    53400002
*                                           WAS OPENED FOR BPAM.     */ 53450002
*%DCL RSOPEN   CHAR;                                                    53500002
*%RSOPEN  ='''02''X';                    /* INDICATES CHKPT OPENED      53550002
*                                           DATA SET.                */ 53600002
*%IF VER ¬='1'                                                          53650002
  %THEN                                                                 53700002
*   %GOTO LIB1YA1 ;                                                     53750002
*                                        /* TEST FOR OS              */ 53800002
*%DCL RSMVT    CHAR;                                                    53850002
*%RSMVT   ='''08''X';                    /* INDICATES MVT SYSTEM.    */ 53900002
*%DCL RSMFT    CHAR;                                                    53950002
*%RSMFT   ='''10''X';                    /* MFT SYSTEM               */ 54000002
*%LIB1YA1:  ;                                                           54050002
*%DCL RSTAPE   CHAR;                                                    54100002
*%RSTAPE  ='''20''X';                    /* RESTART DATA SET ON         54150002
*                                           TAPE.                    */ 54200002
*   2 RSFLAG2     CHAR(1),                                              54250002
*/* RSFLAG2 BIT USAGE                                                */ 54300002
*/* X'08' - USER DID NOT SPECIFY CHECK POINT DATA SET BLOCKSIZE      */ 54350002
*/* X'04' - A TCAM DEB EXISTS FOR THIS JOB                           */ 54400002
*   2 RSDCBSI     FIXED(15),             /* SAVE AREA FOR USER          54450002
*                                           BLKSIZE                  */ 54500002
*   2 RSRETCOD    CHAR(2),               /* RETURN CODE AREA         */ 54550002
     3 RSRETCD1   CHAR(1),               /* FIRST BYTE RESTART R.C.  */ 54600002
     3 RSRETCD2   CHAR(1),               /* SECOND BYTE RESTART R.C. */ 54650002
*%DCL RESTART  CHAR;                                                    54700002
*%RESTART ='''04''X';                    /* RETURN CODE, INDICATES      54750002
*                                           RESTART HAS OCCURRED.    */ 54800002
*%DCL RSIOERR  CHAR;                                                    54850002
*%RSIOERR ='''0C''X';                    /* INDICATES I/O ERROR      */ 54900002
*   2 *           CHAR(2),               /* RESERVED         @Y30DSDT*/ 54910000
*   2 RSSVRB      PTR(31),               /* IN PCP THIS FIELD POINTS    54950002
*                                           TO THE OLD CHKPT SVRB.      55000002
*                                           IN MVT THIS FIELD DOES      55050002
*                                           NOT CONTAIN MEANINGFUL      55100002
*                                           INFO.                    */ 55150002
*   2 RSNSTAE      PTR(31),              /* ANCHOR FOR USER SCB CHAIN*/ 55152002
*   2 RSPIE        PTR(31),              /* ANCHOR FOR USER PIE CHAIN*/ 55154002
*   2 RSSSCR       PTR(31),              /* ADDR OF 1ST SSCR FOR VSAM/  55160002
*                                           ADDR OF QMNGR WORKAREA FOR  55170002
*                                           TAPE POSITIONING         */ 55180002
*   2 RSBDCB   (22) FIXED(31),           /* DCB FOR CHKPT DATA SET.  */ 55200002
*   2 XCTLNAM1     CHAR(8) BDY(WORD),    /* XCTL PARM LIST (EXEC)   */  55250002
*    3 RSECB1      FIXED(31),                                           55360002
*     4 RSDECB1    FIXED(31),            /* MAPPING OF DECB         */  55370002
*    3 RSTYPE1     FIXED(15),                                           55400002
*    3 RSLNGTH1    FIXED(15),                                           55450002
*   2 RSDCB       PTR(31),                                              55500002
*    3 RSDCBAD1    PTR(31),                                             55550002
*   2 RSAREA1     FIXED(31),                                            55600002
*   2 RSIOBPT1    FIXED(31),                                            55650002
*   2 RSIOBCP  (30) FIXED(31),           /* IOB AND CHANNEL PROGRAM     55700002
*                                           RELOCATION AREA          */ 55750002
*   2 RSERAS00    FIXED(31),             /* ERASE AREA 00            */ 55800002
*   2 RSERAS01    FIXED(31),             /* ERASE AREA 01            */ 55850002
*   2 RSERAS02    FIXED(31),             /* ERASE AREA 02            */ 55900002
*   2 RSERAS03    FIXED(31),             /* ERASE AREA 03            */ 55950002
*   2 RSERAS04    FIXED(31),             /* ERASE AREA 04            */ 56000002
*   2 RSERAS05    FIXED(31),             /* ERASE AREA 05            */ 56050002
*   2 RSERAS06    FIXED(31),             /* ERASE AREA 06            */ 56100002
*   2 RSERAS07    FIXED(31),             /* ERASE AREA 07            */ 56110002
*   2 RSERAS08    FIXED(31),             /* ERASE AREA 08            */ 56120002
*   2 RSERAS09    FIXED(31),             /* ERASE AREA 09            */ 56130002
*   2 RSREGSAV (18) FIXED(31),           /* REGISTER SAVE AREA       */ 56150030
*%IF VER ¬='2'                           /* TEST FOR AOS/2   @Y30DSDT*/ 56200030
* %THEN                                                                 56250030
*   %GOTO LIB2YA1 ;                                                     56300002
* 1 RSTWAS01 BASED(ADDR(RSREGSAV)+12),   /* AOS WORKAREAS    @Y30DSDT   56450030
*                                           OVERLAP REGSAVE  @Y30DSDT*/ 56500030
*   2 RPMWA       PTR(31),               /* REPMAIN WORKAREA         */ 56550002
*   2 SIRPLIST     CHAR(12) BDY(WORD),       /* SIR PARAMETER LIST  */  56600002
*     3 SIRECB     FIXED(31),                /* ECB FIELD           */  56650002
*     3 SIRTYPFG   CHAR(1),                  /* SIR TYPE FIELD      */  56700002
*%DCL    SIRFIX CHAR;                    /* LOAD AND FIX             */ 56750002
*%SIRFIX     = '''50''X';                                               56800002
*%DCL    SIRFREE CHAR;                   /*    FREE                  */ 56850002
*%SIRFREE    = '''20''X';                                               56900002
*%DCL    SIRCLEAR CHAR;                  /*    CLEAR                 */ 56950002
*%SIRCLEAR   = '''08''X';                                               57000002
*%DCL    SIRLNG CHAR;                    /*    LONG TERM             */ 57050002
*%SIRLNG     = '''02''X';                                               57100002
*     3 SIRSADD    PTR(24),                  /* START ADDRESS       */  57150002
*     3 SIRENDFG   CHAR(1),                  /* END FLAG            */  57200002
*%DCL    SIRLAST CHAR;                   /*    LAST ENTRY            */ 57250002
*%SIRLAST    = '''80''X';                                               57300002
*%DCL    SIRAPB CHAR;                    /* REAL ADDRESS PASSBACK    */ 57350002
*%SIRAPB     = '''20''X';                                               57400002
*     3 SIREADD    PTR(24);                  /* END ADDRESS         */  57450002
*DECLARE 1 RSTWAS02                                                     57500002
*      BASED(ADDR(RSREGSAV)+72),         /* RESET LOCATION COUNTER      57550002
*                                           TO CONTINUE              */ 57600002
*   2 RSDSDIN     PTR(31),               /* OLD DSD POINTERS         */ 57650002
*   2 RSDSDOUT    FIXED(31),                                            57700002
*   2 RSJCMIN     PTR(31),               /* OLD JCM POINTERS         */ 57750002
*   2 RSJCMOUT    FIXED(31),                                            57800002
*   2 RSDSTEND    FIXED(31),             /* END REPDCB'S DATA SET TBL*/ 57850030
*%LIB2YA1:  ;                                              /*@Y30DSDT*/ 57900030
*   2 RSTIOTL     FIXED(31),             /* LENGTH OF TIOT SAVE AREA */ 58000002
*   2 RSTIOT   CHAR(*) BDY(DWORD);       /* START OF TIOT SAVE AREA  */ 58050030
* /*                                                                 */ 58100002
* /*           END OF IEEVRSWA, RESTART WORK AREA                    */ 58250002
* /*                                                                 */ 58300002
./  ADD  SSI=31470072,NAME=IEZABP
*/********************************************************************* 00300002
*                                                                     * 00350002
*   THIS MACRO DESCRIBES THE COMMUNICATION AREA OF THE I/O MANAGER.   * 00410002
*   IT IS LOCATED IN THE NUCLEUS AND IS ADDRESSED BY THE CVT          * 00420002
*   (CVTIOBP).  IT CONTAINS THE ADDRESSES OF I/O MANAGER MODULES      * 00430002
*   LOCATED IN THE NUCLEUS.  THESE ARE NEEDED BY I/O MANAGER AND ITS  * 00440002
*   USERS.                                                            * 00442002
*                                                                     * 00450002
*    03/09/73          LEVEL=00                                       * 00500002
*                                                                     * 00550002
**********************************************************************/ 00600002
* %      GO TO ABPPLS;              /* GO TO THE PLS VERSION         */ 00610002
         MACRO                                                          00620002
         IEZABP                                                         00630002
ABP      DSECT                                                          00640002
         SPACE 1                                                        00650002
         DS    0F                                                       00700002
ABPID    DS    BL1                  ABP CONTROL BLOCK IDENTIFIER        00750002
ABPLEN   DS    BL1                  LENGTH OF IEZABP                    00800002
ABPBR14  DS    H                    BRANCH ON REGISTER 14               00850002
ABPSIOD  DS    F                    SUPERVISOR STATE I/O DRIVER ADDRESS 00900002
ABPABP   DS    F                    ACTUAL BLOCK PROCESSOR ADDRESS      00950002
ABPNE    DS    F                    NORMAL END ROUTINE ADDRESS          01000002
ABPAE    DS    F                    ABNORMAL END ROUTINE ADDRESS        01050002
         MEND                                                           01100002
         EJECT                                                          01150002
*%ABPPLS: ;                                                             01200002
* /* ABP (ACTUAL BLOCK PROCESSOR) DECLARATION                        */ 01250002
* /*                                                                 */ 01350002
* /*                                                                 */ 01400002
*%GO TO ABPPLS1;                                                        01500002
* /*    ABP DIAGRAM                                                  */ 01550002
* /*                                                                 */ 01600002
* /*  0  ________________________________________________            */ 01650002
* /*    |           |           |                        |           */ 01700002
* /*    |   ABPID   |  ABPLEN   |       ABPBR14          |           */ 01750002
* /*  4 |___________|___________|________________________|           */ 01800002
* /*    |                                                |           */ 01850002
* /*    |                   ABPSIOD                      |           */ 01900002
* /*  8 |________________________________________________|           */ 01950002
* /*    |                                                |           */ 02000002
* /*    |                   ABPABP                       |           */ 02050002
* /* 12 |________________________________________________|           */ 02100002
* /*    |                                                |           */ 02150002
* /*    |                   ABPNE                        |           */ 02200002
* /* 16 |________________________________________________|           */ 02250002
* /*    |                                                |           */ 02300002
* /*    |                   ABPAE                        |           */ 02350002
* /* 20 |________________________________________________|           */ 02400002
* /*                                                                 */ 02450002
* /*    ABP DECLARATION                                              */ 02500002
* /*                                                                 */ 02550002
*%ABPPLS1:;                                                             02600002
*/*                                                                  */ 02650002
*  DCL 1 IEZABP BDY(WORD) BASED(CVTIOBP),                               02700002
*        2 ABPID    CHAR(1),        /* ABP CONTROL BLOCK IDENTIFIER  */ 02750002
*        2 ABPLEN   PTR(8),         /* LENGTH OF IEZABP              */ 02800002
*        2 ABPBR14  CHAR(2),        /* BRANCH ON REGISTER 14         */ 02850002
*        2 ABPSIOD  PTR(31),        /* SUPERVISOR STATE I/O DRVR ADDR*/ 02900002
*        2 ABPABP   PTR(31),        /* ACTUAL BLOCK PROCESSOR ADDRESS*/ 02950002
*        2 ABPNE    PTR(31),        /* NORMAL END ROUTINE ADDRESS    */ 03000002
*        2 ABPAE    PTR(31);        /* ABNORMAL END ROUTINE ADDRESS  */ 03050002
./  ADD  SSI=42841036,NAME=IEZCTGCV
 /********************************************************************/ 03000003
 /*                                                                  */ 03100003
 /*   MACRO NAME = IEZCTGCV                                          */ 03200003
 /*                                                                  */ 03300003
 /*   DESCRIPTIVE NAME = VSAM CATALOG CONTROL VOLUME LIST            */ 03400003
 /*                                                                  */ 03500003
 /*   FUNCTION = MAPPING FOR THE OS/VS SYSTEM CATALOG CVOL ENTRY     */ 03600003
 /*                                                                  */ 03700003
 /*   CONTROL BLOCK STRUCTURE = IF THE REQUEST IS 'SUPERLOCATE',     */ 03800003
 /*                             THE CTGCV IS POINTED TO BY THE       */ 03900003
 /*                             CTGPL (CTGCVOL).                     */ 04000003
 /*                                                                  */ 04100003
 /*   INCLUDED MACROS = NONE                                         */ 04200003
 /*                                                                  */ 04300003
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 04400003
 /*                                                                  */ 04500003
 /*   STATUS = VS/2 RELEASE 3   (CHANGE FLAG @Y30SSXX)               */ 04600003
 /*                                                                  */ 04700003
 /*   DATE OF LAST CHANGE = 17 JUL 74                                */ 04800003
 /*                                                                  */ 04900003
 /********************************************************************/ 05000003
 %DECLARE (CTGCVLEN, CTGCV999, CTGCVLVL) CHAR;                          05100003
*%CTGCVLEN = 'LENGTH(CTGCV)';       /* LENGTH OF CTGCV               */ 05200003
*%IF CTGCV999 ¬= ','                /* IF BLOCK NOT CONTINUED,       */ 15000003
*  %THEN %CTGCV999 = ';';           /*   THEN CLOSE DECLARE STMNT    */ 18000003
*%IF CTGCVLVL  = ''                 /* IF BLOCK NOT CONCATENATED,    */ 21000003
*  %THEN %GOTO CTGCV001;            /*   THEN GENERATE DECLARE       */ 24000003
*%CTGCVDUM = CTGCVLVL||' CTGCV';    /* SET MINOR LEVEL NUMBER        */ 27000003
*   CTGCVDUM                        /* CTGCV CONCATENATED LEVEL      */ 30000003
*%GOTO CTGCV002;                    /* SKIP DECLARE                  */ 33000003
*%CTGCV001:;                        /* DECLARE                       */ 36000003
*   DECLARE                                                             37000003
*     1 CTGCV BASED(CTGCVOL)        /* DECLARE CTGCV LEVEL ONE       */ 39000003
*%CTGCV002:;                        /* SKIP DECLARE                  */ 42000003
*        BDY(WORD),                 /* WORD BOUNDARY                 */ 45000003
*       5 CTGCVVOL CHAR(6),         /* CVOL VOLUME SERIAL            */ 48000003
*                                   /* VOLUME SER OF CATALOG   Y02020*/ 48050003
*       5 CTGCVDSN CHAR(44),        /* CATALOG NAME            Y02020*/ 48100003
*         10 CTGCVDEV CHAR(4),      /* CVOL DEVICE TYPE        Y02020*/ 48150003
*       5 CTGCVCC CHAR(44) CTGCV999 /* ALIAS NAME OR CONNECTOR Y02020*/ 51000003
./  ADD  SSI=42841037,NAME=IEZCTGFL
*  %GO TO CTGFLX01;                                                     00050002
*  /*                                                                   00100002
         MACRO                                                          00150002
         IEZCTGFL ,                                                     00200002
CTGFL    DSECT ,                        */                              00210002
*%CTGFLX01:;                                                            00250002
*/********************************************************************/ 02000003
*/*                                                                  */ 02050003
*/*   MACRO NAME = IEZCTGFL                                          */ 02100003
*/*                                                                  */ 02150003
*/*   DESCRIPTIVE NAME = CATALOG FIELD PARAMETER LIST                */ 02200003
*/*                                                                  */ 02250003
*/*   FUNCTION = THE FIELD PARAMETER LIST (CTGFL) DEFINES ONE OF     */ 02300003
*/*              THE CATALOG RECORD'S FIELDS OR A GROUP OF           */ 02350003
*/*              LOGICALLY RELATED FIELDS.  THE CTGFL IS BUILT       */ 02400003
*/*              BEFORE AN OS/VS COMPONENT ISSUES THE CATLG          */ 02450003
*/*              MACRO INSTRUCTION (SVC 26) TO PROCESS A             */ 02500003
*/*              CATALOG RECORD.  THE CTGFL IS USED IN TWO           */ 02550003
*/*              SITUATIONS:                                         */ 02600003
*/*                (1)  IT IDENTIFIES CATALOG RECORD INFORMATION     */ 02650003
*/*                     TO RETRIEVE OR UPDATE.  THE CTGPL CONTAINS   */ 02700003
*/*                     THE ADDRESS OF EACH CTGFL USED IN THIS WAY.  */ 02750003
*/*                (2)  IT IDENTIFIES CATALOG RECORD INFORMATION     */ 02800003
*/*                     TO COMPARE AGAINST CALLER-SUPPLIED DATA.     */ 02850003
*/*                     THIS IS A "TEST" CTGFL AND IS ADDRESSED BY   */ 02900003
*/*                     ANOTHER CTGFL.                               */ 02950003
*/*                                                                  */ 03000003
*/*   CONTROL BLOCK STRUCTURE = THE CTGFL IS POINTED TO BY THE       */ 03050003
*/*                             CCA ('CCAFLPT' OR 'CCATEST').        */ 03100003
*/*                                                                  */ 03150003
*/*   INCLUDED MACROS = NONE                                         */ 03200003
*/*                                                                  */ 03250003
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 03300003
*/*                                                                  */ 03350003
*/*   STATUS = VS/2 RELEASE 3   (CHANGE FLAG @Y30SSXX)               */ 03400003
*/*                                                                  */ 03450003
*/*   DATE OF LAST CHANGE = 17 JUL 74                                */ 03500003
*/*                                                                  */ 03550003
*/********************************************************************/ 03600003
*%DECLARE (CTGFLLEN, CTGFL999, CTGFLLVL) CHAR;                          03650003
*%CTGFLLEN = 'LENGTH(CTGFL)';       /* LENGTH OF CTGFL               */ 03700003
*%GOTO CTGFLX03;                                                        03750003
* /*                                                                    06250002
         AGO   .CTGFL01                 */                              06300002
*%CTGFLX03:;                                                            06350003
*%IF CTGFL999 ¬= ','                /* IF BLOCK NOT CONTINUED,       */ 10000003
*  %THEN %CTGFL999 = ';';           /*   THEN CLOSE DECLARE STMNT    */ 12000003
*%IF CTGFLLVL  = ''                 /* IF BLOCK NOT CONCATENATED,    */ 14000003
*  %THEN %GOTO CTGFL001;            /*   THEN GENERATE DECLARE       */ 16000003
*%CTGFLDUM = CTGFLLVL||' CTGFL';    /* SET MINOR LEVEL NUMBER        */ 18000003
*   CTGFLDUM                        /* CTGFL CONCATENATED LEVEL      */ 20000003
*%GOTO CTGFL002;                    /* SKIP DECLARE                  */ 22000003
*%CTGFL001:;                        /* DECLARE                       */ 24000003
    DECLARE                                                             25000003
*     1 CTGFL BASED(CTGFLPTR)       /* DECLARE CTGFL LEVEL ONE       */ 26000003
*%CTGFL002:;                        /* SKIP DECLARE                  */ 28000003
*        BDY(WORD),                 /* WORD BOUNDARY                 */ 30000003
*       5 CTGFLDNO PTR(8),          /* NO. PAIRS DATA LENGTH/ADDR    */ 32000003
*       5 CTGFLDCD BIT(8),          /* TEST CONDITION                */ 34000003
*       5 CTGFLDGC PTR(8),          /* GROUP CODE NUMBER             */ 54000003
*       5 CTGFLDRE BIT(8),          /* TEST RESULT                   */ 56000003
*         10 *        BIT(7),       /* RESERVED                      */ 58000003
*         10 CTGFLDTS BIT(1),       /* 0 = SUCCESSFUL TEST,          */ 60000003
*                                   /* 1 = TEST FAILED               */ 62000003
*       5 CTGFLDWA BIT(32),         /* CATALOG WORK AREA             */ 64000003
*       5 CTGFLDNM PTR(31),         /* FIELD NAME ADDRESS            */ 66000003
*       5 CTGFLCHN PTR(31),         /* ADDR OF NEXT FIELD MACRO      */ 68000003
*                                   /* OR ZERO                       */ 70000003
*       5 CTGFLDAT(*),              /* PAIRS OF DATA LENGTH/ADDR     */ 72000003
*         10 CTGFLNG FIXED(31),     /* DATA LENGTH                   */ 74000003
*         10 CTGFLPT  PTR(31) CTGFL999 /* DATA ADDRESS               */ 76000003
*/********************************************************************/ 76100003
*/*     CONSTANTS USED TO SET AND/OR TEST FIELDS DECLARED ABOVE      */ 76200003
*/********************************************************************/ 76300003
    DECLARE                         /* TEST CONDITION - CTGFLDCD     */ 76400003
      CTGFLDEQ BIT(8) CONSTANT('80'X), /* EQUAL                      */ 76500003
      CTGFLDNE BIT(8) CONSTANT('60'X), /* NOT EQUAL                  */ 76600003
      CTGFLDGT BIT(8) CONSTANT('20'X), /* GREATER THAN               */ 76700003
      CTGFLDLT BIT(8) CONSTANT('40'X), /* LESS THAN                  */ 76800003
      CTGFLDGE BIT(8) CONSTANT('A0'X), /* GREATER THAN OR EQUAL      */ 76900003
      CTGFLDLE BIT(8) CONSTANT('C0'X), /* LESS THAN OR EQUAL         */ 77000003
      CTGFLDZ  BIT(8) CONSTANT('80'X), /* TEST UNDER MASK FOR ZEROES */ 77100003
      CTGFLDON BIT(8) CONSTANT('10'X), /* TEST UNDER MASK FOR ONES   */ 77200003
      CTGFLDMX BIT(8) CONSTANT('40'X); /* TEST UNDER MASK FOR MIXED  */ 77300003
* %GO TO CTGFLX02;                                                      78050002
*/*                                                                     78100002
.CTGFL01 ANOP                                                           78150002
*                                                                       78210002
CTGFLDNO DS    XL1                      NUMBER PAIRS DATA LNG/ADDR      78250002
*                                                                       78260002
CTGFLDCD DS    XL1                      TEST CONDITION                  78300002
CTGFLDEQ EQU   X'80'                    EQUAL                           78350002
CTGFLDNE EQU   X'60'                    NOT EQUAL                       78400002
CTGFLDGT EQU   X'20'                    GREATER THAN                    78450002
CTGFLDLT EQU   X'40'                    LESS THAN                       78500002
CTGFLDGE EQU   X'A0'                    GREATER THAN OR EQUAL           78550002
CTGFLDLE EQU   X'C0'                    LESS THAN OR EQUAL              78600002
CTGFLDZ  EQU   X'80'                    TEST UNDER MASK FOR ZEROES      78650002
CTGFLDON EQU   X'10'                    TEST UNDER MASK FOR ONES        78700002
CTGFLDMX EQU   X'40'                    TEST UNDER MASK FOR MIXED       78750002
*                                                                       78800002
CTGFLDGC DS    XL1                      GROUP CODE NUMBER               78850002
*                                                                       78900002
CTGFLDRE DS    XL1                      TEST RESULT                     78950002
CTGFLDTS EQU   X'01'                    TEST MASK - CTGFLDRE            79100002
*                                       = 0 - SUCCESSFUL TEST,          79110002
*                                       = 1 - TEST FAILED               79120002
*                                                                       79150002
CTGFLDWA DS    F                        CATALOG WORK AREA               79200002
*                                                                       79350002
CTGFLDNM DS    A                        FIELD NAME ADDRESS              79400002
*                                                                       79450002
CTGFLCHN DS    A                        ADDRESS OF NEXT FIELD           79500002
*                                                                       79550002
*                                                                       79560002
CTGFLDAT DS    0CL8                     PAIRS OF DATA LENGTH/ADDRESS    79600002
CTGFLNG  DS    F                        DATA LENGTH                     79650002
CTGFLPT  DS    A                        DATA ADDRESS                    79700002
*                                                                       79750002
*                                                                       79800002
         MEND  ,                        */                              79850002
* %CTGFLX02:;                                                           79900002
./  ADD  SSI=53290847,NAME=IEZCTGFV
 /********************************************************************/ 01000003
 /*                                                                  */ 01030003
 /*   MACRO NAME = IEZCTGFV                                          */ 01060003
 /*                                                                  */ 01090003
 /*   DESCRIPTIVE NAME = CATALOG FIELD VECTOR TABLE                  */ 01120003
 /*                                                                  */ 01150003
 /*   FUNCTION = THE CATALOG FIELD VECTOR TABLE (CTGFV) IS BUILT     */ 01180003
 /*              BY THE ACCESS METHOD SERVICES (AMS) UTILITY         */ 01210003
 /*              PROGRAMS (WHEN THE USER ISSUES A 'DEFINE' OR        */ 01240003
 /*              'ALTER' COMMAND) AND CONTAINS ADDRESSES OF          */ 01270003
 /*              USER-SUPPLIED INFORMATION FIELDS AND LISTS.         */ 01300003
 /*              IF THE USER IS CREATING A CLUSTER, A CTGFV          */ 01330003
 /*              IS BUILT FOR EACH CATALOG RECORD THAT WILL BE       */ 01360003
 /*              BUILT TO DESCRIBE THE CLUSTER.                      */ 01390003
 /*                                                                  */ 01420003
 /*   CONTROL BLOCK STRUCTURE = THE CLUSTER CTGFV IS POINTED TO BY   */ 01450003
 /*                             THE CTGPL (CTGFVT) AND THE DATA      */ 01480003
 /*                             AND INDEX CTGFV'S ARE POINTED TO     */ 01510003
 /*                             BY THE CLUSTER CTGFV.                */ 01540003
 /*                                                                  */ 01570003
 /*   INCLUDED MACROS = NONE                                         */ 01600003
 /*                                                                  */ 01630003
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 01660003
 /*                                                                  */ 01690003
 /*   STATUS = VS/2 RELEASE 4   (CHANGE FLAG @Z40RSXX)       @Z40RSRC*/ 01720004
 /*                                                                  */ 01750003
 /*   DATE OF LAST CHANGE = 9 MAY 75                         @Z40RSRC*/ 01780004
 /*                                                                  */ 01810003
 /********************************************************************/ 01840003
 %DECLARE (CTGFVLEN, CTGFV999, CTGFVLVL) CHAR;             /*@X04SVDW*/ 02000003
 %CTGFVLEN = 'LENGTH(CTGFV)';       /* LENGTH OF CTGFV       @X04SVDW*/ 02500003
*%IF CTGFV999 ¬= ','                /* IF BLOCK NOT CONTINUED,       */ 07000003
*  %THEN %CTGFV999 = ';';           /*   THEN CLOSE DECLARE STMNT    */ 08000003
*%IF CTGFVLVL = ''                  /* IF BLOCK NOT CONCATENATED,    */ 09000003
*  %THEN %GOTO CTGFV001;            /*   THEN GENERATE THE DECLARE   */ 10000003
*%CTGFVDUM = CTGFVLVL||' CTGFV';    /* SET MINOR LEVEL NUMBER        */ 11000003
*  CTGFVDUM                         /* CTGFV CONCATENATED LEVEL      */ 12000003
*%GOTO CTGFV002;                    /* SKIP THE DECLARE STATEMENT    */ 13000003
*%CTGFV001:;                        /* DECLARE                       */ 14000003
    DECLARE                                                             14500003
*     1 CTGFV BASED(CTGFVT)         /* DECLARE CTGFV LEVEL ONE       */ 15000003
*%CTGFV002:;                        /* SKIPPED DECLARE               */ 16000003
*        BDY(WORD),                 /* WORD BOUNDARY                 */ 17000003
*       5 CTGFVTYP CHAR(1),         /* ENTRY TYPE (DEFINE)           */ 18000003
*       5 CTGFVPRO BIT(8),          /* CMS PROCESSING OPTIONS        */ 24000003
*         10 CTGFVAVL BIT(1),       /* ADD VOLUMES (ALTER)           */ 25000003
*         10 CTGFVRVL BIT(1),       /* REMOVE VOLUMES (ALTER)        */ 26000003
*         10 CTGFVNDC BIT(1),       /* NO DEVICE TYPE CONVERSION        26050003
*                                                              Y02020*/ 26100003
*         10 CTGFVDRC BIT(1),       /* DEFINE RECOVERY CATLG @Y30SSDW*/ 27300003
*         10 CTGFVRON BIT(1),       /* SET RACF INDICATOR ON @Z40RSRC*/ 27350004
*         10 CTGFVROF BIT(1),       /* ALTER - SET RACF INDICATOR       27400004
*                                      OFF                   @Z40RSRC*/ 27450004
*         10 *        BIT(2),       /* RESERVED              @Z40RSRC*/ 27600004
*       5 CTGFVELM PTR(8),          /* ELEMENT NO. OF FIELD CMSPCATR */ 28000003
*                                   /* IN IGGMCMWA MAPPING           */ 28050003
*       5 *        CHAR(1),         /* RESERVED                      */ 29000003
*       5 CTGFVDCH PTR(31),         /* DATA VECTOR TABLE ADDRESS     */ 30000003
*       5 CTGFVICH PTR(31),         /* INDEX VECTOR TABLE ADDRESS    */ 31000003
*       5 CTGFVVCH PTR(31),         /* SPACE VECTOR TABLE ADDRESS    */ 32000003
*       5 CTGFVIND PTR(31),         /* JCL STMNT NAME ADDRESS        */ 33000003
*       5 CTGFVENT PTR(31),         /* ENTRY NAME FIELD ADDRESS      */ 34000003
*       5 CTGFVSTY PTR(31),         /* SECURITY COMBINATION FPL ADDR */ 35000003
*       5 CTGFVOWN PTR(31),         /* OWNER ID FPL ADDRESS          */ 36000003
*       5 CTGFVEXP PTR(31),         /* EXPIRATION DATE FPL ADDRESS   */ 37000003
*       5 CTGFVCRE PTR(31),         /* CREATION DATE FPL ADDRESS     */ 38000003
*       5 CTGFVVLT PTR(31),         /* VOLUME SERIAL LIST ADDRESS    */ 39000003
*       5 CTGFVRNG PTR(31),         /* KEY RANGES LIST ADDRESS       */ 40000003
*       5 CTGFVDVT PTR(31),         /* ALIEN DEVICE TYPE FPL ADDRESS */ 41000003
*       5 CTGFVSPC PTR(31),         /* SPACE PARM COMBO FPL ADDRESS  */ 42000003
*         10 CTGFVTTR PTR(31),      /* PTR TO NONVSAM DSCB TTR Y02020*/ 42050003
*       5 CTGFVAMD PTR(31),         /* AMDSB FPL ADDRESS             */ 43000003
          10 CTGFVFSN PTR(31),      /* ALIEN DATA SET SEQUENCE       */ 44000003
                                    /*   NUMBER FPL ADDRESS          */ 45000003
*       5 CTGFVATR PTR(31),         /* DATA SET ATTRIBUTES FPL ADDR  */ 46000003
*       5 CTGFVBUF PTR(31),         /* BUFFER SIZE FPL ADDRESS       */ 47000003
*       5 CTGFVLRS PTR(31),         /* AVERAGE RECORD SIZE FPL ADDR  */ 48000003
*       5 CTGFVLMT PTR(31),         /* ADDRS OF GDG LIMIT      Y02020*/ 48010003
*         6 CTGFVEXT PTR(31),       /* ADDRESS OF EXCEPTION  @Y30SSRS*/ 48060103
*                                   /*   EXIT FPL            @Y30SSRS*/ 48070003
        5 CTGFVGAT PTR(31),         /* ADDRS OF GDG ATTRIBUTES Y02020*/ 48110003
*         6 CTGFVUPG PTR(31),       /* ADDR OF PATH/AIX      @Y30SSRS*/ 48130003
*                                   /* ATTRIBUTES FPL        @Y30SSRS*/ 48180003
*       5 CTGFVNAM PTR(31),         /* ADDRESS OF TRUE NAME    Y02020*/ 48218003
                                    /*   OR RELATED NAME     @Y30SSRS*/ 48228003
*       5 CTGFVPWD PTR(31),         /* ADDR OF 8-BYTE        @Y30SSRS*/ 48250003
*                                   /* REL OBJ PASSWORD      @Y30SSRS*/ 48300003
*         6 CTGFVCPP PTR(31),       /* ADDR OF TSO COMMAND PROCESSOR    48310004
*                                      PARAMETER LIST (CPPL --          48320004
*                                      TSO COMMAND CALLERS ONLY).       48330004
*                                      IF ZERO, DAIRFAIL MESSAGES       48340004
*                                      WILL BE WTP'S.        @Z40RSRC*/ 48342004
*       5 CTGFVWKA PTR(31) CTGFV999 /*CRA FEEDBACK AREA ADDR @Y30SSRS*/ 48350003
 /********************************************************************/ 48400003
 /*     CONSTANTS USED TO SET AND/OR TEST FIELDS DECLARED ABOVE      */ 48600003
 /********************************************************************/ 48800003
    DECLARE                           /* ENTRY TYPE - CTGFVTYP       */ 49000003
      CTGFVDTA CHAR(1) CONSTANT('D'), /* DATA                        */ 52000003
      CTGFVCL  CHAR(1) CONSTANT('C'), /* CLUSTER                     */ 55000003
      CTGFVIDX CHAR(1) CONSTANT('I'), /* INDEX                       */ 58000003
      CTGFVVOL CHAR(1) CONSTANT('V'), /* VOLUME (SPACE)              */ 61000003
      CTGFVALN CHAR(1) CONSTANT('A'), /* ALIEN                       */ 64000003
      CTGFVGBS CHAR(1) CONSTANT('B'), /* GDG BASE              Y02020*/ 64050003
      CTGFVANM CHAR(1) CONSTANT('X'), /* ALIAS NAME            Y02020*/ 64100003
      CTGFVPTH CHAR(1) CONSTANT('R'), /* PATH                @Y30SSRS*/ 67000003
      CTGFVAIX CHAR(1) CONSTANT('G'); /* ALTERNATE INDEX     @Y30SSRS*/ 70000003
./  ADD  SSI=72340205,NAME=IEZCTGPL
* %GOTO CTGPLX01; /*                                                    00050002
         MACRO                                                          00100002
         IEZCTGPL ,                                                     00150002
         DSECT ,                        */                              00160002
* %CTGPLX01:;                                                           00200002
*/********************************************************************/ 03000004
*/*                                                                  */ 03001004
*/*   MACRO NAME = IEZCTGPL                                          */ 03002004
*/*                                                                  */ 03003004
*/*   DESCRIPTIVE NAME = CATALOG PARAMETER LIST                      */ 03004004
*/*                                                                  */ 03005004
*/*   FUNCTION = THE CATALOG PARAMETER LIST (CTGPL) DEFINES THE      */ 03006004
*/*              CATALOG MANAGEMENT REQUEST AND ITS OPTIONS, THE     */ 03007004
*/*              CATALOG RECORD TO BE PROCESSED, AND THE VSAM        */ 03008004
*/*              CATALOG THAT CONTAINES THE RECORD.  THE CTGPL IS    */ 03009004
*/*              BUILT BEFORE AN OS/VS COMPONENT ISSUES THE CATLG    */ 03010004
*/*              MACRO INSTRUCTION (SVC 26) TO PROCESS A CATALOG     */ 03011004
*/*              RECORD.  WHEN THE CATALOG MANAGEMENT ROUTINES       */ 03012004
*/*              BUILD A CCA TO SUPPORT THE REQUEST, THE ADDRESS     */ 03013004
*/*              OF THE CTGPL IS PUT INTO THE CCA (CCACPL).          */ 03014004
*/*                                                                  */ 03015004
*/*   CONTROL BLOCK STRUCTURE = THE CTGPL IS POINTED TO BY           */ 03016004
*/*                             REGISTER 1.                          */ 03017004
*/*                                                                  */ 03018004
*/*   INCLUDED MACROS = NONE                                         */ 03019004
*/*                                                                  */ 03020004
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 03021004
*/*                                                                  */ 03022004
*/*   STATUS = VS/2 RELEASE 4   (CHANGE FLAG @Z40WSXX)       @Z40WSSG*/ 03023000
*/*                                                                  */ 03024000
*/*   DATE OF LAST CHANGE = 16 AUG 77                        @ZA20773*/ 03025000
*/*                                                                  */ 03026004
*/********************************************************************/ 03027004
*%GOTO CTGPLX03;                                                        03077037
*/*                                                                     03200037
         AGO   .CTGPL01                 */                              03250002
*%CTGPLX03:;                                                            03300037
*%DECLARE (CTGPLLEN, CTGPL999, CTGPLLVL) CHAR;                          04000037
*%CTGPLLEN = 'LENGTH(CTGPL)';       /* LENGTH OF CTGPL               */ 04500037
*%IF CTGPL999 ¬= ','                /* IF BLOCK NOT CONTINUED,       */ 05000037
*   %THEN %CTGPL999 = ';';          /*   THEN CLOSE DCL STATEMENT    */ 06000037
*%IF CTGPLLVL  = ''                 /* IF BLOCK NOT CONCATENATED,    */ 07000037
*   %THEN %GOTO CTGPL001;           /*   THEN GENERATE DCL           */ 08000037
*%CTGPLDUM = CTGPLLVL||' CTGPL';    /* SET MINOR LEVEL NUMBER        */ 09000037
*        CTGPLDUM                   /* CTGPL CONCATENATED LEVEL      */ 10000037
*%GOTO CTGPL002;                    /* SKIP DECLARE                  */ 11000037
*%CTGPL001:;                        /* DECLARE                       */ 12000037
*   DECLARE                                                             12500037
*     1 CTGPL BASED(CTGPLPTR)       /* DECLARE CTGPL LEVEL ONE       */ 13000037
*%CTGPL002:;                        /* SKIP DECLARE                  */ 14000037
*        BDY(WORD),                 /* WORD BOUNDARY                 */ 15000037
*       5 CTGOPTN1 BIT(8),          /* FIRST OPTION INDICATOR        */ 16000037
*         10 CTGBYPSS BIT(1),       /* BYPASS                        */ 17000037
*         10 CTGMAST  BIT(1),       /* VERIFY MASTER PASSWORD        */ 18000037
*         10 CTGCI    BIT(1),       /* VERIFY CONTROL INTERVAL       */ 19000037
*         10 CTGUPD   BIT(1),       /* VERIFY UPDATE                 */ 20000037
*         10 CTGREAD  BIT(1),       /* VERIFY READ                   */ 21000037
*         10 CTGNAME  BIT(1),       /* 1 = 44-BYTE NAME OR VOL SER,  */ 22000037
*                                   /* 0 = ENTRY ID NUMBER           */ 23000037
*         10 CTGCNAME BIT(1),       /* 1 = 44-BYTE NAME,             */ 24000037
*                                   /* 0 = ACB ADDRESS               */ 25000037
*         10 CTGGENLD BIT(1),       /* GENERIC LOCATE REQUEST  Y02020*/ 26000037
*       5 CTGOPTN2 BIT(8),          /* SECOND OPTION INDICATOR       */ 27000037
*         10 CTGEXT   BIT(1),       /* EXTEND       (UPDATE)         */ 28000037
*            15 CTGNSVS BIT(1),     /* CATLG CLEANUP REQUEST @ZA00605*/ 28050037
*         10 CTGERASE BIT(1),       /* ERASE        (DELETE)         */ 29000037
*            15 CTGSMF   BIT(1),    /* WRITE SMF    (LSPACE)         */ 30000037
*               20 CTGREL   BIT(1), /* RELEASE      (UPDATE)         */ 31000037
*                  25 CTGGTALL BIT(1),/* CONCAT SEARCH  FOR    Y02020*/ 31050037
*                                   /* (LISTCAT)               Y02020*/ 31100037
*         10 CTGPURG  BIT(1),       /* PURGE        (DELETE)         */ 32000037
*           15 CTGVMNT BIT(1),      /* VOLUME MOUNT CALLER           */ 33000037
*              20 CTGRCATN BIT(1),  /* RTN CATLG NAME(GLOC)    Y02020*/ 33010004
*                 25 CTGSWAP BIT(1),/* SWAPSPACE (DEFINE)    @Z40WSSG*/ 33050004
*         10 CTGGTNXT BIT(1),       /* GET NEXT     (LIST CATALOG)   */ 34000037
*         10 CTGDISC BIT(1),        /* DISCONNECT   (DELETE)         */ 35000037
*         10 CTGOVRID BIT(1),       /* ERASE OVERRIDE (DELETE)       */ 36000037
*         10 CTGSCR   BIT(1),       /* SCRATCH SPACE (DELETE)        */ 37000037
*         10 *        BIT(1),       /* RESERVED                      */ 38000037
*       5 CTGOPTN3 BIT(8),          /* THIRD OPTION INDICATOR        */ 39000037
*         10 CTGFUNC  BIT(3),       /* CATALOG FUNCTION              */ 40000037
*         10 CTGSUPLT BIT(1),       /* SUPER LOCATE                  */ 45000037
*         10 CTGGDGL  BIT(1),       /* GDG LOCATE REQUEST      Y02020*/ 46000037
*                                   /* WITH BASE LEVEL GIVEN   Y02020*/ 46100037
*                                   /* (CTGWAGB IN CTGWA)      Y02020*/ 46150037
*         10 CTGSRH   BIT(1),       /* 0 = SEARCH MASTER CATLG Y02020*/ 47000037
*                                   /*     ONLY                Y02020*/ 47050037
*                                   /* 1 = SEARCH OS CATALOG FIRST   */ 48000037
*         10 CTGNUM   BIT(1),       /* 0 = SEARCH BOTH CATALOGS,     */ 49000037
*                                   /* 1 = SEARCH ONE CATALOG        */ 50000037
*         10 CTGAM0   BIT(1),       /* VSAM REQ VERSUS NONVSAM       */ 51000037
*       5 CTGOPTN4 BIT(8),          /* GDG FLAGS                     */ 52000037
*         10 CTGLBASE BIT(1),       /* LOCATE GDG BASE ONLY Y02020   */ 52050037
*         10 CTGDOCAT BIT(1),       /* DO NOT OPEN NEEDED CATALOG    */ 52100037
*         10 CTGNPROF BIT(1),       /* NO (RAC) PROFILE SHOULD BE       52150000
*                                      DEFINED OR DELETED    @Z40RSRC*/ 52170000
*         10 CTGCOIN  BIT(1),       /* CONTROLLER INTERCEPT REQUESTED   52190000
*                                                            @ZA20773*/ 52250037
*         10 CTGBYPMT BIT(1),       /* BYPASS SECURITY PROMPTING        52300037
*                                       TO SYSTEM OPERATOR   @ZA07531*/ 52350037
*         10 CTGTIOT  BIT(1),       /* CALLER OWNS SYSZTIOT EXCLUSIVE   52400037
*                                                            @ZA20773*/ 52410000
*         10 *        BIT(2),       /* RESERVED              @ZA20773*/ 52460000
*       5 CTGENT   PTR(31),         /* USER ENTRY ADDR OR PTR TO VOLUME 53000037
*                                        SERIAL NUMBER (LSPACE)      */ 54000037
*         10 CTGFVT   PTR(31),      /* FVT ADDRESS (DEFINE, ALTER)   */ 55000037
*       5 CTGCAT   PTR(31),         /* CATALOG POINTER               */ 56000037
*         10 CTGCVOL PTR(31),       /* CVOL PTR (SUPER LOCATE)       */ 57000037
*       5 CTGWKA  PTR(31),          /* WORKAREA ADDR                 */ 58000037
*       5 CTGDSORG CHAR(2),         /* DATA SET ORG - SUPERLOCATE    */ 59000037
*         10 CTGOPTNS BIT(5),       /* CMS OPTIONS                   */ 60000037
*         10 *        BIT(11),      /* RESERVED                      */ 65000037
*       5 CTGTYPE  CHAR(1),         /* ENTRY TYPE - LISTCAT, DELETE  */ 66000037
*       5 CTGNOFLD PTR(8),          /* NUMBER OF FIELD POINTERS      */ 74000037
*       5 CTGDDNM PTR(31),          /* DD NAME ADDR                  */ 75000037
*         10 CTGNEWNM PTR(31),      /* NEWNAME ADDRESS - ALTER       */ 76000037
*            15 CTGFDBK  PTR(16),   /* SUPER LOCATE FEEDBACK         */ 77000037
*            15 CTGFBFLG BIT(16),   /* SUPER LOCATE FLAGS            */ 78000037
*               20 CTGPAR   BIT(1), /* PARALLEL MOUNT -SUPERLOCATE   */ 79000037
*               20 CTGKEEP  BIT(1), /* FORCED KEEP - SUPERLOCATE     */ 80000037
*               20 CTGGDGB  BIT(1), /* GDG BASE LOCATE         Y02020*/ 81000037
*               20 CTGNGDSN BIT(1), /* GDG NAME GENERATED      Y02020*/ 81050037
*               20 *        BIT(12), /* RESERVED               Y02020*/ 81100037
*       5 CTGJSCB  PTR(31),         /* JSCB ADDR                     */ 82000037
*         10 CTGPSWD  PTR(31),      /* PASSWORD ADDR                 */ 83000037
*       5 CTGFIELD(*) PTR(31) CTGPL999 /* FIELD POINTERS             */ 84000037
*/********************************************************************/ 85000037
*/*     CONSTANTS USED TO SET AND/OR TEST FIELDS DECLARED ABOVE      */ 85000237
*/********************************************************************/ 85000437
*   DECLARE                         /* CATALOG FUNCTION - CTGFUNC    */ 85000637
*     CTGLOC   BIT(3) CONSTANT('001'B), /* LOCATE                    */ 85000937
*     CTGLSP   BIT(3) CONSTANT('010'B), /* LSPACE                    */ 85001237
*     CTGUPDAT BIT(3) CONSTANT('011'B), /* UPDATE                    */ 85001537
*     CTGCMS   BIT(3) CONSTANT('100'B); /* CMS FUNCTION              */ 85001837
*   DECLARE                         /* CMS OPTIONS - CTGOPTNS        */ 85002137
*     CTGDEFIN BIT(5) CONSTANT('00001'B), /* DEFINE                  */ 85002437
*     CTGALTER BIT(5) CONSTANT('00010'B), /* ALTER                   */ 85002737
*     CTGDELET BIT(5) CONSTANT('00011'B), /* DELETE                  */ 85003037
*     CTGLTCAT BIT(5) CONSTANT('00100'B), /* LIST CATALOG            */ 85003337
*     CTGCNVTV BIT(5) CONSTANT('00110'B); /* CONVERTV        @Y30LSPS*/ 85003637
*   DECLARE                           /* RECORD ENTRY TYPE - CTGTYPE */ 85003937
*     CTGTDATA CHAR(1) CONSTANT('D'), /* DATA                        */ 85004237
*     CTGTINDX CHAR(1) CONSTANT('I'), /* INDEX                       */ 85004537
*     CTGTALIN CHAR(1) CONSTANT('A'), /* ALIEN                       */ 85004837
*     CTGTUCAT CHAR(1) CONSTANT('U'), /* USER CATALOG                */ 85005137
*     CTGTVOL  CHAR(1) CONSTANT('V'), /* VOLUME                      */ 85005437
*     CTGTCL   CHAR(1) CONSTANT('C'), /* CLUSTER                     */ 85005737
*     CTGTAIX  CHAR(1) CONSTANT('G'), /* ALTERNATE INDEX     @Y30SSPJ*/ 85006037
*     CTGTPATH CHAR(1) CONSTANT('R'), /* PATH                @Y30SSPJ*/ 85006337
*     CTGTFREE CHAR(1) CONSTANT('F'), /* FREE                @Y30SSPJ*/ 85006637
*     CTGTPTH  CHAR(1) CONSTANT('R'), /* PATH                @Y30SSSB*/ 85006937
*     CTGTUPG  CHAR(1) CONSTANT('Y'), /* UPGRADE             @Y30SSSB*/ 85007237
*     CTGTGBS  CHAR(1) CONSTANT('B'), /* GDG BASE              Y02020*/ 85007537
*     CTGTANM  CHAR(1) CONSTANT('X'), /* ALIAS NAME            Y02020*/ 85007837
*     CTGTPGSP CHAR(1) CONSTANT('P'), /* PAGE SPACE            Y02020*/ 85008137
*     CTGTMCAT CHAR(1) CONSTANT('M'); /* MASTER CATALOG              */ 85008437
*/********************************************************************/ 85008737
*/*                 PROBLEM  DETERMINATION  FIELDS                   */ 85009037
*/********************************************************************/ 85009337
*   DECLARE                                                             85012037
*     1 * DEF(CTGDDNM),             /* PROBLEM DETERMINATION @Y30SSJG*/ 85013037
*       2 CTGPROB CHAR(4),          /* PROBLEM DETERMINATION @Y30SSJG*/ 85014037
*         3 CTGMODID CHAR(2),       /* MODULE IDENTIFICATION @Y30SSJG*/ 85015037
*         3 CTGREASN CHAR(2),       /* REASON CODE           @Y30SSJG*/ 85016037
*           4 CTGREAS1 CHAR(1),     /* HIGH ORDER BYTE ZERO  @Y30SSJG*/ 85017037
*           4 CTGREAS2 CHAR(1);     /* REASON CODE LOW BYTE  @Y30SSJG*/ 85018037
* %GOTO CTGPLX02;                                                   /*  85050002
.CTGPL01 ANOP                                                           85100002
*                                                                       85150002
CTGPL    DS    0H                                                       85250002
*                                                                       85260002
CTGOPTN1 DS    XL1                      FIRST OPTION INDICATOR          85300002
CTGBYPSS EQU   X'80'                    BYPASS                          85350002
CTGMAST  EQU   X'40'                    VERIFY MASTER PASSWORD          85400002
CTGCI    EQU   X'20'                    VERIFY CONTROL INDICATOR        85450002
CTGUPD   EQU   X'10'                    VERIFY UPDATE                   85500002
CTGREAD  EQU   X'08'                    VERIFY READ                     85550002
CTGNAME  EQU   X'04'                    1 - 44-BYTE NAME OR VOLSER      85600002
*                                       0 - ENTRY ID NUMBER             85650002
CTGCNAME EQU   X'02'                    1 - 44-BYTE NAME                85700002
*                                       0 - ACB ADDRESS                 85750002
CTGGENLD EQU   X'01'                    GENERIC LOCATE REQUEST          85800002
*                                                                       85850002
CTGOPTN2 DS    XL1                      SECOND OPTION INDICATOR         85900002
CTGEXT   EQU   X'80'                    EXTEND(UPDATE)                  85950002
CTGERASE EQU   X'40'                    ERASE(DELETE)                   86000002
CTGSMF   EQU   X'40'                    WRITE SMF(LSPACE)               86050002
CTGREL   EQU   X'40'                    RELEASE(UPDATE)                 86100002
CTGGTALL EQU   X'40'                    CONCAT SEARCH (LISTCAT) Y02020  86150002
CTGPURG  EQU   X'20'                    PURGE (DELETE)                  86200002
CTGVMNT  EQU   X'20'                    VOLUME MOUNT CALLER             86250002
CTGRCATN EQU   X'20'                    RTN CAT NAME(GLOC)      Y02020  86300002
CTGGTNXT EQU   X'10'                    GET NEXT (LIST CTLG)            86350002
CTGDISC  EQU   X'08'                    DISCONNECT (DELETE)             86400002
CTGOVRID EQU   X'04'                    ERASE OVERRIDE (DELETE)         86450002
CTGSCR   EQU   X'02'                    SCRATCH SPACE (DELETE)          86500002
*    X'01' - RESERVED                                                   86550002
*                                                                       86600002
CTGOPTN3 DS    XL1                      THIRD OPTION INDICATOR          86650002
CTGFUNC  EQU   X'E0'                    HIGH ORDER THREE BITS DEFINE    86700002
*                                       FUNCTION                        86710002
*   LOCATE     -   001* ****                                            86760002
CTGLOC   EQU   X'20'                    LOCATE - BITS ON                86800002
*   LSPACE     -   010* ****                                            86900002
CTGLSP   EQU   X'40'                    LSPACE - BITS ON                86910002
*   UPDATE     -   011* ****                                            86950002
CTGUPDAT EQU   X'60'                    UPDATE - BITS ON                86960002
*   CMS FUNCTION - 100* ****                                            87000002
CTGCMS   EQU   X'80'                    CMS FUNCTION - BITS ON          87050002
*                                                                       87150002
CTGSUPLT EQU   X'10'                    SUPER LOCATE                    87200002
CTGGDGL  EQU   X'08'                    GDG LOCATE FUNCTION (CTGWAGB IN 87250002
*                                       CTGWA)                          87300002
CTGSRH   EQU   X'04'                    0 - SEARCH MASTER CAT ONLY      87350002
*                                       1 - SEARCH OS CAT FIRST         87400002
CTGNUM   EQU   X'02'                    0 - SEARCH BOTH CATALOGS        87450002
*                                       1 - SEARCH ONE CATALOG          87500002
CTGAM0   EQU   X'01'                    VSAM REQ VERSUS NONVSAM         87550002
*                                                                       87600002
CTGOPTN4 DS    XL1                      FOURTH OPTION INDICATOR  Y02020 87650002
CTGLBASE EQU   X'80'                    LOCATE GDG BASE ONLY            87750002
CTGDOCAT EQU   X'40'                    DO NOT OPEN NEEDED CATLG        87800002
CTGNPROF EQU   X'20'                    NO (RAC) PROFILE SHOULD BE      87810004
*                                       DEFINED OR DELETED     @Z40RSRC 87820004
CTGCOIN  EQU   X'10'                    CONTROLLER INTERCEPT REQUESTED  87860037
*                                                              @ZA20773 87870037
CTGBYPMT EQU   X'08'                    BYPASS SECURITY PROMPTING TO    87880037
*                                       SYSTEM OPERATOR        @ZA07531 87890037
CTGTIOT  EQU   X'04'                    CALLER OWNS SYSZTIOT EXCLUSIVE  87900037
*                                                              @ZA20773 87910037
*        BITS 7-8 RESERVED                                     @ZA20773 87920037
CTGENT   DS    0A                       USER ENTRY ADDRESS OR POINTER   87950002
*                                       TO VOLUME SERIAL NUMBER(LSPACE) 88000002
CTGFVT   DS    A                        FVT ADDRESS (DEFINE, ALTER)     88050002
CTGCAT   DS    0A                       CATALOG POINTER                 88100002
*                                                                       88110002
CTGCVOL  DS    A                        CVOL PTR (SUPER LOCATE)         88150002
*                                                                       88160002
CTGWKA   DS    A                        WORKAREA ADDRESS                88200002
*                                                                       88210002
CTGDSORG DS    CL2                      DATA SET ORG (SUPER LOCATE)     88250002
*   BITS 0-4 DEFINE ORGANIZATION                                        88300002
CTGOPTNS EQU   X'F8'                    TOP 5 BITS                      88310002
*   DEFINE          - 0000 1*** **** ****                               88350002
CTGDEFIN EQU   X'08'                    DEFINE                          88360002
*   ALTER           - 0001 0*** **** ****                               88400002
CTGALTER EQU   X'10'                    ALTER                           88410002
*   DELETE          - 0001 1*** **** ****                               88450002
CTGDELET EQU   X'18'                    DELETE                          88460002
*   LIST CATALOG    - 0010 0*** **** ****                               88500002
CTGLTCAT EQU   X'20'                    LIST CATALOG                    88550002
*   CONVERTV        - 0011 0*** **** ****                               88600003
CTGCNVTV EQU   X'30'                    CONVERTV                        88610003
*   BITS 6-16 RESERVED                                                  88650002
*                                                                       88700002
CTGTYPE  DS    CL1                      ENTRY TYPE-LISTCAT,DELETE       88750002
CTGTDATA EQU   C'D'                     DATA - D                        88800002
CTGTINDX EQU   C'I'                     INDEX - I                       88850002
CTGTALIN EQU   C'A'                     ALIEN - A                       88900002
CTGTUCAT EQU   C'U'                     USER CATALOG - U                88950002
CTGTVOL  EQU   C'V'                     VOLUME - V                      89000002
CTGTCL   EQU   C'C'                     CLUSTER - C                     89050002
CTGTMCAT EQU   C'M'                     MASTER CATALOG - M              89100002
CTGTGBS  EQU   C'B'                     GDG BASE - B                    89150002
CTGTANM  EQU   C'X'                     ALIAS BASE -X                   89200002
CTGTPGSP EQU   C'P'                     PAGE SPACE - P                  89250002
*                                                                       89300002
CTGNOFLD DS    XL1                      NUMBER FIELD POINTERS           89350002
CTGDDNM  DS    0A                       DD NAME ADDRESS                 89400002
CTGNEWNM DS    0A                       NEWNAME ADDRESS - ALTER         89450002
CTGFDBK  DS    XL2                      SUPER LOCATE FEEDBACK           89500002
CTGFBFLG DS    XL2                      SUPER LOCATE FLAGS              89550002
CTGPAR   EQU   X'80'                    PARALLEL MOUNT - SUPER LOC      89600002
CTGKEEP  EQU   X'40'                    FORCED KEEP = SUPER LOCATE      89650002
CTGGDGB  EQU   X'20'                    GDG BASE LOCATED                89700002
CTGNGDSN EQU   X'10'                    GDG NAME GENERATED              89750002
*   BITS 5-16 RESERVED                                                  89800002
*                                                                       89850002
CTGJSCB  DS    0A                       JSCB ADDRESS                    89900002
CTGPSWD  DS    A                        PASSWORD ADDRESS                89950002
CTGFIELD DS    A                        FIELD POINTERS - MAY BE MORE    90000002
*                                       THAN ONE                        90050002
CTGPLLEN EQU   *-CTGPL                  LENGTH OF CTG WITH ONE FIELD    90100002
*                                       POINTER                         90150002
         MEND                                                           90200002
* */ %CTGPLX02:;                                                        90250002
./  ADD  SSI=50831004,NAME=IEZCTGVL
 /********************************************************************/ 03000003
 /*                                                                  */ 03100003
 /*   MACRO NAME = IEZCTGVL                                          */ 03200003
 /*                                                                  */ 03300003
 /*   DESCRIPTIVE NAME = VSAM CATALOG VOLUME LIST AND EXTENSION      */ 03400003
 /*                                                                  */ 03500003
 /*   FUNCTION = MAPPING MACRO FOR THE CATALOG VOLUME LIST           */ 03600003
 /*              AND THE VOLUME LIST EXTENSION.                      */ 03700003
 /*                                                                  */ 03800003
 /*   CONTROL BLOCK STRUCTURE = THE CTGVL IS POINTED TO BY THE       */ 03900003
 /*                             CTGWA (CTGWAVL).                     */ 04000003
 /*                                                                  */ 04100003
 /*   INCLUDED MACROS = NONE                                         */ 04200003
 /*                                                                  */ 04300003
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 04400003
 /*                                                                  */ 04500003
 /*   STATUS = VS/2 RELEASE 3   (CHANGE FLAG @Y30SSXX)               */ 04600003
 /*                                                                  */ 04900003
 /*   DATE OF LAST CHANGE = 18 JUL 74                                */ 05000003
 /*                                                                  */ 05100003
 /********************************************************************/ 05200003
 %DECLARE (CTGVLLEN, CTGVLXLN, CTGVL999, CTGVLLVL) CHAR;                05300003
*%CTGVLLEN = 'LENGTH(CTGVL)';       /* LENGTH OF CTGVL               */ 05400003
*%CTGVLXLN = 'LENGTH(CTGVLX)';      /* LENGTH OF CTGVLX              */ 05500003
*%IF CTGVL999 ¬= ','                /* IF BLOCK NOT CONTINUED,       */ 15000003
*  %THEN %CTGVL999 = ';';           /*   THEN CLOSE DECLARE STMNT    */ 18000003
*%IF CTGVLLVL  = ''                 /* IF BLOCK NOT CONCATENATED,    */ 21000003
*  %THEN %GOTO CTGVL001;            /*   THEN GENERATE DECLARE       */ 24000003
*%CTGVLDUM = CTGVLLVL||' CTGVL(*)'; /* SET MINOR LEVEL NUMBER        */ 27000003
*   CTGVLDUM                        /* CTGVL CONCATENATED LEVEL      */ 30000003
*%GOTO CTGVL002;                    /* SKIP DECLARE                  */ 33000003
*%CTGVL001:;                        /* DECLARE                       */ 36000003
 /********************************************************************/ 36600003
 /*                     CATALOG  VOLUME  LIST                        */ 37200003
 /********************************************************************/ 37800003
    DECLARE                                                             38400003
*     1 CTGVL(*) BASED(CTGWAVL)     /* DECLARE CTGVL LEVEL ONE       */ 39000003
*%CTGVL002:;                        /* SKIP DECLARE                  */ 42000003
*                   BDY(WORD),      /* WORD BOUNDARY                 */ 45000003
*       5 CTGVLVOL CHAR(6),         /* VOLUME SERIAL NUMBER          */ 48000003
*       5 CTGVLDEV CHAR(4),         /* DEVICE TYPE                   */ 51000003
*       5 CTGVLSEQ FIXED(15);       /* FILE SEQUENCE NUMBER          */ 54000003
 /********************************************************************/ 54700003
 /*                     VOLUME  LIST  EXTENSION                      */ 55400003
 /********************************************************************/ 56100003
    DECLARE                                                             57000003
*     1 CTGVLX BASED(ADDR(CTGVL))   /* VOLUME LIST EXTENSION         */ 60000003
*                BDY(WORD),         /* WORD BOUNDARY                 */ 63000003
*       5 *        CHAR(LENGTH(CTGVL)), /* VOLUME LIST BASE          */ 66000003
*       5 CTGVLTTR CHAR(3) CTGVL999 /* FORMAT 1 DSCB TTR             */ 69000003
./  ADD  SSI=50831006,NAME=IEZCTGWA
 /********************************************************************/ 03000003
 /*                                                                  */ 03100003
 /*   MACRO NAME = IEZCTGWA                                          */ 03200003
 /*                                                                  */ 03300003
 /*   DESCRIPTIVE NAME = VSAM CATALOG SCHEDULER WORKAREA             */ 03400003
 /*                                                                  */ 03500003
 /*   FUNCTION = MAPPING MACRO FOR THE VSAM CATALOG                  */ 03600003
 /*              SCHEDULER WORKAREA.                                 */ 03700003
 /*                                                                  */ 03800003
 /*   CONTROL BLOCK STRUCTURE = THE CTGWA IS POINTED TO BY THE       */ 03900003
 /*                             CTGPL (CTGWKA).                      */ 04000003
 /*                                                                  */ 04100003
 /*   INCLUDED MACROS = NONE                                         */ 04200003
 /*                                                                  */ 04300003
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 04400003
 /*                                                                  */ 04500003
 /*   STATUS = VS/2 RELEASE 3   (CHANGE FLAG @Y30SSXX)               */ 04600003
 /*                                                                  */ 04700003
 /*   DATE OF LAST CHANGE = 18 JUL 74                                */ 04800003
 /*                                                                  */ 04900003
 /********************************************************************/ 05000003
 %DECLARE (CTGWALEN, CTGWA999, CTGWALVL) CHAR;                          05100003
*%CTGWALEN = 'LENGTH(CTGWA)';       /* LENGTH OF CTGWA               */ 05200003
*%IF CTGWA999 ¬= ','                /* IF BLOCK NOT CONTINUED,       */ 15000003
*  %THEN %CTGWA999 = ';';           /*   THEN CLOSE DECLARE STMNT    */ 18000003
*%IF CTGWALVL  = ''                 /* IF BLOCK NOT CONCATENATED,    */ 21000003
*  %THEN %GOTO CTGWA001;            /*   THEN GENERATE DECLARE       */ 24000003
*%CTGWADUM = CTGWALVL||' CTGWA';    /* SET MINOR LEVEL NUMBER        */ 27000003
*   CTGWADUM                        /* CTGWA CONCATENATED LEVEL      */ 30000003
*%GOTO CTGWA002;                    /* SKIP DECLARE                  */ 33000003
*%CTGWA001:;                        /* DECLARE                       */ 36000003
    DECLARE                                                             37000003
*     1 CTGWA BASED(CTGWKA)         /* DECLARE CTGWA LEVEL ONE       */ 39000003
*%CTGWA002:;                        /* SKIP DECLARE                  */ 42000003
*               BDY(WORD),          /* WORD BOUNDARY                 */ 45000003
*       5 CTGWAVL  PTR(31),         /* VOLUME LIST ADDRESS           */ 48000003
*       5 CTGWALV  FIXED(15),       /* VOLUME LIST LENGTH            */ 51000003
*       5 CTGWAVCT FIXED(15),       /* NUMBER OF VOLUME ENTRIES IN   */ 54000003
*                                   /*   VOLUME LIST                 */ 57000003
*       5 CTGWAUCT FIXED(15),       /* MINIMUM UNIT COUNT            */ 60000003
*       5 CTGWAGCT FIXED(15),       /* COUNT OF GENERATIONS    Y02020*/ 60050003
*       5 CTGWAGB  PTR(31) CTGWA999 /* POINTER TO G0000V00     Y02020*/ 60100003
./  ADD  SSI=31400192,NAME=IFGJCICB
*                                                                       00050002
*        % GO TO CICBL1;                /*                              00060002
         MACRO                                                          00070002
         IFGJCICB                                                       00080002
IFGJCICB DSECT  ,                                                   */  00090002
*%CICBL1: ;                                                             00100002
* /******************************************************************/  00110002
* /*                                                                */  00120002
* /*       ***** COMPATIBILITY INTERFACE CONTROL BLOCK *****        */  00130002
* /*                                                                */  00140002
* /* OS/VS2 RELEASE 02, 01/22/73, LEVEL=1                           */  00150002
* /* MACCOMP Y-2 SC1DB/SJD48                                        */  00160002
* /* MACSTAT Y-2 73022/DC20762                                      */  00170002
* /*                                                                */  00180002
* /* METHOD OF ACCESS                                               */  00190002
* /*     PL/S- %INCLUDE SYSLIB(IFGJCICB)                            */  00200002
* /*           REG = DCBCICB                                        */  00210002
* /*           RESPECIFY IFGJCICB BASED (REG)                       */  00220002
* /*     BAL-  IFGJCICB   ....NO MACRO OPERANDS                     */  00230002
* /*           L     REG,DCBCICB                                    */  00240002
* /*           USING IFGJCICB,REG                                   */  00250002
* /*                                                                */  00260002
* /*       NOTE: REG IS ANY GENERAL REGISTER OTHER THAN ZERO.       */  00270002
* /*             CICB EXISTS FOR EACH DCB OPEN TO A SPOOLED         */  00280002
* /*             (SYSIN/SYSOUT) DATA SET.                           */  00290002
* /*                                                                */  00300002
* /* FUNCTION                                                       */  00310002
* /*     CONTAINS INTERNAL WORK AREAS AND CONTROL BLOCKS USED BY    */  00320002
* /*     SAM SUBSYSTEM INTERFACE TO PROVIDE COMPATIBLE MAPPING      */  00330002
* /*     OF SAM REQUESTS INTO EQUIVALENT JOB ENTRY SUBSYSTEM        */  00340002
* /*     REQUESTS FOR ACCESS TO SPOOLED DATA STREAMS.               */  00350002
* /*                                                                */  00360002
* /******************************************************************/  00370002
*                                                                       00400002
*        % GO TO CICBL2;                /*                              00450002
*                                                                       00460002
CIDUMIOB DS    0D        PSEUDO IOB - PROVIDES COMPATIBILITY            00470002
*                        WITH SAM USAGE. NOT USED BY SAM-SI.            00472002
CINXTIOB DS    A         POINTER TO NEXT IOB. ALWAYS INITIALIZED        00480002
*                        TO POINT TO ITSELF(IE LAST IN CHAIN).          00484002
CIECBCD  DS    XL4       PSEUDO ECB, ALWAYS MARKED 'POSTED'             00490002
CIIOB    DS    0F        START OF BASIC IOB SECTION                     00500002
         DS    XL4       NOT USED                                       00510002
CIECBPTR DS    A         ADDRESS OF THE PSEUDO ECB IN PREFIX            00520002
         DS    XL4       NOT USED                                       00530002
CIRESID  DS    F         RESIDUAL COUNT (CSW). SET PRIOR TO EACH        00540002
*                        ENTRY TO SYNAD.                                00542002
         DS    XL4       NOT USED                                       00550002
CIDCBPTR DS    A         ADDRESS OF THE DCB                             00560002
*---------------------------------------------------------------------* 00562002
CIACBD   DS    CL56      DATA ACB                                       00570002
CIACBED  DS    CL20      ACB EXTENSION                                  00580002
*---------------------------------------------------------------------* 00582002
CISYNNAM DS    CL8       MODULE NAME OF SYNAD EXECUTOR                  00590002
*---------------------------------------------------------------------* 00592002
CIREGSAV DS    0F        REGISTER SAVE AREA FOR SAM-SI                  00600002
         DS    F         FIRST WORD - NOT USED                          00610002
CIREGBC  DS    F         BACKWARD CHAIN POINTER (HSA)                   00620002
CIREGFC  DS    F         FORWARD CHAIN POINTER (LSA)                    00630002
CIREGS   DS    15F       REGISTERS - 14 THROUGH 12                      00640002
*---------------------------------------------------------------------* 00670002
CIFLAGS  DS    0BL4      SAM SUBSYSTEM INTERFACE FLAGS                  00680002
CIFLAG1  DS    B         RESERVED                                       00690002
CIFLAG2  DS    B         DCB DEFAULT FLAGS -                            00700002
CIFMDSOR EQU   X'80'      DSORG DEFAULTED IN DCB                        00710002
CIFMDEVT EQU   X'60'      DEVTYPE BEFORE OPEN                           00720002
CIFLAG3  DS    B         CONTROL FLAGS -                                00730002
CIFFSTP  EQU   X'80'      PUT LOCATE FIRST PASS COMPLETED               00740002
CIFCLOSE EQU   X'40'      CLOSE IS PROCESSING DCB                       00750002
CIFRAGM  EQU   X'20'      RECORD AREA OBTAINED FOR BSAM VS              00760002
CIFVSRI  EQU   X'10'      VS RECORD IS INCOMPLETE                       00770002
CIFVSEOB EQU   X'08'      END OF BLOCK FOR VBS RECORD                   00780002
CIFERROR EQU   X'04'      SYNAD ENTERED FOR ERROR                       00790002
CIFPOINT EQU   X'02'      INVALID POINT REQUEST                         00792002
CIFLAG4  DS    B         RESERVED                                       00800002
*---------------------------------------------------------------------* 00810002
CIRPL    DS    CL76      REQUEST PARAMETER LIST (RPL)                   00820002
CIRPLEXT DS    CL16      RPL EXTENSION                                  00830002
CIFDBCK  DS    CL20      FEEDBACK AREA FOR RPL                          00840002
*---------------------------------------------------------------------* 00842002
CILWAREA DS    F         WORK AREA FOR SPANNED RECORDS-                 00844002
*                         BSAM: SIZE OF RECORD AREA OBTAINED            00846002
*                         QSAM: RDW SAVE LOCATION                       00848002
CIIOCNT  DS    0F        I/O COUNT FOR BSAM BLOCKED RECORDS             00850002
CISEGLEN DS    F         SEGMENT LENGTH FOR SPANNED RECORDS             00860002
CIBLKPTR DS    A         BSAM SPANNED BLOCK CURRENT ADDRESS             00870002
CIRAREA  DS    A         ADDRESS OF SPANNED RECORD AREA                 00890002
CIRECPTR DS    A         SPANNED RECORD POINTER-                        00900002
*                         BSAM: CURRENT LOCATION IN RECORD AREA         00902002
*                         QSAM: ADDRESS OF SPANNED SEGMENT              00904002
CISAMWA  DS    F         SAM-SI WORK AREA                               00910002
CIWK1    DS    F         SAM-SI WORK AREA                               00920002
CIWK2    DS    F         SAM-SI WORK AREA                               00930002
*---------------------------------------------------------------------* 00940002
CISVCLST DS    0F        SVC CONTROL EXIT LIST                          00950002
CISYNRC  DS    0XL1      SYNADAF RETURN CODE                            00960002
CISYNADA DS    A         SYNADAF SUBROUTINE ADDRESS                     00970002
CIBLDLRC DS    0XL1      BLDL RETURN CODE                               00980002
CIBLDL   DS    A         BLDL SUBROUTINE ADDRESS                        00990002
CIBSPRC  DS    0XL1      BSP RETURN CODE                                01000002
CIBSP    DS    A         BSP SUBROUTINE ADDRESS                         01010002
CIFEOVRC DS    0XL1      FEOV RETURN CODE                               01020002
CIFEOV   DS    A         FEOV SUBROUTINE ADDRESS                        01030002
CISTOWRC DS    0XL1      STOW RETURN CODE                               01040002
CISTOW   DS    A         STOW SUBROUTINE ADDRESS                        01050002
         SPACE                                                          01060002
**********************************************************************  01100002
*                      END OF IFGJCICB                               *  01150002
**********************************************************************  01200002
         MEND  ,                                                    */  01250002
*%CICBL2: ;                                                             01700002
*       DCL  1  IFGJCICB BDY (DWORD) BASED, /* JCICB DEFINITION      */ 01750002
*              2 CIDUMIOB,                  /* PSEUDO IOB            */ 01760002
*                                                                       01800002
*              /* TO PROVIDE COMPATIBILITY WITH SAM USAGE,THE FIRST     01810002
*                 SECTION OF THE CICB CONTAINS A DUMMY IOB.  THE        01820002
*                 IOB IS PROVIDED WITH A POSTED ECB AND THE CHAIN       01830002
*                 FIELD POINTING TO ITSELF. THE CSW RESIDUAL COUNT      01840002
*                 IS SET PRIOR TO ENTRY TO USER'S SYNAD ROUTINE.     */ 01842002
*                                                                       01844002
*                3 CINXTIOB  PTR   (31),    /* PREFIX-NEXT IOB       */ 01900002
*                3 CIECBCD   CHAR  (01),    /* PREFIX-ECB CODE       */ 01950002
*                3 *         CHAR  (03),    /* PREFIX-NOT USED       */ 01952002
*                3 CIIOB     CHAR  (04),    /* START BASIC IOB       */ 01954002
*                3 CIECBPTR  PTR   (31),    /* ADDR OF ECB           */ 01960002
*                3 *         CHAR  (04),    /* NOT USED              */ 01970002
*                3 CIRESID   PTR   (31),    /* RESIDUAL COUNT        */ 01980002
*                3 *         CHAR  (04),    /* NOT USED              */ 01990002
*                3 CIDCBPTR  PTR   (31),    /* ADDR OF DCB           */ 02000002
*                                                                       02010002
*              2 CIACBD      CHAR  (56),    /* DATA ACB             */  02050000
*              2 CIACBED     CHAR  (20),    /* ACB EXTENSION        */  02100000
*              2 CISYNNAM    CHAR  (08)     /* SYNAD MODULE NAME    */  02200000
*                            BDY (WORD),                                02250000
*              2 CIREGSAV              ,    /* REGISTER SAVE AREA   */  02750000
*               3 *          PTR   (31),    /* NOT USED             */  02800000
*               3 CIREGBC    PTR   (31),    /* BACKCHAIN PTR        */  02850000
*               3 CIREGFC    PTR   (31),    /* FORWARD CHAIN PTR    */  02900000
*               3 CIREGS     CHAR  (60),    /* REGISTERS 14-12      */  02950002
*              2 CIFLAGS     BIT   (32),    /* SAM-SI FLAGS          */ 03100002
*                3 CIFLAG1   BIT   (08),    /* RESERVED              */ 03150002
*                3 CIFLAG2   BIT   (08),    /* DCB DEFAULT FLAGS     */ 03550002
*                  4 CIFMDSOR BIT  (01),    /* DATA SET ORGANIZATION */ 03600002
*                  4 CIFMDEVT BIT  (02),    /* DEVTYPE BEFORE OPEN   */ 03650002
*                  4 *        BIT  (05),    /* RESERVED              */ 03660002
*                3 CIFLAG3   BIT   (08),    /* CONTROL FLAGS         */ 03700002
*                  4 CIFFSTP   BIT (01),    /* PUT LOCATE - 1ST PASS */ 03750002
*                  4 CIFCLOSE  BIT (01),    /* CLOSE IS PROCESSING   */ 03800002
*                  4 CIFRAGM   BIT (01),    /* RCD AREA/GETMAIN FLAG */ 03850002
*                  4 CIFVSRI   BIT (01),    /* VS RECORD INCOMPLETE  */ 03900002
*                  4 CIFVSEOB  BIT (01),    /* VBS END OF BLOCK      */ 03950002
*                  4 CIFERROR  BIT (01),    /* SYNAD ENTERED FLAG    */ 04000002
*                  4 CIFPOINT  BIT (01),    /* INVALID POINT REQUEST */ 04010002
*                  4 *         BIT (01),    /* RESERVED              */ 04020002
*                3 CIFLAG4   BIT   (08),    /* NOT USED              */ 04050002
*              2 CIRPL       CHAR  (76),    /* REQUEST PARAMETER LST*/  04100000
*              2 CIRPLEXT    CHAR  (16),    /* RPL EXTENSION        */  04150000
*              2 CIFDBCK     CHAR  (20),    /* FEEDBACK AREA FOR RPL*/  04200000
*              2 CILWAREA    PTR   (31),    /* SAVE AREA FOR  XO1942*/  04250002
*                                           /* SPANNED RECORD USE   */  04300002
*                                           /* QSAM: RDW SAVE AREA  */  04350002
*                                           /* BSAM: REC AREA SIZE  */  04400002
*              2 CIIOCNT     PTR   (31),    /* I/O COUNT FOR BSAM       04450002
*                                              BLOCKED RECORDS.      */ 04460002
*               3 CISEGLEN   PTR   (31),    /* SPANNED RECORD SEGMT     04500000
*                                              LENGTH                */ 04550002
*              2 CIBLKPTR    PTR   (31),    /* SPANNED RECORD BLOCK     04600000
*                                              POINTER               */ 04650002
*              2 CIRAREA     PTR   (31),    /* SPANNED RECORD AREA   */ 04800002
*              2 CIRECPTR    PTR   (31),    /* SPANNED RECORD PTR-      04850002
*                                              BSAM:LOC IN REC AREA     04852002
*                                              QSAM:ADDR OF SEGMENT  */ 04854002
*              2 CISAMWA     PTR   (31),    /* CI WORK AREA         */  04860002
*              2 CIWK1       PTR   (31),    /* CI WORK AREA         */  04900000
*              2 CIWK2       PTR   (31),    /* CI WORK AREA         */  04950000
*              2 CISVCLST              ,    /* SVC CONTROL EXIT LIST*/  05000000
*               3 CISYNADA   PTR   (31),    /* SYNADAF EXIT         */  05050000
*                4 CISYNRC   BIT   (08),    /* SYNADAF RETURN CODE  */  05100000
*               3 CIBLDL     PTR   (31),    /* BLDL EXIT            */  05150000
*                4 CIBLDLRC  BIT   (08),    /* BLDL RETURN CODE     */  05200000
*               3 CIBSP      PTR   (31),    /* BSP EXIT             */  05250000
*                4 CIBSPRC   BIT   (08),    /* BSP RETURN CODE      */  05300000
*               3 CIFEOV     PTR   (31),    /* FEOV EXIT            */  05350000
*                4 CIFEOVRC  BIT   (08),    /* FEOV RETURN CODE     */  05400000
*               3 CISTOW     PTR   (31),    /* STOW EXIT            */  05450000
*                4 CISTOWRC  BIT   (08);    /* STOW RETURN CODE     */  05500000
* /*                                                                */  05550000
*        %DCL  ON            CHAR,          /* SWITCH SET ON        */  05600000
*              OFF           CHAR,          /* SWITCH SET OFF       */  05650000
*              CIFDMASK      CHAR,                                      05700000
*              CIFMDVDA      CHAR,                                      05750000
*              CIFMDVUR      CHAR,                                      05800000
*              CIFMDVNL      CHAR;                                      05850000
* /*                                                                */  05900000
*        %ON  = '''1''B';                                               05950000
*        %OFF = '''0''B';                                               06000000
*        %CIFDMASK = '''01100000''B';       /* DEVTYPE SPECIFIED    */  06050000
*        %CIFMDVDA = '''01''B';             /* DIRECT ACCESS        */  06100000
*        %CIFMDVUR = '''10''B';             /* UNIT RECORD          */  06150000
*        %CIFMDVNL = '''00''B';             /* NONE SPECIFIED       */  06200000
* /******************************************************************/  06250000
* /*                                                                */  06300000
* /*     END OF IFGJCICB                                            */  06350000
* /*                                                                */  06400000
* /******************************************************************/  06450000
./  ADD  SSI=53220554,NAME=IFGSDCB
* /*                                                                */  00050000
* /*                                                                */  00100000
* /******************************************************************/  00150000
* /*                                                                */  00200000
* /*                           SAM DCB                              */  00250000
* /*                                                                */  00300000
* /******************************************************************/  00350000
* /*                                                                */  00400000
* /*     CHANGE LEVEL = 16                                          */  00450001
* /*     DATE OF LAST CHANGE = 24 OCTOBER 75 ( 75*297 )             */  00500003
* /*     VS2 REL 030 CHANGES                                        */  00510003
* /*     C010500,025500,035000                              @ZA07578*/  00520003
* /*     C036000,036500,037000,037500                       @ZA05626*/  00530003
* /*                                                                */  00550000
* /* IFGSDCB (SAM DATA CONTROL BLOCK) DECLARATION                   */  00600000
* /*                                                                */  00650000
* /*                                                                */  00700000
*        DCL 1 IFGSDCB BASED,           /* SAM DCB DEFINITION       */  00750000
* /*                                                                */  00800000
*              2 *           CHAR  (16),    /* NOT USED BY JES-CI   */  00850000
*              2 *           FIXED (31),    /* NOT USED BY JES-CI   */  00900000
*              2 DCBBUFCB    PTR   (31),    /* BUFFER CONTROL BLOCK */  00950000
*               3 DCBBUFNO   PTR   (08),    /* NUMBER OF BUFFERS    */  01000000
*              2 DCBBUFL     FIXED (16),    /* BUFFER LNGTH @ZA07578*/  01050003
*              2 DCBDSORG    BIT   (16),    /* DATA SET ORGANIZATION*/  01100000
*              2 DCBIOBAD    PTR   (31),    /* IOB ADDR             */  01150000
*               3 DCBSVCXL   PTR   (31),    /* SVC EXIT LIST ADDR   */  01160001
*              2 *           BIT   (08),    /* NOT DEFINED          */  01200000
*               3 DCBHIARC   BIT   (08),    /* STORAGE HIERARCHY    */  01250000
*                4 DCBBFTEK  BIT   (08),    /* BUFFERING TECHNIQUE  */  01300000
*                 5 DCBBFALN BIT   (08),    /* BUFFER ALIGNMENT     */  01350000
*              2 DCBEODAD    PTR   (24),    /* END OF DATA EXIT ADDR*/  01400000
*              2 DCBRECFM    BIT   (08),    /* RECORD FORMAT        */  01450000
*              2 DCBEXLST    PTR   (24),    /* EXIT LIST ADDR       */  01500000
*              2 DCBDDNAM    CHAR(8)BDY(WORD), /* DDNAME FOR DCB    */  01550000
*               3 DCBTIOT    FIXED (15),    /* TIOT OFFSET          */  01600000
*               3 DCBMACRF   BIT   (16),    /* MACRO FORM           */  01650000
*               3 DCBIFLGS   BIT   (08),    /* I/O FLAGS            */  01700000
*               3 DCBDEBAD   PTR   (24),    /* DEB ADDRESS          */  01750000
*              2 DCBOFLGS    BIT   (08),    /* OPEN FLAGS           */  01800000
*              2 DCBREAD     PTR   (24),    /* ADDR OF READ MODULE  */  01850000
*               3 DCBWRITE   PTR   (24),    /* ADDR OF WRITE MODULE */  01900000
*                4 DCBGET    PTR   (24),    /* ADDR OF GET MODULE   */  01950000
*                 5 DCBPUT   PTR   (24),    /* ADDR OF PUT MODULE   */  02000000
*                  6 DCBIFLG BIT   (08),    /* IOS ERROR FLAGS      */  02050000
*                  6 DCBMACR BIT   (16),    /* MACRO FORM           */  02100000
*              2 DCBOPTCD    BIT   (08),    /* OPTION CODES         */  02150000
*              2 DCBCHECK    PTR   (24),    /* ADDR OF CHECK MODULE */  02200000
*               3 DCBGERR    PTR   (24),    /* ADDR OF GET SYNCH RTN*/  02250000
*                4 DCBPERR   PTR   (24),    /* ADDR OF PUT SYNCH RTN*/  02300000
*              2 DCBIOBL     BIT   (08),    /* IOB LENGTH IN DBL WDS*/  02350000
*              2 DCBSYNAD    PTR   (24),    /* ADDR OF ERROR ROUTINE*/  02400000
*              2 DCBCIND1    BIT   (08),    /* CONDITION INDICATOR  */  02450000
*              2 DCBCIND2    BIT   (08),    /* CONDITION INDICATOR  */  02500000
*              2 DCBBLKSI    FIXED (16),    /* MAX BLK SIZE @ZA07578*/  02550003
*              2 DCBWCPO     PTR   (08),    /* WCP OFFSET FROM IOB  */  02600000
*              2 DCBWCPL     PTR   (08),    /* LENGTH OF WCP        */  02650000
*              2 DCBOFFSR    PTR   (08),    /* OFFSET OF READ CCW   */  02700000
*              2 DCBOFFSW    PTR   (08),    /* OFFSET OF WRITE CCW  */  02750000
*              2 DCBIOBA     PTR   (31),    /* ADDR OF BSAM OR QSAM     02800000
*                                              OR BPAM IOB PREFIX   */  02850000
*               3 DCBCICB    PTR   (31),    /* ADDRESS OF JCICB     */  02860001
*              2 DCBEOBAD    PTR   (31),    /* END OF BUFFER ADDRESS*/  02900000
*               3 DCBLCCW    PTR   (31),    /* ADDRESS OF LAST CCW  */  02950000
*                4 DCBEOBR   PTR   (31),    /* ADDR OF EOB MODULE   */  03000000
*                  5 DCBNCP  PTR   (08),    /* NUMBER OF CHANNEL PGM*/  03100001
*              2 *           FIXED (31),    /* NOT DEFINED          */  03150000
*               3 DCBEOBW    PTR   (31),    /* ADDR OF EOB MODULE   */  03200000
*                4 DCBRECAD  PTR   (31),    /* ADDR OF LOGICAL RCD  */  03250000
*                 5 DCBCCCW  PTR   (31),    /* ADDR OF CCW          */  03300000
*              2 DCBDIRCT    FIXED (15),    /* BPAM DIRECTORY COUNT */  03400000
*               3 DCBQSWS    BIT   (08),    /* FLAGS                */  03450000
*              2 DCBLRECL    FIXED (16),    /* LRECL        @ZA07578*/  03500003
*              2 *           FIXED (31),    /* NOT DEFINED          */  03550000
*               3 DCBEROPT   BIT   (08),    /* ERROR OPTIONS@ZA05626*/  03600003
*               3 DCBCNTRL   PTR   (24),    /* ADDR OF CNTRL@ZA05626*/  03650003
*                4 DCBNOTE   PTR   (24),    /* ADDR OF NOTE @ZA05626*/  03700003
*                 5 DCBPOINT PTR   (24),    /* ADDR OF POINT@ZA05626*/  03750003
*              2 *           CHAR  (02),    /* RESERVED             */  03800000
*              2 DCBPRECL    FIXED (15),    /* PHYSICAL RECORD LNGTH*/  03850000
*              2 DCBEOB      PTR   (31);    /* ADDR OF EOB MODULE   */  03900000
* /*                                                                */  03950000
* /*  MACRO VARIABLES FOR THE SAM DCB                               */  04000000
*        %DCL  DCBMGET       CHAR,          /* QSAM GET             */  04050000
*              DCBMPUT       CHAR,          /* QSAM PUT             */  04100000
*              DCBOPEN       CHAR,          /* DCB IS OPEN          */  04150000
*              DCBNOPEN      CHAR,          /* DCB IS NOT OPEN      */  04200000
*              DCBNBUSY      CHAR,          /* DCB IS NOT BUSY      */  04250000
*              DCBNLOCK      CHAR,          /* DCB IS NOT LOCKED    */  04300000
*              DCBINPUT      CHAR,          /* SAM READ OR GET      */  04350000
*              DCBOUTPT      CHAR,          /* SAM WRITE OR PUT     */  04400000
*              DCBMREAD      CHAR,          /* BSAM READ            */  04450000
*              DCBMGLOC      CHAR,          /* GET LOCATE MODE      */  04500000
*              DCBMGMOV      CHAR,          /* GET MOVE MODE        */  04550000
*              DCBMPLOC      CHAR,          /* PUT LOCATE MODE      */  04600000
*              DCBMPMOV      CHAR,          /* PUT MOVE MODE        */  04650000
*              DCBMPSUB      CHAR,          /*                      */  04700000
*              DCBMGSUB      CHAR,          /*                      */  04750000
*              DCBQSLOC      CHAR,          /* QSAM LOCATE MODE     */  04800000
*              DCBQSMOV      CHAR,          /* QSAM MOVE MODE       */  04850000
*              DCBCINCI      CHAR,          /* CI MODE              */  04900000
*              DCBCINNC      CHAR,          /* NOT CI MODE          */  04950000
*              DCBRECB       CHAR,          /* BLOCKED RECORDS      */  05000000
*              DCBRECF       CHAR,          /* RECFM=FIXED          */  05050000
*              DCBRECU       CHAR,          /* RECFM=UNDEFINED      */  05100000
*              DCBRECV       CHAR,          /* RECFM=VARIABLE       */  05150000
*              DCBRECS       CHAR,          /* RECFM=SPANNED        */  05200000
*              DCBMWRIT      CHAR,          /* BSAM WRITE           */  05250000
*              DCBSKIP       CHAR;          /* SKIP ERROR OPTION TST*/  05300000
*                                                                       05350000
          /* MACRO ASSIGNMENTS FOR THE SAM DCB                      */  05400000
          %DCBMGET  = 'DCBMACRF(2)   = ''1''B';                         05450000
          %DCBMPUT  = 'DCBMACRF(10)  = ''1''B';                         05500000
          %DCBOPEN  = 'DCBOFLGS(4)   = ''1''B';                         05550000
          %DCBNOPEN = 'DCBOFLGS(4)   = ''0''B';                         05600000
          %DCBNBUSY = 'DCBOFLGS(8)   = ''0''B';                         05650000
          %DCBNLOCK = 'DCBOFLGS(7)   = ''1''B';                         05700000
          %DCBINPUT = 'DCBMREAD OR DCBMGET';                            05750000
          %DCBOUTPT = 'DCBMWRIT OR DCBMPUT';                            05800000
          %DCBMREAD = 'DCBMACRF(3)   = ''1''B';                         05850000
          %DCBMWRIT = 'DCBMACRF(11)  = ''1''B';                         05900000
          %DCBMGLOC = 'DCBMACRF(5)   = ''1''B';                         05950000
          %DCBMGMOV = 'DCBMACRF(4)   = ''1''B';                         06000000
          %DCBMPMOV = 'DCBMACRF(12)  = ''1''B';                         06050000
          %DCBMPLOC = 'DCBMACRF(13)  = ''1''B';                         06100000
          %DCBMPSUB = 'DCBMACRF(14)  = ''1''B';                         06150000
          %DCBMGSUB = 'DCBMACRF(6)   = ''1''B';                         06200000
          %DCBQSLOC = 'DCBMGLOC OR DCBMPLOC';                           06250000
          %DCBQSMOV = 'DCBMGMOV OR DCBMPMOV';                           06300000
          %DCBCINCI = 'DCBCIND1(5)   = ''1''B';                         06350000
          %DCBCINNC = 'DCBCIND1(5)   = ''0''B';                         06400000
          %DCBRECB  = 'DCBRECFM(4)   = ''1''B';                         06450000
          %DCBRECF  = 'DCBRECFM(1:2) = ''10''B';                        06500000
          %DCBRECU  = 'DCBRECFM(1:2) = ''11''B';                        06550000
          %DCBRECV  = 'DCBRECFM(1:2) = ''01''B';                        06600000
          %DCBRECS  = 'DCBRECFM(5)   = ''1''B';                         06650000
          %DCBSKIP  = 'DCBEROPT(2)   = ''1''B';                         06700000
* /******************************************************************/  06750000
* /*                                                                */  06800000
* /*            END OF IFGSDCB                                      */  06850000
* /*                                                                */  06900000
* /******************************************************************/  06950000
./  ADD  SSI=32020101,NAME=IGGBCB
*%;/*                                                                   00560002
         MACRO                                                          00600002
         IGGBCB    &TYPE=BOTH                                           01000002
.* /* START OF SPECIFICATIONS ****                                      01200002
.*                                                                      01250002
.*01  MODULE-NAME = IGGBCB                                              01300002
.*                                                                      01350002
.*01  COPYRIGHT = NONE                                                  01400002
.*                                                                      01450002
.*01  STATUS = CHANGE LEVEL 01                                          01460002
.*                                                                      01470002
.*01  DESCRIPTIVE-NAME = BUFFER CONTROL BLOCK FORMAT                    01492002
.*                                                                      01494002
.*01  FUNCTION = FORMATS THE SAM/DAM BUFFER CONTROL BLOCKS AND LRI      01496002
.*                                                                      01498002
.*01  NOTES = NONE                                                      01498402
.*                                                                      01498802
.*02    DEPENDENCIES = NA                                               01499202
.*                                                                      01499602
.*02    PERFORMANCE = NA                                                01499702
.*                                                                      01499802
.*02    RESTRICTIONS = NA                                               01499902
.*                                                                      01549902
.*02    REGISTER-CONVENTIONS = NA                                       01559902
.*                                                                      01569902
.*02    PATCH-LABEL = NA                                                01579902
.*                                                                      01589902
.*01  MODULE-TYPE = MACRO                                               01591902
.*                                                                      01597902
.*02  MACRO-SIZE =  NA                                                  01598302
.*                                                                      01598702
.*02  EXTERNAL-REFERENCES = NA                                          01599102
.*                                                                      01599502
.*01INNER-MACROS = NONE                                                 01599602
.*                                                                      01599702
.*01SYSTEM-MACROS = NONE                                                01599802
.*                                                                      01649802
.*01  CHANGE-ACTIVITY = SEE BELOW                                       01651802
.*                                                                      01653802
.*             VS2 RELEASE 2                                            01655802
.*                                                                      01659802
.**** END OF SPECIFICATIONS ***/                                        01669802
*/* MACCOMP Y-2 SC1D7/SJD48                                          */ 01679802
*/* MACSTAT Y-2 73122/021160                                         */ 01689802
*/********************************************************************/ 01699802
*/*THE BUFFER POOL CONTROL BLOCK DSECTS APPLY TO BOTH SAM AND BDAM   */ 02000002
*/*PROCESSING. TO GET THE MACRO EXPANSION FOR SAM DSECTS ONLY,INCLUDE*/ 02500002
*/*KEYWORDS 'TYPE=SAM' WITH THE MACRO CALL. IF THE  MACRO EXPANSION  */ 03000002
*/*FOR BDAM IS REQUIRED, INCLUDE KEYWORDS 'TYPE=DAM' WITH THE MACRO. */ 03500002
*/*FOR BOTH SETS OF DSECTS INCLUDE THE KEYWORDS 'TYPE=BOTH' WITH THE */ 04000002
*/*MACRO CALL. WHEN THE KEYWORDS ARE UNSPECIFIED,DEFAULT IS 'BOTH'.  */ 04500002
*/*THE BDAM EXPANSION OF THE MACRO PROVIDES DSECTS FOR A) BCB WHEN   */ 04510002
*/*ADDRESS SPACE = REAL AND DYNAMIC BUFFERING HAS BEEN SPECIFIED,    */ 04520002
*/*B) BCB WHEN ADDRESS SPACE = VIRTUAL AND DYNAMIC BUFFERING HAS     */ 04530002
*/*BEEN SPECIFIED, AND C) BCB FOR VARIABLE SPANNED RECORDS WHEN      */ 04540002
*/*DYNAMIC BUFFERING WAS NOT SPECIFIED.  THE SAM EXPANSION OF THE    */ 04542002
*/*MACRO PROVIDES A DSECT FOR THE STANDARD BCB AND THE USERS         */ 04544002
*/*LOGICAL RECORD INTERFACE AREA. THE PLS2 MACRO FORMATS A COMPLETE  */ 04546002
*/*SAM BCB AND LRI AND COMPLETE BDAM BCBS.                           */ 04548002
*/********************************************************************/ 05000002
*%GOTO BCBPLS1;                         /*                     Y02072*/ 05050002
         AIF   ('&TYPE' EQ 'DAM').DAM                                   05500002
*/********************************************************************/ 06000002
*/*THE FOLLOWING DSECT IS USED FOR SAM DATA SETS. THE DSECT IS FOR   */ 06500002
*/*MAPPING TO A BUFFER POOL CONTROL BLOCK.                           */ 07000002
*/********************************************************************/ 07500002
BCBLK    DSECT                                                          08000002
BCBBUFPT DS    0A                       SAME AS BCBBUFAD BELOW          08500002
         DS    X                        FILLER                          09000002
BCBBUFAD DS    AL3                      ADDRESS OF FIRST BUFFER         09500002
BCBFLGS  DS    B                        FLAG BYTE                       10000002
BCBLRI   EQU   X'80'                    LOG REC INTERFACE PRESENT       10500002
BCBEXTND EQU   X'40'                    BUFCB EXTENDED AREA PRESENT     11000002
BCBBUFNO DS    X                        NUMBER OF BUFFERS               11500002
BCBBUFSZ DS    H                        SIZE OF EACH BUFFER             12000002
BCBLRIAR DS    0A                       SAME AS BCBLRIAD BELOW          12500002
         DS    X                        FILLER                          13000002
BCBLRIAD DS    AL3                      ADDRESS OF LOG REC AREA         13500002
BCBPAD   DS    F                        PADDING FOR DBL WD ALLIGN       14000002
BCBNLN   EQU   8                        LENGTH OF NORMFAL BCB           14500002
BCBEXLN  EQU   8                        ADD TO GET TOTAL LENGTH IF      15000002
*                                       BCB EXTENDED                    15500002
*                                                                       16000002
* DSECT FOR REFERENCING USERS LOGICAL RECORD INTERFACE AREA IF PRESENT. 16500002
* THE DSECT IS USED ONLY FOR SAM DATA SETS.                             17000002
*                                                                       17500002
LRIAREA  DSECT                                                          18000002
LRILOC   DS    0D                       LOCATION OF LRI AREA            18500002
LRILGTH  DS    0A                       SAME AS LRILNGTH BELOW          19000002
LRIFLG1  DS    B                        FLAGS                           19500002
LRIEOD   EQU   X'80'                    END OF DATA REACHED             20000002
LRICOB   EQU   X'40'                    COBOL DATA SET                  20500002
LRIEOB   EQU   X'20'                    EOD AFTER FIRST END OF BLK      21000002
LRILNGTH DS    AL3                      LENGTH OF LRI AREA (LRECL + 32) 21500002
LRIFLAG2 DS    B                        FLAGS                           22000002
LRIRELSE EQU   X'40'                    RELEASE HAS BEEN ISSUED         22500002
LRISEG   EQU   X'10'                    SEGMENTING IN PROGRESS          23000002
LRINTSPN EQU   X'04'                    NON-SPANNED RECORD              23500002
LRIASSEM EQU   X'01'                    ASSEMBLING IN PROGRESS          24000002
LRIINDEX DS    X                        INDEX TO BEGINNING OF DATA      24500002
LRIPOS   DS    H                        POSITION OF RECORD IN BLOCK     25000002
LRITRKAD DS    0D                       TRACK ADDRESS OF BEGINNING      25500002
*                                         SEGMENT OF RECORD             26000002
LRIMBBCC DS    XL5                      MBBCC OF TRACK ADDR (NOT USED   26500002
*                                         IF DCB IS FOR OUTPUT)         27000002
LRIRECAD DS    XL3                      RECAD WHEN RECORD TO BE WRITTEN 27500002
*                                         REQUIRES SEGMENTATION         28000002
LRINIOB  DS    0A                       SAME AS LRINXIOB BELOW          28500002
         DS    X                        FILLER                          29000002
LRINXIOB DS    AL3                      NEXT IOB ADDRESS                29500002
LRICOUNT DS    XL2                      COUNT FIELD OF NUMBER OF BYTES  30000002
*                                         MOVED                         30500002
         DS    XL2                      FILLER                          31000002
LRIALIGN DS    0XL8                     FLOATING ALIGNMENT AREA         31500002
LRIDATA  DS    0C                       DATA                            32000002
*                                                                       32050002
* THE FOLLOWING DSECT IS FOR REFRENCING A BUFFER.                       32100002
*                                                                       32150002
BUFFER   DSECT                          BEGINNING OF BUFFER             32200002
BUFNXPTA DS    0F                       SAME AS BUFNXPTB BELOW          32250002
         DS    XL1                      FILLER                          32300002
BUFNXPTB DS    XL3                      ADDR OF NEXT BUFFER OR 0 IF     32350002
*                                         LAST BUFFER. (THIS FIELD      32400002
*                                         IS PART OF BUFFER AND THUS    32450002
*                                         GETS DESTROYED BY RECORDS)    32460002
BUFER    DS    C                        FIRST BYTE OF BUFFER AFTER      32470002
*                                         POINTER TO NEXT               32480002
.DAM     AIF   ('&TYPE' EQ 'SAM').MEND                                  32500002
*/********************************************************************/ 33000002
*/*THE FOLLOWING DSECT FORMATS A BDAM BUFFER POOL CONTROL BLOCK WHEN */ 33500002
*/*ADDRESS SPACE = REAL AND DYNAMIC BUFFERING HAS BEEN SPECIFIED AS  */ 34000002
*/*OPTION IN THE DCB.                                                */ 34500002
*/********************************************************************/ 35000002
BCBDEFR  DSECT                          BCB FOR BDAM ADDRSPAC=REAL      35500002
BCBIOBS  DS    0CL8                     IOB QUEUE PTRS--INITIALLY 0     36000002
BCBFRQT  DS    A                        ADDRESS OF FIRST IOB WAITING    36500002
*                                       FOR A BUFFER                    37000002
BCBFRQB  DS    A                        ADDRESS OF LAST IOB WAITING     37500002
*                                       FOR A BUFFER                    38000002
BCBNABFR DS    A                        ADDRESS OF THE NEXT AVAILABLE   38500002
*                                       BUFFER                          39000002
BCBTBRS  DS    F                        SIZE OF BCB AND BUFFER POOL     39500002
*                                       IN BYTES                        40000002
BCBLENTH EQU   *-BCBDEFR                SIZE OF BCB FOR REAL ADDRSPACE  40500002
*/********************************************************************/ 41000002
*/*THE FOLLOWING DSECT FORMATS A BDAM BUFFER POOL CONTROL BLOCK WHEN */ 41500002
*/*ADDRESS SPACE = VIRTUAL AND DYNAMIC BUFFERING HAS BEEN SPECIFIED  */ 42000002
*/*AS OPTION IN THE DCB.                                             */ 42500002
*/********************************************************************/ 43000002
BCBDEFV  DSECT                          BCB FOR BDAM ADDRSPACE=VIRTUAL  43500002
BCBBUF1  DS    A                        ADDRESS OF FIRST BUFFER IN POOL 44000002
BCBBUFL  DS    F                        LENGTH OF EACH BUFFER, IN BYTES 44500002
BCBBFAVL DS    FL1                      BUFFER NUMBER OF FIRST AVAIL-   45000002
*                                       ABLE BUFFER                     45500002
BCBRAOFS DS    FL3                      OFFSET OF RECORD AREA IN BUFFER 46000002
*                                       (VARIABLE SPANNED ONLY)         46500002
BCBTBRS1 DS    F                        SIZE OF BCB (+ SUFFIX) BUFFER   47000002
*                                       POOL, AND 1ST UNSCHEDULED LIST  47500002
BCBSUFFX DS    0F                       BUFFER SUFFIX, 1 BYTE/BUFFER,   48000002
*                                       USED AS AVAILABLE CHAIN         48500002
BCBLNTHV EQU   *-BCBDEFV                SIZE OF BCB FOR VIRTUAL ADDRSP  49000002
*/********************************************************************/ 49500002
*/*THE FOLLOWING DSECT FORMATS A BDAM BUFFER POOL CONTROL BLOCK WHEN */ 50000002
*/*VARIABLE SPANNED RECORDS WAS SPECIFIED AND DYNAMIC BUFFERING WAS  */ 50500002
*/*NOT SPECIFIED.  ITS ADDRESS IS STORED IN DCBDYNB.                 */ 51000002
*/********************************************************************/ 51500002
BCBDEFS  DSECT                          BCB FOR SPANNED,NO DYN BUF      52000002
BCBNXBUF DS    F                        ADDRESS OF NEXT AVAILABLE       52500002
*                                       BUFFER (SEGMENT WORKAREA)       53000002
BCBFLAG  EQU   BCBNXBUF                 FLAG INDICATING IF THIS         53500002
*                                       BUFFER (SWA) IS IN USE          54000002
BUFINUSE EQU   X'FF'                    BUFFER (SWA) IS BEING USED      54500002
BUFAVAIL EQU   X'00'                    BUFFER (SWA) IS AVAILABLE       55000002
BCBBFNUM DS    H                        NUMBER OF BUFFERS (SWA)         55500002
BCBBFLG  DS    H                        BUFFER LENGTH                   56000002
BCBLNTHS EQU   *-BCBDEFS                LENGTH OF THIS BUFFER CNTRL BLK 56500002
.MEND    MEND                                                           57000002
*%BCBPLS1: ;                            /*                     Y02072*/ 57050002
*/*                                                            Y02072*/ 57100002
*/*THE FOLLOWING STRUCTURE IS USED FOR SAM DATA SETS. THE      Y02072*/ 57150002
*/*STRUCTURE IS USED FOR MAPPING TO A BUFFER POOL CONTROL BLK. Y02072*/ 57200002
*/*                                                            Y02072*/ 57250002
*DCL 1 BCBLK CHAR(16) BDY(WORD) BASED,  /*BCB FOR SAM          Y02072*/ 57300002
*      2 BCBBUFPT PTR(31),              /*SAME AS BCBBUFAD     Y02072*/ 57350002
*        3 * CHAR(1),                   /*FILLER               Y02072*/ 57400002
*        3 BCBBUFAD PTR(24),            /*ADDR OF FIRST BUFFER Y02072*/ 57450002
*      2 BCBFLGS BIT(8),                /*FLAG BYTE            Y02072*/ 57500002
*        3 BCBLRI BIT(1),               /*LOG REC INTER PRES   Y02072*/ 57550002
*        3 BCBEXTND BIT(1),             /*BUFCB EXTENDED AREA  Y02072   57600002
*                                           PRESENT            Y02072*/ 57650002
*      2 BCBBUFNO CHAR(1),              /*NUMBER OF BUFFERS    Y02072*/ 57700002
*      2 BCBBUFSZ CHAR(2),              /*SIZE OF EACH BUFFER  Y02072*/ 57750002
*      2 BCBLRIAR PTR(31),              /*SAME AS BCBLRIAD     Y02072*/ 57800002
*        3 * CHAR(1),                   /*FILLER               Y02072*/ 57850002
*        3 BCBLRIAD PTR(24),            /*ADDR OF LOG REC AREA Y02072*/ 57900002
*      2 BCBPAD CHAR(4);                /*PADD TO DBL WD LEN   Y02072*/ 57950002
*DCL  BCBNLN CONSTANT (8);              /*LEN OF NORMAL BCB    Y02072*/ 58000002
*DCL  BCBEXLN CONSTANT (8);             /*ADD TO GET TOTAL LEN Y02072   58050002
*                                           IF BCB EXTENDED    Y02072*/ 58100002
*/*                                                            Y02072*/ 58150002
*/*STRUCTURE FOR REFERENCING USER LOGICAL RECORD INTERFACE ARE Y02072*/ 58200002
*/*IF PRESENT. THE STRUCTURE IS USED ONLY FOR SAM DATA SETS.   Y02072*/ 58250002
*/*                                                            Y02072*/ 58300002
*DCL 1 LRIAREA CHAR(24) BDY(DWORD) BASED,  /*LRI AREA          Y02072*/ 58350002
*      2 LRILOC CHAR(8),                /*LOC OF LRI AREA      Y02072*/ 58400002
*        3 LRILGTH CHAR(4),             /*SAME AS LRILNGTH     Y02072*/ 58450002
*          4 LRIFLG1 BIT(8),            /*FLAG BYTE 1          Y02072*/ 58500002
*            5 LRIEOD BIT(1),           /*END OF DATA REACHED  Y02072*/ 58550002
*            5 LRICOD BIT(1),           /*COBOL DATA SET       Y02072*/ 58600002
*            5 LRIEOB BIT(1),           /*EOB AFTER FIRST EOB  Y02072*/ 58650002
*          4 LRILNGTH CHAR(3),          /*LEN OF LRI AREA      Y02072   58700002
*                                           (LRECL + 32)       Y02072*/ 58750002
*        3 LRIFLG2 BIT(8),              /*FLAG BYTE 2          Y02072*/ 58800002
*          4 * BIT(1),                  /*NOT USED             Y02072*/ 58850002
*          4 LRIRELSE BIT(1),           /*RELE HAS BEEN ISSUED Y02072*/ 58900002
*          4 * BIT(1),                  /*NOT USED             Y02072*/ 58950002
*          4 LRISEG BIT(1),             /*SEGMENTING IN PROG   Y02072*/ 59000002
*          4 * BIT(1),                  /*NOT USED             Y02072*/ 59050002
*          4 LRINTSPN BIT(1),           /*NON-SPAN RECS        Y02072*/ 59100002
*          4 * BIT(1),                  /*NOT USED             Y02072*/ 59150002
*          4 LRIASSEM BIT(1),           /*ASSEMBLING IN PROG   Y02072*/ 59200002
*        3 LRIINDEX CHAR(1),            /*INDEX TO BEG OF DATA Y02072*/ 59250002
*        3 LRIPOS CHAR(2),              /*POS OF REC IN BLK    Y02072*/ 59300002
*      2 LRITRKAD CHAR(8),              /*TRK ADDR OF BEG      Y02072   59350002
*                                           SEGMENT OF REC     Y02072*/ 59400002
*        3 LRIMBBCC CHAR(5),            /*MBBCC OF TRK ADDR    Y02072   59450002
*                                           (NOT IF DCB IS     Y02072   59500002
*                                           FOR OUTPUT)        Y02072*/ 59550002
*        3 LRIRECAD CHAR(3),            /*RECAD WHEN REC TO BE Y02072   59600002
*                                           WRITTEN REQUIRES   Y02072   59650002
*                                           SEGMENTATION       Y02072*/ 59700002
*      2 LRINIOB PTR(31),               /*SAME AS LRINXIOB     Y02072*/ 59750002
*        3 * CHAR(1),                   /*FILLER               Y02072*/ 59800002
*        3 LRINXIOB PTR(24),            /*NEXT IOB ADDR        Y02072*/ 59850002
*      2 LRICOUNT CHAR(2),              /*COUNT FIELD OF NUM OFY02072   59900002
*                                           BYTES MOVED        Y02072*/ 59950002
*      2 * CHAR(2);                     /*NOT USED             Y02072*/ 60000002
*/*                                                            Y02072*/ 60050002
*/*STRUCTURE USED FOR REFERENCING THE USERS FLOATING ALIGNMENT Y02072*/ 60100002
*/*AREA.                                                       Y02072*/ 60150002
*/*                                                            Y02072*/ 60200002
*DCL 1 LRIALIGN BDY(WORD) BASED,        /*FLOATING ALIGN AREA  Y02072*/ 60250002
*      2 LRIDATA CHAR;                  /*DATA                 Y02072*/ 60300002
*/*                                                                  */ 60310002
*/*THE FOLLOWING STRUCTURES ARE USED FOR REFRENCING BUFFERS.         */ 60322002
*/*                                                                  */ 60330002
*DCL BUFFER CHAR(*) BDY(WORD) BASED;    /*BEGINNING OF BUFFER        */ 60340002
*/*                                                                  */ 60342002
*DCL 1 BUFNXPTA PTR(31) BDY(WORD) DEF(BUFFER),  /*NEXT BUFFER POINTER*/ 60344002
*      2 * FIXED(8),                    /*FILLER                     */ 60346002
*      2 BUFNXPTB PTR(24);              /*NEXT BUFFER POINTER. (VALID*/ 60348002
*                                       /* ONLY UNTIL FIRST RECORD   */ 60348402
*                                       /* IS MOVED INTO BUFFER).    */ 60348802
*/*                                                                  */ 60350002
*/*STRUCTURE FOR A BDAM BUFFER POOL CONTROL BLOCK WHEN ADDRESS       */ 60400002
*/*SPACE = VIRTUAL AND DYNAMIC BUFFERING HAS BEEN SPECIFIED.         */ 60450002
*/*                                                                  */ 60500002
*DCL 1 BCBDEFV CHAR(16) BDY(WORD) BASED, /* BCB FOR ADDRSPACE=VIRTUAL*/ 60550002
*      2 BCBBUF1 PTR(31),               /* ADDR OF FIRST BUFFER      */ 60600002
*      2 BCBBUFL FIXED(31),             /* LENGTH OF EACH BUFFER     */ 60650002
*      2 BCBBFAVL FIXED(8),             /* BUFF NO OF 1ST AVAIL BUF  */ 60700002
*      2 BCBRAOFS FIXED(24),            /* OFFSET OF RECORD AREA     */ 60750002
*      2 BCBTBRS1 FIXED(31);            /* SIZE OF BCB,SUFFX,BUF POOL*/ 60800002
*/*                                                                  */ 60850002
*/*STRUCTURE FOR A BDAM BUFFER POOL CONTROL BLOCK WHEN ADDRESS       */ 60900002
*/*SPACE = REAL AND DYNAMIC BUFFERING HAS BEEN SPECIFIED.            */ 60950002
*/*                                                                  */ 61000002
*DCL 1 BCBDEFR CHAR(16) BDY(WORD) BASED,  /* BCB - BDAM REAL ADRSPACE*/ 61050002
*      2 BCBIOBS CHAR(8) BDY(WORD),     /* IOB QUEUE PTR-1ST & LAST  */ 61100002
*        3 BCBFRQT PTR(31),             /* 1ST IOB WAITING FOR BUFFER*/ 61150002
*        3 BCBFRQB PTR(31),             /* LAST IOB WAITING FOR BUFR */ 61200002
*      2 BCBNABFR PTR(31),              /* NEXT AVAILABLE BUF ADDRESS*/ 61250002
*      2 BCBTBRS FIXED(31);             /* SIZE OF BCB & BUFFER POOL */ 61300002
*/*                                                                  */ 61350002
*/*STRUCTURE FOR A BDAM BUFFER POOL CONTROL BLOCK FOR VARIABLE       */ 61400002
*/*SPANNED RECORDS (N0N-DYNAMIC BUFFERING). ADDRESS IS STORED IN     */ 61450002
*/*DCBDYNB.                                                          */ 61500002
*/*                                                                  */ 61550002
*DCL 1 BCBDEFS CHAR(8) BASED,           /* BCB FOR SPANNED, NO DYNBUF*/ 61600002
*      2 BCBNXBUF CHAR(4),              /* ADDR OF NEXT AVAIL BUFFER */ 61650002
*      2 BCBBFNUM CHAR(2),              /* NUMBER OF BUFFERS         */ 61700002
*      2 BCBBFLG CHAR(2);               /* BUFFER LENGTH             */ 61750002
./  ADD  SSI=31321026,NAME=IGGBISAM
         MACRO                                                          02000020
&NAME    IGGBISAM &OPTCD=                                               04000020
         GBLB   &CPOPS                                                  06000020
         GBLC  &LIB                                                     06000800
*    01/05/73          LEVEL=01                                         06000902
.*         RELEASE OS/VS2-02 DELETIONS/CHANGES                          06001002
         AIF    (&CPOPS).NOCPOPS                                        06010020
&CPOPS   SETB   1                                                       06020020
         IGGCPOPS                                                       06030020
.NOCPOPS ANOP                                                           06040020
&NAME    DSECT                                                          06050020
DCWFCP4  DS    A                        ADDRESS FIRST AVAILABLE CP4-5-6 08000020
DCWFCP7  DS    A                        ADDRESS FIRST AVAILABLE CP7     10000020
DCWNUCPS DS    CL1                      NO. UNSCHED IOBS FOR HI LVL IX  12000020
DCWNUCP4 DS    CL1                      NO. UNSCHED IOBS FOR CP4-5-6    14000020
DCWNUCP7 DS    CL1                      NO. UNSCHED IOBS FOR CP7        16000020
DCWNLSD  DS    CL1                      NO.HI LVL INDEXES SRCHED ON DEV 18000020
DCWFIOBU DS    A                        A(FIRST UNSCHED IOB)            20000020
DCWLIOBU DS    A                        A(LAST UNSCHED IOB)             22000020
DCWFUPDI DS    A                        A(FIRST IOB ON UPDATE Q)        24000020
DCWLUPDI DS    A                        A(LAST IOB ON UPDATE Q)         26000020
DCWHIAV  DS    CL1                      B0 ON MEANS HI LVL IND CP AVAIL 28000020
*                                       B1 ON MEANS HI LVL IND IN CORE  30000020
DCWWKNI  DS    CL1                      BO ON MEANS WRITE KN IN PROCESS 32000020
*                                       B1 FIRST TIME SWITCH            34000020
*                                       B2 SAME MODULE SWITCH           36000020
*                                       B3 ADD TO END USE - CP11,13     38000020
*                                       B4 END BECAUSE OF EOF - CP12,13 40000020
*                                       B5 CP11 - 1ST USE BY GIVEN WKN  42000020
*                                                                       44000020
DCWNLEVC DS    CL1                      COUNTER USED BY WRITE KN APP    46000020
DCWNUWKN DS    CL1                      NO. OF IOBS AWAITING W KN CP    48000020
DCWMSHIL DS    A                        LAST ACTIVE ENTRY HI IND W KN   50000020
DCWHIRPS DS    CL1                      DCBHIRPD OR DCBHIRSH            52000020
DCWNACT  DS    CL1                      NO. NON-W KN MACROS BEFORE W KN 54000020
DCWSIZE  DS    CL2                      SIZE OF DCB WA+ CP'S+ WKN WA    56000020
DCWOPCLS DS    CL8                      DATA SAVED BY COMMON OPEN       58000020
DCWFIOBE DS    0CL4                                                     60000020
DCWERRCT DS    1C                       NO. OF SLOTS ON ERROR Q         62000020
         DS    3C                       A(FIRST IOB ON ERRORQ)          64000020
DCWLIOBE DS    A                        A(LAST IOB ON ERROR Q)          66000020
DCWSIOA  DS    A                        SECOND SIO APPENDAGE (RPS ONLY) 68000020
DCWDCBFA DS    F                        DCB FIELD AREA PTR              70000020
DCWIPG   DS    H                        (VLR) PRIME RCD OVHD - NON LAST 74000020
DCWLPG   DS    H                        (VLR) PRIME RCD OVHD - LAST     76000020
DCWIOG   DS    H                        (VLR) OVFLO RCD OVHD - NON LAST 78000020
DCWLOG   DS    H                        (VLR) OVFLO RCD OVHD - LAST     80000020
DCWLEN   EQU   *-&NAME                 LENGTH OF W.A. IN BYTES          82303900
         MEND                                                           84000020
./  ADD  SSI=31321027,NAME=IGGBISAV
         MACRO                                                          00050002
&NAME    IGGBISAV                                                       00100002
&NAME    DSECT                                                          00110002
*    02/20/73          LEVEL=00                                         00150002
**********************************************************************  00200002
*    SAVE AREA FOR BISAM ASYNCHRONOUS AND PRIVILEGED ROUTINES.       *  00250002
**********************************************************************  00300002
IGGRETRN DS    A                        RETURN ADDRESS                  00350002
IGGPDEB  DS    A                        VALIDATED DEB ADDRESS           00400002
IGGUKEY  DS    X                        USER STORAGE PROTECT KEY        00450002
IGGRESRV DS    XL3                      RESERVED                        00500002
IGGREGS  DS    16F                      PROTECTED REGISTER SAVE AREA    00550002
IGGSIZE  EQU   *-IGGRETRN               SIZE OF PROTECTED SAVE AREA     00600002
         MEND                                                           00650002
./  ADD  SSI=60090884,NAME=IGGCAXWA
 /********************************************************************/ 01000003
 /*                                                                  */ 01001003
 /*   MACRO NAME = IGGCAXWA                                          */ 01002003
 /*                                                                  */ 01003003
 /*   DESCRIPTIVE NAME = CATALOG AUXILIARY WORKAREA                  */ 01004003
 /*                                                                  */ 01005003
 /*   FUNCTION = THE CATALOG AUXILIARY WORKAREA (CAXWA) CONTAINS     */ 01006003
 /*              THE ADDRESS OF CONTROL BLOCKS AND WORK AREAS NEEDED */ 01007003
 /*              WHEN A CATALOG IS BEING OPENED OR CREATED.  IT ALSO */ 01008003
 /*              CONTAINS FLAGS THAT INDICATE THE TYPE OF PROCESSING */ 01009003
 /*              BEING PERFORMED ON THE CATALOG AND THE OS/VS        */ 01010003
 /*              COMPONENT THAT INVOKED THE PROCESSING.              */ 01011003
 /*                                                                  */ 01012003
 /*   CONTROL BLOCK STRUCTURE = THE CAXWA IS POINTED TO BY           */ 01013003
 /*                             THE ACB (ACBUAPTR).                  */ 01014003
 /*                                                                  */ 01015003
 /*   INCLUDED MACROS = NONE                                         */ 01016003
 /*                                                                  */ 01017003
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 01018003
 /*                                                                  */ 01019003
 /*   CREATED BY: VSAM CATALOG MANAGEMENT DURING BUILD OR OPEN OF    */ 01020003
 /*               A MASTER OR USER CATALOG.                          */ 01021003
 /*                                                                  */ 01022003
 /*   STATUS = VS/2 RELEASE 4   (CHANGE FLAG @Y40WSXX)       @Z40WSPJ*/ 01023004
 /*                                                                  */ 01024003
 /*   DATE OF LAST CHANGE = 20 MAY 75                        @Z40WSPJ*/ 01025004
 /*   DATE OF LAST CHANGE = 11 NOV 74                        @Z40RSRC*/ 01025404
 /*                                                                  */ 01026003
 /********************************************************************/ 01027003
    DECLARE                                                             02000003
      1 IGGCAXWA BASED(CAXWAPTR),   /* ESTABLISH BASE TO THE CAXWA   */ 09000003
        2 CAXID CHAR(1),            /* CAXWA ID = 'CA'X              */ 10000003
        2 *     PTR(24),            /* RESERVED                      */ 11000003
        2 CAXCHN   PTR(31),         /* CAXWA CHAIN PTR               */ 12000003
*       2 CAXFLGS  BIT(8),          /* FLAGS                         */ 13000003
          3 CAXBLD BIT(1),          /* BUILD REQUEST                 */ 14000003
          3 CAXOPN BIT(1),          /* OPEN IN CONTROL               */ 15000003
          3 CAXCLS BIT(1),          /* CLOSE IN CONTROL              */ 16000003
          3 CAXEOV BIT(1),          /* END-OF-VOLUME IN CONTROL      */ 17000003
          3 CAXCMP BIT(1),          /* I/O SUPPORT COMPLETE          */ 18000003
          3 CAXMCT BIT(1),          /* 1 = MASTER CATALOG,           */ 19000003
                                    /* 0 = USER CATALOG              */ 20000003
          3 CAXCMR BIT(1),          /* CATALOG MGMT INVOKED          */ 21000003
          3 CAXSCR BIT(1),          /* SCHEDULER INVOKED             */ 22000003
        2 CAXFLG2 BIT(8),           /* FLAGS - BYTE 2                */ 23000003
          3 CAXF2DT  BIT(1),        /* CATALOG DELETED               */ 24000003
          3 CAXF2NDD BIT(1),        /* NO DDNAME FOUND (IFG0191X)    */ 25000003
          3 CAXF2NCR BIT(1),        /* UNABLE TO GET CORE (IFG0191X) */ 26000003
          3 CAXF2IOE BIT(1),        /* I/O ERROR (IFG0191X)          */ 27000003
          3 CAXF2CLR BIT(1),        /* RPL CLEANUP REQUESTED   Y02020*/ 28000003
          3 CAXF2CA  BIT(1),        /* FREE CAXWA IF ERROR           */ 29000003
          3 CAXF2REC BIT(1),        /* RECOVERABLE CATALOG   @Y30SSDW*/ 29050003
          3 CAXF2VTU BIT(1),        /* VOLUME T.S. UPDATED   @Y30SSDW*/ 30000003
        2 CAXFLG3 BIT(8),           /* FLAGS                 @Y30SSDW*/ 31000003
          3 CAXF3AT  BIT(1),        /* CRA ALT TIOT EXIST    @Y30SSDW*/ 31050003
          3 CAXF3ANE BIT(1),        /* CRA NONEXISTENT       @Y30SSDW*/ 31068003
          3 *        BIT(1),        /* RESERVED              @Z40RSRC*/ 31100004
          3 CAXRAC   BIT(1),        /* CATLG IS RAC-DEFINED  @Z40RSRC*/ 31110004
          3 CAXF3B5  BIT(1),        /* B56-11-NO CAT PSWD    @Z30TSBM*/ 31150003
          3 CAXF3B6  BIT(1),        /* 01-NO UPD,10-UPD      @Z30TSBM*/ 31200003
          3 *        BIT(2),        /* RESERVED              @Z30TSBM*/ 31250003
        2 CAXACT   PTR(8),          /* CATALOG ACTIVITY COUNT        */ 32000003
*       2 CAXATIOT PTR(31),         /* ALTERNATE TIOT POINTER        */ 33000003
        2 CAXSCHWA PTR(31),         /* PTR TO SCHEDULER WORKAREA     */ 34000003
        2 CAXDRWP  PTR(31),         /* POINTER TO DRWA               */ 35000003
        2 CAXACB   PTR(31),         /* ACB POINTER                   */ 36000003
        2 CAXUCB  PTR(31),          /* UCB POINTER                   */ 37000003
*       2 CAXCCR,                   /* CATALOG CONTROL RECORD INFO   */ 38000003
*         3 CAXHACI PTR(24) BDY(BYTE), /* HI ALLOCATED CI NUMBER     */ 39000003
*         3 CAXNFCI PTR(24) BDY(BYTE), /* NEXT FREE CI NUMBER        */ 40000003
*         3 CAXCDCI PTR(24) BDY(BYTE), /* DELETED CI COUNT           */ 41000003
          3 CAXFDCI PTR(24) BDY(BYTE), /* FIRST DELETED CI NUMBER    */ 42000003
        2 CAXASID FIXED(15),        /* AS ID FOR UCRA ACCESS @Y30SSSB*/ 43000003
        2 CAXRPLCT PTR(15),         /* RPL COUNT                     */ 44000003
*       2 CAXRPL   PTR(31),         /* PTR TO RPL CHAIN              */ 45000003
        2 CAXCNAM CHAR(44),         /* CATALOG NAME                  */ 46000003
          3 CAXVOLID CHAR(6),       /* CRA VOLUME SERIAL     @Y30SSDW*/ 46050003
          3 CAXRACTS CHAR(4),       /* CRA CREATION TIME STAMP          46100003
                                                             @Y30SSDW*/ 46150003
          3 CAXRATEP PTR(31) BDY(BYTE), /* TIOT ENTRY POINTER FOR CRA   46200003
                                                             @Y30SSDW*/ 46250003
          3 CAXRADDN CHAR(8),       /* CRA DD NAME           @Y30SSDW*/ 46960003
          3 *        CHAR(22),      /* RESERVED, CRA ONLY    @Y30SSDW*/ 46970003
        2 CAXOPLST,                 /* OPEN/CLOSE PARAMETER LIST     */ 47000003
          3 COPTS BIT(8),           /* OPTIONS                       */ 48000003
            4 CENLST BIT(1),        /* END-OF-LIST INDICATOR         */ 49000003
            4  *     BIT(7),        /* UNUSED                        */ 50000003
          3 COPACB PTR(24),         /* POINTER TO ACB                */ 51000003
        2 CAXOPEWA PTR(31),         /* POINTER TO O/C/EOV WORKAREA   */ 52000003
        2 CAXCCA   PTR(31),         /* POINTER TO CCA                */ 53000003
         3 CAXPLOCK PTR(31),        /* RPL POST LOCK         @Z40WSPJ*/ 53010004
        2 CAXJDE  PTR(31),          /* POINTER TO JDE        @Y30SSDW*/ 53050003
        2 CAXCRACB PTR(31),         /* ADDRESS OF CRA ACB    @Z40WSPJ*/ 53100004
        2 CAXRACP  PTR(31),         /* ADDR OF RAC PROFILE   @Z40RSRC*/ 53150004
        2 CAXECB PTR(31),           /* RPL WAIT ECB          @Z40WSPJ*/ 53150104
         3 CAXECBHB BIT(8),         /* RPL WAIT ECB BYTE 1   @Z40WSPJ*/ 53152004
          4 CAXECBWB BIT(1),        /* WAIT BIT              @Z40WSPJ*/ 53154004
          4 CAXECBPB BIT(1),        /* POST BIT              @Z40WSPJ*/ 53156004
          4 * BIT(6),               /* RESERVED              @Z40WSPJ*/ 53158004
         3 * PTR(24),               /* RESERVED              @Z40WSPJ*/ 53158404
        2 CAXASCBP PTR(31),         /* ADDRESS OF ASCB       @Z40WSPJ*/ 53160004
        2 CAXHRPLW PTR(31),         /* HUNG RPL WORD         @Z40WSPJ*/ 53160404
         3 CAXHRPLC PTR(15),        /* HUNG-UP RPL COUNT     @Z40WSPJ*/ 53162004
         3 CAXWNQID PTR(15);        /* RPL WAIT ENQ ID       @Z40WSPJ*/ 53170004
    DECLARE CAXCD PTR(8) CONSTANT (202);/* CAXWA ID CHARACTER ('CA'X)*/ 53200003
 % DECLARE                          /* MACRO-PASS CHARACTER VARIABLES*/ 53300003
     OPLST CHAR,                    /* OPEN/CLOSE PARAMETER LIST     */ 53400003
     ENLST CHAR,                    /* END-OF-LIST INDICATOR         */ 53500003
     OPDCB CHAR,                    /* POINTER TO ACB                */ 53600003
     OPEWA CHAR,                    /* POINTER TO O/C/EOV WORKAREA   */ 53700003
     COWCCA CHAR,                   /* POINTER TO CCA                */ 53800003
     COWDRWP CHAR;                  /* POINTER TO DRWA               */ 53900003
 % OPLST = 'CAXOPLST';              /* OPEN/CLOSE PARAMETER LIST     */ 54000003
 % ENLST = 'CENLST';                /* END-OF-LIST INDICATOR         */ 55000003
 % OPDCB = 'COPACB';                /* POINTER TO ACB                */ 56000003
 % OPEWA = 'CAXOPEWA';              /* POINTER TO O/C/EOV WORKAREA   */ 57000003
 % COWCCA = 'CAXCCA';               /* POINTER TO CCA                */ 58000003
 % COWDRWP = 'CAXDRWP';             /* POINTER TO DRWA               */ 59000003
./  ADD  SSI=81700128,NAME=IGGCCA
 /********************************************************************/ 00200037
 /*                                                                  */ 00201037
 /*   MACRO NAME = IGGCCA                                            */ 00202037
 /*                                                                  */ 00203037
 /*   DESCRIPTIVE NAME = CATALOG COMMUNICATIONS AREA                 */ 00204037
 /*                                                                  */ 00205037
 /*   FUNCTION = THE CCA IS USED BY CATALOG MANAGEMENT TO PASS       */ 00206037
 /*              INFORMATION BETWEEN ITS PROCEDURES.  THE CCA IS     */ 00207037
 /*              BUILT EACH TIME AN OS/VS COMPONENT ISSUES THE CATLG */ 00208037
 /*              MACRO INSTRUCTION (SVC 26) TO PROCESS A CATALOG     */ 00209037
 /*              RECORD.  THE CCA CONTAINS INFORMATION ABOUT THE     */ 00210037
 /*              CATALOG BEING PROCESSED, AND ABOUT THE CATALOG      */ 00211037
 /*              RECORD AND ITS EXTENSIONS CONTAINED IN EACH OF      */ 00212037
 /*              THE SIX BUFFERS AVAILABLE TO PROCESS THE USER'S     */ 00213037
 /*              REQUEST.                                            */ 00214037
 /*                                                                  */ 00215037
 /*   CONTROL BLOCK STRUCTURE = THE CCA IS POINTED TO BY REGISTER 11 */ 00216037
 /*                                                                  */ 00217037
 /*   INCLUDED MACROS = NONE                                         */ 00218037
 /*                                                                  */ 00219037
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00220037
 /*                                                                  */ 00221037
 /*   CREATED BY: CSECT IGG0CLC9 IN LOAD MODULE IGG0CLC9             */ 00222037
 /*                                                                  */ 00223037
 /*   STATUS = VS/2 RELEASE 3   (CHANGE FLAG @Y30SSXX)               */ 00224037
 /*                                                                  */ 00225037
 /*   DATE OF LAST CHANGE = 15 MAY 78                        @Y30SSPJ*/ 00226037
 /*   C 572000                                               @ZA24944*/ 00236037
 /*   I 692260-692268, 692929                                @ZA27024*/ 00246037
 /*   I 691305-330                                           @ZA30975*/ 00256037
 /*   C 514000,690826,693355                                 @ZA29164*/ 00266037
 /*   I 514300-515600,690827-690828,693256                   @ZA29164*/ 00276037
 /*   I                                                      @ZA29164*/ 00346137
 /*                                                                  */ 00400037
 /********************************************************************/ 00460037
    DECLARE                                                             00520037
*     1 IGGCCA BASED(CCAPTR),       /* SET BASE TO CCA               */ 02200037
*       2 CCAID FIXED(15),          /* CCA ID = 'ACCA'X      @Y30SSPJ*/ 02210037
*       2 CCASZ FIXED(15),          /* SIZE OF CCA           @Y30SSPJ*/ 02220037
*       2 CCAPROB FIXED(31),        /* PROBLEM DETERMINATION WORD       02300037
*                                                            @Y30SSPJ*/ 02310037
*         3 CCAMODID CHAR(2),       /* ERROR MODULE ID       @Y30SSPJ*/ 02618037
*         3 CCAERRCD FIXED(15)      /* ERROR CODES           @Y30SSPJ*/ 02624037
                   BDY(BYTE),                                           02630037
*           4 CCAREASN CHAR(1),     /* SET REASON CODE       @Y30SSPJ*/ 02636037
*             5 CCACDR CHAR(1),     /* REFER REASON CODE     @Y30SSPJ*/ 02642037
*           4 CCARETRN CHAR(1),     /* SET RETURN CODE       @Y30SSPJ*/ 02648037
*             5 CCACD1 CHAR(1),     /* REFER RETURN CODE     @Y30SSPJ*/ 02900037
*       2 * CHAR(5),                /* RESERVED              @Y30SSPJ*/ 02950037
*       2 CCACD2 PTR(8),            /* RETURN CODE 2                 */ 03000037
*       2 CCAFLG1 PTR(8),           /* FLAGS                         */ 03200037
*         3 CCAF1LPS BIT(1),        /* STOP LOOP IF ON               */ 03400037
*         3 CCAF1CNS BIT(1),        /* CATALOG NAME SEARCH     Y02020*/ 03600037
*         3 CCAF1LRD BIT(1),        /* CCR READ INTO CORE            */ 03800037
*         3 CCAF1KEY BIT(1),        /* GET BY TRUE NAME              */ 04000037
*         3 CCAF1KGE BIT(1),        /* GET NEXT                      */ 04200037
*         3 CCAF1CR BIT(1),         /* CHKPT CCR REQ                 */ 04400037
*         3 CCAF1UP BIT(1),         /* GET FOR UPDATE                */ 04600037
*         3 CCAF1DK BIT(1),         /* DELETE, KEEP CI               */ 04800037
*       2 CCAFLG2 PTR(8),           /* FLAGS                         */ 05000037
*         3 CCAF2SYS BIT(1),        /* SYSTEM CALLER                 */ 05200037
*         3 CCAF2NVC BIT(1),        /* NO VALIDITY CHECK             */ 05400037
*         3 CCAF2CCT BIT(1),        /* 0 = CONCAT CTLG SEARCH,       */ 05600037
*                                   /* 1 = SINGLE CTLG SEARCH        */ 05800037
          3 CCAF2XEQ BIT(1),        /* 0 = SHARED ENQ,               */ 06000037
                                    /* 1 = EXCLUSIVE ENQ             */ 06200037
          3 CCAF2RHS BIT(1),        /* RECURSIVE CALL TO CATLG       */ 06400037
          3 CCAF2COB BIT(2),        /* COMB. OF CATLG OPEN/BUILD     */ 06600037
            4 CCAF2CO BIT(1),       /* CATLG BEING OPENED            */ 06800037
            4 CCAF2CB BIT(1),       /* CATLG OPEN DURING BUILD       */ 07000037
*         3 CCAF2SMO BIT(1),        /* SEARCH MASTER CATLG ONLY      */ 07200037
*       2 CCAFLG3 PTR(8),           /* FLAGS                         */ 07400037
*         3 CCAEXGR1 BIT(1),        /* EXIT INDICATOR                */ 07600037
*         3 CCAGC4   BIT(1),        /* GROUP CODE 4 IN SCNC          */ 07800037
*         3 CCAGDSP  BIT(1),        /* GENDSP                        */ 08000037
*         3 CCAEXGR2 BIT(1),        /* EXIT INDICATOR                */ 08200037
*         3 CCANF    BIT(1),        /* NOT FOUND CONDITION           */ 08400037
*         3 CCAELC2  BIT(1),        /* EXIT INDICATOR                */ 08600037
*         3 CCALFT   BIT(1),        /* FIRST TIME                    */ 08800037
*         3 CCAEGREC BIT(1),        /* EXIT INDICATOR                */ 09000037
*       2 CCAFLG4 PTR(8),           /* FLAGS                         */ 09200037
*         3 CCAF4DRQ BIT(1),        /* DEQ REQD                      */ 09400037
*         3 CCAF4BYS BIT(1),        /* BYPASS SECURITY               */ 09600037
*         3 CCAGVNC  BIT(1),        /* NOT COMPLETE                  */ 09800037
*         3 CCAGVNF  BIT(1),        /* RELREPNO NOT FOUND            */ 10000037
*         3 CCAGVNBS BIT(1),        /* NO BUFFER SPACE               */ 10200037
*         3 CCAGVEX  BIT(1),        /* EXIT BIT                      */ 10400037
*         3 CCAGVNE BIT(1),         /* NON-EXISTENT FIELD            */ 10600037
*         3 CCATCOMP BIT(1),        /* TEST COMPLETE                 */ 10800037
*       2 CCAFLG5 PTR(8),           /* FLAGS                         */ 11000037
*         3 CCAMEX2  BIT(1),        /* EXIT INDICATOR                */ 11200037
*         3 CCAMEX   BIT(1),        /* EXIT BIT                      */ 11400037
*         3 CCAMEX1  BIT(1),        /* EXIT BIT                      */ 11600037
*         3 CCAMODPA BIT(1),        /* PUT-ADD                       */ 11800037
*         3 CCATHIT BIT(1),         /* SUCCESSFUL TEST               */ 12000037
*         3 CCATEX BIT(1),          /* EXIT INDICATOR                */ 12200037
*         3 CCATEX1 BIT(1),         /* EXIT INDICATOR                */ 12400037
*         3 CCATEX2 BIT(1),         /* EXIT INDICATOR                */ 12600037
*       2 CCAFLG6  PTR(8),          /* FLAGS                         */ 12800037
*         3 CCAMCODR BIT(1),        /* DEQ REQ SW                    */ 13000037
*         3 CCADELP BIT(1),         /* DELETED GOP                   */ 13200037
*         3 CCAMNOSP BIT(1),        /* NO SPACE IN MOVE OCCUR        */ 13400037
*         3 CCAINIT  BIT(1),        /* INSERT INIT SW FOR VAR FIELD  */ 13600037
*         3 CCASUPFD BIT(1),        /* SUPPRESS FIELD INFO           */ 13800037
*         3 CCAREUSE BIT(1),        /* RE-USE RECORD AREAS           */ 14000037
*         3 CCAEXT   BIT(1),        /* EXTRACT IN PROCESS            */ 14200037
*         3 CCAMOD   BIT(1),        /* MODIFY IN PROCESS             */ 14400037
*       2 CCATCB PTR(31),           /* PTR TO TCB                    */ 14600037
*         3 CCALBCYL PTR(31),       /* LABEL CYLINDER DATA PTR       */ 14800037
*       2 CCARB  PTR(31),           /* PTR TO RB                     */ 15000037
*         3 CCADPL PTR(31),         /* DADSM PARMETER LIST PTR       */ 15200037
*       2 CCACPL PTR(31),           /* PTR TO CPL                    */ 15400037
*       2 CCAACB PTR(31),           /* PTR TO CATALOG ACB            */ 15600037
*       2 CCANPCCB PTR(31),         /* PTR TO NEXT PCCB IN CHAIN     */ 15800037
*       2 CCAURAB  PTR(31),         /* PTR TO RAB TO USE             */ 16000037
*       2 CCASRCH  CHAR(44),        /* SEARCH ARGUMENT               */ 16200037
*         3 CCASRID CHAR(3),        /* CI NUMBER                     */ 16400037
*           4 CCASRCIN PTR(24) BDY(BYTE), /* CI NUMBER               */ 16600037
*         3 *       CHAR(41),       /* RESERVED                      */ 16800037
*       2 CCARAB0,                  /* RECORD AREA BLOCK 0           */ 17000037
*         3 CCAR0FLG PTR(8),        /* CCARAB0 FLAGS                 */ 17200037
*           4 CCAR0UR BIT(1),       /* RAB IN-USE EXT, MOD           */ 17400037
*           4 CCAR0U1 BIT(1),       /* RAB IN-USE TESTS              */ 17600037
*           4 CCAR0U2 BIT(1),       /* RAB IN-USE TESTS              */ 17800037
*           4 CCAR0WR BIT(1),       /* WRITE IT BEFORE READ          */ 18000037
*           4 CCAR0PA BIT(1),       /* PUT-ADD WRITE                 */ 18200037
*           4 *       BIT(2),       /* RESERVED                      */ 18400037
*           4 CCAR0UPD BIT(1),      /* UPDATE BUFFER NOT REUSED      */ 18600037
*         3 CCAR0RPL PTR(8),        /* LAST ASSIGN, RPL INDEX        */ 18800037
*         3 * CHAR(2),              /* RESERVED                      */ 19000037
*         3 CCAR0REC PTR(31),       /* PTR TO RECORD AREA            */ 19200037
*         3 CCAR0SEG,               /* SEGMENT PTRS                  */ 19400037
*           4 CCACPE20 PTR(31),     /* PTR REPEATING CONTROL INFO    */ 19600037
*           4 CCACPE30 PTR(31),     /* PTR TO FIRST OCCURRENCE       */ 19800037
*           4 CCACPE40 PTR(31),     /* PTR TO END OF RECORD          */ 20000037
*       2 CCARAB1,                  /* RECORD AREA BLOCK 1           */ 20200037
*         3 CCAR1FLG PTR(8),        /* FLAGS                         */ 20400037
*           4 CCAR1UR BIT(1),       /* SAME AS CCAR0UR               */ 20600037
*           4 CCAR1U1 BIT(1),       /* SAME AS CCAR0U1               */ 20800037
*           4 CCAR1U2 BIT(1),       /* SAME AS CCAR0U2               */ 21000037
*           4 CCAR1WR BIT(1),       /* SAME AS CCAR0WR               */ 21200037
*           4 CCAR1PA BIT(1),       /* SAME AS CCAROPA               */ 21400037
*           4 *       BIT(2),       /* RESERVED                      */ 21600037
*           4 CCAR1UPD BIT(1),      /* SAME AS CCAR0UPD              */ 21800037
*         3 CCAR1RPL PTR(8),        /* SAME AS CCAR0RPL              */ 22000037
*         3 * CHAR(2),              /* RESERVED                      */ 22200037
*         3 CCAR1REC PTR(31),       /* SAME AS CCAR0REC              */ 22400037
*         3 CCAR1SEG,               /* SAME AS CCAR0SEG              */ 22600037
*           4 CCACPE21 PTR(31),     /* SAME AS CCACPE20              */ 22800037
*           4 CCACPE31 PTR(31),     /* SAME AS CCACPE30              */ 23000037
*           4 CCACPE41 PTR(31),     /* SAME AS CCACPE40              */ 23200037
*       2 CCARAB2,                  /* RECORD AREA BLOCK 2           */ 23400037
*         3 CCAR2FLG PTR(8),        /* FLAGS                         */ 23600037
*           4 CCAR2UR BIT(1),       /* SAME AS CCAR0UR               */ 23800037
*           4 CCAR2U1 BIT(1),       /* SAME AS CCAR0U1               */ 24000037
*           4 CCAR2U2 BIT(1),       /* SAME AS CCAR0U2               */ 24200037
*           4 CCAR2WR BIT(1),       /* SAME AS CCAR0WR               */ 24400037
*           4 CCAR2PA  BIT(1),      /* SAME AS CCAROPA               */ 24600037
*           4 *        BIT(2),      /* RESERVED                      */ 24800037
*           4 CCAR2UPD BIT(1),      /* SAME AS CCAR0UPD              */ 25000037
*         3 CCAR2RPL PTR(8),        /* SAME AS CCAR0RPL              */ 25200037
*         3 * CHAR(2),              /* RESERVED                      */ 25400037
*         3 CCAR2REC PTR(31),       /* SAME AS CCAR0REC              */ 25600037
*         3 CCAR2SEG,               /* SAME AS CCAR0SEG              */ 25800037
*           4 CCACPE22 PTR(31),     /* SAME AS CCACPE20              */ 26000037
*           4 CCACPE32 PTR(31),     /* SAME AS CCACPE30              */ 26200037
*           4 CCACPE42 PTR(31),     /* SAME AS CCACPE40              */ 26400037
*       2 CCARAB3,                  /* RECORD AREA BLOCK 3           */ 26600037
*         3 CCAR3FLG PTR(8),        /* FLAGS                         */ 26800037
*           4 CCAR3UR BIT(1),       /* SAME AS CCAR0UR               */ 27000037
*           4 CCAR3U1 BIT(1),       /* SAME AS CCAR0U1               */ 27200037
*           4 CCAR3U2 BIT(1),       /* SAME AS CCAR0U2               */ 27400037
*           4 CCAR3WR BIT(1),       /* SAME AS CCAR0WR               */ 27600037
*           4 CCAR3PA BIT(1),       /* SAME AS CCAROPA               */ 27800037
*           4 *       BIT(2),       /* RESERVED                      */ 28000037
*           4 CCAR3UPD BIT(1),      /* SAME AS CCAR0UPD              */ 28200037
*         3 CCAR3RPL PTR(8),        /* SAME AS CCAR0RPL              */ 28400037
*         3 * CHAR(2),              /* RESERVED                      */ 28600037
*         3 CCAR3REC PTR(31),       /* SAME AS CCAR0REC              */ 28800037
*         3 CCAR3SEG,               /* SAME AS CCAR0SEG              */ 29000037
*           4 CCACPE23 PTR(31),     /* SAME AS CCACPE20              */ 29200037
*           4 CCACPE33 PTR(31),     /* SAME AS CCACPE30              */ 29400037
*           4 CCACPE43 PTR(31),     /* SAME AS CCACPE40              */ 29600037
        2 CCARAB4,                  /* RECORD AREA BLOCK 4           */ 29800037
          3 CCAR4FLG PTR(8),        /* FLAGS                         */ 30000037
            4 CCAR4UR BIT(1),       /* SAME AS CCAR0UR               */ 30200037
            4 CCAR4U1 BIT(1),       /* SAME AS CCAR0U1               */ 30400037
            4 CCAR4U2 BIT(1),       /* SAME AS CCAR0U2               */ 30600037
            4 CCAR4WR BIT(1),       /* SAME AS CCAR0WR               */ 30800037
*           4 CCAR4PA  BIT(1),      /* SAME AS CCAROPA               */ 31000037
*           4 *        BIT(2),      /* RESERVED                      */ 31200037
            4 CCAR4UPD BIT(1),      /* SAME AS CCAR0UPD              */ 31400037
          3 CCAR4RPL   PTR(8),      /* SAME AS CCAR0RPL              */ 31600037
          3 *          CHAR(2),     /* RESERVED                      */ 31800037
          3 CCAR4REC PTR(31),       /* SAME AS CCAR0REC              */ 32000037
          3 CCAR4SEG,               /* SAME AS CCAR0SEG              */ 32200037
            4 CCACPE24 PTR(31),     /* SAME AS CCACPE20              */ 32400037
            4 CCACPE34 PTR(31),     /* SAME AS CCACPE30              */ 32600037
            4 CCACPE44 PTR(31),     /* SAME AS CCACPE40              */ 32800037
        2 CCARAB5,                  /* RECORD AREA BLOCK 5           */ 33000037
          3 CCAR5FLG PTR(8),        /* FLAGS                         */ 33200037
            4 CCAR5UR BIT(1),       /* SAME AS CCAR0UR               */ 33400037
            4 CCAR5U1 BIT(1),       /* SAME AS CCAR0U1               */ 33600037
            4 CCAR5U2 BIT(1),       /* SAME AS CCAR0U2               */ 33800037
            4 CCAR5WR BIT(1),       /* SAME AS CCAR0WR               */ 34000037
*           4 CCAR5PA BIT(1),       /* SAME AS CCAROPA               */ 34200037
*           4 *       BIT(2),       /* RESERVED                      */ 34400037
            4 CCAR5UPD BIT(1),      /* SAME AS CCAR0UPD              */ 34600037
          3 CCAR5RPL PTR(8),        /* SAME AS CCAR0RPL              */ 34800037
          3 *        CHAR(2),       /* RESERVED                      */ 35000037
          3 CCAR5REC PTR(31),       /* SAME AS CCAR0REC              */ 35200037
          3 CCAR5SEG,               /* SAME AS CCAR0SEG              */ 35400037
            4 CCACPE25 PTR(31),     /* SAME AS CCACPE20              */ 35600037
            4 CCACPE35 PTR(31),     /* SAME AS CCACPE30              */ 35800037
            4 CCACPE45 PTR(31),     /* SAME AS CCACPE40              */ 36000037
        2 CCARPLK PTR(8),           /* ASSIGNED RPL COUNT            */ 36200037
        2 CCARPLF PTR(8),           /* INDEX TO FOUND RPL            */ 36400037
        2 CCARPLX PTR(8),           /* WORK BYTE FOR SUBFUNCTION     */ 36600037
                                    /* IGGPRPLM                      */ 36650037
        2 CCARPLT PTR(8),           /* WORK BYTE FOR SUBFUNCTION     */ 36800037
                                    /* IGGPRPLM                      */ 36850037
        2 CCATIQRN CHAR(6),         /* TIOT ENQ MINOR NAME   @Y30SSPJ*/ 37200037
          3 CCATASID CHAR(2),       /* ASID                  @Y30SSPJ*/ 37210037
          3 CCATQDB PTR(31)BDY(BYTE),/* QDB ADDRESS          @Y30SSPJ*/ 37220037
        2 CCASC PTR(8),             /* SEARCH CODE             Y02020*/ 37250037
        2 CCAQLEN PTR(8),           /* QUALIFIER LENGTH | 0    Y02020*/ 37300037
        2 CCARPL1 PTR(31),          /* PTR TO RPL IN USE             */ 37400037
*       2 CCADESA CHAR(44),         /* DADSM EXTENTS SAVEAREA        */ 37600037
*         3 CCANDEXT PTR(8),        /* COUNT OF EXTENTS              */ 37800037
*         3 CCAIXEXT PTR(8),        /* EXTENT INDEX VALUE            */ 38000037
*         3 CCASSVOL FIXED(15) BDY(BYTE), /* DATA SET DIR SEQ. NO.   */ 38200037
*         3 CCAEXTDE(5) CHAR(8),    /* EXTENT DESCRIPTORS            */ 38400037
*           4 CCAEXTSS CHAR(2),     /* DESCRIPTOR SPACE SEQ. NO.     */ 38600037
*           4 CCAEXTAD CHAR(4),     /* EXTENT STARTING CCHH          */ 38800037
*             5 CCAEXTCC FIXED(15) BDY(BYTE), /* STARTING CYLINDER   */ 39000037
              5 CCAEXTHH FIXED(15) BDY(BYTE), /* STARTING TRACK      */ 39200037
*           4 CCAEXTTH FIXED(15) BDY(BYTE), /* NO. TRACKS IN EXTENT  */ 39400037
*       2 CCAASCIK PTR(8),          /* COUNT OF CI'S REQD            */ 39800037
*       2 CCACRRP PTR(8),           /* RPL USED TO READ CCR          */ 40000037
*       2 CCAASCIX PTR(8),          /* ASSIGNED CI ARRAY INDEX       */ 40200037
*       2 CCAASCI(3) PTR(24) BDY(BYTE), /* ASSIGNED CI NUMBERS       */ 40400037
*       2 CCAEQDQ CHAR(16) BDY(WORD), /* ENQ/DEQ PARAMETER LIST      */ 40600037
*         3 CCAEDXFF PTR(8),        /* END OF PL IND BYTE - X'FF'    */ 40800037
*         3 CCAEDRLN PTR(8),        /* LENGTH OF MINOR NAME          */ 41000037
*         3 CCAEDOPT PTR(8),        /* ENQ-DEQ OPTIONS               */ 41200037
*           4 CCAEDSHR BIT(1),      /* 1=SHARED, 0=EXCLUSIVE         */ 41400037
*           4 *        BIT(7),      /* OTHER OPT. (SET BY MACRO)     */ 41600037
*         3 CCAEDRCD PTR(8),        /* ENQ/DEQ RETURN CODE           */ 41800037
*         3 CCAEDQNM PTR(31),       /* MAJOR NAME PTR                */ 42000037
*         3 CCAEDRNM PTR(31),       /* MINOR NAME PTR                */ 42200037
*         3 CCAEDUCB PTR(31),       /* UCB PTR                       */ 42400037
*       2 CCAMLRET PTR(31),         /* MAIN LINE RTN SAVE AREA PTR   */ 42600037
        2 CCAMSSPL CHAR(12) BDY(WORD), /* STORAGE MGMT WORKAREA      */ 42800037
          3 CCAMNLLP PTR(31),       /* LENGTH OF LIST POINTER  Y02020*/ 43000037
*         3 CCAMNPTR PTR(31),       /* ADDRESS OF RETURN ADDRESS     */ 43200037
          3 *        FIXED(8),      /* STORAGE MANAGEMENT BYTE       */ 43400037
          3 CCAMNSPL FIXED(8),      /* REQUIRED SUBPOOL              */ 43600037
          3 *        FIXED(15),     /* STORAGE MANAGEMENT AREA       */ 43800037
*       2 CCARPRM CHAR(4),          /* RETURN PARMS                  */ 44000037
*       2 CCACMS CHAR(8) BDY(WORD), /* CMS AREA                      */ 44800037
*         3 CCACMSWA PTR(31),       /* PTR TO CMS WORK AREA          */ 45000037
*         3 CCAEXCMS PTR(31),       /* SECONDARY CMS WORK AREA ADDR  */ 45200037
*       2 CCALUME CHAR(0),          /* START OF FIELD MGMT WORK AREA */ 45850037
*                                   /* AND INTERFACE VARIABLES FOR   */ 45900037
*                                   /* LOCATE, UPDATE, MODIFY, AND   */ 45950037
*                                   /* EXTRACT ROUTINES              */ 45960037
*       2 CCACPE5 PTR(31),          /* ADDR OF OCCURRENCE PTR        */ 46000037
*       2 CCACPE51 PTR(31),         /* ALTERNATE PTR TO GOP          */ 46200037
*       2 CCACPE52 PTR(31),         /* ALT GOP PTR                   */ 46400037
*       2 CCACPE53 PTR(31),         /* ALT GOP PTR                   */ 46600037
*       2 CCACPE6 PTR(31),          /* ADDR OF OCCURRENCE            */ 46800037
*       2 CCACPE61 PTR(31),         /* ALT PTR TO OCCURRENCE         */ 47000037
*         3 CCARABSE PTR(31),       /* SAVE EXTRACT CALLER URAB      */ 47050037
*       2 CCACPE7 PTR(31),          /* ADDR OF FIELD VALUE           */ 47200037
*         3 CCAIDPT PTR(31),        /* INSERT DATA ADDR              */ 47400037
*       2 CCACPE71 PTR(31),         /* ALT PTR TO FIELD VALUE        */ 47600037
*       2 CCAGOPLN FIXED(15),       /* GROUP OCCURRENCE PTR LENGTH   */ 47800037
*       2 CCASL    FIXED(15),       /* SEQUENCE NUMBER LENGTH        */ 48000037
*       2 CCAILNG PTR(31),          /* INSERT LENGTH                 */ 48200037
*       2 CCAFLPT  PTR(31),         /* FIELD LIST POINTER            */ 48400037
*         3 CCATFLPT PTR(31),       /* FIELD LIST PTR FOR TESTS      */ 48600037
*       2 CCARABPT PTR(31),         /* RAB PTR                       */ 48800037
*       2 CCADICT  CHAR(4),         /* DICTIONARY INFO               */ 49000037
*       2 CCAXCPL  PTR(31),         /* EXTRACT CPL PTR               */ 49200037
*         3 CCAMCPL PTR(31),        /* MODIFY CPL PTR                */ 49400037
*       2 CCARABB PTR(31),          /* BASE RAB PTR                  */ 49600037
*       2 CCARABF PTR(31),          /* FIRST RAB PTR                 */ 49800037
*       2 CCARABL PTR(31),          /* LAST RAB PTR                  */ 50000037
*       2 CCACBASE CHAR(3),         /* BASE CI NUMBER                */ 50200037
*       2 CCAGC    PTR(8),          /* GROUP CODE                    */ 50400037
*       2 CCALREL  FIXED(15),       /* LOGICAL RELREPNO              */ 50600037
*         3 CCALREL1 CHAR(2),       /* LOGICAL RELREPNO              */ 50800037
*       2 CCASN   FIXED(15),        /* SEQUENCE NO.                  */ 51000037
*         3 CCASN1  CHAR(2),        /* SEQUENCE NO.                  */ 51200037
*       2 CCAUSKEY BIT(8),          /* USER KEY              @ZA29164*/ 51400037
*       2 CCAMSFLG BIT(8),          /* MISC. FLAGS           @ZA29164*/ 51430037
*         3 CCACICIN BIT(1),        /* INTEGRITY CHECK INCOMPLETE       51460037
*                                                            @ZA29164*/ 51490037
*         3 CCACPLOK BIT(1),        /* CPL IS VALID          @ZA29164*/ 51520037
*         3 CCASKYSS BIT(1),        /* CALLER HAS SYSTEM KEY OR IS IN   51526037
*                                      SUPERVISOR STATE      @ZA29164*/ 51532037
*         3 CCAGDGUY BIT(1),        /* AUTHORIZED CALLER     @ZA29164*/ 51540037
*         3 *        BIT(4),        /* RESERVED              @ZA29164*/ 51560037
*       2 CCAIXFPL FIXED(15),       /* FIELD ARRAY INDEX             */ 51600037
*       2 CCAIXREL FIXED(15),       /* INDEX RELREPNO                */ 51800037
*       2 CCATNREL FIXED(15),       /* NEXT RELREPNO                 */ 52000037
*       2 CCATNUM FIXED(15),        /* NO. OF SUCCESSFUL RELREPNOS   */ 52200037
*       2 CCATREL(16) FIXED(15),    /* SUCCESSFUL REL REPNOS         */ 52400037
*       2 CCATNO FIXED(15),         /* TOTAL NO. SUCCESSFUL RELREPNOS*/ 52600037
*       2 CCATEST PTR(31),          /* TEST FIELD PTR                */ 53000037
*       2 CCARBA CHAR(20),          /* EXTENT HOLDER FIELD           */ 53200037
*         3 CCACRAVL BDY(BYTE),     /* CRA VOLSER            @Y30SSRS*/ 53220037
*           4 CCASS FIXED(15) BDY(BYTE), /* SPACE DESCRIPTOR @Y30SSRS*/ 53400037
*                                   /* SEQUENCE NO.          @Y30SSRS*/ 53402037
*           4 CCACCHH1 CHAR(4),     /* CCHH-LOW              @Y30SSRS*/ 53410037
*         3 CCACRADT BDY(BYTE),     /* CRA DEVICE TYPE       @Y30SSRS*/ 53840037
*           4 CCACCHH2 CHAR(4),     /* CCHH-HIGH             @Y30SSRS*/ 53890037
*         3 CCATT FIXED(15) BDY(BYTE), /* TT-NO. TRACKS              */ 54000037
*         3 CCARBA1 CHAR(4),        /* RBA-LOW                       */ 54200037
*         3 CCARBA2 CHAR(4),        /* RBA-HIGH                      */ 54400037
*       2 CCATLNG FIXED(15),        /* TESTED EXTENT LENGTH          */ 54600037
*         3 CCATLEN  FIXED(15),     /* MODIFIED VAR LENGTH           */ 54800037
*       2 CCARBAL FIXED(15),        /* RBA EXTENT BALANCE            */ 55000037
*       2 CCACNIX FIXED(15),        /* COMBINATION NAME INDEX        */ 55200037
*       2 CCASMFIX FIXED(15),       /* DEFINE CATALOG SMF INDEX      */ 55400037
*       2 CCAIDPT2 PTR(31),         /* AVAILABLE SPACE IN WORK AREA  */ 55600037
*       2 CCAIDPT3 PTR(31),         /* INCOMPLETE VAR FIELDS         */ 55800037
*         3 CCARABSM PTR(31),       /* SAVE MODIFY CALLER URAB       */ 55850037
*       2 CCAGVCT FIXED(15),        /* COUNTER                       */ 56000037
*       2 CCANEVV CHAR(2),          /* NON-EXISTENT VARIABLE         */ 56200037
*                                   /* VALUE LENGTH                  */ 56400037
*       2 CCAGVEXT CHAR(3),         /* EXTENSION RCD POINTER         */ 56600037
*       2 CCANEFV CHAR(1),          /* NON-EXISTENT FIXED VALUE      */ 56800037
*       2 CCASAVID CHAR(1),         /* SAVE RECORD ID        @ZA24944*/ 57200037
*       2 CCAGRGC  BIT(8),          /* GROUP CODE                    */ 57400037
*         3 CCARCDID CHAR(1),       /* RECORD ID             @Y30SSRS*/ 57420037
*       2 CCAGRHI  FIXED(15),       /* HIGH RELREPNO         @Y30SSRS*/ 57680037
*         3 CCASSEQ  FIXED(15),     /* SAVE SEQ. NO.         @Y30SSRS*/ 57900037
*           4 CCAGRHI1 CHAR(2),     /* HIGH RELREPNO         @Y30SSRS*/ 57920037
*       2 CCAIXTPL FIXED(15),       /* INDEX TO TEST FPL             */ 58000037
*       2 CCADLEN  FIXED(15),       /* MODIFY DELETE LENGTH          */ 58200037
*       2 CCADIFF FIXED(15),        /* SPACE DIFFERENCE              */ 58400037
*       2 CCAREPCT FIXED(15),       /* RELREPNO COUNT                */ 58600037
*       2 CCADISP FIXED(15),        /* DISPLACEMENT INTO VAR FIELD   */ 58800037
*       2 CCASVCI  CHAR(3),         /* SAVE CI OF BASE               */ 59000037
*       2 CCASVCI1 CHAR(3),         /* SAVE SPACE CI                 */ 59200037
*       2 CCADTA   PTR(31),         /* DICTIONARY PTR                */ 59400037
*       2 CCACDTA  PTR(31),         /* INDEX COMBO TABLE PTR         */ 59600037
*       2 CCADTCT  FIXED(15),       /* COUNT DICT ENTRIES            */ 59800037
*       2 CCACDTCT FIXED(15),       /* COUNT INDEX COMB TABLE        */ 60000037
*       2 CCACWAP  PTR(31),         /* CONTROLLER WORK AREA          */ 60200037
*       2 CCASDWAP PTR(31),         /* POINTER TO SDWA         Y02020*/ 60400037
*       2 CCAILNG3 FIXED(31),       /* MODIFY LENGTH                 */ 60600037
*       2 CCAILNG2 FIXED(31),       /* MODIFY LENGTH                 */ 60800037
*       2 CCAALPTR PTR(31),         /* SPACE MNGMT SUB-FUNCTION WA   */ 61000037
        2 CCASMFPT PTR(31),         /* SMF DATA PTR                  */ 61200037
        2 CCALCPL PTR(31),          /* LSPACE CPL PTR - INTERNAL CALL*/ 61400037
        2 CCAFLG7 PTR(8),           /* FLAGS                         */ 61800037
          3 CCALSP   BIT(1),        /* LSPACE INTERNAL CALL          */ 62000037
          3 CCASMFEX BIT(1),        /* SMF EXIT INDICATOR            */ 62200037
          3 CCASMFA  BIT(1),        /* DO SMF IN MODIFY              */ 62400037
          3 CCASMFBR BIT(1),        /* DO GET FOR BASE RECORD        */ 62600037
          3 CCAONCE  BIT(1),        /* MOVE ONLY ONE OCCURRENCE      */ 62800037
          3 CCAROREQ BIT(1),        /* READ-ONLY REQUEST             */ 63000037
          3 CCAFEOV  BIT(1),        /* FORCE EOV                     */ 63050037
          3 CCACRABU BIT(1),        /* CRA BEING BUILT       @Y30SSPJ*/ 63070037
        2 CCAFLG8 BIT(8),           /* FLAGS                 @Y30SSPJ*/ 63090037
          3 CCADSRCL BIT(1),        /* DEFINE SPACE          @Y30SSPJ*/ 63110037
                                    /*   RECURSIVE CALL      @Y30SSPJ*/ 63130037
          3 CCAVBUFI BIT(1),        /* VOL RECORDS BUFFERED  @Y30SSPJ*/ 63150037
          3 CCASCRA  BIT(1),        /* SUPPRESS CRA UPDATES  @Y30SSPJ*/ 63170037
          3 CCASCICK BIT(1),        /* SUPPRESS CRA CI CHECK @Y30SSSB*/ 63370037
          3 CCALPIND BIT(1),        /* LOOP CONTROL IN BUFFER        */ 63372037
                                    /*   SCAN FOR GETS       @Y30SSSB*/ 63374037
          3 CCAVRIND BIT(1),        /* VOLUME RECORD BUFFER CHAIN    */ 63376037
                                    /*   TO BE CHECKED       @Y30SSSB*/ 63378037
          3 CCALEOD  BIT(1),        /* EOF ON LOW KEYS       @Y30SSSB*/ 63380037
          3 CCAAUCAT BIT(1),        /* VOLUME HAS UCAT       @Y30LSPS*/ 63390037
        2 CCAFLG9 BIT(8),           /* FLAGS                 @Y30SSSB*/ 63450037
          3 CCARABYC BIT(1),        /* BYPASS CAT I/O        @Y30SSSB*/ 63500037
          3 CCARAEOV BIT(1),        /* CRA EOV               @Y30SSSB*/ 63550037
          3 CCARALRD BIT(1),        /* CRA CCR HAS BEEN READ @Y30SSSB*/ 63560037
          3 CCARACR  BIT(1),        /* CRA CCR CHK PT REQD   @Y30SSSB*/ 63580037
          3 CCAUCRA  BIT(1),        /* USE UCRA TRANS TAB    @Y30SSSB*/ 63592037
          3 CCARAACT BIT(1),        /* CRA ACTIVE            @Y30SSSB*/ 63594037
          3 CCARAICI BIT(1),        /* INHIBIT CAT I/O       @Y30SSSB*/ 63596037
          3 CCARESUM BIT(1),        /* ON = REPLACE SUM,ELSE @Y30SSSB*/ 63598037
                                    /* OFF = INCREMENT SUM   @Y30SSSB*/ 63598437
        2 CCANORBA PTR(8),          /* NO. OF RBA'S THAT ARE         */ 63598837
                                    /* NEEDED IN CB STRT     @Y30SSSB*/ 63599237
        2 CCASMFRD PTR(31),         /* SMF RECORD POINTER            */ 63600037
        2 CCASMFCT FIXED(15),       /* COUNT OF SMF RECORDS          */ 63800037
        2 CCASMFLG BIT(16),         /* SMF RECORD FLAGS              */ 64000037
          3 CCASMFG1 BIT(8),        /* SMF FLAGS                     */ 64200037
            4 CCASMFUC BIT(1),      /* UNCATALOG - SMF RCD 67        */ 64400037
                                    /* (ALWAYS SET ON)               */ 64600037
              5 CCASMFDF BIT(1),    /* DEFINE - SMF RCD 63           */ 64800037
            4 CCASMFSR BIT(1),      /* SCRATCH - SMF RCD 67. SET ON  */ 65000037
                                    /* ONLY IF RECORD ID IS D, I OR A*/ 65200037
              5 CCASMFAL  BIT(1),   /* ALTER - SMF RCD 63            */ 65600037
            4 *        BIT(6),      /* RESERVED                      */ 65800037
          3 CCASMFG2 BIT(8),        /* SMF FLAGS                     */ 66000037
        2 CCASMFLN FIXED(15),       /* SMF RECORD LENGTH             */ 66200037
        2 CCACHAIN CHAR(3),         /* CHAIN CI NO. - START OF VOLUME*/ 66400037
                                    /* ENTRY TRANSLATION WORKAREA    */ 66420037
        2 CCACI1   CHAR(3),         /* SAVE CI AREA                  */ 66600037
        2 CCACI2   CHAR(3),         /* SAVE CI AREA                  */ 66800037
        2 CCACI3   CHAR(3),         /* SAVE CI AREA                  */ 67000037
        2 CCAVARLN FIXED(15),       /* INSERT LENGTH                 */ 67200037
        2 CCARRAB PTR(31),          /* RELATIVE BASE RAB ADDR        */ 67400037
        2 CCARBASE PTR(31),         /* RELATIVE BASE RAB ADDR        */ 67600037
        2 CCAVARPT PTR(31),         /* POINTER TO INSERT INFO        */ 67800037
        2 CCADELN FIXED(15),        /* DELETE LENGTH                 */ 68000037
        2 CCAVAR   CHAR(20),        /* INSERT INFO SAVE AREA         */ 68200037
        2 CCAVAR1  CHAR(20),        /* INSERT INFO SAVE AREA         */ 68400037
        2 CCADEL1  CHAR(3),         /* START DELETE CI               */ 68600037
        2 CCADEL2  CHAR(3),         /* END DELETE CI                 */ 68800037
        2 CCAXLATE CHAR(40),        /* TRANSLATION WORK AREA         */ 68850037
        2 CCAR14S  PTR(31),         /* CLC9 REG 14 SAVE AREA         */ 68900037
        2 CCABMINP,                 /* INPUT PARAMETERS              */ 68910037
          3 CCABMTRK FIXED(15),     /* STARTING TRACK                */ 68950037
          3 CCABMLIM FIXED(15),     /* CHECK LIMIT, NN FOR SET       */ 68960037
          3 CCABMMIN FIXED(15),     /* COND CHECK MINIMUM            */ 68970037
          3 CCABMFLG BIT(8),        /* STATE AND FUNCTION CODE       */ 68980037
            4 CCABMST  BIT(1),      /* STATE TO SET/COND. CHECK      */ 68990037
            4 CCABMCHK BIT(1),      /* ON = PERFORM CHECK            */ 68992037
            4 CCABMSET BIT(1),      /* ON = PERFORM SET              */ 68994037
            4 CCABMCCK BIT(1),      /* ON = PERFORM COND. CHECK      */ 68996037
            4 CCABMLST BIT(1),      /* ON = LAST SET REQ (WRITE)     */ 68998037
          3 *        PTR(8),        /* RESERVED                      */ 68998437
        2 CCABMOUT,                 /* OUTPUT PARAMETERS             */ 68998837
          3 CCABMONN FIXED(15),     /* TRK NUMBER (CK/COND.CK)       */ 68999237
          3 CCABMOTR FIXED(15),     /* STARTING TRK(COND.CHK.)       */ 68999637
          3 CCABMOFG BIT(8),        /* OUTPUT FLAGS                  */ 68999737
            4 CCABMOST BIT(1),      /* STATE OF BITS (CHECK)         */ 68999837
        2 *      CHAR(2),           /* RESERVED                      */ 68999937
        2 CCABMPAD CHAR(1),         /* PADDING CHARACTER             */ 69016637
        2 CCABMGOP PTR(31),         /* CURRENT BIT MASK GOP          */ 69026637
        2 CCABMPTR PTR(31),         /* CURRENT BIT MASK BYTE         */ 69028637
        2 CCABMEND PTR(31),         /* END OF CURRENT BIT MASK       */ 69030637
        2 CCABMBT1 FIXED(15),       /* BIT COUNT - FIRST BYTE        */ 69032637
        2 CCABMBTL FIXED(15),       /* BIT COUNT - LAST BYTE         */ 69033037
        2 CCABMBYT FIXED(15),       /* NUMBER OF FULL BYTES          */ 69033137
        2 CCABMSTR FIXED(15),       /* CURRENT BIT MASK START TRACK  */ 69033237
        2 CCABMWK1 PTR(31),         /* WORK FIELD                    */ 69038837
        2 CCABMWK2 PTR(31),         /* WORK FIELD                    */ 69040837
        2 CCABMWK3 PTR(31),         /* WORK FIELD                    */ 69042837
        2 CCABMWK4 PTR(31),         /* WORK FIELD                    */ 69043237
        2 CCABMRB1 PTR(31),         /* FIRST BIT MAP RAB PTR         */ 69043637
        2 CCABMRB2 PTR(31),         /* SECOND RAB POINTER            */ 69044037
        2 CCATEMPS CHAR(40),        /* PL/S TEMP AREA                */ 69044437
        2 CCAMNCAT CHAR(256) BDY(WORD),/* CONTIGUOUS AREA FOR           69046437
                                           TRACKING            Y02020*/ 69048802
          3 CCAMNAT CHAR(248) BDY(WORD),/* TRACKING BUFFER     Y02020*/ 69049237
            4 MNATTOP BIT(8),       /* TOP ENTRY - 1ST BYTE    Y02020*/ 69049737
              5 MNATFULL BIT(1),    /* BUFFER FULL             Y02020*/ 69049837
              5 *        BIT(7),    /* RESERVED                Y02020*/ 69049937
            4 * CHAR(239),          /* BODY OF BUFFER          Y02020*/ 69076637
            4 MNATFLGS BIT(8),      /* MOST RECENT ENTRY-1ST BYTE       69078637
                                                               Y02020*/ 69079002
              5 MNATVAL BIT(1),     /* VALID ENTRY BIT         Y02020*/ 69080637
              5 *       BIT(2),     /* RESERVED              @ZA29164*/ 69082637
              5 MNATFCLS BIT(1),    /* CLASS 'F' CORE IF OFF @ZA29164*/ 69082737
              5 *       BIT(3),     /* RESERVED              @ZA29164*/ 69082837
              5 MNATSCLS BIT(1),    /* CLASS 'S' CORE          Y02020*/ 69083037
            4 MNATARG1 PTR(24) BDY(BYTE),/* REMAINDER OF 1ST WD         69083137
                                                               Y02020*/ 69085302
            4 MNATARG2 PTR(32),     /* MOST RECENT ENTRY-2ND WD         69088837
                                                               Y02020*/ 69089202
          3 CCAMNLL PTR(8),         /* G/F MAIN LEN LIST-EOL BYTE       69090837
                                                               Y02020*/ 69091202
          3 CCAMNLEN PTR(24) BDY(BYTE),/* G/F MAIN LENGTH      Y02020*/ 69092837
          3 CCAMNADR PTR(31),       /* G/F MAIN ADDRESS        Y02020*/ 69093237
        2 CCAARFWA CHAR(16) BDY(WORD),/* SPILL RTN WORK AREA   Y02020*/ 69093637
          3 ARFGMLEN PTR(31),       /* LEN LIST FOR GETMAIN    Y02020*/ 69094037
            4 ARFGMLP PTR(8),       /* END-OF-LIST BYTE        Y02020*/ 69094237
            4 ARFLEN PTR(24) BDY(BYTE),/* LENGTH               Y02020*/ 69094337
          3 ARFGMADR PTR(31),       /* ADDRESS FOR GETMAIN     Y02020*/ 69094437
          3 ARFSBSCH PTR(31),       /* PTR TO 1ST SPILL BLOCK  Y02020*/ 69108237
          3 ARFSBECH PTR(31),       /* PTR TO LAST SPILL BLOCK Y02020*/ 69118237
        2 CCARVFG1 BIT(8),          /* RECOVERY FLAGS          Y02020*/ 69120237
          3 RVCCAV BIT(1),          /* CCA VALID               Y02020*/ 69120637
          3 RVARFI BIT(1),          /* TRACKING DATA INCOMPLETE         69121037
                                                               Y02020*/ 69121102
          3 RVCMSFG BIT(1),         /* CMS FUNCTION GATE       Y02020*/ 69121437
          3 RVESBO BIT(1),          /* ESTAE BACKOUT IN CONTROL         69121837
                                                               Y02020*/ 69121902
          3 RVESBOR BIT(1),         /* ESTAE BACKOUT REGISTER  Y02020*/ 69122037
          3 * BIT(3),               /* RESERVED                Y02020*/ 69127737
        2 * CHAR(2),                /* RESERVED                Y02020*/ 69130537
        2 CCAFLG11 BIT(8),          /*                       @ZA30975*/ 69130837
          3 * BIT(4),               /* RESERVED              @ZA30975*/ 69131137
          3 CCAF11B5 BIT(1),        /* B5 AND B6 ON - NO CATLG PASSWORD 69131437
                                                             @ZA30975*/ 69131737
          3 CCAF11B6 BIT(1),        /* B5 AND B6 EQUAL TO 01, NO UPDATE 69132037
                 PASSWORD, EQUAL TO 10, THERE IS UPDATE PW   @ZA30975*/ 69132337
          3 * BIT(2),               /* RESERVED              @ZA30975*/ 69132637
        2 CCAREGS CHAR(348),        /* REGISTER SAVE AREA      Y02020*/ 69133337
          3 *        CHAR(4),       /* USER SAVE AREA ADDR     Y02020*/ 69136137
          3 CCAMODNM CHAR(8),       /* LOAD MODULE NAME      @Y30SSSB*/ 69150037
        2 CCABZSAV   PTR(31),       /* SAVE AREA FOR CLBZ    @Y30SSSB*/ 69160037
          3 CCADSPWA PTR(31),       /* DEF SPACE W.A. PTR    @Y30SSDW*/ 69170037
        2 CCACUMPL PTR(31),         /* CATLG UPGRADE MGMNT   @Y30SSPJ*/ 69171037
                                    /* PARM LIST PTR         @Y30SSPJ*/ 69172037
        2 CCATNQCT PTR(8),          /* TIOT ENQ COUNT        @Y30SSPJ*/ 69173037
        2 CCASBASE PTR(24),         /* SAVE BASE CI          @Y30SSPJ*/ 69174037
                                    /* FOR UPGD PROCESS      @Y30SSPJ*/ 69175037
        2 CCACRACI PTR(31),         /* CRA REC PTR ARRAY AD  @Y30SSSB*/ 69176037
        2 CCARAACB PTR(31),         /* CRA ACB ADDRESS       @Y30SSSB*/ 69177037
        2 CCARARPL PTR(31),         /* CRA RPL ADDRESS       @Y30SSSB*/ 69178037
        2 CCARARBA PTR(31),         /* CRA RBA               @Y30SSSB*/ 69200537
        2 CCARAREC PTR(31),         /* RECORD POINTER        @Y30SSSB*/ 69201037
        2 CCARALSA PTR(31),         /* CRA LOCAL SAVE AREA   @Y30SSSB*/ 69201537
          3 CCACRABT FIXED(15),     /* BLOCKS/TRACK FOR CRA RECORD      69201937
                                       CONSTRUCTION (CLB4)   @Y30SSDW*/ 69203937
          3 *        CHAR(2),       /* RESERVED              @Y30SSDW*/ 69204337
        2 CCAFLG10 BIT(8),          /* FLAG BYTE             @Y30SSSB*/ 69209237
          3 CCAINCPL BIT(1),        /* INVALID CPL, VAL CK   @Y30SSSB*/ 69211637
          3 CCAPDMW  BIT(1),        /* PROB DET MSG PUT      @Y30SSSB*/ 69214037
          3 CCACATAC BIT(1),        /* CAT ACTIVE, CRA       @Y30SSSB*/ 69216437
          3 CCARAFEV BIT(1),        /* CRA FORCED EOV CH     @Y30SSSB*/ 69218837
          3 CCARARTC BIT(1),        /* RECOVERY EXIT, RETURN TO      */ 69221237
                                    /*   CALLER              @Y30SSSB*/ 69223637
          3 CCAPRANX BIT(1),        /* PRIME CRA GONE        @Y30SSRG*/ 69225637
          3 CCADEFUN BIT(1),        /* DEFINE UNIQUE SAVE    @ZA27024*/ 69226037
          3 *        BIT(1),        /* RESERVED              @ZA27024*/ 69226837
        2 CCASUMTT PTR(24) BDY(BYTE), /* CRA SUM TT VALUE    @Y30SSSB*/ 69228437
        2 CCADICTS CHAR(4),         /* DATA/INDEX ID TS      @Y30SSSB*/ 69230837
        2 CCARANCA (2) PTR(31),     /* NORMAL RECORD BUFFER CHAIN    */ 69233237
                                    /*  START, END ADDRS     @Y30SSSB*/ 69235637
        2 CCARAVCA (2) PTR(31),     /* VOLUME RECORD BUFFER CHAIN    */ 69238037
                                    /*  START, END ADDRS     @Y30SSSB*/ 69240437
        2 CCAVTS   CHAR(8),         /* VOLUME TIMESTAMP      @Y30SSSB*/ 69242837
        2 CCAREWKA PTR(31),         /* REUSE WORKAREA ADDR   @Y30SSSB*/ 69245237
*       2 CCASMFP,                  /* SMF SAVE AREA         @Y30SSSB*/ 69247637
                                    /* FOR PROB DETER        @Y30SSSB*/ 69250037
          3 CCASMFMD CHAR(2),       /* MODULE ID             @Y30SSSB*/ 69252437
          3 CCASMFRC CHAR(1),       /* REASON CODE           @Y30SSSB*/ 69254837
          3 CCASMFCD CHAR(1),       /* RETURN CODE           @Y30SSSB*/ 69257237
*       2 CCAPROBX FIXED(31),       /* AUXILLARY SAVE AREA   @Y30SSSB*/ 69259637
                                    /* FOR CCAPROB           @Y30SSSB*/ 69261637
*         3 CCAMODDX CHAR(2),       /* ERROR MODULE ID       @Y30SSSB*/ 69262037
          3 CCAERCDX FIXED(15) BDY(BYTE), /* ERROR CODES     @Y30SSSB*/ 69264437
            4 CCARESNX CHAR(1),     /* REASON CODE           @Y30SSSB*/ 69266837
            4 CCARETRX CHAR(1),     /* RETURN CODE           @Y30SSSB*/ 69269237
*       2 CCADGDGA PTR(31),         /* DEL FULL GDG WA       @Y30SSSB*/ 69271637
          3 CCASAVMN PTR(31),       /* SAVE GOTTEN CORE ADDR @ZA27024*/ 69292937
*       2 CCAOCPL PTR(31),          /* ORIGINAL CPL ADDRESS  @ZA29164*/ 69325537
*       2 * CHAR(40),               /* RESERVED              @ZA29164*/ 69335537
        2 CCAEND  CHAR(0);          /* END CCA - MUST END ON         */ 69385537
                                    /*   FULLWORD BOUNDARY   @Y30SSSB*/ 69435537
                                    /*   FULLWORD BOUNDARY   @Y30SSSB*/ 69485537
./  ADD  SSI=81740074,NAME=IGGCICB
*/********************************************************************/ 00050000
*/*                                                                  */ 00100000
*/*   MACRO NAME = IGGCICB                                           */ 00150000
*/*                                                                  */ 00200000
*/*   DESCRIPTIVE NAME = CATALOG INTEGRITY CONTROL BLOCK             */ 00250000
*/*                                                                  */ 00300000
*/*   FUNCTION = USED TO CONTROL VSAM CATALOGS PROCESS OF            */ 00350000
*/*              MOVING THE NON-AUTHORIZED USERS INTERFACE           */ 00400000
*/*              CONTROL BLOCK STRUCTURE TO KEY 0 FETCH              */ 00450000
*/*              PROTECTED CORE TO ASSURE SYSTEM INTEGRITY           */ 00500000
*/*              DURING THE CATALOG SVC REQUEST PROCESS.             */ 00550000
*/*                                                                  */ 00600000
*/*   INCLUDED MACROS = NONE                                         */ 00650000
*/*                                                                  */ 00700000
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00750000
*/*                                                                  */ 00800000
*/*   CREATED BY: VSAM CATALOG FIRST LOAD IGG0CLC9                   */ 00850000
*/*                                                                  */ 00900000
*/*   STATUS = VS/2 RELEASE 3.7-SU7  (CHANGE FLAG @ZA29164)          */ 00950000
*/*                                                                  */ 01000000
*/*   DATE OF LAST CHANGE = 8 MAY 78                                 */ 01050000
*/*                                                                  */ 01100000
*/********************************************************************/ 01150000
*                                                                       01200000
*    DCL 1 IGGCICB BASED,           /* CATALAG INTEGRITY CB          */ 01250000
*          2 CICBID CHAR(4),        /* CICB ID C'CICB'               */ 01300000
*          2 CICFLAGS BIT(8),       /* PROCESSING CONTROL FLAGS      */ 01350000
*            3 CICCOUNT BIT(1),     /* COUNT MODE                    */ 01400000
*            3 CICPTRSW BIT(1),     /* WORKAREA POINTER IS SWITCHED  */ 01450000
*            3 CICFPLOP BIT(1),     /* TEST FPL LOOP ERROR           */ 01500000
*            3 CICPASWD BIT(1),     /* PASSWORD IS TO BE MOVED       */ 01550000
*            3 *        BIT(4),     /* RESERVED                      */ 01600000
*          2 CICUSKEY BIT(8),       /* USER KEY                      */ 01650000
*          2 *          CHAR(2),    /* RESERVED                      */ 01700000
*          2 CICGEOPR FIXED(31),    /* GEOMETRIC PROGRESSION COUNTER */ 01750000
*          2 CICINCRM FIXED(31),    /* INCREMENTAL COUNTER           */ 01800000
*          2 CICFVTCN FIXED(31),    /* FVT INCREMENTAL COUNTER       */ 01850000
*          2 CICFVTDX FIXED(31),    /* FVT INDEX                     */ 01900000
*          2 CICSVADR PTR(31),      /* SAVED FPL ADDRESS             */ 01950000
*          2 CICFPLDI FIXED(31),    /* FPL DATA INDEX                */ 02000000
*          2 CICFPLLP PTR(31),      /* FPL ADDRESS FOR LOOP CHECK    */ 02050000
*          2 CICFVTPR PTR(31),      /* FVT ADDRESS                   */ 02100000
*          2 CICBKPTR PTR(31),      /* POINTER TO BLOCK TO MOVE      */ 02150000
*          2 CICBKLNG FIXED(31),    /* LENGTH OF BLOCK TO MOVE       */ 02200000
*          2 CICNXTBK PTR(31),      /* POINTER TO NEXT AVAILABLE AREA*/ 02250000
*          2 CICRMBYT FIXED(31),    /* REMAINING BYTES IN CISA       */ 02300000
*          2 CICGMCNT FIXED(31),    /* COUNT FOR GETMAIN             */ 02350000
*          2 CICRAREA PTR(31),      /* POINTER TO USER RETURN AREA   */ 02400000
*          2 CICCISAP PTR(31),      /* POINTER TO BEGINNING OF CISA  */ 02450000
*          2 CICCISSP PTR(31),      /* POINTER TO SECONDARY CISA     */ 02500000
*          2 CICSABYT FIXED(31),    /* BYTES IN SECONDARY CISA       */ 02550000
*          2 CICCICAB FIXED(31),    /* BYTES IN PRIMARY CISA         */ 02600000
*          2 CICPRFPL PTR(31),      /* PRELIMINARY FPL ADDR          */ 02650000
*          2 CICREGSV FIXED(31),    /* REGISTER SAVE AREA            */ 02700000
*          2 CICMRGSV CHAR(40);     /* MULTIPLE REGISTER SAVE AREA   */ 02750000
./  ADD  SSI=30041058,NAME=IGGCOWA
*    /*                                                             */  03000000
*    /*  COWA - CATLG OPEN WORK AREA   DUMMY FOR DR2                */  06000000
*    /*                                                             */  09000000
* /*                                                                */  09050002
* /* MACCOMP Y-2 SC1DE/SJE92                                        */  09100002
* /* MACSTAT Y-2 72335/Y02020                                       */  09150002
* /*                                                                */  09200002
*        DCL 1  COWA  BASED (COWAPTR),                                  12000000
*          2 FLGS  BIT(8)             , /* FLAGS                    */  15000000
*          2 *     PTR(24)            , /* RESERVED                 */  18000000
*          2 OPLST                    , /* OPEN PARM LIST           */  21000000
*            3 OPTS  BIT(8)           , /* OPTIONS                  */  24000000
*              4 ENLST BIT(1)         , /* END OF LIST IND          */  27000000
*              4 OPT   BIT(7)         , /* OPTION FLAGS             */  30000000
*            3 OPDCB PTR(24)          , /* PTR TO DCB               */  33000000
*          2 OPEWA   PTR(31)          , /* PTR TO OPEN WORKAREA     */  36000000
*          2 COWCCA  PTR(31)          , /* PTR TO CCA               */  39000000
*          2 COWDRWP PTR(31)          , /* PTR TO DRWA              */  42000000
*          2 COWDECB                  , /* DECB AREA.               */  45000000
*            3 DECSDECB PTR(31)       , /* ECB                      */  48000000
*            3 DECTYPE  PTR(15)       , /* TYPE OF I/O REQUEST      */  51000000
*            3 DECLNGTH PTR(15)       , /* LENGTH OF KEY & DATA     */  54000000
*            3 DECDCB   PTR(31)       , /* ADDR OF DCB              */  57000000
*            3 DECAREA  PTR(31)       , /* ADDR OF DATA             */  60000000
*            3 DECIOBPT PTR(31)       , /* ADDR OF IOB              */  63000000
*            3 DECNEXT  PTR(31)       , /* ADDR OF NEXT ADDR FEEDBK */  66000000
*          2 COWNOTE(64) PTR(31)      , /* NOTE LIST                */  69000000
*          2 COWDCB  CHAR(88)  ,        /* DCB AREA                 */  72000000
*          2 COWRSAVE CHAR(72);         /* REG SAVE AREA            */  75000000
./  ADD  SSI=20670064,NAME=IGGCPOPS
         MACRO                                                          02000020
         IGGCPOPS                                                       04000020
.*         RELEASE 22 DELETIONS/CHANGES                                 04010020
.*         RELEASE 21 DELETIONS/CHANGES                                 04020020
.*         RELEASE 20 DELETIONS/CHANGES                                 04030020
* CONTROL                                                               06000020
NOP      EQU   X'03'                                                    08000020
SEEK     EQU   X'07'                                                    10000020
SEEKCC   EQU   X'0B'                                                    12000020
SEEKHH   EQU   X'1B'                                                    14000020
SFM      EQU   X'1F'                                                    16000020
SPACE    EQU   X'0F'                                                    18000020
TIC      EQU   X'08'                                                    20000020
*SEARCH  OPS                                                            22000020
MT       EQU   X'80'                                                    24000020
SHAEQ    EQU   X'39'                                                    26000020
SIDEQ    EQU   X'31'                                                    28000020
SIDHI    EQU   X'51'                                                    30000020
SIDEQHI  EQU   X'71'                                                    32000020
SKEQ     EQU   X'29'                                                    34000020
SKHI     EQU   X'49'                                                    36000020
SKEQHI   EQU   X'69'                                                    38000020
SETSECT  EQU   X'23'                                                    40000020
* READ   OPS                                                            42000020
RHA      EQU   X'1A'                                                    44000020
RDCNT    EQU   X'12'                                                    46000020
RR0      EQU   X'16'                                                    48000020
RDATA    EQU   X'06'                                                    50000020
RKD      EQU   X'0E'                                                    52000020
RCKD     EQU   X'1E'                                                    54000020
RDSECT   EQU   X'22'                                                    56000020
* WRITE  OPS                                                            58000020
WCKD     EQU   X'1D'                                                    60000020
WSCKD    EQU   X'01'                                                    62000020
WD       EQU   X'05'                                                    64000020
WKD      EQU   X'0D'                                                    66000020
WR0      EQU   X'15'                                                    68000020
* FLAGS                                                                 68010020
DC       EQU   X'80'                                                    70000020
CC       EQU   X'40'                                                    72000020
SILI     EQU   X'20'                                                    74000020
SKIP     EQU   X'10'                                                    76000020
PCI      EQU   X'08'                                                    78000020
         MEND                                                           80000020
./  ADD  SSI=20670020,NAME=IGGCP1
         MACRO                                                          03000020
         IGGCP1                                                         06000020
.*         RELEASE 23 DELETIONS/CHANGES                                 06010020
.*         RELEASE 22 DELETIONS/CHANGES                                 06020020
.*         RELEASE 21 DELETIONS/CHANGES                                 06030020
* CP1    SEARCHES CYLINDER AND MASTER INDEXES.                          09000020
C01      CCW   SIDEQ,0,CC+SILI,4   SEARCH TO VERIFY SEEK                12000020
C02      CCW   TIC,C01-V1,0,0                                           15000020
C1       CCW   SKEQHI,0,CC+SILI,0   Q. TOO FAR ALONG INDEX              18000020
C2       CCW   TIC,C4-V1,0,0    A. NO, CONTINUE SCH                     21000020
C2B      CCW   NOP,C2B+5-V1,CC+SILI,1     NOP/SS SWITCH                 24000020
C3       CCW   RHA,C8-V1,CC+SKIP,5  A. YES, FIND START OF TRK           27000020
C4       CCW   SKEQHI+MT,0,CC,0    SEARCH FOR ENTRY                     30000020
C5       CCW   TIC,C4-V1,0,0                                            33000020
C6       CCW   RDATA,C8+7-V1,0,10    READ MASTER INDEX ENTRY            36000020
C7       CCW   TIC,C10-V1,0,0  GO SCH CYLINDER INDEX                    39000020
C8       DC    C'-------M'         MASTER                               42000020
C9       DC    C'BBCCHHRF'         INDEX ENTRY                          45000020
C10      CCW   C'P',C9-V1,CC,6  SEEK CYL INDEX                          48000020
C10A     CCW   SIDEQ,C9+2-V1,CC+SILI,4  SEARCH TO VERIFY SEEK           51000020
C10B     CCW   TIC,C10A-V1,0,0                                          54000020
C11      CCW   SKEQHI,0,CC+SILI,0    Q. TOO FAR ALONG INDEX             57000020
C12      CCW   TIC,C14-V1,0,0   A. NO, CONTINUE SCH                     60000020
C12B     CCW   NOP,C12B+5-V1,CC+SILI,1    NOP/SS SWITCH                 63000020
C13      CCW   RHA,C8-V1,CC+SKIP,5   A. YES, FIND START OF TRK          66000020
C14      CCW   SKEQHI+MT,0,CC,0    SEARCH FOR ENTRY                     69000020
C15      CCW   TIC,C14-V1,0,0                                           72000020
C16      CCW   RDATA,C17-V1,0,10    READ CYL INDEX ENTRY                75000020
C17      DC    C'MBBCCHHR'       CYL INDEX ENTRY                        78000020
C18      DC    C'FP------'                                              81000020
V1       EQU   C01                                                      84000020
SZCP1    EQU   C18+8-C01                                                84010020
         MEND                                                           84020020
./  ADD  SSI=20670021,NAME=IGGCP10A
         MACRO                                                          05000020
         IGGCP10A &OPTCD=                                               10000020
.*          RELEASE 23 DELETIONS/CHANGES                                10010020
.*          RELEASE 22 DELETIONS/CHANGES                                10020020
.*          RELEASE 21 DELETIONS/CHANGES                                10030020
* CP10A  WRITES A RECORD OR BLOCK TO REPLACE AN EOF MARK                15000020
CB46     CCW   SIDEQ,0,CC,5             SEARCH FOR LAST DATA REC        20000020
CB47     CCW   TIC,CB46-CB1,0,0                                         25000020
CB48     CCW   WCKD,CB51-CB1,DC,8       WRITE REC OR BLOCK OVER EOF MRK 30000020
CB49     CCW   0,0,DC,0                                                 35000020
         AIF   ('&OPTCD' NE 'W').SWC                                    35010020
CB50     CCW   0,0,CC,0                                                 40000020
         AGO   .TWC                                                     40001020
.SWC     ANOP                                                           40002020
CB50     CCW   0,0,0,0                                                  40003020
.TWC     ANOP                                                           40004020
SZ10A    EQU   (CB50+8-CB46)+8                                          40010020
         AIF   ('&OPTCD' NE 'W').CCHH                                   45000020
* 10AW   WRITE VALIDITY CHECK                                           50000020
CB500    CCW   NOP,0,CC+SILI,1                                          55000020
CB50A    CCW   SIDEQ,0,CC,5           SEARCH FOR REC AGAIN              60000020
CB50B    CCW   TIC,CB50A-CB1,0,0                                        65000020
CB50C    CCW   RCKD,0,SKIP,0          READ IT BACK                      70000020
SZ10AW   EQU   CB50C+8-CB500+SZ10A                                      70010020
.CCHH    ANOP                                                           75000020
CB51     DC    2F'00'                   C C H H R KL DL DL              80000020
         MEND                                                           85000020
./  ADD  SSI=20670022,NAME=IGGCP10B
         MACRO                                                          06000020
         IGGCP10B &OPTCD=                                               12000020
.*          RELEASE 23 DELETIONS/CHANGES                                12010020
.*          RELEASE 22 DELETIONS/CHANGES                                12020020
.*          RELEASE 21 DELETIONS/CHANGES                                12030020
* CP10B  WRITES EOF MARK                                                18000020
CB52     CCW   SIDEQ,0,CC,5              SEARCH FOR LAST DATA REC       24000020
CB53     CCW   TIC,CB52-CB1,0,0                                         30000020
         AIF   ('&OPTCD' NE 'W').SWC                                    30010020
CB54     CCW   WCKD,CB55-CB1,CC,8       WRITE EOF MARK                  30020020
         AGO   .TWC                                                     30030020
.SWC     ANOP                                                           30040020
CB54      CCW   WCKD,CB55-CB1,0,8       WRITE EOF MARK                  36000020
.TWC     ANOP                                                           36001020
SZ10B    EQU   (CB54+8-CB52)+8       SIZE OF COMMON                     36010020
         AIF   ('&OPTCD' NE 'W').CCHH                                   42000020
* 10BW   WRITE VALIDITY CHECK                                           48000020
CB540    CCW   NOP,0,CC+SILI,1                                          54000020
CB54A    CCW   SIDEQ,0,CC,5              SEARCH FOR EOF MARK            60000020
CB54B    CCW   TIC,CB54A-CB1,0,0                                        66000020
CB54C    CCW   RCKD,0,SKIP,8            READ IT BACK                    72000020
LCB54C   EQU   CB54C+8-CB540                                            72010020
SZ10BW   EQU   LCB54C+SZ10B                                             72020020
.CCHH    ANOP                                                           78000020
CB55     DC    2F'00'                   C C H R R 0 0 0                 84000020
         MEND                                                           90000020
./  ADD  SSI=20670023,NAME=IGGCP11A
         MACRO                                                          00010020
         IGGCP11A                                                       00020020
.*         RELEASE 23 DELETIONS/CHANGES                                 00021020
.*         RELEASE 22 DELETIONS/CHANGES                                 00022020
.*         RELEASE 21 DELETIONS/CHANGES                                 00023020
*        CP11A--READ A BLOCK TO BE BUMPED                               00030020
CC1      CCW   SIDEQ,0,CC,5             SEARCH FOR BLOCK TO BE BUMPED   00040020
CC2      CCW   TIC,CC1-CB1,X'00',0                                      00050020
CC2A     CCW   RKD,0,DC,0               READ IN BLOCK                   00060020
CC3      CCW   X'00',0,X'00',0                                          00070020
SZ11A    EQU   CC3+8-CC1                                                00071020
         MEND                                                           00080020
./  ADD  SSI=20670024,NAME=IGGCP11B
         MACRO                                                          07000020
         IGGCP11B &OPTCD=                                               14000020
.*          RELEASE 23 DELETIONS/CHANGES                                14010020
.*          RELEASE 22 DELETIONS/CHANGES                                14020020
.*          RELEASE 21 DELETIONS/CHANGES                                14030020
* CP11B  WRITES A RE-ARRANGED BLOCK BACK ONTO PRIME DATA TRACK          21000020
CC4      CCW   SIDEQ,0,CC,5          SEARCH FOR INSERTION POINT         28000020
CC5      CCW   TIC,CC4-CB1,0,0                                          35000020
         AIF   ('&OPTCD' NE 'W').SWC                                    35010020
CC6      CCW   WKD,0,CC,0            WRITE BLOCK                        42000020
         AGO   .WC                                                      42000120
.SWC     ANOP                                                           42001020
CC6      CCW   WKD,0,0,0                WRITE BLOCK                     42002020
.WC      ANOP                                                           42003020
SZ11B    EQU   CC6+8-CC4                                                42010020
         AIF   ('&OPTCD' NE 'W').END                                    49000020
* 11BW   WRITE VALIDITY CHECK                                           56000020
CC60     CCW   NOP,0,CC+SILI,1                                          63000020
CC6A     CCW   SIDEQ,0,CC,5             SEARCH FOR BLOCK AGAIN          70000020
CC6B     CCW   TIC,CC6A-CB1,0,0                                         77000020
CC6C     CCW   RKD,0,SKIP,0             READ IT BACK                    84000020
SZ11BW   EQU   CC6C+8-CC60+SZ11B                                        84010020
.END     MEND                                                           91000020
./  ADD  SSI=20670044,NAME=IGGCP12A
         MACRO                                                          04000020
         IGGCP12A &OPTCD=                                               08000020
.*         RELEASE 23 DELETIONS/CHANGES                                 08001020
.*         RELEASE 22 DELETIONS/CHANGES                                 08002020
.*         RELEASE 21 DELETIONS/CHANGES                                 08003020
* CP12A(V) READS DATA RECORDS FOLLOWING SLOT IN WHICH NEW RECORD IS     08010020
*        TO BE INSERTED.                                                08020020
V12A     EQU    CB1                                                     08030020
         AIF   ('&OPTCD' NE 'V' AND '&OPTCD' NE 'VW').CD1               12000020
CD0      DC    C'CCHHR',X'000008'   CAPACITY RECORD FOR                 16000020
CD0A     DC    C'YYR',X'0000000000' PRIME DATA TRK                      20000020
CD0A1    CCW   SIDEQ,CD0-V12A,CC,5  SEARCH FOR R0(TRK CAP RCD)          24000020
CD0A2    CCW   TIC,CD0A1-V12A,0,0                                       28000020
CD0B     CCW   RDATA,CD0A-V12A,CC+SILI,3  READ TRK CAP RCD              32000020
CD0C     CCW   TIC,0,0,0                                                36000020
CD0D     CCW   NOP,0,CC+SILI,1   SET SECTOR IF RPS                      40000020
.CD1     ANOP                                                           44000020
CD1      CCW   SIDEQ,0,CC,5  SCH FOR RCD PRIOR TO INSERT POINT          48000020
CD2      CCW   TIC,CD1-V12A,0,0                                         52000020
         AIF   ('&OPTCD' NE 'V' AND '&OPTCD' NE 'VW').CD3               56000020
CD2A     CCW   TIC,0,0,0                                                60000020
CD2B     CCW   RKD,0,CC+SILI,0   READ KEY OF RCD PRIOR TO INSERT POINT  64000020
CD3      CCW   RDATA,0,CC+SILI,0 READ DATA OF RECORD                    68000020
SZ12AVW  EQU   CD3+8-CD0                                                68010020
         AGO   .END                                                     72000020
.CD3     ANOP                                                           76000020
CD3      CCW   RKD,0,0,0         READ RECORD                            80000020
SZ12A    EQU   CD3+8-CD1                                                80010020
.END     MEND                                                           84000020
./  ADD  SSI=20670045,NAME=IGGCP12B
         MACRO                                                          03000020
         IGGCP12B &OPTCD=                                               06000020
.*         RELEASE 23 DELETIONS/CHANGES                                 06001020
.*         RELEASE 22 DELETIONS/CHANGES                                 06002020
.*         RELEASE 21 DELETIONS/CHANGES                                 06003020
* CP12B(V) WRITES BACK PRIME DATA RECORDS.                              06010020
V12B     EQU   *                                                        06020020
         AIF   ('&OPTCD' NE 'V' AND '&OPTCD' NE 'VW').CE1               09000020
CE0      CCW   SIDEQ,CD0-CB1,CC,5   SEARCH FOR R0                       12000020
CE0A     CCW   TIC,0,0,0                                                15000020
CE0B     CCW   WD,CD0A-CB1,CC+SILI,3  WRT UPDTD TRK CAP RCD             18000020
CE0C     CCW   NOP,0,CC+SILI,1         NOP/SETSECT SWITCH               21000020
.CE1     ANOP                                                           24000020
CE1      CCW   SIDEQ,0,CC,5  SCH FOR RCD PRIOR TO INSERT POINT          27000020
CE2      CCW   TIC,CE1-V12B,0,0                                         30000020
         AIF   ('&OPTCD' NE 'V' AND '&OPTCD' NE 'VW').CE3               33000020
CE3      CCW   TIC,CE4-CE0,0,0    TO CE4 TO WRT PARTIAL TRK             36000020
CE3A     CCW   SHAEQ,CD0-CB1,CC,4  SCH FOR START OF TRK                 39000020
CE3B     CCW   TIC,CE3A-CE0,0,0                                         42000020
CE3C     CCW   WR0,CD0-CB1,CC+SILI,11 WRT UPDTD TRK CAP RCD AGAIN       45000020
CE4      CCW   WCKD,0,DC,8            PRIME DATA COUNT                  48000020
CE5      CCW   0,0,DC,0               PRIME DATA KEY                    51000020
CE6      CCW   0,0,CC,0               PRIME DATA DATA                   54000020
SZ12BVW  EQU   *-V12B                                                   54010020
         AGO   .END                                                     57000020
.CE3     ANOP                                                           60000020
CE3      CCW   WCKD,0,DC,8            PRIME DATA COUNT                  63000020
CE4      CCW   0,0,DC,0               PRIME DATA KEY                    66000020
CE5      CCW   0,0,0,0                PRIME DATA DATA                   69000020
SZ12B    EQU   *-V12B                                                   69010020
.END     MEND                                                           72000020
./  ADD  SSI=20670046,NAME=IGGCP12C
         MACRO                                                          07000020
         IGGCP12C &OPTCD=                                               14000020
.*          RELEASE 23 DELETIONS/CHANGES                                14010020
.*          RELEASE 22 DELETIONS/CHANGES                                14020020
.*          RELEASE 21 DELETIONS/CHANGES                                14030020
* CP12C  WRITES A NEW RECORD WHICH HAS REPLACED A DELETED RECORD        21000020
CL1      CCW   SIDEQ,0,CC,5              SEARCH FOR DELETED RECORD      28000020
CL2      CCW   TIC,CL1-CB1,0,0                                          35000020
         AIF   ('&OPTCD' NE 'W').VLR                                    35010020
CL3      CCW   WD,0,CC,0                 REPLACE DELETED RECORD         42000020
         AGO   .SVLR                                                    42001020
.VLR     ANOP                                                           42002020
CL3      CCW   WD,0,0,0                                                 42003020
.SVLR    ANOP                                                           42004020
SZ12C    EQU   CL3+8-CL1                                                42010020
    AIF   ('&OPTCD' NE 'W').END                                         49000020
* 12CW   WRITE VALIDITY CHECK                                           56000020
CL30     CCW   NOP,0,CC+SILI,1                                          63000020
CL3A     CCW   SIDEQ,0,CC,5              SEARCH FOR RECORD AGAIN        70000020
CL3B     CCW   TIC,CL3A-CB1,0,0                                         77000020
CL3C     CCW   RDATA,0,SKIP,0               READ IT BACK                84000020
SZ12CW   EQU   CL3C+8-CL30+SZ12C                                        84010020
.END     MEND                                                           91000020
./  ADD  SSI=20670047,NAME=IGGCP123
         MACRO                                                          03000020
         IGGCP123 &OPTCD=                                               06000020
.*         RELEASE 23 DELETIONS/CHANGES                                 06010020
.*         RELEASE 22 DELETIONS/CHANGES                                 06020020
.*         RELEASE 21 DELETIONS/CHANGES                                 06030020
         AIF   ('&OPTCD' EQ 'V').VLR                                    09000020
* 123W   ADDENDUM TO CP12A AND CP12B OR TO CP13A AND CP13B WHEN WRITE   12000020
*        CHECKING IS SPECIFIED.                                         15000020
CEA00    CCW   NOP,0,CC+SILI,1                                          18000020
CEA      CCW   SIDEQ,0,CC,5              SEARCH FOR REC OR BLOCK AGAIN  21000020
CEB      CCW   TIC,CEA-CEA00,0,0                                        24000020
CEE      CCW   RCKD,0,SKIP,0             READ IT BACK                   27000020
SZ123    EQU   CEE+8-CEA00                                              27010020
         AGO   .END                                                     30000020
.VLR     ANOP                                                           33000020
* 123WV  ADDENDUM TO CP12AV AND 12BV WHEN WRITE CHECKING IS SPECIFIED   36000020
CEA00    CCW   NOP,CEA00+5-CEA00,CC+SILI,1                              39000020
CEA0     CCW   SIDEQ,CD0-CB1,CC,5        SEARCH FOR TRACK CAPACITY      42000020
CEA05    CCW   TIC,CEA0-CEA00,0,0        RECORD (R0)                    45000020
CEA1     CCW   RDATA,0,CC+SILI+SKIP,3       READ CAPACITY RECORD        48000020
CEA2     CCW   TIC,CEA-CB1,0,0           TIC TO CED IF THE FULL TRACK   48010020
*                                        IS BEING CHECKED               48020020
CEA3     CCW   NOP,0,CC,1                                               54000020
CEA      CCW   SIDEQ,0,CC,5              SEARCH FOR FIRST DATA RECORD   57000020
CEB      CCW   TIC,CEA-CEA00,0,0         AGAIN                          60000020
CED      CCW   RCKD,0,DC+SKIP+SILI,8     READ RECORD BACK               63000020
CEE      CCW   RKD,0,CC+SKIP+SILI,0      THE NUMBER OF CEE-CEF SETS     63010020
CEF      CCW   RCKD,0,CC+SKIP+SILI,0     EQUALS DCBHIRPD                69000020
SZ123V   EQU   CEF+8-CEA00                                              69010020
.END     MEND                                                           72000020
./  ADD  SSI=20670048,NAME=IGGCP13A
         MACRO                                                          00011020
         IGGCP13A                                                       00012020
.*         RELEASE 23 DELETIONS/CHANGES                                 00012120
.*         RELEASE 22 DELETIONS/CHANGES                                 00012220
.*         RELEASE 21 DELETIONS/CHANGES                                 00012320
*        CP13A--READ INSERT SLOT AND THE FOLLOWING BLOCKS               00013020
CF1      CCW   SIDEQ,0,CC,5             SEARCH FOR FIRST RECORD TO READ 00020020
CF2      CCW   TIC,CF1-CB1,X'00',0                                      00030020
CF3      CCW   RDATA,0,X'00',0          FIRST PRIME DATA BLOCK          00040020
CF4      CCW   RDCNT,0,CC,8             READ NEXT BLOCK                 00050020
CF5      CCW   RDATA,0,X'00',0                                          00060020
SZ13A    EQU   CF5+8-CF1                SIZE OF CP13A                   00061020
         MEND                                                           00070020
./  ADD  SSI=20670049,NAME=IGGCP13B
         MACRO                                                          00010020
         IGGCP13B                                                       00011020
.*         RELEASE 23 DELETIONS/CHANGES                                 00011120
.*         RELEASE 22 DELETIONS/CHANGES                                 00012020
.*         RELEASE 21 DELETIONS/CHANGES                                 00013020
*        CP13B--WRITE BACK THE REARRANGED BLOCKS READ BY CP13A          00020020
RP0      EQU   0                                                        00030020
CG1      CCW   SIDEQ,0,CC,5             SEARCH FOR REC PRIOR TO INSERT  00040020
CG2      CCW   TIC,RP0,X'00',0                                          00050020
CG3      CCW   WCKD,0,DC,8              WRITE BACK PRIME DATA BLOCK     00060020
CG4      CCW   X'00',0,DC,0             KEY                             00070020
CG5      CCW   X'00',0,X'00',0          DATA                            00080020
SZ13B    EQU   CG5+8-CG1                                                00081020
         MEND                                                           00090020
./  ADD  SSI=20670050,NAME=IGGCP13C
         MACRO                                                          06000020
         IGGCP13C &OPTCD=                                               12000020
.*         RELEASE 23 DELETIONS/CHANGES                                 12010020
.*         RELEASE 22 DELETIONS/CHANGES                                 12020020
.*         RELEASE 21 DELETIONS/CHANGES                                 12030020
* CP13C  WRITES BACK BLOCK IF THE INSERTION IS A RECORD WITH A KEY      18000020
*        IDENTICAL TO THAT OF A RECORD, WHICH ALTHOUGH LOGICALLY        24000020
*        DELETED,IS STILL PHYSICAL PRESENT WITHIN THE BLOCK.            30000020
CL5      CCW   SIDEQ,0,CC,5              SEARCH FOR BLOCK INSERTION     36000020
CL6      CCW   TIC,CL5-CB1,0,0            POINT                         42000020
         AIF   ('&OPTCD' NE 'W').SWC                                    42010020
CL7      CCW   WD,0,CC,0                 REPLACE BLOCK                  48000020
         AGO   .WC                                                      48001020
.SWC     ANOP                                                           48002020
CL7      CCW   WD,0,0,0                 REPLACE BLOCK                   48003020
.WC      ANOP                                                           48004020
SZ13C    EQU   CL7+8-CL5                                                48010020
         AIF   ('&OPTCD' NE 'W').END                                    54000020
* 13CW   WRITE VALIDITY CHECK                                           60000020
CL70     CCW   NOP,0,CC+SILI,1                                          66000020
CL7A     CCW   SIDEQ,0,CC,5              FIND RECORD AGAIN              72000020
CL7B     CCW   TIC,CL7A-CB1,0,0                                         78000020
CL7C     CCW   RDATA,0,SKIP,0               READ IT BACK                84000020
SZ13CW   EQU   CL7C+8-CL70+SZ13C                                        84010020
.END     MEND                                                           90000020
./  ADD  SSI=20670051,NAME=IGGCP14
        MACRO                                                           00900020
         IGGCP14  &OPTCD=                                               00901020
.*         RELEASE 23 DELETIONS/CHANGES                                 00910020
.*         RELEASE 22 DELETIONS/CHANGES                                 00920020
.*         RELEASE 21 DELETIONS/CHANGES                                 00930020
*  CP14--PART TWO--REWRITE COCR AND TRACK INDEX                         02700020
CH1      CCW   SIDEQ,0,CC,5             SEARCH FOR COCR                 03600020
CH2      CCW   TIC,CH1-CB1,X'00',0                                      04500020
CH3      CCW   WD,CB22-CB1,CC+SILI,6    WRITE NEW COCR FROM CP8         05400020
LCH3     EQU   CH3+8-CH1                LENGTH OF COMMON SEGMENT        05410020
         AIF  ('&OPTCD' NE 'W' AND '&OPTCD' NE 'VW').SKIP1              06300020
CH3A1    CCW   NOP,CH3A1+5-CB1,CC+SILI,1 SET SECTOR TO ZERO IF RPS      07200020
CH3A     CCW   SIDEQ,0,CC,5             SEARCH FOR COCR AGAIN           08100020
CH3B     CCW   TIC,CH3A-CB1,X'00',0                                     09000020
CH3C     CCW   RDATA,0,CC+SILI+SKIP,8   READ IT BACK                    09900020
LCH3C    EQU   CH3C+8-CH3A1             LENGTH OF WRT CHK SEGMENT       09910020
.SKIP1   ANOP                                                           10800020
         AIF  ('&OPTCD' NE 'V' AND '&OPTCD' NE 'VW').SK1                11700020
CH4      CCW   TIC,0,0,0                CH5, CH8G, OR CH14              12600020
         AGO   .SK12                                                    13500020
.SK1     ANOP                                                           14400020
CH4      CCW   TIC,0,X'00',0            CH5, CH8D, CH9, OR CH14         15300020
.SK12    ANOP                                                           16200020
CH5      CCW   NOP,0,CC+SILI,6          SEARCH FOR PRIME IX ENTRY       17100020
CH55     CCW   SIDEQ,CB22+6-CB1,CC,5    (ENTRY POINT FOR SETUPS 1/2)    18000020
CH6      CCW   TIC,CH55-CB1,0,0                                         18900020
CH7      CCW   WKD,0,DC,0               WRITE NEW PRIME IX KEY          19800020
CH8      CCW   X'00',CB10+7-CB1,CC,10   AND DATA                        20700020
LCH8     EQU   CH8+8-CH4                LENGTH OF COMMON                20710020
         AIF  ('&OPTCD' NE 'W' AND '&OPTCD' NE 'VW').SKIP2              21600020
CH80     CCW   NOP,0,CC+SILI,1          SET SECTOR IF RPS               22500020
CH8A     CCW   SIDEQ,CB22+6-CB1,CC,5    SEARCH FOR ENTRY AGAIN          23400020
CH8B     CCW   TIC,CH8A-CB1,X'00',0                                     24300020
CH8C     CCW   RKD,0,CC+SKIP,0          READ IT BACK                    25200020
LCH8C    EQU   CH8C+8-CH80              LENGTH OF WRITE CHK             25210020
.SKIP2   ANOP                                                           26100020
         AIF   ('&OPTCD' NE 'V' AND '&OPTCD' NE 'VW').SK3               27000020
CH8D     CCW   TIC,CH8G5-CB1,0,0        TIC TO CH8G5                    27900020
CH8E     DC    D'0'                     THIS CCW NOT USED               28800020
CH8F     DC    D'0'                     THIS CCW NOT USED               29700020
CH8G     CCW   NOP,0,CC+SILI,1          SET SECTOR FOR RPS              31500020
CH8G5    CCW   SIDEQ,CB24-CB1,CC,5      SRCH FOR OVERFLOW TRK IX ENTRY  32400020
CH9      CCW   TIC,CH8G5-CB1,0,0                                        33300020
CH10     CCW   TIC,0,0,0                TIC TO CH12 OR CH13             34200020
         AGO   .SK35                                                    35100020
.SK3     ANOP                                                           36000020
CH8D     CCW   SIDEQ,CB24-CB1,CC,5      SEARCH FOR OVERFLOW TRACK       37800020
CH8E     CCW   TIC,CH8D-CB1,X'00',0     INDEX ENTRY                     38700020
CH8F     CCW   WD,CB25-CB1,CC,10        WRITE NEW DATA ONLY             39600020
CH8G     CCW   TIC,CH13+8-CB1,X'00',0                                   40500020
CH9      CCW   NOP,0,CC+SILI,1          SET SECTOR IF RPS               41400020
CH95     CCW   SIDEQ,CB24-CB1,CC,5      SEARCH OVERFLOW TRACK           42300020
CH10     CCW   TIC,CH95-CB1,X'00',0     INDEX ENTRY                     43200020
.SK35    ANOP                                                           44100020
CH12     CCW   WKD,0,DC,0                                               45000020
CH13     CCW   WD,CB25-CB1,CC,10        WRITE OVERFLOW INDEX ENTRY      45900020
LCH13    EQU   CH13+8-CH8D              LENGTH OF COMMON SEGMENT        45920020
         AIF   ('&OPTCD' NE 'W' AND '&OPTCD' NE 'VW').SKIP3             46800020
CH130    CCW   NOP,0,CC+SILI,1          SET SECTOR IF RPS               47700020
CH13A    CCW   SIDEQ,CB24-CB1,CC,5      SEARCH FOR ENTRY AGAIN          48600020
CH13B    CCW   TIC,CH13A-CB1,X'00',0                                    49500020
CH13C    CCW   RKD,0,CC+SKIP,0          READ IT BACK                    50400020
LCH13C   EQU   CH13C+8-CH130            LENGTH OF WRITE CHK CCWS        50410020
.SKIP3   ANOP                                                           51300020
         AIF   ('&OPTCD' EQ 'V' OR  '&OPTCD' EQ 'VW').SKIP4             52200020
CH14     CCW   X'00',CH23+1-CB1,CC,6    SEEK NEW OVERFLOW RECORD        53100020
*        SEEK SET BY APPENDAGE. FOR USER WORKAREA THIS CCW IS A NOP.    54000020
         AGO   .SKIP45                                                  54900020
.SKIP4   ANOP                                                           55800020
CH14     CCW   NOP,0,SILI,1          STOPPING CCW                       56700020
.SKIP45  ANOP                                                           57600020
*  CP14--PART ONE--WRITE OVERFLOW RECORD                                58500020
CH150    CCW   NOP,0,CC+SILI,1          SET SECTOR IF RPS               59400020
CH15     CCW   SIDEQ,CH23+3-CB1,CC,5    SEARCH FOR OVERFLOW SLOT        60300020
CH15A    CCW   TIC,CH15-CB1,X'00',0                                     61200020
CH16     CCW   WCKD,CH24-CB1,DC,8       WRITE NEW OVERFLOW RECORD       62100020
CH17     CCW   X'00',0,DC,0                                             63000020
CH18     CCW   X'00',0,CC,0                                             63900020
LCH18    EQU   CH18+8-CH14              LENGTH OF COMMON SEGMENT        63910020
         AIF   ('&OPTCD' NE 'W' AND '&OPTCD' NE 'VW').SKIP5             64800020
CH180    CCW   NOP,0,CC+SILI,1          SET SECTOR IF RPS               65700020
CH18A    CCW   SIDEQ,CH23+3-CB1,CC,5    SEARCH FOR NEW OVERFLOW RECORD  66600020
CH18B    CCW   TIC,CH18A-CB1,X'00',0                                    67500020
CH18C    CCW   RCKD,0,SKIP,0            READ IT BACK                    68400020
LCH18C   EQU   CH18C+8-CH180            LENGTH OF WRITE CHK             68410020
.SKIP5   ANOP                                                           69300020
*        TERMINATION FOR SETUPS 1,2,5, AND 6                            70200020
CH19     CCW   X'00',CJ11+1-CB1,CC,6    SEEK PRIOR OVERFLOW RECORD      71100020
CH200    CCW   NOP,0,CC+SILI,1          SET SECTOR IF RPS               72000020
CH20     CCW   SIDEQ,CJ11+3-CB1,CC,5    SEARCH FOR RECORD               72900020
CH21     CCW   TIC,CH20-CB1,00,0                                        73800020
         AIF   ('&OPTCD' NE 'W' AND '&OPTCD' NE 'VW').NOCC22            73810020
CH22     CCW   WD,0,CC,0                WRITE BACK PRIOR OFLOW REC      74700020
         AGO   .REJOIN                                                  74701020
.NOCC22  ANOP                                                           74702020
CH22     CCW   WD,0,00,0                WRITE BACK PRIOR OFLOW REC      74703020
.REJOIN  ANOP                                                           74704020
LCH22    EQU   CH22+8-CH19              LENGTH OF COMMON SEGMENT        74710020
         AIF   ('&OPTCD' NE 'W' AND '&OPTCD' NE 'VW').SKIP6             75600020
CH220    CCW   NOP,0,CC+SILI,1          SET SECTOR IF RPS               76500020
CH22A    CCW   SIDEQ,CJ11+3-CB1,CC,5    SEARCH FOR PRIOR OFLOW AGAIN    77400020
CH22B    CCW   TIC,CH22A-CB1,0,0                                        78300020
CH22C    CCW   RDATA,0,SKIP,0           READ IT BACK                    79200020
LCH22C   EQU   CH22C+8-CH220            LENGTH OF WRITE CHK             79210020
.SKIP6   ANOP                                                           80100020
*        TERMINATION FOR SETUPS 3 AND 4                                 81000020
CH23     DC    D'0'                     M B B C C H H R                 81900020
CH24     DC    D'0'                     C C H H R KL DL DL              82800020
LCH24    EQU   CH24+8-CH23                                              82810020
SZ14     EQU   LCH3+LCH8+LCH13+LCH18+LCH22+LCH24                        82820020
         AIF   ('&OPTCD' NE 'W' AND '&OPTCD' NE 'VW').SKIP7             82830020
SZ14W    EQU   SZ14+LCH3C+LCH8C+LCH13C+LCH18C+LCH22C                    82840020
.SKIP7   ANOP                                                           82850020
         AIF   ('&OPTCD' EQ 'V' OR '&OPTCD' EQ 'VW').EOFX               83700020
         MEXIT                                                          83710020
.EOFX    ANOP                                                           83720020
*        EOF EXTENSION                                                  84600020
CH25     CCW   SIDEQ,CH31+3-CB1,CC,5    SEARCH FOR LAST OFLOW REC       85500020
CH26     CCW   TIC,CH25-CB1,0,0                                         86400020
CH27     CCW   WCKD,CH32-CB1,CC,8       WRITE EOF                       87300020
LCH27    EQU   CH27+8-CH23              LENGTH OF COMMON SEGMENT        87310020
         AIF   ('&OPTCD' NE 'VW').SK4                                   88200020
CH280    CCW   NOP,0,CC+SILI,1          SET SECTOR IF RPS               89100020
CH28     CCW   SIDEQ,CH31+3-CB1,CC,5    SEARCH FOR EOF AGAIN            90000020
CH29     CCW   TIC,CH28-CB1,0,0                                         90900020
CH30     CCW   RCKD,0,SKIP,8            READ IT BACK                    91800020
LCH30    EQU   CH30+8-CH280             LENGTH OF WRITE CHK             91810020
.SK4     ANOP                                                           92700020
CH31     DC    D'0'                     M B B C C H H R OF LAST OFLOW   93600020
CH32     DC    D'0'                     C C H H R KL DL DL OF EOF       94500020
LCH32    EQU   CH32+8-CH31                                              94510020
SZ14VW   EQU   SZ14W+LCH27+LCH30+LCH32                                  94520020
         MEND                                                           95400020
./  ADD  SSI=20670052,NAME=IGGCP15
               MACRO                                                    06000020
         IGGCP15                                                        12000020
.*         RELEASE 23 DELETIONS/CHANGES                                 12010020
.*         RELEASE 22 DELETIONS/CHANGES                                 12020020
.*         RELEASE 21 DELETIONS/CHANGES                                 12030020
*        CP15--READ COCR AND OVERFLOW INDEX ENTRY FOR ADD-TO-END        18000020
CI1      CCW   SIDEQ,0,CC,5             SEARCH FOR COCR                 24000020
CI1A     CCW   TIC,CI1-CB1,0,0                                          30000020
CI1B     CCW   RDATA,CB22-CB1,CC+SILI,6    READ COCR INTO CP8           36000020
CI1C     CCW   SEEKHH,CI5-CB1,CC,6      FIND LAST ACTIVE INDEX TRACK    42000020
CI1D     CCW   NOP,0,CC+SILI,1          SET SECTOR IF RPS               48000020
CI1E     CCW   SIDEQ,CI5+2-CB1,CC,5     SEARCH FOR INDEX ENTRY'S ID     54000020
CI2      CCW   TIC,CI1E-CB1,0,0                                         60000020
CI3      CCW   RDCNT+MT,CB24-CB1,CC,8   READ COUNT AND DATA OF LAST     66000020
CI4      CCW   RDATA,CB25-CB1,X'00',10  OVERFLOW ENTRY INTO CP8         72000020
CI5      DC    D'0'                     B B C C H H R OF LAST NORMAL IX 78000020
SZ15     EQU   CI5+8-CI1                                                78010020
         MEND                                                           84000020
./  ADD  SSI=20670058,NAME=IGGCP16
         MACRO                                                          09000020
         IGGCP16   &OPTCD=                                              18000020
.*         RELEASE 23 DELETIONS/CHANGES                                 18010020
.*         RELEASE 22 DELETIONS/CHANGES                                 18020020
.*         RELEASE 21 DELETIONS/CHANGES                                 18030020
*  CP16--SEARCH AN OVERFLOW CHAIN FOR LAST RECORD OR FOR THE RECORD     27000020
*        PRECEDING THE NEW RECORD TO BE ADDED.                          36000020
CJ1      CCW   SIDEQ,0,CC,5             SEARCH FOR NEXT OFLOW IN CHAIN  45000020
CJ2      CCW   TIC,CJ1-CB1,0,0                                          54000020
CJ3      CCW   SKEQHI,0,CC,0            SEE IF DESIRED RECORD           63000020
CJ4      CCW   TIC,CJ10-CB1,X'00',0     NO, READ LINK FIELD             63010020
CJ4A     CCW   NOP,0,CC+SILI,1          SET SECTOR IF RPS               63020020
CJ5      CCW   SIDEQ,0,CC,5             SEARCH FOR OVERFLOW REC AGAIN   63030020
CJ6      CCW   TIC,CJ5-CB1,X'00',0                                      63040020
CJ7      CCW   SKEQ,0,CC,0              TEST IF KEY = USER KEY          63050020
CJ8      CCW   NOP,0,SILI,1             NO, STOP HERE                   63060020
         AIF   ('&OPTCD' NE 'V' AND '&OPTCD' NE 'VW').NOTVLR            72001020
CJ9      CCW   RDATA,0,SILI,19          RD LINK, BDW, RDW, AND DEL BYTE 72010020
CJ10     CCW   RDATA,0,SILI,0           READ DATA                       72010120
         AGO   .OUT                                                     72012020
.NOTVLR  ANOP                                                           72020020
CJ9      CCW   RDATA,0,SILI,11          RD LINK FIELD AND DELETE BYTE   72030020
CJ10     CCW   RDATA,0,X'00',0          READ DATA                       72040020
.OUT     ANOP                                                           72050020
CJ11     DC    D'0'                     M B B C C H H R OF PRIOR RECORD 81000020
SZ16     EQU   CJ11+8-CJ1                                               81010020
SZ16V    EQU   SZ16                                                     81020020
         MEND                                                           90000020
./  ADD  SSI=20670059,NAME=IGGCP17
         MACRO                                                          04000020
         IGGCP17  &OPTCD=                                               08000020
.*          RELEASE 23 DELETIONS/CHANGES                                08010020
.*          RELEASE 22 DELETIONS/CHANGES                                08020020
.*          RELEASE 21 DELETIONS/CHANGES                                08030020
* CP17   CHANGES THE KEY IN A RECORD OR OVERFLOW TRACK INDEX ENTRY OR   12000020
*        IN A HIGHER LEVEL INDEX ENTRY                                  16000020
CK1      CCW   SIDEQ,0,CC,5              SEARCH FOR LAST INDEX ENTRY    20000020
CK2      CCW   TIC,CK1-CB1,0,0                                          24000020
CK3      CCW   RDATA,CK8-CB1,CC,10          READ DATA OF LAST ENTRY     28000020
CK30     CCW   NOP,0,CC+SILI,1                                          32000020
CK4      CCW   SIDEQ,0,CC,5              SEARCH FOR ENTRY AGAIN         36000020
CK5      CCW   TIC,CK4-CB1,0,0                                          40000020
CK6      CCW   WKD,0,DC,0               WRITE NEW HIGH KEY AND REWRITE  44000020
         AIF   ('&OPTCD' NE 'W' AND '&OPTCD' NE 'VW').SWC               44010020
CK7      CCW   X'00',CK8-CB1,CC,10      DATA 0F ENTRY                   44020020
         AGO   .TWC                                                     44030020
.SWC     ANOP                                                           44040020
CK7      CCW   X'00',CK8-CB1,0,10       DATA OF ENTRY                   48000020
.TWC     ANOP                                                           48001020
SZ17     EQU   (CK7+8-CK1)+16            L'(CK1 - CK7) + L'(CK8 - CK9)  48010020
         AIF   ('&OPTCD' NE 'W' AND '&OPTCD' NE 'VW').CKNOP             52000020
* 17W    WRITE VALIDITY CHECK                                           56000020
CK70     CCW   NOP,0,CC+SILI,1                                          60000020
CK7A     CCW   SIDEQ,0,CC,5            SEARCH FOR UPDATED ENTRY         64000020
CK7B     CCW   TIC,CK7A-CB1,0,0                                         68000020
CK7C     CCW   RKD,0,SKIP,0            READ IT BACK                     72000020
SZ17W    EQU   CK7C+8-CK70+SZ17     L'(CK70 - CK7C) + SZ17              72010020
.CKNOP   ANOP                                                           76000020
CK8      DC    2F'00'                   M B B C C H H R                 80000020
CK9      DC    2F'00'                   F P _ _ _ _ _ _                 84000020
         MEND                                                           88000020
./  ADD  SSI=20670013,NAME=IGGCP2
         MACRO                                                          05000020
         IGGCP2                                                         10000020
.*         RELEASE 23 DELETIONS/CHANGES                                 10010020
.*         RELEASE 22 DELETIONS/CHANGES                                 10020020
.*         RELEASE 21 DELETIONS/CHANGES                                 10030020
* CP2    SEARCHES A CYLINDER INDEX WHEN IT IS THE HIGHEST LEVEL         15000020
*        SEARCHED ON THE DEVICE.                                        20000020
C28      CCW   SIDEQ,0,CC+SILI,4  SEARCH TO VERIFY SEEK                 25000020
C29      CCW   TIC,C28-V2,0,0                                           30000020
C30      CCW   SKEQHI,0,CC+SILI,0      Q. TOO FAR ALONG INDEX           35000020
C31      CCW   TIC,C33-V2,0,0          A. NO, CONTINUE SEARCH           40000020
C31B     CCW   NOP,C31B+5-V2,CC+SILI,1    NOP/SS SWITCH                 45000020
C32      CCW   RHA,C37-V2,CC+SKIP,5    A. YES,FIND START OF TRK         50000020
C33      CCW   SKEQHI+MT,0,CC,0      SEARCH FOR ENTRY                   55000020
C34      CCW   TIC,C33-V2,0,0                                           60000020
C35      CCW   RDATA,C36-V2,0,10             READ CYL INDEX             65000020
C36      DC    C'MBBCCHHR'      CYL INDEX ENTRY                         70000020
C37      DC    C'FP------'                                              75000020
V2       EQU   C28                                                      80000020
SZCP2    EQU   C37+8-C28                                                80010020
         MEND                                                           80020020
./  ADD  SSI=31321028,NAME=IGGCP22
         MACRO                                                          00020020
         IGGCP22                                                        00030020
*    03/20/73          LEVEL=01                                         00040002
*                                  **** CHANNEL PROGRAM 22A ****        00070020
CN1      CCW   SIDEQ+MT,CN6-CN1+3,CC,5  FIND RECORD                     00080020
CN2      CCW   TIC,CN1-CN1,0,0                                          00090020
CN2FLGS  EQU   CN2+4                    CCW FLAGS FIELD                 00092002
CN2CNT   EQU   CN2+6                    CCW BYTE COUNT FIELD            00094002
CN3      CCW   RKD,CN4-CN1,DC,0         READ IN KEY (TIC IF DATA ONLY)  00100020
CN3KEY   EQU   CN3+6                    KEY LENGTH                      00102002
CN4      CCW   RDATA,0,CC,0             READ IN DATA                    00110020
CN4FLGS  EQU   CN4+4                    CCW FLAGS FIELD                 00112002
CN4DL    EQU   CN4+6                    DATA LENGTH                     00114002
CN5      CCW   TIC,0,0,0                TIC TO NEXT CP                  00120020
CN6      DC    D'0'                     MBBCCHHR                        00130020
CN6HHR   EQU   CN6+5                    HHR FROM MBBCCHHR               00132002
CN6HR    EQU   CN6+6                    HR FROM MBBCCHHR                00134002
CN6R     EQU   CN6+7                    RECORD NO. FROM MBBCCHHR        00136002
CN7      DC    D'0'                     BUFFER ADDRESS + OFFSET         00140020
CP22LEN  EQU   CN7+8-CN1                                                00141020
         MEND                                                           00150020
./  ADD  SSI=20670016,NAME=IGGCP23
         MACRO                                                          00020020
         IGGCP23                                                        00030020
.*         RELEASE 23 DELETIONS/CHANGES                                 00040020
.*         RELEASE 22 DELETIONS/CHANGES                                 00050020
.*         RELEASE 21 DELETIONS/CHANGES                                 00060020
*                                  **** CHANNEL PROGRAM 23 ****         00070020
CS1      CCW   SIDEQ,0,CC+SILI,4        VALIDATE SEEK                   00080020
CS1A     CCW   TIC,CS1-CS1,0,0                                          00090020
CS1B     CCW   SKEQHI,0,CC+SILI,0       TOO FAR ALONG INDEX             00100020
CS1C     CCW   TIC,CS2-CS1,0,0                                          00110020
CS1D     CCW   NOP,CS1D-CS1+5,CC+SILI,1 SET SECTOR SLOT FOR RPS         00120020
CS1E     CCW   RHA,0,CC+SKIP,5          POSITION TO HOME ADDRESS        00130020
CS2      CCW   SKEQHI+MT,0,CC,0         SEARCH INDEX ON KEY             00140020
CS3      CCW   TIC,CS2-CS1,0,0                                          00150020
CS4      CCW   RDATA,CS6-CS1+7,CC,10    READ CURRENT INDEX ENTRY        00160020
CS5      CCW   TIC,CS8-CS1,0,0                                          00170020
CS6      DC    C'        '              -------M                        00180020
CS7      DC    C'        '              BBCCHHRF                        00190020
CS8      CCW   0,CS7-CS1,CC,6           SEEK TRACK INDEX                00200020
CS80     CCW   NOP,CS80-CS1+5,CC+SILI,1 SLOT FOR SET SECTOR - RPS       00210020
CS9      CCW   SIDEQ,0,CC,5             POSITION TO TRACK INDEX         00220020
CS9A     CCW   TIC,CS9-CS1,0,0                                          00230020
CS10     CCW   RDCNT+MT,0,CC,8          COUNT OF CURRENT INDEX ENTRY    00240020
CS11     CCW   SKEQHI,0,CC,0            SEARCH ON KEY                   00250020
CS12     CCW   TIC,CS10-CS1,0,0                                         00260020
CS13     CCW   RDATA,CS17+7-CS1,CC,10    DATA OF CURRENT INDEX ENTRY    00270020
CS14     CCW   RDCNT+MT,0,CC,8           COUNT OF NEXT INDEX ENTRY      00280020
CS15     CCW   RDATA,0,CC+SILI,10        DATA OF NEXT INDEX ENTRY       00290020
CS16     CCW   TIC,CS19-CS1,0,0                                         00300020
CS17     DC    C'        '              -------M                        00310020
CS18     DC    C'        '              BBCCHHRF                        00320020
CS19     CCW   0,CS18-CS1,CC,6          SEEK PRIME TRACK                00330020
CS19A    CCW   NOP,CS19A+5-CS1,CC+SILI,1 SLOT FOR SET SECTOR - RPS      00340020
CS20     CCW   SIDEQ,CS18+2-CS1,CC,5    SEARCH FIRST DATA RECORD        00350020
CS21     CCW   TIC,CS20-CS1,0,0                                         00360020
CS26     CCW   TIC,CS22-CS1,0,0        TIC TO CS22                      00360420
CS25     CCW   RDCNT,0,CC+SILI,5        READ COUNT OF RECORD            00362020
CS22     CCW   SKEQ,0,CC+SILI,0         SEARCH FOR DESIRED BLOCK        00370020
CS23     CCW   TIC,CS25-CS1,0,0                                         00380020
CS24     CCW   NOP,0,SILI,1             EXIT WHEN RECORD FOUND          00390020
*                                       *  OR READ SECTOR               00391020
CP23LEN  EQU   CS24+8-CS1                                               00420020
         MEND                                                           00430020
./  ADD  SSI=20670017,NAME=IGGCP24
         MACRO                                                          00020020
         IGGCP24                                                        00030020
.*         RELEASE 22 DELETIONS/CHANGES                                 00040020
.*         RELEASE 21 DELETIONS/CHANGES                                 00050020
.*         RELEASE 20 DELETIONS/CHANGES                                 00060020
*                                  **** CHANNEL PROGRAM 24 ****         00070020
W1CN8    DS    0D                                                       00080020
CN8      CCW   SIDEQ,0,CC,5             FIND NEXT INDEX ENTRY           00090020
W1CN9    DS    0D                                                       00100020
CN9      CCW   TIC,0,0,0                                                00110020
W1CN10   DS    0D                                                       00120020
CN10     CCW   RDATA,0,CC,10            READ CURRENT ENTRY              00130020
W1CN11   DS    0D                                                       00140020
CN11     CCW   RDATA+MT,0,CC,10         READ CURRENT OVERFLOW ENTRY     00150020
W1CN12   DS    0D                                                       00160020
CN12     CCW   RDCNT+MT,0,CC,8          READ NEXT ENTRY                 00170020
W1CN13   DS    0D                                                       00180020
CN13     CCW   RDATA,0,CC,10            READ DATA NEXT ENTRY            00190020
W1CN14   DS    0D                                                       00200020
CN14     CCW   SEEKHH,0,CC,6            SEEK TO NEXT TRACK              00210020
W1CN14A  DS    0D                                                       00220020
CN14A    CCW   NOP,CN14A+5-CN8,CC+SILI,1  SET SECTOR IF RPS             00230020
W1CN15   DS    0D                                                       00240020
CN15     CCW   TIC,0,0,0         TRANSFER TO READ OR WRITE THE RECORD   00250020
CP24LEN  EQU   CN15+8-CN8                                               00260020
         MEND                                                           00270020
./  ADD  SSI=20670018,NAME=IGGCP25
         MACRO                                                          00020020
         IGGCP25                                                        00030020
.*         RELEASE 23 DELETIONS/CHANGES                                 00040020
.*         RELEASE 22 DELETIONS/CHANGES                                 00050020
.*         RELEASE 21 DELETIONS/CHANGES                                 00060020
*                                 **** CHANNEL PROGRAM 25 ****          00070020
CN20     CCW   SIDEQ,0,CC,5             SEARCH FOR CORRECT RECORD       00080020
CN21     CCW   TIC,CN20-CN20,0,0                                        00090020
CN22     CCW   RKD,0,CC+SILI,0          READ RECORD IN                  00100020
CN23     CCW   SEEKHH,CN31+1-CN20,CC,6  SEEK TO BEGINNING TRACK INDEX   00110020
CN23A    CCW   NOP,CN23A+5-CN20,CC+SILI,1 SLOT FOR RPS INSTRUCTION      00120020
CN24     CCW   RHA,CN31-CN20,CC+SKIP,5  POSITION TO START OF TRACK      00130020
CN25     CCW   SKEQHI+MT,0,CC,0         SEARCH FOR TRK IX ENTRY         00140020
CN26     CCW   TIC,CN25-CN20,0,0                                        00150020
CN27     CCW   RDATA,0,CC,10            READ CURRENT INDEX ENTRY        00160020
CN28     CCW   RDATA+MT,0,CC,10         READ CURRENT OVERFLOW ENTRY     00170020
CN29     CCW   RDCNT+MT,0,CC,8          READ NEXT COUNT                 00180020
CN30     CCW   RDATA,0,0,10             READ NEXT DATA OR DUMMY ENTRY   00190020
CN31     DC    C'        '              MBBCCHR - ADDRESS TRACK INDEX   00200020
CP25LEN  EQU   CN31+8-CN20                                              00210020
         MEND                                                           00220020
./  ADD  SSI=20670019,NAME=IGGCP26
         MACRO                                                          00020020
         IGGCP26                                                        00030020
.*         RELEASE 22 DELETIONS/CHANGES                                 00040020
.*         RELEASE 21 DELETIONS/CHANGES                                 00050020
.*         RELEASE 20 DELETIONS/CHANGES                                 00060020
*                                  **** CHANNEL PROGRAM 26 ****         00070020
CS27     CCW   SIDEQ,0,CC,5             SRCH 1ST REC OVERFLOW CHAIN     00080020
CS28     CCW   TIC,CS27-CS1,0,0                                         00090020
CS29     CCW   SKEQHI,0,CC,0            PAST KEY YET                    00100020
CS30     CCW   TIC,CS32-CS1,0,0                                         00110020
CS31     CCW   NOP,0,SILI,1             STOP IF PAST                    00120020
CS32     CCW   RDATA,CS34+7-CS1,CC+SILI,10 READ IN NEXT OVERFLOW CHAIN  00130020
CS33     CCW   TIC,CS36-CS1,0,0                                         00140020
CS34     DC    C'        '              -------M  ADDRESS OF OVERFLOW   00150020
CS35     DC    C'        '              BBCCHHRF    RECORD              00160020
CS36     CCW   0,CS35-CS1,CC,6          SEEK OVERFLOW TRACK             00170020
CS37     CCW   SIDEQ,CS35-CS1+2,CC,5      SRCH NEXT OVERFLOW RECORD     00180020
CS38     CCW   TIC,CS37-CS1,0,0                                         00190020
CS39     CCW   TIC,CS29-CS1,0,0         FOUND BR TO CHECK FOR KEY       00200020
CP26LEN  EQU   CS39+8-CS27                                              00210020
         MEND                                                           00220020
./  ADD  SSI=20670011,NAME=IGGCP4
         MACRO                                                          04000020
         IGGCP4                                                         08000020
.*         RELEASE 23 DELETIONS/CHANGES                                 08010020
.*         RELEASE 22 DELETIONS/CHANGES                                 08020020
.*         RELEASE 21 DELETIONS/CHANGES                                 08030020
* CP4    SEARCHES A TRACK INDEX                                         12000020
CA01     CCW   SIDEQ,0,CC+SILI,4    SEARCH TO VERIFY SEEK               16000020
CA02     CCW   TIC,CA01-V4,0,0                                          20000020
CA03     CCW   TIC,CA5-V4,0,0        TIC CA1 IF 1ST TRK SHRD.           24000020
CA1      CCW   SIDEQHI,0,CC,5 Q. IN THE PRIME DATA PART OF TRK          28000020
CA2      CCW   TIC,CA5-V4,0,0 A. NO, CONTINUE SEARCH                    32000020
CA4      CCW   TIC,CA6B-V4,0,0 A. YES, GO TO RE-ORIENT                  36000020
CA5      CCW   SKEQHI,0,CC+SILI,0 Q. TOO FAR ALONG INDEX                40000020
CA6      CCW   TIC,CA8-V4,0,0     A. NO, CONTINUE SEARCH                44000020
CA6B     CCW   NOP,CA6B+5-V4,CC+SILI,1 NOP/SS SWITCH                    48000020
CA7      CCW   RHA,CA12-V4,CC+SKIP,5 A. YES, FIND START OF TRK          52000020
CA8      CCW   SKEQHI+MT,0,CC,0   SEARCH FOR ENTRY                      56000020
CA9      CCW   TIC,CA8-V4,0,0                                           60000020
CA10     CCW   RDATA,CA12+7-V4,CC,10   READ INDEX ENTRY                 64000020
CA11     CCW   TIC,CA14-V4,0,0                                          68000020
CA12     DC    C'-------M'         TRACK INDEX                          72000020
CA13     DC    C'BBCCHHRF'                                              76000020
CA14     CCW   C'P',CA13-V4,CC,6   SEEK PRIME DATA TRK                  80000020
V4       EQU   CA01                                                     84000020
SZ4      EQU  CA14+8-CA01                                               84010020
         MEND                                                           84020020
./  ADD  SSI=20670012,NAME=IGGCP47
         MACRO                                                          07000020
&NAME    IGGCP47 &OPTCD=                                                14000020
         GBLB    &CPOPS                                                 14010020
.*          RELEASE 23 DELETIONS/CHANGES                                14011020
.*          RELEASE 22 DELETIONS/CHANGES                                14012020
.*          RELEASE 21 DELETIONS/CHANGES                                14013020
         AIF     (&CPOPS).NOCPOPS                                       14020020
&CPOPS   SETB    1                                                      14030020
         IGGCPOPS                                                       14040020
.NOCPOPS ANOP                                                           14050020
&NAME    DSECT                                                          21000020
CP4      DS    0D                                                       28000020
         IGGCP4                                                         35000020
CP5      DS    0D                                                       42000020
         IGGCP5  OPTCD=&OPTCD                                           49000020
CP6      DS    0D                                                       56000020
         IGGCP6  OPTCD=&OPTCD                                           63000020
CP7      DS    0D                                                       70000020
         IGGCP7  OPTCD=&OPTCD                                           77000020
         MEND                                                           84000020
./  ADD  SSI=20670009,NAME=IGGCP5
         MACRO                                                          03000020
         IGGCP5 &OPTCD=                                                 06000020
.*         RELEASE 23 DELETIONS/CHANGES                                 06010020
.*         RELEASE 22 DELETIONS/CHANGES                                 06020020
.*         RELEASE 21 DELETIONS/CHANGES                                 06030020
* CP5    SEARCHES PRIME DATA TRACKS AND READS OR WRITES PRIME DATA      09000020
*        RECORDS.                                                       12000020
CA15     CCW   NOP,CA15+5-V5,CC+SILI,1 NOP/SETSECT SWITCH               15000020
*              SET SECTOR TO BEGINNING OF TRACK (BOT) IF RPS DEVICE.    15010020
CA16A    CCW   SIDEQ,CA13+2-V5,CC,5  SHRD TRK-SCH PAST IX               18000020
*                                    NORMAL TRK-SCH PAST R0             18010020
CA16B    CCW   TIC,CA16A-V5,0,0                                         21000020
CA16C    CCW   TIC,CA21-V5,0,0  AVOID RD CNT OF FIRSH+1                 24000020
CA20     CCW   RDCNT,CA25+3-V5,CC+SILI,5 RD CNT OF RCD(SEE CA25)        27000020
CA21     CCW   SKEQ,0,CC+SILI,0 SKEQ IF READ- UNBLKD, OR WRITE          30000020
*                               SKEQHI IF READ-BLOCKED                  30010020
CA22     CCW   TIC,CA20-V5,0,0                                          33000020
CA23     CCW   RDATA,0,CC,0 READ OR WRITE PRIME DATA                    36000020
CA24     CCW   NOP,0,SILI,1             NOP/RDSECT SWITCH               39000320
*              RDSECT FOR THETA OF RCD JUST READ OR WRITTEN             39001020
SZ5      EQU   (CA24+8-CA15)+8  SIZE OF COMMON                          39010020
         AIF   ('&OPTCD' NE 'W' AND '&OPTCD' NE 'VW').CCHH              42000020
* CP5W   VALIDITY CHECK PRIME DATA RECORDS.                             45000020
CA240    CCW   NOP,0,CC+SILI,1              NOP/SETSECT SWITCH          48000020
CA24A    CCW   SIDEQ,CA25+3-V5,CC,5                                     51000020
CA24B    CCW   TIC,CA24A-V5,0,0                                         54000020
CA24C    CCW   RDATA,0,SKIP,0                                           57000020
CA24D    CCW   SIDEQ,0,CC,5                                             60000020
CA24E    CCW   TIC,CA24D-V5,0,0                                         63000020
CA24F    CCW   WD,0,CC,0                                                66000020
CA24G    CCW   TIC,CA240-V5,0,0                                         69000020
SZ5W     EQU   CA24G+8-CA240+SZ5                                        69010020
.CCHH    ANOP                                                           72000020
CA25     DC    C'---CCHHR'                                              75000020
V5       EQU   V4                                                       78000020
         MEND                                                           78020020
./  ADD  SSI=20670008,NAME=IGGCP6
         MACRO                                                          02000020
         IGGCP6 &OPTCD=                                                 04000020
.*         RELEASE 23 DELETIONS/CHANGES                                 04010020
.*         RELEASE 22 DELETIONS/CHANGES                                 04020020
.*         RELEASE 21 DELETIONS/CHANGES                                 04030020
* CP6    SEARCHES AN OVERFLOW CHAIN TO READ OR WRITE OFLO RECORDS       06000020
CA26     CCW   SIDEQ,0,CC,5  SCH FOR 1ST RCD IN OVFLO CHAIN             08000020
CA27     CCW   TIC,CA26-V6,0,0                                          10000020
CA28     CCW   SKEQ,0,CC,0  CHECK KEY IN OVFLO RCD                      12000020
CA29     CCW   TIC,CA32-V6,0,0  NOT EQ.- GO TO NEXT IN CHAIN            14000020
CA30     CCW   TIC,CA31-V6,0,0 EQ-READ(CA31) OR WRT(CA40) RCD           16000020
CA31     CCW   RDATA,0,0,0  READ THE OVFLO RCD                          18000020
CA31B    CCW   RDSECT,0,0,1  END OF CP                                  20000020
CA32     CCW   RDATA,CA34+7-V6,CC+SILI,10 RD LINK FLD TO NXT            22000020
CA33     CCW   TIC,CA36-V6,0,0                                          24000020
CA34     DC    C'-------M'       LINK FIELD                             26000020
CA35     DC    C'BBCCHHRF'       LINK FIELD                             28000020
CA36     CCW   C'P',CA35-V6,CC,6 SEEK NEXT RCD IN OVFLO                 30000020
CA37     CCW   SIDEQ,CA35+2-V6,CC,5 SCH FOR OVFLO RCD                   34000020
CA38     CCW   TIC,CA37-V6,0,0                                          36000020
CA39     CCW   TIC,CA28-V6,0,0  FOUND- CHECK KEY                        38000020
CA40     CCW   RDATA,0,CC+SILI,10   READ LINK FLD                       40000020
CA40A    CCW   TIC,CA41-V6,CC,1      TIC/RDSECT SWITCH                  42000020
CA40B    CCW   SETSECT,0,CC,1  POSITION TO RCD AGAIN                    44000020
CA41     CCW   SIDEQ,CA35+2-V6,CC,5   SCH FOR IT                        46000020
CA42     CCW   TIC,CA41-V6,0,0                                          48000020
         AIF   ('&OPTCD' NE 'W' AND '&OPTCD' NE 'VW').NOCC              49000020
CA43     CCW   WD,0,CC,0     WRITE THE RECORD                           50000020
SZ6      EQU   CA43+8-CA26                                              50010020
         AGO   .COMMON                                                  50310020
.NOCC    ANOP                                                           50610020
CA43     CCW   WD,0,0,0                 WRITE THE RECORD                50910020
.COMMON  ANOP                                                           51210020
         AIF   ('&OPTCD' NE 'W' AND '&OPTCD' NE 'VW').END               52000020
* CP6W   VALIDITY CHECKS OVERFLOW RECORDS.                              54000020
CA430    CCW   NOP,CA42+4-V6,CC+SILI,1 NOP/SETSECT SWITCH               56000020
CA43A    CCW   SIDEQ,CA35+2-V6,CC,5   FIND RCD AGAIN                    58000020
CA43B    CCW   TIC,CA43A-V6,0,0                                         60000020
CA43C    CCW   RDATA,0,SKIP,0    READ IT BACK                           62000020
SZ6W     EQU   SZ6+CA43C+8-CA430                                        62010020
.END     ANOP                                                           64000020
V6       EQU   V4                                                       66000020
         MEND                                                           66010020
./  ADD  SSI=20670005,NAME=IGGCP7
         MACRO                                                          07000020
         IGGCP7 &OPTCD=                                                 14000020
.*         RELEASE 23 DELETIONS/CHANGES                                 14010020
.*         RELEASE 22 DELETIONS/CHANGES                                 14020020
.*         RELEASE 21 DELETIONS/CHANGES                                 14030020
* CP7    WRITES DATA RECORDS WHEN WRITE K IS ASSOCIATED WITH READ KU.   21000020
CA44     CCW   SIDEQ,0,CC,5   SCH FOR RECORD TO BE UPDATED              28000020
CA45     CCW   TIC,CA44-V7,0,0                                          35000020
         AIF   ('&OPTCD' NE 'W' AND '&OPTCD' NE 'VW').NOCC              35010020
CA46     CCW   WD,0,CC,0    WRITE UPDATED RECORD                        42000020
         AGO   .ON                                                      42000120
.NOCC    ANOP                                                           42000220
CA46     CCW   WD,0,0,0       WRITE UPDATED RECORD                      42000320
.ON      ANOP                                                           42000420
SZ7      EQU   CA46+8-CA44                                              42001020
V7       EQU   CA44                                                     42010020
         AIF   ('&OPTCD' NE 'W' AND '&OPTCD' NE 'VW').END               49000020
* CP7W   VALIDITY CHECKS THE UPDATED DATA RECORDS.                      56000020
CA460    CCW   NOP,0,CC+SILI,1         NOP/SETSECT SWITCH               63000020
CA46A    CCW   SIDEQ,0,CC,5        FIND RECORD AGAIN                    70000020
CA46B    CCW   TIC,CA46A-V7,0,0                                         77000020
CA46C    CCW   RDATA,0,SKIP,0     READ IT BACK                          84000020
SZ7W     EQU   CA46C+8-CA460+SZ7                                        84010020
.END     MEND                                                           91010020
./  ADD  SSI=20670004,NAME=IGGCP8
         MACRO                                                          02000020
      IGGCP8   &OPTCD=                                                  04000020
.*         RELEASE 23 DELETIONS/CHANGES                                 04010020
.*         RELEASE 22 DELETIONS/CHANGES                                 04020020
.*         RELEASE 21 DELETIONS/CHANGES                                 04030020
*              CP8--SRCH TRK IX AND PRIME DATA TRACK                    06000020
CB1      CCW   SIDEQ,0,CC,5             READ R0 WHICH MAY BE            08000020
CB2      CCW   TIC,CB1-CB1,0,0          CYLINDER OVERFLOW CONTROL       10000020
CB3      CCW   RDATA,CB22-CB1,CC+SILI,6    RECORD                       12000020
CB4      CCW   RDCNT+MT,CB22+6-CB1,CC+SILI,5     READ COUNT OF IX ENTRY 14000020
CB5      CCW   SKEQHI,0,CC,0            SEARCH FOR CORRECT ENTRY        16000020
CB6      CCW   TIC,CB4-CB1,X'00',0                                      18000020
CB7      CCW   RDATA,CB10+7-CB1,CC,10   READ TRACK INDEX ENTRY          20000020
CB8      CCW   RDCNT+MT,CB24-CB1,CC,8   READ COUNT OF NEXT ENTRY        22000020
CB8A     CCW   RDATA,CB25-CB1,CC,10     READ DATA OF NEXT ENTRY         24000020
CB9      CCW   TIC,CB12-CB1,0,0                                         26000020
CB10     DC    2F'0'                    - - - - - - - M                 28000020
CB11     DC    2F'0'                    B B C C H H R F                 30000020
CB12     CCW   X'00',CB11-CB1,CC,6      P SEEK TO PRIME DATA TRK        32000020
CB16     CCW   NOP,CB16+5-CB1,CC+SILI,1     SET SECTOR 0 IF RPS         34000020
         AIF   ('&OPTCD' NE 'V' AND '&OPTCD' NE 'VW').FIXED             36000020
CB17     CCW   RHA,0,CC+SILI+SKIP,1     ORIENT TO H.A.                  37000021
CB18     CCW   TIC,CB18B-CB1,X'00',0    AVOID SKIPPING FIRST RECORD     38010020
CB18A    CCW   RDATA,0,CC+SILI,0        READ IN BLOCK PRIOR TO INS BLK  38020020
CB18B    CCW   RDCNT,CB23+3-CB1,CC+SILI,5  GET PROBABLE INS BLK COUNT   38030020
CB19     CCW   SKEQHI,0,CC,0            SEARCH FOR PROBABLE INSERT BLK  38040020
CB20     CCW   TIC,CB18A-CB1,X'00',0                                    38050020
         AGO   .COMMON                                                  42000020
.FIXED   ANOP                                                           44000020
CB17     CCW   SIDEQ,CB11+2-CB1,CC,5    SEARCH FOR PRIME RECORD         46000020
CB18     CCW   TIC,CB17-CB1,X'00',0                                     48000020
CB18A    CCW   TIC,CB19-CB1,X'00',0     AVOID SKIPPING FIRST RECORD     48010020
CB18B    CCW   RDCNT,CB23+3-CB1,CC+SILI,5  GET COUNT OF INSERT RECORD   48020020
CB19     CCW   SKEQHI,0,CC+SILI,0       SEARCH TRK FOR INSERT BLOCK     48030020
CB20     CCW   TIC,CB18B-CB1,X'00',0                                    48040020
.COMMON  ANOP                                                           50000020
CB21     CCW   NOP,0,SILI,1             READ INSERT BLK SECTOR IF RPS   56000020
CB22     DC    D'0'                     H H R Y Y T C C                 58000020
CB23     DC    D'0'                     H H R C C H H R                 60000020
CB24     DC    D'0'                     C C H H R KL DL DL              62000020
CB25     DC    D'0'                     M B B C C H H R                 64000020
CB26     DC    D'0'                     F P - - - - - -                 66000020
SZ8      EQU   CB26+8-CB1                                               66010020
         AIF   ('&OPTCD' NE 'V' AND '&OPTCD' NE 'VW').END               66020020
SZ8VW    EQU   SZ8+0                                                    66030020
.END     ANOP                                                           66040020
         MEND                                                           68000020
./  ADD  SSI=20670003,NAME=IGGCP9A
         MACRO                                                          00010020
         IGGCP9A                                                        00011020
.*         RELEASE 23 DELETIONS/CHANGES                                 00011120
.*         RELEASE 22 DELETIONS/CHANGES                                 00011220
.*         RELEASE 21 DELETIONS/CHANGES                                 00011320
*        CP9A--READ A RECORD TO BE BUMPED INTO THE WORKAREA             00012020
CB30     CCW   SIDEQ,0,CC,5             SRCH FOR RECORD TO BUMP         00013020
CB31     CCW   TIC,CB30-CB1,0,0                                         00020020
CB32     CCW   RKD,0,DC,0               READ IN THE RECORD TO BE BUMPED 00030020
CB33     CCW   X'00',0,0,0                                              00040020
SZ9A     EQU   CB33+8-CB30                                              00041020
         MEND                                                           00050020
./  ADD  SSI=20660548,NAME=IGGCP9B
         MACRO                                                          04000020
         IGGCP9B &OPTCD=                                                08000020
.*          RELEASE 23 DELETIONS/CHANGES                                08010020
.*          RELEASE 22 DELETIONS/CHANGES                                08020020
.*          RELEASE 21 DELETIONS/CHANGES                                08030020
* CP9B   READS AN EVEN NUMBERED RECORD AFTER WRITING A RECORD INTO THE  12000020
*        PREVIOUS SLOT AND WRITES BACK THE LAST RECORD OF A NON-EOF     16000020
*        TRACK WHEN THE NUMBER OF RECORDS BUMPED IS ODD                 20000020
CB34     CCW   SIDEQ,0,CC,5        SEARCH FOR RECORD                    24000020
CB35     CCW   TIC,CB34-CB1,0,0                                         28000020
CB36     CCW   WKD,0,DC,0           WRITE NEW RECORD OR RECORD          32000020
CB37     CCW   0,0,CC,0               POINTED TO BY DECB                36000020
SZ9B     EQU   (CB37+8-CB34)+16      SIZE OF COMMON                     36010020
         AIF   ('&OPTCD' NE 'W').CBNOP                                  40000020
* 9BW    WRITE VALIDITY CHECK                                           44000020
CB370    CCW   NOP,0,CC+SILI,1                                          48000020
CB37A    CCW   SIDEQ,0,CC,5         SEARCH FOR RECORD AGAIN             52000020
CB37B    CCW   TIC,CB37A-CB1,0,0                                        56000020
CB37C    CCW   RKD,0,SKIP,0          READ IT BACK                       60000020
SZ9BW    EQU   CB37C+8-CB370+SZ9B                                       60010020
.CBNOP   ANOP                                                           64000020
CB38     CCW   RKD,0,DC,0          READ NEXT RECORD                     68000020
CB39     CCW   0,0,0,0                                                  72000020
         MEND                                                           76000020
./  ADD  SSI=20660547,NAME=IGGCP9C
         MACRO                                                          04000020
         IGGCP9C &OPTCD=                                                08000020
.*          RELEASE 23 DELETIONS/CHANGES                                08010020
.*          RELEASE 22 DELETIONS/CHANGES                                08020020
.*          RELEASE 21 DELETIONS/CHANGES                                08030020
* CP9C   READS AN EVEN NUMBERED RECORD AFTER WRITING A RECORD INTO THE  12000020
*        PREVIOUS SLOT AND WRITES BACK THE LAST RECORD OF A NON-EOF     16000020
*        TRACK WHEN THE NUMBER OF RECORDS BUMPED IS EVEN                20000020
CB40     CCW   SIDEQ,0,CC,5           SEARCH FOR RECORD                 24000020
CB41     CCW   TIC,CB40-CB1,0,0                                         28000020
CB42     CCW   WKD,0,DC,0              WRITE RECORD INTO WORK AREA      32000020
CB43     CCW   0,0,CC,0                                                 36000020
SZ9C     EQU   (CB43+8-CB40)+16        SIZE OF COMMON                   36010020
         AIF   ('&OPTCD' NE 'W').CBNOP                                  40000020
* 9CW    WRITE VALIDITY CHECK                                           44000020
CB430    CCW   NOP,0,CC+SILI,1                                          48000020
CB43A    CCW   SIDEQ,0,CC,5            SEARCH FOR RECORD AGAIN          52000020
CB43B    CCW   TIC,CB43A-CB1,0,0                                        56000020
CB43C    CCW   RKD,0,SKIP,0            READ IT BACK                     60000020
SZ9CW    EQU   CB43C+8-CB430+SZ9C                                       60010020
.CBNOP   ANOP                                                           64000020
CB44     CCW   RKD,0,DC,0         READ RECORD AND POINT DECB TO         68000020
CB45     CCW   0,0,0,0             THAT AREA                            72000020
         MEND                                                           76000020
./  ADD  SSI=31321029,NAME=IGGDCBFA
         MACRO                                                          05000020
&NAME    IGGDCBFA                                                       10000020
&NAME    DSECT                                                          15000020
*    03/20/73          LEVEL=01                                         15010002
*****************************************************************       15050002
*    ISAM DCB FIELD AREA - CONTROL BLOCK FOR SHARED DATA SETS   *       15100002
*****************************************************************       15150002
DFARORG3 DS    F                        NO. ACCESSES TO OVRFLOW RCDS    15200002
*                                       OTHER THAN FIRST RCD IN CHAIN   15210002
DFANREC  DS    F                        NO. RCDS IN PRIME AREA          15250002
DFAST    DS    BL1                      DCB STATUS INDICATORS           15300002
*                                       B0 SINGLE SCHEDULE MODE         15350002
*                                       B1 KEY SEQ. TO BE CHECKED       15400002
*                                       B2 INITIAL LOAD COMPLETED       15450002
*                                       B3 RESUME LOAD ON NEW CYL       15500002
*                                       B4 RESERVED                     15550002
*                                       B5 FIRST MACRO NOT RCVD         15600002
*                                       B6 LAST BLOCK FULL              15650002
*                                       B7 LAST TRACK FULL              15700002
DFARESER DS    XL1                      RESERVED                        15750002
DFAUSE   DS    H                        NO. DCBS OPENED ON DATA SET,    15800002
*                                       TOTAL OF ASID USE COUNTS        15850002
DFANBOV  DS    H                        VLR, NO. BYTES LEFT ON          15900002
*                                       CURRENT OVRFLOW TRACK           15950002
DFANOREC DS    H                        NO. RCDS IN OVERFLOW AREA       16000002
DFALIOV  DS    XL8                      ADDR LAST IND OVRFLOW RCD       16050002
DFARORG1 DS    H                        NO. FULL CYL OVRFLOW AREAS      16100002
DFARORG2 DS    H                        NO. OF TRKS REMAINING IN        16150002
*                                       IND. OVERFLOW AREAS             16200002
DFALPDA  DS    XL8                      LAST PRIME DATA RCD ADDR        16250002
DFAID    DS    XL8                      IDENTIFIER FOR DATA SET         16300002
DFACHAIN DS    A                        ADDR OF NEXT FA IN CHAIN        16350002
DFAASID1 DS    H                        ASID OF USER                    16400002
DFAUSE1  DS    H                        USE COUNT FOR AISD1             16450002
DFAASID2 DS    H                        ASID OF USER                    16500002
DFAUSE2  DS    H                        USE COUNT FOR AISD2             16550002
DFAASID3 DS    H                        ASID OF USER                    16600002
DFAUSE3  DS    H                        USE COUNT FOR ASID3             16650002
DFAASID4 DS    H                        ASID OF USER                    16700002
DFAUSE4  DS    H                        USE COUNT FOR AISD4             16750002
DFAASIDN DS    A                        ADDR OF NEXT FAEX IN CHAIN      16800002
DFASIZE  EQU   *-DFARORG3               SIZE OF FILED AREA              16850002
         SPACE 4                                                        16900002
DCBFAEX  DSECT                                                          16950002
*****************************************************************       17000002
*    DCB FIELD AREA EXTENSION - CONTAINS USE COUNTS FOR FOUR     *      17050002
*    ADDRESS SPACES AND A POINTER TO NEXT FIELD AREA EXTENSION    *     17100002
*******************************************************************     17150002
DFAXSID1 DS    H                        ASID OF USER                    17200002
DFAUSE1X DS    H                        USE COUNT FOR XSID1             17250002
DFAXSID2 DS    H                        ASID OF USER                    17300002
DFAUSE2X DS    H                        USE COUNT FOR XSID2             17350002
DFAXSID3 DS    H                        ASID OF USER                    17400002
DFAUSE3X DS    H                        USE COUNT FOR XSID3             17450002
DFAXSID4 DS    H                        ASID OF USER                    17500002
DFAUSE4X DS    H                        USE COUNT FOR XSID4             17550002
DFAEXN   DS    A                        ADDR OF NEXT FAEX ON CHAIN      17600002
DFEXSIZE EQU   *-DCBFAEX                SIZE OF EXTENSION               17650002
         SPACE 4                                                        17700002
DFAASID  DSECT                                                          17750002
DFANXPTR EQU   4                        OFFSET TO NEXT ASID FIELD       17760002
DFANOIDS EQU   4                        NO. OF ASID'S AND USE COUNTS    17770002
*                                       IN DCBFA AND EXTENSIONS         17780002
DFAINCR  EQU   1                        INCREMENT USE COUNTS            17790002
         SPACE                                                          17792002
*******************************************************************     17800002
*    DSECT FOR SEARCHING FOR ADDRESS SPACE ID                     *     17850002
*******************************************************************     17900002
         SPACE                                                          17910002
DFAASIDX DS    H                        ADDRESS SPACE ID                17950002
DFAUSEX  DS    H                        ASID USE COUNT                  18000002
DFAPTR   DS    A                        ADDR OF DCBFA EXTENSION         18050002
         MEND                                                           18300002
./  ADD  SSI=31321030,NAME=IGGDEBD
         MACRO                                                          01000020
&NAME    IGGDEBD                                                        02000020
*    03/20/73          LEVEL=01                                         02010002
DEBAVT   DSECT                                                          02040021
**********************************************************************  02050021
*   APPENDAGE VECTOR TABLE FOR DEB. CONTAINS PTRS TO THE APPENDAGES  *  02060021
*   USED BY IOS.                                                     *  02070021
**********************************************************************  02080021
         SPACE 3                                                        02090021
DEBEOEA  DS    A                        END OF EXTENT APPENDAGE         02100021
DEBSIOA  DS    A                        START I/O APPENDAGE             02110021
DEBPCIA  DS    A                        PROGRAM CONTROLLED INTERRUPT    02120021
DEBCEA   DS    A                        CHANNEL END APPENDAGE           02130021
DEBXCEA  DS    A                        ABNORMAL END APPENDAGE          02140021
         SPACE 5                                                        02150021
*******************************************************                 02160021
DEBEXT   DSECT                                                          02170021
*                                       EXTENTION CONTAINS POINTERS     02180021
*                                       TO BE PROTECTED FROM PROBLEM    02190021
*                                       PROGRAM                         02200021
DEBDCBFA DS    A                        DCB FIELD AREA ADDRESS          02210002
DEBPUT   DS    0A                       ADDR OF PUT MODULE              02240021
DEBGET   DS    0A                       ADDR OF GET MODULE              02250021
DEBDISAD DS    A                        ADDR OF PRIV MACRO MODULE       02260021
DEBRPSL  DS    0A                       ADDRESS OF RPS SIO MODULE       02264002
LOADEXT  EQU   *+4-DEBEXT               LENGTH OF LOAD EXTENSION        02266000
DEBWKPT4 DS    A                        SAME AS DCBWKPT4                02280021
DEBWKPT5 DS    A                        SAME AS DCBWKPT5                02290021
DEBFREED DS    0A                       ADDR OF DYN BUFF MODULE         02300021
DEBCEVEC DS    0BL24                    CHAN END VECT TBL CONSISTING OF 02310021
DEBCREAD DS    A                        READ                            02320021
DEBRPSIO DS    0A                       ADDR OF SECONDARY RPS SIO APP   02330021
DEBCSETL DS    A                        SETL                            02340021
DEBSIOA2 DS    0A                       ADDR OF SECONDARY SIO APP       02344000
BISAMEXT EQU   *+4-DEBEXT               EXTENSION LENGTH OF BISAM       02346000
DEBCWRIT DS    A                        WRITE                           02360021
DEBCCHK  DS    A                        WRITE VAL. CHECK                02370021
DEBCREWT DS    A                        RE-WRITE                        02380021
DEBCRECK DS    A                        RE-CHECK                        02390021
DEBABVEC DS    0BL24                    ABNORMAL END VECT TBL CONSISTS  02400021
*                                       OF THE FOLLOWING-               02410021
DEBAREAD DS    A                        READ                            02420021
DEBASETL DS    A                        SETL                            02430021
DEBAWRIT DS    A                        WRITE                           02440021
DEBACHK  DS    A                        WRITE VAL. CHECK                02450021
DEBAREWT DS    A                        RE-WRITE                        02460021
DEBARECK DS    A                        RE-CHECK                        02470021
DEBRPSS  DS    A                        SECONDARY SCAN SIO APP          02474000
SCANEXT  EQU   *-DEBEXT                                                 02480021
W1CEVECT EQU   DEBCEVEC                                                 02490021
W1CEREAD EQU   DEBCREAD                                                 02500021
W1CESETL EQU   DEBCSETL                                                 02510021
W1CEWRIT EQU   DEBCWRIT                                                 02520021
W1CECHK  EQU   DEBCCHK                                                  02530021
W1CEREWT EQU   DEBCREWT                                                 02540021
W1CERECK EQU   DEBCRECK                                                 02550021
W1ABVECT EQU   DEBABVEC                                                 02560021
W1ABREAD EQU   DEBAREAD                                                 02570021
W1ABSETL EQU   DEBASETL                                                 02580021
W1ABWRIT EQU   DEBAWRIT                                                 02590021
W1ABCHK  EQU   DEBACHK                                                  02600021
W1ABREWT EQU   DEBAREWT                                                 02610021
W1ABRECK EQU   DEBARECK                                                 02620021
&NAME    DSECT                                                          03000020
DEBNMSUB DS    0BL1                    = SUBRTNS LOADED BY OPEN         04000020
DEBTCBAD DS    A                       TCB POINTER                      05000020
DEBAMLNG DS    0BL1                    LENGTH OF ACCESS METHOD SECTION  06000020
DEBDEBAD DS    A                       POINTER TO NEXT DEB IN TASK      07000020
DEBOFLGS DS    0BL1                    DATA SET STATUS FLAGS            08000020
*                                      B0.B1 01=DISP=OLD                09000020
*                                            10=DISP=MOD                10000020
*                                            11=DISP=NEW                11000020
*                                      B2 EOV OR EOF                    12000020
*                                      B3 PARTIAL RELEASE               13000020
*                                      B4 DCB MODIFICATION              14000020
*                                      B5 SPLIT CYLINDER                15000020
*                                      B6 NON STANDARD LABELS           16000020
*                                      B7 MAG TAPE- USE REDUCED ERP     17000020
DEBIRBAD DS    A                       POINTER TO IRB FOR ASYNC EXIT    18000020
DEBOPATB DS    0BL1                    TYPE OF I/O                      19000020
*                                      B0 SYSABEND OR SYSUDUMP DS       20000020
*                                      B1 0 (ALWAYS)                    21000020
*                                      B2.B3 01=REREAD                  22000020
*                                            11=LEAVE                   23000020
*                                      B4.B5.B6.B7 0000=INPUT           24000020
*                                                  1111=OUTPUT          25000020
*                                                  0011=INOUT           26000020
*                                                  0111=OUTIN           27000020
*                                                  0001=RDBACK          28000020
*                                                  0100=UPDATE          29000020
DEBQSCNT DS    BL1                     PURGE QUIESCE COUNT              30000020
         DS    H                       RESERVED                         31000020
DEBNMEXT DS    0BL1                    NUMBER OF EXTENTS CONSTRUCTED    32000020
DEBUSRPG DS    A                       AD OF 1ST IOB IN USR PURGE CHAIN 33000020
DEBPRIOR DS    0BL1                    DISPATCHING PRIORITY             34000020
DEBEDBAD DS    A                       POINTER TO PARMLIST OF PURGE ECB 35000020
DEBPROTG DS    0BL.4                   TASK PROTECTION FLAG             36000020
DEBDEBID DS    0BL.4'1111'             X'F' TO IDENTIFY AS A DEB        37000020
DEBDCBAD DS    A                       POINTER TO CORRESPONDING DCB     38000020
DEBEXSCL DS    0BL1                    SCALE FOR SIZE OF DEV SECTION    39000020
DEBAPPAD DS    A                       POINTER TO APPENDAGE VECTOR TBL  40000020
* ISAM DEPENDENT SECTION   (M=0 EXTENT NUMBER)                          41000020
DEBNIEE  DS    0BL1                    = INDEX EXTENTS                  42000020
DEBFIEAD DS    A                       ADDR OF 1ST INDEX EXTENT         43000020
DEBNPEE  DS    0BL1                    = PRIME DATA EXTENTS             44000020
DEBFPEAD DS    A                       ADDR OF 1ST PRIME DATA EXTENT    45000020
DEBNOEE  DS    0BL1                    = OVERFLOW EXTENTS               46000020
DEBFOEAD DS    A                       ADDR OF 1ST OVERFLOW EXTENT      47000020
DEBRPSID DS    0BL1                    RPS IDENTIFIERS FOR PRI,IX,OVFLO 48000020
*                                      B0 PRIME ON RPS                  49000020
*                                      B1 INDEX ON RPS                  50000020
*                                      B2 OVFLO ON RPS                  51000020
*                                      B3 SIO APPENDAGE LOADED          52000020
*                                      B4-7 RESERVED                    53000020
DEBEXPTR DS    A                        POINTER TO DEB EXTENTION        54000021
         ORG   &NAME+32                                                 55000020
* DIRECT ACCESS DEVICE DEPENDENT SECTION                                56000020
*        ADDRESS BY DEBAD + (M X (4 X EXSCL))                           57000020
DEBDVMOD DS    0BL1                    DEVICE MODIFIER (FILE MASK)      58000020
DEBUCBAD DS    A                       POINTER TO UCB                   59000020
DEBBINUM DS    BL2                     BB OF EXTENT                     60000020
DEBSTRCC DS    BL2                     CYLINDER ADDR FOR START OF EXT   61000020
DEBSTRHH DS    BL2                     HEAD NUMBER FOR START OF EXTENT  62000020
DEBENDCC DS    BL2                     CYLINDER ADDR FOR END OF EXTENT  63000020
DEBENDHH DS    BL2                     HEAD NUMBER FOR END OF EXTENT    64000020
DEBNMTRK DS    BL2                     NUMBER OF TRACKS IN EXTENT       65000020
*                                      ******************************** 66000020
         MEND                                                           67000020
./  ADD  SSI=31780211,NAME=IGGFRWKA
*%;/*                                                                   00500002
         MACRO                                                          01000002
         IGGFRWKA                                                       01500002
.* /* START OF SPECIFICATIONS ****                                      02150002
.*                                                                      02200002
.*01  MODULE-NAME = IGGFRWKA                                            02250002
.*                                                                      02300002
.*01  COPYRIGHT = NONE                                                  02350002
.*                                                                      02400002
.*01  STATUS = CHANGE LEVEL 01                                          02450002
.*                                                                      02460002
.*01  DESCRIPTIVE-NAME = FREEDBUF SVRB EXTENDED SAVEAREA(WORKAREA)      02490002
.*                                                                      02492002
.*01  FUNCTION = FORMATS THE SVRB EXTENDED SAVEAREA WHICH IS USED       02494002
.*               AS WORKAREA FOR FREEDBUF SVC AND ESTAE                 02494402
.*                                                                      02496002
.*01  NOTES = NONE                                                      02498002
.*                                                                      02498402
.*02    DEPENDENCIES = NA                                               02498802
.*                                                                      02499202
.*02    PERFORMANCE = NA                                                02499602
.*                                                                      02499702
.*02    RESTRICTIONS = NA                                               02499802
.*                                                                      02499902
.*02    REGISTER-CONVENTIONS = NA                                       02549902
.*                                                                      02559902
.*02    PATCH-LABEL = NA                                                02569902
.*                                                                      02579902
.*01  MODULE-TYPE = MACRO                                               02589902
.*                                                                      02595902
.*02  MACRO-SIZE =  NA                                                  02597902
.*                                                                      02598302
.*02  EXTERNAL-REFERENCES = NA                                          02598702
.*                                                                      02599102
.*01INNER-MACROS = NONE                                                 02599502
.*                                                                      02599602
.*01SYSTEM-MACROS = NONE                                                02599702
.*                                                                      02599802
.*01  CHANGE-ACTIVITY = SEE BELOW                                       02609802
.*                                                                      02619802
.*             VS2 RELEASE 2                                            02629802
.*                                                                      02649802
.**** END OF SPECIFICATIONS ***/                                        02659802
*/* MACCOMP Y-2 SC1D7/SJD48                                          */ 02669802
*/* MACSTAT Y-2 73122/021160                                         */ 02679802
*/********************************************************************/ 02699802
*/*THE FOLLOWING DSECT FORMATS THE WORKAREA USED BY FREEDBUF SVC (57)*/ 03000002
*/*AND THOSE BDAM MODULES TO WHICH FREEDBUF PASSES CONTROL.  THIS    */ 03500002
*/*WORKAREA IS LOCATED IN THE SVRB EXTENDED SAVEAREA AND MUST FOLLOW */ 04000002
*/*THE RB DSECT MACRO CALL.                                          */ 04500002
*/********************************************************************/ 05000002
*%GOTO WKAPLS2;                                                         05500002
         ORG   RBEXSAVE                                                 06000002
WKAREA   DS    0CL48                    SVRB SVC WORKAREA               06500002
WKATRAIL DS    BL1                      AUDIT TRAIL BIT SAVED HERE      07000002
*  THE FOLLOWING ARE AUDIT TRAIL BITS SET AFTER CERTAIN FUNCTIONS ARE * 07500002
*  COMPLETED IN THE FBUFRTNE ROUTINE. THESE BITS WILL BE INTERROGATED * 08000002
*  BY THE FREEDBUF ESTAE ROUTINE DURING CLEANUP.                      * 08500002
WKAIOBQ  EQU   X'80'                    NEXT IOB HAS BEEN TAKEN FROM    08550002
*                                       IOB QUEUE BUT CHAN PGM NOT      08600002
*                                       INITIALIZED YET                 08650002
WKABUFAS EQU   X'40'                    BUFFER HAS BEEN ASSIGNED TO     11500002
*                                       NEXT IOB AND CHAN PGM INIT-     12000002
*                                       IALIZED BUT EXCP NOT ISSUED     12500002
WKAEXCP  EQU   X'20'                    BUFFER HAS BEEN FREED AND       12550002
*                                       GIVEN TO NEW IOB FOR WHICH      12600002
*                                       EXCP WAS ISSUED                 12650002
WKABUFQ  EQU   X'10'                    BUFFER HAS BEEN FREED AND       14050002
*                                       PUT BACK ON AVAILABLE QUEUE     14100002
WKASVKEY DS    BL1                      USER KEY SAVED                  14500002
WKACLEAN DS    BL1                      RET CODE FROM ESTAE CLEANUP     15000002
WKADUMP  DS    BL1                      RET CODE FROM ESTAE SDUMP       15500002
WKASVC14 DS    A                        REG14 RETURN FROM SVC 57        16500002
WKAREG14 DS    0A                       REG14 RETURN TO FREEDBUF        17000002
WKADEBRC DS    BL1                      RET CODE FROM ESTAE DEBCHK      17050002
WKADEB   DS    AL3                      DEB ADDR AFTER ESTAE DEBCHK     17100002
WKABUFRG DS    A                        BUFFER PTR SAVED FOR ESTAE      17500002
WKAIOBRG DS    A                        IOB PTR SAVED FOR ESTAE         18000002
WKASAVE  DS    A                        USLBFRQT+1/BCBFRQT SAVED        18500002
WKASAVE2 DS    A                        BCBNABFR(4)/BCBBFAVL(1) SAVED   19000002
WKAESTAE ESTAE MF=L                     ESTAE PARAMETER LIST (20 BYTES) 20500002
WKALENG  EQU   *-WKAREA                 LENGTH OF WORKAREA              21000002
         MEND                                                           21500002
*%WKAPLS2: ;                                                            22000002
*DCL 1 WKAREA CHAR(48) BDY(WORD) DEF(RBEXSAVE),   /* SVRB WORKAREA   */ 22500002
*      2 WKATRAIL FIXED(8),             /* AUDIT TRAIL BIT SET BY SVC*/ 23000002
*/* THE FOLLOWING EQUATES ARE AUDIT TRAIL BITS SET AFTER CERTAIN     */ 23500002
*/* FUNCTIONS ARE COMPLETED IN THE DYN BUF RTN. THESE BITS ARE TESTED*/ 24000002
*/* BY THE FREEDBUF ESTAE ROUTINE DURING CLEANUP.                    */ 24500002
*        3 WKAIOBQ BIT(1),              /* NEXT IOB HAS BEEN TAKEN      25500002
*                                          FROM IOB QUE BUT CHAN PGM    26000002
*                                          NOT INITIALIZED YET       */ 26500002
*        3 WKABUFAS BIT(1),             /* BUFFER HAS BEEN ASSIGNED     27000002
*                                          TO NEXT IOB AND CHAN PGM     27500002
*                                          INITIALIZED BUT NO EXCP   */ 28000002
*        3 WKAEXCP BIT(1),              /* BUFFER HAS BEEN FREED AND    28500002
*                                          GIVEN TO NEW IOB FOR WHICH   29000002
*                                          EXCP WAS ISSUED           */ 29500002
*        3 WKABUFQ BIT(1),              /* BUFFER HAS BEEN FREED AND    30000002
*                                          PUT BACK ON AVAILABLE QUE */ 30500002
*        3 *    BIT(3),                                                 30550002
*        3 WKALOCK BIT(1),              /* TELLS DEBCHECK NOT TO FREE   30600002
*                                       THE LOCAL LOCK BEFORE RETURN */ 30650002
*      2 WKASVKEY FIXED(8),             /* USER KEY USED BY SVC 57   */ 31500002
*      2 WKACLEAN FIXED(8),             /* RET CODE FROM ESTAE CLEAN */ 31550002
*      2 WKADUMP FIXED(8),              /* RET CODE FROM ESTAE SDUMP */ 32000002
*      2 WKASVC14 FIXED(31),            /* REG14 RETURN FROM SVC 57  */ 33000002
*      2 WKAREG14 PTR(31),              /* REG14 RET TO SVC OR ESTAE */ 33500002
*        3 WKADEBRC FIXED(8),           /* ESTAE DEBCHK RETURN CODE  */ 33550002
*        3 WKADEB PTR(24),              /* KEEPS VALID DEB PTR-ESTAE */ 34000002
*      2 WKABUFRG PTR(31),              /* BUFFER PTR SAVED FOR ESTAE*/ 34500002
*      2 WKAIOBRG PTR(31),              /* IOB PTR SAVED FOR ESTAE   */ 35000002
*      2 WKASAVE FIXED(31),             /* USLBFRQT+1/BCBFRQT SAVED  */ 35500002
*      2 WKASAVE2 FIXED(31),            /* BCBNABFR(4)/BCBBFAVL(1) SV*/ 36000002
*      2 WKAESTAE CHAR(20) BDY(WORD),   /* LIST FORM FOR ESTAE MACRO */ 36500002
*        3 WKATRACE CHAR(8) BDY(WORD),  /* LIST FORM FOR GTRACE MACRO*/ 37000002
*          4 WKARETRN PTR(31),          /* RET FROM ESTAE CLEANUP RTN*/ 37500002
*          4 WKASVREG FIXED(31),        /* RTM SAVE ADDR -CLEANUP RTN*/ 38000002
*        3 WKATRCLG FIXED(8),           /* SAVES GTRACE RECORD LENGTH*/ 38500002
*        3 *        CHAR(11);           /* UNUSED OUTSIDE ESTAE LIST */ 39000002
./  ADD  SSI=31321031,NAME=IGGIOBD
         MACRO                                                          01000020
&NAME    IGGIOBD                                                        02000020
.*          RELEASE 22 DELETIONS/CHANGES                                02001020
.*          RELEASE 21 DELETIONS/CHANGES                                02002020
.*          RELEASE 20 DELETIONS/CHANGES                                02010020
*    02/06/73          LEVEL=01                                         02060002
&NAME    DSECT                                                          03000020
         DS    0F             STANDARD IOB                              04000020
IOBFLAG1 DS    CL1                                                      05000020
IOBFLAG2 DS    CL1                                                      06000020
IOBSENSE DS    0XL2                                                     07000002
IOBSENS0 DS    XL1                      SENSE BYTE 0                    07050002
IOBSENS1 DS    XL1                      SENSE BYTE 1                    07100002
IOBECBAD DS    A                                                        08000020
IOBCSW   DS    CL8                                                      09000020
IOBSIOCC DS    CL1                                                      10000020
IOBSTART DS    AL3                                                      11000020
IOBWGHT  DS    CL1                                                      12000020
IOBDCBAD  DS    AL3                                                     13000020
IOBRESTA DS    A                                                        14000020
IOBBCTIN DS    CL2                                                      15000020
IOBERRCT DS    CL2                                                      16000020
IOBDADAD DS    CL8                                                      17000020
*                             BISAM IOB EXTENSION                       18000020
IOBCCWAD DS    A                        ADDRESS FIRST CHAN PROGRAM      19000020
IOBINDCT DS    CL1                      INDICATORS B0 REMOVE CP FROM Q  20000020
*                                                  B1 UNSCHEDULED BIT   21000020
*                                                  B2 OVFLO RCD IN W    22000020
IOBUNSQR DS    CL1                      UNSCHED REASON B0 CP1 OR 2 BUSY 23000020
*                                                        B1 NO CP4-5-6  24000020
*                                                      B3 WKN IN EFFECT 25000020
IOBAPP   DS    CL1                      APPENDAGE CODE 0 READ CP4-5     26000020
*                                                      1 WRITE CP4-5    27000020
*                                                      2 CP7            28000020
*                                                      3 CP1 OR CP2     29000020
*                                                      5 CP6            30000020
*                                                      6 WRITE CHECK    31000020
*                                                 WKN  7 CP1 OR CP2     32000020
*                                                      8 CP8            33000020
*                                                      9 CP10A          34000020
*                                                     10 CP10B          35000020
*                                                     11 CP10B          36000020
*                                                     12 CP14           37000020
*                                                     13 CP14           38000020
*                                                     14 CP15           39000020
*                                                     15 CP16           40000020
*                                                     16 CP16           41000020
*                                                     17 CP17           42000020
*                                                     18 CP17           43000020
*                                                     19 CP17           44000020
*                                                     20 CP9/12/11/13A  45000020
*                                                     21 CP9/12/11/13B  46000020
*                                                     22 CP9C/CP/23W    47000020
*                                                     23 CP10A          48000020
*                                                     24 X/CP12C/X/13C  49000020
IOBASYN  DS    CL1                      ASYNCHRONOUS   0 END CP456 OK   50000020
*                                                      1 DO AN EXCP     51000020
*                                                      2 END CP7 OK     52000020
*                                                      3 END CP1-2 OK   53000020
*                                                      4 END CP456 ERR  54000020
*                                                      6 END CP7 ERR    55000020
*                                                      7 END CP1-2 ERR  56000020
*                                                 WKN  8 COMPLETION     57000020
*                                                      9 CP14, SETUP 1  58000020
*                                                     10 CP14, SETUP 2  59000020
*                                                     11 CP14, SETUP 3  60000020
*                                                     12 CP14, SETUP 4  61000020
*                                                     13 CP14, SETUP 5  62000020
*                                                     14 CP14, SETUP 6  63000020
IOBCOUNT DS    0CL1                     WRITE CHECK ERROR COUNTER       64000020
IOBFCHAD DS    A                        FORWARD CHAIN ADDRESS           65000020
IOBBCHAD DS    A                        BACKWARD CHAIN ADDRESS          66000020
IOBCCW1  DS    D                        SETSECTOR FOR RPS               67000020
IOBCCW2  DS    D                        TIC TO CHANNEL PGM              68000020
IOBSECT  EQU   IOBCCW2+4                TEMP STORAGE FOR SECTOR VALUES  69000020
         ORG   IOBCCWAD                                                 70000020
*                             QISAM IOB EXTENSION                       71000020
         DS    C              W1EXTEN   APPENDAGE CODE                  72000020
         DS    C              W1OEXTEN  APPENDAGE CODE                  73000020
         MEND                                                           74000020
./  ADD  SSI=20660544,NAME=IGGLDCP
         MACRO                                                          00020020
&LABEL   IGGLDCP &OPTCD=N,&RECFM=F                                      00030020
         GBLB  &CPOPS                                                   00030120
         LCLC  &C                                                       00031020
         AIF   (&CPOPS).NOCPOPS                                         00031120
&CPOPS   SETB  1                                                        00031220
         IGGCPOPS                                                       00031320
.NOCPOPS ANOP                                                           00031420
&C       SETC  '8'                                                      00032020
&LABEL   DS    0D                                                       00040020
.*                                                                      00041020
.*   FUNCTION - MACRO CREATES ALL THE SKELETON CHANNEL PROGRAMS         00050020
.*        REQUIRED FOR LOAD MODE, ACCORDING TO THE RECORD FORMAT        00060020
.*        AND WHETHER WRITE CHECKING HAS BEEN SPECIFIED.                00070020
.*                                                                      00080020
.*   INPUT -                                                            00090020
.*        RECFM = F   (DEFAULT)   FIXED LENGTH RECORDS                  00100020
.*              = V   VARIABLE LENGTH RECORDS                           00110020
.*        OPTCD = N   (DEFAULT)   NO WRITE CHECKING                     00120020
.*              = W   WRITE CHECKING                                    00130020
.*                                                                      00140020
         SPACE 5                                                        00141020
***************************                                             00142020
* CP18 - WRITE DATA RECORDS                                             00150020
***************************                                             00160020
*                                                                       00170020
CL0      CCW   SETSECT,0,SILI+CC,1 *    SETSECTOR                       00180020
CL1      CCW   SIDEQ,0,CC,5 *           SEARCH ID EQUAL                 00182020
CL2      CCW   TIC,0,0,0 *              TIC                             00190020
CL3      CCW   TIC,0,0,0 *              TIC                             00200020
CL4      CCW   WCKD,0,CC,8 *            WRITE COUNT KEY DATA            00210020
*                                                                       00230020
* N ENTRIES WILL BE GENERATED, ONE FOR EACH BUFFER                      00240020
*                                                                       00250020
CL5      CCW   TIC,0,0,0 *              TIC                             00252020
*                                                                       00270020
*                                                                       00280020
CL6      CCW   WCKD,0,DC,8 *            WRITE COUNT,                    00300020
CL7      CCW   0,0,DC,0 *               KEY AND                         00310020
CL8      CCW   0,0,CC,0 *               DATA                            00320020
         AIF   ('&OPTCD' EQ 'N').CP19                                   00330020
&C       SETC  '9'                                                      00340020
*                                                                       00350020
*  CP18- EXTENSION FOR WRITE CHECK                                      00360020
*                                                                       00370020
CL9      CCW   RCKD,0,CC+SKIP,0 *       READ COUNT KEY AND DATA         00382020
*                                                                       00390020
.CP19    ANOP                                                           00400020
CP18LEN  EQU   (CL&C+8-CL0)             LENGTH OF CP18                  00410020
         SPACE 5                                                        00420020
**************************************************************          00421020
* CP19 - PREFORMAT SHARED TRACK AND/OR WRITE CYL OVFL CTRL RCD          00430020
**************************************************************          00440020
*                                                                       00450020
CM0      CCW   SETSECT,0,CC+SILI,1 *    SET SECTOR                      00470020
CM1      CCW   SIDEQ,0,CC,5 *           SEARCH ID EQUAL                 00480020
CM2      CCW   TIC,0,0,0 *              TIC                             00490020
CM3      CCW   WD,0,SILI+CC,6 *         WRITE DATA                      00492020
*                                                                       00500020
CM4      CCW   SEEKHH,0,CC,6 *          SEEK HEAD                       00520020
CM40     CCW   NOP,0,CC+SILI,1 *        NOP - SETSECTOR SLOT            00522020
*                                                                       00530020
CM5      CCW   SIDEQ,0,CC,5 *           SEARCH ID EQUAL                 00550020
CM6      CCW   TIC,0,0,0 *              TIC                             00552020
*                                                                       00560020
CM7      CCW   WCKD,0,DC,8 *            WRITE COUNT,                    00580020
CM8      CCW   0,0,CC,0 *               KEY AND DATA                    00590020
CM9      CCW   WCKD,0,DC,8 *            WRITE COUNT,                    00600020
CM10     CCW   0,0,CC,0 *               KEY AND DATA                    00610020
CM11     CCW   WCKD,0,DC,8 *            WRITE COUNT,                    00612020
CM12     CCW   0,0,CC,0 *               KEY AND DATA                    00614020
CM13     CCW   WCKD,0,DC,8 *            WRITE COUNT,                    00616020
CM14     CCW   0,0,CC,0 *               KEY AND DATA                    00618020
CM15     CCW   WCKD,0,DC,8 *            WRITE COUNT,                    00630020
CM16     CCW   0,0,CC,0 *               KEY AND DATA                    00640020
CM17     CCW   WCKD,0,DC,8 *            WRITE COUNT,                    00650020
CM18     CCW   0,0,CC,0 *               KEY AND DATA                    00660020
CM19     CCW   WCKD,0,DC,8 *            WRITE COUNT,                    00670020
CM20     CCW   0,0,CC,0 *               KEY AND DATA                    00680020
CM21     CCW   WCKD,0,DC,8 *            WRITE COUNT,                    00690020
CM22     CCW   0,0,CC,0 *               KEY AND DATA                    00700020
CM23     CCW   WCKD,0,DC,8 *            WRITE COUNT,                    00710020
CM24     CCW   0,0,CC,0 *               KEY AND DATA                    00720020
CM25     CCW   WCKD,0,DC,8 *            WRITE COUNT,                    00730020
CM26     CCW   0,0,00,0 *               KEY AND DATA                    00740020
*                                                                       00770020
CM27     DC    X'0000000000000000'                                      00780020
*                                                                       00790020
CP19LEN  EQU   (CM27+8-CM0)             LENGTH OF CP19                  00800020
*                                                                       00810020
         AIF   ('&RECFM' EQ 'V').VAR                                    00820020
         SPACE 5                                                        00830020
**********************************                                      00831020
* CP20 - WRITE TRACK INDEX ENTRIES                                      00840020
**********************************                                      00850020
*                                                                       00860020
CQ0      CCW   SETSECT,0,CC+SILI,1 *    SET SECTOR                      00862020
CQ1      CCW   SIDEQ,0,CC,5 *           SEARCH ID EQUAL                 00890020
CQ2      CCW   TIC,0,0,0 *              TIC                             00900020
CQ3      CCW   WKD,0,DC,0 *             WRITE KEY                       00910020
CQ4      CCW   0,0,CC,10 *              AND DATA                        00920020
CQ5      CCW   SIDEQ+MT,0,CC,5 *        SEARCH MULTI TRACK HOME ADDRESS 00930020
CQ6      CCW   TIC,0,0,0 *              TIC                             00940020
CQ7      CCW   WKD,0,DC,0 *             WRITE KEY                       00950020
CQ8      CCW   0,0,CC,10 *              AND DATA                        00960020
CQ9      CCW   TIC,0,0,0 *              TIC                             00962020
CQ10     CCW   SIDEQ+MT,0,CC,5 *        SEARCH ID EQUAL                 00980020
CQ11     CCW   TIC,0,0,0 *              TIC                             00990020
CQ12     CCW   WKD,0,CC,0 *             WRITE KEY AND DATA              01000020
         AGO   .CP20COM                                                 01200020
.VAR     ANOP                                                           01400020
         SPACE 5                                                        01410020
**********************************                                      01411020
* CP20 - WRITE TRACK INDEX ENTRIES                                      01420020
**********************************                                      01430020
CQ0      CCW   SETSECT,0,SILI+CC,1      SETSECTOR                       01492020
CQ1      CCW   SIDEQ,0,CC,5             SEARCH ID EQUAL                 01494020
CQ2      CCW   TIC,0,0,0                TIC                             01496020
CQ3      CCW   WD,0,CC+SILI,3           WRITE TRK CAPACITY RECORD       01510020
CQ4      CCW   TIC,0,SILI,5             TIC CL1,CQ3                     01512020
CQ5      DC    XL8'00'                 MAX REX LENGTH,CCHHR             01520020
CQ6      DC    XL8'00'                 AVAILABLE                        01530020
CQ7      DC    XL4'00'                                                  01540020
         DC    XL4'00000008'                                            01550020
CQ8      DC    XL8'00'                 AVAILABLE                        01560020
CQ9      DC    XL8'00'                 LST SCD REC RR,CUR CAP           01570020
CQ10     DC    XL8'00'                 AVAILABLE                        01580020
CQ11     DC    XL8'00'                 PTR-CP18,STAT LRECL              01590020
CQ12     DC    XL8'00'                 AVAILABLE                        01600020
*********************************************************************** 01610020
.CP20COM ANOP                                                           01620020
CQ13     CCW   X'1B',0,X'40',6          CTL SEEK HH -  COMMON EXIT      01630020
CQ14     CCW   X'08',0,X'20',5          TIC, NOP DURING CLOSE           01640020
CQ14A    DC    X'0000000000000000'      MBBCCHHR                        01650020
*                                                                       01660020
*                                                                       01670020
CQ14B    CCW   SETSECT,0,SILI+CC,1      SETSECTOR                       01700020
CQ15     CCW   SIDEQ,0,CC,5             SEARCH ID EQUAL                 01702020
CQ16     CCW   TIC,0,0,0                TIC                             01710020
CQ17     CCW   WCKD,0,DC,8              WRITE COUNT,                    01720020
CQ18     CCW   0,0,DC,0                 KEY                             01722020
CQ19     CCW   0,0,CC,10                AND DATA                        01732020
CQ20     CCW   X'08',0,X'00',0          TIC                             01740020
CQ21     CCW   WCKD,0,DC,8              WRITE COUNT,                    01772020
CQ22     CCW   0,0,DC,0                 KEY                             01774020
CQ23     CCW   0,0,CC,10                AND DATA                        01776020
CQ24     CCW   TIC,0,0,0                TIC                             01782020
CQ25     CCW   WCKD,0,CC,0              WRITE COUNT KEY AND DATA        01800020
CQ26     CCW   TIC,0,0,0                TIC                             01810020
CQ27     CCW   SIDEQ+MT,0,CC,5          SEARCH ID EQUAL - MT            01820020
CQ28     CCW   TIC,0,0,0                TIC                             01830020
CQ29     CCW   TIC,0,0,0                TIC                             01832020
CQ30     DC    X'0000000000000000'      MBBCCHHR                        01840020
*                                                                       01850020
CP20LEN  EQU   (CQ30+8-CQ0)             LENGTH OF CP20                  01860020
*                                                                       01870020
         AIF   ('&OPTCD' NE 'W').CP21                                   01880020
*                                                                       01890020
* CP20 - EXTENTION FOR WR CHK                                           01900020
*                                                                       01910020
CQT0     CCW   NOP,0,SILI+CC,1          NOP/ SETSECTOR                  01950020
CQT1     CCW   SIDEQ,0,CC,5             SEARCH ID EQUAL                 01952020
CQT2     CCW   TIC,0,0,0                TIC                             01954020
CQT3     CCW   RKD,0,CC+SKIP,0 *        READ NORMAL INDEX               01957020
CQT4     CCW   SIDEQ+MT,0,CC,5 *        SEARCH FOR OVERFLOW ENTRY       01960020
CQT4A    CCW   TIC,0,0,0 *              TIC TO CQT4                     01963020
CQT5     CCW   RKD,0,CC+SKIP,0 *        READ OVERFLOW INDEX             01966020
*   THIS SLOT CHANGED DEPENDING ON WHETHER INACTIVE ENTRY WAS WRITTEN.  01969020
CQT5A    CCW   TIC,0,CC+SILI,1 *        TIC TO CQT7 NO INACTIVE         01972020
*        CCW   TIC,0,CC+SILI,1          NOP IF INACTIVE ENTRY.          01975020
*                                                                       01978020
CQT5B    CCW   SIDEQ+MT,0,CC,5 *        SEARCH FOR INACTIVE ENTRY       01981020
CQT5C    CCW   TIC,0,0,0 *              TIC TO CQT5B                    01984020
CQT6     CCW   RKD,0,CC+SKIP,0 *        READ INACTIVE ENTRY             01987020
CQT7     CCW   SEEKHH,0,CC,6            SEEK HEAD                       02000020
CQT8     CCW   TIC,0,SILI,5             TIC - NOP DURING CLOSE          02002020
*                                                                       02010020
CP20WRCK EQU   (CQT8+8-CQT0)            LENGTH OF CP20                  02020020
*                                       *    WRITE EXTENSION            02030020
.CP21    ANOP                                                           02040020
         SPACE 5                                                        02040120
*************************************                                   02041020
* CP21 - WRITE HIGH LEVEL INDEX ENTRY                                   02050020
*************************************                                   02060020
*                                                                       02070020
CQ39A    CCW   SETSECT,0,SILI+CC,1      SETSECTOR                       02110020
CQ40     CCW   SIDEQ,0,CC,5             SEARCH ID EQUAL                 02112020
CQ41     CCW   TIC,0,0,0                TIC                             02114020
CQ42     CCW   WCKD,0,DC,8              WRITE COUNT,                    02120020
CQ43     CCW   0,0,DC,0                 KEY                             02120420
         AIF   ('&OPTCD' EQ 'W').ACQ44                                  02121020
CQ44     CCW   0,0,0,10                 DATA                            02130420
         AGO   .BCQ44                                                   02131020
.ACQ44   ANOP                                                           02131120
CQ44     CCW   0,0,CC,10                DATA                            02132420
.BCQ44   ANOP                                                           02133020
*                                                                       02140020
CP21LEN  EQU   (CQ44+8-CQ39A)           LENGTH OF CP21                  02150020
*                                                                       02160020
         AIF   ('&OPTCD' NE 'W').END                                    02170020
*                                                                       02180020
* CP21 - EXTENTION FOR WR CHK                                           02190020
*                                                                       02200020
CQ44A    CCW   NOP,0,CC+SILI,1          NOP/SET SECTOR SLOT             02220020
CQ45     CCW   SIDEQ,0,CC,5             SEARCH ID EQUAL                 02240020
CQ46     CCW   TIC,0,0,0                TIC                             02240420
CQ47     CCW   RCKD,0,SKIP,0            READ COUNT KEY AND DATA         02242020
*                                                                       02250020
CP21WRCK EQU   (CQ47+8-CQ44A)           LENGTH OF CP21 WRITE            02260020
*                                       *    CHECK EXTENSION            02270020
.END     ANOP                                                           02280020
         MEND                                                           02290020
./  ADD  SSI=31350021,NAME=IGGLOAD
         MACRO                                                          01000020
&NAME    IGGLOAD                                                        02000020
*    12/19/72          LEVEL=02                                         02002002
.*         RELEASE 22 DELETIONS/CHANGES                                 02010020
.*         RELEASE 21 DELETIONS/CHANGES                                 02020020
.*         RELEASE 20 DELETIONS/CHANGES                                 02030020
*********************************************************************** 03000020
* ISLCOMON REFERENCE  C(DCBWKPT1)=A(ISLCOMON)                         * 04000020
*********************************************************************** 05000020
*                                                                       06000020
&NAME    DSECT                                                          07000020
         DS    0D                                                       08000020
ISLECBA  DS    A                        FOR CP18 AND CP20               09000020
ISLIOBA  DS    CL40                                                     10000020
ISLECBB  DS    A                        FOR CP21                        11000020
ISLIOBB  DS    CL40                                                     12000020
ISLECBC  DS    A                        FOR CP19                        13000020
ISLIOBC  DS    CL40                                                     14000020
ISLAREAZ DS    CL88                     FOR CP19                        15000020
ISLIXLT  DS    CL104                    INDEX LOCATION TABLE            16000020
ISLNIRT  DS    CL3                      HHR OF DUMMY TRACK INDEX        17000020
ISLHIRT  DS    CL1                      NO INDX ENT ON PRIM DATA TRACK  18000020
ISLCBF   DS    F                        BUF CTRL PTR (RCD WITHIN BUF)   19000020
ISLBMPR  DS    F                        USED TO BUMP CBF TO NEXT RCD    20000020
ISLFBW   DS    F                        NO OF BUFS SCHED TO WRITE       21000020
ISLEOB   DS    F                        END OF BUFFR ADR                22000020
ISLNCNT  DS    CL8                      NORMAL IX COUNT, CCHHRKDD       23000020
ISLOCNT  DS    CL8                      OVFLOW IX COUNT, CCHHRKDD       24000020
ISLDCNT  DS    CL8                      DUMMY IX COUNT, CCHHRKDD        25000020
ISLNDAT  DS    CL10                     NORMAL IX DATA, MBBCCHHRFP      26000020
         DS    CL2                                                      27000020
ISLODAT  DS    CL10                     OVFLOW IX DATA, MBBCCHHRFP      28000020
         DS    CL1                                                      29000020
ISLBUFNO DS    CL1                      DCBBUFNO OR 2                   30000020
ISLBUFN  DS    F                        ADDR OF SLOT N IN BCT           31000020
ISLMVC   DS    F                        COUNT OF EXECUTED MOVE (N-1)    32000020
ISLMVCT  DS    F                        NOMBR OF 255 BYTE MOVES (N+1)   33000020
ISLVRSAV DS    18F                      ISL SAVE AREA                   34000020
ISLAPSAV DS    10F                      APPENDAGE SAVE AREA             35000020
ISLWRSAV DS    16F                      ISL SAVE AREA FOR CLOSE         36000020
*                                                                       37000020
TSTWK1C  DS    F                        RESERVED AREA                   38000020
TSTWK2C  DS    F                        RESERVED AREA                   39000020
TSTWK3C  DS    F                                                        40000020
ISLNOENT DS    F                        NO ENTRIES REMAINING ON TRACK   41000020
ISLOFFST DS    F                        SIZE OF WR CKD INSTR IN BYTES   42000020
ISLD     DS    F                        DISPLACEMENT FROM CP18 START    43000020
ISLFSTBF DS    F                        ADDR OF 1ST SCHED BUF (REL)     44000020
ISLLSTBF DS    F                        ADDR OF LAST SCHED BUF (REL)    45000020
ISLCCFAD DS    F                        ADDR OF CC FLAG IN CP18         46000020
ISLKEYAD DS    F                        ADDR OF KEY OF LAST RCD ON TRK  47000020
*                                                                       48000020
CL1AD    DS    0F                       ADDR OF CP18 SKELETON (OPEN)    49000002
ISLF8AD  DS    F                        ADDR OF PUT ISLF800 (CLOSE)     49050002
CM1AD    DS    0F                       ADDR OF CP19 SKELETON (OPEN)    49100002
ISLFXAD  DS    F                        ADDR OF PJT ISLFY01 (CLOSE)     50000002
CQ1AD    DS    0F                       ADDR OF CP20 SKELETON (OPEN)    50050002
ISLFYAD  DS    F                        ADDR OF PUT ADDR OF PUT ISLFZ01 51000020
CQT1AD   DS    0F                       ADDR CP20 WC SKELETON (OPEN)    51050002
ISLFZAD  DS    F                        ADDR OF PUT ISLPA01 (CLOSE)     52000002
CQ40AD   DS    0F                       ADDR OF CP21 SKELETON (OPEN)    52050002
ISLPAAD  DS    F                        ADDR OF APP ISLPA01 (CLOSE)     53000002
CQ45AD   DS    0F                       ADDR CP21 WC SKELETON (OPEN)    53050002
ISLF1AD  DS    F                        ADDR OF APP ISLF110 (CLOSE)     54000002
* ISLVPTRS REFERENCE  C(DCBWKPT6)=A(ISLVPTRS)                           55000020
*                                                                       56000020
ISLVPTRS EQU   *                                                        57000020
ISLVPTR1 DS    A                        A(AREA Y)                       58000020
ISLVPTR2 DS    A                        A(KEYSAVE)                      59000020
ISLVPTR3 DS    A                        A(IOBBCT) BUF CTRL TBL ADR      60000020
ISLVPTR4 DS    A                        A(CP18)                         61000020
ISLVPTR5 DS    A                        A(CP19)                         62000020
ISLVPTR6 DS    A                        A(CP20)                         63000020
ISLVPTR7 DS    A                        A(CP21)                         64000020
ISLVPTR8 DS    A                        SIZE OF ISLCOMON AREA           65000020
ISLVPTR9 DS    A                        SIZE OF CHAN PROG AREA          66000020
ISLVPTRA DS    A                        A(TRACK INDEX SAVE AREA)        67000020
*                                       BIT 0--FULL TRK INDX WRITE      68000020
*                                       BIT 1--SUCCESSFUL GETMAIN       69000020
ISLVPTRB DS    A                        A(CP20B)--FULL TRK INDX WR      70000020
ISLVPTRC DS    A                        A(CP20C)--FULL TRK INDX WR      71000020
ISLFXWK1 DS    F                        WORK AREA                       72000020
ISLFXWK2 DS    F                        WORK AREA                       73000020
ISLF9WK1 DS    F                        WORK AREA                       74000020
*                                                                       75000020
ISLIGAP  DS    H                        NON LAST RCD OVHD               76000020
ISLLGAP  DS    H                        LAST RCD OVHD                   77000020
ISLRPSSS DS    F                        SECTORS FOR CP18,19,20,21       78000020
ISLCSIZE EQU   *-&NAME                  SIZE OF COMMON WORK AREA        79000020
         MEND                                                           81000020
./  ADD  SSI=81700129,NAME=IGGMCDCL
 /********************************************************************/ 00202037
 /*                                                                  */ 00204037
 /*   MACRO NAME = IGGMCDCL                                          */ 00206037
 /*                                                                  */ 00208037
 /*   DESCRIPTIVE NAME = VSAM CATALOG COMMON DECLARATIONS            */ 00210037
 /*                                                                  */ 00212037
 /*   FUNCTION = CONTAINS THE COMMONLY USED CONTROL BLOCK FORMATS,   */ 00214037
 /*              CONSTANTS, FUNDAMENTAL MAPPINGS, AND INTERFACE      */ 00216037
 /*              MACROS FOR VSAM CATALOG MANAGEMENT PROCESSING.      */ 00218037
 /*                                                                  */ 00220037
 /*   INCLUDED MACROS = IGGMCTRC      IKJTCB       IEZCTGWA          */ 00222037
 /*                     IGGCCA        IFGACB       IEZCTGVL          */ 00224037
 /*                     IEZCTGPL      AMCBS        IEZCTGCV          */ 00226037
 /*                     IEZCTGFL      IGGCAXWA                       */ 00228037
 /*                     CVT           IEZCTGFV                       */ 00230037
 /*                                                                  */ 00232037
 /*   METHOD OF ACCESS = PL/S - RESPECIFY A BASE FOR SOME STRUCTURES */ 00234037
 /*                                                                  */ 00236037
* /* MACSTAT Y-2 74218/ZA00964                              @ZA00964*/  00352002
 /*   STATUS = VS/2 RELEASE 3   (CHANGE FLAG @Y30SSXX)               */ 00400037
 /*                                                                  */ 00440037
 /*   DATE OF LAST CHANGE = 17 JAN 75                        @Y30SSPJ*/ 00480037
 /*                                                                  */ 00520037
 /********************************************************************/ 00560037
 % EXECPARM:                                                            02000090
           MACRO;                   /* SETS MACRO VARIABLES IN       */ 02200037
                                    /* ACCORDANCE WITH EXEC STMT     */ 02400037
                                    /* MACPARM VALUES                */ 02600037
           DCL SYSTEM CHAR EXT ;    /* TYPE OF SYSTEM INDICATOR      */ 02800037
           IF MACPARM = 'DOS'       /* COMPILE FOR DOS SYSTEM?       */ 03000037
             THEN SYSTEM = 'DOS';   /* YES - INDICATE DOS            */ 03200037
             ELSE SYSTEM = 'AOS';   /* NO  - DEFAULT TO AOS          */ 03400037
 % END;                                                                 03600090
           %DCL SYSTEM CHAR EXT;    /* TYPE OF SYSTEM INDICATOR      */ 03800037
           ?EXECPARM;                                                   04000037
 /********************************************************************/ 04100037
 /*                    DECLARATION  OF  CONSTANTS                    */ 04200037
 /********************************************************************/ 04400037
    DECLARE                                                             04600037
      ON       BIT(1)    CONSTANT('1'B), /* ON - A '1' BIT           */ 04800037
      OFF      BIT(1)    CONSTANT('0'B), /* OFF - A '0' BIT          */ 05000037
      TRUEGC   BIT(8)    CONSTANT('3F'X), /* TO GET TRUE GROUP CODE  */ 05200037
      LOWKEYTY BIT(8)    CONSTANT('00'X), /* LOW KEY TYPE            */ 05400037
      CATEXTID CHAR(1)   CONSTANT('E'), /* CATALOG EXTENSION RECRD ID*/ 05600037
      VOLEXTID CHAR(1)   CONSTANT('W'), /* VOLUME EXTENSION RECRD ID */ 05800037
      VOLGOPLN FIXED(31) CONSTANT(6), /* VOLUME GOP LENGTH           */ 06000037
      CATGOPLN FIXED(31) CONSTANT(5), /* CATALOG GOP LENGTH          */ 06200037
      VOLSNLN  FIXED(31) CONSTANT(2), /* VOLUME SEQUENCE NO. LENGTH  */ 06400037
      CATSNLN  FIXED(31) CONSTANT(1), /* CATALOG SEQUENCE NO. LENGTH */ 06600037
      PSWDGC   FIXED(31) CONSTANT(4), /* SECURITY GROUP CODE         */ 06800037
      K256     FIXED(31) CONSTANT(256),/* CONSTANT OF 256    @Y30SSPJ*/ 06805037
      IGNOREIT FIXED(31) CONSTANT(0),  /* CLEAR ERROR CODE   @Y30SSPJ*/ 06807037
      NOGETMSE FIXED(31) CONSTANT(0),  /* NO GETMAIN ERROR CODE         06810037
                                                             @Y30SSPJ*/ 06815037
      VSRELID1 PTR(8) CONSTANT(0),  /* VSAM REL 1 ID         @Y30SSPJ*/ 06820037
      VSRELID2 PTR(8) CONSTANT(1),  /* VSAM REL 2 ID         @Y30SSPJ*/ 06825037
      CURELID  PTR(8) CONSTANT(1),  /* CURRENT VSAM REL ID   @Y30SSPJ*/ 06830037
      SSUBPOOL FIXED(8) CONSTANT(241), /* SYSTEM SUBPOOL NO. @Y30SSDW*/ 06835037
      FSUBPOOL FIXED(8) CONSTANT(229), /* FETCH PROTECTED SP @ZA29164*/ 06837037
      USUBPOOL FIXED(8) CONSTANT(252),/* USER SUBPOOL NUMBER @Y30SSDW*/ 06840037
      SASIZ    FIXED(31) CONSTANT(12); /* SAVE AREA SIZE             */ 07000037
 /********************************************************************/ 07010037
 /*                   DECLARATION  OF  REGISTERS                     */ 07020037
 /********************************************************************/ 07030037
    DECLARE                         /* GENERAL REGISTERS             */ 07040037
      (RP0 REG(0),                  /* PARAMETER REG 0               */ 07400037
       RP1 REG(1),                  /* PARAMETER REG 1               */ 07600037
       WKR2 REG(2),                 /* WORK REGISTER                 */ 07800037
       WKR3 REG(3),                 /* WORK REGISTER                 */ 08000037
       WKR4 REG(4),                 /* WORK REGISTER                 */ 08200037
       RSAVE REG(13),               /* SAVE AREA REGISTER 13         */ 08400037
       RET   REG(14),               /* RETURN REGISTER               */ 08600037
       RGO   REG(15)) PTR(31);      /* ENTRY POINT REGISTER          */ 08800037
 /********************************************************************/ 08810037
 /*                   DECLARATION  OF  REGISTERS                     */ 08820037
 /********************************************************************/ 08830037
    DECLARE                         /* GENERAL REGISTERS             */ 08840037
      (RZERO REG(0),                /* GR 0 FOR GETMAIN USAGE        */ 09200037
       RWA  REG(2),                 /* GR 2 POINTS TO WORK AREA      */ 09400037
       RNDX REG(3),                 /* GR 3 FOR INDEX                */ 09600037
       RFLD REG(4),                 /* GR 4 POINTS TO FIELD          */ 09800037
       RWK1 REG(6),                 /* GR 6 IS WORK REGISTER         */ 10000037
       RWK2 REG(7),                 /* GR 7 IS WORK REGISTER         */ 10200037
       RWK3 REG(8),                 /* GR 8 IS WORK REGISTER         */ 10400037
       RWK4 REG(9)) PTR(31);        /* GR 9 IS WORK REGISTER         */ 10600037
 /********************************************************************/ 10640037
 /*                   DECLARATION  OF  REGISTERS                     */ 10680037
 /********************************************************************/ 10720037
    DECLARE                         /* GENERAL REGISTERS             */ 10760037
      R0  REG(0)  PTR(31),          /* STANDARD REGISTER             */ 11200037
      R1  REG(1)  PTR(31),          /* STANDARD REGISTER             */ 11400037
      R2  REG(2)  PTR(31) RSTD,     /* LOCAL WORK REGISTER           */ 11600037
      R3  REG(3)  PTR(31) RSTD,     /* LOCAL WORK REGISTER           */ 12000037
      R4  REG(4)  PTR(31) RSTD,     /* LOCAL WORK REGISTER           */ 12400037
      R5  REG(5)  PTR(31),          /* WORK REGISTER                 */ 12800037
      R6  REG(6)  PTR(31),          /* WORK REGISTER                 */ 13000037
      R7  REG(7)  PTR(31),          /* WORK REGISTER                 */ 13200037
      R8  REG(8)  PTR(31),          /* WORK REGISTER                 */ 13400037
      R9  REG(9)  PTR(31),          /* WORK REGISTER                 */ 13600037
      R10 REG(10) PTR(31),          /* WORK REGISTER                 */ 13800037
      R11 REG(11) PTR(31) RSTD,     /* CCA BASE REGISTER             */ 14000037
      R12 REG(12) PTR(31) RSTD,     /* ASSEMBLER CODE BASE REGISTER  */ 14400037
      R13 REG(13) PTR(31),          /* SAVE AREA REGISTER            */ 14800037
      R14 REG(14) PTR(31),          /* RETURN REGISTER               */ 15000037
      R15 REG(15) PTR(31);          /* ENTRY POINT REGISTER          */ 15200037
 @EJECT;                                                                15300037
 %INCLUDE SYSLIB(IGGMCTRC);         /* CATALOG RETURN CODES          */ 15400037
 @EJECT;                                                                15500037
 %CCAPTR   = 'R11';                 /* NEW CCA BASE VARIABLE         */ 15600037
 %INCLUDE SYSLIB(IGGCCA);           /* CATALOG COMMUNICATIONS AREA   */ 15800037
 %DCL IGGMODID CHAR EXT;            /* GLOBAL MODULE ID      @Y30SSPJ*/ 15810037
 @EJECT;                                                                15820037
 %CTGPLPTR = 'CCACPL';              /* NEW IEZCTGPL BASE             */ 16000037
 %INCLUDE SYSLIB(IEZCTGPL);         /* CATALOG PARAMETER LIST        */ 16200037
 @EJECT;                                                                16230037
 %CTGFLPTR = 'CCAFLPT';             /* TEMPORARY IEZCTGFL BASE       */ 16260037
 %INCLUDE SYSLIB(IEZCTGFL);         /* FIELD PARAMETER LIST          */ 16290037
 @EJECT;                                                                16320037
 /********************************************************************/ 16350037
 /*                  USER  WORKAREA  DECLARATION                     */ 16400037
 /********************************************************************/ 16460037
    DECLARE                                                             16520037
      1 USERWKA  BASED(CTGWKA),     /* USER WORK AREA                */ 16600037
        2 WKALEN1  FIXED(15),       /* LENGTH OF USER WORK AREA      */ 16800037
        2 WKALEN2  FIXED(15),       /* REQUIRED LENGTH FOR USER AREA */ 17000037
        2 WKA      CHAR(0),         /* SPACE FOR RETRIEVED INFO      */ 17200037
          3 ENTNAMES(*),            /* ENTRYNAME SET ARRAY           */ 17400037
            4 ENTNAMET CHAR(1),     /* ENTRYNAME TYPE CODE           */ 17600037
            4 ENTNAMEV CHAR(44);    /* ENTRYNAME VALUE               */ 17800037
    DCL CTGVLDSP FIXED(15) BASED(ADDR(CTGFLDGC)); /* PARTIAL EXTRACT */ 18600037
 /********************************************************************/ 18700037
 /*                DECLARATION  OF  FIELD  NAME                      */ 18800037
 /********************************************************************/ 18900037
    DECLARE FIELDNM CHAR(8) BASED(CTGFLDNM); /* FIELD NAME           */ 19000037
 /********************************************************************/ 19100037
 /*      CATALOG  FIELD  DICTIONARY  INFORMATION  DECLARATION        */ 19200037
 /********************************************************************/ 19260037
    DECLARE                                                             19320037
      1 DICTENT BASED(ADDR(CTGFLDWA)), /* DICTIONARY ENTRY           */ 19400037
        2 DICTFLGS BIT(8),          /* FIELD FLAGS                   */ 19600037
          3 DICTVAR  BIT(1),        /* VARIABLE OR FIXED             */ 19800037
          3 DICTREP  BIT(1),        /* REPEATING OR NON-REPEATING    */ 20000037
          3 DICTCOMB BIT(1),        /* COMBINATION/SPECIAL OR NOT    */ 20200037
          3 DICTFLG  BIT(1),        /* FLAG FIELD OR NOT             */ 20400037
          3 DICTMV   BIT(1),        /* MULTI-VALUED OR NOT           */ 20600037
          3 DICTSCRA BIT(1),        /* SUPPRESS CRA UPDATES  @Y30SSPJ*/ 20660037
          3 DICTUPGD BIT(1),        /* UPGRADE ENTRY NAME    @Y30SSPJ*/ 20720037
          3 *        BIT(1),        /* RESERVED              @Y30SSPJ*/ 20800037
        2 DICTST   PTR(8),          /* STARTING POINT                */ 21000037
        2 DICTLC   PTR(8),          /* LENGTH OR COUNT               */ 21200037
        2 DICTGC   PTR(8);          /* GROUP CODE                    */ 21400037
    DECLARE                                                             21410037
      DTCMBMK BIT(8) CONSTANT('F0'X), /* COMBINATION MASK    @Y30SSPJ*/ 21420037
                                      /* A FIELD IS A COMBINATION    */ 21470037
                                      /* FIELD IF DICTFLGS&DTCMBMK = */ 21520037
                                      /* DTCMB                       */ 21570037
      /* THE FOLLOWING DICTIONARY ENTRY FLAGS ARE USED TO IDENTIFY   */ 21580037
      /*   SPECIAL FIELD NAMES                                       */ 21590037
      DTCMB   BIT(8) CONSTANT('20'X), /* COMBINATION FIELD NAME      */ 21600037
      DTSRR   BIT(8) CONSTANT('60'X), /* RELREPNO, REPNO FIELD NAME  */ 21800037
      DTSTR   BIT(8) CONSTANT('E8'X), /* TRBAEXT FIELD NAME          */ 22000037
      DTSCC   BIT(8) CONSTANT('60'X); /* CATACB, CNTREPNO, GENDSP    */ 22200037
                                      /* FIELD NAMES                 */ 22250037
    /* THE FOLLOWING DICTIONARY ENTRY VALUES ARE USED TO IDENTIFY    */ 22300037
    /*    SPECIFIC SPECIAL FIELD NAMES                               */ 22350037
    DECLARE                                                             22400037
      DTREL   BIT(8) CONSTANT('03'X), /* RELREPNO - CTGFLDWA(2)      */ 22600037
      DTREP   BIT(8) CONSTANT('04'X), /* REPNO    - CTGFLDWA(2)      */ 22800037
      DTCNT   BIT(8) CONSTANT('02'X), /* CNTREPNO - CTGFLDWA(2)      */ 23000037
      DTCAT   BIT(8) CONSTANT('01'X), /* CATACB   - CTGFLDWA(2)      */ 23200037
      DTGDP   BIT(8) CONSTANT('05'X); /* GENDSP   - CTGFLDWA(2)      */ 23400037
 /********************************************************************/ 23500037
 /*      CATALOG  FIELD  DICTIONARY  INFORMATION  DECLARATION        */ 23600037
 /********************************************************************/ 23660037
    DECLARE                                                             23720037
      1 DIC2ENT BASED(ADDR(CCADICT)), /* DICTIONARY ENTRY            */ 23800037
        2 DIC2FLGS BIT(8),          /* FIELD FLAGS                   */ 24000037
          3 DIC2VAR  BIT(1),        /* VARIABLE OR FIXED             */ 24200037
          3 DIC2REP  BIT(1),        /* REPEATING OR NON-REPEATING    */ 24400037
          3 DIC2COMB BIT(1),        /* COMB/SPECIAL OR NOT           */ 24600037
          3 DIC2FLG  BIT(1),        /* FLAG FIELD OR NOT             */ 24800037
          3 DIC2MV   BIT(1),        /* MULTI-VALUED OR NOT           */ 25000037
          3 DIC2SCRA BIT(1),        /* SUPPRESS CRA UPDATES  @Y30SSPJ*/ 25010037
          3 DIC2UPGD BIT(1),        /* UPGRADE ENTRY NAME    @Y30SSPJ*/ 25020037
          3 *        BIT(1),        /* RESERVED              @Y30SSPJ*/ 25030037
        2 DIC2ST   PTR(8),          /* STARTING POINT                */ 25400037
        2 DIC2LC   PTR(8),          /* LENGTH OR COUNT               */ 25600037
        2 DIC2GC   PTR(8);          /* GROUP CODE                    */ 25800037
 /********************************************************************/ 25900037
 /*              CATALOG  ENTRY  POINTERS  DECLARATION               */ 26000037
 /********************************************************************/ 26060037
    DECLARE                                                             26120037
      1 CCARAB BASED(CCAURAB),      /* CATALOG RAB POINTERS          */ 26200037
        2 CCARABFL PTR(8),          /* RAB FLAGS                     */ 26400037
          3 CCARBUR BIT(1),         /* RAB IN-USE MODIFY, EXTRACT    */ 26600037
          3 CCARBU1 BIT(1),         /* RAB IN-USE TESTS              */ 26800037
          3 CCARBU2 BIT(1),         /* RAB IN-USE TESTS              */ 27000037
          3 CCARBWR BIT(1),         /* WRITE IT BEFORE READ          */ 27200037
          3 CCARBPA BIT(1),         /* PUT-ADD WRITE                 */ 27400037
          3 *       BIT(2),         /* RESERVED                      */ 27600037
          3 CCARBUPD BIT(1),        /* UPDATE BUFFER NOT REUSED      */ 27800037
        2 CCARABRI PTR(8),          /* LAST ASSIGNED RPL INDEX       */ 28000037
        2 * CHAR(2),                /* RESERVED                      */ 28200037
        2 CCACPE1 PTR(31),          /* START ENTRY RECORD PTR        */ 28400037
        2 CCACPE2 PTR(31),          /* PTR TO REPEATING FIELD        */ 28600037
                                    /* CONTROL INFORMATION           */ 28800037
        2 CCACPE3 PTR(31),          /* PTR TO FIRST GROUP OCCURRENCE */ 29000037
        2 CCACPE4 PTR(31);          /* PTR TO END OF RECORD ENTRY    */ 29400037
 /********************************************************************/ 29500037
 /*             GROUP  OCCURRENCE  POINTER  DECLARATION              */ 29600037
 /********************************************************************/ 29660037
    DECLARE                                                             29720037
      1 CATGOPT BASED(CCACPE5),     /* GROUP OCCURRENCE POINTER      */ 29800037
        2 CATGOCI CHAR(3),          /* CI NUMBER OR                  */ 30000037
          3 CATGOFLG BIT(8),        /* GROUP OCCURRENCE FLAG         */ 30200037
            4 *      BIT(8),        /* RESERVED                      */ 30400037
          3 CATGODSP FIXED(15)      /* DISPLACEMENT TO GROUP         */ 30600037
                     BDY(BYTE),     /*   OCCURRENCE                  */ 30800037
        2 CATGOGC1 PTR(8),          /* GROUP CODE INFORMATION        */ 31000037
          3 CATGOEXT BIT(1),        /* GROUP OCCURRENCE OUTSIDE RECD */ 31200037
          3 CATGODEL BIT(1),        /* DELETED GROUP OCCURRENCE PTR  */ 31600037
          3 CATGOGC  BIT(6),        /* TRUE GROUP CODE               */ 31800037
        2 CATGOSEQ PTR(8);          /* (HIGH) SEQUENCE NUMBER        */ 32000037
 /********************************************************************/ 32100037
 /*       DECLARATION  OF  VARIABLE  LENGTH  SEQUENCE  NUMBER        */ 32200037
 /********************************************************************/ 32300037
    DECLARE CATSN CHAR(2) BASED(ADDR(CATGOSEQ)); /* SEQUENCE NUMBER  */ 32400037
 /********************************************************************/ 32500037
 /*        DECLARATION  OF  CATALOG  RECORD  KEY  INFORMATION        */ 32600037
 /********************************************************************/ 32660037
    DECLARE                                                             32720037
      1 CATRCD   BASED(CCACPE1),    /* CATALOG RECORD                */ 32800037
        2 RCDKEYTY CHAR(1),         /* KEY TYPE                      */ 33000037
        2 RCDCINO  PTR(24),         /* RECORD CI NUMBER              */ 33200037
        2 RCDRELID PTR(8),          /* RELEASE INDICATOR     @Y30SSPJ*/ 33205037
        2 RCDCRAVL CHAR(6),         /* CRA VOLUME SERIAL     @Y30SSPJ*/ 33210037
        2 RCDCRACI PTR(24) BDY(BYTE), /* CRA CI NUMBER       @Y30SSPJ*/ 33215037
        2 RCDCRADT CHAR(4),         /* CRA DEVICE TYPE       @Y30SSPJ*/ 33220037
        2 RCDRACTS CHAR(4),         /* CRA CREATION TIME STAMP          33225037
                                                             @Y30SSSB*/ 33230037
        2 RCDDICTS CHAR(4),         /* D/I IDENTIFIER TIME STAMP        33235037
                                                             @Y30SSSB*/ 33240037
        2 *        CHAR(18),        /* RESERVED              @Y30SSSB*/ 33400037
        2 RCDID    CHAR(1),         /* RECORD ID                     */ 33600037
        2 RCDSIZ   FIXED(15) BDY(BYTE), /* RECORD SIZE               */ 33800037
        2 NREPCV   PTR(8),          /* COUNT OF VARIABLE FIELDS      */ 34200037
        2 NREPLF   PTR(8);          /* LENGTH OF FIXED FIELDS        */ 34400037
 /********************************************************************/ 34500037
 /*     DECLARATION OF CONTROL INFORMATION FOR REPEATING FIELDS      */ 34600037
 /********************************************************************/ 34660037
    DECLARE                                                             34720037
      1 REPCNTRL BASED(CCACPE2),    /* CONTROL INFORMATION           */ 34800037
        2 EXTRCDPT CHAR(5),         /* EXTENSION RECORD POINTER      */ 35000037
          3 EXTGOCI  CHAR(3),       /* CI NUMBER OF EXTENSION RECORD */ 35200037
          3 *        CHAR(2),       /* RESERVED                      */ 35250037
        2 REPCNT   PTR(8),          /* COUNT OF GROUP OCCURRENCE PTRS*/ 36400037
        2 REPGOPT(*) CHAR(5);       /* VARIABLE NUMBER OF GROUP      */ 36800037
                                    /*   OCCURRENCE POINTERS         */ 37000037
 /********************************************************************/ 37100037
 /*             DECLARATION  OF  VARIABLE  LENGTH  FIELD             */ 37200037
 /********************************************************************/ 37260037
    DECLARE                                                             37320037
      1 VARFIELD BASED(CCACPE7),    /* VARIABLE FIELD                */ 37400037
        2 VARLEN  FIXED(15) BDY(BYTE), /* LENGTH OF FIELD            */ 37600037
        2 VARINFO CHAR(512);        /* FIELD INFORMATION             */ 38000037
 /********************************************************************/ 38100037
 /*              DECLARATION  OF  CONTROL  INFORMATION               */ 38200037
 /********************************************************************/ 38260037
    DECLARE                                                             38320037
      1 CNTRLINF BASED(CCACPE6),    /* CONTROL INFORMATION           */ 38400037
        2 CNTVAR  PTR(8),           /* COUNT OF VARIABLE FIELDS      */ 38600037
        2 LENFIX  PTR(8);           /* LENGTH OF FIXED FIELDS        */ 38800037
 @EJECT;                                                                38860037
 /********************************************************************/ 38920037
 /*               DECLARATION  OF  CVT  BASE  POINTER                */ 39000037
 /********************************************************************/ 39100037
    DECLARE CVTPTR PTR(31) LOCATION(16); /* BASE FOR CVT             */ 39400037
 %INCLUDE SYSLIB(CVT);              /* COMMUNICATIONS VECTOR TABLE   */ 39600037
 %DEACT OFF;                                                            39650090
 @EJECT;                                                                39800090
 /********************************************************************/ 39900037
 /*             POINTERS  TO  NEXT  AND  CURRENT  TCB'S              */ 40000037
 /********************************************************************/ 40060037
    DECLARE                                                             40120037
      1 TCBWORDS BASED(CVTTCBP),    /* TCB LIST                      */ 40200037
        2 NEXTTCB PTR(31),          /* POINTER TO NEXT TCB           */ 40400037
        2 TCBPTR  PTR(31);          /* POINTER TO CURRENT TCB        */ 40600037
 %INCLUDE SYSLIB(IKJTCB);           /* TASK CONTROL BLOCK            */ 41000037
 @EJECT;                                                                41200090
 %INCLUDE SYSLIB(IHAPSA);                                               41450002
 @EJECT;                                                                41500037
 %INCLUDE SYSLIB(IFGACB);                                               43000090
 RFY IFGACB BASED(CCAACB);          /* ACB BASE IN CCA               */ 43050037
 @EJECT;                                                                43200090
 /********************************************************************/ 43240037
 /*                    ACCESS  METHOD  FLAGS                         */ 43280037
 /********************************************************************/ 43320037
    DECLARE                                                             43360037
      1 MCATDSTR PTR(31) BDY(BYTE) DEF(CVTAMFF), /* FLAGS ARE IN CVT */ 44200037
        2 CVTAMF1 BIT(8),           /* VSAM CVT FLAGS        @Y30SSPJ*/ 44600037
          3 AMF1OPEN BIT(1),        /* MASTER CATALOG OPEN           */ 44800037
          3 AMF1NONX BIT(1),        /* MASTER CATALOG NON-EXISTENT   */ 45000037
          3 * BIT(6),               /* RESERVED                      */ 45200037
        2 * PTR(24) BDY(BYTE);      /* RESERVED                      */ 45400037
 %DECLARE MCATOPEN CHAR,            /* MASTER CATALOG OPEN           */ 45450037
          MCATNONX CHAR,            /* MASTER CATALOG NON-EXISTENT   */ 45500037
          CBSPTR   CHAR;            /* ADDRESS OF THE AMCBS          */ 45550037
 %MCATOPEN = 'AMF1OPEN';            /* MASTER CATALOG OPEN           */ 45600037
 %MCATNONX = 'AMF1NONX';            /* MASTER CATALOG NON-EXISTENT   */ 45800037
 %CBSPTR = 'CVTCBSP';               /* ADDRESS OF THE AMCBS          */ 46800037
 @EJECT;                                                                47200090
 %INCLUDE SYSLIB(AMCBS);            /* ACCESS METHOD CNTRL BLK STRUC */ 47400037
 @EJECT;                                                                47600090
 /********************************************************************/ 47700037
 /*              D U M M Y     D E C L A R A T I O N S               */ 47800037
 /********************************************************************/ 47900037
    DECLARE CI CHAR(3) BASED;       /* DUMMY CI NUMBER               */ 48000037
    DECLARE TNAM CHAR(44) BASED;    /* DUMMY TRUE NAME               */ 48200037
 @EJECT;                                                                48400090
 %CAXWAPTR = 'ACBUAPTR';                                                48800090
 %INCLUDE SYSLIB(IGGCAXWA);         /* CATALOG AUXILIARY WORKAREA    */ 49000037
 @EJECT;                                                                49200090
 %INCLUDE SYSLIB(IEZCTGFV);         /* FIELD VECTOR TABLE            */ 49400037
 @EJECT;                                                                49800090
 %INCLUDE SYSLIB(IEZCTGWA);         /* SCHEDULER WORK AREA           */ 50400037
 @EJECT;                                                                50500037
 %INCLUDE SYSLIB(IEZCTGVL);         /* CATALOG VOLUME LIST           */ 50600037
 @EJECT;                                                                50700037
 %INCLUDE SYSLIB(IEZCTGCV);         /* CONTROL VOLUME LIST           */ 50800037
 @EJECT;                                                                50830037
 /********************************************************************/ 50860037
 /*                WORK  AREA  FOR  OS/VS  LOCATE                    */ 50890037
 /********************************************************************/ 50920037
    DECLARE                                                             50950037
      1 MWA BASED(RWA),             /* WORK AREA FOR OS/VS LOCATE    */ 51000037
        3 VOLENTCT FIXED(15),       /* VOLUME ENTRY COUNT            */ 51200037
        3 VLST(20) BDY(HWORD),      /* VOLUME LIST                   */ 51400037
          5 DEVTYP CHAR(4),         /* DEVICE TYPE                   */ 51600037
          5 VOLSER CHAR(6),         /* VOLUME SERIAL NUMBER          */ 51800037
          5 FSN PTR(16) BDY(BYTE),  /* FILE SEQUENCE NUMBER          */ 52000037
        3 * CHAR(10),               /* BINARY ZEROS                  */ 52200037
        3 CVOLIND BDY(BYTE),        /* CAN BE DEVICE TYPE            */ 52400037
          5 TTR1 CHAR(3),           /* TTR - NEXT BLOCK(OVER 20 VOL) */ 52600037
          5 BIN0 BIT(8),            /* BINARY ZEROS                  */ 52800037
        3 TTR2 CHAR(3),             /* TTR FOR NEXT BLOCK READ       */ 53000037
        3 CVLSER CHAR(6);           /* VOLUME SERIAL OF REQ CVOL     */ 53200037
 % CALLSF: MACRO ;                      /*GENERATES LABELED CALLS   */  53400090
     DCL IGGMODID EXT;              /* GLOBAL MODULE ID      @Y30SSPJ*/ 53400437
     DCL IGGBASE2 EXT;              /* SECONDARY BASE REG    @ZA29164*/ 53400737
     DCL (XMODTBL,XMODTBLB,WARG) CHAR;  /* WORK VARIABLES    @Y30SSPJ*/ 53401037
     DCL (HIT1,HIT2) FIXED;         /* WORK VARIABLES        @Y30SSPJ*/ 53402037
     XMODTBL='-SLEN-SLIV-AA;-ACDV-AB;-MCO-AC;-MCO2-TINQ'|| /*@Y30SSPJ*/ 53403037
  '-TIDQ-RAOP-AD;-DCME-MEBM-AE;-DELC-EMSG-EMIO-AF;-IORA'|| /*@Y30SSPJ*/ 53406637
       '-ISCI-PUPC-PDE-PDEC-PAD-PADC-AOCI-AXCI-RCCR'    || /*@Y30SSPJ*/ 53407237
       '-CCCR-XIO-AG;-SCAT-QNQC-AH;-FDSP-DFM1-AI;-DBDI' || /*@Y30SSPJ*/ 53407837
       '-AJ;-DCMB-AK;-DTIM-DEF-AL;-DBVC-SLOC-SLEI-SLEL' || /*@Y30SSPJ*/ 53408437
  '-AM;-DRDA-DSCB-DCCE-PSEM-AN;-DEFB-DEFX-AO;-DCDA-AP;' || /*@Y30SSPJ*/ 53409037
  '-DEFS-AQ;-SALL-AR;-DCRC-DEFC-AS;-CDVR-ARFS-AT;-SALS' || /*@Y30SSPJ*/ 53411037
       '-AU;-MOD-UPD-DEL2-SGOP-AV;-ADGO-GNEX-GREL-IGOP' || /*@Y30SSPJ*/ 53412037
       '-PREC-AW;-ALT2-EXPD-SHNK-MGO-DGO-DGOP-AX;-SCNC' || /*@Y30SSPJ*/ 53413037
       '-AY;-EXT-LOC-AZ;-GLOC-GDGL-A2;-SC2-GRE-RPLM'    || /*@Y30SSPJ*/ 53413437
       '-RPLF-A3;-DGDS-ERUG-A4;-DELX-DALL-DELB'         || /*@Y30SSPJ*/ 53415037
     '-A5;-DFS2-BJFB-CBPT-CRTC-A6;-VMSC-DEMV-DVMV-DUSC' || /*@Y30SSDW*/ 53417037
       '-MCRA-DF4T-A7;-DFRS-A8;-CMRR-CCBC-A9;' ;           /*@Y30SSPJ*/ 53417437
     XMODTBLB='-TSTS-GVAL-GREC-BA;-UPDE-BB;-INIT-SVOL'  || /*@Y30SSPJ*/ 53419437
       '-BC;-ALT-BD;-ALVL-ALEC-ANVV-BE;-SSCR-BF;-DEL'   || /*@Y30SSPJ*/ 53420037
       '-DOPN-DEXA-DLXT-BG;-DEFA-DAVO-BH;-GET-GETC-TNXO'|| /*@Y30SSPJ*/ 53421437
       '-UCRS-TXO-BI;-GDSP-BJ;-LSP-LDCS-BK;-DELS-DUCB'  || /*@Y30SSPJ*/ 53422037
       '-DLVM-DLET-BL;-CKAU-BM;-ALVR-VRD-ALMD-ALSV-BN;' || /*@Y30SSPJ*/ 53423037
       '-RAPA-RAPU-RAG-RAPD-RARC-XRIO-RASC-BO;-SPAC-RET1'||/*@Y30SSPJ*/ 53423437
       '-BP;-LSTC-BQ;-BMR-BR;-XVAL-XEXT-BS;-XMOD-XLT2'  || /*@Y30SSPJ*/ 53425037
       '-XEL2-XDGO-BT;-F4RD-F4WR-F4DQ-BU;-SMFA-SMFF-SMFS'||/*@Y30SSPJ*/ 53426037
       '-SMFL-SMFR-SMFZ-BV;-DEIN-BW;-DSPC-BX;-DRSP-BY;' || /*@Y30SSPJ*/ 53428037
       '-CONV-GALO-VALI-BZ;'                            || /*@Y30SSSG*/ 53428837
       '-DCNV-ITER-CMKY-DPBI-DCCO-FPDA-B0;'             || /*@Y30SSSG*/ 53428937
       '-UADD-UDEL-B1;-AUPG-B2;'                        || /*@Y30SSDW*/ 53429237
       '-SMF-SMFG-B3;-DCRA-B4;-DEAX-DIAX-DEPT-DIPT'     || /*@Y30SSDW*/ 53430837
       '-DCLS-DUPG-B5;-WTSO-SPSC-INMD-B6;-RUS-B7;-DFBO' || /*@Y30SSPJ*/ 53431237
       '-DUND-CNBO-B8;-PAIX-PATH-B9;'                   || /*@Y30SSDW*/ 53432237
       '-RAPV-MODI-WCRA-WCAT-DA;' ;                        /*@Y30SSDW*/ 53432337
     WARG='-'||MACLIST(1)||'-';     /* SEARCH AGUMENT        @Y30SSPJ*/ 53432437
     HIT1=INDEX(XMODTBL,WARG);      /* SEARCH TABLE A        @Y30SSPJ*/ 53432737
     IF HIT1=0 THEN                 /* NAME FOUND TABLE A?   @Y30SSPJ*/ 53433037
       DO;                          /* NO-NOT FOUND IN TBL A @Y30SSPJ*/ 53433337
         XMODTBL=XMODTBLB;          /* SET-UP TABLE A WITH B @Y30SSPJ*/ 53433637
         HIT1=INDEX(XMODTBL,WARG);  /* SEARCH TABLE B        @Y30SSPJ*/ 53433937
       END;                                                /*@Y30SSPJ*/ 53434037
     ELSE;                                                 /*@Y30SSPJ*/ 53434237
     IF HIT1¬=0 THEN                /* NAME FOUND TABLES?    @Y30SSPJ*/ 53434637
       DO;                          /* YES-NAME FOUND        @Y30SSPJ*/ 53434737
         HIT2=INDEX(XMODTBL(HIT1:LENGTH(XMODTBL)),';')+HIT1-1;          53434837
                                    /* SEARCH FOR MOD NAME   @Y30SSPJ*/ 53435137
         IF IGGMODID(2:3) ¬= XMODTBL(HIT2-2:HIT2-1) THEN                53435437
           DO;                                             /*@Y30SSPJ*/ 53435837
             ANS ('/') SKIP COL(MACCOL);                   /*@Y30SSPJ*/ 53436037
             ANS ('*') COL(MACCOL+1);                      /*@Y30SSPJ*/ 53459337
             ANS(' CALL TO MODULE IGG0CL' ||               /*@Y30SSPJ*/ 53469337
                       XMODTBL(HIT2-2:HIT2-1) || ' ')                   53479337
                         COL(MACCOL+2);                    /*@Y30SSPJ*/ 53481337
             ANS('*') COL(70);      /*GENERATE COMMENT       @Y30SSPJ*/ 53481737
             ANS('/') COL(71);      /*GENERATE COMMENT       @Y30SSPJ*/ 53481937
           END;                                            /*@Y30SSPJ*/ 53482537
         ELSE;                                             /*@Y30SSPJ*/ 53482937
       END;                             /*                   @Y30SSPJ*/ 53576637
     ANS ('Z' || MACINDEX(2:4) || MACLIST(1) || ':') SKIP COL(2);       53699937
     IF IGGBASE2 ¬= '' THEN         /* BASE REG 2 SPECIFIED? @ZA29164*/ 53800037
       DO;                          /* YES                   @ZA29164*/ 53809037
         ANS('DO;') COL(MACCOL);    /*                       @ZA29164*/ 53818037
         ANS('CALL IGGP'||MACLIST(1)||';') COL(MACCOL+2);/*  @ZA29164*/ 53827037
         ANS('GEN(RLDSBREG IGGP'||MACLIST(1)||');') COL(MACCOL+2);      53836037
         ANS('/* RELOAD SECONDARY BASE REG */') COL(37);/*   @ZA29164*/ 53845037
         ANS('END;') COL(MACCOL);   /*                       @ZA29164*/ 53854037
       END;                         /*                       @ZA29164*/ 53863037
     ELSE                           /* NO BASE REG 2         @ZA29164*/ 53872037
       ANS ('CALL IGGP' || MACLIST(1) || ';') COL(MACCOL); /*@Y30SSPJ*/ 53890037
     ANS (' ') SKIP COL(MACCOL+LENGTH(MACLIST)+7);         /*@Y30SSPJ*/ 54000037
 % END ;                                                                54200090
 % CATPROB:                         /* PROBLEM DETERMINATION @Y30SSPJ*/ 54250037
     MACRO KEYS(MODID,ECD,RCD);     /* MACRO                 @Y30SSPJ*/ 54300037
     DCL IGGMODID CHAR EXT;         /* EBCDIC MODULE ID      @Y30SSPJ*/ 54310037
     DCL (ERROR,REASON,ERRCOM) CHAR;/* WORK VARIABLES        @Y30SSPJ*/ 54320037
     DCL (RSNTBL,RNUM,CARG) CHAR;   /* WORK VARIABLES        @Y30SSPJ*/ 54330037
     DCL (HIT1,HIT2,RCODE) FIXED;   /* WORK VARIABLES        @Y30SSPJ*/ 54340037
     RCODE = 0;                     /* INTERNAL RETURN CODE  @Y30SSPJ*/ 54340437
     RNUM = '0,1,2,3,4,5,6,7,8,9,'; /* NUMERIC SEARCH TABLE  @Y30SSPJ*/ 54340537
     RSNTBL = '0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,'||              54340637
              '30,32,34,36,38,40,42,44,46,48,50,52,54,' ||              54340737
              '56,58,60,62,64,66,68,70,72,74,76,78,80,' ||              54344537
              '82,84,86,88,90,92,94,96,98,100,102,104,' ||              54346537
              '106,108,110,112,114,116,118,120,122,124,'||              54348537
              '126,' ;              /* REASON SEARCH TABLE   @Y30SSPJ*/ 54349037
     IF MODID(1) = '*' THEN         /* MODULE ID ONLY?       @Y30SSPJ*/ 54349437
       DO;                          /* YES-MODULE ID ONLY    @Y30SSPJ*/ 54349837
         ANS('/') SKIP COL(MACCOL);                        /*@Y30SSPJ*/ 54349937
         ANS('*') COL(MACCOL+1);                           /*@Y30SSPJ*/ 54353237
         ANS(' SET CCAMODID=' || IGGMODID ||                            54355237
          ', CCAREASN=RSN0, CCARETRN=RCS ' ) COL(MACCOL+2);/*@Y30SSPJ*/ 54355637
         ANS('*') COL(70);                                 /*@Y30SSPJ*/ 54356037
         ANS('/') COL(71);                                 /*@Y30SSPJ*/ 54356437
         ANS('CCAPROB=IGGSEGID;') SKIP COL(MACCOL);        /*@Y30SSPJ*/ 54356537
         ANS(' ') COL(MACCOL+LENGTH(MACKEYS)+8);           /*@Y30SSPJ*/ 54356637
         RETURN CODE(RCODE);        /* RETURN                @Y30SSPJ*/ 54356737
       END;                                                /*@Y30SSPJ*/ 54357837
     ELSE;                                                 /*@Y30SSPJ*/ 54359837
     ERROR = ECD(1);                /* PICK-UP ERROR CODE    @Y30SSPJ*/ 54359937
     IF RCD(1) = '' THEN            /*REASON CODE SPECIFIED? @Y30SSPJ*/ 54362737
       IF MODID(1) ¬= 'NO' THEN     /*NO-MODID = NO?         @Y30SSPJ*/ 54364737
         REASON = '0';              /*DEFAULT REASON         @Y30SSPJ*/ 54365137
       ELSE;                                               /*@Y30SSPJ*/ 54365537
     ELSE                           /*YES-REASON SPECIFIED   @Y30SSPJ*/ 54365937
       REASON = RCD(1);             /*USER SPECIFIED REASON  @Y30SSPJ*/ 54366137
     IF REASON ¬= '' THEN           /*REASON SPECIFIED?      @Y30SSPJ*/ 54366537
       IF REASON(1:1) ¬= '(' THEN   /*YES-IS IT IN A FIELD?  @Y30SSPJ*/ 54366637
         DO;                        /*NO-NOT IN A FIELD      @Y30SSPJ*/ 54367437
           CARG = REASON(1:1)||','; /*FORM SEARCH ARGUMENT   @Y30SSPJ*/ 54367837
           HIT1 = INDEX(RNUM,CARG); /*SEARCH FOR NUMERIC     @Y30SSPJ*/ 54368237
           IF HIT1 = 0 THEN         /*1ST CHAR NUMERIC?      @Y30SSPJ*/ 54368637
             DO;                    /*NO-INVALID SPECIFIED   @Y30SSPJ*/ 54369037
               RCODE = 12;          /*SET RETURN CODE        @Y30SSPJ*/ 54369137
               ERRCOM = '   ***ERROR***   RCD(' || REASON ||            54371737
                 ') IS NOT AN VALID NUMERIC REASON CODE.'; /*@Y30SSPJ*/ 54373737
               ANS(COMMENT(ERRCOM)) SKIP COL(2);           /*@Y30SSPJ*/ 54374137
               REASON = '(' || REASON || ')';              /*@Y30SSPJ*/ 54374237
               GO TO BV;            /*BYPASS FURTHER TESTS   @Y30SSPJ*/ 54374337
             END;                                          /*@Y30SSPJ*/ 54375037
           ELSE;                                           /*@Y30SSPJ*/ 54375437
 BU:       HIT2=HIT2+1;             /*REASON CHAR POINTER    @Y30SSPJ*/ 54375837
           IF REASON(HIT2:HIT2)='0' THEN /*REASON CHAR = 0?  @Y30SSPJ*/ 54376237
             IF HIT2<LENGTH(REASON)THEN /*FINISHED ?         @Y30SSPJ*/ 54376337
               GO TO BU;            /*NO-LOOP TIL DONE       @Y30SSPJ*/ 54376437
             ELSE;                                         /*@Y30SSPJ*/ 54376637
           ELSE;                                           /*@Y30SSPJ*/ 54376737
           CARG = REASON(HIT2:LENGTH(REASON)) || ',';      /*@Y30SSPJ*/ 54376837
           HIT1 = INDEX(RSNTBL,CARG); /*SEARCH FOR REASON    @Y30SSPJ*/ 54376937
           IF HIT1 = 0 THEN         /*VALID REASON CODE?     @Y30SSPJ*/ 54377537
             DO;                    /*NO-NONE FOUND          @Y30SSPJ*/ 54377937
               RCODE = 12;          /*SET RETURN CODE        @Y30SSPJ*/ 54378337
               ERRCOM = '   ***ERROR***   RCD(' || REASON ||            54378737
                 ') IS NOT A VALID REASON CODE.';          /*@Y30SSPJ*/ 54378937
               ANS(COMMENT(ERRCOM)) SKIP COL(2);           /*@Y30SSPJ*/ 54379337
               REASON = '(' || REASON || ')';              /*@Y30SSPJ*/ 54392237
               GO TO BV;            /*SKIP FURTHER TESTS     @Y30SSPJ*/ 54402237
             END;                                          /*@Y30SSPJ*/ 54404237
           ELSE;                                           /*@Y30SSPJ*/ 54406237
           REASON = 'RSN'||REASON(HIT2:LENGTH(REASON));    /*@Y30SSPJ*/ 54406337
         END;                                              /*@Y30SSPJ*/ 54406437
       ELSE;                                               /*@Y30SSPJ*/ 54410737
     ELSE                           /*NO-NO REASON CODE      @Y30SSPJ*/ 54412737
       IF ERROR = '' THEN           /*ERROR CODE SPECIFIED?  @Y30SSPJ*/ 54414737
         IF MODID(1) = 'NO' THEN    /*NO-MODID = NO?         @Y30SSPJ*/ 54414837
           DO;                      /*YES-DEFAULT TO 0       @Y30SSPJ*/ 54414937
             ERROR = 'RCS';         /*SET ERROR TO 0         @Y30SSPJ*/ 54415037
             REASON = 'RSN0';       /*SET REASON TO 0        @Y30SSPJ*/ 54419337
           END;                                            /*@Y30SSPJ*/ 54421337
         ELSE;                                             /*@Y30SSPJ*/ 54423337
       ELSE;                                               /*@Y30SSPJ*/ 54423437
 BV: IF ERROR ¬= 'RCS' THEN         /*REASON NOT RCS?        @Y30SSPJ*/ 54423537
       IF REASON ¬= '' THEN         /*YES-REASON NOT NULL?   @Y30SSPJ*/ 54423637
         IF REASON(1:1) ¬= '(' THEN /*YES-REASON NOT FIELD?  @Y30SSPJ*/ 54427937
           IF MODID(1) ¬= 'NO' THEN /*YES-MODID NOT NO?      @Y30SSPJ*/ 54429937
             DO;                    /*YES-ALL TRUE           @Y30SSPJ*/ 54431937
               ANS('/') SKIP COL(MACCOL);                  /*@Y30SSPJ*/ 54432037
               ANS('*') COL(MACCOL+1);                     /*@Y30SSPJ*/ 54432137
               ANS(' SET CCAMODID=' || IGGMODID ||                      54432237
                 ', CCAREASN=' || REASON || ', CCARETRN='||             54436537
                 ERROR ) COL(MACCOL+2);                    /*@Y30SSPJ*/ 54438537
               ANS('*') COL(70);                           /*@Y30SSPJ*/ 54440537
               ANS('/') COL(71);                           /*@Y30SSPJ*/ 54440637
               ANS('CCAPROB=IGGSEGID+('||REASON||'*K256)+'||ERROR||';') 54440737
                  COL(MACCOL);                             /*@Y30SSPJ*/ 54440837
               ANS(' ') COL(MACCOL+LENGTH(MACKEYS)+8);     /*@Y30SSPJ*/ 54445137
               RETURN CODE(RCODE);  /* RETURN                @Y30SSPJ*/ 54447137
             END;                                          /*@Y30SSPJ*/ 54449137
           ELSE;                                           /*@Y30SSPJ*/ 54449237
         ELSE;                                             /*@Y30SSPJ*/ 54449337
       ELSE;                                               /*@Y30SSPJ*/ 54449437
     ELSE;                                                 /*@Y30SSPJ*/ 54453737
     IF MODID(1) ¬= 'NO' THEN       /*MODID NOT NO?          @Y30SSPJ*/ 54455737
       IF ERROR = 'RCS' THEN        /*YES-ERROR CODE RCS?    @Y30SSPJ*/ 54457737
         IF REASON(1:1) ¬= '(' THEN /*YES-REASON NOT FIELD?  @Y30SSPJ*/ 54457837
           DO;                      /*YES-ALL TRUE           @Y30SSPJ*/ 54457937
             ANS(COMMENT(' CLEAR CCAMODID, CCAREASN, AND CCARETRN'))    54458037
               COL(MACCOL+2);                              /*@Y30SSPJ*/ 54462337
             ANS('CCAPROB=IGNOREIT;') SKIP COL(MACCOL);    /*@Y30SSPJ*/ 54464337
             ANS(' ') COL(MACCOL+LENGTH(MACKEYS)+8);       /*@Y30SSPJ*/ 54466337
             RETURN CODE(RCODE);    /* RETURN                @Y30SSPJ*/ 54466437
           END;                                            /*@Y30SSPJ*/ 54466537
         ELSE;                                             /*@Y30SSPJ*/ 54466637
       ELSE;                                               /*@Y30SSPJ*/ 54470937
     ELSE;                                                 /*@Y30SSPJ*/ 54472937
     ANS('DO;') COL(MACCOL);                               /*@Y30SSPJ*/ 54474937
     IF MODID(1) ¬= 'NO' THEN       /*MODID NOT NO?          @Y30SSPJ*/ 54475037
       DO;                          /*YES-GENERATE MODULE ID @Y30SSPJ*/ 54475137
         ANS('CCAMODID='||IGGMODID||';')SKIP COL(MACCOL+2);/*@Y30SSPJ*/ 54475237
         ANS(COMMENT('SET MODULE ID')) COL(MACCOL+17);     /*@Y30SSPJ*/ 54479537
       END;                                                /*@Y30SSPJ*/ 54481537
     ELSE;                                                 /*@Y30SSPJ*/ 54483537
     IF REASON ¬= '' THEN           /*REASON NOT NULL?       @Y30SSPJ*/ 54483637
       DO;                          /*YES-GENTERATE REASON   @Y30SSPJ*/ 54483737
         IF REASON(1:1) = '(' THEN  /*REASON IN A FIELD/REG? @Y30SSPJ*/ 54483837
           REASON=REASON(2:LENGTH(REASON)-1);/*YES-DEL PAREN @Y30SSPJ*/ 54488137
         ELSE;                                             /*@Y30SSPJ*/ 54490137
         ANS('CCAREASN='||REASON||';') SKIP COL(MACCOL+2); /*@Y30SSPJ*/ 54492137
         ANS(COMMENT('SET REASON CODE')) COL(MACCOL+LENGTH(REASON)+13); 54492237
       END;                                                /*@Y30SSPJ*/ 54492337
     ELSE;                                                 /*@Y30SSPJ*/ 54492437
     IF ERROR ¬= '' THEN            /*ERROR NOT NULL?        @Y30SSPJ*/ 54496737
       DO;                          /*YES-GENERATE ERROR     @Y30SSPJ*/ 54498737
         ANS('CCARETRN='||ERROR||';') COL(MACCOL+2);       /*@Y30SSPJ*/ 54500737
         ANS(COMMENT('SET RETURN CODE')) COL(MACCOL+LENGTH(ERROR)+13);  54500837
       END;                                                /*@Y30SSPJ*/ 54500937
     ELSE;                                                 /*@Y30SSPJ*/ 54501037
     ANS('END;') SKIP COL(MACCOL);                         /*@Y30SSPJ*/ 54505337
     ANS(' ') COL(MACCOL+LENGTH(MACKEYS)+8);               /*@Y30SSPJ*/ 54507337
     RETURN CODE(RCODE);            /* RETURN                @Y30SSPJ*/ 54509337
 % END;                                                    /*@Y30SSPJ*/ 54509437
 % SPAT:   MACRO;                       /*SPILL,PUSH & TRACK   Y02020*/ 54509737
           ANS ('DO;') SKIP COL(MACCOL);                    /* Y02020*/ 54514037
           ANS ('IF MNATFULL=ON THEN') SKIP COL(MACCOL+2);  /* Y02020*/ 54518337
           ANS ('/*TRACKING TABLE FULL       */') COL(41);  /* Y02020*/ 54522637
           ANS ('?CALLSF (ARFS);') SKIP RESCAN COL(MACCOL+2);           54526937
                                                            /* Y02020*/ 54531237
           ANS ('/*YES,CALL SPILL ROUTINE    */') COL(41);  /* Y02020*/ 54535537
           ANS ('GEN REFS(CCAMNAT)') SKIP COL(MACCOL+2);    /* Y02020*/ 54539837
              ANS ('(MVC CCAMNAT(248,11),CCAMNAT+8(11));')              54544137
                 SKIP COL(MACCOL+5);                        /* Y02020*/ 54548437
           ANS ('/*PUSH AND TRACK            */') COL(41);              54552737
                                                            /* Y02020*/ 54557037
           ANS ('END;') SKIP COL(MACCOL);                   /* Y02020*/ 54561337
 % END ;                                                    /* Y02020*/ 54574237
 % GETREC: ADDREC: UPDREC: DELREC:                                      54587137
           MACRO KEYS(BY,FOR,RAB);                                      54600090
           DCL(IOI1,IOI2,IOI3,IOI4) CHAR;                               54800090
           DCL OP(1) CHAR;                                              55000090
           OP(1) = MACNAME(1:1);                                        55200090
           ANS ('DO;') SKIP COL(MACCOL);                                55400090
           IF    OP(1) ¬= 'G'                                           55600090
             THEN GOTO IOIJ ;                                           55800090
           IF BY(1) = '*'                                               56000090
            THEN GOTO IOIB ;                                            56200090
           IF BY(1) = 'KEY' THEN                                        56400090
             DO;                                                        56600090
     ANS ('CCAF1KEY = ON;     /* TRUE NAME GET*/')        /* @Y30SSDW*/ 56800037
         SKIP COL(MACCOL);                                /* @Y30SSDW*/ 56900037
     ANS ('CCAF1KGE = OFF;    /*NOT GET NEXT */')         /* @Y30SSDW*/ 57000037
         SKIP COL(MACCOL);                                /* @Y30SSDW*/ 57100037
               GOTO IOIB ;                                              57200090
             END;                                                       57400090
           IF BY(1) = 'KGE' THEN                                        57600090
             DO;                                                        57800090
     ANS ('CCAF1KEY = ON;     /*TRUE NAME GET*/')         /* @Y30SSDW*/ 58000037
         SKIP COL(MACCOL);                                /* @Y30SSDW*/ 58100037
     ANS ('CCAF1KGE = ON;     /* GET NEXT    */')         /* @Y30SSDW*/ 58200037
         SKIP COL(MACCOL);                                /* @Y30SSDW*/ 58300037
               GOTO IOIB ;                                              58400090
             END;                                                       58600090
     ANS ('CCAF1KEY = OFF;    /*GET BY CI NO. */')        /* @Y30SSDW*/ 58800037
         SKIP COL(MACCOL);                                /* @Y30SSDW*/ 58900037
     ANS ('CCAF1KGE = OFF;    /*NOT GET NEXT */')         /* @Y30SSDW*/ 59000037
         SKIP COL(MACCOL);                                /* @Y30SSDW*/ 59100037
 IOIB:     IF FOR(1) = '*'                                              59200090
             THEN GOTO IOIJ ;                                           59400090
             IF FOR(1) = 'NUP'                                          59600090
             THEN                                                       59800090
     ANS ('CCAF1UP = OFF;     /*NOT GET UPD  */') SKIP COL(MACCOL);     60000037
             ELSE                                                       60200090
     ANS ('CCAF1UP = ON;      /*GET FOR UPD  */') SKIP COL(MACCOL);     60400037
 IOIJ:     IF RAB(1) = ''                                               60600090
             THEN GOTO IOIM ;                                           60800090
           IOI1 = RAB(1) ;                                              61000090
           IF LENGTH(IOI1) = 1                                          61200090
             THEN IOI1 = 'CCARAB' || RAB(1) ;                           61400090
     ANS ('CCAURAB = ADDR( IOI1 ) ; /*SET RAB PTR*/')                   61600090
             SKIP RESCAN COL(MACCOL) ;                                  61800090
 IOIM:                                                                  62000090
           IF OP(1) = 'G' THEN          /* GETREC ?                 */  62200090
             DO;                        /* YES                      */  62400090
               ANS ('?CALLSF (GET);') SKIP RESCAN COL(MACCOL+2);        62600090
               ANS ('/* GET RECORD             */') COL(41);            62800090
               GOTO IOIP;                                               63000090
             END;                                                       63200090
           IF OP(1) = 'A' THEN          /* ADDREC ?                 */  63400090
             DO;                        /* YES                      */  63600090
               ANS ('?CALLSF (PAD);') SKIP RESCAN COL(MACCOL+2);        63800090
               ANS ('/* PUT-ADD RECORD         */') COL(41);            64000090
               GOTO IOIP;                                               64200090
             END;                                                       64400090
           IF OP(1) = 'U' THEN          /* UPDREC ?                 */  64600090
             DO;                        /* YES                      */  64800090
               ANS ('?CALLSF (PUPC);') SKIP RESCAN COL(MACCOL+2);       65000090
               ANS ('/* PUT-UPDATE RECORD      */') COL(41);            65200090
               GOTO IOIP;                                               65400090
             END;                                                       65600090
                                        /* DELREC                   */  65800090
           ANS ('?CALLSF (PDE);') SKIP RESCAN COL(MACCOL+2);            66000090
           ANS ('/* PUT-DELETE RECORD        */') COL(41);              66200090
 IOIP: ANS ('END;') SKIP COL(MACCOL);                                   66400090
 % END ;                                                                66600090
 % GETMS: FREEMS:                                                       66800090
           MACRO KEYS(CLASS,RFR);                           /* Y02020*/ 67000002
           DCL (SPL, POOLTYPE) CHAR;    /*SUBPOOL VARIABLES  @Y30SSDW*/ 67600037
           IF CLASS(1) = 'S' THEN                         /* @Y30SSDW*/ 67800037
             DO;                                          /* @Y30SSDW*/ 67900037
               SPL = 'SSUBPOOL';                          /* @Y30SSDW*/ 68000037
               POOLTYPE = 'SYSTEM SUBPOOL 241';           /* @Y30SSDW*/ 68050037
             END;                                         /* @Y30SSDW*/ 68100037
           ELSE;                                          /* @Y30SSDW*/ 68150037
           IF CLASS(1) = 'U' THEN                         /* @Y30SSDW*/ 68200037
             DO;                                          /* @Y30SSDW*/ 68300037
               SPL  = 'USUBPOOL';                         /* @Y30SSDW*/ 68400037
               POOLTYPE = 'USER SUBPOOL 252';             /* @Y30SSDW*/ 68450037
             END;                                         /* @Y30SSDW*/ 68500037
           ELSE;                                          /* @Y30SSDW*/ 68550037
           IF CLASS(1) = 'F' THEN                         /* @ZA29164*/ 68557037
             DO;                                          /* @ZA29164*/ 68564037
               SPL = 'FSUBPOOL';                          /* @ZA29164*/ 68571037
               POOLTYPE = 'SYSTEM SUBPOOL 229';           /* @ZA29164*/ 68578037
             END;                                         /* @ZA29164*/ 68585037
           ELSE;                                          /* @ZA29164*/ 68592037
           ANS ('R1 = ADDR(CCAMSSPL);') SKIP COL(MACCOL); /* @Y30SSDW*/ 68600037
           ANS ('/* POINT TO STRG MGMT P.L.  */') COL(41);/* @Y30SSDW*/ 68800037
           IF SPL ¬= '' THEN                                            69000090
             DO;                                                        69200090
               ANS ('CCAMNSPL = SPL;') SKIP COL(MACCOL);  /* @Y30SSDW*/ 69400037
               ANS ('/* STORE SUBPOOL VALUE      */') COL(41);          69600090
             END;                                                       69800090
           IF MACNAME = 'FREEMS' THEN                                   70000090
             DO;                                                        70200090
               IF RFR(1)¬='NO' THEN     /*RFR ALLOWED          Y02020*/ 70202037
                 ANS ('?SPAT;') SKIP RESCAN COL(MACCOL);                70204037
                                        /*GEN SPILL,PUSH,TRK   Y02020*/ 70206037
               ANS ('/') SKIP COL(MACCOL);                /* @Y30SSDW*/ 70207037
               ANS ('*') COL(MACCOL+1);                   /* @Y30SSDW*/ 70214037
               ANS (' RELEASE MAIN STORAGE FROM ' || POOLTYPE)          70221037
                   COL(MACCOL+3);                         /* @Y30SSDW*/ 70228037
               ANS ('*') COL(70);                         /* @Y30SSDW*/ 70235037
               ANS ('/') COL(71);                         /* @Y30SSDW*/ 70242037
               ANS ('GEN(FREEMAIN L,MF=(E,(1))) ;') SKIP COL(MACCOL);   70400002
                                                            /* Y02020*/ 70450002
             END;                                                       70800090
           ELSE                                                         71000090
             DO;                                                        71200090
               ANS ('/') SKIP COL(MACCOL);                /* @Y30SSDW*/ 71220037
               ANS ('*') COL(MACCOL+1);                   /* @Y30SSDW*/ 71240037
               ANS (' ALLOCATE MAIN STORAGE FROM ' || POOLTYPE)         71260037
                   COL(MACCOL+3);                         /* @Y30SSDW*/ 71280037
               ANS ('*') COL(70);                         /* @Y30SSDW*/ 71300037
               ANS ('/') COL(71);                         /* @Y30SSDW*/ 71320037
               ANS ('GEN(GETMAIN LC,MF=(E,(1)));') SKIP COL(MACCOL);    71400002
                                                            /* Y02020*/ 71450002
               ANS ('/* GET MAIN STORAGE SPACE   */') COL(41);          71600037
               ANS ('GEN(LR R1,R15);')  SKIP COL(MACCOL);               71800090
               ANS ('/* PICK UP RETURN CODE      */') COL(41);          72000090
               ANS ('IF R1 ¬= NOGETMSE THEN') SKIP COL(MACCOL);         72200037
               ANS ('/* CHECK FOR ERROR RETURN   */') COL(41);          72400090
               ANS ('?CATPROB ECD(RCINSSWA) RCD(2);')      /*@Y30SSPJ*/ 72450037
                    SKIP RESCAN COL(MACCOL);               /*@Y30SSPJ*/ 72500037
               ANS ('/* INSUFFICIENT CORE ERROR  */')      /*@Y30SSPJ*/ 72550037
                   COL(41);                                /*@Y30SSPJ*/ 72600037
               ANS(' ') COL(MACCOL+LENGTH(MACKEYS)+6);     /*@Y30SSPJ*/ 72650037
               IF RFR(1)¬='NO' THEN     /*RFR ALLOWED          Y02020*/ 72850002
                 DO;                                        /* Y02020*/ 72900002
                   ANS ('ELSE') SKIP COL(MACCOL);           /* Y02020*/ 72950002
                   ANS ('/* GETMAIN SUCCESSFUL            */')          72952037
                       COL(37);                           /* @Y30SSDW*/ 72954037
                   ANS ('DO;') SKIP COL(MACCOL+2);          /* Y02020*/ 72960002
                   ANS ('?SPAT;') SKIP RESCAN COL(MACCOL+4);/* Y02020*/ 72970002
                   IF CLASS(1)='S' THEN /*CLASS S CORE         Y02020*/ 72980002
                     DO;                                    /* Y02020*/ 72990002
                       ANS ('MNATSCLS=ON;') SKIP COL(MACCOL+4);         72992002
                                                            /* Y02020*/ 72994002
                       ANS ('/*INDICATE CLASS S CORE     */')           72996002
                            COL(41);                        /* Y02020*/ 72998002
                     END;                                   /* Y02020*/ 72998402
                   ANS ('END;') SKIP COL(MACCOL+2);         /* Y02020*/ 72998802
                 END;                                       /* Y02020*/ 72999202
             END;                                                       73000090
 % END;                                                                 80400090
 % CKADD:                                                               80600090
         MACRO KEYS(START,LENG);                                        80800090
         DCL SYSTEM CHAR EXTERNAL;                                      80850037
         DCL (STADD,EDADD) CHAR;                                        81400090
         STADD=START(1);                                                81600090
         EDADD=LENG(1);                                                 81800090
 CKN1:   VALC2 = 'V1' || MACINDEX;                                      83850037
         ANS('RFY (R7,R8,R9,R10,R13,R14,R15) RESTRICTED;')  /* Y02020*/ 83900002
               SKIP COL(MACCOL);                            /* Y02020*/ 83950002
         ANS('R7=R4;') SKIP COL(MACCOL);                    /* Y02020*/ 84000002
         ANS('/* SAVE REGISTERS */') COL(41);               /* Y02020*/ 84050002
         ANS('R8=R11;') SKIP COL(MACCOL);                   /* Y02020*/ 84060002
         ANS('R9=R12;') SKIP COL(MACCOL);                   /* Y02020*/ 84100002
         ANS('R10=R13;') SKIP COL(MACCOL);                  /* Y02020*/ 84150002
         ANS('GEN REFS(PSALITA,FLC)                         /* Y02020*/ 84450002
               SETS(R11,R12,R13,R14,R15)                    /* Y02020*/ 84500002
               SEQFLOW;') SKIP COL(MACCOL);                 /* Y02020*/ 84550002
         ANS('SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,')      /* Y02020*/ 84600002
               SKIP COL(10);                                /* Y02020*/ 84650002
         ANS('X') COL(72);                                  /* Y02020*/ 84700002
         ANS('RELATED=(''AFTER VALIDITY CHECK ROUTINE'')')  /* Y02020*/ 84750002
               COL(16);                                     /* Y02020*/ 84800002
         ANS('@ENDGEN;') SKIP COL(MACCOL);                  /* Y02020*/ 84810002
         ANS('R11=R8;') SKIP COL(MACCOL);                   /* Y02020*/ 84850002
         ANS('/* RESTORE CCA BASE */') COL(41);             /* Y02020*/ 84900002
         ANS('R12=R9;') SKIP COL(MACCOL);                   /* Y02020*/ 84950002
         ANS('/* RESTORE MODULE BASE */') COL(41);          /* Y02020*/ 84960002
         ANS('RFY (R14,R15) UNRESTRICTED;')                 /* Y02020*/ 84970002
               SKIP COL(MACCOL);                            /* Y02020*/ 84972002
         ANS('RFY (R1) RESTRICTED;') SKIP COL(MACCOL);      /* Y02020*/ 84980002
         IF STADD¬='R1' THEN ANS('R1=STADD;')               /* Y02020*/ 84990002
               SKIP COL(MACCOL);                            /* Y02020*/ 84990402
         ANS('R13=R2;') SKIP COL(MACCOL);                   /* Y02020*/ 84990802
         ANS('R2=STADD+EDADD-1;') SKIP COL(MACCOL);         /* Y02020*/ 84992002
         ANS('/* ENDING ADDRESS TO CHECK */') COL(41);      /* Y02020*/ 84994002
         ANS('R4=CCATCB;') SKIP COL(MACCOL);                /* Y02020*/ 84996002
         ANS('CALL CVT0VL00;') SKIP COL(MACCOL);            /* Y02020*/ 84998002
         ANS('/* INVOKE VALIDITY CHK RTN */') COL(41);      /* Y02020*/ 84998402
         ANS('R2=R13;') SKIP COL(MACCOL);                   /* Y02020*/ 84998502
         ANS('RFY (R1) UNRESTRICTED;') SKIP COL(MACCOL);    /* Y02020*/ 84998802
         ANS('BC (8,VL'||MACINDEX||');') SKIP COL(MACCOL);  /* Y02020*/ 84999202
         ANS('/* SKIP IF AREA VALID */') COL(41);           /* Y02020*/ 84999602
         ANS('?CATPROB ECD(RCBLKVCK) RCD(2);') SKIP COL(MACCOL);        85005937
                                        /*USE PROB DET MACRO @Y30SSPJ*/ 85007937
         ANS('/* SET RETURN CODE */') COL(41);              /* Y02020*/ 85008237
         ANS('VL'||MACINDEX||':') SKIP COL(MACCOL);         /* Y02020*/ 85012437
         ANS('RFY (R14,R15) RESTRICTED;') SKIP COL(MACCOL); /* Y02020*/ 85016602
         ANS('GEN REFS(PSALITA,FLC)                         /* Y02020*/ 85026602
               SETS(R11,R12,R13,R14,R15)                    /* Y02020*/ 85028602
               SEQFLOW;') SKIP COL(MACCOL);                 /* Y02020*/ 85030602
         ANS('SETLOCK RELEASE,TYPE=LOCAL,') SKIP COL(10);   /* Y02020*/ 85350002
         ANS('X') COL(72);                                  /* Y02020*/ 85400002
         ANS('RELATED=(''BEFORE VALIDITY CHECK ROUTINE'')') /* Y02020*/ 85450002
               COL(16);                                     /* Y02020*/ 85500002
         ANS('@ENDGEN;') SKIP COL(MACCOL);                  /* Y02020*/ 85550002
         ANS('R4=R7;') SKIP COL(MACCOL);                    /* Y02020*/ 85600002
         ANS('/* RESTORE REGISTERS */') COL(41);            /* Y02020*/ 85650002
         ANS('R11=R8;') SKIP COL(MACCOL);                   /* Y02020*/ 85660002
         ANS('R12=R9;') SKIP COL(MACCOL);                   /* Y02020*/ 85700002
         ANS('R13=R10;') SKIP COL(MACCOL);                  /* Y02020*/ 85750002
         ANS('RFY (R13,R14,R15) UNRESTRICTED;')             /* Y02020*/ 85800002
               SKIP COL(MACCOL);                            /* Y02020*/ 85850002
         ANS('RFY (R7,R8,R9,R10) UNRSTD;') SKIP COL(MACCOL);            92200090
 %END;                                                                  92400090
 % RECID   ='CCASRID' ;                                                 92600090
 % RECKY    = 'CCASRCH' ;                                               92800090
 % VOLKY ='CCASRCH = CCASRCH  && CCASRCH; /*CLEAR SRCH ARG FLD*/        93000090
           CCASRCH(1:6)' ;                                              93200090
 % IDCOUNT = 'CCAASCIK' ;                                               93400090
 % INVOKE = 'RFY (R5,R6,R7,R8,R9,R10) RSTD;                             93600090
             RFY (R5,R6,R7,R8,R9,R10) UNRSTD;                           93800090
             CALL';                                                     94000090
                                                                        94010090
 % CATERR: MACRO KEYS(TYPE,REASON,CCHN,R); /*CATALOG ERROR MACRO    */  94050090
           IF R(1)¬='' THEN                                             94100090
             DO;                                                        94150090
               ANS ('/****************************/') SKIP COL(41);     94160090
               ANS ('/' || '*' || R(1) ) SKIP COL(41);                  94170090
               ANS ('*' || '/') COL(69);                                94180090
               ANS ('/****************************/') SKIP COL(41);     94190090
             END;                                                       94192090
           ANS ('DO;') SKIP COL(MACCOL);                                94194090
           IF TYPE(1)= '' THEN                                          94196090
             GOTO CB;                                                   94198090
           IF TYPE(1) ¬= '*' THEN                                       94198490
             DO;                                                        94198890
               ANS ('CCACD1='|| TYPE(1) ||';') SKIP COL(MACCOL+2);      94199290
               ANS ('/*STORE ERROR TYPE CODE     */') COL(41);          94199690
             END;                                                       94199790
 CB:       IF REASON(1) = '' THEN                                       94199890
             GOTO CC;                                                   94199990
           IF REASON(1) ¬= '*' THEN                                     94249990
             DO;                                                        94259990
               ANS ('CCACD2='|| REASON(1) ||';') SKIP COL(MACCOL+2);    94269990
               ANS ('/* STORE REASON CODE        */') COL(41);          94279990
             END;                                                       94289990
 CC:       IF CCHN(1) = 'YES' THEN                                      94291990
             DO;                                                        94293990
               ANS ('CCACRRP=128;') SKIP COL(MACCOL+2);                 94295990
               ANS ('/*INCLUDE CALLER CHN IN MSG */') COL(41);          94297990
             END;                                                       94298390
           ANS ('?CALLSF (EMSG);') SKIP RESCAN COL(MACCOL+2);           94298790
           ANS ('/*ISSUE WTP ERROR MSG       */') COL(41);              94299190
           ANS ('END;') SKIP COL(MACCOL);                               94299590
 % END;                                                                 94299690
                                                                        94299790
 @LIST ON;                                                              94299990
./  ADD  SSI=60930078,NAME=IGGMCMDM
 /********************************************************************/ 00500003
 /*                                                                  */ 00520003
 /*   MACRO NAME = IGGMCMDM                                          */ 00540003
 /*                                                                  */ 00560003
 /*   DESCRIPTIVE NAME = VSAM CATALOG MANAGEMENT COMMONLY-USED       */ 00580003
 /*                      RECORD STRUCTURES                           */ 00600003
 /*                                                                  */ 00620003
 /*   FUNCTION = CONTAINING MACRO FOR MANY COMMON RECORD STRUCTURE   */ 00640003
 /*              DECLARATIONS USED BY VSAM CATALOG MANAGEMENT        */ 00660003
 /*              ROUTINES.                                           */ 00680003
 /*                                                                  */ 00700003
 /*   INCLUDED MACROS = NONE                                         */ 00720003
 /*                                                                  */ 00740003
 /*   METHOD OF ACCESS = PL/S - RESPECIFY BASE FOR SOME STRUCTURES   */ 00760003
 /*                                                                  */ 00780003
 /*   STATUS = VS/2 RELEASE 4   (CHANGE FLAG @Z40WSXX)       @Z40WSSG*/ 00800040
 /*                                                                  */ 00820003
 /*   DATE OF LAST CHANGE = 23 MAY 75                        @Z40WSSG*/ 00840040
 /*                                                                  */ 00860003
 /********************************************************************/ 00880003
 /********************************************************************/ 01000003
 /*        STRUCTURE FOR THE FIXED INFORMATION IN THE RECORDS        */ 04000003
 /********************************************************************/ 04100003
    DECLARE                                                             04200003
      1 CTGRBASE DEF(NREPLF) POSITION(2), /* BASE FIXED INFO @Y30SSPJ*/ 04500003
        2 CNAME    CHAR(44),        /* ENTRY NAME                    */ 05000003
        2 COWNID   CHAR(8),         /* OWNER ID                      */ 05500003
        2 CCRE     CHAR(3),         /* CREATION DATE                 */ 06000003
        2 CEXP     CHAR(3),         /* EXPIRATION DATE               */ 06500003
        2 CATTR    BIT(16),         /* DATA ATTRIBUTES               */ 07000003
          3 CATTR1  BIT(8),         /*NON-SHARING ATTRIBUTES @Y30SSPJ*/ 07500003
            4 CSP   BIT(1),         /* SPEED                 @Y30SSPJ*/ 07505003
            4 CUNIQ BIT(1),         /* UNIQUE DATA SET       @Y30SSPJ*/ 07510003
            4 CREUSE BIT(1),        /* REUSABLE              @Y30SSPJ*/ 07515003
            4 CERASE BIT(1),        /* ERASE                 @Y30SSPJ*/ 07520003
            4 CRECOV BIT(1),        /* RECOVERABLE CATALOG   @Y30SSPJ*/ 07525003
            4 CINHIB BIT(1),        /* INHIBIT UPDATE        @Y30SSPJ*/ 07530003
            4 CTEMP  BIT(1),        /* TEMPORARY EXPORT      @Y30SSPJ*/ 07535003
            4 CTRKOV BIT(1),        /* TRACK OVERFLOW        @Y30SSPJ*/ 07540003
          3 CATTR2   BIT(8),        /* SHARE OPTIONS                 */ 12000003
            4 CATTRISH BIT(2),      /* CROSS REGION SHARE OPTIONS    */ 12500003
            4 CATTRSSH BIT(2),      /* CROSS SYSTEM SHARE OPTIONS    */ 15000003
            4 *        BIT(2),      /* RESERVED              @Z40WSSG*/ 16500040
            4 CATTISDS BIT(1),      /* INTERNAL SYSTEM D.S.  @Z40WSSG*/ 16510040
            4 CNUS     BIT(1),      /* DS NOT REUSABLE       @Y30SSPJ*/ 16520003
        2 COPEN BIT(8),             /* OPEN INDICATOR                */ 17000003
          3 COPENDS  BIT(1),        /* OPEN DATA SET                 */ 17500003
          3 *        BIT(7),        /* RESERVED                      */ 18000003
        2 CBUF     FIXED(31) BDY(BYTE), /* MINIMUM BUFFER SIZE       */ 18500003
        2 CSPACPRM CHAR(7),         /* SPACE PARAMETERS              */ 19000003
          3 CPRIM PTR(24) BDY(BYTE),/* PRIMARY SPACE QUANTITY        */ 19500003
          3 CSEC  PTR(24) BDY(BYTE),/* SECONDARY SPACE QUANTITY      */ 20000003
          3 CSORT BIT(8),           /* SPACE OPTIONS                 */ 20500003
        2 CHIU PTR(32)   BDY(BYTE), /* HI-USED RBA                   */ 21000003
        2 CHIA PTR(32)   BDY(BYTE), /* HI-ALLOCATED RBA              */ 21500003
        2 CLRECL PTR(32) BDY(BYTE), /* AVERAGE LOGICAL RECORD SIZE   */ 22000003
        2 CDOSUINF CHAR(2),         /* DOS USER INFORMATION  @Y30SSPJ*/ 22500003
        2 CEXT CHAR(8);             /* EXCEPTION EXIT NAME   @Y30SSPJ*/ 22502003
 /********************************************************************/ 22504003
 /*     CLUSTER ATTRIBUTES FIELD: CREATED IN VS/2-2.6.  ALL          */ 22506003
 /*     RELEASE 2 CLUSTERS ARE CREATED WITH THIS FIELD.              */ 22508003
 /********************************************************************/ 22510003
    DECLARE                                                             22512003
      1 * DEFINED(CATTR1),          /* CATALOG ATTRIBUTES    @Y30SSPJ*/ 22514003
        2 CCATTR PTR(8),            /* CATALOG ATTRIBUTES    @Y30SSPJ*/ 22516003
          3 * BIT(8),               /* CATALOG ATTRIBUTES    @Y30SSPJ*/ 22518003
            4 * BIT(6),             /* RESERVED              @Z40WSSG*/ 22520040
            4 CSWAPSPC BIT(1),      /* SWAPSPACE             @Z40WSSG*/ 22520440
            4 CPGSP BIT(1);         /* PAGE SPACE            @Y30SSPJ*/ 22522003
 /********************************************************************/ 22524003
 /*         ALTERNATE INDEX AND PATH ATTRIBUTES                      */ 22526003
 /********************************************************************/ 22528003
    DECLARE                                                             22530003
      1 * DEFINED(CATTR1),          /* PATH/AIX ATTRIBUTES   @Y30SSPJ*/ 22532003
        2 CRGATTR PTR(8),           /* PATH/AIX ATTRIBUTES   @Y30SSPJ*/ 22534003
          3 CUPG BIT(1),            /* AIX UPGRADE           @Y30SSPJ*/ 22536003
            4 CUPD BIT(1),          /* PATH UPDATE           @Y30SSPJ*/ 22538003
          3 * BIT(7);               /* RESERVED              @Y30SSPJ*/ 22540003
 /********************************************************************/ 25000003
 /*        DECLARATION OF CONSTANT VALUES USED IN CMS DEFINE         */ 25500003
 /********************************************************************/ 25600003
    DECLARE                                                             25700003
       CLNOVARC PTR(8) CONSTANT(0); /* NUMBER OF VARIABLE LENGTH        26000003
                                       FIELDS IN CLUSTER ENTRY       */ 26500003
 /********************************************************************/ 27500003
 /*        DECLARATION OF COUNT OF CI'S REQUIRED FOR CLUSTER         */ 28000003
 /********************************************************************/ 28100003
    DECLARE                                                             28200003
       IXCLCICT PTR(8) CONSTANT(3), /* NO. OF CI'S FOR INDEX CLUSTER */ 28500003
       NXCLCICT PTR(8) CONSTANT(2); /* NO. OF CI'S FOR NON-IND. CLUS */ 29000003
 /********************************************************************/ 29500003
 /*                DECLARATION OF MASTER CATALOG NAME                */ 30000003
 /********************************************************************/ 30200003
     DECLARE MCATNAME CHAR(44)                                          30500003
         CONSTANT('AMASTCAT                                    ');      31000000
 /********************************************************************/ 31500003
 /*            DECLARATION OF CATALOG ENTRY RECORD AREA              */ 32000003
 /********************************************************************/ 32200003
     DECLARE CATRECRD(2) CHAR(256) BASED(CCACPE1);                      32500003
 /********************************************************************/ 33000003
 /*           DECLARATION OF ASSOCIATION GROUP OCCURRENCE            */ 33500003
 /********************************************************************/ 33600003
    DECLARE                                                             33700003
      1 ASGO BASED(ADDR(LENFIX)) POS(2),                                34000003
        2 ASTYPE PTR(8),            /* TYPE OF ENTRY ASSOCIATED      */ 34500003
        2 ASCI   PTR(24);           /* CI NO. OF ENTRY ASSOCIATED    */ 35000003
 /********************************************************************/ 35500003
 /*           DECLARATION OF GROUP CODE OF ASSOCIATIONS              */ 36000003
 /********************************************************************/ 36200003
    DECLARE ASGC PTR(8)CONSTANT(2); /* ASSOCIATION GROUP CODE        */ 36500003
 /********************************************************************/ 37000003
 /*      DECLARATION OF ASSOCIATION GROUP CODE SEQUENCE NUMBERS      */ 37500003
 /********************************************************************/ 37600003
    DECLARE                                                             37700003
      DASQN PTR(8) CONSTANT(1),     /* SEQUENCE NUMBER OF DATA       */ 38000003
      IXSQN PTR(8) CONSTANT(2);     /* SEQUENCE NUMBER OF INDEX      */ 38500003
 /********************************************************************/ 39000003
 /*    DECLARATION OF MINIMUM NUMBER OF ASSOCIATIONS WITH CLUSTER    */ 39500003
 /********************************************************************/ 39700003
    DECLARE MINAS PTR(8) CONSTANT(1); /* MIN NO. OF ASSOCIATIONS     */ 40000003
 /********************************************************************/ 40500003
 /*            DECLARATION OF PASSWORD GROUP OCCURRENCE              */ 41000003
 /********************************************************************/ 41100003
    DECLARE                                                             41200003
      1 PASSGO BASED(ADDR(LENFIX))  /* PASSWORD GROUP                */ 41500003
               POS(2) BDY(WORD),    /* GROUP OCCURRENCE              */ 42000003
        2 PASSWORD CHAR(32),        /* PASSWORD SET                  */ 42500003
          3 MASTERPW CHAR(8),       /* MASTER                        */ 43000003
          3 CIPW     CHAR(8),       /* CONTROL INTERVAL PROCESS      */ 43500003
          3 UPDATEPW CHAR(8),       /* UPDATE                        */ 44000003
          3 READPW   CHAR(8),       /* READ                          */ 44500003
        2 PASSPRMT CHAR(8),         /* PROMPTING CODE NAME           */ 45000003
        2 PASSATMP FIXED(15),       /* MAXIMUM NUMBER OF ATTEMPTS TO */ 45500003
                                    /*   GIVE CORRECT PASSWORD       */ 46000003
        2 USVRMDUL CHAR(8),         /* USER SECURITY VERIFICATON     */ 46500003
                                    /* MODULE NAME                   */ 47000003
        2 USERAREC,                 /* USER AUTHORIZATION RECORD     */ 47500003
          3 USERAREL FIXED(15),     /* LENGTH OF USER AUTH. REC.     */ 48000003
          3 USERAREV CHAR(256);     /* USER AUTH. REC. AREA          */ 48500003
 /********************************************************************/ 49000003
 /*               DEFINITION OF PASSWORD GROUP CODE                  */ 49500003
 /********************************************************************/ 49700003
    DECLARE PASSGC PTR(8) CONSTANT(4); /* PASSWORD GROUP CODE        */ 50000003
 /********************************************************************/ 50500003
 /*      DEFINITION OF PASSWORD GROUP OCCURRENCE SEQUENCE NUMBER     */ 51000003
 /********************************************************************/ 51200003
    DECLARE PASSSQN PTR(8) CONSTANT(1); /* PASSWORD G.O. SEQ.NUMBER  */ 51500003
 /********************************************************************/ 54000003
 /*     VOLUME SERIAL NUMBER LIST AS PASSED BY THE CALLER            */ 54500003
 /********************************************************************/ 54600003
    DECLARE                                                             54700003
      1 USERLIST BASED,             /* VOLUME SERIAL NUMBER LIST     */ 55000003
         2 LTLENGTH FIXED(15),      /* LENGTH OF VOLUME SERIAL LIST  */ 55500003
         2 LTENTRY(*) CHAR(8) BDY(HWORD), /* 1 ENTRY PER VOLUME      */ 56000003
           3 LTRETCOD FIXED(15),    /* FEEDBACK, RETURN CODES        */ 56500003
             4 LTRETCD1 PTR(8),     /* NORMAL RETURN CODE            */ 57000003
             4 LTRETCD2 PTR(8),     /* RESERVED                      */ 57500003
           3 LTVOLSER CHAR(6);      /* VOLUME SERIAL NUMBER          */ 58000003
 /********************************************************************/ 58500003
 /*             DECLARATION OF SPACE PARAMETERS FIELDS               */ 59000003
 /********************************************************************/ 59100003
    DECLARE                                                             59200003
      1 SPACEPRM CHAR(7) BASED,     /* SPACE PARAMETERS              */ 59500003
         2 SPCPRIMQ PTR(24) BDY(BYTE), /* PRIMARY SPACE QUANTITY     */ 60000003
         2 SPCSECDQ PTR(24) BDY(BYTE), /* SECONDARY SPACE QUANTITY   */ 60500003
         2 SPCOPTNS BIT(8),          /* SPACE OPTIONS                */ 61000003
           3 SPCRQTYP BIT(2),        /* REQUEST TYPE                 */ 61500003
           3 *        BIT(2),        /* RESERVED                     */ 64500003
           3 SPCCNTIG BIT(1),        /* CONTIGUOUS SPACE REQUEST     */ 65000003
           3 SPCMXIGR BIT(1),        /* MAXIMUM CONTIG SPACE REQ     */ 65500003
           3 SPCALXRQ BIT(1),        /* ALL EXTENTS SPACE REQ        */ 66000003
           3 SPCROUND BIT(1);        /* ROUND UP TO CYL BOUNDARY     */ 66500003
 /********************************************************************/ 67000003
 /*             DECLARATION OF DATA SET ATTRIBUTES FIELD             */ 67500003
 /********************************************************************/ 67600003
    DECLARE                                                             67700003
      1 CTGDSATR BIT(16) BASED(CTGFLPT), /* DATA SET ATTRIBUTES      */ 68000003
        2 CTGATR1  BIT(8),          /* NON-SHARING ATTRIBUTES        */ 68500003
          3 CTGDSSPD BIT(1),        /* SPEED                         */ 69000003
          3 CTGDSUNQ BIT(1),        /* UNIQUE                        */ 69500003
          3 CTGDSREU BIT(1),        /* REUSABLE              @Y30SSPJ*/ 70100003
          3 CTGDSERA BIT(1),        /* ERASE                         */ 70500003
          3 CTGDSREC BIT(1),        /* RECOVERABLE CATALOG   @Y30SSPJ*/ 71100003
          3 CTGDSINH BIT(1),        /* INHIBIT UPDATE                */ 71500003
          3 CTGDSTPX BIT(1),        /* TEMPORARY EXPORT              */ 72000003
          3 CTGTRKOV BIT(1),        /* TRACK OVERFLOW          Y02020*/ 72200003
        2 CTGATR2  BIT(8),          /* SHARE OPTIONS                 */ 73000003
          3 CTGDSISH BIT(2),        /* CROSS REGION SHARE OPTIONS    */ 73500003
          3 CTGDSSSH BIT(2),        /* CROSS SYSTEM SHARE OPTIONS    */ 74000003
          3 *        BIT(3),        /* RESERVED              @Y30SSPJ*/ 74020003
          3 CTGDSNUS BIT(1);        /* D.S. NOT REUSABLE     @Y30SSPJ*/ 74500003
 /********************************************************************/ 77500003
 /*         DECLARATION OF PATH/AIX ATTRIBUTE FIELD                  */ 77504003
 /********************************************************************/ 77508003
    DECLARE                                                             77512003
      1 RGATTRFL CHAR(2) BASED(CTGFLPT(1)), /*               @Y30SSPJ*/ 77516003
        2 RGATTR1 BIT(8),           /* PATH/AIX ATTRIBUTE    @Y30SSPJ*/ 77520003
          3 RGATTUPG BIT(1),        /* UPDATE OR UPGRADE BIT @Y30SSPJ*/ 77524003
          3 * BIT(7),               /* RESERVED              @Y30SSPJ*/ 77528003
        2 RGATTSG1 BIT(8),          /* SIGNIFICANT MASK      @Y30SSPJ*/ 77532003
          3 RGATSUP1 BIT(1),        /* UPDATE OR UPGRADE BIT @Y30SSPJ*/ 77536003
          3 * BIT(7);               /* RESERVED              @Y30SSPJ*/ 77540003
 /********************************************************************/ 77544003
 /*                DECLARATION OF ENTRYNAME FIELD                    */ 78000003
 /********************************************************************/ 78200003
    DECLARE ENTRYNAM CHAR(44) BASED(CTGFLPT); /* ENTRYNAME FIELD     */ 78500003
 /********************************************************************/ 79000003
 /*         DECLARATION OF CREATION OR EXPIRATION DATE FIELD         */ 79500003
 /********************************************************************/ 79700003
    DECLARE DATEFLD PTR(24) BASED(CTGFLPT); /* DATE FIELD 'YDD' FORM */ 80000003
                                            /* OF 'YYDDDF'X          */ 80500003
 /********************************************************************/ 81000003
 /*                DECLARATION OF OWNER ID FIELD                     */ 81500003
 /********************************************************************/ 81700003
    DECLARE OWNIDFLD CHAR(8) BASED(CTGFLPT); /* OWNER ID FIELD       */ 82000003
 /********************************************************************/ 82500003
 /*             DECLARATION OF MINIMUM BUFFER SIZE FIELD             */ 83000003
 /********************************************************************/ 83200003
    DECLARE BUFSIZE  PTR(31) BASED(CTGFLPT); /* MINIMUM BUFFER SIZE  */ 83500003
 /********************************************************************/ 84000003
 /*            DECLARATION OF AVERAGE LOGICAL RECORD SIZE            */ 84500003
 /********************************************************************/ 84700003
    DECLARE LRECL PTR(31) BASED(CTGFLPT); /* AVERAGE LOGICAL REC SIZE*/ 85000003
 /********************************************************************/ 85500003
 /*         DECLARATION OF EXCEPTION EXIT NAME                       */ 85510003
 /********************************************************************/ 85520003
    DECLARE EXCPNAME CHAR(8)BASED(CTGFLPT); /*EXCP EXIT NAME @Y30SSPJ*/ 85530003
 /********************************************************************/ 85540003
 /*     DEVICE CHARACTERISTICS OVERLAY STRUCTURE FOR RETURNED INFO   */ 86000003
 /********************************************************************/ 86100003
    DECLARE                                                             86200003
      1 DEVCHARS BASED(ADDR(CCADESA)), /* DEVICE CHARACTERISTICS     */ 86500003
        2 RTDEVUCB CHAR(4),         /* UCB DEVICE TYPE               */ 87000003
          3 *        CHAR(2),       /* RESERVED               @XM4334*/ 87010003
          3 RTCLSTYP CHAR(2),       /* DEV CLASS & TYPE       @XM4334*/ 87050003
        2 RTMXDBLK PTR(31),         /* MAXIMUM DEVICE BLOCK SIZE     */ 87500003
        2 RTNOCYLS FIXED(15),       /* NO. CYLINDERS ON DEVICE       */ 88000003
        2 RTNOTRKS FIXED(15),       /* NO. TRACKS PER CYLINDER       */ 88500003
        2 RTTRKSIZ FIXED(15),       /* BYTES PER TRACK               */ 89000003
        2 RTBOKAB  PTR(16),         /* BLOCK OVERHEAD, KEYED ALL BLK */ 89500003
          3 RTBOKNLB PTR(8),        /* BLOCK OVERHEAD, KEYED NOT LAST*/ 90000003
          3 RTBOKLB  PTR(8),        /* BLOCK OVERHEAD, KEYED LAST    */ 90500003
        2 RTBONK   PTR(8),          /* BLOCK OVERHEAD, NOT KEYED     */ 91000003
        2 RTDVFLGS BIT(8),          /* FLAG BYTE             @Y30SSPJ*/ 91500003
          3 *        BIT(4),        /* RESERVED              @Y30SSPJ*/ 92000003
          3 RTKABFLG BIT(1),        /* IF ON, USE ALL BLOCK OVERHEAD */ 92500003
                                    /*   VALUE 'RTBOKAB'     @Y30SSPJ*/ 93000003
          3 *        BIT(2),        /* RESERVED              @Y30SSPJ*/ 93500003
          3 RTTOLFLG BIT(1),        /* IF ON, USE TOLERANCE FACTOR   */ 94000003
                                    /*   TO ALL BLOCKS EXCEPT LAST   */ 94500003
        2 RTTOLFCT FIXED(15);       /* TOLERANCE FACTOR      @Y30SSPJ*/ 95000003
 /********************************************************************/ 95040003
 /*     CONSTANTS USED TO SET AND/OR TEST FIELDS DECLARED ABOVE      */ 95080003
 /********************************************************************/ 95120003
   %DCL CLFXFALN CHAR;              /* FIXED LENGTH FIELDS   @Y30SSPJ*/ 95160003
   %DCL CLFXFAR1 CHAR;              /* FIXED LENGTH FIELDS   @Y30SSPJ*/ 95200003
   %DCL CLFXFADI CHAR;              /* FIXED LENGTH FIELDS   @Y30SSPJ*/ 95240003
   %DCL PASSFIXD CHAR;              /* LENGTH OF FIXED FOR PASSWORD     95280003
                                       GROUP OCCURRENCE      @Y30SSPJ*/ 95320003
   %CLFXFALN = 'LENGTH(CATRCD)+LENGTH(CNAME)+LENGTH(COWNID)+            95360003
        LENGTH(CCRE)+LENGTH(CEXP)+LENGTH(CCATTR)'; /* RELEASE 2         95400003
                                       CLUSTER, AIX, OR PATH            95500003
                                       FIXED LENGTH FIELDS   @Y30SSPJ*/ 95550003
   %CLFXFAR1 = 'LENGTH(CATRCD)+LENGTH(CNAME)+LENGTH(COWNID)+            95600003
        LENGTH(CCRE)+LENGTH(CEXP)'; /* REL 1 CLUSTER OR REL 2 ALIEN     95650003
                                       FIXED LENGTH FIELDS   @Y30SSPJ*/ 95700003
   %CLFXFADI = 'LENGTH(CATRCD)+LENGTH(CTGRBASE)'; /* REL 2 DATA/INDEX   95750003
                                       FIXED LENGTH FIELDS   @Y30SSPJ*/ 95800003
   %PASSFIXD ='LENGTH(PASSWORD)+LENGTH(PASSPRMT)+LENGTH(PASSATMP)+      95850003
        LENGTH(USVRMDUL)';          /* LENGTH OF FIXED FOR PASSWORD     95900003
                                       GROUP OCCURRENCE      @Y30SSPJ*/ 95950003
    DECLARE                         /* CROSS REGION SHARE OPTIONS    */ 96000003
      CRRGOPT1 BIT(2) CONSTANT('00'B), /* ALL READ OR ONE UPD/OUTPUT */ 96200003
      CRRGOPT2 BIT(2) CONSTANT('01'B), /* ALL READ AND ONE UPD/OUTPUT*/ 96400003
      CRRGOPT3 BIT(2) CONSTANT('10'B), /* FULL SHARE                 */ 96600003
      CRRGOPT4 BIT(2) CONSTANT('11'B); /* FULL SHARE WITH AM ASSIST  */ 96800003
    DECLARE                         /* CROSS SYSTEM SHARE OPTIONS    */ 97000003
      CRSYOPT3 BIT(2) CONSTANT('10'B), /* FULL SHARE                 */ 97200003
      CRSYOPT4 BIT(2) CONSTANT('11'B); /* FULL SHARE WITH AM ASSIST  */ 97400003
    DECLARE                         /* SPACE OPTIONS REQUEST TYPE    */ 97600003
      CMSALCAN BIT(2) CONSTANT('00'B), /* CANDIDATE REQUEST          */ 97800003
      CMSALTRK BIT(2) CONSTANT('10'B), /* TRACK REQUEST              */ 98000003
      CMSALREC BIT(2) CONSTANT('01'B), /* RECORDS REQUEST            */ 98200003
      CMSALCYL BIT(2) CONSTANT('11'B); /* CYLINDER REQUEST           */ 98400003
    DECLARE                         /* DATA SET ATTRIBUTES           */ 98600003
      DSUNQ    BIT(1) CONSTANT('1'B), /* UNIQUE DATA SET             */ 98800003
      DSSPD    BIT(1) CONSTANT('1'B), /* SPEED SELECTED              */ 99000003
      DSERA    BIT(1) CONSTANT('1'B), /* ERASE SPECIFIED             */ 99200003
      DSINH    BIT(1) CONSTANT('1'B), /* INHIBIT UPDATE              */ 99400003
      DSTPX    BIT(1) CONSTANT('1'B); /* TEMPORARILY EXPORTED        */ 99600003
./  ADD  SSI=80600590,NAME=IGGMCMWA
 /********************************************************************/ 01000038
 /*                                                                  */ 01020038
 /*   MACRO NAME = IGGMCMWA                                          */ 01040038
 /*                                                                  */ 01060038
 /*   DESCRIPTIVE NAME = VSAM CATALOG MANAGEMENT SERVICES WORK AREAS */ 01080038
 /*                                                                  */ 01100038
 /*   FUNCTION = CONTAINS MAPPING STRUCTURES FOR THE CMS EXTENSION   */ 01120038
 /*              WORK AREA, THE CMS DELETE WORK AREA, THE CMS        */ 01140038
 /*              DELETE-ERASE WORK AREA, THE ENQUEUE PARAMETER       */ 01160038
 /*              LIST, AND THE CATALOG UPGRADE MANAGEMENT PARAMETER  */ 01180038
 /*              LIST AND ASSOCIATED WORK AREA.                      */ 01200038
 /*                                                                  */ 01220038
 /*   CONTROL BLOCK STRUCTURE = THE CMSWA AND THE DELWKA ARE POINTED */ 01240038
 /*                             TO BY THE CCA (CCACMSWA).  THE       */ 01260038
 /*                             CUMPLWA IS ALSO POINTED TO BY THE    */ 01280038
 /*                             CCA (CCACUMPL).                      */ 01300038
 /*                                                                  */ 01320038
 /*   INCLUDED MACROS = NONE                                         */ 01340038
 /*                                                                  */ 01360038
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 01380038
 /*                                                                  */ 01400038
 /*   CREATED BY: CORE OBTAINED AND FREED BY IGG0CLAT (IGGPCDVR)     */ 01420038
 /*                                                                  */ 01440038
 /*   STATUS = VS/2 RELEASE 4   (CHANGE FLAG @Z40RSXX)       @Z40RSRC*/ 01460038
 /*                                                                  */ 01500038
 /*   DATE OF LAST CHANGE = 23 FEB 78                        @ZA30382*/ 01650032
 /*                                                                  */ 01660032
 /*   A 871322,871324                                        @ZA30382*/ 01670032
 /*                                                                  */ 01700038
 /********************************************************************/ 01800038
 /********************************************************************/ 06000038
 /* DECLARATION OF BASE REGISTER FOR DEFINE SIZE PARAMETER TABLE MAP */ 06500038
 /********************************************************************/ 06700038
    DECLARE DCWABASE REG(4) PTR(31); /* ADDR OF DEVICE CHARACTERISTICS  07500038
                                        AND WORKAREA ARRAY ELEMENT   */ 08000038
 /********************************************************************/ 08500038
 /*          DECLARATION OF DEFINE SIZE PARAMETER TABLE MAP          */ 09000038
 /********************************************************************/ 09100038
    DECLARE                                                             09200038
      1 DSPTBL BASED(DCWABASE),     /* DEFINE SIZE PARAMETER TABLE   */ 09500038
        2 DSDEVCHA CHAR(20),        /* DEVICE CHARACTERISTICS AREA   */ 10000038
        2 DSMPHYBS FIXED(15),       /* MAXIMUM ALLOWABLE PHYSICAL BLOCK 11000038
                                       SIZE FOR THIS DEVICE TYPE     */ 11500038
        2 DSPHYBPT (4) FIXED(15),   /* ARRAY OF PHYSICAL BLOCKS PER     12500038
                                       TRACK FOR 512, 1024, 2048, AND   13000038
                                       4096 BYTE BLOCKS RESPECTIVELY */ 13500038
        2 DSNPHYBS FIXED(15);       /* NUMBER OF ALLOWABLE PHYSICAL     14500038
                                       BLOCK SIZES FOR THIS DEVICE   */ 15000038
 /********************************************************************/ 15500038
 /*        DECLARATION  FOR  THE  CMS  EXTENSION  WORK  AREA         */ 16000038
 /********************************************************************/ 16100038
    DECLARE                                                             16200038
      1 CMSWA BASED(CCACMSWA),      /* CMS EXTENSION WORKAREA        */ 16500038
        2 CMWFLAGS BIT(8),          /* OPTION & PROCESS INDICATE     */ 17000038
          3 CMFGDLSC BIT(1),        /* TEMP SECURITY DELETE          */ 17500038
          3 CMPROCM  BIT(1),        /* PROCESSING CONTROL - DSPC     */ 18000038
          3 CMPROC   BIT(1),        /* PROCESSING CONTROL - DSPC     */ 18500038
          3 CMSRACDL BIT(1),        /* RAC-INDICATED DELETE  @Z40RSTC*/ 18550038
          3 CMSUALOC BIT(1),        /* UNALLOC REQUIRED      @Z40RSRC*/ 18600038
        2 CMCISREQ PTR(8),          /* CI'S ORIGINALLY OBTAINED      */ 19000038
                                    /*   FOR DEFINE ONLY             */ 19500038
        2 CMCISUSE PTR(8),          /* NO. OF CI'S PROCESSED         */ 20000038
          3 CMWRKATR BIT(8),        /* AMDSB DATA ATTRIBUTES         */ 20500038
            4 CMAMDDST BIT(1),      /* KEY, CHRONOLOGIC              */ 21000038
            4 CMAMDWCK BIT(1),      /* WRITE CHECK                   */ 21500038
            4 CMAMDSDT BIT(1),      /* SEQUENCE SET WITH DATA        */ 22000038
            4 CMAMDRPL BIT(1),      /* REPLICATION                   */ 22500038
            4 CMAMDORD BIT(1),      /* USE VOLUMES IN LIST ORDER     */ 23000038
            4 CMAMDRNG BIT(1),      /* KEY RANGE DATA SET            */ 23500038
        2 CMWACI (3) PTR(24) BDY(BYTE), /* CI'S FOR DEFINE USAGE ONLY*/ 24000038
 /*                                                          @Z40RSTC*/ 24050038
 /*   END OF NON-OVERLAID FIELDS IN CMS WORK AREA            @Z40RSRC*/ 24498838
 /*                                                          @Z40RSRC*/ 24499238
        2 CMWFVTPT PTR(31),         /* SECONDARY FVT BASE            */ 24500038
        2 CMASCFPL PTR(31),         /* ADDRESS OF ASSOCIATION FPL    */ 25000038
        2 CMCPLFVT PTR(31),         /* ADDRESS OF CALLER FVT-SAVED   */ 25500038
          3 CMEXTFLS PTR(31),       /* EXTRACT CORE REFERENCE        */ 26000038
        2 CMNRMEXT PTR(31),         /* ADDRESS OF NORMAL EXTENT LIST */ 26500038
          3 CMLDTFPL PTR(31),       /* LOW DATA FPL ADDRESS - DEFC   */ 27000038
            4 CMRNMLST PTR(31),     /* RENAME PARAMETER LIST REFER   */ 27500038
        2 CMSSEXTS PTR(31),         /* ADDRESS OF SS W/DATA EXT LIST */ 28000038
          3 CMHDTFPL PTR(31),       /* HIGH DATA FPL ADDRESS - DEFC  */ 28500038
            4 CMTSTFPL PTR(31),     /* TEST FPL ADDRESS              */ 29000038
        2 CMCANVOL PTR(31),         /* ADDRESS OF CANDIDATE VOL LIST */ 29500038
          3 CMHIXFPL PTR(31),       /* HIGH INDEX FPL ADDRESS - DEFC */ 30000038
            4 CMDTAFPL PTR(31),     /* DATA FPL ADDRESS              */ 30500038
        2 PROCESS  CHAR(2),         /* LOOP CONTROL CHARACTERS       */ 31000038
        2 SPACINDC CHAR(2),         /* SPACE OBTAINED INDICATOR      */ 31500038
        2 CMRNGCTR FIXED(15),       /* RELATIVE SEQUENCE NUMBER FOR  */ 32000038
                                    /*   RANGE BEING PROCESSED       */ 32500038
          3 CMADDVOL FIXED(15),     /* COUNT OF VOLS TO ADD - ALTER  */ 33000038
        2 CMVOLCTR FIXED(15),       /* RELATIVE SEQUENCE NO. FOR VOL */ 33500038
                                    /*   ENTRY BEING PROCESSED       */ 34000038
          3 CMRMVVOL FIXED(15),     /* REMOVE VOLUME COUNT - ALTER   */ 34500038
        2 CMSPCFVT PTR(31),         /* REFERENCE TO A SPACE FVT      */ 35000038
        2 CMSDFSPC PTR(32),         /* DEFINE - DEFINE SPACE FEEDBACK*/ 35500038
          3 CMSWAFLG BIT(8),        /* INTERFACE FLAGS - PASSED      */ 36000038
          3 CMSDEFCI PTR(24) BDY(BYTE), /* CI OF UNIQUE ENTRY - PASS */ 36500038
        2 CMSCRAVI CHAR(6),         /* CRA VOLID             @Y30SSSG*/ 36550038
        2 CMSCRADT CHAR(4),         /* CRA DEVTYPE           @Y30SSSG*/ 36600038
        2 * CHAR(2),                /* RESERVED              @Y30SSSG*/ 36650038
        2 CMVLLIST,                 /* SINGLE ENTRY VOLUME LIST      */ 37000038
          3 CMVLLTLN FIXED(15),     /* LENGTH OF VOLUME LIST         */ 37500038
          3 CMVLRTCD FIXED(15),     /* RETURN CODE FIELDS            */ 38000038
            4 CMVLRT1 PTR(8),       /* NORMAL RETURN CODE            */ 38500038
            4 CMVLRT2 PTR(8),       /* RESERVED                      */ 39000038
          3 CMVLVOL CHAR(6),        /* VOLUME SERIAL NUMBER          */ 39500038
        2 CMTOTVOL FIXED(15) BDY(BYTE), /* TOTAL NO. OF VOL SERS     */ 40000038
        2 CMSPCATR (2) CHAR(16) BDY(WORD), /* SPACE ATTRIBUTES       */ 40500038
          3 CMPHYBLK PTR(32),       /* PHYSICAL BLOCK SIZE           */ 41000038
          3 CMSWADTY PTR(32),       /* DEVICE TYPE                   */ 41500038
          3 CMBLKTRK FIXED(15),     /* BLOCKS PER TRACK              */ 42000038
          3 CMTRKPCA FIXED(15),     /* TRACKS PER CONTROL AREA       */ 42500038
          3 CMTRKCYL FIXED(15),     /* TRACKS PER CYLINDER           */ 43000038
        2 CMCNVLEN FIXED(15),       /* SIZE OF CANDIDATE VOLUME LIST */ 43500038
        2 CMCNVNO  FIXED(15),       /* NO. OF CANDIDATE VOLUMES      */ 44000038
        2 CMFPLIDX PTR(31),         /* ADDRESS OF FPL INDEX          */ 44500038
        2 *        CHAR(2),         /* UNUSED - PRESERVE ALIGNMENT   */ 45000038
        2 WORKPROC CHAR(2),         /* LOOP CONTROL - IGGPDEXD       */ 45500038
        2 CMEXTLST PTR(31),         /* EXTENT LIST REFERENCE IN FPL  */ 46000038
        2 CMSRCCOR PTR(31),         /* CATALOG DEFINE RECORD CORE PTR*/ 46500038
        2 CMDEFSWA PTR(31),         /* PTR TO DEFINE SPACE WORKAREA  */ 47000038
        2 CMWASTOR CHAR(8) BDY(WORD), /* TIME WORKAREA               */ 47500038
          3 CMPOT    FIXED(31),     /* WORKAREA - POWER-2 - DSPC     */ 48000038
            4 CMDCONV    FIXED(31), /* VALUE TO CONVERT   - DSPC     */ 48500038
              5 CMIXFANO FIXED(31), /* INDEX CI FANOUT    - DSPC     */ 49000038
                6 CMWT FIXED(31),   /* TIME WORKAREA                 */ 49500038
          3 CMPOTX   FIXED(31),     /* WORKAREA - POWER-2 - DSPC     */ 50000038
            4 CMPBI  FIXED(31),     /* BLOCK SIZE INDEX   - DSPC     */ 50500038
              5 CMIXFANS FIXED(31), /* SQUARE ROOT OF CMIXFANO       */ 51000038
                6 CMNCITL FIXED(31), /* NO. CI THIS INDEX LEVEL-DSPC */ 51500038
        2 CMWABYTB CHAR(4) BDY(WORD), /* DATE WORKAREA               */ 52000038
          3 CMPBIX   FIXED(31),     /* BLOCK SIZE CONTROL - DSPC     */ 52500038
            4 CMNEST   FIXED(31),   /* NO. OF INDEX SECTIONS - DSPC  */ 53000038
              5 CMFANT   FIXED(31), /* WORKAREA FOR CMIXFANS         */ 53500038
                6 CMSPCQTY FIXED(31),  /* WORKAREA FOR SPCQTY - DSPC */ 54000038
                  7 CMNCILL FIXED(31), /* NO. CI LAST IX LEVEL- DSPC */ 54500038
        2 CMWGENAM CHAR(44),        /* GENERATED ENTRYNAME           */ 55000038
          3 CMWFIXID CHAR(12),      /* FIXED IDENTIFIER              */ 55500038
          3 CMWDATE,                /* DATE                          */ 56000038
            4 CMWYEAR CHAR(2),      /* YEAR                          */ 56500038
            4 CMWDAY CHAR(3),       /* DAY                           */ 57000038
          3 CMWTIME,                /* TIME                          */ 57500038
            4 CMWDELM1 CHAR(2),     /* DELIMITER .T                  */ 58000038
            4 CMWTIME1 CHAR(7),     /* FIRST 7 DIGITS                */ 58500038
            4 CMWDELM2 CHAR(2),     /* DELIMITER                     */ 59000038
            4 CMWTIME2 CHAR(7),     /* SECOND 7 DIGITS               */ 59500038
          3 CMWPAD CHAR(9),         /* PAD OF BLANKS                 */ 60000038
 /********************************************************************/ 62000038
 /*         DECLARATION OF CMS DEFINE WORKAREA USED FOR FPL'S        */ 62500038
 /*         AND FIELD VALUES                                         */ 63000038
 /********************************************************************/ 63200038
        2 DCWIX    PTR(15) BDY(WORD), /* WORKAREA INDEX              */ 63500038
        2 *        PTR(15),         /* RESERVED                      */ 64000038
        2 DCWAREPT PTR(31),         /* POINTER TO ARRAY ELEMENT TO   */ 64500038
                                    /*   BE PROCESSED                */ 65000038
        2 DCWFPLPT PTR(31),         /* PTR TO FPL TO BE PROCESSED    */ 65500038
                                    /*   IN ARRAY ELEMENT            */ 66000038
        2 DCWPLSPS,                 /* SET OF SPACE PARAMETERS       */ 66500038
                                    /*   FPL AND FIELD VALUE         */ 67000038
          3 DCWPLSPL,               /* SPACE PARAMETER FPL           */ 67500038
            4 DCWPLSPH CHAR(LENGTH(CTGFL)), /* FPL HEADER            */ 68000038
            4 DCWPLSPA CHAR(LENGTH(CTGFLDAT)), /* FPL FIELD PAIR     */ 68500038
          3 DCWPLSPV CHAR(7),       /* SPACE PARAMETER FIELD VALUE   */ 69000038
          3 *        CHAR(1),       /* RESERVED                      */ 69500038
        2 DCWPLBFS,                 /* SET OF BUFFER SIZE FPL        */ 70000038
                                    /*   AND FIELD VALUE             */ 70500038
          3 DCWPLBFL,               /* BUFFER SIZE FPL               */ 71000038
            4 DCWPLBFH CHAR(LENGTH(CTGFL)), /* FPL HEADER            */ 71500038
            4 DCWPLBFA CHAR(LENGTH(CTGFLDAT)), /* FPL FIELD PAIR     */ 72000038
          3 DCWPLBFV CHAR(4),       /* BUFFER SIZE FIELD VALUE       */ 72500038
        2 DCWPLEDS,                 /* EXPIRATION DATE SET OF        */ 73000038
                                    /*   FPL AND FIELD               */ 73500038
          3 DCWPLEDL,               /* EXPIRATION DATE FPL           */ 74000038
            4 DCWPLEDH CHAR(LENGTH(CTGFL)),   /* FPL HEADER          */ 74500038
            4 DCWPLEDA CHAR(LENGTH(CTGFLDAT)), /* FPL FIELD PAIR     */ 75000038
          3 DCWPLEDV CHAR(3),       /* EXPIRATION DATE FIELD         */ 75500038
          3 *        CHAR(1),       /* RESERVED                      */ 76000038
        2 DCWPLARS,                 /* SET OF AVG LOGICAL RECRD SIZE */ 76500038
                                    /*   FPL AND FIELD VALUE         */ 77000038
          3 DCWPLARL,               /* AVG LOGICAL RECORD SIZE FPL   */ 77500038
            4 DCWPLARH CHAR(LENGTH(CTGFL)), /* FPL HEADER            */ 78000038
            4  DCWPLARA CHAR(LENGTH(CTGFLDAT)), /* FPL FIELD PAIR    */ 78500038
          3 DCWPLARV PTR(31),       /* AVG LOGICAL RECORD SIZE VALUE */ 79000038
        2 DCWPLCDS,                 /* CREATION DATE SET OF FPL      */ 79500038
                                    /*   AND FIELD                   */ 80000038
          3 DCWPLCDL,               /* CREATION DATE FPL             */ 80500038
            4 DCWPLCDH CHAR(LENGTH(CTGFL)), /* FPL HEADER            */ 81000038
            4 DCWPLCDA CHAR(LENGTH(CTGFLDAT)), /* FPL FIELD PAIR     */ 81500038
          3 DCWPLCDV CHAR(3),       /* CREATION DATE FIELD           */ 82000038
          3 *        CHAR(1),       /* RESERVED                      */ 82500038
        2 CMSDSPTB (2) CHAR(LENGTH(DSPTBL)), /* ARRAY FOR DATA AND      83500038
                                       INDEX DEVICE CHARACTERISTICS     84000038
                                       AND WORK VALUES               */ 84500038
        2 CMBLPTKS FIXED(15),       /* BLOCKS PER TRACK FOR          */ 85500038
                                    /*   SEQUENCE SET ON DATA DEVICE */ 86000038
        2 CMUCATCI CHAR(3),         /* UCAT ENTRY CI NUMBER          */ 86500038
          3 CMDEFACI CHAR(3),       /* ALIEN ENTRY CI NUMBER         */ 87000038
        2 *       CHAR(3),          /* RESERVED                      */ 87050038
        2 CMSCTREC(20) PTR(31),     /* CATALOG RECORD ADDRESS ARRAY     87100038
                                                               Y02020*/ 87100738
        2 CMBYTTRK FIXED(31),       /* BYTES PER TRACK         Y02020*/ 87101138
        2 CMBYTAU FIXED(31),        /* BYTES PER ALLOC UNIT  @Z40RSTC*/ 87101238
 /*                                                          @Z40RSRC*/ 87103238
 /*   RAC-RELATED FIELDS                                     @Z40RSRC*/ 87103338
 /*                                                          @Z40RSRC*/ 87103438
        2 CMSRACBF(3) PTR(31),      /* BUFFER TO PREVENT     @Z40RSTC   87113238
                                  OVERLAY BY DELETE WRK AREA @Z40RSTC*/ 87113638
        2 CMSRAC,                   /* RAC FIELDS            @Z40RSRC*/ 87114738
          3 CMSRETCD PTR(8),        /* RAC RETURN CODE       @Z40RSRC*/ 87124738
          3 CMSREACD PTR(8),        /* RAC REASON CODE       @Z40RSRC*/ 87125138
          3 * CHAR(2),              /* RESERVED              @Z40RSRC*/ 87125538
          3 CMSRDSNA PTR(31),       /* DSNAME ADDR FOR RAC   @Z40RSRC*/ 87125938
          3 CMSRDSVL PTR(31),       /* VOLSER ADDR FOR RAC   @Z40RSTC*/ 87126038
          3 CMSWARFV PTR(31),       /* CURRENT FVT FOR RAC   @Z40RSRC   87129838
                                       DEFINITION PURPOSES   @Z40RSRC*/ 87131838
          3 CMSWRMAC PTR(31),       /* ADDR OF RDDFLIST      @ZA30382*/ 87132232
          3 * CHAR(12),             /* RESERVED              @ZA30382*/ 87132432
          3 CMSROBJA,               /* RAC ARRAY NAME        @Z40RSTC*/ 87133038
            4 CMSROBJN(3) CHAR(44), /* RAC OBJECT NAME ARRAY @Z40RSTC*/ 87133438
                5 CMSROBJI CHAR(1), /* INITIAL CHAR STATE ID @Z40RSTC*/ 87133538
                5 * CHAR(43),       /* OBJECT NAME (LOW      @Z40RSTC   87137338
                                       ORDER 43 CHARACTERS)  @Z40RSTC*/ 87139338
          3 CMSDYNAL PTR(31);       /* ADDR OF DYNAMIC ALLOCATION       87139738
                                       WORK AREA             @Z40RSRC*/ 87140138
 /********************************************************************/ 87141138
 /*     CONSTANTS USED TO SET AND/OR TEST FIELDS DECLARED ABOVE      */ 87144938
 /********************************************************************/ 87148738
    DECLARE                         /* CHARACTER CONSTANTS           */ 87160038
      CMWENTPD CHAR(10) CONSTANT('          '), /* ENTRYNAME PAD OF     87171338
                                                   BLANKS            */ 87182638
      CMWENTDL CHAR(2)  CONSTANT('.T'), /* DELIMITER OF TIME FIELD   */ 87193938
      CMWENTCD CHAR(12) CONSTANT('VSAMDSET.DFD'), /* FIXED PORTION OF   87205238
                                                   ENTRYNAME         */ 87216538
      EDNULVAL BIT(24) CONSTANT('00000F'X); /* EXPIRATION DATE          87227838
                                               NULLVALUE             */ 87239138
    %IF DELWKA99 = ''               /*IF DELWKA NOT REQUIRED @Y30SSPJ*/ 87250438
      %THEN %GOTO DELWKA01;         /* THEN DONT GENERATE IT @Y30SSPJ*/ 87250838
    %STOPFMT1:;                     /* SHOW NEXT COMMENT     @Y30SSPJ*/ 87251238
 /********************************************************************/ 87251638
 /*          DECLARATION OF THE CMS DELETE WORK AREA                 */ 87251738
 /********************************************************************/ 87251838
    DECLARE                                                             87251938
      1 DELWKA CHAR(516) BDY(WORD) BASED(CCACMSWA), /* CMS   @Z40RSTC*/ 87346038
                                    /* DELETE AREA           @Z40RSTC*/ 87366038
                                    /* OVERLAPS CMSWA        @Y30SSPJ*/ 87396038
       2 * CHAR(12),                /* DO NOT USE THIS FIELD @Z40RSRC*/ 87446038
       2 DELNMOBJ PTR(8),           /* NUM OF ASSOCIATED OBJ @Y30SSPJ*/ 87496038
       2 DELR3SAV PTR(8),           /* R3 SAVE AREA          @Y30SSPJ*/ 87546038
       2 DELRTYPE CHAR(1),          /* CTGTYPE SAVE AREA     @Y30SSPJ*/ 87596038
       2 DELERRIX PTR(8),           /* INDEX TO ERR ARRAY    @Y30SSPJ*/ 87646038
       2 * CHAR(1),                 /* DELETE FLAGS          @Y30SSPJ*/ 87696038
        3 DELCODE BIT(1),           /* ERROR CODE FLAG1      @Y30SSPJ*/ 87746038
        3 DELCODE2 BIT(1),          /* ERROR CODE FLAG2      @Y30SSPJ*/ 87796038
        3 DELKYRNG BIT(1),          /* KEY RANGE DATA SET    @Y30SSPJ*/ 87846038
        3 DELCAT BIT(1),            /* DELETE COPIED CATALOG @Y30SSPJ*/ 87896038
        3 DELGNMR BIT(1),           /* GET NUM OF PATHS      @Y30SSPJ*/ 87946038
        3 DELCODE3 BIT(1),          /* ERROR CODE FLAG3      @Y30SSPJ*/ 87996038
        3 DELCODE4 BIT(1),          /* ERROR CODE FLAG4      @Y30SSPJ*/ 88046038
        3 DELCODE5 BIT(1),          /* ERROR CODE FLAG5      @Y30SSPJ*/ 88096038
          4 DELSPSCR BIT(1),        /* VTOC MODIFIED         @Y30SSPJ*/ 88146038
       2 DELSGRRN FIXED(15)BDY(BYTE),/* SPACE GRP RELREPNO   @Y30SSPJ*/ 88196038
        3 DELI PTR(8),              /* DO LOOP COUNTER I     @Y30SSPJ*/ 88246038
         4 DELSPFLG BIT(8),         /* DELETE SPACE FLAG     @Y30SSPJ*/ 88296038
          5 DELNONVS BIT(1),        /* NON-VSAM FOUND IN CRA @Y30SSPJ*/ 88346038
          5 * BIT(7),               /* RESERVED              @Y30SSPJ*/ 88396038
        3 DELE PTR(8),              /* DO LOOP COUNTER E     @Y30SSPJ*/ 88446038
       2 DELC PTR(8),               /* DO LOOP COUNTER C     @Y30SSPJ*/ 88496038
       2 DELVRRN CHAR(2) BDY(WORD), /* RELREPNO VALUE        @Y30SSPJ*/ 88546038
        3 TSTRELSP CHAR(2),         /* SPACE HEADER GROUP    @Y30SSPJ*/ 88596038
                                    /* RELREPNO VALUE        @Y30SSPJ*/ 88646038
       2 DELVCRN CHAR(2),           /* CNTREPNO VALUE        @Y30SSPJ*/ 88696038
        3 TSTCNTRN CHAR(2),         /* TEST VAL FOR CNTREPNO @Y30SSPJ*/ 88746038
       2 DELXTNWA BDY(WORD),        /* IF INSUFF. WA FOR VGO @Y30SSPJ*/ 88796038
        3 DELXLOC PTR(31),          /* LOCATION OF GVO WA    @Y30SSPJ*/ 88846038
         4 DELTSFPL PTR(31),        /* TEST FPL REFERENCE    @Y30SSPJ*/ 88896038
        3 DELXLEN PTR(31),          /* LENGTH OF EXT'N WKA   @Y30SSPJ*/ 88946038
         4 TSTSPDUU FIXED(15),      /* UNITS USED IN DATA SPACE         88996038
                                                             @Y30SSPJ*/ 89046038
         4 * CHAR(1)BDY(BYTE),      /* RESERVED              @Z40RSRC*/ 89096038
         4 DELRACF  BIT(8),         /* RAC FLAG BYTE         @Z40RSRC*/ 89106038
          5 DELINDC BIT(1),         /* RAC-INDICATED CLUSTER @Z40RSRC   89116038
                                       OR AIX                @Z40RSRC*/ 89126038
          5 DELINDD BIT(1),         /* RAC-INDICATED DATA    @Z40RSRC*/ 89136038
          5 DELINDI BIT(1),         /* RAC-INDICATED INDEX   @Z40RSRC*/ 89138038
          5 *       BIT(5),         /* RESERVED              @Z40RSRC*/ 89140038
       2 DELERRSX BDY(BYTE),        /* ERROR RET CODE ARRAY  @Y30SSPJ*/ 89146038
        3 DELERRS(5)CHAR(4),        /* ERR RET CODE ARRAY    @Y30SSPJ*/ 89196038
         4 DELMODID CHAR(2),        /* ERROR MODULE ID       @Y30SSPJ*/ 89246038
         4 DELREASN CHAR(1),        /* ERROR REASON CODE     @Y30SSPJ*/ 89296038
         4 DELRETCD CHAR(1),        /* ERROR RETURN CODE     @Y30SSPJ*/ 89346038
 /********************************************************************/ 89396038
 /*   WORK AREA INTERFACE FOR EXTRACT/MODIFY SUBFUNCTIONS    @Y30SSPJ*/ 89446038
 /********************************************************************/ 89496038
       2 DELEXTWA,                  /*WORKAREA FOR INTERFACE @Y30SSPJ*/ 89546038
        3 DELCPL CHAR(LENGTH(CTGPL)),/* CPL FOR EXTRACT AND  @Y30SSPJ*/ 89596038
         4 DELCPLST CHAR(LENGTH(CTGPL)),/* INTERNAL CPL      @Y30SSPJ*/ 89646038
        3 * CHAR(LENGTH(CTGFIELD)), /*        MODIFY         @Y30SSPJ*/ 89696038
         4 DELCPLFL CHAR(LENGTH(CTGFIELD)),/* CPL FPL PTR    @Y30SSPJ*/ 89746038
        3 DELFPLR CHAR(LENGTH(CTGFL)),/* FPL FOR EXTRACT AND @Y30SSPJ*/ 89796038
         4 DELFPLDT CHAR(LENGTH(CTGFL)),/* DATA RETRIEVE FPL @Y30SSPJ*/ 89846038
        3 * CHAR(LENGTH(CTGFLDAT)), /*        MODIFY         @Y30SSPJ*/ 89896038
         4 DELFL1DT CHAR(LENGTH(CTGFLDAT)),/* FPL DATA LENGTH/ADDR      89946038
                                                             @Y30SSPJ*/ 89996038
        3 DELNMR CHAR(8),           /* FIELD NAME            @Y30SSPJ*/ 90046038
         4 DELFL1NM CHAR(8),        /* FIELD NAME VALUE      @Y30SSPJ*/ 90096038
        3 DELFPLT CHAR(LENGTH(CTGFL)),/* 1ST TEST FPL FOR    @Y30SSPJ*/ 90146038
         4 DELFPLT1 CHAR(LENGTH(CTGFL)),/* TEST FPL ONE      @Y30SSPJ*/ 90196038
        3 * CHAR(LENGTH(CTGFLDAT)), /* EXTRACT AND MODIFY    @Y30SSPJ*/ 90246038
         4 DELT1DT CHAR(LENGTH(CTGFLDAT)),/* FPL DATA LENGTH/ADDR       90296038
                                                             @Y30SSPJ*/ 90346038
        3 DELNMT CHAR(8),           /* FIELD NAME            @Y30SSPJ*/ 90396038
         4 DELT1NM CHAR(8),         /* FIELD NAME VALUE      @Y30SSPJ*/ 90446038
        3 DELFPLT2 CHAR(LENGTH(CTGFL)),/*2ND TEST FPL AND    @Y30SSPJ*/ 90496038
        3 * CHAR(LENGTH(CTGFLDAT)), /* EXTRACT AND MODIFY    @Y30SSPJ*/ 90546038
         4 DELT2DT CHAR(LENGTH(CTGFLDAT)),/* FPL DATA LENGTH/ADDR       90596038
                                                             @Y30SSPJ*/ 90646038
        3 DELNMT2 CHAR(8),          /* FIELD NAME            @Y30SSPJ*/ 90696038
         4 DELT2NM CHAR(8),         /* FIELD NAME VALUE      @Y30SSPJ*/ 90746038
       2 DELNCOBJ PTR(8) BDY(BYTE), /*NUM OF CLUSTER OBJECTS @Y30SSPJ*/ 90796038
       2 DELNGOBJ PTR(8),           /* NUMBER OF AIX'S       @Y30SSPJ*/ 90846038
       2 DELNROBJ PTR(8),           /* NUMBER OF PATH'S      @Y30SSPJ*/ 90896038
       2 DELUSINX PTR(8),           /* CURR ENTRY IN USERWKA @Y30SSPJ*/ 90946038
       2 DELR13SA FIXED(31) BDY(WORD), /* REG 13 SAVEAREA    @Y30SSPJ*/ 90996038
       2 DELDIV BDY(WORD),          /* WA FOR ASSOCIATIONS   @Y30SSPJ*/ 91046038
 /********************************************************************/ 91096038
 /*       EXTRACT ASSOCIATION WORK AREA FOR GENERAL USE      @Y30SSPJ*/ 91146038
 /********************************************************************/ 91196038
        3 DELASCWA BDY(WORD),       /* ASSOCIATION FIELD WKA @Y30SSPJ*/ 91246038
         4 DELALNG FIXED(15),       /* WORK AREA LENGTH      @Y30SSPJ*/ 91296038
         4 DELARLNG FIXED(15),      /* REQUIRED WICA LENGTH  @Y30SSPJ*/ 91346038
         4 DELASSO(3)CHAR(4)BDY(BYTE),/* ARRAY ASSOCIATIONS  @Y30SSPJ*/ 91396038
          5 DELATYPE CHAR(1),       /* ASSOC OBJECT TYPE     @Y30SSPJ*/ 91446038
          5 DELACI PTR(24)BDY(BYTE),/* ASSOC OBJECT CI NUM   @Y30SSPJ*/ 91496038
 /********************************************************************/ 91546038
 /*        EXTRACT ASSOCIATION SAVE AREA FOR CLUSTER USE     @Y30SSPJ*/ 91596038
 /********************************************************************/ 91646038
        3 DELCASWA BDY(WORD),       /* CLUSTER ASSOC WKA     @Y30SSPJ*/ 91696038
         4 DELCALNG FIXED(15),      /* WORK AREA LENGTH      @Y30SSPJ*/ 91746038
         4 DELCRLNG FIXED(15),      /* REQUIRED WICA LENGTH  @Y30SSPJ*/ 91796038
         4 DELCASSO(3)CHAR(4)BDY(BYTE),/* ASSOCIATIONS ARRAY @Y30SSPJ*/ 91846038
          5 DELCTYPE CHAR(1),       /* ASSOC OBJECT TYPE     @Y30SSPJ*/ 91896038
          5 DELCCI PTR(24)BDY(BYTE),/* ASSOC OBJECT CI NUM   @Y30SSPJ*/ 91946038
 /********************************************************************/ 91996038
 /*        EXTRACT ASSOCIATION SAVE AREA FOR AIX USE         @Y30SSPJ*/ 92046038
 /********************************************************************/ 92096038
        3 DELGASWA BDY(WORD),       /* AIX ASSOC WKA         @Y30SSPJ*/ 92146038
         4 DELGALNG FIXED(15),      /* WORK AREA LENGTH      @Y30SSPJ*/ 92196038
         4 DELGRLNG FIXED(15),      /* REQUIRED WICA LENGTH  @Y30SSPJ*/ 92246038
         4 DELGASSO(3)CHAR(4)BDY(BYTE),/* ASSOCIATIONS ARRAY @Y30SSPJ*/ 92296038
          5 DELGTYPE CHAR(1),       /* ASSOC OBJECT TYPE     @Y30SSPJ*/ 92346038
          5 DELGCI PTR(24)BDY(BYTE),/* ASSOC OBJECT CI NUM   @Y30SSPJ*/ 92396038
 /********************************************************************/ 92446038
 /*        EXTRACT ASSOCIATION SAVE AREA FOR PATH USE        @Y30SSPJ*/ 92496038
 /********************************************************************/ 92546038
        3 DELRASWA BDY(WORD),       /* PATH ASSOC WKA        @Y30SSPJ*/ 92596038
         4 DELRALNG FIXED(15),      /* WORK AREA LENGTH      @Y30SSPJ*/ 92646038
         4 DELRRLNG FIXED(15),      /* REQUIRED WICA LENGTH  @Y30SSPJ*/ 92696038
         4 DELRASSO(5)CHAR(4)BDY(BYTE),/* ASSOCIATIONS ARRAY @Y30SSPJ*/ 92746038
          5 DELRTYP CHAR(1),        /* ASSOC OBJECT TYPE     @Y30SSPJ*/ 92796038
          5 DELRCI PTR(24)BDY(BYTE),/* ASSOC OBJECT CI NUM   @Y30SSPJ*/ 92846038
 /********************************************************************/ 92896038
 /*   WORK AREA FOR EXTRACTING A SPECIFIC TYPE ASSOCIATION   @Y30SSPJ*/ 92946038
 /********************************************************************/ 92996038
        3 DELXASWA BDY(WORD),       /* SPECIFIC TYPE ASC WA  @Y30SSPJ*/ 93046038
         4 DELXALNG FIXED(15),      /* WORK AREA LENGTH      @Y30SSPJ*/ 93096038
         4 DELXRLNG FIXED(15),      /* REQUIRED WICA LENGTH  @Y30SSPJ*/ 93146038
         4 DELXASSO(1)CHAR(4)BDY(BYTE),/* ASSOCIATIONS ARRAY @Y30SSPJ*/ 93196038
          5 DELXTYPE CHAR(1),       /* ASSOC OBJECT TYPE     @Y30SSPJ*/ 93246038
          5 DELXCI PTR(24)BDY(BYTE),/* ASSOC OBJECT CI NUM   @Y30SSPJ*/ 93296038
 /********************************************************************/ 93346038
 /*     WORK AREA FOR EXTRACTING VOLUME GROUP OCCURENCES     @Y30SSPJ*/ 93396038
 /********************************************************************/ 93446038
        3 DELVGOWA BDY(BYTE),       /* WORK AREA FOR VGO     @Y30SSPJ*/ 93496038
         4 DELVLNG CHAR(2),         /* LENGTH OF WORK AREA   @Y30SSPJ*/ 93546038
         4 DELVRLNG CHAR(2),        /* WA REQUIRED LENGTH    @Y30SSPJ*/ 93596038
         4 DELTVRRN CHAR(2),        /* RELREPNO RETURN       @Y30SSPJ*/ 93646038
         4 DELVGO CHAR(LENGTH(GVO)),/*VOLUME GROUP OCCURANCE @Y30SSPJ*/ 93696038
 /********************************************************************/ 93746038
 /*        WORK AREA FOR EXTRACTING DATA SPACE GROUP         @Y30SSPJ*/ 93796038
 /********************************************************************/ 93846038
        3 DELSHWA BDY(BYTE),        /* DATA SPACE GROUP WA   @Y30SSPJ*/ 93896038
         4 DELSLNG CHAR(2),         /* LENGTH OF WORK AREA   @Y30SSPJ*/ 93946038
         4 DELSRLNG CHAR(2),        /* WA REQUIRED LENGTH    @Y30SSPJ*/ 93996038
         4 DELDSGRP CHAR(LENGTH(CTVDSPAC)),/* DATA SPACE GRP @Y30SSPJ*/ 94046038
 /********************************************************************/ 94096038
 /*        WORK AREA FOR EXTRACTING DATA SET DIRECTORIES     @Y30SSPJ*/ 94146038
 /********************************************************************/ 94196038
        3 DELDSDWA BDY(BYTE),       /* WORK AREA FOR DS DIR  @Y30SSPJ*/ 94246038
         4 DELDLNG CHAR(2),         /* LENGTH OF WORK AREA   @Y30SSPJ*/ 94296038
         4 DELDRLNG CHAR(2),        /* WA REQUIRED LENGTH    @Y30SSPJ*/ 94346038
         4 DELDIRCT CHAR(LENGTH(CTVDIR)),/* DS DIRECTORY     @Y30SSPJ*/ 94396038
          5 DELDRRN CHAR(2),        /* DS DIRECTORY RELREPNO @Y30SSPJ*/ 94446038
         4 * CHAR(1),               /* NOT USED              @Y30SSPJ*/ 94496038
 /********************************************************************/ 94546038
 /*            WORK AREA FOR SCRATCH FUNCTION                @Y30SSPJ*/ 94596038
 /********************************************************************/ 94606038
       2 DELSCRWA BDY(WORD),        /* SCRATCH WORK AREA     @Y30SSPJ*/ 94616038
 /********************************************************************/ 94626038
 /*                    SCRATCH PARAMETER LIST                @Y30SSPJ*/ 94628038
 /********************************************************************/ 94630038
        3 DELSCRTH CHAR(16)BDY(WORD),/* SCRATCH PARAM LIST   @Y30SSPJ*/ 94632038
         4 DELSCRFL FIXED(31)BDY(WORD), /* SCRATCH OPT BYTES @Y30SSPJ*/ 94632438
         4 DELSDSNM PTR(31),        /*DATA SET NAME TO SCRTH @Y30SSPJ*/ 94632838
         4 DELSNUSE PTR(31),        /*UNUSED                 @Y30SSPJ*/ 94641238
         4 DELSVLST PTR(31),        /*VOLUME LIST REFERENCE  @Y30SSPJ*/ 94643238
 /********************************************************************/ 94645238
 /*                     SCRATCH VOLUME LIST                  @Y30SSPJ*/ 94647238
 /********************************************************************/ 94649238
        3 DELSVOL,                  /*SCRATCH VOLUME LIST    @Y30SSPJ*/ 94649338
         4 DELSNVLS FIXED(15),      /*NUM VOL LIST ENTRIES   @Y30SSPJ*/ 94649438
         4 DELSDEVT CHAR(4),        /*VOL DEV TYPE CODE      @Y30SSPJ*/ 94649538
         4 DELSVLID CHAR(6),        /*VOL SERIAL NUMBER      @Y30SSPJ*/ 94649638
         4 DELSRCD1 PTR(8),         /*UNUSED RTN CODE        @Y30SSPJ*/ 94649738
         4 DELSRCD2 PTR(8),         /*LIST ENTRY RTN CODE    @Y30SSPJ*/ 94649838
       2 DELVOLL CHAR(LENGTH(IDAVVOLL)), /*VOLUME LIST       @Y30SSPJ*/ 94649938
        3 DELSVMTL CHAR(LENGTH(IDAVVOLL)),/*VOLUME LIST      @Y30SSPJ*/ 94661038
       2 DELSVTET CHAR(LENGTH(VVOLLENT)),/*VOLUME MNT ENTRY  @Y30SSPJ*/ 94671038
       2 DELPROC CHAR(2),           /* PROCESS LOOP CONTROL  @Y30SSPJ*/ 94671438
       2 DELTIOPT PTR(31),          /* TIOT PTR FOR VOLUME MOUNT        94671838
                                                             @Y30SSPJ*/ 94672238
         3 * CHAR(1),               /* NOT USED              @Y30SSPJ*/ 94673038
         3 DELHECIN PTR(24),        /* HORIZONTAL EXTENSION CI NUMBER   94673438
                                                             @Y30SSPJ*/ 94673838
       2 DELOPNPL PTR(31)BDY(WORD), /* PARAM LIST FOR OPEN   @Y30SSPJ*/ 94674238
        3 DELOPOPT CHAR(1)BDY(BYTE),/* OPEN OPTIONS          @Y30SSPJ*/ 94674638
         4 DELOPEND BIT(1),         /* MARK END OF PARAM LST @Y30SSPJ*/ 94674738
         4 * BIT(7),                /* USED BY OPEN          @Y30SSPJ*/ 94677538
        3 DELACBPT PTR(24)BDY(BYTE),/* PTR TO ACB TO OPEN    @Y30SSPJ*/ 94679538
       2 * CHAR(2),                 /* RESERVED              @Y30SSPJ*/ 94681538
       2 F FIXED(15) BDY(BYTE);     /* ERASE LOOP COUNTER    @Y30SSPJ*/ 94681938
 /********************************************************************/ 94682338
 /*      DECLARATION FOR PASSWORD BASE REFERENCE FIELD       @Y30SSPJ*/ 94682738
 /********************************************************************/ 94683138
    DECLARE PASSSTRT CHAR(8) BASED; /* PASSWORD BASE REF FLD @Y30SSPJ*/ 94685238
 /********************************************************************/ 94687238
 /*        DECLARATION FOR CMS DELETE-ERASE WORK AREA        @Y30SSPJ*/ 94689238
 /********************************************************************/ 94689338
    DECLARE                                                             94689438
      1 DELERASE BDY(WORD)BASED(CCAR5REC),/* ERASE WORK AREA @Y30SSPJ*/ 94691538
       2 DELACB CHAR(LENGTH(IFGACB)),/* ACB FOR ERASE        @Y30SSPJ*/ 94693538
       2 DELRPL CHAR(LENGTH(IFGRPL)),/* RPL FOR ERASE        @Y30SSPJ*/ 94695538
       2 DELRCPTR PTR(31),          /* RECORD AREA POINTER   @Y30SSPJ*/ 94695638
       2 DELPASSW,                  /* PASSWORD STRUCTURE    @Y30SSPJ*/ 94695738
        3 DELPASLN BDY(BYTE)FIXED(8),/* PASSWORD LENGTH      @Y30SSPJ*/ 94699238
        3 DELPASWD CHAR(8);         /* PASSWORD VALUE        @Y30SSPJ*/ 94701238
 /********************************************************************/ 94701638
 /*           DECLARATION FOR ENQUEUE PARAMETER LIST         @Y30SSPJ*/ 94702038
 /********************************************************************/ 94702438
    DECLARE                                                             94702538
      1 DELENQ BDY(WORD)BASED(CCAR5REC),/*ENQ PARAMETER LIST @Y30SSPJ*/ 94702638
       2 ENQPROPR,                  /* ENQ MAIN SECTION LBL  @Y30SSPJ*/ 94703638
        3 ENQOPT1 BIT(8),           /* OPTION BYTE 1         @Y30SSPJ*/ 94704038
         4 ENQEND BIT(1),           /* ON FOR END OF LIST    @Y30SSPJ*/ 94704438
         4 ENQNEW BIT(1),           /* OFF FOR NES FORM      @Y30SSPJ*/ 94704838
         4 * BIT(5),                /* RESERVED              @Y30SSPJ*/ 94705238
         4 ENQDIR BIT(1),           /* ON FOR DIRECTED FORM  @Y30SSPJ*/ 94705338
        3 ENQRLEN FIXED(8),         /* RNAME LENGTH          @Y30SSPJ*/ 94705438
        3 ENQOPT2 BIT(8),           /* OPTION BYTE 2         @Y30SSPJ*/ 94705538
         4 ENQSHR BIT(1),           /* ENQ FOR SHARED CONTRL @Y30SSPJ*/ 94708638
         4 * BIT(7),                /* RESERVED              @Y30SSPJ*/ 94710638
          3 ENQRETC FIXED(8),       /* ENQ/DEQ RETURN CODE   @Y30SSPJ*/ 94711038
          3 ENQQNADR PTR(31),       /* QNAME ADDRESS         @Y30SSPJ*/ 94711438
          3 ENQRNADR PTR(31),       /* RNAME ADDRESS         @Y30SSPJ*/ 94711838
       2 RNAME CHAR(8),             /* RNAME FOR ENQ         @Y30SSPJ*/ 94712238
        3 RNAMECI CHAR(3),          /* CONTROL INTERVAL NO.  @Y30SSPJ*/ 94712538
        3 RNAMECA CHAR(4),          /* CATALOG ACB POINTER   @Y30SSPJ*/ 94712938
        3 RNAMEID CHAR(1);          /* ALPHA ID TYPE         @Y30SSPJ*/ 94713038
                                                                        94713138
    %IF DELWKA98 = ''               /*IF OBTAIN WORK AREA NOT REQUIRED  94714038
                                                             @Y30SSPJ*/ 94714438
      %THEN %GOTO DELWKA01;         /* THEN DONT GENERATE IT @Y30SSPJ*/ 94714838
    %STOPFMT2:;                     /* SHOW NEXT COMMENT     @Y30SSPJ*/ 94715238
 /********************************************************************/ 94715638
 /*         OBTAIN PARAMETER LIST - IN RECORD AREA 4         @Y30SSPJ*/ 94715738
 /********************************************************************/ 94718638
    DECLARE                                                             94720638
      1 DELOCAM BASED(CCAR4REC),    /* OBTAIN CAM LIST       @Y30SSPJ*/ 94721038
        2 DELOPT CHAR(4),           /* OBTAIN OPTIONS        @Y30SSPJ*/ 94721438
        2 DELODSN PTR(31),          /* ADDRESS OF FORMAT 1 DSCB CCHHR   94721538
                                                             @Y30SSPJ*/ 94722338
        2 DELOVOL PTR(31),          /* ADDR OF VOLUME SERIAL @Y30SSPJ*/ 94722738
        2 DELOBUF PTR(31),          /* ADDR OF DSCB BUFFER   @Y30SSPJ*/ 94723138
        2 DELDBUF CHAR(148);        /* BUFFER FOR DSCB       @Y30SSPJ*/ 94723538
    DECLARE                                                             94723638
      DELOSEK BIT(32) CONSTANT('C0800000'X); /* SEEK OPTION  @Y30SSPJ*/ 94723738
 /********************************************************************/ 94723838
 /*          DISK ADDRESS OF DSCB - IN RECORD AREA 4         @Y30SSPJ*/ 94724038
 /********************************************************************/ 94724138
    DECLARE                                                             94724238
      1 DELDSADR DEF(DELDBUF)POS(149),/* DSCB DISK ADDRESS   @Y30SSPJ*/ 94724338
        2 DELDSCC FIXED(15)BDY(BYTE),/* DSCB CYLINDER ADDR   @Y30SSPJ*/ 94725038
        2 DELDSHH FIXED(15)BDY(BYTE),/* DSCB HEAD ADDRESS    @Y30SSPJ*/ 94725438
        2 DELDSREC PTR(8)BDY(BYTE); /* DSCB RECORD NUMBER    @Y30SSPJ*/ 94725838
 /********************************************************************/ 94726238
 /*               FORMAT 4 EXTENT DESCRIPTION                @Y30SSPJ*/ 94726338
 /********************************************************************/ 94726538
    DECLARE                                                             94726938
      1 DELVTOCE DEF(DS4VTOCE),     /* FORMAT 4 EXTENT DESCRIPTION      94727038
                                                             @Y30SSPJ*/ 94729538
        2 * CHAR(2),                /* NOT USED              @Y30SSPJ*/ 94731538
        2 DELDS4BG CHAR(4),         /* VTOC START CCHH       @Y30SSPJ*/ 94731938
        2 DELDS4EN CHAR(4);         /* VTOC END CCHH         @Y30SSPJ*/ 94732338
 /********************************************************************/ 94732438
 /*      VOLUME INFORMATION SAVE AREA - IN RECORD AREA 4     @Y30SSPJ*/ 94732638
 /********************************************************************/ 94733038
    DECLARE                                                             94733738
      1 * DEF(DELDSREC) POS(2),     /* VOL ENTRY SAVE AREA   @Y30SSPJ*/ 94734138
        2 * CHAR(1) BDY(BYTE),      /* RESERVED              @Y30SSPJ*/ 94734538
        2 DELVLSER CHAR(6),         /* VOLUME SERIAL         @Y30SSPJ*/ 94734938
        2 DELDEVT CHAR(4),          /* VOLUME DEVICE TYPE    @Y30SSPJ*/ 94735038
        2 DELUCB FIXED(31) BDY(BYTE), /* VOLUME UCB ADDRESS  @Y30SSPJ*/ 94735138
        2 DELNOTRK FIXED(15) BDY(BYTE); /* TRACKS PER CYL    @Y30SSPJ*/ 94735238
 %DELWKA01:;                                               /*@Y30SSPJ*/ 94785238
 /********************************************************************/ 94835238
 /*       THE FOLLOWING STRUCTURE DESCRIBES THE CATALOG      @Y30SSPJ*/ 94885238
 /*         UPGRADE INTERFACE PARAMETER LIST AND ALSO ITS    @Y30SSPJ*/ 94935238
 /*         ASSOCIATED WORKAREA.  THE CALLER MUST SUPPLY     @Y30SSPJ*/ 94985238
 /*         CORE FOR BOTH AND INITIALIZE CUMPL TO DELETE OR  @Y30SSPJ*/ 95035238
 /*         ADD AN UPGRADE ASSOCIATION.  CCACUMPL MUST BE    @Y30SSPJ*/ 95085238
 /*         INITIALIZED TO POINT TO CUMPLWA.                 @Y30SSPJ*/ 95135238
 /********************************************************************/ 95185238
    DECLARE                                                             95235238
      1 CUMPLWA BASED(CCACUMPL),    /* UPGRADE MGMNT PL/WA   @Y30SSPJ*/ 95285238
        2 CUMPL,                    /* INTERFACE PARM LIST   @Y30SSPJ*/ 95335238
          3 CUMIN BIT(8),           /* INPUT FLAGS           @Y30SSPJ*/ 95385238
            4 CUMFDEL BIT(1),       /* FORCE DELETE Y ENTRY  @Y30SSPJ*/ 95435238
            4 CUMNRG  BIT(1),       /* NO RE-GET BASE RCD    @Y30SSPJ*/ 95485238
            4 CUMFUNC BIT(1),       /* SET INTERNALLY:       @Y30SSPJ*/ 95535238
                                    /*   0 - DELETE, 1 - ADD @Y30SSPJ*/ 95585238
            4 *       BIT(5),       /* RESERVED              @Y30SSPJ*/ 95635238
          3 CUMOUT BIT(8),          /* OUTPUT FLAGS          @Y30SSPJ*/ 95685238
            4 CUMDUP  BIT(1),       /* DUPLICATE UPGRD ASSOC @Y30SSPJ*/ 95735238
            4 CUMNE   BIT(1),       /* NON-EXISTENT Y ENTRY  @Y30SSPJ*/ 95785238
                                    /*   OR UPGRADE ASSOC    @Y30SSPJ*/ 95835238
            4 *       BIT(6),       /* RESERVED              @Y30SSPJ*/ 95885238
          3 CUMDCI PTR(24) BDY(BYTE), /* AIX DATA CI         @Y30SSPJ*/ 95935238
          3 CUMICI PTR(24) BDY(BYTE), /* AIX INDEX CI        @Y30SSPJ*/ 95985238
        2 CUMWA CHAR(152) BDY(WORD), /* UPGRD MGMNT WRK AREA @Y30SSPJ*/ 96035238
          3 CUMFLAG  BIT(8),        /* UPGRADE MGMNT FLAGS   @Y30SSPJ*/ 96085238
            4 CUMEXIT BIT(1),       /* FORCE DELETE EXIT IND @Y30SSPJ*/ 96135238
            4 *       BIT(7),       /* RESERVED              @Y30SSPJ*/ 96185238
          3 CUMBCI  PTR(24),        /* CALLER'S BASE RECORD CI          96235238
                                         NUMBER              @Y30SSPJ*/ 96285238
          3 CUMURAB PTR(31),        /* SAVE CALLER'S CCAURAB @Y30SSPJ*/ 96335238
          3 CUMRABB PTR(31),        /* SAVE CALLER'S CCARABB @Y30SSPJ*/ 96385238
          3 CUMRAB1 PTR(31),        /* FIRST FREE RAB ADDR   @Y30SSPJ*/ 96435238
          3 CUMRAB2 PTR(31),        /* SECOND FREE RAB ADDR  @Y30SSPJ*/ 96485238
          3 CUMRABD PTR(31),        /* DATA RAB ADDRESS      @Y30SSPJ*/ 96535238
          3 *       CHAR(1),        /* RESERVED              @Y30SSPJ*/ 96585238
          3 CUMSRID PTR(24),        /* SRCH ARG OF NEXT RCD  @Y30SSPJ*/ 96635238
          3 *       PTR(8),         /* RESERVED              @Y30SSPJ*/ 96685238
          3 CUMDY   PTR(24),        /* DATA RECORD CI NO.    @Y30SSPJ*/ 96735238
          3 CUMFN1  CHAR(8),        /* FIELD NAME            @Y30SSPJ*/ 96785238
          3 CUMFN2  CHAR(8),        /* TEST FIELD NAME       @Y30SSPJ*/ 96835238
          3 CUMWASS2,               /* ASSOCIATION WORK AREA @Y30SSPJ*/ 96885238
            4 CUMWREL FIXED(15),    /* RELREPNO              @Y30SSPJ*/ 96895238
            4 CUMWASS,              /* SINGLE ASSOCIATION    @Y30SSPJ*/ 96935238
              5 CUMWTYP CHAR(1),    /* TYPE D ENTRY          @Y30SSPJ*/ 96985238
                6 CUMTYPE CHAR(1),  /* NEXT RECORD TYPE GET  @Y30SSPJ*/ 97035238
              5 CUMWCI  PTR(24)     /* D ENTRY CI NO.        @Y30SSPJ*/ 97085238
                      BDY(BYTE),    /*                       @Y30SSPJ*/ 97095238
            4 CUMWTYP2  CHAR(1),    /* TYPE I ENTRY          @Y30SSPJ*/ 97135238
            4 CUMWCI2   PTR(24)     /* I ENTRY CI NO.        @Y30SSPJ*/ 97185238
                      BDY(BYTE),    /*                       @Y30SSPJ*/ 97195238
          3 CUMFMWA CHAR(88),       /* FIELD MGMNT WORK AREA @Y30SSPJ*/ 97235238
          3 *       CHAR(2),        /* RESERVED              @Y30SSPJ*/ 97285238
          3 CUMRC   CHAR(4);        /* SAVE RETURN CODE      @Y30SSPJ*/ 97335238
./  ADD  SSI=53290877,NAME=IGGMCTRC
 /********************************************************************/ 01000003
 /*                                                                  */ 01050003
 /*   MACRO NAME = IGGMCTRC                                          */ 01100003
 /*                                                                  */ 01150003
 /*   DESCRIPTIVE NAME = VSAM CATALOG MANAGEMENT RETURN CODES        */ 01200003
 /*                                                                  */ 01250003
 /*   FUNCTION = VSAM CATALOG MANAGEMENT ERROR RETURN AND            */ 01300003
 /*              REASON CODES USED FOR PROBLEM DETERMINATION.        */ 01350003
 /*                                                                  */ 01400003
 /*   INCLUDED MACROS = NONE                                         */ 01450003
 /*                                                                  */ 01500003
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 01550003
 /*                                                                  */ 01600003
 /*   STATUS = VS/2 RELEASE 4   (CHANGE FLAG @Z40RSXX)       @Z40RSRC*/ 01650004
 /*                                                                  */ 01700003
 /*   DATE OF LAST CHANGE = 13 MAY 75                        @Z40RSRC*/ 01750004
 /*                                                                  */ 01800003
 /********************************************************************/ 01850003
 /********************************************************************/ 01900003
 /*             VSAM  CATALOG  MANAGEMENT  ERROR  CODES              */ 01950003
 /********************************************************************/ 02000003
    DECLARE                          /* DECLARATION                  */ 08000003
      RCS      PTR(8) CONSTANT(  0), /* SUCCESSFUL - NO ERRORS       */ 09000003
      RCCAT    PTR(8) CONSTANT(  4), /* CATALOG NON-EXISTENT OR NOT  */ 10000003
                                     /*   OPENED                     */ 11000003
      COCECOMP PTR(8) CONSTANT(  4), /* OPEN COMPLETE                */ 12000003
      RCENT    PTR(8) CONSTANT(  8), /* ENTRY NOT EXIST (NON-DEF),   */ 13000003
                                     /* ENTRY EXISTS (DEFINE)        */ 14000003
      RCINSP   PTR(8) CONSTANT( 20), /* INSUFF SPACE CAT D.S.        */ 15000003
      RCIOL    PTR(8) CONSTANT( 24), /* I/O ERROR CAT D.S. LOCATE    */ 16000003
      RCIONL   PTR(8) CONSTANT( 28), /* I/O ERROR CAT D.S. NOT LOCATE*/ 17000003
      RCINCPL  PTR(8) CONSTANT( 32), /* INVALID CPL OR USER WORK     */ 18000003
                                     /* AREA OUTSIDE USER REGION     */ 19000003
      RCDSNF   PTR(8) CONSTANT( 36), /* DATA SET NOT FOUND           */ 20000003
      RCVLSZ   PTR(8) CONSTANT( 40), /* VOLUME LIST OR WORKAREA TOO  */ 21000003
                                     /* SMALL, CORRECT SIZE IN       */ 22000003
                                     /* FEEDBACK FIELD               */ 23000003
      RCVLSM   PTR(8) CONSTANT( 44), /* WORKAREA TOO SMALL, UNABLE   */ 24000003
                                     /* TO RETURN REQUIRED SIZE      */ 25000003
      RCINFUNC PTR(8) CONSTANT( 48), /* INVALID FUNCTION             */ 27000003
      RCIOU    PTR(8) CONSTANT( 52), /* I/O ERROR USER VOLUME        */ 28000003
      RCSEC    PTR(8) CONSTANT( 56), /* SECURITY VERIFICATION        */ 29000003
      RCINENT  PTR(8) CONSTANT( 60), /* INVALID ENTRY TYPE           */ 30000003
      RCNAME   PTR(8) CONSTANT( 64), /* ASSOCIATION NAME NOT EXIST   */ 31000003
      RCNOSP   PTR(8) CONSTANT( 68), /* NO SPACE ON USER VOLUME      */ 32000003
      RCNMNTD  PTR(8) CONSTANT( 72), /* USER VOLUME NOT MOUNTED      */ 33000003
      RCNUNIT  PTR(8) CONSTANT( 76), /* UNIT NOT AVAILABLE FOR       */ 34000003
                                     /*   MOUNTING                   */ 35000003
      RCRELOP  PTR(8) CONSTANT( 80), /* INVALID OPERATION FOR           36500003
                                          RELATIONSHIP       @Y30SSPJ*/ 36600003
      RCDATE   PTR(8) CONSTANT( 84), /* UNEXPIRED PURGE DATE         */ 37000003
      RCCRAOP  PTR(8) CONSTANT( 88), /* ERROR WITH CRA OPERATION        38500003
                                                             @Y30SSPJ*/ 38600003
      RCDSEXT  PTR(8) CONSTANT( 92), /* D.S. MAX NO. OF EXTENTS      */ 39000003
      RCOBTAIN PTR(8) CONSTANT( 94), /* OS/VS DADSM OBTAIN ERROR        39050003
                                                             @Y30SSSM*/ 39100003
      RCSPANCK PTR(8) CONSTANT( 96), /* SPANNED RECORD VALIDITY         40060003
                                           CHECK FAILED      @Y30SSPJ*/ 40120003
      RCRENAME PTR(8) CONSTANT( 98), /* DADSM RENAME ERROR   @Y30SSPJ*/ 40180003
      RCSCRTCH PTR(8) CONSTANT(102), /* DADSM SCRATCH I/0 ERROR         41500003
                                                             @Y30SSPJ*/ 41600003
      RCCATEX  PTR(8) CONSTANT(104), /* CATALOG EXISTS               */ 42000003
      RCNTFMT4 PTR(8) CONSTANT(106), /* INVALID FORMAT 4 DSCB           42010003
                                           READ FROM VOLUME  @Y30SSPJ*/ 42020003
      RCINFNAM PTR(8) CONSTANT(108), /* INVALID FIELDNAME            */ 43000003
      RCPRFNDL PTR(8) CONSTANT(110), /* PROFILE NOT DELETED  @Z40RSRC*/ 43050004
      RCINFPL  PTR(8) CONSTANT(112), /* INVALID FPL                  */ 44000003
      RCDUPROF PTR(8) CONSTANT(114), /* DUPLICATE PROFILE    @Z40RSRC*/ 44050004
      RCCATBAL PTR(8) CONSTANT(116), /* CATALOG OUT-OF-BALANCE       */ 45000003
      RCNDEFSS PTR(8) CONSTANT(118), /* ENTITY CANNOT BE DEFINED        45050004
                                        TO SECURITY SUB SYS  @Z40RSRC*/ 45100004
      RCSYSFLD PTR(8) CONSTANT(120), /* ATTEMPTED TO MODIFY SYSTEM   */ 46000003
                                     /* FIELD OR NON-EXISTENT FIELD  */ 47000003
      RCINCI   PTR(8) CONSTANT(124), /* INVALID CI NUMBER            */ 49000003
      RCBLKVCK PTR(8) CONSTANT(128), /* VALIDITY CHECK ON USER BLOCK */ 50000003
      RCINPTR  PTR(8) CONSTANT(132), /* INVALID POINTER              */ 51000003
      RCMISPAR PTR(8) CONSTANT(136), /* MISSING REQUIRED PARAMETER   */ 52000003
      RCINCNPM PTR(8) CONSTANT(140), /* INCONSISTENT PARAMETERS      */ 53000003
      RCINENTN PTR(8) CONSTANT(144), /* INVALID ENTRYNAME            */ 54000003
      RCVOLOWN PTR(8) CONSTANT(148), /* VOLUME ALREADY OWNED         */ 55000003
      RCDNECAT PTR(8) CONSTANT(152), /* DELETE OF NON-EMPTY CATALOG  */ 56000003
      RCNOSPSA PTR(8) CONSTANT(156), /* NO SPACE TO SUBALLOCATE      */ 57000003
      RCVNDSPD PTR(8) CONSTANT(160), /* VOL NOT DELETED (SPACE DEL)  */ 58000003
      RCINSSWA PTR(8) CONSTANT(164), /* INSUFF STORAGE FOR WORKAREA  */ 59000003
      RCINVDTY PTR(8) CONSTANT(168), /* UNSUPPORTED DEVICE TYPE      */ 60000003
      RCDUPNVL PTR(8) CONSTANT(172), /* DUPLICATE NAME ON VOLUME     */ 61000003
      RCNSPVTC PTR(8) CONSTANT(176), /* NO SPACE ON VTOC             */ 62000003
      RCDSNFND PTR(8) CONSTANT(180), /* DATA SPACE NOT FOUND         */ 63000003
      RCDSO    PTR(8) CONSTANT(184), /* DATA SET OPEN - CANNOT       */ 64000003
                                     /*   DELETE             @Y30SSSB*/ 65000003
      RCCATUNA PTR(8) CONSTANT(188), /* CATALOG UNAVAILABLE          */ 66000003
      RCMLRSZ  PTR(8) CONSTANT(192), /* MAX. LOG. REC. SIZE EXCEEDED */ 67000003
      RCMCISZD PTR(8) CONSTANT(196), /* MAX CI SIZE EXCEEDED - DATA  */ 68000003
      RCMCISZI PTR(8) CONSTANT(200), /* MAX CI SIZE EXCEEDED - INDEX */ 69000003
      RCKEYINC PTR(8) CONSTANT(204), /* KEY EXTENDS BEYOND END OF    */ 70000003
                                     /*   MAXIMUM LOGICAL RECORD     */ 71000003
      RCBUFSIZ PTR(8) CONSTANT(208), /* BUFFER SIZE TOO SMALL        */ 72000003
      RCSIZCAL PTR(8) CONSTANT(212), /* SIZE CALCULATIONS UNSOLVABLE */ 73000003
      RCVTCBAL PTR(8) CONSTANT(216), /* VTOC OF VOLUME OUT-OF-BALANCE*/ 75000003
      RCDOSVTC PTR(8) CONSTANT(220), /* DOS VTOC CANNOT BE CONVERTED */ 77000003
                                     /*   TO OS VTOC                 */ 78000003
      RCMXGRP  PTR(8) CONSTANT(224), /* CATALOG ENTRY HAS EXCEEDED MAX. 79000003
                                          NUMBER OF OCCURRENCES      */ 80000003
      RCTSAUTH PTR(8) CONSTANT(226), /* TESTAUTH MACRO FAILED           81050003
                                                             @Y30SSJG*/ 81100003
      RCLOCKER PTR(8) CONSTANT(228), /* TIME-OF-DAY CLOCK ERROR      */ 82000003
      RCHIGH   PTR(8) CONSTANT(230), /* NOT LOW RANGE RECORD ON         82050003
                                           CI GET            @Y30SSJG*/ 82100003
      RCSMFER  PTR(8) CONSTANT(232), /* SMF PROCESSING ERROR         */ 83000003
      RCLEOD   PTR(8) CONSTANT(234), /* EOD ENCOUNTERED WHILE           83050003
                                           READING CATALOG LOW DATA     83100003
                                           KEY RANGE         @Y30SSJG*/ 83150003
      RCSPMAPE PTR(8) CONSTANT(236), /* SPACE MAP SCAN ERROR         */ 84000003
      RCNOUCEN PTR(8) CONSTANT(238), /* NO USER CATALOG ENTRY IN        84050003
                                           MASTER CATALOG FOR           84100003
                                           CONVERTV          @Y30SSJG*/ 84150003
      RCINDER  PTR(8) CONSTANT(240), /* NO DDNAME ERROR      @Y30SSDW*/ 85000003
      RCEFRMPH PTR(8) CONSTANT(242), /* PHYSICAL ERROR FROM RECORD      88010003
                                           MANAGEMENT DURING DELETE     88020003
                                           WITH ERASE OPTION @Y30SSPJ*/ 88030003
      RCEF     PTR(8) CONSTANT(244), /* ERASE FAILED - DELETE NOT    */ 89000003
                                     /*   PERFORMED                  */ 90000003
      RCVOLENT PTR(8) CONSTANT(248), /* VOLUME ENTRY DOES NOT EXIST  */ 90050003
      RCEFRM   PTR(8) CONSTANT(250), /* LOGICAL ERROR FROM RECORD       90060003
                                           MANAGEMENT DURING DELETE     90070003
                                           WITH ERASE OPTION @Y30SSPJ*/ 90080003
      RCEE     PTR(8) CONSTANT(252); /* EARLY EXIT CODE              */ 91000003
                                                                        91000703
 /********************************************************************/ 91001403
 /*             VSAM  CATALOG  MANAGEMENT  REASON  CODES             */ 91002103
 /********************************************************************/ 91002803
    DECLARE                         /* DECLARATION           @Y30SSPJ*/ 91003503
      RSN0   PTR(31) CONSTANT(  0), /* REASON CODE 0         @Y30SSPJ*/ 91004203
      RSN2   PTR(31) CONSTANT(  2), /* REASON CODE 2         @Y30SSPJ*/ 91004903
      RSN4   PTR(31) CONSTANT(  4), /* REASON CODE 4         @Y30SSPJ*/ 91005603
      RSN6   PTR(31) CONSTANT(  6), /* REASON CODE 6         @Y30SSPJ*/ 91006303
      RSN8   PTR(31) CONSTANT(  8), /* REASON CODE 8         @Y30SSPJ*/ 91007003
      RSN10  PTR(31) CONSTANT( 10), /* REASON CODE 10        @Y30SSPJ*/ 91007703
      RSN12  PTR(31) CONSTANT( 12), /* REASON CODE 12        @Y30SSPJ*/ 91008403
      RSN14  PTR(31) CONSTANT( 14), /* REASON CODE 14        @Y30SSPJ*/ 91009103
      RSN16  PTR(31) CONSTANT( 16), /* REASON CODE 16        @Y30SSPJ*/ 91009803
      RSN18  PTR(31) CONSTANT( 18), /* REASON CODE 18        @Y30SSPJ*/ 91010503
      RSN20  PTR(31) CONSTANT( 20), /* REASON CODE 20        @Y30SSPJ*/ 91011203
      RSN22  PTR(31) CONSTANT( 22), /* REASON CODE 22        @Y30SSPJ*/ 91011903
      RSN24  PTR(31) CONSTANT( 24), /* REASON CODE 24        @Y30SSPJ*/ 91012603
      RSN26  PTR(31) CONSTANT( 26), /* REASON CODE 26        @Y30SSPJ*/ 91013303
      RSN28  PTR(31) CONSTANT( 28), /* REASON CODE 28        @Y30SSPJ*/ 91014003
      RSN30  PTR(31) CONSTANT( 30), /* REASON CODE 30        @Y30SSPJ*/ 91014703
      RSN32  PTR(31) CONSTANT( 32), /* REASON CODE 32        @Y30SSPJ*/ 91015403
      RSN34  PTR(31) CONSTANT( 34), /* REASON CODE 34        @Y30SSPJ*/ 91016103
      RSN36  PTR(31) CONSTANT( 36), /* REASON CODE 36        @Y30SSPJ*/ 91016803
      RSN38  PTR(31) CONSTANT( 38), /* REASON CODE 38        @Y30SSPJ*/ 91017503
      RSN40  PTR(31) CONSTANT( 40), /* REASON CODE 40        @Y30SSPJ*/ 91018203
      RSN42  PTR(31) CONSTANT( 42), /* REASON CODE 42        @Y30SSPJ*/ 91018903
      RSN44  PTR(31) CONSTANT( 44), /* REASON CODE 44        @Y30SSPJ*/ 91019603
      RSN46  PTR(31) CONSTANT( 46), /* REASON CODE 46        @Y30SSPJ*/ 91020303
      RSN48  PTR(31) CONSTANT( 48), /* REASON CODE 48        @Y30SSPJ*/ 91021003
      RSN50  PTR(31) CONSTANT( 50), /* REASON CODE 50        @Y30SSPJ*/ 91021703
      RSN52  PTR(31) CONSTANT( 52), /* REASON CODE 52        @Y30SSPJ*/ 91022403
      RSN54  PTR(31) CONSTANT( 54), /* REASON CODE 54        @Y30SSPJ*/ 91023103
      RSN56  PTR(31) CONSTANT( 56), /* REASON CODE 56        @Y30SSPJ*/ 91023803
      RSN58  PTR(31) CONSTANT( 58), /* REASON CODE 58        @Y30SSPJ*/ 91024503
      RSN60  PTR(31) CONSTANT( 60), /* REASON CODE 60        @Y30SSPJ*/ 91025203
      RSN62  PTR(31) CONSTANT( 62), /* REASON CODE 62        @Y30SSPJ*/ 91025903
      RSN64  PTR(31) CONSTANT( 64), /* REASON CODE 64        @Y30SSPJ*/ 91026603
      RSN66  PTR(31) CONSTANT( 66), /* REASON CODE 66        @Y30SSPJ*/ 91027303
      RSN68  PTR(31) CONSTANT( 68), /* REASON CODE 68        @Y30SSPJ*/ 91028003
      RSN70  PTR(31) CONSTANT( 70), /* REASON CODE 70        @Y30SSPJ*/ 91028703
      RSN72  PTR(31) CONSTANT( 72), /* REASON CODE 72        @Y30SSPJ*/ 91029403
      RSN74  PTR(31) CONSTANT( 74), /* REASON CODE 74        @Y30SSPJ*/ 91030103
      RSN76  PTR(31) CONSTANT( 76), /* REASON CODE 76        @Y30SSPJ*/ 91030803
      RSN78  PTR(31) CONSTANT( 78), /* REASON CODE 78        @Y30SSPJ*/ 91031503
      RSN80  PTR(31) CONSTANT( 80), /* REASON CODE 80        @Y30SSPJ*/ 91032203
      RSN82  PTR(31) CONSTANT( 82), /* REASON CODE 82        @Y30SSPJ*/ 91032903
      RSN84  PTR(31) CONSTANT( 84), /* REASON CODE 84        @Y30SSPJ*/ 91033603
      RSN86  PTR(31) CONSTANT( 86), /* REASON CODE 86        @Y30SSPJ*/ 91034303
      RSN88  PTR(31) CONSTANT( 88), /* REASON CODE 88        @Y30SSPJ*/ 91035003
      RSN90  PTR(31) CONSTANT( 90), /* REASON CODE 90        @Y30SSPJ*/ 91035703
      RSN92  PTR(31) CONSTANT( 92), /* REASON CODE 92        @Y30SSPJ*/ 91036403
      RSN94  PTR(31) CONSTANT( 94), /* REASON CODE 94        @Y30SSPJ*/ 91037103
      RSN96  PTR(31) CONSTANT( 96), /* REASON CODE 96        @Y30SSPJ*/ 91037803
      RSN98  PTR(31) CONSTANT( 98), /* REASON CODE 98        @Y30SSPJ*/ 91038503
      RSN100 PTR(31) CONSTANT(100), /* REASON CODE 100       @Y30SSPJ*/ 91039203
      RSN102 PTR(31) CONSTANT(102), /* REASON CODE 102       @Y30SSPJ*/ 91039903
      RSN104 PTR(31) CONSTANT(104), /* REASON CODE 104       @Y30SSPJ*/ 91040603
      RSN106 PTR(31) CONSTANT(106), /* REASON CODE 106       @Y30SSPJ*/ 91041303
      RSN108 PTR(31) CONSTANT(108), /* REASON CODE 108       @Y30SSPJ*/ 91042003
      RSN110 PTR(31) CONSTANT(110), /* REASON CODE 110       @Y30SSPJ*/ 91042703
      RSN112 PTR(31) CONSTANT(112), /* REASON CODE 112       @Y30SSPJ*/ 91043403
      RSN114 PTR(31) CONSTANT(114), /* REASON CODE 114       @Y30SSPJ*/ 91044103
      RSN116 PTR(31) CONSTANT(116), /* REASON CODE 116       @Y30SSPJ*/ 91044803
      RSN118 PTR(31) CONSTANT(118), /* REASON CODE 118       @Y30SSPJ*/ 91045503
      RSN120 PTR(31) CONSTANT(120), /* REASON CODE 120       @Y30SSPJ*/ 91046203
      RSN122 PTR(31) CONSTANT(122), /* REASON CODE 122       @Y30SSPJ*/ 91046903
      RSN124 PTR(31) CONSTANT(124), /* REASON CODE 124       @Y30SSPJ*/ 91047603
      RSN126 PTR(31) CONSTANT(126); /* REASON CODE 126       @Y30SSPJ*/ 91048303
./  ADD  SSI=52890104,NAME=IGGMDCRA
 /********************************************************************/ 00050003
 /*                                                                  */ 00100003
 /*   MACRO NAME = IGGMDCRA                                          */ 00150003
 /*                                                                  */ 00200003
 /*   DESCRIPTIVE NAME = DECLARATIONS FOR DEFINE CATALOG             */ 00250003
 /*                      RECOVERY AREA PROCESSING                    */ 00300003
 /*                                                                  */ 00350003
 /*   FUNCTION = CONTAINS THE MAPPING STRUCTURE FOR THE DEFINE       */ 00400003
 /*              CATALOG RECOVERY AREA WORKAREA, RECORD MAPPING      */ 00450003
 /*              STRUCTURES, AND CONSTANTS AND REGISTER              */ 00500003
 /*              DECLARATIONS USED IN DEFINE CRA PROCESSING.         */ 00550003
 /*                                                                  */ 00600003
 /*   INCLUDED MACROS = NONE                                         */ 00650003
 /*                                                                  */ 00700003
 /*   METHOD OF ACCESS = PL/S - RESPECIFY A BASE FOR SOME STRUCTURES */ 00750003
 /*                                                                  */ 00800003
 /*   STATUS = VS/2 RELEASE 3   (CHANGE FLAG @Y30SSXX)               */ 00850003
 /*                                                                  */ 00900003
 /*   DATE OF LAST CHANGE = 3 SEPT 75    @ZA05914                    */ 00950003
 /*                                                                  */ 01000003
 /********************************************************************/ 01050003
 /********************************************************************/ 01100003
 /*     DECLARE  BASE  REGISTER  FOR  THE  DEFINE  CRA  WORKAREA     */ 01150003
 /********************************************************************/ 01200003
    DECLARE                                                             01250003
      DCRAWAPR PTR(31) REG(3) RSTD; /* POINTER TO DEFINE CRA WORKAREA*/ 01300003
 /********************************************************************/ 01310003
 /*            D E F I N E     C R A     W O R K A R E A             */ 01320003
 /********************************************************************/ 01330003
    DECLARE                                                             01350003
      1 DCRAWKA BASED(DCRAWAPR),    /* DEFINE CRA WORKAREA MAPPING   */ 01400003
        2 DCRACIPT (6) PTR(31),     /* ARRAY OF PTRS TO CRA CI'S 0-5 */ 01450003
        2 DCRADSWA PTR(31),         /* SAVE ADDR OF CLAQ'S WORKAREA  */ 01500003
        2 DCRADSUL PTR(31),         /* SAVE ADDR OF CLAQ'S VOLUME    */ 01550003
                                    /*   SERIAL LIST                 */ 01600003
        2 DCRADSAF PTR(31),         /* SAVE ADDR OF CLAQ'S DATA SET  */ 01650003
                                    /*   ATTRIBUTES FPL              */ 01700003
        2 DCRAOFPL PTR(31),         /* SAVE ADDR OF CLAQ'S SPACE     */ 01750003
                                    /*   ALLOCATION FPL              */ 01800003
        2 DCRAFVEN PTR(31),         /* CLAQ'S SPACE FVT     @ZA05914 */ 01810003
                                    /* ENTRY NAME ADDRESS   @ZA05914 */ 01820003
        2 DCRAR1PT PTR(31),         /* SAVE CCAR1REC RECORD POINTER  */ 01850003
        2 DCRAR2PT PTR(31),         /* SAVE CCAR2REC RECORD POINTER  */ 01900003
        2 DCRACHIU PTR(32),         /* HIGH USED RBA OF CRA          */ 01950003
        2 DCRACHIA PTR(32),         /* HIGH ALLOCATED RBA OF CRA     */ 02000003
        2 DCRAMNLN FIXED(31),       /* GETMAIN CORE LENGTH           */ 02050003
        2 DCRATRCY FIXED(15),       /* NO. OF TRACKS PER CYLINDER    */ 02100003
        2 DCRABTRK FIXED(15),       /* NO. OF BLOCKS PER TRACK       */ 02150003
        2 DCRADESA                  /* DADSM EXTENT INFO SAVE AREA   */ 02200003
             CHAR(LENGTH(CCADESA)),                                     02250003
        2 DCRAMCPL,                 /* CPL FOR MODIFY FUNCTION       */ 02300003
          3 * CHAR(LENGTH(CTGPL)),  /* MAIN BODY OF CPL              */ 02350003
          3 * CHAR(LENGTH(CTGFIELD)), /* POINTER TO AMDSB FPL        */ 02400003
          3 * CHAR(LENGTH(CTGFIELD)), /* POINTER TO ASSOCIATION FPL  */ 02450003
          3 * CHAR(LENGTH(CTGFIELD)), /* POINTER TO VOLUME G.O. FPL  */ 02500003
        2 DCRAMFPL,                 /* AMDSB FPL FOR MODIFY FUNCTION */ 02550003
          3 * CHAR(LENGTH(CTGFL)),  /* MAIN BODY OF FPL              */ 02600003
          3 * CHAR(LENGTH(CTGFLDAT)), /* POINTER TO AMDSB            */ 02650003
        2 DCRAMDSB CHAR(LENGTH(IDAAMDSB)), /* AMDSB SET OF FIELDS    */ 02700003
        2 DCRASFPL,                 /* IN-CORE FPL FOR ASSOCIATION   */ 02750003
          3 * CHAR(LENGTH(CTGFL)),  /* FIELD PARAMETER LIST (FPL)    */ 02800003
          3 * CHAR(LENGTH(CTGFLDAT)), /* DATA LENGTH & DATA ADDR PAIR*/ 02850003
        2 DCRASSOC,                 /* ASSOCIATION SET OF FIELDS     */ 02900003
          3 DCRATYPE CHAR(1),       /* ASSOCIATION OBJECT TYPE       */ 02950003
          3 DCRANAME PTR(24) BDY(BYTE), /* ASSOCIATION OBJECT NAME   */ 03000003
        2 DCRAVFPL,                 /* VOLUME G.O. FPL FOR MODIFY    */ 03050003
          3 * CHAR(LENGTH(CTGFL)),  /* MAIN BODY OF FPL              */ 03100003
          3 * CHAR(LENGTH(CTGFLDAT)), /* POINTER TO VOLUME GRP OCCUR */ 03150003
        2 DCRAVGO,                  /* VOLUME GROUP OCCURRENCE FIELDS*/ 03200003
          3 * CHAR(LENGTH(CNTRLINF)), /* VGO CONTROL INFORMATION     */ 03250003
          3 DCRAVGOM CHAR(LENGTH(GVO)), /* MAIN BODY OF VOL G.O.     */ 03300003
          3 * CHAR(LENGTH(CMFXECTS)), /* VOLUME EXTENT STRUCTURE     */ 03350003
        2 DCRARACI CHAR(3072) BDY(DWORD), /* CRA CI'S 0-5 BUILD AREA */ 03400003
          3 DCRACI0  CHAR(512),     /* BUILD AREA FOR CRA CI 0       */ 03450003
            4 DCRASALP CHAR(LENGTH(SALPARL)), /* SUBALLOC PARM LIST  */ 03500003
              5 DCRASPRM CHAR(LENGTH(SPACEPRM)),                        03550003
                                    /* SPACE ALLOCATION PARAMETERS   */ 03600003
              5 DCRADSVL,           /* DEFINE SPACE VOLUME LIST      */ 03650003
                6 * CHAR(LENGTH(USERLIST)), /* VOLUME LIST MAIN BODY */ 03700003
                6 * CHAR(LENGTH(LTENTRY)), /* ONE VOLUME LIST ENTRY  */ 03750003
          3 DCRACI15 CHAR(2560),    /* BUILD AREA FOR CRA CI'S 1-5   */ 03800003
            4 * CHAR(2048),         /* BUILD AREA FOR CRA CI'S 1-4   */ 03850003
            4 DCRACI5 CHAR(512),    /* CRA CI 5 - EXTENSION RECORD   */ 03900003
              5 * CHAR(LENGTH(CATRCD)), /* NON-REPEATING FIELDS      */ 03950003
              5 * CHAR(LENGTH(REPCNTRL)), /* REPEATING FIELD CONTROL    04000003
                                             INFORMATION             */ 04050003
              5 * CHAR(LENGTH(CATGOPT)), /* GROUP OCCURRENCE POINTER */ 04100003
              5 * CHAR(LENGTH(CNTRLINF)), /* VGO CONTROL INFORMATION */ 04150003
              5 DCRA5VGO CHAR(LENGTH(GVO)), /* VOLUME INFORMATION       04200003
                                               SET-OF-FIELDS         */ 04250003
        2 DCRAEND CHAR(0);          /* END OF DEFINE CRA WORKAREA    */ 04300003
 /********************************************************************/ 04350003
 /*     SAVE AREA FOR RECORD AREA BLOCK 3 AND RECORD AREA 3.         */ 04400003
 /*     THIS AREA IS OBTAINED AND ATTACHED TO THE END OF THE         */ 04450003
 /*     REGULAR DEFINE CRA WORKAREA ONLY IF THE CALLER OF DEFINE     */ 04500003
 /*     CRA IS DEFINE CATALOG (IGG0CLAS).                            */ 04550003
 /********************************************************************/ 04600003
    DECLARE                                                             04650003
      1 DCRARABS BASED(ADDR(DCRAEND)), /* ATTACH TO WORKAREA END     */ 04700003
        2 DCRARAB3 CHAR(LENGTH(CCARAB)), /* SAVE AREA FOR RAB 3      */ 04750003
        2 DCRARA3(2) CHAR(256);     /* SAVE AREA FOR RECORD AREA 3   */ 04800003
 /********************************************************************/ 04850003
 /*           CRA  CONTROL  RECORD  (CI 3)  INFORMATION              */ 04900003
 /********************************************************************/ 04950003
    DECLARE                                                             05000003
      1 CCRCNTRL BASED(ADDR(RCDID)) POSITION(2),                        05050003
        2 CCRHACI PTR(24) BDY(BYTE), /* NO. OF THE HIGH ALLOCATED CI */ 05100003
        2 CCRNFCI PTR(24) BDY(BYTE); /* NO. OF THE NEXT FREE CI      */ 05150003
 /********************************************************************/ 05200003
 /*           STRUCTURE  FOR  A  BUFFERED  VOLUME  RECORD            */ 05250003
 /********************************************************************/ 05300003
    DECLARE                                                             05350003
      1 BUFVOLRD BASED,             /* BUFFERED RECORD STRUCTURE     */ 05400003
        2 BUFRECRD CHAR(508),       /* ACTUAL VOLUME RECORD          */ 05450003
        2 BUFNEXTB PTR(31);         /* ADDR OF NEXT BUFFERED RECORD  */ 05500003
 /********************************************************************/ 05550003
 /*         C O N S T A N T     D E C L A R A T I O N S              */ 05600003
 /********************************************************************/ 05650003
    DECLARE                                                             05700003
      BLANK    FIXED(31) CONSTANT(0),    /* A ZERO-VALUE COMPARATOR  */ 05750003
      DCRACISZ FIXED(31) CONSTANT(512),  /* CONTROL INTERVAL SIZE    */ 05800003
      DCRARCSZ FIXED(31) CONSTANT(505),  /* MAXIMUM RECORD SIZE      */ 05850003
      DCRABRSZ FIXED(31) CONSTANT(2048), /* MINIMUM BUFFER SIZE (2K) */ 05900003
      LEN10CIS FIXED(31) CONSTANT(5120), /* LENGTH OF 10 CRA CI'S    */ 05950003
      ACTCOUNT FIXED(8)  CONSTANT(1), /* CATALOG ACTIVITY COUNT      */ 06000003
      GOSEQNUM FIXED(8)  CONSTANT(1), /* GROUP OCCUR SEQUENCE NO.    */ 06050003
      NUMLAPRS FIXED(8)  CONSTANT(1), /* NO. LENG/ADDR PAIRS IN FPL  */ 06100003
      NUMGOPTR FIXED(8)  CONSTANT(1), /* NO. OF GROUP OCCURRENCE PTRS*/ 06150003
      FREECI1  FIXED(8)  CONSTANT(1), /* FREE RECORD CI NUMBER       */ 06200003
      STRINGNO FIXED(8)  CONSTANT(1), /* NUMBER OF STRINGS (ACB)     */ 06250003
      NUMEXTS  FIXED(8)  CONSTANT(1), /* NUMBER OF EXTENTS FOR CRA   */ 06300003
      CNTGOPTR FIXED(8)  CONSTANT(2), /* COUNT OF GROUP OCCUR PTRS   */ 06350003
      CLUSTRCI FIXED(8)  CONSTANT(2), /* CLUSTER RECORD CI NUMBER    */ 06400003
      DATBUFNO FIXED(8)  CONSTANT(2), /* NO. OF DATA BUFFERS (ACB)   */ 06450003
      LNCATTR1 FIXED(8)  CONSTANT(1), /* LENGTH OF 'CATTR1' FLAG BYTE*/ 06500003
      INCR1    FIXED(8)  CONSTANT(1), /* INCREMENTING VALUE          */ 06550003
      INCR2    FIXED(8)  CONSTANT(2), /* CONSTANT 2                  */ 06600003
      NUMFPLS  FIXED(8)  CONSTANT(3), /* NUMBER OF FPL'S FOR MODIFY  */ 06650003
      CCRCINO  FIXED(8)  CONSTANT(3), /* CRA CONTROL RECORD CI NO.   */ 06700003
      FREECI4  FIXED(8)  CONSTANT(4), /* FREE RECORD CI NUMBER       */ 06750003
      EXTCINO  FIXED(8)  CONSTANT(5), /* DATA EXTENTION RECORD CI NO.*/ 06800003
      CNTRLENG FIXED(8)  CONSTANT(6), /* TOTAL LENGTH OF CNTRL INFO  */ 06850003
      SYSMASK  BIT(32) CONSTANT('FFDFFFFF'X), /* MASK FOR TURNING OFF   06900003
                                            CPU-SHARE BIT IN DEVICE     06950003
                                            TYPE OPTIONS FIELD       */ 07000003
      NULLDATE BIT(24) CONSTANT('00000F'X), /* NULL EXPIRATION DATE  */ 07050003
      CI2ASSOC BIT(24) CONSTANT('0006C4'X), /* CI 2 ASSOCIATION      */ 07100003
      XIOPTNS  BIT(8)  CONSTANT('09'X), /* IGGPXIO OPTION CODES      */ 07150003
      AMDIDVAL BIT(8)  CONSTANT('60'X), /* AMDSB ID CHARACTER        */ 07200003
      SHROPTNS BIT(8)  CONSTANT('A0'X), /* REGION/SYSTEM SHARE OPTNS */ 07250003
      FREERCID CHAR(1) CONSTANT('F'), /* FREE RECORD ID CHARACTER    */ 07300003
      CCRRECID CHAR(1) CONSTANT('L'), /* CRA CONTROL RECORD ID CHAR  */ 07350003
      STOP     CHAR(2) CONSTANT('NG'), /* LOOP CONTROL - HALT        */ 07400003
      GO       CHAR(2) CONSTANT('GO'), /* LOOP CONTROL - PROCEED     */ 07450003
      NAMEDS   CHAR(8) CONSTANT('NAMEDS  '), /* COMBINATION NAME        07500003
                                                     AND TYPE FIELDS */ 07550003
      NULLDWRD BIT(64)                /* 8-BYTE NULL OWNER ID FIELD  */ 07600003
               CONSTANT('FFFFFFFFFFFFFFFF'X);                           07650003
 /********************************************************************/ 07700003
 /*             O T H E R     D E C L A R A T I O N S                */ 07750003
 /********************************************************************/ 07800003
    DECLARE                                                             07850003
      DCRACI2A PTR(24) BASED(CCACPE3); /* ASSOCIATION FIELDS IN CI 2 */ 07900003
    DECLARE                                                             07950003
      DCRADDNM CHAR(8) BASED;       /* DUMMY DDNAME FOR CRA ACB      */ 08000003
    DECLARE                                                             08050003
      DCRARCTR FIXED(31) REG(4) RSTD; /* RECORD CI COUNTER           */ 08100003
./  ADD  SSI=42751311,NAME=IGGMDRWA
 /********************************************************************/ 00900003
 /*                                                                  */ 00902003
 /*   MACRO NAME = IGGMDRWA                                          */ 00904003
 /*                                                                  */ 00906003
 /*   DESCRIPTIVE NAME = DSCB READ WORKAREA                          */ 00908003
 /*                                                                  */ 00910003
 /*   FUNCTION = USED TO READ FORMAT 1 DSCB FOR CATALOGS AND         */ 00912003
 /*              CLUSTER RECORD OF CATALOGS DURING OPEN OF A         */ 00914003
 /*              CATALOG (NON-BUILD CASE).                           */ 00916003
 /*                                                                  */ 00918003
 /*   INCLUDED MACROS = NONE                                         */ 00920003
 /*                                                                  */ 00922003
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 00924003
 /*                                                                  */ 00926003
 /*   CREATED BY: VSAM CATALOG OPEN ACB PROCESSOR (IFG0191X)         */ 00928003
 /*                                                                  */ 00930003
 /*   STATUS = VS/2 RELEASE 3   (CHANGE FLAG @Y30SSXX)               */ 00932003
 /*                                                                  */ 00934003
 /*   DATE OF LAST CHANGE = 17 JUL 74                                */ 00936003
 /*                                                                  */ 00938003
 /********************************************************************/ 00940003
 %IF SYSTEM ='DOS' %THEN %GOTO DRWAWP1;                                 10800003
    DECLARE                                                             11200003
      1 IGGMDRWA BASED(CAXDRWP),    /* BASE IS IN CAXWA              */ 11700003
        2 DRWDEB CHAR(48) BDY(WORD), /* DEB AREA                     */ 12600003
          3 * CHAR(16),             /* FILLER                        */ 13500003
          3 DRWDEXT PTR(8),         /* DEB EXTENT COUNT              */ 14400003
          3 * CHAR(7),              /* FILLER                        */ 15300003
          3 DRWDID PTR(8),          /* DEB ID                        */ 16200003
          3 DRWDDCB PTR(24),        /* DCB PTR                       */ 17100003
          3 DRWDEXS PTR(8),         /* EXTENT SCALE                  */ 18000003
          3 DRWDAPP PTR(24),        /* IOS APP. TABLE ADDR           */ 18900003
          3 DRWDMOD PTR(8),         /* DEVICE MOD.                   */ 19800003
          3 DRWDUCB PTR(24),        /* UCB ADDR                      */ 20700003
          3 DRWDBB  PTR(15),        /* BB FROM SEEK                  */ 21600003
          3 DRWSCC  CHAR(4),        /* START CCHH OF EXTENT          */ 22500003
          3 DRWECC  CHAR(4),        /* END CCHH OF EXTENT            */ 23400003
          3 DRWNTK  CHAR(2),        /* NO. TRACKS IN EXTENT          */ 24300003
        2 DRWDEBP PTR(31),          /* DCB DEB PTR                   */ 25200003
        2 DRWECB PTR(31),           /* ECB                           */ 26100003
          3 DRWECMP PTR(8),         /* ECB COMP CODE                 */ 27000003
          3 *       PTR(24),        /* RESERVED                      */ 27900003
        2 DRWIOB CHAR(32) BDY(WORD), /* IOB AREA                     */ 28800003
          3 *  CHAR(2),             /* FILLER                @XA03929*/ 28850003
          3 DRWISN0 CHAR(1),        /* SENSE BYTE ZERO       @XA03929*/ 28900003
          3 DRWISN1 CHAR(1),        /* SENSE BYTE ONE        @XA03929*/ 28950003
          3 DRWIECB PTR(31),        /* ECB PTR                       */ 30600003
          3 *       CHAR(8),        /* FILLER                        */ 31500003
          3 DRWSCP  PTR(31),        /* CHANNEL PROG START ADDR       */ 32400003
          3 DRWIDCB PTR(31),        /* IOB DCB PTR                   */ 33300003
          3 *       CHAR(8),        /* FILLER                        */ 34200003
        2 DRWSEEK CHAR(8),          /* IOB SEEK FIELD                */ 35100003
          3 * CHAR(3),              /* M B B   AREA          @XA03929*/ 35150003
          3 DRWSECC CHAR(2),        /* C C OF SEEK           @XA03929*/ 35200003
          3 DRWSEHH CHAR(2),        /* H H OF SEEK           @XA03929*/ 35250003
          3 DRWSER  CHAR(1),        /* R OF SEEK             @XA03929*/ 35300003
        2 DRWCCW CHAR(104) BDY(DWORD), /* CCW AREA                   */ 36000003
          3 DRWCCW0 CHAR(8),        /* SET SECTOR CCW                */ 37800003
          3 DRWCCW1 CHAR(8),        /* SEARCH ID EQUAL               */ 38700003
          3 DRWCCW2 CHAR(8),        /* TIC  CCW1                     */ 39600003
          3 DRWCCW3 CHAR(8),        /* READ DATA                     */ 40500003
          3 DRWCCW4 CHAR(8),        /* SEARCH EQ OR HI               */ 41400003
          3 DRWCCW5 CHAR(8),        /* TIC CCW9                      */ 42300003
          3 DRWCCW6 CHAR(8),        /* SEARCH EQ/HI KEY              */ 43200003
          3 DRWCCW7 CHAR(8),        /* READ COUNT                    */ 44100003
          3 DRWCCW8 CHAR(8),        /* TIC CCW11                     */ 45000003
          3 DRWCCW9 CHAR(8),        /* SEARCH EQ/HI KEY              */ 45900003
          3 DRWCCW10 CHAR(8),       /* TIC CCW4                      */ 46800003
          3 DRWCCW11 CHAR(8),       /* READ DATA                     */ 47700003
          3 DRWCCW12 CHAR(8),       /* READ COUNT                    */ 48600003
        2 DRWTHETA PTR(8),          /* SET SECTOR THETA              */ 49500003
        2 *        PTR(8),          /* RESERVED              @XA03929*/ 50400003
        2 DRWF4TC CHAR(2),          /* TRACKS PER CYLINDER   @XA03929*/ 50450003
        2 DRWRIA  CHAR(512),        /* READ IN AREA                  */ 51300003
          3 DRWSKEY CHAR(44),       /* SEARCH KEY ARG                */ 52200003
          3 DRWDSCB CHAR(140),      /* DSCB AREA F4 OR F1            */ 53100003
          3 DRWCNT CHAR(5),         /* COUNT FIELD FOR RESEEK        */ 54000003
          3 DRWHPCHR CHAR(5);       /* HI WATER MARK CCHHR           */ 54900003
    DECLARE                                                             55300003
      DRWDCB CHAR(44) DEF(DRWDEB) POS(5) BDY(WORD); /* DCB           */ 55800003
 %IF SYSTEM ¬='DOS' %THEN %GOTO DRWAWP2;                                56700000
 %DRWAWP1:;                                                             57600000
    DECLARE                                                             58000003
      1 IGGMDRWA BASED(CAXDRWP),    /* BASE IS IN CAXWA              */ 58500003
        2 DRWCCB CHAR(16) BDY(DWORD), /* DOS CCB FOR PIOCS           */ 59400003
          3 DRWRCNT FIXED(15),      /* RESIDUAL COUNT                */ 60300003
          3 DRWTRINF CHAR(2),       /* TRANSMISSION INFORMATION      */ 61200003
            4 DRWBYTE2 CHAR(1),     /* CCB-BYTE 2                    */ 62100003
            4 DRWBYTE3 CHAR(1),     /* CCB-BYTE 3                    */ 63000003
          3 DRWCSWSB BIT(16),       /* CSW STATUS BITS               */ 63900003
          3 DRWSUAD CHAR(2),        /* SYMBOLIC UNIT ADDRESS         */ 64800003
          3 * CHAR(1),              /* RESERVED FOR LIOCS            */ 65700003
          3 DRWSCP PTR(24),         /* A(CHANNEL PROGRAM)            */ 66600003
          3 * CHAR(1),              /* RESERVED FOR PIOCS            */ 67500003
          3 * PTR(24),              /* CCW ADDRESS IN CSW            */ 68400003
        2 DRWSEEK CHAR(8),          /* IOB SEEK FIELD                */ 69300003
        2 DRWCCW  CHAR(104) BDY(DWORD), /* CCW AREA                  */ 70200003
          3 DRWCCW0 CHAR(8),        /* SET SECTOR CCW                */ 72000003
          3 DRWCCW1 CHAR(8),        /* SEARCH ID EQUAL               */ 72900003
          3 DRWCCW2 CHAR(8),        /* TIC  CCW1                     */ 73800003
          3 DRWCCW3 CHAR(8),        /* READ DATA                     */ 74700003
          3 DRWCCW4 CHAR(8),        /* SEARCH EQ OR HI               */ 75600003
          3 DRWCCW5 CHAR(8),        /* TIC CCW9                      */ 76500003
          3 DRWCCW6 CHAR(8),        /* SEARCH EQ/HI KEY              */ 77400003
          3 DRWCCW7 CHAR(8),        /* READ COUNT                    */ 78300003
          3 DRWCCW8 CHAR(8),        /* TIC CCW11                     */ 79200003
          3 DRWCCW9 CHAR(8),        /* SEARCH EQ/HI KEY              */ 80100003
          3 DRWCCW10 CHAR(8),       /* TIC CCW4                      */ 81000003
          3 DRWCCW11 CHAR(8),       /* READ DATA                     */ 81900003
          3 DRWCCW12 CHAR(8),       /* READ COUNT                    */ 82800003
        2 DRWTHETA PTR(8),          /* SET SECTOR THETA              */ 83700003
        2 *        PTR(24),         /* RESERVED                      */ 84600003
        2 DRWRIA  CHAR(512),        /* READ IN AREA                  */ 85500003
          3 DRWSKEY CHAR(44),       /* SEARCH KEY ARG                */ 86400003
          3 DRWDSCB CHAR(140);      /* DSCB AREA F4 OR F1            */ 87300003
 %DRWAWP2:;                                                             89100000
./  ADD  SSI=81740067,NAME=IGGMEND
 % IGGMEND:                                                             03250037
           MACRO ;                                                      06000000
           DCL IGGGVCCT CHAR EXT ;  /* PROCESSING CONTROL VARIABLE   */ 09000037
           DCL (BLANKS,ASTERICS) CHAR;  /* COMMENT VARIABLES @Y30SSDW*/ 09050037
           BLANKS = REPEAT(' ',65); /* PADDING - 66 BLANKS   @Y30SSDW*/ 09100037
           ASTERICS = REPEAT('*',65); /* A ROW OF ASTERISKS  @Y30SSDW*/ 09150037
           ANS ('CALL EXIT;') SKIP COL(12);                             12000037
           ANS ('/* RETURN TO CALLER         */') COL(37);/* @Y30SSDW*/ 15000037
           IF IGGGVCCT = '3' THEN       /*ANY INNER PROCS           */  18000000
             DO;                        /* YES-CLOSE LAST INNER PROC*/  21000000
               ANS ('END ;') SKIP COL(12);                              24000000
               ANS ('/* END OF INNER PROCEDURE   */') COL(37);          27000037
             END;                                                       30000000
           ANS ('@EJECT ASSEMBLE;') SKIP COL(2);           /*@ZA29164*/ 33000037
           ANS (COMMENT(ASTERICS)) COL(2);                /* @Y30SSDW*/ 36050037
           ANS (COMMENT(BLANKS)) COL(2);                  /* @Y30SSDW*/ 36100037
           ANS ('/') COL(2);                              /* @Y30SSDW*/ 36150037
           ANS ('*') COL(3);                              /* @Y30SSDW*/ 36200037
           ANS ('RETURN-TO-CALLER  PROCEDURE-EXITING  SUBFUNCTION')     36250037
               COL(13);                                   /* @Y30SSDW*/ 36260037
           ANS ('*') COL(70);                             /* @Y30SSDW*/ 36300037
           ANS ('/') COL(71);                             /* @Y30SSDW*/ 36350037
           ANS (COMMENT(BLANKS)) COL(2);                  /* @Y30SSDW*/ 36400037
           ANS (COMMENT(ASTERICS)) COL(2);                /* @Y30SSDW*/ 36450037
           ANS ('EXIT:     PROC OPTIONS(NOSAVEAREA,NOSAVE);')           39000000
              SKIP COL(2);                                              42000000
           ANS ('/* SPECIFY PROCEDURE OPTIONS     */')                  42050037
               COL(37);                                   /* @Y30SSDW*/ 42100037
           ANS ('GEN(LM 12,14,0(13));') SKIP COL(12);                   45000000
           ANS ('/* RESTORE REGISTERS OF CALLER */')                    48000037
                COL(37);                                  /* @Y30SSDW*/ 48010037
           ANS ('GEN(MVI 12(13),255);') SKIP COL(12);       /* Y02020*/ 48050002
           ANS ('/* MARK END OF PDL          */') COL(37);  /* Y02020*/ 48100037
           ANS ('GEN(BR 14);') SKIP COL(12);                            51000000
           ANS ('/* RETURN TO CALLER         */') COL(37);              54000037
           ANS ('PATCH:    GEN(DC (12+((*+139-@MAINENT)/140))A(0));')   57000000
             SKIP COL(2);                                               60000000
           ANS ('/* PATCH AREA               */') COL(41);              63000037
           ANS ('END ;') SKIP COL(12);                                  66000000
           ANS ('/* END OF EXIT PROCEDURE   */') COL(37); /* @Y30SSDW*/ 69000037
           ANS ('END ;') SKIP COL(12);  /*END OF OUTER PROCEDURE    */  72000037
 % END ;                                                                75000000
./  ADD  SSI=42790063,NAME=IGGMF4WA
 /********************************************************************/ 02000003
 /*                                                                  */ 02100003
 /*   MACRO NAME = IGGMF4WA                                          */ 02200003
 /*                                                                  */ 02300003
 /*   DESCRIPTIVE NAME = READ/WRITE FORMAT 4 DSCB WORKAREA           */ 02400003
 /*                                                                  */ 02500003
 /*   FUNCTION = MAPPING MACRO FOR THE FORMAT 4 DSCB AND A           */ 02600003
 /*              RELATED BUFFER/WORKAREA.                            */ 02700003
 /*                                                                  */ 02800003
 /*   INCLUDED MACROS = NONE                                         */ 02900003
 /*                                                                  */ 03000003
 /*   METHOD OF ACCESS = PL/S - RESPECIFY A BASE FOR IGGMF4WA        */ 03100003
 /*                                                                  */ 03200003
 /*   STATUS = VS/2 RELEASE 3   (CHANGE FLAG @Y30SSXX)               */ 03300003
 /*                                                                  */ 03400003
 /*   DATE OF LAST CHANGE = 17 JUL 74                                */ 03500003
 /*                                                                  */ 03600003
 /********************************************************************/ 03700003
    DECLARE                                                             03800003
      1 IGGMF4WA BDY(DWORD) BASED,  /* FORMAT 4 DSCB WORKAREA        */ 10000003
        2 F4WDEB CHAR(48) BDY(DWORD), /* DEB AREA                    */ 12000003
          3 *  CHAR(16),            /* FILLER                        */ 14000003
          3 F4WEXT PTR(8),          /* EXTENT COUNT                  */ 16000003
          3 *  CHAR(7),             /* FILLER                        */ 18000003
          3 F4WDID PTR(8),          /* DEB ID                        */ 20000003
          3 F4WDDCB PTR(24),        /* DCB PTR                       */ 22000003
          3 F4WDEXS PTR(8),         /* EXTENT SCALE                  */ 24000003
          3 F4WDAPP PTR(24),        /* IOS APP. TABLE ADDRESS        */ 26000003
          3 F4WDMOD PTR(8),         /* DEVICE MODIFIER               */ 28000003
          3 F4WDUCB PTR(24),        /* UCB ADDRESS                   */ 30000003
          3 F4WDBB  PTR(15),        /* BB FROM SEEK                  */ 32000003
          3 F4WSCC  CHAR(4),        /* START CCHH OF EXTENT          */ 34000003
          3 F4WECC  CHAR(4),        /* END CCHH OF EXTENT            */ 36000003
          3 F4WNTK  CHAR(2),        /* NO. OF TRACKS IN EXTENT       */ 38000003
        2 F4WDEBP   PTR(31),        /* DCB DEB PTR                   */ 40000003
        2 F4WECB    PTR(31),        /* ECB                           */ 42000003
          3 F4WECMP PTR(8),         /* ECB COMPLETION CODE           */ 44000003
          3  *      PTR(24),        /* RESERVED                      */ 46000003
        2 F4WIOB CHAR(32) BDY(WORD), /* IOB                          */ 48000003
          3 *       PTR(31),        /* FILLER                        */ 50000003
          3 F4WIECB PTR(31),        /* PTR TO ECB                    */ 52000003
          3 *       CHAR(8),        /* FILLER                        */ 54000003
          3 F4WSCP  PTR(31),        /* PTR TO CHANNEL PROGRAM START  */ 56000003
          3 F4WIDCB PTR(31),        /* PTR TO DCB                    */ 58000003
          3 *       CHAR(8),        /* FILLER                        */ 60000003
        2 F4WSEEK   CHAR(8),        /* SEEK FIELD                    */ 62000003
        2 F4WCCW CHAR(24) BDY(DWORD), /* CHANNEL PROGRAM AREA        */ 64000003
          3 F4WCCW1 CHAR(8),        /* SEARCH ID EQUAL               */ 66000003
          3 F4WCCW2 CHAR(8),        /* TIC CCW1                      */ 68000003
          3 F4WCCW3 CHAR(8),        /* READ OR WRITE DATA            */ 70000003
        2 F4WBUF    CHAR(140);      /* BUFFER AREA                   */ 72000003
    DECLARE                                                             74000003
      F4WDCB CHAR(44) DEF(F4WDEB) POS(5); /* DCB                     */ 76000003
./  ADD  SSI=42750178,NAME=IGGMGVO
 /********************************************************************/ 02000003
 /*                                                                  */ 02002003
 /*   MACRO NAME = IGGMGVO                                           */ 02004003
 /*                                                                  */ 02006003
 /*   DESCRIPTIVE NAME = VOLUME INFORMATION SET OF FIELDS            */ 02008003
 /*                                                                  */ 02010003
 /*   FUNCTION = MAPPING FOR THE VOLUME OCCURRENCE FIELDS AS THEY    */ 02012003
 /*              APPEAR IN THE RECORDS.  ALSO, A MAPPING OF THE      */ 02014003
 /*              EXTENT STRUCTURE IN THE VOLUME OCCURRENCES.         */ 02016003
 /*                                                                  */ 02018003
 /*   INCLUDED MACROS = NONE                                         */ 02020003
 /*                                                                  */ 02022003
 /*   METHOD OF ACCESS = PL/S - RESPECIFY A BASE FOR GVO             */ 02024003
 /*                             AND/OR CMFXECTS(*)                   */ 02026003
 /*                                                                  */ 02028003
 /*   STATUS = VS/2 RELEASE 3   (CHANGE FLAG @Y30SSXX)               */ 02030003
 /*                                                                  */ 02032003
 /*   DATE OF LAST CHANGE = 17 JUL 74                                */ 02034003
 /*                                                                  */ 02036003
 /********************************************************************/ 02038003
 /********************************************************************/ 02040003
 /*         VOLUME  GROUP  OCCURRENCE  AS  IN  THE  RECORDS          */ 02042003
 /********************************************************************/ 02044003
    DECLARE                                                             02046003
      1 GVO BASED,                   /* VOLUME OCCURRENCE STRUCTURE  */ 04000003
        2 CMFLDEVT PTR(32) BDY(BYTE),/* DEVICE TYPE                  */ 06000003
        2 CMFLVOL  CHAR(6),          /* VOLUME SERIAL NUMBER         */ 08000003
        2 CMFLFLSQ FIXED(15),        /* FILE SEQUENCE NUMBER         */ 10000003
        2 CMFLVLFL BIT(8),           /* VOLUME FLAGS                 */ 12000003
          3 CMFLVLPR BIT(1),         /* PRIME VOLUME                 */ 14000003
          3 CMFLVLCN BIT(1),         /* CANDIDATE VOLUME             */ 16000003
          3 CMFLVLOV BIT(1),         /* OVERFLOW VOLUME              */ 18000003
          3 *        BIT(5),         /* RESERVED                     */ 20000003
        2 CMFLNOEX PTR(8),           /* NO. OF EXTENTS               */ 22000003
        2 CMFLHKBA PTR(32) BDY(BYTE),/* HIGH KEY CI VALUE, RANGE     */ 24000003
        2 CMFLHUBA PTR(32) BDY(BYTE),/* HIGH USED RBA                */ 26000003
        2 CMFLHABA PTR(32) BDY(BYTE),/* HIGH ALLOCATED RBA           */ 28000003
        2 CMFLPHYB PTR(32) BDY(BYTE),/* PHYSICAL BLOCKSIZE           */ 30000003
        2 CMFLNBTK FIXED(15),        /* BLOCKS PER TRACK             */ 32000003
        2 CMFLNTKA FIXED(15),        /* TRACKS PER CONTROL AREA      */ 34000003
        2 CMFLITEX BIT(8),           /* TYPE OF EXTENT               */ 36000003
          3 CMFLSSDT BIT(1),         /* SEQUENCE SET WITH DATA       */ 38000003
          3 CMFLNOPF BIT(1),         /* NOT PREFORMATTED SPACE       */ 40000003
          3 *        BIT(6),         /* RESERVED                     */ 42000003
        2 CMFLSSDS FIXED(15) BDY(BYTE),/* SS NO. OF DATA SET DIRCTRY */ 44000003
        2 CMFOVERL CHAR(14);         /* STRUCTURE END INDICATION        44050003
                                                               Y02020*/ 44100002
 /********************************************************************/ 44102003
 /*                TRACK  OVERFLOW   (PAGE SPACE)              Y02020*/ 44110003
 /********************************************************************/ 44120003
    DECLARE                                                             44130003
      1 CMFOVLAY BASED (ADDR(CMFOVERL)-8),                  /* Y02020*/ 44150003
        2 CMFBYTRK FIXED(31) BDY(BYTE),/* BYTES PER TRACK (PAGE SPACE)  44200003
                                                               Y02020*/ 44210002
        2 CMFBYTAU FIXED(31) BDY(BYTE),/* BYTES PER ALLOCATION UNIT     44250003
                                                               Y02020*/ 44300002
        2 CMFLLKLN FIXED(15) BDY(BYTE),/* LOW KEY VALUE LENGTH       */ 46000003
        2 CMFLHKLN FIXED(15) BDY(BYTE),/* HIGH KEY VALUE LENGTH      */ 48000003
        2 CMFLEXLN FIXED(15) BDY(BYTE),/* LENGTH OF EXTENTS          */ 50000003
        2 CMFLEND CHAR(0);          /* END OF VOLUME OCCUR FIELDS    */ 52000003
 /********************************************************************/ 54000003
 /*            EXTENT  STRUCTURE  IN  VOLUME  OCCURRENCES            */ 54500003
 /********************************************************************/ 55000003
    DECLARE                                                             55500003
      1 CMFXECTS (*) CHAR(20) BASED, /* EXTENT STRUCTURE             */ 56000003
        2 CMFXEXSS FIXED(15) BDY(BYTE),/* SPACE SEQUENCE NO.         */ 58000003
        2 CMFXEXST CHAR(4),          /* STARTING CCHH                */ 60000003
          3 CMFXSTA PTR(31) BDY(BYTE),/* ARITHMETIC FORM - CCHH      */ 62000003
            4 CMFXSTCC FIXED(15) BDY(BYTE),/* CYLINDER START         */ 64000003
            4 CMFXSTHH FIXED(15) BDY(BYTE),/* TRACK START            */ 66000003
        2 CMFXEXED CHAR(4),          /* ENDING CCHH                  */ 68000003
          3 CMFXEDA PTR(31) BDY(BYTE),/* ARITHMETIC FORM - CCHH      */ 70000003
            4 CMFXEDCC FIXED(15) BDY(BYTE),/* CYLINDER END           */ 72000003
            4 CMFXEDHH FIXED(15) BDY(BYTE),/* TRACK END              */ 74000003
        2 CMFXNOTT FIXED(15) BDY(BYTE),/* NO. TRACKS IN EXTENT       */ 76000003
        2 CMFXLRBA PTR(32) BDY(BYTE),/* STARTING DDDD IN EXTENT      */ 78000003
        2 CMFXHRBA PTR(32) BDY(BYTE);/* ENDING DDDD IN EXTENT        */ 80000003
./  ADD  SSI=81740071,NAME=IGGMODUL
 %IGGMODUL:                                                             03000000
           MACRO KEYS(NOPR,MNAME,BASE2);/*GENERATES OUTER PROC STMTS*/  06000037
                                        /*AS MODULE HEADERS         */  06050037
           DCL IGGGVCCT CHAR EXT;       /*OUTER-INNER PROC CTRL VAR */  06100037
           DCL IGGBASE2 CHAR EXT;   /* BASE REG 2 VARIABLE   @ZA29164*/ 06150037
           DCL IGGMODID CHAR EXT;       /*MODULE ID          @Y30SSPJ*/ 06200037
           DCL (MODNAME,RID1,RID2,CVAL) CHAR;              /*@Y30SSPJ*/ 06250037
           DCL (NUMID1,NUMID2,NVAL) FIXED;                 /*@Y30SSPJ*/ 06300037
           DCL (DEFTY,UNDEF) CHAR;  /*                       @ZA29164*/ 06350037
           DEFTY = 'T''';           /*                       @ZA29164*/ 06400037
           UNDEF = 'U';             /*                       @ZA29164*/ 06450037
           IGGBASE2 = BASE2(1);     /* SET SECOND BASE REG   @ZA29164*/ 06500037
           MODNAME = MNAME(1);          /* SET MODULE NAME   @Y30SSPJ*/ 12200037
           IGGMODID=QUOTE(MODNAME(7:8));/* SET MODULE ID     @Y30SSPJ*/ 12250037
           RID1 = MODNAME(7:7);         /* 1ST BYTE MODID    @Y30SSPJ*/ 12300037
           RID2 = MODNAME(8:8);         /* 2ND BYTE MODID    @Y30SSPJ*/ 12350037
          NUMID1=INDEX(EBCDIC,RID1);/*NUMERIC REPRESENTATION @Y30SSPJ*/ 12400037
          NUMID2=INDEX(EBCDIC,RID2);/*NUMERIC REPRESENTATION @Y30SSPJ*/ 12450037
       NUMID1=16777216*(NUMID1-128);/*POSITIVE ID1 IN BYTE 1 @Y30SSPJ*/ 12500037
           NUMID2=(65536*NUMID2)-1; /*SET ID2 IN NEXT BYTE   @Y30SSPJ*/ 12550037
           NVAL=-2147483647+NUMID1+NUMID2; /*SUM ID1, ID2,   @Y30SSPJ*/ 12600037
           CVAL = CHAR(NVAL);       /*CONVERT TO CHAR STRING @Y30SSPJ*/ 12650037
           IF NOPR(1) ¬= '*' THEN   /* SHORT FORM MACRO      @Y30SSPJ*/ 12700037
             DO;                    /* YES-SHORT FORM        @Y30SSPJ*/ 12750037
               IF IGGBASE2 ¬= '' THEN/* BASE 2 SPECIFIED?    @ZA29164*/ 12800037
                 DO;                /*  YES                  @ZA29164*/ 12850037
                   ANS('GEN;') SKIP COL(10);/*               @ZA29164*/ 12900037
                   ANS('MACRO') SKIP COL(10);/*              @ZA29164*/ 12950037
                   ANS('RLDSBREG &NAME') SKIP COL(10);/*     @ZA29164*/ 13000037
                   ANS('AIF ('||DEFTY||'&NAME NE '||                    13050037
                     QUOTE(UNDEF)||').SKIP') NORESCAN SKIP COL(10);     13100037
                   ANS('LA '||IGGBASE2||',4095(0,12)') COL(10);         13150037
                   ANS('RELOAD BASE REG 2') COL(40);/*       @ZA29164*/ 13200037
                   ANS('.SKIP    MEND') COL(1);/*            @ZA29164*/ 13250037
                   ANS('@ENDGEN;') COL(2); /*                @ZA29164*/ 13300037
                 END;               /*                       @ZA29164*/ 13350037
               ELSE;                /*                       @ZA29164*/ 13400037
               ANS (MNAME(1) || ': PROC OPTIONS') SKIP COL(2);          15000037
               ANS ('(REENTRANT,NOSAVEAREA,NOSAVE,NOCODEREG,NODATAREG,  18000037
                  ID);') SKIP COL(18);                                  21000000
               IGGGVCCT = '1';      /*INDICATE OUTER PROC DEFIND*/      24000037
               ANS ('DECLARE IGGSEGBR REG(12) PTR(31) RSTD;')           27000037
                   SKIP COL(12);                          /* @Y30SSDW*/ 27050037
               ANS ('/* MODULE BASE REGISTER     */') COL(41);          30000037
               IF IGGBASE2 ¬= '' THEN/*BASE 2 REG SPECIFIED? @ZA29164*/ 30006037
                 DO;                /* YES                   @ZA29164*/ 30011037
                ANS('DECLARE IGGSEGB2 REG('||IGGBASE2||')PTR(31)RSTD;') 30016037
                 SKIP COL(12);      /*                       @ZA29164*/ 30021037
                ANS('/* MODULE BASE 2 REGISTER */')COL(41);/*@ZA29164*/ 30026037
                 END;               /*                       @ZA29164*/ 30031037
               ELSE;                /*                       @ZA29164*/ 30036037
             END;                                          /*@Y30SSPJ*/ 30050037
           ELSE;                                           /*@Y30SSPJ*/ 30100037
           ANS ('/*    NUMERIC MODULE ID VALUE USED FOR PROBLEM ' ||    30150037
                'DETERMINATION */') SKIP COL(12);          /*@Y30SSPJ*/ 30200037
          ANS ('DECLARE IGGSEGID FIXED(31) CONSTANT(-' || CVAL || ');') 30250037
             SKIP COL(12);                                 /*@Y30SSDW*/ 30300037
           ANS ('/* MODULE ID VALUE */') COL(56);          /*@Y30SSPJ*/ 30350037
           ANS ('@EJECT ASSEMBLE;') SKIP COL(2);           /*@ZA29164*/ 30400037
 % END ;                                                                30450037
./  ADD  SSI=81740073,NAME=IGGMPROC
 % IGGMPROC:                                                            01000000
           MACRO KEYS(PNAME,TYPE,CALLED);                               02000000
           DCL IGGGVCCT CHAR EXT ;       /*CONTROL VARIABLE         */  03000000
           DCL IGGFPINT CHAR EXT;   /* INT PROC GLOBAL SW    @ZA29164*/ 03020037
           DCL IGGBASE2 CHAR EXT;        /* BASE REGISTER    @ZA95164*/ 03050037
           DCL PROCNAME CHAR ;           /* PROCEDURE NAME          */  04000000
           DCL (CBSW,NUSW,IESW) CHAR ;   /*PROCESSING CONTROL SW.   */  05000000
           DCL (TITLEC,TITLET) CHAR ;    /*TITLE WORK VAR.          */  06000000
           DCL BEGLABEL CHAR;       /* LABEL VARIABLE        @ZA29164*/ 06050037
           DCL SFIDNAMELOVAR CHAR;                                      07000000
           DCL (BLANKS,ASTERICS) CHAR;   /*COMMENT VARIABLES @Y30SSPJ*/ 07050037
           DCL (RX5,RX6,RX7,RX8,RX9,RX10)CHAR;/* REG VAR     @ZA95164*/ 07052037
           IF IGGBASE2¬='5' THEN    /* IS 2ND BASE REG 5?    @ZA95164*/ 07054037
             RX5 = 'R5,';           /* NO                    @ZA95164*/ 07056037
           ELSE;                    /*                       @ZA95164*/ 07058037
           IF IGGBASE2¬='6' THEN    /* IS 2ND BASE REG 6?    @ZA95164*/ 07060037
             RX6 = 'R6,';           /* NO                    @ZA95164*/ 07062037
           ELSE;                    /*                       @ZA95164*/ 07064037
           IF IGGBASE2¬='7' THEN    /* IS 2ND BASE REG 7?    @ZA95164*/ 07066037
             RX7 = 'R7,';           /* NO                    @ZA95164*/ 07068037
           ELSE;                    /*                       @ZA95164*/ 07070037
           IF IGGBASE2¬='8' THEN    /* IS 2ND BASE REG 8?    @ZA95164*/ 07072037
             RX8 = 'R8,';           /* NO                    @ZA95164*/ 07074037
           ELSE;                    /*                       @ZA95164*/ 07076037
           IF IGGBASE2¬='9' THEN    /* IS 2ND BASE REG 9?    @ZA95164*/ 07078037
             RX9 = 'R9,';           /* NO                    @ZA95164*/ 07080037
           ELSE;                    /*                       @ZA95164*/ 07082037
           IF IGGBASE2¬='10' THEN   /* IS 2ND BASE REG 10?   @ZA95164*/ 07084037
             RX10 = 'R10';          /* NO                    @ZA95164*/ 07086037
           ELSE                     /*                       @ZA95164*/ 07088037
             RX9 = 'R9';            /* YES                   @ZA95164*/ 07090037
           BLANKS = REPEAT(' ',65);      /* SET 66 BLANKS    @Y30SSPJ*/ 07100037
           ASTERICS = REPEAT('*',65);    /* SET 66 ASTERICS  @Y30SSPJ*/ 07150037
           CBSW = '2' ;                 /*PRESET TO IND. OUTER PROC */  08000000
           PROCNAME = PNAME(1) ;         /*SET PROC NAME VAR        */  09000000
           IF CALLED(1) = ''             /*IF NOT SPEC              */  10000000
             THEN IESW = 'INT' ;         /*SUPPLY DEFAULT           */  11000000
             ELSE IESW = CALLED(1) ;                                    12000000
           IF TYPE(1) = ''               /*IF NOT SPEC.             */  13000000
             THEN NUSW = 'NES' ;         /*SUPPLY DEFAULT           */  14000000
             ELSE NUSW = TYPE(1) ;                                      15000000
           TITLEC = IESW || 'ERNALLY' ;  /*INITIALIZE TITLE VARS.   */  16000000
           IF NUSW = 'NES'                                              17000000
             THEN TITLET = NUSW || 'TED' ;                              18000000
             ELSE TITLET = NUSW || 'ESTED' ;                            19000000
           IF IGGGVCCT = '' THEN         /*1ST TIME INVOKED  @Y30SSPJ*/ 19050037
             DO;                         /* YES-FIRST TIME   @Y30SSPJ*/ 19100037
               ANS ( COMMENT(ASTERICS) ) COL(2);           /*@Y30SSPJ*/ 19150037
               ANS ( COMMENT(BLANKS) ) COL(2);             /*@Y30SSPJ*/ 19200037
               ANS ('/') COL(2);                           /*@Y30SSPJ*/ 19250037
               ANS ('*') COL(3);                           /*@Y30SSPJ*/ 19300037
               ANS ('PROCNAME  -  PROCEDURE  TITLEC  CALLED  TITLET')   19350037
                  RESCAN COL(12);                          /*@Y30SSDW*/ 19400037
               ANS ('*') COL(70);                          /*@Y30SSPJ*/ 19450037
               ANS ('/') COL(71);                          /*@Y30SSPJ*/ 19500037
               ANS ( COMMENT(BLANKS) ) COL(2);             /*@Y30SSPJ*/ 19550037
               ANS ( COMMENT(ASTERICS) ) COL(2);           /*@Y30SSPJ*/ 19600037
               GOTO PO ;            /*GO BUILD OUTER PROC    @Y30SSPJ*/ 19650037
             END;                                          /*@Y30SSPJ*/ 19700037
           SFIDNAMELOVAR = 'CL8' || QUOTE(PROCNAME);                    22000000
           IF IGGGVCCT ¬= '1' THEN      /*NOT 1ST PROC              */  23000000
             DO;                                                        24000000
               ANS ('CALL EXIT;') SKIP COL(12);                         25000037
               ANS ('/* RETURN TO CALLER         */') COL(41);          26000000
             END;                                                       27000000
           ELSE                                                         28000000
             DO;                                                        28050000
               ANS ('GEN(USING @MAINENT,@15);') SKIP COL(12);           28100037
               ANS ('/* INDICATE AVAILABLE BASE REG  */')               28110037
                   COL(37);                               /* @Y30SSDW*/ 28120037
      ANS ('GEN REFS(CCATEMPS) (USING @DATD-(CCATEMPS-IGGCCA),R11);')   28150000
                  SKIP COL(12);                                         28200000
               IF IESW='INT' THEN   /* INTERNAL PROCEDURE    @ZA29164*/ 28210037
                 IGGFPINT='1';      /* SET GLOBAL SWITCH     @ZA29164*/ 28220037
               ELSE;                /* NO                    @ZA29164*/ 28230037
             END;                                                       28250000
           ANS ('GEN(DS 0F);') SKIP COL(12);                            29000037
           ANS ('/* FULLWORD BOUNDARY ALIGNMENT */')                    29050037
               COL(37);                                   /* @Y30SSDW*/ 29100037
           ANS ('GEN(DC SFIDNAMELOVAR);') SKIP COL(12);                 30000037
           ANS ('/* NAME OF FOLLOWING PROCEDURE */')                    31000037
                COL(37);                                  /* @Y30SSDW*/ 31050037
           IF   IGGGVCCT = '3' THEN     /*INNER PROC (NOT 1ST)      */  32000000
             DO;                                                        33000000
               ANS ('END;') SKIP COL(12);                               34000000
               ANS ('/* END OF INNER PROCEDURE   */') COL(41);          35000037
             END;                                                       36000000
           CBSW = '3' ;                 /*INDICATE INNER PROC       */  37000000
           ANS ('@EJECT ASSEMBLE;') SKIP COL(2) ;          /*@ZA95164*/ 38000037
           ANS ( COMMENT(ASTERICS) ) COL(2);               /*@Y30SSPJ*/ 39050037
           ANS ( COMMENT(BLANKS) ) COL(2);                 /*@Y30SSPJ*/ 39100037
           ANS ('/') COL(2);                               /*@Y30SSPJ*/ 39150037
           ANS ('*') COL(3);                               /*@Y30SSPJ*/ 39200037
           ANS ('PROCNAME  -  PROCEDURE  TITLEC  CALLED  TITLET')       39250037
              RESCAN COL(12);                              /*@Y30SSDW*/ 39300037
           ANS ('*') COL(70);                              /*@Y30SSPJ*/ 39350037
           ANS ('/') COL(71);                              /*@Y30SSPJ*/ 39400037
           ANS ( COMMENT(BLANKS) ) COL(2);                 /*@Y30SSPJ*/ 39450037
           ANS ( COMMENT(ASTERICS) ) COL(2);               /*@Y30SSPJ*/ 39500037
           ANS (PROCNAME || ':') SKIP RESCAN COL(2);                    40000000
           ANS ('PROC OPTIONS(NOSAVEAREA,NOSAVE);') COL(12);            41000000
           ANS ('/* SPECIFY PROCEDURE OPTIONS */') COL(37);/*@Y30SSDW*/ 41050037
           IF IESW = 'EXT' THEN                                         42000000
             DO;                                                        42050000
               ANS ('GEN(ENTRY PROCNAME );') SKIP RESCAN COL(12);       43000000
               ANS ('/* IDENTIFY ENTRY-POINT SYMBOL */')                43010037
                   COL(37);                                /*@Y30SSDW*/ 43020037
             END;                                                       43050000
           IF IGGGVCCT = '1' THEN                                       44000000
             DO;                                          /* @Y30SSDW*/ 44050037
               ANS ('GEN(DROP @15);') SKIP COL(12);       /* @Y30SSDW*/ 45000037
               ANS ('/* DROP AVAILABLE BASE REGISTER */')               45050037
                   COL(37);                               /* @Y30SSDW*/ 45100037
             END;                                         /* @Y30SSDW*/ 45150037
           GOTO PP;                                                     46000000
 PO:       ANS (PROCNAME || ':') SKIP COL(2);                           47000000
           ANS ('PROC OPTIONS') COL(12);                                48000000
           ANS ('(REENTRANT,NOSAVEAREA,NOSAVE,NOCODEREG,NODATAREG,      49000000
                  ID);') SKIP COL(18);                                  50000000
           IGGGVCCT = '1';              /*IND. OUTER PROC DEFINED   */  51000000
           ANS ('DECLARE IGGSEGBR REG(12) PTR(31) RSTD;') SKIP COL(12); 52000037
           ANS ('/* MODULE BASE REGISTER     */') COL(41);              53000000
           IF IGGBASE2 ¬= '' THEN   /* BASE REG 2 SPECIFIED? @ZA95164*/ 53006037
             DO;                    /* YES                   @ZA95164*/ 53011037
               ANS('DECLARE IGGSEGB2 REG('||IGGBASE2||')PTR(31)RSTD;')  53016037
               SKIP COL(12);        /* GEN 2ND BASE DECLARE  @ZA95164*/ 53021037
               ANS('/* BASE 2 REGISTER */') COL(41);       /*@ZA95164*/ 53026037
             END;                   /*                       @ZA95164*/ 53031037
           ELSE;                    /*                       @ZA95164*/ 53036037
 PP:       ANS ('Z' || MACINDEX(2:4) || ':') SKIP COL(2);  /*@Y30SSPJ*/ 53050037
           ANS ('/* LABEL FOR PROCEDURE TRACKING  */')                  53100037
               COL(37);                                   /* @Y30SSDW*/ 53150037
           ANS ('Z' || MACINDEX(2:4) || PROCNAME(5:LENGTH(PROCNAME))    65000000
              || ':') SKIP COL(2);                                      66000000
           ANS ('/* LABEL FOR PROCEDURE TRACKING  */')                  66100037
               COL(37);                                   /* @Y30SSDW*/ 66150037
           ANS ('RFY ('||RX5||RX6||RX7||RX8||RX9||RX10||') UNRSTD;')    67000037
             SKIP COL(12);          /*                       @ZA95164*/ 67010037
           ANS ( '/* PL/S COMPILER WORK REGISTERS */')                  67050037
              COL(37);                                    /* @Y30SSDW*/ 67100037
           ANS ('RFY (R2,R3,R4) RSTD;') SKIP COL(12);                   68000000
           ANS ('/* RESTRICT LOCAL WORK REGISTERS */')                  68050037
              COL(37);                                    /* @Y30SSDW*/ 68150037
           IF NUSW = 'NES' THEN         /*TYPE = NESTED             */  69000000
             DO;                                                        70000000
               ANS ('GEN(STM 12,14,12(13));') SKIP COL(12);             71000000
               ANS ('/* SAVE REGISTERS OF CALLER */') COL(41);          72000037
               ANS ('GEN(LA 13,12(13));') SKIP COL(12);                 73000000
               ANS ('/* POINT TO NEXT SAVE AREA  */') COL(41);          74000000
             END;                                                       75000000
           IF IESW = 'EXT' THEN         /*EXTERNALLY CALLED         */  76000000
             DO;                                                        77000000
               ANS ('GEN(BALR 12,0);') SKIP COL(12);                    78000000
               ANS ('/* ESTABLISH ADDRESSABILITY */') COL(41);          79000000
             END;                                                       80000000
           IF IGGGVCCT = '1' THEN       /*FIRST PROC                */  81000000
             IF IESW = 'EXT' THEN       /*EXTERNALLY CALLED @ZA95164*/  81050037
             DO;                                                        82000000
               ANS ('IGGSEGST: GEN(DS 0H);') SKIP COL(2);               83000000
               ANS ('/* HALFWORD BOUNDARY ALIGNMENT  */')               83050037
                   COL(37);                               /* @Y30SSDW*/ 83100037
               ANS ('GEN(USING *,12);') SKIP COL(12);                   84000000
               ANS ('/* INDICATE AVAILABLE BASE REG */')                84050037
                   COL(37);                               /* @Y30SSDW*/ 84100037
               IF IGGBASE2 ¬= '' THEN/*BASE REG 2 SPECIFIED? @ZA95164*/ 84150037
                 DO;                /* YES                   @ZA95164*/ 84200037
                   ANS ('GEN(USING *+4095,'||IGGBASE2||');')            84250037
                     SKIP COL(12);  /*GEN USING FOR 2ND BASE @ZA95164*/ 84300037
                   ANS('/* INDICATE AVAILABLE BASE REGS */') COL(37);   84350037
                   ANS('GEN(LA '||IGGBASE2||',4095(0,12));') COL(37);   84400037
                   ANS('/* LOAD BAS 2 REG */') COL(37);/*    @ZA95164*/ 84450037
                 END;               /*                       @ZA95164*/ 84500037
               ELSE;                /*                       @ZA95164*/ 84550037
 PQ:           IGGGVCCT = CBSW ;        /*IND. OUTER OR INNER PROC  */  84600037
               RETURN;                                                  84650037
             END;                                                       84700037
           ELSE                     /* INTERNALLY CALLED     @ZA95164*/ 84750037
             GOTO PQ;               /* ALL FINISHED          @ZA95164*/ 84800037
           IF IESW = 'EXT' THEN         /*EXTERNALLY CALLED         */  84850037
            DO;                     /* YES                   @ZA29164*/ 84870037
            IF IGGFPINT='1' THEN    /* FIRST PROC INTERNAL   @ZA29164*/ 84900037
             BEGLABEL='@MAINENT';   /* SET LABEL             @ZA29164*/ 84910037
            ELSE                    /* FIRST PROC EXTERNAL   @ZA29164*/ 84920037
             BEGLABEL='IGGSEGST';   /* SET LABEL             @ZA29164*/ 84930037
             IF IGGBASE2 = '' THEN  /*EXTERNALLY CALLED?     @ZA95164*/ 84940037
               DO;                  /* NO, ONLY 1 BASE REG   @ZA95164*/ 84950037
                 ANS ('GEN(LA 15,*-'||BEGLABEL||'(0,0));')              84960037
                   SKIP COL(12);    /*                       @ZA95164*/ 85050037
                 ANS ('/* COMPUTE MODULE BASE      */')                 85100037
                   COL(41);         /*                       @ZA95164*/ 85150037
                 ANS ('GEN(SR 12,15);') SKIP COL(12);      /*@ZA95164*/ 85200037
                 ANS ('/* SET BASE TO MODULE BASE  */')                 85250037
                   COL(41);         /*                       @ZA95164*/ 85300037
               END;                                        /*@ZA95164*/ 85350037
             ELSE                   /* YES,BASE 2 REG SPEC   @ZA95164*/ 85400037
               DO;                  /*                       @ZA95164*/ 85450037
                 ANS ('GEN(USING *,12);') SKIP COL(12);/*    @ZA95164*/ 85500037
                 ANS ('/* INDICATE AVAILABLE BASE REG */')              85550037
                   COL(37);         /*                       @ZA95164*/ 85600037
                 ANS('GEN(B *+6);') SKIP COL(12); /*         @ZA95164*/ 85650037
               ANS('/* BRANCH AROUND CONSTANT */')COL(37); /*@ZA95164*/ 85700037
                 ANS('GEN(DC AL2(*-'||BEGLABEL||'-4));')  /* @ZA95164*/ 85750037
                   COL(12);         /*                       @ZA29164*/ 85760037
                ANS('/* OFFSET TO MODULE BASE 1*/')COL(37);/*@ZA95164*/ 85800037
                 ANS('GEN(SH 12,*-2);') COL(12);           /*@ZA95164*/ 85850037
                 ANS('/* COMPUTE MODULE BASE 1 */')COL(37);/*@ZA95164*/ 85900037
                 ANS('GEN(LA '||IGGBASE2||',4095(0,12));')              85950037
                   COL(12);         /*                       @ZA95164*/ 86000037
             ANS('/* LOAD BASE 2 REG WITH 4095 */')COL(37);/*@ZA95164*/ 86050037
               ANS('GEN(USING '||BEGLABEL||',12);') SKIP   /*@ZA95164*/ 86100037
                   COL(12);         /*                       @ZA29164*/ 86130037
                 ANS('/* INDICATE AVAILABLE BASE REG1 */')              86160037
                 COL(41);           /*                       @ZA95164*/ 86190037
                 ANS('GEN(USING '||BEGLABEL||'+4095,'||IGGBASE2||');')  86220037
                   SKIP COL(12);    /*                       @ZA95164*/ 86300037
                 ANS('/* INDICATE AVAILABLE BASE REG2 */')              86350037
                   COL(37);         /*                       @ZA95164*/ 86400037
               END;                 /*                       @ZA95164*/ 86450037
           IGGGVCCT = '3' ;             /*IND. NOT 1ST INNER PROC   */  86500037
          END;                      /*                       @ZA29164*/ 86550037
 % END ;                                                                86600037
./  ADD  SSI=50080914,NAME=IGGMSAWA
 /********************************************************************/ 01000003
 /*                                                                  */ 01003003
 /*   MACRO NAME = IGGMSAWA                                          */ 01006003
 /*                                                                  */ 01009003
 /*   DESCRIPTIVE NAME = SUBALLOCATE INTERFACE                       */ 01012003
 /*                                                                  */ 01015003
 /*   FUNCTION = SUBALLOCATE INTERFACE PARAMETER LIST                */ 01018003
 /*              AND WORKAREA MAPPING MACRO.                         */ 01021003
 /*                                                                  */ 01024003
 /*   INCLUDED MACROS = NONE                                         */ 01027003
 /*                                                                  */ 01030003
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */ 01033003
 /*                                                                  */ 01036003
 /*   STATUS = VS/2 RELEASE 3   (CHANGE FLAG @Y30SSXX)               */ 01039003
 /*                                                                  */ 01042003
 /*   DATE OF LAST CHANGE = 17 JUL 74                                */ 01050003
 /*                                                                  */ 01350003
 /********************************************************************/ 01650003
    DECLARE                                                             07000003
      1 SALPARL BASED(CCAALPTR),    /* BASE IS IN IGGCCA             */ 08000003
        3 SALOPTNS PTR(8),          /* ALLOCATION OPTIONS            */ 09000003
        3 *        BIT(8),          /* RESERVED                      */ 15000003
        3 SALSOURC PTR(8),          /* RECORD SOURCE INDICATOR       */ 26000003
        3 SALDSCIN PTR(24) BDY(BYTE), /* OBJECT DATA SET CI NUMBER   */ 32000003
        3 SALPARMS CHAR(8),         /* ALLOCATION PARAMETERS         */ 35000003
          5 SALCALN  FIXED(15) BDY(BYTE), /* CONTROL AREA LENGTH     */ 36000003
          5 SALBLKLN FIXED(15) BDY(BYTE), /* RECORD BLOCK LENGTH     */ 37000003
          5 SALUNITS FIXED(15) BDY(BYTE), /* NUMBER OF UNITS REQUSTED*/ 38000003
          5 SALMXEXT PTR(8),        /* MAX NO. EXTENTS ALLOWED       */ 39000003
          5 *        PTR(8),        /* RESERVED FOR ALIGNMENT        */ 40000003
        3 SALRLIST PTR(32) BDY(BYTE), /* PTR TO RESPONSE LIST        */ 41000003
        3 SALVLIST PTR(32) BDY(BYTE), /* PTR TO USERLIST             */ 42000003
        3 SALAXWA  CHAR(490);       /* IGGPSALL WORK AREA            */ 43000003
 /********************************************************************/ 43050003
 /*         PRLIST - SUBALLOCATE PROCESSING RESPONSE LIST            */ 46000003
 /*                  ENTRIES PARALLEL USERLIST ENTRIES               */ 47000003
 /********************************************************************/ 47500003
    DECLARE                                                             49000003
      1 PRLIST BASED(SALRLIST),     /* BASE IS IN SALPARL            */ 50000003
        3 PRLLN PTR(8),             /* PRL VOL COUNT                 */ 51000003
        3 PRLENT (*) CHAR(2) BDY(BYTE), /* RESPONSE ENTRY            */ 52000003
          5 PRELENTF  FIXED(15) BDY(BYTE), /* SEQUENCE NO. OF DATA   */ 53000003
                                    /* SET DIRECTORY ENTRY           */ 53050003
            7 PRLPAR1 PTR(8),       /* RESPONSE PARAMENTER           */ 54000003
            7 PRLPAR2 PTR(8);       /* RESPONSE PARAMETER            */ 55000003
 /********************************************************************/ 56000003
 /*     CONSTANTS USED TO SET AND/OR TEST FIELDS DECLARED ABOVE      */ 59000003
 /********************************************************************/ 62000003
    DECLARE                         /* ALLOCATION OPTIONS - SALOPTNS */ 65000003
      SACYLOPT BIT(8) CONSTANT('C0'X), /* CYLINDER REQUEST           */ 68000003
      SATRKOPT BIT(8) CONSTANT('80'X), /* TRACK REQUEST              */ 71000003
      SARECOPT BIT(8) CONSTANT('40'X), /* RECORD REQUEST (RESERVED)  */ 74000003
      SACANOPT BIT(8) CONSTANT('00'X); /* CANDIDATE REQUEST          */ 77000003
    DECLARE                         /* RECORD SOURCE INDICATOR       */ 80000003
      SARABS   BIT(8) CONSTANT('01'X), /* FIRST VER IN USERLIST IS      83000003
                                          IN RAB 3                   */ 86000003
      SAVRLIST BIT(8) CONSTANT('02'X); /* FIRST VER IN USERLIST IS      89000003
                                          NOT IN RAB'S               */ 92000003
./  ADD  SSI=31320999,NAME=IGGMSG
*                                                                       00010002
*        % GOTO MSGL1; /*                                               00020002
         MACRO                                                          00050002
         IGGMSG                                                         00100002
.* /* START OF SPECIFICATIONS ****                                      00100402
.*                                                                      00100802
.*01  MODULE-NAME = IGGMSG                                              00100902
.*                                                                      00101502
.*01  COPYRIGHT = NONE                                                  00101902
.*                                                                      00105102
.*01  STATUS = OS/VS2 RELEASE 2, LEVEL 0                                00107102
.*                                                                      00109102
.*01  CHANGE-ACTIVITY = NONE                                            00109502
.*                                                                      00109902
.*01  DESCRIPTIVE-NAME = MESSAGE CSECT MAPPING                          00110302
.*                                                                      00110502
.*01  FUNCTION = MAP S/P/D MESSAGE CSECTS                               00110902
.*                                                                      00111202
.*01  NOTES = NONE                                                      00111602
.*                                                                      00111702
.*01  MODULE-TYPE = MACRO                                               00113702
.*02    PROCESSOR = ASSEMBLER-370R  PLS                                 00113902
.*                                                                      00116802
.*02    EXTERNAL-REFERENCES = N/A                                       00116902
.*                                                                      00117002
.*01  INNER-MACROS = NONE                                               00119602
.*                                                                      00119802
.*01  SYSTEM-MACROS = NONE                                              00120002
.*                                                                      00120802
.*                                                                      00121002
.**** END OF SPECIFICATIONS ***/                                        00121202
*% MSGL1:;                                                              00121402
* /* MACCOMP Y-2 SC1D0/SJD48                                         */ 00121602
* /* MACSTAT Y-2 73040/021160                                        */ 00121802
*/*                                                                  */ 00122002
*/* **************************************************************** */ 00123202
*/*                                                                  */ 00126402
*/*            ****** MESSAGE CSECT ******                           */ 00129602
*/*                                                                  */ 00132802
*/*  OS/VS2 RELEASE 2                                                */ 00136002
*/*                                                                  */ 00139202
*/*  METHOD OF ACCESS                                                */ 00142402
*/*     PL/S - RFY MSGINDEX BASED ON A PTR                           */ 00145602
*/*          - DECLARE 'MSGNO' AS NUMBER OF DESIRED MESSAGE          */ 00147602
*/*              OR VARIABLE CONTAINING MESSAGE NUMBER               */ 00148002
*/*     BAL  - FOUR DSECTS ARE PRODUCED.  USING ON A DSECT NAME      */ 00148802
*/*            GIVES ADDRESSABILITY FOR ALL SYMBOLS WITHIN THAT      */ 00152002
*/*            DSECT.  THE DSECT NAMES AND SYMBOLS WITHIN EACH ARE:  */ 00155202
*/*              MSGINDEX - MSGINDLN, MSGINDOF                       */ 00158402
*/*              MSGENTRY - MSGOFF, MSGLNG, MSGOFF1, MSGOFF2,        */ 00161602
*/*                         MSGOFF3, MSGOFF4, MSGOFF5                */ 00164802
*/*              MSGTXTD  - MSGTXT                                   */ 00168002
*/*              MSGTXTFD - MSGLNGF, MSGTXTF                         */ 00171202
*/*                                                                  */ 00174402
*/*  FUNCTION                                                        */ 00177602
*/*     THE MESSAGE CSECT CONTAINS MESSAGES FROM SAM/PAM/DAM CODE.   */ 00180802
*/*      THIS DSECT IS USED TO MAP THOSE MESSAGES.                   */ 00184002
*/*                                                                  */ 00187202
*/* **************************************************************** */ 00190402
*                                                                       00193602
*% GOTO MSGL2; /*                                                       00196802
*        THIS DSECT IS TO COVER THE MESSAGE CSECT.  THE MESSAGE         00200002
*        CSECT IS DIVIDED INTO TWO PARTS                                00250002
*                                                                       00300002
*        THE FIRST IS THE INDEX.  TO FIND THE OFFSET TO A GIVEN         00350002
*        MESSAGE THE FOLLOWING SEQUENCE OF INSTRUCTIONS                 00400002
*        MAY BE USED.                                                   00450002
*              USING MSGINDEX,MSGBASE                                   00500002
*        MXXX  EQU   MSGNO*2                                            00550002
*              LH    RWK1,MSGINDOF+MXXX                                 00600002
*        AT THIS POINT RWK1 HAS THE OFFSET TO THE MESSAGE ENTRY         00700002
*        FROM THE BEGINNING OF THE CSECT.                               00750002
*                                                                       00800002
MSGINDEX DSECT                                                          00850002
MSGINDLN DS    H                        LENGTH OF INDEX                 00900002
MSGINDOF DS    H                        OFFSET TO MESSAGE ENTRY         00950002
*                                                                       01000002
*        ONCE THE MESSAGE ENTRY IS FOUND THE MESSAGE ITSELF IS FOUND    01050002
*        BY ADDING THE MSGOFF FIELD TO THE BEGINNING OF THE ENTRY.      01100002
*        THE OFFSET TO ANY VARIABLE FIELDS THAT MUST BE FILLED IN ARE   01150002
*        CONTAINED IN MSGOFF1 THROUGH MSGOFF5.  MSGLNG CONTAINS THE     01200002
*        LENGTH OF THIS PARTICULAR MESSAGE MINUS ONE.  THE LENGTH IS    01250002
*        ONE LESS TO ALLOW IT TO BE USED IN AN EXECUTE OF A MOVE.       01300002
*                                                                       01350002
MSGENTRY DSECT                                                          01400002
MSGOFF   DS    FL1                      OFFSET TO MESSAGE TEXT FROM     01450002
*                                       BEGINNING OF ENTRY              01500002
MSGLNG   DS    FL1                      LENGTH OF MESSAGE TEXT - 1      01550002
MSGOFF1  DS    FL1                      OFFSET TO FIRST VARIABLE        01600002
MSGOFF2  DS    FL1                      OFFSET TO SECOND VARIABLE       01650002
MSGOFF3  DS    FL1                      OFFSET TO THIRD VARIABLE        01700002
MSGOFF4  DS    FL1                      OFFSET TO FOURTH VARIABLE       01750002
MSGOFF5  DS    FL1                      OFFSET TO FIFTH VARIABLE        01800002
MSGOFF6  DS    FL1                      OFFSET TO SIXTH VARIABLE        01810002
MSGOFF7  DS    FL1                      OFFSET TO SEVENTH VARIABLE      01820002
*                                                                       01850002
*        THIS IS USED TO CREATE A LABEL THAT MAY BE USED IN THE         01900002
*        OBJECT OF AN EXECUTE INSTRUCTION.                              01950002
*                                                                       02000002
MSGTXTD  DSECT                                                          02050002
MSGTXT   DS    CL1                      MESSAGE TEXT                    02100002
*                                                                       02110002
*        THIS SECTION OF THE DSECT DESCRIBES THE NO VARIABLE MESSAGES   02120002
*        SUCH AS THOSE USED IN SYNADAF..                                02130002
*                                                                       02140002
MSGTXTFD DSECT                                                          02142002
MSGLNGF  DS    AL1                      LENGTH OF MESSAGE TEXT          02144002
MSGTXTF  DS    CL1                      MESSAGE TEXT                    02146002
         MEND  , */                                                     02150002
*        % MSGL2:;                                                      02200002
* /* *************************************************************** */ 02250002
* /*                     MESSAGE INDEX SECTION                       */ 02300002
* /* *************************************************************** */ 02450002
*                                                                       02500002
*  DECLARE                                                              02550002
*  1 MSGINDEX BASED BDY(WORD),                                          02600002
*     2 MSGINDLN PTR (15),              /* LENGTH OF INDEX SECTION   */ 02650002
*     2 MSGINDOF(*) PTR (15),           /* OFFSET TO MESSAGE ENTRY   */ 02700002
*                                                                       02750002
* /* *************************************************************** */ 02800002
* /*                     MESSAGE ENTRY SECTION                       */ 02850002
* /* *************************************************************** */ 02900002
*                                                                       02950002
*  1 MSGENTRY BASED(ADDR(MSGINDEX) + MSGINDOF(MSGNO+1)) BDY(HWORD),     03000002
*     2 MSGOFF PTR (8),                 /*OFFSET TO MESSAGE TEXT     */ 03050002
*     2 MSGLNG PTR (8),                 /*LENGTH OF MESSAGE TEXT - 1 */ 03100002
*     2 MSGOFF1 PTR (8),                /*OFFSET TO FIRST VARIABLE   */ 03150002
*     2 MSGOFF2 PTR (8),                /*OFFSET TO SECOND VARIABLE  */ 03250002
*     2 MSGOFF3 PTR (8),                /*OFFSET TO THIRD VARIABLE   */ 03300002
*     2 MSGOFF4 PTR (8),                /*OFFSET TO FOURTH VARIABLE  */ 03350002
*     2 MSGOFF5 PTR (8),                /*OFFSET TO FIFTH VARIABLE   */ 03400002
*     2 MSGOFF6 PTR (8),                /*OFFSET TO SIXTH VARIABLE   */ 03410002
*     2 MSGOFF7 PTR (8),                /*OFFSET TO SEVENTH VARIABLE */ 03420002
*                                                                       03450002
* /* *************************************************************** */ 03500002
* /*                     MESSAGE TEXT                                */ 03550002
* /* *************************************************************** */ 03600002
*                                                                       03650002
*  1 MSGTXTD BASED(ADDR(MSGENTRY) + MSGOFF) BDY(BYTE),                  03700002
*     2 MSGTXT CHAR(*),                 /* MESSAGE TEXT              */ 03750002
* /* *************************************************************** */ 03800002
* /*                     MESSAGE ENTRY NO VARIABLES                  */ 03850002
* /* *************************************************************** */ 03900002
*                                                                       03950002
* 1 MSGTXTFD BASED(ADDR(MSGINDEX) + MSGINDOF(MSGNO+1)) BDY(BYTE),       04000002
*    2 MSGLNGF PTR(8),                  /*LENGTH OF ENTRY            */ 04050002
*    2 MSGTXTF CHAR(*);                 /*MESSAGE TEXT               */ 04100002
*                                                                       04150002
./  ADD  SSI=63070738,NAME=IGGMUPDE
 /********************************************************************/ 00500037
 /*                                                                  */ 00520037
 /*   MACRO NAME = IGGMUPDE                                          */ 00540037
 /*                                                                  */ 00560037
 /*   DESCRIPTIVE NAME = UPDATE-EXTEND COMMON DECLARATIONS           */ 00580037
 /*                                                                  */ 00600037
 /*   FUNCTION = COMMON DECLARATIONS FOR VSAM UPDATE-EXTEND          */ 00620037
 /*                MODULES IGG0CLBB, IGG0CLBC, AND IGG0CLBP,         */ 00640037
 /*                AND FOR DEFINE CRA MODULE IGG0CLB4.               */ 00660037
 /*              CONTAINS COMMON WORK AREA MAPPINGS AND INTERFACE    */ 00680037
 /*                PARAMETER LISTS FOR EXTERNALLY CALLED SUB-        */ 00700037
 /*                FUNCTIONS USED WITHIN THE VSAM UPDATE-EXTEND      */ 00720037
 /*                AND DEFINE CRA FUNCTIONS.                         */ 00740037
 /*                                                                  */ 00760037
 /*   INCLUDED MACROS = IGGMVEDC                                     */ 00780037
 /*                     IGGMCDCL                                     */ 00800037
 /*                     IGGMCMDM                                     */ 00820037
 /*                     IDAAMDSB                                     */ 00840037
 /*                     IGGMSAWA                                     */ 00860037
 /*                                                                  */ 00880037
 /*   METHOD OF ACCESS = PL/S - RESPECIFY A BASE FOR SOME STRUCTURES */ 00900037
 /*                                                                  */ 00920037
 /*   STATUS = VS/2 RELEASE 3   (CHANGE FLAG @Y30SSXX)               */ 00940037
 /*                                                                  */ 00960037
 /*   DATE OF LAST CHANGE = 02 JUL 74                                */ 01000037
 /*                         27 APR 76                        @ZA07574*/ 01040037
 /*                                                                  */ 01080037
 /********************************************************************/ 01160037
 /********************************************************************/ 01240037
 /*           C O N S T A N T     D E C L A R A T I O N S            */ 01320037
 /********************************************************************/ 01400037
    DECLARE                                                             01450037
      KEYLENSP FIXED(31) CONSTANT(128), /* MAX KEY LENGTH INFO       */ 07000037
      MXEXT  FIXED(31)  CONSTANT(123), /* MAX EXTENTS        @XA02392*/ 07500037
      UPDVOL   CHAR(8) CONSTANT('UPDVOL  '), /* UPDATE VOLUME        */ 08000037
                                        /* OCCURRENCE                */ 08500037
      NOAVFPL  FIXED(31)  CONSTANT(2), /* NO. OF MODIFY FPL'S        */ 09000037
      CATDSBGC FIXED(31) CONSTANT(1), /* AMDSB GROUP CODE            */ 09500037
      NOVOLENT FIXED(31) CONSTANT(1), /* NO. OF VOLUME ENTRIES       */ 10000037
      MXALEX   FIXED(31) CONSTANT(5), /* MAX EXTENTS SUBALLOCATE     */ 10500037
      PRENTNO  FIXED(31) CONSTANT(1), /* NO. OF PRLIST ENTRIES       */ 11000037
      MXM      FIXED(31) CONSTANT(256), /* MAX CLEAR                 */ 11500037
      MXEXTC   FIXED(31) CONSTANT(16), /* CATALOG MAX EXTENTS        */ 12000037
      UPWALEN FIXED(31) CONSTANT(512), /* UPDATE WORK AREA LENGTH    */ 12500037
      NOEXTFPL FIXED(31) CONSTANT(1), /* NO. OF MODIFY FPL'S         */ 13000037
      EXTENT   CHAR(8) CONSTANT('EXTENT  '), /* EXTENT NAME          */ 13500037
      CATVOLGC  FIXED(31) CONSTANT(3), /* VOLUME GROUP CODE          */ 14000037
      ITYPEXT CHAR(8) CONSTANT('ITYPEXT '), /* INDICATOR     @Y30SSRS*/ 14500037
                                        /* TYPE OF EXTENT    @Y30SSRS*/ 14700037
      CNTREPNO CHAR(8) CONSTANT('CNTREPNO'), /* MAXIMUM      @Y30SSRS*/ 15000037
                                        /* COUNT OF OCCURR   @Y30SSRS*/ 15200037
      RELREPNO CHAR(8) CONSTANT('RELREPNO'), /* RELATIVE     @Y30SSRS*/ 15500037
                                        /* REPETITION NUMBER @Y30SSRS*/ 15700037
      ENTVOL   CHAR(8) CONSTANT('ENTVOL  '), /* ENTIRE       @Y30SSRS*/ 16000037
                                        /* VOLUME OCCURRENCE @Y30SSRS*/ 16200037
      AMDSBCAT CHAR(8) CONSTANT('AMDSBCAT'), /* AMDSB        @Y30SSRS*/ 16500037
      NODAT    FIXED(31) CONSTANT(1), /* NO. FPL DATA/RNG PAIR       */ 17000037
      NOFPLS   FIXED(31) CONSTANT(2), /* NO. OF FPL'S                */ 17500037
      NAME     CHAR(8) CONSTANT('NAME    '), /* CI NO.       @Y30SSRS*/ 18000037
      TYPE     CHAR(8) CONSTANT('TYPE    '), /* ENTRY TYPE           */ 18500037
      CATCLSID CHAR(1) CONSTANT('C'),  /* CLUSTER ID                 */ 19000037
      CATDATID CHAR(1) CONSTANT('D'), /* DATA ID                     */ 19500037
      CATIXID  CHAR(1) CONSTANT('I'), /* INDEX ID                    */ 20000037
      NOKEYFPL  FIXED(31) CONSTANT(3), /* KEY RANGE EXTEND NO.       */ 20500037
      NONKYFPL  FIXED(31) CONSTANT(1), /* NON-KEY RANGE EXTEND NO.   */ 21000037
      UPEVOL    CHAR(6)   BASED(CTGFLPT(1)); /* MAP VOLSER INPUT     */ 21500037
 /********************************************************************/ 21700037
 /*             WORK AREA FOR SEARCH VOLUME SUB-FUNCTION             */ 22000037
 /********************************************************************/ 22100037
    DECLARE                                                             22200037
      1 UPSVOL BASED(ADDR(IDAAMDSB)+LENGTH(IDAAMDSB)), /* PARAMETERS */ 22500037
        2 UPLKEYLN  FIXED(15),      /* LOW KEY LENGTH                */ 23000037
        2 UPHKEYLN  FIXED(15),      /* HIGH KEY LENGTH               */ 23500037
        2 UPLKEYPT  PTR(31),        /* LOW KEY POINTER               */ 24000037
        2 UPHKEYPT  PTR(31),        /* HIGH KEY POINTER              */ 24500037
        2 UPVOLSER  CHAR(6),        /* VOLUME SERIAL NUMBER          */ 25000037
        2 UPSREL    FIXED(15),      /* RELATIVE REPETITION   @Y30SSRS*/ 25500037
                                    /* NO. (RELREPNO)        @Y30SSRS*/ 25550037
        2 UPSCNT    FIXED(15),      /* MAX NO. OF REPETITION @Y30SSRS*/ 26000037
                                    /* NOS. FOR PROCESSING   @Y30SSRS*/ 26050037
        2 UPSEND    CHAR(0);        /* WORKAREA END                  */ 26500037
    DECLARE KEYINFO CHAR(1) BASED(R2+UPLKEYPT); /* MAP LOW KEY AREA  */ 27000037
    DECLARE ENTVOL1 CHAR(256) BASED(ADDR(UPREND)); /* MAP VOL OCCURR */ 27500037
    DECLARE ENTVOL2 CHAR(256) BASED(CTGFLPT(1)); /* MAP VOL OCCURR   */ 28000037
 /********************************************************************/ 28040037
 /*              MAPPING  FOR  'RELREPNO'  INFORMATION               */ 28080037
 /********************************************************************/ 28120037
    DECLARE                                                             28160037
      1 RELINFO BASED(R3),          /* RELREPNO INFORMATION          */ 28500037
        2 RELREP FIXED(15),         /* RELREPNO                      */ 29000037
        2 *      CHAR(2);           /* ALIGNMENT                     */ 29500037
 /********************************************************************/ 29540037
 /*                MAPPING  FOR  EXTENT  INFORMATION                 */ 29580037
 /********************************************************************/ 29620037
    DECLARE                                                             29660037
      1 UPEXT1 BASED(R4),           /* EXTENT INFORMATION            */ 30000037
        2 UPEXTLN1 FIXED(15),       /* EXTENT LENGTH                 */ 30500037
        2 UPEXTD2  CHAR(256);       /* EXTENT DATA                   */ 31000037
 /********************************************************************/ 31040037
 /*                     MAPPING  FOR  KEY  AREA                      */ 31080037
 /********************************************************************/ 31120037
    DECLARE                                                             31160037
      1 UPKEY1  BASED(UPLKEYPT),    /* MAP KEY AREA                  */ 31500037
        2 UPKEYD1  CHAR(64);        /* KEY                           */ 32000037
 /********************************************************************/ 32040037
 /*                     MAPPING  FOR  KEY  AREA                      */ 32080037
 /********************************************************************/ 32120037
    DECLARE                                                             32160037
      1 UPKEY BASED(R4),            /* MAP KEY AREA                  */ 32500037
        2 UPKEYLN  FIXED(15),       /* KEY LENGTH                    */ 33000037
        2 UPKEYD   CHAR(64);        /* KEY DATA                      */ 33500037
    DECLARE CLSCINO CHAR(3) BASED(CTGFLPT(1)); /* CLUSTER CI NO.     */ 34000037
 /********************************************************************/ 34040037
 /*             MAPPING  FOR  USER  RETURN  INFORMATION              */ 34080037
 /********************************************************************/ 34120037
    DECLARE                                                             34160037
      1 WKAINFO BASED(CTGWKA),      /* MAP USER RETURN INFORMATION   */ 34500037
        2 *       CHAR(4),          /* WORK AREA LENGTHS             */ 35000037
        2 WKARETN,                  /* RETURN INFORMATION            */ 35500037
          3 WKAREL   FIXED(15),     /* OBJECT RELREPNO               */ 36000037
          3 WKARELSS FIXED(15),     /* SEQUENCE SET RELREPNO         */ 36500037
          3 WKAEXT   FIXED(15),     /* NO. OF OLD EXTENTS            */ 37000037
          3 WKAEXTSS FIXED(15);     /* NO. OF OLD SEQ. SET EXTENTS   */ 37500037
 /********************************************************************/ 37504037
 /*                   MAPPING  FOR  EXTEND  INPUT                    */ 37508037
 /********************************************************************/ 37512037
    DECLARE                                                             37516037
      1 WKAINPUT DEFINED(WKARETN),  /* MAP EXTEND INPUT      @XA02392*/ 37550037
        2 WKAIEXT FIXED(15),        /* INDEX NUMBER OF EXTENTS          37600037
                                                             @XA02392*/ 37610037
        2 WKAICI  CHAR(3);          /* INDEX CI NO.          @XA02392*/ 37650037
 @EJECT;                                                                37750037
 %INCLUDE SYSLIB(IGGMVEDC);         /* VOLUME ENTRY DECLARES         */ 38000037
 @EJECT;                                                                38200037
 /********************************************************************/ 39000037
 /*         DECLARATION  OF  UPDATE  PARAMETER  INFORMATION          */ 39500037
 /********************************************************************/ 39600037
    DECLARE                                                             39700037
      1 UPREPARM  BASED(CCAR2REC),  /* UPDATE EXTEND/RELEASE         */ 40500037
        2 UPNTCYL  FIXED(15),       /* NO. TRACKS/CYLINDER           */ 41000037
          3 UPNIEXT FIXED(15),      /* INDEX NO. OF EXTENTS          */ 41050037
        2 UPICINO  CHAR(3),         /* INDEX CI NO.          @Y30SSRS*/ 41500037
        2 UPVCINO  CHAR(3),         /* VOLUME CI NO.                 */ 42000037
        2 UPFLGS   BIT(8),          /* FLAGS                         */ 42500037
          3 UPKEYDS  BIT(1),        /* KEYED DATA SET                */ 43000037
          3 *        BIT(1),        /* RESERVED                      */ 43500037
          3 UPSSWD   BIT(1),        /* SEQUENCE SET WITH DATA        */ 44000037
          3 UPREPL   BIT(1),        /* REPLICATION                   */ 44500037
          3 *        BIT(1),        /* RESERVED                      */ 45000037
          3 UPKRAN   BIT(1),        /* KEY RANGE                     */ 45500037
          3 *        BIT(1),        /* RESERVED                      */ 46000037
          3 *        BIT(1),        /* RESERVED                      */ 46500037
        2 UPFLG2S   BIT(16),        /* UPDATE FLAGS                  */ 47000037
          3 UPUSSWD BIT(1),         /* EXTEND REQUEST                */ 47500037
          3 UPKREQ  BIT(1),         /* KEYS EQUAL                    */ 48000037
          3 UPSRCH  BIT(1),         /* SEARCH FOR VOLUME             */ 48500037
          3 UPKSET  BIT(1),         /* KEY RANGE SET                 */ 49000037
          3 UPEXIT  BIT(1),         /* SEARCH EXIT INDICATOR         */ 49500037
          3 UPSMFL  BIT(1),         /* WRITE LSPACE SMF RECORD 69    */ 50000037
        2 *       CHAR(1),          /* RESERVED              @Y30SSRS*/ 50500037
        2 UPCHIA  PTR(32),          /* SAVE HI-ALLOCATED RBA         */ 51000037
        2 UPEXTLN FIXED(15),        /* EXTENT LENGTH (EXISTING)      */ 51500037
        2 UPREND  CHAR(0);          /* END UPREPARM                  */ 52000037
 /********************************************************************/ 52040037
 /*                 MAPPING  FOR  VOLUME  OCCURRENCE                 */ 52080037
 /********************************************************************/ 52120037
    DECLARE                                                             52160037
      1 UPENTVOL BASED(ADDR(UPREND)), /* VOLUME OCCURRENCE           */ 52500037
        2 UPVOLFIX,                 /* FIXED INFO OF VOLUME          */ 53000037
          3 UPRLRP   FIXED(15),     /* RELREPNO                      */ 53500037
          3 UPDEVT   CHAR(4),       /* DEVICE TYPE                   */ 54000037
          3 UPVOL    CHAR(6),       /* VOLUME SERIAL                 */ 54500037
          3 UPFLSQ   FIXED(15),     /* FILE SEQUENCE NUMBER          */ 55000037
          3 UPVLFLG  BIT(8),        /* VOLUME FLAGS                  */ 55500037
            4 UPVLPR   BIT(1),      /* PRIME VOLUME                  */ 56000037
            4 UPVLCN   BIT(1),      /* CANDIDATE VOLUME              */ 56500037
            4 UPVLOV   BIT(1),      /* OVERFLOW VOLUME               */ 57000037
            4 *        BIT(5),      /* RESERVED                      */ 57500037
          3 UPNOEXT  PTR(8),        /* NO. OF EXTENTS                */ 58000037
          3 UPHKBA   PTR(32) BDY(BYTE), /* HI KEY CI VALUE           */ 58500037
          3 UPHUBA   PTR(32) BDY(BYTE), /* HI USED RBA               */ 59000037
          3 UPHABA   PTR(32) BDY(BYTE), /* HI ALLOCATED RBA          */ 59500037
          3 UPPHYB   PTR(32) BDY(BYTE), /* PHYSICAL BLOCK SIZE       */ 60000037
          3 UPNBTK   FIXED(15),     /* BLOCKS PER TRACK              */ 60500037
          3 UPNTKA   FIXED(15),     /* TRACKS ALLOCATION UNIT        */ 61000037
          3 UPITEX   BIT(8),        /* TYPE OF EXTENT                */ 61500037
            4 UPSSDT   BIT(1),      /* SEQUENCE SET WITH DATA        */ 62000037
            4 UPEXTNP  BIT(1),      /* EXTENTS NOT PRE-FORMATTED     */ 62500037
            4 *        BIT(6),      /* RESERVED                      */ 63000037
          3 UPSSDS   FIXED(15) BDY(BYTE), /* SS NO. OF DIRECTORY     */ 63500037
        2 UPVOLVAR,                 /* VARIABLE VOLUME INFO          */ 64000037
          3 UPLKLN   FIXED(15) BDY(BYTE), /* LOW KEY LENGTH          */ 64500037
          3 *        CHAR(64),      /* KEY SPACE                     */ 65000037
          3 UPHKLN   FIXED(15) BDY(BYTE), /* HI KEY LENGTH           */ 65500037
          3 *        CHAR(64),      /* KEY SPACE                     */ 66000037
          3 UPEXLN   FIXED(15) BDY(BYTE), /* EXTENT LENGTH           */ 66500037
          3 *        CHAR(3),       /* ALIGNMENT                     */ 67000037
        2 UPEND    CHAR(0);         /* END OF VOLUME OCCURRENCE      */ 67500037
    DECLARE CLEAR CHAR(256) BASED(CCAALPTR); /* MAP SUBALL WORK AREA */ 68000037
 /********************************************************************/ 68040037
 /*                MAPPING  FOR  EXTENT  INFORMATION                 */ 68080037
 /********************************************************************/ 68120037
    DECLARE                                                             68160037
      1 EXTINF1 BASED,              /* EXTENT INFORMATION            */ 68500037
        2 EXTILEN  FIXED(15),       /* EXTENT INSERT LENGTH          */ 69000037
        2 EXTINFO(*) BDY(HWORD),    /* EXTENT DESCRIPTORS            */ 69500037
          3 EXTSS    FIXED(15),     /* SPACE SEQUENCE NUMBER         */ 70000037
          3 EXTST,                  /* START CCHH                    */ 70500037
            4 EXTCC1   FIXED(15),   /* START CYLINDER                */ 71000037
            4 EXTHH1   FIXED(15),   /* START HEAD                    */ 71500037
          3 EXTEND,                 /* END CCHH                      */ 72000037
            4 EXTCC2   FIXED(15),   /* END CYLINDER                  */ 72500037
            4 EXTHH2   FIXED(15),   /* END HEAD                      */ 73000037
          3 EXTTT    FIXED(15),     /* TOTAL TRACKS                  */ 73500037
          3 EXTDDDD1 PTR(32) BDY(HWORD), /* LOW DDDD                 */ 74000037
          3 EXTDDDD2 PTR(32) BDY(HWORD); /* HIGH DDDD                */ 74500037
 /********************************************************************/ 74540037
 /*          MAPPING  FOR  UPDATE-EXTEND  SPACE  WORK  AREA          */ 74580037
 /********************************************************************/ 74620037
    DECLARE                                                             74660037
      1 UPSPARM BASED(CCAR3REC-LENGTH(UPSPARM)), /* SPACE WORKAREA   */ 75000037
        2 UPSOPT   CHAR(1),         /* SPACE OPTIONS                 */ 75500037
        2 UPSPQTY  CHAR(3),         /* SPACE QUANTITY                */ 76000037
        2 UPSFLG   BIT(8),          /* SPACE FLAGS                   */ 76500037
          3 UPSUNIQ  BIT(1),        /* UNIQUE DATA SET               */ 77000037
          3 UPSEXIT  BIT(1),        /* SPACE EXIT INDICATOR          */ 77500037
          3 *        BIT(6),        /* RESERVED                      */ 78000037
        2 UPDSDIR  CHAR(3),         /* DATA SET DIRECTORY NUMBER     */ 78500037
        2 UPUDSNPT PTR(31),         /* UNIQUE DATA SET NAME PTR      */ 79000037
        2 UPMXBLK  FIXED(15),       /* MAXIMUM BLOCK SIZE            */ 79500037
          3 UPUCB   CHAR(2),        /* UCB ADDR OF VOLUME    @Y30SSRS*/ 79600037
        2 UPCNT    FIXED(15),       /* MAX NO. OF REPETITION NOS.    */ 80000037
                                    /* TO BE PROCESSED (CNTREPNO)    */ 80050037
        2 UPREL    FIXED(15),       /* RELATIVE REPETITION NUMBER    */ 80500037
                                    /* (RELREPNO)                    */ 80550037
        2 UPNODSP  FIXED(15),       /* DATA SPACE COUNT              */ 81000037
        2 UPSPACE  CHAR(3),         /* SPACE QUANTITY                */ 81500037
        2 UPSOPT1  CHAR(1),         /* SPACE OPTIONS                 */ 82000037
        2 UPCRDT1,                  /* CREATION DATE                 */ 82500037
          3 UPCRDT,                 /* YEAR AND DAY                  */ 83000037
            4 UPCRDTY   PTR(8),     /* YEAR                          */ 83500037
            4 UPCRDTDD FIXED(15) BDY(BYTE), /* DAY                   */ 84000037
          3 UPCRDTF  PTR(8),        /* SIGN CHARACTER                */ 85000037
        2 UPSPHDR,                  /* SPACE HEADER AREA             */ 85500037
          3 UPSHREL  FIXED(15) BDY(BYTE), /* RELREPNO                */ 86000037
          3 *        CHAR(21),      /* RESERVED                      */ 87000037
        2 UPDIRSP  CHAR(12),        /* DATA SET DIRECTORY AREA       */ 87500037
          3 UPDDREL  FIXED(15) BDY(BYTE), /* RELREPNO                */ 88000037
          3 *        CHAR(10),      /* RESERVED                      */ 89000037
        2 UPSPWA   CHAR(135),       /* EXTRACT/MODIFY CPL/FPL AREA   */ 89500037
          3 UPSTIME CHAR(8),        /* S/370 TOD FOR         @Y30SSRS*/ 90000037
                                    /* FORMAT-4 UPDATE       @Y30SSRS*/ 90050037
        2 UPSPD,                    /* SPACE DESCRIPTOR AREA         */ 90500037
          3 UPSDREL  FIXED(15) BDY(BYTE), /* RELREPNO                */ 91000037
          3 *        CHAR(16),      /* RESERVED              @ZA07574*/ 92000037
        2 *        CHAR(1),         /* FREE BYTE             @ZA07574*/ 92060037
        2 UPSECQTY CHAR(3);         /* UNIQ SEC ALLOC        @ZA07574*/ 92120037
 @EJECT;                                                                92200037
 %INCLUDE SYSLIB(IGGMCDCL);         /* CATALOG COMMON DECLARES       */ 92500037
 @EJECT;                                                                92700037
 %INCLUDE SYSLIB(IGGMCMDM);         /* CATALOG RECORD DECLARES       */ 93000037
 @EJECT;                                                                93200037
 %INCLUDE SYSLIB(IDAAMDSB);         /* AMDSB                         */ 93500037
 @EJECT;                                                                93700037
 %INCLUDE SYSLIB(IGGMSAWA);         /* SUBALLOCATE WORK AREA         */ 94000037
     DCL IDAAMDS1 CHAR(256) BASED(CTGFLPT(1)); /* MOVE AMDSB         */ 94500037
     RFY IDAAMDSB BASED(ADDR(UPREND)+LENGTH(UPENTVOL)); /* MAP AMDSB */ 96500037
./  ADD  SSI=42751315,NAME=IGGMVEDC
 /********************************************************************/ 00800003
 /*                                                                  */ 00830003
 /*   MACRO NAME = IGGMVEDC                                          */ 00860003
 /*                                                                  */ 00890003
 /*   DESCRIPTIVE NAME = CATALOG VOLUME ENTRY RECORD                 */ 00920003
 /*                                                                  */ 00950003
 /*   FUNCTION = THESE ARE THE MAPPING STRUCTURE DECLARATIONS FOR    */ 00980003
 /*              THE DERIVED VOLUME ENTRY RECORD AND THE NEW         */ 01010003
 /*              VOLUME ENTRY RECORD.  THIS INCLUDES STRUCTURES      */ 01040003
 /*              FOR THE FIXED HEADER INFORMATION, THE DERIVED       */ 01070003
 /*              SPACE HEADER GROUP, THE DERIVED SPACE DESCRIPTOR    */ 01100003
 /*              GROUP, AND THE DERIVED DATA SET DIRECTORY GROUP.    */ 01130003
 /*              ALSO CONTAINED ARE THE NEW DATA SPACE GROUP, THE    */ 01160003
 /*              NEW DATA SET DIRECTORY GROUP, THE NEW DATA SET      */ 01190003
 /*              DIRECTORY EXTENSION GROUP, AND THE NEW SPACE MAP    */ 01220003
 /*              GROUP.                                              */ 01250003
 /*                                                                  */ 01280003
 /*   INCLUDED MACROS = NONE                                         */ 01310003
 /*                                                                  */ 01340003
 /*   METHOD OF ACCESS = PL/S - RESPECIFY A BASE FOR SOME STRUCTURES */ 01370003
 /*                                                                  */ 01400003
 /*   STATUS = VS/2 RELEASE 3   (CHANGE FLAG @Y30SSXX)               */ 01430003
 /*                                                                  */ 01460003
 /*   DATE OF LAST CHANGE = 21 JUN 74                                */ 01490003
 /*                                                                  */ 01520003
 /********************************************************************/ 01550003
 /********************************************************************/ 01600003
 /*     DECLARATION OF THE FIXED INFORMATION IN THE VOLUME RECORD    */ 11200003
 /********************************************************************/ 11400003
    DECLARE                                                             11600003
      1 CTVOLRCD BASED(ADDR(NREPLF)) POSITION(2), /* VOLUME RECORD   */ 12000003
        2 CTVOLNME CHAR(44),        /* ENTRY NAME - 6 BYTES FOR      */ 12800003
                                    /*   VOLUME SERIAL NUMBER AND    */ 13600003
                                    /*   38 BYTES OF BINARY ZERO     */ 14400003
                                    /*   PADDING ON RIGHT            */ 15200003
        2 CTVOLTIM CHAR(8),         /* VOLUME TIME STAMP             */ 16000003
        2 CTVDVCHR CHAR(20),        /* DEVICE CHARACTERISTICS        */ 16800003
          3 CTVDEVTY CHAR(4),       /* VOLUME DEVICE TYPE            */ 17600003
          3 CTVMXBLK PTR(31)BDY(BYTE), /* MAXIMUM DEVICE BLOCK SIZE  */ 18400003
          3 CTVNOCYL FIXED(15) BDY(BYTE), /* CYLINDERS THIS DEVICE   */ 19200003
          3 CTVNOTRK FIXED(15) BDY(BYTE), /* TRACKS PER CYLINDER     */ 20000003
          3 CTVTRKSZ FIXED(15) BDY(BYTE),/* BYTES PER TRACK          */ 20800003
          3 CTVBKNLB PTR(8),        /* BLOCK OVERHEAD, KEYED NOT LAST*/ 21600003
          3 CTVBKLB  PTR(8),        /* BLOCK OVERHEAD, KEYED LAST    */ 22400003
          3 CTVBONK  PTR(8),        /* BLOCK OVERHEAD, NOT KEYED     */ 23200003
          3 CTVDVFLG BIT(8),        /* FLAGS                         */ 24000003
            4 *        BIT(7),      /* RESERVED                      */ 24800003
            4 CTVTLFLG BIT(1),      /* IF ON, USE TOLERANCE FACTOR   */ 25600003
                                    /* ON ALL BLOCKS EXCEPT LAST     */ 26400003
          3 CTVTLFAC FIXED(15) BDY(BYTE), /* TOLERANCE FACTOR        */ 27200003
        2 CTVOLFLG BIT(8),          /* VOLUME RECORD FLAGS           */ 28000003
        2 CTVSYEDS PTR(8),          /* SYSTEM ALLOWED DS EXTENTS     */ 28800003
                                    /*   PER SUBALLOCATION           */ 28850003
        2 *        CHAR(4);         /* RESERVED                      */ 28900003
 /********************************************************************/ 31200003
 /*     DECLARATION OF THE SPACE HEADER GROUP STRUCTURE THAT CAN     */ 32050003
 /*       BE DERIVED FOR EACH DATA SPACE ON THE VOLUME.  NOTE:       */ 32100003
 /*       IF ALL DATA SET DIRECTORIES ON THE VOLUME ARE NOT          */ 32150003
 /*       RETRIEVED IN THE SAME EXTRACT CALL, THE BITS CTVSPUCT      */ 32152003
 /*       AND CTVSPMCT, AND THE FIELD CTVSPNDS MAY BE INCORRECT.     */ 32154003
 /********************************************************************/ 32854003
    DECLARE                                                             33554003
      1 CTVSPHDR BASED,             /* SPACE HEADER GROUP            */ 34400003
        2 CTVSPHCV PTR(8),          /* COUNT OF VARIABLE FIELDS      */ 35200003
        2 CTVSPHLF PTR(8),          /* LENGTH OF FIXED INFORMATION   */ 36000003
        2 CTVF1TIM CHAR (8),        /* FORMAT 1 DSCB TIME STAMP      */ 36800003
        2 CTVF1ADR CHAR(5),         /* CCHHR OF THE FORMAT 1 DSCB    */ 37600003
        2 CTVSPFLG BIT(8),          /* DATA SPACE FLAGS              */ 38400003
          3 CTVSPUNQ BIT(1),        /* UNIQUE DATA SPACE             */ 39200003
          3 CTVSPAUT BIT(1),        /* AUTOMATICALLY BUILT DATA SPACE*/ 40000003
          3 CTVSPUCT BIT(1),        /* USER CATALOG IN DATA SPACE    */ 40800003
          3 CTVSPMCT BIT(1),        /* MASTER CATALOG IN DATA SPACE  */ 41600003
          3 CTVSPCDF BIT(1),        /* DATA SPACE BUILT BY CATLG DEF */ 42400003
          3 *        BIT(3),        /* RESERVED                      */ 44000003
        2 CTVSPNDS FIXED(15) BDY(BYTE), /* NO. DATA SETS IN DATA SPC */ 44800003
        2 CTVSPNEX PTR(8),          /* NO. DATA SPACE EXTENTS        */ 45600003
        2 CTVSPSPO PTR(8),          /* DATA SPACE CREATION SPACE OPTS*/ 46400003
        2 CTVSPSQT PTR(24) BDY(BYTE); /* SECONDARY SPACE QUANTITY    */ 48000003
 /********************************************************************/ 49600003
 /*     DECLARATION OF THE SPACE DESCRIPTOR GROUP STRUCTURE THAT     */ 50400003
 /*       CAN BE DERIVED FOR EACH EXTENT OF EVERY DATA SPACE.        */ 50450003
 /********************************************************************/ 50950003
    DECLARE                                                             51450003
      1 CTVDESGP BASED,             /* SPACE DESCRIPTOR GROUP        */ 52000003
        2 CTVDESCV PTR(8),          /* COUNT OF VARIABLE FIELDS      */ 52800003
        2 CTVDESLF PTR(8),          /* LENGTH OF FIXED INFORMATION   */ 53600003
        2 CTVDESUU FIXED(15),       /* ALLOCATION UNITS USED         */ 54400003
        2 CTVEXTST CHAR(4),         /* EXTENT STARTING CCHH ADDRESS  */ 55200003
          3 CTVSTDES PTR(31) BDY(BYTE), /* CALCULATING CCHH FORM     */ 56000003
            4 CTVSTCC FIXED(15) BDY(BYTE), /* CYLINDER START         */ 56800003
            4 CTVSTHH FIXED(15) BDY(BYTE), /* TRACK START            */ 57600003
        2 CTVDESTK FIXED(15) BDY(BYTE), /* NO. OF TRACKS IN EXTENT   */ 58400003
        2 CTVDESHD FIXED(15) BDY(BYTE), /* SEQUENCE NUMBER OF THE    */ 59200003
                                    /* ASSOCIATED SPACE HEADER GROUP */ 60000003
        2 CTVMAPLN PTR(15) BDY(BYTE), /* SPACE MAP LENGTH            */ 61600003
        2 CTVMAP (*) PTR(8);        /* SPACE MAP-RUN LENGTH CODE     */ 62400003
 /********************************************************************/ 63200003
 /*     DECLARATION OF THE DATA SET DIRECTORY GROUP THAT CAN BE      */ 63250003
 /*       DERIVED FOR EACH DATA SET ON THE VOLUME.                   */ 63300003
 /********************************************************************/ 64000003
    DECLARE                                                             64700003
      1 CTVDSGRP BASED,             /* DATA SET DIRECTORY GROUP      */ 65600003
        2 CTVDSGCV PTR(8),          /* COUNT OF VARIABLE FIELDS      */ 66400003
        2 CTVDSGLF PTR(8),          /* LENGTH OF FIXED INFORMATION   */ 67200003
        2 CTVDSNEX PTR(8),          /* NO. OF DATA SET EXTENTS       */ 68000003
        2 CTVDSCID PTR(24) BDY(BYTE), /* DATA SET CI ID VALUE        */ 68800003
        2 CTVDSDFL BIT(8),          /* DATA SET FLAGS                */ 69600003
          3 CTVDSDCN BIT(1),        /* CANDIDATE ON VOL - NO SPACE   */ 70400003
          3 *        BIT(7),        /* RESERVED                      */ 71200003
        2 CTVDSXCT PTR(15) BDY(BYTE), /* SPACE HDR DIRECTORY LENGTH  */ 72000003
        2 CTVDSDIR (*) CHAR(3) BDY(BYTE), /* SPACE HDR SSN ENTRIES   */ 72800003
          3 CTVSPSSN FIXED(15) BDY(BYTE), /* SPACE HDR GROUP SEQ NO. */ 73600003
          3 CTVSPSXC PTR(8);        /* NO. OF DS EXT'S IN THE SPACE  */ 74400003
 /********************************************************************/ 75200003
 /*    DECLARATION OF THE VOLUME RECORD GROUP OCCURRENCE POINTERS    */ 76000003
 /********************************************************************/ 76200003
    DECLARE                                                             76400003
      1 CTVGOPT BASED,              /* GROUP OCCURRENCE POINTERS     */ 76800003
        2 CTVGOCI CHAR(3),          /* CI NUMBER OR                  */ 77600003
          3 CTVGOFLG BIT(8),        /*   GROUP OCCURRENCE FLAG       */ 78400003
          3 CTVGODSP FIXED(15)      /* DISPLACEMENT TO GROUP         */ 79200003
                     BDY(BYTE),     /*   OCCURRENCE                  */ 80000003
        2 CTVGOGCI PTR(8),          /* GROUP CODE INFORMATION        */ 80800003
          3 CTVGOEXT BIT(1),        /* GROUP OCCURRENCE OUTSIDE RECRD*/ 81600003
          3 CTVGODEL BIT(1),        /* DELETED GROUP OCCURRENCE      */ 82400003
          3 CTVGOGC  BIT(6),        /* TRUE GROUP CODE               */ 83200003
        2 CTVGOSEQ FIXED(15) BDY(BYTE); /* (HIGH) SEQUENCE NUMBER    */ 86400003
 /********************************************************************/ 88000003
 /*         DECLARATION OF THE TRUE GROUP CODES IN THE GROUP         */ 88080003
 /*         OCCURRENCE POINTERS (CTVGOGCI)                           */ 88160003
 /********************************************************************/ 88240003
    DECLARE                         /* TRUE GROUP CODES IN G.O.P.'S  */ 88320003
      CTVDSPHC BIT(8) CONSTANT('06'X), /* DATA SPACE HEADER CODE     */ 88400003
      CTVDSDGC BIT(8) CONSTANT('08'X), /* DATA SPACE DIRECTORY CODE  */ 88480003
      CTVDSPDC BIT(8) CONSTANT('07'X); /* DATA SPACE DESCRIPTOR CODE */ 88560003
 /********************************************************************/ 88640003
 /*     DECLARATION OF CONTROL INFORMATION FOR REPEATING FIELDS      */ 88800003
 /********************************************************************/ 89000003
    DECLARE                                                             89200003
      1 CTVRCTRL BASED(CCACPE2),    /* CONTROL INFORMATION           */ 89600003
        2 CTVEXRPT CHAR(5),         /* REPEATING CONTROL INFORMATION */ 90400003
          3 CTVEXGCI CHAR(3),       /* CI NUMBER OF EXTENSION RECORD */ 91200003
          3 *        CHAR(2),       /* RESERVED                      */ 91250003
        2 CTVEXRCT PTR(8),          /* COUNT OF GROUP OCCUR PTRS     */ 96000003
        2 CTVEGOPT (*) CHAR(6);     /* VARIABLE NO. OF GOP'S         */ 96800003
 /********************************************************************/ 96850003
 /*          DECLARATION OF VOLUME ENTRY GROUP CODES (NEW)           */ 96910003
 /********************************************************************/ 96920003
    DECLARE                                                             96930003
      SMGC    FIXED(8) CONSTANT(5), /* SPACE MAP GROUP CODE          */ 96960003
      DSPGC   FIXED(8) CONSTANT(6), /* DATA SPACE GROUP CODE         */ 96970003
      DIRGC   FIXED(8) CONSTANT(8); /* DATA SET DIRECTORY GROUP CODE */ 96980003
 /********************************************************************/ 97000003
 /*     DECLARATION OF THE SPACE MAP GROUP USED TO SUBALLOCATE       */ 97010003
 /*       VSAM DATA SPACE FOR THE ENTIRE VOLUME. THERE EXIST         */ 97020003
 /*       AS MANY MAXIMUM LENGTH OCCURRENCES AS ARE NECESSARY        */ 97030003
 /*       TO CONTAIN THE ENTIRE MAP.                                 */ 97040003
 /********************************************************************/ 97045003
    DECLARE                                                             97050003
      1 CTVSPMAP BASED,             /* SPACE MAP GROUP               */ 97060003
        2 CTVSMSN  FIXED(15),       /* SPACE MAP GROUP SEQUENCE NO.  */ 97070003
          3 CTVSMCV  PTR(8),        /* COUNT OF VARIABLE FIELDS      */ 97090003
          3 CTVSMLF  PTR(8),        /* LENGTH OF FIXED INFORMATION   */ 97092003
        2 CTVSMLEN FIXED(15),       /* BIT MAP LENGTH                */ 97094003
        2 CTVSMBIT CHAR(*);         /* VARIABLE LENGTH SPACE BIT MAP */ 97096003
 /********************************************************************/ 97098003
 /*     DECLARATION OF DATA SPACE GROUP STRUCTURE THAT EXISTS        */ 97110003
 /*     FOR EACH VSAM DATA SPACE ON THE VOLUME                       */ 97120003
 /********************************************************************/ 97130003
    DECLARE                                                             97140003
      1 CTVDSPAC BASED,             /* DATA SPACE GROUP MAPPING      */ 97160003
        2 CTVDSPSN  FIXED(15),      /* DATA SPACE GROUP SEQUENCE NO. */ 97170003
          3 CTVDSPCV PTR(8),        /* COUNT OF VARIABLE FIELDS      */ 97180003
          3 CTVDSPLF PTR(8),        /* LENGTH FIXED INFORMATION      */ 97190003
        2 CTVF1TME CHAR(8),         /* FORMAT 1 DSCB TIME STAMP      */ 97192003
        2 CTVF1PTR CHAR(5),         /* CCHHR OF THE FORMAT 1 DSCB    */ 97194003
        2 CTVDSPFG BIT(8),          /* DATA SPACE FLAGS              */ 97196003
          3 CTVUNIQ  BIT(1),        /* UNIQUE DATA SPACE             */ 97198003
          3 CTVAUTO  BIT(1),        /* AUTOMATICALLY BUILT SPACE     */ 97198403
          3 *        BIT(2),        /* RESERVED                      */ 97198803
          3 CTVCATDF BIT(1),        /* DATA SPACE BUILT BY CATLG DEF */ 97199203
          3 *        BIT(3),        /* RESERVED                      */ 97199703
        2 CTVNOEXT PTR(8),          /* NO. OF DATA SPACE EXTENTS     */ 97199803
        2 CTVSPOPT BIT(8),          /* DATA SPACE CREATION SPACE OPTS*/ 97199903
        2 CTVSQT PTR(24) BDY(BYTE), /* SECONDARY SPACE QUANTITY      */ 97226603
        2 CTVSPEXT CHAR(64),        /* DATA SPACE EXTENT DESCRIPTOR  */ 97230603
                                    /*   AREA                        */ 97232603
          3 CTVEXTNT(16) CHAR(4)    /* EXTENT DESCRIPTORS            */ 97233003
                         BDY(BYTE),                                     97233103
            4 CTVEXTT FIXED(15)     /* RELATIVE TRACK NO. OF THE     */ 97233203
                      BDY(BYTE),    /*   EXTENT                      */ 97235303
            4 CTVEXTNN FIXED(15)    /* NO. OF TRACKS IN THE EXTENT   */ 97238803
                       BDY(BYTE);                                       97240803
 /********************************************************************/ 97244403
 /*     DECLARATION OF DATA SET DIRECTORY GROUP THAT EXISTS FOR      */ 97246403
 /*       EACH DATA SET ON THE VOLUME                                */ 97248403
 /********************************************************************/ 97249203
    DECLARE                                                             97250003
      1 CTVDIR BASED,               /* DATA SET DIRECTORY            */ 97300003
        2 CTVDSDSN FIXED(15),       /* DATA SET DIRECTORY SEQ. NO.   */ 97350003
          3 CTVDSDCV PTR(8),        /* COUNT OF VARIABLE FIELDS      */ 97450003
          3 CTVDSDLF PTR(8),        /* LENGTH OF FIXED FIELDS        */ 97500003
        2 CTVDSDCI PTR(24) BDY(BYTE); /* ASSOCIATED DATA SET CI NO.  */ 97550003
 /********************************************************************/ 97600003
 /*     DECLARATION OF DATA SET DIRECTORY GROUP EXTENSION THAT       */ 97650003
 /*     EXISTS FOR VOLUMES OWNED BY RECOVERABLE CATALOGS.            */ 97850003
 /********************************************************************/ 98050003
    DECLARE                                                             98250003
      1 CTVDEXTN BASED(ADDR(CTVDIR) + LENGTH(CTVDIR)),/* DATA  SET   */ 98450003
                                    /* DIRECTORY EXTENSION   @Y30SSJG*/ 98650003
        2 CTVDIRTS CHAR(4),         /* TIME STAMP            @Y30SSJG*/ 98850003
        2 CTVDRSTT PTR(24) BDY(BYTE); /* DATA SET SUM TT     @Y30SSJG*/ 99050003
./  ADD  SSI=30050014,NAME=IGGMZLOC
 @EJECT ;                                                               00100000
 /*******************************************************************/  00200000
 /********************************************************************/ 00300000
 /*********************  IGGMZLOC   **********************************/ 00400000
 /******************** 16 SEPT 72  2000 DB  **************************/ 00500000
 /*20SET72,0900. ADD ZSDRC TO ZZRC                                   */ 00600000
 /*20SEP72,0900. CHANGE ZTCIH DIM & LENGTH                           */ 00700000
 /*26SEP72,1800.CHANGE LEVEL OF ZSTATE                               */ 00800000
 /*26SEP72,1800.ENCLOSE ZCPSET IN STRUCTURE,RESOLVE LENGTH OF ZCPSET */ 00900000
 /*30SEP72,1200.ZMCX9 ADD SUBSTRUCTURE                               */ 01000000
 /*30SEP72,1200.ZPS0.DROPPED DURING LAST EDIT                        */ 01100000
 /*17OCT72.1200.ADD DEBUG NAME HOLDERS                               */ 01200000
 /*******************************************************************/  01300000
 /*                                                                 */  01400000
 /*  IGGMZLOC: SUBALLOCATE DECLARATIONS                             */  01500000
 /*                                                                 */  01600000
 /*******************************************************************/  01700000
* /*                                                                */  01750002
* /* MACCOMP Y-2 SC1DE/SJE92                                        */  01760002
* /* MACSTAT Y-2 72335/Y02020                                       */  01770002
* /*                                                                */  01780002
 /*******************************************************************/  01800000
     GEN REFS(CCATEMPS)(USING @DATD-(CCATEMPS-IGGCCA),11);              01900000
 %INCLUDE  SYSLIB(IGGMSAWA);                                            02000000
 %INCLUDE  SYSLIB(IGGMVEDC);                                            02100000
 @LIST OFF;                                                             02200000
 %INCLUDE  SYSLIB(IGGMCDCL);                                            02300000
 %INCLUDE  SYSLIB(IGGMCMDM);                                            02400000
                                                                        02500000
 /*******************************************************************/  02600000
 /*******************************************************************/  02700000
                                                                        02800000
       %MXRCD ='497';                  /*MAX RECORD SIZE            */  02900000
       %MXRCDA = '430';                /*MAX # BYTES IN VAR SECTION */  03000000
       %ZVWN  ='10';                   /*SMALLEST W-TYPE RECORD CI# */  03100000
       %ZMXNDS='32767';                /*MAX # DATA SETS ON A VOLUME*/  03200000
       %ZMXDSX='255';                  /*MAX # DATA SET EXTENTS     */  03300000
                                                                        03400000
 /*******************************************************************/  03500000
                                                                        03600000
       %ZINIT ='1';                    /*INITIAL                    */  03700000
       %ZCONT ='0';                    /*CONTINUE                   */  03800000
       %ZEQ   ='''E''';                /*EQUAL                      */  03900000
       %ZNEQ  ='''N''';                /*NOT EQUAL                  */  04000000
       %ZEOF  ='''F''';                /*END OF FILE                */  04100000
       %ZEOR  ='''R''';                /*END OF RECORD              */  04200000
       %ZERR  ='''X''';                /*ERROR                      */  04300000
       %ZINSP = '''Y''';               /*EXISTS IN THE SPACE        */  04400000
                                                                        04500000
        %ZAV  ='1';                    /*RLC STATE AVAILABLE        */  04600000
       %ZUN = '-1';                    /*RLC STATE,UNAVAILABLE       */ 04700000
                                                                        04800000
       %ZDSGC ='CTVDSDGC';                                              04900000
       %ZSDGC ='CTVDSPDC';                                              05000000
       %ZSHGC ='CTVDSPHC';                                              05100000
       %ZGCMSK='TRUEGC';                                                05200000
       %ZDSONV='ZVNDS';                                                 05300000
                                                                        05400000
 /*******************************************************************/  05500000
 /******************************************************************/   05600000
 /******************************************************************/   05700000
 DCL   ZLOCBASE   PTR(32) BDY(BYTE) BASED;                              05800000
 DCL   ZADDR      PTR(32) BDY(BYTE) BASED;                              05900000
 DCL   ZID     CHAR(8) BDY(BYTE) BASED;                                 06000000
 DCL   ZFLAG   PTR(32) BDY(BYTE);      /*DEBUG ZAP FLAG              */ 06100000
 /******************************************************************/   06200000
 /******************************************************************/   06300000
 /*                                                                 */  06400000
 DCL                                    /*Z-TEMPS,GENERAL USE      */   06500000
  1     ZTEMP    BASED                 ,/*WORKING LOCS-VOLATELE    */   06600000
   3     ZTNDS    FIXED(15) BDY(BYTE)  ,/*DS SCAN TALLY            */   06700000
   3     ZTNDSA   FIXED(15) BDY(BYTE)  ,/*DS IN SPACE SCAN TALLY   */   06800000
   3     ZNT      FIXED(15) BDY(BYTE)  ,/*WORKING REG,ZTNT         */   06900000
   3     ZTC      FIXED(15) BDY(BYTE)  ,/*TRACK TALLY IN MAP SCAN  */   07000000
   3     ZSTATE   FIXED(15) BDY(BYTE)  ,/*RLC STATE,MAP SCAN       */   07100000
   3     ZTN      FIXED(15) BDY(BYTE) ,                                 07200000
   3     ZTNA     FIXED(15) BDY(BYTE) ,/*CONTENDER TRK #            */  07300000
   3     ZTN1     FIXED(15) BDY(BYTE) ,/* TEMP IN                   */  07400000
   3     ZTN2     FIXED(15) BDY(BYTE) ,/* TEMP TN                   */  07500000
   3     ZNT1     FIXED(15) BDY(BYTE) ,/* TEMP NT                   */  07600000
   3     ZNT2     FIXED(15) BDY(BYTE) ,/* TEMP NT                   */  07700000
   3     ZTNT     FIXED(15) BDY(BYTE)  ,/*TEMP, ZSDXNT             */   07800000
   3     ZNTA     FIXED(15) BDY(BYTE) ,/*TEMP ZNT ALTERNATE         */  07900000
   3     ZTLL     PTR(24)   BDY(BYTE)  ,/*TEMP, ZSDXLL             */   08000000
    5    ZTEMPP24 PTR(24)   BDY(BYTE)  ,/*WORKING CI,GENERAL       */   08100000
   3     ZTCIX    FIXED(15) BDY(BYTE) ,/* ZTCI TALLY                */  08200000
   3     ZTCIH(25) CHAR(4) BDY(BYTE) ,/*PUT/ADD CHAIN HISTORY        */ 08300000
    5    ZTCEV    CHAR(4)   BDY(BYTE) ,/* CI EVENT                  */  08400000
     7   ZTCIPA   CHAR(1)             ,/*@ FROM ?@XXREC,X='ASSGN CI'*/  08500000
     7   ZTCI     PTR(24)   BDY(BYTE),/* RECORD CI #                */  08600000
   3     ZTPC     PTR(8)               ,/*TEMP, ZSDXPC             */   08700000
   3     ZTTNA    FIXED(15) BDY(BYTE)  ,/*TEMP, ZSDXTNA            */   08800000
   3     ZTFA     FIXED(15) BDY(BYTE) ,/*TEMP, USED IN MAP SHIFT    */  08900000
   3     ZTFB     FIXED(15) BDY(BYTE) ,/*TEMP, USED IN MAP SHIFT    */  09000000
   3     ZTFC     FIXED(15) BDY(BYTE) ,/*TEMP, USED IN MAP SHIFT    */  09100000
   3     ZTFD     FIXED(15) BDY(BYTE) ,/*TEMP, USED IN MAP SHIFT    */  09200000
   3     ZRA      FIXED(15) BDY(BYTE) ,/*TEMP, USED IN MAP SHIFT    */  09300000
   3     ZRB      FIXED(15) BDY(BYTE) ,/*TEMP, USED IN MAP SHIFT    */  09400000
   3     ZRC      FIXED(15) BDY(BYTE) ,/*TEMP, USED IN MAP SHIFT    */  09500000
   3     ZTF0     FIXED(15) BDY(BYTE) ,/*TEMP, USED IN MAP SHIFT    */  09600000
   3     ZTF1     FIXED(15) BDY(BYTE) ,/*TEMP, USED IN MAP SHIFT    */  09700000
   3     ZTEMPP8  PTR(8)    BDY(BYTE)  ,                                09800000
   3     ZTEMPP15 PTR(15)   BDY(BYTE)  ,                                09900000
   3     ZTEMPP31 PTR(31)   BDY(BYTE)  ,                                10000000
   3     ZTEMPF15 FIXED(15) BDY(BYTE)  ,                                10100000
   3     ZTEMPF31 FIXED(31) BDY(BYTE)  ,                                10200000
   3     ZTEMPB16 BIT(16)   BDY(BYTE)  ,                                10300000
    5    ZTP16    PTR(16)   BDY(BYTE)  ,                                10400000
     7   ZTP8     PTR(8)               ,                                10500000
      9  ZTB8     BIT(8)               ,                                10600000
     7   ZTP8A    PTR(8)               ,                                10700000
      9  ZTB8A    BIT(8)               ;                                10800000
 /*                                                                 */  10900000
 /******************************************************************/   11000000
 /******************************************************************/   11100000
 /*                                                                 */  11200000
 DECLARE                                                                11300000
  1     ZZCTLS    BASED                ,/*OVERALL CONTROL VARIABLES*/   11400000
   3     ZCPBASE  PTR(31)   BDY(BYTE)  ,/*CURRENT BASE FOR ZCPE'S. */   11500000
   3     ZPBASE   PTR(31)   BDY(BYTE)  ,/*WORKING BASE,GENERAL     */   11600000
   3     ZPLOC    PTR(31)   BDY(BYTE)  ,/*UZIP & ZZIP START OF AREA */  11700000
   3     ZPBASEA  PTR(31)   BDY(BYTE)  ,/*WORKING BASE-ALTERNATIVE */   11800000
   3     ZPBASEB  PTR(31)   BDY(BYTE)  ,/*WORKING BASE-VOLATILE    */   11900000
   3     ZPBASE3  PTR(31)   BDY(BYTE)  ,/*ZCP SET FOR RAB3         */   12000000
   3     ZPBASE4  PTR(31)   BDY(BYTE)  ,/*ZCP SET FOR RAB4         */   12100000
   3     ZPBASE5  PTR(31)   BDY(BYTE)  ,/*ZCP SET FOR RAB5         */   12200000
   3     ZPL      PTR(31)   BDY(BYTE) ,/*-> LEFT RLC                */  12300000
   3     ZP       PTR(31)   BDY(BYTE) ,/*-> TARGET RLC              */  12400000
   3     ZPR      PTR(31)   BDY(BYTE) ,/*-> RIGHT RLC               */  12500000
   3     ZP1      PTR(31)   BDY(BYTE) ,/*SAVE ZPBASE                */  12600000
   3     ZP2      PTR(31)   BDY(BYTE) ,/*SAVE ZPBASEA               */  12700000
   3     ZP3      PTR(31)   BDY(BYTE) ,/*SAVE ZPBASEB               */  12800000
   3     ZSALOOP  FIXED(15) BDY(BYTE)  ,/*SALL LOOP COUNT          */   12900000
   3     ZLOOP    PTR(8)               ,/*SECONDARY LOOP CTL,GEN'L */   13000000
   3     ZPASS    FIXED(15) BDY(BYTE)  ,/*BYPASS PROCESS UNDER WAY */   13100000
   3     ZPASSZ   CHAR(4)   BDY(BYTE)  ,/*EXIT CODE CONTROL        */   13200000
    5    ZPASSA   CHAR(2)   BDY(BYTE)  ,                                13300000
     7   ZPASSA1  CHAR(1)   BDY(BYTE)  ,                                13400000
     7   ZPASSA2  CHAR(1)   BDY(BYTE)  ,                                13500000
    5    ZPASSB   CHAR(2)   BDY(BYTE)  ,                                13600000
     7   ZPASSB1  CHAR(1)              ,                                13700000
     7   ZPASSB2  CHAR(1)              ,                                13800000
   3     ZRUSE    CHAR(16)  BDY(BYTE)  ,/* RAB USAGE               */   13900000
    5    ZUSED3    PTR(8)              ,/*USED 3                   */   14000000
    5    ZUSED4    PTR(8)              ,/*USED 4                   */   14100000
    5    ZUSED5    PTR(8)              ,/*USED 5                   */   14200000
    5    ZBUILT3   PTR(8)              ,/*BUILT 3                  */   14300000
    5    ZBUILT4   PTR(8)              ,/*BUILT 4                  */   14400000
    5    ZBUILT5   PTR(8)              ,/*BUILT 5                  */   14500000
    5    ZALTER3   PTR(8)              ,/*ALTERED 3                */   14600000
    5    ZALTER4   PTR(8)              ,/*ALTERED 4                */   14700000
    5    ZALTER5   PTR(8)              ,/*ALTERED 5                */   14800000
   3     ZRTYPE   CHAR(1)              ,/*BUILD RECORD TYPE        */   14900000
   3     ZRECCI   PTR(24)   BDY(BYTE)  ,/*RECORD CI, GET/ADD/PUT   */   15000000
   3     ZMANX    PTR(8)               ,/*Z-MAIN MASTER EXIT CTL   */   15100000
   3     ZMANZ    PTR(8)               ,/*Z-MAIN RC-EXIT CTL       */   15200000
   3     ZMODE    PTR(8)               ,/*CONVERSION TYPE          */   15300000
   3     ZFUNC    PTR(8)               ,/*INDEX TO ZFC             */   15400000
   3     ZPLN     FIXED(15) BDY(BYTE)  ;/*ZIPPER LENGTH            */   15500000
 /*                                                                 */  15600000
 /******************************************************************/   15700000
 /******************************************************************/   15800000
 /*                                                                 */  15900000
 /* ZCPSET IS USED TO INDICATE WHICH RECORD POINTERS ARE USED.     */   16000000
 /*                                                                */   16100000
 DECLARE                                                                16200000
  1     ZCPS            BASED         ,                                 16300000
   3     ZCPSET (3)PTR(8)             ;/*Z-PTR SET TO USE            */ 16400000
       %ZPS0 = '0';                    /*PER ZCPBASE OR PER TGT CI#  */ 16500000
        %ZPS3 = '3'                    ;/*PTRS TO REC IN BLOCK 3   */   16600000
        %ZPS4 = '4'                    ;/*PTRS TO REC IN BLOCK 4   */   16700000
        %ZPS5 = '5'                    ;/*PTRS TO REC IN BLOCK 5   */   16800000
        %ZPSX = '''FF''X'              ;/*PTRS NOT VALID           */   16900000
 /******************************************************************/   17000000
 /******************************************************************/   17100000
 /******************************************************************/   17200000
 /*  FUNCTIONAL PARAMETERS                                         */   17300000
 /*                                                                */   17400000
 DECLARE                                                                17500000
  1      ZFPS     BASED                ,                                17600000
   3     ZCCHH    CHAR(4)   BDY(BYTE)  ,/* LO-EXTENT CCHH          */   17700000
    5    ZCC      FIXED(15) BDY(BYTE)  ,/* LO-CC                   */   17800000
    5    ZHH      FIXED(15) BDY(BYTE)  ,/* LO-HH                   */   17900000
   3     ZCCHHX   CHAR(4)   BDY(BYTE)  ,/* HI-EXTENT CCHH          */   18000000
    5    ZCCX     FIXED(15) BDY(BYTE)  ,/* HI-CC                   */   18100000
     7   ZSUU     FIXED(15) BDY(BYTE)  ,/* # TRKS USED             */   18200000
    5    ZHHX     FIXED(15) BDY(BYTE)  ,/* HI-HH                   */   18300000
   3     ZBOHD    PTR(8)    BDY(BYTE)  ,/* BLOCK OVERHEAD          */   18400000
   3     ZCIND    FIXED(15) BDY(BYTE)  ,/* NO.OF CYL'S IN DEVICE   */   18500000
   3     ZTINC    FIXED(15) BDY(BYTE)  ,/* NO.OF TRK'S IN CYL      */   18600000
   3     ZBINT    FIXED(15) BDY(BYTE)  ,/* NO.OF BYTES IN TRK      */   18700000
   3     ZNCYL    FIXED(15) BDY(BYTE)  ,/* NO.OF CYL'S             */   18800000
   3     ZNREC    FIXED(15) BDY(BYTE)  ,/* NO.OF REC'S             */   18900000
   3     ZNBIR    FIXED(15) BDY(BYTE)  ,/* NO.OF BYTES IN REC      */   19000000
   3     ZNTRK    FIXED(15) BDY(BYTE)  ,/* NO.OF TRACKS            */   19100000
   3     ZTRKN    FIXED(15) BDY(BYTE)  ,/* TRACK NUMBER            */   19200000
   3     ZACALN   FIXED(15) BDY(BYTE)  ,/*ADJUSTED CA LENGTH       */   19300000
   3     ZNCAA    FIXED(15) BDY(BYTE)  ,/*CA TEST                  */   19400000
   3     ZSHSSN   FIXED(15) BDY(BYTE)  ;/*SPHDR SSN                */   19500000
 /*                                                                */   19600000
 /******************************************************************/   19700000
 /******************************************************************/   19800000
 /*                                                                 */  19900000
 /* VARIABLES USED IN MANIPULATIONS AND MOVES                       */  20000000
 DCL    ZYRLC     FIXED(31) BASED     ;                                 20100000
                                                                        20200000
 /******************************************************************/   20300000
 DCL                                    /*ADDRESSING OVERLAY       */   20400000
  1     ZZA    CHAR(MXRCD)        BASED,                                20500000
   3     ZA   (*) CHAR(1)              ;                                20600000
 /******************************************************************/   20700000
 DCL    ZARRAY (*) PTR(8)  BASED       ;/*ADDRESSING OVERLAY       */   20800000
 /******************************************************************/   20900000
 DCL    ZARRY1 (*) PTR(8)  BASED       ;/*ADDRESSING OVERLAY       */   21000000
 /******************************************************************/   21100000
 DCL    ZARRY  (*) PTR(8) BASED        ;/*ADDRESSING OVERLAY       */   21200000
 /******************************************************************/   21300000
 DCL    ZB        PTR(8)    BASED     ;/*ADDRESSING OVERLAY         */  21400000
 DCL    ZC        PTR(8)    BASED     ;/* ADDRESSINGOVERLAY         */  21500000
 DCL    ZD        PTR(24)   BASED     ;/*ADDRESSING OVERLAY         */  21600000
 DCL    ZE        FIXED(31) BASED     ;/*ADDRESSING OVERLAY         */  21700000
 DCL    ZF        FIXED(15) BASED     ;/*ADDRESSING OVERLAY         */  21800000
 /******************************************************************/   21900000
 /******************************************************************/   22000000
 /*                                                                 */  22100000
 /* ZCPTR CONTAINS THE DECLARATIONS THAT ARE USED TO ADDRESS       */   22200000
 /* RECORDS.THE STRUCTURE IS AN OVERLAY ON ZCPARRAY WHICH PROVIDES */   22300000
 /* STORAGE SPACE WITHIN THE SUBALLOCATE WORKAREA.                 */   22400000
 /*                                                                */   22500000
 DECLARE                                                                22600000
  1     ZCPTR   BASED(ZCPBASE)         ,/*ZCPBASE IS IN ZZCTLS     */   22700000
   3     ZCPE1    PTR(31)   BDY(BYTE)  ,/*-> CATRCD                */   22800000
   3     ZCPE2    PTR(31)   BDY(BYTE)  ,/*-> CTVRCTRL              */   22900000
   3     ZCPE3    PTR(31)   BDY(BYTE)  ,/*-> NEXT BYTE BEYOND GOP'S*/   23000000
   3     ZCPE4    PTR(31)   BDY(BYTE)  ,/*-> NEXT UNUSED BYTE      */   23100000
   3     ZCPE5    PTR(31)   BDY(BYTE)  ,/*-> CTVGOPT               */   23200000
   3     ZCPE6    PTR(31)   BDY(BYTE)  ,/*-> CTVSPHDR-DESGP-DSGRP  */   23300000
   3     ZCPE6A   PTR(31)   BDY(BYTE)  ,/*->GROUP VAR FIELD LENGTH  */  23400000
   3     ZCPE7    PTR(31)   BDY(BYTE)  ,/*->CURRENT FIELD IN GROUP */   23500000
   3     ZCPE7L   PTR(31)   BDY(BYTE)  ,/*PREVIOUS FLD IN GRP      */   23600000
   3     ZCPE7R   PTR(31)   BDY(BYTE)  ,/*NEXT FIELD IN GRP        */   23700000
   3     ZCPE7A   PTR(31)   BDY(BYTE)  ,/*->FIRST FIELD IN RUN      */  23800000
   3     ZCPE7X   PTR(31)   BDY(BYTE)  ,/*->,RUN SCAN LIMIT         */  23900000
   3     ZGOSEQ   FIXED(15) BDY(BYTE)  ,/*TARGET GOP SEQNO.        */   24000000
   3     ZGODSP   PTR(16)   BDY(BYTE)  ,/*DISP TO TARGET GROUP     */   24100000
   3     ZGOCI    CHAR(3)   BDY(BYTE)  ,/*CI FOR TARGET GROUP'S REC*/   24200000
   3     ZGOGC    PTR(8)    BDY(BYTE)  ,/*TARGET GOGC               */  24300000
   3     ZNTOGO   PTR(8)    BDY(BYTE)  ,/*SCAN CTL,GOP'S YET TO SEE*/   24400000
   3     ZNDONE   PTR(8)               ,/*SCAN CONTROL,GOPS PASSED  */  24500000
   3     ZNSEEN   PTR(8)    BDY(BYTE)  ;/*SCAN CTL,GOP'S SEEN      */   24600000
 /*******************************************************************/  24700000
 DCL                                    /*ADDRESSING OVERLAY        */  24800000
  1     ZGRPF    BASED                 ,/*GROUP FORMAT FIELDS       */  24900000
   3     ZCV      PTR(8)               ,/*CTVDESCV OR CTVDSGCV      */  25000000
   3     ZLF      PTR(8)               ;/*CTVDESLF OR CTVDSGLF      */  25100000
 /*******************************************************************/  25200000
 DCL                                    /*ADDRESSING OVERLAY        */  25300000
  1     ZGRPV    BASED                 ,/*GROUP VARIABLE FIELD LN   */  25400000
  3      ZLN      FIXED(15) BDY(BYTE)  ;/*CTVMAPLN OR CTVDSXCT      */  25500000
 /******************************************************************/   25600000
 DCL                                                                    25700000
  1     ZDSDIR   BASED(ZCPE7)          ,/*CURRENT DS-DIRECTORY SLOT*/   25800000
   3     ZDSX     FIXED(15) BDY(BYTE)  ,/*SH SEQ NO.               */   25900000
   3     ZDSXC    PTR(8)               ;/*#DS EXTENTS IN THIS SPACE*/   26000000
 /******************************************************************/   26100000
 DCL                                                                    26200000
  1     ZMAPRLC  BASED(ZCPE7)          ,/*CURRENT RLC              */   26300000
   3     ZMC      PTR(8)               ,/*RLC CODE                 */   26400000
  3      ZMCX     FIXED(15) BDY(BYTE) ,/* OFFSET VALUE               */ 26500000
   5     ZMCX1    PTR(8)              ,                                 26600000
   5     ZMCX2    PTR(8)              ;                                 26700000
 /******************************************************************/   26800000
 DCL                                                                    26900000
  1     ZMAPRLCA BASED(ZCPE7A)         ,/*NEXT RLC                 */   27000000
   3     ZMCA     PTR(8)               ,/* RLC CODE                */   27100000
   3     ZMCXA    FIXED(15) BDY(BYTE)  ;/* OFFSET VALUE            */   27200000
 /******************************************************************/   27300000
 DCL                                    /*PRECEDING RLC            */   27400000
  1     ZMAPRLCL   BASED(ZCPE7L)       ,                                27500000
   3     ZMCL     PTR(8)               ,                                27600000
   3     ZMCXL    FIXED(15) BDY(BYTE)  ;                                27700000
 /******************************************************************/   27800000
 DCL                                    /*NEXT RLC                 */   27900000
  1     ZMAPRLCR   BASED(ZCPE7R)       ,                                28000000
   3     ZMCR     PTR(8)               ,                                28100000
   3     ZMCXR    FIXED(15) BDY(BYTE)  ;                                28200000
 /******************************************************************/   28300000
 DCL                                                                    28400000
  1     ZXRLC    BASED                ,/*MAP MANIPULATION WORK AREA */  28500000
   3     ZXRLCL   CHAR(15)  BDY(BYTE) ,/* EXTENSION FIELD            */ 28600000
    5    ZXUL     CHAR(3)   BDY(BYTE) ,/*RLC @ TGT LEFT,UNAVAIL     */  28700000
     7   ZXULC    PTR(8)    BDY(BYTE) ,/*    CODE FIELD             */  28800000
     7   ZXULF    FIXED(15) BDY(BYTE) ,/*    EXTENSION FIELD        */  28900000
    5    ZXAXL    CHAR(3)   BDY(BYTE) ,/*RLC INSERT @ TGT LFT,AVAIL.*/  29000000
     7   ZXAXLC   PTR(8)    BDY(BYTE) ,/*    CODE FIELD             */  29100000
     7   ZXAXLF   FIXED(15) BDY(BYTE) ,/*    EXTENSION FIELD        */  29200000
    5    ZXUXL    CHAR(3)   BDY(BYTE) ,/*RLC INSERT @ TGT LFT,UNAV. */  29300000
     7   ZXUXLC   PTR(8)    BDY(BYTE) ,/*    CODE FIELD             */  29400000
     7   ZXUXLF   FIXED(15) BDY(BYTE) ,/*    EXTENSION FIELD        */  29500000
    5    ZXA0     CHAR(3)   BDY(BYTE) ,/*TARGET RLC,AVAILABLE SPACE */  29600000
     7   ZXA0C    PTR(8)    BDY(BYTE) ,/*    CODE FIELD             */  29700000
     7   ZXA0F    FIXED(15) BDY(BYTE) ,/*    EXTENSION FIELD        */  29800000
    5    ZXUR     CHAR(3)   BDY(BYTE) ,/*RLC @ TGT RIGHT,UNAVAIL.   */  29900000
     7   ZXURC    PTR(8)    BDY(BYTE) ,/*    CODE FIELD             */  30000000
     7   ZXURF    FIXED(15) BDY(BYTE) ;/* EXTENSION FIELD            */ 30100000
                                                                        30200000
 /*******************************************************************/  30300000
 /******************************************************************/   30400000
 /*                                                                 */  30500000
 DCL                          /*EXTENT CONTROL TABLE               */   30600000
  1     ZXCTL  BASED(ZRCBASE)          ,/*USED IN ALLOCATING EXTENT*/   30700000
                                        /*CONTAINS PTR TO SMALLEST */   30800000
                                        /* EXTENT CONTRIBUTED & MAX*/   30900000
                                        /* NO.OF EXTENTS ALLOWED.  */   31000000
   3     ZMINX    PTR(31)   BDY(BYTE)  ,/*->MIN EXT.IN ZSDXRC SET  */   31100000
   3     ZMAXX    PTR(8)               ,/*NO.OF EXTENTS ALLOWED    */   31200000
   3     ZXTOGO   PTR(8)               ,/*EXT CAPACITY REMAINING   */   31300000
   3     ZNTREQD  FIXED(15) BDY(BYTE)  ,/*NO.OF TRKS REQUESTED     */   31400000
   3     ZNTTOGO  FIXED(15) BDY(BYTE)  ,/*NO.OF TRKS YET NEEDED    */   31500000
   3     ZCAREQD  FIXED(15) BDY(BYTE)  ,/*NO.OF CA REQUIRED        */   31600000
   3     ZCATOGO  FIXED(15) BDY(BYTE)  ;/*NO.OF CA YET NEEDED      */   31700000
 /*                                                                 */  31800000
 /******************************************************************/   31900000
 /******************************************************************/   32000000
 /*                                                                 */  32100000
 DCL                          /* BASE VER RECALL INFORMATION       */   32200000
  1     ZVRC    BASED(ZRBASE0)         ,/*                         */   32300000
   3     ZVRCI    PTR(24)   BDY(BYTE)  ,/*BASE VER-CI              */   32400000
   3     ZVNDS    FIXED(15) BDY(BYTE)  ,/* CTVNDSET                */   32500000
   3     ZVNDSP   FIXED(15) BDY(BYTE)  ,/* # SH THIS VOLUME        */   32600000
   3     ZVSHSEEN FIXED(15) BDY(BYTE)  ,/* # SH SEEN               */   32700000
   3     ZGADSS   FIXED(15) BDY(BYTE)  ,/*POTENTIAL INSERT SLOT-SSN*/   32800000
   3     ZGADSSX  FIXED(15) BDY(BYTE)  ,/*POTENTIAL INSERT SLOT-SSN*/   32900000
   3     ZGADLN   FIXED(15) BDY(BYTE)  ,/*POTENTIAL INSERT SLOT-SIZE*/  33000000
   3     ZGADLNX  FIXED(15) BDY(BYTE)  ,/*POTENTIAL INSERT SLOT-SIZE*/  33100000
   3     ZGADCI   CHAR(3)   BDY(BYTE)  ,/*POTENTIAL INSERT SLOT-CI */   33200000
   3     ZGADCIX  CHAR(3)   BDY(BYTE)  ;/*POTENTIAL INSERT SLOT-CI */   33300000
 /*                                                                 */  33400000
 /******************************************************************/   33500000
 /******************************************************************/   33600000
 /*                                                                 */  33700000
 DCL                          /*DATA SET DIRECTORY RECALL INFO.    */   33800000
  1     ZDSRC   BASED(ZRBASEA)         ,/*                         */   33900000
   3     ZDSGET  PTR(8)               ,/*GET DSD DONE FLAG,1=DONE   */  34000000
   3     ZDSCI    PTR(24)   BDY(BYTE)  ,/*CI FOR DS-GOP            */   34100000
   3     ZDSNEX   PTR(8)               ,/* # DS EXTENTS            */   34200000
   3     ZDSINSP  PTR(8)              ,/* 1=DS IN SPACE,0=NOT IN SP.*/  34300000
   3     ZDSXINSP PTR(8)              ,/*#DS EXTENTS IN THE SPACE   */  34400000
   3     ZDSXCI   PTR(24)   BDY(BYTE)  ,/*CI FOR TARGET CTVDSDIR   */   34500000
   3     ZDSGOP   CHAR(6)   BDY(BYTE)  ,/*OVERLAY,LIKE 'CTVGOPT'   */   34600000
    5    ZDSOCI   CHAR(3)   BDY(BYTE)  ,/*   CTVGOCI               */   34700000
     7   ZDSFLG   BIT(8)               ,/*   CTVGOFLG              */   34800000
     7   ZDSDSP   FIXED(15) BDY(BYTE)  ,/*   CTVGODSP              */   34900000
    5    ZDSGCI   PTR(8)               ,/*   CTVGOGCI              */   35000000
     7   ZDSEXT   BIT(1)               ,/*   CTVGOEXT              */   35100000
     7   ZDSDEL   BIT(1)               ,/*   CTVGODEL              */   35200000
     7   ZDSOGC   BIT(6)               ,/*   CTVGOGC               */   35300000
    5    ZDSSEQ   FIXED(15) BDY(BYTE)  ;/*   CTVGOSEQ              */   35400000
 /*                                                                 */  35500000
 /******************************************************************/   35600000
 /******************************************************************/   35700000
 /*                                                                 */  35800000
 DCL                          /*SPACE HEADER RECALL CONTROL INFO.  */   35900000
  1     ZSHRC    BASED(ZRBASEB)        ,/*                         */   36000000
   3     ZSHCI    PTR(24)   BDY(BYTE)  ,/*CI FOR SH-GOP            */   36100000
   3     ZSHGOP   CHAR(6)   BDY(BYTE)  ,/*OVERLAY,LIKE CTVGOPT     */   36200000
    5    ZSHOCI   CHAR(3)   BDY(BYTE)  ,/*   CTVGOCI               */   36300000
     7   ZSHFLG   BIT(8)               ,/*   CTVGOFLG              */   36400000
     7   ZSHDSP   FIXED(15) BDY(BYTE)  ,/*   CTVGODSP              */   36500000
    5    ZSHGCI   PTR(8)               ,/*   CTVGOGCI              */   36600000
     7   ZSHEXT   BIT(1)               ,/*   CTVGOEXT              */   36700000
     7   ZSHDEL   BIT(1)               ,/*   CTVGODEL              */   36800000
     7   ZSHOGC   BIT(6)               ,/*   CTVGOGC               */   36900000
    5    ZSHSEQ   FIXED(15) BDY(BYTE)  ,/*   CTVGOSEQ              */   37000000
   3     ZSHNDS   FIXED(15) BDY(BYTE)  ,/*NO.DS IN SPACE           */   37100000
   3     ZSHNEX   PTR(8)               ,/*NO.EXT IN SPACE          */   37200000
   3     ZSHSPFLG BIT(8)               ,/*SH FLAGS                 */   37300000
    5    ZSHUNQ   BIT(1)               ,/*  UNIQUE                 */   37400000
    5    ZSHAUT   BIT(1)               ,/*  AUTOMATICLY BUILT      */   37500000
    5    ZSHUCT   BIT(1)               ,/*  USER CAT IN SPACE      */   37600000
    5    ZSHMCT   BIT(1)               ,/*MASTER CATALOG IN SPACE  */   37700000
    5    *        BIT(4)               ,/*RESERVED                 */   37800000
   3     ZSHNX    PTR(8)               ,/*NO.OF EXTS SO FAR        */   37900000
   3     ZSHNSD   PTR(8)               ,/*NO.OF SD THIS PASS       */   38000000
   3     ZSHTOGO  PTR(8)               ,/*SCAN PARM SAVE ZNTOGO    */   38100000
   3     ZSHSEEN  PTR(8)               ,/*SCAN PARM SAVE ZNSEEN    */   38200000
   3     ZSHCPE5  PTR(31)   BDY(BYTE)  ;/*SCAN PARM SAVE ZCPE5     */   38300000
 /*                                                                 */  38400000
 /******************************************************************/   38500000
 /******************************************************************/   38600000
 /*                                                                 */  38700000
 DCL                          /*SPACE DESCRIPTOR RECALL INFORMATION*/   38800000
  1     ZSDRC   BASED(ZRBASEC)         ,/*                         */   38900000
   3     ZSDCI    PTR(24)   BDY(BYTE)  ,/*CI FOR SD GOP            */   39000000
   3     ZSDOCI1  PTR(24)   BDY(BYTE) ,/*SPACE MAP EXTN FIRST REC CI*/  39100000
   3     ZSDOCI2  PTR(24)   BDY(BYTE) ,/*SPACE MAP EXTN LAST REC CI */  39200000
   3     ZSDGOP   CHAR(6)   BDY(BYTE)  ,/*OVERLAY,LIKE CTVGOPT     */   39300000
    5    ZSDOCI   CHAR(3)   BDY(BYTE)  ,/*   CTGOCI                */   39400000
     7   ZSDFLG   BIT(8)               ,/*   CTVGOFLG              */   39500000
     7   ZSDDSP   FIXED(15) BDY(BYTE)  ,/*   CTVGODSP              */   39600000
    5    ZSDGCI   PTR(8)               ,/*   CTVGOGCI              */   39700000
     7   ZSDEXT   BIT(1)               ,/*   CTVGOEXT              */   39800000
     7   ZSDDEL   BIT(1)               ,/*   CTVGODEL              */   39900000
     7   ZSDOGC   BIT(6)               ,/*   CTVGOGC               */   40000000
    5    ZSDSEQ   FIXED(15) BDY(BYTE)  ,/*   CTVGOSEQ              */   40100000
   3     ZSDUU    FIXED(15) BDY(BYTE) ,/*#ALLOC UNITS USED          */  40200000
   3     ZSDTN    FIXED(15) BDY(BYTE)  ,/*FIRST TRK NO. OF EXTENT  */   40300000
   3     ZSDTNA   FIXED(15) BDY(BYTE)  ,/*FIRST AVAILABLE TRACK */      40400000
   3     ZSDNT    FIXED(15) BDY(BYTE)  ,/*NO.OF TRKS IN EXTENT     */   40500000
   3     ZSDTC    FIXED(15) BDY(BYTE)  ,/* #TRKS DURING RLC SCAN  */    40600000
   3     ZSDNX    PTR(8)               ,/*NO.EXT THIS SD SO FAR    */   40700000
   3     ZSDCT    FIXED(15) BDY(BYTE) ,/* FREE SPACE IN GROUP,TALLY  */ 40800000
   3     ZSDTOGO  PTR(8)               ,/*SCAN PARM ZNTOGO         */   40900000
   3     ZSDSEEN  PTR(8)               ,/*SCAN PARM ZNSEEN         */   41000000
   3     ZSDCPE5  PTR(31)   BDY(BYTE)  ;/*SCAN PARM ZCPE5          */   41100000
 /*                                                                 */  41200000
 /******************************************************************/   41300000
 /******************************************************************/   41400000
 /*                                                                 */  41500000
 DCL                          /*SD EXTENT CONTRIBUTED RECALL INFO  */   41600000
  1     ZSDXRC   BASED(ZRBASED)        ,/*                         */   41700000
   3     ZSDXSS   FIXED(15) BDY(BYTE)  ,/*SPACE DESCRIPTOR SEQ NUMB */  41800000
   3     ZSDXCI   PTR(24)   BDY(BYTE)  ,/*CI OF SD GROUP MAP-EXT   */   41900000
   3     ZSDXOCI  PTR(24)   BDY(BYTE) ,/*ZSDOCI OF PARENT           */  42000000
   3     ZSDXOCI1 PTR(24)   BDY(BYTE) ,/*ZSDOCI1 OF PARENT          */  42100000
   3     ZSDXOCI2 PTR(24)   BDY(BYTE) ,/*ZSDOCI2 OF PARENT          */  42200000
   3     ZSDXTN   FIXED(15) BDY(BYTE)  ,/*CONTRIBUTOR TRACK NO.    */   42300000
   3     ZSDXNT   FIXED(15) BDY(BYTE)  ,/*NO.OF TRACKS CONTRIBUTED */   42400000
   3     ZSDXSP   FIXED(15) BDY(BYTE) ,/*REC SPACE IN RELATED SD    */  42500000
   3     ZSDXTNA  FIXED(15) BDY(BYTE) ;/*BASE TRACK# @ MAP IX LOC   */  42600000
 /*                                                                 */  42700000
 /******************************************************************/   42800000
 /******************************************************************/   42900000
 /*                                                                 */  43000000
 DCL                                    /*                         */   43100000
  1     ZRCPTR  BASED                  ,/*PTRS TO ZRCARRAY SECTIONS*/   43200000
   3     ZRCBASE  PTR(31)   BDY(BYTE)  ,/*ZXCTL &BASE FOR ZRCARRAY */   43300000
   3     ZRBASE0  PTR(31)   BDY(BYTE)  ,/*ZVRC                     */   43400000
   3     ZRBASEA  PTR(31)   BDY(BYTE)  ,/*ZDSRC                    */   43500000
   3     ZRBASEB  PTR(31)   BDY(BYTE)  ,/*ZSHRC                    */   43600000
   3     ZRBASEC  PTR(31)   BDY(BYTE)  ,/*ZSDRC                    */   43700000
   3     ZRBASED  PTR(31)   BDY(BYTE)  ,/*ZSDXRC                   */   43800000
   3     ZRPSAVE  PTR(31)   BDY(BYTE)  ;/*WORKING BASE             */   43900000
 /*                                                                 */  44000000
 /******************************************************************/   44100000
 DCL                                    /*ADDRESSING OVERLAY       */   44200000
  1     ZZCP   BASED                   ,                                44300000
   3     *        CHAR(LENGTH(ZCPTR))  ,                                44400000
   3     *        CHAR(LENGTH(ZCPTR))  ,                                44500000
   3     *        CHAR(LENGTH(ZCPTR))  ;                                44600000
 /******************************************************************/   44700000
 DCL                                    /*ADDRESSING OVERLAY       */   44800000
  1     ZZCPA           BASED          ,                                44900000
   3     *        CHAR(LENGTH(ZZCP))   ,                                45000000
    5    ZCPARRAY (*) CHAR(1)          ;                                45100000
 /******************************************************************/   45200000
 /*                                                                 */  45300000
 DCL                                    /*ADDRESSING OVERLAY       */   45400000
  1     ZZRC                BASED      ,                                45500000
   3     *        CHAR(LENGTH(ZXCTL))  ,                                45600000
   3     *        CHAR(LENGTH(ZVRC))   ,                                45700000
   3     *        CHAR(LENGTH(ZDSRC))  ,                                45800000
   3     *        CHAR(LENGTH(ZSHRC))  ,                                45900000
   3     *        CHAR(LENGTH(ZSDRC)) ,                                 46000000
   3     *   (5)  CHAR(LENGTH(ZSDXRC)) ;                                46100000
 /*                                                                 */  46200000
 /******************************************************************/   46300000
 /******************************************************************/   46400000
 /*                                                                 */  46500000
 DCL                                    /*ADDRESSING OVERLAY       */   46600000
  1     ZZRCA           BASED          ,                                46700000
    3    *        CHAR(LENGTH(ZZRC))  ,                                 46800000
    5    ZRCARRAY (*) CHAR(1)          ;                                46900000
 /*                                                                */   47000000
 /******************************************************************/   47100000
 /******************************************************************/   47200000
 /*                                                                */   47300000
 DCL                                    /*ADDRESSING OVERLAY       */   47400000
  1     ZZLOC               BASED      ,                                47500000
   3     *        CHAR(LENGTH(ZTEMP))  ,                                47600000
   3     *        CHAR(LENGTH(ZZCTLS)) ,                                47700000
   3     *        CHAR(LENGTH(ZCPS))  ,                                 47800000
   3     *       CHAR(LENGTH(ZFPS))    ,                                47900000
   3     *        CHAR(LENGTH(ZZCP))   ,                                48000000
   3     *        CHAR(LENGTH(ZZRC))   ,                                48100000
   3     *        CHAR(LENGTH(ZRCPTR)) ;                                48200000
 /******************************************************************/   48300000
 DCL                                    /*ADDRESSING OVERLAY       */   48400000
  1     ZZLOCA          BASED          ,                                48500000
   3     *        CHAR(LENGTH(ZZLOC))  ,                                48600000
    5    ZLOC     (*) CHAR(1)          ;                                48700000
 /******************************************************************/   48800000
 /*                                                                 */  48900000
 /******************************************************************/   49000000
 /*******************************************************************/  49100000
 /*******************************************************************/  49200000
                                                                        49300000
 RFY  CATRCD   BASED(ZCPE1);                                            49400000
 RFY  CTVRCTRL BASED(ZCPE2);                                            49500000
 RFY  CTVGOPT  BASED(ZCPE5);                                            49600000
 RFY  CTVSPHDR BASED(ZCPE6);                                            49700000
 RFY  CTVDSGRP BASED(ZCPE6);                                            49800000
 RFY  CTVDESGP BASED(ZCPE6);                                            49900000
 RFY  USERLIST BASED(SALVLIST);                                         50000000
                                                                        50100000
 /*******************************************************************/  50200000
                                                                        50300000
 RFY  ZLOCBASE BASED(ADDR(SALAXWA));                                    50400000
 RFY  ZTEMP    BASED(ADDR(ZLOCBASE)+LENGTH(ZLOCBASE));                  50500000
 RFY  ZZCTLS   BASED(ADDR(ZTEMP)   +LENGTH(ZTEMP));                     50600000
 RFY ZCPS BASED(ADDR(ZZCTLS)+LENGTH(ZZCTLS));                           50700000
 RFY ZFPS BASED(ADDR(ZCPS) + LENGTH(ZCPS));                             50800000
 RFY  ZZCPA    BASED(ADDR(ZFPS)    +LENGTH(ZFPS));                      50900000
 RFY  ZADDR    BASED(CCAMNADR);                                         51000000
 RFY   ZID     BASED(ADDR(ZADDR)+ LENGTH(ZADDR));                       51100000
 RFY   ZRCPTR BASED(ADDR(ZID)  +  LENGTH(ZID));                         51200000
 RFY  ZZRCA    BASED(ADDR(ZRCPTR)  +LENGTH(ZRCPTR));                    51300000
                                                                        51400000
 RFY   ZXRLC   BASED(ADDR(ZZRCA)  +LENGTH(ZZRCA));                      51500000
 RFY   ZYRLC   BASED(ADDR(ZXRLC)  +LENGTH(ZXRLC));                      51600000
 /*******************************************************************/  51700000
./  ADD  SSI=40650768,NAME=IGGPARML
         MACRO                                                          00500002
         IGGPARML                                                       01000002
* /* MACCOMP Y-2 SC1D0/SJD48            */                              01050002
* /* MACSTAT Y-2 73124/021160           */                              01100002
.* /* START OF SPECIFICATIONS ****                                      01150002
.*                                                                      01200002
.*01  MODULE-NAME = IGGPARML                                            01250002
.*                                                                      01300002
.*01  COPYRIGHT = NONE                                                  01350002
.*                                                                      01400002
.*01  STATUS = VS2 RELEASE 2 LEVEL 2                                    01450002
.*                                                                      01460002
.*01  DESCRIPTIVE-NAME = OPEN/CLOSE EXECUTOR PARAMETER LIST             01470002
.*                                                                      01480002
.*01  FUNCTION = DESCRIBES PARAMETER LIST PASSED TO OPEN/CLOSE EXECS    01490002
.*                                                                      01492002
.*01  MODULE-TYPE = MACRO                                               01494002
.*                                                                      01496002
.*02    MACRO-SIZE = NA FOR MAPPING MACRO                               01498002
.*                                                                      01498402
.*02    PARAMETER-RECEIVED = NONE                                       01498802
.*                                                                      01499202
.*01  TABLES = NONE                                                     01499602
.*                                                                      01499702
.*01  INNER-MACROS = NONE                                               01499802
.*                                                                      01499902
.*01  SYSTEM-MACROS = NONE                                              01549902
.*                                                                      01559902
.*01  CHANGE-ACTIVITY = SEE BELOW                                       01569902
.*    VS2 REL 2                                                         01579902
.*       MACRO CREATED                                                  01589902
.*                                                                      01591902
.*                                                                      01593902
.**** END OF SPECIFICATIONS ***/                                        01595902
*                                                                       01599902
* THIS DSECT EXPANDS THE ONE WORD PARAMETER LIST PASSED TO THE          02000002
* OPEN/CLOSE EXECUTORS FROM COMMON OPEN/CLOSE.                          02500002
*                                                                       03000002
* DESCRIPTIVE LAYOUT                                                    03050002
*           +0        +1                                                03100002
*              ________________________________________                 03150002
*              |        |                             |                 03160002
*              | OPTION |   DCB ADDRESS               |                 03200002
*              |________|_____________________________|                 03300002
*                                                                       03350002
         SPACE 2                                                        03400002
PARML    DSECT                                                          03500002
PARDCBAD DS    0A                       SAME AS PARDCBAB BELOW          04000002
PAROPT   DS    X                        OPEN/CLOSE OPTIONS              04500002
PARENLST EQU   X'80'                    INDICATES END OF LIST           04510002
*                                                                       04550002
* CLOSE OPTIONS                                                         04600002
*                                                                       04650002
PARREWND EQU   X'40'                    REWIND                          04700002
PARLEAVE EQU   X'30'                    LEAVE                           04750002
PARFREE  EQU   X'20'                    UNALLOCATE DURING CLOSE         04800002
PARRREAD EQU   X'10'                    REREAD                          04850002
*                                                                       04900002
* OPEN OPTIONS                                                          04950002
*                                                                       04960002
PAROUTPT EQU   X'0F'                    OUTPUT                          04970002
PAROUTIN EQU   X'07'                    OUTIN                           04980002
PARUPDAT EQU   X'04'                    UPDATE                          04990002
PARINOUT EQU   X'03'                    INOUT                           04992002
PARRDBCK EQU   X'01'                    READBACK                        04994002
PARINPUT EQU   X'00'                    INPUT                           04996002
PARDCBAB DS    AL3                      ADDRESS OF DCB                  05000002
         MEND                                                           05500002
./  ADD  SSI=31320978,NAME=IGGRDX
*%;/*                                                                   00605002
         MACRO                                                          00610002
         IGGRDX                                                         01000002
.* /* START OF SPECIFICATIONS ****                                      01065002
.*                                                                      01070002
.*01  MODULE-NAME = IGGRDX                                              01075002
.*                                                                      01080002
.*01  COPYRIGHT = NONE                                                  01085002
.*                                                                      01090002
.*01  STATUS = CHANGE LEVEL 01                                          01095002
.*                                                                      01100002
.*01  DESCRIPTIVE-NAME = READX EXCLUSIVE LIST FORMAT                    01115002
.*                                                                      01120002
.*01  FUNCTION = FORMATS THE LIST CONTAINING IOBS WAITING FOR EXCLUSIVE 01125002
.*               CONTROL OF BLOCKS WHOSE IDS(UCB+CCHHR) ARE IDENTIFIED  01126002
.*               IN THE SAME READ EXCLUSIVE LIST ENTRY AND ARE AT THAT  01127002
.*               TIME UNDER THE CONTROL OF ANOTHER REQUEST.             01128002
.*                                                                      01130002
.*01  NOTES = NONE                                                      01135002
.*                                                                      01140002
.*02    DEPENDENCIES = NA                                               01145002
.*                                                                      01150002
.*02    PERFORMANCE = NA                                                01155002
.*                                                                      01160002
.*02    RESTRICTIONS = NA                                               01165002
.*                                                                      01170002
.*02    REGISTER-CONVENTIONS = NA                                       01175002
.*                                                                      01180002
.*02    PATCH-LABEL = NA                                                01185002
.*                                                                      01190002
.*01  MODULE-TYPE = MACRO                                               01195002
.*                                                                      01210002
.*02  MACRO-SIZE =  NA                                                  01215002
.*                                                                      01220002
.*02  EXTERNAL-REFERENCES = NA                                          01225002
.*                                                                      01230002
.*01INNER-MACROS = NONE                                                 01235002
.*                                                                      01240002
.*01SYSTEM-MACROS = NONE                                                01245002
.*                                                                      01250002
.*01  CHANGE-ACTIVITY = SEE BELOW                                       01251002
.*                                                                      01252002
.*             VS2 RELEASE 2                                            01253002
.*                                                                      01255002
.**** END OF SPECIFICATIONS ***/                                        01260002
* /* MACCOMP Y-2 SC1D7/SJD48                                   Y02072*/ 01265002
* /* MACSTAT Y-2 73122/021160                                  Y02072*/ 01270002
*/********************************************************************/ 01500002
*/*THE FOLLOWING DSECT FORMATS A BDAM READ EXCLUSIVE LIST SEGMENT,   */ 02000002
*/*WITH NINE 16-BYTE ENTRIES,EACH ENTRY ASSOCIATED WITH A BLOCK UNDER*/ 02005002
*/*EXCLUSIVE CONTROL.EACH ENTRY CONTAINS AN 8-BYTE BLOCK ID (UCB ADDR*/ 02010002
*/*+CCHHR) AND THE FIRST AND LAST IOB ADDRESS IN A CHAIN OF IOBS     */ 02015002
*/*WAITING FOR EXCLUSIVE CONTROL OF THE BLOCK. EACH IOB CONTAINS THE */ 02016002
*/*ADDR OF THE NEXT WAITING IOB IN FIELD,IOBDQPTR.THE LIST IS MADE UP*/ 02016202
*/*OF 152-BYTE SEGMENTS(9 ENTRIES/SEG) CHAINED TOGETHER. NEW SEGMENTS*/ 02025002
*/*ARE GOTTEN DYNAMICALLY WHEN THE PREVIOUS SEGMENT IS FULL. THE ADDR*/ 02030002
*/*OF THE NEXT SEGMENT IS STORED IN THE SECOND WORD OF THE PREVIOUS  */ 02035002
*/*SEGMENT.                                                          */ 02040002
*/********************************************************************/ 04000002
*%GOTO RDXPLS2;                         /*                     Y02072*/ 04050002
RDXLIST  DSECT                                                          04500002
RDXRSV01 DS    XL4                      UNUSED                   Y02072 05000002
RDXMAXCT EQU   X'09'                    NUMBER OF ENTRIES PER SEGMENT   06000002
RDXNEXT  DS    A                        POINTER TO NEXT SEGMENT IF ONE  07000002
*                                       EXISTS, OTHERWISE ZEROES        07500002
RDXENT   EQU   *                        READX ENTRY (SEE BELOW)         08000002
RDXLSTLG EQU   152                      LENGTH OF LIST SEGMENT   Y02072 08500002
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   09000002
*                FORMAT OF ONE ENTRY IN THE LIST                        09001002
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   09005002
RDXENTRY DSECT                                                          09500002
RDXNQARG DS    XL8                      UCB/CCHHR FOR BLOCK      Y02072 09550002
RDXIOBUQ DS    A                        ADDR OF FIRST IOB ON     Y02072 09600002
*                                       UNPOSTED QUEUE (OR 0 )   Y02072 09650002
RDXUQND  DS    A                        ADDR LAST IOB ON QUEUE   Y02072 09700002
RDXENTLN EQU   *-RDXENTRY               LENGTH OF EACH ENTRY     Y02072 09750002
         MEND                                                           12000002
*%RDXPLS2: ;                            /*                     Y02072*/ 12050002
*DCL 1 RDXLIST CHAR(152) BDY(WORD) BASED,/* READ EXCLUSIVE LIST DSECT*/ 12100002
*      2 RDXRSV01 CHAR(4) BDY(WORD),    /* UNUSED                    */ 12150002
*      2 RDXNEXT PTR(31),               /* ADDRESS OF NEXT SEGMENT   */ 12200002
*      2 RDXENT CHAR(16);               /* ENTRY IN READX LIST, DES-    12250002
*                                          CRIBED BELOW IN RDXENTRY  */ 12260002
*DCL RDXMAXCT FIXED(8) CONSTANT(9),     /* NUMBER OF ENTRIES/SEGMENT */ 12300002
*    RDXLSTLG FIXED(8) CONSTANT(152);   /* LENGTH OF 1 READX SEGMENT */ 12350002
*/*                                                                  */ 12360002
*/*   THE FOLLOWING FORMATS ONE ENTRY IN THE READ EXCLUSIVE LIST     */ 12400002
*/*                                                                  */ 12450002
*DCL 1 RDXENTRY CHAR(16) BDY(WORD) BASED, /* FORMAT OF 1 ENTRY       */ 12500002
*      2 RDXNQARG CHAR(8),              /* ENQ/DEQ MINOR QNAME-         12550002
*                                          UCB + CCHHR OF BLOCK      */ 12560002
*      2 RDXIOBUQ PTR(31),              /* ADDR OF FIRST IOB ON         12600002
*                                          UNPOSTED QUEUE (OR ZERO)  */ 12610002
*      2 RDXUQND PTR(31);               /* ADDR OF LAST IOB ON QUEUE */ 12650002
./  ADD  SSI=31350022,NAME=IGGSCAN
         MACRO                                                          00700020
&NAME    IGGSCAN  &OPTCD=                                               01400020
         GBLC  &LIB                                                     01402021
         GBLB  &CPOPS                                                   01410020
.*         RELEASE OS/VS2-02 DELETIONS/CHANGES                          01410102
*    01/10/73          LEVEL=01                                         01412102
         AIF   (&CPOPS).NOCPOPS                                         01420020
&CPOPS   SETB  1                                                        01430020
         IGGCPOPS                                                       01440020
.NOCPOPS ANOP                                                           01450020
&NAME    DSECT                          SCAN MODE WORK AREA             02100020
W1ECBI   DS    F                        ECBI-INPUT CONTROL BLOCK        02800020
W1IOBI   DS    0BL44                    LAYOUT OF IOBI                  03500020
W1IF1    DS    BL1                      FLAGS1 BYTE                     04200020
W1IF2    DS    BL1                      FLAGS2 BYTE                     04900020
W1ISENSE DS    BL2                      SENSE INFO. FROM IOS            05600020
W1IECBAD DS    A                        ECB POINTER                     06300020
W1ICSW   DS    0BL8                     CSW FROM IOS                    07000020
W1KEY    DS    0BL1                                                     07700020
W1COMAD  DS    A                        ADDR LAST CCW EXECUTED + 8      08400020
W1STATUS DS    BL2                      STATUS                          09100020
W1COUNT  DS    BL2                      RESIDUAL COUNT                  09800020
W1ISIOCC DS    0BL1                     SIO CONDITION CODE              10500020
W1ICPS   DS    A                        ADDRESS 1ST CP TO BE EXECUTED   11200020
W1IWGHT  DS    0BL1                     WEIGHT                          11900020
W1IDCBAD DS    A                        DCB POINTER                     12600020
W1ICPRES DS    A                        CP RESTART ADDRESS              13300020
W1IBLKCT DS    BL2                      BLK COUNT                       14000020
W1IERRCT DS    BL2                      ERROR COUNT (RETRIES)           14700020
W1IDAD   DS    0BL8                     IOBI DIR.ACCESS DEVICE ADDRESS. 15400020
W1IMBBCC DS    BL5                      MBBCC                           16100020
W1IHHR   DS    BL3                      HHR                             16800020
W1IEXTEN DS    BL2                      INPUT APPENDAGE CODE            17500020
W1CPNUM  DS    BL2                      USED AS SAVE AREA BY SCHED RTN  18200020
         DS    0F                       TO RELOC ON FULL WORD           18900020
W1ECBO   DS    F                        ECBO-OUTPUT EVENT CONTROL BLOCK 19600020
W1IOBO   DS    0BL44                    LAYOUT OF IOBO                  20300020
W1OF1    DS    BL1                      FLAGS 1 BYTE                    21000020
W1OF2    DS    BL1                      FLAGS 2 BYTE                    21700020
W1OSENSE DS    BL2                      SENSE INFO. FROM IOS            22400020
W1OECBAD DS    A                        ECB POINTER                     23100020
W1OCSW   DS    0BL8                     CSW FROM IOS                    23800020
W1KEYO   DS    0BL1                                                     24500020
W1COMADO DS    A                        ADDR LAST CCW EXECUTED&8        25200020
W1STATO  DS    BL2                      STATUS BYTES                    25900020
W1COUNTO DS    BL2                      RESIDUAL COUNT                  26600020
W1OSIOCC DS    0BL1                     SIO CONDITION CODE              27300020
W1OCPS   DS    A                        ADDRESS 1ST CCW TO BE EXECUTED  28000020
W1OWGHT  DS    0BL1                     WEIGHT                          28700020
W1ODCBAD DS    A                        DCB POINTER                     29400020
W1OCPRES DS    A                        CP RESTART ADDRESS              30100020
W1OBLKCT DS    BL2                      BLK CNT                         30800020
W1OERRCT DS    BL2                      ERROR COUNT (RETRIES)           31500020
W1ODAD   DS    0BL8                     IOBO DIR. ACCESS DEVICE ADDRESS 32200020
W1OMBBCC DS    BL5                      MBBCC                           32900020
W1OHHR   DS    BL3                      HHR                             33600020
W1OEXTEN DS    BL2                      OUTPUT APPENDAGE CODE           34300020
W1SAV7   DS    BL2                      USED AS SAVE AREA BY SCHED RTN  35000020
W1OSBIT1 DS    BL1                      OVERALL STATUS BYTE 1           35700020
W1OSBIT2 DS    BL1                      OVERALL STATUS BYTE 2           36400020
W1OSBIT3 DS    BL1                      OVERALL STATUS BYTE 3           37100020
W1ICNOT  DS    BL1                      BUFNO/2(USED TO SCHEDULE IP-OP) 37800020
W1KEYBLK DS    BL4                      USED BY SETL < FOR ADDR WITHIN  38500020
*                                       BLOCK OF THE REQUESTED RECORD   39200020
W1LPDR   DS    0BL8                     LAST PRIME DATA RCD READ.       39900020
W1LMBBCC DS    BL5                      LPDR MBBCC                      40600020
W1LHH    DS    BL2                      LPDR HH                         41300020
W1LR     DS    BL1                      LPDR R                          42000020
W1CBF    DS    A                        CURRENT BUFFER ADDRESS          42700020
W1EOB    DS    A                        END OF BUFFER ADDRESS           43400020
W1COUNTR DS    BL2                      CTR OF RETRIES IN WRITE CHECK   44100020
PRIMEIND DS    BL1                      SWITCH FOR TESTING SAME DEVICE  44800020
FIXIND   DS    BL1                      TEMPORARY STORAGE               45500020
W1FCPS   DS    A                        1ST CP SCHEDULED (WRITE)        46200020
W1QTABLE DS    0BL60                    QTABLE                          46900020
W1FR1ST  DS    A                        POINTER TO 1ST CP ON FREE Q     47600020
W1FRLAST DS    A                        POINTER TO LAST CP ON FREE Q    48300020
         DS    BL2                      (MUST BE ZERO)                  49000020
W1FREEC  DS    BL2                      NO. BUFFERS ON FREE Q           49700020
W1RD1ST  DS    A                        POINTER TO 1ST CP ON READ Q     50400020
W1RDLAST DS    A                        POINTER TO LAST CP ON READ Q    51100020
W1READR  DS    BL2                      RESIDUE BUFS ON READ Q -UNUSED  51800020
W1READC  DS    BL2                      NO. OF BUFS ON READ Q           52500020
W1US1ST  DS    A                        POINTER OT 1ST CP ON USER Q     53200020
W1USLAST DS    A                        POINTER TO LAST CP ON USER Q    53900020
         DS    BL2                      (MUST BE ZERO)                  54600020
W1USERC  DS    BL2                      NO. OF BUFS ON USER Q           55300020
W1PX1ST  DS    A                        POINTER TO 1ST CP ON PUTX Q     56000020
W1PXLAST DS    A                        POINTER TO LAST CP ON PUTX Q    56700020
         DS    BL2                      (MUST BE ZERO)                  57400020
W1PUTXC  DS    BL2                      NO. OF BUFFERS ON PUTX QUEUE    58100020
W1WR1ST  DS    A                        POINTER TO 1ST CP ON WRITE Q    58800020
W1WRLAST DS    A                        POINTER TO LAST CP ON WRITE Q   59500020
         DS    BL2                      (MUST BE ZERO)                  60200020
W1WRITEC DS    BL2                      NO. OF BUFFERS ON WRITE QUEUE   60900020
W1WAREA  DS    0BL36                    AREA FOR TRACK INDEX ENTRIES    61600020
W1WCOUNT DS    BL8                      COUNT OF CURRENT INDEX ENTRY    62300020
W1WCNXDM DS    BL8                      COUNT OF NEXT NORMAL OR DUMMY   63000020
W1WOVFL  DS    BL10                     DATA OF CURRENT OVERFLOW ENTRY  63700020
W1WDNXDM DS    BL10                     DATA OF NEXT NORMAL OR DUMMY    64400020
W1WPLEN  DS    BL2                      BYTE LENGTH OF WORKAREA         65100020
W1CURLEN DS    BL2                      LENGTH OF CURRENT LOGICAL REC   65800020
W1TEMPSA DS    BL4                      TEMPORARY STORAGE               66500020
W1REGSV2 DS    BL4                      AREA TO SAVE CONTENTS OF A REG  67200020
W1REGSAV DS    BL4                      AREA TO SAVE CONTENTS OF A REG  67900020
W1REGSV3 DS    BL4                      TEMPORARY STORAGE               68600020
W1CP23PT DS    A                        ADDRESS OF CP 23                79100020
W1CP26PT DS    A                        ADDRESS OF CP 26                79800020
W1CP25PT DS    A                        ADDRESS OF CP 25                80500020
         DS    0D                                                       81200020
W1CP24   DS    0BL72                    CHAN PROG 24 READ TRACK INDEXES 81900020
         IGGCP24                                                        82600020
         DS    0D                       ROUND TO DOUBLE WORD BDY        88210020
W1WDCXDM DS    CL10                     VLR DATA FOR CURR NORMAL IX     89600020
W1ISECT  DS    1C                       CURRENT INPUT SECTOR VALUE      90300020
W1OSECT  DS    1C                       CURRENT OUTPUT SECTOR VALUE     90310020
W1DCBFA  DS    1F                       DCB FIELD AREA PTR              90320020
         DS    0D                       ROUND TO NEXT DBL WD.           91700020
W1VLRLN  EQU   *-&NAME                  LENGTH OF BASIC SECTION.        92400020
*                                                                       92450020
W1ICPEXT CCW   SETSECT,0,CC,1           RPS CP EXT. FOR INPUT           93100020
W1ICPTIC CCW   TIC,0,0,0                SET SECTOR AND TIC              93150002
*                                                                       93200020
W1OCPEXT CCW   SETSECT,0,CC,1           RPS CP EXT. FOR OUTPUT          93800020
W1OCPTIC CCW   TIC,0,0,0                SET SECTOR AND TIC              93810002
*                                                                       93820020
W1RDCNT  CCW   RDCNT,0,CC+SKIP,0        POSITION TO NEXT RECORD         93850020
W1RDSECT CCW   RDSECT,0,0,0             GET SECTOR FOR NEXT GET         93900020
*                                                                       93910020
W1CN5SAV DS    A                        SAVE AREA TO RESTORE TIC        93950020
W1RPSSA  DS    4F                       WORK AREA (SIO APPENDAGES)      94000020
W1TOTAL  DS    H                        RUNNING TRACK BALANCE           94050020
W1RECLEN DS    H                        MINIMUM LENGTH PRIME RECORDS    94100020
W1OVLEN  DS    H                        MINIMUM LENGTH OVERFLOW RECORDS 94150020
W1FSTSH  DS    H                        RUNNING BALANCE TO FIRST SHARED 94200020
*   LIMITS FOR OVERFLOW SECTOR GUESSES VARIABLE                         94250020
W1RPSC1  DS    FL1                      LOWER LIMIT CYLINDER OVERFLOW   94300020
W1RPSC2  DS    FL1                      UPPER LIMIT CYLINDER OVERFLOW   94350020
W1RPSI1  DS    FL1                      LOWER LIMIT IND OVERFLOW        94400020
W1RPSI2  DS    FL1                      UPPER LIMIT IND OVERFLOW        94450020
*                                                                       94460020
W1RPSLN  EQU   *-&NAME                  LENGTH INCLUDING RPS FIELDS.    94500020
         MEND                                                           95200020
./  ADD  SSI=32510209,NAME=IGGSCW
         MACRO                                                          00500002
         IGGSCW                                                         01000002
* /* MACCOMP Y-2 SC1D0/SJD48            */                              01050002
* /* MACSTAT Y-2 73124/021160           */                              01100002
.* /* START OF SPECIFICATIONS ****                                      01150002
.*                                                                      01200002
.*01  MODULE-NAME = IGGSCW                                              01250002
.*                                                                      01300002
.*01  COPYRIGHT = NONE                                                  01350002
.*                                                                      01400002
.*01  STATUS = VS2 RELEASE 2 LEVEL 2                                    01450002
.*                                                                      01460002
.*01  DESCRIPTIVE-NAME = OPEN/CLOSE WORKAREA LABELS.                    01470002
.*                                                                      01480002
.*01  FUNCTION = PROVIDE DESCRIPTIVE LABELS FOR FIELDS IN THE OPEN      01490002
.*               AND CLOSE WORKAREAS.                                   01490102
.*                                                                      01492002
.*01  MODULE-TYPE = MACRO                                               01494002
.*                                                                      01496002
.*02    MACRO-SIZE = NA FOR MAPPING DSECT                               01498002
.*                                                                      01498402
.*02    PARAMETER-RECEIVED = NONE                                       01498802
.*                                                                      01499202
.*01  TABLES = NONE                                                     01499602
.*                                                                      01499702
.*01  INNER-MACROS = NONE                                               01499802
.*                                                                      01499902
.*01  SYSTEM-MACROS = NONE                                              01549902
.*                                                                      01559902
.*01  CHANGE-ACTIVITY = SEE BELOW                                       01569902
.*    VS2 REL 2                                                         01579902
.*       MACRO CREATED                                                  01589902
.*                                                                      01591902
.*                                                                      01593902
.**** END OF SPECIFICATIONS ***/                                        01595902
*                                                                       01597902
* THE FOLLOWING LABELS ARE USED BY THE SAM/PAM ACCESS METHOD OPEN/CLOSE 01598302
* EXECUTORS WHEN USING FIELDS IN THE O/C WORKAREAS FOR PURPOSES         01598702
* OTHER THAN THOSE INTENDED BY COMMON O/C.                              01599102
* THE COMMENTS FOR EACH LABEL INDICATE WHEATHER THE LABEL IS            01599202
* USED BY THE OPEN EXECS (-O) OR THE CLOSE EXECS (-C).                  01599302
*                                                                       01599502
FORCORE  DSECT                                                          01599602
         ORG   DXCCW1                                                   01599702
DXCCWOP  DS    X                        CCW OP CODE -O                  01599802
DXCCWADR DS    AL3                      BUFFER ADDRESS -O               01649802
DXCCWFLG DS    AL2                      CCW FLAGS -O                    01659802
DXCCWBYT DS    AL2                      CCW BYTE COUNT -O               01669802
         ORG   DXCCW1                                                   01699802
SCWGETMA DS    0F                       REG SAVE AREA FOR ACCESS        02500002
*                                         METHOD ROUTINES -C            02650002
SCWSAVCD DS    X                        PROBLEM DETERMINATION CODE -C   02700002
SCWGETMB DS    XL3                      SAME AS SCWGETMA ABOVE -C       02750002
         ORG   DXCCW1                                                   02752002
DXBLDL   DS    0F                       BLDL PARM LIST -O               02754002
DXUCSUCB DS    X                        UCB UCS OPTIONS -O              02756002
         DS    3X                                                       02758002
DXBLDLIM DS    F                        IMAGE NAME FOR BLDL -O          02758402
         ORG   DXCCW2                                                   02758802
DXIMGNAM DS    F                        IMAGE NAME -O                   02759202
         ORG   DXCCW2                                                   02760002
SCWRALL  DS    0F                       SAVE AREA FOR ALL REGS -C       02800002
         ORG   DXCCW6                                                   02850002
DXSAVUCS DS    D                        AREA TO SAVE UCS NAME -O        02900002
         ORG   DXCCW8                                                   02950002
DXIMGDCB DS    F                        ADDRESS OF IMGLIB DCB -O        03000002
         ORG   DXCCW9                                                   03050002
DXSAVFCB DS    D                        AREA TO SAVE FCB NAME -O        03100002
         ORG   DXCCW10                                                  03150002
DXFCBUCS DS    0XL16                    UCS AND FCB PARM FIELDS -O      03200002
DXFCBP   DS    0XL8                     TO CLEAR FCB PARM FIELD -O      03250002
DXFCBSW1 DS    X                        SWITCH FOR FCB PARMS -O         03300002
DXABEND  DS    0X                       INDICATES ABEND TO BE ISSUED -O 03350002
DXFLAG1  DS    X                        FCB FLAG BYTE -O                03400002
DXSTAGE2 DS    X                        FOR STAGE 2 OPEN EXEC DETER -O  03450002
DXFCBOPT DS    X                        JFCB FCB OPTIONS -O             03500002
DXFCBID  DS    F                        FCB IMAGE ID -O                 03550002
         ORG   DXCCW11                                                  03600002
DXUCSP   DS    0XL8                     PARM LIST FOR UCS -O            03610002
DXUCSSW1 DS    0X                       SWITCH FOR UCS PARMS -O         03650002
DXABRETC DS    X                        INTERNAL RET CD FOR PROB DET -O 03700002
DXEROPT  DS    X                        TO SAVE DCBEROPT -O             03750002
DXNABEND DS    X                        INDIC ABEND IN CONTROL -O       03800002
DXUCSOPT DS    X                        JFCB UCS OPTIONS -O             03850002
DXUCSID  DS    F                        UCS IMAGE ID -O                 03900002
         ORG   DXCCW12                                                  14500002
SCWXCTLP DS    D                        SUP PARM LIST FOR XCTL -O/C     15000002
         MEND                                                           15500002
./  ADD  SSI=31490007,NAME=IGGSPD
*  %GOTO SPDL1;                                                         00002002
.* /* START OF SPECIFICATIONS ****                                      00004002
.*                                                                      00006002
.*01  MODULE-NAME = IGGSPD                                              00008002
.*                                                                      00010002
.*01  DESCRIPTIVE-NAME = SAM/PAM/DAM GTRACE BUFFER                      00012002
.*                                                                      00014002
.*01  COPYRIGHT = NONE                                                  00016002
.*                                                                      00018002
.*01  STATUS = VS2 RELEASE 2 LEVEL 0                                    00020002
.*                                                                      00022002
.*01  FUNCTION = DEFINES THE STRUCTURE OF THE GTRACE BUFFER             00024002
.*                                                                      00026002
.*01  MODULE-TYPE = MACRO                                               00028002
.*                                                                      00030002
.*02    MACRO-SIZE = N/A FOR A MAPPING MACRO                            00032002
.*                                                                      00034002
.*02    PARAMETER-RECEIVED = NONE                                       00036002
.*                                                                      00038002
.*01  TABLES = NONE                                                     00040002
.*                                                                      00042002
.*01  INNER-MACROS = NONE                                               00044002
.*                                                                      00046002
.*01  SYSTEM-MACROS = NONE                                              00048002
.*                                                                      00050002
.*01  CHANGE-ACTIVITY = SEE BELOW                                       00052002
.*    VS2 RELEASE 2 DELETIONS                                           00054002
.*                                                                      00056002
.**** END OF SPECIFICATIONS ***/                                        00058002
* %SPDL1: ;                                                             00060002
* /* MACCOMP Y-2 SC1D0/SJD48                                         */ 00062002
* /* MACSTAT Y-2 73141/021160                                        */ 00064002
 /********************************************************************/ 00066002
 /*                                                                  */ 00068002
 /*      THIS MACRO DEFINES THE STRUCTURE OF A GTRACE BUFFER.        */ 00100002
 /*                                                                  */ 00110002
 /*      VS2 RELEASE 2, 5/21/73, LEVEL=0                             */ 00120002
 /*                                                                  */ 00130002
 /*      METHOD OF ACCESS - IF SPDBASE IS NOT OTHERWISE DECLARED IT  */ 00140002
 /*                         WILL DEFAULT TO %SPDBASE = 'BASED'.      */ 00144002
 /*                                                                  */ 00146002
 /********************************************************************/ 00150002
         %IF SPDBASE = ''               /* WAS SPDBASE DECLARED      */ 00160002
           %THEN %SPDBASE = 'BASED';    /* USE DEFAULT VALUE IF NOT  */ 00170002
 DCL 1 SPDBFR SPDBASE BDY(BYTE),                                        00200002
       2 SPDHDR,                        /* BUFFER HEADER             */ 00250002
         3 SPDDDNAM CHAR(8),            /* DDNAME FROM TIOT          */ 00300002
         3 SPDABCCD FIXED(8),           /* ABEND CONDITION CODE      */ 00350002
       2 SPDTRACE CHAR(247);            /* TRACE RECORD AREA         */ 00400002
                                                                        00450002
 /********************************************************************/ 00500002
 /*    THE FOLLOWING DEFINES THE STRUCTURE OF THE TRACE RECORD AREA  */ 00550002
 /********************************************************************/ 00600002
 DCL 1 SPDTRRCD BASED BDY(BYTE),                                        00650002
       2 SPDRCDHD,                      /* RECORD HEADER             */ 00700002
         3 SPDRCDLN FIXED(8),           /* LENGTH OF THIS TRACE RCD  */ 00750002
         3 SPDBLKID FIXED(8),           /* ID OF TRACED BLOCK        */ 00800002
           4 SPDPTRSW BIT(1),           /* ADDR REQD WITH TRACE RCD  */ 00810002
       2 SPDDATA1,                      /* AREA TO BE TRACED         */ 00850002
         3 SPDBLKAD PTR(31) BDY(BYTE),  /* ADDR OF BLOCK (NOT PRESENT   00900002
                                           FOR ALL TRACE RECORDS)    */ 00950002
         3 SPDDATA2 CHAR(*);            /* BLOCK TO BE TRACED        */ 01000002
                                                                        01050002
 /********************************************************************/ 01100002
 /*   THE FOLLOWING DEFINES THE STRUCTURE OF THE TRACE RCD DATA AREA */ 01150002
 /********************************************************************/ 01200002
 DCL SPDRDATA CHAR(*) BASED BDY(BYTE);                                  01250002
                                                                        01300002
 /********************************************************************/ 01350002
 /* THE FOLLLOWING CONSTANTS IDENTIFY THE VARIOUS AREAS WHICH ARE    */ 01400002
 /* TRACED. CONSTANTS 1 THROUGH 127 IDENTIFY AREAS WHOSE ADDRESSES   */ 01450002
 /* ARE NOT TO BE TRACED.  CONSTANTS 129 THROUGH 255 IDENTIFY AREAS  */ 01500002
 /* WHOSE ADDRESSES ARE TO BE TRACED.                                */ 01550002
 /********************************************************************/ 01600002
 DCL SPDONEXT FIXED(8) CONSTANT(1);     /* CURRENT DEB EXTENT ID     */ 01650002
 DCL SPDALLXT FIXED(8) CONSTANT(2);     /* ALL DEB EXTENTS ID        */ 01700002
 DCL SPDIOSEK FIXED(8) CONSTANT(3);     /* IOB OR ICB SEEK FIELD ID  */ 01750002
 DCL SPDMAXBK FIXED(8) CONSTANT(4);     /* MAX BLOCK SIZE FIELD ID   */ 01800002
 DCL SPDBCB   FIXED(8) CONSTANT(129);   /* BCB ID                    */ 01810002
 DCL SPDDCB   FIXED(8) CONSTANT(130);   /* DCB ID                    */ 01850002
 DCL SPDDECB  FIXED(8) CONSTANT(131);   /* DECB ID                   */ 01900002
 DCL SPDECB   FIXED(8) CONSTANT(132);   /* ECB ID                    */ 01910002
 DCL SPDIOB   FIXED(8) CONSTANT(133);   /* NORMAL SCHEDULING IOB ID  */ 01920002
 DCL SPDCSIOB FIXED(8) CONSTANT(134);   /* CHAINED SCHEDULING IOB ID */ 01930002
 DCL SPDICB   FIXED(8) CONSTANT(135);   /* CHAINED SCHEDULING ICB ID */ 01940002
 DCL SPDBLOCK FIXED(8) CONSTANT(136);   /* USERS BDW AND BLOCK ID    */ 01950002
 DCL SPDRECRD FIXED(8) CONSTANT(137);   /* USERS RDW AND RECORD ID   */ 02000002
 DCL SPDEXLST FIXED(8) CONSTANT(138);   /* DCB EXIT LIST ENTRY ID    */ 02010002
 DCL SPDSETPR FIXED(8) CONSTANT(139);   /* SETPRINT PARAMETER LIST   */ 02020002
 DCL SPDREADX FIXED(8) CONSTANT(140);   /* READ EXCLUSIVE LIST ENTRY */ 02070002
 DCL SPDFCBIM FIXED(8) CONSTANT(141);   /* 1ST 6 BYTES OF FCB IMAGE  */ 02120002
 SPDFID: GEN(EQU   X'FE');              /* ID OF SAM/PAM/DAM GTRACE     02170002
                                           FORMAT ROUTINE            */ 02220002
./  ADD  SSI=62220310,NAME=IGGSPW
*/********************************************************************* 00701604
**                                                                   ** 00703604
**    MACRO-NAME = IGGSPW                                            ** 00705604
**                                                                   ** 00707604
**    COPYRIGHT = NONE                                               ** 00708004
**                                                                   ** 00708404
**    STATUS = VS2 RELEASE 3.7 LEVEL 2                               ** 00708848
**                                                                   ** 00709204
**    DESCRIPTIVE-NAME = SET PRINT WORKAREA                          ** 00709304
**                                                                   ** 00709404
**    FUNCTION = USED BY SET PRINT MODULES TO MAP                    ** 00709504
**               THE SET PRINT WORKAREA                              ** 00719604
**                                                                   ** 00729604
**    MODULE-TYPE = MACRO                                            ** 00729704
**                                                                   ** 00729804
**      MACRO-SIZE = N/A FOR MAPPING MACRO.                          ** 00733204
**                                                                   ** 00735204
**      PARAMETER-RECEIVED = IF THIS MACRO IS TO BE USED FOR THE     ** 00735604
**                           3800 DEVICE, MAKE THE FOLLOWING         ** 00736004
**                           PLS MACRO STATEMENT BEFORE CALLING      ** 00736404
**                           THIS MACRO:                             ** 00736504
**                                %SPW3800 = 'YES'                   ** 00742304
**                                                                   ** 00744304
**    TABLES = NONE                                                  ** 00746304
**                                                                   ** 00748304
**    INNER-MACROS = NONE                                            ** 00752604
**                                                                   ** 00754604
**    SYSTEM-MACROS = IF SPW3800 ='YES', THE FOLLOWING SYSTEM        ** 00756604
**                    MACROS WILL BE CALLED:                         ** 00757004
**                                                                   ** 00758004
**                           IHADCBDF                                ** 00758404
**                           IHADCB                                  ** 00758804
**                           IEZDEB                                  ** 00759204
**                           IEZIOB                                  ** 00759604
**                           IEFUCBOB                                ** 00759704
**                           IHASPP                                  ** 00759804
**                                                                   ** 00759904
**    CHANGE-ACTIVITY = NONE                                         ** 00763204
**                                                                   ** 00765204
**********************************************************************/ 00765604
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 00766004
*%GOTO SPW001;                          /* BYPASS ASSY MACRO @Z40MSAP*/ 00766404
*                                       /* STATEMENTS        @Z40MSAP*/ 00766504
         MACRO                                                          00766604
         IGGSPW                                                         00766704
*********************************************************************** 00767804
*                                                                     * 00769804
*     MACRO-NAME = IGGSPW                                             * 00769904
*                                                                     * 00772704
*     COPYRIGHT = NONE                                                * 00774704
*                                                                     * 00775104
*     STATUS = VS2 RELEASE 3.7 LEVEL 2                                * 00775548
*                                                                     * 00775904
*     DESCRIPTIVE-NAME = SET PRINT WORKAREA                           * 00776104
*                                                                     * 00776504
*     FUNCTION = USED BY SET PRINT MODULES TO MAP                     * 00776604
*                THE SET PRINT WORKAREA                               * 00777404
*                                                                     * 00777804
*     MODULE-TYPE = MACRO                                             * 00778204
*                                                                     * 00778604
*       MACRO-SIZE = N/A FOR MAPPING MACRO.                           * 00779004
*                                                                     * 00779104
*       PARAMETER-RECEIVED = NONE                                     * 00784504
*                                                                     * 00786504
*     TABLES = NONE                                                   * 00788504
*                                                                     * 00790504
*     INNER-MACROS = NONE                                             * 00791004
*                                                                     * 00791404
*     SYSTEM-MACROS = NONE                                            * 00791804
*                                                                     * 00791904
*     CHANGE-ACTIVITY = NONE                                          * 00792604
*                                                                     * 00793004
*********************************************************************** 00793404
.* /* START OF SPECIFICATIONS ****                                      00793504
.*                                                                      00793604
.*01  MODULE-NAME = IGGSPW                                              00793704
.*                                                                      00793804
.*01  COPYRIGHT = NONE                                                  00793904
.*                                                                      00794904
.*01  STATUS = VS2 RELEASE 3.7 LEVEL 2                                  00796448
.*                                                                      00796804
.*01  DESCRIPTIVE-NAME = SETPRINT WORKAREA                              00796904
.*                                                                      00797604
.*01  FUNCTION = USED BY SETPRINT MODULES TO MAP THE WORKAREA,          00798004
.*               SVRB EXTENDED SAVE AREA, AND THE BLDL PARAMETER LIST.  00798404
.*                                                                      00798804
.*01  MODULE-TYPE = MACRO                                               00799204
.*                                                                      00803804
.*02    MACRO-SIZE = NA FOR MAPPING MACRO                               00805804
.*                                                                      00807804
.*02    PARAMETER-RECEIVED = NONE                                       00809804
.*                                                                      00811804
.*01  TABLES = NONE                                                     00812204
.*                                                                      00812604
.*01  INNER-MACROS = NONE                                               00813004
.*                                                                      00813104
.*01  SYSTEM-MACROS = ESTAE (LIST FORM)                                 00814604
.*                                                                      00816604
.*01  CHANGE-ACTIVITY = SEE BELOW                                       00817004
.*    VS2 REL 2                                                         00817404
.*       MACRO CREATED                                                  00817504
.*                                                               YM5703 00818604
.*    VS2 REL 4                                                @Z40MSAP 00820604
.*       MACRO MODIFIED FOR 3800 PRINTER SUPPORT               @Z40MSAP 00820704
.*                                                                      00821104
.**** END OF SPECIFICATIONS ***/                                        00821504
*%SPW001:;                              /*                   @Z40MSAP*/ 00822004
* /* MACCOMP Y-2 SC1D0/SJD48            */                              00822404
* /* MACSTAT Y-2 73124/021160           */                              00823004
*%GOTO SPW002;                                             /*@Z40MSAP*/ 00827004
*                                                                       00831604
* THE FOLLOWING THREE DSECTS (SPW, SPW5, SPRBXSV) ARE USED BY           00836204
* THE SETPRT ROUTINES.                                                  00840804
*                                                                       00845404
         EJECT                                                 @Z40MSAP 00850004
*********************************************************************** 00883804
*    THIS IS THE DSECT FOR THAT PORTION OF THE SET PRINT WORK         * 00933804
*    AREA GOTTEN IN USER KEY.                                         * 00983804
*********************************************************************** 01033804
         SPACE 2                                               @Z40MSAP 01083804
SPW      DSECT                                                          01200002
         SPACE 1                                               @Z40MSAP 01250004
*********************************************************************** 01300004
* BASIC SECTION                                                       * 01600004
*********************************************************************** 01650004
         SPACE 1                                               @Z40MSAP 01700004
SPWOPTSA DS    B                        SAVE AREA FOR OPTCD BYTE Y02072 02612002
*                                                                       02614002
SPWPARM1 DS    B                        SAVED REPLY FLAGS        Y02072 02620002
*                                       (SEE BELOW FOR BITS)            02630002
SPWFLG1  DS    B                        REPLY FLAGS              Y02072 02650002
*                                                                       02660002
SPWVRFCB EQU   X'80'                    VERIFY FCB                      02700002
SPWALIGN EQU   X'01'                    ALIGN FORMS                     02850002
*                                                                       02860002
SPWFLG2  DS    B                        ENTRY ID FOR 8101, 8102  Y02072 02900002
*                                                                       03060002
SPWFLG3  DS    B                        TO SAVE LINE/INCH INDIC  Y02072 03100002
*                                                              @Z40MSAP 03102004
SPW120RQ EQU   X'10'                    IEC120 MESSAGE REQUIRED         03110002
*                                                                       03150002
SPWFLG4  DS    0B                       FLAG BYTE                Y02072 03160002
SPWFLG5  DS    B                        FLAG BYTE                Y02072 03180004
SPWFCBDE EQU   X'80'                    FCB IMAGE LOADED AND     Y02072 03190002
*                                         MUST BE DELETED        Y02072 03192002
SPWECPAM EQU   X'40'                    INDICATES EXCP DCB WITH  YM3920 03194002
*                                         ACC METH SECT PRESENT  YM3920 03196002
*        EQU   X'20'                    UNUSED FLAG BIT        @Z40MSAP 03198004
*        EQU   X'10'                    UNUSED FLAG BIT        @Z40MSAP 03198404
*        EQU   X'08'                    UNUSED FLAG BIT        @Z40MSAP 03198804
*        EQU   X'04'                    UNUSED FLAG BIT        @Z40MSAP 03199204
*        EQU   X'02'                    UNUSED FLAG BIT        @Z40MSAP 03199304
*        EQU   X'01'                    UNUSED FLAG BIT        @Z40MSAP 03199404
SPWFLG8  DS    B                        FLAG BYTE                Y02072 03199602
*              THE FOLLOWING BITS USED BY IGG08104                      03200002
SPWRETRY EQU   X'80'                    RETRY IN PROGRESS        Y02072 03201602
SPWVREND EQU   X'40'                    LAST VERIF LINE PRINTING Y02072 03203602
SPWNOMOV EQU   X'20'                    DO NOT MOVE RQSTD MSG    Y02072 03205602
SPWFCBOP EQU   X'10'                    FILL FCBOP AS WELL AS    Y02072 03207602
*                                       FCBID INTO UCB           Y02072 03208402
*        EQU   X'08'                    UNUSED FLAG BIT        @Z40MSAP 03208504
*        EQU   X'04'                    UNUSED FLAG BIT        @Z40MSAP 03208604
*        EQU   X'02'                    UNUSED FLAG BIT        @Z40MSAP 03208704
*        EQU   X'01'                    UNUSED FLAG BIT        @Z40MSAP 03209004
         DS    XL1                      UNUSED BYTE FOR ALIGN  @Z40MSAP 03209404
         SPACE 1                                               @Z40MSAP 03209604
*********************************************************************** 03218804
* WTOR PREFIX SECTION (MUST IMMEDIATELY PRECEED MESSAGE SECTION)      * 03219604
*        THIS PREFIX IS PART OF THE LIST FORM OF WTOR                 * 03229604
*        WHEN A WTO MESSAGE IS PLACED IN SPWMSGTX,                    * 03239604
*        THE COMBINATION MAKES A VALID WTOR PARAMETER LIST            * 03241604
*********************************************************************** 03291604
         SPACE 1                                               @Z40MSAP 03293604
SPWRPLYA DS    0A                       ADDRESS OF REPLY AREA           03299602
SPWMSGLB DS    FL1                      LENGTH OF REPLY AREA            03309602
SPWRPLYB DS    AL3                      ADDRESS OF REPLY AREA           03319602
SPWECBPA DS    A                        ADDRESS OF REPLY ECB            03349602
         SPACE 1                                               @Z40MSAP 03399604
*********************************************************************** 03449604
* MESSAGE SECTION                                                     * 05800004
*********************************************************************** 05850004
         SPACE 1                                               @Z40MSAP 05900004
SPWMSGTX DS    CL64                     MESSAGE AND PRINT LINE   Y02072 06200002
         SPACE 1                                               @Z40MSAP 06250004
*********************************************************************** 06300004
* WTOR REPLY AREA AND ASSOCIATED FIELDS                               * 14400004
*********************************************************************** 14450004
         SPACE 1                                               @Z40MSAP 14500004
SPWREPLY DS    0CL16                    OPERATOR REPLY AREA             15000002
         DS    X                                                        15050002
SPWFCBOR DS    0CL15                    OFFSET OF 1 USED WHEN           16200002
*                                         INCREMENTING THROUGH OPER REP 16400002
SPWREPC1 DS    CL15                     OFFSET OF 1 USED TO CLEAR FIELD 16600002
*                                                                       16800002
SPWRPECB DS    F                        REPLY ECB FOR WTOR              18000002
SPWREPID DS    F                        UCS/FCB ID REPLIED BY OPERATOR  18200002
SPWFCBIM DS    0CL8                     FCBXXXXX - NAME OF FCB IMAGE    18800002
SPWUCSIM DS    0CL8                     UCSXXXXX - NAME OF UCS IMAGE    19000002
         DS    F                        FIRST HALF OF NAME              19200002
SPWUCS2H DS    0F                       SECOND HALF OF UCS NAME         19400002
SPWFCB2H DS    F                        SECOND HALF OF FCB NAME         19600002
         EJECT                                                 @Z40MSAP 19610004
*********************************************************************** 19660004
* IOB FOR EXCP USERS                                                    19700002
*********************************************************************** 19750004
         SPACE 1                                               @Z40MSAP 19760004
         DS    0F                       FOR ALIGNMENT                   19800002
SPWIOB   DS    0CL40                    TO CLEAR IOB                    19850002
SPWLINK  DS    F                        LINK ADDRESS                    19900002
SPWECB   DS    F                        ECB                             19950002
SPWIOS   DS    F                        BEGINNING OF IOS IOB            20000002
SPWECBPT DS    F                        POINTER TO ECB                  20050002
SPWCSW   DS    2F                       CHAN STATUS WORD                20100002
SPWCPPTR DS    F                        CHANNEL PROGRAM POINTER         20150002
SPWDCB   DS    F                        ADDR OF DCB                     20200002
         DS    2F                       NOT USED                        20250002
         SPACE 1                                               @Z40MSAP 20260004
*********************************************************************** 20270004
* AREA TO SAVE FIELDS OF USERS IOB                             @Z40MSAP 20350004
*********************************************************************** 20400004
         SPACE 1                                               @Z40MSAP 20410004
SPWFLGSV DS    F                        IOB FIRST WORD                  20450002
SPWSTRSV DS    F                        IOBSTART                        20500002
         EJECT                                                 @Z40MSAP 20550004
*********************************************************************** 20600004
*                                                                     * 20650004
*        THE FOLLOWING STRUCTURE MAPS THE CHANNEL PROGRAM             * 20700004
*        SECTION OF THE SET PRINT WORKAREA.                           * 20750004
*                                                                     * 20800004
*********************************************************************** 20850004
*                                                              @Z40MSAP 20900004
SPWCCW1  DS    0D                       FIRST CCW              @Z40MSAP 21050004
SPWADD1A DS    0A                       BUFFER ADDRESS         @Z40MSAP 21100004
SPWOPCD1 DS    XL1                      OP CODE                @Z40MSAP 21150004
SPWADD1B DS    AL3                      BUFFER ADDRESS         @Z40MSAP 21200004
SPWCCWF1 DS    XL1                      CCW FLAGS              @Z40MSAP 21250004
SPWCC1   EQU   X'40'                    COMMAND CHAINING       @Z40MSAP 21300004
SPWSILI1 EQU   X'20'                    SILI BIT               @Z40MSAP 21350004
         DS    XL1                      FILLER                 @Z40MSAP 21400004
SPWBYTE1 DS    XL2                      BYTE COUNT             @Z40MSAP 21450004
SPWCCW2  DS    0D                       SECOND CCW             @Z40MSAP 21500004
SPWADD2A DS    0A                       BUFFER ADDRESS         @Z40MSAP 21550004
SPWOPCD2 DS    XL1                      OP CODE                @Z40MSAP 21600004
SPWADD2B DS    AL3                      BUFFER ADDRESS         @Z40MSAP 21650004
SPWCCWF2 DS    XL1                      CCW FLAGS              @Z40MSAP 21700004
SPWCC2   EQU   X'40'                    COMMAND CHAINING       @Z40MSAP 21750004
SPWSILI2 EQU   X'20'                    SILI BIT               @Z40MSAP 21800004
         DS    XL1                      FILLER                 @Z40MSAP 21850004
SPWBYTE2 DS    XL2                      BYTE COUNT             @Z40MSAP 21900004
SPWCCW3  DS    0D                       THIRD CCW              @Z40MSAP 21950004
SPWADD3A DS    0A                       BUFFER ADDRESS         @Z40MSAP 22000004
SPWOPCD3 DS    XL1                      OP CODE                @Z40MSAP 22050004
SPWADD3B DS    AL3                      BUFFER ADDRESS         @Z40MSAP 22100004
SPWCCWF3 DS    XL1                      CCW FLAGS              @Z40MSAP 22150004
SPWCC3   EQU   X'40'                    COMMAND CHAINING       @Z40MSAP 22200004
SPWSILI3 EQU   X'20'                    SILI BIT               @Z40MSAP 22250004
         DS    XL1                      FILLER                 @Z40MSAP 22300004
SPWBYTE3 DS    XL2                      BYTE COUNT             @Z40MSAP 22350004
         EJECT                                                 @Z40MSAP 22400004
*********************************************************************** 27650004
* WORKAREA FOR UNPACKING LINE NUMBERS BEFORE VERIFYING IMAGES.          30600002
*********************************************************************** 30650004
         SPACE 1                                               @Z40MSAP 30700004
SPWUNPKA DS    0F                       ADDR TO UNPACK INTO             31200002
         DS    C                        FILLER                          31400002
SPWWKAR  DS    CL2                      FOR FINAL RESULT                31600002
SPWZONE  DS    X                        ZONE FOR LOW ORDER DIGIT        31800002
         DS    H                        FILLER                          32000002
SPWLNENO DS    H                        FIELD STORED INTO BY CVD INST   32200002
         SPACE 2                                               @Z40MSAP 32250004
SPWFFSB  DS    F                        FIRST FOUR SENSE                32250404
*                                       BYTES FOR THE 3800              32250804
*                                       PRINTER                         32251204
         SPACE 1                                               @Z40MSAP 32333204
*********************************************************************** 32333404
* END OF USER KEY SET PRINT WORK AREA DSECT                    @Z40MSAP 32341704
*********************************************************************** 32350004
         SPACE 1                                               @Z40MSAP 32352004
         ORG                                                            32360002
SPWLNGTH EQU   *-SPW                    LENGTH OF WORK AREA             32370002
         EJECT                                                          32390402
*********************************************************************** 32391804
*                                                                     * 32394104
*    THIS IS THE DSECT FOR THAT PORTION OF THE SET PRINT WORK         * 32394204
*    AREA GOTTEN IN KEY 5.                                            * 32394304
*                                                                     * 32394404
*********************************************************************** 32394504
         SPACE 1                                               @Z40MSAP 32394804
SPW5     DSECT                                                 @Z40MSAP 32395204
         SPACE 1                                               @Z40MSAP 32395604
*********************************************************************** 32396004
*                                                                       32397204
*  THE FOLLOWING IS THE BLDL PARAMETER LIST. IT IS GOTTEN FROM KEY 5    32397604
*  CORE AS IT MUST BE IN THE SAME KEY AS THE SYS1.IMAGELIB DCB.         32398004
*                                                                       32398404
*********************************************************************** 32399804
         SPACE 2                                               @Z40MSAP 32399904
SPWBLDLA DS    0F                       BLDL LIST AREA         @Z40MSAP 32401904
SPWBLDLC DS    0F                       COUNT & LENGTH FIELDS FOR BLDL  32406204
SPWBLDCT DS    XL2                      COUNT FIELD            @Z40MSAP 32406604
SPWBLDLL DS    XL2                      LENGTH FIELD           @Z40MSAP 32407004
*              THE ABOVE FIELD SHOULD BE FILLED WITH                    32407904
*              AL2(1,SPWBLDLN)          ONE ENTRY, LENGTH AVAILABLE     32409604
SPWBLNAM DS    0CL8                     IMAGE NAME FIELD       @Z40MSAP 32410004
SPWUCSMB DS    0CL4                     UCS IMAGE MEMBER NAME  'UCS1'   32411304
SPWFCBMB DS    CL4                      FCB IMAGE MEMBER NAME           32413004
         ORG   *-1                      REDEFINE FOURTH BYTE OF NAME    32414704
SPWFCB2  DS    0C                                                       32416404
SPWUCS2  DS    C                        UCS IMAGE MEMBER NAME  'UCS2'   32418104
SPWBLFCB DS    0CL4                     FCBID FOR BLDL                  32423204
SPWBLUCS DS    CL4                      USCID FOR BLDL                  32424904
         DS    CL52                     FILLED BY BLDL FOR LOAD  Y02072 32426602
SPWBLDLN EQU   *-SPWUCSMB               LENGTH OF BLDL ENTRY     Y02072 32428602
SPWWKADR DS    A                        ADDRESS OF SETPRT WORKAREA      32430602
*                                         SAVED FOR ESTAE               32432602
         EJECT                                                 @Z40MSAP 32433304
*********************************************************************** 32443304
* WTOR PREFIX SECTION (MUST IMMEDIATELY PRECEED MESSAGE SECTION)      * 32453304
*        THIS PREFIX IS PART OF THE LIST FORM OF WTOR                 * 32463304
*        WHEN A WTO MESSAGE IS PLACED IN SPWMSGTX,                    * 32473304
*        THE COMBINATION MAKES A VALID WTOR PARAMETER LIST            * 32475304
*********************************************************************** 32477304
         SPACE 1                                               @Z40MSAP 32479304
SPWMSGHS DS    0F                       HEADER SECTION FOR     @Z40MSAP 32483304
*                                       MESSAGE AREA           @Z40MSAP 32533304
SPWARPLA DS    0A                       ADDRESS OF THE         @Z40MSAP 32583304
*                                       REPLY AREA             @Z40MSAP 32633304
SPWLRPLA DS    XL1                      LENGTH OF THE REPLY    @Z40MSAP 32683304
*                                       AREA                   @Z40MSAP 32733304
SPWARPLB DS    AL3                      ADDRESS OF THE REPLY   @Z40MSAP 32783304
*                                       AREA                   @Z40MSAP 32833304
SPWARECB DS    A                        ADDRESS OF THE REPLY   @Z40MSAP 32883304
*                                       ECB                    @Z40MSAP 32933304
         SPACE 1                                               @Z40MSAP 32943304
*********************************************************************** 32953304
* MESSAGE SECTION                                                     * 32963304
*********************************************************************** 32973304
         SPACE 1                                               @Z40MSAP 32975304
SPWMSGA  DS    0CL52                    SPW MESSAGE AREA       @Z40MSAP 32983304
SPWMSGLN DS    F                        MESSAGE LENGTH         @Z40MSAP 33033304
SPWTXMSG DS    CL80                     MESSAGE TEXT           @Z40MSAP 33083304
         SPACE 1                                               @Z40MSAP 33093304
*********************************************************************** 33103304
* WTOR REPLY AREA AND ASSOCIATED FIELDS                               * 33113304
*********************************************************************** 33123304
         SPACE 1                                               @Z40MSAP 33125304
SPWORPLY DS    CL16                     OPERATOR REPLY AREA    @Z40MSAP 33133304
*                                       (16 BYTES)             @Z40MSAP 33183304
SPWMRECB DS    F                        REPLY ECB FOR WTOR     @Z40MSAP 33583304
SPWIMAGE DS    0CL8                     IMAGE NAME REQUESTED   @Z40MSAP 33593304
SPWFCBNM DS    0CL8                     NAME FCB IMAGE         @Z40MSAP 33633304
SPWFCBPF DS    CL4                      FIRST 1/2 OF NAME      @Z40MSAP 33733304
SPWFCBID DS    CL4                      2ND HALF FCB NAME      @Z40MSAP 33883304
         EJECT                                                 @Z40MSAP 34283304
*********************************************************************** 36183304
*                                                                     * 36233304
*        THIS SECTION OF THE SET PRINT MAPPING MACRO HAS BEEN         * 36283304
*        ADDED FOR THE 3800 DEVICE.                                   * 36333304
*                                                                     * 36383304
*********************************************************************** 36433304
*                                                              @Z40MSAP 36483304
SPWEXTON DS    0F                       3800 AREA IN SET PRINT @Z40MSAP 36583304
*                                       WORKAREA               @Z40MSAP 36633304
SPWSPRB  DS    A                        POINTER TO SVRB        @Z40MSAP 36683304
*                                       EXTENDED SAVE AREA     @Z40MSAP 36733304
SPWTWAD1 DS    A                        TRANSLATE 1 WORKAREA   @Z40MSAP 37133304
*                                       ADDRESS                @Z40MSAP 37183304
SPWTWL1  DS    0F                       TRANSLATE 1 WORKAREA   @Z40MSAP 37233304
*                                       LENGTH AND SUBPOOL #   @Z40MSAP 37283304
SPWTWSP1 DS    XL1                      TRANSLATE 1 WORKAREA   @Z40MSAP 37333304
*                                       SUBPOOL NUMBER         @Z40MSAP 37383304
SPWTWLN1 DS    XL3                      TRANSLATE 1 WORKAREA   @Z40MSAP 37433304
*                                       LENGTH                 @Z40MSAP 37483304
SPWFLAG1 DS    XL1                      FIRST BYTE OF FLAGS    @Z40MSAP 38083304
SPWT3800 EQU   X'80'                    THIS SET PRINT REQUEST @Z40MSAP 38133304
*                                       IS FOR A 3800          @Z40MSAP 38143304
*                                       TYPE OF DEVICE         @Z40MSAP 38153304
SPWFCBUA EQU   X'40'                    FCB IMAGE IN USER AREA @Z40MSAP 38183304
SPWENDXL EQU   X'20'                    END OF DCB EXIT LIST   @Z40MSAP 38233304
SPWEXFLD EQU   X'10'                    EXCP FOR FCB LOAD      @Z40MSAP 38283304
SPWEXWPR EQU   X'08'                    EXCP FOR WRITING ON    @Z40MSAP 38333304
*                                       THE PRINTER            @Z40MSAP 38383304
SPWENDM  EQU   X'04'                    END SECTION IN         @Z40MSAP 38433304
*                                       MESSAGE AREA           @Z40MSAP 38483304
SPWEFCBP EQU   X'02'                    END OF FCB IMAGE       @Z40MSAP 38533304
*                                       PRINT FUNCTION         @Z40MSAP 38583304
SPWM128L EQU   X'01'                    MESSAGE IEC128D IN     @Z40MSAP 38633304
*                                       MESSAGE AREA           @Z40MSAP 38683304
SPWFLAG2 DS    XL1                      SECOND BYTE OF FLAGS   @Z40MSAP 38733304
SPWRVMSG EQU   X'80'                    REISSUE VERIFY         @Z40MSAP 38783304
*                                       MESSAGE TO 3800        @Z40MSAP 38833304
SPWVMHD  EQU   X'40'                    HEADER SECTION IN      @Z40MSAP 38883304
*                                       MESSAGE AREA           @Z40MSAP 38933304
SPWVMCH  EQU   X'20'                    'CHANNEL' IN           @Z40MSAP 38983304
*                                       MESSAGE AREA           @Z40MSAP 39033304
SPWBLIOB EQU   X'10'                    BUILD DUMMY IOB        @Z40MSAP 39083304
SPWM163L EQU   X'08'                    MESSAGE IEC163A        @Z40MSAP 39133304
*                                       IS BEING ISSUED        @Z40MSAP 39183304
SPWM164L EQU   X'04'                    MESSAGE IEC164A        @Z40MSAP 39233304
*                                       IS BEING ISSUED        @Z40MSAP 39283304
SPWNSTOR EQU   X'02'                    DETERMINES IF SPWN     @Z40MSAP 39333304
*                                       HAS BEEN STORED        @Z40MSAP 39383304
SPWNESOI EQU   X'01'                    NOT ENOUGH SPACE TO    @Z40MSAP 39433304
*                                       OPEN IMAGELIB          @Z40MSAP 39483304
SPWFLAG3 DS    XL1                      THIRD BYTE OF FLAGS    @Z40MSAP 39533348
SPWPLCPY EQU   X'80'                    THE SET PRINT PARM     @Z40MSAP 39583304
*                                       LIST HAS BEEN COPIED   @Z40MSAP 39593304
*                                       FROM THE CALLERS       @Z40MSAP 39603304
*                                       AREA TO KEY 5 SET      @Z40MSAP 39613304
*                                       PRINT WORK AREA        @Z40MSAP 39623304
SPWIMGLD EQU   X'40'                    IMAGE LOADED INTO CORE @Z40MSAP 39633304
*        EQU   X'20'                    UNUSED FLAG/SWITCH     @Z40MSAP 39683304
*        EQU   X'10'                    UNUSED FLAG/SWITCH     @Z40MSAP 39733304
*        EQU   X'08'                    UNUSED FLAG/SWITCH     @Z40MSAP 39783304
*        EQU   X'04'                    UNUSED FLAG/SWITCH     @Z40MSAP 39833304
*        EQU   X'02'                    UNUSED FLAG/SWITCH     @Z40MSAP 39883304
*        EQU   X'01'                    UNUSED FLAG/SWITCH     @Z40MSAP 39933304
SPWREASN DS    XL1                      REASON CODE            @Z40MSAP 39983304
SPWRETCD DS    0F                       RETURN CODE            @Z40MSAP 40033304
SPWRET0  DS    XL1                      BYTE 0 OF RETURN CODE  @Z40MSAP 40083304
SPWRET1  DS    XL1                      BYTE 1 OF RETURN CODE  @Z40MSAP 40133304
SPWRET2  DS    XL1                      BYTE 2 OF RETURN CODE  @Z40MSAP 40183304
SPWRET3  DS    XL1                      BYTE 3 OF RETURN CODE  @Z40MSAP 40233304
SPWIOBST DS    A                        POINTER IOB STANDARD   @Z40MSAP 40283304
*                                       SECTION                @Z40MSAP 40333304
SPWLNCNT DS    XL2                      FCB IMAGE LINE         @Z40MSAP 41183304
*                                       COUNTER                @Z40MSAP 41233304
SPWFCBIL DS    XL2                      LENGTH FCB IMAGE       @Z40MSAP 41283304
SPWCAVTA DS    A                        ADDRESS CALLERS AVT    @Z40MSAP 41333304
SPWWKBTS DS    0XL2                     WORK BYTES TO TEST     @Z40MSAP 41383304
*                                       FLAGS                  @Z40MSAP 41433304
SPWWKBT1 DS    XL1                      FIRST WORK BYTE        @Z40MSAP 41483304
SPWWKBT2 DS    XL1                      SECOND WORK BYTE       @Z40MSAP 41533304
SPWI     DS    XL1                      TOTAL NUMBER OF        @Z40MSAP 41583304
*                                       TRANSLATE TABLES       @Z40MSAP 41633304
SPWJ     DS    XL1                      TRANSLATE TABLE INDEX  @Z40MSAP 41683304
SPWK     DS    XL1                      INDEX OF CGM IN        @Z40MSAP 41733304
*                                       TRANSLATE TABLES       @Z40MSAP 41783304
SPWL     DS    XL1                                             @Z40MSAP 41833304
SPWM     DS    XL1                      INDEX IN CGM RECORD    @Z40MSAP 41883304
SPWN     DS    XL1                      INDEX IN CGM RECORD    @Z40MSAP 41933304
SPWP     DS    XL2                      TRANSLATE TABLE        @Z40MSAP 41983304
*                                       POSITION INDEX         @Z40MSAP 42033304
SPWMAX   DS    XL1                      NUMBER OF CGMS         @Z40MSAP 42083304
*                                       INSTALLED ON DEVICE    @Z40MSAP 42133304
SPWTCBKY DS    XL1                      TCB PROTECTION KEY     @Z40MSAP 42143304
SPWCGMID DS    F                        AREA TO BUILD          @Z40MSAP 42183304
*                                       LOAD CGM RECORD        @Z40MSAP 42233304
         ORG   SPWCGMID                                        @Z40MSAP 42283304
SPWCGMRC DS    XL1                      ARRAY OF CGM IDS       @Z40MSAP 42333304
         ORG   SPWCGMID+4                                      @Z40MSAP 42383304
SPWMEXIT DS    5F                       SETPRT MODULES         @Z40MSAP 42433304
*                                       EXIT LIST              @Z40MSAP 42483304
SPWMEIND DS    XL1                      INDEX FOR MODULE       @Z40MSAP 43033304
*                                       EXIT LIST              @Z40MSAP 43083304
SPWERIND DS    XL1                      ERROR EXIT IN THE      @Z40MSAP 43183304
*                                       MODULE EXIT LIST       @Z40MSAP 43233304
SPWRXIND DS    XL1                      INDEX INTO THE MODULE  @Z40MSAP 43243304
*                                       EXIT LIST FOR A        @Z40MSAP 43253304
*                                       MODULE TO PASS         @Z40MSAP 43263304
*                                       CONTROL TO IF          @Z40MSAP 43273304
*                                       RETRANSMIT IS          @Z40MSAP 43275304
*                                       SPECIFIED              @Z40MSAP 43277304
SPWPLNTH DS    XL1                      LENGTH OF SET PRINT    @Z40MSAP 43283304
*                                       PARAMETER LIST         @Z40MSAP 43293304
SPWADDCB DS    A                        ADDRESS OF THE         @Z40MSAP 43294304
*                                       CALLERS DCB            @Z40MSAP 43295304
SPWADDEB DS    A                        ADDRESS OF THE         @Z40MSAP 43296304
*                                       CALLERS DEB            @Z40MSAP 43297304
SPWADIOB DS    A                        ADDRESS OF THE IOB     @Z40MSAP 43298304
*                                       PREFIX SECTION         @Z40MSAP 43299304
SPWADUCB DS    A                        ADDRESS OF THE UCB     @Z40MSAP 43300304
SPWCFHIT DS    XL1                      COUNTER FOR FCB IMAGE  @Z48MSAP 43300748
*                                       HALF INCH TEST         @Z48MSAP 43301048
SPWCFB   DS    XL1                      CURRENT FCB BYTE       @Z48MSAP 43301348
*                                       BEING USED FOR HALF    @Z48MSAP 43301648
*                                       INCH TEST              @Z48MSAP 43301948
         DS    XL2                      UNUSED TWO BYTES       @Z48MSAP 43302248
         DS    A                        UNUSED FOUR BYTES      @Z48MSAP 43302548
SPWSAVE  DS    0F                       SET PRINT WORK AREA    @Z40MSAP 43303304
*                                       REGISTER SAVE AREA     @Z40MSAP 43313304
SPWSAV01 DS    F                        SAVE AREA NUMBER  1    @Z40MSAP 43333304
SPWSAV02 DS    F                        SAVE AREA NUMBER  2    @Z40MSAP 43383304
SPWSAV03 DS    F                        SAVE AREA NUMBER  3    @Z40MSAP 43433304
SPWSAV04 DS    F                        SAVE AREA NUMBER  4    @Z40MSAP 43483304
SPWSAV05 DS    F                        SAVE AREA NUMBER  5    @Z40MSAP 43533304
SPWSAV06 DS    F                        SAVE AREA NUMBER  6    @Z40MSAP 43583304
SPWSAV07 DS    F                        SAVE AREA NUMBER  7    @Z40MSAP 43633304
SPWSAV08 DS    F                        SAVE AREA NUMBER  8    @Z40MSAP 43683304
SPWSAV09 DS    F                        SAVE AREA NUMBER  9    @Z40MSAP 43733304
SPWSAV10 DS    F                        SAVE AREA NUMBER 10    @Z40MSAP 43783304
SPWSAV11 DS    F                        SAVE AREA NUMBER 11    @Z40MSAP 43833304
SPWSAV12 DS    F                        SAVE AREA NUMBER 12    @Z40MSAP 43883304
SPWSAV13 DS    F                        SAVE AREA NUMBER 13    @Z40MSAP 43933304
SPWSAV14 DS    F                        SAVE AREA NUMBER 14    @Z40MSAP 43983304
SPWSAV15 DS    F                        SAVE AREA NUMBER 15    @Z40MSAP 44033304
*                                                              @Z40MSAP 44083304
         EJECT                                                 @Z40MSAP 44083704
*********************************************************************** 44083804
*        THIS IS A RECEIVING FIELD FOR A CVD INSTRUCTION, AND         * 44083904
*        THEREFORE IS ALIGNED ON A DOUBLE WORD BOUNDARY.              * 44084004
*********************************************************************** 44085004
*                                                              @Z40MSAP 44085404
SPWFLINU DS    0D                       FCB IMAGE LINE NUMBER  @Z40MSAP 44085804
SPWFCHNU DS    0D                       FCB IMAGE CHANNEL      @Z40MSAP 44086204
         DS    XL6                      FILLER                 @Z40MSAP 44086804
SPWFPAKL DS    0XL2                     FCB LINE NUMBER        @Z40MSAP 44087204
*                                       IN PACKED FORMAT       @Z40MSAP 44087604
SPWFPAKC DS    0XL2                     FCB CHANNEL NUMBER     @Z40MSAP 44088004
*                                       IN PACKED FORMAT       @Z40MSAP 44088404
         DS    XL1                      1ST HALF FCB           @Z40MSAP 44088504
*                                       IMAGE ENTRY            @Z40MSAP 44088604
SPWFSNUM DS    XL1                      SIGN PORTION OF        @Z40MSAP 44088904
*                                       FCB IMAGE ENTRY        @Z40MSAP 44089304
         EJECT                                                          44089404
*********************************************************************** 44089704
*        AREA FOR THE COPY OF THE CALLERS SET PRINT PARAMETER LIST.   * 44090004
*********************************************************************** 44090304
         SPACE 1                                               @Z40MSAP 44090504
SPWSPP   DS    XL48                     COPY SPP IN KEY 5      @Z40MSAP 44091104
         SPACE 1                                               @Z40MSAP 44091704
*********************************************************************** 44092304
*        SUBPOOL NUMBER AND LENGTH FOR USER KEY SECTION OF THE        * 44093304
*        SET PRINT WORKAREA GOTTEN IN USER KEY. THIS INFORMATION      * 44094304
*        WILL BE USED TO FREEMAIN THIS AREA AT THE PROPER TIME.       * 44095304
*********************************************************************** 44096304
         SPACE 1                                               @Z40MSAP 44097304
SPWUKSNL DS    0F                                              @Z40MSAP 44098304
SPWUKSN  DS    XL1                      SUBPOOL NUMBER         @Z40MSAP 44099304
SPWUKLTH DS    XL3                      LENGTH                 @Z40MSAP 44100304
         SPACE 1                                               @Z40MSAP 44101304
*********************************************************************** 44102304
*        SUBPOOL NUMBER AND LENGTH FOR KEY 5 SECTION OF THE SET       * 44103304
*        PRINT WORKAREA GOTTEN IN KEY 5. THIS INFORMATION WILL        * 44113304
*        BE USED TO FREEMAIN THIS AREA AT THE PROPER TIME.            * 44123304
*********************************************************************** 44125304
         SPACE 1                                               @Z40MSAP 44127304
SPWK5SNL DS    0F                                              @Z40MSAP 44129304
SPWK5SN  DS    XL1                      SUBPOOL NUMBER         @Z40MSAP 44131304
SPWK5LTH DS    XL3                      LENGTH                 @Z40MSAP 44131704
         SPACE 1                                               @Z40MSAP 44163904
*********************************************************************** 44170504
*       PUT ANY NEW REQUIREMENTS FOR SPACE IN FRONT OF THIS MESSAGE   * 44183304
*********************************************************************** 44233304
*                                                              @Z40MSAP 44283304
SPWMODWK DS    XL20                     WORK AREA FOR THE      @Z40MSAP 44333304
*                                       COMPILER               @Z40MSAP 44383304
SPW5LNTH EQU   *-SPW5                   LENGTH OF BLDL LIST    @Z40MSAP 44433304
*                                       AND 3800 PRINTER       @Z40MSAP 44483304
*                                       WORK AREA IN KEY 5     @Z40MSAP 44493304
         EJECT                                                 @Z40MSAP 44533304
*********************************************************************** 44616604
*                                                                     * 44633304
*        PRINTER CCW OP-CODES                                         * 44683304
*                                                                     * 44733304
*********************************************************************** 44783304
*                                                              @Z40MSAP 44833304
SPWNOP   EQU   X'03'                    NO OPERATION           @Z40MSAP 44883304
SPWSENSE EQU   X'04'                    SENSE I/O              @Z40MSAP 44933304
SPWWRTSP EQU   X'09'                    PRINT, SPACE 1         @Z40MSAP 44983304
SPWWRITE EQU   X'11'                    WRITE COMMAND          @Z40MSAP 45033304
SPWUNFLD EQU   X'23'                    UNFOLD COMMAND         @Z40MSAP 45083304
SPWFLDCD EQU   X'43'                    FOLD COMMAND           @Z40MSAP 45133304
SPWFCBLD EQU   X'63'                    LOAD FCB IMAGE         @Z40MSAP 45183304
SPWBLDC  EQU   X'73'                    BLOCK DATA CHECK       @Z40MSAP 45233304
SPWSKIP0 EQU   X'83'                    SKIP TO CHANNEL 0      @Z40MSAP 45283304
SPWSKIP  EQU   X'8B'                    SKIP COMMAND           @Z40MSAP 45333304
SPWCNTRL EQU   X'EB'                    CONTROL OP CODE        @Z40MSAP 45383304
SPWLDFLD EQU   X'F3'                    LOAD FOLD COMMAND      @Z40MSAP 45433304
SPWLDUCS EQU   X'FB'                    LOAD UCS COMMAND       @Z40MSAP 45483304
*                                                              @Z40MSAP 45533304
*                                                              @Z40MSAP 45583304
*********************************************************************** 45633304
*                                                                     * 45683304
*        3800 PRINTER CCW OP-CODES                                    * 45733304
*                                                                     * 45783304
*********************************************************************** 45833304
*                                                              @Z40MSAP 45883304
SPWSTCNR EQU   X'23'                    LOAD STARTING COPY     @Z40MSAP 45933304
*                                       NUMBER                 @Z40MSAP 45983304
SPWLGCM  EQU   X'25'                    LOAD GRAPHIC           @Z40MSAP 46033304
*                                       CHARACTER MODULE       @Z40MSAP 46083304
SPWLCMOD EQU   X'35'                    LOAD COPY              @Z40MSAP 46133304
*                                       MODIFY RECORD          @Z40MSAP 46183304
SPWINIT  EQU   X'37'                    INITALIZE PRINTER      @Z40MSAP 46233304
*                                       OP CODE                @Z40MSAP 46283304
SPWLFOVL EQU   X'43'                    LOAD FORMS OVERLAY     @Z40MSAP 46333304
*                                       OP CODE                @Z40MSAP 46383304
SPWSLTT0 EQU   X'47'                    SELECT TRANSLATE       @Z40MSAP 46433304
*                                       TABLE 0                @Z40MSAP 46483304
SPWLWCGM EQU   X'53'                    LOAD WCGM OP CODE      @Z40MSAP 46533304
SPWSLTT1 EQU   X'57'                    SELECT TRANSLATE       @Z40MSAP 46583304
*                                       TABLE 1                @Z40MSAP 46633304
SPWSLTT2 EQU   X'67'                    SELECT TRANSLATE       @Z40MSAP 46683304
*                                       TABLE 2                @Z40MSAP 46733304
SPWSLTT3 EQU   X'77'                    SELECT TRANSLATE       @Z40MSAP 46783304
*                                       TABEL 3                @Z40MSAP 46833304
SPWTTLOD EQU   X'83'                    LOAD TRANSLATE TABLE   @Z40MSAP 46883304
*                                       OP CODE                @Z40MSAP 46933304
SPWCLRPT EQU   X'87'                    CLEAR PRINT OP CODE    @Z40MSAP 46943304
         EJECT                                                 @Z40MSAP 46983304
*********************************************************************** 47033304
*                                                                     * 47083304
*        SET PRINT ERROR RETURN CODES. THESE CODES WILL BE            * 47133304
*        PLACED IN THE PROPER LOCATION IN REGISTER 15, TO             * 47183304
*        INDICATE THE ERROR CONDITION THAT HAS OCCURED.               * 47233304
*                                                                     * 47283304
*********************************************************************** 47333304
*                                                              @Z40MSAP 47383304
SPWSUCCP EQU   X'00'                    SUCCESSFUL COMPLETION  @Z40MSAP 47433304
SPWIMNO  EQU   X'04'                    IMAGE NOT FOUND        @Z40MSAP 47483304
SPWBLDLP EQU   X'08'                    BLDL PERMANENT         @Z40MSAP 47533304
*                                       I/O ERROR              @Z40MSAP 47583304
SPWLOADP EQU   X'0C'                    LOAD PERMANENT         @Z40MSAP 47633304
*                                       I/O ERROR              @Z40MSAP 47683304
SPWREADP EQU   X'10'                    READ PERMANENT         @Z40MSAP 47733304
*                                       I/O ERROR              @Z40MSAP 47783304
SPWFCBV  EQU   X'14'                    WRONG FCB IMAGE        @Z40MSAP 47833304
SPWNOOP  EQU   X'18'                    NO OPERATION PERFORMED @Z40MSAP 47883304
SPWUCERR EQU   X'1C'                    NOP, PREVIOUS          @Z40MSAP 47933304
*                                       UNCORRECTIABLE ERROR   @Z40MSAP 47983304
SPWSPACE EQU   X'20'                    INSUFFICIENT SPACE     @Z40MSAP 48033304
SPWIMLIB EQU   X'24'                    IMAGE LIBRARY CAN      @Z40MSAP 48083304
*                                       NOT BE OPENED          @Z40MSAP 48133304
SPWFOVLF EQU   X'28'                    CAN NOT LOAD FORMS     @Z40MSAP 48183304
*                                       OVERLAY FRAME          @Z40MSAP 48233304
SPWCANCL EQU   X'2C'                    OPERATOR CANCELED      @Z40MSAP 48283304
SPWMCGM  EQU   X'30'                    TOO MANY CGMS          @Z40MSAP 48333304
*                                       REQUESTED              @Z40MSAP 48383304
SPWTRCIN EQU   X'34'                    COPY MOD TRC           @Z40MSAP 48433304
*                                       FIELD INVALID          @Z40MSAP 48483304
SPWEODSR EQU   X'38'                    ERROR WHILE            @Z40MSAP 48533304
*                                       ISSUING EODS           @Z40MSAP 48583304
SPWNOBR  EQU   X'3C'                    NO BURSTER/SHEET       @Z40MSAP 48633304
*                                       STACKERFEATURE         @Z40MSAP 48683304
*                                       INSTALLED              @Z40MSAP 48733304
SPWPIOER EQU   X'40'                    A PERMENT I/O ERROR    @Z40MSAP 48783304
*                                       HAS OCCURED            @Z40MSAP 48833304
SPWNOCGM EQU   X'44'                    CGM NOT SPECIFIED IN   @Z40MSAP 48883304
*                                       CHARACTER ARRANGEMENT  @Z40MSAP 48933304
*                                       TABLE TRAILER          @Z40MSAP 48983304
         EJECT                                                 @Z40MSAP 49033304
*********************************************************************** 49083304
*                                                                     * 49133304
*        SET PRINT 3800 REASON CODES. THESE CODES WILL APPEAR IN      * 49183304
*        REGISTER 0, WHEN AN ERROR CONDITION IS RETURNED.             * 49233304
*                                                                     * 49283304
*********************************************************************** 49333304
*                                                              @Z40MSAP 49383304
SPWTRTBL EQU   X'04'                    TRANSLATE TABLE        @Z40MSAP 49433304
SPWCPMOD EQU   X'08'                    COPY MODIFY RECORD     @Z40MSAP 49483304
SPWCPNR  EQU   X'0C'                    COPY NUMBER            @Z40MSAP 49533304
SPWGCMR  EQU   X'10'                    GRAPHIC CHARACTER      @Z40MSAP 49583304
*                                       MODULE RECORD          @Z40MSAP 49633304
SPWFOSEQ EQU   X'14'                    FORMS OVERLAY          @Z40MSAP 49683304
*                                       SEQUENCE CONTROL       @Z40MSAP 49733304
*                                       RECORD                 @Z40MSAP 49783304
SPWFOVL  EQU   X'18'                    FORMS OVERLAY FEATURE  @Z40MSAP 49833304
SPWCGMR  EQU   X'1C'                    CHARACTER GENERATION   @Z40MSAP 49883304
*                                       MODULE                 @Z40MSAP 49933304
SPWFCBRC EQU   X'20'                    FORMS CONTROL BUFFER   @Z40MSAP 49983304
         EJECT                                                 @Z40MSAP 50033304
*********************************************************************** 50083304
*                                                                     * 50133304
*        COMMON SET PRINT CONSTANTS                                   * 50183304
*                                                                     * 50233304
*********************************************************************** 50283304
SPWALG   EQU   X'FF'                    ALIGN MESSAGE RETRY    @Z40MSAP 50333304
SPWCC    EQU   X'40'                    COMMAND CHAINING BIT   @Z40MSAP 50343304
SPWCCWVR EQU   X'0F'                    VERIFY ONLY            @Z40MSAP 50383304
SPWDEIB1 EQU   X'01'                    USED TO DECREMENT      @Z40MSAP 50433304
*                                       INDEXES BY 1           @Z40MSAP 50483304
SPWENTVR EQU   X'1F'                    ENTRY FOR VERIFY       @Z40MSAP 50533304
SPWFOLD  EQU   X'40'                    FOLD SPECIFIED         @Z40MSAP 50543304
SPWIMCLO EQU   X'FF'                    IMAGELIB NOT OPEN      @Z40MSAP 50583304
SPWINIB1 EQU   X'01'                    USED TO INCREMENT      @Z40MSAP 50633304
*                                       INDEXES BY 1           @Z40MSAP 50683304
SPWMAXCH EQU   4                        MAX NUMBER OF          @Z40MSAP 50733304
*                                       TRANSLATE TABLES       @Z40MSAP 50783304
SPWNFCBL EQU   X'40'                    NO FCB LOAD            @Z40MSAP 50793304
SPWOKCC  EQU   X'7F'                    I/O COMPLETED OK       @Z40MSAP 50833304
SPWOVLAP EQU   X'20'                    LOAD OVERLAPPED        @Z40MSAP 50883304
SPWPOOL  EQU   230                      SUBPOOL FOR            @Z40MSAP 50893304
*                                       USER KEY CORE          @Z40MSAP 50895304
SPWRDLN  EQU   8                        FIELD FOR RECORDS      @Z40MSAP 50903304
*                                       PASSED IN CORE         @Z40MSAP 50913304
SPWRPVER EQU   X'10'                    OPERATOR REQUESTED     @Z40MSAP 50915304
*                                       VERIFY                 @Z40MSAP 50917304
SPWSILI  EQU   X'20'                    SILI BIT               @Z40MSAP 50917704
SPWUCS2C EQU   C'2'                     CHARACTER '2' FOR      @Z40MSAP 50918104
*                                       UCS2 MEMBER NAME       @Z40MSAP 50918504
SPWVERIF EQU   X'10'                    VERIFY SPECIFIED       @Z40MSAP 50919304
SPW5POOL EQU   230                      SUBPOOL FOR            @Z40MSAP 50921304
*                                       KEY 5 CORE             @Z40MSAP 50921704
SPW6LINE EQU   C'6'                     SIX LINES/INCH         @Z40MSAP 50923304
SPW8LINE EQU   C'8'                     EIGHT LINES/INCH       @Z40MSAP 50925304
         EJECT                                                 @Z40MSAP 50927304
*********************************************************************** 50933304
*                                                                     * 50943304
*        THE FOLLOWING STRUCTURE MAPS THE SVRB EXTENDED SAVE          * 50953304
*        AREA AS SET PRINT USES IT.                                   * 50963304
*                                                                     * 50973304
*********************************************************************** 50975304
*                                                              @Z40MSAP 50977304
SPRBXSV  DSECT                                                 @Z40MSAP 50979304
SPRMSG   DS    A                        ADDR OF MSG CSECT      @Z40MSAP 51029304
SPRIDCBA DS    A                        ADDRESS OF IMGLIB DCB  @Z40MSAP 51079304
SPREXIT  DS    A                        RETURN TO EXIT PROLOG  @Z40MSAP 51129304
SPRKEY   DS    X                        CALLER KEY FOR MODESET @Z40MSAP 51179304
*                                       KEY IS IN BITS 0-3     @Z40MSAP 51229304
SPRUSKEY EQU   X'80'                    BIT 0 IS ON IF KEY 8-F @Z40MSAP 51279304
*                                       (USER KEY, NOT SYSTEM) @Z40MSAP 51329304
SPRINDIC DS    B                        INDICATOR BYTE         @Z40MSAP 51379304
SPRNIOBS DS    X                        NO. OF IOBS - USED     @Z40MSAP 51429304
*                                         BY SETPRT ESTAE      @Z40MSAP 51479304
         DS    X                        RESERVED               @Z40MSAP 51529304
SPRBLDLA DS    A                        ADDRESS OF BLDL        @Z40MSAP 51539304
*                                       PARAMETER LIST         @Z40MSAP 51549304
SPRIOBSV DS    A                        ADDR OF IOB ALTERED    @Z40MSAP 51579304
*                                         BY IGC0008A          @Z40MSAP 51629304
         DS    A                        RESERVED               @Z40MSAP 51679304
SPRGETMN DS    A                        ADDR OF GTRACE BUFFER  @Z40MSAP 51729304
*                                         USED BY SETPRT ESTAE @Z40MSAP 51779304
         ORG   SPRGETMN                 REUSE SPACE            @Z40MSAP 51829304
*SPRELIST ESTAE MF=L                    SPACE FOR ESTAE LIST   @Z40MSAP 51879304
SPRELIST ESTAE MF=L                     INVOKE MACRO           @Z40MSAP 51929304
         ORG   SPRGETMN                 REUSE SPACE            @Z40MSAP 51979304
SPRSAVE  DS    5F                       REG SAVE AREA          @Z40MSAP 52029304
         ORG   ,                                               @Z40MSAP 52079304
SPRLEN   EQU   *-SPRBXSV,48-(*-SPRBXSV) SPRLEN IS BYTES USED   @Z40MSAP 52129304
*                                       IN EXTENDED SAVE AREA  @Z40MSAP 52179304
*                                       LTH (SPRLEN), BYTES    @Z40MSAP 52229304
*                                       REMAIN (ERROR MEANS    @Z40MSAP 52279304
*                                       TOO LARGE)             @Z40MSAP 52329304
         EJECT                                                          52379304
         MEND                                                  @Z40MSAP 52429304
*%SPW002:;                              /*                   @Z40MSAP*/ 52479304
*/********************************************************************* 52529304
**                                                                   ** 52579304
**       THIS IS THE MAPPING MACRO FOR THE SET PRINT WORK AREA       ** 52629304
**                                                                   ** 52679304
**********************************************************************/ 52729304
*                                                                       52779304
*                                                                       52789304
*                                                                       52799304
*/********************************************************************* 52809304
**                                                                   ** 52819304
**       THIS IS THE MAPPING MACRO FOR THAT PORTION OF THE SET       ** 52821304
**       PRINT WORK AREA GOTTEN IN USER KEY.                         ** 52823304
**                                                                   ** 52825304
**********************************************************************/ 52827304
*                                                                       52827704
*    DECLARE                                                            52829304
*        1 SPW      BASED(SPWUCORE)     /*                   @Z40MSAP*/ 52879304
*                   BDY(DWORD),         /*                   @Z40MSAP*/ 52929304
*          2 SPWOPTSA PTR(8),           /* SAVE AREA FOR     @Z40MSAP*/ 52979304
*                                       /* OP-CODE FOR       @Z40MSAP*/ 53029304
*          2 SPWPARM1 BIT(8),           /* SAVED REPLY FLAGS @Z40MSAP*/ 53079304
*          2 SPWFLG1  BIT(8),           /* REPLY FLAGS       @Z40MSAP*/ 53129304
*            3 SPWVRFCB BIT(1),         /* VERIFY FCB        @Z40MSAP*/ 53179304
*            3 *        BIT(6),         /*                   @Z40MSAP*/ 53229304
*            3 SPWALIGN BIT(1),         /* ALIGN FORMS       @Z40MSAP*/ 53279304
*          2 SPWFLG2  BIT(8),           /* ENTRY FOR MODULES @Z40MSAP*/ 53329304
*                                       /* IGG08101 AND      @Z40MSAP*/ 53379304
*                                       /* IGG08102          @Z40MSAP*/ 53429304
*          2 SPWFLG3  BIT(8),           /* TO SAVE LINE/     @Z40MSAP*/ 53479304
*                                       /* INCH INDICATOR    @Z40MSAP*/ 53529304
*            3 *        BIT(3),         /*                   @Z40MSAP*/ 53579304
*            3 SPW120RQ BIT(1),         /* IEC120 MESSAGE    @Z40MSAP*/ 53629304
*                                       /* REQUIRED          @Z40MSAP*/ 53679304
*            3 *        BIT(4),         /*                   @Z40MSAP*/ 53729304
*          2 SPWFLG4  BIT(8),           /* FLAG BYTE         @Z40MSAP*/ 53779304
*            3 SPWFLG5  BIT(8),         /* FLAG BYTE         @Z40MSAP*/ 53829304
*              4 SPWFCBDE BIT(1),       /* FCB IMAGE LOADED  @Z40MSAP*/ 53879304
*                                       /* AND MUST BE       @Z40MSAP*/ 53929304
*                                       /* DELETED           @Z40MSAP*/ 53979304
*              4 SPWECPAM BIT(1),       /* INDICATES EXCP    @Z40MSAP*/ 54029304
*                                       /* DCB WITH ACCESS   @Z40MSAP*/ 54079304
*                                       /* METHOD SECTION    @Z40MSAP*/ 54129304
*                                       /* PRESENT           @Z40MSAP*/ 54179304
*              4 *        BIT(1),       /* UNUSED FLAG BIT   @Z40MSAP*/ 54229304
*              4 *        BIT(1),       /* UNUSED FLAG BIT   @Z40MSAP*/ 54239304
*              4 *        BIT(1),       /* UNUSED FLAG BIT   @Z40MSAP*/ 54249304
*              4 *        BIT(1),       /* UNUSED FLAG BIT   @Z40MSAP*/ 54259304
*              4 *        BIT(1),       /* UNUSED FLAG BIT   @Z40MSAP*/ 54269304
*              4 *        BIT(1),       /* UNUSED FLAG BIT   @Z40MSAP*/ 54271304
*          2 SPWFLG8  BIT(8),           /* FLAG BYTE         @Z40MSAP*/ 54279304
*            3 SPWRETRY BIT(1),         /* RETRY IN PROGRESS @Z40MSAP*/ 54329304
*            3 SPWVREND BIT(1),         /* LAST VERIFY LINE  @Z40MSAP*/ 54379304
*                                       /* IS PRINTING       @Z40MSAP*/ 54429304
*            3 SPWNOMOV BIT(1),         /* DO NOT MOVE       @Z40MSAP*/ 54479304
*                                       /* REQUESTED MESSAGE @Z40MSAP*/ 54529304
*            3 SPWFCBOP BIT(1),         /* FILL FCBOP AS     @Z40MSAP*/ 54579304
*                                                                       54629304
*                                       /* WELL AS FCBID     @Z40MSAP*/ 54679304
*                                       /* INTO UCB          @Z40MSAP*/ 54729304
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 54779304
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 54789304
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 54799304
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 54809304
*          2 *        CHAR(1),          /* UNUSED BYTE       @Z40MSAP*/ 54819304
*          2 SPWMSGHD CHAR(8)           /* HEADER SECTON     @Z40MSAP*/ 54829304
*                     BDY(WORD),        /* FOR MESSAGE AREA  @Z40MSAP*/ 54879304
*            3 SPWRPLYA PTR(31),        /* ADDRESS OF THE    @Z40MSAP*/ 54929304
*                                       /* REPLY AREA        @Z40MSAP*/ 54979304
*              4 SPWMSGLB PTR(8),       /* LENGTH OF THE     @Z40MSAP*/ 55029304
*                                       /* REPLY AREA        @Z40MSAP*/ 55079304
*              4 SPWRPLYB PTR(24),      /* ADDRESS OF THE    @Z40MSAP*/ 55129304
*                                       /* REPLY AREA        @Z40MSAP*/ 55179304
*            3 SPWECBPA PTR(31),        /* ADDRESS OF THE    @Z40MSAP*/ 55229304
*                                       /* REPLY ECB         @Z40MSAP*/ 55279304
*          2 SPWMSGAR,                  /* SPW MESSAGE AREA  @Z40MSAP*/ 55329304
*            3 SPWMSGTX CHAR(64),       /* MESSAGE TEXT      @Z40MSAP*/ 55429304
*            3 SPWREPLY CHAR(16),       /* OPERATOR REPLY    @Z40MSAP*/ 55479304
*                                       /* AREA (16 BYTES)   @Z40MSAP*/ 55529304
*              4 *        CHAR(1),      /*                   @Z40MSAP*/ 55579304
*              4 SPWFCBOR CHAR(15),     /* OFFSET OF 1 USED  @Z40MSAP*/ 55629304
*                                       /* WHEN INCREMENTING @Z40MSAP*/ 55639304
*                                       /* THROUGH THE       @Z40MSAP*/ 55649304
*                                       /* OPERATOR REPLY    @Z40MSAP*/ 55659304
*                5 SPWREPC1 CHAR(15),   /* OFFSET OF 1 USED  @Z40MSAP*/ 55669304
*                                       /* TO CLEAR FIELD    @Z40MSAP*/ 55671304
*          2 SPWRPECB PTR(31),          /* REPLY ECB FOR     @Z40MSAP*/ 55829304
*                                       /* WTOR              @Z40MSAP*/ 55879304
*          2 SPWREPID CHAR(4),          /* REPLIED ID        @Z40MSAP*/ 55929304
*          2 SPWFCBIM CHAR(8)           /* NAME FCB IMAGE    @Z40MSAP*/ 55979304
*                     BDY(WORD),        /*                   @Z40MSAP*/ 56029304
*            3 SPWUCSIM CHAR(8),        /* NAME OF UCS IMAGE @Z40MSAP*/ 56079304
*              4 *        CHAR(4),      /* FIRST 1/2 OF NAME @Z40MSAP*/ 56129304
*              4 SPWUCS2H CHAR(4),      /* 2ND HALF UCS NAME @Z40MSAP*/ 56229304
*                5 SPWFCB2H CHAR(4),    /* 2ND HALF OF NAME  @Z40MSAP*/ 56329304
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 56779304
*/********************************************************************* 56829304
**                                                                   ** 56879304
**     THE FOLLOWING IOB WILL BE BUILT FOR EXCP USERS, AND           ** 56929304
**     IF  THERE IS A NON-OPEN DCB IN KEY 5 FOR A 3800 PRINTER.      ** 56979304
**                                                                   ** 57029304
**********************************************************************/ 57079304
*                                                                       57129304
*          2 SPWIOB   CHAR(40),         /*                   @Z40MSAP*/ 57179304
*                                                                       57189304
*/********************************************************************* 57191304
**                                                                   ** 57193304
**       THE FOLLOWING INFORMATION WAS SAVED FROM THE USERS IOB.     ** 57193704
**                                                                   ** 57197704
**********************************************************************/ 57198104
*                                                                       57198504
*          2 SPWFLGSV PTR(31),          /* IOB FIRST WORD    @Z40MSAP*/ 57199304
*          2 SPWSTRSV PTR(31),          /* IOB START         @Z40MSAP*/ 57209304
*    @ EJECT ASSEMBLE;                                     /*@Z40MSAP*/ 57211304
*/********************************************************************* 57229304
**                                                                   ** 57279304
**       THE FOLLOWING SECTION MAPS THE CHANNEL PROGRAM              ** 57329304
**       SECTION OF THE SET PRINT WORKAREA.                          ** 57379304
**                                                                   ** 57429304
**********************************************************************/ 57479304
*                                                                       57529304
*          2 SPWCCW1  CHAR(8)           /* FIRST CCW         @Z40MSAP*/ 57729304
*                     BDY(DWORD),       /*                   @Z40MSAP*/ 57779304
*            3 SPWADD1A PTR(31),        /* BUFFER ADDRESS    @Z40MSAP*/ 57829304
*              4 SPWOPCD1 PTR(8),       /* OP CODE           @Z40MSAP*/ 57879304
*              4 SPWADD1B PTR(24),      /* BUFFER ADDRESS    @Z40MSAP*/ 57929304
*            3 SPWCCWF1 PTR(16),        /* CCW FLAGS         @Z40MSAP*/ 57979304
*              4 *        BIT(1),       /* FILLER            @Z40MSAP*/ 58029304
*              4 SPWCC1   BIT(1),       /* COMMAND CHAINING  @Z40MSAP*/ 58079304
*              4 SPWSILI1 BIT(1),       /* SILI BIT          @Z40MSAP*/ 58129304
*              4 *        BIT(13),      /* FILLER            @Z40MSAP*/ 58179304
*            3 SPWBYTE1 PTR(16),        /* BYTE COUNT        @Z40MSAP*/ 58229304
*          2 SPWCCW2  CHAR(8)           /* SECOND CCW        @Z40MSAP*/ 58279304
*                     BDY(DWORD),       /*                   @Z40MSAP*/ 58329304
*            3 SPWADD2A PTR(31),        /* BUFFER ADDRESS    @Z40MSAP*/ 58379304
*              4 SPWOPCD2 PTR(8),       /* OP CODE           @Z40MSAP*/ 58429304
*              4 SPWADD2B PTR(24),      /* BUFFER ADDRESS    @Z40MSAP*/ 58479304
*            3 SPWCCWF2 PTR(16),        /* CCW FLAGS         @Z40MSAP*/ 58529304
*              4 *        BIT(1),       /* FILLER            @Z40MSAP*/ 58579304
*              4 SPWCC2   BIT(1),       /* COMMAND CHAINING  @Z40MSAP*/ 58629304
*              4 SPWSILI2 BIT(1),       /* SILI BIT          @Z40MSAP*/ 58679304
*              4 *        BIT(13),      /* FILLER            @Z40MSAP*/ 58729304
*            3 SPWBYTE2 PTR(16),        /* BYTE COUNT        @Z40MSAP*/ 58779304
*          2 SPWCCW3  CHAR(8)           /* THIRD CCW         @Z40MSAP*/ 58829304
*                     BDY(DWORD),       /*                   @Z40MSAP*/ 58879304
*            3 SPWADD3A PTR(31),        /* BUFFER ADDRESS    @Z40MSAP*/ 58929304
*              4 SPWOPCD3 PTR(8),       /* OP CODE           @Z40MSAP*/ 58979304
*              4 SPWADD3B PTR(24),      /* BUFFER ADDRESS    @Z40MSAP*/ 59029304
*            3 SPWCCWF3 PTR(16),        /* CCW FLAGS         @Z40MSAP*/ 59079304
*              4 *        BIT(1),       /* FILLER            @Z40MSAP*/ 59129304
*              4 SPWCC3   BIT(1),       /* COMMAND CHAINING  @Z40MSAP*/ 59179304
*              4 SPWSILI3 BIT(1),       /* SILI BIT          @Z40MSAP*/ 59229304
*              4 *        BIT(13),      /* FILLER            @Z40MSAP*/ 59279304
*            3 SPWBYTE3 PTR(16),        /* BYTE COUNT        @Z40MSAP*/ 59329304
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 59331304
*          2 SPWUNPKA PTR(31),          /* UNPACK AREA       @Z40MSAP*/ 59354504
*            3 *        CHAR(1),        /* FILLER            @Z40MSAP*/ 59356104
*            3 SPWKAR   CHAR(2),        /* FINAL RESULT      @Z40MSAP*/ 59357704
*            3 SPWZONE  PTR(8),         /* ZONE FOR          @Z40MSAP*/ 59359304
*                                       /* LOW ORDER         @Z40MSAP*/ 59360904
*          2 *        PTR(16),          /* FILLER            @Z40MSAP*/ 59370904
*          2 SPWLNENO PTR(16),          /* USED BY CONVERT   @Z40MSAP*/ 59380904
*                                       /* INSTRUCTION       @Z40MSAP*/ 59390904
*          2 SPWFFSB  FIXED(32);        /* FIRST FOUR SENSE  @Z40MSAP*/ 59392904
*                                       /* BYTES FOR THE     @Z40MSAP*/ 59394904
*                                       /* 3800 PRINTER      @Z40MSAP*/ 59395304
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 59396104
*/********************************************************************* 59397704
**                                                                   ** 59399304
**       THIS IS THE MAPPING MACRO FOR THAT PORTION OF THE SET       ** 59409304
**       PRINT WORK AREA GOTTEN IN KEY 5.                            ** 59419304
**                                                                   ** 59421304
**********************************************************************/ 59423304
*                                                                       59425304
*                                                                       59427304
*                                                                       59427704
*/********************************************************************* 59429304
**                                                                   ** 59479304
**       THE FOLLOWING SECTION MAPS THE BLDL WORKAREA FOR            ** 59529304
**       SET PRINT.                                                  ** 59579304
**                                                                   ** 59629304
**********************************************************************/ 59679304
*                                                                       59729304
*    DECLARE                            /*                   @Z40MSAP*/ 59779304
*        1 SPW5     BASED(SPW5CORE),    /*                   @Z40MSAP*/ 59829304
*          2 SPWBLDLA CHAR(64)          /* BLDL LIST AREA    @Z40MSAP*/ 59839304
*                     BDY(WORD),        /*                   @Z40MSAP*/ 59849304
*            3 SPWBLDLC PTR(32),        /* COUNT AND LENGTH  @Z40MSAP*/ 59879304
*              4 SPWBLDCT PTR(16),      /* COUNT             @Z40MSAP*/ 59929304
*              4 SPWBLDLL PTR(16),      /* LENGTH            @Z40MSAP*/ 59979304
*            3 SPWBLNAM CHAR(8),        /* IMAGE NAME FIELD  @Z40MSAP*/ 59989304
*              4 SPWUCSMB CHAR(4),      /* UCS IMAGE MEMBER  @Z40MSAP*/ 60029304
*                5 SPWFCBMB CHAR(4),    /* FCB IMAGE MEMBER  @Z40MSAP*/ 60079304
*                  6 *        CHAR(3),  /* FILLER            @Z40MSAP*/ 60129304
*                  6 SPWFCB2  CHAR(1),  /* FCB IMAGE NAME    @Z40MSAP*/ 60179304
*                    7 SPWUCS2  CHAR(1),/* UCS IMAGE NAME    @Z40MSAP*/ 60229304
*              4 SPWBLFCB CHAR(4),      /* FCB ID FOR BLDS   @Z40MSAP*/ 60279304
*                5 SPWBLUCS CHAR(4),    /* UCS ID FOR BLDL   @Z40MSAP*/ 60329304
*            3 *        CHAR(52),       /* FILLER            @Z40MSAP*/ 60379304
*          2 SPWWKADR PTR(32),          /* ADDRESS OF SET    @Z40MSAP*/ 60429304
*                                       /* PRINT WORKAREA    @Z40MSAP*/ 60449304
*                                       /* (IN USER KEY)     @Z40MSAP*/ 60451304
*                                       /* SAVED FOR ESTAE   @Z40MSAP*/ 60459304
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 60479304
*/********************************************************************* 60489304
**                                                                   ** 60499304
**       THE FOLLOWING SECTION MAPS THE MESSAGE AREA FOR THE KEY     ** 60509304
**       5 SEGMENT OF THE SET PRINT WORK AREA.                       ** 60519304
**                                                                   ** 60523304
**********************************************************************/ 60525304
*                                                                       60527304
*          2 SPWMSGHS CHAR(8)           /* HEADER SECTON     @Z40MSAP*/ 60529304
*                     BDY(WORD),        /* FOR MESSAGE AREA  @Z40MSAP*/ 60579304
*            3 SPWARPLA PTR(31),        /* ADDRESS OF THE    @Z40MSAP*/ 60629304
*                                       /* REPLY AREA        @Z40MSAP*/ 60679304
*              4 SPWLRPLA PTR(8),       /* LENGTH OF THE     @Z40MSAP*/ 60729304
*                                       /* REPLY AREA        @Z40MSAP*/ 60779304
*              4 SPWARPLB PTR(24),      /* ADDRESS OF THE    @Z40MSAP*/ 60829304
*                                       /* REPLY AREA        @Z40MSAP*/ 60879304
*            3 SPWARECB PTR(31),        /* ADDRESS OF THE    @Z40MSAP*/ 60929304
*                                       /* REPLY ECB         @Z40MSAP*/ 60979304
*          2 SPWMSGA,                   /* SPW MESSAGE AREA  @Z40MSAP*/ 61029304
*            3 SPWMSGLN BIT(32),        /* MESSAGE LENGTH    @Z40MSAP*/ 61079304
*            3 SPWTXMSG CHAR(80),       /* MESSAGE TEXT      @Z40MSAP*/ 61129304
*            3 SPWORPLY CHAR(16),       /* OPERATOR REPLY    @Z40MSAP*/ 61179304
*                                       /* AREA (16 BYTES)   @Z40MSAP*/ 61229304
*          2 SPWMRECB PTR(31),          /* REPLY ECB FOR     @Z40MSAP*/ 61529304
*                                       /* WTOR              @Z40MSAP*/ 61579304
*          2 SPWIMAGE CHAR(8)           /* NAME IMAGE        @Z40MSAP*/ 61629304
*                     BDY(WORD),        /* REQUESTED         @Z40MSAP*/ 61639304
*            3 SPWFCBNM CHAR(8),        /* NAME FCB IMAGE    @Z40MSAP*/ 61679304
*              4 SPWFCBPF CHAR(4),      /* FIRST 1/2 OF NAME @Z40MSAP*/ 61829304
*              4 SPWFCBID CHAR(4),      /* 2ND HALF FCB NAME @Z40MSAP*/ 61979304
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 62479304
*/********************************************************************* 64729304
**                                                                   ** 64779304
**       THIS SECTION OF THE SET PRINT MAPPING MACRO HAS BEEN        ** 64829304
**       ADDED FOR THE 3800 DEVICE.                                  ** 64879304
**                                                                   ** 64929304
**********************************************************************/ 64979304
*                                                                       65029304
*          2 SPWSPRB  PTR(31),          /* POINTER TO SVRB   @Z40MSAP*/ 65279304
*                                       /* EXTENDED SAVE     @Z40MSAP*/ 65329304
*                                       /* AREA              @Z40MSAP*/ 65379304
*          2 SPWTWAD1 PTR(31),          /* TRANSLATE 1       @Z40MSAP*/ 65829304
*                                       /* WORKAREA ADDRESS  @Z40MSAP*/ 65879304
*          2 SPWTWL1  PTR(32),          /* TRANSLATE 1       @Z40MSAP*/ 65929304
*                                       /* WORKAREA LENGTH   @Z40MSAP*/ 65979304
*                                       /* AND SUBPOOL #     @Z40MSAP*/ 66029304
*            3 SPWTWSP1 PTR(8),         /* TRANSLATE 1       @Z40MSAP*/ 66079304
*                                       /* WORKAREA          @Z40MSAP*/ 66129304
*                                       /* SUBPOOL NUMBER    @Z40MSAP*/ 66179304
*            3 SPWTWLN1 PTR(24),        /* TRANSLATE 1       @Z40MSAP*/ 66229304
*                                       /* WORKAREA LENGTH   @Z40MSAP*/ 66279304
*          2 SPWFLAG1 BIT(8),           /* FIRST BYTE OF     @Z40MSAP*/ 66979304
*                                       /* FLAGS             @Z40MSAP*/ 67029304
*            3 SPWT3800 BIT(1),         /* THIS SET PRINT    @Z40MSAP*/ 67079304
*                                       /* REQUEST IS FOR A  @Z40MSAP*/ 67089304
*                                       /* 3800 TYPE DEVICE  @Z40MSAP*/ 67099304
*            3 SPWFCBUA BIT(1),         /* FCB IMAGE IN      @Z40MSAP*/ 67129304
*                                       /* USER AREA         @Z40MSAP*/ 67179304
*            3 SPWENDXL BIT(1),         /* END OF DCB        @Z40MSAP*/ 67229304
*                                       /* EXIT LIST         @Z40MSAP*/ 67279304
*            3 SPWEXFLD BIT(1),         /* EXCP FOR FCB LOAD @Z40MSAP*/ 67329304
*            3 SPWEXWPR BIT(1),         /* EXCP FOR WRITING  @Z40MSAP*/ 67379304
*                                       /* ON THE PRINTER    @Z40MSAP*/ 67429304
*            3 SPWENDM  BIT(1),         /* END SECTION IN    @Z40MSAP*/ 67479304
*                                       /* MESSAGE AREA      @Z40MSAP*/ 67529304
*            3 SPWEFCBP BIT(1),         /* END OF FCB IMAGE  @Z40MSAP*/ 67579304
*                                       /* PRINT FUNCTION    @Z40MSAP*/ 67629304
*            3 SPWM128L BIT(1),         /* MSG IEC128D IN    @Z40MSAP*/ 67679304
*                                       /* MESSAGE AREA      @Z40MSAP*/ 67729304
*          2 SPWFLAG2 BIT(8),           /* SECOND BYTE OF    @Z40MSAP*/ 67779304
*                                       /* FLAGS             @Z40MSAP*/ 67829304
*            3 SPWRVMSG BIT(1),         /* REISSUE VERIFY    @Z40MSAP*/ 67879304
*                                       /* MESSAGE TO 3800   @Z40MSAP*/ 67929304
*            3 SPWVMHD  BIT(1),         /* HEADER SECTION IN @Z40MSAP*/ 67979304
*                                       /* MESSAGE AREA      @Z40MSAP*/ 68029304
*            3 SPWVMCH  BIT(1),         /* 'CHANNEL' IN      @Z40MSAP*/ 68079304
*                                       /* MESSAGE AREA      @Z40MSAP*/ 68129304
*            3 SPWBLIOB BIT(1),         /* BUILD DUMMY IOB   @Z40MSAP*/ 68179304
*            3 SPWM163L BIT(1),         /* MESSAGE IEC163A   @Z40MSAP*/ 68229304
*                                       /* IS BEING ISSUED   @Z40MSAP*/ 68279304
*            3 SPWM164L BIT(1),         /* MESSAGE IEC164A   @Z40MSAP*/ 68329304
*                                       /* IS BEING ISSUED   @Z40MSAP*/ 68379304
*            3 SPWNSTOR BIT(1),         /* DETERMINES IF     @Z40MSAP*/ 68429304
*                                       /* SPWN HAS BEEN     @Z40MSAP*/ 68479304
*                                       /* STORED            @Z40MSAP*/ 68529304
*            3 SPWNESOI BIT(1),         /* NOT ENOUGH SPACE  @Z40MSAP*/ 68579304
*                                       /* TO OPEN IMAGELIB  @Z40MSAP*/ 68629304
*          2 SPWFLAG3 PTR(8),           /* THIRD BYTE OF     @Z40MSAP*/ 68679348
*                                       /* FLAGS             @Z40MSAP*/ 68684348
*            3 SPWPLCPY BIT(1),         /* THE SET PRINT     @Z40MSAP*/ 68689304
*                                       /* PARM LIST HAS     @Z40MSAP*/ 68699304
*                                       /* BEEN COPIED FROM  @Z40MSAP*/ 68701304
*                                       /* THE CALLERS AREA  @Z40MSAP*/ 68703304
*                                       /* TO KEY 5 SET      @Z40MSAP*/ 68705304
*                                       /* PRINT WORK AREA   @Z40MSAP*/ 68707304
*            3 SPWIMGLD BIT(1),         /* IMAGE LOADED      @Z40MSAP*/ 68709304
*                                       /* INTO CORE         @Z40MSAP*/ 68711304
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 68719304
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 68721304
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 68723304
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 68725304
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 68727304
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 68727704
*          2 SPWREASN PTR(8),           /* REASON CODE       @Z40MSAP*/ 68729304
*          2 SPWRETCD PTR(32),          /* RETURN CODE       @Z40MSAP*/ 68779304
*            3 SPWRET0  PTR(8),         /* BYTE 0 OF         @Z40MSAP*/ 68829304
*                                       /* RETURN CODE       @Z40MSAP*/ 68879304
*            3 SPWRET1  PTR(8),         /* BYTE 1 OF         @Z40MSAP*/ 68929304
*                                       /* RETURN CODE       @Z40MSAP*/ 68979304
*            3 SPWRET2  PTR(8),         /* BYTE 2 OF         @Z40MSAP*/ 69029304
*                                       /* RETURN CODE       @Z40MSAP*/ 69079304
*            3 SPWRET3  PTR(8),         /* BYTE 3 OF         @Z40MSAP*/ 69129304
*                                       /* RETURN CODE       @Z40MSAP*/ 69179304
*          2 SPWIOBST PTR(31),          /* PTR IOB STANDARD  @Z40MSAP*/ 69229304
*                                       /* SECTION           @Z40MSAP*/ 69279304
*          2 SPWLNCNT FIXED(15),        /* FCB IMAGE LINE    @Z40MSAP*/ 70229304
*                                       /* COUNTER           @Z40MSAP*/ 70279304
*          2 SPWFCBIL FIXED(15),        /* LENGTH FCB IMAGE  @Z40MSAP*/ 70329304
*          2 SPWCAVTA PTR(31),          /* ADDR CALLERS AVT  @Z40MSAP*/ 70379304
*          2 SPWWKBTS PTR(16),          /* WORK BYTES TO     @Z40MSAP*/ 70429304
*                                       /* TEST FLAGS        @Z40MSAP*/ 70479304
*            3 SPWWKBT1 PTR(8),         /* FIRST WORK BYTE   @Z40MSAP*/ 70529304
*            3 SPWWKBT2 PTR(8),         /* SECOND WORK BYTE  @Z40MSAP*/ 70579304
*          2 SPWI     PTR(8),           /* TOTAL NUMBER OF   @Z40MSAP*/ 70629304
*                                       /* TRANSLATE TABLES  @Z40MSAP*/ 70679304
*          2 SPWJ     PTR(8),           /* TRANSLATE TABLE   @Z40MSAP*/ 70729304
*                                       /* INDEX             @Z40MSAP*/ 70779304
*          2 SPWK     PTR(8),           /* INDEX OF CGM IN   @Z40MSAP*/ 70829304
*                                       /* TRANSLATE TABLES  @Z40MSAP*/ 70879304
*          2 SPWL     PTR(8),           /*                   @Z40MSAP*/ 70929304
*          2 SPWM     PTR(8),           /* INDEX IN CGM      @Z40MSAP*/ 70979304
*                                       /* RECORD            @Z40MSAP*/ 71029304
*          2 SPWN     PTR(8),           /* INDEX IN CGM      @Z40MSAP*/ 71079304
*                                       /* RECORD            @Z40MSAP*/ 71129304
*          2 SPWP     PTR(16),          /* TRANSLATE TABLE   @Z40MSAP*/ 71179304
*                                       /* POSITION INDEX    @Z40MSAP*/ 71229304
*          2 SPWMAX   PTR(8),           /* NUMBER OF CGM S   @Z40MSAP*/ 71279304
*                                       /* INSTALLED ON      @Z40MSAP*/ 71329304
*                                       /* DEVICE            @Z40MSAP*/ 71379304
*          2 SPWTCBKY BIT(8),           /* UNUSED BYTE       @Z40MSAP*/ 71389304
*          2 SPWCGMID BIT(32),          /* AREA TO BUILD     @Z40MSAP*/ 71429304
*                                       /* LOADCGM RECORD    @Z40MSAP*/ 71479304
*            3 SPWCGMRC(4) BIT(8),      /* ARRAY OF CGM IDS  @Z40MSAP*/ 71529304
*          2 SPWMEXIT(5) PTR(31),       /* SETPRT MODULES    @Z40MSAP*/ 71579304
*                                       /* EXIT LIST         @Z40MSAP*/ 71629304
*          2 SPWMEIND FIXED(8),         /* INDEX FOR MODULE  @Z40MSAP*/ 72029304
*                                       /* EXIT LIST         @Z40MSAP*/ 72079304
*          2 SPWERIND FIXED(8),         /* INDEX FOR THE     @Z40MSAP*/ 72229304
*                                       /* ERROR EXIT IN THE @Z40MSAP*/ 72279304
*                                       /* MODULE EXIT LIST  @Z40MSAP*/ 72329304
*          2 SPWRXIND FIXED(8),         /* INDEX INTO THE    @Z40MSAP*/ 72339304
*                                       /* MODULE EXIT LIST  @Z40MSAP*/ 72349304
*                                       /* FOR A MODULE TO   @Z40MSAP*/ 72359304
*                                       /* PASS CONTROL TO   @Z40MSAP*/ 72369304
*                                       /* IF RETRANSMIT IS  @Z40MSAP*/ 72371304
*                                       /* SPECIFIED         @Z40MSAP*/ 72373304
*          2 SPWPLNTH FIXED(8),         /* LENGTH OF THE     @Z40MSAP*/ 72379304
*                                       /* SET PRINT         @Z40MSAP*/ 72389304
*                                       /* PARAMETER LIST    @Z40MSAP*/ 72399304
*          2 SPWADDCB PTR(31),          /* ADDRESS OF THE    @Z40MSAP*/ 72400304
*                                       /* CALLERS DCB       @Z40MSAP*/ 72401304
*          2 SPWADDEB PTR(31),          /* ADDRESS OF THE    @Z40MSAP*/ 72402304
*                                       /* CALLERS DEB       @Z40MSAP*/ 72403304
*          2 SPWADIOB PTR(31),          /* ADDRESS OF THE    @Z40MSAP*/ 72404304
*                                       /* IOB PREFIX        @Z40MSAP*/ 72405304
*                                       /* SECTION           @Z40MSAP*/ 72406304
*          2 SPWADUCB PTR(31),          /* ADDRESS OF THE    @Z40MSAP*/ 72407304
*                                       /* UCB               @Z40MSAP*/ 72408304
*          2 SPWCFHIT FIXED(8),         /* COUNTER FOR FCB   @Z48MSAP*/ 72408448
*                                       /* IMAGE HALF INCH   @Z48MSAP*/ 72408548
*                                       /* TEST              @Z48MSAP*/ 72408648
*          2 SPWCFB   FIXED(8),         /* CURRENT FCB BYTE  @Z48MSAP*/ 72408748
*                                       /* BEING USED FOR    @Z48MSAP*/ 72408848
*                                       /* HALF INCH TEST    @Z48MSAP*/ 72408948
*          2 *        FIXED(16),        /* UNUSED TWO BYTES  @Z48MSAP*/ 72409048
*          2 *        FIXED(31),        /* UNUSED FOUR BYTES @Z48MSAP*/ 72409148
*          2 SPWSAVE  CHAR(60)          /* SET PRINT WORK    @Z40MSAP*/ 72409304
*                     BDY(WORD),        /* AREA REGISTER     @Z40MSAP*/ 72419304
*                                       /* SAVE AREA         @Z40MSAP*/ 72421304
*            3 SPWSAV01 FIXED(31),      /* SAVE AREA NUM  1  @Z40MSAP*/ 72429304
*            3 SPWSAV02 FIXED(31),      /* SAVE AREA NUM  2  @Z40MSAP*/ 72479304
*            3 SPWSAV03 FIXED(31),      /* SAVE AREA NUM  3  @Z40MSAP*/ 72529304
*            3 SPWSAV04 FIXED(31),      /* SAVE AREA NUM  4  @Z40MSAP*/ 72579304
*            3 SPWSAV05 FIXED(31),      /* SAVE AREA NUM  5  @Z40MSAP*/ 72629304
*            3 SPWSAV06 FIXED(31),      /* SAVE AREA NUM  6  @Z40MSAP*/ 72679304
*            3 SPWSAV07 FIXED(31),      /* SAVE AREA NUM  7  @Z40MSAP*/ 72729304
*            3 SPWSAV08 FIXED(31),      /* SAVE AREA NUM  8  @Z40MSAP*/ 72779304
*            3 SPWSAV09 FIXED(31),      /* SAVE AREA NUM  9  @Z40MSAP*/ 72829304
*            3 SPWSAV10 FIXED(31),      /* SAVE AREA NUM 10  @Z40MSAP*/ 72879304
*            3 SPWSAV11 FIXED(31),      /* SAVE AREA NUM 11  @Z40MSAP*/ 72929304
*            3 SPWSAV12 FIXED(31),      /* SAVE AREA NUM 12  @Z40MSAP*/ 72979304
*            3 SPWSAV13 FIXED(31),      /* SAVE AREA NUM 13  @Z40MSAP*/ 73029304
*            3 SPWSAV14 FIXED(31),      /* SAVE AREA NUM 14  @Z40MSAP*/ 73079304
*            3 SPWSAV15 FIXED(31),      /* SAVE AREA NUM 15  @Z40MSAP*/ 73129304
*                                       /*                   @Z40MSAP*/ 73179304
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 73181304
*/********************************************************************* 73181404
**       THIS IS A RECEIVING FIELD FOR A CVD INSTRUCTION, AND        ** 73181504
**       THEREFORE IS ALIGNED ON A DOUBLE WORD BOUNDARY.             ** 73181604
**********************************************************************/ 73182704
*          2 SPWFLINU BIT(64)           /* FCB IMAGE LINE    @Z40MSAP*/ 73184704
*                     BDY(DWORD),       /* NUMBER            @Z40MSAP*/ 73184804
*            3 SPWFCHNU BIT(64)         /* FCB IMAGE CHANNEL @Z40MSAP*/ 73184904
*                       BDY(BYTE),      /* NUMBER            @Z40MSAP*/ 73185004
*              4 *        CHAR(6),      /* FILLER            @Z40MSAP*/ 73185104
*              4 SPWFPAKL BIT(16),      /* FCB LINE NUMBER   @Z40MSAP*/ 73185204
*                                       /* IN PACKED FORMAT  @Z40MSAP*/ 73185704
*                5 SPWFPAKC BIT(16),    /* FCB CHANNEL       @Z40MSAP*/ 73186104
*                                       /* NUMBER IN         @Z40MSAP*/ 73186504
*                                       /* PACKED FORMAT     @Z40MSAP*/ 73186604
*                  6 *        FIXED(8), /* 1ST HALF FCB      @Z40MSAP*/ 73186704
*                                       /* IMAGE ENTRY       @Z40MSAP*/ 73187104
*                  6 SPWFSNUM BIT(8),   /* SIGN PORTION OF   @Z40MSAP*/ 73187304
*                                       /* FCB IMAGE ENTRY   @Z40MSAP*/ 73187404
*    @ EJECT ASSEMBLE;                                     /*@Z40MSAP*/ 73187504
*/********************************************************************* 73187704
**       AREA FOR THE COPY OF THE CALLERS SET PRINT PARAMETER LIST   ** 73187904
**********************************************************************/ 73188104
*                                                                       73188404
*          2 SPWSPP   CHAR(48),         /* COPY OF SPP KEY 5 @Z40MSAP*/ 73189504
*                                                                       73190604
*/********************************************************************* 73191704
**       SUBPOOL NUMBER AND LENGTH FOR USER KEY SECTION OF THE       ** 73192804
**       SET PRINT WORKAREA GOTTEN IN USER KEY. THIS INFORMATION     ** 73193904
**       WILL BE USED TO FREEMAIN THIS AREA AT THE PROPER TIME.      ** 73195004
**********************************************************************/ 73196104
*                                                                       73197204
*          2 SPWUKSNL PTR(31),          /* THE GETMAIN       @Z40MSAP*/ 73198304
*                                       /* SUBPOOL NUMBER    @Z40MSAP*/ 73199404
*                                       /* AND LENGTH FOR    @Z40MSAP*/ 73200504
*                                       /* THE SET PRINT     @Z40MSAP*/ 73201604
*                                       /* WORKAREA GOTTEN   @Z40MSAP*/ 73202704
*                                       /* IN USER KEY       @Z40MSAP*/ 73203804
*            3 SPWUKSN  FIXED(8),       /* SUBPOOL NUMBER    @Z40MSAP*/ 73204904
*            3 SPWUKLTH FIXED(24),      /* LENGTH            @Z40MSAP*/ 73206004
*/********************************************************************* 73207104
**                                                                   ** 73208204
**       SAVED SUBPOOL NUMBER AND LENGTH FOR KEY 5 SECTION OF        ** 73209304
**       SET PRINT WORK AREA.                                        ** 73219304
**                                                                   ** 73221304
**********************************************************************/ 73223304
*                                                                       73225304
*          2 SPWK5SNL PTR(31),          /* THE GETMAIN       @Z40MSAP*/ 73227304
*                                       /* SUBPOOL NUMBER    @Z40MSAP*/ 73227704
*                                       /* AND LENGTH FOR    @Z40MSAP*/ 73228104
*                                       /* THE SET PRINT     @Z40MSAP*/ 73228504
*                                       /* WORKAREA GOTTEN   @Z40MSAP*/ 73228904
*                                       /* IN KEY 5          @Z40MSAP*/ 73229004
*            3 SPWK5SN  FIXED(8),       /* SUBPOOL NUMBER    @Z40MSAP*/ 73229104
*            3 SPWK5LTH FIXED(24),      /* LENGTH            @Z40MSAP*/ 73229204
*/********************************************************************* 73262604
**      PUT ANY NEW REQUIREMENTS FOR SPACE IN FRONT OF THIS MESSAGE  ** 73279304
**********************************************************************/ 73329304
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 73379304
*/********************************************************************* 73429304
**                                                                   ** 73479304
**     THIS IS THE WORK AREA FOR THE SET PRINT MODULES COMPLIERS     ** 73529304
**                                                                   ** 73579304
**********************************************************************/ 73629304
*                                       /*                   @Z40MSAP*/ 73679304
*          2 SPWMODWK CHAR(20);         /*                   @Z40MSAP*/ 73729304
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 73789304
*/********************************************************************* 73829304
**                                                                   ** 73879304
**       PRINTER CCW OP-CODES.                                       ** 73929304
**                                                                   ** 73979304
**********************************************************************/ 74029304
*                                                                       74079304
*    DECLARE                            /*                   @Z40MSAP*/ 74129304
*        SPWNOP   BIT(8)                /* NO OPERATION      @Z40MSAP*/ 74179304
*                 CONSTANT('03'X),      /*                   @Z40MSAP*/ 74229304
*        SPWSENSE BIT(8)                /* SENSE I/O         @Z40MSAP*/ 74279304
*                 CONSTANT('04'X),      /*                   @Z40MSAP*/ 74329304
*        SPWWRTSP BIT(8)                /* PRINT, SPACE 1    @Z40MSAP*/ 74379304
*                 CONSTANT('09'X),      /*                   @Z40MSAP*/ 74429304
*        SPWWRITE BIT(8)                /* WRITE COMMAND     @Z40MSAP*/ 74479304
*                 CONSTANT('11'X),      /*                   @Z40MSAP*/ 74529304
*        SPWUNFLD BIT(8)                /* UNFOLD COMMAND    @Z40MSAP*/ 74579304
*                 CONSTANT('23'X),      /*                   @Z40MSAP*/ 74629304
*        SPWFLDCD BIT(8)                /* FOLD COMMAND      @Z40MSAP*/ 74679304
*                 CONSTANT('43'X),      /*                   @Z40MSAP*/ 74729304
*        SPWFCBLD BIT(8)                /* LOAD FCB IMAGE    @Z40MSAP*/ 74779304
*                 CONSTANT('63'X),      /*                   @Z40MSAP*/ 74829304
*        SPWBLDC  BIT(8)                /* BLOCK DATA CHECK  @Z40MSAP*/ 74879304
*                 CONSTANT('73'X),      /*                   @Z40MSAP*/ 74929304
*        SPWSKIP0 BIT(8)                /* SKIP TO CHANNEL 0 @Z40MSAP*/ 74979304
*                 CONSTANT('83'X),      /*                   @Z40MSAP*/ 75029304
*        SPWSKIP  BIT(8)                /* SKIP COMMAND      @Z40MSAP*/ 75079304
*                 CONSTANT('8B'X),      /*                   @Z40MSAP*/ 75129304
*        SPWCNTRL BIT(8)                /* CONTROL OP CODE   @Z40MSAP*/ 75179304
*                 CONSTANT('EB'X),      /*                   @Z40MSAP*/ 75229304
*        SPWLDFLD BIT(8)                /* LOAD FOLD         @Z40MSAP*/ 75279304
*                 CONSTANT('F3'X),      /* COMMAND           @Z40MSAP*/ 75329304
*        SPWLDUCS BIT(8)                /* LOAD UCS          @Z40MSAP*/ 75379304
*                 CONSTANT('FB'X);      /* COMMAND           @Z40MSAP*/ 75429304
*                                                                       75479304
*                                                                       75529304
*/********************************************************************* 75579304
**                                                                   ** 75629304
**       3800 PRINTER CCW OP CODES.                                  ** 75679304
**                                                                   ** 75729304
**********************************************************************/ 75779304
*                                                                       75829304
*    DECLARE                            /*                   @Z40MSAP*/ 75879304
*        SPWSTCNR BIT(8)                /* LOAD STARTING     @Z40MSAP*/ 75929304
*                 CONSTANT('23'X),      /* COPY NUMBER       @Z40MSAP*/ 75979304
*        SPWLGCM  BIT(8)                /* LOAD GRAPHIC      @Z40MSAP*/ 76029304
*                 CONSTANT('25'X),      /* CHARACTER MODULE  @Z40MSAP*/ 76079304
*        SPWLCMOD BIT(8)                /* LOAD COPY MODIFY  @Z40MSAP*/ 76129304
*                 CONSTANT('35'X),      /* RECORD            @Z40MSAP*/ 76179304
*        SPWINIT  BIT(8)                /* INITALIZE PRINTER @Z40MSAP*/ 76229304
*                 CONSTANT('37'X),      /* OP CODE           @Z40MSAP*/ 76279304
*        SPWLFOVL BIT(8)                /* LOAD FORMS        @Z40MSAP*/ 76329304
*                 CONSTANT('43'X),      /* OVERLAY OP CODE   @Z40MSAP*/ 76379304
*        SPWSLTT0 BIT(8)                /* SELECT TRANSLATE  @Z40MSAP*/ 76429304
*                 CONSTANT('47'X),      /* TABLE 0           @Z40MSAP*/ 76479304
*        SPWLWCGM BIT(8)                /* LOAD WCGM         @Z40MSAP*/ 76529304
*                 CONSTANT('53'X),      /* OP CODE           @Z40MSAP*/ 76579304
*        SPWSLTT1 BIT(8)                /* SELECT TRANSLATE  @Z40MSAP*/ 76629304
*                 CONSTANT('57'X),      /* TABLE 1           @Z40MSAP*/ 76679304
*        SPWSLTT2 BIT(8)                /* SELECT TRANSLATE  @Z40MSAP*/ 76729304
*                 CONSTANT('67'X),      /* TABLE 2           @Z40MSAP*/ 76779304
*        SPWSLTT3 BIT(8)                /* SELECT TRANSLATE  @Z40MSAP*/ 76829304
*                 CONSTANT('77'X),      /* TABLE 3           @Z40MSAP*/ 76879304
*        SPWTTLOD BIT(8)                /* LOAD TRANSLATE    @Z40MSAP*/ 76929304
*                 CONSTANT('83'X),      /* TABLE OP CODE     @Z40MSAP*/ 76979304
*        SPWCLRPT BIT(8)                /* CLEAR PRINT       @Z40MSAP*/ 76989304
*                 CONSTANT('87'X);      /* OP CODE           @Z40MSAP*/ 76999304
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 77029304
*/********************************************************************* 77079304
**                                                                   ** 77129304
**       SET PRINT ERROR RETURN CODES. THESE CODES WILL BE           ** 77179304
**       PLACED IN THE PROPER LOCATION IN REGISTER 15, TO            ** 77229304
**       INDICATE THE ERROR CONDITION THAT HAS OCCURED.              ** 77279304
**                                                                   ** 77329304
**********************************************************************/ 77379304
*                                                                       77429304
*    DECLARE                            /*                   @Z40MSAP*/ 77479304
*        SPWSUCCP BIT(8)                /* SUCCESSFUL        @Z40MSAP*/ 77529304
*                 CONSTANT('00'X),      /* COMPLETION        @Z40MSAP*/ 77579304
*        SPWIMNO  BIT(8)                /* IMAGE NOT FOUND   @Z40MSAP*/ 77629304
*                 CONSTANT('04'X),      /*                   @Z40MSAP*/ 77679304
*        SPWBLDLP BIT(8)                /* BLDL PERMANENT    @Z40MSAP*/ 77729304
*                 CONSTANT('08'X),      /* I/O ERROR         @Z40MSAP*/ 77779304
*        SPWLOADP BIT(8)                /* LOAD PERMANENT    @Z40MSAP*/ 77829304
*                 CONSTANT('0C'X),      /* I/O ERROR         @Z40MSAP*/ 77879304
*        SPWREADP BIT(8)                /* READ PERMANENT    @Z40MSAP*/ 77929304
*                 CONSTANT('10'X),      /* I/O ERROR         @Z40MSAP*/ 77979304
*        SPWFCBV  BIT(8)                /* WRONG FCB IMAGE   @Z40MSAP*/ 78029304
*                 CONSTANT('14'X),      /*                   @Z40MSAP*/ 78079304
*        SPWNOOP  BIT(8)                /* NO OPERATION      @Z40MSAP*/ 78129304
*                 CONSTANT('18'X),      /* PERFORMED         @Z40MSAP*/ 78179304
*        SPWUCERR BIT(8)                /* NOP, PREVIOUS     @Z40MSAP*/ 78229304
*                 CONSTANT('1C'X),      /* UNCORRECTIABLE    @Z40MSAP*/ 78279304
*                                       /* ERROR             @Z40MSAP*/ 78329304
*        SPWSPACE BIT(8)                /* INSUFFICIENT      @Z40MSAP*/ 78379304
*                 CONSTANT('20'X),      /* SPACE             @Z40MSAP*/ 78429304
*        SPWIMLIB BIT(8)                /* IMAGE LIBRARY CAN @Z40MSAP*/ 78479304
*                 CONSTANT('24'X),      /* NOT BE OPENED     @Z40MSAP*/ 78529304
*        SPWFOVLF BIT(8)                /* CAN NOT LOAD      @Z40MSAP*/ 78579304
*                 CONSTANT('28'X),      /* FORMS OVERLAY     @Z40MSAP*/ 78629304
*                                       /* FRAME             @Z40MSAP*/ 78679304
*        SPWCANCL BIT(8)                /* OPERATOR          @Z40MSAP*/ 78729304
*                 CONSTANT('2C'X),      /* CANCELED          @Z40MSAP*/ 78779304
*        SPWMCGM  BIT(8)                /* TOO MANY CGMS     @Z40MSAP*/ 78829304
*                 CONSTANT('30'X),      /* REQUESTED         @Z40MSAP*/ 78879304
*        SPWTRCIN BIT(8)                /* COPY MOD TRC      @Z40MSAP*/ 78929304
*                 CONSTANT('34'X),      /* FIELD INVALID     @Z40MSAP*/ 78979304
*        SPWEODSR BIT(8)                /* ERROR WHILE       @Z40MSAP*/ 79029304
*                 CONSTANT('38'X),      /* ISSUING EODS      @Z40MSAP*/ 79079304
*        SPWNOBR  BIT(8)                /* NO BURSTER/SHEET  @Z40MSAP*/ 79129304
*                 CONSTANT('3C'X),      /* STACKER FEATURE   @Z40MSAP*/ 79179304
*                                       /* INSTALLED         @Z40MSAP*/ 79229304
*        SPWPIOER BIT(8)                /* A PERMENT I/O     @Z40MSAP*/ 79279304
*                 CONSTANT('40'X),      /* ERROR HAS OCCURED @Z40MSAP*/ 79329304
*        SPWNOCGM BIT(8)                /* CGM NOT SPECIFIED @Z40MSAP*/ 79379304
*                 CONSTANT('44'X);      /* IN CHARACTER      @Z40MSAP*/ 79429304
*                                       /* ARRANGEMENT TABLE @Z40MSAP*/ 79479304
*                                       /* TRAILER           @Z40MSAP*/ 79529304
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 79579304
*/********************************************************************* 79629304
**                                                                   ** 79679304
**       SET PRINT 3800 REASON CODES. THESE CODES WILL APPEAR IN     ** 79729304
**       REGISTER 0, WHEN AN ERROR CONDITION IS RETURNED.            ** 79779304
**                                                                   ** 79829304
**********************************************************************/ 79879304
*                                                                       79929304
*    DECLARE                            /*                   @Z40MSAP*/ 79979304
*        SPWTRTBL BIT(8)                /* TRANSLATE TABLE   @Z40MSAP*/ 80029304
*                 CONSTANT('04'X),      /*                   @Z40MSAP*/ 80079304
*        SPWCPMOD BIT(8)                /* COPY MODIFY       @Z40MSAP*/ 80129304
*                 CONSTANT('08'X),      /* RECORD            @Z40MSAP*/ 80179304
*        SPWCPNR  BIT(8)                /* COPY NUMBER       @Z40MSAP*/ 80229304
*                 CONSTANT('0C'X),      /*                   @Z40MSAP*/ 80279304
*        SPWGCMR  BIT(8)                /* GRAPHIC CHARACTER @Z40MSAP*/ 80329304
*                 CONSTANT('10'X),      /* MODULE RECORD     @Z40MSAP*/ 80379304
*        SPWFOSEQ BIT(8)                /* FORMS OVERLAY     @Z40MSAP*/ 80429304
*                 CONSTANT('14'X),      /* SEQUENCE CONTROL  @Z40MSAP*/ 80479304
*                                       /* RECORD            @Z40MSAP*/ 80529304
*        SPWFOVL  BIT(8)                /* FORMS OVERLAY     @Z40MSAP*/ 80579304
*                 CONSTANT('18'X),      /* FEATURE           @Z40MSAP*/ 80629304
*        SPWCGMR  BIT(8)                /* CHARACTER         @Z40MSAP*/ 80679304
*                 CONSTANT('1C'X),      /* GENETATION MODULE @Z40MSAP*/ 80729304
*        SPWFCBRC BIT(8)                /* FORMS CONTROL     @Z40MSAP*/ 80779304
*                 CONSTANT('20'X);      /* BUFFER            @Z40MSAP*/ 80829304
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 80879304
*/********************************************************************* 80929304
**                                                                   ** 80979304
**       COMMON SET PRINT CONSTANTS                                  ** 81029304
**                                                                   ** 81079304
**********************************************************************/ 81129304
*                                                                       81179304
*    DECLARE                            /*                   @Z40MSAP*/ 81229304
*        SPWALG   BIT(8)                /* ALIGN MESSAGE     @Z40MSAP*/ 81279304
*                 CONSTANT('FF'X),      /* RETRY             @Z40MSAP*/ 81329304
*        SPWBLDLN PTR(16)               /* BLDL ENTRY        @Z40MSAP*/ 81379304
*                 CONSTANT(64),         /* LENGTH            @Z40MSAP*/ 81429304
*        SPWCC    BIT(8)                /* COMMAND CHAINING  @Z40MSAP*/ 81439304
*                 CONSTANT('40'X),      /* BIT               @Z40MSAP*/ 81449304
*        SPWCCWVR BIT(8)                /* VERIFY ONLY       @Z40MSAP*/ 81479304
*                 CONSTANT('0F'X),      /*                   @Z40MSAP*/ 81529304
*        SPWDEIB1 BIT(8)                /* USED TO DECREMENT @Z40MSAP*/ 81579304
*                 CONSTANT('01'X),      /* INDEXES BY 1      @Z40MSAP*/ 81629304
*        SPWENTVR BIT(8)                /* ENTRY FOR         @Z40MSAP*/ 81679304
*                 CONSTANT('1F'X),      /* VERIFY            @Z40MSAP*/ 81729304
*        SPWE1SIZ PTR(16)               /* TRANSLATE TABLE   @Z40MSAP*/ 81779304
*                 CONSTANT(288),        /* ENTRY SIZE        @Z40MSAP*/ 81829304
*        SPWFOLD  BIT(8)                /* FOLD SPECIFIED    @Z40MSAP*/ 81839304
*                 CONSTANT('40'X),      /*                   @Z40MSAP*/ 81849304
*        SPWHIC12 FIXED(8)              /* USED TO SEE WHEN  @Z48MSAP*/ 81850348
*                 CONSTANT(12),         /* CONSECTIVE MIXED  @Z48MSAP*/ 81851348
*                                       /* BYTES IN A FCB    @Z48MSAP*/ 81852348
*                                       /* IMAGE EQUAL       @Z48MSAP*/ 81853348
*                                       /* HALF AN INCH      @Z48MSAP*/ 81854348
*        SPWHIC48 FIXED(8)              /* FACTOR OF 48      @Z48MSAP*/ 81855348
*                 CONSTANT(48),         /* USED TO CONVERT   @Z48MSAP*/ 81856348
*                                       /* A FCB IMAGE BYTE  @Z48MSAP*/ 81857348
*                                       /* LPI VALUE TO      @Z48MSAP*/ 81858348
*                                       /* TWENTY-FOURTHS    @Z48MSAP*/ 81859348
*        SPWHI192 FIXED(8)              /* FACTOR OF 192     @Z48MSAP*/ 81860348
*                 CONSTANT(192),        /* USED TO CONVERT   @Z48MSAP*/ 81861348
*                                       /* A FCB IMAGE BYTE  @Z48MSAP*/ 81862348
*                                       /* LPI VALUE TO      @Z48MSAP*/ 81863348
*                                       /* TWENTY-FOURTHS    @Z48MSAP*/ 81864348
*        SPWIMCLO BIT(8)                /* IMAGELIB NOT      @Z40MSAP*/ 81879304
*                 CONSTANT('FF'X),      /* OPEN              @Z40MSAP*/ 81929304
*        SPWINIB1 BIT(8)                /* USED TO INCREMENT @Z40MSAP*/ 81979304
*                 CONSTANT('01'X),      /* INDEXES BY 1      @Z40MSAP*/ 82029304
*        SPWLNGTA FIXED(15)             /* 3800 WORKAREA     @Z40MSAP*/ 82079304
*                 CONSTANT(156),        /* SIZE              @Z40MSAP*/ 82129304
*        SPWLNGTH FIXED(15)             /* WORKAREA SIZE     @Z40MSAP*/ 82179304
*                 CONSTANT(92),         /*                   @Z40MSAP*/ 82229304
*        SPWMAXCH PTR(8)                /* MAX NUMBER OF     @Z40MSAP*/ 82279304
*                 CONSTANT(4),          /* TRANSLATE TABLES  @Z40MSAP*/ 82329304
*        SPWNFCBL BIT(8)                /* NO FCB LOAD       @Z40MSAP*/ 82339304
*                 CONSTANT('40'X),      /*                   @Z40MSAP*/ 82349304
*        SPWOKCC  BIT(8)                /* I/O COMPLETED OK  @Z40MSAP*/ 82379304
*                 CONSTANT('7F'X),      /*                   @Z40MSAP*/ 82429304
*        SPWOVLAP BIT(8)                /* LOAD OVERLAPPED   @Z40MSAP*/ 82479304
*                 CONSTANT('20'X),      /*                   @Z40MSAP*/ 82529304
*        SPWPOOL  PTR(8)                /* SUBPOOL FOR       @Z40MSAP*/ 82579304
*                 CONSTANT(230),        /* USER KEY CORE     @Z40MSAP*/ 82629304
*        SPWRDLN  PTR(8)                /* LENGTH OF NAME    @Z40MSAP*/ 82679304
*                 CONSTANT(8),          /* FIELD FOR RECORDS @Z40MSAP*/ 82729304
*                                       /* PASSED IN CORE    @Z40MSAP*/ 82779304
*        SPWRPVER BIT(8)                /* OPERATOR          @Z40MSAP*/ 82789304
*                 CONSTANT('10'X),      /* REQUESTED VERIFY  @Z40MSAP*/ 82799304
*        SPWSILI  BIT(8)                /* SILI BIT          @Z40MSAP*/ 82809304
*                 CONSTANT('20'X),      /*                   @Z40MSAP*/ 82819304
*        SPWTTNAM CHAR(4)               /* 1ST 4 CHARACTERS  @Z40MSAP*/ 82829304
*                 CONSTANT('XTB1'),     /* OF TRANSLATE      @Z40MSAP*/ 82879304
*                                       /* TABLE NAME        @Z40MSAP*/ 82929304
*        SPWUCS2C CHAR(1)               /* CHARACTER '2'     @Z40MSAP*/ 82931304
*                 CONSTANT('2'),        /* FOR UCS2          @Z40MSAP*/ 82933304
*                                       /* MEMBER NAME       @Z40MSAP*/ 82935304
*        SPWVERIF BIT(8)                /* VERIFY            @Z40MSAP*/ 82939304
*                 CONSTANT('10'X),      /* SPECIFIED         @Z40MSAP*/ 82949304
*        SPWXLATC BIT(16)               /* ATTRIBUTES FOR    @Z40MSAP*/ 82979304
*                 CONSTANT('C378'X),    /* XCTL LIST         @Z40MSAP*/ 83029304
*        SPWXLNMC CHAR(6)               /* MODULE NAME FOR   @Z40MSAP*/ 83079304
*                 CONSTANT('IGG081'),   /* XCTL LIST         @Z40MSAP*/ 83129304
*        SPW5POOL PTR(8)                /* SUBPOOL FOR       @Z40MSAP*/ 83139304
*                 CONSTANT(230),        /* KEY 5 CORE        @Z40MSAP*/ 83149304
*        SPW6LNE  CHAR(2)               /* SIX LINES/INCH    @Z40MSAP*/ 83179348
*                 CONSTANT(' 6'),       /*                   @Z40MSAP*/ 83189348
*        SPW8LNE  CHAR(2)               /* EIGHT LINES/INCH  @Z40MSAP*/ 83199348
*                 CONSTANT(' 8'),       /*                   @Z40MSAP*/ 83209348
*        SPW12LNE CHAR(2)               /* TWELVE LINES/     @Z48MSAP*/ 83219348
*                 CONSTANT('12'),       /* INCH              @Z48MSAP*/ 83229348
*        SPW6LPI  BIT(2)                /* USED TO TEST FOR  @Z48MSAP*/ 83239348
*                 CONSTANT('00'B),      /*  6 LPI IN FCB     @Z48MSAP*/ 83249348
*                                       /* IMAGE BYTES       @Z48MSAP*/ 83259348
*        SPW8LPI  BIT(2)                /* USED TO TEST FOR  @Z48MSAP*/ 83269348
*                 CONSTANT('01'B),      /*  8 LPI IN FCB     @Z48MSAP*/ 83279348
*                                       /* IMAGE BYTES       @Z48MSAP*/ 83289348
*        SPW12LPI BIT(2)                /* USED TO TEST FOR  @Z48MSAP*/ 83299348
*                 CONSTANT('11'B);      /* 12 LPI IN FCB     @Z48MSAP*/ 83309348
*                                       /* IMAGE BYTES       @Z48MSAP*/ 83319348
*        %IF SPWESTAE = 'YES'           /* IF THIS MAPPING   @Z40MSAP*/ 83339304
*                                       /* MACRO IS BEING    @Z40MSAP*/ 83349304
*                                       /* INVOKED BY THE    @Z40MSAP*/ 83359304
*                                       /* ESTAE ROUTINE     @Z40MSAP*/ 83369304
*                                       /* (IGCT1081)        @Z40MSAP*/ 83371304
*          %THEN                        /*                   @Z40MSAP*/ 83373304
*            %GOTO SPW003;              /*                   @Z40MSAP*/ 83377304
*          %ELSE;                       /*                   @Z40MSAP*/ 83377704
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 83379304
*/********************************************************************* 83779304
**                                                                   ** 83829304
**       THE FOLLOWING STRUCTURE MAPS THE SVRB EXTENDED SAVE         ** 83879304
**       AREA AS BY SET PRINT.                                       ** 83929304
**                                                                   ** 84029304
**********************************************************************/ 84079304
*                                                                       84129304
*    DECLARE                                                            84179304
*        1 SPRBXSV  BASED(SPWRSVR),     /*                   @Z40MSAP*/ 84238104
*          2 SPRMSG   PTR(31),          /* ADDRESS OF THE    @Z40MSAP*/ 84288104
*                                       /* MESSAGE CSECT     @Z40MSAP*/ 84338104
*          2 SPRIDCBA PTR(31),          /* SYS1.IMAGELIB     @Z40MSAP*/ 84379304
*                                       /* DCB ADDRESS       @Z40MSAP*/ 84429304
*          2 SPREXIT  PTR(31),          /* EXIT PROLOG       @Z40MSAP*/ 84479304
*            3 SPRREG13 PTR(31),        /* SAVE AREA FOR     @Z40MSAP*/ 84529304
*                                       /* REGISTER 13       @Z40MSAP*/ 84579304
*          2 SPRKEY   CHAR(1),          /* USER KEY          @Z40MSAP*/ 84629304
*          2 SPRINDIC BIT(8),           /* FLAG BYTE         @Z40MSAP*/ 84679304
*            3 SPRCNTRL BIT(1),         /* CONTROL BLOCK     @Z40MSAP*/ 84729304
*                                       /* ROUTINE ENTERED   @Z40MSAP*/ 84779304
*            3 SPRTRCNS BIT(1),         /* GETMAIN           @Z40MSAP*/ 84829304
*                                       /* UNSUCCESSFUL      @Z40MSAP*/ 84879304
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 84929304
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 84939304
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 84949304
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 84959304
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 84969304
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 84971304
*          2 SPRNIOBS CHAR(1),          /* NUMBER OF IOBS    @Z40MSAP*/ 84979304
*          2 *        CHAR(1),          /*                   @Z40MSAP*/ 85029304
*          2 SPRBLDLA PTR(31),          /* ADDRESS OF BLDL   @Z40MSAP*/ 85079304
*                                       /* PARAMETER LIST    @Z40MSAP*/ 85129304
*          2 SPRIOBSV PTR(31),          /* ADDRESS OF IOB    @Z40MSAP*/ 85179304
*                                       /* ALTERED BY        @Z40MSAP*/ 85229304
*                                       /* IGC0008A          @Z40MSAP*/ 85279304
*          2 SPRDCBBG PTR(31),          /* BEGINING ADDRESS  @Z40MSAP*/ 85329304
*                                       /* OF DCB            @Z40MSAP*/ 85379304
*          2 SPRGETMN PTR(31),          /* ADDRESS OF GTRACE @Z40MSAP*/ 85429304
*                                       /* BUFFER            @Z40MSAP*/ 85479304
*          2 SPRELIST CHAR(16),         /* ESTAE LIST        @Z40MSAP*/ 85529304
*            3 SPRTRACE CHAR(8),        /* GTRACE LIST       @Z40MSAP*/ 85579304
*              4 SPRDCBLN CHAR(1),      /* LENGTH OF DCB     @Z40MSAP*/ 85629304
*              4 SPRDCBOF CHAR(1),      /* OFFSET FROM       @Z40MSAP*/ 85679304
*                                       /* 'LOCATION 0' OF   @Z40MSAP*/ 85729304
*                                       /* DCB TO WHERE      @Z40MSAP*/ 85779304
*                                       /* DCB STARTS        @Z40MSAP*/ 85829304
*            3 *        CHAR(8);        /*                   @Z40MSAP*/ 85879304
*%SPW003:;                              /*                   @Z40MSAP*/ 85881304
*        %IF SPW3800 ¬= 'YES'           /* IF THIS MAPPING   @Z40MSAP*/ 85889304
*          %THEN                        /* MACRO IS NOT      @Z40MSAP*/ 85899304
*                                       /* BEING USED FOR A  @Z40MSAP*/ 85909304
*                                       /* 3800 DEVICE, SKIP @Z40MSAP*/ 85919304
*                                       /* THE FOLLOWING     @Z40MSAP*/ 85921304
*                                       /* SECTION           @Z40MSAP*/ 85923304
*            %GOTO SPW005;              /*                   @Z40MSAP*/ 85925304
*          %ELSE;                       /*                   @Z40MSAP*/ 85925404
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 85925704
*/********************************************************************* 85929304
**                                                                   ** 85979304
**       THIS AREA IS CREATED FOR, AND ONLY USED BY THE 3800         ** 86029304
**       SET PRINT PROCESSING MODULES (IGG08110, IGG08111,           ** 86079304
**       IGG08112, IGG08113, IGG08114, AND IGG08115).                ** 86129304
**                                                                   ** 86179304
**********************************************************************/ 86229304
*                                                                       86279304
*/********************************************************************* 86329304
**                                                                   ** 86379304
**       THE FOLLOWING ARRAY OF STRUCTURES MAPS THE SET PRINT        ** 86429304
**       TRANSLATE TABLE ENTRIES.                                    ** 86479304
**                                                                   ** 86529304
**********************************************************************/ 86579304
*                                                                       86629304
*    DECLARE                            /*                   @Z40MSAP*/ 86679304
*        SPWE1(4) CHAR(288)             /* ARRAY FOR         @Z40MSAP*/ 86729304
*                 BASED(SPWTWAD1),      /* TRANSLATE TABLES  @Z40MSAP*/ 86779304
*                                                                       86829304
*                                                                       86879304
*        1 SPWTT    CHAR(288)           /* TRANSLATE TABLE   @Z40MSAP*/ 86889304
*                   BASED(SPWTWAD1),    /*                   @Z40MSAP*/ 86899304
*          2 SPPTTHDR CHAR(8),          /* HEADER SECTION    @Z40MSAP*/ 86909304
*            3 SPWTTID  CHAR(4),        /* TRANSLATE TABLE   @Z40MSAP*/ 86919304
*                                       /* ID                @Z40MSAP*/ 86921304
*            3 *        CHAR(4),        /* FILLER            @Z40MSAP*/ 86923304
*          2 SPWXLAT  CHAR(280),        /* TRANSLATE TABLE   @Z40MSAP*/ 86929304
*                                       /* BASE SECTION      @Z40MSAP*/ 86979304
*            3 SPWTRANS CHAR(256),      /* TRANSLATE TABLE   @Z40MSAP*/ 87029304
*              4 SPWTTBYT(256) BIT(8),  /* ARRAY OF          @Z40MSAP*/ 87079304
*                                       /* TRANSLATE TABLE   @Z40MSAP*/ 87129304
*                                       /* BYTES             @Z40MSAP*/ 87179304
*            3 SPWTRAIL CHAR(24),       /* TRAILER           @Z40MSAP*/ 87229304
*              4 SPWTRL1(4) PTR(16)     /* FIRST ARRAY OF    @Z40MSAP*/ 87279304
*                           BDY(BYTE),  /* THE TRAILER       @Z40MSAP*/ 87329304
*                5 SPWCGM   PTR(8),     /* CGM ID FIELD      @Z40MSAP*/ 87379304
*                5 SPWWCGM  PTR(8),     /* WCGM NUMBER FIELD @Z40MSAP*/ 87429304
*              4 SPWGRAF(4) CHAR(4);    /* ARRAY OF GCM      @Z40MSAP*/ 87479304
*                                       /* NAMES             @Z40MSAP*/ 87529304
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 87579304
*/********************************************************************* 87629304
**                                                                   ** 87679304
**       THE FOLLOWING STRUCTURE MAPS THE HEADER SECTION OF THE      ** 87729304
**       IMAGE ENTRY FOR THE 3800 DEVICE.                            ** 87779304
**                                                                   ** 87829304
**********************************************************************/ 87879304
*                                                                       87929304
*    DECLARE                            /*                   @Z40MSAP*/ 87979304
*        1 SPWIMOD  BASED,              /*                   @Z40MSAP*/ 88029304
*          2 SPWIMODH CHAR(8),          /* HEADER SECTION OF @Z40MSAP*/ 88079304
*            3 SPWIMODN CHAR(4),        /* IMAGE NAME FIELD  @Z40MSAP*/ 88129304
*            3 SPWIMODR FIXED(16)       /* RESERVED AREA     @Z40MSAP*/ 88139304
*                       BDY(BYTE),      /*                   @Z40MSAP*/ 88149304
*            3 SPWIMODL FIXED(16)       /* LENGTH OF IMAGE   @Z40MSAP*/ 88179304
*                       BDY(BYTE),      /*                   @Z40MSAP*/ 88229304
*          2 SPWIMODB CHAR(8);          /* BASE SECTION OF   @Z40MSAP*/ 88239304
*                                       /* THE IMAGE         @Z40MSAP*/ 88249304
*                                                                       88279304
*                                                                       88329304
*/********************************************************************* 88379304
**                                                                   ** 88429304
**       THE FOLLOWING STRUCTURE MAPS THE FCB IMAGE ENTRY FOR        ** 88479304
**       THE 3800 DEVICE.                                            ** 88529304
**                                                                   ** 88579304
**********************************************************************/ 88629304
*                                                                       88679304
*    DECLARE                            /*                   @Z40MSAP*/ 88729304
*        1 SPWFCBIE BIT(8)              /* FCB IMAGE ENTRY   @Z40MSAP*/ 88779304
*                   BASED,              /*                   @Z40MSAP*/ 88829304
*          2 *        BIT(2),           /* NOT USED          @Z48MSAP*/ 88879348
*          2 SPWFCBLP BIT(2),           /* 00 =  6 LINES PER @Z48MSAP*/ 88899348
*                                       /* INCH              @Z48MSAP*/ 88919348
*                                       /* 01 =  8 LINES PER @Z48MSAP*/ 88939348
*                                       /* INCH              @Z48MSAP*/ 88959348
*                                       /* 11 = 12 LINES PER @Z48MSAP*/ 88979348
*                                       /* INCH              @Z48MSAP*/ 88999348
*          2 SPWFCBCH BIT(4);           /* CHANNEL NUMBER    @Z40MSAP*/ 89029304
*        %IF SPWESTAE ¬= 'YES'          /* IF THIS MAPPING   @Z40MSAP*/ 89039304
*          %THEN                        /* MACRO IS BEING    @Z40MSAP*/ 89049304
*                                       /* INVOKED BY THE    @Z40MSAP*/ 89059304
*                                       /* ESTAE ROUTINE     @Z40MSAP*/ 89069304
*                                       /* (IGCT1081)        @Z40MSAP*/ 89071304
*                                       /* PERFORM THE       @Z40MSAP*/ 89073304
*                                       /* FOLLOWING         @Z40MSAP*/ 89075304
*                                       /* INSTRUCTIONS      @Z40MSAP*/ 89077304
*                                       /* THEN EXIT THIS    @Z40MSAP*/ 89077404
*                                       /* MAPPING MACRO     @Z40MSAP*/ 89077504
*            %GOTO SPW004;              /*                   @Z40MSAP*/ 89077604
*          %ELSE;                       /*                   @Z40MSAP*/ 89078004
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 89078104
*/********************************************************************* 89078204
**                                                                   ** 89078304
**       THE FOLLOWING STRUCTURE MAPS THE SVRB EXTENDED SAVE         ** 89078404
**       AREA AS USED BY THE ESTAE ROUTINE OF SET PRINT.             ** 89080904
**                                                                   ** 89083304
**********************************************************************/ 89086104
*                                                                       89088104
*    DECLARE                                                            89088504
*        1 SPRBXSV  DEF(RBEXSAVE),      /*                   @Z40MSAP*/ 89091804
*          2 SPRMSG   PTR(31),          /* ADDRESS OF THE    @Z40MSAP*/ 89094104
*                                       /* MESSAGE CSECT     @Z40MSAP*/ 89094504
*          2 SPRIDCBA PTR(31),          /* SYS1.IMAGELIB     @Z40MSAP*/ 89094604
*                                       /* DCB ADDRESS       @Z40MSAP*/ 89099004
*          2 SPREXIT  PTR(31),          /* EXIT PROLOG       @Z40MSAP*/ 89101004
*            3 SPRREG13 PTR(31),        /* SAVE AREA FOR     @Z40MSAP*/ 89103004
*                                       /* REGISTER 13       @Z40MSAP*/ 89103404
*          2 SPRKEY   CHAR(1),          /* USER KEY          @Z40MSAP*/ 89103804
*          2 SPRINDIC BIT(8),           /* FLAG BYTE         @Z40MSAP*/ 89104204
*            3 SPRCNTRL BIT(1),         /* CONTROL BLOCK     @Z40MSAP*/ 89104304
*                                       /* ROUTINE ENTERED   @Z40MSAP*/ 89104404
*            3 SPRTRCNS BIT(1),         /* GETMAIN           @Z40MSAP*/ 89104904
*                                       /* UNSUCCESSFUL      @Z40MSAP*/ 89105304
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 89105704
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 89105804
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 89106504
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 89106904
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 89107304
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/ 89107704
*          2 SPRNIOBS CHAR(1),          /* NUMBER OF IOBS    @Z40MSAP*/ 89107804
*          2 *        CHAR(1),          /*                   @Z40MSAP*/ 89108304
*          2 SPRBLDLA PTR(31),          /* ADDRESS OF BLDL   @Z40MSAP*/ 89108704
*                                       /* PARAMETER LIST    @Z40MSAP*/ 89109104
*          2 SPRIOBSV PTR(31),          /* ADDRESS OF IOB    @Z40MSAP*/ 89109204
*                                       /* ALTERED BY        @Z40MSAP*/ 89109304
*                                       /* IGC0008A          @Z40MSAP*/ 89109904
*          2 SPRDCBBG PTR(31),          /* BEGINING ADDRESS  @Z40MSAP*/ 89110304
*                                       /* OF DCB            @Z40MSAP*/ 89110704
*          2 SPRGETMN PTR(31),          /* ADDRESS OF GTRACE @Z40MSAP*/ 89111104
*                                       /* BUFFER            @Z40MSAP*/ 89111204
*          2 SPRELIST CHAR(16),         /* ESTAE LIST        @Z40MSAP*/ 89111404
*            3 SPRTRACE CHAR(8),        /* GTRACE LIST       @Z40MSAP*/ 89111804
*              4 SPRDCBLN CHAR(1),      /* LENGTH OF DCB     @Z40MSAP*/ 89111904
*              4 SPRDCBOF CHAR(1),      /* OFFSET FROM       @Z40MSAP*/ 89112004
*                                       /* 'LOCATION 0' OF   @Z40MSAP*/ 89112104
*                                       /* DCB TO WHERE      @Z40MSAP*/ 89112204
*                                       /* DCB STARTS        @Z40MSAP*/ 89113304
*            3 *        CHAR(8);        /*                   @Z40MSAP*/ 89115304
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 89118304
*/********************************************************************* 89119704
**                                                                   ** 89120404
**       THIS SECTION DECLARES ALL OF THE POINTERS FOR THE SET       ** 89121104
**       PRINT WORK AREA REQUIRED BY THE ESTAE MODULE (IGCT1081)     ** 89121804
**                                                                   ** 89122504
**********************************************************************/ 89126504
*                                                                       89130904
*    DECLARE                            /*                   @Z40MSAP*/ 89135304
*        SPWUCORE PTR(31)               /* PTR SET PRINT     @Z40MSAP*/ 89139704
*                 DEFINED(SPWWKADR),    /* WORKAREA          @Z40MSAP*/ 89144104
*        SPW5CORE PTR(31)               /* PTR SET PRINT     @Z40MSAP*/ 89148504
*                 DEFINED(SPRBLDLA);    /* WORKAREA          @Z40MSAP*/ 89152904
*                                       /* (IN KEY 5)        @Z40MSAP*/ 89157304
*        %GOTO SPW005;                  /*                   @Z40MSAP*/ 89161704
*%SPW004:;                              /*                   @Z40MSAP*/ 89166104
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 89170504
*/********************************************************************* 89174904
**                                                                   ** 89179304
**       THE FOLLOWING STRUCTURE MAPS THE FIRST FOUR SENSE           ** 89229304
**       BYTES FOR THE 3800 PRINTER.                                 ** 89279304
**                                                                   ** 89329304
**********************************************************************/ 89379304
*                                                                       89429304
*    DECLARE                            /*                   @Z40MSAP*/ 89479304
*        1 SPWSENBY CHAR(4)             /* FIRST FOUR BYTES  @Z40MSAP*/ 89529304
*                   DEF(SPWFFSB),       /* SENSE BYTES FOR   @Z40MSAP*/ 89579304
*                                       /* THE 3800 PRINTER  @Z40MSAP*/ 89629304
*          2 *        CHAR(3),          /* FILLER            @Z40MSAP*/ 89679304
*          2 SPWSENB3 CHAR(1),          /* FOURTH SENSE BYTE @Z40MSAP*/ 89729304
*            3 *        BIT(3),         /* FILLER            @Z40MSAP*/ 89779304
*            3 SPWSENTL BIT(1),         /* LOCATION WERE     @Z40MSAP*/ 89829304
*                                       /* PAPER IS THREADED @Z40MSAP*/ 89879304
*                                       /*  IF = 1, PAPER    @Z40MSAP*/ 89929304
*                                       /*   IS THREADED TO  @Z40MSAP*/ 89979304
*                                       /*   THE SHEET       @Z40MSAP*/ 90029304
*                                       /*   STACKER         @Z40MSAP*/ 90079304
*                                       /*  IF = 0, PAPER    @Z40MSAP*/ 90129304
*                                       /*   IS THREADED TO  @Z40MSAP*/ 90179304
*                                       /*   THE CONTINOUS   @Z40MSAP*/ 90229304
*                                       /*   FORMS STACKER   @Z40MSAP*/ 90279304
*            3 *        BIT(4);         /* FILLER            @Z40MSAP*/ 90329304
*/********************************************************************* 90429304
**                                                                   ** 90479304
**       THIS SECTION RESTRICTS THE REGISTERS THAT ARE PASSED        ** 90529304
**       BY EACH OF THE 3800 SET PRINT ROUTINES.                     ** 90579304
**                                                                   ** 90629304
**********************************************************************/ 90679304
*                                                                       90729304
*    DECLARE                            /*                   @Z40MSAP*/ 90779304
*        SPWUCORE REG(04) PTR(31)       /* PTR SET PRINT     @Z40MSAP*/ 90889304
*                         RESTRICTED,   /* WORKAREA          @Z40MSAP*/ 90929304
*                                       /* (IN USER KEY)     @Z40MSAP*/ 90979304
*        SPWRSVR  REG(06) PTR(31)       /* POINTER TO SVRB   @Z40MSAP*/ 91129304
*                         RESTRICTED,   /* + 96 (EXTENDED    @Z40MSAP*/ 91179304
*                                       /* SAVE AREA)        @Z40MSAP*/ 91229304
*        SPW5CORE REG(08) PTR(31)       /* PTR SET PRINT     @Z40MSAP*/ 91239304
*                        RESTRICTED;    /* WORKAREA          @Z40MSAP*/ 91249304
*                                       /* (IN KEY 5)        @Z40MSAP*/ 91251304
*                                                                       91271304
*/********************************************************************* 91304904
**       CREATE COMMON REGISTER NAMES FOR USE BY OTHER MACROS        ** 91314204
**********************************************************************/ 91323504
*                                                                       91332804
*        ?AHAREG;                       /*                   @Z40MSAP*/ 91342104
*                                                                       91351404
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 91360704
*/********************************************************************* 91370004
**                                                                   ** 91379304
**       THIS SECTION DECLARES ALL OF THE POINTERS USED BY THE       ** 91429304
**       SPW MACRO TABLES.                                           ** 91479304
**                                                                   ** 91529304
**********************************************************************/ 91579304
*                                                                       91629304
*    DECLARE                            /*                   @Z40MSAP*/ 91679304
*        DCBPTR   PTR(31)               /* PTR USERS DCB     @Z40MSAP*/ 91729304
*                 DEF(SPWADDCB),        /*                   @Z40MSAP*/ 91779304
*        DEBPTR   PTR(31)               /* PTR DEB           @Z40MSAP*/ 91829304
*                 DEF(SPWADDEB),        /*                   @Z40MSAP*/ 91879304
*        IOBPRPTR PTR(31)               /* PTR IOB PREFIX    @Z40MSAP*/ 91889304
*                 DEF(SPWADIOB),        /*                   @Z40MSAP*/ 91899304
*        IOBSTPTR PTR(31)               /* PTR IOB STANDARD  @Z40MSAP*/ 91929304
*                 DEF(SPWIOBST),        /* SECTION           @Z40MSAP*/ 91979304
*        UCBPTR   PTR(31)               /* PTR UCB           @Z40MSAP*/ 92029304
*                 DEF(SPWADUCB),        /*                   @Z40MSAP*/ 92079304
*        DEBDAPTR PTR(31)               /* NON               @Z40MSAP*/ 92129304
*                 BASED,                /*                   @Z40MSAP*/ 92179304
*        DEBEXPTR PTR(31)               /*   USED            @Z40MSAP*/ 92229304
*                 BASED,                /*                   @Z40MSAP*/ 92279304
*        DEBSBPTR PTR(31)               /*     DSECT         @Z40MSAP*/ 92329304
*                 BASED,                /*                   @Z40MSAP*/ 92379304
*        UCBDCPTR PTR(31)               /*        POINTERS   @Z40MSAP*/ 92429304
*                 BASED;                /*                   @Z40MSAP*/ 92479304
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 92529304
*/********************************************************************* 92579304
**                                                                   ** 92629304
**       THIS INSTRUCTION WILL SET UP THE BASE POINTER FOR THE       ** 92679304
**       SET PRINT PARAMETER LIST (IHASPP) MAPING MACRO.             ** 92729304
**                                                                   ** 92779304
**********************************************************************/ 92829304
*                                                                       92879304
*        RESPECIFY (SPPARM)             /* SET UP POINTER    @Z40MSAP*/ 92929304
*                  BASED(ADDR(SPWSPP)); /* TO SET PRINT      @Z40MSAP*/ 92979304
*                                       /* PARAMETER LIST    @Z40MSAP*/ 93029304
*                                       /* ENTRY             @Z40MSAP*/ 93079304
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/ 93129304
*/********************************************************************* 93179304
**                                                                   ** 93229304
**       THIS SECTION WILL CALL THE FOLLOWING MAPING MACROS:         ** 93279304
**                                                                   ** 93329304
**                IHADCBDF                                           ** 93379304
**                IHADCB                                             ** 93429304
**                IEZDEB                                             ** 93479304
**                IEZIOB                                             ** 93529304
**                IEFUCBOB                                           ** 93579304
**                IHASPP                                             ** 93629304
**                                                                   ** 93679304
**********************************************************************/ 93729304
*                                                                       93779304
*    %INCLUDE SYSLIB (IHADCBDF);        /*                   @Z40MSAP*/ 93829304
*    %DSORGPS = 1;                      /*                   @Z40MSAP*/ 93879304
*    %DEVDPR = 1;                       /*                   @Z40MSAP*/ 93929304
*    %INCLUDE SYSLIB (IHADCB);          /*                   @Z40MSAP*/ 93979304
*    %INCLUDE SYSLIB (IEZDEB);          /*                   @Z40MSAP*/ 94029304
*    %INCLUDE SYSLIB (IEZIOB);          /*                   @Z40MSAP*/ 94079304
*    %INCLUDE SYSLIB (IEFUCBOB);        /*                   @Z40MSAP*/ 94129304
*    %INCLUDE SYSLIB (IHASPP);          /*                   @Z40MSAP*/ 94179304
*%SPW005:;                              /*                   @Z40MSAP*/ 94229304
./  ADD  SSI=32050075,NAME=IGGSTAE
* /* MACCOMP Y-2 SC1D0/SJD48  */                                        01002002
* /* MACSTAT Y-2 73194/021090 */                                        01004002
         MACRO                                                          01006002
&LABEL   IGGSTAE &NAMELOC                                               01008002
.* /* START OF SPECIFICATIONS ****                                      01010002
.*                                                                      01020002
.*01  MODULE-NAME = IGGSTAE                                             01030002
.*                                                                      01042002
.*01  COPYRIGHT = NONE                                                  01044002
.*                                                                      01046002
.*01  STATUS = VS2 RELEASE 2, LEVEL 1                                   01048002
.*                                                                      01048402
.*01  CHANGE-ACTIVITY = AS FOLLOWS:                                     01048802
.*     VS2 RELEASE 02 DELETIONS                                         01049202
.*                                                               YM1140 01049302
.*                                                                      01049402
.*01  DESCRIPTIVE-NAME = ESTAE ROUTINE BOOTSTRAP                        01049602
.*                                                                      01049702
.*01  FUNCTION = LOCATE AND ENTER TASK RECOVERY ROUTINE                 01049802
.*                                                                      01049902
.*01  NOTES = SEE BELOW                                                 01066602
.*                                                                      01076602
.*02    DEPENDENCIES = NONE                                             01078602
.*                                                                      01080602
.*02    REGISTER-CONVENTIONS = NO REGISTER LABELS ARE USED              01088802
.*                                                                      01093202
.*01  MODULE-TYPE = MACRO                                               01093602
.*                                                                      01093702
.*02    MACRO-SIZE = 75 STATEMENTS                                      01153902
.*                                                                      01163902
.*02    PARAMETER-RECEIVED = 1                                          01173902
.*03      TYPE = CHARACTER STRING                                       01185502
.*04        LENGTH+MODE = 8 CHARACTERS                                  01186202
.*                                                                      01188202
.*04        VALUE = NAME OF RECOVERY ROUTINE                            01188302
.*                                                                      01190202
.*02    EXTERNAL-REFERENCES = NONE                                      01190602
.*                                                                      01193602
.*02    DATA-AREA = NONE                                                01193802
.*                                                                      01224502
.*01  INNER-MACROS = NONE                                               01226502
.*                                                                      01227002
.*01  SYSTEM-MACROS = IHASDWA                                           01227102
.*                                                                      01238302
.**** END OF SPECIFICATIONS ***/                                        01243902
         PUSH  USING                                                    01293902
         DROP                                                           01343902
&LABEL   LA    15,12                    CODE PASSED IF NO RTCA          01500002
         CR    15,0                     WAS AN RTCA PROVIDED            02000002
         BER   14                       NO--RETURN TO RTM               02500002
         USING SDWA,1                   YES--BASE DSECT                 03000002
         STM   14,12,12(13)             SAVE REGS FOR RECOVERY RTN      03500002
         BALR  12,0                     ESTABLISH BASE FOR CONSTANTS    04500002
         USING *,12                                                     05000002
         MVC   SDWACSCT,=CL8'&SYSECT'   STORE CSECT NAME IN RTCA        05500002
         MVC   SDWAREXN,&NAMELOC        STORE ESTAE NAME IN RTCA        06000002
         DROP  1                                                        07500002
         L     1,16                     CVT POINTER              YM1140 07510002
         USING CVT,1                    CVT REGISTER             YM1140 07520002
         L     2,CVTLINK                ADDR OF SYS1.LINKLIB DCB YM1140 07530002
         DROP  1                                                 YM1140 07540002
         LOAD  EPLOC=&NAMELOC,DCB=(2)   LOAD RECOVERY RTN        YM1140 07550002
         LR    5,0                      SAVE ENTRY POINT ADDRESS        07600002
         DELETE EPLOC=&NAMELOC          DELETE IT                       07650002
         DROP  12                                                       07700002
         LR    15,5                     ADDRESS OF RECOVERY RTN         10500002
         L     14,12(13)                RTM RETURN ADDRESS              15000002
         LM    0,12,20(13)              RESTORE REGISTERS               15500002
         BR    15                       GO TO RECOVERY ROUTINE          16000002
         POP   USING                                                    16050002
         MEND                                                           16500002
./  ADD  SSI=81630240,NAME=IGGSTART
 % IGGSTART: MACRO KEYS(CLEAN,USER,ENV,SDUMP);               /*YM7586*/ 00500002
         ANS('DO; /*?' || MACNAME || ' ' || MACKEYS || '*/');           00550002
         ANS('* /* MACCOMP Y-2 SC1D0/SJ0082                */') COL(1); 00600002
         ANS('* /* MACSTAT Y-2 78152/@ZA32859              */') COL(1); 00650037
 DCL     (REMCOL, QUITCOL) FIXED;                                       01000002
         REMCOL = MACRMAR-31;           /* NORMALLY COL 41           */ 01500002
         QUITCOL = MACRMAR-2;           /* NORMALLY COLUMN 70        */ 02000002
 DCL     (ON, STRING) CHAR;                                             02500002
         ON = '''1''B';                                                 03000002
         IF CLEAN = '' THEN                                             03500002
            ANS('***ERROR***''CLEAN'' IS A REQUIRED KEYWORD;') COL(1);  04000002
         IF USER = '' THEN                                              04500002
            ANS('***ERROR***''USER'' IS A REQUIRED KEYWORD;') COL(1);   05000002
         IF SDUMP = '' THEN                                             05500002
            ANS('***ERROR***''SDUMP'' IS A REQUIRED KEYWORD;') COL(1);  06000002
         IF LENGTH(MACLABEL) > 0 THEN   /* IF MACRO LABEL PRESENT,   */ 06500002
            ANS(MACLABEL)               /* THEN PRINT IT AS DO LABEL */ 07000002
               COL(MACLMAR);            /* AT THE LEFT MARGIN        */ 07500002
         ANS('/' || REPEAT('*',MACRMAR-MACLMAR-2) || '/') COL(MACLMAR); 08500002
         ANS(COMMENT(                                                   09000002
 ' THIS ROUTINE ANALYSES FLAGS IN THE SDWA TO DETERMINE              '  09500002
            )) COL(MACLMAR);  ANS(COMMENT(                              10000002
 ' WHAT TYPE OF FUNCTION TO PERFORM                                  '  10500002
            )) COL(MACLMAR);  ANS(COMMENT(                              11000002
 ' THE FLAG COMBINATIONS TESTED AND THE ACTIONS TAKEN ARE SUMMARIZED '  11500002
            )) COL(MACLMAR);  ANS(COMMENT(                              12000002
 ' IN THE FOLLOWING TABLE:                                           '  12500002
            )) COL(MACLMAR);  ANS(COMMENT(                              13000002
 '                                                                   '  13500002
            )) COL(MACLMAR);  ANS(COMMENT(                              14000002
 '   PREVIOUS  || CAUSE OF ERROR ENTRY                               '  14500002
            )) COL(MACLMAR);  ANS(COMMENT(                   /*YM7586*/ 15000002
 '  PROCESSING || MCHK/PGIO/TEXC  OTHER                              '  15500002
            )) COL(MACLMAR);  ANS(COMMENT(                              16000002
 '  ___________||________________________                            '  16500002
            )) COL(MACLMAR);  ANS(COMMENT(                   /*YM7586*/ 17000002
 '       *EAS  ||        C          C                                '  17500002
            )) COL(MACLMAR);  ANS(COMMENT(                   /*YM7586*/ 18000002
 '       *CLUP ||        C          C                                '  18500002
            )) COL(MACLMAR);  ANS(COMMENT(                   /*YM7586*/ 19000002
 '       *STAF ||        S          S                                '  19500002
            )) COL(MACLMAR); IF ENV='' THEN DO; ANS(COMMENT( /*YM7586*/ 20000002
 '       *PERC ||        C          U                                '  20500002
            )) COL(MACLMAR);  ANS(COMMENT(                   /*YM7586*/ 21000002
 '       *NRBE ||        C          U                                '  21500002
            )) COL(MACLMAR);  END;  ELSE DO;  ANS(COMMENT(   /*YM7586*/ 22000002
 '       *PERC ||        C          E                                '  22500002
            )) COL(MACLMAR);  ANS(COMMENT(                   /*YM7586*/ 23000002
 '       *NRBE ||        C          E                                '  23500002
            )) COL(MACLMAR);  END;  ANS(COMMENT(             /*YM7586*/ 24000002
 '        NONE ||        C          U                                '  24500002
            )) COL(MACLMAR);  ANS(COMMENT(                              26000002
 '                                                                   '  26500002
            )) COL(MACLMAR);  ANS(COMMENT(                              27000002
 '       * THESE BITS ARE NOT ALL MUTUALLY EXCLUSIVE. THEY ARE       '  27500002
            )) COL(MACLMAR);  ANS(COMMENT(                              28000002
 '         TESTED IN THE ORDER LISTED.                               '  28500002
            )) COL(MACLMAR);  ANS(COMMENT(                              29100002
 '                                                                   '  29500002
            )) COL(MACLMAR);  ANS(COMMENT(                              29550002
 '       * USER ABENDS ALWAYS GO TO THE CLEANRTN.                    '  29600002
            )) COL(MACLMAR);  ANS(COMMENT(                              29650002
 '                                                                   '  29700002
            )) COL(MACLMAR);  ANS(COMMENT(                              29750002
 '       FUNCTIONS TO BE PERFORMED:                                  '  30500002
            )) COL(MACLMAR);  ANS(COMMENT(                              31000002
 '                                                                   '  31500002
            )) COL(MACLMAR);                                            32000002
         STRING = ' C ' || CLEAN ||                                     41000002
                  '--CLEAN UP RESOURCES AND PERCOLATE ERROR';           41500002
         STRING = STRING || REPEAT(' ',66-LENGTH(STRING));              42000002
         ANS(COMMENT(STRING)) COL(MACLMAR);                             42500002
            ANS(COMMENT(                                                43000002
 '                                                                   '  43500002
            )) COL(MACLMAR);                                            44000002
         IF ENV ¬= '' THEN DO;                                          44500002
            STRING = ' E ' || ENV ||                                    45000002
                    '--TEST FOR KNOWN ENVIRONMENTAL ERROR CONDITIONS,'; 45500002
            STRING = STRING || REPEAT(' ',66-LENGTH(STRING));           46000002
            ANS(COMMENT(STRING)) COL(MACLMAR);                          46500002
            ANS(COMMENT(                                                47000002
 ' AND IF FOUND, SET ERROR RETURN TO USER.                           '  47500002
            )) COL(MACLMAR);  ANS(COMMENT(                              48000002
 ' IF UNKNOWN, TREAT AS U                                            '  48500002
            )) COL(MACLMAR);  ANS(COMMENT(                              49000002
 '                                                                   '  49500002
            )) COL(MACLMAR);                                            50000002
         END;                                                           50500002
         STRING = ' S ' || SDUMP ||                                     51000002
                  '--PREVIOUS RECOVERY ROUTINE FAILED.';                51500002
         STRING = STRING || REPEAT(' ',66-LENGTH(STRING));              52000002
         ANS(COMMENT(STRING)) COL(MACLMAR);                             52500002
         ANS(COMMENT(                                                   53000002
 ' TAKE A DUMP FOR IT, THEN TREAT AS C                               '  53500002
            )) COL(MACLMAR);  ANS(COMMENT(                              54000002
 '                                                                   '  54500002
            )) COL(MACLMAR);                                            55000002
         STRING = ' U ' || USER ||                                      55500002
                  '--VALIDATE USER INPUT. IF IT IS IN ERROR,';          56000002
         STRING = STRING || REPEAT(' ',66-LENGTH(STRING));              56500002
         ANS(COMMENT(STRING)) COL(MACLMAR);                             57000002
         ANS(COMMENT(                                                   57500002
 ' TAKE PROBLEM DETERMINATION ACTIONS AND THEN CLEAN UP.             '  58000002
            )) COL(MACLMAR);  ANS(COMMENT(                              58500002
 ' IF IT IS VALID, ASSUME A SYSTEM ERROR IN COVERED FUNCTION.        '  59000002
            )) COL(MACLMAR);  ANS(COMMENT(                              59500002
 ' TAKE A DUMP, THEN TREAT AS C                                      '  60000002
            )) COL(MACLMAR);                                            60500002
         ANS('/' || REPEAT('*',MACRMAR-MACLMAR-2) || '/') COL(MACLMAR); 61000002
         ANS('IF SDWAEAS = ON')               COL(MACCOL) SKIP(2);      64500002
         ANS('/* LOWER ESTAE ALREADY DUMPED */') COL(REMCOL);           65000002
         ANS(' | SDWACLUP = ON THEN')         COL(MACCOL);              65500002
         ANS('/* OR RTM SAYS CLEANUP        */') COL(REMCOL);           66000002
         ANS('GOTO ' || CLEAN(1) || ';')      COL(MACCOL+3);            66500002
         ANS('/* GO CLEAN UP & GET OUT      */') COL(REMCOL);           67000002
         ANS('IF TCBCREQ = ON  THEN')       COL(MACCOL);                67000437
         ANS('/* TCB ABEND BIT IS ON @ZA32859*/') COL (REMCOL);         67000837
         ANS('GOTO ' || SDUMP(1) || ';')     COL(MACCOL+3);             67001237
         ANS('/*GO TO DUMP RTN       @ZA26062*/') COL (REMCOL);         67001637
         ANS('RFY GPR15F RSTD;')          COL(MACCOL);                  67002002
         ANS('/* RESTRICT WORKREG 15 ZA02517*/') COL(REMCOL);           67004002
         ANS('GPR15F = ''FFF''X;')        COL(MACCOL);                  67006002
         ANS('/* SET USER ABEND MASK ZA02517*/') COL(REMCOL);           67008002
         ANS('GEN REFS(SDWACMPC,SDWAPTR)(N GPR15F,SDWACMPC-1(SDWAPTR));'67008402
 )                                        COL(MACCOL);                  67008502
         ANS('IF GPR15F ¬= 0 THEN')       COL(MACCOL);                  67058802
         ANS('/* IF USER ABEND CODE  ZA02517*/') COL(REMCOL);           67060002
         ANS('GOTO ' || CLEAN(1) || ';')      COL(MACCOL+3);            67110002
         ANS('/* GO CLEAN UP & EXIT  ZA02517*/') COL(REMCOL);           67160002
         ANS('RFY GPR15F UNRSTD;')          COL(MACCOL);                67210002
         ANS('/* RELEASE WORKREG 15  ZA02517*/')  COL(REMCOL);          67260002
         ANS('IF SDWASTAF = ON THEN')         COL(MACCOL) SKIP(2);      67500002
         ANS('/* A LOWER LEVEL ESTAE/FRR    */') COL(REMCOL);           68000002
         ANS('GOTO ' || SDUMP(1) || ';')      COL(MACCOL+3);            69000002
         ANS('/* WAS EXECUTING AND FAILED   */') COL(REMCOL);           69050002
         ANS('/* TAKE A DUMP FOR IT         */') COL(REMCOL);           69500002
         ANS('IF SDWATEXC = ON')              COL(MACCOL);   /*YM7586*/ 72500002
         ANS('/* SOME NON-PROGRAM TYPE      */') COL(REMCOL);           73000002
         ANS(' | SDWAPGIO = ON')              COL(MACCOL);   /*YM7586*/ 73500002
         ANS('/* ERROR HAS OCCURRED         */') COL(REMCOL);           74000002
         ANS(' | SDWAMCHK = ON THEN')         COL(MACCOL);   /*YM7586*/ 74010002
         ANS('/* GO CLEAN UP & GET OUT      */') COL(REMCOL);           74100002
         ANS('GOTO ' || CLEAN(1) || ';')      COL(MACCOL+3); /*YM7586*/ 74150002
         IF ENV ¬= '' THEN DO;                                          75000002
            ANS('IF SDWAPERC = ON')     COL(MACCOL) SKIP(2); /*YM7586*/ 75050002
            ANS('/* ESTAE OR RB BELOW US       */') COL(REMCOL);        75100002
            ANS(' | SDWANRBE = ON THEN')      COL(MACCOL+3); /*YM7586*/ 75150002
            ANS('/* TRYING TO SAY SOMETHING    */') COL(REMCOL);        75200002
            ANS('GOTO ' || ENV(1) || ';')     COL(MACCOL+6);            75500002
            ANS('/* CHECK FOR ENVIRON PROBLEMS */') COL(REMCOL);        76000002
                           END;                                         76500002
         ANS('GOTO ' || USER(1) || ';') COL(MACCOL) SKIP(2); /*YM7586*/ 77500002
         ANS('/* CHECK USER INPUT           */') COL(REMCOL);           78000002
         ANS('/' || REPEAT('*',MACRMAR-MACLMAR-2) || '/') COL(MACLMAR); 86500002
         ANS('END;') COL(MACCOL);                                       87000002
 % END;                                                                 87500002
./  ADD  SSI=50960075,NAME=IGGSTW
*  %GOTO STWL1;                                                         00010002
         MACRO                                                          00050002
         IGGSTW                                                         00100002
.* /* START OF SPECIFICATIONS ****                                      00102002
.*                                                                      00104002
.*01  MODULE-NAME = IGGSTW                                              00106002
.*                                                                      00108002
.*01  COPYRIGHT = NONE                                                  00110002
.*                                                                      00112002
.*01  STATUS = VS2 RELEASE 3 LEVEL 1/31/75                              00114000
.*                                                                      00116002
.*01  DESCRIPTIVE-NAME = STOW WORK AREA                                 00118002
.*                                                                      00120002
.*01  FUNCTION = MAPS THE WORK AREA USED BY THE STOW MODULES            00122002
.*                                                                      00124002
.*01  MODULE-TYPE = MACRO                                               00126002
.*                                                                      00128002
.*02    MACRO-SIZE = N/A FOR A MAPPING MACRO                            00130002
.*                                                                      00132002
.*02    PARAMETER-RECEIVED = NONE                                       00134002
.*                                                                      00136002
.*01  TABLES = NONE                                                     00138002
.*                                                                      00140002
.*01  INNER-MACROS = IHAECB, IEZIOB                                     00142002
.*                                                                      00144002
.*01  SYSTEM-MACROS = NONE                                              00146002
.*                                                                      00148002
.*01  CHANGE-ACTIVITY = SEE BELOW                                       00150002
.*    VS2 RELEASE 2 DELETIONS                                           00152002
.*    VS2 RELEASE 3 DELETIONS                                           00154000
.*                                                              ZA01548 00154400
.*                                                                      00156002
.**** END OF SPECIFICATIONS ***/                                        00158002
.*/*                                                                    00160002
.*/ %STWL1: ;                                                           00162002
* /* MACCOMP Y-2 SC1D2/SJ0082                                        */ 00164000
* /* MACSTAT Y-2 75031/ZA01548                                       */ 00166000
*/********************************************************************/ 00168002
*/*                                                                  */ 00170002
*/*      THIS MACRO MAPS THE WORK AREA USED BY THE STOW MODULES      */ 00172002
*/*                                                                  */ 00174002
*/*      VS2 RELEASE 3, 1/31/75, LEVEL=1                             */ 00176000
*/*                                                                  */ 00178002
*/*      METHOD OF ACCESS                                            */ 00180002
*/*        BAL  - A USING ON THE DSECT NAME 'STWAREA' ESTABLISHES    */ 00182002
*/*               ADDRESSABILITY TO ALL SYMBOLS.                     */ 00184002
*/*        PL/S - REDEFINE A BASE FOR THE STRUCTURE BEFORE           */ 00186002
*/*               REFERENCING ANY SYMBOLS WITHIN IT.                 */ 00188002
*/*                                                                  */ 00190002
*/********************************************************************/ 00192002
* %; /*                                                                 00194002
.*/ %GOTO STWL2;  /*                                                    00196002
STWAREA  DSECT                                                          00198002
****                                                                    00550002
****     POINTERS AND USER DATA SAVE AREA                               00600002
****                                                                    00650002
STWPARM  DS    A                        ADDR OF USER SUPPLIED ENTRY     00700002
*                                       NAME (LOWER OF 2 FOR CHANGE)    00750002
STWHIGH  DS    A                        ADDR OF HIGHER OF 2 USER SUPP-  00800002
*                                       LIED ENTRY NAMES (CHANGE ONLY)  00850002
         DS    H                        RESERVED                        00900002
STWOFFLW DS    H                        OFFSET TO ADD, REPLACE, OR      00950002
*                                       DELETE LOCATION IN LOW BLOCK    01000002
STWOLDNM DS    CL8                      NAME OF ENTRY BEING DELETED     01050002
STWNEWNM DS    CL8                      NAME OF NEW ENTRY               01100002
STWTTR   DS    AL3                      MEMBER'S RELATIVE ADDRESS       01150002
STWCTTRN DS    XL1                      ALIAS BIT, NUMBER OF TTRNS,     01200002
*                                       AND LENGTH OF USER DATA         01250002
STWALIAS EQU   X'80'                    THIS MEMBER NAME IS AN ALIAS    01300002
STWDATA  DS    CL62                     USER DATA FOR ENTRY             01350002
         SPACE 2                                                        01400002
****                                                                    01450002
****     FLAG, CONDITION, AND SWITCH BYTES                              01500002
****                                                                    01550002
STWFLAG1 DS    B                        FIRST FLAG BYTE                 01600002
*                       BIT DEFINITIONS                                 01650002
*        BIT   7                        RESERVED                        01700002
STWCHNG  EQU   X'80'                    CHANGE FUNCTION, USED IN COMBI- 01750002
*                                       NATION WITH STWADD AND STWDEL   01800002
STWDEL   EQU   X'40'                    DELETE FUNCTION                 01850002
STWREPL  EQU   X'20'                    REPLACE FUNCTION                01900002
STWADD   EQU   X'10'                    ADD FUNCTION                    01950002
STWDRYRN EQU   X'08'                    DRY RUN BEING MADE ON DIRECTORY 02000002
STWFLOW  EQU   X'04'                    USED TO CONTROL PROGRAM FLOW    02050002
STWDCBWR EQU   X'02'                    LAST DCB OPERATION WAS A WRITE  02100002
STWMERGE EQU   X'01'                    2 INPUT BLKS=1 OUTPUT   ZA01548 02110000
*                                                                       02150002
STWRTN   DS    CL1                      RETURN CODE SAVE AREA           02200002
*                                                                       02250002
STWFLGLN EQU   *-STWAREA                LENGTH OF SAVE AND FLAG AREAS   02300002
         EJECT                                                          02350002
****                                                                    02400002
****     CONTROL BLOCKS FOR STOW'S CHANNEL PROGRAMS                     02450002
****                                                                    02500002
         DS    F                        IF ALREADY ON A DBLWORD  Y02072 02510002
*                                       GO TO NEXT FULLWORD BDY  Y02072 02520002
         DS    0D                       ALIGN TO A DBLWORD BDY   Y02072 02530002
         ORG   *-4                      ORG ECB IN FRONT OF IOB  Y02072 02540002
         IHAECB  DSECT=NO                                               02550002
         ORG   *-16                     SET STANDARD IOB BEHIND ECB     02600002
         IEZIOB  DSECT=NO                                               02650002
         SPACE 2                                                        02700002
****                                                                    02750002
****     STOW'S CHANNEL PROGRAMS                                        02800002
****                                                                    02850002
         ORG   IOBR+1                   PLACE CHANNEL PROGRAMS          02900002
*                                       BEHIND THE IOB SEEK FIELD       02950002
STWINCP  DS    0D                       THIS CHANNEL PROGRAM READS THE  03000002
*                                       INITIAL TWO DIRECTORY BLOCKS    03050002
STWSRCH1 DS    2F                       SEARCH ID EQUAL                 03100002
STWTIC11 DS    2F                       TRANSFER CONTROL TO SEARCH ID   03150002
STWRDCT1 DS    2F                       READ COUNT                      03200002
STWSRKY1 DS    XL1                      SEARCH ON KEY EQUAL OR HIGH     03250002
STWKYAD1 DS    AL3                      KEY ADDRESS                     03300002
         DS    XL4                      FLAGS AND BYTE COUNT            03350002
STWTIC12 DS    2F                       TRANSFER CONTROL TO READ COUNT  03400002
STWRDAT1 DS    2F                       READ DATA                       03450002
STWRCKD1 DS    2F                       READ COUNT KEY DATA             03500002
         SPACE                                                          03550002
STWWRDCP DS    0D                       THIS CHANNEL PROGRAM WRITES     03600002
*                                       AND READS DIRECTORY BLOCKS      03650002
STWSRCH2 DS    XL1                      SEARCH ID EQUAL                 03700002
STWIDAD2 DS    AL3                      ID ADDRESS                      03750002
         DS    XL4                      FLAGS AND BYTE COUNT            03800002
STWTIC2  DS    2F                       TRANSFER CONTROL TO SEARCH ID   03850002
STWWRKD1 DS    XL1                      WRITE KEY AND DATA              03900002
STWWRAD2 DS    AL3                      WRITE ADDRESS                   03950002
STWWFLG2 DS    B                        FLAGS                           04000002
STWCMDCH EQU   X'40'                    COMMAND CHAIN TO NEXT CCW       04050002
         DS    XL3                      BYTE COUNT                      04100002
STWRCKD2 DS    XL1                      READ COUNT KEY DATA             04150002
STWRDAD2 DS    AL3                      READ ADDRESS                    04200002
         DS    XL4                      FLAGS AND BYTE COUNT            04250002
STWRCKD3 DS    XL1                      READ COUNT KEY DATA             04300002
STWRDAD3 DS    AL3                      READ ADDRESS                    04350002
STWRDFL3 DS    XL1                      CCW FLAGS               ZA01548 04400000
         DS    XL3                      BYTE COUNT              ZA01548 04402000
STWRCKD4 DS    XL1                      READ COUNT KEY DATA     ZA01548 04410000
STWRDAD4 DS    AL3                      READ ADDRESS            ZA01548 04420000
STWRDFL4 DS    XL1                      CCW FLAGS               ZA01548 04430000
         DS    XL3                      BYTE COUNT              ZA01548 04440000
         SPACE 2                                                        04450002
****                                                                    04500002
****     COMMAND CODE EQUATES FOR CHANNEL PROGRAMS                      04550002
****                                                                    04600002
STWIDEQ  EQU   X'31'                    SEARCH ON IDENTIFIER EQUAL      04650002
STWWRKD  EQU   X'0D'                    WRITE KEY AND DATA              04700002
STWRDKD  EQU   X'8E'                    READ KEY AND DATA               04750002
STWRDCKD EQU   X'9E'                    READ COUNT, KEY, AND DATA       04800002
STWSKIP  EQU   X'10'                    SUPPRESS DATA TRANSFER  ZA01548 04810000
         SPACE 2                                                        04850002
****                                                                    04900002
****     STOW'S INPUT - OUTPUT BUFFERS.  FOR DETAILS SEE THE            04950002
****     BUFFER DSECT.                                                  05000002
****                                                                    05050002
STWBUF1  DS    0F                       INITIALLY CONTAINS THE FIRST    05100002
         DS    CL276                    OF TWO DIRECTORY BLOCKS READ    05150002
STWBUF2  DS    0F                       INITIALLY CONTAINS THE SECOND   05200002
         DS    CL276                    OF TWO DIRECTORY BLOCKS READ    05250002
STWBUF3  DS    0F                       INITIALLY USED AS THE FIRST     05300002
         DS    CL276                    OUTPUT BUFFER                   05350002
STWBUF4  DS    0F                       TEMPORARILY USED AS 1ST SA66881 05400000
         DS    CL276                    INPUT BUFFER FOR EXCP   SA66881 05410000
STWEND   DS    0D                       END OF WORK AREA                05450002
CORESIZE EQU   STWEND-STWAREA           SIZE OF STOW'S WORK AREA        05500002
         EJECT                                                          05550002
BUFFER   DSECT                                                          05600002
         SPACE                                                          05650002
*********************************************************************** 05700002
****                                                               **** 05750002
****     THIS DSECT MAPS STOW'S INPUT - OUTPUT BUFFERS             **** 05800002
****                                                               **** 05850002
*********************************************************************** 05900002
         SPACE                                                          05950002
BUFCNT   DS    0CL8                     COUNT FIELD CONTAINING          06000002
*                                       ABSOLUTE DISK ADDRESS           06050002
BUFCCHHR DS    CL5                      CCHHR FIELD                     06100002
BUFKDD   DS    CL3                      KEY AND DATA LENGTH             06150002
BUFKEY   DS    CL8                      KEY FIELD (HIGHEST MEMBER NAME) 06200002
BUFDATA  DS    0CL256                   DATA AREA                       06250002
BUFN     DS    H                        NUMBER OF BYTES USED IN         06300002
*                                       THIS DIRECTORY BLOCK            06350002
BUFENTRY DS    CL254                    DIRECTORY ENTRIES               06400002
BUFADDR  DS    A                        USED TO CHAIN THE BUFFERS       06450002
BUFPREFX EQU   L'BUFCNT+L'BUFKEY+L'BUFN  OFFSET TO BUFFER ENTRY AREA    06500002
         SPACE 4                                                        06550002
RBPRFX   DSECT                          RESUME RB DSECT          Y02072 08250002
         ORG   RBEXSAVE                                                 08300002
         SPACE                                                          08350002
*********************************************************************** 08400002
****                                                               **** 08450002
****     DSECT OF THE EXTENDED SAVE AREA OF THE SVRB               **** 08500002
****                                                               **** 08550002
*********************************************************************** 08600002
         SPACE                                                          08650002
XSAREG14 DS    A                        SAVE AREA FOR REG 14     Y02072 08700002
XSASTWWA DS    A                        ADDR OF STOW WORK AREA   Y02072 08750002
* XSAESTAE ESTAE MF=L                   ESTAE LIST AREA          Y02072 08760002
XSAESTAE ESTAE MF=L                     ESTAE LIST AREA          Y02072 08800002
XSARBXLN EQU   *-RBEXSAVE,(L'RBEXSAVE-(*-RBEXSAVE))  LENGTH OF   Y02072 08850002
*                                       EXTENDED SAVE AREA USED  Y02072 08900002
*                                       BY STOW                  Y02072 08920002
         MEND ,  */                                                     08950002
* %STWL2: ;                                                             09000002
*                                                                       09040002
*DCL STWAREA CHAR(1072) BASED;           /* STOW WORK AREA           */ 09042002
*                                                                       09092002
*                                                                       09750002
*/********************************************************************/ 09800002
*/*      STRUCTURE OF THE EXTENDED SAVE AREA OF THE STOW SVRB.       */ 09850002
*/********************************************************************/ 09900002
*                                                                       09950002
*DCL 1 * DEFINED(RBEXSAVE),                                             10000002
*      2 XSAREG14 PTR(31),              /* SAVE AREA FOR REG 14      */ 10050002
*      2 XSASTWWA PTR(31),              /* ADDR OF STOW WARK AREA    */ 10100002
*      2 XSAESTAE CHAR(16),             /* LIST FORM OF ESTAE MACRO  */ 10150002
*        3 XSAGTRAC CHAR(8),            /* LIST FORM OF GTRACE MACRO */ 10200002
*        3 XSARTMAD PTR(31) BDY(BYTE);  /* SAVE AREA FOR RTM RTRN ADR*/ 10250002
./  ADD  SSI=31321053,NAME=IGGSWA
*%;/*                                                                   00550002
         MACRO                                                          00600002
         IGGSWA                                                         01000002
.* /* START OF SPECIFICATIONS ****                                      01150002
.*                                                                      01200002
.*01  MODULE-NAME = IGGSWA                                              01250002
.*                                                                      01300002
.*01  COPYRIGHT = NONE                                                  01350002
.*                                                                      01400002
.*01  STATUS = CHANGE LEVEL 01                                          01450002
.*                                                                      01460002
.*01  DESCRIPTIVE-NAME = SEGMENT WORKAREA FORMAT                        01490002
.*                                                                      01492002
.*01  FUNCTION = FORMATS THE SEGMENT WORKAREA FOR BDAM VARIABLE SPANNED 01494002
.*               RECORDS                                                01494402
.*                                                                      01496002
.*01  NOTES = NONE                                                      01498002
.*                                                                      01498402
.*02    DEPENDENCIES = NA                                               01498802
.*                                                                      01499202
.*02    PERFORMANCE = NA                                                01499602
.*                                                                      01499702
.*02    RESTRICTIONS = NA                                               01499802
.*                                                                      01499902
.*02    REGISTER-CONVENTIONS = NA                                       01549902
.*                                                                      01559902
.*02    PATCH-LABEL = NA                                                01569902
.*                                                                      01579902
.*01  MODULE-TYPE = MACRO                                               01589902
.*                                                                      01595902
.*02  MACRO-SIZE =  NA                                                  01597902
.*                                                                      01598302
.*02  EXTERNAL-REFERENCES = NA                                          01598702
.*                                                                      01599102
.*01INNER-MACROS = NONE                                                 01599502
.*                                                                      01599602
.*01SYSTEM-MACROS = NONE                                                01599702
.*                                                                      01599802
.*01  CHANGE-ACTIVITY = SEE BELOW                                       01609802
.*                                                                      01619802
.*             VS 2 RELEASE 2                                           01629802
.*                                                                      01649802
.**** END OF SPECIFICATIONS ***/                                        01659802
*/* MACCOMP Y-2 SC1D7/SJD48                                          */ 01669802
*/* MACSTAT Y-2 73122/021160                                         */ 01679802
*%GOTO SWAPLS1;                         /*                     Y02072*/ 01689802
*********************************************************************** 01699802
* THE FOLLOWING DSECT FORMATS THE 12-BYTE SEGMENT WORKAREA CONTROL    * 02000002
* BLOCK FOR BDAM CREATE VARIABLE SPANNED RECORDS.                     * 02500002
*********************************************************************** 03000002
SWACB    DSECT                                                          03500002
SWACBPTR DS    AL4                      PTR TO FIRST SEGMENT WORKAREA   04000002
SWACBNO  DS    H                        NUMBER OF SEGMENT WORKAREAS     04500002
SWACBLNG DS    H                        LENGTH OF SEGMENT WORKAREA      05000002
SWATTR   DS    XL4                      VOLUME TTR                      05500002
SWALNG   EQU   *-SWACBPTR               END OF CONTROL BLOCK            06000002
*                                                                       06500002
*/********************************************************************/ 07000002
*/*THE FOLLOWING DSECT FORMATS THE SEGMENT WORKAREA FOR BDAM CREATE  */ 07500002
*/*AND BDAM VAR SPANNED RECORDS.EACH SEGMENT DATA AREA IS PRECEDED   */ 08000002
*/*BY 10 BYTES OF CONTROL INFORMATION. THE DATA AREA, WHICH FOLLOWS  */ 08050002
*/*BEGINS WITH A 4-BYTE BLOCK DESCRIPTOR WORD, FOLLOWED BY A 4-BYTE  */ 08100002
*/*SEGMENT DESCRIPTOR WORD.A MODIFIED BDW AND DATA ARE MOVED INTO AND*/ 08150002
*/*FROM THE RECORD AREA (POINTED TO IN THE SECOND WORD OF THE CONTROL*/ 08200002
*/*INFO.)THE BDW CONTAINS THE LENGTH OF THE ENTIRE BLOCK SEGMENT. THE*/ 08250002
*/*SDW CONTAINS THE LENGTH OF THAT SEGMENT(BDW LENGTH-4) PLUS A BIT  */ 08300002
*/*INDICATING IF THIS IS THE FIRST(01),MIDDLE(03),LAST(02),ONLY(00)  */ 08302002
*/*SEGMENT IN THIS BLOCK.                                            */ 08352002
*/********************************************************************/ 08500002
SWA      DSECT                                                          09000002
SWANXTPT DS    A                        POINTER TO NEXT SEGMENT         09500002
*                                       WORKAREA                        10000002
SWARCDPT DS    0CL6                     RECORD AREA POINTERS            10500002
SWARAPT  DS    A                        POINTER TO THE RECORD AREA      11000002
SWAFLAG  EQU   SWARAPT                  FLAG INDICATING SPANNED RECORD  11500002
SWASPNVL EQU   X'80'                    BIT INDICATING CUR REC SPANNED  12000002
SWALAST  EQU   X'40'                    BIT INDICATING LAST SEGMENT WAS 12500002
*                                       WRITTEN (BDAM CREATE ONLY)      13000002
SWABFINC DS    CL2                      OFFSET IN RECORD AREA TO        13500002
*                                       CURRENT SEGMENT                 14000002
SWACSLNG EQU   *-SWANXTPT               LENGTH OF CONTROL SECTION       14500002
SWASEGMT EQU   *                        BEGINNING OF SEGMENT            15000002
SWABDW   DS    CL4                      BLOCK DESCRIPTOR WORD           15500002
SWASDW   DS    0CL4                     SEGMENT DESCRIPTOR WORD         16000002
SWASEGLL DS    0H                       SEGMENT LENGTH (LL)             16500002
         DS    X                        FILLER                          17000002
SWASAVID DS    BL1                      SAVE AREA FOR ID OF LAST BYTE   17500002
SWASEGFL DS    BL1                      SEGMENT FLAGS                   18000002
         DS    X                        RESERVED                        18500002
SWADATA  EQU   *                        DATA PORTION OF RECORD          19000002
         MEND                                                           19500002
*%SWAPLS1:;                             /*                     Y02072*/ 19550002
*/*                                                                  */ 19600002
*/*THE FOLLOWING STRUCTURE FORMATS THE 12-BYTE SEGMENT WORKAREA CNTRL*/ 19650002
*/*BLOCK FOR BDAM CREATE VARIABLE SPANNED RECORDS.                   */ 19700002
*/*                                                                  */ 19750002
*DCL 1 SWACB CHAR(12) BDY(WORD) BASED,  /*BEGIN SWA CONTROL BLKY02072*/ 19800002
*      2 SWACBPTR PTR(31),              /*POINT TO FIRST SWA   Y02072*/ 19850002
*      2 SWACBNO FIXED(16),             /*NUMBER OF SWAS       Y02072*/ 19900002
*      2 SWACBLNG FIXED(16),            /*LENGTH OF EACH SWA   Y02072*/ 19950002
*      2 SWATTR FIXED(32);              /*VOLUME TTR           Y02072*/ 20000002
*DCL SWALNG CONSTANT(12);               /*LEN OF SWA CNTRL BLK Y02072*/ 20050002
./  ADD  SSI=31490010,NAME=IGGSYN
*                                                                       01050002
* %GO TO SYNL1;                         /* BILINGUAL MAPPING         */ 01060002
         MACRO                                                          01110002
         IGGSYN &DSECT=YES                                              01120002
.*                                                                      01130002
.*01  MODULE-NAME = IGGSYN                                              01140002
.*                                                                      01150002
.*01  COPYRIGHT = NONE                                                  01160002
.*                                                                      01170002
.*01  STATUS = VS2 RELEASE 2 LEVEL 0                                    01180002
.*                                                                      01190002
.*01  CHANGE-ACTIVITY = 000                                             01200002
.*                                                                      01210002
.*01  DESCRIPTIVE-NAME = SYNADAF GENERAL REGISTERS SAVEAREA,            01220002
.*    SYNADAF/SYNADRLS MESSAGE BUFFER AND SVRB EXTENDED SAVE AREAS      01230002
.*                                                                      01240002
.*01  FUNCTION = TO FORMAT THE MESSAGE TEXT                             01250002
.*                                                                      01260002
.*01  MODULE-TYPE = MACRO                                               01270002
.*                                                                      01280002
.*02    PARAMETER-RECEIVED = DSECT                                      01290002
.*                                                                      01300002
.*03      TYPE = CHARACTER STRING                                       01310002
.*                                                                      01320002
.*04        VALUE = YES OR NO                                           01330002
.*                                                                      01340002
.*01  TABLES = NONE                                                     01350002
.*                                                                      01360002
.*01  INNER-MACROS = NONE                                               01370002
.*                                                                      01380002
.*01  SYSTEM-MACROS = NONE                                              01390002
.*                                                                      01400002
.*01  NOTE = THERE ARE TWO MAPPING DSECTS IN THIS MACRO THE FIRST       01410002
.*    ONE IS THE GENERAL REGISTERS SAVEAREA AND THE MESSAGE BUFFER      01420002
.*    AREA AND THE SECOND ONE IS USING THE SVRB EXTENDED SAVEAREA       01430002
.*    AS A WORK AREA FOR THE SYNADAF/SYNADRLS SVC.                      01440002
* %SYNL1: ;                                                             01450002
* /* MACCOMP Y-2 SC1D0/SJD48                                         */ 01460002
* /* MACSTAT Y-2 73138/021160                                        */ 01470002
*/********************************************************************/ 02000002
*/*                                                                  */ 02050002
*/*  SYNADAF GENERAL REGISTERS SAVEAREA AND MESSAGE BUFFER AREA      */ 02100002
*/*                                                                  */ 02200002
*/*  METHODS OF ACCESS                                               */ 02350002
*/*     BAL -A DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED        */ 02360002
*/*          USING ON SYN GIVES ADDRESSABILITY FOR ALL SYMBOLS       */ 02400002
*/*          USING ON SYNWKA GIVES ADDRESSABILITY FOR MESSAGE        */ 02450002
*/*                BUFFER AREA                                       */ 02500002
*/*     PL/S-RESPECIFY ON SYN GIVES ADDRESSABILITY FOR ALL SYMBOLS   */ 02550002
*/*          RESPECIFY ON SYNWKA GIVES ADDRESSABILITY FOR MESSAGE    */ 02600002
*/*                BUFFER AREA                                       */ 02650002
*/*  NOTE = IN A PLS INCLUDE, SYNBASE MAY BE DECLARED AS DEF(LABEL)  */ 02660002
*/*         TO CAUSE IT TO BE USED IN A STRUCTURE. IF SYNBASE IS     */ 02670002
*/*         OMITTED THE STRUCTURE IS DECLARED AS BASED.              */ 02680002
*/*                                                                  */ 02700002
*/********************************************************************/ 02750002
*                                                                       02800002
* %GO TO SYNL2;                                                         02850002
         AIF   ('&DSECT' EQ 'NO').SYNNOD                                02860002
SYN      DSECT                          BUFFER DEF-USER 13 POINTS HERE  02870002
         AGO   .SYNCONT                                                 02880002
.SYNNOD  ANOP                                                           02890002
         DS    0D                                                       02900002
SYN      EQU   *                                                        02910002
.SYNCONT ANOP                                                           02920002
*                                                                       02930002
*  SYNADAF GENERAL REGISTERS SAVEAREA                                   02940002
*                                                                       02950002
SYNSAVE  DS    0CL72                    SAVE AREA                       05000002
SYNPL1   DS    F                        USED BY PL/1 LANGUAGE PROGRAM   05500002
SYNPREV  DS    F                        ADDRESS OF PREVIOUS SAVE AREA   06000002
SYNNEXT  DS    F                        ADDRESS OF NEXT SAVE AREA       06500002
SYNGRS   DS    15F                      GENERAL REGISTER SAVE AREA      07000002
*                                                                       07010002
*  MESSAGE BUFFER AREA                                                  07020002
*                                                                       07030002
SYNWKA   EQU   *                                                        07500002
SYNVLFLD DS    1D                       LENGTH FIELD FOR V.L. RECORDS   08000002
SYNMSG   DS    0C                       DATA AREA                       08500002
SYNREAD  DS    0CL6                     DATA AREA FOR READ              09000002
SYNRDERR DS    1F                       RETURN INFO IF READ ERROR       09500002
SYNBYTRD DS    1H                       NUMBER OF BYTES READ            10000002
SYNWAREA DS    0CL35                    WORK AREA                       10500002
SYNPURG  DS    0C                       ERROR TYPE INDICATOR            11000002
SYNACMTH DS    XL1                      ACCESS METHOD INPUT CODE        11500002
         DS    CL1                      UNUSED                          12000002
SYNWRKA  DS    0D                       WORK AREA                       12500002
SYNWKA1  DS    1F                       WK1                             13000002
SYNWKA2  DS    1F                       WK2                             13500002
         DS    1F                       UNUSED                          14000002
SYNWORK  DS    CL20                     WORK AREA                       14500002
SYNSTART DS    CL1                      BLANK                           15000002
SYNCMMA1 DS    CL1                      COMMA                           15500002
SYNJOBNM DS    CL8                      JOBNAME                         16000002
SYNCMMA2 DS    CL1                      COMMA                           16500002
SYNSTPNM DS    CL8                      STEP NAME                       17000002
SYNCMMA3 DS    CL1                      COMMA                           17500002
SYNUNTID DS    CL3                      UNIT ADDRESS                    18000002
SYNCMMA4 DS    CL1                      COMMA                           18500002
SYNDVTYP DS    CL2                      DEVICE TYPE                     19000002
SYNCMMA5 DS    CL1                      COMMA                           19500002
SYNDDNM  DS    CL8                      DD NAME                         20000002
SYNCMMA6 DS    CL1                      COMMA                           20500002
SYNOPRTN DS    CL6                      OPERATION ATTEMPTED             21000002
SYNCMMA7 DS    CL1                      COMMA                           21500002
SYNERROR DS    CL15                     ERROR DESCRIPTION               22000002
SYNCMMA8 DS    CL1                      COMMA                           22500002
SYNPOS   DS    0CL14                    AREA TO UNPACK ICB SEEK ADDRESS 23000002
SYNPOSM1 DS    CL7                      UNUSED-MAGNETIC TAPE            23500002
SYNPOSM2 DS    0CL7                     AREA TO UNPACK BLOCK COUNT      24000002
*                                        FOR MAGNETIC TAPE              24500002
SYNPOSMV DS    CL6                      UNPACK VALUE                    25000002
SYNPOSMS DS    CL1                      SIGN BYTE IN UNPACK FORMAT      25500002
SYNCMMA9 DS    CL1                      COMMA                           26000002
SYNACCSS DS    CL5                      ACCESS METHOD TYPE              26500002
SYNBLNK2 DS    CL1                      BLANK                           27000002
SYNMSGLN EQU   *-SYNMSG                 MESSAGE LENGTH                  27500002
SYNPRMR1 DS    F                        PARAMETER REGISTER SAVE AREA    28000002
SYNPRMR2 DS    F                        PARAMETER REGISTER SAVE AREA    28500002
SYNEND   DS    0F                       END OF IGGSYN                   29000002
SYNLGTH  EQU   SYNEND-SYN               LENGTH FOR GETMAIN              29010002
         AGO   .SYNSVRB                                                 29020002
*                                                                       29030002
* %SYNL2: ;                                                             29040002
*        % IF SYNBASE = ''                                              29042002
*        %    THEN                                                      29044002
*        %      SYNBASE = 'BASED';                                      29046002
*                                                                       29050002
*  DCL 1 SYN                SYNBASE  ,  /* BUFF DEF-USER 13 PTS HERE */ 29080002
*        2 SYNSAVE                   ,  /* SAVE AREA                 */ 29090002
*          3 SYNPL1         PTR(31)  ,  /* USED BY PL/1 LANGUAGE PGM */ 29100002
*          3 SYNPREV        PTR(31)  ,  /* ADDR OF PREVIOUS SAVEAREA */ 29110002
*          3 SYNNEXT        PTR(31)  ,  /* ADDR OF NEXT SAVE AREA    */ 29120002
*          3 SYNGRS         CHAR(60) ,  /* GENERAL REGS SAVE AREA    */ 29130002
*        2 SYNWKA                    ,  /* WORK AREA                 */ 29140002
*          3 SYNVLFLD       CHAR(8)  BDY(DWORD), /* LGTH FIELD       */ 29150002
*          3 SYNMSG                  ,  /* DATA AREA                 */ 29160002
*            4 SYNREAD      CHAR(6)  BDY(WORD) , /*DATA AREA FOR READ*/ 29170002
*              5 SYNRDERR   PTR(31)  ,  /* RETURN INFO IF READ ERROR */ 29180002
*              5 SYNBYTRD   FIXED(15),  /* NUMBERS OF BYTES READ     */ 29190002
*            4 SYNWAREA     CHAR(35) ,  /* WORK AREA                 */ 29200002
*              5 SYNPURG    CHAR(0)  ,  /* ERROR TYPE INDICATOR      */ 29210002
*              5 SYNACMTH   PTR(8)   ,  /* ACCESS METHOD INPUT CODE  */ 29220002
*              5 *          CHAR(1)  ,  /* UNUSED                    */ 29230002
*              5 SYNWRKA    CHAR(8)  ,  /* WORK AREA                 */ 29240002
*              5 *          CHAR(4)  ,  /* UNUSED                    */ 29250002
*              5 SYNWORK    CHAR(20) ,  /* WORK AREA                 */ 29260002
*              5 SYNSTART   CHAR(1)  ,  /* BLANK                     */ 29270002
*            4 SYNCMMA1     CHAR(1)  ,  /* COMMA                     */ 29280002
*            4 SYNJOBNM     CHAR(8)  ,  /* JOBNAME                   */ 29290002
*            4 SYNCMMA2     CHAR(1)  ,  /* COMMA                     */ 29300002
*            4 SYNSTPNM     CHAR(8)  ,  /* STEPNAME                  */ 29310002
*            4 SYNCMMA3     CHAR(1)  ,  /* COMMA                     */ 29320002
*            4 SYNUNTID     CHAR(3)  ,  /* UNIT ADDRESS              */ 29330002
*            4 SYNCMMA4     CHAR(1)  ,  /* COMMA                     */ 29340002
*            4 SYNDVTYP     CHAR(2)  ,  /* DEVICE TYPE               */ 29350002
*            4 SYNCMMA5     CHAR(1)  ,  /* COMMA                     */ 29360002
*            4 SYNDDNM      CHAR(8)  ,  /* DD NAME                   */ 29370002
*            4 SYNCMMA6     CHAR(1)  ,  /* COMMA                     */ 29380002
*            4 SYNOPRTN     CHAR(6)  ,  /* OPERATION ATTEMPTED       */ 29390002
*            4 SYNCMMA7     CHAR(1)  ,  /* COMMA                     */ 29400002
*            4 SYNERROR     CHAR(15) ,  /* ERROR DESCRIPTION         */ 29410002
*            4 SYNCMMA8     CHAR(1)  ,  /* COMMA                     */ 29420002
*            4 SYNPOS       CHAR(14) ,  /* AREA TO UNPACK ICB ADDR   */ 29430002
*              5 SYNPOSM1   CHAR(7)  ,  /* UNUSED-MAGNETIC TAPE      */ 29440002
*              5 SYNPOSM2   CHAR(7)  ,  /* AREA TO UNPACK BLOCK      */ 29450002
*                                       /*  COUNT FOR MAGNETIC TAPE  */ 29460002
*                6 SYNPOSMV CHAR(6)  ,  /* UNPACK VALUE              */ 29470002
*                6 SYNPOSMS CHAR(1)  ,  /* SIGN BYTE IN UNPACK FORMAT*/ 29480002
*            4 SYNCMMA9     CHAR(1)  ,  /* COMMA                     */ 29490002
*            4 SYNACCSS     CHAR(5)  ,  /* ACCESS METHOD TYPE        */ 29500002
*            4 SYNBLNK2     CHAR(1)  ,  /* BLANK                     */ 29510002
*          3 SYNPRMR1       PTR(31)  ,  /* PARAMETER REG SAVEAREA    */ 29520002
*          3 SYNPRMR2       PTR(31)  ;  /* PARAMETER REG SAVEAREA    */ 29530002
*                                                                       29540002
* %SYNMSGLN = 'LENGTH(SYNMSG)';         /* MESSAGE LENGTH            */ 29550002
* %SYNLGTH  = 'LENGTH(SYN)';            /* LENGTH FOR GETMAIN        */ 29560002
*                                                                       29570002
* %GO TO SYNL3;                                                         29572002
.SYNSVRB ANOP                                                           29580002
* %SYNL3: ;                                                             29590002
*/********************************************************************/ 33510002
*/*                                                                  */ 33512002
*/*  SYNADAF AND SYNADRLS SVRB EXTENDED SAVE AREA                    */ 33514002
*/*                                                                  */ 33514402
*/*  METHODS OF ACCESS                                               */ 33514802
*/*     BAL -USING ON RBSECT GIVES ADDRESSABILITY FOR ALL SYMBOLS    */ 33516802
*/*     PL/S-RESPECIFY ON RBSECPTR GIVES ADDRESSABILITY FOR ALL      */ 33518802
*/*          SYMBOLS                                                 */ 33520802
*/*  NOTE                                                            */ 33524002
*/*     THIS DSECT MUST BE CODED AFTER THE RB MAPPING MACRO          */ 33528002
*/*                                                                  */ 33530002
*/********************************************************************/ 33532002
*                                                                       33542002
* %GO TO SYNL4;                                                         33544002
RBPRFX   DSECT                          SVRB PREFIX                     33550002
         ORG   RBEXSAVE                 SVRB EXTENDED SAVE AREA         33600002
SYNRETA  DS    A                        RETURN ADDRESS                  33650002
SYNXCTPL DS    0XL16                    XCTL PARAMETER LIST             33700002
SYNXCTEP DS    A                        ADDRESS OF THE ENTRY PT NAME    33750002
SYNXCTLT DS    0XL12                    LIST OF PARAMETERS              33800002
SYNXCTDB DS    A                        ADDRESS OF THE DCB              33850002
SYNXCTNM DS    CL8                      ENTRY POINT NAME                33900002
         ORG   SYNXCTNM+4                                               33950002
SYNXCTID DS    CL1                      LOAD MODULE ID                  34000002
         ORG   SYNXCTNM+8                                               34010002
SYNESTPL ESTAE MF=L                     PARAMETER LIST FOR ESTAE RTN    34020002
SYNESFLG DS    XL2                      ESTAE ROUTINE FLAG BYTES        34050002
SYNGTM   EQU   X'80'                    RETURN FROM GETMAIN W/O ERROR   34060002
SYNCSA   EQU   X'40'                    SUCCESSFULLY CHAINED SAVE AREAS 34070002
SYNLMC   EQU   X'20'                    MESSAGE CSECT HAS BEEN LOADED   34080002
SYNRCS   EQU   X'10'                    CALLERS SAVE AREA HAS BEEN      34090002
*                                        RESTORED SUCCESSFULLY          34092002
SYNESTAE EQU   X'08'                    ESTAE ROUTINE HAD BEEN ENTERED  34094002
SYNURKEY DS    XL1                      USER KEY                        34102002
SYNUNPKA DS    CL9                      WORK AREA FOR UNPACK            34104002
SYNRBXLN EQU   *-RBEXSAVE               AMOUNT OF EXSAVE AREA IN USE    34110002
         MEND                                                           34150002
* %SYNL4: ;                                                             34200002
*                                                                       37500002
*  DCL 1 *                  DEF(RBEXSAVE)      , /* SVRB PREFIX      */ 37600002
*        2 SYNRETA          PTR(31)  ,  /* RETURN ADDRESS            */ 37650002
*        2 SYNXCTPL         CHAR(16) BDY(WORD) , /* XCTL PARAM LIST  */ 37700002
*          3 SYNXCTEP       PTR(31)  ,  /* ADDR OF ENTRY POINT NAME  */ 37750002
*          3 SYNXCTLT       CHAR(12) BDY(WORD) , /* LIST OF PARAM    */ 37800002
*              4 SYNXCTDB   PTR(31)  , /* ADDRESS OF DCB             */ 37850002
*              4 SYNXCTNM   CHAR(8)  , /* ENTRY POINT NAME           */ 37900002
*                5 *        CHAR(4)  , /* PADDING                    */ 37950002
*                5 SYNXCTID CHAR(1)  , /* LOAD MODULE ID             */ 38000002
*                5 *        CHAR(3)  , /* PADDING                    */ 38050002
*        2 SYNESTPL         CHAR(16) , /* PARAM LIST FOR ESTAE RTN   */ 38060002
*        2 SYNESFLG         CHAR(2)  , /* ESTAE ROUTINE FLAG BYTES   */ 38100002
*            4 SYNGTM       BIT(1)   , /* RET FR GETMAIN W/O ERROR   */ 38200002
*            4 SYNCSA       BIT(1)   , /* SUCCESSFULLY CHAINED SA    */ 38250002
*            4 SYNLMC       BIT(1)   , /* MSG CSECT HAS BEEN LOADED  */ 38300002
*            4 SYNRCS       BIT(1)   , /* CALLERS SAVE AREA HAS BEEN */ 38350002
*                                      /*  RESTORED SUCCESSFULLY     */ 38360002
*            4 SYNESTAE     BIT(1)   , /* ESTAE RTN HAS BEEN ENTERED */ 38400002
*            4 *            BIT(11)  , /* RESERVED                   */ 38450002
*        2 SYNURKEY         CHAR(1)  , /* USER KEY                   */ 38510002
*        2 SYNUNPKA         CHAR(9)  ; /* WORK AREA FOR UNPACK       */ 38520002
*                                                                       38550002
* %SYNRBXLN = 'LENGTH(RBPRFX)';        /* AMT OF EXSAVE AREA IN USE  */ 38600002
./  ADD  SSI=31321056,NAME=IGGUSL
*%;/*                                                                   00605002
         MACRO                                                          00610002
         IGGUSL                                                         01000002
.* /* START OF SPECIFICATIONS ****                                      01065002
.*                                                                      01070002
.*01  MODULE-NAME = IGGUSL                                              01075002
.*                                                                      01085002
.*01  COPYRIGHT = NONE                                                  01090002
.*                                                                      01095002
.*01  STATUS = CHANGE LEVEL 01                                          01100002
.*                                                                      01105002
.*01  DESCRIPTIVE-NAME = UNSCHEDULED LIST FORMAT                        01120002
.*                                                                      01125002
.*01  FUNCTION = FORMATS THE LIST CONTAINING IOBS WAITING FOR BUFFERS   01130002
.*                                                                      01135002
.*01  NOTES = NONE                                                      01140002
.*                                                                      01145002
.*02    DEPENDENCIES = NA                                               01150002
.*                                                                      01155002
.*02    PERFORMANCE = NA                                                01160002
.*                                                                      01165002
.*02    RESTRICTIONS = NA                                               01170002
.*                                                                      01175002
.*02    REGISTER-CONVENTIONS = NA                                       01180002
.*                                                                      01185002
.*02    PATCH-LABEL = NA                                                01190002
.*                                                                      01195002
.*01  MODULE-TYPE = MACRO                                               01200002
.*                                                                      01225002
.*02  MACRO-SIZE =  NA                                                  01230002
.*                                                                      01235002
.*02  EXTERNAL-REFERENCES = NA                                          01255002
.*                                                                      01320002
.*01INNER-MACROS = NONE                                                 01325002
.*                                                                      01335002
.*01SYSTEM-MACROS = NONE                                                01340002
.*                                                                      01350002
.*01  CHANGE-ACTIVITY = SEE BELOW                                       01351002
.*                                                                      01352002
.*             VS2 RELEASE 2                                            01353002
.*                                                                      01355002
.**** END OF SPECIFICATIONS ***/                                        01360002
* /* MACCOMP Y-2 SC1D7/SJD48                                         */ 01365002
* /* MACSTAT Y-2 73122/021160                                        */ 01370002
*/********************************************************************/ 01500002
*/* THE FOLLOWING DSECT FORMATS A BDAM UNSCHEDULED LIST USED WHEN    */ 02000002
*/* DYNAMIC BUFFERING IS SPECIFIED IN THE DCB AND THE ADDRESS SPACE  */ 02500002
*/* = VIRTUAL. ITS ADDRESS IS STORED IN DCBDYNB.  THE LIST CONSISTS  */ 03000002
*/* OF A 16-BYTE HEADER AREA AND 12 OR MORE 4-BYTE FIELDS, EACH OF   */ 03500002
*/* WHICH MAY CONTAIN THE ADDRESS OF AN IOB WAITING FOR A BUFFER.    */ 04000002
*/* THE LIST IS A WRAP AROUND LIST.  THE FIRST IOB IS NOT NECESSARILY*/ 04500002
*/* IN THE TOP SLOT, BUT THE NEXT IOB TO GET A FREED BUFFER.         */ 05000002
*/********************************************************************/ 05500002
*%GOTO USLPLS2;                         /*                     Y02072*/ 05550002
USL      DSECT                     UNSCHEDULED LIST                     06000002
USLSIZE  DS    H                   SIZE OF CURRENT LIST IN BYTES        06500002
USLSZFST EQU   64                  SIZE OF FIRST COPY OF USL            07000002
         DS    H                   UNUSED                               07500002
USLBFRQT DS    0A                  PTR TO ADDR OF IOB ON TOP OF BUF Q   08000002
USLFLAGS DS    BL1                 FLAG INDICATING IF THIS CURRENT LIST 08500002
USLCURNT EQU   X'80'               IF ON, THIS IS THE CURRENT LIST      09000002
USLIOB1  DS    AL3                 3 BYTE ADDR OF IOB ON TOP OF BUF Q   09500002
USLBFRQB DS    0A                  PTR TO ADDR OF LAST IOB ON BUF Q     10000002
         DS    XL1                 UNUSED                               10500002
USLIOB2  DS    AL3                 3 BYTE ADDR OF LAST IOB ON BUF Q     11000002
USLCHAIN DS    A                   PTR TO PRIOR LIST COPY               11500002
USLSLOT1 DS    A                   TOP SLOT ON QUEUE                    12000002
*     *     *     *     *     *     *     *     *     *     *     *     12500002
USLSLOT  DSECT                     FORMAT OF AN IOB ADDRESS FIELD       13000002
*                                  REPRESENTING 1 SLOT IN THE USL       13500002
USLIOBA  DS    0A                  IF USED, IOB ADDR ON BOUNDARY        14000002
USLSLTFL DS    BL1                 FLAGS                                14500002
USLENDL  EQU   X'80'               IF ON, SLOT IS LAST IN THE USL       15000002
USLINUSE EQU   X'40'               IF ON, SLOT IS BEING USED            15500002
USLIOBAA DS    AL3                 IF SLOT IS USED, IOB ADDR            16000002
USLNXT   EQU   *                   NEXT SLOT IN LIST                    16500002
         MEND                                                           17000002
*%USLPLS2: ;                            /*                     Y02072*/ 17050002
*DCL 1 USL CHAR(64) BDY(WORD) BASED,    /* BEGINNING OF USL    Y02072*/ 17100002
*      2 USLSIZE CHAR(2),               /* SIZE OF THIS USL    Y02072*/ 17150002
*      2 *       CHAR(2),                                               17200002
*      2 USLBFRQT PTR(31),              /* PTR TO ADDR OF IOB  Y02072*/ 17210002
*        3 USLFLAGS FIXED(8),           /* CURRENT LIST FLAG   Y02072*/ 17220002
*        3 USLIOB1 PTR(24),             /* ADDR OF IOB ON TOP  Y02072*/ 17230002
*      2 USLBFRQB PTR(31),              /* PTR TO LAST IOB     Y02072*/ 17240002
*        3 *      FIXED(8),                                             17242002
*        3 USLIOB2 PTR(24),             /*  ADDR OF LAST IOB   Y02072*/ 17244002
*      2 USLCHAIN PTR(31),              /* PTR TO PRIOR COPY   Y02072*/ 17246002
*      2 USLSLOT1 PTR(31),              /* TOP SLOT ON QUEUE   Y02072*/ 17248002
*      2 *    CHAR(44);                 /* REMAINDER OF LIST   Y02072*/ 17249002
*DCL USLSZFST FIXED(8) CONSTANT(64);    /* SIZE OF FIRST USL   Y02072*/ 17250002
*DCL USLCURNT FIXED(8) CONSTANT(128);   /* FLAG - CURRENT LIST Y02072*/ 17300002
./  ADD  SSI=20660540,NAME=IGGWKNCP
         MACRO                                                          03000020
&NAME    IGGWKNCP &OPTCD=                                               06000020
         GBLB   &CPOPS                                                  09000020
.*          RELEASE 23 DELETIONS/CHANGES                                09001020
.*          RELEASE 22 DELETIONS/CHANGES                                09002020
.*          RELEASE 21 DELETIONS/CHANGES                                09003020
         AIF    (&CPOPS).NOCPOPS                                        09010020
&CPOPS   SETB   1                                                       09020020
         IGGCPOPS                                                       09030020
.NOCPOPS ANOP                                                           09040020
&NAME    DSECT                                                          09050020
CP1      DS     0D                                                      09060020
         IGGCP1                                                         09070020
         ORG    &NAME                                                   09080020
CP2      DS     0D                                                      09090020
         IGGCP2                                                         09100020
         ORG  &NAME                                                     09110020
CP8      DS    0D                                                       12000020
         IGGCP8 OPTCD=&OPTCD                                            15000020
         AIF   ('&OPTCD' EQ 'V' OR '&OPTCD' EQ 'VW').SKIP10B            18000020
CP10B    DS    0D                                                       21000020
         IGGCP10B OPTCD=&OPTCD                                          24000020
.SKIP10B ANOP                                                           27000020
CP14     DS    0D                                                       30000020
         IGGCP14 OPTCD=&OPTCD                                           33000020
CP15     DS    0D                                                       36000020
         IGGCP15                                                        39000020
CP16     DS    0D                                                       42000020
         IGGCP16  OPTCD=&OPTCD                                          45000020
CP17     DS    0D                                                       48000020
         IGGCP17 OPTCD=&OPTCD                                           51000020
         AIF   ('&OPTCD' EQ 'V' OR '&OPTCD' EQ 'VW').SKIP10A            54000020
CP10A    DS    0D                                                       57000020
         IGGCP10A OPTCD=&OPTCD                                          60000020
.SKIP10A ANOP                                                           63000020
         MEND                                                           78000020
./  ADD  SSI=31750021,NAME=IHACCW
*%GOTO CCWPLS1;                                                         00550002
         MACRO                                                          00600002
         IHACCW &DSECT=                                                 01000002
.* /* START OF SPECIFICATIONS ****                                      01250002
.*                                                                      01300002
.*01  MODULE-NAME = IHACCW                                              01350002
.*                                                                      01400002
.*01  COPYRIGHT = NONE                                                  01450002
.*                                                                      01460002
.*01  STATUS = VS2 RELEASE 2 LEVEL 2                                    01470002
.*                                                                      01480002
.*01  DESCRIPTIVE-NAME = CHANNEL COMMAND WORD                           01490002
.*                                                                      01492002
.*01  FUNCTION = USED TO MAP THE CHANNEL COMMAND WORD.                  01494002
.*                                                                      01496002
.*01  MODULE-TYPE = MACRO                                               01498002
.*                                                                      01498402
.*02    MACRO-SIZE = NA FOR MAPPING MACRO                               01498802
.*                                                                      01499202
.*02    PARAMETER-RECEIVED = DSECT                                      01499602
.*                                                                      01499702
.*03      TYPE = CHARACTER STRING.                                      01499802
.*                                                                      01499902
.*04        VALUE = 'YES' OR 'NO'.                                      01549902
.*                                                                      01559902
.*01  TABLES = NONE                                                     01569902
.*                                                                      01579902
.*01  INNER-MACROS = NONE                                               01589902
.*                                                                      01591902
.*01  SYSTEM-MACROS = NONE                                              01593902
.*                                                                      01595902
.*01  CHANGE-ACTIVITY = SEE BELOW                                       01597902
.*    VS2 REL 2                                                         01598302
.*       MACRO CREATED                                                  01598702
.*                                                                      01599102
.*                                                                      01599502
.**** END OF SPECIFICATIONS ***/                                        01599602
*                                                                       01599702
*%CCWPLS1:;                                                             01599802
*  /* MACCOMP Y-2 SC1DO/SJD48  */                                       01649802
*  /* MACSTAT Y-2 73324/021160 */                                       01659802
*%GOTO CCWPLS2;                                                         01669802
*                                                                       01699802
* THIS DSECT DEFINES FIELDS AND ASSOCIATED FLAGS OF THE CHANNEL         02000002
* COMMAND WORD.                                                         02500002
* IF DSECT=YES IS CODED, A DSECT STATEMENT WILL BE EXPANDED.            03000002
* THE DEFAULT IS DSECT=YES.                                             03500002
*                                                                       04000002
* DESCRIPTIVE LAYOUT                                                    04100002
*                                                                       04150002
*    +0     +1                 +4           +6                          04160002
*    _____________________________________________________              04200002
*    |      |                  |            |            |              04250002
*    | COMD | DATA ADDRESS     | FLAGS      | BYTE       |              04300002
*    | CODE |                  |            | COUNT      |              04350002
*    |______|__________________|____________|____________|              04400002
*                                                                       04450002
         AIF   ('&DSECT' EQ 'NO').NODSECT  DO NOT EXPAND DSECT          04500002
.*                                           STMT IF NO                 05000002
         DSECT                                                          05500002
.NODSECT ANOP                                                           06000002
CCW      DS    0D                       BOUNDRY ALIGNMENT FOR CCWS      06500002
CCWADDRA DS    0A                       SAME AS CCWADDRB BELOW          07000002
CCWCOMCD DS    X                        COMMAND CODE                    07500002
CCWADDRB DS    AL3                      DATA ADDRESS                    08000002
CCWFLGS  DS    X                        FLAG BYTE                       08500002
CCWCD    EQU   X'80'                    USE ADDRESS PORTION OF NEXT CCW 09000002
CCWCC    EQU   X'40'                    USE COMMAND CODE AND DATA       09500002
*                                         ADDRESS OF NEXT CCW           10000002
CCWSLI   EQU   X'20'                    SUPPRESS INCORR LEN INDICATION  10500002
CCWSKIP  EQU   X'10'                    SUPPRESS DATA TRANSFER          11000002
CCWPCI   EQU   X'08'                    CAUSES A CHANNEL PROGRAM        11500002
*                                         CONTROLLED INTERRUPTION       12000002
         DS    X                        FILLER                          12500002
CCWBYTE  DS    H                        NUMBER OF BYTES TO TRANSFER     13000002
         MEND                                                           13500002
*%CCWPLS2:;                                                             13550002
*/*                                                                  */ 13600002
*/*                                                                  */ 13600102
*/* THE FOLLOWING STRUCTURE DEFINES THE FIELDS AND ASSOCIATED FLAGS  */ 13650002
*/* OF THE CHANNEL COMMAND WORD.                                     */ 13700002
*/*                                                                  */ 13750102
*/* DESCRIPTIVE LAYOUT                                               */ 13760002
*/*                                                                  */ 13762002
*/*  +0     +1                 +4           +6                       */ 13770002
*/*  _____________________________________________________           */ 13780002
*/*  |      |                  |            |            |           */ 13790002
*/*  | COMD | DATA ADDRESS     | FLAGS      | BYTE       |           */ 13792002
*/*  | CODE |                  |            | COUNT      |           */ 13794002
*/*  |______|__________________|____________|____________|           */ 13796002
*/*                                                                  */ 13798002
*/*                                                                  */ 13798402
* DCL  1  CCW BDY(DWORD) BASED,         /*                     Y02072*/ 13800002
*        2 CCWADDRA PTR(31),            /*SAME AS CCWADDRB     Y02072*/ 13850002
*          3 CCWCOMCD FIXED(8),         /*CCW OP CODE          Y02072*/ 13900002
*          3 CCWADDRB PTR(24),          /*CCW DATA ADDRESS     Y02072*/ 13950002
*        2 CCWFLGS BIT(8),              /*FLAGS                Y02072*/ 14000002
*          3 CCWCD BIT(1),              /*USE ADDR PORTION OF  Y02072   14050002
*                                          NEXT CCW            Y02072*/ 14100002
*          3 CCWCC BIT(1),              /*USE COM CD AND DATA  Y02072   14150002
*                                          ADDR OF NEXT CCW    Y02072*/ 14200002
*          3 CCWSLI BIT(1),             /*SUPPRESS INCORR LEN  Y02072   14250002
*                                          INDICATION          Y02072*/ 14300002
*          3 CCWSKIP BIT(1),            /*SUPPRESS DATA TRANS  Y02072*/ 14350002
*          3 CCWPCI BIT(1),             /*CAUSES A CHAN PGM    Y02072   14400002
*                                          CONTROLLED INTERUPT Y02072*/ 14450002
*        2 * FIXED(8),                  /*NOT USED             Y02072*/ 14500002
*        2 CCWBYTE FIXED(16);           /*DATA BYTE COUNT      Y02072*/ 14550002
./  ADD  SSI=31510963,NAME=IHACIX
* %GOTO CIXL1;                           /* BILINGUAL MAPPING        */ 00500002
         MACRO                                                          00510002
         IHACIX &DSECT=YES                                              01000002
.* /* START OF SPECIFICATIONS ****                                      01010002
.*                                                                      01020002
.*01  MODULE-NAME = IHACIX                                              01030002
.*                                                                      01040002
.*01  COPYRIGHT = NONE                                                  01050002
.*                                                                      01060002
.*01  STATUS = VS2 RELEASE 2 LEVEL 0                                    01070002
.*                                                                      01080002
.*01  DESCRIPTIVE-NAME = CI SVC EXIT LIST                               01090002
.*                                                                      01100002
.*01  FUNCTION = USED BY SVC-S TO SEE IF AN EXIT IS NEEDED.             01110002
.*                                                                      01120002
.*01  MODULE-TYPE = MACRO                                               01130002
.*                                                                      01140002
.*02    MACRO-SIZE = NA FOR MAPPING MACRO                               01150002
.*                                                                      01160002
.*02    PARAMETER-RECEIVED = DSECT                                      01170002
.*                                                                      01180002
.*03     TYPE = CHARACTER STRING                                        01190002
.*                                                                      01200002
.*04       VALUE = YES OR NO                                            01210002
.*                                                                      01220002
.*01  TABLES = NONE                                                     01230002
.*                                                                      01240002
.*01  INNER-MACROS = NONE                                               01250002
.*                                                                      01260002
.*01  SYSTEM-MACROS = NONE                                              01270002
.*                                                                      01280002
.*01  CHANGE-ACTIVITY = SEE BELOW                                       01290002
.*    VS2 RELEASE 2                                                     01300002
.*       MACRO CREATED                                                  01310002
.*                                                                      01320002
.*                                                                      01330002
.**** END OF SPECIFICATIONS ***/                                        01340002
* %CIXL1: ;                                                             01500002
* /* MACCOMP Y-2 SC1D0/SJD48                                         */ 01510002
* /* MACSTAT Y-2 73138/021160                                        */ 01520002
*/********************************************************************/ 01530002
*/*                                                                  */ 01540002
*/*           CI SVC EXIT LIST                                       */ 02000002
*/*                                                                  */ 02500002
*/*           VS2 RELEASE 2, 05/18/73, LEVEL=0                       */ 03000002
*/*                                                                  */ 03500002
*/*           FORMAT OF CI SVC EXIT LIST                             */ 04000002
*/*                       BYTE 0         BYTES 1-3                   */ 04500002
*/*           NORMAL        0        ADDR OF CI ROUTINE              */ 05000002
*/*           NULL     RETURN CODE            0                      */ 05500002
*/*                                                                  */ 05510002
*/*  NOTE = IN A PLS INCLUDE, CIXBASE MAY BE DECLARED AS DEF(LABEL)  */ 05514002
*/*         TO CAUSE IT TO BE USED IN A STRUCTURE. IF CIXBASE IS     */ 05516002
*/*         OMITTED THE STRUCTURE IS DECLARED AS BASED.              */ 05518002
*/********************************************************************/ 05520002
*                                                                       05530002
* %GOTO CIXL2;                                                          05540002
         AIF   ('&DSECT' EQ 'NO').CIXNOD                                06000002
CIX      DSECT                                                          06010002
         AGO   .CIXCONT                                                 06020002
.CIXNOD  ANOP                                                           06030002
CIX      DS    0F                                                       06040002
.CIXCONT ANOP                                                           06050002
CIXSYNDF DS    F                        SYNADAF   ROUTINE ENTRY         06500002
CIXBLDL  DS    F                        FIND/BLDL ROUTINE ENTRY         07000002
CIXBSP   DS    F                        BACKSPACE ROUTINE ENTRY         07500002
CIXFEOV  DS    F                        FEOV      ROUTINE ENTRY         08000002
CIXSTOW  DS    F                        STOW      ROUTINE ENTRY         08500002
         MEND                                                           09000002
* %CIXL2: ;                                                             09100002
*        % IF CIXBASE = ''                                              09120002
*        %    THEN                                                      09140002
*        %      CIXBASE = 'BASED';                                      09160002
*  DCL 1 CIX        CIXBASE ,                                           09200002
*        2 CIXSYNDF PTR(31) ,           /* SYNADAF   ROUTINE ENTRY   */ 09300002
*        2 CIXBLDL  PTR(31) ,           /* FIND/BLDL ROUTINE ENTRY   */ 09400002
*        2 CIXBSP   PTR(31) ,           /* BACKSPACE ROUTINE ENTRY   */ 09500002
*        2 CIXFEOV  PTR(31) ,           /* FEOV      ROUTINE ENTRY   */ 09600002
*        2 CIXSTOW  PTR(31) ;           /* STOW      ROUTINE ENTRY   */ 09700002
./  ADD  SSI=31321002,NAME=IHACSW
         MACRO                                                          00500002
         IHACSW  &DSECT=                                                01000002
* /* MACCOMP Y-2 SC1D0/SJD48            */                              01050002
* /* MACSTAT Y-2 73124/021160           */                              01100002
.* /* START OF SPECIFICATIONS ****                                      01150002
.*                                                                      01200002
.*01  MODULE-NAME = IHACSW                                              01250002
.*                                                                      01300002
.*01  COPYRIGHT = NONE                                                  01350002
.*                                                                      01400002
.*01  STATUS = VS2 RELEASE 2 LEVEL 2                                    01450002
.*                                                                      01460002
.*01  DESCRIPTIVE-NAME = CHANNEL STATUS WORD                            01470002
.*                                                                      01480002
.*01  FUNCTION = USED TO MAC THE CHANNEL STATUS WORD.                   01490002
.*                                                                      01492002
.*01  MODULE-TYPE = MACRO                                               01494002
.*                                                                      01496002
.*02    MACRO-SIZE = NA FOR MAPPING MACRO                               01498002
.*                                                                      01498402
.*02    PARAMETER-RECEIVED = DSECT                                      01498802
.*                                                                      01499202
.*03      TYPE = CHARACTER STRING.                                      01499302
.*                                                                      01499402
.*04        VALUE = 'YES' OR 'NO'.                                      01499502
.*                                                                      01499602
.*01  TABLES = NONE                                                     01499702
.*                                                                      01499802
.*01  INNER-MACROS = NONE                                               01499902
.*                                                                      01500002
.*01  SYSTEM-MACROS = NONE                                              01549902
.*                                                                      01551902
.*01  CHANGE-ACTIVITY = SEE BELOW                                       01569902
.*    VS2 REL 2                                                         01579902
.*       MACRO CREATED                                                  01589902
.*                                                                      01591902
.*                                                                      01593902
.**** END OF SPECIFICATIONS ***/                                        01595902
*                                                                       01599902
* THIS DSECT DEFINES FIELDS AND ASSOCIATED FLAGS OF THE CHANNEL         02000002
* STATUS WORD.                                                          02500002
* IF DSECT=YES IS CODED, A DSECT STATEMENT WILL BE EXPANDED. THE        03000002
* DEFAULT IS DSECT=YES.                                                 03500002
*                                                                       04000002
* DESCRIPTIVE LAYOUT                                                    04050002
*                                                                       04100002
*    _____________________________________________________              04150002
*    |      |                  |            |            |              04200002
*    | PROT | ADDR OF LAST CCW | STATUS     | RESIDUAL   |              04250002
*    | KEY  | EXECUTED + 8     | FLAGS      | COUNT      |              04300002
*    |______|__________________|____________|____________|              04350002
*                                                                       04400002
         AIF   ('&DSECT' EQ 'NO').NODSECT  IF DSECT=YES IS NOT CODED    04500002
.*                                           DO NOT GIVE DSECT STMT     05000002
         DSECT                                                          05500002
.NODSECT ANOP                                                           06000002
CSW      DS    0D                       BEGINNING BOUNDRY FOR CSW       06500002
CSWADDRA DS    0A                       SAME AS CSWADDRB BELOW          07000002
CSWKEY   DS    B                        PROTECTION KEY (BITS 4-7 ZERO)  07500002
CSWADDRB DS    AL3                      ADDR OF LAST CCW EXECUTED + 8   08000002
CSWSTATS DS    0H                       ENDING I/O STATUS BITS          08500002
CSWSTAT1 DS    B                        STATUS BYTE ONE (BITS 0-7)      09000002
CSWATTN  EQU   X'80'                    ATTENTION BIT                   09500002
CSWSTMOD EQU   X'40'                    STATUS MODIFIER BIT             10000002
CSWCUEND EQU   X'20'                    CONTROL UNIT END BIT            10500002
CSWBUSY  EQU   X'10'                    BUSY BIT                        11000002
CSWCHEND EQU   X'08'                    CHANNEL END BIT                 11500002
CSWDVEND EQU   X'04'                    DEVICE END BIT                  12000002
CSWUNCHK EQU   X'02'                    UNIT CHECK BIT                  12500002
CSWUNEXP EQU   X'01'                    UNIT EXCEPTION BIT              13000002
CSWSTAT2 DS    B                        STATUS BYTE TWO (BITS 8-15)     13500002
CSWPCI   EQU   X'80'                    PGM CONTROLLED INTERRUPTION BIT 14000002
CSWINCOR EQU   X'40'                    INCORRECT LENGTH INDICATION BIT 14500002
CSWPGCHK EQU   X'20'                    PROGRAM CHECK BIT               15000002
CSWPRCHK EQU   X'10'                    PROTECTION CHECK BIT            15500002
CSWCDCHK EQU   X'08'                    CHANNEL DATA CHECK BIT          16000002
CSWCCCHK EQU   X'04'                    CHANNEL CONTROL CHECK BIT       16500002
CSWICCHK EQU   X'02'                    INTERFACE CONTROL CHECK BIT     17000002
CSWCHCHK EQU   X'01'                    CHAINING CHECK BIT              17500002
CSWBYTE  DS    H                        BYTE COUNT                      18000002
         MEND                                                           18500002
./  ADD  SSI=42620754,NAME=IHADECB
*                                                                       00100001
*        %GOTO DECBL1;      /*                                          00150001
         MACRO                                                          00200001
         IHADECB &DSECT=YES                                             00300001
         AIF   ('&DSECT' EQ 'NO').NODSCT                                00400001
DECB     DSECT , -            DECBPTR                                   00500001
         AGO   .CONT                                                    00600001
.NODSCT  ANOP                                                           00700001
         DS    0D                                                       00800001
DECB     EQU   * -            DECBPTR                                   00900001
.CONT    ANOP  ,  */                                                    01000001
*%DECBL1 : ;                                                            01050001
*                                                                       01100001
*/* **************************************************************** */ 01200001
*/*            DATA EVENT CONTROL BLOCKS FOR -                       */ 01300001
*/*            BSAM, BISAM, BDAM, QTAM, BTAM                         */ 01400001
*/*                                                                  */ 01500001
*/*  OS/VS2 RELEASE 3, OS/VS1 RELEASE 4, 08/30/74, LEVEL=1           */ 01600003
*/*                                                                  */ 01650001
*/*  METHOD OF ACCESS                                                */ 01660001
*/*      BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */ 01670001
*/*             USING ON DECB GIVES ADDRESSABILITY FOR ALL SYMBOLS.  */ 01680001
*/*      PL/S - DCL DECBPT PTR                                       */ 01690001
*/* **************************************************************** */ 01700001
*%GOTO DECBL2;  /*                                                      01750001
         SPACE 1                                                        01800001
         IEZBITS , -          SYMBOLIC BIT DEFINITIONS                  01850001
         SPACE 1                                                        01860001
*********************************************************************** 01900001
*              DATA EVENT CONTROL BLOCK FOR BSAM                      * 02000001
*********************************************************************** 02100001
         SPACE 1                                                        02200001
DECSDECB DS    CL4 -          EVENT CONTROL BLOCK                       02300001
DECBPTR  DS    0A -           FOR IBM 1419 MAGNETIC CHARACTER READER    02400001
*                             AND IBM 1275 OPTICAL READER SORTER, A     02500001
*                             POINTER TO NEXT DECB TO BE TESTED FOR     02600001
*                             COMPLETION BY THE CHECK MACRO             02700002
*                             INSTRUCTION.  (DECB CHAINING APPLIES TO   02750002
*                             THE USE OF MORE THAN ONE DEVICE.)  THIS   02760002
*                             FIELD IN THE LAST DECB MUST BE ZERO.      02770002
DECTYPE  DS    0BL2 -         TYPE OF I/O REQUEST                       02800001
DECTYPE1 DS    B -            TYPE OF LENGTH OPERAND                    02900001
DECLNS   EQU   BIT0 -         S CODED FOR LENGTH                        03000001
DECRSV01 EQU   BIT1,,C'X' -   RESERVED                                  03050001
DECRSV02 EQU   BIT2,,C'X' -   RESERVED                                  03060001
DECRSV03 EQU   BIT3,,C'X' -   RESERVED                                  03070001
DECRSV04 EQU   BIT4,,C'X' -   RESERVED                                  03080001
DECRSV05 EQU   BIT5,,C'X' -   RESERVED                                  03090001
DECRSV06 EQU   BIT6,,C'X' -   RESERVED                                  03092001
DECRSV07 EQU   BIT7,,C'X' -   RESERVED                                  03094001
DECTYPE2 DS    B -            TYPE OF OPERATION                         03100001
DECRDSF  EQU   BIT0 -         READ SF                                   03200001
DECRDSB  EQU   BIT1 -         READ SB                                   03300001
DECWRSF  EQU   BIT2 -         WRITE SF                                  03400001
DECWRSD  EQU   BIT3 -         WRITE SD                                  03500001
DECRSV08 EQU   BIT4,,C'X' -   RESERVED                                  03550001
DECWRSZ  EQU   BIT5 -         WRITE SZ                                  03600001
DECRSV09 EQU   BIT6,,C'X' -   RESERVED                                  03650001
DECWRSFR EQU   BIT7 -         WRITE SFR (BIT 2 IS ALSO ON) OR           03700002
*                             READ RBL (BIT 0 IS ALSO ON)        MDC004 03710002
DECLNGTH DS    H -            LENGTH OF KEY AND DATA                    03800001
DECDCBAD DS    A -            ADDRESS OF THE DCB TO WHICH THIS I/O      03900002
*                             REQUEST IS RELATED                        04000002
DECAREA  DS    A -            ADDRESS OF KEY AND DATA, OR FOR 1287 OR   04100001
*                             1288 OPTICAL READERS, THE ADDRESS OF A    04200002
*                             USER-SPECIFIED CHANNEL PROGRAM            04300001
DECIOBPT DS    A -            ADDRESS OF THE IOB                        04400002
DECNEXT  DS    0A -           SAME AS DECNEXTA BELOW                    04500001
DECRSV10 DS    X -            RESERVED                                  04600001
DECNEXTA DS    AL3 -          ADDRESS OF THE NEXT ADDRESS FEEDBACK      04700002
*                             FIELD.  PRESENT ONLY IF R IS CODED IN     04800002
*                             THE WRITE MACRO.                          04802002
         SPACE 2                                                        04805002
         ORG   DECNEXT -      FOR 3886 ONLY, DEVICE DEPENDENT FIELDS    04810002
DECBHDRA DS    A -            FOR READ RBL, ADDRESS OF 3886 DATA        04815002
*                             HEADER RECORD AFTER READ           MDC001 04820002
DECBLNNM DS    A -            FOR READ RBL, ADDRESS OF LINE NUMBER OR   04825002
*                             NEGATIVE OF LINE NUMBER            MDC002 04830002
DECBLFMT DS    A -            FOR READ RBL, ADDRESS OF LINE FORMAT      04835002
*                             NUMBER OR NEGATIVE OF LINE FORMAT         04840002
*                             NUMBER                             MDC003 04845002
         SPACE 2                                                        04900001
*********************************************************************** 05000001
*              DATA EVENT CONTROL BLOCK FOR BISAM                     * 05100001
*********************************************************************** 05200001
         SPACE 1                                                        05300001
         ORG   DECB                                                     05400001
DECBECB  DS    0CL4 -         EVENT CONTROL BLOCK                       05500001
DECBRB   DS    0A -           SAME AS DECBRBA BELOW                     05600001
DECBECBF DS    B -            FLAG FIELD                                05700001
DECBWAIT EQU   BIT0 -         AWAITING COMPLETION OF EVENT              05800001
DECBPOST EQU   BIT1 -         EVENT HAS COMPLETED NORMALLY OR           05900002
*                             ABNORMALLY.  IF THE EVENT COMPLETED       05920002
*                             ABNORMALLY, FIELDS DECBEXC1 AND DECBEXC2  05930002
*                             WILL SHOW THE REASON.                     05940002
DECRSV11 EQU   BIT2,,C'X' -   RESERVED                                  05950001
DECRSV12 EQU   BIT3,,C'X' -   RESERVED                                  05960001
DECRSV13 EQU   BIT4,,C'X' -   RESERVED                                  05970001
DECRSV14 EQU   BIT5,,C'X' -   RESERVED                                  05980001
DECRSV15 EQU   BIT6,,C'X' -   RESERVED                                  05990001
DECRSV16 EQU   BIT7,,C'X' -   RESERVED                                  05992001
DECBRBA  DS    AL3 -          ADDRESS OF THE RB FOR THE PROGRAM         06000002
*                             AWAITING EVENT (BEFORE EVENT COMPLETION)  06100002
*                             OR RESERVED (AFTER EVENT COMPLETION)      06200002
DECBTYP1 DS    B -            OPTION BYTE                               06300001
DECRSV17 EQU   BIT0,,C'X' -   RESERVED                                  06350001
DECRSV18 EQU   BIT1,,C'X' -   RESERVED                                  06352001
DECRSV19 EQU   BIT2,,C'X' -   RESERVED                                  06354001
DECRSV20 EQU   BIT3,,C'X' -   RESERVED                                  06360001
DECRSV21 EQU   BIT4,,C'X' -   RESERVED                                  06370001
DECRSV22 EQU   BIT5,,C'X' -   RESERVED                                  06380001
DECBLNS  EQU   BIT6 -         LENGTH CODED AS 'S'                       06400001
DECBARS  EQU   BIT7 -         AREA CODED AS 'S'                         06500001
DECBTYP2 DS    B -            TYPE OF I/O REQUEST                       06600001
DECBRDK  EQU   BIT0 -         READ K                                    06700001
DECRSV23 EQU   BIT1,,C'X' -   RESERVED                                  06750001
DECBRDKU EQU   BIT2 -         READ KU                                   06800001
DECRSV24 EQU   BIT3,,C'X' -   RESERVED                                  06850001
DECBWRK  EQU   BIT4 -         WRITE K                                   06900001
DECBWRKN EQU   BIT5 -         WRITE KN                                  07000001
DECRSV25 EQU   BIT6,,C'X' -   RESERVED                                  07050001
DECRSV26 EQU   BIT7,,C'X' -   RESERVED                                  07060001
DECBLGTH DS    H -            NUMBER OF BYTES READ OR WRITTEN           07100001
DECBDCBA DS    A -            ADDRESS OF THE DATA CONTROL BLOCK         07200002
DECBAREA DS    A -            ADDRESS OF THE AREA IN STORAGE FOR THE    07300002
*                             RECORD                                    07350002
DECBLOGR DS    A -            ADDRESS OF THE LOGICAL RECORD             07400002
DECBKEY  DS    A -            ADDRESS OF THE KEY PORTION OF THE RECORD  07500002
DECBEXC1 DS    B -            EXCEPTIONAL CONDITION CODE BYTE 1         07600001
DECEXRNF EQU   BIT0 -         RECORD NOT FOUND                          07700001
DECEXRLC EQU   BIT1 -         RECORD LENGTH CHECK                       07800001
DECEXNSP EQU   BIT2 -         SPACE NOT FOUND IN WHICH TO ADD A RECORD  07900001
DECEXINV EQU   BIT3 -         INVALID REQUEST                           08000001
DECEXERR EQU   BIT4 -         UNCORRECTABLE I/O ERROR                   08100001
DECEXUBK EQU   BIT5 -         UNREACHABLE BLOCK                         08200001
DECEXOFL EQU   BIT6 -         OVERFLOW RECORD                           08300001
DECEXDUP EQU   BIT7 -         DUPLICATE RECORD PRESENTED FOR INCLUSION  08400001
*                             IN THE DATA SET                           08500002
DECBEXC2 DS    B -            EXCEPTIONAL CONDITION CODE BYTE 2         08600001
DECRSV27 EQU   BIT0,,C'X' -   RESERVED                                  08650001
DECRSV28 EQU   BIT1,,C'X' -   RESERVED                                  08660001
DECRSV29 EQU   BIT2,,C'X' -   RESERVED                                  08670001
DECRSV30 EQU   BIT3,,C'X' -   RESERVED                                  08680001
DECRSV31 EQU   BIT4,,C'X' -   RESERVED                                  08690001
DECRSV32 EQU   BIT5,,C'X' -   RESERVED                                  08692001
DECEXASR EQU   BIT6 -         EXECUTION OF THE LAST CHANNEL PROGRAM WAS 08700002
*                             INSTITUTED BY AN ASYNCHRONOUS ROUTINE     08800001
DECEXRKU EQU   BIT7 -         PREVIOUS MACRO INSTRUCTION WAS READ KU    08900001
         SPACE 2                                                        09000001
*********************************************************************** 09100001
*              DATA EVENT CONTROL BLOCK FOR BDAM                      * 09200001
*********************************************************************** 09300001
         SPACE 1                                                        09400001
         ORG   DECB                                                     09500001
         DS    0CL4 -         DECSDECB - EVENT CONTROL BLOCK            09600001
         DS    B -            COMPLETION CODE BYTE 1                    09700001
DECCC2   DS    B -            COMPLETION CODE BYTE 2                    09800001
DECCCRNF EQU   BIT0 -         RECORD NOT FOUND                          09900001
DECCCRLC EQU   BIT1 -         RECORD LENGTH CHECK                       10000001
DECCCNSP EQU   BIT2 -         SPACE NOT FOUND                           10100001
DECCCINV EQU   BIT3 -         INVALID REQUEST.  (THIS CONDITION ALSO    10200002
*                             SETS A BIT IN THE NEXT BYTE.)             10250002
DECCCERR EQU   BIT4 -         UNCORRECTABLE I/O ERROR                   10300001
DECCCEOD EQU   BIT5 -         END OF DATA                               10400001
DECCCUER EQU   BIT6 -         UNCORRECTABLE ERROR OTHER THAN AN I/O     10500002
*                             ERROR                                     10550002
DECCCREX EQU   BIT7 -         A WRITE WITH EXCLUSIVE CONTROL WAS NOT    10600003
*                             PRECEDED BY A READ WITH EXCLUSIVE CONTROL 10700003
*                             (MDC300)                         @Z30AQ9A 10800003
DECCC3   DS    B -            COMPLETION CODE BYTE 3                    10900001
DECRSV33 EQU   BIT0,,C'X' -   RESERVED                                  10950001
DECCCWRI EQU   BIT1 -         A WRITE MACRO INSTRUCTION WAS ADDRESSED   11000001
*                             TO AN INPUT DATA SET                      11100001
DECCCEXS EQU   BIT2 -         AN EXTENDED SEARCH WAS SPECIFIED WITH THE 11200002
*                             DCBLIMCT FIELD SET TO ZERO                11300001
DECCCNBK EQU   BIT3 -         THE BLOCK REQUESTED IS NOT WITHIN THE     11400002
*                             DATA SET                                  11450002
DECCCWDI EQU   BIT4 -         A WRITE-BY-IDENTIFICATION (DI) ADDRESSED  11500001
*                             RECORD ZERO                               11600001
DECCCSDK EQU   BIT5 -         A SEARCH-ON-KEY (DK) WAS SPECIFIED WITH   11700001
*                             THE DCBKEYLE FIELD SET TO ZERO OR WITHOUT 11800002
*                             AN ADDRESS FOR THE KEY                    11900002
DECCCOPT EQU   BIT6 -         A MACRO INSTRUCTION USED AN OPTION NOT    12000001
*                             SET IN THE DCB                            12100001
DECCCKFF EQU   BIT7 -         THE KEY FOR THE FIXED-LENGTH RECORD TO BE 12200001
*                             ADDED BEGINS WITH X'FF'                   12300002
DECRSV34 DS    X -            RESERVED                                  12400001
         DS    0BL2 -         DECTYPE - TYPE OF I/O REQUEST             12500001
         DS    B -            DECTYPE1 - FIRST BYTE OF DECTYPE          12600001
DECVERFY EQU   BIT0 -         VERIFY                                    12700001
DECOFLOW EQU   BIT1 -         OVERFLOW                                  12800001
DECEXSRC EQU   BIT2 -         EXTENDED SEARCH                           12900001
DECFDBCK EQU   BIT3 -         FEEDBACK                                  13000001
DECACTAD EQU   BIT4 -         ACTUAL ADDRESSING                         13100001
DECDYNBF EQU   BIT5 -         DYNAMIC BUFFERING                         13200001
DECRDEX  EQU   BIT6 -         READ EXCLUSIVE                            13300001
DECRELBA EQU   BIT7 -         RELATIVE BLOCK ADDRESSING                 13400001
         DS    B -            DECTYPE2 - SECOND BYTE OF DECTYPE         13500001
DECKEYS  EQU   BIT0 -         S CODED FOR KEY ADDRESS                   13600001
DECBKLNS EQU   BIT1 -         S CODED FOR BLOCK LENGTH                  13700001
DECTYPRU EQU   BIT2+BIT3 -    RU IS SUFFIXED TO THE TYPE, INDICATING    13800001
*                             THAT THE FEEDBACK ADDRESS POINTED TO BY   13900001
*                             DECNXADR CAN BE THE ADDRESS OF EITHER THE 14000002
*                             NEXT DATA RECORD OR THE NEXT CAPACITY     14100002
*                             RECORD, WHICHEVER OCCURS FIRST            14200002
DECTYPR  EQU   BIT3 -         R IS SUFFIXED TO THE TYPE, INDICATING     14300001
*                             THAT THE FEEDBACK ADDRESS POINTED TO BY   14400001
*                             DECNXADR IS THE ADDRESS OF THE NEXT DATA  14500002
*                             RECORD.  (BIT 2 IS ZERO)                  14600002
DECOPRD  EQU   BIT4 -         TYPE OF OPERATION - 0 IS WRITE, 1 IS READ 14700001
DECSRKEY EQU   BIT5 -         TYPE OF SEARCH ARGUMENT - 0 IS ID,        14800002
*                             1 IS KEY                                  14900001
DECWRADD EQU   BIT6 -         ADD OPTION OF WRITE OPERATION             15000001
DECRSV35 EQU   BIT7,,C'X' -   RESERVED                                  15050001
         DS    H -            DECLNGTH - LENGTH OF DATA                 15100001
         DS    A -            DECDCBAD - ADDRESS OF DCB TO WHICH THIS   15200001
*                             I/O REQUEST IS RELATED                    15300001
         DS    A -            DECAREA - ADDRESS OF THE DATA             15400002
         DS    A -            DECIOBPT - ADDRESS OF THE IOB             15500002
DECKYADR DS    A -            ADDRESS OF THE KEY                        15600002
DECRECPT DS    A -            ADDRESS OF THE BLOCK REFERENCE FIELD      15700002
DECNA    DS    0A -           SAME AS DECNAA BELOW                      15800001
DECRSV36 DS    X -            RESERVED                                  15900001
DECNAA   DS    AL3 -          ADDRESS OF THE NEXT ADDRESS FEEDBACK      16000002
*                             FIELD.  PRESENT ONLY IF R OR RU IS CODED  16100002
*                             IN THE READ MACRO.                        16200002
         SPACE 2                                                        16300001
*********************************************************************** 16400001
*              DATA EVENT CONTROL BLOCK FOR QTAM                      * 16500001
*********************************************************************** 16600001
         SPACE 1                                                        16700001
         ORG   DECB                                                     16800001
LINEDECB DS    CL4 -          ALWAYS ZERO                               16900001
DECRSV37 DS    X -            RESERVED                                  17000001
DECOPCOD DS    C -            OPERATION CODE FOR CURRENT SEGMENT        17100001
         DS    H -            DECLNGTH - LENGTH OF INPUT AREA FOR       17200001
*                             INITIAL READ                              17300001
         DS    A -            DECDCBAD - ADDRESS OF DCB                 17400001
         DS    A -            DECAREA - STARTING ADDRESS FOR DATA IN A  17500001
*                             BUFFER                                    17600001
DECRSV38 DS    XL4 -          RESERVED                                  17700001
DECCPOL  DS    0A -           SAME AS DECCPOLA BELOW                    17800001
DECNMMSG DS    FL1 -          NUMBER OF MESSAGES RECEIVED               17900001
DECCPOLA DS    AL3 -          ADDRESS OF CURRENTLY ACTIVE ENTRY IN      18000001
*                             POLLING LIST                              18100001
DECRSV39 DS    X -            RESERVED                                  18200001
DECUCBDX DS    FL1 -          INDEX TO UCB ADDRESS IN DEB               18300001
DECRSV40 DS    XL2 -          RESERVED                                  18400001
DECRSV41 DS    XL4 -          RESERVED                                  18500001
DECADRCH DS    A -            ADDRESS OF ADDRESSING CHARACTERS IN       18600001
*                             TERMINAL ENTRY                            18700001
         DS    0A -           DECPOLPT - ADDRESS OF POLLING LIST        18800001
DECRSV42 DS    X -            RESERVED                                  18900001
         DS    AL3 -          DECPOLPA - ADDRESS OF POLLING LIST        19000001
         SPACE 2                                                        19100001
*********************************************************************** 19200001
*              DATA EVENT CONTROL BLOCK FOR BTAM                      * 19300001
*********************************************************************** 19400001
         SPACE 1                                                        19500001
         ORG   DECB                                                     19600001
         DS    CL4 -          DECSDECB - EVENT CONTROL BLOCK            19700001
         DS    0BL2 -         DECTYPE - PROGRAMMING INDICATORS          19800001
         DS    B -            DECTYPE1 - FIRST BYTE OF DECTYPE          19900001
DECRDAPL EQU   BIT0 -         READ, USING AUTOPOLL                      20000001
DECRSV43 EQU   BIT1,,C'X' -   RESERVED                                  20050001
DECRSV44 EQU   BIT2,,C'X' -   RESERVED                                  20060001
DECRSV45 EQU   BIT3,,C'X' -   RESERVED                                  20070001
DECRSV46 EQU   BIT4,,C'X' -   RESERVED                                  20080001
DECSTRME EQU   BIT5 -         'S' CODED FOR TERMINAL ENTRY              20100001
DECSAREA EQU   BIT6 -         'S' CODED FOR AREA                        20200001
DECSLNTH EQU   BIT7 -         'S' CODED FOR LENGTH                      20300001
         DS    C -            DECTYPE2 - COMMAND CODE                   20400002
         DS    H -            DECLNGTH - LENGTH OF BUFFER OR MESSAGE    20500001
*                             AREA                                      20600001
         DS    0A -           DECDCBAD - ADDRESS OF ASSOCIATED DCB      20700001
DECBUFCT DS    0FL1 -         CONTAINS A RUNNING COUNT OF BUFFERS       20800001
*                             OBTAINED BY BTAM FOR THE CURRENT READ     20900002
*                             OPERATION.  (DYNAMIC BUFFERING ONLY.)     21000001
*                             USE DIFFERS DURING BSC AND 2760 ONLINE    21100002
*                             TEST.                                     21200001
DECONLTT DS    B -            FLAG BYTE FOR BSC AND 2760 ONLINE TEST    21300001
DECONLTS EQU   BIT0 -         IF ZERO, ONLINE TEST REQUESTED BY RFT     21400001
*                             MESSAGE (BSC).  IF ONE, ONLINE TEST       21500001
*                             INITIATED BY ONLTST MACRO INSTRUCTION     21600001
*                             (BSC).                                    21700001
DECRCVMS EQU   BIT1 -         IF ZERO, SENDING TEST MESSAGES (BSC).     21800001
*                             IF ONE, RECEIVING TEST MESSAGES (BSC) OR  21900001
*                             TYPE 11 ONLINE TEST FOR 2760 OPTICAL      22000001
*                             IMAGE UNIT.                               22100001
DECRSV47 EQU   BIT2,,C'X' -   RESERVED                                  22150001
DECRSV48 EQU   BIT3,,C'X' -   RESERVED                                  22160001
DECRSV49 EQU   BIT4,,C'X' -   RESERVED                                  22170001
DECRSV50 EQU   BIT5,,C'X' -   RESERVED                                  22180001
DECRSV51 EQU   BIT6,,C'X' -   RESERVED                                  22190001
DECRSV52 EQU   BIT7,,C'X' -   RESERVED                                  22192001
DECDCBAA DS    AL3 -          ADDRESS OF ASSOCIATED DCB                 22200001
         DS    A -            DECAREA - ADDRESS OF BUFFER OR MESSAGE    22300001
*                             AREA                                      22400001
DECSENS0 DS    B -            SENSE INFORMATION                         22500001
DECSENS1 DS    B -            RESERVED                                  22600001
DECCOUNT DS    H -            RESIDUAL COUNT FROM CSW FOR LAST CCW      22700001
*                             EXECUTED                                  22800001
DECENTRY DS    0A -           ADDRESS OF THE TERMINAL LIST              22900002
DECCMCOD DS    C -            COMMAND FOR WHICH THE ERROR OCCURRED      23000002
DECENTRA DS    AL3 -          ADDRESS OF THE TERMINAL LIST              23100002
DECFLAGS DS    B -            OPERATION STATUS                          23200001
DECWACK  EQU   BIT0+BIT1 -    WACK WAS RECEIVED (BSC)                   23300001
DECERRMS EQU   BIT0 -         ERROR STATUS MESSAGE WAS RECEIVED (BSC).  23400001
*                             BIT 1 IS OFF.                             23500002
DECDIFAC EQU   BIT1 -         ACKNOWLEDGMENT OTHER THAN ACK-0 OR ACK-1  23600001
*                             RECEIVED (BSC)                            23700001
DECALTAC EQU   BIT2 -         ACKNOWLEDGMENT ALTERNATION INCORRECT      23800001
DECBADID EQU   BIT3 -         FOR TWX 33/35 STATION AND BSC STATION,    23900001
*                             INCORRECT ID RECEIVED.  FOR AUTOPOLL,     24000001
*                             INDEX BYTE RECEIVED DOES NOT MATCH AN     24100001
*                             ACTIVE ONE.  FOR BSC NONSWITCHED          24200001
*                             POINT-TO-POINT LINE, CONTENTION OCCURRED. 24300001
*                             FOR WTTA, CONTENTION OCCURRED OR          24400001
*                             INCORRECT ID RECEIVED.                    24500001
DECNOBUF EQU   BIT4 -         FOR READ, DYNAMIC BUFFERING, NO BUFFER    24600001
*                             WAS AVAILABLE.  (MESSAGE LOST)            24700001
DECNEGRP EQU   BIT5 -         FOR OPENLST, POLLING, NEGATIVE RESPONSE   24800001
*                             TO POLLING RECEIVED.  FOR WRAPLST, ALL    24900001
*                             ENTRIES ARE INACTIVE.  FOR ADDRESSING,    25000001
*                             NEGATIVE RESPONSE TO ADDRESSING           25100001
*                             RECEIVED.  FOR WTTA, LAST MESSAGE         25200001
*                             RECEIVED ENDED WITH EOT OR TIME-OUT.      25300001
*                             FOR 2741, POWER IS OFF OR OTHER           25400001
*                             INTERVENTION REQUIRED CONDITION EXISTS.   25500001
DECREVRS EQU   BIT6 -         FOR WTTA, MESSAGE ENDED WITH WRU SIGNAL.  25600001
*                             FOR BSC STATIONS, REVERSE INTERRUPT (RVI) 25700001
*                             SEQUENCE WAS RECEIVED (SEE ALSO BIT 1).   25800002
*                             FOR 2741, WRITE OPERATION WAS ENDED BY    25900001
*                             TERMINAL INTERRUPT.                       26000001
DECSSMSG EQU   BIT6 -         A 3270 REMOTE SENSE/STATUS MESSAGE WAS    26050001
*                             RECEIVED IF THIS BIT IS ONE AND BIT 1     26060001
*                             IS ZERO                            ICB479 26070001
DECSTXNQ EQU   BIT7 -         FOR WTTA, CONTENTION CONDITION WAS        26100001
*                             ENCOUNTERED.  FOR BSC STATIONS, STX ENQ   26200001
*                             SEQUENCE WAS RECEIVED.                    26300001
DECRLN   DS    FL1 -          RELATIVE LINE NUMBER                      26400001
DECRESPN DS    CL2 -          FOR BSC OPERATIONS, RESPONSE FROM A       26500001
*                             TERMINAL TO ADDRESSING.  FOR STOP-START   26600001
*                             OPERATIONS, BYTE 1 IS RESPONSE FROM A     26700001
*                             TERMINAL TO ADDRESSING AND BYTE 2 IS      26800001
*                             VERTICAL REDUNDANCY CHARACTER AND         26900001
*                             LONGITUDINAL REDUNDANCY CHARACTER         27000001
*                             (VRC/LRC) RESPONSE.                       27100001
DECTPCOD DS    C -            TP OPERATION CODE                         27200001
DECERRST DS    B -            I/O ERROR STATUS FLAGS                    27300001
DECSIO3  EQU   BIT0 -         SIO RESULTED IN A CONDITION CODE OF 3     27400001
DECUNDEF EQU   BIT1 -         UNDEFINED ERROR CONDITION                 27500001
DECERPER EQU   BIT2 -         AN ERROR CONDITION OCCURRED DURING AN I/O 27600001
*                             OPERATION INITIATED BY ERROR RECOVERY     27700001
*                             ROUTINES                                  27800002
DECDIAGN EQU   BIT3 -         DIAGNOSTIC WRITE/READ OPERATION ENDED     27900001
*                             BECAUSE OF ERROR (2701 ONLY)              28000001
DECDSABL EQU   BIT4 -         DISABLE COMMAND ISSUED TO SWITCHED LINE   28100001
*                             BY ERROR RECOVERY ROUTINE BECAUSE OF      28200001
*                             PERMANENT ERROR ON THAT LINE              28300001
DECRSV53 EQU   BIT5,,C'X' -   RESERVED                                  28350001
DECRSV54 EQU   BIT6,,C'X' -   RESERVED                                  28360001
DECRSV55 EQU   BIT7,,C'X' -   RESERVED                                  28370001
DECCSWST DS    BL2 -          STATUS BITS FROM CSW FOR LAST CCW         28400001
*                             EXECUTED                                  28500001
DECADRPT DS    A -            ADDRESS OF ADDRESSING LIST ENTRY USED IN  28600001
*                             PREVIOUS OPERATION                        28700001
DECPOLPT DS    0A -           SAME AS DECPOLPA BELOW                    28800001
DECNDXPL DS    FL1 -          FOR AUTOPOLL, INDEX TO CURRENT ENTRY IN   28900001
*                             POLLING LIST                              29000001
DECPOLPA DS    AL3 -          FOR PROGRAMMED POLLING, ADDRESS OF THE    29100002
*                             CURRENT ENTRY IN THE POLLING LIST.  FOR   29200002
*                             AUTOPOLL, ADDRESS OF POLLING LIST.  FOR   29300001
*                             BSC ON-LINE TEST, ADDRESS OF TEXT DATA.   29400001
         SPACE 1                                                        29500001
*              BSC EXTENSION                                            29600001
*        FIELDS ARE PRESENT ONLY IF A SUBLIST IS CODED FOR THE          29700001
*        AREA AND LENGTH OPERANDS OF THE READ OR WRITE MACRO            29800001
*        INSTRUCTION THAT DEFINES THE DECB.                             29900001
         SPACE 1                                                        30000001
DECRSV56 DS    XL2 -          RESERVED                                  30100001
DECWLNG  DS    H -            LENGTH, IN BYTES, OF THE DATA AREA IN     30200002
*                             LEADING-GRAPHICS AND CONVERSATIONAL TYPE  30300001
*                             OPERATIONS OR OF THE AREA CONTAINING THE  30400002
*                             TONE CHARACTERS IN READ CONNECT WITH TONE 30500002
*                             (TCW) OPERATIONS                          30600001
DECWAREA DS    A -            ADDRESS OF THE DATA AREA IN               30700002
*                             LEADING-GRAPHICS AND CONVERSATIONAL       30800002
*                             OPERATIONS, OR OF THE AREA CONTAINING THE 30900002
*                             TONE CHARACTERS IN READ TCW OPERATIONS    31000002
         MEND  , */                                                     31100001
*%DECBL2 :  ;                                                           31200001
*                                                                       31300001
*                                                                       32100001
*/* **************************************************************** */ 32300001
*/*            DATA EVENT CONTROL BLOCK FOR BSAM                     */ 32400001
*/* **************************************************************** */ 32500001
*                                                                       32600001
*DECLARE                                                                32700001
*  1 DECB     BASED(DECBPT) BDY(WORD),                                  32800001
*   2 DECSDECB    CHAR(4) BDY(WORD),     /* EVENT CONTROL BLOCK      */ 32900001
*   2 DECBPTR     PTR(31),               /* FOR IBM 1419 MAGNETIC       33000001
*                                           CHARACTER READER AND        33100001
*                                           IBM 1275 OPTICAL READER     33200001
*                                           SORTER, A POINTER TO        33300001
*                                           NEXT DECB TO BE TESTED      33400001
*                                           FOR COMPLETION BY THE       33500001
*                                           CHECK MACRO INSTRUCTION.    33600002
*                                           (DECB CHAINING APPLIES TO   33650002
*                                           THE USE OF MORE THAN ONE    33660002
*                                           DEVICE.)  THIS FIELD IN     33670002
*                                           THE LAST DECB MUST BE       33680002
*                                           ZERO.                    */ 33690002
*    3 DECTYPE     CHAR(2),              /* TYPE OF I/O REQUEST      */ 33700001
*     4 DECTYPE1    CHAR(1),             /* TYPE OF LENGTH OPERAND   */ 33800001
*      5 DECLNS   BIT(1),                /* S CODED FOR LENGTH       */ 33900001
*      5 DECRSV01 BIT(1),                /* RESERVED                 */ 34000001
*      5 DECRSV02 BIT(1),                /* RESERVED                 */ 34050001
*      5 DECRSV03 BIT(1),                /* RESERVED                 */ 34100001
*      5 DECRSV04 BIT(1),                /* RESERVED                 */ 34150001
*      5 DECRSV05 BIT(1),                /* RESERVED                 */ 34200001
*      5 DECRSV06 BIT(1),                /* RESERVED                 */ 34250001
*      5 DECRSV07 BIT(1),                /* RESERVED                 */ 34300001
*     4 DECTYPE2    CHAR(1),             /* TYPE OF OPERATION        */ 34700001
*      5 DECRDSF  BIT(1),                /* READ SF                  */ 34800001
*      5 DECRDSB  BIT(1),                /* READ SB                  */ 34900001
*      5 DECWRSF  BIT(1),                /* WRITE SF                 */ 35000001
*      5 DECWRSD  BIT(1),                /* WRITE SD                 */ 35100001
*      5 DECRSV08 BIT(1),                /* RESERVED                 */ 35200001
*      5 DECWRSZ  BIT(1),                /* WRITE SZ                 */ 35300001
*      5 DECRSV09 BIT(1),                /* RESERVED                 */ 35400001
*      5 DECWRSFR BIT(1),                /* WRITE SFR (BIT 2 IS ALSO    35500001
*                                           ON) OR READ RBL (BIT 0 IS   35600002
*                                           ALSO ON)           MDC004*/ 35610002
*    3 DECLNGTH    FIXED(15),            /* LENGTH OF KEY AND DATA   */ 35700001
*   2 DECDCBAD    PTR(31),               /* ADDRESS OF THE DCB TO       35800002
*                                           WHICH THIS I/O REQUEST      35900002
*                                           IS RELATED               */ 36000002
*   2 DECAREA     PTR(31),               /* ADDRESS OF KEY AND DATA,    36100001
*                                           OR FOR 1287 OR 1288         36200001
*                                           OPTICAL READERS, ADDRESS    36300001
*                                           OF A USER-SPECIFIED         36400001
*                                           CHANNEL PROGRAM          */ 36500001
*   2 DECIOBPT    PTR(31),               /* ADDRESS OF THE IOB       */ 36600002
*   2 DECNEXT     PTR(31),               /* SAME AS DECNEXTA BELOW   */ 36700001
*    3 DECRSV10    CHAR(1),              /* RESERVED                 */ 36800001
*    3 DECNEXTA    PTR(24);              /* ADDRESS OF THE NEXT         36900002
*                                           ADDRESS FEEDBACK FIELD.     37000002
*                                           PRESENT ONLY IF R IS        37100002
*                                           CODED IN THE WRITE MACRO.*/ 37200002
*                                                                       37202002
*                                                                       37204002
*DECLARE 1 DECBS05                                                      37206002
*%IF IKEPLS='2'  %THEN                                                  37208002
*    %GOTO DECBA1;                                                      37210002
*      BASED(ADDR(DECNEXT)) BDY(WORD),                                  37212002
*%GOTO DECBA2;                                                          37214002
*%DECBA1 : ;                                                            37216002
*      DEF(DECNEXT) BDY(WORD),                                          37218002
*%DECBA2 : ;                                                            37220002
*                                        /* FOR 3886 ONLY, DEVICE       37222002
*                                           DEPENDENT FIELDS         */ 37224002
*   2 DECBHDRA    PTR(31),               /* FOR READ RBL, ADDRESS OF    37226002
*                                           3886 DATA HEADER RECORD     37228002
*                                           AFTER READ         MDC001*/ 37230002
*   2 DECBLNNM    PTR(31),               /* FOR READ RBL, ADDRESS OF    37232002
*                                           LINE NUMBER OR NEGATIVE     37234002
*                                           OF LINE NUMBER     MDC002*/ 37236002
*   2 DECBLFMT    PTR(31);               /* FOR READ RBL, ADDRESS OF    37238002
*                                           LINE FORMAT NUMBER OR       37240002
*                                           NEGATIVE OF LINE FORMAT     37242002
*                                           NUMBER             MDC003*/ 37244002
*                                                                       37300001
*                                                                       37400001
*/* **************************************************************** */ 37500001
*/*            DATA EVENT CONTROL BLOCK FOR BISAM                    */ 37600001
*/* **************************************************************** */ 37700001
*                                                                       37800001
*DECLARE 1  DECBS01                                                     37900001
*      BASED(DECBPT) BDY(WORD),                                         38000001
*   2 DECBECB     CHAR(4)  BDY(WORD),    /* EVENT CONTROL BLOCK      */ 38200001
*    3 DECBRB      PTR(31),              /* SAME AS DECBRBA BELOW    */ 38300001
*     4 DECBECBF    CHAR(1),             /* FLAG FIELD               */ 38350001
*      5 DECBWAIT BIT(1),                /* AWAITING COMPLETION OF      38400001
*                                           EVENT                    */ 38500001
*      5 DECBPOST BIT(1),                /* EVENT HAS COMPLETED         38600002
*                                           NORMALLY OR ABNORMALLY.     38650002
*                                           IF THE EVENT COMPLETED      38660002
*                                           ABNORMALLY, FIELDS          38670002
*                                           DECBEXC1 AND DECBEXC2       38680002
*                                           WILL SHOW THE REASON.    */ 38690002
*      5 DECRSV11 BIT(1),                /* RESERVED                 */ 38700001
*      5 DECRSV12 BIT(1),                /* RESERVED                 */ 38750001
*      5 DECRSV13 BIT(1),                /* RESERVED                 */ 38800001
*      5 DECRSV14 BIT(1),                /* RESERVED                 */ 38850001
*      5 DECRSV15 BIT(1),                /* RESERVED                 */ 38900001
*      5 DECRSV16 BIT(1),                /* RESERVED                 */ 38950001
*     4 DECBRBA     PTR(24),             /* ADDRESS OF THE RB FOR       39300002
*                                           THE PROGRAM AWAITING        39400002
*                                           EVENT (BEFORE EVENT         39500002
*                                           COMPLETION) OR RESERVED     39600001
*                                           (AFTER EVENT COMPLETION) */ 39700001
*   2 DECBTYP1    CHAR(1),               /* OPTION BYTE              */ 39800001
*    3 DECRSV17 BIT(1),                  /* RESERVED                 */ 39900001
*    3 DECRSV18 BIT(1),                  /* RESERVED                 */ 39950001
*    3 DECRSV19 BIT(1),                  /* RESERVED                 */ 40000001
*    3 DECRSV20 BIT(1),                  /* RESERVED                 */ 40050001
*    3 DECRSV21 BIT(1),                  /* RESERVED                 */ 40100001
*    3 DECRSV22 BIT(1),                  /* RESERVED                 */ 40150001
*    3 DECBLNS  BIT(1),                  /* LENGTH CODED AS 'S'      */ 40500001
*    3 DECBARS  BIT(1),                  /* AREA CODED AS 'S'        */ 40600001
*   2 DECBTYP2    CHAR(1),               /* TYPE OF I/O REQUEST      */ 40700001
*    3 DECBRDK  BIT(1),                  /* READ K                   */ 40800001
*    3 DECRSV23 BIT(1),                  /* RESERVED                 */ 40900001
*    3 DECBRDKU BIT(1),                  /* READ KU                  */ 41000001
*    3 DECRSV24 BIT(1),                  /* RESERVED                 */ 41100001
*    3 DECBWRK  BIT(1),                  /* WRITE K                  */ 41200001
*    3 DECBWRKN BIT(1),                  /* WRITE KN                 */ 41300001
*    3 DECRSV25 BIT(1),                  /* RESERVED                 */ 41400001
*    3 DECRSV26 BIT(1),                  /* RESERVED                 */ 41450001
*   2 DECBLGTH    FIXED(15),             /* NUMBER OF BYTES READ OR     41600001
*                                           WRITTEN                  */ 41700001
*   2 DECBDCBA    PTR(31),               /* ADDRESS OF THE DATA         41800002
*                                           CONTROL BLOCK            */ 41900002
*   2 DECBAREA    PTR(31),               /* ADDRESS OF THE AREA IN      42000002
*                                           STORAGE FOR THE RECORD   */ 42100002
*   2 DECBLOGR    PTR(31),               /* ADDRESS OF THE LOGICAL      42200002
*                                           RECORD                   */ 42300001
*   2 DECBKEY     PTR(31),               /* ADDRESS OF THE KEY          42400002
*                                           PORTION OF THE RECORD    */ 42500002
*   2 DECBEXC1    CHAR(1),               /* EXCEPTIONAL CONDITION       42600001
*                                           CODE BYTE 1              */ 42700001
*    3 DECEXRNF BIT(1),                  /* RECORD NOT FOUND         */ 42800001
*    3 DECEXRLC BIT(1),                  /* RECORD LENGTH CHECK      */ 42900001
*    3 DECEXNSP BIT(1),                  /* SPACE NOT FOUND IN WHICH    43000001
*                                           TO ADD A RECORD          */ 43100001
*    3 DECEXINV BIT(1),                  /* INVALID REQUEST          */ 43200001
*    3 DECEXERR BIT(1),                  /* UNCORRECTABLE I/O ERROR  */ 43300001
*    3 DECEXUBK BIT(1),                  /* UNREACHABLE BLOCK        */ 43400001
*    3 DECEXOFL BIT(1),                  /* OVERFLOW RECORD          */ 43500001
*    3 DECEXDUP BIT(1),                  /* DUPLICATE RECORD            43600001
*                                           PRESENTED FOR INCLUSION     43700001
*                                           IN THE DATA SET          */ 43800002
*   2 DECBEXC2    CHAR(1),               /* EXCEPTIONAL CONDITION       43900001
*                                           CODE BYTE 2              */ 44000001
*    3 DECRSV27 BIT(1),                  /* RESERVED                 */ 44100001
*    3 DECRSV28 BIT(1),                  /* RESERVED                 */ 44150001
*    3 DECRSV29 BIT(1),                  /* RESERVED                 */ 44200001
*    3 DECRSV30 BIT(1),                  /* RESERVED                 */ 44250001
*    3 DECRSV31 BIT(1),                  /* RESERVED                 */ 44300001
*    3 DECRSV32 BIT(1),                  /* RESERVED                 */ 44350001
*    3 DECEXASR BIT(1),                  /* EXECUTION OF THE LAST       44700002
*                                           CHANNEL PROGRAM WAS         44800001
*                                           INSTITUTED BY AN            44900001
*                                           ASYNCHRONOUS ROUTINE     */ 45000001
*    3 DECEXRKU BIT(1);                  /* PREVIOUS MACRO              45100001
*                                           INSTRUCTION WAS READ KU  */ 45200001
*                                                                       45300001
*                                                                       45400001
*/* **************************************************************** */ 45500001
*/*            DATA EVENT CONTROL BLOCK FOR BDAM                     */ 45600001
*/* **************************************************************** */ 45700001
*                                                                       45800001
*DECLARE 1  DECBS02                                                     45900001
*      BASED(DECBPT) BDY(WORD),                                         46000001
*   2 *           CHAR(4)  BDY(WORD),    /* DECSDECB - EVENT CONTROL    46100001
*                                           BLOCK                    */ 46150001
*    3 *           CHAR(1),              /* COMPLETION CODE BYTE 1   */ 46200001
*    3 DECCC2      CHAR(1),              /* COMPLETION CODE BYTE 2   */ 46300001
*     4 DECCCRNF BIT(1),                 /* RECORD NOT FOUND         */ 46400001
*     4 DECCCRLC BIT(1),                 /* RECORD LENGTH CHECK      */ 46500001
*     4 DECCCNSP BIT(1),                 /* SPACE NOT FOUND          */ 46600001
*     4 DECCCINV BIT(1),                 /* INVALID REQUEST.  (THIS     46700002
*                                           CONDITION ALSO SETS A BIT   46750002
*                                           IN THE NEXT BYTE.)       */ 46760002
*     4 DECCCERR BIT(1),                 /* UNCORRECTABLE I/O ERROR  */ 46800001
*     4 DECCCEOD BIT(1),                 /* END OF DATA              */ 46900001
*     4 DECCCUER BIT(1),                 /* UNCORRECTABLE ERROR OTHER   47000002
*                                           THAN AN I/O ERROR        */ 47100002
*     4 DECCCREX BIT(1),                 /* A WRITE WITH EXCLUSIVE      47200003
*                                           CONTROL WAS NOT PRECEDED    47300001
*                                           BY A READ WITH EXCLUSIVE    47400003
*                                           CONTROL (MDC300) @Z30AQ9A*/ 47500003
*    3 DECCC3      CHAR(1),              /* COMPLETION CODE BYTE 3   */ 47600001
*     4 DECRSV33 BIT(1),                 /* RESERVED                 */ 47700001
*     4 DECCCWRI BIT(1),                 /* A WRITE MACRO INSTRUCTION   47800001
*                                           WAS ADDRESSED TO AN INPUT   48000001
*                                           DATA SET                 */ 48100001
*     4 DECCCEXS BIT(1),                 /* AN EXTENDED SEARCH WAS      48200001
*                                           SPECIFIED WITH DCBLIMCT     48300001
*                                           FIELD SET TO ZERO        */ 48400001
*     4 DECCCNBK BIT(1),                 /* THE BLOCK REQUESTED IS      48500002
*                                           NOT WITHIN THE DATA SET  */ 48600002
*     4 DECCCWDI BIT(1),                 /* A WRITE-BY-IDENTIFICATION   48700001
*                                           (DI) ADDRESSED RECORD       48900001
*                                           ZERO                     */ 49000001
*     4 DECCCSDK BIT(1),                 /* A SEARCH-ON-KEY (DK) WAS    49100001
*                                           SPECIFIED WITH THE          49200002
*                                           DCBKEYLE FIELD SET TO       49300002
*                                           ZERO OR WITHOUT AN          49400002
*                                           ADDRESS FOR THE KEY      */ 49500002
*     4 DECCCOPT BIT(1),                 /* A MACRO INSTRUCTION USED    49600001
*                                           AN OPTION NOT SET IN        49700001
*                                           THE DCB                  */ 49800001
*     4 DECCCKFF BIT(1),                 /* THE KEY FOR THE FIXED-      49900001
*                                           LENGTH RECORD TO BE         50000001
*                                           ADDED BEGINS WITH X'FF'  */ 50100002
*    3 DECRSV34    CHAR(1),              /* RESERVED                 */ 50300001
*   2 *           CHAR(2),               /* DECTYPE - TYPE OF I/O       50400001
*                                           REQUEST                  */ 50450001
*    3 *           CHAR(1),              /* DECTYPE1 - FIRST BYTE OF    50500001
*                                           DECTYPE                  */ 50600001
*     4 DECVERFY BIT(1),                 /* VERIFY                   */ 50700001
*     4 DECOFLOW BIT(1),                 /* OVERFLOW                 */ 50800001
*     4 DECEXSRC BIT(1),                 /* EXTENDED SEARCH          */ 50900001
*     4 DECFDBCK BIT(1),                 /* FEEDBACK                 */ 51000001
*     4 DECACTAD BIT(1),                 /* ACTUAL ADDRESSING        */ 51100001
*     4 DECDYNBF BIT(1),                 /* DYNAMIC BUFFERING        */ 51200001
*     4 DECRDEX  BIT(1),                 /* READ EXCLUSIVE           */ 51300001
*     4 DECRELBA BIT(1),                 /* RELATIVE BLOCK ADDRESSING*/ 51400001
*    3 *           CHAR(1),              /* DECTYPE2 - SECOND BYTE      51600001
*                                           OF DECTYPE               */ 51700001
*     4 DECKEYS  BIT(1),                 /* S CODED FOR KEY ADDRESS  */ 51800001
*     4 DECBKLNS BIT(1),                 /* S CODED FOR BLOCK LENGTH */ 51900001
*     4 DECTYPRU BIT(2),                 /* RU IS SUFFIXED TO THE       51950001
*                                           TYPE, INDICATING THAT THE   52000001
*                                           FEEDBACK ADDRESS POINTED    52050001
*                                           TO BY DECNXADR CAN BE THE   52100002
*                                           ADDRESS OF EITHER THE       52150002
*                                           NEXT DATA RECORD OR THE     52200002
*                                           NEXT CAPACITY RECORD,       52250002
*                                           WHICHEVER OCCURS FIRST   */ 52300001
*      5 DECTYPU  BIT(1),                /* OFF IF R IS SUFFIXED,       52400001
*                                           ONE IF RU IS SUFFIXED    */ 52450001
*      5 DECTYPR  BIT(1),                /* R IS SUFFIXED TO THE TYPE,  52500002
*                                           INDICATING THAT THE         52600002
*                                           FEEDBACK ADDRESS POINTED    52700002
*                                           TO BY DECNXADR IS THE       52800002
*                                           ADDRESS OF THE NEXT DATA    52900002
*                                           RECORD  (BIT 2 IS ZERO)  */ 53000001
*     4 DECOPRD  BIT(1),                 /* TYPE OF OPERATION - 0 IS    53100001
*                                           WRITE, 1 IS READ         */ 53200001
*     4 DECSRKEY BIT(1),                 /* TYPE OF SEARCH ARGUMENT     53300001
*                                           - 0 IS ID,  1 IS KEY     */ 53400002
*     4 DECWRADD BIT(1),                 /* ADD OPTION OF WRITE         53500001
*                                           OPERATION                */ 53600001
*     4 DECRSV35 BIT(1),                 /* RESERVED                 */ 53700001
*   2 *           FIXED(15),             /* DECLNGTH - LENGTH OF        53800001
*                                           DATA                     */ 53900001
*   2 *           PTR(31),               /* DECDCBAD - ADDRESS OF       54000001
*                                           DCB TO WHICH THIS I/O       54100001
*                                           REQUEST IS RELATED       */ 54200001
*   2 *           PTR(31),               /* DECAREA - ADDRESS OF THE    54300002
*                                           DATA                     */ 54400001
*   2 *           PTR(31),               /* DECIOBPT - ADDRESS OF THE   54500002
*                                           IOB                      */ 54600001
*   2 DECKYADR    PTR(31),               /* ADDRESS OF THE KEY       */ 54700002
*   2 DECRECPT    PTR(31),               /* ADDRESS OF THE BLOCK        54800002
*                                           REFERENCE FIELD          */ 54900001
*   2 DECNA       PTR(31),               /* SAME AS DECNAA BELOW     */ 55000001
*    3 DECRSV36    CHAR(1),              /* RESERVED                 */ 55100001
*    3 DECNAA      PTR(24);              /* ADDRESS OF THE NEXT         55200002
*                                           ADDRESS FEEDBACK FIELD.     55300002
*                                           PRESENT ONLY IF R OR RU     55400002
*                                           IS CODED IN READ MACRO.  */ 55500002
*                                                                       55600001
*                                                                       55700001
*/* **************************************************************** */ 55800001
*/*            DATA EVENT CONTROL BLOCK FOR QTAM                     */ 55900001
*/* **************************************************************** */ 56000001
*                                                                       56100001
*DECLARE 1  DECBS03                                                     56200001
*      BASED(DECBPT) BDY(WORD),                                         56300001
*   2 LINEDECB    CHAR(4) BDY(WORD),     /* ALWAYS ZERO              */ 56400001
*   2 DECRSV37    CHAR(1),               /* RESERVED                 */ 56500001
*   2 DECOPCOD    CHAR(1),               /* OPERATION CODE FOR          56600001
*                                           CURRENT SEGMENT          */ 56700001
*   2 *           FIXED(15),             /* DECLNGTH - LENGTH OF        56800001
*                                           INPUT AREA FOR INITIAL      56900001
*                                           READ                     */ 57000001
*   2 *           PTR(31),               /* DECDCBAD - ADDRESS OF       57100001
*                                           DCB                      */ 57200001
*   2 *           PTR(31),               /* DECAREA - STARTING          57300001
*                                           ADDRESS FOR DATA IN A       57400001
*                                           BUFFER                   */ 57500001
*   2 DECRSV38    CHAR(4) BDY(WORD),     /* RESERVED                 */ 57600001
*   2 DECCPOL     PTR(31),               /* SAME AS DECCPOLA BELOW   */ 57700001
*    3 DECNMMSG    PTR(8),               /* NUMBER OF MESSAGES          57800001
*                                           RECEIVED                 */ 57900001
*    3 DECCPOLA    PTR(24),              /* ADDRESS OF CURRENTLY        58000001
*                                           ACTIVE ENTRY IN POLLING     58100001
*                                           LIST                     */ 58200001
*   2 DECRSV39    CHAR(1),               /* RESERVED                 */ 58300001
*   2 DECUCBDX    PTR(8),                /* INDEX TO UCB ADDRESS IN     58400001
*                                           DEB                      */ 58500001
*   2 DECRSV40    CHAR(2) BDY(WORD,3),   /* RESERVED                 */ 58600001
*   2 DECRSV41    CHAR(4) BDY(WORD),     /* RESERVED                 */ 58700001
*   2 DECADRCH    PTR(31),               /* ADDRESS OF ADDRESSING       58800001
*                                           CHARACTERS IN TERMINAL      58900001
*                                           ENTRY                    */ 59000001
*   2 *           PTR(31),               /* DECPOLPT - ADDRESS OF       59100001
*                                           POLLING LIST             */ 59150001
*    3 DECRSV42    CHAR(1),              /* RESERVED                 */ 59200001
*    3 *           PTR(24);              /* DECPOLPA - ADDRESS OF       59300001
*                                           POLLING LIST             */ 59400001
*                                                                       59500001
*                                                                       59600001
*/* **************************************************************** */ 59700001
*/*            DATA EVENT CONTROL BLOCK FOR BTAM                     */ 59800001
*/* **************************************************************** */ 59900001
*                                                                       60000001
*DECLARE 1  DECBS04                                                     60100001
*      BASED(DECBPT) BDY(WORD),                                         60200001
*   2 *           CHAR(4) BDY(WORD),     /* DECSDECB - EVENT CONTROL    60300001
*                                           BLOCK                    */ 60400001
*   2 *           CHAR(2),               /* DECTYPE - PROGRAMMING       60500001
*                                           INDICATORS               */ 60550001
*    3 *           CHAR(1),              /* DECTYPE1 - FIRST BYTE OF    60600001
*                                           DECTYPE                  */ 60700001
*     4 DECRDAPL BIT(1),                 /* READ, USING AUTOPOLL     */ 60800001
*     4 DECRSV43 BIT(1),                 /* RESERVED                 */ 60900001
*     4 DECRSV44 BIT(1),                 /* RESERVED                 */ 60950001
*     4 DECRSV45 BIT(1),                 /* RESERVED                 */ 61000001
*     4 DECRSV46 BIT(1),                 /* RESERVED                 */ 61050001
*     4 DECSTRME BIT(1),                 /* 'S' CODED FOR TERMINAL      61300001
*                                           ENTRY                    */ 61400001
*     4 DECSAREA BIT(1),                 /* 'S' CODED FOR AREA       */ 61500001
*     4 DECSLNTH BIT(1),                 /* 'S' CODED FOR LENGTH     */ 61600001
*    3 *           CHAR(1),              /* DECTYPE2 - COMMAND          61700002
*                                           CODE                     */ 61800001
*   2 *           FIXED(15),             /* DECLNGTH - LENGTH OF        61900001
*                                           BUFFER OR MESSAGE AREA   */ 62000001
*   2 *           PTR(31),               /* DECDCBAD - ADDRESS OF       62100001
*                                           ASSOCIATED DCB           */ 62150001
*    3 DECBUFCT    PTR(8),               /* CONTAINS A RUNNING COUNT    62400001
*                                           OF BUFFERS OBTAINED BY      62500001
*                                           BTAM FOR THE CURRENT READ   62600002
*                                           OPERATION.  (DYNAMIC        62700001
*                                           BUFFERING ONLY.)  USE       62800001
*                                           DIFFERS DURING BSC AND      62900001
*                                           2760 ONLINE TEST.        */ 63000002
*     4 DECONLTT    CHAR(1),             /* FLAG BYTE FOR BSC AND       63050001
*                                           2760 ONLINE TEST         */ 63060001
*      5 DECONLTS BIT(1),                /* IF ZERO, ONLINE TEST        63100001
*                                           REQUESTED BY RFT MESSAGE    63200001
*                                           (BSC).  IF ONE, ONLINE      63300001
*                                           TEST INITIATED BY ONLTST    63400001
*                                           MACRO INSTRUCTION (BSC). */ 63600001
*      5 DECRCVMS BIT(1),                /* IF ZERO, SENDING TEST       63700001
*                                           MESSAGES (BSC).  IF ONE,    63800001
*                                           RECEIVING TEST MESSAGES     63900001
*                                           (BSC) OR TYPE 11 ONLINE     64000001
*                                           TEST FOR 2760 OPTICAL       64100001
*                                           IMAGE UNIT.              */ 64200001
*      5 DECRSV47 BIT(1),                /* RESERVED                 */ 64300001
*      5 DECRSV48 BIT(1),                /* RESERVED                 */ 64350001
*      5 DECRSV49 BIT(1),                /* RESERVED                 */ 64400001
*      5 DECRSV50 BIT(1),                /* RESERVED                 */ 64450001
*      5 DECRSV51 BIT(1),                /* RESERVED                 */ 64500001
*      5 DECRSV52 BIT(1),                /* RESERVED                 */ 64550001
*    3 DECDCBAA    PTR(24),              /* ADDRESS OF ASSOCIATED       64900001
*                                           DCB                      */ 65000001
*   2 *           PTR(31),               /* DECAREA - ADDRESS OF        65100001
*                                           BUFFER OR MESSAGE AREA   */ 65200001
*   2 DECSENS0    CHAR(1),               /* SENSE INFORMATION        */ 65300001
*   2 DECSENS1    CHAR(1),               /* RESERVED                 */ 65400001
*   2 DECCOUNT    FIXED(15),             /* RESIDUAL COUNT FROM CSW     65500001
*                                           FOR LAST CCW EXECUTED    */ 65600001
*   2 DECENTRY    PTR(31),               /* ADDRESS OF THE TERMINAL     65700002
*                                           LIST                     */ 65750002
*    3 DECCMCOD    CHAR(1),              /* COMMAND FOR WHICH THE       65800002
*                                           ERROR OCCURRED           */ 65900002
*    3 DECENTRA    PTR(24),              /* ADDRESS OF THE TERMINAL     66000002
*                                           LIST                     */ 66050002
*   2 DECFLAGS    CHAR(1),               /* OPERATION STATUS         */ 66100001
*    3 DECWACK  BIT(2),                  /* WACK WAS RECEIVED (BSC)  */ 66150001
*     4 DECERRMS BIT(1),                 /* ERROR STATUS MESSAGE WAS    66200001
*                                           RECEIVED (BSC).  BIT 1 IS   66300002
*                                           OFF.                     */ 66400001
*     4 DECDIFAC BIT(1),                 /* ACKNOWLEDGMENT OTHER        66500001
*                                           THAN ACK-0 OR ACK-1         66600001
*                                           RECEIVED (BSC)           */ 66700001
*    3 DECALTAC BIT(1),                  /* ACKNOWLEDGMENT              66800001
*                                           ALTERNATION INCORRECT    */ 66900001
*    3 DECBADID BIT(1),                  /* FOR TWX 33/35 STATION       67000001
*                                           AND BSC STATION,            67100001
*                                           INCORRECT ID RECEIVED.      67200001
*                                           FOR AUTOPOLL, INDEX         67300001
*                                           BYTE RECEIVED DOES NOT      67400001
*                                           MATCH AN ACTIVE ONE.        67500001
*                                           FOR BSC NONSWITCHED         67600001
*                                           POINT-TO-POINT LINE,        67700001
*                                           CONTENTION OCCURRED. FOR    67800001
*                                           WTTA, CONTENTION            67900001
*                                           OCCURRED OR INCORRECT       68000001
*                                           ID RECEIVED.             */ 68100001
*    3 DECNOBUF BIT(1),                  /* FOR READ, DYNAMIC           68200001
*                                           BUFFERING, NO BUFFER        68300001
*                                           WAS AVAILABLE. (MESSAGE     68400001
*                                           LOST)                    */ 68500001
*    3 DECNEGRP BIT(1),                  /* FOR OPENLST, POLLING,       68600001
*                                           NEGATIVE RESPONSE TO        68700001
*                                           POLLING RECEIVED.  FOR      68800001
*                                           WRAPLST, ALL ENTRIES        68900001
*                                           ARE INACTIVE.  FOR          69000001
*                                           ADDRESSING, NEGATIVE        69100001
*                                           RESPONSE TO ADDRESSING      69200001
*                                           RECEIVED.  FOR WTTA, LAST   69300001
*                                           MESSAGE RECEIVED ENDED      69400001
*                                           WITH EOT OR TIME-OUT.       69500001
*                                           FOR 2741, POWER IS OFF      69600001
*                                           OR OTHER INTERVENTION       69700001
*                                           REQUIRED CONDITION          69800001
*                                           EXISTS.                  */ 69900001
*    3 DECREVRS BIT(1),                  /* FOR WTTA, MESSAGE ENDED     70000001
*                                           WITH WRU SIGNAL.  FOR       70100001
*                                           BSC STATIONS, REVERSE       70200001
*                                           INTERRUPT (RVI) SEQUENCE    70300001
*                                           WAS RECEIVED (SEE ALSO      70400001
*                                           BIT 1).  FOR 2741, WRITE    70500001
*                                           OPERATION WAS ENDED BY      70600001
*                                           TERMINAL INTERRUPT.      */ 70700001
*     4 DECSSMSG BIT(1),                 /* A 3270 REMOTE SENSE/STATUS  70750001
*                                           MESSAGE WAS RECEIVED IF     70760001
*                                           THIS BIT IS ONE AND BIT 1   70770001
*                                           IS ZERO            ICB479*/ 70780001
*    3 DECSTXNQ BIT(1),                  /* FOR WTTA, CONTENTION        70800001
*                                           CONDITION WAS               70900001
*                                           ENCOUNTERED.  FOR BSC       71000001
*                                           STATIONS, STX ENQ           71100001
*                                           SEQUENCE WAS RECEIVED.   */ 71200001
*   2 DECRLN      PTR(8),                /* RELATIVE LINE NUMBER     */ 71300001
*   2 DECRESPN    CHAR(2),               /* FOR BSC OPERATIONS,         71400001
*                                           RESPONSE FROM A             71500001
*                                           TERMINAL TO ADDRESSING.     71600001
*                                           FOR STOP-START              71700001
*                                           OPERATIONS, BYTE 1 IS       71800001
*                                           RESPONSE FROM A             71900001
*                                           TERMINAL TO ADDRESSING      72000001
*                                           AND BYTE 2 IS VERTICAL      72100001
*                                           REDUNDANCY CHARACTER AND    72200001
*                                           LONGITUDINAL REDUNDANCY     72300001
*                                           CHARACTER  (VRC/LRC)        72400001
*                                           RESPONSE.                */ 72500001
*   2 DECTPCOD    CHAR(1),               /* TP OPERATION CODE        */ 72600001
*   2 DECERRST    CHAR(1),               /* I/O ERROR STATUS FLAGS   */ 72700001
*    3 DECSIO3  BIT(1),                  /* SIO RESULTED IN A           72800001
*                                           CONDITION CODE OF 3      */ 72900001
*    3 DECUNDEF BIT(1),                  /* UNDEFINED ERROR             73000001
*                                           CONDITION                */ 73100001
*    3 DECERPER BIT(1),                  /* AN ERROR CONDITION          73200001
*                                           OCCURRED DURING AN I/O      73300001
*                                           OPERATION INITIATED BY      73400001
*                                           ERROR RECOVERY ROUTINES  */ 73500002
*    3 DECDIAGN BIT(1),                  /* DIAGNOSTIC WRITE/READ       73600001
*                                           OPERATION ENDED BECAUSE     73700001
*                                           OF ERROR (2701 ONLY)     */ 73800001
*    3 DECDSABL BIT(1),                  /* DISABLE COMMAND ISSUED      73900001
*                                           TO SWITCHED LINE BY         74000001
*                                           ERROR RECOVERY ROUTINE      74100001
*                                           BECAUSE OF PERMANENT        74200001
*                                           ERROR ON THAT LINE       */ 74300001
*    3 DECRSV53 BIT(1),                  /* RESERVED                 */ 74400001
*    3 DECRSV54 BIT(1),                  /* RESERVED                 */ 74450001
*    3 DECRSV55 BIT(1),                  /* RESERVED                 */ 74500001
*   2 DECCSWST    CHAR(2),               /* STATUS BITS FROM CSW FOR    74700001
*                                           LAST CCW EXECUTED        */ 74800001
*   2 DECADRPT    PTR(31),               /* ADDRESS OF ADDRESSING       74900001
*                                           LIST ENTRY USED IN          75000001
*                                           PREVIOUS OPERATION       */ 75100001
*   2 DECPOLPT    PTR(31),               /* SAME AS DECPOLPA BELOW   */ 75200001
*    3 DECNDXPL    PTR(8),               /* FOR AUTOPOLL, INDEX TO      75300001
*                                           CURRENT ENTRY IN            75400001
*                                           POLLING LIST             */ 75500001
*    3 DECPOLPA    PTR(24),              /* FOR PROGRAMMED POLLING,     75600001
*                                           ADDRESS OF THE CURRENT      75700002
*                                           ENTRY IN THE POLLING        75800002
*                                           LIST.  FOR AUTOPOLL,        75900002
*                                           ADDRESS OF POLLING LIST.    76000002
*                                           FOR BSC ON-LINE TEST,       76100002
*                                           ADDRESS OF TEXT DATA.    */ 76200001
*                                                                       76300001
*/*            BSC EXTENSION                                         */ 76400001
*/*      FIELDS ARE PRESENT ONLY IF A SUBLIST IS CODED FOR THE       */ 76500001
*/*      AREA AND LENGTH OPERANDS OF THE READ OR WRITE MACRO         */ 76600001
*/*      INSTRUCTION THAT DEFINES THE DECB.                          */ 76700001
*                                                                       76800001
*   2 DECRSV56    CHAR(2),               /* RESERVED                 */ 76900001
*   2 DECWLNG     FIXED(15),             /* LENGTH, IN BYTES, OF        77000001
*                                           THE DATA AREA IN            77100002
*                                           LEADING-GRAPHICS AND        77200001
*                                           CONVERSATIONAL TYPE         77300001
*                                           OPERATIONS OR OF THE AREA   77400002
*                                           CONTAINING THE TONE         77500002
*                                           CHARACTERS IN READ          77600001
*                                           CONNECT WITH TONE (TCW)     77700001
*                                           OPERATIONS               */ 77800001
*   2 DECWAREA    PTR(31);               /* ADDRESS OF THE DATA AREA    77900002
*                                           IN LEADING-GRAPHICS AND     78000002
*                                           CONVERSATIONAL              78100001
*                                           OPERATIONS, OR OF THE       78200002
*                                           AREA CONTAINING THE TONE    78300002
*                                           CHARACTERS IN READ TCW      78400001
*                                           OPERATIONS               */ 78500001
./  ADD  SSI=32310037,NAME=IHADVCT
*%IF DVCIBASE = ''                      /* IF NO DVCTI BASE SPECIFIED*/ 00149902
*%THEN %DVCIBASE = 'BASED(CVTZDTAB)';   /* USE CVTZDTAB              */ 00249902
*%IF DVCTBASE = ''                      /* IF NO DVCT BASE SPECIFIED */ 00299902
*                                       /* USE UCBTYP TO INDEX DVCTI */ 00309902
*                                       /* AND USE CVTZDTAB + OFFSET */ 00319902
*%THEN %DVCTBASE = 'BASED(CVTZDTAB+DVCTIOFF(UCBTYP & DVCTYPMK))';       00349902
*%;/*                                                                   00399902
         MACRO                                                          00500002
         IHADVCT   &DSECT=YES                                           01000002
.* /* START OF SPECIFICATIONS ****                                      01050002
.*                                                                      01100002
.*01  MODULE-NAME = IHADVCT                                             01150002
.*                                                                      01250002
.*01  COPYRIGHT = NONE                                                  01300002
.*                                                                      01350002
.*01  STATUS = OS/VS2 RELEASE 2, LEVEL 0                                01400002
.*                                                                      01450002
.*01  CHANGE-ACTIVITY = NONE                                            01460002
.*                                                                      01470002
.*01  DESCRIPTIVE-NAME = DEVICE CHARACTERISTICS TABLE MAPPING           01480002
.*                                                                      01490002
.*01  FUNCTION = THIS TABLE DESCRIBES PHYSICAL ATTRIBUTES OF EACH DASD  01492002
.*    DEVICE WHICH HAS BEEN SYSGENED                                    01492402
.*                                                                      01494002
.*01  NOTES = THE TABLE IS POINTED TO BY CVTZDTAB.                      01496002
.*                                                                      01498002
.*01  MODULE-TYPE = MACRO                                               01579902
.*02    PROCESSOR = ASSEMBLER-370R                                      01581902
.*                                                                      01587902
.*02    MACRO-SIZE = 200 STATEMENTS                                     01588302
.*                                                                      01723102
.**** END OF SPECIFICATIONS ***/                                        01739802
* /* MACCOMP Y-2 SC1D0/SJD48                                         */ 01789802
* /* MACSTAT Y-2 73226/021160                                        */ 01839802
*/********************************************************************/ 01889802
*/*                 DEVICE CHARACTERISTICS TABLE                     */ 02000002
*/********************************************************************/ 02500002
*/*                                                                  */ 03510002
*/*         THIS TABLE MAY BE USED TO FIND THE CHARACTERISTICS       */ 05000002
*/*         OF DIRECT ACCESS DEVICES.  THE APPLICABLE DEVICES ARE    */ 05500002
*/*         THOSE CONTAINING UCBDACC IN UCBTBYT3 (SEE IEFUCBOB).     */ 06000002
*/*                                                                  */ 06010002
*/*         NOTE: DEVTYPE MAY BE USED TO EXTRACT INFORMATION         */ 06020002
*/*         FROM THIS TABLE.  ITS OUTPUT AREA IS IN A SLIGHTLY       */ 06030002
*/*         DIFFERENT FORMAT, AND IS MAPPED BY IHADVA.               */ 06040002
*/*                                                                  */ 06050002
*/*         THE TABLE IS COMPOSED OF AN INDEX FOLLOWED BY ONE        */ 06100002
*/*         ENTRY FOR EACH DASD DEVICE WHICH HAS BEEN SYSGENED       */ 06150002
*/*                                                                  */ 06160002
*/*         FOR ASSEMBLER USE, TWO SEPARATE DSECTS ARE PROVIDED.     */ 06170002
*/*         A USING ON DVCTI GIVES ADDRESSIBILITY TO THE INDEX,      */ 06180002
*/*         AND A USING ON DVCT GIVES ADDRESSIBILITY TO AN ENTRY.    */ 06190002
*/*         SPECIFYING DSECT=NO SUPPRESSES THE INDEX AND PROVIDES    */ 06192002
*/*         AN ENTRY DESCRIPTION WITHOUT A DSECT STATEMENT           */ 06194002
*/*                                                                  */ 06196002
*/*         FOR PLS USE, TWO STRUCTURES ARE PROVIDED. THEIR STORAGE  */ 06198002
*/*         ATTRIBUTES ARE CONTROLLED BY SETTING STRING MACRO        */ 06198102
*/*         VARIABLES AS FOLLOWS:                                    */ 06198202
*/*         STRUCTURE  MACRO-VAR       DEFAULT SETTING               */ 06198302
*/*         DVCTI      %DVCIBASE  'BASED(CVTZDTAB)'                  */ 06198802
*/*         DVCT       %DVCTBASE  'BASED(CVTZDTAB                    */ 06199202
*/*                                +DVCTIOFF(UCBTYP&DVCTYPMK))'      */ 06199602
*/*                                                                  */ 06199702
*/*         THE DEFAULT SETTINGS WILL PROVIDE ADDRESSIBILITY TO      */ 06199802
*/*         ALL FIELDS, BUT DEPEND ON CVT AND UCB ADDRESSIBILITY.    */ 06199902
*/*                                                                  */ 06200002
*/*               FORMAT OF EACH ENTRY                               */ 06250002
*/*         _____________________________________________            */ 06300002
*/*   0(00) |                     |                     |            */ 06350002
*/*         |       DVCCYL        |       DVCTRK        |            */ 06400002
*/*         |_____________________|_____________________|            */ 06450002
*/*   4(04) |                     |       DVCOVHD       |            */ 06460002
*/*         |       DVCTRKLN      | DVCOVNLB | DVCOVLB  |            */ 06470002
*/*         |_____________________|__________|__________|            */ 06480002
*/*   8(08) |          |          |                     |            */ 06490002
*/*         | DVCOVNK  | DVCFLAGS |       DVCTOL        |            */ 06492002
*/*         |__________|__________|_____________________|            */ 06494002
*/*  12(0C) |                     |______________________            */ 06496002
*/*         |       DVCALT        |                     |            */ 06498002
*/*         |_____________________|       DVCOVR0       |  RPS       */ 06498402
*/*         ______________________|_____________________|  ONLY      */ 06498802
*/*  16(10) |          |          |                        SECTION   */ 06499202
*/*         | DVCSECT  | DVCSECTD |                                  */ 06499602
*/*         |__________|__________|                                  */ 06499702
*/********************************************************************/ 06500002
*%/*                                                                    06550002
         AIF   ('&DSECT' EQ 'NO').NODSECT                               06600002
DVCTI    DSECT ,              INDEX TO DVCT                             07000002
*              THIS INDEX IS LOCATED FROM CVTZDTAB.                     07500002
*              THE PROPER ENTRY IS FOUND BY ADDING THE LOW ORDER        08000002
*              4 BITS OF UCBTYP TO THE ADDRESS IN CVTZDTAB.             08500002
DVCTYPMK EQU   X'0000000F'              TYPICAL USAGE:                  09000002
*              LA    RWRK,DVCTYPMK      MASK FOR UNIT TYPE NUMBER       09500002
*              N     RWRK,UCBTYP        PICK UP UNIT TYPE NUMBER        10000002
*              IC    RWRK,DVCTIOFF(RWRK)  PICK UP OFFSET                10500002
DVCTIOFF DS    AL1                      OFFSET TO DVCT ENTRY            11000002
*********************************************************************** 11500002
         SPACE 3                                                        12000002
DVCT     DSECT ,                        FORMAT OF DVCT ENTRY            12010002
*              THE ENTRY IS LOCATED BY ADDING DVCTIOFF TO CVTZDTAB      12020002
         AGO   .ENTRY                                                   12050002
.NODSECT ANOP                                                           12100002
DVCT     DS    0H                       FORMAT OF DVCT ENTRY            21500002
.ENTRY   ANOP                                                           21550002
*                                                                       22500002
DVCCYL   DS    H                        PHYS NO. CYL PER VOLUME         23000002
DVCTRK   DS    H                        NO. TRACKS PER CYLINDER         23500002
DVCTRKLN DS    H                        NO. OF BYTES PER TRACK          24000002
*                                                                       24500002
DVCOVHD  DS    0H                       BLOCK OVERHEAD IF DVC2BOV=1     25000002
*              USE FOLLOWING TWO CONSTANTS IF DVC2BOV=0                 25500002
DVCOVNLB DS    XL1                      OVERHEAD NOT LAST BLOCK         26000002
DVCOVLB  DS    XL1                      OVERHEAD LAST BLOCK             26500002
*                                                                       27000002
DVCOVNK  DS    XL1                      OVERHEAD DECREMENT NOT KEYED    27500002
*                                                                       28000002
DVCFLAGS DS    BL1                                                      28500002
DVC2BOV  EQU   X'08'                    IF 1, USE DVCOVHD               29000002
*                                       IF 0, USE DVCOVNLB,DVCOVLB      29500002
DVCFTOL  EQU   X'01'                    IF 1, APPLY TOLERANCE FACTOR    30000002
*                                                                       30500002
DVCTOL   DS    H                        TOLERANCE FACTOR                31000002
*              APPLY TOLERANCE FACTOR AS FOLLOWS:                       33500002
*              1. ADD BLOCKSIZE AND KEYLENGTH                           34000002
*              2. MULTIPLY BY DVCTOL                                    34500002
*              3. SHIFT RIGHT DVCTSHFT BITS                             35000002
*              4. ADD APPROPRIATE OVERHEADS                             35500002
DVCTSHFT EQU   9                        SHIFT AMT TO DIVIDE BY 512      36500002
*                                                                       37000002
DVCALT   DS    H                        NUMBER ALTERNATE TRKS/VOLUME    37500002
*                                                                       38000002
DVCENTLG EQU   *-DVCT                   BASIC SIZE OF DEVICE TABLE      38050002
*                                       ENTRY, NOT INCLUDING ADD'L      38100002
*                                       CHARACTERISTICS FOR RPS         38150002
**********************************************************************  38500002
*              THE FOLLOWING SECTION OF THE TABLE IS PRESENT         *  39000002
*              ONLY FOR RPS DEVICES--TEST UCBTBYT2 FOR UCB2OPT3      *  39500002
**********************************************************************  40000002
DVCRPS   DS    0CL4                     RPS SECTION                     40500002
DVCOVR0  DS    H                        OVERHEAD BYTES FOR RECORD 0     41000002
DVCSECT  DS    XL1                      NUMBER SECTORS IN FULL TRACK    41500002
DVCSECTD DS    XL1                      NUMBER DATA SECTORS             42000002
*                                                                       43000002
*              END OF DVCT                                              43500002
         MEND                                                           44000002
**/;                                                                    44050002
*                                                                       44100002
* DCL  1 DVCTI DVCIBASE,                /* INDEX TO DVCT             */ 44150002
*        2 *   PTR(8),                  /* OFFSET TO ENTRY 0         */ 44160002
*        2 DVCTIOFF (*) PTR(8);         /* OFFSETS TO ENTRIES 1 TO N */ 44200002
*/*                                                                  */ 44250002
*/*         USE THE LAST 4 BITS OF UCBTYP TO INDEX DVCTIOFF.         */ 44300002
*/*         DVCTYPMK MAY BE USED AS A MASK TO 'AND' WITH UCBTYP.     */ 44320002
*/*         THE INDEX ENTRIES ARE OFFSETS RELATIVE TO CVTZDTAB.      */ 44350002
*/********************************************************************/ 44450002
*                                                                       44460002
* DCL  1 DVCT DVCTBASE,                 /* FORMAT OF DVCT ENTRY      */ 44500002
*        2 DVCCYL FIXED(15) UNSIGNED,   /* PHYS NO. CYL PER VOLUME   */ 44550002
*        2 DVCTRK FIXED(15) UNSIGNED,   /* NO. TRACKS PER CYLINDER   */ 44600002
*        2 DVCTRKLN FIXED(15) UNSIGNED, /* NO. BYTES PER TRACK       */ 44650002
*                                                                       44700002
*        2 DVCOVHD FIXED(15),           /* BLOCK OVERHD IF DVC2BOV=1 */ 44750002
*          /* USE THE FOLLOWING TWO CONSTANTS IF DVC2BOV=0           */ 44850002
*          3 DVCOVNLB FIXED(8),         /* OVERHEAD NOT LAST BLOCK   */ 44900002
*          3 DVCOVLB FIXED(8),          /* OVERHEAD FOR LAST BLOCK   */ 44950002
*                                                                       45000002
*        2 DVCOVNK FIXED(8),            /* OVERHD DECREMENT NOT KEYED*/ 45050002
*                                                                       45100002
*        2 DVCFLAGS BIT(8),                                             45150002
*          3 * BIT(4),                  /* RESERVED                  */ 45160002
*          3 DVC2BOV BIT(1),            /* IF 1, USE DVCOVHD         */ 45200002
*                                       /* IF 0, USE DVCOVNLB,OVLB   */ 45250002
*          3 * BIT(2),                  /* RESERVED                  */ 45260002
*          3 DVCFTOL BIT(1),            /* IF 1, APPLY TOLER FACTOR  */ 45300002
*                                                                       45350002
*        2 DVCTOL FIXED(15) UNSIGNED,   /* TOLERANCE FACTOR          */ 45400002
*/*         APPLY TOLERANCE AS FOLLOWS:                              */ 45450002
*/*         (BLOCKSIZE+KEYLENGTH) * DVCTOL / DVCTSHFT + OVERHEADS    */ 45500002
*                                                                       45510002
*        2 DVCALT FIXED(15),            /* NO. OF ALTERNATE TRACKS   */ 45550002
*/********************************************************************/ 45552002
*/*         THE FOLLOWING SETION OF THE TABLE IS PRESENT             */ 45560002
*/*         ONLY FOR RPS DEVICES (UCB2OPT3=1)                        */ 45570002
*/********************************************************************/ 45580002
*        2 DVCRPS,                      /*RPS SECTION                */ 45600002
*          3 DVCOVR0 FIXED(15),         /* OVERHD BYTES FOR RECORD 0 */ 45650002
*          3 DVCSECT FIXED(8),          /* NO. SECTORS IN FULL TRACK */ 45700002
*          3 DVCSECTD FIXED(8);         /* NO. OF DATA SECTORS       */ 45750002
*/********************************************************************/ 45760002
*                                                                       45800002
* DCL    DVCTSHFT FIXED(15) CONSTANT(512); /* DENOMINATOR FOR DVCTOL */ 45850002
*/*         THE FOLLOWING CONSTANT CAN BE USED TO MASK OUT ALL BUT   */ 45900002
*/*         THE DVCTIOFF SUBSCRIPT FROM THE UCB WORD UCBTYP          */ 45910002
* DCL    DVCTYPMK BIT(32) CONSTANT('0000000F'X); /* UCBTYP MASK      */ 46000002
*                                                                       46050002
*/*               END OF DVCT                                        */ 46100002
./  ADD  SSI=31321004,NAME=IHAEXLST
*%GOTO EXL001;                          /*                     Y02072*/ 00060002
         MACRO                                                          00070002
         IHAEXLST                                                       00100002
.* /* START OF SPECIFICATIONS ****                                      00102002
.*                                                                      00104002
.*01  MODULE-NAME = IHAEXLST                                            00106002
.*                                                                      00108002
.*01  COPYRIGHT = NONE                                                  00108402
.*                                                                      00108802
.*01  STATUS = VS2 RELEASE 2 LEVEL 2                                    00109202
.*                                                                      00109602
.*01  DESCRIPTIVE-NAME = DCB EXIT LIST                                  00109702
.*                                                                      00109802
.*01  FUNCTION = USED TO DESCRIBE THE FORMAT OF THE DCB EXIT LIST.      00109902
.*                                                                      00123202
.*01  MODULE-TYPE = MACRO                                               00133202
.*                                                                      00135202
.*02    MACRO-SIZE = NA FOR MAPPING MACRO                               00135602
.*                                                                      00136002
.*02    PARAMETER-RECEIVED = NONE                                       00136402
.*                                                                      00145002
.*01  TABLES = NONE                                                     00145402
.*                                                                      00145502
.*01  INNER-MACROS = NONE                                               00159102
.*                                                                      00169102
.*01  SYSTEM-MACROS = NONE                                              00171102
.*                                                                      00171502
.*01  CHANGE-ACTIVITY = SEE BELOW                                       00171902
.*    VS2 REL 2                                                         00172302
.*       MACRO CREATED                                                  00172702
.*                                                                      00177202
.*                                                                      00179202
.**** END OF SPECIFICATIONS ***/                                        00181202
*%EXL001:;                              /*                     Y02072*/ 00181902
* /* MACCOMP Y-2 SC1D0/SJD48            */                              00183902
* /* MACSTAT Y-2 73124/021160           */                              00185902
*%GOTO EXL002;                          /*                     Y02072*/ 00186302
*                                                                       00236302
* THIS DSECT DEFINES THE VARIOUS TYPES OF EXIT LIST ENTRIES             00286302
* AND THE FORMAT OF EACH FULL WORD ENTRY OF A VARIABLE LENGTH           00336302
* EXIT LIST.                                                            00348302
*                                                                       00348702
* DESCRIPTIVE LAYOUT                                                    00349102
*      +0           +1                                                  00349502
*       ___________________________________________________             00349902
*       |            |                                    |             00366602
*       | EXLIST     | ADDRESS OF EXIT                    |             00376602
*       | CODE       |                                    |             00378602
*       |____________|____________________________________|             00380602
*                                                                       00382602
         SPACE 2                                                        00383002
EXLST    DSECT                                                          00383302
EXLENTRA DS    0A                       SAME AS EXLENTRB BELOW          00400002
EXLCODES DS    B                        VARIOUS EXLST CODES             00450002
EXLINACT EQU   X'00'                    INACTIVE ENTRY                  00500002
EXLIHLAB EQU   X'01'                    INPUT HEADER LABEL              00550002
EXLOHLAB EQU   X'02'                    OUTPUT HEADER LABEL             00600002
EXLITLAB EQU   X'03'                    INPUT TRAILER LABEL             00650002
EXLOTLAB EQU   X'04'                    OUTPUT TRAILER LABEL            00700002
EXLDCBEX EQU   X'05'                    DCB EXIT                        00750002
EXLEOVEX EQU   X'06'                    END OF VOLUME EXIT              00800002
EXLUSTOT EQU   X'0A'                    USER''S TOTALING AREA ADDRESS   00850002
EXLBLCNT EQU   X'0B'                    UNEQUAL BLOCK COUNT EXIT        00900002
EXLDFRIT EQU   X'0C'                    DEFER PROCESSING OF USER INPUT  00950002
*                                         TRAILER LABEL                 01000002
EXLDFNIT EQU   X'0D'                    DEFER PROCESSING A NONSTANDARD  01050002
*                                         INPUT TRAILER LABEL           01100002
EXLFCBIM EQU   X'10'                    DEFINE AN FCB IMAGE             01150002
EXLDCBAB EQU   X'11'                    ABEND EXIT                      01200002
EXLLASTE EQU   X'80'                    LAST ENTRY IN LIST              01250002
EXLENTRB DS    AL3                      ADDRESS OF EXIT                 01300002
EXLLENTH EQU   *-EXLENTRA               LENGTH OF DSECT (ONE ENTRY)     01350002
         MEND                                                           01400002
*%EXL002:;                              /*                     Y02072*/ 01450002
*/*                                                                  */ 01460002
*/*THIS STRUCTURE DESCRIBES THE VARIOUS TYPES OF EXIT LIST ENTRIES   */ 01470002
*/*AND THE FORMAT OF EACH FULL WORK ENTRY OF A VARIABLE LENGTH       */ 01480002
*/*EXIT LIST.                                                        */ 01492002
*/*                                                                  */ 01494002
*/*DESCRIPTIVE LAYOUT                                                */ 01496002
*/*    +0           +1                                               */ 01498002
*/*     ___________________________________________________          */ 01498402
*/*     |            |                                    |          */ 01498802
*/*     | EXLIST     | ADDRESS OF EXIT                    |          */ 01499202
*/*     | CODE       |                                    |          */ 01499602
*/*     |____________|____________________________________|          */ 01499702
*/*                                                                  */ 01499802
*/*                                                                  */ 01499902
*DCL 1 EXLST PTR(32) BASED,             /*                     Y02072*/ 01500002
*      2 EXLENTRA PTR(31),              /*SAME AS EXLENTRB     Y02072*/ 01510002
*        3 EXLCODES FIXED(8),           /*EXIT LIST CODES      Y02072*/ 01550002
*           4 EXLLAST BIT(1),           /*BIT TO TST LAST ENTRYY02072*/ 01550402
*        3 EXLENTRB PTR(24);            /*ADDRESS OF EXIT      Y02072*/ 01552002
*/*                                                            Y02072*/ 01554002
*/* THE FOLLOWING CONSTANTS REFER TO THE LABEL EXLCODES        Y02072*/ 01560002
*/*                                                            Y02072*/ 01570002
*DCL   EXLINACT FIXED(8) CONSTANT(0), /*INACTVE ENTRY          Y02072*/ 01600002
*      EXLIHLAB FIXED(8) CONSTANT(1), /*INPUT HEAD LBL         Y02072*/ 01650002
*      EXLOHLAB FIXED(8) CONSTANT(2), /*OUTPT HEAD LBL         Y02072*/ 01700002
*      EXLITLAB FIXED(8) CONSTANT(3), /*IN TRAIL LBL           Y02072*/ 01750002
*      EXLOTLAB FIXED(8) CONSTANT(4), /*OUT TRAIL LBL          Y02072*/ 01800002
*      EXLDCBEX FIXED(8) CONSTANT(5), /*DCB EXIT               Y02072*/ 01850002
*      EXLEOVEX FIXED(8) CONSTANT(6), /*EOV EXIT               Y02072*/ 01900002
*      EXLUSTOT FIXED(8) CONSTANT(10), /*USER TOTALING         Y02072*/ 01950002
*      EXLBLCNT FIXED(8) CONSTANT(11), /*UNEQUAL BLK CNT       Y02072*/ 02000002
*      EXLDFRIT FIXED(8) CONSTANT(12), /*DEFER USR INPUT       Y02072*/ 02050002
*                                      /*TRAILER LABEL PROCESS Y02072*/ 02060002
*      EXLDFNIT FIXED(8) CONSTANT(13), /*DEFER PROCESS         Y02072*/ 02100002
*                                      /*NONSTANDARD INPUT     Y02072*/ 02110002
*                                      /*TRAILER LABEL         Y02072*/ 02120002
*      EXLFCBIM FIXED(8) CONSTANT(16), /*DEFINE FCB IM         Y02072*/ 02150002
*      EXLDCBAB FIXED(8) CONSTANT(17), /*ABEND EXIT            Y02072*/ 02200002
*      EXLLASTE FIXED(8) CONSTANT(128), /*LAST ENTRY           Y02072*/ 02250002
*      EXLLENTH FIXED(8) CONSTANT(4); /*LEN OF EXLST ENTRY     Y02072*/ 02350002
./  ADD  SSI=40581041,NAME=IHAFCAUD
*%GOTO FCAPLS1;                                                         00050002
         MACRO                                                          00100002
         IHAFCAUD  &ORG=NO                                              00150002
*/*                                                                  */ 00200002
*/*THE FOLLOWING DEFINES BITS SET BY THE OPEN AND CLOSE EXECUTORS FOR*/ 00250002
*/*SAM/PAM/DAM DATA SETS. THE BITS ARE SET IN THE AUDIT TRAILS IN THE*/ 00300002
*/*OPEN AND CLOSE WORKAREAS. ORGS FOR THE LABELS DXATEXC1 AND        */ 00350002
*/*DXATEXC2 (LABELS EXPANDED BY IECDSECT TO MAP AGAINST AUDIT TRAILS)*/ 00400002
*/*WILL BE EXPANDED IF THE KEYWORD 'ORG=YES' IS CODED ON THE MACRO   */ 00450002
*/*CALL. THE DEFAULT IS 'ORG=NO'.                                    */ 00500002
*/*                                                                  */ 00550002
*/*THE FOLLOWING BIT DEFINITIONS INDICATE WHAT RESOURCES WERE        */ 00600002
*/*ACQUIRED BY THE OPEN EXECUTORS.                                   */ 00650002
*/*                                                                  */ 00700002
         AIF   ('&ORG' NE 'YES').NORG1                                  00750002
         ORG   DXATEXC1                                                 00800002
.NORG1   ANOP                                                           00850002
FCAOPEN  DS    0F                       OPEN AUDIT TRAIL                00900002
FCAOPEN1 DS    X                        FIRST BYTE OF AUDIT TRAIL       00910002
FCAOCOPY EQU   X'80'                    INDIC DCB HAS BEEN REFRESHED    00950002
*                                         (SAM AND BDAM)                00960002
FCAORDX  EQU   X'40'                    INDIC READX LIST HAS BEEN       01000002
*                                         GETMAINED (BDAM)              01050002
FCAOBUF  EQU   X'20'                    INDIC BUFFERS GETMAINED         01100002
*                                         (SAM AND BDAM)                01110002
FCAOUSL  EQU   X'10'                    INDIC UNSCHEDULED LIST          01150002
*                                         BUILT (BDAM)                  01200002
FCAOSWA  EQU   X'08'                    INDIC SEGMENT WORKAREA          01250002
*                                         GETMAINED (SAM AND BDAM)      01300002
FCAOIOB  EQU   X'04'                    INDIC IOBS GETMAINED (SAM)      01350002
FCAORECA EQU   X'02'                    INDIC RECORD AREA BUILT (SAM)   01400002
FCAOXTND EQU   X'01'                    INDIC BUF CNTRL BLK EXTENDED    01450002
*                                         (SAM)                         01460002
         AIF   ('&ORG' NE 'YES').NORG1A                                 01462002
         ORG   DXATEXC1+1                                               01470002
.NORG1A  ANOP                                                           01472002
FCAOPEN2 DS    X                        2ND BYTE OF OPEN AUDIT TRAIL    01480002
FCAOIMGL EQU   X'80'                    INDIC IMAGE LIB OPENED (SAM)    01490002
FCAOUCSL EQU   X'40'                    INDIC UCS IMAGE LOADED (SAM)    01492002
FCAOFCBL EQU   X'20'                    INDIC FCB IMAGE LOADED (SAM)    01494002
FCAOIOBC EQU   X'10'                    INDIC IOB CONSTRUCTION          01496002
*                                         COMPLETED (SAM)               01498002
*/*                                                                  */ 01500002
*/*THE FOLLOWING BIT DEFINITIONS INDICATE THE VARIOUS RESOURCES      */ 01550002
*/*THAT WERE CLEANED UP BY FORCE CLOSE.                              */ 01600002
*/*                                                                  */ 01650002
         AIF   ('&ORG' NE 'YES').NORG2                                  01700002
         ORG   DXATEXC2                                                 01750002
.NORG2   ANOP                                                           01800002
FCACLOSE DS    0F                       CLOSE AUDIT TRAIL               01810002
FCACLOS1 DS    X                        FIRST BYTE OF CLOSE AUDIT       01850002
*                                         TRAIL                         01900002
FCACFORC EQU   X'80'                    INDIC FORCE CLOSE IN CNTRL      01950002
*                                         (SAM AND BDAM)                01960002
FCACRECA EQU   X'40'                    INDIC RECORD AREA FREED         02000002
*                                         (SAM)                         02010002
FCACBUFC EQU   X'20'                    INDIC BUFS FREED FOR CONCAT     02050002
*                                         OF UNLIKE ATTR (SAM)          02100002
FCACFUF  EQU   X'20'                    INDIC BUFS FREED (BDAM)         02110002
FCACBUFP EQU   X'10'                    INDIC BUFS RETURNED TO POOL     02150002
*                                         (SAM)                         02160002
FCACIOB  EQU   X'08'                    INDIC IOBS FREED (SAM)          02200002
FCACSWA  EQU   X'04'                    INDIC SWA FREED (SAM AND BDAM)  02250002
FCACFCR  EQU   X'02'                    INDIC FCR FREED (SAM)           02300002
FCACR01  EQU   X'01'                    RESERVED                        02350002
         AIF   ('&ORG' NE 'YES').NORG3                                  02400002
         ORG   DXATEXC2+1                                               02450002
.NORG3   ANOP                                                           02500002
FCACLOS2 DS    X                        SECOND BYTE OF CLOSE AUDIT      02550002
*                                         TRAIL                         02600002
FCACR02  EQU   X'80'                    RESERVED                        02650002
FCACR03  EQU   X'40'                    RESERVED                        02700002
FCACPURG EQU   X'20'                    INDIC PURGE COMPLETD (SAM/BDAM) 02750002
FCACDEQ  EQU   X'10'                    INDIC I/O REQ DEQUED (BDAM)     02800002
FCACIOBP EQU   X'08'                    IOBS IN IOB POOL IF REQD (BDAM) 02810002
FCACIOBX EQU   X'04'                    IOBS ON UNPOSTED QUEUE AND THE  02820002
*                                          READX LIST IF REQD (BDAM)    02830002
FCACIOBU EQU   X'02'                    IOBS ON USL, THE USL, PLUS      02840002
*                                          THE BCB IF REQD (BDAM)       02842002
FCACIOBB EQU   X'01'                    ALL IOBS ON BUFFER QUEUE        02844002
*                                          PLUS THE BCB IF REQD (BDAM)  02846002
         AIF   ('&ORG' NE 'YES').NORG4                                  02848002
         ORG   DXATEXC2+2                                               02848402
.NORG4   ANOP                                                           02848802
FCACLOS3 DS    X                        THIRD BYTE OF CLOSE AUDIT       02849202
*                                          TRAIL                        02849602
FCACR04  EQU   X'80'                    RESERVED                        02859602
FCACR05  EQU   X'40'                    RESERVED                        02869602
FCACR06  EQU   X'20'                    RESERVED                        02871602
FCACDELE EQU   X'10'                    INDICATE MSG CSECT DELETED      02878602
*                                         (SAM)                         02879002
FCACUSL  EQU   X'08'                    INDICATE USL FREED (BDAM)       02880602
FCACRDX  EQU   X'04'                    INDIC READX LIST FREED (BDAM)   02882602
         MEND                                                           02883302
*%FCAPLS1:;                                                             02900002
*/*                                                                  */ 03000002
*/*THE FOLLOWING DEFINES BITS SET BY THE OPEN AND CLOSE EXECUTORS FOR*/ 03050002
*/*SAM/PAM/DAM DATA SETS. THE BITS ARE SET IN THE AUDIT TRAILS IN THE*/ 03100002
*/*OPEN AND CLOSE WORKAREAS. THE MACRO IECDSECT MUST BE INCLUDED FOR */ 03150002
*/*PLS.                                                              */ 03200002
*/*                                                                  */ 03350002
*/*THE FOLLOWING BIT DEFINITIONS INDICATE WHAT RESOURCES WERE        */ 03400002
*/*ACQUIRED BY THE OPEN EXECUTORS.                                   */ 03450002
*/*                                                                  */ 03500002
*DCL  1  FCAOPEN DEF(DXATEXC1) BIT(32),                                 03550002
*        2 FCAOPEN1 BIT(8),             /*FIRST BYTE OF AUDIT TRAIL  */ 03560002
*          3 FCAOCOPY BIT(1),           /*DCB HAS BEEN REFRESHED     */ 03600002
*                                       /* (SAM AND BDAM)            */ 03610002
*          3 FCAORDX BIT(1),            /*READX LIST HAS BEEN BUILT  */ 03650002
*                                       /* (BDAM)                    */ 03660002
*          3 FCAOBUF BIT(1),            /*BUFFERS BUILT              */ 03700002
*                                       /* (SAM AND BDAM)            */ 03710002
*          3 FCAOUSL BIT(1),            /*UCSCHED LIST BUILT (BDAM)  */ 03750002
*          3 FCAOSWA BIT(1),            /*SEG WORKAREA GOTTEN        */ 03800002
*                                       /* (SAM AND BDAM)            */ 03810002
*          3 FCAOIOB BIT(1),            /*IOBS GETMAINED (SAM)       */ 03850002
*          3 FCAORECA BIT(1),           /*RECORD AREA GOTTEN (SAM)   */ 03900002
*          3 FCAOXTND BIT(1),           /*BUF CNTRL BLK EXTENDED     */ 03950002
*                                       /* (SAM)                     */ 03960002
*        2 FCAOPEN2 BIT(8),             /*SECOND BYTE OF AUDIT TRAIL */ 03962002
*          3 FCAOIMGL BIT(1),           /*INDIC IMAGELIB OPENED (SAM)*/ 03970002
*          3 FCAOUCSL BIT(1),           /*INDIC UCS IMG LOADED (SAM) */ 03980002
*          3 FCAOFCBL BIT(1),           /*INDIC FCB IMG LOADED (SAM) */ 03990002
*          3 FCAOIOBC BIT(1);           /*INDIC IOB CONSTRUCTION        03992002
*                                          COMPLETED (SAM)           */ 03994002
*/*                                                                  */ 04000002
*/*THE FOLLOWING BIT DEFINITIONS INDICATE THE VARIOUS RESOURCES      */ 04050002
*/*THAT WERE CLEANED UP BY FORCE CLOSE.                              */ 04100002
*/*                                                                  */ 04150002
*DCL  1  FCACLOSE DEF(DXATEXC2) BIT(32),                                04200002
*        2 FCACLOS1 BIT(8),             /*FIRST BYTE OF CLOSE        */ 04250002
*                                       /*  AUDIT TRAIL              */ 04300002
*          3 FCACFORC BIT(1),           /*FOR CLOSE IN CONTROL       */ 04350002
*                                       /* (SAM AND BDAM)            */ 04360002
*          3 FCACRECA BIT(1),           /*RECORD AREA FREED (SAM)    */ 04400002
*          3 FCACBUFC BIT(1),           /*BUFS FREED FOR CONCAT      */ 04450002
*                                       /* OF UNLIKE ATTR (SAM)      */ 04500002
*            4 FCACBUF BIT(1),          /*BUFS FREED (BDAM)          */ 04510002
*          3 FCACBUFP BIT(1),           /*BUFS RETURNED TO POOL (SAM)*/ 04550002
*          3 FCACIOB BIT(1),            /*IOBS FREED (SAM)           */ 04600002
*          3 FCACSWA BIT(1),            /*SEG WORKAREA FREED         */ 04650002
*                                       /* (SAM AND BDAM)            */ 04660002
*          3 FCACFCR BIT(1),            /*FCR FREED (SAM)            */ 04700002
*          3 * BIT(1),                  /*RESERVED                   */ 04750002
*        2 FCACLOS2 BIT(8),             /*SECOND BYTE OF CLOSE       */ 04800002
*                                       /* AUDIT TRAIL               */ 04850002
*          3 * BIT(1),                  /*RESERVED                   */ 04900002
*          3 * BIT(1),                  /*RESERVED                   */ 04950002
*          3 FCACPURG BIT(1),           /*PURGE COMPLETED (SAM/BDAM) */ 05000002
*          3 FCACDEQ BIT(1),            /*I/O REQ DEQUED (BDAM)      */ 05050002
*          3 FCACIOBP BIT(1),           /*IOBS IN IOB POOL IF        */ 05100002
*                                       /* REQUIRED (BDAM)           */ 05250002
*          3 FCACIOBX BIT(1),           /*IOBS ON UNPOSTED QUEUE AND */ 05300002
*                                       /* THE READX LIST IF REQD    */ 05350002
*                                       /* (BDAM)                    */ 05360002
*          3 FCACIOBU BIT(1),           /*IOBS ON USL, THE USL, PLUS */ 05400002
*                                       /* THE BCB (BDAM)            */ 05450002
*          3 FCACIOBB BIT(1),           /*ALL IOBS ON BUFFER QUEUE   */ 05500002
*                                       /* PLUS THE BCB (BDAM)       */ 05550002
*        2 FCACLOS3 BIT(8),             /*THIRD BYTE OF CLOSE        */ 05600002
*                                       /* AUDIT TRAIL               */ 05650002
*          3 * BIT(1),                  /*RESERVED                   */ 05700002
*          3 * BIT(1),                  /*RESERVED                   */ 05750002
*          3 * BIT(1),                  /*RESERVED                   */ 05800002
*          3 FCACDELE BIT(1),           /*INDIC MSG CSECT DELETED    */ 06000002
*                                       /* (SAM)                     */ 06050002
*          3 FCACUSL BIT(1),            /*USL FREED (BDAM)           */ 06100002
*          3 FCACRDX BIT(1);            /*READ X LIST FREED (BDAM)   */ 06150002
./  ADD  SSI=32540049,NAME=IHAFCBIM
*%;/*                                                                   00060002
         MACRO                                                          00070002
         IHAFCBIM &DSECT=YES,&LINES=0                                   00100002
.* /* START OF SPECIFICATIONS ****                                      00111002
.*                                                                      00112002
.*01  MODULE-NAME = IHAFCBIM                                            00113002
.*                                                                      00115002
.*01  COPYRIGHT = NONE                                                  00116002
.*                                                                      00117002
.*01  STATUS = VS2 RELEASE 2 LEVEL 2                                    00118002
.*                                                                      00119002
.*01  CHANGE-ACTIVITY = STANDARDS UPGRADE                               00120002
.*                                                                      00121002
.*01  DESCRIPTIVE-NAME = FORMS CONTROL BUFFER IMAGE                     00122002
.*                                                                      00123002
.*01  FUNCTION = USED IN PLACE OF CARRIAGE TAPE FOR CERTAIN PRINTERS    00124002
.*                                                                      00125002
.*01  MODULE-TYPE = MACRO                                               00138002
.*                                                                      00138802
.*02    MACRO-SIZE = 150 STATEMENTS                                     00138902
.*                                                                      00139202
.*02    PARAMETER-RECEIVED = DSECT                                      00139402
.*                                                                      00140002
.*03      TYPE = CHARACTER STRING                                       00140102
.*                                                                      00140602
.*04        VALUE = YES OR NO                                           00140702
.*                                                                      00140902
.*02    PARAMETER-RECEIVED = LINES                                      00141202
.*                                                                      00141402
.*03      TYPE = NUMERIC                                                00141502
.*                                                                      00141602
.*04        VALUE = NUMBER OF LINES DESCRIBED                           00141802
.*                                                                      00142302
.*01  TABLES = NONE                                                     00143502
.*                                                                      00143802
.*01  INNER-MACROS = NONE                                               00144002
.*                                                                      00144402
.*01  SYSTEM-MACROS = NONE                                              00144502
.*                                                                      00145302
.**** END OF SPECIFICATIONS ***/                                        00145602
* /* MACCOMP Y-2 SC1D0/SJD48            */                              00146602
* /* MACSTAT Y-2 73081/021160           */                              00147602
*/********************************************************************/ 00148602
*/*         FORMS CONTROL BUFFER IMAGE                               */ 00149602
*/*                                                                  */ 00150002
*/*   METHOD OF ACCESS                                               */ 00151002
*/*     BAL  - TWO DSECTS ARE PRODUCED UNLESS DSECT=NO IS SPECIFIED. */ 00152002
*/*         USING ON FCBIMAGE GIVES ADDRESSIBILITY TO ALL SYMBOLS    */ 00153002
*/*         EXCEPT THOSE DESCRIBING A SINGLE ENTRY.                  */ 00154002
*/*         USING ON FCBENTRY GIVES ADDRESSIBILITY TO ANY ENTRY.     */ 00155002
*/*         WHEN DSECT=NO IS SPECIFIED,FCBENTRY CONTINUES TO EXPAND */  00156002
*/*         AS A DSECT, BUT THE REMAINING SYMBOLS ARE EXPANDED AS A  */ 00157002
*/*         PART OF THE CURRENT CSECT OR DSECT, WITHOUT ALIGNMENT.   */ 00158002
*/*         LINES=NN MAY BE USED TO CONTROL THE NUMBER OF ENTRIES    */ 00159002
*/*         ALLOWED FOR IN FCBIMAGE. THE DEFAULT IS 0                */ 00160002
*/*      PL/S - DCL FCBPTR AND FCBENPTR AS BASES FOR THE IMAGE AND   */ 00161002
*/*         AND FOR AN INDIVIDUAL ENTRY.  DEFAULT IS SIMPLY BASED.   */ 00162002
*/*                                                                  */ 00163002
*/*    USE OF FCBIMAGE                                               */ 00164002
*/*         THIS DSECT DESCRIBES AN FCB IMAGE THAT IS TO BE LOADED   */ 00200002
*/*         INTO A PRINTER FORMS CONTROL BUFFER.                     */ 00250002
*/*         THE MAPPING IS DIVIDED INTO THREE SEGMENTS, SOME OF      */ 00255002
*/*         WHICH MAY NOT BE PRESENT.                                */ 00260002
*/*         USER INTERFACE SEGMENT--PRESENT FOR IMAGES PASSED TO     */ 00270002
*/*             OPEN OR SETPRT BY THEIR INVOKER                      */ 00280002
*/*         IMAGE DESCRIPTOR SEGMENT--PRESENT IN SYS1.IMAGELIB       */ 00285002
*/*             AND IN USER PROVIDED IMAGES                          */ 00290002
*/*         IMAGE SEGMENT--ONLY THIS SEGMENT IS LOADED INTO THE      */ 00295002
*/*             PRINTER BUFFER. IT IS ALWASY PRESENT                 */ 00300002
*/*                                                                  */ 00305002
*/*               USER INTERFACE SEGMENT                             */ 00310002
*/*         __________________________________________________       */ 00311002
*/*  0 (00) |                                                |       */ 00315002
*/*         |                 FCBIMGID                       |       */ 00320002
*/*         |________________________________________________|       */ 00325002
*/*                                                                  */ 00326002
*/*               IMAGE DESCRIPTOR SEGMENT                           */ 00330002
*/*         _________________________                                */ 00335002
*/*  4 (04) |           |           |                                */ 00340002
*/*         | FCBDEFLT  |  FCBLENTH |                                */ 00345002
*/*         |___________|___________|                                */ 00346002
*/*                                                                  */ 00347002
*/*                              IMAGE SEGMENT (WITHOUT INDEXING)    */ 00369602
*/*                                 _________________________        */ 00370002
*/*  4 (04)                         |           |                    */ 00370402
*/*                                 |  FCBLINE1 |  VARIABLE          */ 00370802
*/*         ________________________|___________|____________        */ 00371002
*/*  8 (08)             |           |           |           |        */ 00371102
*/*               NUMBER OF ONE BYTE ENTRIES                |        */ 00371202
*/*         ____________|___________|___________|___________|        */ 00371502
*/*                                                                  */ 00371902
*/*                              IMAGE SEGMENT (WITH INDEXING)       */ 00372602
*/*                                 _________________________        */ 00373202
*/*  4 (04)                         |           |           |        */ 00373602
*/*                                 |  FCBINDEX | FCBLNPI1  |        */ 00374002
*/*         ________________________|___________|___________|        */ 00374202
*/*  8 (08) |           |           |           |           |        */ 00379202
*/*         |     VARIABLE NUMBER OF ONE BYTE ENTRIES       |        */ 00384602
*/*         |___________|___________|___________|___________|        */ 00386602
*/*                                                                  */ 00389602
*/********************************************************************/ 00395002
*%/*                                                                    00400002
         AIF   ('&DSECT' EQ 'NO').NODSCT                                00405002
FCBIMAGE DSECT                                                          00410002
         AGO   .CONT                                                    00415002
.NODSCT  ANOP                                                           00420002
FCBIMAGE DS    0C                                                       00425002
.CONT    ANOP                                                           00430002
*                                                                       00435002
*              USER INTERFACE SEGMENT                                   00440002
*                                                                       00445002
FCBIMGID DS    CL4                      FCB IMAGE IDENTIFIER            00450002
*                                                                       00455002
*              IMAGE DESCRIPTOR SEGMENT                                 00460002
*                                                                       00465002
FCBIMBEG DS    0C                       BEGINNING OF FCB                00500002
FCBDEFLT DS    B                        BYTE INDICATES IF IMAGE A DEFLT 00550002
FCBDEFYS EQU   X'80'                    IMAGE IS A DEFAULT              00600002
FCBDEFNO EQU   X'00'                    IMAGE IS NOT A DEFAULT          00650002
FCBLENTH DS    X                        BYTE CONTAINS LENGTH OF FCB     00700002
*                                         IMAGE                         00702002
*                                                                       00705002
*              IMAGE SEGMENT                                            00710002
*                                                                       00715002
FCBLINE1 DS    0C                       FIRST LINE OF FCB IMAGE         00750002
FCBLNPIN DS    0B                       BYTE INDICATES NUMBER OF        00800002
*                                         LINES PER INCH (USE WHEN NO   00850002
*                                         INDEXING)                     00860002
FCB8LINE EQU   X'10'                    EIGHT LINES PER INCH            00900002
FCB6LINE EQU   X'00'                    SIX LINES PER INCH              00950002
FCBINDEX DS    X                        BYTE INDICATES IF INDEXING      00950402
*                                         BEING USED                    00950802
FCBRGTIN EQU   X'80'                    BIT FOR RIGHT INDEXING          00950902
FCBLFTIN EQU   X'40'                    BIT FOR LEFT INDEXING           00957502
FCBLNPN1 DS    0X                       SAME AS FCBLNPIN WITH INDEXING  00959502
*                                         BEING USED                    00961502
         ORG   FCBLINE1                                          Y02072 00963502
FCBLINSG DS    &LINES.C                 AREA FOR LINE CODES      Y02072 00964202
*                                         WITHOUT INDEXING       Y02072 00964602
         ORG   FCBLINSG+1                                        Y02072 00966202
FCBLINS1 DS    &LINES.C                 AREA FOR LINE CODES      Y02072 00968202
*                                         WITH INDEXING          Y02072 00970202
*                                                                       00970802
*              EACH ENTRY DESCRIBES ONE LINE OF PRINTED PAGE            00977402
*                                                                       00984002
FCBENTRY DSECT                                                   Y02072 00990602
FCBLINE  DS    B                                                 Y02072 00997202
FCBLAST  EQU   X'10'                    ON IF LAST LINE OF PAGE  Y02072 01003802
*              NOTE: THIS BIT MAY ALSO BE ON FOR FIRST LINE             01010402
*                    OF PAGE. SEE FCB8LINE IN FCBLNPIN ABOVE            01017002
FCBCHAN  EQU   X'0F'                    MASK FOR CHANNEL NUMBER  Y02072 01023602
*                                       BINARY VALUE 1 TO 15            01030202
*                                       FOR SKIP COMMAND, OR 0          01036802
         MEND                                                           01043402
**/;                                                                    01050002
* %IF FCBBASE = '' %THEN %FCBBASE = 'BASED';                            01055002
* %IF FCBEBASE = '' %THEN %FCBEBASE = 'BASED';                          01060002
*DCL  1  FCBIMAGE FCBBASE,              /*                     Y02072*/ 01100002
*/*                  USER INTERFACE SEGMENT                          */ 01105002
*        2  FCBIMGID CHAR(4),           /*FCB IMAGE IDENTIFIER Y02072*/ 01210002
*/*                  IMAGE DESCRIPTOR SEGMENT                        */ 01211002
*        2  FCBIMBEG,                   /*BEGINNING OF FCB     Y02072*/ 01215002
*          3  FCBDEFLT CHAR(1),         /*IMAGE DEFAULT INDIC  Y02072*/ 01250002
*            4 FCBDEFYS BIT(1),         /*IMAGE IS A DEFAULT   Y02072*/ 01251002
*          3 FCBLENTH FIXED(8) UNSIGNED, /*LENGTH OF IMAGE     Y02072*/ 01255002
*/*                  IMAGE SEGMENT                                   */ 01260002
*        2  FCBLINE1,                   /*FIRST LINE OF FCB IM Y02072*/ 01300002
*          3  FCBLNPIN CHAR(1),         /*LINE/INCH INDICATOR  Y02072*/ 01400002
*                                       /*WITHOUT INDEXING     Y02072*/ 01402002
*            4  * BIT(3),               /*RESERVED             Y02072*/ 01405002
*            4  FCB8LINE BIT(1),        /*ON=8 LPI, OFF=6 LPI  Y02072*/ 01406002
*              5  FCBINDEX CHAR(1),     /*INDEX BYTE           Y02072*/ 01408002
*                6  FCBRGTIN BIT(1),    /*INDICATES RIGHT INDX Y02072*/ 01408402
*                6  FCBLFTIN BIT(1),    /*INDICATES LEFT INDEX Y02072*/ 01408802
*              5  FCBLNPN1 CHAR(1);     /*LINE/INCH INDICATOR  Y02072*/ 01410002
*                                       /*WITH INDEXING        Y02072*/ 01410402
*/*                                                                  */ 01411002
*/*         EACH ENTRY DESCRIBES ONE LINE OF PRINTED PAGE            */ 01416002
*/*                                                                  */ 01426002
* DCL   1 FCBENTRY FCBEBASE,            /*                     Y02072*/ 01450002
*        2 FCBLINE CHAR(1),             /*ONE BYTE PER LINE    Y02072*/ 01484002
*          3 * BIT(3),                  /*RESERVED             Y02072*/ 01518002
*          3 FCBLAST BIT(1),            /*ON IF LAST LINE      Y02072*/ 01552002
*/*         NOTE: THIS BIT MAY ALSO BE ON FOR FIRST LINE             */ 01620002
*/*               OF PAGE. SEE FCB8LINE IN FCBLNPIN ABOVE.           */ 01654002
*          3 FCBCHAN BIT(4);            /*CHANNEL NUMBER 1 TO 15     */ 01688002
./  ADD  SSI=33100055,NAME=IHAICB
*%;/*                                                                   00200002
         MACRO                                                          00600002
         IHAICB &DSECT=YES                                              00610002
.* /* START OF SPECIFICATIONS ****                                      00650002
.*                                                                      00700002
.*01  MODULE-NAME = IHAICB                                              00750002
.*                                                                      00770002
.*01  COPYRIGHT = NONE                                                  00780002
.*                                                                      00790002
.*01  STATUS = VS2 RELEASE 2 LEVEL 2                                    00792002
.*                                                                      00794002
.*01  CHANGE-ACTIVITY = ICBINDIC OFFSET FOR PLS                         00796002
.*                                                                      00798002
.*01  DESCRIPTIVE-NAME = INTERRUPT CONTROL BLOCK                        00798402
.*                                                                      00798802
.*01  FUNCTION = BSAM AND QSAM CHAINED SCHEDULING.                      00799202
.*    SIMILAR TO IOB, BUT KNOWN ONLY TO ACCESS METHOD.                  00799302
.*    ONE ICB IS PROVIDED FOR EACH BLOCK CONCURRENTLY PROCESSIBLE       00799402
.*    CHANNEL PROGRAM SEGMENTS FOLLOWING ICBS ARE DYNAMICALLY           00799502
.*    CHAINED TOGETHER, AND CHAINED FROM SEGMENT FOLLOWING IOB          00799602
.*                                                                      00799702
.*01  MODULE-TYPE = MACRO                                               00898302
.*                                                                      00898902
.*02    MACRO-SIZE = 375 STATEMENTS                                     00899302
.*                                                                      00899402
.*02    PARAMETER-RECEIVED = DSECT                                      00899502
.*                                                                      00930602
.*03      TYPE = CHARACTER STRING                                       00932602
.*                                                                      00933602
.*04        VALUE = YES OR NO                                           00933702
.*                                                                      00962102
.*01  TABLES = NONE                                                     00964102
.*                                                                      00966202
.*01  INNER-MACROS = NONE                                               00966302
.*                                                                      00974802
.*01  SYSTEM-MACROS = NONE                                              00976802
.*                                                                      00980802
.*                                                                      00983202
.**** END OF SPECIFICATIONS ***/                                        00991602
* /* MACCOMP Y-2 SC1D0/SJD48            */                              01001602
* /* MACSTAT Y-2 73124/021160           */                              01011602
*/********************************************************************/ 01041602
*/*            INTERRUPTION CONTROL BLOCK                            */ 01400002
*/*                                                                  */ 02000002
*/*  METHOD OF ACCESS                                                */ 02200002
*/*      BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */ 02400002
*/*             USING ON ICB GIVES ADDRESSABILITY FOR ALL SYMBOLS.   */ 02600002
*/*      PL/S - DCL ICBPTR  AS A BASE FOR THE ICB                    */ 02800002
*/*                                                                  */ 02850002
*/*  USE OF ICB                                                      */ 02902002
*/*         THIS CONTROL BLOCK IS USED BY BSAM AND QSAM WITH         */ 02904002
*/*         CHAINED SCHEDULING.  THE NUMBER OF ICBS IS CONTROLLED    */ 02906002
*/*         BY NCP (BSAM) OR BUFNO (QSAM).  EACH ICB IS FOLLOWED     */ 02908002
*/*         BY A CHANNEL PROGRAM SEGMENT SIMILAR TO THE NORMAL       */ 02910002
*/*         CHANNEL PROGRAM FOR THE DEVICE, EXCEPT THAT FOR DASD     */ 02912002
*/*         DEVICES IT HAS NO SEEK/SEARCH LOGIC.  THE CHANNEL        */ 02914002
*/*         PROGRAM SEGMENTS TERMINATE WITH A NOP/TIC COMMAND        */ 02916002
*/*         POINTING TO THE NEXT ICB CHANNEL PROGRAM SEGMENT.        */ 02918002
*/*         THE ICBS ARE USED BY THE ACCESS METHOD AS IF THEY WERE   */ 02920002
*/*         IOBS, BUT THEY ARE NEVER PASSED TO EXCP.                 */ 02922002
*/*                                                                  */ 02924002
*/*         ________________________________________________         */ 02926002
*/*  0 (00) |           |                                   |        */ 02928002
*/*         |  ICBNFLG1 |               ICBNICBB            |        */ 02930002
*/*         |___________|___________________________________|        */ 02932002
*/*  4 (04) |                                               |        */ 02934002
*/*         |                   ICBNECB                     |        */ 02936002
*/*         |_______________________________________________|        */ 02938002
*/*  8 (08) |           |           |           |           |        */ 02940002
*/*         |  ICBFLAG1 |  ICBFLAG2 |  ICBSENS0 |  ICBSENS1 |        */ 02942002
*/*         |___________|___________|___________|___________|        */ 02944002
*/* 12 (0C) |                                               |        */ 02946002
*/*         |                   ICBECBPT                    |        */ 02948002
*/*         |_______________________________________________|        */ 02950002
*/* 16 (10) |           |                                   |        */ 02952002
*/*         |  ICBECBCC |                                   |        */ 02954002
*/*         |___________|       ICBCSW                      |        */ 02956002
*/* 20 (14) |                                               |        */ 02958002
*/*         |                                               |        */ 02960002
*/*         |_______________________________________________|        */ 02962002
*/* 24 (18) |                                               |        */ 02964002
*/*         |                   ICBSTART                    |        */ 02966002
*/*         |_______________________________________________|        */ 02968002
*/* 28 (1C) |        ICBINCAM       |           |           |        */ 02970002
*/*         |  ICBCRDCC |  ICBCRILC |  ICBINDIC |    *      |        */ 02972002
*/*         |___________|___________|___________|___________|        */ 02974002
*/* 32 (20) |                                               |        */ 02976002
*/*         |                                               |        */ 02978002
*/*         |                   ICBSEEK                     |        */ 02980002
*/* 36 (24) |                                               |        */ 02982002
*/*         |                                               |        */ 02984002
*/*         |_______________________________________________|        */ 02986002
*/* 40 (28) |                                               |        */ 02996002
*/*         |                   ICBDACCW                    |        */ 02998002
*/*                                                                  */ 03000002
*/********************************************************************/ 03050002
*%/*                                                                    03100002
         SPACE 1                                                        03400002
         AIF   ('&DSECT' EQ 'NO').NODSCT                                03600002
ICB      DSECT                                                          03800002
         AGO   .CONT                                                    04000002
.NODSCT  ANOP                                                           04200002
         DS    0D                                                       04400002
ICB      EQU   *                                                        04600002
.CONT    ANOP                                                           04800002
*********************************************************************** 04850002
*                                                                       04900002
*              ICB SECTION 1 -- EQUIVALENT TO                           04950002
*              IOB NORMAL PREFIX                                        05000002
*                                                                       05050002
*********************************************************************** 05100002
*                                                                       05150002
ICBNICBA DS    0A ------ ADDR.NEXT ICB ON CHAIN                         05200002
ICBNFLG1 DS    B -       FLAG BYTE                                      05400002
ICBPRTOV EQU   X'80' --- 'PRTOV' HAS OCCURRED                           05600002
ICBWRITE EQU   X'40' --- 'WRITE' OPERATION IN PROCESS                   05800002
ICBREAD  EQU   X'20' --- 'READ' OPERATION IN PROCESS                    06000002
ICBUPDAT EQU   X'10' --- BLOCK IS TO BE UPDATED                         06200002
ICBBKSPC EQU   X'08' --- ICB BEING USED FOR BACKSPACE,CONTROL,NOTE/PT.  06400002
ICBSPAN  EQU   X'04' --- THIS RECORD IS A SPANNED RECORD                06600002
ICBRSV06 EQU   X'02',,C'X' RESERVED                                     06800002
ICBFIRST EQU   X'01' --- THIS IS FIRST ICB ON CHAIN                     07000002
ICBNICBB DS    AL3 ----- ADDR.NEXT ICB ON CHAIN                         07200002
ICBNECB  DS    F ------- EVENT CONTROL BLOCK                            07400002
         SPACE 3                                                        07450002
*********************************************************************** 07500002
*                                                                       07550002
*              ICB SECTION 2 -- EQUIVALENT TO                           07600002
*              FIRST PART OF IOB STANDARD SECTION                       07650002
*                                                                       07700002
*********************************************************************** 07750002
*                                                                       07760002
ICBFLAG1 DS    B -       FLAG BYTE                                      07800002
ICBDATCH EQU   X'80' --- DATA CHAINING USED IN CHANNEL PROGRAM          08000002
ICBCMDCH EQU   X'40' --- COMMAND CHAINING USED IN CHANNEL PROGRAM       08200002
ICBERRTN EQU   X'20' --- ERROR ROUTINE IS IN CONTROL                    08400002
ICBRPSTN EQU   X'10' --- DEVICE IS TO BE REPOSITIONED                   08600002
ICBCYCCK EQU   X'08' --- CYCLIC REDUNDANCY CHECK NEEDED(TAPE ONLY)      08800002
ICBFCREX EQU   X'08' --- FETCH COMMAND RETRY EXIT (DIRECT ACCESS ONLY)  09000002
ICBIOERR EQU   X'04' --- I/O ERROR HAS OCCURRED                         09200002
ICBUNREL EQU   X'02' --- THIS I/O REQUEST IS UNRELATED(NON-SEQUENTIAL)  09400002
ICBRSTRT EQU   X'01' --- RESTART ADDR.IN ICB TO BE USED                 09600002
ICBFLAG2 DS    B -       FLAG BYTE                                      09800002
ICBHALT  EQU   X'80' --- HALT I/O HAS BEEN ISSUED BY SVC PURGE ROUTINE  10000002
ICBSENSE EQU   X'40' --- ISSUE SENSE COMMAND AFTER DEVICE END OCCURS    10200002
ICBPURGE EQU   X'20' --- ICB HAS BEEN PURGED *ALLOW I/O TO QUIESCE      10400002
ICBRDHA0 EQU   X'10' --- HOME ADDRESS TO BE READ * NO SEEK NEEDED       10600002
ICBALTTR EQU   X'08' --- NO TEST FOR OUT-OF-EXTENT * AN ALTERNATE TRACK 10800002
*                        IS IN USE                                      11000002
ICBSKUPD EQU   X'04' --- SEEK ADDRESS IS BEING UPDATED -CYLINDER END    11200002
*                        OR FILE MASK VIOLATION HAS OCCURRED            11400002
ICBSTATO EQU   X'02' --- DEVICE END STATUS HAS BEEN ORED WITH           11600002
*                        CHANNEL END STATUS - GRAPHICS DEVICE           11800002
ICBPNCH  EQU   X'01' --- TURNED ON BY QSAM WHEN ERROR RECOVERY IS TO    12000002
*                        BE PROVIDED FOR THE 2540 CARD PUNCH            12200002
ICBSENS0 DS    B ------- FIRST SENSE BYTE                               12400002
ICBS0B0  EQU   X'80' --- BIT 0 (DEVICE DEPENDENT)                       12600002
ICBS0B1  EQU   X'40' --- BIT 1 (DEVICE DEPENDENT)                       12800002
ICBS0B2  EQU   X'20' --- BIT 2 (DEVICE DEPENDENT)                       13000002
ICBS0B3  EQU   X'10' --- BIT 3 (DEVICE DEPENDENT)                       13200002
ICBS0B4  EQU   X'08' --- BIT 4 (DEVICE DEPENDENT)                       13400002
ICBS0B5  EQU   X'04' --- BIT 5 (DEVICE DEPENDENT)                       13600002
ICBS0B6  EQU   X'02' --- BIT 6 (DEVICE DEPENDENT)                       13800002
ICBS0B7  EQU   X'01' --- BIT 7 (DEVICE DEPENDENT)                       14000002
ICBSNSC9 EQU   X'01' --- CHANNEL 9 SENSED IN CARRIAGE TAPE              14200002
ICBSENS1 DS    B ------- SECOND SENSE BYTE                              14400002
ICBS1B0  EQU   X'80' --- BIT 0 (DEVICE DEPENDENT)                       14600002
ICBS1B1  EQU   X'40' --- BIT 1 (DEVICE DEPENDENT)                       14800002
ICBS1B2  EQU   X'20' --- BIT 2 (DEVICE DEPENDENT)                       15000002
ICBS1B3  EQU   X'10' --- BIT 3 (DEVICE DEPENDENT)                       15200002
ICBS1B4  EQU   X'08' --- BIT 4 (DEVICE DEPENDENT)                       15400002
ICBS1B5  EQU   X'04' --- BIT 5 (DEVICE DEPENDENT)                       15600002
ICBS1B6  EQU   X'02' --- BIT 6 (DEVICE DEPENDENT)                       15800002
ICBS1B7  EQU   X'01' --- BIT 7 (DEVICE DEPENDENT)                       16000002
ICBECBPT DS    0A ------ ADDRESS OF ECB TO BE POSTED ON I/O COMPLETION  16200002
ICBECBCC DS    CL1 ---- COMPLETION CODE FOR THIS I/O REQUEST            16400002
ICBECBPB DS    AL3 ----- ADDRESS OF ECB TO BE POSTED ON I/O COMPLETION  16600002
ICBFLAG3 DS    B ------- ERROR ROUTINE FLAG BYTE                        16800002
ICBCSW   DS    CL7 ----- LOW ORDER 7 BYTES OF CSW AT CHANNEL END        17000002
ICBSTART DS    0A ------ ADDRESS OF CHANNEL PROGRAM                     17200002
ICBSIOCC DS    B ------- BITS 2 AND 3 = C.C. FROM SIO                   17400002
ICBSTRTB DS    AL3 ----- ADDRESS OF CHANNEL PROGRAM                     17600002
*                                                                       17650002
*********************************************************************** 17700002
*        EQUIVALENCE WITH IOB IS LOST AT THIS POINT, SINCE THE          17750002
*        TWO IOB WORDS IOBDCBPT AND IOBRESTR ARE NOT IN THE ICB         17760002
*********************************************************************** 17770002
*                                                                       17780002
ICBINCAM DS    0H ------ VALUE USED TO INCREMENT BLOCK COUNT ON TAPE    17800002
ICBCRDCC DS    CL1 ----- OPTICAL READER: DATA CHECK ERROR COUNT         18000002
ICBCRILC DS    CL1 ----- OPTICAL READER: INCORRECT LENGTH ERROR COUNT   18200002
         SPACE 2                                                        18400002
ICBINDIC DS    BL1 ----- SPECIAL CONDITION INDICATORS                   18600002
ICBVOLFL EQU   X'80' --- END OF VOLUME WITH READ/WRITE ERROR            18800002
ICBRSV07 DS    BL1 ----- RESERVED                                       19000002
         SPACE 3                                                        19200002
*********************************************************************** 19400002
*                                                                     * 19600002
*                   EXTENSION SECTIONS OF THE ICB                     * 19800002
*                                                                     * 20000002
*********************************************************************** 20200002
         SPACE 1                                                        20400002
ICBEXTEN DS    0D                                                       20600002
         SPACE 1                                                        20800002
*                            ****************************************** 21000002
*                            *                                        * 21200002
*                            *  DIRECT ACCESS EXTENSION *** 8 BYTES   * 21400002
*                            *                                        * 21600002
*                            ****************************************** 21800002
         SPACE 1                                                        22000002
ICBSEEK  DS    0CL8 ----                                                22200002
ICBM     DS    CL1 ----- RELATIVE EXTENT NUMBER FOR THIS REQUEST(0-15)  22400002
ICBBB    DS    0CL2 ---- BIN NUMBER(DATA CELL)                          22600002
ICBBB1   DS    CL1                                                      22800002
ICBBB2   DS    CL1                                                      23000002
ICBCC    DS    0CL2 ---- CYLINDER NUMBER                                23200002
ICBCC1   DS    CL1                                                      23400002
ICBCC2   DS    CL1                                                      23600002
ICBHH    DS    0CL2 ---- TRACK NUMBER                                   23800002
ICBHH1   DS    CL1                                                      24000002
ICBHH2   DS    CL1                                                      24200002
ICBR     DS    CL1 ----- RECORD NUMBER                                  24400002
ICBDACCW DS    0D ------ CHANNEL PROGRAM SEGMENT START                  24450002
         MEND                                                           24600002
**/;                                                                    24800002
*                                                                       25000002
* DECLARE                                                               25200002
*   1 ICB BASED(ICBPTR),                                                25400002
*                                                                       25600002
* /* *************************************************************** */ 25800002
* /*                                                                 */ 26000002
* /*           ICB SECTION 1 -- EQUIVALENT TO                        */ 26200002
* /*           IOB NORMAL PREFIX                                     */ 26250002
* /*                                                                 */ 26400002
* /* *************************************************************** */ 26600002
*                                                                       32800002
*    2 ICBNICBA PTR(31),             /* ADDR.NEXT ICB ON CHAIN       */ 34000002
*     3 ICBNFLG1 BIT(8),             /* FLAG BYTE                    */ 34200002
*      4 ICBPRTOV BIT(1),            /* 'PRTOV' HAS OCCURRED         */ 34400002
*      4 ICBWRITE BIT(1),            /* 'WRITE' OPERATION IN PROCESS */ 34600002
*      4 ICBREAD  BIT(1),            /* 'READ' OPERATION IN PROCESS  */ 34800002
*      4 ICBUPDAT BIT(1),            /* BLOCK IS TO BE UPDATED       */ 35000002
*      4 ICBBKSPC BIT(1),            /* ICB BEING USED FOR              35200002
*                                       BACKSPACE,CONTROL,NOTE/PT.   */ 35400002
*      4 ICBSPAN  BIT(1),            /* THIS RECORD IS A SPANNED        35600002
*                                       RECORD                       */ 35800002
*      4 ICBRSV06 BIT(1),            /* RESERVED                     */ 36000002
*      4 ICBFIRST BIT(1),            /* THIS IS FIRST ICB ON CHAIN   */ 36200002
*                                                                       36250002
*     3 ICBNICBB PTR(24),            /* ADDR.NEXT ICB ON CHAIN       */ 36400002
*                                                                       36450002
*    2 ICBNECB  FIXED(31),           /* EVENT CONTROL BLOCK          */ 36600002
*                                                                       43200002
* /* *************************************************************** */ 43400002
* /*                                                                 */ 43600002
* /*           ICB SECTION 2 -- EQUIVALENT TO                        */ 43650002
* /*           FIRST PART OF IOB STANDARD SECTION                    */ 43800002
* /*                                                                 */ 44000002
* /* *************************************************************** */ 44200002
*                                                                       44400002
*    2 ICBFLAG1 BIT(8),              /* FLAG BYTE                    */ 45000002
*     3 ICBDATCH BIT(1),             /* DATA CHAINING USED IN           45200002
*                                       CHANNEL PROGRAM              */ 45400002
*     3 ICBCMDCH BIT(1),             /* COMMAND CHAINING USED IN        45600002
*                                       CHANNEL PROGRAM              */ 45800002
*     3 ICBERRTN BIT(1),             /* ERROR ROUTINE IS IN CONTROL  */ 46000002
*     3 ICBRPSTN BIT(1),             /* DEVICE IS TO BE REPOSITIONED */ 46200002
*     3 ICBCYCCK BIT(1),             /* CYCLIC REDUNDANCY CHECK         46400002
*                                       NEEDED(TAPE ONLY)            */ 46600002
*      4 ICBFCREX BIT(1),            /* FETCH COMMAND RETRY EXIT        46800002
*                                       (DIRECT ACCESS ONLY)         */ 47000002
*     3 ICBIOERR BIT(1),             /* I/O ERROR HAS OCCURRED       */ 47200002
*     3 ICBUNREL BIT(1),             /* THIS I/O REQUEST IS             47400002
*                                       UNRELATED(NON-SEQUENTIAL)    */ 47600002
*     3 ICBRSTRT BIT(1),             /* RESTART ADDR.IN ICB TO BE       47800002
*                                       USED                         */ 48000002
*    2 ICBFLAG2 BIT(8),              /* FLAG BYTE                    */ 48200002
*     3 ICBHALT  BIT(1),             /* HALT I/O HAS BEEN ISSUED BY     48400002
*                                       SVC PURGE ROUTINE            */ 48600002
*     3 ICBSENSE BIT(1),             /* ISSUE SENSE COMMAND AFTER       48800002
*                                       DEVICE END OCCURS            */ 49000002
*     3 ICBPURGE BIT(1),             /* ICB HAS BEEN PURGED *ALLOW      49200002
*                                       I/O TO QUIESCE               */ 49400002
*     3 ICBRDHA0 BIT(1),             /* HOME ADDRESS TO BE READ * NO    49600002
*                                       SEEK NEEDED                  */ 49800002
*     3 ICBALTTR BIT(1),             /* NO TEST FOR OUT-OF-EXTENT *     50000002
*                                       AN ALTERNATE TRACKIS IN USE  */ 50200002
*     3 ICBSKUPD BIT(1),             /* SEEK ADDRESS IS BEING           50400002
*                                       UPDATED -CYLINDER END OR        50600002
*                                       FILE MASK VIOLATION HAS         50800002
*                                       OCCURRED                     */ 51000002
*     3 ICBSTATO BIT(1),             /* DEVICE END STATUS HAS BEEN      51200002
*                                       ORED WITH CHANNEL END STATUS    51400002
*                                       - GRAPHICS DEVICE            */ 51600002
*     3 ICBPNCH  BIT(1),             /* TURNED ON BY QSAM WHEN ERROR    51800002
*                                       RECOVERY IS TO BE PROVIDED      52000002
*                                       FOR THE 2540 CARD PUNCH      */ 52200002
*    2 ICBSENS0 CHAR(1),             /* FIRST SENSE BYTE             */ 52400002
*     3 ICBS0B0  BIT(1),             /* BIT 0 (DEVICE DEPENDENT)     */ 52600002
*     3 ICBS0B1  BIT(1),             /* BIT 1 (DEVICE DEPENDENT)     */ 52800002
*     3 ICBS0B2  BIT(1),             /* BIT 2 (DEVICE DEPENDENT)     */ 53000002
*     3 ICBS0B3  BIT(1),             /* BIT 3 (DEVICE DEPENDENT)     */ 53200002
*     3 ICBS0B4  BIT(1),             /* BIT 4 (DEVICE DEPENDENT)     */ 53400002
*     3 ICBS0B5  BIT(1),             /* BIT 5 (DEVICE DEPENDENT)     */ 53600002
*     3 ICBS0B6  BIT(1),             /* BIT 6 (DEVICE DEPENDENT)     */ 53800002
*     3 ICBS0B7  BIT(1),             /* BIT 7 (DEVICE DEPENDENT)     */ 54000002
*      4 ICBSNSC9 BIT(1),            /* CHANNEL 9 SENSED IN             54200002
*                                       CARRIAGE TAPE                */ 54400002
*    2 ICBSENS1 CHAR(1),             /* SECOND SENSE BYTE            */ 54600002
*     3 ICBS1B0  BIT(1),             /* BIT 0 (DEVICE DEPENDENT)     */ 54800002
*     3 ICBS1B1  BIT(1),             /* BIT 1 (DEVICE DEPENDENT)     */ 55000002
*     3 ICBS1B2  BIT(1),             /* BIT 2 (DEVICE DEPENDENT)     */ 55200002
*     3 ICBS1B3  BIT(1),             /* BIT 3 (DEVICE DEPENDENT)     */ 55400002
*     3 ICBS1B4  BIT(1),             /* BIT 4 (DEVICE DEPENDENT)     */ 55600002
*     3 ICBS1B5  BIT(1),             /* BIT 5 (DEVICE DEPENDENT)     */ 55800002
*     3 ICBS1B6  BIT(1),             /* BIT 6 (DEVICE DEPENDENT)     */ 56000002
*     3 ICBS1B7  BIT(1),             /* BIT 7 (DEVICE DEPENDENT)     */ 56200002
*                                                                       56250002
*    2 ICBECBPT PTR(31),             /* ADDRESS OF ECB TO BE POSTED     56400002
*                                       ON I/O COMPLETION            */ 56600002
*     3 ICBECBCC CHAR(1),            /* COMPLETION CODE FOR THIS I/O    56800002
*                                       REQUEST                      */ 57000002
*     3 ICBECBPB PTR(24),            /* ADDRESS OF ECB TO BE POSTED     57200002
*                                       ON I/O COMPLETION            */ 57400002
*    2 ICBFLAG3 CHAR(1),             /* ERROR ROUTINE FLAG BYTE      */ 57600002
*    2 ICBCSW   CHAR(7),             /* LOW ORDER 7 BYTES OF CSW AT     57800002
*                                       CHANNEL END                  */ 58000002
*    2 ICBSTART PTR(31),             /* ADDRESS OF CHANNEL PROGRAM   */ 58200002
*     3 ICBSIOCC CHAR(1),            /* BITS 2 AND 3 = C.C. FROM SIO */ 58400002
*     3 ICBSTRTB PTR(24),            /* ADDRESS OF CHANNEL PROGRAM   */ 58600002
*                                                                       58610002
* /* *************************************************************** */ 58650002
* /*     EQUIVALENCE WITH THE IOB IS LOST AT THIS POINT, SINCE THE   */ 58700002
* /*     TWO IOB WORDS IOBDCBPT AND IOBRESTR ARE NOT IN THE ICB      */ 58750002
* /* *************************************************************** */ 58800002
*                                                                       58850002
*    2 ICBINCAM FIXED(15),           /* VALUE USED TO INCREMENT         61000002
*                                       BLOCK COUNT ON TAPE          */ 61200002
*     3 ICBCRDCC FIXED(8),  /* OPTICAL READER:DATA CHECK ERROR COUNT */ 64600002
*     3 ICBCRILC FIXED(8),  /* OPTICAL RDR:INCORRECT LENGTH ERROR CT.*/ 64800002
*                                                                       64810002
*    2 ICBINDIC BIT(8),              /* SPECIAL CONDITION INDICATORS */ 64850002
*     3 ICBVOLFL BIT(1),             /* EOV WITH READ/WRITE ERROR    */ 64900002
*    2 ICBRSV07 CHAR(1),             /* RESERVED                     */ 64950002
*                                                                       65000002
*                                                                       65200002
* /* *************************************************************** */ 65400002
* /*                                                                 */ 65600002
* /*                EXTENSION SECTIONS OF THE ICB                    */ 65800002
* /*                                                                 */ 66000002
* /* *************************************************************** */ 66200002
*                                                                       66400002
*    2 ICBEXTEN BDY(DWORD),                                             66450002
*                        /* **************************************** */ 66600002
*                        /*    DIRECT ACCESS EXTENSION *** 8 BYTES   */ 66800002
*                        /* **************************************** */ 67000002
*                                                                       67200002
*     3 ICBSEEK  CHAR(8),                                               67800002
*      4 ICBM     CHAR(1),           /* RELATIVE EXTENT NUMBER FOR      68000002
*                                       THIS REQUEST(0-15)           */ 68200002
*      4 ICBBB    CHAR(2),           /* BIN NUMBER(DATA CELL)        */ 68400002
*       5 ICBBB1   CHAR(1),                                             68600002
*       5 ICBBB2   CHAR(1),                                             68800002
*                                                                       68850002
*      4 ICBCC    CHAR(2),           /* CYLINDER NUMBER              */ 69000002
*       5 ICBCC1   CHAR(1),                                             69200002
*       5 ICBCC2   CHAR(1),                                             69400002
*                                                                       69450002
*      4 ICBHH    CHAR(2),           /* TRACK NUMBER                 */ 69600002
*       5 ICBHH1   CHAR(1),                                             69800002
*       5 ICBHH2   CHAR(1),                                             70000002
*                                                                       70050002
*      4 ICBR     CHAR(1),           /* RECORD NUMBER                */ 70200002
*     3 ICBDACCW(*) CHAR(8) BDY(DWORD);                                 70250002
./  ADD  SSI=31510971,NAME=IHASAVER
*%;/*                                                                   00150002
         MACRO                                                          00160002
         IHASAVER &DSECT=YES                                            00170002
.*                                                                      00175002
.*01  MODULE-NAME = IHASAVER                                            00180002
.*                                                                      00181002
.*01  COPYRIGHT = NONE                                                  00182002
.*                                                                      00183002
.*01  STATUS = VS2 RELEASE 2 LEVEL 0                                    00184002
.*                                                                      00185002
.*01  CHANGE-ACTIVITY = 000                                             00186002
.*                                                                      00187002
.*01  DESCRIPTIVE-NAME = GENERAL PURPOSE REGISTERS SAVEAREA             00188002
.*                                                                      00189002
.*01  FUNCTION = TO SAVE THE USER REGISTERS                             00190002
.*                                                                      00191002
.*01  MODULE-TYPE = MACRO                                               00192002
.*                                                                      00193002
.*02    PARAMETER-RECEIVED = DSECT                                      00194002
.*                                                                      00195002
.*03      TYPE = CHARACTER STRING                                       00196002
.*                                                                      00197002
.*04        VALUE = YES OR NO                                           00198002
.*                                                                      00199002
.*01  TABLES = NONE                                                     00200002
.*                                                                      00201002
.*01  INNER-MACROS = NONE                                               00202002
.*                                                                      00203002
.*01  SYSTEM-MACROS = NONE                                              00204002
.*                                                                   */ 00205002
* /* MACCOMP Y-2 SC1D0/SJD48                                         */ 00206002
* /* MACSTAT Y-2 73138/021160                                        */ 00207002
*/********************************************************************/ 00210002
*/*                                                                  */ 00215002
*/*  GENERAL PURPOSE REGISTERS SAVE AREA                             */ 00220002
*/*                                                                  */ 00230002
*/*  METHODS OF ACCESS                                               */ 00260002
*/*     BAL                                                          */ 00262002
*/*          IHASAVER DSECT=YES                                      */ 00264002
*/*                         NO                                       */ 00266002
*/*          DSECT=YES IS THE DEFAULT AND WILL PRODUCE THE SAVER     */ 00268002
*/*                AS A DSECT                                        */ 00268402
*/*          DSECT=NO WILL PRODUCE THE SAVER AS A CONTINUATION OF    */ 00268802
*/*                DEFINED STORAGE. (NO DSECT CARD PRODUCED)         */ 00269202
*/*     PL/S-RESPECIFY ON SAVER GIVES ADDRESSABILITY FOR ALL SYMBOLS */ 00280002
*/*                                                                  */ 00282002
*/*  NOTE = IN A PLS INCLUDE, SAVBASE MAY BE DECLARED AS DEF(LABEL)  */ 00284002
*/*         TO CAUSE IT TO BE USED IN A STRUCTURE. IF SAVBASE IS     */ 00286002
*/*         OMITTED THE STRUCTURE IS DECLARED AS BASED.              */ 00288002
*/*                                                                  */ 00290002
*/********************************************************************/ 00300002
*%/*                                                                    00320002
         AIF   ('&DSECT' EQ 'NO').SAVNOD                                00330002
SAVER    DSECT                                                          00350002
         AGO   .SAVCONT                                                 00360002
.SAVNOD  ANOP                                                           00370002
SAVER    DS    0F                                                       00380002
.SAVCONT ANOP                                                           00390002
SAVPLI   DS    F                        USED BY PL/1 LANGUAGE PROGRAM   00400002
SAVPREV  DS    F                        ADDRESS OF PREVIOUS SAVE AREA   00450002
SAVNEXT  DS    F                        ADDRESS OF NEXT SAVE AREA       00500002
SAVGRS14 DS    F                        SAVE AREA FOR REGISTER 14       00550002
SAVGRS15 DS    F                        SAVE AREA FOR REGISTER 15       00600002
SAVGRS0  DS    F                        SAVE AREA FOR REGISTER 0        00650002
SAVGRS1  DS    F                        SAVE AREA FOR REGISTER 1        00700002
SAVGRS2  DS    F                        SAVE AREA FOR REGISTER 2        00750002
SAVGRS3  DS    F                        SAVE AREA FOR REGISTER 3        00800002
SAVGRS4  DS    F                        SAVE AREA FOR REGISTER 4        00850002
SAVGRS5  DS    F                        SAVE AREA FOR REGISTER 5        00900002
SAVGRS6  DS    F                        SAVE AREA FOR REGISTER 6        00950002
SAVGRS7  DS    F                        SAVE AREA FOR REGISTER 7        01000002
SAVGRS8  DS    F                        SAVE AREA FOR REGISTER 8        01050002
SAVGRS9  DS    F                        SAVE AREA FOR REGISTER 9        01100002
SAVGRS10 DS    F                        SAVE AREA FOR REGISTER 10       01150002
SAVGRS11 DS    F                        SAVE AREA FOR REGISTER 11       01200002
SAVGRS12 DS    F                        SAVE AREA FOR REGISTER 12       01250002
         MEND                                                       */; 01300002
*        % IF SAVBASE = ''                                              01360002
*        %    THEN                                                      01370002
*        %      SAVBASE = 'BASED';                                      01380002
* DCL  1 SAVER SAVBASE BDY(WORD),                                       01390002
*        2 SAVPLI   PTR(31),            /* USED BY PL/1 LANG. PRGM   */ 01500002
*        2 SAVPREV  PTR(31),            /* ADDR OF PREVIOUS SAVEAREA */ 01550002
*        2 SAVNEXT  PTR(31),            /* ADDR OF NEXT SAVE AREA    */ 01600002
*        2 SAVGRS14 PTR(31),            /* SAVE AREA FOR REGISTER 14 */ 01650002
*        2 SAVGRS15 PTR(31),            /* SAVE AREA FOR REGISTER 15 */ 01700002
*        2 SAVGRS0  PTR(31),            /* SAVE AREA FOR REGISTER 0  */ 01750002
*        2 SAVGRS1  PTR(31),            /* SAVE AREA FOR REGISTER 1  */ 01800002
*        2 SAVGRS2  PTR(31),            /* SAVE AREA FOR REGISTER 2  */ 01850002
*        2 SAVGRS3  PTR(31),            /* SAVE AREA FOR REGISTER 3  */ 01900002
*        2 SAVGRS4  PTR(31),            /* SAVE AREA FOR REGISTER 4  */ 01950002
*        2 SAVGRS5  PTR(31),            /* SAVE AREA FOR REGISTER 5  */ 02000002
*        2 SAVGRS6  PTR(31),            /* SAVE AREA FOR REGISTER 6  */ 02050002
*        2 SAVGRS7  PTR(31),            /* SAVE AREA FOR REGISTER 7  */ 02100002
*        2 SAVGRS8  PTR(31),            /* SAVE AREA FOR REGISTER 8  */ 02150002
*        2 SAVGRS9  PTR(31),            /* SAVE AREA FOR REGISTER 9  */ 02200002
*        2 SAVGRS10 PTR(31),            /* SAVE AREA FOR REGISTER 10 */ 02250002
*        2 SAVGRS11 PTR(31),            /* SAVE AREA FOR REGISTER 11 */ 02300002
*        2 SAVGRS12 PTR(31);            /* SAVE AREA FOR REGISTER 12 */ 02350002
./  ADD  SSI=32310039,NAME=IHASTOW
*  %GOTO STOL1;                                                         00100002
         MACRO                                                          00200002
         IHASTOW &DSECT=YES                                             00300002
.* /* START OF SPECIFICATIONS ****                                      00305002
.*                                                                      00310002
.*01  MODULE-NAME = IHASTOW                                             00315002
.*                                                                      00320002
.*01  COPYRIGHT = NONE                                                  00325002
.*                                                                      00330002
.*01  STATUS = VS2 RELEASE 2 LEVEL 0                                    00335002
.*                                                                      00340002
.*01  DESCRIPTIVE-NAME = STOW INPUT PARAMETER LIST                      00345002
.*                                                                      00350002
.*01  FUNCTION = MAPS THE PARAMETER LIST SUPPLIED TO THE STOW MACRO     00355002
.*               BY THE CALLER.                                         00360002
.*                                                                      00365002
.*01  MODULE-TYPE = MACRO                                               00370002
.*                                                                      00375002
.*02    MACRO-SIZE = N/A FOR A MAPPING MACRO                            00380002
.*                                                                      00385002
.*02    PARAMETER-RECEIVED = DSECT                                      00390002
.*                                                                      00395002
.*03      TYPE = CHARACTER STRING                                       00400002
.*                                                                      00405002
.*04        VALUE = YES OR NO                                           00410002
.*                                                                      00415002
.*01  TABLES = NONE                                                     00420002
.*                                                                      00425002
.*01  INNER-MACROS = NONE                                               00430002
.*                                                                      00435002
.*01  SYSTEM-MACROS = NONE                                              00440002
.*                                                                      00445002
.*01  CHANGE-ACTIVITY = SEE BELOW                                       00450002
.*    VS2 RELEASE 2 DELETIONS                                           00455002
.*                                                                      00465002
.**** END OF SPECIFICATIONS ***/                                        00470002
.*/*                                                                    00475002
.*/ %STOL1: ;                                                           00500002
* /* MACCOMP Y-2 SC1D2/SJD48                                         */ 00502002
* /* MACSTAT Y-2 73226/021160                                        */ 00504002
*/********************************************************************/ 00700002
*/*                                                                  */ 00800002
*/*      THIS MACRO MAPS THE PARAMETER LIST SUPPLIED TO THE STOW     */ 00900002
*/*      MACRO BY THE CALLER.                                        */ 01000002
*/*                                                                  */ 01100002
*/*      VS2 RELEASE 2, 8/14/73, LEVEL=0                             */ 01200002
*/*                                                                  */ 01300002
*/*      METHOD OF ACCESS                                            */ 01400002
*/*        BAL  - A USING ON THE DSECT NAME 'STOW' ESTABLISHES       */ 01500002
*/*               ADDRESSABILITY TO ALL SYMBOLS.                     */ 01600002
*/*        PL/S - DEFINE A BASE FOR THE STRUCTURE BEFORE REFERENCING */ 01700002
*/*               ANY SYMBOLS WITHIN IT.                             */ 01800002
*/*                                                                  */ 01900002
*/********************************************************************/ 02000002
* %; /*                                                                 02100002
.*/ %GOTO STOL2;  /*                                                    02200002
         AIF   ('&DSECT' EQ 'NO').STONOD                                02202002
STOW     DSECT                                                          02204002
         AGO   .STOL3                                                   02206002
.STONOD  ANOP                                                           02208002
STOW     EQU   *                                                        02210002
.STOL3   ANOP                                                           02212002
*                                                                       02214002
STONAME  DS    CL8                      NEW NAME FOR ADD.  OLD NAME FOR 02300002
*                                       DELETE, CHANGE, OR REPLACE.     02400002
STOCHANG DS    0CL8                     NEW NAME FOR CHANGE             02500002
STOTTR   DS    XL3                      RELATIVE ADDRESS OF MEMBER      02600002
STOCTTRN DS    B                        ALIAS BIT, NUMBER OF TTRN'S,    02700002
*                                       AND LENGTH OF USER DATA         02800002
STOALIAS EQU   X'80'                    MEMBER IS AN ALIAS NAME         02900002
STOTTRNS EQU   X'60'                    NUMBER OF TTRN'S IN THE USER    03000002
*                                       DATA AREA.                      03100002
STODATSZ EQU   X'1F'                    SIZE OF USER DATA AREA IN       03200002
*                                       HALF WORDS.                     03300002
STODATA  DS    CL62                     USER DATA AREA                  03400002
STOLNGMV EQU   L'STOCHANG+L'STOTTR+L'STOCTTRN  LENGTH OF FIELDS SAVED   03500002
*                                       FOR CHANGE OPERATIONS           03600002
         MEND ,  */                                                     03700002
* %STOL2: ;                                                             03800002
*                                                                       03802002
*DCL 1 STOW BASED,                                                      03900002
*      2 STONAME  CHAR(8),              /* NEW NAME FOR ADD.  OLD NAME  04000002
*                                       FOR DELETE, CHANGE, REPLACE. */ 04100002
*      2 STOCHANG CHAR(8),              /* NEW NAME FOR CHANGE       */ 04200002
*        3 STOTTR   FIXED(24) BDY(BYTE), /* RELATIVE ADDR OF MEMBER  */ 04300002
*        3 STOCTTRN FIXED(8),           /* ALIAS BIT, NUMBER OF TTRN'S, 04400002
*                                       AND LENGTH OF USER DATA.     */ 04500002
*          4 STODATSZ FIXED(8),         /* SIZE OF USER DATA AREA IN    04600002
*                                       HALF WORDS (BITS 3 - 7).     */ 04700002
*          %STOCLRHI = '''00011111''B';                                 04800002
*            5 STOALIAS BIT(1),         /* MEMBER IS AN ALIAS NAME   */ 04900002
*            5 STOTTRNS BIT(2),         /* NUMBER OF TTRN'S IN THE      05000002
*                                       USER DATA AREA.              */ 05100002
*        3 STODATA  CHAR(62);           /* USER DATA AREA            */ 05200002
./  ADD  SSI=63090539,NAME=IHJDSTAB
         %GOTO DSTABPLS;                                                00050002
         MACRO                                                          00100002
         IHJDSTAB                                                       00150002
TABL     DSECT ,                        DATA SET TABLE ENTRY     Y02076 00200002
TABDSORG DS    CL1                      DATA SET ORGANIZATION    Y02076 00250002
TABISAM  EQU   X'80'                    ISAM                     Y02076 00300002
TABPS    EQU   X'40'                    PHYSICAL SEQUENTIAL      Y02076 00350002
TABBDAM  EQU   X'20'                    BDAM                     Y02076 00400002
TABPO    EQU   X'02'                    PARTITIONED              Y02076 00450002
TABUNDF  EQU   X'01'                    UNDEFINED                Y02076 00500002
TABDCBAD DS    CL3                      ADDR OF ASSOCIATED DCB   Y02076 00550002
TABFLG1  DS    CL1                      FLAG BYTE 1              Y02076 00600002
TABNULL  EQU   X'80'                    NULLFILE/DUMMY DS        Y02076 00650002
TABSYS   EQU   X'40'                    SYSIN/SYSOUT DS          Y02076 00700002
TABDA    EQU   X'20'                    DA DEVICE                Y02076 00750002
TABTAPE  EQU   X'10'                    TAPE DEVICE              Y02076 00800002
TABLAST  EQU   X'08'                    LAST TABLE ENTRY FLAG    Y02076 00850002
TABUR    EQU   X'04'                    UNIT RECORD OR OTHER DEV Y02076 00900002
TABTCAM  EQU   X'02'                    TCAM DS                  Y02076 00950002
TABDOSTP EQU   X'01'                    DOS TAPE DS              Y02076 01000002
TABSEGAD DS    CL3                      ADDR OF ASSIGNED WA SEG  Y02076 01050002
TABNVOLS DS    CL1                      TOTAL VOLUME COUNT       Y02076 01100002
TABJFCB  DS    CL3                      ADDR OF ASSOCIATED JFCB  Y02076 01150002
TABOTIOT DS    0CL2                     OLD TIOT OFFSET (DA ONLY)Y02076 01200002
TABTPLBL DS    CL1                      TAPE LABEL FLAG BYTE     Y02076 01250002
TABNSLER EQU   X'80'                    ERROR IN NSL ROUTINE     Y02076 01300002
TABNSLMT EQU   X'40'                    NSL MOUNT SWITCH         Y02076 01350002
TABNSLCM EQU   X'20'                    NSL COMMUNICATION BIT    Y02076 01400002
TABLBBYP EQU   X'10'                    BYPASS LABEL PROCESS BIT Y02076 01450002
TABASCII EQU   X'08'                    ASCII LABEL              Y02076 01500002
TABNSL   EQU   X'04'                    NONSTANDARD LABEL        Y02076 01550002
TABSL    EQU   X'02'                    STANDARD LABEL           Y02076 01600002
TABNL    EQU   X'01'                    NO LABEL                 Y02076 01650002
TABFSQNO DS    CL1                      FILE SEQ NO. (TAPE ONLY) Y02076 01700002
TABFLG2  DS    CL1                      FLAG BYTE 2              Y02076 01750002
TABG5V   EQU   X'80'                    GREATER THAN 5 VOLUMES   Y02076 01800002
TABPOCAT EQU   X'40'                    PO CONCATENATED          Y02076 01850002
TABSW    EQU   X'20'                    PROCESS CONTROL SWITCH   Y02076 01900002
TABRSDS  EQU   X'10'                    WORKING RESTART DS       Y02076 01950002
TABCIDS  EQU   X'08'                    ISAM/VSAM CI DS          Y02076 02000002
TABVIODS EQU   X'04'                    VIO DS                   Y02076 02050002
TABOSSDS EQU   X'02'                    OLD DS WAS SUBSYSTEM     YM7399 02060002
TABFLG3  DS    CL1                      FLAG BYTE 3              Y02076 02100002
TABCKCK  EQU   X'80'                    CHKPT DS AT CHKPT TIME   YM7337 02110002
TABCKRS  EQU   X'40'                    CHKPT DS AT RESTART TIME YM7337 02120002
TABFLG4  DS    CL1                      FLAG BYTE 4              Y02076 02150002
TABBYPSW EQU   X'80'                    BYPASS PASSWORD CHKING @G32DSMI 02160032
*                                       BECAUSE DATA SET IS    @G32DSMI 02168032
*                                       RAC AUTHORIZED         @G32DSMI 02176032
TABRCINP EQU   X'40'                    RAC AUTHORIZED INPUT   @G32DSMI 02184032
TABRCOUT EQU   X'20'                    RAC AUTHORIZED OUTPUT  @G32DSMI 02192032
TABFLG5  DS    CL1                      FLAG BYTE 5 (USED AS 1   Y02076 02200002
*                                       BYTE SAVEAREA FOR DSCB   Y02076 02250002
*                                       EXTENT COUNT)            Y02076 02300002
TABVLID1 DS    CL6                      VOLUME ID 1              Y02076 02350002
TABVLID2 DS    CL6                      VOLUME ID 2              Y02076 02400002
TABVLID3 DS    CL6                      VOLUME ID 3              Y02076 02450002
TABVLID4 DS    CL6                      VOLUME ID 4              Y02076 02500002
TABVLID5 DS    CL6                      VOLUME ID 5              Y02076 02550002
         MEND                                                           02600002
         %EJECT;                                                        02650002
*%DSTABPLS: ;                           /* TO BE ADDED */               02700002
 @EJECT;                                                                02750002
./  ADD  SSI=31700054,NAME=IHJSSCR
*        %GOTO PLSDCL; /*                                        YM1235 00050002
         MACRO                                                          00100002
         IHJSSCR                                                        00110002
*  03/12/73     LEVEL=01                                                00150002
SSCR     DSECT                     SUBSYSTEM CHECKPOINT RECORD          00250002
SSCRID   DS    CL1                 CHECKPOINT RECORD ID                 00300002
SSCRCODE EQU   X'01'               CODE FOR SSCR RECORD                 00350002
SSCRSSID DS    CL1                 SUBSYSTEM ID                         00400002
SSCRSUBS EQU   X'00'               SUBSYSTEM INTERFACE                  00450002
SSCRVSAM EQU   X'01'               VSAM                                 00500002
SSCRSPIE EQU   X'02'               SPIE                                 00550002
SSCRHDRL DS    CL2                 SSCR HDR LNGTH AND OFFSET TO         00600002
*                                  DATA AREA                            00650002
SSCRFCHN DS    F                   CHAIN PNTR IF OTHER SSCR'S           00700002
SSCRFLG1 DS    CL1                 FLAGS                                00750002
SSCRCKRS EQU   X'80'               1 = CHECKPOINT TIME                  00800002
*                                  0 = RESTART TIME                     00850002
SSCRRES1 DS    CL1                 RESERVED                             00900002
SSCRDATL DS    CL2                 DATA LENGTH                          00950002
SSCRDCBA DS    F                   ASSOCIATED DCB ADDRESS               01000002
SSCRDATA DS    0C                  DATA TO END OF SSCR                  01050002
         MEND  ,                   */                            YM1235 01100002
*%PLSDCL: ;                                                             01200002
*DECLARE                                                                01250002
*  1  SSCR  BASED,                 /* SUBSYSTEM CHECKPOINT RECORD    */ 01300002
*     2  SSCRID  CHAR(1),          /* CHECKPOINT RECORD ID           */ 01350002
*%DCL    SSCRDODE  CHAR;                                                01400002
*%SSCRCODE = '''01''X';            /* CODE FOR SSCR RECORD           */ 01450002
*     2  SSCRSSID  CHAR(1),        /* SUBSYSTEM ID                   */ 01500002
*%DCL    SSCRSUBS  CHAR;                                                01550002
*%SSCRSUBS = '''00''X';            /* SUBSYSTEM INTERFACE            */ 01600002
*%DCL    SSCRVSAM  CHAR;                                                01650002
*%SSCRVSAM = '''01''X';            /* VSAM                           */ 01700002
*%DCL    SSCRSPIE  CHAR;                                                01750002
*%SSCRSPIE = '''02''X';            /* SPIE                           */ 01800002
*     2  SSCRHDRL  FIXED(15),      /* SSCR HDR LNGTH AND OFFSET TO   */ 01850002
*                                  /* DATA AREA                      */ 01900002
*     2  SSCRFCHN  PTR(31),        /* CHAIN PNTR IF OTHER SSCR'S     */ 01950002
*     2  SSCRFLG1  BIT(8),         /* FLAGS                          */ 02000002
*        3  SSCRCKRS  BIT(1),      /* 1 = CHECKPOINT TIME            */ 02050002
*                                  /* 0 = RESTART TIME               */ 02100002
*     2  SSCRRES1  CHAR(1),        /* RESERVED                       */ 02150002
*     2  SSCRDATL  FIXED(15),      /* DATA LENGTH                    */ 02200002
*     2  SSCRDCBA  PTR(31),        /* ASSOCIATED DCB ADDRESS         */ 02250002
*     2  SSCRDATA  CHAR(*);        /* DATA TO END OF SSCR            */ 02300002
./  ADD  SSI=20780161,NAME=LCGASMSW
         GBLC  &LIB                                                     01000000
&LIB     SETC  'LIB2'                   ASSEMBLE AOS                    02000000
./  ADD  SSI=20780160,NAME=LCGASMS2
         GBLC  &LIB                                                     00050000
&LIB     SETC  'LIB4'                   ASSEMBLE AOS2                   00100000
./  ADD  SSI=20780159,NAME=LCGPLSSW
 %DECLARE  LIB  CHARACTER;                                              01000000
 %LIB  =  'LIB2';                   /* ASSEMBLE AOS */                  02000000
./  ADD  SSI=20780158,NAME=LCGPLSS2
 %DECLARE  LIB  CHARACTER;                                              00050000
 %LIB   =  'LIB4';                       /* ASSEMBLE AOS2 */            00100000
./  ADD  SSI=32650261,NAME=VCLOSE
 % VCLOSE: MACRO;                                                       00050002
         ANS('DO;');                                                    00100002
    IF MACLIST = '' THEN GO TO ERROR;                                   00150002
    IF MACLIST(1) = '' THEN GO TO ERROR;                                00200002
    IF MACLIST(1,1) = '' THEN GO TO ERROR;                              00250002
         ANS('RFY GPR01P RSTD;') COL(MACCOL);                           00300002
    IF MACLIST(1) = MACLIST(1,1) THEN                                   00350002
      ANS('GPR01P = ADDR('||MACLIST(1)||');') COL(MACCOL);              00400002
    ELSE                                                                00450002
      IF MACLIST(1,1) = '1' THEN;                                       00500002
      ELSE                                                              00550002
        ANS('GPR01P = '||MACLIST(1,1)||';') COL(MACCOL);                00600002
      ANS('CALL '||MACNAME||';') COL(MACCOL);                           00650002
         ANS(COMMENT('ENTER CLOSE ROUTINE'))COL(41);                    00660002
      ANS('RFY GPR01P UNRSTD;') COL(MACCOL);                            00700002
         ANS('END;') COL(MACCOL);                                       00750002
    RETURN;                                                             00800002
  ERROR:                                                                00850002
         ANS('END;') COL(MACCOL);                                       00900002
    ANS  MSG('INVALID PARAMETER PASSED FOR '||MACNAME);                 00950002
             RETURN CODE(12);                                           01000002
   % END;                                                               01050002
./  ADD  SSI=32650301,NAME=VJOURN
 %  VJOURN: MACRO;                                                      00050002
         ANS('DO;');                                                    00100002
    IF MACLIST = '' THEN GO TO ERROR;                                   00150002
    IF MACLIST(1) = '' THEN GO TO ERROR;                                00200002
    IF MACLIST(1,1) = '' THEN GO TO ERROR;                              00250002
         ANS('RFY GPR01P RSTD;') COL(MACCOL);                           00300002
    IF MACLIST(1) = MACLIST(1,1) THEN                                   00350002
      ANS('GPR01P = ADDR('||MACLIST(1)||');') COL(MACCOL);              00400002
    ELSE                                                                00450002
      IF MACLIST(1,1) = '1' THEN;                                       00500002
      ELSE                                                              00550002
        ANS('GPR01P = '||MACLIST(1,1)||';') COL(MACCOL);                00600002
      ANS('CALL '||MACNAME||';') COL(MACCOL);                           00650002
         ANS(COMMENT('ENTER JOURNAL ROUTINE'))COL(41);                  00660002
      ANS('RFY GPR01P UNRSTD;') COL(MACCOL);                            00700002
         ANS('END;') COL(MACCOL);                                       00750002
    RETURN;                                                             00800002
  ERROR:                                                                00850002
         ANS('END;') COL(MACCOL);                                       00900002
    ANS  MSG('INVALID PARAMETER PASSED FOR '||MACNAME);                 00950002
             RETURN CODE(12);                                           01000002
   % END;                                                               01050002
./  ADD  SSI=32650303,NAME=VOPEN
 % VOPEN: MACRO;                                                        00050002
         ANS('DO;');                                                    00100002
    IF MACLIST = '' THEN GO TO ERROR;                                   00150002
    IF MACLIST(1) = '' THEN GO TO ERROR;                                00200002
    IF MACLIST(1,1) = '' THEN GO TO ERROR;                              00250002
         ANS('RFY GPR01P RSTD;') COL(MACCOL);                           00300002
    IF MACLIST(1) = MACLIST(1,1) THEN                                   00350002
      ANS('GPR01P = ADDR('||MACLIST(1)||');') COL(MACCOL);              00400002
    ELSE                                                                00450002
      IF MACLIST(1,1) = '1' THEN;                                       00500002
      ELSE                                                              00550002
        ANS('GPR01P = '||MACLIST(1,1)||';') COL(MACCOL);                00600002
      ANS('CALL '||MACNAME||';') COL(MACCOL);                           00650002
         ANS(COMMENT('ENTER OPEN ROUTINE'))COL(41);                     00660002
      ANS('RFY GPR01P UNRSTD;') COL(MACCOL);                            00700002
         ANS('END;') COL(MACCOL);                                       00750002
    RETURN;                                                             00800002
  ERROR:                                                                00850002
         ANS('END;') COL(MACCOL);                                       00900002
    ANS  MSG('INVALID PARAMETER PASSED FOR '||MACNAME);                 00950002
             RETURN CODE(12);                                           01000002
   % END;                                                               01050002
./  ADD  SSI=32650304,NAME=VREADWR
 % VREADWR: MACRO;                                                      00050002
         ANS('DO;');                                                    00100002
    IF MACLIST = '' THEN GO TO ERROR;                                   00150002
    IF MACLIST(1) = '' THEN GO TO ERROR;                                00200002
    IF MACLIST(1,1) = '' THEN GO TO ERROR;                              00250002
         ANS('RFY GPR01P RSTD;') COL(MACCOL);                           00300002
    IF MACLIST(1) = MACLIST(1,1) THEN                                   00350002
      ANS('GPR01P = ADDR('||MACLIST(1)||');') COL(MACCOL);              00400002
    ELSE                                                                00450002
      IF MACLIST(1,1) = '1' THEN;                                       00500002
      ELSE                                                              00550002
        ANS('GPR01P = '||MACLIST(1,1)||';') COL(MACCOL);                00600002
      ANS('CALL '||MACNAME||';') COL(MACCOL);                           00650002
         ANS(COMMENT('ENTER VREAD/VWRITE ROUTINE'))COL(41);             00660002
      ANS('RFY GPR01P UNRSTD;') COL(MACCOL);                            00700002
         ANS('END;') COL(MACCOL);                                       00750002
    RETURN;                                                             00800002
  ERROR:                                                                00850002
         ANS('END;') COL(MACCOL);                                       00900002
    ANS  MSG('INVALID PARAMETER PASSED FOR '||MACNAME);                 00950002
             RETURN CODE(12);                                           01000002
   % END;                                                               01050002
./  ADD  SSI=32620009,NAME=VSCRATCH
         MACRO                                                          00094402
&NAME    VSCRATCH  &DSPCT=                                              00100002
         AIF       ('&DSPCT' EQ '').ERROR1                              00150002
         AIF       ('&DSPCT' NE '&DSPCT(1)').REG                        00200002
         LA        1,&DSPCT            LOAD DSPCT HDR ADDR IN REG 1     00250002
         AGO       .CONTD                                               00300002
.REG     AIF       ('&DSPCT(1)' EQ '1').CONTD                           00350002
         LR        1,&DSPCT(1)         LOAD DSPCT HDR ADDR IN REG 1     00400002
.CONTD   L         15,16               LOAD CVT ADDR IN REG 15          00450002
         L         15,CVTPVBP-CVTTCBP(,15)  LOAD VBP MOD ADDR IN R15    00500002
         L         15,16(,15)          LOAD IDAVBPS1 MOD ADDR IN R15    00550002
         BALR      14,15               BRANCH & LINK TO IDAVBPS1        00600002
         MEXIT                                                          00650002
.ERROR1  MNOTE     12,'OPERAND MISSING'                                 00700002
         MEND                                                           00750002
./  ADD  SSI=32620014,NAME=WICLOSE
         MACRO                                                          00050002
&NAME    WICLOSE &VDSCB=                                                00100002
&NAME    DS    0H                       *                               00150002
         AIF   ('&VDSCB' NE '&VDSCB(1)').REG1                           00200002
         AIF   ('&VDSCB' NE '').OK1                                     00250002
         MNOTE 12,'NO VDSCB SUPPLIED'                                   00300002
         MEXIT                                                          00350002
.OK1     ANOP                                                           00400002
         LA    1,&VDSCB                 VDSCB POINTER                   00450002
         AGO   .COM1                                                    00500002
.REG1    ANOP                                                           00550002
         AIF   ('&VDSCB(1)' EQ '1').COM1                                00600002
         LR    1,&VDSCB(1)              VDSCB POINTER                   00650002
.COM1    ANOP                                                           00700002
         L     15,X'10'                 CVT ADDRESSABILITY              00750002
         L     15,CVTPWI-CVTTCBP(,15)   WI BASE MODULE                  00800002
         BAL   14,4(,15)                GO TO WI CLOSE ROUTINE          00850002
         MEND                                                           00900002
./  ADD  SSI=32620015,NAME=WIEXCP
         MACRO                                                          00050002
&NAME    WIEXCP                                                         00100002
&NAME    L     15,X'10'                 CVT ADDRESSABILITY              00150002
         L     15,CVTPWI-CVTTCBP(,15)   WI BASE MODULE                  00200002
         BALR  14,15                    GO TO WIEXCP ROUTINE            00250002
         MEND                                                           00300002
./  ADD  SSI=32620016,NAME=WIJOURN
         MACRO                                                          00050002
&NAME    WIJOURN &TCB=,&CALLER=                                         00100002
&NAME    DS    0H                       *                               00150002
         AIF   ('&CALLER' NE 'CKPT').NOTCKPT                            00200002
         SR    0,0                      CHECKPOINT ID                   00250002
         AGO   .COM0                                                    00300002
.NOTCKPT ANOP                                                           00350002
         AIF   ('&CALLER' NE 'TASKCLOSE').ERROR1                        00400002
         LA    0,4                      TASK CLOSE ID                   00450002
         AGO   .COM0                                                    00500002
.ERROR1  ANOP                                                           00550002
         MNOTE 12,'CALLER NOT VALID, ''CKPT'' OR ''TASKCLOSE'' ONLY'    00600002
         MEXIT                                                          00650002
.COM0    ANOP                                                           00700002
         AIF   ('&TCB' NE '&TCB(1)').REG1                               00750002
         AIF   ('&TCB' NE '').OK1                                       00800002
         MNOTE 12,'NO TCB SUPPLIED'                                     00850002
         MEXIT                                                          00900002
.OK1     ANOP                                                           00950002
         LA    1,&TCB                 TCB POINTER                       01000002
         AGO   .COM1                                                    01050002
.REG1    ANOP                                                           01100002
         AIF   ('&TCB(1)' EQ '1').COM1                                  01150002
         LR    1,&TCB(1)                TCB POINTER                     01200002
.COM1    ANOP                                                           01250002
         L     15,X'10'                 CVT ADDRESSABILITY              01300002
         L     15,CVTPWI-CVTTCBP(,15)   WI BASE MODULE                  01350002
         BAL   14,8(,15)                GO TO WI CLOSE ROUTINE          01400002
         MEND                                                           01450002
./  ADD  SSI=82020427,NAME=WORKAREA
         MACRO                                                          19750002
         WORKAREA &LIST=,&AUX=                                          19800002
***************                                                @YL026UD 19850002
*                                                              @YL026UD 19900002
*      OS CATALOG WORKAREA FOR OS CVOL SUPPORT                 @YL026UD 19950002
*        (VS2 RELEASE 2)                                       @YL026UD 20000002
*                                                              @YL026UD 20050002
*      REFERENCED BY MODULES:                                  @YL026UD 20100002
*        IGG0CLCC, IGG0CLCD, IGG0CLCE, IGG0CLCF                         20150008
*                                                              @YL026UD 20200002
*      EXTENDED MVS CVOL SUPPORT                               @Z40CSRC 20250008
*        VS2 RELEASE 037 CHANGES                                        20258037
*                                                              @OZ06685 20266037
*A280200,C363700                                               @OZ12193 20274037
*C436500                                                       @OZ15077 20282037
*                                                              @OZ19636 20290037
*A274100                                                       @OZ32593 20295008
*                                                              @YL026UD 20300002
*            VS2 RELEASE 030 CHANGES                                    20310008
*A280200,C363700                                               @OZ12193 20320008
*C436500                                                       @OZ15077 20325008
*                                                                       20330008
***************                                                @YL026UD 20350002
         AIF   ('&LIST' EQ 'NO').OFF                                    20400002
         PRINT ON                                                       20450002
         AGO   .GEN                                                     20500002
.OFF     ANOP                                                           20550002
         PRINT OFF                                                      20600002
.GEN     ANOP                                                           20650002
WORKAREA DSECT                                                          20700002
BLDLIST  DS    F                       BEGINNING OF BLDL PARM LIST      20750002
SAVETTR3 EQU   BLDLIST                 TEMPORARY TTR SAVE               20800002
NAMTTR0  DS    0XL12                   CURRENT LEVEL NAME, TTR, TYPE    20850002
NAMTTR   DS    0XL11                   CURRENT LEVEL NAME, TYPE         20900002
NAME     DS    0CL8                    CURRENT LEVEL NAME               20950002
         DS    CL1                     CHAR 'G' FOR GDG NAME            21000002
GENNO    DS    CL4                     GENERATION NUMBER                21050002
         DS    CL3                     VERSION NUMBER                   21100002
ALIASNAM EQU   NAME                    ALIAS NAME                       21150002
TTR0     DS    0XL4                    TTR & TYPE                       21200002
TTR      DS    XL3                     TTR TO NEXT LEVEL OR DSCB TTR    21250002
TYPE     DS    XL1                     TYPE OF CATALOG ENTRY            21300002
TRUE     DS    0XL8                    TRUE NAME FOR ALIAS ENTRY        21350002
VOLCNT   DS    0XL2                    VOLUME COUNT FOR DSPE ENTRY      21400002
DATA     DS    XL62                    DATA (USUALLY VOL INFORMATION)   21450002
         DS    2F                      FILLER                           21500002
*                                                                       21550002
         ORG   TYPE                    DATA RETURNED FROM BLDL          21600002
         DS    XL2                     ZERO                             21650002
TYPEB    DS    XL1                     TYPE OF CAT ENTRY                21700002
TRUEB    DS    0XL8                    TRUE NAME LOCATED                21750002
VOLCNTB  DS    0XL2                    VOLUME COUNT LOCATED             21800002
DATAB    DS    XL62                    DATA LOCATED                     21850002
*                                                                       21900002
         ORG   VOLCNT                  SCRATCH PARM LIST         Y01965 21950002
DSNAME   DS    CL44                    FULL DSN FOR SCRATCH             22000002
SCRPARM  DS    3F                      SCRATCH PARAMETERS               22050002
SCRVOLS  DS    F                       VOLUMES FOR SCRATCH              22100002
*                                                                       22150002
         ORG   DATA+16                 NAME TABLE AREA           Y01965 22200002
NAMTABLE EQU   *                       EACH LEVEL OF NAME HAS AN ENTRY  22250002
*                                      COMPOSED OF DISP. FROM BEGINNING 22300002
*                                      AND LENGTH OF LEVEL MINUS 1      22350002
         DS    XL1'00'                 DISPLACEMENT FOR FIRST LEVEL     22400002
NAMLEN1  DS    XL1                     LENGTH OF NAME MINUS 1 FOR       22450002
*                                      FIRST LEVEL                      22500002
NAMDISP2 DS    XL1                     DISPLACEMENT FOR SECOND LEVEL    22550002
NAMLEN2  DS    XL1                     LEN-1 SECOND LEVEL               22600002
         DS    XL40                    REMAINING LEVEL NAME ENTRIES     22650002
NAMDELIM DS    XL1                     LAST DELIM IN NAME-- ' ' OR '('  22700002
*                                                                       22750002
         ORG                                                            22800002
ERRCODE  DS    0XL2                    ERROR CODES                      22850002
ERRCATSV DS    XL1                     NON-LOCATE ERROR CODE            22900002
ERRLOCSV DS    XL1                     LOCATE ERROR CODE                22950002
ERFLAG12 DS    0XL2                    FLAG1 AND FLAG2 FOR ENVIR REC    23000002
FLAG1    DS    XL1                     SEE BELOW                        23050002
RECATF   EQU   X'01'                   INDIC RECAT                      23100002
LOCATEF  EQU   X'02'                   INDIC LOCATE                     23150002
UCATDXF  EQU   X'04'                   INDIC UCATDX                     23200002
UCATDXFC EQU   X'FF'-UCATDXF           TURN UCATDX OFF TO UNCAT ONLY    23250002
CATBXF   EQU   X'08'                   INDIC CATBX                      23300002
CATBXFC  EQU   X'FF'-CATBXF            TURN CATBX OFF TO CAT ONLY       23350002
FREEDCB  EQU   X'10'                   INDIC SVC 28 FREED DCB           23400002
ERRFULL  EQU   X'20'                   CATLG FULL DURING CATBX OR BLDX  23450002
READICEF EQU   X'40'                   INDIC ICE MUST BE READ           23500002
RTNBLK   EQU   X'80'                   INDIC NEED TO RETURN BLK         23550002
FLAG2    DS    XL1                     SEE BELOW                        23600002
ETYPERR  EQU   X'80'                   INVALID ETYPE FIELD              23600237
ESTAEFL  EQU   X'40'                   ESTAE FAILURE FLAG       ZA03161 23601037
RPSDEV   EQU   X'20'                   INDIC CATALOG IS ON RPS DEVICE   23650002
ALIASSW  EQU   X'10'                   INDIC ALIAS ENTRY FOUND @YL026UD 23700002
ALIASBLT EQU   X'01'                   INDIC ALIAS ENTRY IS BUILT       23750002
GDGSW    EQU   X'02'                   INDIC GIPE IS FOUND              23800002
CVOLF    EQU   X'04'                   INDIC LAST ENTRY FOUND IS CVPE   23850002
SEQERR   EQU   X'08'                   INDIC SEQERR USED IN     ZA02665 23860000
*                                      IGG0CLC6                 ZA02665 23870000
CVOLFC   EQU   X'FF'-CVOLF             TURN OFF CVOL FLAG               23900002
         DS    0F                      ALIGN ON WORD BOUNDARY           23950002
SAVEAREA DS    XL28                    REGISTER SAVE AREA               24000002
*                                                                       24050002
         ORG   SAVEAREA                LENGTH DEFN               Y01965 24100002
SVAREA4  DS    XL16                    4 WORD SAVE AREA                 24150002
*                                                                       24200002
         ORG   SAVEAREA                LENGTH DEFN               Y01965 24250002
SVAREA5  DS    XL20                    5 WORD SAVE AREA                 24300002
SVAREA2X DS    XL8                     2 WORD SAVE AREA (AT END)        24350002
*                                                                       24400002
         ORG   SAVEAREA                LENGTH DEFN               Y01965 24450002
SVAREA6  DS    XL24                    6 WORD SAVE AREA                 24500002
TEMPBUFF EQU   SVAREA6                 INPUT BUFFER FOR ICE AND VICE    24550002
*                                                                       24600002
         ORG   TEMPBUFF                CONTROL ENTRY SAVE AREA   Y01965 24650002
LSTBLK   DS    XL3                     '.LSTBLK' FIELD OF ICE OR VICE   24700002
         DS    XL1                     TYPE FIELD                       24750002
FSTBLK   DS    XL3                     FST BLK OF LO LEV OR VOL INDEX   24800002
*                                                                       24850002
         ORG   SAVEAREA                LENGTH DEFN               Y01965 24900002
SVAREA7  DS    XL28                    7 WORD SAVE AREA                 24950002
NEXTCNT  DS    0XL8                    COUNT FIELD OF NEXT FREE BLK     25000002
NXTCCHHR DS    XL5                     CCHHR OF NEXT FREE BLK           25050002
         DS    XL3                     KEY AND DATA LENGTH              25100002
NEXTKEY  EQU   NEXTCNT                 KEY FIELD FOLLOWING BLK JUST RD  25150002
***************************************                                 25200002
         DS    0F                      ALIGN ON A FULL WORD             25250002
ICE      DS    0XL18                   PERTINENT INDEX CONTROL ENTRY    25300002
INAME    DS    0XL8                    NAME FIELD                       25350002
ICEPERT  DS    0XL8                    PERTINENT PORTION OF ICE         25400002
ILSTBLK  DS    XL3                     LAST BLOCK IN THIS INDEX         25450002
ITYPE    DC    XL1'03'                 TYPE FIELD                       25500002
IFSTBLK  DS    XL3                     TTR OF THIS BLOCK                25550002
ILIASCNT DS    XL1                     ALIAS COUNT                      25600002
         DS    0XL2                    ZERO                             25650002
***************************************                                 25700002
VICE     DS    0XL22                   VOLUME INDEX CONTROL ENTRY       25750002
VNAME    DS    0XL8                    NAME FIELD                       25800002
VICEPERT DS    0XL12                   PERTINENT PORTION OF VICE        25850002
VLSTBLK  DS    XL3                     TTR OF LAST BLOCK IN VOL INDEX   25900002
VTYPE    DC    XL1'05'                 TYPE FIELD                       25950002
VCLSTBLK DS    0XL3                    LAST BLOCK IN CATALOG DATA SET   26000002
         DS    XL2                     TT OF LAST BLK                   26050002
VHIREC   DS    XL1                     NUMBER OF RECORDS ON A TRACK     26100002
ZERO     DC    XL1'00'                 CONSTANT                         26150002
VSAVE    DS    0XL3                    SAVED PORTION OF VICE            26200002
VFHOLE   DS    XL3                     FIRST KEY = ZERO IN CATALOG      26250002
         DC    XL1'00'                 ZERO                             26300002
         DS    0XL2                    ZERO                             26350002
***************************************                                 26400002
UCATNAM  EQU   VNAME                   LEVEL NAME TO BE REMOVED(UCATDX) 26450002
*                                                                       26500002
         ORG   ICE                     SCRATCH FOR REL GDG PROC  Y01965 26550002
RELNUMBR DS    D                       EBCDIC OF REL GDG NUMBER         26600002
PKDNUMBR DS    D                       PACKED EQUIVALENT OF 'RELNUMBR'  26650002
*                                                                       26700002
         ORG                                                            26750002
FLAG3    DS    XL1                     SERVICES PERFORMED BY IGG0CLC5   26800002
WRBLK    EQU   X'01'                   INDIC BLOCK TO BE WRITTEN        26850002
FRVCB    EQU   X'02'                   INDIC VCB CHAIN TO BE FREED      26900002
BLVCB    EQU   X'04'                   INDIC VCB CHAIN TO BE BUILT      26950002
WRLST    EQU   X'08'                   INDIC LAST BLK OF GDG TO BE WRIT 27000002
EMPTY    EQU   X'10'                   INDIC GDG TO BE EMPTIED          27050002
NEEDBLK  EQU   X'20'                   INDIC NEED TO READ BLK FOR UPDAT 27100002
FRBLK    EQU   X'40'                   INDIC BLOCK TO BE FREED          27150002
GDS      EQU   X'80'                   INDIC GXXXXV00 IS 'NAME' FORMAT  27200002
FLAG4    DS    XL1                     FLOW CONTROL IN IGG0CLC6         27250002
CONTIGL  EQU   X'01'                   INDIC FREE BLK FOLLOWS LINKTTR   27300002
WROTE    EQU   X'02'                   TURNED ON AT FIRST WRITE         27350008
ERRORTTR EQU   X'04'                   SEQ ERROR HOLD FLAG     @OZ12193 27380037
GDGPLUS  EQU   X'08'                   GDG REATIVE # IS PLUS   @OZ32593 27380108
CONTIGW  EQU   X'10'                   INDIC FREE BLK FOLLOWS WRITETTR  27410108
UPDATED  EQU   X'40'                   INDIC UPDATE IS COMPLETE         27440108
UPDATING EQU   X'80'                   INDIC UPDATE IN PROCESS          27470108
CONTIGLC EQU   X'FF'-CONTIGL           TURN OFF CONTIGL                 27500108
CONTIGWC EQU   X'FF'-CONTIGW           TURN OFF CONTIGW                 27530108
CONTIGC  EQU   X'FF'-CONTIGL-CONTIGW   TURN OFF CONTIGW AND CONTIGL     27560108
COMPLETE EQU   UPDATING+UPDATED        USED IN AN XI INSTRUCTION        27590108
*                                           TO TURN UPDATING OFF AND    27620108
*                                           UPDATED ON                  27680108
STOP     EQU   UPDATED+WROTE           USED AS A MASK. WHEN RESULT IS   27850002
*                                           MIXED, OK TO STOP UPDATE.   27900002
*                                           (UPDATED IS ON & WROTE IS   27950002
*                                           OFF)                        28000002
NAMLEN   DS    H                       (LENGTH-1) OF FULL NAME          28050002
         DS    0F                      ALIGN ON WORD BDY                28100002
NAMDELMP DS    F                       LAST DELIM IN NAME               28150002
NAMLSTP  DS    F                       LAST DISPL OF NAME IN TABLE      28200002
         DS    XL1                     *RESERVED*                       28250002
FLAG5    DS    XL1                     FLAG BYTE               @Z40CSRC 28300008
*                                      FLOW CONTROL IN IGG0CLC7         28310008
FST      EQU   X'01'                   INDIC '.FSTBLK' NEEDS UPDATE     28350002
LST      EQU   X'02'                   INDIC '.LSTBLK' NEEDS UPDATE     28400002
VFH      EQU   X'04'                   INDIC 'VFHOLE' NEEDS UPDATE      28450002
LIN      EQU   X'08'                   INDIC LOW LEVEL IS INVOLVED      28500002
*                                      FLAG BITS FOLLOW        @Z40CSRC 28510008
OCWRACAT EQU   X'10'                   CAT IS RAC-INDICATED    @Z40CSRC 28520008
MODMAP1  DS    XL1                     MODULE MAP BYTE                  28550002
MODCLC1  EQU   X'80'                   INDICATE ENTRY TO IGG0CLC1       28600002
MODCLC2  EQU   X'40'                   INDICATE ENTRY TO IGG0CLC2       28650002
MODCLC3  EQU   X'20'                   INDICATE ENTRY TO IGG0CLC3       28700002
MODCLC4  EQU   X'10'                   INDICATE ENTRY TO IGG0CLC4       28750002
MODCLC5  EQU   X'08'                   INDICATE ENTRY TO IGG0CLC5       28800002
MODCLC6  EQU   X'04'                   INDICATE ENTRY TO IGG0CLC6       28850002
MODCLC7  EQU   X'02'                   INDICATE ENTRY TO IGG0CLC7       28900002
         DS    0F                      ALIGN ON WORD BOUNDARY           28950002
BLDLPARM DS    0XL12                   INPUT PARAMETERS TO IECPBLDL     29000002
EPBLDL   DS    F                       ENTRY POINT TO IECPBLDL          29050002
BLDLISTP DS    F                       POINTS TO BLDL PARM LIST         29100002
DELTTR3  EQU   BLDLISTP                FIRST DELETEABLE VCB      Y01113 29150002
EXCLUDE  EQU   DELTTR3                 BLOCK LEFT OUT OF CHAIN   Y01113 29200002
PTRS     DS    0XL12                   DCBADDR, DEBADDR, AND FOUNDENT   29250002
DCBADDR  DS    F                       DCB ADDRESS                      29300002
RPSAVEP  EQU   DCBADDR                 RPS WORKAREA POINTER             29350002
DEBADDR  DS    F                       DEB ADDRESS                      29400002
FOUNDENT DS    F                       POINTS TO FOUND ENTRY IN BLOCK   29450002
CONVERTS DS    0XL8                    CONVERT ENRTY POINTS             29500002
EPTORLTV DS    F                       ENTRY POINT TO IECPRLTV          29550002
EPTOABSL DS    F                       ENTRY POINT TO IECPCNVT          29600002
SVRBEXTP DS    F                       PTR TO SVRB EXTENTED SAVE AREA   29650002
ADDING   DS    F                       PTR SAVE WHILE MOVING NEW ENTRY  29700002
UCATICE  EQU   ADDING                  TTR OF ICE OF BLOCK TO BE UPDTD  29750002
*                                      FOR UCATDX FCN, C2, C3           29800002
         DS    0D                      ALIGN ON DOUBLE WORD             29850002
SVBALREG DS    F                       BRANCH & LINK REG SAVE  @YL026UD 29900002
         DS    3F                      RESERVED                @YL026UD 29950002
         DS    0F                      ALIGN ON WORD BOUNDARY           30000002
LNKENTRY DS    0XL12                   LINK ENTRY                       30050002
HIBIN    DC    XL8'FFFFFFFFFFFFFFFF'   HIGH BINARY NUMBER               30100002
MASKFF   EQU   HIBIN                   USED TO COMPLEMENT GDG NO.       30150002
ERTTRS   DS    0XL24                   FOR ENVIRONMENT RECORD    Y01113 30200002
TTRS     DS    0XL8                    TTRS FOR ZEROING          Y01113 30250002
LINKTTR  DS    F                       LINK TTR                         30300002
WRITETTR DS    F                       TTR TO WRITE BLK                 30350002
VCBTTR   EQU   LINKTTR                 VCB TTR                          30400002
ICETTR   DS    F                       TTR TO CURRENT ICE               30450002
DELTTR1  DS    F                       TTR OF BLK TO DELETE             30500002
SAVETTR  EQU   DELTTR1                 TEMPORARY SAVE FOR A TTR         30550002
READTTR  DS    F                       TTR OF BLK TO READ               30600002
CWAP     DS    F                       PTR TO CATLG CONTROLLER WAY01113 30650002
NAMLF    DS    H                       NUMBER OF LEVELS IN NAME FOUND   30700002
NAMLG    DS    H                       NUMBER OF LEVELS IN NAME GIVEN   30750002
DEVOL    DS    0XL13                   SEE BELOW                        30800002
DEVTYPE  DS    XL4                     DEVICE TYPE FOR CURRENT SYSCTLG  30850002
THETA    DS    XL1                     RPS THETA VALUE                  30900002
INDEXLEN DS    XL1                     LENGTH OF ALL LEVELS GIVEN       30950002
*                                      EXCEPT LAST. USED FOR SCRATCH    31000002
ERRSV2H  DS    XL1                     TEMP STORAGE FOR SVC 28 ERROR    31050002
VOLSN    DS    CL6                     VOL SER OF CURRENT SYSCTLG       31100002
         ORG   WORKAREA                RETURNED DATA AREA        Y01965 31150002
RETDATA  DS    0XL256                  AREA FOR RETURNED DATA           31200002
         DS    XL242                   VOLUME LIST                      31250002
         DC    XL10'00'                ALWAYS ZERO FOR VCB              31300002
RETDSCBT DS    0XL4                    TTR OF THE DATA SET'S DSCB       31350002
RETVCBLK DS    XL3                     VCB LINK TTR                     31400002
         DS    XL1                     ZERO                             31450002
RETDVTYP EQU   RETDSCBT                DEVICE TYPE OF THE CVOL          31500002
         DS    XL3                     FILLER                           31550002
RETCVOL  DS    CL6                     VOLUME SERIAL OF THE CVOL        31600002
         ORG                                                            31650002
*                                                                       31700002
*********************************************************************** 31750002
VICESAVE DS    XL3                       VICE SAVEAREA                  31800002
BALREGS  DS    F                         SAVE ONE BALREG                31850002
*********************************************************************** 31900002
*                                                                       31950002
BLDLAREA DS    0D                      BLDL WORKAREA           @YL026UD 32000002
*                                                                       32050002
SVAREA2H DS    12F                     SAVEAREA FOR IGC0002H   @YL026UD 32100002
*                                                                       32150002
ESTAEPRM DS    0F                      ESTAE PARAMETER LIST    @YL026UD 32200002
ESTAER5  DS    F                       ESTAE REG  5 (SVRB)     @YL026UD 32250002
ESTAER6  DS    F                       ESTAE REG  6 (CATLG WKA)@YL026UD 32300002
ESTAER13 DS    F                       ESTAE REG 13 (BLDL WKA) @YL026UD 32350002
ESTAEFLG DS    F                       ESTAE SUCCESS/FAIL FLAG @YL026UD 32400002
*                                                                       32450002
ESTAESVA DS    0F                      ESTAE INFORMATION AREA  @YL026UD 32500002
SVOPNWAP DS    F                       OPEN WORKAREA ADDRESS   @YL026UD 32550002
SVRPSWAP DS    F                       RPS  WORKAREA ADDRESS   @YL026UD 32600002
SVVCBLK4 DS    F                       VCB BLOCK ADDRESS (CLC4)@YL026UD 32650002
SVVCBLK5 DS    F                       VCB BLOCK ADDRESS (CLC5)@YL026UD 32700002
SVFMTWAP DS    F                       FORMAT WORKAREA ADDRESS @YL026UD 32750002
SVEXTWAP DS    F                       EXTEND WORKAREA ADDRESS @YL026UD 32800002
ESTAELST DS    4F                      ESTAE RECORD PARM LIST  @YL026UD 32850002
*                                                                       32900002
BLDLSTRT DS    50D                     BLDL WORKAREA           @YL026UD 32950002
BLDLEND  EQU   *                                                        33000002
*                                                                       33050002
*                                                                       33100002
         ORG   BLDLSTRT                BLDL WORKAREA           @YL026UD 33150002
BLDLBUFF DS    XL256                   BLDL BUFFER                      33200002
BLDLCNT  DS    XL5                     CCHHR OF BLK READ BY BLDL        33250002
         DS    XL3                     KEY AND DATA LEN OF BLK          33300002
BLDLCCWS DS    6D                      BLDL CCWS                        33350002
BLDLECB  DS    F                       BLDL ECB                         33400002
BLDLIOB  DS    8F                      BLDL IOB                         33450002
BLDLMBB  DS    XL3                     IOB MBB                          33500002
BLDLCHR  DS    XL5                     IOB CCHHR                        33550002
BLDLCONS DS    5F                      BLDL CONSTANTS                   33600002
BASESAVE DS    1F                      BASE OF CATALOG WA               33650002
*                                                                       33700002
         ORG   BLDLCCWS                DSNAME SAVEAREA           Y01965 33750002
RESALIAS DS    CL44                    SAVE AREA FOR GIVEN ALIAS NAME   33800002
*                                                                       33850002
         ORG   BLDLSTRT                CATALOG WORKAREA        @YL026UD 33900002
INPUT    DS    0XL256                  INPUT BUFFER                     33950002
TRTABLE  EQU   INPUT                   TRT TABLE                        34000002
INDATA   DS    0XL256                  DESCRIBES INPUT DATA BLK         34050002
INBYTSU  DS    XL2                     INPUT, BYTES USED FIELD          34100002
INENTRY  DS    XL254                   INPUT, ENTRY DATA                34150002
CHPROG   DS    0D                      CHANNEL PROG--ALIGN ON DBLE WD   34200002
CCWFRST5 DS    0XL40                   FIRST 5 CCWS                     34250002
SIDE1    DS    1D                      SEARCH ID EQUAL CCW              34300002
TIC1     DS    1D                      TIC TO ABOVE CCW (SIDE1)         34350002
ERCCWL   DS    0CL16                   ER CCWS RELOCATION               34400002
OPTNCCW  DS    1D                      OPTION CCW                       34450002
RC       DS    1D                      READ COUNT CCW                   34500002
RCOP     EQU   X'92'                   READ COUNT OP CODE               34550002
SKE      DS    1D                      SEARCH KEY EQUAL CCW             34600002
CCWSEC2  DS    0XL16                   LAST TWO CCWS                    34650002
TIC2     DS    1D                      TIC TO RC CCW                    34700002
NOP      DS    1D                      NOP CCW                          34750002
ECB      DS    F                       ECB (BUILT BY BLDL)              34800002
IOB      DS    0XL40                   IOB (SEE BELOW)                  34850002
         DS    F                       FIRST WORD OF IOB                34900002
IOBECB   DS    F                       ECB CODE AND ADDRESS             34950002
         DS    2F                      CSW                              35000002
IOBCHPR  DS    F                       POINTER TO CHANNEL PROG.         35050002
IOBDCB   DS    F                       POINTER TO DCB                   35100002
         DS    2F                      SYSTEM USE                       35150002
IOBSKADD DS    2F                      SEEK ADDRESS (MBBCCHHR)          35200002
CCWLST3  DS    0XL24                   PART OF CCW POOL                 35250002
RKD      DS    XL8                     READ KEY AND DATA CCW            35300002
RKDOP    EQU   X'0E'                   READ KEY AND DATA OP CODE        35350002
RD       DS    XL8                     READ DATA CCW                    35400002
RDOP     EQU   X'06'                   READ DATA OP CODE                35450002
WKD      DS    XL8                     WRITE KEY AND DATA CCW           35500002
WKDOP    EQU   X'0D'                   WRITE KEY AND DATA OP CODE       35550002
WDOP     EQU   X'05'                   WRITE DATA OP CODE               35600002
OUTPUT   DS    0XL264                  OUTPUT BUFFER                    35650002
OUTKEY   DS    XL8                     KEY FIELD OF BUFFER              35700002
OUTDATA  DS    0XL256                  DATA FIELD OF BUFFER             35750002
OUTBYTSU DS    XL2                     OUTPUT, BYTES USED FIELD         35800002
OUTENTRY DS    XL254                   OUTPUT, ENTRY DATA               35850002
OUTLKLMT EQU   OUTENTRY+242            LAST POSSIBLE LOCATION FOR ENTRY 35900002
*                                                                       35950002
         ORG   OUTENTRY                FLD DEFN OF 'ICE'         Y01965 36000002
OUTICE   DS    0CL18                   ***ICE***                        36050002
         DS    CL8                     ICE NAME                         36100002
OUTILBLK DS    CL3                     LAST BLK IN THIS INDEX           36150002
OUTICECD DC    XL1'03'                 TYPE FIELD                       36200002
OUTILL   DS    CL3                     TTR OF THIS BLOCK                36250002
         DC    XL3'00'                 ZERO                             36300002
         ORG                                                            36310037
SAVEKEY  DS    CL8                     FOR SEQ CHK IN CLC6      ZA06685 36350037
CONWORK  DS    CL8                     8 BYTE WORK AREA        @OZ12193 36370037
*                                                                       36400002
*                                                                       36450002
WORKEND  EQU   *                       END LABEL                        36500002
*                                                                       36550002
         EJECT                                                          36600002
         AIF   ('&AUX' EQ 'NO').END                                     36650002
         DS    0D                      ALIGN ON DOUBLE WORD             36700002
RPSD     DSECT                                                          36750002
RPSCCW   DS    0XL16                   RPS CCWS                         36800002
RPSSS    DS    1D                      SET SECTOR CCW                   36850002
RPSTIC   DS    1D                      TICS TO NORMAL CHANNEL PROGRAM   36900002
RPSINPUT DS    0XL16                   INPUT PARAMETERS                 36950002
RPSCNVT  DS    1F                      SECTOR VALUE CONVERT ROUTINE     37000002
*                                           ADDR                        37050002
RPSDDKR  DS    1F                      DD=BLOCKSIZE=256, K=KEY LENGTH=  37100002
*                                           8, R=RECORD NUMBER          37150002
RPSR1    DS    1F                      ADDRESS OF THIS DSECT SINCE IT   37200002
*                                           IS BASED ON R1              37250002
RPSPTR   DS    1F                      DEVTYP CODE & PTR TO SECTOR VAL  37300002
RPSAVE   DS    10F                     REGISTER SAVE AREA               37350002
*                                                                       37400002
*                                                                       37450002
RPSEND   EQU   *                       RPS END LABEL                    37500002
*                                                                       37550002
         EJECT                                                          37600002
CAMLSTD  DSECT                                                          37650002
         DS    0F                                                       37700002
CAMOPTN1 DS    XL1                     FIRST OPTION BYTE                37750002
CAMCVOL  EQU   X'80'                   CVOL IS SPECIFIED                37800037
*  RESERVED    X'40'                                                    37830037
CAMCAT   EQU   X'20'                   CAT OR CATBX                     37860037
CAMRECAT EQU   X'10'                   RECAT                            37890037
CAMUNCAT EQU   X'08'                   UNCAT OR UCATDX                  37920037
*  RESERVED    X'04'                                                    37950037
CAMBLOCK EQU   X'02'                   LOCATE BLOCK BY TTR              37980037
*RESERVED      X'01'                                                    38010037
*                                                                       38040037
CAMOPTN2 DS    XL1                     SECOND OPTION BYTE               38070037
CAMNOALC EQU   X'80'                   DON'T ALLOCATE CVOL              38100037
CAMBLDX  EQU   X'40'                   BLDX OR CATBX                    38130037
CAMBLDG  EQU   X'20'                   BLDG                             38160037
CAMBLDA  EQU   X'10'                   BLDA - BUILD ALIAS               38190037
CAMLNKX  EQU   X'08'                   LNKX - CONNECT CVOL              38220037
CAMDLTX  EQU   X'04'                   DLTX OR UCATDX                   38250037
CAMDSCBT EQU   X'02'                   DSCB TTR SPECIFIED               38280037
CAMDLTA  EQU   X'01'                   DLTA - DELETE ALIAS              38310037
*                                                                       38340037
CAMOPTN3 DS    XL1                     THIRD OPTION BYTE                38370037
CAMDRPX  EQU   X'80'                   DISCONNECT CVOLS                 38400037
CAMDELET EQU   X'40'                   SCRATCH GDG DATA SETS            38430037
*  RESERVED    X'20'                                                    38460037
CAMTIOT  EQU   X'10'                   SYSZTIOT ALREADY ENQUED @OZ19636 38490037
CAMEMPTY EQU   X'08'                   EMPTY FULL GDG                   38520037
CAMSLOCB EQU   X'04'                   SUPERLOCATE WITH BASE SUPPLIED   38550037
CAMSLOC  EQU   X'02'                   SUPERLOCATE                      38580037
CAMAM0   EQU   X'01'                   'CAMXXXXX' DEFNS DO NOT   Y01113 38900002
*                                      APPLY, THIS IS A VSAM CPL Y01113 38950002
CAMGEN   DS    XL1                     MAXIMUM SIZE FOR THE GDG.        39000002
CAMPTR1  DS    F                                                        39050002
CAMCVOLP DS    F                       CVOL VOLUME SERIAL ADDRESS       39100002
CAMPTR3  DS    F                                                        39150002
CAMDSCBP DS    F                       DSCBTTR ADDRESS                  39200002
         EJECT                                                          39250002
SVRBEXTD DSECT                                                          39300002
         DS    0F                                                       39350002
SVRBEXT  DS    0CL48                   SVRB EXTENTED SAVE AREA          39400002
ENQPARM  DS    0CL16                   ENQ PARAMETER LIST               39450002
ENQEND   DS    CL1                     LAST PARAMETER LIST INDICATOR    39500002
ENQRLEN  DS    CL1                     RNAME LENGTH                     39550002
*                                                                       39600002
ENQFLAGS DS    CL1                     INPUT FLAGS TO ENQ/DEQ           39650002
SHARE    EQU   X'80'                   INDICATES SHARE REQUEST          39700002
SMCSTEP  EQU   X'10'                   STEP MUST COMPLETE               39750002
SMCSTEPC EQU   X'FF'-SMCSTEP           TURN OFF SMC FLAG         Y01965 39800002
*                                                                       39850002
*      'BITONE' & 'BITFOUR' PERTAIN TO THE SCOPE OF REQUEST    @YL026UD 39900002
*      (STEP, SYSTEM, SYSTEMS, OR RESERVE)                              39950002
*                                                                       40000002
BITONE   EQU   X'40'                                           @YL026UD 40050002
BITFOUR  EQU   X'08'                                           @YL026UD 40100002
RESERVE  EQU   BITFOUR                 RESERVE THE DEVICE      @YL026UD 40150002
SYSTEM   EQU   BITONE                  ACROSS THE SYSTEM       @YL026UD 40200002
SYSTEMS  EQU   BITONE+BITFOUR          ACROSS ALL SYSTEMS      @YL026UD 40250002
HAVE     EQU   X'01'                   HAVE                             40300002
EXCL     EQU   X'FF'-SHARE             EXCLUSIVE REQUEST                40350002
ENQRC    DS    CL1                     RETURN CODE FROM ENQ/DEQ         40400002
*                                                                       40450002
*     POINTERS TO QNAME, RNAME, AND UCB ADDRESS                         40500002
*                                                                       40550002
ENQPTRS  DS    3F                                                       40600002
ENQNAME  DS    XL8                     QNAME                            40650002
ENQRNAME DS    0XL12                   RNAME                            40700002
ENQRNAM8 DS    XL8                     FIRST EIGHT CHARS OF RNAME       40750002
UCBADDR  DS    XL4                     UCB ADDRESS OF CATALOG VOLUME    40800002
HILVLNAM DS    CL8                     HIGH LEVEL NAME OF THE DATA SET  40850002
CVOLCTR  DS    XL1                     NO. OF CVOLS FOUND               40900002
         EJECT                                                          40950002
ENTRY    DSECT                                                          41000002
EINDEX   DS    0CL12                   BASIS OF ALL ENTRIES             41050002
*                                                                       41100002
ENAME    DS    0CL8                    ENTRY NAME                       41150002
         DS    CL1                                                      41200002
EGENNO   DS    CL4                     GENERATION NUMBER                41250002
         DS    CL3                                                      41300002
ETTRTYPE DS    0XL4                    TTR & TYPE FIELDS                41350002
ETTR     DS    XL3                     TTR                              41400002
ETYPE    DS    XL1                     COUNT OF HALFWORDS FOLLOWING     41450002
* ALLOWABLE ETYPE FIELD ENTRIES                                         41451037
EIPE     EQU   X'00'                   IPE                              41452037
EVCBPE   EQU   X'01'                                                    41453037
EGIPE    EQU   X'02'                                                    41454037
EICE     EQU   X'03'                                                    41455037
EALIAS   EQU   X'04'                                                    41456037
OLDCVOL  EQU   X'03'                                                    41457037
NCVOL    EQU   X'05'                                                    41458037
DSPE7    EQU   X'07'                                                    41459037
DSPED    EQU   X'0D'                                                    41459437
DSPE13   EQU   X'13'                                                    41460037
DSPE19   EQU   X'19'                                                    41461037
DSPE1F   EQU   X'1F'                                                    41462037
EXTENSN  EQU   *                                                        41500002
*                                                                       41550002
*                                                                       41600002
         ORG   ETTR                    ***DSPE***                       41650002
EDSCBTTR DS    XL3                     TTR OF DSCB OF DATA SET          41700002
         DS    XL1                     COUNT OF HALFWORDS FOLLOWING     41750002
EVOLIST  DS    0XL62                   VOLUME LIST                      41800002
EVOLCNT  DS    XL2                     COUNT OF DATA SET'S VOLUMES      41850002
EDATA    DS    5XL12                   LIST OF DATA SET'S VOLUMES       41900002
*                                                                       41950002
*                                                                       42000002
         ORG   EXTENSN                 ***VCBPE***                      42050002
*                                                                       42100002
*                                                                       42150002
         ORG   EXTENSN                 ***CVPE***                       42200002
EDEVTYP  DS    XL4                     DEVICE TYPE OF THE CVOL          42250002
EVOLID   DS    CL6                     VOLUME SERIAL NUMBER OF THE CVOL 42300002
*                                                                       42350002
*                                                                       42400002
         ORG   EXTENSN                 ***OLD CVPE***                   42450002
EVOLIDO  DS    CL6                     VOLUME SERIAL NUMBER OF THE CVOL 42500002
*                                                                       42550002
*                                                                       42600002
         ORG   EXTENSN                 ***AE***                         42650002
ETRUEN   DS    CL8                     TRUE HIGH LEVEL NAME             42700002
*                                                                       42750002
*                                                                       42800002
         ORG   EXTENSN                 ***GIPE***                       42850002
EGIPEF   DS    0XL4                    GIPE FIELD                       42900002
EGFLAGS  DS    XL1                     OPTION FLAGS FOR GROUP           42950002
EGDELETE EQU   X'02'                   INDIC DELETE OPTION              43000002
EGEMPTY  EQU   X'01'                   INDIC EMPTY OPTION               43050002
EGMAXSIZ DS    XL1                     SPECIFIED MAXIMUM SIZE OF GROUP  43100002
EGCURSIZ DS    XL2                     CURRENT SIZE OF GROUP            43150002
         EJECT                                                          43200002
DCBAREA  DSECT                                                          43250002
         DS    6F                                                       43300002
AREA     DS    0F                                                       43350002
NMBYTES  DS    1F                      SP NO. & LENGTH OF AREA          43400002
         DS    1F                      CCHH OF SYSCTLG DSCB             43450002
CATWAP   DS    1F                      PTR TO 'WORKAREA' FOR 'OPENEXT'  43500002
BLDLAP   DS    1F                      PTR TO 'BLDLAREA' FOR 'OPENEXT'  43550002
         DS    1F                      DEB & 'OPENEXT' WORKAREA         43600002
         DS    81D                     DEB & 'OPENEXT' WORKAREA OZ15077 43650008
AREAEND  EQU   *                                                        43700002
         EJECT                                                          43750002
VCBD     DSECT                                                          43800002
         DS    0F                                                       43850002
VCBLOCK  DS    0XL256                  VOLUME CONTROL BLOCK             43900002
VCBVOLCT DS    H                       VOLUME COUNT                     43950002
VCBVOLS  DS    XL240                   VOLUME LIST                      44000002
         DC    XL10'00'                                                 44050002
VCBLNK   DS    XL3                     VCB LINK TTR                     44100002
         DC    XL1'00'                                                  44150002
VCBBAL   DS    F                       SAVE AREA FOR A LINKAGE REG      44200002
*                                                                       44250002
.END     ANOP                                                           44300002
         PRINT ON                                                       44350002
         MEND                                                           44400002
