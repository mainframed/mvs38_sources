./  ADD  SSI=72590398,NAME=IGC0002F
         TITLE '***** IGC0002F   CATALOG CONTROLLER LEVEL 3 *****      *00001000
                        '                                               00002000
IGC0002F CSECT ,                                                   0001 00003000
@MAINENT BALR  @15,0                                               0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT-2)                                 00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'IGC0002F  77.259'                                 0001 00009000
IGG0102F BALR  @15,0                                               0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00170-IGG0102F-2)                                 00013000
         ENTRY IGG0102F                                                 00014000
         DROP  @15                                                      00015000
@PROLOG  BALR  @11,0                                               0001 00016000
@PSTART  DS    0H                                                  0001 00017000
         USING @PSTART,@11                                         0001 00018000
         AH    @15,4(,@15)                                         0001 00019000
         BR    @15                                                 0001 00020000
@EP00001 DS    0H                                                  0002 00021000
RBPRFXLN EQU 64                                                         00022000
RBPRFLNA EQU 32                                                         00023000
PRBLEN   EQU 136                                                        00024000
SIRBLEN  EQU 200                                                        00025000
TIRBLEN  EQU 136                                                        00026000
IRBLEN   EQU 128                                                        00027000
SVRBLEN  EQU 224                                                        00028000
*                                                                  0096 00029000
*   /*****************************************************************/ 00030000
*   /*                                                               */ 00031000
*   /* THIS IS THE MAIN ROUTINE THROUGH WHICH ALL CALLS TO SVC26     */ 00032000
*   /* ENTER. IT SAVES ALL THE CRITICAL REGISTERS AFTER OBTAINING THE*/ 00033000
*   /* WORK AREA.                                                    */ 00034000
*   /*                                                               */ 00035000
*   /*****************************************************************/ 00036000
*                                                                  0096 00037000
*   HOLD1=PARMPTR;                  /* PRESERVE PARMLIST ADDRESS.    */ 00038000
         LR    HOLD1,PARMPTR                                       0096 00039000
*   RFY                                                            0097 00040000
*    (R6,                                                          0097 00041000
*     RETCODE,                                                     0097 00042000
*     HOLD1) RSTD;                  /* RESTRICT REGS         @OZ09365*/ 00043000
*   RFY                                                            0098 00044000
*     CAMLSTD BASED(HOLD1);         /* TEMP CHNG CAMLIST BASE        */ 00045000
*   IF CAMAM0='0'B THEN             /* OS REQUEST?           @OZ09365*/ 00046000
         TM    CAMAM0(HOLD1),B'00000001'                           0099 00047000
         BNZ   @RF00099                                            0099 00048000
*     IF CAMLTTR='0'B THEN          /* NOT LOCATE BY TTR?    @OZ09365*/ 00049000
         TM    CAMLTTR(HOLD1),B'00000010'                          0100 00050000
         BNZ   @RF00100                                            0100 00051000
*       DO;                         /* THEN DO               @OZ09365*/ 00052000
*         R6=CAMPTR1;               /* POINT TO NAME         @OZ09365*/ 00053000
         L     R6,CAMPTR1(,HOLD1)                                  0102 00054000
*         GEN;                                                     0103 00055000
            CLI 0(R6),X'00'           /*FIRST CHAR ZERO?   @OZ09365*/   00056000
            BNE NM0001                /*NO, BR - NAME OK   @OZ09365*/   00057000
            LA  RETCODE,20            /*SET INVLD NAME RC  @OZ09365*/   00058000
            BR  14                    /*RTRN SVC26 CALLER  @OZ09365*/   00059000
NM0001   DS  0H                                                         00060000
*       END;                                                       0104 00061000
*     ELSE                                                         0105 00062000
*       ;                                                          0105 00063000
@RF00100 DS    0H                                                  0106 00064000
*   ELSE                                                           0106 00065000
*     ;                                                            0106 00066000
@RF00099 DS    0H                                                  0107 00067000
*   RFY                                                            0107 00068000
*    (R6,                                                          0107 00069000
*     RETCODE,                                                     0107 00070000
*     HOLD1) UNRSTD;                /* RELEASE REGS          @OZ09365*/ 00071000
*   RFY                                                            0108 00072000
*     CAMLSTD BASED(CAMPLPTR);      /* RSTR CAMLIST BASE     @OZ09365*/ 00073000
*   GEN;                                                           0109 00074000
        L    0,@SIZDATD                                                 00075000
        GETMAIN R,LV=(0)                                                00076000
        LR   12,1                     /* ESTABLISH WORKAREA ADDRESS*/   00077000
        USING @DATD,12                                                  00078000
        LA   13,@SA00001                                                00079000
*   CAMPLPTR=HOLD1;                                                0110 00080000
         ST    HOLD1,CAMPLPTR                                      0110 00081000
*   CTGPLPTR=HOLD1;                                                0111 00082000
         ST    HOLD1,CTGPLPTR                                      0111 00083000
*   XCTLPARM=ADDR(XCTLNAME);                                       0112 00084000
         LA    @15,XCTLNAME                                        0112 00085000
         ST    @15,XCTLPARM                                        0112 00086000
*   XCTLNUL=ALLZERO;                                               0113 00087000
         MVC   XCTLNUL(4),ALLZERO                                  0113 00088000
*   XCTLNAME='IGG0CLA1';                                           0114 00089000
         MVC   XCTLNAME(8),@CC01157                                0114 00090000
*   CVTSAV=CVTPTR;                                                 0115 00091000
         ST    CVTPTR,CVTSAV                                       0115 00092000
*   TCBSAV=TCBPTR;                                                 0116 00093000
         ST    TCBPTR,TCBSAV                                       0116 00094000
*   SVRBSAV=SVRBPTR;                                               0117 00095000
         ST    SVRBPTR,SVRBSAV                                     0117 00096000
*   EXITSAV=EXITPTR;                                               0118 00097000
         ST    EXITPTR,EXITSAV                                     0118 00098000
*   RFY                                                            0119 00099000
*    (HOLD1,                                                       0119 00100000
*     CVTPTR,                                                      0119 00101000
*     TCBPTR,                                                      0119 00102000
*     SVRBPTR,                                                     0119 00103000
*     EXITPTR) UNRESTRICTED;        /* RELEASE ALL UNNECESSARY     0119 00104000
*                                      REGISTERS.                    */ 00105000
*   PRMLSTSZ=ZERO;                  /* INDICATE NO SECONDARY GETMAIN    00106000
*                                      YET.                          */ 00107000
         SLR   @10,@10                                             0120 00108000
         ST    @10,PRMLSTSZ                                        0120 00109000
*   WKCVOLVS=WKCVOLVS&&WKCVOLVS;    /* CLEAR CVOL VOLSER     @Z40CSRC*/ 00110000
         XC    WKCVOLVS(6),WKCVOLVS                                0121 00111000
*   SASW=CHAR1;                     /* INIT FOR EXIT ROUT YL026RB    */ 00112000
         MVC   SASW(1),CHAR1                                       0122 00113000
*   WASW=CHAR0;                     /* INIT FOR EXIT ROUT YL026RB    */ 00114000
         MVC   WASW(1),CHAR0                                       0123 00115000
*   STSW=CHAR0;                     /* INIT FOR EXIT ROUT YL026RB    */ 00116000
         MVC   STSW(1),CHAR0                                       0124 00117000
*   RFY                                                            0125 00118000
*    (R11,                                                         0125 00119000
*     ESTAPARM,                                                    0125 00120000
*     RETCODE) RSTD;                /* ESTAE USE YL026RB             */ 00121000
*   BASEPTR=R11;                    /* INIT ESTALIST YL026RB         */ 00122000
         ST    R11,BASEPTR                                         0126 00123000
*   WAPTR=WORKPTR;                  /* SAVE FOR ESTAE YL026RB        */ 00124000
         ST    WORKPTR,WAPTR                                       0127 00125000
*   GEN;                                                           0128 00126000
        XC  PARMLIST(16),PARMLIST                                       00127000
        LA  5,ESTALIST      SETUP FOR ESTAE YL026RB                     00128000
        ESTAE  ERRORTN,PARAM=(5),XCTL=YES,RECORD=YES,CT,              **00129000
               MF=(E,PARMLIST)                                          00130000
*   IF RETCODE¬=ZERO THEN                                          0129 00131000
*                                                                  0129 00132000
         LTR   RETCODE,RETCODE                                     0129 00133000
         BZ    @RF00129                                            0129 00134000
*     /***************************************************************/ 00135000
*     /*                                                             */ 00136000
*     /* IF THE ESTAE WAS NOT SUCCESSFUL, STOP NOW                   */ 00137000
*     /*                                                             */ 00138000
*     /***************************************************************/ 00139000
*                                                                  0130 00140000
*     DO;                                                          0130 00141000
*       RFY                                                        0131 00142000
*        (HOLD15,                                                  0131 00143000
*         HOLD0,                                                   0131 00144000
*         HOLD1,                                                   0131 00145000
*         EXITPTR) RSTD;                                           0131 00146000
*       HOLD1=ZERO;                                                0132 00147000
         SLR   HOLD1,HOLD1                                         0132 00148000
*       IF CAMAM0='0'B THEN                                        0133 00149000
         L     @10,CAMPLPTR                                        0133 00150000
         TM    CAMAM0(@10),B'00000001'                             0133 00151000
         BNZ   @RF00133                                            0133 00152000
*         IF(CAMOPTNS&OSLOCMSK)=ALLZERO THEN                       0134 00153000
         MVC   @TS00001(4),CAMOPTNS(@10)                           0134 00154000
         NC    @TS00001(4),OSLOCMSK                                0134 00155000
         CLC   @TS00001(4),ALLZERO                                 0134 00156000
         BNE   @RF00134                                            0134 00157000
*           HOLD15=LOCIOERR;                                       0135 00158000
         L     HOLD15,LOCIOERR                                     0135 00159000
*         ELSE                                                     0136 00160000
*           HOLD15=CATIOERR;        /* LOCATE BY TTR RECEIVES A 28   */ 00161000
         B     @RC00134                                            0136 00162000
@RF00134 L     HOLD15,CATIOERR                                     0136 00163000
*       ELSE                                                       0137 00164000
*         IF CTGFUNC=CTGLOC|CTGSUPLT='1'B THEN                     0137 00165000
         B     @RC00133                                            0137 00166000
@RF00133 L     @10,CTGPLPTR                                        0137 00167000
         TM    CTGFUNC(@10),B'00100000'                            0137 00168000
         BNO   @GL00001                                            0137 00169000
         TM    CTGFUNC(@10),B'11000000'                            0137 00170000
         BZ    @RT00137                                            0137 00171000
@GL00001 L     @10,CTGPLPTR                                        0137 00172000
         TM    CTGSUPLT(@10),B'00010000'                           0137 00173000
         BNO   @RF00137                                            0137 00174000
@RT00137 DS    0H                                                  0138 00175000
*           HOLD15=LOCIOERR;                                       0138 00176000
         L     HOLD15,LOCIOERR                                     0138 00177000
*         ELSE                                                     0139 00178000
*           HOLD15=CATIOERR;                                       0139 00179000
         B     @RC00137                                            0139 00180000
@RF00137 L     HOLD15,CATIOERR                                     0139 00181000
*       EXITPTR=EXITSAV;                                           0140 00182000
@RC00137 DS    0H                                                  0140 00183000
@RC00133 L     EXITPTR,EXITSAV                                     0140 00184000
*       MAINPTR=WORKPTR;                                           0141 00185000
         LR    MAINPTR,WORKPTR                                     0141 00186000
*       GEN(L   0,@SIZDATD);                                       0142 00187000
         L   0,@SIZDATD                                                 00188000
*       GEN(FREEMAIN R,LV=(0),A=(1));                              0143 00189000
         FREEMAIN R,LV=(0),A=(1)                                        00190000
*       PARMPTR=HOLD1;                                             0144 00191000
         LR    PARMPTR,HOLD1                                       0144 00192000
*       R0=HOLD0;                                                  0145 00193000
         LR    R0,HOLD0                                            0145 00194000
*       RETCODE=HOLD15;                                            0146 00195000
         LR    RETCODE,HOLD15                                      0146 00196000
*       RFY                                                        0147 00197000
*        (HOLD15,                                                  0147 00198000
*         HOLD0,                                                   0147 00199000
*         HOLD1,                                                   0147 00200000
*         EXITPTR) UNRSTD;                                         0147 00201000
*       GEN(BR   14     ALL THRU);                                 0148 00202000
         BR   14     ALL THRU                                           00203000
*     END;                                                         0149 00204000
*   ELSE                                                           0150 00205000
*     ;                                                            0150 00206000
@RF00129 DS    0H                                                  0151 00207000
*   RFY                                                            0151 00208000
*    (R11,                                                         0151 00209000
*     ESTAPARM,                                                    0151 00210000
*     RETCODE) UNRSTD;              /* FREE USE YL026RB              */ 00211000
*   CALL STRTCNTL;                  /* ANALYZE REQUEST.              */ 00212000
         BAL   @14,STRTCNTL                                        0152 00213000
*                                                                  0153 00214000
*   /*****************************************************************/ 00215000
*   /*                                                               */ 00216000
*   /* UPON RETURN FROM STRTCNTL DETERMINE THE ROUTE OF CONTROL TO BE*/ 00217000
*   /* TAKEN OUT OF THE CATALOG CONTROLLER.                          */ 00218000
*   /*                                                               */ 00219000
*   /*****************************************************************/ 00220000
*                                                                  0153 00221000
*   IF ROUTE>EXITRT                 /* IF NOT RETURNING      @Z40CSRC   00222000
*                                      DIRECTLY TO CALLER    @Z40CSRC*/ 00223000
*     THEN                                                         0153 00224000
*                                                                  0153 00225000
         CLC   ROUTE(1),EXITRT                                     0153 00226000
         BNH   @RF00153                                            0153 00227000
*     /***************************************************************/ 00228000
*     /*                                                             */ 00229000
*     /* FOR EXITS BY XCTL TO VSAM CATALOG MANAGEMENT, RESTORE THE   */ 00230000
*     /* REGS CRITICAL TO THE CATALOG AND EXIT. IF EXITING TO CVOL   */ 00231000
*     /* PROCESSOR, CONTROL WILL                             @Z40CSRC*/ 00232000
*     /* RETURN TO CALLER, NOT TO IGG0102F.                  @Z40CSRC*/ 00233000
*     /*                                                             */ 00234000
*     /***************************************************************/ 00235000
*                                                                  0154 00236000
*     DO;                                                          0154 00237000
*       RFY                                                        0155 00238000
*        (CVTPTR,                                                  0155 00239000
*         TCBPTR,                                                  0155 00240000
*         SVRBPTR) RSTD;                                           0155 00241000
*       GEN(XC WKCATNM(1),WKCATNM  ZERO FOR VSAM YL026RB);         0156 00242000
         XC WKCATNM(1),WKCATNM  ZERO FOR VSAM YL026RB                   00243000
*       CVTPTR=CVTSAV;                                             0157 00244000
         L     CVTPTR,CVTSAV                                       0157 00245000
*       TCBPTR=TCBSAV;                                             0158 00246000
         L     TCBPTR,TCBSAV                                       0158 00247000
*       SVRBPTR=SVRBSAV;                                           0159 00248000
         L     SVRBPTR,SVRBSAV                                     0159 00249000
*       PARMPTR=CTGPLPTR;                                          0160 00250000
         L     PARMPTR,CTGPLPTR                                    0160 00251000
*       IF ROUTE=XCTLCVOL THEN      /* IF DIRECT CVOL        @Z40CSRC*/ 00252000
         CLI   ROUTE,2                                             0161 00253000
         BNE   @RF00161                                            0161 00254000
*         DO;                       /*                       @Z40CSRC*/ 00255000
*           CTGPLPTR=NULL;          /* SHOW NO VSAM REQUEST AREA WAS    00256000
*                                      GOTTEN.               @Z40CSRC*/ 00257000
         SLR   @10,@10                                             0163 00258000
         ST    @10,CTGPLPTR                                        0163 00259000
*           GEN(XCTL EP=IGG0CLCA);  /* TO CVOL PROCESSOR     @Z40CSRC*/ 00260000
         XCTL EP=IGG0CLCA                                               00261000
*         END;                      /*                       @Z40CSRC*/ 00262000
*       ELSE                                                       0166 00263000
*         ;                         /*                       @Z40CSRC*/ 00264000
@RF00161 DS    0H                                                  0167 00265000
*       XCTLPTR=ADDR(XCTLLIST);                                    0167 00266000
         LA    XCTLPTR,XCTLLIST                                    0167 00267000
*       GEN(SVC 7           XCTL TO NEXT MODULE);                  0168 00268000
         SVC 7           XCTL TO NEXT MODULE                            00269000
*       RFY                                                        0169 00270000
*        (CVTPTR,                                                  0169 00271000
*         TCBPTR,                                                  0169 00272000
*         SVRBPTR) UNRSTD;                                         0169 00273000
*                                                                  0169 00274000
*       /*************************************************************/ 00275000
*       /*                                                           */ 00276000
*       /* IGG0102F IS THE SECONDARY ENTRY POINT TO THE CATALOG      */ 00277000
*       /* CONTROLLER. IT IS XCTL'ED TO BY VSAM CATALOG MANAGEMENT   */ 00278000
*       /* WHEN PROCESSING IS COMPLETE.                              */ 00279000
*       /*                                                           */ 00280000
*       /*************************************************************/ 00281000
*                                                                  0170 00282000
*IGG0102F:                                                         0170 00283000
*       ENTRY;                                                     0170 00284000
@EP00170 DS    0H                                                  0171 00285000
*       SAVERC=VSAMRETC;                                           0171 00286000
         ST    VSAMRETC,SAVERC                                     0171 00287000
*       SAVER0=R0;                                                 0172 00288000
         ST    R0,SAVER0                                           0172 00289000
*       GEN(LA   13,@SA00001      SET SAVEAREA ADDRESS);           0173 00290000
         LA   13,@SA00001      SET SAVEAREA ADDRESS                     00291000
*       CALL RESMCNTL;                                             0174 00292000
*                                                                  0174 00293000
         BAL   @14,RESMCNTL                                        0174 00294000
*       /*************************************************************/ 00295000
*       /*                                                           */ 00296000
*       /* ANY CONTROLLER-BUILT PARAMETER LIST IS FREED.             */ 00297000
*       /*                                                           */ 00298000
*       /*************************************************************/ 00299000
*                                                                  0175 00300000
*       IF PRMLSTSZ>ZERO THEN                                      0175 00301000
         L     @10,PRMLSTSZ                                        0175 00302000
         LTR   @10,@10                                             0175 00303000
         BNP   @RF00175                                            0175 00304000
*         DO;                                                      0176 00305000
*           MAINSIZE=PRMLSTSZ;                                     0177 00306000
         LR    MAINSIZE,@10                                        0177 00307000
*           MAINPTR=CTGPLPTR;                                      0178 00308000
         L     MAINPTR,CTGPLPTR                                    0178 00309000
*           GEN(FREEMAIN R,LV=(0),A=(1));                          0179 00310000
         FREEMAIN R,LV=(0),A=(1)                                        00311000
*           WASW=CHAR0;             /* EXIT ROUTINE YL026RB          */ 00312000
         MVC   WASW(1),CHAR0                                       0180 00313000
*         END;                                                     0181 00314000
*     END;                                                         0182 00315000
*                                                                  0182 00316000
@RF00175 DS    0H                                                  0183 00317000
*   /*****************************************************************/ 00318000
*   /*                                                               */ 00319000
*   /* FOR EXITS BY RETURN TO THE CALLER, PRESERVE THE RETURN        */ 00320000
*   /* REGISTERS, FREE THE WORK AREA FOR THIS CALL AND RETURN.       */ 00321000
*   /*                                                               */ 00322000
*   /*****************************************************************/ 00323000
*                                                                  0183 00324000
*   RFY                                                            0183 00325000
*    (HOLD15,                                                      0183 00326000
*     HOLD0,                                                       0183 00327000
*     HOLD1,                                                       0183 00328000
*     EXITPTR) RSTD;                                               0183 00329000
@RF00153 DS    0H                                                  0184 00330000
*   HOLD1=ZERO;                                                    0184 00331000
         SLR   HOLD1,HOLD1                                         0184 00332000
*   HOLD0=SAVER0;                                                  0185 00333000
         L     HOLD0,SAVER0                                        0185 00334000
*   HOLD15=SAVERC;                                                 0186 00335000
         L     HOLD15,SAVERC                                       0186 00336000
*   GEN(ESTAE 0);                                                  0187 00337000
         ESTAE 0                                                        00338000
*   EXITPTR=EXITSAV;                                               0188 00339000
         L     EXITPTR,EXITSAV                                     0188 00340000
*   MAINPTR=WORKPTR;                                               0189 00341000
         LR    MAINPTR,WORKPTR                                     0189 00342000
*   GEN(L   0,@SIZDATD);                                           0190 00343000
         L   0,@SIZDATD                                                 00344000
*   GEN(FREEMAIN R,LV=(0),A=(1));                                  0191 00345000
         FREEMAIN R,LV=(0),A=(1)                                        00346000
*   PARMPTR=HOLD1;                                                 0192 00347000
         LR    PARMPTR,HOLD1                                       0192 00348000
*   R0=HOLD0;                                                      0193 00349000
         LR    R0,HOLD0                                            0193 00350000
*   RETCODE=HOLD15;                                                0194 00351000
         LR    RETCODE,HOLD15                                      0194 00352000
*   RFY                                                            0195 00353000
*    (HOLD15,                                                      0195 00354000
*     HOLD0,                                                       0195 00355000
*     HOLD1) UNRSTD;                                               0195 00356000
*   GEN(BR   14          TRANSFER TO THE EXIT PROLOG);             0196 00357000
         BR   14          TRANSFER TO THE EXIT PROLOG                   00358000
*                                                                  0197 00359000
*   /*****************************************************************/ 00360000
*   /*                                                               */ 00361000
*   /* ERRORTN IS GIVEN CONTROL ON PERCOLATION FROM ANOTHER ESTAE    */ 00362000
*   /* EXIT ROUTINE, OR RECEIVES CONTROL BECAUSE OF AN INTERRUPT IN  */ 00363000
*   /* OUR CODE. REGISTER 14 MUST BE SAVED FOR RETURN TO THE RTM. AN */ 00364000
*   /* RTCA MAY OR MAY NOT BE AVAILABLE. WE ALWAYS PERCOLATE TO THE  */ 00365000
*   /* NEXT ESTAE ON THE CHAIN, BUT IF WE DETECT A BAD LOCATE        */ 00366000
*   /* WORKAREA ON AN OS/VS REQUEST, THE USER RECEIVES A 11A ABEND.  */ 00367000
*   /* REG 13 IS ALWAYS RESTRICTED BY PLS.                           */ 00368000
*   /*                                                               */ 00369000
*   /*****************************************************************/ 00370000
*                                                                  0197 00371000
*ERRORTN:                                                          0197 00372000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0197 00373000
@EL00001 L     @13,4(,@13)                                         0197 00374000
@EF00001 DS    0H                                                  0197 00375000
@ER00001 BR    @14                                                 0197 00376000
ERRORTN  DS    0H                                                  0198 00377000
*   DO;                             /* ENTESTAE (11,12)SAVEAREA(@SA00   00378000
*                                      009)ERREXIT(NORTCA)PARMREG(15)   00379000
*                                      ENTRY CODE FOR ESTAE ROUTINE. */ 00380000
*                                                                  0198 00381000
*     /***************************************************************/ 00382000
*     /*                                                             */ 00383000
*     /* IF RTCA ALLOCATED THEN RESTORE CODE AND DATA REGS FROM START*/ 00384000
*     /* OF USERS PARM LIST, AND ESTABLISH ADDR TO ESTAE SAVE AREA IF*/ 00385000
*     /* REQUIRED. IF NO RTCA AVAILABLE THEN BRANCH TO ERROR CODE    */ 00386000
*     /* AFTER ESTABLISHING ADDRESSABILITY                           */ 00387000
*     /*                                                             */ 00388000
*     /***************************************************************/ 00389000
*                                                                  0199 00390000
*     GEN(USING *,GPR15P);                                         0199 00391000
         USING *,GPR15P                                                 00392000
*     GEN(CH    GPR00F,*+26);       /* CHECK IF RTCA ALLOC FAILED    */ 00393000
         CH    GPR00F,*+26                                              00394000
*     GEN(BNE   *+24);              /* NO,SAVE RTM REGS              */ 00395000
         BNE   *+24                                                     00396000
*     GEN(DROP  GPR15P);            /* DROP LOCAL ADDR               */ 00397000
         DROP  GPR15P                                                   00398000
*     GEN(LR    15,GPR02P);         /* PTR TO USER PARM LIST         */ 00399000
         LR    15,GPR02P                                                00400000
*     GEN(L     11,00(15));                                        0204 00401000
         L     11,00(15)                                                00402000
*     GEN(L     12,04(15));                                        0205 00403000
         L     12,04(15)                                                00404000
*     GEN(LA    GPR13P,@SA00009);   /* SET PTR TO ESTAE SA           */ 00405000
         LA    GPR13P,@SA00009                                          00406000
*     GEN(B     NORTCA);            /* BRANCH TO ERROR EXIT          */ 00407000
         B     NORTCA                                                   00408000
*     GEN(DC    H'12');             /* NO RTCA AVAIL RC              */ 00409000
         DC    H'12'                                                    00410000
*     GEN(STM   GPR14P,GPR12F,12(GPR13P));/* GOOD R13, SAVE RTM'S  0209 00411000
*                                      REGS                          */ 00412000
         STM   GPR14P,GPR12F,12(GPR13P)                                 00413000
*     GEN(L     15,0(GPR01P));      /* PTR TO USER PARM LIST         */ 00414000
         L     15,0(GPR01P)                                             00415000
*     GEN(L     11,00(15));                                        0211 00416000
         L     11,00(15)                                                00417000
*     GEN(L     12,04(15));                                        0212 00418000
         L     12,04(15)                                                00419000
*     GEN(ST    GPR13P,@SA00009+4); /* SET PTR TO RTM SA             */ 00420000
         ST    GPR13P,@SA00009+4                                        00421000
*     GEN(LA    GPR13P,@SA00009);   /* SET PTR TO ESTAE SA           */ 00422000
         LA    GPR13P,@SA00009                                          00423000
*   END;                            /* ENTESTAE (11,12)SAVEAREA(@SA00   00424000
*                                      009)ERREXIT(NORTCA)PARMREG(15)*/ 00425000
*   RFY                                                            0216 00426000
*    (GPR01P,                                                      0216 00427000
*     EXITPTR) RSTD;                                               0216 00428000
*   RFY                                                            0217 00429000
*     SDWA BASED(GPR01P);                                          0217 00430000
*   GEN(ST  14,12(13));                                            0218 00431000
         ST  14,12(13)                                                  00432000
*   IF SDWAPERC='0'B THEN                                          0219 00433000
*                                                                  0219 00434000
         TM    SDWAPERC(GPR01P),B'00010000'                        0219 00435000
         BNZ   @RF00219                                            0219 00436000
*     /***************************************************************/ 00437000
*     /*                                                             */ 00438000
*     /* IF WE WERE NOT PERCOLATED TO, CHECK TO SEE IF WE WERE       */ 00439000
*     /* STORING IN THE USER'S KEY AND GOT A PROTECTION CHECK        */ 00440000
*     /*                                                             */ 00441000
*     /***************************************************************/ 00442000
*                                                                  0220 00443000
*     IF STSW=CHAR1 THEN                                           0220 00444000
         CLC   STSW(1),CHAR1                                       0220 00445000
         BNE   @RF00220                                            0220 00446000
*       DO;                         /* SETRP COMPCOD(STCHK,SYSTEM)DUM   00447000
*                                      P(YES)RC(0)                   */ 00448000
*         RESPECIFY                                                0222 00449000
*          (GPR00P,                                                0222 00450000
*           GPR01P,                                                0222 00451000
*           GPR14P,                                                0222 00452000
*           GPR15P) RSTD;                                          0222 00453000
*         GPR01P->SDWARCDE=0;       /* SAVE RC VALUE                 */ 00454000
         MVI   SDWARCDE(GPR01P),X'00'                              0223 00455000
*         GPR01P->SDWAREQ='1'B;     /* TURN ON DUMP INDICATOR        */ 00456000
         OI    SDWAREQ(GPR01P),B'10000000'                         0224 00457000
*         GPR14P=STCHK;             /* ACCESS COMPLETION CODE        */ 00458000
         L     GPR14P,STCHK                                        0225 00459000
*         GEN(SLL    14,12);        /* SHIFT TO SYSTEM COMPLETION  0226 00460000
*                                      CODE                          */ 00461000
         SLL    14,12                                                   00462000
*         GPR01P->SDWACMPC=GPR14P;  /* STORE COMPLETION CODE         */ 00463000
         STCM  GPR14P,7,SDWACMPC(GPR01P)                           0227 00464000
*         RESPECIFY                                                0228 00465000
*          (GPR00P,                                                0228 00466000
*           GPR01P,                                                0228 00467000
*           GPR14P,                                                0228 00468000
*           GPR15P) UNRSTD;                                        0228 00469000
*       END;                                                       0229 00470000
*     ELSE                                                         0230 00471000
*       IF SDWACMPC(1:1)='0C'X THEN /* PGM CHK COMPLETION CODE?    0230 00472000
*                                                            @ZA03946*/ 00473000
         B     @RC00220                                            0230 00474000
@RF00220 CLI   SDWACMPC(GPR01P),X'0C'                              0230 00475000
         BNE   @RF00230                                            0230 00476000
*         DO;                                                      0231 00477000
*           DO;                     /* SETRP RC(0)RECORD(YES)DUMP(NO)   00478000
*                                      RECPARM(RECORD)               */ 00479000
*             RESPECIFY                                            0233 00480000
*              (GPR00P,                                            0233 00481000
*               GPR01P,                                            0233 00482000
*               GPR14P,                                            0233 00483000
*               GPR15P) RSTD;                                      0233 00484000
*             GPR01P->SDWARCDE=0;   /* SAVE RC VALUE                 */ 00485000
         MVI   SDWARCDE(GPR01P),X'00'                              0234 00486000
*             GPR01P->SDWARCRD='1'B;/* TURN ON RECORD INDICATOR      */ 00487000
         OI    SDWARCRD(GPR01P),B'10000000'                        0235 00488000
*             GPR15P=ADDR(RECORD);  /* ACCESS RECORD PARAMETER LIST  */ 00489000
         LA    GPR15P,RECORD                                       0236 00490000
*             GPR01P->SDWARECP=GPR15P->I256C(1:24);/* COPY RECORD  0237 00491000
*                                      PARAMETERS                    */ 00492000
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                   0237 00493000
*             GPR01P->SDWAREQ='0'B; /* TURN OFF DUMP INDICATOR       */ 00494000
         NI    SDWAREQ(GPR01P),B'01111111'                         0238 00495000
*             RESPECIFY                                            0239 00496000
*              (GPR00P,                                            0239 00497000
*               GPR01P,                                            0239 00498000
*               GPR14P,                                            0239 00499000
*               GPR15P) UNRSTD;                                    0239 00500000
*           END;                                                   0240 00501000
*           GEN;                                                   0241 00502000
        SDUMP HDR='IGC0002F CATLG CTLR 3',SDATA=(PSA,LSQA,RGN)          00503000
*         END;                                                     0242 00504000
*       ELSE                                                       0243 00505000
*         DO;                       /* SETRP RC(0)RECORD(NO)         */ 00506000
         B     @RC00230                                            0243 00507000
@RF00230 DS    0H                                                  0244 00508000
*           RESPECIFY                                              0244 00509000
*            (GPR00P,                                              0244 00510000
*             GPR01P,                                              0244 00511000
*             GPR14P,                                              0244 00512000
*             GPR15P) RSTD;                                        0244 00513000
*           GPR01P->SDWARCDE=0;     /* SAVE RC VALUE                 */ 00514000
         MVI   SDWARCDE(GPR01P),X'00'                              0245 00515000
*           GPR01P->SDWARCRD='0'B;  /* TURN OFF RECORD INDICATOR     */ 00516000
         NI    SDWARCRD(GPR01P),B'01111111'                        0246 00517000
*           RESPECIFY                                              0247 00518000
*            (GPR00P,                                              0247 00519000
*             GPR01P,                                              0247 00520000
*             GPR14P,                                              0247 00521000
*             GPR15P) UNRSTD;                                      0247 00522000
*         END;                      /*                       @ZA03946*/ 00523000
*                                                                  0248 00524000
*   /*****************************************************************/ 00525000
*   /*                                                               */ 00526000
*   /* IF WE WERE PERCOLATED TO, DON'T MODIFY DUMP SWITCH SET OPTIONS*/ 00527000
*   /* FOR RECORD TO SYS1.LOGREC                                     */ 00528000
*   /*                                                               */ 00529000
*   /*****************************************************************/ 00530000
*                                                                  0249 00531000
*   ELSE                                                           0249 00532000
*     DO;                           /* SETRP RECORD(YES)DUMP(IGNORE)R   00533000
*                                      C(0)RECPARM(RECORD)           */ 00534000
         B     @RC00219                                            0249 00535000
@RF00219 DS    0H                                                  0250 00536000
*       RESPECIFY                                                  0250 00537000
*        (GPR00P,                                                  0250 00538000
*         GPR01P,                                                  0250 00539000
*         GPR14P,                                                  0250 00540000
*         GPR15P) RSTD;                                            0250 00541000
*       GPR01P->SDWARCDE=0;         /* SAVE RC VALUE                 */ 00542000
         MVI   SDWARCDE(GPR01P),X'00'                              0251 00543000
*       GPR01P->SDWARCRD='1'B;      /* TURN ON RECORD INDICATOR      */ 00544000
         OI    SDWARCRD(GPR01P),B'10000000'                        0252 00545000
*       GPR15P=ADDR(RECORD);        /* ACCESS RECORD PARAMETER LIST  */ 00546000
         LA    GPR15P,RECORD                                       0253 00547000
*       GPR01P->SDWARECP=GPR15P->I256C(1:24);/* COPY RECORD        0254 00548000
*                                      PARAMETERS                    */ 00549000
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                   0254 00550000
*       RESPECIFY                                                  0255 00551000
*        (GPR00P,                                                  0255 00552000
*         GPR01P,                                                  0255 00553000
*         GPR14P,                                                  0255 00554000
*         GPR15P) UNRSTD;                                          0255 00555000
*     END;                                                         0256 00556000
*FREEWA:                                                           0257 00557000
*   IF WASW=CHAR1 THEN                                             0257 00558000
@RC00219 DS    0H                                                  0257 00559000
FREEWA   CLC   WASW(1),CHAR1                                       0257 00560000
         BNE   @RF00257                                            0257 00561000
*     DO;                                                          0258 00562000
*       MAINSIZE=PRMLSTSZ;                                         0259 00563000
         L     MAINSIZE,PRMLSTSZ                                   0259 00564000
*       MAINPTR=CTGPLPTR;                                          0260 00565000
         L     MAINPTR,CTGPLPTR                                    0260 00566000
*       GEN(FREEMAIN R,LV=(0),A=(1));                              0261 00567000
         FREEMAIN R,LV=(0),A=(1)                                        00568000
*     END;                                                         0262 00569000
*   ELSE                                                           0263 00570000
*     ;                                                            0263 00571000
@RF00257 DS    0H                                                  0264 00572000
*   GEN(L   14,12(13));                                            0264 00573000
         L   14,12(13)                                                  00574000
*   IF SASW=CHAR1 THEN                                             0265 00575000
         CLC   SASW(1),CHAR1                                       0265 00576000
         BNE   @RF00265                                            0265 00577000
*     DO;                                                          0266 00578000
*       MAINPTR=WORKPTR;                                           0267 00579000
         LR    MAINPTR,WORKPTR                                     0267 00580000
*       GEN(L   0,@SIZDATD);                                       0268 00581000
         L   0,@SIZDATD                                                 00582000
*       GEN(FREEMAIN R,LV=(0),A=(1));                              0269 00583000
         FREEMAIN R,LV=(0),A=(1)                                        00584000
*     END;                                                         0270 00585000
*   ELSE                                                           0271 00586000
*     ;                                                            0271 00587000
@RF00265 DS    0H                                                  0272 00588000
*   GEN(XR  15,15  ZERO 15 IN CASE NORTCA);                        0272 00589000
         XR  15,15  ZERO 15 IN CASE NORTCA                              00590000
*   GEN(BR  14);                                                   0273 00591000
         BR  14                                                         00592000
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */ 00593000
*     GPR00F FIXED(31) REG(0),                                     0274 00594000
*     GPR12F FIXED(31) REG(12),                                    0274 00595000
*     GPR00P PTR(31) REG(0),                                       0274 00596000
*     GPR01P PTR(31) REG(1),                                       0274 00597000
*     GPR02P PTR(31) REG(2),                                       0274 00598000
*     GPR13P PTR(31) REG(13),                                      0274 00599000
*     GPR14P PTR(31) REG(14),                                      0274 00600000
*     GPR15P PTR(31) REG(15);                                      0274 00601000
*   DECLARE                         /* COMMON VARIABLES              */ 00602000
*     I256C CHAR(256) BASED,                                       0275 00603000
*     I031F FIXED(31) BASED,                                       0275 00604000
*     I031P PTR(31) BASED,                                         0275 00605000
*     I015F FIXED(15) BASED,                                       0275 00606000
*     I015P PTR(15) BASED,                                         0275 00607000
*     I008P PTR(8) BASED,                                          0275 00608000
*     I001C CHAR(1) BASED;                                         0275 00609000
*NORTCA:                                                           0276 00610000
*   GEN(ST  14,12(13));                                            0276 00611000
NORTCA   ST  14,12(13)                                                  00612000
*   GO TO FREEWA;                                                  0277 00613000
         B     FREEWA                                              0277 00614000
*   RFY                                                            0278 00615000
*    (GPR01P,                                                      0278 00616000
*     EXITPTR) UNRSTD;                                             0278 00617000
*   END ERRORTN;                                                   0279 00618000
*                                                                  0280 00619000
*   /*****************************************************************/ 00620000
*   /*                                                               */ 00621000
*   /* STRTCNTL IS CALLED ON ALL INITIAL ENTRIES TO DETERMINE THE    */ 00622000
*   /* TYPE OF REQUEST AND THE TYPE OF FUNCTION THAT IS TO BE        */ 00623000
*   /* PERFORMED. ALL VSAM-FORMAT REQUESTS ARE PASSED ON TO VSAM     */ 00624000
*   /* CATALOG MANAGEMENT WITH NO CHANGE. OS/VS REQUESTS WHICH       */ 00625000
*   /* SPECIFY A CVOL VOLSER                                 @Z40CSRC*/ 00626000
*   /* ARE ROUTED DIRECTLY TO THE CVOL PROCESSOR. OTHER VALID        */ 00627000
*   /* OS/VS-FORMAT REQUESTS ARE TRANSLATED INTO VSAM- FORMAT        */ 00628000
*   /* REQUESTS BEFORE CONTROL IS PASSED TO VSAM CATALOG MANAGEMENT. */ 00629000
*   /* ALL INVALID OS/VS-FORMAT REQUESTS RETURN TO THE CALLER WITH A */ 00630000
*   /* RETURN CODE AND DO NOT GO TO VSAM CATALOG MANAGEMENT.         */ 00631000
*   /*                                                               */ 00632000
*   /*****************************************************************/ 00633000
*                                                                  0280 00634000
*STRTCNTL:                                                         0280 00635000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0280 00636000
STRTCNTL ST    @14,12(,@13)                                        0280 00637000
         ST    @13,@SA00003+4                                      0280 00638000
         LA    @14,@SA00003                                        0280 00639000
         LR    @13,@14                                             0280 00640000
*   ROUTE=XCTL;                                                    0281 00641000
         MVC   ROUTE(1),XCTL                                       0281 00642000
*   IF CAMAM0='0'B THEN             /* IF NOT VSAM           @Z40CSRC*/ 00643000
*                                                                  0282 00644000
         L     @10,CAMPLPTR                                        0282 00645000
         TM    CAMAM0(@10),B'00000001'                             0282 00646000
         BNZ   @RF00282                                            0282 00647000
*     /***************************************************************/ 00648000
*     /*                                                             */ 00649000
*     /* IF A CVOL VOLUME SERIAL HAS BEEN SPECIFIED, NO TRANSLATION  */ 00650000
*     /* TO VSAM FORMAT IS REQUIRED SINCE CONTROL WILL PASS DIRECTLY */ 00651000
*     /* TO THE OS CVOL PROCESSOR.                           @Z40CSRC*/ 00652000
*     /*                                                             */ 00653000
*     /***************************************************************/ 00654000
*                                                                  0283 00655000
*     IF CAMCVOL=ON THEN            /* IF CVOL VOLSER        @Z40CSRC*/ 00656000
         TM    CAMCVOL(@10),B'10000000'                            0283 00657000
         BNO   @RF00283                                            0283 00658000
*       DO;                         /*                       @Z40CSRC*/ 00659000
*         ROUTE=XCTLCVOL;           /* WILL XCTL TO CVOL     @Z40CSRC*/ 00660000
         MVI   ROUTE,X'02'                                         0285 00661000
*         WKCVOLVS=CAMCVOLS;        /* COPY CVOL VOLSER      @Z40CSRC*/ 00662000
         L     @10,CAMCVOLP(,@10)                                  0286 00663000
         MVC   WKCVOLVS(6),CAMCVOLS(@10)                           0286 00664000
*       END;                        /*                       @Z40CSRC*/ 00665000
*     ELSE                          /* NO VOLSER SUPPLIED    @Z40CSRC*/ 00666000
*       DO;                         /* OS/VS TRANSLATING     @Z40CSRC*/ 00667000
*                                                                  0288 00668000
         B     @RC00283                                            0288 00669000
@RF00283 DS    0H                                                  0289 00670000
*         /***********************************************************/ 00671000
*         /*                                                         */ 00672000
*         /* IF THE REQUEST IS INDICATED TO BE IN OS/VS FORMAT, THEN */ 00673000
*         /* A CHECK MUST BE MADE TO SEE IF IT IS A TRANSLATABLE     */ 00674000
*         /* FUNCTION. THE APPROPRIATE SUBROUTINE THEN CALLED TO MAKE*/ 00675000
*         /* THE TRANSLATION.                                        */ 00676000
*         /*                                                         */ 00677000
*         /***********************************************************/ 00678000
*                                                                  0289 00679000
*         IF CAMBLDA=ON             /* IF BUILD INDEX        @Z40CSRC*/ 00680000
*             |CAMDLTA=ON           /* OR DELETE ALIAS       @Z40CSRC*/ 00681000
*             |CAMDRPX=ON           /* OR RELEASE CVOL       @Z40CSRC*/ 00682000
*             |CAMLNKX=ON THEN      /* OR CONNECT            @Z40CSRC*/ 00683000
         L     @10,CAMPLPTR                                        0289 00684000
         TM    CAMBLDA(@10),B'00010001'                            0289 00685000
         BNZ   @RT00289                                            0289 00686000
         TM    CAMDRPX(@10),B'10000000'                            0289 00687000
         BO    @RT00289                                            0289 00688000
         TM    CAMLNKX(@10),B'00001000'                            0289 00689000
         BNO   @RF00289                                            0289 00690000
@RT00289 DS    0H                                                  0290 00691000
*           WORKNAME=CAMIDXNM;      /* COPY INDEX NAME AND PAD RIGHT    00692000
*                                      WITH BLANKS           @Z40CSRC*/ 00693000
         MVI   WORKNAME+8,C' '                                     0290 00694000
         MVC   WORKNAME+9(35),WORKNAME+8                           0290 00695000
         L     @10,CAMPLPTR                                        0290 00696000
         L     @10,CAMPTR1(,@10)                                   0290 00697000
         MVC   WORKNAME(8),CAMIDXNM(@10)                           0290 00698000
*         ELSE                      /* NOT ALWAYS 8 CHAR     @Z40CSRC*/ 00699000
*           DO;                     /* MOVE VARIABLE NAME    @Z40CSRC*/ 00700000
         B     @RC00289                                            0291 00701000
@RF00289 DS    0H                                                  0292 00702000
*             RFY                                                  0292 00703000
*              (R6,                                                0292 00704000
*               R7,                                                0292 00705000
*               WRKREG) RSTD;       /*                       @YM04805*/ 00706000
*             R6=CAMPTR1;           /* GET ADDR OF DSNAME    @YM04805*/ 00707000
         L     @10,CAMPLPTR                                        0293 00708000
         L     R6,CAMPTR1(,@10)                                    0293 00709000
*             R7=ADDR(WORKNAME);    /* GET ADDR OF WORKNAME  @YM04805*/ 00710000
         LA    R7,WORKNAME                                         0294 00711000
*             WORKNAME=' ';         /* BLANK HOLD AREA       @YM04805*/ 00712000
         MVI   WORKNAME+1,C' '                                     0295 00713000
         MVC   WORKNAME+2(42),WORKNAME+1                           0295 00714000
         MVI   WORKNAME,C' '                                       0295 00715000
*             WRKREG=44;            /* SET LIMIT OF NAME SIZE      0296 00716000
*                                                            @YM04805*/ 00717000
         LA    WRKREG,44                                           0296 00718000
*             GEN;                                                 0297 00719000
*                                 /*                       @YM04805*/   00720000
MOVENAME CLI   0(R6),C' '    CHECK FOR BLANK               @YM04805     00721000
         BE    MN0001        FOUND STOP SCAN AND MOVE      @YM04805     00722000
         MVC   0(1,R7),0(R6) NOT BLANK,MOVE IT             @YM04805     00723000
         LA    R6,1(R6)      BUMP POINTER                  @YM04805     00724000
         LA    R7,1(R7)      BUMP POINTER                  @YM04805     00725000
         BCT   WRKREG,MOVENAME LOOP 44 TIMES               @YM04805     00726000
MN0001   DS    0H            EXIT                          @YM04805     00727000
*             RFY                                                  0298 00728000
*              (R6,                                                0298 00729000
*               R7,                                                0298 00730000
*               WRKREG) UNRSTD;     /*                       @YM04805*/ 00731000
*           END;                    /* OF MOVING VAR. NM     @Z40CSRC*/ 00732000
*         CALLTYPE=OSVS;            /* RECORD THE REQUEST FORMAT.    */ 00733000
@RC00289 MVC   CALLTYPE(1),OSVS                                    0300 00734000
*         VOLSTPTR=CAMPTR3;         /* RECORD VOLUME LIST ADDRESS    */ 00735000
         L     @10,CAMPLPTR                                        0301 00736000
         L     @03,CAMPTR3(,@10)                                   0301 00737000
         ST    @03,VOLSTPTR                                        0301 00738000
*         OPTBITS=CAMOPTNS;         /* RECORD THE OPTION BITS.       */ 00739000
         MVC   OPTBITS(4),CAMOPTNS(@10)                            0302 00740000
*         IF(OPTBITS&OSLOCMSK)=ALLZERO THEN                        0303 00741000
*                                                                  0303 00742000
         MVC   @TS00001(4),OPTBITS                                 0303 00743000
         NC    @TS00001(4),OSLOCMSK                                0303 00744000
         CLC   @TS00001(4),ALLZERO                                 0303 00745000
         BNE   @RF00303                                            0303 00746000
*           /*********************************************************/ 00747000
*           /*                                                       */ 00748000
*           /* A LOCATE BY DATA SET NAME IS A VALID FUNCTION. VLOCATE*/ 00749000
*           /* IS CALLED TO TRANSLATE THE REQUEST TO A VSAM-FORMAT   */ 00750000
*           /* SUPERLOCATE.                                          */ 00751000
*           /*                                                       */ 00752000
*           /*********************************************************/ 00753000
*                                                                  0304 00754000
*           CALL VLOCATE;                                          0304 00755000
         BAL   @14,VLOCATE                                         0304 00756000
*         ELSE                                                     0305 00757000
*           IF(OPTBITS&CATMSK)=ALLZERO&(OPBIT1&CAMCAT)¬=ZEROFLD THEN    00758000
*                                                                  0305 00759000
         B     @RC00303                                            0305 00760000
@RF00303 MVC   @TS00001(4),OPTBITS                                 0305 00761000
         NC    @TS00001(4),CATMSK                                  0305 00762000
         CLC   @TS00001(4),ALLZERO                                 0305 00763000
         BNE   @RF00305                                            0305 00764000
         MVC   @TS00001(1),OPBIT1                                  0305 00765000
         NC    @TS00001(1),CAMCAT                                  0305 00766000
         CLC   @TS00001(1),ZEROFLD                                 0305 00767000
         BE    @RF00305                                            0305 00768000
*             /*******************************************************/ 00769000
*             /*                                                     */ 00770000
*             /* A CATALOG REQUEST IS A VALID FUNCTION. VCATLG IS    */ 00771000
*             /* CALLED TO TRANSLATE THE REQUEST TO A DEFINE NON-VSAM*/ 00772000
*             /* REQUEST.                                            */ 00773000
*             /*                                                     */ 00774000
*             /*******************************************************/ 00775000
*                                                                  0306 00776000
*             CALL VCATLG;                                         0306 00777000
         BAL   @14,VCATLG                                          0306 00778000
*           ELSE                                                   0307 00779000
*             IF(OPTBITS&UCATMSK)=ALLZERO&(OPBIT1&CAMUNCAT)¬=ZEROFLD    00780000
*               THEN                                               0307 00781000
*                                                                  0307 00782000
         B     @RC00305                                            0307 00783000
@RF00305 MVC   @TS00001(4),OPTBITS                                 0307 00784000
         NC    @TS00001(4),UCATMSK                                 0307 00785000
         CLC   @TS00001(4),ALLZERO                                 0307 00786000
         BNE   @RF00307                                            0307 00787000
         MVC   @TS00001(1),OPBIT1                                  0307 00788000
         NC    @TS00001(1),CAMUNCAT                                0307 00789000
         CLC   @TS00001(1),ZEROFLD                                 0307 00790000
         BE    @RF00307                                            0307 00791000
*               /*****************************************************/ 00792000
*               /*                                                   */ 00793000
*               /* AN UNCATALOG REQUEST IS A VALID FUNCTION. VUNCAT  */ 00794000
*               /* IS CALLED TO TRANSLATE THE REQUEST TO A DELETE    */ 00795000
*               /* NON-VSAM REQUEST.                                 */ 00796000
*               /*                                                   */ 00797000
*               /*****************************************************/ 00798000
*                                                                  0308 00799000
*               CALL VUNCAT;                                       0308 00800000
         BAL   @14,VUNCAT                                          0308 00801000
*             ELSE                                                 0309 00802000
*               IF(OPTBITS&RECATMSK)=ALLZERO&(OPBIT1&CAMRECAT)¬=ZEROFLD 00803000
*                 THEN                                             0309 00804000
*                                                                  0309 00805000
         B     @RC00307                                            0309 00806000
@RF00307 MVC   @TS00001(4),OPTBITS                                 0309 00807000
         NC    @TS00001(4),RECATMSK                                0309 00808000
         CLC   @TS00001(4),ALLZERO                                 0309 00809000
         BNE   @RF00309                                            0309 00810000
         MVC   @TS00001(1),OPBIT1                                  0309 00811000
         NC    @TS00001(1),CAMRECAT                                0309 00812000
         CLC   @TS00001(1),ZEROFLD                                 0309 00813000
         BE    @RF00309                                            0309 00814000
*                 /***************************************************/ 00815000
*                 /*                                                 */ 00816000
*                 /* RECATALOG IS A VALID FUNCTION. VRECAT IS CALLED */ 00817000
*                 /* TO REFORMAT THE REQUEST TO AN ALTER NON-VSAM    */ 00818000
*                 /* REQUEST.                                        */ 00819000
*                 /*                                                 */ 00820000
*                 /***************************************************/ 00821000
*                                                                  0310 00822000
*                 CALL VRECAT;                                     0310 00823000
         BAL   @14,VRECAT                                          0310 00824000
*               ELSE                                               0311 00825000
*                                                                  0311 00826000
*                 /***************************************************/ 00827000
*                 /*                                                 */ 00828000
*                 /* BLDA, BLDG, BLDX, DLTA, DLTX, LNKX, DRPX WILL BE*/ 00829000
*                 /* TRANSLATED INTO A DUMMY VSAM FUNCTION TO GET    */ 00830000
*                 /* ORIENTED TO THE PROPER CVOL.                    */ 00831000
*                 /*                                                 */ 00832000
*                 /***************************************************/ 00833000
*                                                                  0311 00834000
*                 IF(OPTBITS&OLDOSMSK)¬=ZERO THEN                  0311 00835000
         B     @RC00309                                            0311 00836000
@RF00309 L     @10,OPTBITS                                         0311 00837000
         N     @10,@CF01108                                        0311 00838000
         LTR   @10,@10                                             0311 00839000
         BZ    @RF00311                                            0311 00840000
*                   CALL VDUMMY;    /* GO TRANSLATE          @Z40CSRC*/ 00841000
         BAL   @14,VDUMMY                                          0312 00842000
*                 ELSE              /* NOT-TRANSLATABLE      @Z40CSRC*/ 00843000
*                                                                  0313 00844000
*                   /*************************************************/ 00845000
*                   /*                                               */ 00846000
*                   /* ANY OTHER OS/VS-FORMAT REQUESTS ARE           */ 00847000
*                   /* NON-TRANSLATABLE AND GENERATE ONLY A RETURN   */ 00848000
*                   /* CODE. OSFUNCT IS CALLED TO DETERMINE THE      */ 00849000
*                   /* RETURN CODE.                                  */ 00850000
*                   /*                                               */ 00851000
*                   /*************************************************/ 00852000
*                                                                  0313 00853000
*                   CALL OSFUNCT;                                  0313 00854000
         B     @RC00311                                            0313 00855000
@RF00311 BAL   @14,OSFUNCT                                         0313 00856000
*       END;                        /* OF OS/VS TRANSLATING  @Z40CSRC*/ 00857000
*   ELSE                                                           0315 00858000
*                                                                  0315 00859000
*     /***************************************************************/ 00860000
*     /*                                                             */ 00861000
*     /* VSAM-FORMAT REQUESTS (CTGAM0 = '1'B) DO NOT REQUIRE ANY     */ 00862000
*     /* TRANSLATION. THEY ARE PASSED DIRECTLY TO VSAM CATALOG       */ 00863000
*     /* MANAGEMENT WITH NO ACTION TAKEN BY THE CATALOG CONTROLLER,  */ 00864000
*     /* OTHER THAN RECORDING THE TYPE OF CALL.                      */ 00865000
*     /*                                                             */ 00866000
*     /***************************************************************/ 00867000
*                                                                  0315 00868000
*     CALLTYPE=VSAM;                                               0315 00869000
         B     @RC00282                                            0315 00870000
@RF00282 MVC   CALLTYPE(1),VSAM                                    0315 00871000
*   END STRTCNTL;                                                  0316 00872000
@EL00003 L     @13,4(,@13)                                         0316 00873000
@EF00003 DS    0H                                                  0316 00874000
@ER00003 L     @14,12(,@13)                                        0316 00875000
         BR    @14                                                 0316 00876000
*                                                                  0317 00877000
*   /*****************************************************************/ 00878000
*   /*                                                               */ 00879000
*   /* RESMCNTL IS CALLED ON ALL SECONDARY ENTRIES TO DETERMINE WHAT */ 00880000
*   /* THE ORIGINAL REQUEST WAS AND TO CONTINUE PROCESSING AS        */ 00881000
*   /* NECESSARY.                                                    */ 00882000
*   /*                                                               */ 00883000
*   /*****************************************************************/ 00884000
*                                                                  0317 00885000
*RESMCNTL:                                                         0317 00886000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0317 00887000
RESMCNTL ST    @14,12(,@13)                                        0317 00888000
         ST    @13,@SA00004+4                                      0317 00889000
         LA    @14,@SA00004                                        0317 00890000
         LR    @13,@14                                             0317 00891000
*   ROUTE=EXITRT;                                                  0318 00892000
         MVC   ROUTE(1),EXITRT                                     0318 00893000
*   IF CALLTYPE=OSVS THEN                                          0319 00894000
*                                                                  0319 00895000
         CLC   CALLTYPE(1),OSVS                                    0319 00896000
         BNE   @RF00319                                            0319 00897000
*     /***************************************************************/ 00898000
*     /*                                                             */ 00899000
*     /* IF THE ORIGINAL REQUEST WAS IN OS/VS FORMAT THEN A CHECK    */ 00900000
*     /* MUST BE MADE TO SEE WHAT THE FUNCTION REQUESTED WAS TO      */ 00901000
*     /* DETERMINE IF REFORMATTING OF THE OUTPUT IS NECESSARY.       */ 00902000
*     /*                                                             */ 00903000
*     /***************************************************************/ 00904000
*                                                                  0320 00905000
*     DO;                                                          0320 00906000
*       IF(OPTBITS&OSLOCMSK)=ALLZERO THEN                          0321 00907000
*                                                                  0321 00908000
         MVC   @TS00001(4),OPTBITS                                 0321 00909000
         NC    @TS00001(4),OSLOCMSK                                0321 00910000
         CLC   @TS00001(4),ALLZERO                                 0321 00911000
         BNE   @RF00321                                            0321 00912000
*         /***********************************************************/ 00913000
*         /*                                                         */ 00914000
*         /* IF THE ORIGINAL REQUEST WAS A LOCATE BY DATA SET NAME,  */ 00915000
*         /* THEN IT MAY BE NECESSARY TO REFORMAT THE DATA IF A      */ 00916000
*         /* SUCCESSFUL RETURN CODE IS INDICATED.                    */ 00917000
*         /*                                                         */ 00918000
*         /***********************************************************/ 00919000
*                                                                  0322 00920000
*         DO;                                                      0322 00921000
*           IF SAVERC=NORMRC|SAVERC=TOOSMALL|SAVERC=SMALLWKA THEN  0323 00922000
*                                                                  0323 00923000
         L     @10,SAVERC                                          0323 00924000
         LTR   @10,@10                                             0323 00925000
         BZ    @RT00323                                            0323 00926000
         C     @10,TOOSMALL                                        0323 00927000
         BE    @RT00323                                            0323 00928000
         C     @10,SMALLWKA                                        0323 00929000
         BNE   @RF00323                                            0323 00930000
@RT00323 DS    0H                                                  0324 00931000
*             /*******************************************************/ 00932000
*             /*                                                     */ 00933000
*             /* ANY OF THE ABOVE RETURN CODES INDICATES THAT        */ 00934000
*             /* SUPERLOCATE RETURNED A VOLUME LIST THAT MUST BE     */ 00935000
*             /* REFORMATTED INTO OS/VS FORMAT.                      */ 00936000
*             /*                                                     */ 00937000
*             /*******************************************************/ 00938000
*                                                                  0324 00939000
*             CALL OSVOLST;                                        0324 00940000
         BAL   @14,OSVOLST                                         0324 00941000
*           ELSE                                                   0325 00942000
*                                                                  0325 00943000
*             /*******************************************************/ 00944000
*             /*                                                     */ 00945000
*             /* ALL NON-ZERO RETURN CODES MUST BE MAPPED TO A       */ 00946000
*             /* COMPARABLE OS/VS RETURN CODE.                       */ 00947000
*             /*                                                     */ 00948000
*             /*******************************************************/ 00949000
*                                                                  0325 00950000
*             CALL OSRETCD;                                        0325 00951000
         B     @RC00323                                            0325 00952000
@RF00323 BAL   @14,OSRETCD                                         0325 00953000
*         END;                                                     0326 00954000
*       ELSE                                                       0327 00955000
*                                                                  0327 00956000
*         /***********************************************************/ 00957000
*         /*                                                         */ 00958000
*         /* TRANSLATE ANY NON-LOCATE RETURN CODES ON ORIGINAL OS/VS */ 00959000
*         /* CALLS                                                   */ 00960000
*         /*                                                         */ 00961000
*         /***********************************************************/ 00962000
*                                                                  0327 00963000
*         DO;                                                      0327 00964000
         B     @RC00321                                            0327 00965000
@RF00321 DS    0H                                                  0328 00966000
*           IF SAVERC=NORMRC THEN                                  0328 00967000
         SLR   @10,@10                                             0328 00968000
         C     @10,SAVERC                                          0328 00969000
         BNE   @RF00328                                            0328 00970000
*             SAVER0=ZERO;                                         0329 00971000
         ST    @10,SAVER0                                          0329 00972000
*           ELSE                                                   0330 00973000
*             CALL OSRETCD;                                        0330 00974000
         B     @RC00328                                            0330 00975000
@RF00328 BAL   @14,OSRETCD                                         0330 00976000
*         END;                                                     0331 00977000
*     END;                                                         0332 00978000
*   ELSE                                                           0333 00979000
*     ;                                                            0333 00980000
*                                                                  0333 00981000
@RF00319 DS    0H                                                  0334 00982000
*   /*****************************************************************/ 00983000
*   /*                                                               */ 00984000
*   /* ANY REQUEST OF VSAM FORMAT NEEDS NO REFORMATTING SO THE       */ 00985000
*   /* CATALOG CONTROLLER TAKES NO FURTHER ACTION.                   */ 00986000
*   /*                                                               */ 00987000
*   /*****************************************************************/ 00988000
*                                                                  0334 00989000
*   END RESMCNTL;                                                  0334 00990000
@EL00004 L     @13,4(,@13)                                         0334 00991000
@EF00004 DS    0H                                                  0334 00992000
@ER00004 L     @14,12(,@13)                                        0334 00993000
         BR    @14                                                 0334 00994000
*                                                                  0335 00995000
*   /*****************************************************************/ 00996000
*   /*                                                               */ 00997000
*   /* VLOCATE IS CALLED WHEN AN OS/VS-FORMAT LOCATE BY DATA SET NAME*/ 00998000
*   /* NEEDS TO BE TRANSLATED TO A VSAM SUPERLOCATE PARAMETER LIST.  */ 00999000
*   /*                                                               */ 01000000
*   /*****************************************************************/ 01001000
*                                                                  0335 01002000
*VLOCATE:                                                          0335 01003000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0335 01004000
VLOCATE  ST    @14,12(,@13)                                        0335 01005000
         ST    @13,@SA00005+4                                      0335 01006000
         LA    @14,@SA00005                                        0335 01007000
         LR    @13,@14                                             0335 01008000
*   CALL GETSPACE(LOCPRMSZ,ADDR(CTGFIELD(2))-ADDR(CTGPL));         0336 01009000
         LA    @10,LOCPRMSZ                                        0336 01010000
         ST    @10,@AL00001                                        0336 01011000
         L     @10,CTGPLPTR                                        0336 01012000
         LA    @03,CTGFIELD+4(,@10)                                0336 01013000
         SLR   @03,@10                                             0336 01014000
         ST    @03,@AFTEMPS                                        0336 01015000
         LA    @10,@AFTEMPS                                        0336 01016000
         ST    @10,@AL00001+4                                      0336 01017000
         LA    @01,@AL00001                                        0336 01018000
         BAL   @14,GETSPACE                                        0336 01019000
*   CTGNAME='1'B;                                                  0337 01020000
         L     @10,CTGPLPTR                                        0337 01021000
         OI    CTGNAME(@10),B'00000100'                            0337 01022000
*   CTGSUPLT='1'B;                                                 0338 01023000
         OI    CTGSUPLT(@10),B'00010000'                           0338 01024000
*   CTGENT=CAMPTR1;                                                0339 01025000
         L     @03,CAMPLPTR                                        0339 01026000
         L     @03,CAMPTR1(,@03)                                   0339 01027000
         ST    @03,CTGENT(,@10)                                    0339 01028000
*   CTGWKA=ADDR(CTGDYNWA);                                         0340 01029000
         LA    @03,CTGDYNWA(,@10)                                  0340 01030000
         ST    @03,CTGWKA(,@10)                                    0340 01031000
*   CTGWAVL=ADDR(VOLSTCTG);                                        0341 01032000
         LA    @15,VOLSTCTG(,@10)                                  0341 01033000
         ST    @15,CTGWAVL(,@03)                                   0341 01034000
*   CTGCVOL=ADDR(CVOLCTG);                                         0342 01035000
         LA    @15,CVOLCTG(,@10)                                   0342 01036000
         ST    @15,CTGCVOL(,@10)                                   0342 01037000
*   CTGCVDEV=ALLZERO;                                              0343 01038000
         MVC   CTGCVDEV(4,@15),ALLZERO                             0343 01039000
*   CTGWALV=LISTLEN;                                               0344 01040000
         LH    @10,LISTLEN                                         0344 01041000
         STH   @10,CTGWALV(,@03)                                   0344 01042000
*   RFY                                                            0345 01043000
*    (TCBPTR,                                                      0345 01044000
*     WRKREG) RSTD;                                                0345 01045000
*   TCBPTR=TCBSAV;                                                 0346 01046000
         L     TCBPTR,TCBSAV                                       0346 01047000
*   STSW=CHAR1;                     /* ESTAE USE-ON YL026RB          */ 01048000
         MVC   STSW(1),CHAR1                                       0347 01049000
*   DO;                             /* MODESET SAVEKEY(OLDKEY)     0348 01050000
*                                      EXTKEY(RBT234) WORKREG(WRKREG)*/ 01051000
*     RESPECIFY                                                    0349 01052000
*      (GPR02F) RESTRICTED;                                        0349 01053000
*     WRKREG=GPR02F;                /* SAVE REGISTER 2               */ 01054000
         LR    WRKREG,GPR02F                                       0350 01055000
*     IPK;                          /* SAVE CURRENT PSW KEY          */ 01056000
         IPK                                                       0351 01057000
*     OLDKEY=GPR02F;                                               0352 01058000
         STC   GPR02F,OLDKEY                                       0352 01059000
*     GPR02F=WRKREG;                /* RESTORE REGISTER 2            */ 01060000
         LR    GPR02F,WRKREG                                       0353 01061000
*     WRKREG=TCBRBP;                /* RB PTR FROM TCB               */ 01062000
         L     WRKREG,TCBRBP(,TCBPTR)                              0354 01063000
*     WRKREG=WRKREG->RBLINK;        /* NEXT RB ADDRESS               */ 01064000
         L     WRKREG,RBLINK(,WRKREG)                              0355 01065000
*     WRKREG=WRKREG->RBOPSW(2);     /* PSW KEY FROM RB OLD PSW       */ 01066000
         SLR   @10,@10                                             0356 01067000
         IC    @10,RBOPSW+1(,WRKREG)                               0356 01068000
         LR    WRKREG,@10                                          0356 01069000
*     SPKA(WRKREG);                 /* SET PSW KEY                   */ 01070000
         SPKA  0(WRKREG)                                           0357 01071000
*     RESPECIFY                                                    0358 01072000
*      (GPR02F) UNRESTRICTED;                                      0358 01073000
*   END;                            /* MODESET SAVEKEY(OLDKEY)     0359 01074000
*                                      EXTKEY(RBT234) WORKREG(WRKREG)   01075000
*                                      GET IN USERS KEY              */ 01076000
*   R2=VOLSTPTR;                                                   0360 01077000
         L     R2,VOLSTPTR                                         0360 01078000
*   GEN(XC  0(256,2),0(2)  ZERO WORKAREA);                         0361 01079000
         XC  0(256,2),0(2)  ZERO WORKAREA                               01080000
*   R2=R2+256;                                                     0362 01081000
         AL    R2,@CF01178                                         0362 01082000
*   GEN(XC  0(9,2),0(2)  );                                        0363 01083000
         XC  0(9,2),0(2)                                                01084000
*   DO;                             /* MODESET KEYADDR(OLDKEY)     0364 01085000
*                                      WORKREG(WRKREG)               */ 01086000
*     WRKREG=OLDKEY;                /* GET KEY FORM SAVE LOCATION    */ 01087000
         SLR   WRKREG,WRKREG                                       0365 01088000
         IC    WRKREG,OLDKEY                                       0365 01089000
*     SPKA(WRKREG);                 /* SET PSW KEY                   */ 01090000
         SPKA  0(WRKREG)                                           0366 01091000
*   END;                            /* MODESET KEYADDR(OLDKEY)     0367 01092000
*                                      WORKREG(WRKREG) RESET TO    0367 01093000
*                                      CATALOG KEY                   */ 01094000
*   STSW=CHAR0;                     /* ESTAE USE-OFF YL026RB         */ 01095000
         MVC   STSW(1),CHAR0                                       0368 01096000
*   RFY                                                            0369 01097000
*    (TCBPTR,                                                      0369 01098000
*     WRKREG) UNRSTD;                                              0369 01099000
*   END VLOCATE;                                                   0370 01100000
@EL00005 L     @13,4(,@13)                                         0370 01101000
@EF00005 DS    0H                                                  0370 01102000
@ER00005 L     @14,12(,@13)                                        0370 01103000
         BR    @14                                                 0370 01104000
*                                                                  0371 01105000
*   /*****************************************************************/ 01106000
*   /*                                                               */ 01107000
*   /* VCATLG IS CALLED WHEN AN OS/VS-FORMAT CATALOG REQUEST NEEDS TO*/ 01108000
*   /* BE TRANSLATED TO A DEFINE NON-VSAM PARAMETER LIST.            */ 01109000
*   /*                                                               */ 01110000
*   /*****************************************************************/ 01111000
*                                                                  0371 01112000
*VCATLG:                                                           0371 01113000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0371 01114000
VCATLG   ST    @14,12(,@13)                                        0371 01115000
         ST    @13,@SA00006+4                                      0371 01116000
         LA    @14,@SA00006                                        0371 01117000
         LR    @13,@14                                             0371 01118000
*   VOLUMECT=VOLENTCT;              /* RECORD NUMBER OF VOLIDS.      */ 01119000
         L     @10,CAMPLPTR                                        0372 01120000
         L     @10,CAMPTR3(,@10)                                   0372 01121000
         LH    @10,VOLENTCT(,@10)                                  0372 01122000
         ST    @10,VOLUMECT                                        0372 01123000
*   IF(VOLUMECT<256)&(VOLUMECT>0) THEN                             0373 01124000
*                                                                  0373 01125000
         C     @10,@CF01178                                        0373 01126000
         BNL   @RF00373                                            0373 01127000
         LTR   @10,@10                                             0373 01128000
         BNP   @RF00373                                            0373 01129000
*     /***************************************************************/ 01130000
*     /*                                                             */ 01131000
*     /* IF THE NUMBER OF VOLUMES IS WITHIN A VALID RANGE, BUILD THE */ 01132000
*     /* PARAMETER LIST.                                             */ 01133000
*     /*                                                             */ 01134000
*     /***************************************************************/ 01135000
*                                                                  0374 01136000
*     DO;                                                          0374 01137000
*       CALL GETSPACE(STDLEN+(VOLUMECT*22)+4,160);                 0375 01138000
         MH    @10,@CH01203                                        0375 01139000
         AL    @10,STDLEN                                          0375 01140000
         AL    @10,@CF00168                                        0375 01141000
         ST    @10,@AFTEMPS+4                                      0375 01142000
         LA    @10,@AFTEMPS+4                                      0375 01143000
         ST    @10,@AL00001                                        0375 01144000
         LA    @10,@CF01204                                        0375 01145000
         ST    @10,@AL00001+4                                      0375 01146000
         LA    @01,@AL00001                                        0375 01147000
         BAL   @14,GETSPACE                                        0375 01148000
*       CALL BUILDCPL;              /* BUILD A GENERALIZED CPL.      */ 01149000
         BAL   @14,BUILDCPL                                        0376 01150000
*       CTGOPTNS=CTGDEFIN;          /* SPECIFY AS DEFINE CALL.       */ 01151000
         L     @10,CTGPLPTR                                        0377 01152000
         NI    CTGOPTNS(@10),B'00001111'                           0377 01153000
         OI    CTGOPTNS(@10),B'00001000'                           0377 01154000
*     END;                                                         0378 01155000
*   ELSE                                                           0379 01156000
*                                                                  0379 01157000
*     /***************************************************************/ 01158000
*     /*                                                             */ 01159000
*     /* THE CAMLIST IS IN ERROR. TERMINATE THE CALL.                */ 01160000
*     /*                                                             */ 01161000
*     /***************************************************************/ 01162000
*                                                                  0379 01163000
*     CALL BADPARMS;                                               0379 01164000
         B     @RC00373                                            0379 01165000
@RF00373 BAL   @14,BADPARMS                                        0379 01166000
*   END VCATLG;                                                    0380 01167000
@EL00006 L     @13,4(,@13)                                         0380 01168000
@EF00006 DS    0H                                                  0380 01169000
@ER00006 L     @14,12(,@13)                                        0380 01170000
         BR    @14                                                 0380 01171000
*                                                                  0381 01172000
*   /*****************************************************************/ 01173000
*   /*                                                               */ 01174000
*   /* VUNCAT IS CALLED WHEN AN OS/VS-FORMAT UNCATALOG REQUEST NEEDS */ 01175000
*   /* TO BE TRANSLATED TO A DELETE NON-VSAM PARAMETER LIST.         */ 01176000
*   /*                                                               */ 01177000
*   /*****************************************************************/ 01178000
*                                                                  0381 01179000
*VUNCAT:                                                           0381 01180000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0381 01181000
VUNCAT   ST    @14,12(,@13)                                        0381 01182000
         ST    @13,@SA00007+4                                      0381 01183000
         LA    @14,@SA00007                                        0381 01184000
         LR    @13,@14                                             0381 01185000
*   CALL GETSPACE(LOCPRMSZ,256);                                   0382 01186000
         LA    @01,@AL00382                                        0382 01187000
         BAL   @14,GETSPACE                                        0382 01188000
*   CTGWKA=ADDR(CTGDYNWA);                                         0383 01189000
         L     @10,CTGPLPTR                                        0383 01190000
         LA    @03,CTGDYNWA(,@10)                                  0383 01191000
         ST    @03,CTGWKA(,@10)                                    0383 01192000
*   CTGENT=ADDR(WORKNAME);          /*                       @YM04805*/ 01193000
         LA    @03,WORKNAME                                        0384 01194000
         ST    @03,CTGENT(,@10)                                    0384 01195000
*   CTGOPTNS=CTGDELET;                                             0385 01196000
         NI    CTGOPTNS(@10),B'00011111'                           0385 01197000
         OI    CTGOPTNS(@10),B'00011000'                           0385 01198000
*   CTGFUNC=CTGCMS;                                                0386 01199000
         NI    CTGFUNC(@10),B'10011111'                            0386 01200000
         OI    CTGFUNC(@10),B'10000000'                            0386 01201000
*   CTGNAME='1'B;                                                  0387 01202000
         OI    CTGNAME(@10),B'00000100'                            0387 01203000
*   CTGTYPE=CTGTALIN;                                              0388 01204000
         MVI   CTGTYPE(@10),C'A'                                   0388 01205000
*   WKALEN=LENOPTN;                                                0389 01206000
         LH    @03,LENOPTN                                         0389 01207000
         STH   @03,WKALEN(,@10)                                    0389 01208000
*   IF CAMDOCAT='1'B THEN                                          0390 01209000
*                                                                  0390 01210000
         L     @03,CAMPLPTR                                        0390 01211000
         TM    CAMDOCAT(@03),B'10000000'                           0390 01212000
         BNO   @RF00390                                            0390 01213000
*     /***************************************************************/ 01214000
*     /*                                                             */ 01215000
*     /* IF NOT ALLOWED TO ALLOCATE, SO INDICATE TO VSAM             */ 01216000
*     /*                                                             */ 01217000
*     /***************************************************************/ 01218000
*                                                                  0391 01219000
*     CTGDOCAT='1'B;                                               0391 01220000
         OI    CTGDOCAT(@10),B'01000000'                           0391 01221000
*   ELSE                                                           0392 01222000
*     ;                                                            0392 01223000
@RF00390 DS    0H                                                  0393 01224000
*   END VUNCAT;                                                    0393 01225000
@EL00007 L     @13,4(,@13)                                         0393 01226000
@EF00007 DS    0H                                                  0393 01227000
@ER00007 L     @14,12(,@13)                                        0393 01228000
         BR    @14                                                 0393 01229000
*                                                                  0394 01230000
*   /*****************************************************************/ 01231000
*   /*                                                               */ 01232000
*   /* VRECAT IS CALLED WHEN AN OS/VS-FORMAT RECATALOG REQUEST NEEDS */ 01233000
*   /* TO BE TRANSLATED TO AN ALTER NON-VSAM PARAMETER LIST.         */ 01234000
*   /*                                                               */ 01235000
*   /*****************************************************************/ 01236000
*                                                                  0394 01237000
*VRECAT:                                                           0394 01238000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0394 01239000
VRECAT   ST    @14,12(,@13)                                        0394 01240000
         ST    @13,@SA00008+4                                      0394 01241000
         LA    @14,@SA00008                                        0394 01242000
         LR    @13,@14                                             0394 01243000
*   VOLUMECT=VOLENTCT;              /* RECORD NUMBER OF VOLIDS.      */ 01244000
         L     @10,CAMPLPTR                                        0395 01245000
         L     @10,CAMPTR3(,@10)                                   0395 01246000
         LH    @10,VOLENTCT(,@10)                                  0395 01247000
         ST    @10,VOLUMECT                                        0395 01248000
*   IF(VOLUMECT<256)&(VOLUMECT>0) THEN                             0396 01249000
*                                                                  0396 01250000
         C     @10,@CF01178                                        0396 01251000
         BNL   @RF00396                                            0396 01252000
         LTR   @10,@10                                             0396 01253000
         BNP   @RF00396                                            0396 01254000
*     /***************************************************************/ 01255000
*     /*                                                             */ 01256000
*     /* IF THE NUMBER OF VOLUMES IS WITHIN A VALID RANGE, BUILD THE */ 01257000
*     /* PARAMETER LIST.                                             */ 01258000
*     /*                                                             */ 01259000
*     /***************************************************************/ 01260000
*                                                                  0397 01261000
*     DO;                                                          0397 01262000
*       CALL GETSPACE(STDLEN+(VOLUMECT*22)+4,160);                 0398 01263000
         MH    @10,@CH01203                                        0398 01264000
         AL    @10,STDLEN                                          0398 01265000
         AL    @10,@CF00168                                        0398 01266000
         ST    @10,@AFTEMPS+8                                      0398 01267000
         LA    @10,@AFTEMPS+8                                      0398 01268000
         ST    @10,@AL00001                                        0398 01269000
         LA    @10,@CF01204                                        0398 01270000
         ST    @10,@AL00001+4                                      0398 01271000
         LA    @01,@AL00001                                        0398 01272000
         BAL   @14,GETSPACE                                        0398 01273000
*       CALL BUILDCPL;              /* BUILD A GENERALIZED CPL.      */ 01274000
         BAL   @14,BUILDCPL                                        0399 01275000
*       CTGOPTNS=CTGALTER;          /* SPECIFY AS ALTER CALL.        */ 01276000
         L     @10,CTGPLPTR                                        0400 01277000
         NI    CTGOPTNS(@10),B'00010111'                           0400 01278000
         OI    CTGOPTNS(@10),B'00010000'                           0400 01279000
*       CTGNEWNM=ADDR(WORKNAME);    /* POINT NEW NAME        @YM04805*/ 01280000
         LA    @03,WORKNAME                                        0401 01281000
         ST    @03,CTGNEWNM(,@10)                                  0401 01282000
*       IF CAMDTTR=ON THEN          /* IS DSCBTTR SPECIFIED  @OZ07065*/ 01283000
         L     @03,CAMPLPTR                                        0402 01284000
         TM    CAMDTTR(@03),B'00000010'                            0402 01285000
         BNO   @RF00402                                            0402 01286000
*         CTGBYPSS=ON;              /* YES,SET PASSWORD      @OZ07065   01287000
*                                      BYPASS FLAG           @OZ07065*/ 01288000
         OI    CTGBYPSS(@10),B'10000000'                           0403 01289000
*     END;                                                         0404 01290000
*   ELSE                                                           0405 01291000
*                                                                  0405 01292000
*     /***************************************************************/ 01293000
*     /*                                                             */ 01294000
*     /* THE CAMLIST IS IN ERROR. TERMINATE THE CALL.                */ 01295000
*     /*                                                             */ 01296000
*     /***************************************************************/ 01297000
*                                                                  0405 01298000
*     CALL BADPARMS;                                               0405 01299000
         B     @RC00396                                            0405 01300000
@RF00396 BAL   @14,BADPARMS                                        0405 01301000
*   END VRECAT;                                                    0406 01302000
@EL00008 L     @13,4(,@13)                                         0406 01303000
@EF00008 DS    0H                                                  0406 01304000
@ER00008 L     @14,12(,@13)                                        0406 01305000
         BR    @14                                                 0406 01306000
*                                                                  0407 01307000
*   /*****************************************************************/ 01308000
*   /*                                                               */ 01309000
*   /*                                                       @Z40CSRC*/ 01310000
*   /* THIS ROUTINE CREATES A DUMMY VSAM REQUEST WHICH WILL PROVIDE  */ 01311000
*   /* ORIENTATION TO THE PROPER CVOL FOR A NUMBER OF CVOL-TYPE      */ 01312000
*   /* REQUESTS ACCORDING TO THE HIGH-LEVEL INDEX IN THE NAME BEING  */ 01313000
*   /* PASSED. IF THE NAME IS NOT QUALIFIED A QUALIFIER WILL BE ADDED*/ 01314000
*   /* TO MEET VSAM CATALOG RULES.                           @Z40CSRC*/ 01315000
*   /*                                                               */ 01316000
*   /*****************************************************************/ 01317000
*                                                                  0407 01318000
*VDUMMY:                                                           0407 01319000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));/*                   @Z40CSRC*/ 01320000
VDUMMY   ST    @14,12(,@13)                                        0407 01321000
         ST    @13,@SA00009+4                                      0407 01322000
         LA    @14,@SA00009                                        0407 01323000
         LR    @13,@14                                             0407 01324000
*   CALL VUNCAT;                    /* CREATE A DELETE NON-VSAM    0408 01325000
*                                      REQUEST               @Z40CSRC*/ 01326000
         BAL   @14,VUNCAT                                          0408 01327000
*   CTGTYPE=NULL;                   /* NULL TYPE PREVENTS ACTUAL   0409 01328000
*                                      DELETION IN THE VSAM CATALOG     01329000
*                                                            @Z40CSRC*/ 01330000
         L     @10,CTGPLPTR                                        0409 01331000
         MVI   CTGTYPE(@10),X'00'                                  0409 01332000
*   CTGSRH=ON;                      /* SEARCH NO PRIVATE VSAM      0410 01333000
*                                      CATALOGS              @Z40CSRC*/ 01334000
*                                                                  0410 01335000
         OI    CTGSRH(@10),B'00000100'                             0410 01336000
*   /*****************************************************************/ 01337000
*   /*                                                               */ 01338000
*   /* ADD QUALIFIER IF NECESSARY                            @Z40CSRC*/ 01339000
*   /*                                                               */ 01340000
*   /*****************************************************************/ 01341000
*                                                                  0411 01342000
*   RFY                                                            0411 01343000
*     WRKREG RSTD;                  /*                       @Z40CSRC*/ 01344000
*   DO WRKREG=1 TO QIDXLEN          /* SCAN 1ST INDEX        @Z40CSRC*/ 01345000
*         WHILE WORKNAME(WRKREG)¬=QPERIOD;/* UNTIL '.' FND   @Z40CSRC*/ 01346000
         LA    WRKREG,1                                            0412 01347000
@DL00412 LA    @10,WORKNAME-1(WRKREG)                              0412 01348000
         CLI   0(@10),C'.'                                         0412 01349000
         BE    @DC00412                                            0412 01350000
*     IF WORKNAME(WRKREG)=QBLANK THEN/* NAME UNQUALIFIED     @Z40CSRC*/ 01351000
         LA    @10,WORKNAME-1(WRKREG)                              0413 01352000
         CLI   0(@10),C' '                                         0413 01353000
         BNE   @RF00413                                            0413 01354000
*       DO;                         /*                       @Z40CSRC*/ 01355000
*         WORKNAME(WRKREG:WRKREG+LENGTH(QDMY)-1)=QDMY;/* MOVE IN   0415 01356000
*                                      DUMMY QUALIFIER '.X'  @Z40CSRC*/ 01357000
         LA    @10,WORKNAME-1(WRKREG)                              0415 01358000
         MVC   0(2,@10),@CC01150                                   0415 01359000
*         WRKREG=QIDXLEN;           /* SET TO EXIT LOOP      @Z40CSRC*/ 01360000
         LA    WRKREG,9                                            0416 01361000
*       END;                        /*                       @Z40CSRC*/ 01362000
*   END;                            /* OF SCAN               @Z40CSRC*/ 01363000
@RF00413 AL    WRKREG,@CF00052                                     0418 01364000
         C     WRKREG,@CF01144                                     0418 01365000
         BNH   @DL00412                                            0418 01366000
@DC00412 DS    0H                                                  0419 01367000
*   RFY                                                            0419 01368000
*     WRKREG UNRSTD;                /*                       @Z40CSRC*/ 01369000
*   END VDUMMY;                     /*                       @Z40CSRC*/ 01370000
@EL00009 L     @13,4(,@13)                                         0420 01371000
@EF00009 DS    0H                                                  0420 01372000
@ER00009 L     @14,12(,@13)                                        0420 01373000
         BR    @14                                                 0420 01374000
*                                                                  0421 01375000
*   /*****************************************************************/ 01376000
*   /*                                                               */ 01377000
*   /* GETSPACE IS CALLED WHEN IT IS NECESSARY TO OBTAIN STORAGE FOR */ 01378000
*   /* A VSAM CATALOG PARAMETER LIST. THE PARAMETERS SPECIFY THE     */ 01379000
*   /* TOTAL AMOUNT OF SPACE TO BE OBTAINED AND THE AMOUNT (STARTING */ 01380000
*   /* WITH THE FIRST BYTE) TO BE SET TO BINARY ZEROES.              */ 01381000
*   /*                                                               */ 01382000
*   /*****************************************************************/ 01383000
*                                                                  0421 01384000
*GETSPACE:                                                         0421 01385000
*   PROC(AMOUNT,CLEAR) OPTIONS(SAVEAREA(16),SAVE(14));             0421 01386000
GETSPACE ST    @14,12(,@13)                                        0421 01387000
         ST    @13,@SA00010+4                                      0421 01388000
         LA    @14,@SA00010                                        0421 01389000
         LR    @13,@14                                             0421 01390000
         MVC   @PC00010(8),0(@01)                                  0421 01391000
*   DCL                                                            0422 01392000
*     AMOUNT FIXED(31);             /* QUANTITY OF SPACE TO BE     0422 01393000
*                                      OBTAINED.                     */ 01394000
*   DCL                                                            0423 01395000
*     CLEAR FIXED(31);              /* QUANTITY OF SPACE TO BE ZEROED   01396000
*                                      OUT.                          */ 01397000
*   DCL                                                            0424 01398000
*     SPACE CHAR(256) BASED(MAINPTR);/* STRING FOR CLEARING AREA.    */ 01399000
*   PRMLSTSZ=AMOUNT;                /* RECORD SIZE.                  */ 01400000
         L     @10,@PC00010                                        0425 01401000
         L     @10,AMOUNT(,@10)                                    0425 01402000
         ST    @10,PRMLSTSZ                                        0425 01403000
*   MAINSIZE=AMOUNT;                                               0426 01404000
         LR    MAINSIZE,@10                                        0426 01405000
*   GEN(GETMAIN R,LV=(0)     GETMAIN PARAMETER LIST SIZE);         0427 01406000
         GETMAIN R,LV=(0)     GETMAIN PARAMETER LIST SIZE               01407000
*   CTGPLPTR=MAINPTR;               /* RECORD LOCATION.              */ 01408000
         ST    MAINPTR,CTGPLPTR                                    0428 01409000
*   WASW=CHAR1;                     /* ON FOR EXIT ROUTINEYL026RB    */ 01410000
         MVC   WASW(1),CHAR1                                       0429 01411000
*   SPACE(1:CLEAR)=SPACE(1:CLEAR)&&SPACE(1:CLEAR);/* SET REQUESTED 0430 01412000
*                                      AMOUNT TO BINARY ZEROES.      */ 01413000
         L     @10,@PC00010+4                                      0430 01414000
         L     @10,CLEAR(,@10)                                     0430 01415000
         BCTR  @10,0                                               0430 01416000
         EX    @10,@SX01250                                        0430 01417000
*   IF CAMTIOT='1'B THEN            /* SYZTIOT ENQUED?       @OZ19636*/ 01418000
         L     @10,CAMPLPTR                                        0431 01419000
         TM    CAMTIOT(@10),B'00010000'                            0431 01420000
         BNO   @RF00431                                            0431 01421000
*     CTGTIOT='1'B;                 /* SET TIOT ENQ OPTN     @OZ19636*/ 01422000
         L     @10,CTGPLPTR                                        0432 01423000
         OI    CTGTIOT(@10),B'00000100'                            0432 01424000
*   ELSE                                                           0433 01425000
*     ;                                                            0433 01426000
@RF00431 DS    0H                                                  0434 01427000
*   END GETSPACE;                                                  0434 01428000
@EL00010 L     @13,4(,@13)                                         0434 01429000
@EF00010 DS    0H                                                  0434 01430000
@ER00010 L     @14,12(,@13)                                        0434 01431000
         BR    @14                                                 0434 01432000
*                                                                  0435 01433000
*   /*****************************************************************/ 01434000
*   /*                                                               */ 01435000
*   /* BUILDCPL IS CALLED TO SET UP THOSE PARTS OF THE CATALOG       */ 01436000
*   /* PARAMETER LIST THAT ARE COMMON TO BOTH DEFINE AND ALTER       */ 01437000
*   /* NON-VSAM (RECATALOG).                                         */ 01438000
*   /*                                                               */ 01439000
*   /*****************************************************************/ 01440000
*                                                                  0435 01441000
*BUILDCPL:                                                         0435 01442000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0435 01443000
*                                                                  0435 01444000
BUILDCPL ST    @14,12(,@13)                                        0435 01445000
         ST    @13,@SA00011+4                                      0435 01446000
         LA    @14,@SA00011                                        0435 01447000
         LR    @13,@14                                             0435 01448000
*   /*****************************************************************/ 01449000
*   /*                                                               */ 01450000
*   /* SET ALL THE POINTERS NECESSARY FOR THE CONSTRUCTION OF A      */ 01451000
*   /* DEFINE OR ALTER NON-VSAM.                                     */ 01452000
*   /*                                                               */ 01453000
*   /*****************************************************************/ 01454000
*                                                                  0436 01455000
*   CTGFVT=ADDR(FVTFLD);                                           0436 01456000
         L     @10,CTGPLPTR                                        0436 01457000
         LA    @03,FVTFLD(,@10)                                    0436 01458000
         ST    @03,CTGFVT(,@10)                                    0436 01459000
*   CTGFVVLT=CTGPLPTR+STDLEN;                                      0437 01460000
         LR    @15,@10                                             0437 01461000
         AL    @15,STDLEN                                          0437 01462000
         ST    @15,CTGFVVLT(,@03)                                  0437 01463000
*   CTGFVDVT=ADDR(DEVTPS);                                         0438 01464000
         LA    @14,DEVTPS(,@10)                                    0438 01465000
         ST    @14,CTGFVDVT(,@03)                                  0438 01466000
*   CTGFVFSN=ADDR(FSNENTS);                                        0439 01467000
         LA    @10,FSNENTS(,@10)                                   0439 01468000
         ST    @10,CTGFVFSN(,@03)                                  0439 01469000
*   CTGFVDVT->CTGFLPT(1)=CTGFVVLT+(8*VOLUMECT)+4;                  0440 01470000
         L     @09,VOLUMECT                                        0440 01471000
         LR    @08,@09                                             0440 01472000
         SLA   @08,3                                               0440 01473000
         ALR   @15,@08                                             0440 01474000
         AL    @15,@CF00168                                        0440 01475000
         ST    @15,CTGFLPT(,@14)                                   0440 01476000
*   CTGFVFSN->CTGFLPT(1)=CTGFVDVT->CTGFLPT(1)+(12*VOLUMECT);       0441 01477000
*                                                                  0441 01478000
         MH    @09,@CH00115                                        0441 01479000
         ALR   @15,@09                                             0441 01480000
         ST    @15,CTGFLPT(,@10)                                   0441 01481000
*   /*****************************************************************/ 01482000
*   /*                                                               */ 01483000
*   /* MOVE THE POINTER TO THE NAME AND THE POINTER TO THE DSCBTTR   */ 01484000
*   /*                                                               */ 01485000
*   /*****************************************************************/ 01486000
*                                                                  0442 01487000
*   CTGFVENT=ADDR(WORKNAME);        /*                       @YM04805*/ 01488000
         LA    @10,WORKNAME                                        0442 01489000
         ST    @10,CTGFVENT(,@03)                                  0442 01490000
*   IF CAMDTTR='1'B THEN                                           0443 01491000
         L     @10,CAMPLPTR                                        0443 01492000
         TM    CAMDTTR(@10),B'00000010'                            0443 01493000
         BNO   @RF00443                                            0443 01494000
*     CTGFVSPC=CAMDSCBP;                                           0444 01495000
         L     @10,CAMDSCBP(,@10)                                  0444 01496000
         ST    @10,CTGFVSPC(,@03)                                  0444 01497000
*   ELSE                                                           0445 01498000
*     ;                                                            0445 01499000
@RF00443 DS    0H                                                  0446 01500000
*   IF CAMDOCAT='1'B THEN                                          0446 01501000
*                                                                  0446 01502000
         L     @10,CAMPLPTR                                        0446 01503000
         TM    CAMDOCAT(@10),B'10000000'                           0446 01504000
         BNO   @RF00446                                            0446 01505000
*     /***************************************************************/ 01506000
*     /*                                                             */ 01507000
*     /* IF NOT ALLOWED TO ALLOCATE, SO INDICATE TO VSAM             */ 01508000
*     /*                                                             */ 01509000
*     /***************************************************************/ 01510000
*                                                                  0447 01511000
*     CTGDOCAT='1'B;                                               0447 01512000
         L     @10,CTGPLPTR                                        0447 01513000
         OI    CTGDOCAT(@10),B'01000000'                           0447 01514000
*   ELSE                                                           0448 01515000
*     ;                                                            0448 01516000
*                                                                  0448 01517000
@RF00446 DS    0H                                                  0449 01518000
*   /*****************************************************************/ 01519000
*   /*                                                               */ 01520000
*   /* THE VOLUME SERIALS, DEVICE TYPES AND FILE SEQUENCE NUMBERS    */ 01521000
*   /* MUST BE TRANSFERRED TO THE VSAM LIST                          */ 01522000
*   /*                                                               */ 01523000
*   /*****************************************************************/ 01524000
*                                                                  0449 01525000
*   RFY                                                            0449 01526000
*    (LOOP) RSTD;                                                  0449 01527000
*   DO LOOP=1 TO VOLUMECT;                                         0450 01528000
         LA    LOOP,1                                              0450 01529000
         B     @DE00450                                            0450 01530000
@DL00450 DS    0H                                                  0451 01531000
*     FSNARRY(LOOP)=FSN(LOOP);                                     0451 01532000
         LR    @10,LOOP                                            0451 01533000
         ALR   @10,@10                                             0451 01534000
         L     @09,CTGPLPTR                                        0451 01535000
         L     @09,CTGFVT(,@09)                                    0451 01536000
         L     @09,CTGFVFSN(,@09)                                  0451 01537000
         L     @09,CTGFLPT(,@09)                                   0451 01538000
         ALR   @09,@10                                             0451 01539000
         BCTR  @09,0                                               0451 01540000
         BCTR  @09,0                                               0451 01541000
         LR    @10,LOOP                                            0451 01542000
         MH    @10,@CH00115                                        0451 01543000
         L     @03,CAMPLPTR                                        0451 01544000
         L     @03,CAMPTR3(,@03)                                   0451 01545000
         ALR   @03,@10                                             0451 01546000
         MVC   FSNARRY(2,@09),FSN-12(@03)                          0451 01547000
*     DEVARRY(LOOP)=DEVTYP(LOOP);                                  0452 01548000
         LA    @10,12                                              0452 01549000
         LR    @05,LOOP                                            0452 01550000
         MR    @04,@10                                             0452 01551000
         L     @09,CTGPLPTR                                        0452 01552000
         L     @09,CTGFVT(,@09)                                    0452 01553000
         L     @09,CTGFVDVT(,@09)                                  0452 01554000
         L     @09,CTGFLPT(,@09)                                   0452 01555000
         ALR   @09,@05                                             0452 01556000
         AL    @09,@CF01252                                        0452 01557000
         LR    @05,@10                                             0452 01558000
         MR    @04,LOOP                                            0452 01559000
         L     @10,CAMPLPTR                                        0452 01560000
         L     @10,CAMPTR3(,@10)                                   0452 01561000
         ALR   @10,@05                                             0452 01562000
         AL    @10,@CF01253                                        0452 01563000
         MVC   DEVARRY-8(4,@09),DEVTYP-2(@10)                      0452 01564000
*     VVOLSER(LOOP)=VOLSER(LOOP);                                  0453 01565000
         LR    @10,LOOP                                            0453 01566000
         SLA   @10,3                                               0453 01567000
         L     @09,CTGPLPTR                                        0453 01568000
         L     @09,CTGFVT(,@09)                                    0453 01569000
         L     @09,CTGFVVLT(,@09)                                  0453 01570000
         ALR   @09,@10                                             0453 01571000
         AL    @09,@CF01252                                        0453 01572000
         LR    @10,LOOP                                            0453 01573000
         MH    @10,@CH00115                                        0453 01574000
         L     @03,CAMPLPTR                                        0453 01575000
         L     @03,CAMPTR3(,@03)                                   0453 01576000
         ALR   @03,@10                                             0453 01577000
         AL    @03,@CF01254                                        0453 01578000
         MVC   VVOLSER-4(6,@09),VOLSER-6(@03)                      0453 01579000
*   END;                                                           0454 01580000
         AL    LOOP,@CF00052                                       0454 01581000
@DE00450 C     LOOP,VOLUMECT                                       0454 01582000
         BNH   @DL00450                                            0454 01583000
*   RFY                                                            0455 01584000
*    (LOOP) UNRSTD;                                                0455 01585000
*                                                                  0455 01586000
*   /*****************************************************************/ 01587000
*   /*                                                               */ 01588000
*   /* SET ALL CONSTANT FIELDS.                                      */ 01589000
*   /*                                                               */ 01590000
*   /*****************************************************************/ 01591000
*                                                                  0456 01592000
*   CTGFUNC=CTGCMS;                                                0456 01593000
         L     @10,CTGPLPTR                                        0456 01594000
         NI    CTGFUNC(@10),B'10011111'                            0456 01595000
         OI    CTGFUNC(@10),B'10000000'                            0456 01596000
*   CTGNAME='1'B;                                                  0457 01597000
         OI    CTGNAME(@10),B'00000100'                            0457 01598000
*   CTGFVTYP=CTGFVALN;                                             0458 01599000
         L     @10,CTGFVT(,@10)                                    0458 01600000
         MVI   CTGFVTYP(@10),C'A'                                  0458 01601000
*   CTGFVFSN->CTGFLDNO=ONE;                                        0459 01602000
         L     @03,ONE                                             0459 01603000
         L     @15,CTGFVFSN(,@10)                                  0459 01604000
         STC   @03,CTGFLDNO(,@15)                                  0459 01605000
*   CTGFVDVT->CTGFLDNO=ONE;                                        0460 01606000
         L     @14,CTGFVDVT(,@10)                                  0460 01607000
         STC   @03,CTGFLDNO(,@14)                                  0460 01608000
*   CTGFVFSN->CTGFLNG(1)=2*VOLUMECT;                               0461 01609000
         L     @03,VOLUMECT                                        0461 01610000
         LR    @09,@03                                             0461 01611000
         ALR   @09,@09                                             0461 01612000
         ST    @09,CTGFLNG(,@15)                                   0461 01613000
*   CTGFVDVT->CTGFLNG(1)=12*VOLUMECT;                              0462 01614000
         LR    @15,@03                                             0462 01615000
         MH    @15,@CH00115                                        0462 01616000
         ST    @15,CTGFLNG(,@14)                                   0462 01617000
*   VLSFLND=8*VOLUMECT;                                            0463 01618000
         L     @10,CTGFVVLT(,@10)                                  0463 01619000
         SLA   @03,3                                               0463 01620000
         STH   @03,VLSFLND(,@10)                                   0463 01621000
*   END BUILDCPL;                                                  0464 01622000
@EL00011 L     @13,4(,@13)                                         0464 01623000
@EF00011 DS    0H                                                  0464 01624000
@ER00011 L     @14,12(,@13)                                        0464 01625000
         BR    @14                                                 0464 01626000
*                                                                  0465 01627000
*   /*****************************************************************/ 01628000
*   /*                                                               */ 01629000
*   /* BADPARMS IS CALLED WHEN AN ERROR HAS BEEN FOUND IN AN OS/VS   */ 01630000
*   /* CAMLIST THAT REQUESTED AN OTHERWISE VALID FUNCTION.           */ 01631000
*   /*                                                               */ 01632000
*   /*****************************************************************/ 01633000
*                                                                  0465 01634000
*BADPARMS:                                                         0465 01635000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0465 01636000
BADPARMS ST    @14,12(,@13)                                        0465 01637000
         ST    @13,@SA00012+4                                      0465 01638000
         LA    @14,@SA00012                                        0465 01639000
         LR    @13,@14                                             0465 01640000
*   ROUTE=EXITRT;                   /* BYPASS XCTL TO VSAM.          */ 01641000
         MVC   ROUTE(1),EXITRT                                     0466 01642000
*   SAVERC=CATIOERR;                /* INDICATE CATALOG I/O ERROR    */ 01643000
         L     @10,CATIOERR                                        0467 01644000
         ST    @10,SAVERC                                          0467 01645000
*   SAVER0=ZERO;                    /* INDICATE BAD PARAMETER LIST.  */ 01646000
         SLR   @10,@10                                             0468 01647000
         ST    @10,SAVER0                                          0468 01648000
*   END BADPARMS;                                                  0469 01649000
@EL00012 L     @13,4(,@13)                                         0469 01650000
@EF00012 DS    0H                                                  0469 01651000
@ER00012 L     @14,12(,@13)                                        0469 01652000
         BR    @14                                                 0469 01653000
*                                                                  0470 01654000
*   /*****************************************************************/ 01655000
*   /*                                                               */ 01656000
*   /* OSFUNCT IS CALLED WHEN AN OS/VS-FORMAT REQUEST CANNOT BE      */ 01657000
*   /* REFORMATTED TO A VSAM FORMAT REQUEST. A RETURN MUST BE        */ 01658000
*   /* GENERATED TO INDICATE WHY THE REQUEST WAS NOT HONORED.        */ 01659000
*   /*                                                               */ 01660000
*   /*****************************************************************/ 01661000
*                                                                  0470 01662000
*OSFUNCT:                                                          0470 01663000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0470 01664000
OSFUNCT  ST    @14,12(,@13)                                        0470 01665000
         ST    @13,@SA00013+4                                      0470 01666000
         LA    @14,@SA00013                                        0470 01667000
         LR    @13,@14                                             0470 01668000
*   IF(OPTBITS&LOCTTRMK)=ALLZERO THEN                              0471 01669000
*                                                                  0471 01670000
         MVC   @TS00001(4),OPTBITS                                 0471 01671000
         NC    @TS00001(4),LOCTTRMK                                0471 01672000
         CLC   @TS00001(4),ALLZERO                                 0471 01673000
         BNE   @RF00471                                            0471 01674000
*     /***************************************************************/ 01675000
*     /*                                                             */ 01676000
*     /* IF THE REQUEST IS A LOCATE BY BLOCK (TTR) THEN A RETURN CODE*/ 01677000
*     /* INDICATING CVOL UNAVAILABLE                         @Z40CSRC*/ 01678000
*     /* WILL BE RETURNED, THE WORKAREA IS ZEROED            @Z40CSRC*/ 01679000
*     /* AND NO FURTHER PROCESSING IS DONE.                          */ 01680000
*     /*                                                             */ 01681000
*     /***************************************************************/ 01682000
*                                                                  0472 01683000
*     DO;                                                          0472 01684000
*       RFY                                                        0473 01685000
*        (TCBPTR,                                                  0473 01686000
*         WRKREG) RSTD;                                            0473 01687000
*       TCBPTR=TCBSAV;                                             0474 01688000
         L     TCBPTR,TCBSAV                                       0474 01689000
*       STSW=CHAR1;                 /* ESTAE USE-ON YL026RB          */ 01690000
         MVC   STSW(1),CHAR1                                       0475 01691000
*       DO;                         /* MODESET SAVEKEY(OLDKEY)     0476 01692000
*                                      EXTKEY(RBT234) WORKREG(WRKREG)*/ 01693000
*         RESPECIFY                                                0477 01694000
*          (GPR02F) RESTRICTED;                                    0477 01695000
*         WRKREG=GPR02F;            /* SAVE REGISTER 2               */ 01696000
         LR    WRKREG,GPR02F                                       0478 01697000
*         IPK;                      /* SAVE CURRENT PSW KEY          */ 01698000
         IPK                                                       0479 01699000
*         OLDKEY=GPR02F;                                           0480 01700000
         STC   GPR02F,OLDKEY                                       0480 01701000
*         GPR02F=WRKREG;            /* RESTORE REGISTER 2            */ 01702000
         LR    GPR02F,WRKREG                                       0481 01703000
*         WRKREG=TCBRBP;            /* RB PTR FROM TCB               */ 01704000
         L     WRKREG,TCBRBP(,TCBPTR)                              0482 01705000
*         WRKREG=WRKREG->RBLINK;    /* NEXT RB ADDRESS               */ 01706000
         L     WRKREG,RBLINK(,WRKREG)                              0483 01707000
*         WRKREG=WRKREG->RBOPSW(2); /* PSW KEY FROM RB OLD PSW       */ 01708000
         SLR   @10,@10                                             0484 01709000
         IC    @10,RBOPSW+1(,WRKREG)                               0484 01710000
         LR    WRKREG,@10                                          0484 01711000
*         SPKA(WRKREG);             /* SET PSW KEY                   */ 01712000
         SPKA  0(WRKREG)                                           0485 01713000
*         RESPECIFY                                                0486 01714000
*          (GPR02F) UNRESTRICTED;                                  0486 01715000
*       END;                        /* MODESET SAVEKEY(OLDKEY)     0487 01716000
*                                      EXTKEY(RBT234) WORKREG(WRKREG)   01717000
*                                      GET IN USERS KEY              */ 01718000
*       R2=VOLSTPTR;                                               0488 01719000
         L     R2,VOLSTPTR                                         0488 01720000
*       GEN(XC  0(256,2),0(2)  ZERO WORKAREA);                     0489 01721000
         XC  0(256,2),0(2)  ZERO WORKAREA                               01722000
*       R2=R2+256;                                                 0490 01723000
         AL    R2,@CF01178                                         0490 01724000
*       GEN(XC  0(9,2),0(2)  );                                    0491 01725000
         XC  0(9,2),0(2)                                                01726000
*       DO;                         /* MODESET KEYADDR(OLDKEY)     0492 01727000
*                                      WORKREG(WRKREG)               */ 01728000
*         WRKREG=OLDKEY;            /* GET KEY FORM SAVE LOCATION    */ 01729000
         SLR   WRKREG,WRKREG                                       0493 01730000
         IC    WRKREG,OLDKEY                                       0493 01731000
*         SPKA(WRKREG);             /* SET PSW KEY                   */ 01732000
         SPKA  0(WRKREG)                                           0494 01733000
*       END;                        /* MODESET KEYADDR(OLDKEY)     0495 01734000
*                                      WORKREG(WRKREG) RESET TO    0495 01735000
*                                      CATALOG KEY                   */ 01736000
*       STSW=CHAR0;                 /* ESTAE USE-OFF YL026RB         */ 01737000
         MVC   STSW(1),CHAR0                                       0496 01738000
*       RFY                                                        0497 01739000
*        (TCBPTR,                                                  0497 01740000
*         WRKREG) UNRSTD;                                          0497 01741000
*       SAVERC=NOCAT;               /* CVOL VOLSER NOT SUPPLIED    0498 01742000
*                                                            @Z40CSRC*/ 01743000
         L     @10,NOCAT                                           0498 01744000
         ST    @10,SAVERC                                          0498 01745000
*     END;                                                         0499 01746000
*   ELSE                                                           0500 01747000
*                                                                  0500 01748000
*     /***************************************************************/ 01749000
*     /*                                                             */ 01750000
*     /* ANY OTHER OS/VS-FORMAT REQUESTS ARE CONSIDERED UNSUPPORTED  */ 01751000
*     /* REQUESTS AND GENERATE THAT RETURN CODE WITH NO ACTION TAKEN.*/ 01752000
*     /*                                                             */ 01753000
*     /***************************************************************/ 01754000
*                                                                  0500 01755000
*     SAVERC=UNSUPTED;                                             0500 01756000
         B     @RC00471                                            0500 01757000
@RF00471 L     @10,UNSUPTED                                        0500 01758000
         ST    @10,SAVERC                                          0500 01759000
*   SAVER0=ZERO;                                                   0501 01760000
@RC00471 SLR   @10,@10                                             0501 01761000
         ST    @10,SAVER0                                          0501 01762000
*   ROUTE=EXITRT;                                                  0502 01763000
         MVC   ROUTE(1),EXITRT                                     0502 01764000
*   END OSFUNCT;                                                   0503 01765000
@EL00013 L     @13,4(,@13)                                         0503 01766000
@EF00013 DS    0H                                                  0503 01767000
@ER00013 L     @14,12(,@13)                                        0503 01768000
         BR    @14                                                 0503 01769000
*                                                                  0504 01770000
*   /*****************************************************************/ 01771000
*   /*                                                               */ 01772000
*   /* OSVOLST IS CALLED WHEN A VOLUME LIST HAS BEEN FOUND IN THE    */ 01773000
*   /* VSAM CATALOG AND NEEDS TO REFORMATTED TO OS/VS FORMAT OUTPUT  */ 01774000
*   /* FOR RETURN TO THE CALLER.                                     */ 01775000
*   /*                                                               */ 01776000
*   /*****************************************************************/ 01777000
*                                                                  0504 01778000
*OSVOLST:                                                          0504 01779000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0504 01780000
OSVOLST  ST    @14,12(,@13)                                        0504 01781000
         ST    @13,@SA00014+4                                      0504 01782000
         LA    @14,@SA00014                                        0504 01783000
         LR    @13,@14                                             0504 01784000
*   SAVER0=ZERO;                                                   0505 01785000
         SLR   @10,@10                                             0505 01786000
         ST    @10,SAVER0                                          0505 01787000
*   IF CTGGDGB='1'B THEN                                           0506 01788000
*                                                                  0506 01789000
         L     @10,CTGPLPTR                                        0506 01790000
         TM    CTGGDGB(@10),B'00100000'                            0506 01791000
         BNO   @RF00506                                            0506 01792000
*     /***************************************************************/ 01793000
*     /*                                                             */ 01794000
*     /* IF THE DATA SET NAME WAS THAT OF A GDG BASE, THEN IT IS     */ 01795000
*     /* IMPOSSIBLE TO REFORMAT IT TO OS/VS FORMAT. A DATA SET NOT   */ 01796000
*     /* FOUND RETURN CODE IS RETURNED INSTEAD.                      */ 01797000
*     /*                                                             */ 01798000
*     /***************************************************************/ 01799000
*                                                                  0507 01800000
*     SAVERC=DSNOTFND;                                             0507 01801000
         L     @10,DSNOTFND                                        0507 01802000
         ST    @10,SAVERC                                          0507 01803000
*   ELSE                                                           0508 01804000
*                                                                  0508 01805000
*     /***************************************************************/ 01806000
*     /*                                                             */ 01807000
*     /* ALL NON-GDG-BASE DATA SETS CAN BE REFORMATTED TO OS/VS      */ 01808000
*     /* FORMAT BY TRANSFERRING THE VOLUME SERIALS, DEVICE TYPES AND */ 01809000
*     /* FILE SEQUENCE NUMBERS TO THE OS/VS RETURN AREA. THIS CODE IS*/ 01810000
*     /* DEPENDENT ON PLS TO GENERATE CODE THAT DOES NOT SAVE HISTORY*/ 01811000
*     /* INFORMATION IN OUR SAVE AREA. AN ABEND 0C4 IS GIVEN IF      */ 01812000
*     /* STORING OFF OF REG 12 WHILE IN USER'S KEY.                  */ 01813000
*     /*                                                             */ 01814000
*     /***************************************************************/ 01815000
*                                                                  0508 01816000
*     DO;                                                          0508 01817000
         B     @RC00506                                            0508 01818000
@RF00506 DS    0H                                                  0509 01819000
*       RFY                                                        0509 01820000
*        (TCBPTR,                                                  0509 01821000
*         WRKREG,                                                  0509 01822000
*         LOOP) RSTD;                                              0509 01823000
*       TCBPTR=TCBSAV;                                             0510 01824000
         L     TCBPTR,TCBSAV                                       0510 01825000
*       STSW=CHAR1;                 /* ON FOR EXIT ROUTINE YL026RB   */ 01826000
         MVC   STSW(1),CHAR1                                       0511 01827000
*       DO;                         /* MODESET SAVEKEY(OLDKEY)     0512 01828000
*                                      EXTKEY(RBT234) WORKREG(WRKREG)*/ 01829000
*         RESPECIFY                                                0513 01830000
*          (GPR02F) RESTRICTED;                                    0513 01831000
*         WRKREG=GPR02F;            /* SAVE REGISTER 2               */ 01832000
         LR    WRKREG,GPR02F                                       0514 01833000
*         IPK;                      /* SAVE CURRENT PSW KEY          */ 01834000
         IPK                                                       0515 01835000
*         OLDKEY=GPR02F;                                           0516 01836000
         STC   GPR02F,OLDKEY                                       0516 01837000
*         GPR02F=WRKREG;            /* RESTORE REGISTER 2            */ 01838000
         LR    GPR02F,WRKREG                                       0517 01839000
*         WRKREG=TCBRBP;            /* RB PTR FROM TCB               */ 01840000
         L     WRKREG,TCBRBP(,TCBPTR)                              0518 01841000
*         WRKREG=WRKREG->RBLINK;    /* NEXT RB ADDRESS               */ 01842000
         L     WRKREG,RBLINK(,WRKREG)                              0519 01843000
*         WRKREG=WRKREG->RBOPSW(2); /* PSW KEY FROM RB OLD PSW       */ 01844000
         SLR   @10,@10                                             0520 01845000
         IC    @10,RBOPSW+1(,WRKREG)                               0520 01846000
         LR    WRKREG,@10                                          0520 01847000
*         SPKA(WRKREG);             /* SET PSW KEY                   */ 01848000
         SPKA  0(WRKREG)                                           0521 01849000
*         RESPECIFY                                                0522 01850000
*          (GPR02F) UNRESTRICTED;                                  0522 01851000
*       END;                        /* MODESET SAVEKEY(OLDKEY)     0523 01852000
*                                      EXTKEY(RBT234) WORKREG(WRKREG)   01853000
*                                      GET IN USERS KEY              */ 01854000
*       RFY                                                        0524 01855000
*        (TCBPTR,                                                  0524 01856000
*         WRKREG) UNRSTD;                                          0524 01857000
*       IF CTGWAVCT<MAXVOLS THEN                                   0525 01858000
         L     @10,CTGPLPTR                                        0525 01859000
         L     @10,CTGWKA(,@10)                                    0525 01860000
         LH    @10,CTGWAVCT(,@10)                                  0525 01861000
         C     @10,MAXVOLS                                         0525 01862000
         BNL   @RF00525                                            0525 01863000
*         VOLENTCT=CTGWAVCT;                                       0526 01864000
         L     @09,CAMPLPTR                                        0526 01865000
         L     @09,CAMPTR3(,@09)                                   0526 01866000
         STH   @10,VOLENTCT(,@09)                                  0526 01867000
*       ELSE                                                       0527 01868000
*         VOLENTCT=MAXVOLS;                                        0527 01869000
         B     @RC00525                                            0527 01870000
@RF00525 L     @10,CAMPLPTR                                        0527 01871000
         L     @10,CAMPTR3(,@10)                                   0527 01872000
         L     @09,MAXVOLS                                         0527 01873000
         STH   @09,VOLENTCT(,@10)                                  0527 01874000
*       DO LOOP=1 TO VOLENTCT;                                     0528 01875000
@RC00525 LA    LOOP,1                                              0528 01876000
         B     @DE00528                                            0528 01877000
@DL00528 DS    0H                                                  0529 01878000
*         VOLSER(LOOP)=CTGVLVOL(LOOP);                             0529 01879000
         LA    @10,12                                              0529 01880000
         LR    @05,LOOP                                            0529 01881000
         MR    @04,@10                                             0529 01882000
         L     @09,CAMPLPTR                                        0529 01883000
         L     @09,CAMPTR3(,@09)                                   0529 01884000
         ALR   @09,@05                                             0529 01885000
         AL    @09,@CF01254                                        0529 01886000
         LR    @05,@10                                             0529 01887000
         MR    @04,LOOP                                            0529 01888000
         L     @10,CTGPLPTR                                        0529 01889000
         L     @10,CTGWKA(,@10)                                    0529 01890000
         L     @10,CTGWAVL(,@10)                                   0529 01891000
         ALR   @10,@05                                             0529 01892000
         AL    @10,@CF01255                                        0529 01893000
         MVC   VOLSER-6(6,@09),CTGVLVOL(@10)                       0529 01894000
*         DEVTYP(LOOP)=CTGVLDEV(LOOP);                             0530 01895000
         LA    @10,12                                              0530 01896000
         LR    @05,LOOP                                            0530 01897000
         MR    @04,@10                                             0530 01898000
         L     @09,CAMPLPTR                                        0530 01899000
         L     @09,CAMPTR3(,@09)                                   0530 01900000
         ALR   @09,@05                                             0530 01901000
         AL    @09,@CF01253                                        0530 01902000
         LR    @05,@10                                             0530 01903000
         MR    @04,LOOP                                            0530 01904000
         L     @10,CTGPLPTR                                        0530 01905000
         L     @10,CTGWKA(,@10)                                    0530 01906000
         L     @10,CTGWAVL(,@10)                                   0530 01907000
         ALR   @10,@05                                             0530 01908000
         AL    @10,@CF01254                                        0530 01909000
         MVC   DEVTYP-2(4,@09),CTGVLDEV-6(@10)                     0530 01910000
*         FSN(LOOP)=CTGVLSEQ(LOOP);                                0531 01911000
         LA    @10,12                                              0531 01912000
         LR    @05,LOOP                                            0531 01913000
         MR    @04,@10                                             0531 01914000
         L     @09,CAMPLPTR                                        0531 01915000
         L     @09,CAMPTR3(,@09)                                   0531 01916000
         LR    @07,@10                                             0531 01917000
         MR    @06,LOOP                                            0531 01918000
         L     @10,CTGPLPTR                                        0531 01919000
         L     @10,CTGWKA(,@10)                                    0531 01920000
         L     @10,CTGWAVL(,@10)                                   0531 01921000
         BCTR  @10,0                                               0531 01922000
         BCTR  @10,0                                               0531 01923000
         LH    @10,CTGVLSEQ-10(@07,@10)                            0531 01924000
         ALR   @09,@05                                             0531 01925000
         STCM  @10,3,FSN-12(@09)                                   0531 01926000
*       END;                                                       0532 01927000
         AL    LOOP,@CF00052                                       0532 01928000
@DE00528 L     @10,CAMPLPTR                                        0532 01929000
         L     @10,CAMPTR3(,@10)                                   0532 01930000
         CH    LOOP,VOLENTCT(,@10)                                 0532 01931000
         BNH   @DL00528                                            0532 01932000
*       VOLENTCT=CTGWAVCT;                                         0533 01933000
         L     @10,CAMPLPTR                                        0533 01934000
         L     @10,CAMPTR3(,@10)                                   0533 01935000
         L     @09,CTGPLPTR                                        0533 01936000
         L     @09,CTGWKA(,@09)                                    0533 01937000
         LH    @03,CTGWAVCT(,@09)                                  0533 01938000
         STH   @03,VOLENTCT(,@10)                                  0533 01939000
*       IF VOLENTCT=ONE THEN                                       0534 01940000
*                                                                  0534 01941000
         C     @03,ONE                                             0534 01942000
         BNE   @RF00534                                            0534 01943000
*         /***********************************************************/ 01944000
*         /*                                                         */ 01945000
*         /* IF THE VOLUME COUNT IS ONE THEN THERE IS DSCBTTR        */ 01946000
*         /* INFORMATION TO MOVE ALSO.                               */ 01947000
*         /*                                                         */ 01948000
*         /***********************************************************/ 01949000
*                                                                  0535 01950000
*         RETVCBLK=CTGVLTTR;                                       0535 01951000
         L     @09,CTGWAVL(,@09)                                   0535 01952000
         MVC   RETVCBLK(3,@10),CTGVLTTR(@09)                       0535 01953000
*       RFY                                                        0536 01954000
*        (TCBPTR,                                                  0536 01955000
*         WRKREG) RSTD;                                            0536 01956000
@RF00534 DS    0H                                                  0537 01957000
*       DO;                         /* MODESET KEYADDR(OLDKEY)     0537 01958000
*                                      WORKREG(WRKREG)               */ 01959000
*         WRKREG=OLDKEY;            /* GET KEY FORM SAVE LOCATION    */ 01960000
         SLR   WRKREG,WRKREG                                       0538 01961000
         IC    WRKREG,OLDKEY                                       0538 01962000
*         SPKA(WRKREG);             /* SET PSW KEY                   */ 01963000
         SPKA  0(WRKREG)                                           0539 01964000
*       END;                        /* MODESET KEYADDR(OLDKEY)     0540 01965000
*                                      WORKREG(WRKREG) RESET TO    0540 01966000
*                                      CATALOG KEY                   */ 01967000
*       STSW=CHAR0;                 /* ESTAE USE-0FF YL026RB         */ 01968000
         MVC   STSW(1),CHAR0                                       0541 01969000
*       RFY                                                        0542 01970000
*        (TCBPTR,                                                  0542 01971000
*         WRKREG,                                                  0542 01972000
*         LOOP) UNRSTD;                                            0542 01973000
*       SAVERC=NORMRC;                                             0543 01974000
         SLR   @10,@10                                             0543 01975000
         ST    @10,SAVERC                                          0543 01976000
*     END;                                                         0544 01977000
*   END OSVOLST;                                                   0545 01978000
@EL00014 L     @13,4(,@13)                                         0545 01979000
@EF00014 DS    0H                                                  0545 01980000
@ER00014 L     @14,12(,@13)                                        0545 01981000
         BR    @14                                                 0545 01982000
*                                                                  0546 01983000
*   /*****************************************************************/ 01984000
*   /*                                                               */ 01985000
*   /* OSRETCD IS CALLED TO TRANSLATE VSAM RETURN CODES TO A RETURN  */ 01986000
*   /* CODE THAT IS WITHIN THE RANGE OF ACCEPTED RETURN CODES FOR    */ 01987000
*   /* OS/VS.                                                        */ 01988000
*   /*                                                               */ 01989000
*   /*****************************************************************/ 01990000
*                                                                  0546 01991000
*OSRETCD:                                                          0546 01992000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0546 01993000
OSRETCD  ST    @14,12(,@13)                                        0546 01994000
         ST    @13,@SA00015+4                                      0546 01995000
         LA    @14,@SA00015                                        0546 01996000
         LR    @13,@14                                             0546 01997000
*   SAVER0=ZERO;                                                   0547 01998000
         SLR   @10,@10                                             0547 01999000
         ST    @10,SAVER0                                          0547 02000000
*   IF SAVERC=NOCAT|SAVERC=CATNEDED|SAVERC=NOTOPEN THEN            0548 02001000
*                                                                  0548 02002000
         L     @10,SAVERC                                          0548 02003000
         C     @10,NOCAT                                           0548 02004000
         BE    @RT00548                                            0548 02005000
         C     @10,CATNEDED                                        0548 02006000
         BE    @RT00548                                            0548 02007000
         C     @10,NOTOPEN                                         0548 02008000
         BNE   @RF00548                                            0548 02009000
@RT00548 DS    0H                                                  0549 02010000
*     /***************************************************************/ 02011000
*     /*                                                             */ 02012000
*     /* ANY OF THE ABOVE RETURN CODES MEANS BASICALLY THAT A CATALOG*/ 02013000
*     /* DOES NOT EXIST OR IS NOT OPEN.                              */ 02014000
*     /*                                                             */ 02015000
*     /***************************************************************/ 02016000
*                                                                  0549 02017000
*     SAVERC=NOCAT;                                                0549 02018000
         L     @10,NOCAT                                           0549 02019000
         ST    @10,SAVERC                                          0549 02020000
*   ELSE                                                           0550 02021000
*     IF SAVERC=PRTECTED THEN                                      0550 02022000
*                                                                  0550 02023000
         B     @RC00548                                            0550 02024000
@RF00548 L     @10,SAVERC                                          0550 02025000
         C     @10,PRTECTED                                        0550 02026000
         BNE   @RF00550                                            0550 02027000
*       /*************************************************************/ 02028000
*       /*                                                           */ 02029000
*       /* IF A PASSWORD PROTECTION ERROR                    @ZA02503*/ 02030000
*       /* OCCURRED, THE RETURN                              @ZA02503*/ 02031000
*       /* CODE INDICATES THAT THE DATA SET                  @ZA02503*/ 02032000
*       /* WAS NOT FOUND, AND REG 0 IS SET                   @ZA02503*/ 02033000
*       /* TO THE VSAM RETURN CODE.                          @ZA02503*/ 02034000
*       /*                                                           */ 02035000
*       /*************************************************************/ 02036000
*                                                                  0551 02037000
*       DO;                         /*                       @ZA02503*/ 02038000
*         SAVER0=SAVERC;            /*                       @ZA02503*/ 02039000
         ST    @10,SAVER0                                          0552 02040000
*         SAVERC=DSNOTFND;          /*                       @ZA02503*/ 02041000
         L     @10,DSNOTFND                                        0553 02042000
         ST    @10,SAVERC                                          0553 02043000
*       END;                        /*                       @ZA02503*/ 02044000
*     ELSE                                                         0555 02045000
*                                                                  0555 02046000
*       /*************************************************************/ 02047000
*       /*                                                           */ 02048000
*       /* ALL OTHER RETURN CODES ARE DEPENDENT UPON WHETHER THE     */ 02049000
*       /* ORIGINAL REQUEST WAS A LOCATE OR A NON-LOCATE. A CHECK IS */ 02050000
*       /* MADE FOR THIS CONDITION.                                  */ 02051000
*       /*                                                           */ 02052000
*       /*************************************************************/ 02053000
*                                                                  0555 02054000
*       DO;                                                        0555 02055000
         B     @RC00550                                            0555 02056000
@RF00550 DS    0H                                                  0556 02057000
*         IF(OPTBITS&OSLOCMSK)=ALLZERO THEN                        0556 02058000
*                                                                  0556 02059000
         MVC   @TS00001(4),OPTBITS                                 0556 02060000
         NC    @TS00001(4),OSLOCMSK                                0556 02061000
         CLC   @TS00001(4),ALLZERO                                 0556 02062000
         BNE   @RF00556                                            0556 02063000
*           /*********************************************************/ 02064000
*           /*                                                       */ 02065000
*           /* THE ORIGINAL REQUEST WAS A LOCATE SO THE RETURN CODES */ 02066000
*           /* ARE TRANSLATED ACCORDINGLY.                           */ 02067000
*           /*                                                       */ 02068000
*           /*********************************************************/ 02069000
*                                                                  0557 02070000
*           DO;                                                    0557 02071000
*             IF SAVERC=DSNOTFND THEN                              0558 02072000
         CLC   SAVERC(4),DSNOTFND                                  0558 02073000
         BE    @RT00558                                            0558 02074000
*               ;                                                  0559 02075000
*                                                                  0559 02076000
*             /*******************************************************/ 02077000
*             /*                                                     */ 02078000
*             /* DATASET NOT FOUND IS A VALID RETURN CODE AND IS LEFT*/ 02079000
*             /* AS IS.                                              */ 02080000
*             /*                                                     */ 02081000
*             /*******************************************************/ 02082000
*                                                                  0560 02083000
*             ELSE                                                 0560 02084000
*                                                                  0560 02085000
*               /*****************************************************/ 02086000
*               /*                                                   */ 02087000
*               /* ALL OTHER RETURN CODES FROM A LOCATE HAVE THE     */ 02088000
*               /* ORIGINAL RETURN CODE FROM VSAM CATALOG MANAGEMENT */ 02089000
*               /* PUT IN REGISTER 0 AND AN INDICATION OF AN I/O     */ 02090000
*               /* ERROR PUT IN THE NORMAL RETURN REGISTER (REG 15). */ 02091000
*               /*                                                   */ 02092000
*               /*****************************************************/ 02093000
*                                                                  0560 02094000
*               DO;                                                0560 02095000
*                 SAVER0=SAVERC;                                   0561 02096000
         L     @10,SAVERC                                          0561 02097000
         ST    @10,SAVER0                                          0561 02098000
*                 SAVERC=LOCIOERR;                                 0562 02099000
         L     @10,LOCIOERR                                        0562 02100000
         ST    @10,SAVERC                                          0562 02101000
*               END;                                               0563 02102000
*           END;                                                   0564 02103000
*         ELSE                                                     0565 02104000
*                                                                  0565 02105000
*           /*********************************************************/ 02106000
*           /*                                                       */ 02107000
*           /* ALL NON-LOCATE RETURN CODES ARE TRANSLATED IN THE     */ 02108000
*           /* FOLLOWING BLOCK.                                      */ 02109000
*           /*                                                       */ 02110000
*           /*********************************************************/ 02111000
*                                                                  0565 02112000
*           DO;                                                    0565 02113000
         B     @RC00556                                            0565 02114000
@RF00556 DS    0H                                                  0566 02115000
*             IF SAVERC=DSEXISTS THEN/*                      @YM04146*/ 02116000
*                                                                  0566 02117000
         L     @10,SAVERC                                          0566 02118000
         C     @10,DSEXISTS                                        0566 02119000
         BNE   @RF00566                                            0566 02120000
*               /*****************************************************/ 02121000
*               /*                                                   */ 02122000
*               /* DATASET ALREADY EXISTS IS A VALID RETURN CODE AND */ 02123000
*               /* IS LEFT AS IS. REG 0 IS SET TO 8.         @YM04146*/ 02124000
*               /*                                                   */ 02125000
*               /*****************************************************/ 02126000
*                                                                  0567 02127000
*               SAVER0=SAVERC;      /*                       @YM04146*/ 02128000
         ST    @10,SAVER0                                          0567 02129000
*             ELSE                                                 0568 02130000
*               IF SAVERC=INVALTYP THEN                            0568 02131000
*                                                                  0568 02132000
         B     @RC00566                                            0568 02133000
@RF00566 L     @10,SAVERC                                          0568 02134000
         C     @10,INVALTYP                                        0568 02135000
         BNE   @RF00568                                            0568 02136000
*                 /***************************************************/ 02137000
*                 /*                                                 */ 02138000
*                 /* IF THE DATASET ENTRY WAS THE WRONG ENTRY TYPE   */ 02139000
*                 /* THE RETURN CODE INDICATES THAT THE ENTRY ALREADY*/ 02140000
*                 /* EXISTED AND REG 0 IS SET TO THE VSAM RETURN     */ 02141000
*                 /* CODE.                                           */ 02142000
*                 /*                                                 */ 02143000
*                 /***************************************************/ 02144000
*                                                                  0569 02145000
*                 DO;                                              0569 02146000
*                   SAVER0=SAVERC;                                 0570 02147000
         ST    @10,SAVER0                                          0570 02148000
*                   SAVERC=DSEXISTS;                               0571 02149000
         L     @10,DSEXISTS                                        0571 02150000
         ST    @10,SAVERC                                          0571 02151000
*                 END;                                             0572 02152000
*               ELSE                                               0573 02153000
*                                                                  0573 02154000
*                 /***************************************************/ 02155000
*                 /*                                                 */ 02156000
*                 /* ALL OTHER RETURN CODES FROM A NON- LOCATE HAVE  */ 02157000
*                 /* THE ORIGINAL RETURN FROM VSAM CATALOG MANAGEMENT*/ 02158000
*                 /* PUT IN REG 0 AND AN INDICATION OF AN I/O ERROR  */ 02159000
*                 /* PUT IN THE NORMAL RETURN REG (REG 15).          */ 02160000
*                 /*                                                 */ 02161000
*                 /***************************************************/ 02162000
*                                                                  0573 02163000
*                 DO;                                              0573 02164000
         B     @RC00568                                            0573 02165000
@RF00568 DS    0H                                                  0574 02166000
*                   IF SAVERC=NOSPACE THEN                         0574 02167000
         CLC   SAVERC(4),NOSPACE                                   0574 02168000
         BE    @RT00574                                            0574 02169000
*                     ;                                            0575 02170000
*                                                                  0575 02171000
*                   /*************************************************/ 02172000
*                   /*                                               */ 02173000
*                   /* A RETURN CODE OF 20 (NO EXTENTS OR NO SPACE   */ 02174000
*                   /* AVAILABLE) IS LEFT AS IS SINCE IT IS A VALID  */ 02175000
*                   /* OS/VS RETURN CODE.                            */ 02176000
*                   /*                                               */ 02177000
*                   /*************************************************/ 02178000
*                                                                  0576 02179000
*                   ELSE                                           0576 02180000
*                                                                  0576 02181000
*                     /***********************************************/ 02182000
*                     /*                                             */ 02183000
*                     /* SET AN I/O ERROR INDICATOR AND PUT THE      */ 02184000
*                     /* ORIGINAL VSAM RETURN CODE INTO REGISTER 0.  */ 02185000
*                     /*                                             */ 02186000
*                     /***********************************************/ 02187000
*                                                                  0576 02188000
*                     DO;                                          0576 02189000
*                       SAVER0=SAVERC;                             0577 02190000
         L     @10,SAVERC                                          0577 02191000
         ST    @10,SAVER0                                          0577 02192000
*                       SAVERC=CATIOERR;                           0578 02193000
         L     @10,CATIOERR                                        0578 02194000
         ST    @10,SAVERC                                          0578 02195000
*                     END;                                         0579 02196000
*                 END;                                             0580 02197000
*           END;                                                   0581 02198000
*       END;                                                       0582 02199000
*   END OSRETCD;                                                   0583 02200000
@EL00015 L     @13,4(,@13)                                         0583 02201000
@EF00015 DS    0H                                                  0583 02202000
@ER00015 L     @14,12(,@13)                                        0583 02203000
         BR    @14                                                 0583 02204000
*   END IGC0002F                                                   0584 02205000
*                                                                  0584 02206000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02207000
*/*%INCLUDE SYSLIB  (IEZCTGPL)                                       */ 02208000
*/*%INCLUDE SYSLIB  (IEZCTGWA)                                       */ 02209000
*/*%INCLUDE SYSLIB  (IEZCTGVL)                                       */ 02210000
*/*%INCLUDE SYSLIB  (IEZCTGCV)                                       */ 02211000
*/*%INCLUDE SYSLIB  (IEZCTGFV)                                       */ 02212000
*/*%INCLUDE SYSLIB  (IEZCTGFL)                                       */ 02213000
*/*%INCLUDE SYSLIB  (IHARB   )                                       */ 02214000
*/*%INCLUDE SYSLIB  (IKJRB   )                                       */ 02215000
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */ 02216000
*                                                                  0584 02217000
*       ;                                                          0584 02218000
@DATA    DS    0H                                                       02219000
@CH00115 DC    H'12'                                                    02220000
@CH01203 DC    H'22'                                                    02221000
@SX01250 XC    SPACE(0,MAINPTR),SPACE(MAINPTR)                          02222000
         DS    0F                                                       02223000
@AL00382 DC    A(LOCPRMSZ)             LIST WITH   2 ARGUMENT(S)        02224000
         DC    A(@CF01178)                                              02225000
@DATD    DSECT                                                          02226000
         DS    0F                                                       02227000
@SA00001 DS    4F                                                       02228000
@SA00003 DS    4F                                                       02229000
@SA00004 DS    4F                                                       02230000
@SA00005 DS    4F                                                       02231000
@SA00006 DS    4F                                                       02232000
@SA00007 DS    4F                                                       02233000
@SA00008 DS    4F                                                       02234000
@SA00010 DS    4F                                                       02235000
@PC00010 DS    2F                                                       02236000
@SA00011 DS    4F                                                       02237000
@SA00012 DS    4F                                                       02238000
@SA00013 DS    4F                                                       02239000
@SA00014 DS    4F                                                       02240000
@SA00015 DS    4F                                                       02241000
@SA00009 DS    4F                                                       02242000
@AL00001 DS    2A                                                       02243000
@AFTEMPS DS    3F                                                       02244000
IGC0002F CSECT                                                          02245000
         DS    0F                                                       02246000
@CF00052 DC    F'1'                                                     02247000
@CF00168 DC    F'4'                                                     02248000
@CF01144 DC    F'9'                                                     02249000
@CF01204 DC    F'160'                                                   02250000
@CF01178 DC    F'256'                                                   02251000
@CF01255 DC    F'-12'                                                   02252000
@CF01253 DC    F'-10'                                                   02253000
@CF01254 DC    F'-6'                                                    02254000
@CF01252 DC    F'-4'                                                    02255000
@CF01108 DC    XL4'007D8000'                                            02256000
@DATD    DSECT                                                          02257000
         DS    0D                                                       02258000
@TS00001 DS    CL4                                                      02259000
IGC0002F CSECT                                                          02260000
         DS    0F                                                       02261000
@SIZDATD DC    AL1(0)                                                   02262000
         DC    AL3(@ENDDATD-@DATD)                                      02263000
         DS    0D                                                       02264000
LOCPRMSZ DC    AL4(382)                                                 02265000
NOCAT    DC    A(4)                                                     02266000
DSNOTFND DC    F'8'                                                     02267000
UNSUPTED DC    F'16'                                                    02268000
NOSPACE  DC    A(20)                                                    02269000
LOCIOERR DC    A(24)                                                    02270000
CATIOERR DC    A(28)                                                    02271000
CATNEDED DC    A(36)                                                    02272000
TOOSMALL DC    A(40)                                                    02273000
SMALLWKA DC    A(44)                                                    02274000
PRTECTED DC    A(56)                                                    02275000
INVALTYP DC    A(60)                                                    02276000
NOTOPEN  DC    A(188)                                                   02277000
ONE      DC    F'1'                                                     02278000
MAXVOLS  DC    F'20'                                                    02279000
STDLEN   DC    AL4(28+92+16+16+20)                                      02280000
STCHK    DC    F'282'                                                   02281000
LISTLEN  DC    H'240'                                                   02282000
LENOPTN  DC    H'190'                                                   02283000
@CC01157 DC    C'IGG0CLA1'                                              02284000
@CC01150 DC    C'.X'                                                    02285000
OSLOCMSK DC    X'3A7F8000'                                              02286000
LOCTTRMK DC    X'387F8000'                                              02287000
CATMSK   DC    X'1A3D8000'                                              02288000
UCATMSK  DC    X'327B8000'                                              02289000
RECATMSK DC    X'2A7D8000'                                              02290000
CAMCAT   DC    X'20'                                                    02291000
CAMUNCAT DC    X'08'                                                    02292000
CAMRECAT DC    X'10'                                                    02293000
ALLZERO  DC    X'00000000'                                              02294000
XCTL     DC    AL1(1)                                                   02295000
EXITRT   DC    AL1(0)                                                   02296000
         DS    CL1                                                      02297000
RECORD   DS    CL24                                                     02298000
         ORG   RECORD                                                   02299000
MODN     DC    CL8'IGC0002F'                                            02300000
CSECTN   DC    CL8'IGC0002F'                                            02301000
FRRID    DC    8X'00'                                                   02302000
         ORG   RECORD+24                                                02303000
FIXAREA  DS    CL100                                                    02304000
         ORG   FIXAREA                                                  02305000
@NM00109 DC    100X'00'                                                 02306000
         ORG   FIXAREA+100                                              02307000
@DATD    DSECT                                                          02308000
         ORG   @DATD+496    FORCE ALIGNMENT                             02309000
WORKCLCA DS    CL3600       DEFINE WORKAREA                             02310000
@DATD    DSECT                                                          02311000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02312000
@ENDDATD EQU   *                                                        02313000
IGC0002F CSECT                                                          02314000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02315000
@01      EQU   01                                                       02316000
@02      EQU   02                                                       02317000
@03      EQU   03                                                       02318000
@04      EQU   04                                                       02319000
@05      EQU   05                                                       02320000
@06      EQU   06                                                       02321000
@07      EQU   07                                                       02322000
@08      EQU   08                                                       02323000
@09      EQU   09                                                       02324000
@10      EQU   10                                                       02325000
@11      EQU   11                                                       02326000
@12      EQU   12                                                       02327000
@13      EQU   13                                                       02328000
@14      EQU   14                                                       02329000
@15      EQU   15                                                       02330000
TCBPTR   EQU   @04                                                      02331000
R0       EQU   @00                                                      02332000
MAINSIZE EQU   @00                                                      02333000
MAINPTR  EQU   @01                                                      02334000
PARMPTR  EQU   @01                                                      02335000
R2       EQU   @02                                                      02336000
VSAMRETC EQU   @02                                                      02337000
HOLD15   EQU   @02                                                      02338000
GPR02F   EQU   @02                                                      02339000
CVTPTR   EQU   @03                                                      02340000
SVRBPTR  EQU   @05                                                      02341000
ESTAPARM EQU   @05                                                      02342000
R6       EQU   @06                                                      02343000
R7       EQU   @07                                                      02344000
HOLD0    EQU   @08                                                      02345000
LOOP     EQU   @08                                                      02346000
HOLD1    EQU   @09                                                      02347000
WRKREG   EQU   @09                                                      02348000
R11      EQU   @11                                                      02349000
WORKPTR  EQU   @12                                                      02350000
EXITPTR  EQU   @14                                                      02351000
RETCODE  EQU   @15                                                      02352000
XCTLPTR  EQU   @15                                                      02353000
GPR01P   EQU   @01                                                      02354000
GPR00P   EQU   @00                                                      02355000
GPR14P   EQU   @14                                                      02356000
GPR15P   EQU   @15                                                      02357000
GPR00F   EQU   @00                                                      02358000
GPR02P   EQU   @02                                                      02359000
GPR12F   EQU   @12                                                      02360000
GPR13P   EQU   @13                                                      02361000
CTGPL    EQU   0                                                        02362000
CTGOPTN1 EQU   CTGPL                                                    02363000
CTGBYPSS EQU   CTGOPTN1                                                 02364000
CTGNAME  EQU   CTGOPTN1                                                 02365000
CTGOPTN2 EQU   CTGPL+1                                                  02366000
CTGEXT   EQU   CTGOPTN2                                                 02367000
CTGERASE EQU   CTGOPTN2                                                 02368000
CTGSMF   EQU   CTGERASE                                                 02369000
CTGREL   EQU   CTGSMF                                                   02370000
CTGPURG  EQU   CTGOPTN2                                                 02371000
CTGVMNT  EQU   CTGPURG                                                  02372000
CTGRCATN EQU   CTGVMNT                                                  02373000
CTGGTNXT EQU   CTGOPTN2                                                 02374000
CTGOPTN3 EQU   CTGPL+2                                                  02375000
CTGFUNC  EQU   CTGOPTN3                                                 02376000
CTGSUPLT EQU   CTGOPTN3                                                 02377000
CTGSRH   EQU   CTGOPTN3                                                 02378000
CTGOPTN4 EQU   CTGPL+3                                                  02379000
CTGDOCAT EQU   CTGOPTN4                                                 02380000
CTGTIOT  EQU   CTGOPTN4                                                 02381000
CTGENT   EQU   CTGPL+4                                                  02382000
CTGFVT   EQU   CTGENT                                                   02383000
CTGCAT   EQU   CTGPL+8                                                  02384000
CTGCVOL  EQU   CTGCAT                                                   02385000
CTGWKA   EQU   CTGPL+12                                                 02386000
CTGDSORG EQU   CTGPL+16                                                 02387000
CTGOPTNS EQU   CTGDSORG                                                 02388000
CTGTYPE  EQU   CTGPL+18                                                 02389000
CTGDDNM  EQU   CTGPL+20                                                 02390000
CTGNEWNM EQU   CTGDDNM                                                  02391000
CTGFBFLG EQU   CTGNEWNM+2                                               02392000
CTGGDGB  EQU   CTGFBFLG                                                 02393000
CTGJSCB  EQU   CTGPL+24                                                 02394000
CTGFIELD EQU   CTGPL+28                                                 02395000
CTGWA    EQU   0                                                        02396000
CTGWAVL  EQU   CTGWA                                                    02397000
CTGWALV  EQU   CTGWA+4                                                  02398000
CTGWAVCT EQU   CTGWA+6                                                  02399000
CTGVL    EQU   0                                                        02400000
CTGVLVOL EQU   CTGVL                                                    02401000
CTGVLDEV EQU   CTGVL+6                                                  02402000
CTGVLSEQ EQU   CTGVL+10                                                 02403000
CTGVLX   EQU   0                                                        02404000
CTGVLTTR EQU   CTGVLX+12                                                02405000
CTGCV    EQU   0                                                        02406000
CTGCVDSN EQU   CTGCV+6                                                  02407000
CTGCVDEV EQU   CTGCVDSN                                                 02408000
CTGFV    EQU   0                                                        02409000
CTGFVTYP EQU   CTGFV                                                    02410000
CTGFVPRO EQU   CTGFV+1                                                  02411000
CTGFVENT EQU   CTGFV+20                                                 02412000
CTGFVVLT EQU   CTGFV+40                                                 02413000
CTGFVDVT EQU   CTGFV+48                                                 02414000
CTGFVSPC EQU   CTGFV+52                                                 02415000
CTGFVAMD EQU   CTGFV+56                                                 02416000
CTGFVFSN EQU   CTGFVAMD                                                 02417000
CTGFVLMT EQU   CTGFV+72                                                 02418000
CTGFVGAT EQU   CTGFV+76                                                 02419000
CTGFVPWD EQU   CTGFV+84                                                 02420000
CTGFL    EQU   0                                                        02421000
CTGFLDNO EQU   CTGFL                                                    02422000
CTGFLDRE EQU   CTGFL+3                                                  02423000
CTGFLDAT EQU   CTGFL+16                                                 02424000
CTGFLNG  EQU   CTGFLDAT                                                 02425000
CTGFLPT  EQU   CTGFLDAT+4                                               02426000
TCB      EQU   0                                                        02427000
TCBRBP   EQU   TCB                                                      02428000
NONADDR  EQU   0                                                        02429000
RBPRFX   EQU   0                                                        02430000
RBBASIC  EQU   0                                                        02431000
RBEXRTNM EQU   RBBASIC                                                  02432000
RBTMFLD  EQU   RBEXRTNM                                                 02433000
RBSTAB   EQU   RBBASIC+10                                               02434000
XSTAB    EQU   RBSTAB                                                   02435000
RBSTAB1  EQU   XSTAB                                                    02436000
XSTAB1   EQU   RBSTAB1                                                  02437000
RBFTCKPT EQU   XSTAB1                                                   02438000
RBSTAB2  EQU   XSTAB+1                                                  02439000
XSTAB2   EQU   RBSTAB2                                                  02440000
RBTCBNXT EQU   XSTAB2                                                   02441000
RBFACTV  EQU   XSTAB2                                                   02442000
RBFDYN   EQU   XSTAB2                                                   02443000
RBECBWT  EQU   XSTAB2                                                   02444000
RBOPSW   EQU   RBBASIC+16                                               02445000
XRBPSW   EQU   RBOPSW                                                   02446000
RBOPSWB2 EQU   XRBPSW+1                                                 02447000
RBLINK   EQU   RBBASIC+28                                               02448000
XRBLNK   EQU   RBLINK                                                   02449000
RBWCF    EQU   XRBLNK                                                   02450000
RBLINKB  EQU   XRBLNK+1                                                 02451000
RBGRSAVE EQU   RBBASIC+32                                               02452000
XRBREG   EQU   RBGRSAVE                                                 02453000
RBGRS0   EQU   XRBREG                                                   02454000
RBGRS1   EQU   XRBREG+4                                                 02455000
RBGRS2   EQU   XRBREG+8                                                 02456000
RBGRS3   EQU   XRBREG+12                                                02457000
RBGRS4   EQU   XRBREG+16                                                02458000
RBGRS5   EQU   XRBREG+20                                                02459000
RBGRS6   EQU   XRBREG+24                                                02460000
RBGRS7   EQU   XRBREG+28                                                02461000
RBGRS8   EQU   XRBREG+32                                                02462000
RBGRS9   EQU   XRBREG+36                                                02463000
RBGRS10  EQU   XRBREG+40                                                02464000
RBGRS11  EQU   XRBREG+44                                                02465000
RBGRS12  EQU   XRBREG+48                                                02466000
RBGRS13  EQU   XRBREG+52                                                02467000
RBGRS14  EQU   XRBREG+56                                                02468000
RBGRS15  EQU   XRBREG+60                                                02469000
XRBESA   EQU   RBBASIC+96                                               02470000
RBPREFIX EQU   0                                                        02471000
RBRSV019 EQU   RBPREFIX+14                                              02472000
RBRSV028 EQU   RBPREFIX+15                                              02473000
RBRSV041 EQU   RBPREFIX+27                                              02474000
RBRSV054 EQU   RBPREFIX+39                                              02475000
RBRTOPSW EQU   RBPREFIX+40                                              02476000
RBRTPSW2 EQU   RBRTOPSW+8                                               02477000
RBRTICIL EQU   RBRTPSW2                                                 02478000
RBFLAGS1 EQU   RBPREFIX+56                                              02479000
RBINTCDA EQU   RBPREFIX+61                                              02480000
RBSECT   EQU   0                                                        02481000
RBPPSAV  EQU   RBSECT                                                   02482000
@NM00021 EQU   RBSECT+10                                                02483000
@NM00022 EQU   @NM00021                                                 02484000
RBTRSVRB EQU   @NM00022                                                 02485000
@NM00024 EQU   @NM00021+1                                               02486000
RBETXR   EQU   @NM00024                                                 02487000
RBEP     EQU   RBSECT+12                                                02488000
RBPGMQ   EQU   RBSECT+24                                                02489000
@NM00031 EQU   RBSECT+28                                                02490000
@NM00032 EQU   @NM00031                                                 02491000
IRBEND   EQU   RBSECT+96                                                02492000
@NM00035 EQU   RBSECT+96                                                02493000
RBRSV138 EQU   @NM00035+7                                               02494000
RBSCBB   EQU   RBSECT+144                                               02495000
RBSPARM  EQU   RBSCBB+8                                                 02496000
RBSFLGS1 EQU   RBSPARM                                                  02497000
RBSIOPRC EQU   RBSFLGS1                                                 02498000
RBSOWNR  EQU   RBSCBB+12                                                02499000
RBSFLGS2 EQU   RBSOWNR                                                  02500000
RBSDATA  EQU   RBSCBB+16                                                02501000
RBSFLG3  EQU   RBSDATA                                                  02502000
RBRSV150 EQU   RBSECT+167                                               02503000
SDWA     EQU   0                                                        02504000
SDWAFIOB EQU   SDWA+4                                                   02505000
SDWAABCC EQU   SDWAFIOB                                                 02506000
SDWACMPF EQU   SDWAABCC                                                 02507000
SDWAREQ  EQU   SDWACMPF                                                 02508000
SDWACMPC EQU   SDWAABCC+1                                               02509000
SDWACTL1 EQU   SDWA+8                                                   02510000
SDWACMKA EQU   SDWACTL1                                                 02511000
SDWAMWPA EQU   SDWACTL1+1                                               02512000
SDWAPMKA EQU   SDWACTL1+4                                               02513000
SDWACTL2 EQU   SDWA+16                                                  02514000
SDWACMKP EQU   SDWACTL2                                                 02515000
SDWAMWPP EQU   SDWACTL2+1                                               02516000
SDWAPMKP EQU   SDWACTL2+4                                               02517000
SDWAGRSV EQU   SDWA+24                                                  02518000
SDWANAME EQU   SDWA+88                                                  02519000
SDWAEC1  EQU   SDWA+104                                                 02520000
SDWAEMK1 EQU   SDWAEC1                                                  02521000
SDWAMWP1 EQU   SDWAEC1+1                                                02522000
SDWAINT1 EQU   SDWAEC1+2                                                02523000
SDWANXT1 EQU   SDWAEC1+4                                                02524000
SDWAAEC1 EQU   SDWA+112                                                 02525000
SDWAILC1 EQU   SDWAAEC1+1                                               02526000
SDWAINC1 EQU   SDWAAEC1+2                                               02527000
SDWAICD1 EQU   SDWAINC1+1                                               02528000
SDWAEC2  EQU   SDWA+120                                                 02529000
SDWAEMK2 EQU   SDWAEC2                                                  02530000
SDWAMWP2 EQU   SDWAEC2+1                                                02531000
SDWAINT2 EQU   SDWAEC2+2                                                02532000
SDWANXT2 EQU   SDWAEC2+4                                                02533000
SDWAAEC2 EQU   SDWA+128                                                 02534000
SDWAILC2 EQU   SDWAAEC2+1                                               02535000
SDWAINC2 EQU   SDWAAEC2+2                                               02536000
SDWAICD2 EQU   SDWAINC2+1                                               02537000
SDWASRSV EQU   SDWA+136                                                 02538000
SDWAIDNT EQU   SDWA+200                                                 02539000
SDWAMCH  EQU   SDWA+204                                                 02540000
SDWASTCK EQU   SDWAMCH                                                  02541000
SDWAMCHI EQU   SDWAMCH+8                                                02542000
SDWAMCHS EQU   SDWAMCHI                                                 02543000
SDWAMCHD EQU   SDWAMCHI+1                                               02544000
SDWARSR1 EQU   SDWAMCH+12                                               02545000
SDWARSR2 EQU   SDWAMCH+13                                               02546000
SDWAFLGS EQU   SDWA+232                                                 02547000
SDWAERRA EQU   SDWAFLGS                                                 02548000
SDWAERRB EQU   SDWAFLGS+1                                               02549000
SDWAERRC EQU   SDWAFLGS+2                                               02550000
SDWAPERC EQU   SDWAERRC                                                 02551000
SDWAERRD EQU   SDWAFLGS+3                                               02552000
SDWAIOFS EQU   SDWA+238                                                 02553000
SDWACPUA EQU   SDWA+248                                                 02554000
SDWAPARQ EQU   SDWA+252                                                 02555000
SDWARCDE EQU   SDWAPARQ                                                 02556000
SDWAACF2 EQU   SDWAPARQ+1                                               02557000
SDWARCRD EQU   SDWAACF2                                                 02558000
SDWAACF3 EQU   SDWAPARQ+2                                               02559000
SDWAACF4 EQU   SDWAPARQ+3                                               02560000
SDWALKWA EQU   SDWA+256                                                 02561000
SDWALKWS EQU   SDWALKWA                                                 02562000
SDWARECP EQU   SDWA+292                                                 02563000
SDWASNPA EQU   SDWA+320                                                 02564000
SDWADUMP EQU   SDWASNPA                                                 02565000
SDWADPFS EQU   SDWADUMP+1                                               02566000
SDWADDAT EQU   SDWASNPA+4                                               02567000
SDWASDAT EQU   SDWADDAT                                                 02568000
SDWAPDAT EQU   SDWADDAT+2                                               02569000
SDWADPSA EQU   SDWA+328                                                 02570000
SDWADPSL EQU   SDWADPSA                                                 02571000
SDWARA   EQU   SDWA+400                                                 02572000
SDWADPVA EQU   SDWARA+2                                                 02573000
CAMLSTD  EQU   0                                                        02574000
CAMOPTNS EQU   CAMLSTD                                                  02575000
CAMOPTN1 EQU   CAMOPTNS                                                 02576000
CAMCVOL  EQU   CAMOPTN1                                                 02577000
CAMLTTR  EQU   CAMOPTN1                                                 02578000
CAMOPTN2 EQU   CAMOPTNS+1                                               02579000
CAMDOCAT EQU   CAMOPTN2                                                 02580000
CAMBLDA  EQU   CAMOPTN2                                                 02581000
CAMLNKX  EQU   CAMOPTN2                                                 02582000
CAMDTTR  EQU   CAMOPTN2                                                 02583000
CAMDLTA  EQU   CAMOPTN2                                                 02584000
CAMOPTN3 EQU   CAMOPTNS+2                                               02585000
CAMDRPX  EQU   CAMOPTN3                                                 02586000
CAMTIOT  EQU   CAMOPTN3                                                 02587000
CAMAM0   EQU   CAMOPTN3                                                 02588000
@NM00090 EQU   CAMLSTD+4                                                02589000
CAMPTR1  EQU   @NM00090                                                 02590000
CAMCVOLP EQU   @NM00090+4                                               02591000
CAMPTR3  EQU   @NM00090+8                                               02592000
CAMDSCBP EQU   @NM00090+12                                              02593000
CAMCVOLS EQU   0                                                        02594000
CAMIDXNM EQU   0                                                        02595000
RETDATA  EQU   0                                                        02596000
VOLENTCT EQU   RETDATA                                                  02597000
VOLST    EQU   RETDATA+2                                                02598000
DEVTYP   EQU   VOLST                                                    02599000
VOLSER   EQU   VOLST+4                                                  02600000
FSN      EQU   VOLST+10                                                 02601000
RETDSCBT EQU   RETDATA+252                                              02602000
RETVCBLK EQU   RETDSCBT                                                 02603000
CTGLSTD  EQU   0                                                        02604000
CTGDYNWA EQU   CTGLSTD+32                                               02605000
WKALEN   EQU   CTGDYNWA                                                 02606000
VOLSTCTG EQU   CTGLSTD+48                                               02607000
CVOLCTG  EQU   CTGLSTD+288                                              02608000
CTGCATST EQU   0                                                        02609000
FVTFLD   EQU   CTGCATST+32                                              02610000
FSNENTS  EQU   CTGCATST+124                                             02611000
DEVTPS   EQU   CTGCATST+148                                             02612000
FSNOVLY  EQU   0                                                        02613000
FSNARRY  EQU   FSNOVLY                                                  02614000
DEVOVLY  EQU   0                                                        02615000
DEVS     EQU   DEVOVLY                                                  02616000
DEVARRY  EQU   DEVS+8                                                   02617000
VOLSERS  EQU   0                                                        02618000
VLSFLND  EQU   VOLSERS                                                  02619000
VVOL     EQU   VOLSERS+2                                                02620000
VVOLSER  EQU   VVOL+2                                                   02621000
I256C    EQU   0                                                        02622000
SPACE    EQU   0                                                        02623000
I001C    EQU   0                                                        02624000
I008P    EQU   0                                                        02625000
I015F    EQU   0                                                        02626000
I015P    EQU   0                                                        02627000
I031F    EQU   0                                                        02628000
I031P    EQU   0                                                        02629000
WKCVOLVS EQU   WORKCLCA+92                                              02630000
CVTSAV   EQU   WORKCLCA+100                                             02631000
TCBSAV   EQU   WORKCLCA+104                                             02632000
SVRBSAV  EQU   WORKCLCA+108                                             02633000
SAVERC   EQU   WORKCLCA+112                                             02634000
SAVER1   EQU   WORKCLCA+116                                             02635000
SAVER0   EQU   WORKCLCA+120                                             02636000
EXITSAV  EQU   WORKCLCA+124                                             02637000
CTGPLPTR EQU   WORKCLCA+128                                             02638000
CTGFLPTR EQU   WORKCLCA+132                                             02639000
CAMPLPTR EQU   WORKCLCA+136                                             02640000
PRMLSTSZ EQU   WORKCLCA+140                                             02641000
OPTBITS  EQU   WORKCLCA+144                                             02642000
OPBIT1   EQU   OPTBITS                                                  02643000
XCTLLIST EQU   WORKCLCA+148                                             02644000
XCTLPARM EQU   XCTLLIST                                                 02645000
XCTLNUL  EQU   XCTLLIST+4                                               02646000
XCTLNAME EQU   XCTLLIST+8                                               02647000
VOLSTPTR EQU   WORKCLCA+164                                             02648000
VOLUMECT EQU   WORKCLCA+168                                             02649000
CALLTYPE EQU   WORKCLCA+172                                             02650000
ROUTE    EQU   WORKCLCA+173                                             02651000
OLDKEY   EQU   WORKCLCA+174                                             02652000
ESTALIST EQU   WORKCLCA+176                                             02653000
BASEPTR  EQU   ESTALIST                                                 02654000
WAPTR    EQU   ESTALIST+4                                               02655000
SASW     EQU   ESTALIST+8                                               02656000
WASW     EQU   ESTALIST+9                                               02657000
STSW     EQU   ESTALIST+10                                              02658000
PARMLIST EQU   WORKCLCA+188                                             02659000
WORKNAME EQU   WORKCLCA+204                                             02660000
AMOUNT   EQU   0                                                        02661000
CLEAR    EQU   0                                                        02662000
@NM00005 EQU   CTGDDNM                                                  02663000
CTGPROB  EQU   @NM00005                                                 02664000
CTGREASN EQU   CTGPROB+2                                                02665000
RBSECS03 EQU   RBEP                                                     02666000
RBCDE    EQU   RBSECS03                                                 02667000
RBCDFLGS EQU   RBCDE                                                    02668000
RBSECS05 EQU   RBPGMQ                                                   02669000
RBSQE    EQU   RBSECS05                                                 02670000
RBSECS06 EQU   RBPGMQ                                                   02671000
RBIQE    EQU   RBSECS06                                                 02672000
RBSECS07 EQU   RBPGMQ                                                   02673000
RBIQE2   EQU   RBSECS07                                                 02674000
RBSECS08 EQU   IRBEND                                                   02675000
RBSECS09 EQU   IRBEND                                                   02676000
DSEXISTS EQU   DSNOTFND                                                 02677000
ZEROFLD  EQU   ALLZERO                                                  02678000
VSAM     EQU   XCTL                                                     02679000
OSVS     EQU   EXITRT                                                   02680000
CHAR1    EQU   XCTL                                                     02681000
CHAR0    EQU   EXITRT                                                   02682000
INVALFUN EQU   CATIOERR                                                 02683000
PLPTR    EQU   SAVER1                                                   02684000
*                                      START UNREFERENCED COMPONENTS    02685000
RBRSV161 EQU   RBSECS09+64                                              02686000
RBSIRBWA EQU   RBSECS09                                                 02687000
RBIQEWRK EQU   RBSECS08+4                                               02688000
RBNEXAV  EQU   RBSECS08                                                 02689000
RBIQEA   EQU   RBIQE2                                                   02690000
RBIQE1   EQU   RBIQE+1                                                  02691000
RBUSE    EQU   RBIQE                                                    02692000
RBSQEA   EQU   RBSQE+1                                                  02693000
@NM00036 EQU   RBSQE                                                    02694000
RBCDE1   EQU   RBCDE+1                                                  02695000
RBCDLOAD EQU   RBCDFLGS                                                 02696000
RBCDXCTL EQU   RBCDFLGS                                                 02697000
RBCDSYNC EQU   RBCDFLGS                                                 02698000
RBCDNODE EQU   RBCDFLGS                                                 02699000
RBRSV010 EQU   RBCDFLGS                                                 02700000
RBCDATCH EQU   RBCDFLGS                                                 02701000
RBRSV009 EQU   RBCDFLGS                                                 02702000
RBNOCELL EQU   RBCDFLGS                                                 02703000
CTGREAS2 EQU   CTGREASN+1                                               02704000
CTGREAS1 EQU   CTGREASN                                                 02705000
CTGMODID EQU   CTGPROB                                                  02706000
@NM00108 EQU   PARMLIST                                                 02707000
@NM00107 EQU   ESTALIST+11                                              02708000
@NM00106 EQU   WORKCLCA+175                                             02709000
@NM00105 EQU   OPTBITS+2                                                02710000
OPBIT2   EQU   OPTBITS+1                                                02711000
@NM00104 EQU   WORKCLCA+98                                              02712000
WKCATANM EQU   WORKCLCA+48                                              02713000
WKCATNM  EQU   WORKCLCA+4                                               02714000
@NM00103 EQU   WORKCLCA                                                 02715000
@NM00102 EQU   VVOL                                                     02716000
@NM00101 EQU   DEVS                                                     02717000
@NM00100 EQU   CTGCATST+164                                             02718000
@NM00099 EQU   CTGCATST+140                                             02719000
@NM00098 EQU   CTGCATST+28                                              02720000
@NM00097 EQU   CTGCATST                                                 02721000
@NM00096 EQU   CTGLSTD+28                                               02722000
@NM00095 EQU   CTGLSTD                                                  02723000
RETCVOL  EQU   RETDATA+259                                              02724000
@NM00094 EQU   RETDATA+256                                              02725000
@NM00093 EQU   RETDSCBT+3                                               02726000
@NM00092 EQU   RETDATA+242                                              02727000
@NM00091 EQU   @NM00090+16                                              02728000
CAMGEN   EQU   CAMOPTNS+3                                               02729000
@NM00089 EQU   CAMOPTN3                                                 02730000
@NM00088 EQU   CAMOPTN3                                                 02731000
CAMDLTX  EQU   CAMOPTN2                                                 02732000
@NM00087 EQU   CAMOPTN2                                                 02733000
@NM00086 EQU   CAMOPTN1                                                 02734000
@NM00085 EQU   CAMOPTN1                                                 02735000
@NM00084 EQU   SDWA+512                                                 02736000
SDWAVRA  EQU   SDWARA+4                                                 02737000
SDWAURAL EQU   SDWARA+3                                                 02738000
@NM00083 EQU   SDWADPVA                                                 02739000
SDWAEBC  EQU   SDWADPVA                                                 02740000
SDWAHEX  EQU   SDWADPVA                                                 02741000
SDWAVRAL EQU   SDWARA                                                   02742000
@NM00082 EQU   SDWA+396                                                 02743000
SDWACOMP EQU   SDWA+392                                                 02744000
SDWARCPL EQU   SDWA+364                                                 02745000
@NM00081 EQU   SDWADPSA+32                                              02746000
SDWATO4  EQU   SDWADPSL+28                                              02747000
SDWAFRM4 EQU   SDWADPSL+24                                              02748000
SDWATO3  EQU   SDWADPSL+20                                              02749000
SDWAFRM3 EQU   SDWADPSL+16                                              02750000
SDWATO2  EQU   SDWADPSL+12                                              02751000
SDWAFRM2 EQU   SDWADPSL+8                                               02752000
SDWATO1  EQU   SDWADPSL+4                                               02753000
SDWAFRM1 EQU   SDWADPSL                                                 02754000
@NM00080 EQU   SDWADDAT+3                                               02755000
@NM00079 EQU   SDWAPDAT                                                 02756000
SDWAUSPL EQU   SDWAPDAT                                                 02757000
SDWADPSW EQU   SDWAPDAT                                                 02758000
SDWATJPA EQU   SDWAPDAT                                                 02759000
SDWATLPA EQU   SDWAPDAT                                                 02760000
SDWADREG EQU   SDWAPDAT                                                 02761000
SDWADSAH EQU   SDWAPDAT                                                 02762000
SDWADSAS EQU   SDWAPDAT                                                 02763000
@NM00078 EQU   SDWADDAT+1                                               02764000
@NM00077 EQU   SDWASDAT                                                 02765000
SDWAQQS  EQU   SDWASDAT                                                 02766000
SDWACBS  EQU   SDWASDAT                                                 02767000
SDWAGTF  EQU   SDWASDAT                                                 02768000
SDWASWA  EQU   SDWASDAT                                                 02769000
SDWALSQA EQU   SDWASDAT                                                 02770000
SDWASQA  EQU   SDWASDAT                                                 02771000
SDWANUC  EQU   SDWASDAT                                                 02772000
@NM00076 EQU   SDWADUMP+2                                               02773000
@NM00075 EQU   SDWADPFS                                                 02774000
SDWASLST EQU   SDWADPFS                                                 02775000
@NM00074 EQU   SDWADPFS                                                 02776000
SDWADLST EQU   SDWADPFS                                                 02777000
SDWADPT  EQU   SDWADPFS                                                 02778000
SDWADPID EQU   SDWADUMP                                                 02779000
SDWADPLA EQU   SDWA+316                                                 02780000
SDWAREXN EQU   SDWARECP+16                                              02781000
SDWACSCT EQU   SDWARECP+8                                               02782000
SDWAMODN EQU   SDWARECP                                                 02783000
@NM00073 EQU   SDWA+290                                                 02784000
SDWAASID EQU   SDWA+288                                                 02785000
SDWATALW EQU   SDWALKWS+28                                              02786000
SDWATDLW EQU   SDWALKWS+24                                              02787000
SDWATNLW EQU   SDWALKWS+20                                              02788000
SDWAAPLW EQU   SDWALKWS+16                                              02789000
SDWAIPLW EQU   SDWALKWS+12                                              02790000
SDWAILLW EQU   SDWALKWS+8                                               02791000
SDWAIULW EQU   SDWALKWS+4                                               02792000
SDWAICLW EQU   SDWALKWS                                                 02793000
SDWAFLLK EQU   SDWAACF4                                                 02794000
SDWACMS  EQU   SDWAACF4                                                 02795000
SDWAOPTM EQU   SDWAACF4                                                 02796000
SDWATADB EQU   SDWAACF4                                                 02797000
SDWATDNB EQU   SDWAACF4                                                 02798000
SDWATNCB EQU   SDWAACF4                                                 02799000
SDWAILCH EQU   SDWAACF4                                                 02800000
SDWAIUCB EQU   SDWAACF4                                                 02801000
SDWAICAT EQU   SDWAACF3                                                 02802000
SDWAIPRG EQU   SDWAACF3                                                 02803000
SDWASALL EQU   SDWAACF3                                                 02804000
SDWAASMP EQU   SDWAACF3                                                 02805000
SDWADISP EQU   SDWAACF3                                                 02806000
@NM00072 EQU   SDWAACF3                                                 02807000
@NM00071 EQU   SDWAACF2                                                 02808000
SDWAFREE EQU   SDWAACF2                                                 02809000
SDWAUPRG EQU   SDWAACF2                                                 02810000
@NM00070 EQU   SDWAACF2                                                 02811000
SDWASPIN EQU   SDWAACF2                                                 02812000
@NM00069 EQU   SDWAACF2                                                 02813000
SDWALCPU EQU   SDWACPUA+2                                               02814000
@NM00068 EQU   SDWACPUA                                                 02815000
SDWARECA EQU   SDWA+244                                                 02816000
SDWARTYA EQU   SDWA+240                                                 02817000
@NM00067 EQU   SDWA+239                                                 02818000
@NM00066 EQU   SDWAIOFS                                                 02819000
SDWANIOP EQU   SDWAIOFS                                                 02820000
SDWANOIO EQU   SDWAIOFS                                                 02821000
SDWAIOHT EQU   SDWAIOFS                                                 02822000
SDWAIOQR EQU   SDWAIOFS                                                 02823000
SDWAFMID EQU   SDWA+236                                                 02824000
@NM00065 EQU   SDWAERRD                                                 02825000
SDWAMCIV EQU   SDWAERRD                                                 02826000
SDWARPIV EQU   SDWAERRD                                                 02827000
SDWAMABD EQU   SDWAERRD                                                 02828000
SDWACTS  EQU   SDWAERRD                                                 02829000
SDWASTAE EQU   SDWAERRD                                                 02830000
SDWANRBE EQU   SDWAERRD                                                 02831000
SDWACLUP EQU   SDWAERRD                                                 02832000
@NM00064 EQU   SDWAERRC                                                 02833000
SDWAEAS  EQU   SDWAERRC                                                 02834000
SDWAIRB  EQU   SDWAERRC                                                 02835000
SDWASTAI EQU   SDWAERRC                                                 02836000
SDWASTAF EQU   SDWAERRC                                                 02837000
SDWASRBM EQU   SDWAERRB                                                 02838000
SDWALDIS EQU   SDWAERRB                                                 02839000
SDWAENRB EQU   SDWAERRB                                                 02840000
SDWATYP1 EQU   SDWAERRB                                                 02841000
@NM00063 EQU   SDWAERRB                                                 02842000
SDWAPGIO EQU   SDWAERRA                                                 02843000
SDWATEXC EQU   SDWAERRA                                                 02844000
SDWASVCE EQU   SDWAERRA                                                 02845000
SDWAABTM EQU   SDWAERRA                                                 02846000
SDWASVCD EQU   SDWAERRA                                                 02847000
SDWARKEY EQU   SDWAERRA                                                 02848000
SDWAPCHK EQU   SDWAERRA                                                 02849000
SDWAMCHK EQU   SDWAERRA                                                 02850000
SDWATIME EQU   SDWAMCH+20                                               02851000
SDWARFSA EQU   SDWAMCH+16                                               02852000
@NM00062 EQU   SDWAMCH+14                                               02853000
SDWAVEQR EQU   SDWARSR2                                                 02854000
SDWAPGFX EQU   SDWARSR2                                                 02855000
SDWAFLSQ EQU   SDWARSR2                                                 02856000
SDWAFSQA EQU   SDWARSR2                                                 02857000
SDWANUCL EQU   SDWARSR2                                                 02858000
SDWASPER EQU   SDWARSR2                                                 02859000
SDWAINTC EQU   SDWARSR2                                                 02860000
SDWAOFLN EQU   SDWARSR2                                                 02861000
SDWACHNG EQU   SDWARSR1                                                 02862000
SDWAMSER EQU   SDWARSR1                                                 02863000
@NM00061 EQU   SDWARSR1                                                 02864000
SDWACPID EQU   SDWAMCH+10                                               02865000
SDWATERR EQU   SDWAMCHD                                                 02866000
SDWAFPRX EQU   SDWAMCHD                                                 02867000
SDWAINSF EQU   SDWAMCHD                                                 02868000
SDWAACR  EQU   SDWAMCHD                                                 02869000
SDWASCK  EQU   SDWAMCHD                                                 02870000
SDWAPSWU EQU   SDWAMCHD                                                 02871000
SDWAREGU EQU   SDWAMCHD                                                 02872000
SDWASKYF EQU   SDWAMCHD                                                 02873000
@NM00060 EQU   SDWAMCHS                                                 02874000
SDWARSRF EQU   SDWAMCHS                                                 02875000
SDWARSRC EQU   SDWAMCHS                                                 02876000
SDWAINVP EQU   SDWAMCHS                                                 02877000
SDWATSVL EQU   SDWAMCHS                                                 02878000
SDWARCDF EQU   SDWAMCHS                                                 02879000
SDWASRVL EQU   SDWAMCHS                                                 02880000
SDWASCKE EQU   SDWASTCK+4                                               02881000
SDWASCKB EQU   SDWASTCK                                                 02882000
SDWALNTH EQU   SDWAIDNT+1                                               02883000
SDWASPID EQU   SDWAIDNT                                                 02884000
SDWASR15 EQU   SDWASRSV+60                                              02885000
SDWASR14 EQU   SDWASRSV+56                                              02886000
SDWASR13 EQU   SDWASRSV+52                                              02887000
SDWASR12 EQU   SDWASRSV+48                                              02888000
SDWASR11 EQU   SDWASRSV+44                                              02889000
SDWASR10 EQU   SDWASRSV+40                                              02890000
SDWASR09 EQU   SDWASRSV+36                                              02891000
SDWASR08 EQU   SDWASRSV+32                                              02892000
SDWASR07 EQU   SDWASRSV+28                                              02893000
SDWASR06 EQU   SDWASRSV+24                                              02894000
SDWASR05 EQU   SDWASRSV+20                                              02895000
SDWASR04 EQU   SDWASRSV+16                                              02896000
SDWASR03 EQU   SDWASRSV+12                                              02897000
SDWASR02 EQU   SDWASRSV+8                                               02898000
SDWASR01 EQU   SDWASRSV+4                                               02899000
SDWASR00 EQU   SDWASRSV                                                 02900000
SDWATRN2 EQU   SDWAAEC2+4                                               02901000
SDWAIPC2 EQU   SDWAICD2                                                 02902000
SDWAIMC2 EQU   SDWAICD2                                                 02903000
SDWAIPR2 EQU   SDWAICD2                                                 02904000
@NM00059 EQU   SDWAINC2                                                 02905000
@NM00058 EQU   SDWAILC2                                                 02906000
SDWAIL2  EQU   SDWAILC2                                                 02907000
@NM00057 EQU   SDWAILC2                                                 02908000
@NM00056 EQU   SDWAAEC2                                                 02909000
SDWAADD2 EQU   SDWANXT2+1                                               02910000
@NM00055 EQU   SDWANXT2                                                 02911000
@NM00054 EQU   SDWAEC2+3                                                02912000
SDWASGN2 EQU   SDWAINT2                                                 02913000
SDWAEXP2 EQU   SDWAINT2                                                 02914000
SDWADEC2 EQU   SDWAINT2                                                 02915000
SDWAFPO2 EQU   SDWAINT2                                                 02916000
SDWACC2  EQU   SDWAINT2                                                 02917000
@NM00053 EQU   SDWAINT2                                                 02918000
SDWAPGM2 EQU   SDWAMWP2                                                 02919000
SDWAWAT2 EQU   SDWAMWP2                                                 02920000
SDWAMCK2 EQU   SDWAMWP2                                                 02921000
SDWAECT2 EQU   SDWAMWP2                                                 02922000
SDWAKEY2 EQU   SDWAMWP2                                                 02923000
SDWAEXT2 EQU   SDWAEMK2                                                 02924000
SDWAIO2  EQU   SDWAEMK2                                                 02925000
SDWATRM2 EQU   SDWAEMK2                                                 02926000
@NM00052 EQU   SDWAEMK2                                                 02927000
SDWAPER2 EQU   SDWAEMK2                                                 02928000
@NM00051 EQU   SDWAEMK2                                                 02929000
SDWATRAN EQU   SDWAAEC1+4                                               02930000
SDWAIPC1 EQU   SDWAICD1                                                 02931000
SDWAIMC1 EQU   SDWAICD1                                                 02932000
SDWAIPR1 EQU   SDWAICD1                                                 02933000
@NM00050 EQU   SDWAINC1                                                 02934000
@NM00049 EQU   SDWAILC1                                                 02935000
SDWAIL1  EQU   SDWAILC1                                                 02936000
@NM00048 EQU   SDWAILC1                                                 02937000
@NM00047 EQU   SDWAAEC1                                                 02938000
SDWAADD1 EQU   SDWANXT1+1                                               02939000
@NM00046 EQU   SDWANXT1                                                 02940000
@NM00045 EQU   SDWAEC1+3                                                02941000
SDWASGN1 EQU   SDWAINT1                                                 02942000
SDWAEXP1 EQU   SDWAINT1                                                 02943000
SDWADEC1 EQU   SDWAINT1                                                 02944000
SDWAFPO1 EQU   SDWAINT1                                                 02945000
SDWACC1  EQU   SDWAINT1                                                 02946000
@NM00044 EQU   SDWAINT1                                                 02947000
SDWAPGM1 EQU   SDWAMWP1                                                 02948000
SDWAWAT1 EQU   SDWAMWP1                                                 02949000
SDWAMCK1 EQU   SDWAMWP1                                                 02950000
SDWAECT1 EQU   SDWAMWP1                                                 02951000
SDWAKEY1 EQU   SDWAMWP1                                                 02952000
SDWAEXT1 EQU   SDWAEMK1                                                 02953000
SDWAIO1  EQU   SDWAEMK1                                                 02954000
SDWATRM1 EQU   SDWAEMK1                                                 02955000
@NM00043 EQU   SDWAEMK1                                                 02956000
SDWAPER1 EQU   SDWAEMK1                                                 02957000
@NM00042 EQU   SDWAEMK1                                                 02958000
SDWAIOBR EQU   SDWA+100                                                 02959000
SDWAEPA  EQU   SDWA+96                                                  02960000
@NM00041 EQU   SDWANAME+4                                               02961000
SDWARBAD EQU   SDWANAME                                                 02962000
SDWAGR15 EQU   SDWAGRSV+60                                              02963000
SDWAGR14 EQU   SDWAGRSV+56                                              02964000
SDWAGR13 EQU   SDWAGRSV+52                                              02965000
SDWAGR12 EQU   SDWAGRSV+48                                              02966000
SDWAGR11 EQU   SDWAGRSV+44                                              02967000
SDWAGR10 EQU   SDWAGRSV+40                                              02968000
SDWAGR09 EQU   SDWAGRSV+36                                              02969000
SDWAGR08 EQU   SDWAGRSV+32                                              02970000
SDWAGR07 EQU   SDWAGRSV+28                                              02971000
SDWAGR06 EQU   SDWAGRSV+24                                              02972000
SDWAGR05 EQU   SDWAGRSV+20                                              02973000
SDWAGR04 EQU   SDWAGRSV+16                                              02974000
SDWAGR03 EQU   SDWAGRSV+12                                              02975000
SDWAGR02 EQU   SDWAGRSV+8                                               02976000
SDWAGR01 EQU   SDWAGRSV+4                                               02977000
SDWAGR00 EQU   SDWAGRSV                                                 02978000
SDWANXTP EQU   SDWACTL2+5                                               02979000
SDWASGP  EQU   SDWAPMKP                                                 02980000
SDWAEUP  EQU   SDWAPMKP                                                 02981000
SDWADOP  EQU   SDWAPMKP                                                 02982000
SDWAFPP  EQU   SDWAPMKP                                                 02983000
SDWACCP  EQU   SDWAPMKP                                                 02984000
SDWAILP  EQU   SDWAPMKP                                                 02985000
SDWAINTP EQU   SDWACTL2+2                                               02986000
SDWASPVP EQU   SDWAMWPP                                                 02987000
SDWAWATP EQU   SDWAMWPP                                                 02988000
SDWAMCKP EQU   SDWAMWPP                                                 02989000
@NM00040 EQU   SDWAMWPP                                                 02990000
SDWAKEYP EQU   SDWAMWPP                                                 02991000
SDWAEXTP EQU   SDWACMKP                                                 02992000
SDWAIOP  EQU   SDWACMKP                                                 02993000
SDWANXTA EQU   SDWACTL1+5                                               02994000
SDWASGA  EQU   SDWAPMKA                                                 02995000
SDWAEUA  EQU   SDWAPMKA                                                 02996000
SDWADOA  EQU   SDWAPMKA                                                 02997000
SDWAFPA  EQU   SDWAPMKA                                                 02998000
SDWACCA  EQU   SDWAPMKA                                                 02999000
SDWAILA  EQU   SDWAPMKA                                                 03000000
SDWAINTA EQU   SDWACTL1+2                                               03001000
SDWASPVA EQU   SDWAMWPA                                                 03002000
SDWAWATA EQU   SDWAMWPA                                                 03003000
SDWAMCKA EQU   SDWAMWPA                                                 03004000
@NM00039 EQU   SDWAMWPA                                                 03005000
SDWAKEYA EQU   SDWAMWPA                                                 03006000
SDWAEXTA EQU   SDWACMKA                                                 03007000
SDWAIOA  EQU   SDWACMKA                                                 03008000
@NM00038 EQU   SDWACMPF                                                 03009000
SDWASTCC EQU   SDWACMPF                                                 03010000
@NM00037 EQU   SDWACMPF                                                 03011000
SDWASTEP EQU   SDWACMPF                                                 03012000
SDWAPARM EQU   SDWA                                                     03013000
SVRBEND  EQU   RBSECT+192                                               03014000
RBFEPARM EQU   RBSECT+168                                               03015000
SIRBEND  EQU   RBSECT+168                                               03016000
RBRSV158 EQU   RBRSV150                                                 03017000
RBRSV157 EQU   RBRSV150                                                 03018000
RBRSV156 EQU   RBRSV150                                                 03019000
RBRSV155 EQU   RBRSV150                                                 03020000
RBRSV154 EQU   RBRSV150                                                 03021000
RBRSV153 EQU   RBRSV150                                                 03022000
RBRSV152 EQU   RBRSV150                                                 03023000
RBRSV151 EQU   RBRSV150                                                 03024000
RBRSV149 EQU   RBSECT+166                                               03025000
RBRSV148 EQU   RBSECT+164                                               03026000
RBRSV169 EQU   RBSDATA+3                                                03027000
RBSID    EQU   RBSDATA+2                                                03028000
RBSPKEY  EQU   RBSDATA+1                                                03029000
RBRSV168 EQU   RBSFLG3                                                  03030000
RBSTERMO EQU   RBSFLG3                                                  03031000
RBSBRNTR EQU   RBSFLG3                                                  03032000
RBSPRNTR EQU   RBSFLG3                                                  03033000
RBSCNCEL EQU   RBSFLG3                                                  03034000
RBSRECRD EQU   RBSFLG3                                                  03035000
RBSTERMI EQU   RBSFLG3                                                  03036000
RBRSV167 EQU   RBSFLG3                                                  03037000
RBSOWNRA EQU   RBSOWNR+1                                                03038000
RBSSUPER EQU   RBSFLGS2                                                 03039000
RBSKEY0  EQU   RBSFLGS2                                                 03040000
RBRSV166 EQU   RBSFLGS2                                                 03041000
RBRSV165 EQU   RBSFLGS2                                                 03042000
RBSINUSE EQU   RBSFLGS2                                                 03043000
RBRSV164 EQU   RBSFLGS2                                                 03044000
RBSXCTL2 EQU   RBSFLGS2                                                 03045000
RBRSV163 EQU   RBSFLGS2                                                 03046000
RBSPARMA EQU   RBSPARM+1                                                03047000
RBSHALT  EQU   RBSIOPRC                                                 03048000
RBSNOIOP EQU   RBSIOPRC                                                 03049000
RBSASYNC EQU   RBSFLGS1                                                 03050000
RBRSV162 EQU   RBSFLGS1                                                 03051000
RBSESTAE EQU   RBSFLGS1                                                 03052000
RBSDUMMY EQU   RBSFLGS1                                                 03053000
RBSSTAR  EQU   RBSFLGS1                                                 03054000
RBSSTAI  EQU   RBSFLGS1                                                 03055000
RBSEXIT  EQU   RBSCBB+4                                                 03056000
RBSCHAIN EQU   RBSCBB                                                   03057000
TIRBEND  EQU   @NM00035+8                                               03058000
PRBEND   EQU   @NM00035+8                                               03059000
RBRSV146 EQU   RBRSV138                                                 03060000
RBRSV145 EQU   RBRSV138                                                 03061000
RBRSV144 EQU   RBRSV138                                                 03062000
RBRSV143 EQU   RBRSV138                                                 03063000
RBRSV142 EQU   RBRSV138                                                 03064000
RBRSV141 EQU   RBRSV138                                                 03065000
RBRSV140 EQU   RBRSV138                                                 03066000
RBRSV139 EQU   RBRSV138                                                 03067000
RBRSV137 EQU   @NM00035+6                                               03068000
RBRSV136 EQU   @NM00035+4                                               03069000
RBRSV135 EQU   @NM00035                                                 03070000
@NM00034 EQU   RBSECT+32                                                03071000
@NM00033 EQU   @NM00031+1                                               03072000
RBSCF    EQU   @NM00032                                                 03073000
RBPGMQ1  EQU   RBPGMQ+1                                                 03074000
@NM00030 EQU   RBPGMQ                                                   03075000
@NM00029 EQU   RBSECT+16                                                03076000
@NM00028 EQU   @NM00024                                                 03077000
@NM00027 EQU   @NM00024                                                 03078000
RBIQETP  EQU   @NM00024                                                 03079000
RBUSIQE  EQU   RBETXR                                                   03080000
RBATTN   EQU   @NM00024                                                 03081000
@NM00026 EQU   @NM00024                                                 03082000
@NM00025 EQU   @NM00024                                                 03083000
RBPMSVRB EQU   @NM00022                                                 03084000
RBATNXIT EQU   @NM00022                                                 03085000
@NM00023 EQU   @NM00022                                                 03086000
RBWAITP  EQU   @NM00022                                                 03087000
RBFNSVRB EQU   RBTRSVRB                                                 03088000
RBFTP    EQU   @NM00022                                                 03089000
RBSIZE   EQU   RBSECT+8                                                 03090000
RBABOPSW EQU   RBSECT+4                                                 03091000
RBPPSAV1 EQU   RBPPSAV+1                                                03092000
@NM00020 EQU   RBPPSAV                                                  03093000
RBPRFXND EQU   RBPREFIX+64                                              03094000
RBINTCOD EQU   RBINTCDA+1                                               03095000
RBINLNTH EQU   RBINTCDA                                                 03096000
RBWCSA   EQU   RBPREFIX+60                                              03097000
RBRSV004 EQU   RBPREFIX+57                                              03098000
RBSSSYN  EQU   RBFLAGS1                                                 03099000
RBSCB    EQU   RBFLAGS1                                                 03100000
RBLONGWT EQU   RBFLAGS1                                                 03101000
RBASIR   EQU   RBFLAGS1                                                 03102000
RBRSV159 EQU   RBFLAGS1                                                 03103000
RBABEND  EQU   RBFLAGS1                                                 03104000
RBXWAIT  EQU   RBFLAGS1                                                 03105000
RBSLOCK  EQU   RBFLAGS1                                                 03106000
RBRTRAN  EQU   RBRTPSW2+4                                               03107000
RBRTINCD EQU   RBRTICIL+2                                               03108000
RBRTILC  EQU   RBRTICIL+1                                               03109000
RBRSV160 EQU   RBRTICIL                                                 03110000
RBRTPSW1 EQU   RBRTOPSW                                                 03111000
RBRSV062 EQU   RBRSV054                                                 03112000
RBRSV061 EQU   RBRSV054                                                 03113000
RBRSV060 EQU   RBRSV054                                                 03114000
RBRSV059 EQU   RBRSV054                                                 03115000
RBRSV058 EQU   RBRSV054                                                 03116000
RBRSV057 EQU   RBRSV054                                                 03117000
RBRSV056 EQU   RBRSV054                                                 03118000
RBRSV055 EQU   RBRSV054                                                 03119000
RBRSV053 EQU   RBPREFIX+38                                              03120000
RBRSV052 EQU   RBPREFIX+36                                              03121000
RBRSV051 EQU   RBPREFIX+32                                              03122000
RBPRFXST EQU   RBPREFIX+32                                              03123000
RBRSV050 EQU   RBPREFIX+28                                              03124000
RBRSV049 EQU   RBRSV041                                                 03125000
RBRSV048 EQU   RBRSV041                                                 03126000
RBRSV047 EQU   RBRSV041                                                 03127000
RBRSV046 EQU   RBRSV041                                                 03128000
RBRSV045 EQU   RBRSV041                                                 03129000
RBRSV044 EQU   RBRSV041                                                 03130000
RBRSV043 EQU   RBRSV041                                                 03131000
RBRSV042 EQU   RBRSV041                                                 03132000
RBRSV040 EQU   RBPREFIX+26                                              03133000
RBRSV039 EQU   RBPREFIX+24                                              03134000
RBRSV038 EQU   RBPREFIX+20                                              03135000
RBRSV037 EQU   RBPREFIX+16                                              03136000
RBRSV036 EQU   RBRSV028                                                 03137000
RBRSV035 EQU   RBRSV028                                                 03138000
RBRSV034 EQU   RBRSV028                                                 03139000
RBRSV033 EQU   RBRSV028                                                 03140000
RBRSV032 EQU   RBRSV028                                                 03141000
RBRSV031 EQU   RBRSV028                                                 03142000
RBRSV030 EQU   RBRSV028                                                 03143000
RBRSV029 EQU   RBRSV028                                                 03144000
RBRSV027 EQU   RBRSV019                                                 03145000
RBRSV026 EQU   RBRSV019                                                 03146000
RBRSV025 EQU   RBRSV019                                                 03147000
RBRSV024 EQU   RBRSV019                                                 03148000
RBRSV023 EQU   RBRSV019                                                 03149000
RBRSV022 EQU   RBRSV019                                                 03150000
RBRSV021 EQU   RBRSV019                                                 03151000
RBRSV020 EQU   RBRSV019                                                 03152000
RBRSV018 EQU   RBPREFIX+13                                              03153000
RBRSV017 EQU   RBPREFIX+12                                              03154000
RBSRV016 EQU   RBPREFIX+11                                              03155000
RBRSV015 EQU   RBPREFIX+10                                              03156000
RBRSV014 EQU   RBPREFIX+8                                               03157000
RBRSV013 EQU   RBPREFIX+4                                               03158000
RBRSV012 EQU   RBPREFIX                                                 03159000
RBEXSAVE EQU   XRBESA                                                   03160000
XRBREG15 EQU   RBGRS15                                                  03161000
XRBREG14 EQU   RBGRS14                                                  03162000
XRBREG13 EQU   RBGRS13                                                  03163000
XRBREG12 EQU   RBGRS12                                                  03164000
XRBREG11 EQU   RBGRS11                                                  03165000
XRBREG10 EQU   RBGRS10                                                  03166000
XRBREG9  EQU   RBGRS9                                                   03167000
XRBREG8  EQU   RBGRS8                                                   03168000
XRBREG7  EQU   RBGRS7                                                   03169000
XRBREG6  EQU   RBGRS6                                                   03170000
XRBREG5  EQU   RBGRS5                                                   03171000
XRBREG4  EQU   RBGRS4                                                   03172000
XRBREG3  EQU   RBGRS3                                                   03173000
XRBREG2  EQU   RBGRS2                                                   03174000
XRBREG1  EQU   RBGRS1                                                   03175000
XRBREG0  EQU   RBGRS0                                                   03176000
XRBLNKA  EQU   RBLINKB                                                  03177000
XRBWT    EQU   RBWCF                                                    03178000
@NM00019 EQU   RBBASIC+24                                               03179000
RBOPSWPS EQU   RBOPSWB2                                                 03180000
@NM00018 EQU   RBOPSWB2                                                 03181000
@NM00017 EQU   XRBPSW                                                   03182000
@NM00016 EQU   RBBASIC+12                                               03183000
XRBWAIT  EQU   RBECBWT                                                  03184000
XRBFRRB  EQU   RBFDYN                                                   03185000
@NM00015 EQU   XSTAB2                                                   03186000
XRBACTV  EQU   RBFACTV                                                  03187000
XRBTCBP  EQU   RBTCBNXT                                                 03188000
@NM00014 EQU   XSTAB1                                                   03189000
XRBCKPT  EQU   RBFTCKPT                                                 03190000
@NM00013 EQU   XSTAB1                                                   03191000
@NM00012 EQU   RBBASIC+8                                                03192000
@NM00011 EQU   RBEXRTNM+1                                               03193000
RBTMIND3 EQU   RBTMFLD                                                  03194000
RBTMIND2 EQU   RBTMFLD                                                  03195000
RBTMCMP  EQU   RBTMFLD                                                  03196000
RBWLIM   EQU   RBTMFLD                                                  03197000
RBRSV005 EQU   RBTMFLD                                                  03198000
RBTMTOD  EQU   RBTMFLD                                                  03199000
RBTMQUE  EQU   RBTMFLD                                                  03200000
@NM00010 EQU   RBPRFX                                                   03201000
CTGFLCHN EQU   CTGFL+12                                                 03202000
CTGFLDNM EQU   CTGFL+8                                                  03203000
CTGFLDWA EQU   CTGFL+4                                                  03204000
CTGFLDTS EQU   CTGFLDRE                                                 03205000
@NM00009 EQU   CTGFLDRE                                                 03206000
CTGFLDGC EQU   CTGFL+2                                                  03207000
CTGFLDCD EQU   CTGFL+1                                                  03208000
CTGFVWKA EQU   CTGFV+88                                                 03209000
CTGFVCPP EQU   CTGFVPWD                                                 03210000
CTGFVNAM EQU   CTGFV+80                                                 03211000
CTGFVUPG EQU   CTGFVGAT                                                 03212000
CTGFVEXT EQU   CTGFVLMT                                                 03213000
CTGFVLRS EQU   CTGFV+68                                                 03214000
CTGFVBUF EQU   CTGFV+64                                                 03215000
CTGFVATR EQU   CTGFV+60                                                 03216000
CTGFVTTR EQU   CTGFVSPC                                                 03217000
CTGFVRNG EQU   CTGFV+44                                                 03218000
CTGFVCRE EQU   CTGFV+36                                                 03219000
CTGFVEXP EQU   CTGFV+32                                                 03220000
CTGFVOWN EQU   CTGFV+28                                                 03221000
CTGFVSTY EQU   CTGFV+24                                                 03222000
CTGFVIND EQU   CTGFV+16                                                 03223000
CTGFVVCH EQU   CTGFV+12                                                 03224000
CTGFVICH EQU   CTGFV+8                                                  03225000
CTGFVDCH EQU   CTGFV+4                                                  03226000
@NM00008 EQU   CTGFV+3                                                  03227000
CTGFVELM EQU   CTGFV+2                                                  03228000
@NM00007 EQU   CTGFVPRO                                                 03229000
CTGFVROF EQU   CTGFVPRO                                                 03230000
CTGFVRON EQU   CTGFVPRO                                                 03231000
CTGFVDRC EQU   CTGFVPRO                                                 03232000
CTGFVNDC EQU   CTGFVPRO                                                 03233000
CTGFVRVL EQU   CTGFVPRO                                                 03234000
CTGFVAVL EQU   CTGFVPRO                                                 03235000
CTGCVCC  EQU   CTGCV+50                                                 03236000
CTGCVVOL EQU   CTGCV                                                    03237000
@NM00006 EQU   CTGVLX                                                   03238000
CTGWAGB  EQU   CTGWA+12                                                 03239000
CTGWAGCT EQU   CTGWA+10                                                 03240000
CTGWAUCT EQU   CTGWA+8                                                  03241000
CTGPSWD  EQU   CTGJSCB                                                  03242000
@NM00004 EQU   CTGFBFLG                                                 03243000
CTGNGDSN EQU   CTGFBFLG                                                 03244000
CTGKEEP  EQU   CTGFBFLG                                                 03245000
CTGPAR   EQU   CTGFBFLG                                                 03246000
CTGFDBK  EQU   CTGNEWNM                                                 03247000
CTGNOFLD EQU   CTGPL+19                                                 03248000
@NM00003 EQU   CTGDSORG                                                 03249000
@NM00002 EQU   CTGOPTN4                                                 03250000
CTGBYPMT EQU   CTGOPTN4                                                 03251000
CTGCOIN  EQU   CTGOPTN4                                                 03252000
CTGNPROF EQU   CTGOPTN4                                                 03253000
CTGLBASE EQU   CTGOPTN4                                                 03254000
CTGAM0   EQU   CTGOPTN3                                                 03255000
CTGNUM   EQU   CTGOPTN3                                                 03256000
CTGGDGL  EQU   CTGOPTN3                                                 03257000
@NM00001 EQU   CTGOPTN2                                                 03258000
CTGSCR   EQU   CTGOPTN2                                                 03259000
CTGOVRID EQU   CTGOPTN2                                                 03260000
CTGDISC  EQU   CTGOPTN2                                                 03261000
CTGUCRAX EQU   CTGGTNXT                                                 03262000
CTGSWAP  EQU   CTGRCATN                                                 03263000
CTGGTALL EQU   CTGREL                                                   03264000
CTGNSVS  EQU   CTGEXT                                                   03265000
CTGGENLD EQU   CTGOPTN1                                                 03266000
CTGCNAME EQU   CTGOPTN1                                                 03267000
CTGREAD  EQU   CTGOPTN1                                                 03268000
CTGUPD   EQU   CTGOPTN1                                                 03269000
CTGCI    EQU   CTGOPTN1                                                 03270000
CTGMAST  EQU   CTGOPTN1                                                 03271000
*                                      END UNREFERENCED COMPONENTS      03272000
@RC00134 EQU   @RC00133                                                 03273000
@RC00230 EQU   @RC00219                                                 03274000
@RC00220 EQU   @RC00219                                                 03275000
@RC00282 EQU   @EL00003                                                 03276000
@RC00319 EQU   @EL00004                                                 03277000
@RC00373 EQU   @EL00006                                                 03278000
@RC00396 EQU   @EL00008                                                 03279000
@RC00506 EQU   @EL00014                                                 03280000
@RC00550 EQU   @EL00015                                                 03281000
@RC00548 EQU   @EL00015                                                 03282000
@RC00556 EQU   @EL00015                                                 03283000
@RC00568 EQU   @EL00015                                                 03284000
@RC00566 EQU   @EL00015                                                 03285000
@RT00574 EQU   @EL00015                                                 03286000
@PB00015 EQU   @EL00001                                                 03287000
@RC00283 EQU   @RC00282                                                 03288000
@RC00311 EQU   @RC00282                                                 03289000
@RC00309 EQU   @RC00282                                                 03290000
@RC00307 EQU   @RC00282                                                 03291000
@RC00305 EQU   @RC00282                                                 03292000
@RC00303 EQU   @RC00282                                                 03293000
@RC00321 EQU   @RC00319                                                 03294000
@RC00328 EQU   @RC00319                                                 03295000
@RF00402 EQU   @RC00396                                                 03296000
@PB00014 EQU   @PB00015                                                 03297000
@RT00558 EQU   @RC00556                                                 03298000
@RC00323 EQU   @RC00321                                                 03299000
@PB00013 EQU   @PB00014                                                 03300000
@PB00012 EQU   @PB00013                                                 03301000
@PB00011 EQU   @PB00012                                                 03302000
@PB00010 EQU   @PB00011                                                 03303000
@PB00009 EQU   @PB00010                                                 03304000
@PB00008 EQU   @PB00009                                                 03305000
@PB00007 EQU   @PB00008                                                 03306000
@PB00006 EQU   @PB00007                                                 03307000
@PB00005 EQU   @PB00006                                                 03308000
@PB00004 EQU   @PB00005                                                 03309000
@PB00003 EQU   @PB00004                                                 03310000
@PB00002 EQU   @PB00003                                                 03311000
@ENDDATA EQU   *                                                        03312000
         END   IGC0002F,(C'PLS2338',0701,77259)                         03313000
./  ADD  SSI=82060322,NAME=IGG0CLCA
         TITLE '***** IGG0CLCA - FIRST CSECT OF INTERFACE MAPPER ***** *00001000
                        '                                               00002000
IGG0CLCA CSECT ,                                                   0001 00003000
@MAINENT BALR  @15,0                                               0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IGG0CLCA  78.206'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  BALR  @11,0                                               0001 00010000
@PSTART  LA    @10,4095(,@11)                                      0001 00011000
         USING @PSTART,@11                                         0001 00012000
         USING @PSTART+4095,@10                                    0001 00013000
JSCBDISP EQU 188                                                        00014000
JSCBAOS1 EQU  72                                                        00015000
JSCBAOS2 EQU 192                                                        00016000
RBPRFXLN EQU 64                                                         00017000
RBPRFLNA EQU 32                                                         00018000
PRBLEN   EQU 136                                                        00019000
SIRBLEN  EQU 200                                                        00020000
TIRBLEN  EQU 136                                                        00021000
IRBLEN   EQU 128                                                        00022000
SVRBLEN  EQU 200                                                        00023000
*                                                         /*@ZA04937*/  00024000
         USING @DATD,12      ESTABLISH ADDRESSABILITY FOR WORKCLCA      00025000
         LA    R13,@SA00001   INIT FIRST SAVE AREA ADDR IN R13          00026000
*   IF CAMAM0='0'B&CTGPLPTR¬=NULL   /* IF TRANS TO VSAM      @Z40CSRC*/ 00027000
*     THEN                                                         0141 00028000
         L     @01,CAMPLPTR                                        0141 00029000
         TM    CAMAM0(@01),B'00000001'                             0141 00030000
         BNZ   @RF00141                                            0141 00031000
         L     @15,CTGPLPTR                                        0141 00032000
         LTR   @15,@15                                             0141 00033000
         BZ    @RF00141                                            0141 00034000
*     DO;                           /*                       @Z40CSRC*/ 00035000
*                                                                  0142 00036000
*       /*************************************************************/ 00037000
*       /*                                                           */ 00038000
*       /* ORIGINAL REQUEST WAS OS SO FREE DYNAMIC AREA GOTTEN BY SVC*/ 00039000
*       /* 26 USED TO BUILD A VSAM REQUEST                           */ 00040000
*       /*                                                           */ 00041000
*       /*************************************************************/ 00042000
*                                                                  0143 00043000
*       RFY                                                        0143 00044000
*        (R0,                                                      0143 00045000
*         R1) RSTD;                                                0143 00046000
*       R1=CTGPLPTR;                /* GET ADDRESS TO BE FREED       */ 00047000
         LR    R1,@15                                              0144 00048000
*       R0=PRMLSTSZ;                /* GET LENGTH TO BE FREED        */ 00049000
         L     R0,PRMLSTSZ                                         0145 00050000
*       CTGPLPTR='7FFFFFFF'X;       /* SET AREA FREED INDICATOR      */ 00051000
         MVC   CTGPLPTR(4),@CF02930                                0146 00052000
*       GEN(FREEMAIN R,LV=(0),A=(1));/* FREEMAIN DYNAM AREA          */ 00053000
         FREEMAIN R,LV=(0),A=(1)                                        00054000
*       RFY                                                        0148 00055000
*        (R0,                                                      0148 00056000
*         R1) UNRSTD;                                              0148 00057000
*     END;                                                         0149 00058000
*   ELSE                                                           0150 00059000
*     ;                                                            0150 00060000
@RF00141 DS    0H                                                  0151 00061000
*   VSRC15=ZEROPTR;                 /* INIT RETURN CODE              */ 00062000
         L     @15,ZEROPTR                                         0151 00063000
         ST    @15,VSRC15                                          0151 00064000
*   OSRC15=ZEROPTR;                 /* INIT RETURN CODE              */ 00065000
         ST    @15,OSRC15                                          0152 00066000
*   OSRC0=ZEROPTR;                  /* INIT RETURN CODE              */ 00067000
         ST    @15,OSRC0                                           0153 00068000
*   OSRC1=ZEROPTR;                  /* INIT RETURN CODE      @Z40CSRC*/ 00069000
         ST    @15,OSRC1                                           0154 00070000
*   KEYTYPE=OFF;                    /* DITTO                         */ 00071000
         MVC   KEYTYPE(1),OFF                                      0155 00072000
*   INCORESW=OFF;                   /* DITTO                         */ 00073000
         MVC   INCORESW(1),OFF                                     0156 00074000
*   ENQDEQSW=OFF;                   /* DITTO                         */ 00075000
         MVC   ENQDEQSW(1),OFF                                     0157 00076000
*   GEN(STM   R10,R12,SAVER10);     /* SAVE ESTAE PARMS              */ 00077000
         STM   R10,R12,SAVER10                                          00078000
*   GEN(XC    ESTAELST(16),ESTAELST);/* ZERO ESTAE MAC LIST          */ 00079000
         XC    ESTAELST(16),ESTAELST                                    00080000
*   GEN;                                                           0160 00081000
   ESTAE ESTAEXIT,OV,PARAM=SAVER10,XCTL=NO,RECORD=YES,MF=(E,ESTAELST)   00082000
*   RFY                                                            0161 00083000
*     R15 RSTD;                                                    0161 00084000
*   IF R15¬=0                       /* TEST RETURN CODE              */ 00085000
*     THEN                                                         0162 00086000
         LTR   R15,R15                                             0162 00087000
         BZ    @RF00162                                            0162 00088000
*     IF CAMAM0='0'B                /* RC NOT ZERO,WAS REQ. OS       */ 00089000
*       THEN                                                       0163 00090000
         L     @14,CAMPLPTR                                        0163 00091000
         TM    CAMAM0(@14),B'00000001'                             0163 00092000
         BNZ   @RF00163                                            0163 00093000
*       DO;                         /* REQUEST WAS OS                */ 00094000
*         IF(CAMOPTNS&OSLOCMSK)=ALLZERO/* TEST FOR LOC               */ 00095000
*           THEN                                                   0165 00096000
         MVC   @TS00001(4),CAMOPTNS(@14)                           0165 00097000
         NC    @TS00001(4),OSLOCMSK                                0165 00098000
         CLC   @TS00001(4),ALLZERO                                 0165 00099000
         BNE   @RF00165                                            0165 00100000
*           OSRC15=OS24;            /* LOCATE REQ,SET IO ERROR       */ 00101000
         L     @14,OS24                                            0166 00102000
         ST    @14,OSRC15                                          0166 00103000
*         ELSE                                                     0167 00104000
*           OSRC15=OS28;            /* NONLOCATE REQ,SET IO ERROR    */ 00105000
         B     @RC00165                                            0167 00106000
@RF00165 L     @14,OS28                                            0167 00107000
         ST    @14,OSRC15                                          0167 00108000
*         GO TO ENDIT;              /* GET OUT,CANNOT CONTINUE       */ 00109000
         B     ENDIT                                               0168 00110000
*       END;                                                       0169 00111000
*     ELSE                                                         0170 00112000
*       DO;                         /* REQUEST WAS VSAM              */ 00113000
@RF00163 DS    0H                                                  0171 00114000
*         OSRC15=VS164;             /* SET OUT OF CORE CONDITION     */ 00115000
         L     @14,VS164                                           0171 00116000
         ST    @14,OSRC15                                          0171 00117000
*         GO TO ENDIT;              /* CANNOT CONTINUE,GET OUT       */ 00118000
         B     ENDIT                                               0172 00119000
*       END;                                                       0173 00120000
*   RFY                                                            0174 00121000
*     R15 UNRSTD;                                                  0174 00122000
@RF00162 DS    0H                                                  0175 00123000
*   CALL IGG0CL1A;                  /* DYN ALLOC CATALOG     @Z40CSRC*/ 00124000
         LA    @15,IGG0CL1A                                        0175 00125000
         BALR  @14,@15                                             0175 00126000
*                                                                  0176 00127000
*   /*****************************************************************/ 00128000
*   /*                                                               */ 00129000
*   /* CVOL DYNAMIC ALLOCATION ROUTINE                       @Z40CSRC*/ 00130000
*   /*                                                               */ 00131000
*   /*****************************************************************/ 00132000
*                                                                  0176 00133000
*IGG0CL1A:                                                         0176 00134000
*   PROC OPTIONS(ENTREG);           /*                       @Z40CSRC*/ 00135000
         B     @PB00002                                            0176 00136000
IGG0CL1A STM   @14,@12,@SA00002                                    0176 00137000
*   GEN(ENTRY IGG0CL1A);            /* DEFINE AS ENTRY PT    @Z40CSRC*/ 00138000
*                                                                  0177 00139000
         ENTRY IGG0CL1A                                                 00140000
*   /*****************************************************************/ 00141000
*   /*                                                               */ 00142000
*   /* DECLARE ADDRESSES FOR MODULE BASE REGISTERS           @Z40CSRC*/ 00143000
*   /*                                                               */ 00144000
*   /*****************************************************************/ 00145000
*                                                                  0178 00146000
*   DCL                                                            0178 00147000
*     CLCABASE CHAR(8) GEND LOCAL BDY(WORD);/* BASES         @Z40CSRC*/ 00148000
*                                                                  0178 00149000
*   /*****************************************************************/ 00150000
*   /*                                                               */ 00151000
*   /* SET UP ADDRESSABILITY                                 @Z40CSRC*/ 00152000
*   /*                                                               */ 00153000
*   /*****************************************************************/ 00154000
*                                                                  0179 00155000
*   RFY                                                            0179 00156000
*    (R10,                                                         0179 00157000
*     R11,                                                         0179 00158000
*     R15) RSTD;                    /*                       @Z40CSRC*/ 00159000
*   GEN(USING IGG0CL1A,R15);        /* TEMPORARY BASE        @Z40CSRC*/ 00160000
         USING IGG0CL1A,R15                                             00161000
*   LM(R10,R11,CLCABASE);           /* GET REGULAR BASES     @Z40CSRC*/ 00162000
         LM    R10,R11,CLCABASE                                    0181 00163000
*   GEN(DROP  R15);                 /* DROP R15 AS BASE      @Z40CSRC*/ 00164000
         DROP  R15                                                      00165000
*   RFY                                                            0183 00166000
*    (R10,                                                         0183 00167000
*     R11,                                                         0183 00168000
*     R15) UNRSTD;                  /*                       @Z40CSRC*/ 00169000
*                                                                  0183 00170000
*   /*****************************************************************/ 00171000
*   /*                                                               */ 00172000
*   /* SET UP CATALOG NAME IF NONE SUPPLIED BY VSAM CATALOG          */ 00173000
*   /* MANAGEMENT BECAUSE (1) VSAM CATALOG PROCESSING WAS BYPASSED   */ 00174000
*   /* BECAUSE A CVOL VOLSER WAS SPECIFIED IN THE OS CAMLST, OR (2)  */ 00175000
*   /* OS CATALOG MANAGEMENT CHAINED TO THIS CVOL WHILE PROCESSING A */ 00176000
*   /* REQUEST.                                              @Z40CSRC*/ 00177000
*   /*                                                               */ 00178000
*   /*****************************************************************/ 00179000
*                                                                  0184 00180000
*   RFY                                                            0184 00181000
*     R3 RSTD;                      /* RESTRICT REGISTER     @Z40CSRC*/ 00182000
*   IF WKCVOLVS¬=NOVOLSER THEN      /* IF VOLSER PRESENT     @Z40CSRC*/ 00183000
         CLC   WKCVOLVS(6),@CB02928                                0185 00184000
         BE    @RF00185                                            0185 00185000
*     DO;                           /*                       @Z40CSRC*/ 00186000
*       R3=ADDR(WKCATNM);           /* BUILD STD NAME AS OFFICIAL  0187 00187000
*                                      CATALOG NAME          @Z40CSRC*/ 00188000
         LA    R3,WKCATNM                                          0187 00189000
*       WKCATANM=WKCATANM&&WKCATANM;/* NO ALIAS NAME         @Z40CSRC*/ 00190000
         XC    WKCATANM(44),WKCATANM                               0188 00191000
*     END;                          /*                       @Z40CSRC*/ 00192000
*   ELSE                            /* USE NAME FROM VSAM    @Z40CSRC*/ 00193000
*     R3=ADDR(WKTMPCNM);            /* PUT STD NM IN TEMP    @Z40CSRC*/ 00194000
         B     @RC00185                                            0190 00195000
@RF00185 LA    R3,WKTMPCNM                                         0190 00196000
*   WKSTDNM=SYSCNAME;               /* MOVE 'SYSCTLG.V'      @Z40CSRC*/ 00197000
@RC00185 MVI   WKSTDNM+9(R3),C' '                                  0191 00198000
         MVC   WKSTDNM+10(34,R3),WKSTDNM+9(R3)                     0191 00199000
         MVC   WKSTDNM(9,R3),@CC02916                              0191 00200000
*   WKSTDVS=WKCVOLVS;               /* MV VOLSER (IF ANY)    @Z40CSRC*/ 00201000
*                                                                  0192 00202000
         MVC   WKSTDVS(6,R3),WKCVOLVS                              0192 00203000
*   /*****************************************************************/ 00204000
*   /*                                                               */ 00205000
*   /* SEARCH PCCB CHAIN TO SEE IF CVOL IS ALREADY ALLOCATED. IF NOT,*/ 00206000
*   /* CHECK IF ALLOCATION IS ALLOWED BY THE REQUESTOR. IF NOT, SET A*/ 00207000
*   /* RETURN CODE. OTHERWISE SET UP & CALL THE ALLOCATE CATALOG     */ 00208000
*   /* INTERFACE MODULE, IEFAB4F5, TO DO THE ACTUAL ALLOCATION.      */ 00209000
*   /*                                                       @Z40CSRC*/ 00210000
*   /*                                                               */ 00211000
*   /*****************************************************************/ 00212000
*                                                                  0193 00213000
*   CALL SRCHPCCB;                  /* GO FIND A PCCB FOR CATLG      */ 00214000
         BAL   @14,SRCHPCCB                                        0193 00215000
*   IF PCCBPTR¬=0 THEN                                             0194 00216000
         L     @02,PCCBPTR                                         0194 00217000
         LTR   @02,@02                                             0194 00218000
         BZ    @RF00194                                            0194 00219000
*     WKCVOLVS=PCVOLSER;            /* PCCB FOUND, SAVE VOLSER       */ 00220000
         MVC   WKCVOLVS(6),PCVOLSER(@02)                           0195 00221000
*   ELSE                                                           0196 00222000
*     DO;                           /* PCCB NOT FOUND SO ALLOCATE IT    00223000
*                                      IF POSSIBLE                   */ 00224000
         B     @RC00194                                            0196 00225000
@RF00194 DS    0H                                                  0197 00226000
*       IF CAMAM0='0'B              /* IS REQUEST OS                 */ 00227000
*         THEN                                                     0197 00228000
         L     @02,CAMPLPTR                                        0197 00229000
         TM    CAMAM0(@02),B'00000001'                             0197 00230000
         BNZ   @RF00197                                            0197 00231000
*         IF CAMNOALC='1'B          /* YES,CAN WE ALLOCATE           */ 00232000
*           THEN                                                   0198 00233000
         TM    CAMNOALC(@02),B'10000000'                           0198 00234000
         BNO   @RF00198                                            0198 00235000
*           IF(CAMOPTNS&OSLOCMSK)=ALLZERO/* NO                       */ 00236000
*             THEN                                                 0199 00237000
         MVC   @TS00001(4),CAMOPTNS(@02)                           0199 00238000
         NC    @TS00001(4),OSLOCMSK                                0199 00239000
         CLC   @TS00001(4),ALLZERO                                 0199 00240000
         BNE   @RF00199                                            0199 00241000
*             OSRC15=OS24;          /* LOCATE,SET IO ERROR           */ 00242000
         L     @02,OS24                                            0200 00243000
         ST    @02,OSRC15                                          0200 00244000
*           ELSE                                                   0201 00245000
*             OSRC15=OS4;           /* NONLOCATE,SET RC OF 4         */ 00246000
         B     @RC00199                                            0201 00247000
@RF00199 L     @02,OS4                                             0201 00248000
         ST    @02,OSRC15                                          0201 00249000
*         ELSE                                                     0202 00250000
*           ;                       /* YES WE CAN ALLOCATE           */ 00251000
@RF00198 DS    0H                                                  0203 00252000
*       ELSE                                                       0203 00253000
*         IF CTGDOCAT='1'B          /* VSAM REQUEST,CAN WE ALLOC     */ 00254000
*           THEN                                                   0203 00255000
         B     @RC00197                                            0203 00256000
@RF00197 L     @02,CTGPLPTR                                        0203 00257000
         TM    CTGDOCAT(@02),B'01000000'                           0203 00258000
         BNO   @RF00203                                            0203 00259000
*           IF CTGSUPLT='1'B        /* NO,WAS REQUEST SUPERLOC       */ 00260000
*             THEN                  /* YES                           */ 00261000
         TM    CTGSUPLT(@02),B'00010000'                           0204 00262000
         BNO   @RF00204                                            0204 00263000
*             DO;                   /* SUPERLOCATE           #YM03768*/ 00264000
*               CALL GETUSERK;      /* GET INTO USERKEY      #YM03768*/ 00265000
         BAL   @14,GETUSERK                                        0206 00266000
*               CTGCVDSN=WKCATNM;   /* RETURN CATNAME        #YM03768*/ 00267000
         L     @02,CTGPLPTR                                        0207 00268000
         L     @02,CTGCVOL(,@02)                                   0207 00269000
         MVC   CTGCVDSN(44,@02),WKCATNM                            0207 00270000
*               CTGCVCC=WKCATANM;   /* RETURN ALIAS          #YM03768*/ 00271000
         MVC   CTGCVCC(44,@02),WKCATANM                            0208 00272000
*               CALL GETSVCK;       /* GET INTO SVC KEY      #YM03768*/ 00273000
         BAL   @14,GETSVCK                                         0209 00274000
*               OSRC15=VS68;        /* EXIT WITH RC OF 68            */ 00275000
         L     @02,VS68                                            0210 00276000
         ST    @02,OSRC15                                          0210 00277000
*               CTGSRH='0'B;        /* INITIATE NEW SRCH     @OZ17073*/ 00278000
         L     @02,CTGPLPTR                                        0211 00279000
         NI    CTGSRH(@02),B'11111011'                             0211 00280000
*             END;                  /*                       #YM03768*/ 00281000
*           ELSE                                                   0213 00282000
*             OSRC15=VS48;          /* NO,EXIT WITH RC OF 48         */ 00283000
         B     @RC00204                                            0213 00284000
@RF00204 L     @02,VS48                                            0213 00285000
         ST    @02,OSRC15                                          0213 00286000
*         ELSE                                                     0214 00287000
*           ;                       /* YES WE CAN ALLOCATE           */ 00288000
@RF00203 DS    0H                                                  0215 00289000
*       IF OSRC15=0                 /* ANY ERRORS SO FAR             */ 00290000
*         THEN                                                     0215 00291000
@RC00203 DS    0H                                                  0215 00292000
@RC00197 SLR   @02,@02                                             0215 00293000
         C     @02,OSRC15                                          0215 00294000
         BNE   @RF00215                                            0215 00295000
*         DO;                       /* NO,SO CONTINUE                */ 00296000
*           ACCCBP=ADDR(ACCCB);     /* SET CONT.BIT PTR              */ 00297000
         LA    @15,ACCCB                                           0217 00298000
         ST    @15,ACCCBP                                          0217 00299000
*           ACCRWP1=ADDR(ACCRWP2);  /* SET RET WORD PTR1             */ 00300000
         LA    @15,ACCRWP2                                         0218 00301000
         ST    @15,ACCRWP1                                         0218 00302000
*           ACCJSCBP=ADDR(TCBJSCB); /* SET JSCB PTR                  */ 00303000
         L     @15,TCBPTR                                          0219 00304000
         LA    @14,TCBJSCB(,@15)                                   0219 00305000
         ST    @14,ACCJSCBP                                        0219 00306000
*           ACCCATP1=ADDR(ACCCATP2);/* SET CAT PTR 1                 */ 00307000
         LA    @14,ACCCATP2                                        0220 00308000
         ST    @14,ACCCATP1                                        0220 00309000
*           ACCALSP1=ADDR(ACCALSP2);/* SET ALIAS PTR 1               */ 00310000
         LA    @14,ACCALSP2                                        0221 00311000
         ST    @14,ACCALSP1                                        0221 00312000
*           ACCDDNMP=ADDR(ZEROPTR); /* SET DDNAME PTR                */ 00313000
         LA    @14,ZEROPTR                                         0222 00314000
         ST    @14,ACCDDNMP                                        0222 00315000
*           ACCRWP2=ADDR(ACCRW);    /* SET RET WORD PTR 2            */ 00316000
         LA    @14,ACCRW                                           0223 00317000
         ST    @14,ACCRWP2                                         0223 00318000
*           ACCCATP2=ADDR(WKCATNM); /* POINT TO CATLG.NM             */ 00319000
         LA    @14,WKCATNM                                         0224 00320000
         ST    @14,ACCCATP2                                        0224 00321000
*           ACCALSP2=ADDR(WKCATANM);/* POINT TO ALIAS.NM             */ 00322000
         LA    @14,WKCATANM                                        0225 00323000
         ST    @14,ACCALSP2                                        0225 00324000
*           ACCRW=ALLZERO;          /* ZERO OUT RETURN WORD          */ 00325000
         L     @14,ALLZERO                                         0226 00326000
         ST    @14,ACCRW                                           0226 00327000
*           IF ASCBTSB¬=0&PSCBVMNT='0'B/* TSO REQUEST & MOUNTING NOT    00328000
*                                      OK?                   @OZ07009*/ 00329000
*             THEN                                                 0227 00330000
         L     @01,PSAAOLD                                         0227 00331000
         C     @02,ASCBTSB(,@01)                                   0227 00332000
         BE    @RF00227                                            0227 00333000
         L     @02,TCBJSCB(,@15)                                   0227 00334000
         L     @02,JSCBPSCB(,@02)                                  0227 00335000
         TM    PSCBVMNT(@02),B'00010000'                           0227 00336000
         BNZ   @RF00227                                            0227 00337000
*             ACCCB=ACCOPTN1;       /* NOT OK,SET ACC OPTS   @OZ07009*/ 00338000
         MVC   ACCCB(2),ACCOPTN1                                   0228 00339000
*           ELSE                                                   0229 00340000
*             ACCCB=ACCOPTNS;       /* OK, SET ACC OPTNS     @OZ07009*/ 00341000
         B     @RC00227                                            0229 00342000
@RF00227 MVC   ACCCB(2),ACCOPTNS                                   0229 00343000
*           IF CAMAM0='1'B THEN     /* CTGPL?                @OZ28096*/ 00344000
@RC00227 L     @02,CAMPLPTR                                        0230 00345000
         TM    CAMAM0(@02),B'00000001'                             0230 00346000
         BNO   @RF00230                                            0230 00347000
*             IF CTGTIOT='1'B THEN  /* SYSZTIOT ENQED?       @OZ28096*/ 00348000
         L     @02,CTGPLPTR                                        0231 00349000
         TM    CTGTIOT(@02),B'00000100'                            0231 00350000
         BNO   @RF00231                                            0231 00351000
*               CALL CHEKAUTH;      /* CALLER AUTHORIZED?    @OZ28096*/ 00352000
         BAL   @14,CHEKAUTH                                        0232 00353000
*             ELSE                                                 0233 00354000
*               GOTO NOENQ;         /* CALLER NOT ENQED      @OZ28096*/ 00355000
*           ELSE                                                   0234 00356000
*             IF CAMTIOT='1'B THEN  /* SYSZTIOT ENQED?       @OZ28096*/ 00357000
         B     @RC00230                                            0234 00358000
@RF00230 L     @02,CAMPLPTR                                        0234 00359000
         TM    CAMTIOT(@02),B'00010000'                            0234 00360000
         BNO   @RF00234                                            0234 00361000
*               CALL CHEKAUTH;      /* CALLER AUTHORIZED?    @OZ28096*/ 00362000
         BAL   @14,CHEKAUTH                                        0235 00363000
*             ELSE                                                 0236 00364000
*               GOTO NOENQ;         /* CALLER NOT ENQED      @OZ28096*/ 00365000
*           RFY                                                    0237 00366000
*            (R1,                                                  0237 00367000
*             R15) RSTD;                                           0237 00368000
@RC00230 DS    0H                                                  0238 00369000
*           IF R15=ALLZERO THEN     /* CALLER AUTHRIZED      @OZ19636*/ 00370000
         CL    R15,ALLZERO                                         0238 00371000
         BNE   @RF00238                                            0238 00372000
*             ACAC6='1'B;           /* YES-SET TIOT ENQD     @OZ19636*/ 00373000
         OI    ACAC6,B'00000010'                                   0239 00374000
*           ELSE                                                   0240 00375000
*             ;                                                    0240 00376000
@RF00238 DS    0H                                                  0241 00377000
*NOENQ:                                                            0241 00378000
*           R1=ADDR(ACCCBP);        /* SET PARM LIST PTR             */ 00379000
NOENQ    LA    R1,ACCCBP                                           0241 00380000
*           GEN(ST    R13,WKCL1ASV+4);/* SAVE ADDR           @Z40CSRC*/ 00381000
         ST    R13,WKCL1ASV+4                                           00382000
*           GEN(LA    R13,WKCL1ASV);/* NEW SV AREA           @Z40CSRC*/ 00383000
         LA    R13,WKCL1ASV                                             00384000
*           GEN(LINK  EP=IEFAB4F5); /* GO TO ACC             @Z40CSRC*/ 00385000
         LINK  EP=IEFAB4F5                                              00386000
*           GEN(L     R13,WKCL1ASV+4);/* OLD AREA            @Z40CSRC*/ 00387000
         L     R13,WKCL1ASV+4                                           00388000
*           IF ACCRETCD¬=0          /* WAS ALLOC CAT.CONTROL OK      */ 00389000
*             THEN                                                 0246 00390000
         LH    @14,ACCRETCD                                        0246 00391000
         N     @14,@CF03065                                        0246 00392000
         LTR   @14,@14                                             0246 00393000
         BZ    @RF00246                                            0246 00394000
*             OSRC15=OS4;           /* NO, EXIT WITH RC OF 4         */ 00395000
         L     @14,OS4                                             0247 00396000
         ST    @14,OSRC15                                          0247 00397000
*           ELSE                                                   0248 00398000
*             DO;                   /* YES, GO SEARCH FOR PCCB       */ 00399000
         B     @RC00246                                            0248 00400000
@RF00246 DS    0H                                                  0249 00401000
*               CALL SRCHPCCB;                                     0249 00402000
         BAL   @14,SRCHPCCB                                        0249 00403000
*               IF PCCBPTR¬=0 THEN  /* PCCB FOUND            @Z40CSRC*/ 00404000
         L     @14,PCCBPTR                                         0250 00405000
         LTR   @14,@14                                             0250 00406000
         BZ    @RF00250                                            0250 00407000
*                 DO;               /* SYSDSN ENQ GROUP      @Z40CSRC*/ 00408000
*                   WKCVOLVS=PCVOLSER;/* SAVE CVOL VOLSER    @Z40CSRC*/ 00409000
*                                                                  0252 00410000
         MVC   WKCVOLVS(6),PCVOLSER(@14)                           0252 00411000
*                   /*************************************************/ 00412000
*                   /*                                               */ 00413000
*                   /* PERFORM AN ENQ WITH MAJOR-NAME=SYSDSN AND     */ 00414000
*                   /* MINOR-NAME = SYSCTLG.VXXXXXX WHERE XXXXXX IS  */ 00415000
*                   /* THE VOLSER OF THE CVOL. THIS WILL PREVENT     */ 00416000
*                   /* SCRATCHING OF THE CVOL DURING SVC 26          */ 00417000
*                   /* PROCESSING. PRIOR TO THE SYSDSN ENQ, A        */ 00418000
*                   /* SYSZOPEN ENQ MUST BE DONE TO PREVENT AN       */ 00419000
*                   /* UNALLOCATION WHICH COULD DEQ THE SYSDSN ENQ.  */ 00420000
*                   /*                                               */ 00421000
*                   /*************************************************/ 00422000
*                                                                  0253 00423000
*                   WKSTDVS=WKCVOLVS;/* PUT VOLSER IN NAME   @Z40CSRC*/ 00424000
         MVC   WKSTDVS(6,R3),WKCVOLVS                              0253 00425000
*                   RFY                                            0254 00426000
*                    (R1,                                          0254 00427000
*                     R4,                                          0254 00428000
*                     R15) RSTD;    /* RESTRICT REG.S        @Z40CSRC*/ 00429000
*                   R4=JSCBTCBP;    /* INIT'S TCB ADDR       @Z40CSRC*/ 00430000
         L     @14,TCBPTR                                          0255 00431000
         L     @14,TCBJSCB(,@14)                                   0255 00432000
         L     R4,JSCBTCBP(,@14)                                   0255 00433000
*                   ENQDEQPL=ENQSYSDS;/* COPY LIST FORM      @Z40CSRC*/ 00434000
         MVC   ENQDEQPL(12),ENQSYSDS                               0256 00435000
*                   GEN(ENQ (,(R3)),RET=USE,TCB=(R4),MF=(E,ENQDEQPL));  00436000
         ENQ (,(R3)),RET=USE,TCB=(R4),MF=(E,ENQDEQPL)                   00437000
*                                   /*                       @Z40CSRC*/ 00438000
*                   IF ENQRETCD¬=ENQRCOK/* IF ENQ NOT DONE   @Z40CSRC*/ 00439000
*                       &ENQRETCD¬=ENQRCIS THEN/* & DONT ALREADY OWN    00440000
*                                                            @Z40CSRC*/ 00441000
         CLI   ENQRETCD,0                                          0258 00442000
         BE    @RF00258                                            0258 00443000
         CLI   ENQRETCD,8                                          0258 00444000
         BE    @RF00258                                            0258 00445000
*                     OSRC15=OS4;   /* SET CVOL UNAVAIL.     @Z40CSRC*/ 00446000
         L     @14,OS4                                             0259 00447000
         ST    @14,OSRC15                                          0259 00448000
*                   ELSE            /* SYSZOPEN ENQ'D        @Z40CSRC*/ 00449000
*                     DO;           /* 2ND ENQ GROUP         @Z40CSRC*/ 00450000
         B     @RC00258                                            0260 00451000
@RF00258 DS    0H                                                  0261 00452000
*                       GEN REFS(SYSDSN)                           0261 00453000
*(ENQ (SYSDSN,(R3)),RET=USE,TCB=(R4),MF=(E,ENQDEQPL));/*     @Z40CSRC*/ 00454000
         ENQ (SYSDSN,(R3)),RET=USE,TCB=(R4),MF=(E,ENQDEQPL)             00455000
*                       IF ENQRETCD=ENQRCOK/* IF ENQ'D OK    @Z40CSRC*/ 00456000
*                           |ENQRETCD=ENQRCIS THEN                 0262 00457000
         CLI   ENQRETCD,0                                          0262 00458000
         BE    @RT00262                                            0262 00459000
         CLI   ENQRETCD,8                                          0262 00460000
         BE    @RT00262                                            0262 00461000
*                         ;         /* OR ALREADY ENQ'D      @Z40CSRC*/ 00462000
*                       ELSE        /* SOMEONE ELSE ENQ'D    @Z40CSRC*/ 00463000
*                         OSRC15=OS4;/* SET CVOL UNAVAIL.    @Z40CSRC*/ 00464000
         L     @14,OS4                                             0264 00465000
         ST    @14,OSRC15                                          0264 00466000
*                     END;          /* OF 2ND ENQ GROUP      @Z40CSRC*/ 00467000
@RT00262 DS    0H                                                  0266 00468000
*                   RFY                                            0266 00469000
*                    (R1,                                          0266 00470000
*                     R4,                                          0266 00471000
*                     R15) UNRSTD;  /* UNRESTRICT REG.S      @Z40CSRC*/ 00472000
@RC00258 DS    0H                                                  0267 00473000
*                 END;              /* OF SYSDSN GROUP       @Z40CSRC*/ 00474000
*               ELSE                                               0268 00475000
*                 OSRC15=OS4;       /* PCCB NOT FOUND,EXIT WITH RC OF   00476000
*                                      4                             */ 00477000
         B     @RC00250                                            0268 00478000
@RF00250 L     @02,OS4                                             0268 00479000
         ST    @02,OSRC15                                          0268 00480000
*             END;                                                 0269 00481000
@RC00250 DS    0H                                                  0270 00482000
*         END;                                                     0270 00483000
@RC00246 DS    0H                                                  0271 00484000
*     END;                                                         0271 00485000
@RF00215 DS    0H                                                  0272 00486000
*   RFY                                                            0272 00487000
*     R3 UNRSTD;                    /* UNRESTRICT REG.       @Z40CSRC*/ 00488000
@RC00194 DS    0H                                                  0273 00489000
*   RETURN CODE(OSRC15);            /* PUT RET CD IN REG     @Z40CSRC*/ 00490000
         L     @15,OSRC15                                          0273 00491000
         L     @14,@SA00002                                        0273 00492000
         LM    @00,@12,@SA00002+8                                  0273 00493000
         BR    @14                                                 0273 00494000
*   GEN;                                                           0274 00495000
*                                     /* GEN BASES          @Z40CSRC*/  00496000
CLCABASE DC    A(@PSTART+4095,@PSTART) BASE ADDRESSES        @Z40CSRC   00497000
*   END;                            /* OF IGG0CL1A           @Z40CSRC*/ 00498000
@EL00002 DS    0H                                                  0275 00499000
@EF00002 DS    0H                                                  0275 00500000
@ER00002 LM    @14,@12,@SA00002                                    0275 00501000
         BR    @14                                                 0275 00502000
@PB00002 DS    0H                                                  0276 00503000
*   IF OSRC15=0 THEN                                               0276 00504000
         L     @15,OSRC15                                          0276 00505000
         LTR   @15,@15                                             0276 00506000
         BNZ   @RF00276                                            0276 00507000
*     DO;                           /* CATALOG IS ALLOCATED SO DO  0277 00508000
*                                      REQUEST                       */ 00509000
*       IF CAMAM0='0'B THEN                                        0278 00510000
*                                                                  0278 00511000
         L     @01,CAMPLPTR                                        0278 00512000
         TM    CAMAM0(@01),B'00000001'                             0278 00513000
         BNZ   @RF00278                                            0278 00514000
*         /***********************************************************/ 00515000
*         /*                                                         */ 00516000
*         /* THE ORIGINAL REQUEST WAS OS CAMLST FORMAT. AN INTERNAL  */ 00517000
*         /* PROCEDURE IS CALLED TO VERIFY AND EXECUTE THE REQUEST.  */ 00518000
*         /*                                                         */ 00519000
*         /***********************************************************/ 00520000
*                                                                  0279 00521000
*         CALL OSREQ;               /* CALL OSREQ PROC               */ 00522000
         BAL   @14,OSREQ                                           0279 00523000
*       ELSE                                                       0280 00524000
*                                                                  0280 00525000
*         /***********************************************************/ 00526000
*         /*                                                         */ 00527000
*         /* THE ORIGINAL REQUEST WAS VSAM FORMAT. DECIDE WHICH      */ 00528000
*         /* GENERAL FORM OF REQUEST IS SPECIFIED AND CALL THE       */ 00529000
*         /* APPROPRIATE PROCESSING PROC. IF THE REQUEST IS NOT      */ 00530000
*         /* SUPPORTED SET AN ERROR RETURN CODE AND EXIT.            */ 00531000
*         /*                                                         */ 00532000
*         /***********************************************************/ 00533000
*                                                                  0280 00534000
*         DO;                                                      0280 00535000
         B     @RC00278                                            0280 00536000
@RF00278 DS    0H                                                  0281 00537000
*           IF CTGSUPLT='1'B&CTGGENLD='0'B THEN                    0281 00538000
*                                                                  0281 00539000
         L     @15,CTGPLPTR                                        0281 00540000
         TM    CTGSUPLT(@15),B'00010000'                           0281 00541000
         BNO   @RF00281                                            0281 00542000
         TM    CTGGENLD(@15),B'00000001'                           0281 00543000
         BNZ   @RF00281                                            0281 00544000
*             /*******************************************************/ 00545000
*             /*                                                     */ 00546000
*             /* SUPERLOCATE REQUEST WITHOUT GENERIC LOCATE          */ 00547000
*             /* SPECIFIED.                                          */ 00548000
*             /*                                                     */ 00549000
*             /*******************************************************/ 00550000
*                                                                  0282 00551000
*             CALL SUPERLOC;        /* CALL SUPERLOCATE PROC         */ 00552000
         BAL   @14,SUPERLOC                                        0282 00553000
*           ELSE                                                   0283 00554000
*             IF CTGFUNC='001'B THEN                               0283 00555000
*                                                                  0283 00556000
         B     @RC00281                                            0283 00557000
@RF00281 L     @01,CTGPLPTR                                        0283 00558000
         TM    CTGFUNC(@01),B'00100000'                            0283 00559000
         BNO   @RF00283                                            0283 00560000
         TM    CTGFUNC(@01),B'11000000'                            0283 00561000
         BNZ   @RF00283                                            0283 00562000
*               /*****************************************************/ 00563000
*               /*                                                   */ 00564000
*               /* VSAM LOCATE REQUEST SPECIFIED.                    */ 00565000
*               /*                                                   */ 00566000
*               /*****************************************************/ 00567000
*                                                                  0284 00568000
*               CALL VLOC;          /* CALL LOCATE PROC              */ 00569000
         BAL   @14,VLOC                                            0284 00570000
*             ELSE                                                 0285 00571000
*               IF CTGOPTNS='00011'B THEN                          0285 00572000
*                                                                  0285 00573000
         B     @RC00283                                            0285 00574000
@RF00283 L     @01,CTGPLPTR                                        0285 00575000
         TM    CTGOPTNS(@01),B'00011000'                           0285 00576000
         BNO   @RF00285                                            0285 00577000
         TM    CTGOPTNS(@01),B'11100000'                           0285 00578000
         BNZ   @RF00285                                            0285 00579000
*                 /***************************************************/ 00580000
*                 /*                                                 */ 00581000
*                 /* VSAM DELETE REQUEST SPECIFIED.                  */ 00582000
*                 /*                                                 */ 00583000
*                 /***************************************************/ 00584000
*                                                                  0286 00585000
*                 CALL DELETE;      /* CALL DELETE PROC              */ 00586000
         BAL   @14,DELETE                                          0286 00587000
*               ELSE                                               0287 00588000
*                 IF CTGSUPLT='1'B&CTGGENLD='1'B THEN              0287 00589000
*                                                                  0287 00590000
         B     @RC00285                                            0287 00591000
@RF00285 L     @15,CTGPLPTR                                        0287 00592000
         TM    CTGSUPLT(@15),B'00010000'                           0287 00593000
         BNO   @RF00287                                            0287 00594000
         TM    CTGGENLD(@15),B'00000001'                           0287 00595000
         BNO   @RF00287                                            0287 00596000
*                   /*************************************************/ 00597000
*                   /*                                               */ 00598000
*                   /* SUPERLOCATE REQUEST WITH GENERIC LOCATE       */ 00599000
*                   /* SPECIFIED.                                    */ 00600000
*                   /*                                               */ 00601000
*                   /*************************************************/ 00602000
*                                                                  0288 00603000
*                   CALL GENLOC;    /* CALL GEN.LOC. PROC            */ 00604000
         BAL   @14,GENLOC                                          0288 00605000
*                 ELSE                                             0289 00606000
*                   IF CTGFUNC='100'B&CTGOPTNS='00100'B&CTGGTNXT='0'B   00607000
*                     THEN                                         0289 00608000
*                                                                  0289 00609000
         B     @RC00287                                            0289 00610000
@RF00287 L     @15,CTGPLPTR                                        0289 00611000
         TM    CTGFUNC(@15),B'10000000'                            0289 00612000
         BNO   @RF00289                                            0289 00613000
         TM    CTGFUNC(@15),B'01100000'                            0289 00614000
         BNZ   @RF00289                                            0289 00615000
         TM    CTGOPTNS(@15),B'00100000'                           0289 00616000
         BNO   @RF00289                                            0289 00617000
         TM    CTGOPTNS(@15),B'11011000'                           0289 00618000
         BNZ   @RF00289                                            0289 00619000
         TM    CTGGTNXT(@15),B'00010000'                           0289 00620000
         BNZ   @RF00289                                            0289 00621000
*                     /***********************************************/ 00622000
*                     /*                                             */ 00623000
*                     /* AMS LISTCAT SPECIFIED WITHOUT GET NEXT      */ 00624000
*                     /* OPTION.                                     */ 00625000
*                     /*                                             */ 00626000
*                     /***********************************************/ 00627000
*                                                                  0290 00628000
*                     CALL VLOC;    /* USE VLOC PROC                 */ 00629000
         BAL   @14,VLOC                                            0290 00630000
*                   ELSE                                           0291 00631000
*                     VSRC15=VS48;  /* REQUEST TYPE NOT SUPPORTED    */ 00632000
         B     @RC00289                                            0291 00633000
@RF00289 L     @15,VS48                                            0291 00634000
         ST    @15,VSRC15                                          0291 00635000
*           IF OSRC15=OS4           /* IF NO CATALOG ENCOUNTERED   0292 00636000
*                                                            @YM06137*/ 00637000
*             THEN                                                 0292 00638000
@RC00289 DS    0H                                                  0292 00639000
@RC00287 DS    0H                                                  0292 00640000
@RC00285 DS    0H                                                  0292 00641000
@RC00283 DS    0H                                                  0292 00642000
@RC00281 CLC   OSRC15(4),OS4                                       0292 00643000
         BE    @RT00292                                            0292 00644000
*             ;                     /* LEAVE RC=4            @YM06137*/ 00645000
*           ELSE                    /*                       @YM06137*/ 00646000
*             OSRC15=VSRC15;        /* ELSE SET UP COMMON    @YM06137   00647000
*                                      RETURN CODE           @YM06137*/ 00648000
         L     @15,VSRC15                                          0294 00649000
         ST    @15,OSRC15                                          0294 00650000
*         END;                                                     0295 00651000
*     END;                                                         0296 00652000
*   ELSE                                                           0297 00653000
*     ;                                                            0297 00654000
@RF00276 DS    0H                                                  0298 00655000
*ENDIT:                                                            0298 00656000
*   GEN(ESTAE 0);                   /* REMOVE ESTAE                  */ 00657000
@RC00276 DS    0H                                                  0298 00658000
ENDIT    ESTAE 0                                                        00659000
*   RFY                                                            0299 00660000
*    (R0,                                                          0299 00661000
*     R1,                                                          0299 00662000
*     R2,                                                          0299 00663000
*     R3,                                                          0299 00664000
*     R4,                                                          0299 00665000
*     R14,                                                         0299 00666000
*     R15) RSTD;                    /*                       @Z40CSRC*/ 00667000
*   R2=EXITSAV;                     /* SAVE RETURN ADDRESS           */ 00668000
         L     R2,EXITSAV                                          0300 00669000
*   LM(R3,R4,OSRC150);              /* RET CDS FOR 15 & 0    @Z40CSRC*/ 00670000
         LM    R3,R4,OSRC150                                       0301 00671000
*   R14=OSRC1;                      /* RET CODE FOR R1       @Z40CSRC*/ 00672000
         L     R14,OSRC1                                           0302 00673000
*   GEN(L     R0,@SIZDATD);         /* R0 = LENGTH FOR FREEMAIN      */ 00674000
         L     R0,@SIZDATD                                              00675000
*   R1=R12;                         /* R1 = ADDRESS FOR FREEMAIN     */ 00676000
         LR    R1,R12                                              0304 00677000
*   GEN(FREEMAIN R,LV=(0),A=(1));   /* FREEMAIN WORKCLCA             */ 00678000
         FREEMAIN R,LV=(0),A=(1)                                        00679000
*   R15=R3;                         /* RESET R15 RETURN CODE         */ 00680000
         LR    R15,R3                                              0306 00681000
*   R0=R4;                          /* SET R0=REASON CODE    @Z40CSRC*/ 00682000
         LR    R0,R4                                               0307 00683000
*   R1=R14;                         /* SET R1=REASON CODE    @Z40CSRC*/ 00684000
         LR    R1,R14                                              0308 00685000
*   R14=R2;                         /* SET RETURN POINT              */ 00686000
         LR    R14,R2                                              0309 00687000
*   GEN(BR    R14    RETURN TO USER);/* EXIT BACK TO USER            */ 00688000
         BR    R14    RETURN TO USER                                    00689000
*   RFY                                                            0311 00690000
*    (R0,                                                          0311 00691000
*     R1,                                                          0311 00692000
*     R2,                                                          0311 00693000
*     R3,                                                          0311 00694000
*     R4,                                                          0311 00695000
*     R14,                                                         0311 00696000
*     R15) UNRSTD;                  /*                       @Z40CSRC*/ 00697000
*                                                                  0312 00698000
*   /*****************************************************************/ 00699000
*   /*                                                               */ 00700000
*   /* SRCHPCCB IS CALLED TO SEARCH THE PCCB CHAIN AND SEE IF A PCCB */ 00701000
*   /* FOR THE NEEDED CATALOG IS ALREADY ON THE CHAIN. IF IT IS      */ 00702000
*   /* PCCBPTR WILL POINT TO IT ELSE IT WILL BE ZEROED.              */ 00703000
*   /*                                                               */ 00704000
*   /*****************************************************************/ 00705000
*                                                                  0312 00706000
*SRCHPCCB:                                                         0312 00707000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0312 00708000
         B     @PB00003                                            0312 00709000
SRCHPCCB ST    @14,12(,@13)                                        0312 00710000
         ST    @13,@SA00003+4                                      0312 00711000
         LA    @14,@SA00003                                        0312 00712000
         LR    @13,@14                                             0312 00713000
*   PCCBSW=OFF;                     /* TURN DO WHILE SWITCH OFF      */ 00714000
         MVC   PCCBSW(1),OFF                                       0313 00715000
*   RFY                                                            0314 00716000
*     R1 RSTD;                                                     0314 00717000
*   ENQDEQPL=ENQDEQML;              /* COPY ENQ-DEQ LIST MAC FORM    */ 00718000
         MVC   ENQDEQPL(12),ENQDEQML                               0315 00719000
*   R1=ADDR(ENQDEQPL);              /* POINT TO LIST FORM            */ 00720000
         LA    R1,ENQDEQPL                                         0316 00721000
*   GEN(ENQ   MF=(E,(1)));          /* ENQ ON PCCB CHAIN             */ 00722000
         ENQ   MF=(E,(1))                                               00723000
*   ENQDEQSW=ON;                    /* INDICATE ENQUED               */ 00724000
         MVC   ENQDEQSW(1),ON                                      0318 00725000
*   R1=JSCBACT;                     /* GET ADDR OF ACTIVE JSCB       */ 00726000
         L     @15,TCBPTR                                          0319 00727000
         L     @15,TCBJSCB(,@15)                                   0319 00728000
         L     R1,JSCBACT(,@15)                                    0319 00729000
*   PCCBPTR=R1->JSCBPCC;            /* GET ADDR OF FIRST PCCB        */ 00730000
         L     @00,JSCBPCC(,R1)                                    0320 00731000
         ST    @00,PCCBPTR                                         0320 00732000
*   RFY                                                            0321 00733000
*     R1 UNRSTD;                                                   0321 00734000
*   DO WHILE(PCCBSW=OFF);           /* SEARCH PCCB CHAIN             */ 00735000
         B     @DE00322                                            0322 00736000
@DL00322 DS    0H                                                  0323 00737000
*     IF PCCBPTR=0 THEN                                            0323 00738000
         L     @15,PCCBPTR                                         0323 00739000
         LTR   @15,@15                                             0323 00740000
         BNZ   @RF00323                                            0323 00741000
*       PCCBSW=ON;                  /* END OF CHAIN,STOP LOOP        */ 00742000
         MVC   PCCBSW(1),ON                                        0324 00743000
*     ELSE                                                         0325 00744000
*       DO;                                                        0325 00745000
         B     @RC00323                                            0325 00746000
@RF00323 DS    0H                                                  0326 00747000
*         IF PCCACTIV='1'B&         /* IS PCCB ACTIVE                */ 00748000
*             WKCATNM=PCCDSNAM&     /* DOES CATALOG NAME MATCH       */ 00749000
*             PCOSCVOL='1'B&        /* IS THIS A CVOL PCCB           */ 00750000
*             PCCACBP=0             /* IS ACB PTR ZERO               */ 00751000
*           THEN                                                   0326 00752000
         L     @15,PCCBPTR                                         0326 00753000
         TM    PCCACTIV(@15),B'00100000'                           0326 00754000
         BNO   @RF00326                                            0326 00755000
         CLC   WKCATNM(44),PCCDSNAM(@15)                           0326 00756000
         BNE   @RF00326                                            0326 00757000
         TM    PCOSCVOL(@15),B'00010000'                           0326 00758000
         BNO   @RF00326                                            0326 00759000
         L     @15,PCCACBP(,@15)                                   0326 00760000
         LTR   @15,@15                                             0326 00761000
         BNZ   @RF00326                                            0326 00762000
*           PCCBSW=ON;              /* YES,PCCB FOUND,STOP LOOP      */ 00763000
         MVC   PCCBSW(1),ON                                        0327 00764000
*         ELSE                                                     0328 00765000
*           PCCBPTR=PCCNEXTP;       /* NO,GET NEXT PCCB              */ 00766000
         B     @RC00326                                            0328 00767000
@RF00326 L     @01,PCCBPTR                                         0328 00768000
         L     @15,PCCNEXTP(,@01)                                  0328 00769000
         ST    @15,PCCBPTR                                         0328 00770000
*       END;                                                       0329 00771000
@RC00326 DS    0H                                                  0330 00772000
*   END;                                                           0330 00773000
@RC00323 DS    0H                                                  0330 00774000
@DE00322 CLC   PCCBSW(1),OFF                                       0330 00775000
         BE    @DL00322                                            0330 00776000
*   RFY                                                            0331 00777000
*     R1 RSTD;                                                     0331 00778000
*   R1=ADDR(ENQDEQPL);              /* POINT TO LIST FORM            */ 00779000
         LA    R1,ENQDEQPL                                         0332 00780000
*   GEN(DEQ   MF=(E,(1)));          /* DEQ FROM PCCB CHAIN           */ 00781000
         DEQ   MF=(E,(1))                                               00782000
*   ENQDEQSW=OFF;                   /* INDICATE NOT ENQUED           */ 00783000
         MVC   ENQDEQSW(1),OFF                                     0334 00784000
*   RFY                                                            0335 00785000
*     R1 UNRSTD;                                                   0335 00786000
*   END SRCHPCCB;                                                  0336 00787000
@EL00003 L     @13,4(,@13)                                         0336 00788000
@EF00003 DS    0H                                                  0336 00789000
@ER00003 L     @14,12(,@13)                                        0336 00790000
         BR    @14                                                 0336 00791000
*                                                                  0337 00792000
*   /*****************************************************************/ 00793000
*   /*                                                               */ 00794000
*   /* OSREQ IS CALLED TO SET UP AND EXECUTE AN ORIGINAL REQUEST THAT*/ 00795000
*   /* WAS OS CAMLST FORMAT.                                         */ 00796000
*   /*                                                               */ 00797000
*   /*****************************************************************/ 00798000
*                                                                  0337 00799000
*OSREQ:                                                            0337 00800000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0337 00801000
OSREQ    ST    @14,12(,@13)                                        0337 00802000
         ST    @13,@SA00004+4                                      0337 00803000
         LA    @14,@SA00004                                        0337 00804000
         LR    @13,@14                                             0337 00805000
*   WKOPTNS=CAMOPTNS;               /* OPTION BITS TO WKAREA         */ 00806000
         L     @01,CAMPLPTR                                        0338 00807000
         MVC   WKOPTNS(4),CAMOPTNS(@01)                            0338 00808000
*   IF(WKOPTNS(1:1)&'00100000'B)='00100000'B THEN                  0339 00809000
*                                                                  0339 00810000
         MVC   @TS00001(1),WKOPTNS                                 0339 00811000
         NI    @TS00001,B'00100000'                                0339 00812000
         CLI   @TS00001,B'00100000'                                0339 00813000
         BNE   @RF00339                                            0339 00814000
*     /***************************************************************/ 00815000
*     /*                                                             */ 00816000
*     /* IF CAT IS SPECIFIED MAKE SURE IT IS A CATBX                 */ 00817000
*     /*                                                             */ 00818000
*     /***************************************************************/ 00819000
*                                                                  0340 00820000
*     WKOPTNS(2:2)=(WKOPTNS(2:2)|'01000000'B);                     0340 00821000
         OI    WKOPTNS+1,B'01000000'                               0340 00822000
*   ELSE                                                           0341 00823000
*     IF(WKOPTNS(1:1)&'00001000'B)='00001000'B THEN                0341 00824000
*                                                                  0341 00825000
         B     @RC00339                                            0341 00826000
@RF00339 MVC   @TS00001(1),WKOPTNS                                 0341 00827000
         NI    @TS00001,B'00001000'                                0341 00828000
         CLI   @TS00001,B'00001000'                                0341 00829000
         BNE   @RF00341                                            0341 00830000
*       /*************************************************************/ 00831000
*       /*                                                           */ 00832000
*       /* IF UCAT IS SPECIFIED MAKE SURE IT IS A UCATDX             */ 00833000
*       /*                                                           */ 00834000
*       /*************************************************************/ 00835000
*                                                                  0342 00836000
*       WKOPTNS(2:2)=(WKOPTNS(2:2)|'00000100'B);                   0342 00837000
         OI    WKOPTNS+1,B'00000100'                               0342 00838000
*     ELSE                                                         0343 00839000
*       ;                                                          0343 00840000
@RF00341 DS    0H                                                  0344 00841000
*   RFY                                                            0344 00842000
*    (R1,                                                          0344 00843000
*     R2,                                                          0344 00844000
*     R3) RSTD;                     /*                       @YM04805*/ 00845000
@RC00339 DS    0H                                                  0345 00846000
*   R3=CAMPTR1;                     /* GET DSNAME ADDR       @YM04805*/ 00847000
         L     @15,CAMPLPTR                                        0345 00848000
         L     R3,CAMPTR1(,@15)                                    0345 00849000
*   IF CAMLTTR=BITON THEN           /* IF LOCATE BY TTR      @Z40CSRC*/ 00850000
         TM    CAMLTTR(@15),B'00000010'                            0346 00851000
         BNO   @RF00346                                            0346 00852000
*     R1=LENGTH(WKNXTTTR);          /* GET LENGTH OF TTR     @Z40CSRC*/ 00853000
         LA    R1,3                                                0347 00854000
*   ELSE                            /* IS NOT TTR LOCATE     @Z40CSRC*/ 00855000
*     IF CAMBLDA=BITON              /* IF BUILDING ALIAS     @Z40CSRC*/ 00856000
*         |CAMDLTA=BITON            /* OR DELETING ALIAS     @Z40CSRC*/ 00857000
*         |CAMLNKX=BITON            /* OR CONNECTING         @Z40CSRC*/ 00858000
*         |CAMDRPX=BITON THEN       /* OR RELEASING          @Z40CSRC*/ 00859000
         B     @RC00346                                            0348 00860000
@RF00346 L     @15,CAMPLPTR                                        0348 00861000
         TM    CAMBLDA(@15),B'00011001'                            0348 00862000
         BNZ   @RT00348                                            0348 00863000
         TM    CAMDRPX(@15),B'10000000'                            0348 00864000
         BNO   @RF00348                                            0348 00865000
@RT00348 DS    0H                                                  0349 00866000
*       R1=LENGTH(CAMIDXNM);        /* GET LEN OF INDEX      @Z40CSRC*/ 00867000
         LA    R1,8                                                0349 00868000
*     ELSE                          /* NOT AN 8-BYTE NAME    @Z40CSRC*/ 00869000
*       DO;                         /* LONGER NAME MOVE      @Z40CSRC*/ 00870000
         B     @RC00348                                            0350 00871000
@RF00348 DS    0H                                                  0351 00872000
*         GEN;                                                     0351 00873000
*                                     /*                   @YM04805*/   00874000
         XC    TRTABLE(256),TRTABLE  ZERO TRT TABLE        @YM04805     00875000
         MVI   TRTABLE+C' ',X'04'    INIT TABLE            @YM04805     00876000
         LR    R1,R3                 R1 = ADDR OF DSNAME   @YM04805     00877000
         SR    R2,R2                 ZERO R2               @YM04805     00878000
         TRT   0(44,R3),TRTABLE      SCAN FOR BLANK        @YM04805     00879000
         B     OR0000(R2)            WAS BLANK FOUND       @YM04805     00880000
OR0000   LA    R1,43(R3)             NO,SET UP FOR MOVE    @YM04805     00881000
         SR    R1,R3                 YES,CALCULATE LENGTH  @YM04805     00882000
*         R1=R1+1;                  /* GET LENGTH OF NAME    @Z40CSRC*/ 00883000
         AL    R1,@CF00064                                         0352 00884000
*       END;                        /* OF LONGER NAME MV     @Z40CSRC*/ 00885000
*   WKDSN=R3->CAMDSN(1:R1);         /* COPY OVER DSNAME OR TTR AND 0354 00886000
*                                      BLANK REST            @Z40CSRC*/ 00887000
@RC00348 DS    0H                                                  0354 00888000
@RC00346 MVI   WKDSN+1,C' '                                        0354 00889000
         MVC   WKDSN+2(42),WKDSN+1                                 0354 00890000
         LR    @07,R1                                              0354 00891000
         BCTR  @07,0                                               0354 00892000
         EX    @07,@SM03066                                        0354 00893000
*   DSNLEN=R1;                      /* SAVE DSNAME LENGTH    @Z40CSRC*/ 00894000
         LR    DSNLEN,R1                                           0355 00895000
*   RFY                                                            0356 00896000
*    (R1,                                                          0356 00897000
*     R2,                                                          0356 00898000
*     R3) UNRSTD;                   /*                       @YM04805*/ 00899000
*   WKPTR1=ADDR(WKDSN);             /* ADDR OF DSN TO WKAREA         */ 00900000
         LA    @07,WKDSN                                           0357 00901000
         ST    @07,WKPTR1                                          0357 00902000
*   WKCVOLP=ZEROPTR;                /* ZERO OUT CVOL POINTER         */ 00903000
         L     @07,ZEROPTR                                         0358 00904000
         ST    @07,WKCVOLP                                         0358 00905000
*   WKPTR3=ADDR(WKVOLST);           /* VOLIST ADDR TO WKAREA         */ 00906000
         LA    @07,WKVOLST                                         0359 00907000
         ST    @07,WKPTR3                                          0359 00908000
*   IF CAMCAT='1'B|CAMRECAT='1'B THEN                              0360 00909000
*                                                                  0360 00910000
         L     @15,CAMPLPTR                                        0360 00911000
         TM    CAMCAT(@15),B'00110000'                             0360 00912000
         BZ    @RF00360                                            0360 00913000
*     /***************************************************************/ 00914000
*     /*                                                             */ 00915000
*     /* VOLUME LIST IS SPECIFIED BY THE USER FOR CATALOG OR         */ 00916000
*     /* RECATALOG REQUESTS AND MUST BE MOVED TO THE WORKAREA.       */ 00917000
*     /*                                                             */ 00918000
*     /***************************************************************/ 00919000
*                                                                  0361 00920000
*     DO;                                                          0361 00921000
*       RFY                                                        0362 00922000
*        (R2,                                                      0362 00923000
*         R3,                                                      0362 00924000
*         R4,                                                      0362 00925000
*         R5) RSTD;                                                0362 00926000
*       R3=(CAMVOLCT*12)+2;         /* CALC VOLIST SIZE              */ 00927000
         L     @15,CAMPTR3(,@15)                                   0363 00928000
         LH    R3,CAMVOLCT(,@15)                                   0363 00929000
         MH    R3,@CH00127                                         0363 00930000
         AL    R3,@CF00105                                         0363 00931000
*       R5=R3;                      /* SET R5 TO LIST SIZE           */ 00932000
         LR    R5,R3                                               0364 00933000
*       R2=ADDR(WKVOLST);           /* R2 -> WKVOLST                 */ 00934000
         LR    R2,@07                                              0365 00935000
*       R4=ADDR(CAMVOLST);          /* R4 -> CAMVOLST                */ 00936000
         LR    R4,@15                                              0366 00937000
*       GEN(MVCL   R2,R4);          /* MOVE VOLST TO WORKAREA        */ 00938000
         MVCL   R2,R4                                                   00939000
*       RFY                                                        0368 00940000
*        (R2,                                                      0368 00941000
*         R3,                                                      0368 00942000
*         R4,                                                      0368 00943000
*         R5) UNRSTD;                                              0368 00944000
*     END;                                                         0369 00945000
*   ELSE                                                           0370 00946000
*     ;                                                            0370 00947000
@RF00360 DS    0H                                                  0371 00948000
*   IF CAMDTTR='1'B THEN                                           0371 00949000
*                                                                  0371 00950000
         L     @07,CAMPLPTR                                        0371 00951000
         TM    CAMDTTR(@07),B'00000010'                            0371 00952000
         BNO   @RF00371                                            0371 00953000
*     /***************************************************************/ 00954000
*     /*                                                             */ 00955000
*     /* IF DSCBTTR IS BEING PASSED BY THE USER IT MUST BE MOVED TO  */ 00956000
*     /* THE WORK AREA.                                              */ 00957000
*     /*                                                             */ 00958000
*     /***************************************************************/ 00959000
*                                                                  0372 00960000
*     DO;                                                          0372 00961000
*       WKDSCBT=CAMDSCBT;           /* DSCBTTR TO WORKAREA           */ 00962000
         L     @07,CAMDSCBP(,@07)                                  0373 00963000
         MVC   WKDSCBT(3),CAMDSCBT(@07)                            0373 00964000
*       WKDSCBP=ADDR(WKDSCBT);      /* DSCBPTR TO WORKAREA           */ 00965000
         LA    @07,WKDSCBT                                         0374 00966000
         ST    @07,WKDSCBP                                         0374 00967000
*     END;                                                         0375 00968000
*   ELSE                                                           0376 00969000
*     WKDSCBP=ZEROPTR;              /* ZERO DSCBPTR IN WORKAREA      */ 00970000
*                                                                  0376 00971000
         B     @RC00371                                            0376 00972000
@RF00371 L     @07,ZEROPTR                                         0376 00973000
         ST    @07,WKDSCBP                                         0376 00974000
*   /*****************************************************************/ 00975000
*   /*                                                               */ 00976000
*   /* COPY OVER INFORMATION FOR 'INDEX' MACRO REQUEST       @Z40CSRC*/ 00977000
*   /*                                                               */ 00978000
*   /*****************************************************************/ 00979000
*                                                                  0377 00980000
*   IF CAMBLDA=BITON THEN           /* IF BUILDING ALIAS     @Z40CSRC*/ 00981000
@RC00371 L     @07,CAMPLPTR                                        0377 00982000
         TM    CAMBLDA(@07),B'00010000'                            0377 00983000
         BNO   @RF00377                                            0377 00984000
*     WKALISNM=CAMPTR3->CAMIDXNM;   /* COPY OVER ALIAS       @Z40CSRC*/ 00985000
         L     @07,CAMPTR3(,@07)                                   0378 00986000
         MVC   WKALISNM(8),CAMIDXNM(@07)                           0378 00987000
*   ELSE                            /* NOT BLDA              @Z40CSRC*/ 00988000
*     IF CAMLNKX=BITON THEN         /* IF CONNECTING         @Z40CSRC*/ 00989000
         B     @RC00377                                            0379 00990000
@RF00377 L     @07,CAMPLPTR                                        0379 00991000
         TM    CAMLNKX(@07),B'00001000'                            0379 00992000
         BNO   @RF00379                                            0379 00993000
*       WKNEWCV=CAMNEWVL;           /* COPY NEW VOL INFO     @Z40CSRC*/ 00994000
         L     @07,CAMPTR3(,@07)                                   0380 00995000
         MVC   WKNEWCV(10),CAMNEWVL(@07)                           0380 00996000
*     ELSE                                                         0381 00997000
*       ;                           /* NOT LNKX              @Z40CSRC*/ 00998000
@RF00379 DS    0H                                                  0382 00999000
*   RFY                                                            0382 01000000
*     R1 RSTD;                                                     0382 01001000
@RC00377 DS    0H                                                  0383 01002000
*   R1=ADDR(WKCAMLST);              /* R1 IS PARAMETER REG           */ 01003000
         LA    R1,WKCAMLST                                         0383 01004000
*   GEN(ST    R13,XSAVAREA+4  POINT TO PREVIOUS SAVEAREA);         0384 01005000
         ST    R13,XSAVAREA+4  POINT TO PREVIOUS SAVEAREA               01006000
*   GEN(LA    R13,XSAVAREA    R13=NEW SAVE AREA ADDRESS);          0385 01007000
         LA    R13,XSAVAREA    R13=NEW SAVE AREA ADDRESS                01008000
*   CALL IGG0CLCC;                  /* CALL OS CAT. MANAGEMENT       */ 01009000
         L     @15,@CV00058                                        0386 01010000
         BALR  @14,@15                                             0386 01011000
*   GEN(L     R13,XSAVAREA+4  RESET R13 TO PREVIOUS SAVEAREA);     0387 01012000
         L     R13,XSAVAREA+4  RESET R13 TO PREVIOUS SAVEAREA           01013000
*   RFY                                                            0388 01014000
*    (R0,                                                          0388 01015000
*     R15) RSTD;                                                   0388 01016000
*   GEN(STM   R15,R0,OSRC15 SAVE RETURN CODES);                    0389 01017000
         STM   R15,R0,OSRC15 SAVE RETURN CODES                          01018000
*   OSRC1=R1;                       /* SAVE REG 1 RET CD     @Z40CSRC*/ 01019000
         ST    R1,OSRC1                                            0390 01020000
*   RFY                                                            0391 01021000
*    (R0,                                                          0391 01022000
*     R15) UNRSTD;                  /*                       @Z40CSRC*/ 01023000
*                                                                  0391 01024000
*   /*****************************************************************/ 01025000
*   /*                                                               */ 01026000
*   /* COPY BACK NAME (POSSIBLE ALIAS REPLACED BY TRUE NAME).        */ 01027000
*   /*                                                               */ 01028000
*   /*****************************************************************/ 01029000
*                                                                  0392 01030000
*   IF CAMLTTR=BITON                /* IF LOCATE BY TTR      @Z40CSRC*/ 01031000
*       |CAMBLDA=BITON              /* OR BUILD ALIAS        @Z40CSRC*/ 01032000
*       |CAMDLTA=BITON              /* OR DELETE ALIAS       @Z40CSRC*/ 01033000
*       |CAMLNKX=BITON              /* OR CONNECT            @Z40CSRC*/ 01034000
*       |CAMDRPX=BITON THEN                                        0392 01035000
         L     @07,CAMPLPTR                                        0392 01036000
         TM    CAMLTTR(@07),B'00000010'                            0392 01037000
         BO    @RT00392                                            0392 01038000
         TM    CAMBLDA(@07),B'00011001'                            0392 01039000
         BNZ   @RT00392                                            0392 01040000
         TM    CAMDRPX(@07),B'10000000'                            0392 01041000
         BO    @RT00392                                            0392 01042000
*     ;                             /* OR DRPX, DONT COPY    @Z40CSRC*/ 01043000
*   ELSE                            /* SHOULD COPY           @Z40CSRC*/ 01044000
*     DO;                           /* COPY NAME             @Z40CSRC*/ 01045000
*       CALL GETUSERK;              /* GET INTO USER KEY     @Z40CSRC*/ 01046000
         BAL   @14,GETUSERK                                        0395 01047000
*       DO R1=1 TO LENGTH(CAMDSN);  /* COPY UP TO 44 CHAR    @Z40CSRC*/ 01048000
         LA    R1,1                                                0396 01049000
@DL00396 DS    0H                                                  0397 01050000
*         CAMDSN(R1)=WKDSN(R1);     /* COPY CHARACTER        @Z40CSRC*/ 01051000
         L     @07,CAMPLPTR                                        0397 01052000
         L     @07,CAMPTR1(,@07)                                   0397 01053000
         ALR   @07,R1                                              0397 01054000
         BCTR  @07,0                                               0397 01055000
         LA    @15,WKDSN-1(R1)                                     0397 01056000
         MVC   CAMDSN(1,@07),0(@15)                                0397 01057000
*         IF WKDSN(R1)=BLANKDLM     /* JUST COPIED A BLNK    @Z40CSRC*/ 01058000
*             &R1¬<DSNLEN THEN      /* & THRU BLANKING OUT A LONGER     01059000
*                                      ORIGINAL NAME         @Z40CSRC*/ 01060000
         LA    @07,WKDSN-1(R1)                                     0398 01061000
         CLI   0(@07),C' '                                         0398 01062000
         BNE   @RF00398                                            0398 01063000
         CR    R1,DSNLEN                                           0398 01064000
         BL    @RF00398                                            0398 01065000
*           R1=LENGTH(CAMDSN)+1;    /* SET TO EXIT LOOP      @Z40CSRC*/ 01066000
         LA    R1,45                                               0399 01067000
*         ELSE                                                     0400 01068000
*           ;                       /* LOOP UNTIL DONE       @Z40CSRC*/ 01069000
@RF00398 DS    0H                                                  0401 01070000
*       END;                        /* OF LOOP               @Z40CSRC*/ 01071000
         AL    R1,@CF00064                                         0401 01072000
         C     R1,@CF00206                                         0401 01073000
         BNH   @DL00396                                            0401 01074000
*       CALL GETSVCK;               /* GET SYSTEM KEY        @Z40CSRC*/ 01075000
         BAL   @14,GETSVCK                                         0402 01076000
*     END;                          /* OF COPYING NAME       @Z40CSRC*/ 01077000
*   RFY                                                            0404 01078000
*     R1 UNRSTD;                    /*                       @Z40CSRC*/ 01079000
@RT00392 DS    0H                                                  0405 01080000
*   IF(WKOPTNS&OSLOCMSK)=ALLZERO THEN                              0405 01081000
*                                                                  0405 01082000
         MVC   @TS00001(4),WKOPTNS                                 0405 01083000
         NC    @TS00001(4),OSLOCMSK                                0405 01084000
         CLC   @TS00001(4),ALLZERO                                 0405 01085000
         BNE   @RF00405                                            0405 01086000
*     /***************************************************************/ 01087000
*     /*                                                             */ 01088000
*     /* IF REQUEST WAS LOCATE THEN THE 265 BYTE             @Z40CSRC*/ 01089000
*     /* VOLUME LIST AREA MUST BE RETURNED TO THE USER WORKAREA.     */ 01090000
*     /*                                                             */ 01091000
*     /***************************************************************/ 01092000
*                                                                  0406 01093000
*     DO;                                                          0406 01094000
*       CALL GETUSERK;              /* GET INTO USER KEY             */ 01095000
         BAL   @14,GETUSERK                                        0407 01096000
*       RFY                                                        0408 01097000
*        (R2,                                                      0408 01098000
*         R3,                                                      0408 01099000
*         R4,                                                      0408 01100000
*         R5) RSTD;                                                0408 01101000
*       R3=265;                     /* R3 = VOLIST SIZE              */ 01102000
         LA    R3,265                                              0409 01103000
*       R5=R3;                      /* R5 = VOLIST SIZE              */ 01104000
         LR    R5,R3                                               0410 01105000
*       R2=ADDR(CAMVOLST);          /* R2 -> CAMVOLST                */ 01106000
         L     @01,CAMPLPTR                                        0411 01107000
         L     R2,CAMPTR3(,@01)                                    0411 01108000
*       R4=ADDR(WKVOLST);           /* R4 -> WKVOLST                 */ 01109000
         LA    R4,WKVOLST                                          0412 01110000
*       GEN(MVCL   R2,R4);          /* MOVE VOLST TO USER AREA       */ 01111000
         MVCL   R2,R4                                                   01112000
*       RFY                                                        0414 01113000
*        (R2,                                                      0414 01114000
*         R3,                                                      0414 01115000
*         R4,                                                      0414 01116000
*         R5) UNRSTD;                                              0414 01117000
*       CALL GETSVCK;               /* GET INTO SVC KEY              */ 01118000
         BAL   @14,GETSVCK                                         0415 01119000
*     END;                                                         0416 01120000
*   ELSE                                                           0417 01121000
*     ;                                                            0417 01122000
@RF00405 DS    0H                                                  0418 01123000
*   END OSREQ;                                                     0418 01124000
@EL00004 L     @13,4(,@13)                                         0418 01125000
@EF00004 DS    0H                                                  0418 01126000
@ER00004 L     @14,12(,@13)                                        0418 01127000
         BR    @14                                                 0418 01128000
*                                                                  0419 01129000
*   /*****************************************************************/ 01130000
*   /*                                                               */ 01131000
*   /* ESTAEXIT IS CALLED TO PROCESS AN ESTAE INTERCEPTED ABEND      */ 01132000
*   /*                                                               */ 01133000
*   /*****************************************************************/ 01134000
*                                                                  0419 01135000
*ESTAEXIT:                                                         0419 01136000
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0419 01137000
ESTAEXIT DS    0H                                                  0420 01138000
*   DO;                             /* ENTESTAE (10,11,12)SAVEAREA(XS   01139000
*                                      AVAREA)ERREXIT(NORTCA)PARMREG(   01140000
*                                      15)                           */ 01141000
*                                                                  0420 01142000
*     /***************************************************************/ 01143000
*     /*                                                             */ 01144000
*     /* ENTRY CODE FOR ESTAE ROUTINE. IF RTCA ALLOCATED THEN RESTORE*/ 01145000
*     /* CODE AND DATA REGS FROM START OF USERS PARM LIST, AND       */ 01146000
*     /* ESTABLISH ADDR TO ESTAE SAVE AREA IF REQUIRED. IF NO RTCA   */ 01147000
*     /* AVAILABLE THEN BRANCH TO ERROR CODE AFTER ESTABLISHING      */ 01148000
*     /* ADDRESSABILITY                                              */ 01149000
*     /*                                                             */ 01150000
*     /***************************************************************/ 01151000
*                                                                  0421 01152000
*     GEN(USING *,GPR15P);                                         0421 01153000
         USING *,GPR15P                                                 01154000
*     GEN(CH    GPR00F,*+30);       /* CHECK IF RTCA ALLOC FAILED    */ 01155000
         CH    GPR00F,*+30                                              01156000
*     GEN(BNE   *+28);              /* NO,SAVE RTM REGS              */ 01157000
         BNE   *+28                                                     01158000
*     GEN(DROP  GPR15P);            /* DROP LOCAL ADDR               */ 01159000
         DROP  GPR15P                                                   01160000
*     GEN(LR    15,GPR02P);         /* PTR TO USER PARM LIST         */ 01161000
         LR    15,GPR02P                                                01162000
*     GEN(L     10,00(15));                                        0426 01163000
         L     10,00(15)                                                01164000
*     GEN(L     11,04(15));                                        0427 01165000
         L     11,04(15)                                                01166000
*     GEN(L     12,08(15));                                        0428 01167000
         L     12,08(15)                                                01168000
*     GEN(LA    GPR13P,XSAVAREA);   /* SET PTR TO ESTAE SA           */ 01169000
         LA    GPR13P,XSAVAREA                                          01170000
*     GEN(B     NORTCA);            /* BRANCH TO ERROR EXIT          */ 01171000
         B     NORTCA                                                   01172000
*     GEN(DC    H'12');             /* NO RTCA AVAIL RC              */ 01173000
         DC    H'12'                                                    01174000
*     GEN(STM   GPR14P,GPR12F,12(GPR13P));/* GOOD R13, SAVE RTM'S  0432 01175000
*                                      REGS                          */ 01176000
         STM   GPR14P,GPR12F,12(GPR13P)                                 01177000
*     GEN(L     15,0(GPR01P));      /* PTR TO USER PARM LIST         */ 01178000
         L     15,0(GPR01P)                                             01179000
*     GEN(L     10,00(15));                                        0434 01180000
         L     10,00(15)                                                01181000
*     GEN(L     11,04(15));                                        0435 01182000
         L     11,04(15)                                                01183000
*     GEN(L     12,08(15));                                        0436 01184000
         L     12,08(15)                                                01185000
*     GEN(ST    GPR13P,XSAVAREA+4); /* SET PTR TO RTM SA             */ 01186000
         ST    GPR13P,XSAVAREA+4                                        01187000
*     GEN(LA    GPR13P,XSAVAREA);   /* SET PTR TO ESTAE SA           */ 01188000
         LA    GPR13P,XSAVAREA                                          01189000
*   END;                            /* ENTESTAE (10,11,12)SAVEAREA(XS   01190000
*                                      AVAREA)ERREXIT(NORTCA)PARMREG(   01191000
*                                      15)                           */ 01192000
*   RFY                                                            0440 01193000
*    (GPR01P,                                                      0440 01194000
*     R14) RSTD;                                                   0440 01195000
*   RFY                                                            0441 01196000
*     SDWA BASED(GPR01P);                                          0441 01197000
*   GEN(ST    R14,12(R13));         /* SAVE RETURN POINT             */ 01198000
         ST    R14,12(R13)                                              01199000
*   IF SDWAPERC='0'B                /* WERE WE PERCOLLATED TO        */ 01200000
*     THEN                          /* NO                            */ 01201000
         TM    SDWAPERC(GPR01P),B'00010000'                        0443 01202000
         BNZ   @RF00443                                            0443 01203000
*     IF KEYTYPE=USERKEY            /* WERE WE UNDER USER'S KEY      */ 01204000
*       THEN                        /* YES                           */ 01205000
         CLC   KEYTYPE(1),USERKEY                                  0444 01206000
         BNE   @RF00444                                            0444 01207000
*       DO;                         /* SETRP COMPCOD(STCHK,SYSTEM)DUM   01208000
*                                      P(YES)RC(0)                   */ 01209000
*         RESPECIFY                                                0446 01210000
*          (GPR00P,                                                0446 01211000
*           GPR01P,                                                0446 01212000
*           GPR14P,                                                0446 01213000
*           GPR15P) RSTD;                                          0446 01214000
*         GPR01P->SDWARCDE=0;       /* SAVE RC VALUE                 */ 01215000
         MVI   SDWARCDE(GPR01P),X'00'                              0447 01216000
*         GPR01P->SDWAREQ='1'B;     /* TURN ON DUMP INDICATOR        */ 01217000
         OI    SDWAREQ(GPR01P),B'10000000'                         0448 01218000
*         GPR14P=STCHK;             /* ACCESS COMPLETION CODE        */ 01219000
         L     GPR14P,STCHK                                        0449 01220000
*         GEN(SLL    14,12);        /* SHIFT TO SYSTEM COMPLETION  0450 01221000
*                                      CODE                          */ 01222000
         SLL    14,12                                                   01223000
*         GPR01P->SDWACMPC=GPR14P;  /* STORE COMPLETION CODE         */ 01224000
         STCM  GPR14P,7,SDWACMPC(GPR01P)                           0451 01225000
*         RESPECIFY                                                0452 01226000
*          (GPR00P,                                                0452 01227000
*           GPR01P,                                                0452 01228000
*           GPR14P,                                                0452 01229000
*           GPR15P) UNRSTD;                                        0452 01230000
*       END;                                                       0453 01231000
*     ELSE                          /* NOT UNDER USER'S KEY          */ 01232000
*       DO;                                                        0454 01233000
         B     @RC00444                                            0454 01234000
@RF00444 DS    0H                                                  0455 01235000
*         DO;                       /* SETRP RC(0)RECORD(YES)DUMP(IGN   01236000
*                                      ORE)RECPARM(RECORD)           */ 01237000
*           RESPECIFY                                              0456 01238000
*            (GPR00P,                                              0456 01239000
*             GPR01P,                                              0456 01240000
*             GPR14P,                                              0456 01241000
*             GPR15P) RSTD;                                        0456 01242000
*           GPR01P->SDWARCDE=0;     /* SAVE RC VALUE                 */ 01243000
         MVI   SDWARCDE(GPR01P),X'00'                              0457 01244000
*           GPR01P->SDWARCRD='1'B;  /* TURN ON RECORD INDICATOR      */ 01245000
         OI    SDWARCRD(GPR01P),B'10000000'                        0458 01246000
*           GPR15P=ADDR(RECORD);    /* ACCESS RECORD PARAMETER LIST  */ 01247000
         LA    GPR15P,RECORD                                       0459 01248000
*           GPR01P->SDWARECP=GPR15P->I256C(1:24);/* COPY RECORD    0460 01249000
*                                      PARAMETERS                    */ 01250000
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                   0460 01251000
*           RESPECIFY                                              0461 01252000
*            (GPR00P,                                              0461 01253000
*             GPR01P,                                              0461 01254000
*             GPR14P,                                              0461 01255000
*             GPR15P) UNRSTD;                                      0461 01256000
*         END;                                                     0462 01257000
*         RFY                                                      0463 01258000
*           R2 RSTD;                                               0463 01259000
*         DUMPHDR=SKELHDR;          /* SAVE SDUMP HEADER     @OZ29464*/ 01260000
         MVC   DUMPHDR(43),SKELHDR                                 0464 01261000
*         DUMPLIST=DUMPL;           /* SAVE PARM LIST        @OZ29464*/ 01262000
         MVC   DUMPLIST(24),DUMPL                                  0465 01263000
*         R2=ADDR(DUMPHDR);         /* POINT TO HEADER       @OZ29464*/ 01264000
         LA    R2,DUMPHDR                                          0466 01265000
*         GEN REFS(DUMPLIST,R2) SETS(R0,R1,R15)                    0467 01266000
*             (SDUMP HDRAD=(R2),MF=(E,DUMPLIST));/* ISSUE SDUMP    0467 01267000
*                                                            @OZ29464*/ 01268000
         SDUMP HDRAD=(R2),MF=(E,DUMPLIST)                               01269000
*         RFY                                                      0468 01270000
*           R2 UNRSTD;                                             0468 01271000
*       END;                                                       0469 01272000
*   ELSE                            /* YES,WE WERE PERCOLLATED TO    */ 01273000
*     DO;                           /* SETRP RECORD(YES)DUMP(IGNORE)R   01274000
*                                      C(0)RECPARM(RECORD)           */ 01275000
         B     @RC00443                                            0470 01276000
@RF00443 DS    0H                                                  0471 01277000
*       RESPECIFY                                                  0471 01278000
*        (GPR00P,                                                  0471 01279000
*         GPR01P,                                                  0471 01280000
*         GPR14P,                                                  0471 01281000
*         GPR15P) RSTD;                                            0471 01282000
*       GPR01P->SDWARCDE=0;         /* SAVE RC VALUE                 */ 01283000
         MVI   SDWARCDE(GPR01P),X'00'                              0472 01284000
*       GPR01P->SDWARCRD='1'B;      /* TURN ON RECORD INDICATOR      */ 01285000
         OI    SDWARCRD(GPR01P),B'10000000'                        0473 01286000
*       GPR15P=ADDR(RECORD);        /* ACCESS RECORD PARAMETER LIST  */ 01287000
         LA    GPR15P,RECORD                                       0474 01288000
*       GPR01P->SDWARECP=GPR15P->I256C(1:24);/* COPY RECORD        0475 01289000
*                                      PARAMETERS                    */ 01290000
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                   0475 01291000
*       RESPECIFY                                                  0476 01292000
*        (GPR00P,                                                  0476 01293000
*         GPR01P,                                                  0476 01294000
*         GPR14P,                                                  0476 01295000
*         GPR15P) UNRSTD;                                          0476 01296000
*     END;                                                         0477 01297000
*   RFY                                                            0478 01298000
*    (GPR01P,                                                      0478 01299000
*     R14) UNRSTD;                                                 0478 01300000
@RC00443 DS    0H                                                  0479 01301000
*CKENQ:                                                            0479 01302000
*   IF ENQDEQSW=ON                  /* IS ENQUE OUTSTANDING          */ 01303000
*     THEN                          /* YES                           */ 01304000
CKENQ    CLC   ENQDEQSW(1),ON                                      0479 01305000
         BNE   @RF00479                                            0479 01306000
*     DO;                                                          0480 01307000
*       RFY                                                        0481 01308000
*         R1 RSTD;                                                 0481 01309000
*       ENQDEQPL=ENQDEQML;          /* COPY ENQ-DEQ LIST MAC FORM    */ 01310000
         MVC   ENQDEQPL(12),ENQDEQML                               0482 01311000
*       R1=ADDR(ENQDEQPL);          /* POINT TO LIST FORM            */ 01312000
         LA    R1,ENQDEQPL                                         0483 01313000
*       GEN(DEQ   MF=(E,(1)));      /* DEQ FROM PCCB CHAIN           */ 01314000
         DEQ   MF=(E,(1))                                               01315000
*       ENQDEQSW=OFF;               /* INDICATE DEQUED               */ 01316000
         MVC   ENQDEQSW(1),OFF                                     0485 01317000
*       RFY                                                        0486 01318000
*         R1 UNRSTD;                                               0486 01319000
*     END;                                                         0487 01320000
*   ELSE                                                           0488 01321000
*     ;                                                            0488 01322000
@RF00479 DS    0H                                                  0489 01323000
*   RFY                                                            0489 01324000
*    (R0,                                                          0489 01325000
*     R1,                                                          0489 01326000
*     R2,                                                          0489 01327000
*     R14) RSTD;                    /*                       @YM05170*/ 01328000
*   GEN(L     R0,@SIZDATD);         /* R0 = LENGTH FOR FREEMAIN      */ 01329000
         L     R0,@SIZDATD                                              01330000
*   R1=R12;                         /* R1 = ADDRESS FOR FREEMAIN     */ 01331000
         LR    R1,R12                                              0491 01332000
*   GEN(L     R2,12(R13));          /* SAVE RETURN POINT     @YM05170*/ 01333000
         L     R2,12(R13)                                               01334000
*   GEN(FREEMAIN R,LV=(0),A=(1));   /* FREEMAIN WORKAREA             */ 01335000
         FREEMAIN R,LV=(0),A=(1)                                        01336000
*   GEN(LR    R14,R2);              /* RESET RETURN POINT    @YM05170*/ 01337000
         LR    R14,R2                                                   01338000
*   GEN(SR    R15,R15);             /* SET RETURN CODE TO ZERO       */ 01339000
         SR    R15,R15                                                  01340000
*   GEN(BR    R14);                 /* EXIT BACK TO RTM              */ 01341000
         BR    R14                                                      01342000
*   RFY                                                            0497 01343000
*    (R0,                                                          0497 01344000
*     R1,                                                          0497 01345000
*     R2,                                                          0497 01346000
*     R14) UNRSTD;                  /*                       @YM05170*/ 01347000
*NORTCA:                                                           0498 01348000
*   RFY                                                            0498 01349000
*     R14 RSTD;                                                    0498 01350000
NORTCA   DS    0H                                                  0499 01351000
*   GEN(ST    R14,12(R13));         /* SAVE RETURN POINT             */ 01352000
         ST    R14,12(R13)                                              01353000
*   GO TO CKENQ;                    /* GO FINISH PROCESSING          */ 01354000
         B     CKENQ                                               0500 01355000
*   RFY                                                            0501 01356000
*     R14 UNRSTD;                                                  0501 01357000
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */ 01358000
*     GPR00F FIXED(31) REG(0),                                     0502 01359000
*     GPR12F FIXED(31) REG(12),                                    0502 01360000
*     GPR00P PTR(31) REG(0),                                       0502 01361000
*     GPR01P PTR(31) REG(1),                                       0502 01362000
*     GPR02P PTR(31) REG(2),                                       0502 01363000
*     GPR13P PTR(31) REG(13),                                      0502 01364000
*     GPR14P PTR(31) REG(14),                                      0502 01365000
*     GPR15P PTR(31) REG(15);                                      0502 01366000
*   DECLARE                         /* COMMON VARIABLES              */ 01367000
*     I256C CHAR(256) BASED,                                       0503 01368000
*     I031F FIXED(31) BASED,                                       0503 01369000
*     I031P PTR(31) BASED,                                         0503 01370000
*     I015F FIXED(15) BASED,                                       0503 01371000
*     I015P PTR(15) BASED,                                         0503 01372000
*     I008P PTR(8) BASED,                                          0503 01373000
*     I001C CHAR(1) BASED;                                         0503 01374000
*   END ESTAEXIT;                                                  0504 01375000
*                                                                  0505 01376000
*   /*****************************************************************/ 01377000
*   /*                                                               */ 01378000
*   /* GETUSERK IS CALLED TO CHANGE STORAGE KEY VIA MODESET MACRO    */ 01379000
*   /* FROM SVC KEY TO USER KEY.                                     */ 01380000
*   /*                                                               */ 01381000
*   /*****************************************************************/ 01382000
*                                                                  0505 01383000
*GETUSERK:                                                         0505 01384000
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0505 01385000
GETUSERK DS    0H                                                  0506 01386000
*   RFY                                                            0506 01387000
*    (WKREG,                                                       0506 01388000
*     R14) RSTD;                                                   0506 01389000
*   KEYTYPE=USERKEY;                /* INDICATE CHANGE TO USERKEY    */ 01390000
*                                                                  0507 01391000
         MVC   KEYTYPE(1),USERKEY                                  0507 01392000
*   /*****************************************************************/ 01393000
*   /*                                                               */ 01394000
*   /* ISSUE MODESET MACRO TO SWITCH FROM SVC TO USER KEY            */ 01395000
*   /*                                                               */ 01396000
*   /*****************************************************************/ 01397000
*                                                                  0508 01398000
*   DO;                             /* MODESET SAVEKEY(OLDKEY)     0508 01399000
*                                      EXTKEY(RBT234) WORKREG(WKREG) */ 01400000
*     RESPECIFY                                                    0509 01401000
*      (GPR02F) RESTRICTED;                                        0509 01402000
*     WKREG=GPR02F;                 /* SAVE REGISTER 2               */ 01403000
         LR    WKREG,GPR02F                                        0510 01404000
*     IPK;                          /* SAVE CURRENT PSW KEY          */ 01405000
         IPK                                                       0511 01406000
*     OLDKEY=GPR02F;                                               0512 01407000
         STC   GPR02F,OLDKEY                                       0512 01408000
*     GPR02F=WKREG;                 /* RESTORE REGISTER 2            */ 01409000
         LR    GPR02F,WKREG                                        0513 01410000
*     WKREG=TCBRBP;                 /* RB PTR FROM TCB               */ 01411000
         L     @15,TCBPTR                                          0514 01412000
         L     WKREG,TCBRBP(,@15)                                  0514 01413000
*     WKREG=WKREG->RBLINK;          /* NEXT RB ADDRESS               */ 01414000
         L     WKREG,RBLINK(,WKREG)                                0515 01415000
*     WKREG=WKREG->RBOPSW(2);       /* PSW KEY FROM RB OLD PSW       */ 01416000
         SLR   @15,@15                                             0516 01417000
         IC    @15,RBOPSW+1(,WKREG)                                0516 01418000
         LR    WKREG,@15                                           0516 01419000
*     SPKA(WKREG);                  /* SET PSW KEY                   */ 01420000
         SPKA  0(WKREG)                                            0517 01421000
*     RESPECIFY                                                    0518 01422000
*      (GPR02F) UNRESTRICTED;                                      0518 01423000
*   END;                            /* MODESET SAVEKEY(OLDKEY)     0519 01424000
*                                      EXTKEY(RBT234) WORKREG(WKREG) */ 01425000
*   RFY                                                            0520 01426000
*    (WKREG,                                                       0520 01427000
*     R14) UNRSTD;                                                 0520 01428000
*   END GETUSERK;                                                  0521 01429000
@EL00006 DS    0H                                                  0521 01430000
@EF00006 DS    0H                                                  0521 01431000
@ER00006 BR    @14                                                 0521 01432000
*                                                                  0522 01433000
*   /*****************************************************************/ 01434000
*   /*                                                               */ 01435000
*   /* GETSVCK IS CALLED TO CHANGE STORAGE KEY VIA MODESET MACRO FROM*/ 01436000
*   /* USER KEY TO SVC KEY.                                          */ 01437000
*   /*                                                               */ 01438000
*   /*****************************************************************/ 01439000
*                                                                  0522 01440000
*GETSVCK:                                                          0522 01441000
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0522 01442000
GETSVCK  DS    0H                                                  0523 01443000
*   RFY                                                            0523 01444000
*    (WKREG,                                                       0523 01445000
*     R14) RSTD;                                                   0523 01446000
*   DO;                             /* MODESET KEYADDR(OLDKEY)     0524 01447000
*                                      WORKREG(WKREG)                */ 01448000
*     WKREG=OLDKEY;                 /* GET KEY FORM SAVE LOCATION    */ 01449000
         SLR   WKREG,WKREG                                         0525 01450000
         IC    WKREG,OLDKEY                                        0525 01451000
*     SPKA(WKREG);                  /* SET PSW KEY                   */ 01452000
         SPKA  0(WKREG)                                            0526 01453000
*   END;                            /* MODESET KEYADDR(OLDKEY)     0527 01454000
*                                      WORKREG(WKREG)                */ 01455000
*   KEYTYPE=SVCKEY;                 /* INDICATE CHANGE TO SVC KEY    */ 01456000
         MVC   KEYTYPE(1),SVCKEY                                   0528 01457000
*   RFY                                                            0529 01458000
*    (WKREG,                                                       0529 01459000
*     R14) UNRSTD;                                                 0529 01460000
*   END GETSVCK;                                                   0530 01461000
@EL00007 DS    0H                                                  0530 01462000
@EF00007 DS    0H                                                  0530 01463000
@ER00007 BR    @14                                                 0530 01464000
*                                                                  0531 01465000
*   /*****************************************************************/ 01466000
*   /*                                                               */ 01467000
*   /* SUPERLOC IS CALLED FOR ALL SUPERLOCATE REQUESTS. IT DETERMINES*/ 01468000
*   /* WHICH TYPE OF SUPERLOCATE IS TO BE DONE AND CALLS THE PROPER  */ 01469000
*   /* PROCEDURE.                                                    */ 01470000
*   /*                                                               */ 01471000
*   /*****************************************************************/ 01472000
*                                                                  0531 01473000
*SUPERLOC:                                                         0531 01474000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0531 01475000
SUPERLOC ST    @14,12(,@13)                                        0531 01476000
         ST    @13,@SA00008+4                                      0531 01477000
         LA    @14,@SA00008                                        0531 01478000
         LR    @13,@14                                             0531 01479000
*   WKDSN=CPLDSN;                   /* SAVE DATASET NAME     @ZA04937*/ 01480000
         L     @15,CTGPLPTR                                        0532 01481000
         L     @01,CTGENT(,@15)                                    0532 01482000
         MVC   WKDSN(44),CPLDSN(@01)                               0532 01483000
*   WKDSCBP=ADDR(SLAREA);           /* POINTER TO SUPERLOC WKAREA  0533 01484000
*                                                            @ZA04937*/ 01485000
         LA    @14,SLAREA                                          0533 01486000
         ST    @14,WKDSCBP                                         0533 01487000
*   SLCURSIZ=0;                     /*                       @ZA04937*/ 01488000
         SLR   @14,@14                                             0534 01489000
         STH   @14,SLCURSIZ                                        0534 01490000
*   SLFLAGS='00000000'B;            /* INIT FLAGS            @ZA04937*/ 01491000
         MVI   SLFLAGS,B'00000000'                                 0535 01492000
*   IF CTGGDGL='1'B|CTGLBASE='1'B THEN                             0536 01493000
         TM    CTGGDGL(@15),B'00001000'                            0536 01494000
         BO    @RT00536                                            0536 01495000
         TM    CTGLBASE(@15),B'10000000'                           0536 01496000
         BNO   @RF00536                                            0536 01497000
@RT00536 DS    0H                                                  0537 01498000
*     DO;                           /* IF NOT NORMAL SUPLOC EDIT NAME*/ 01499000
*       RFY                                                        0538 01500000
*        (R1,                                                      0538 01501000
*         R2) RSTD;                 /*                       @ZA04937*/ 01502000
*       R1=ADDR(WKDSN)+36;          /* SET UP LIMIT FOR TRANSLATE    */ 01503000
         LA    R1,WKDSN                                            0539 01504000
         AL    R1,@CF02418                                         0539 01505000
*       R2=ADDR(TRTABLE);           /*                       @ZA04937*/ 01506000
         LA    R2,TRTABLE                                          0540 01507000
*       GEN(XC    0(256,R2),0(R2) INIT TRT TABLE TO ZERO);/* @ZA04937*/ 01508000
         XC    0(256,R2),0(R2) INIT TRT TABLE TO ZERO                   01509000
*       GEN(MVI   C'('(R2),C'(');   /* SET TO STOP ON LEFT PAREN     */ 01510000
         MVI   C'('(R2),C'('                                            01511000
*       IF CTGGDGL='0'B THEN        /* IF BASE REQUEST ALLOW BLANK   */ 01512000
         L     @03,CTGPLPTR                                        0543 01513000
         TM    CTGGDGL(@03),B'00001000'                            0543 01514000
         BNZ   @RF00543                                            0543 01515000
*         GEN(MVI   C' '(R2),C' '); /* SET TO STOP ON LEFT BLANK     */ 01516000
         MVI   C' '(R2),C' '                                            01517000
*       TRT(WKDSN,TRTABLE);         /* SCAN FOR LEFT PAREN   @ZA04937*/ 01518000
@RF00543 TRT   WKDSN(44),TRTABLE                                   0545 01519000
*       R1=R1-ADDR(WKDSN)+1;        /* CALC NUMBER OF BYTES  @ZA04937*/ 01520000
         LA    @03,WKDSN                                           0546 01521000
         LCR   @03,@03                                             0546 01522000
         ALR   @03,R1                                              0546 01523000
         AL    @03,@CF00064                                        0546 01524000
         LR    R1,@03                                              0546 01525000
*       IF R1>36 THEN                                              0547 01526000
         C     R1,@CF02418                                         0547 01527000
         BNH   @RF00547                                            0547 01528000
*         VSRC15=VS8;               /* INDICATE DATASET NOT FOUND    */ 01529000
         L     @03,VS8                                             0548 01530000
         ST    @03,VSRC15                                          0548 01531000
*       ELSE                        /* # OF BYTES IS LESS THAN 36  0549 01532000
*                                                            @ZA04937*/ 01533000
*         SAVER1=R1;                /* SAVE NUMBER OF BYTES          */ 01534000
         B     @RC00547                                            0549 01535000
@RF00547 ST    R1,SAVER1                                           0549 01536000
*       RFY                                                        0550 01537000
*        (R1,                                                      0550 01538000
*         R2) UNRSTD;               /*                       @ZA04937*/ 01539000
@RC00547 DS    0H                                                  0551 01540000
*     END;                          /*                       @ZA04937*/ 01541000
*   IF VSRC15=0 THEN                                               0552 01542000
@RF00536 L     @15,VSRC15                                          0552 01543000
         LTR   @15,@15                                             0552 01544000
         BNZ   @RF00552                                            0552 01545000
*     DO;                           /*                       @ZA04937*/ 01546000
*       IF CTGGDGL='1'B THEN                                       0554 01547000
*                                                                  0554 01548000
         L     @15,CTGPLPTR                                        0554 01549000
         TM    CTGGDGL(@15),B'00001000'                            0554 01550000
         BNO   @RF00554                                            0554 01551000
*         /***********************************************************/ 01552000
*         /*                                                         */ 01553000
*         /* PROCESS SUPERLOCATE WITH GDG BASE SUPPLIED              */ 01554000
*         /*                                                         */ 01555000
*         /***********************************************************/ 01556000
*                                                                  0555 01557000
*         DO;                                                      0555 01558000
*           SLGGGG=GGGG;            /* SET GDG BASE          @OZ10000*/ 01559000
         L     @01,CTGWKA(,@15)                                    0556 01560000
         L     @01,CTGWAGB(,@01)                                   0556 01561000
         MVC   SLGGGG(4),GGGG(@01)                                 0556 01562000
*           CALL SLGDG;                                            0557 01563000
         BAL   @14,SLGDG                                           0557 01564000
*         END;                                                     0558 01565000
*       ELSE                                                       0559 01566000
*         IF CTGLBASE='1'B THEN                                    0559 01567000
*                                                                  0559 01568000
         B     @RC00554                                            0559 01569000
@RF00554 L     @01,CTGPLPTR                                        0559 01570000
         TM    CTGLBASE(@01),B'10000000'                           0559 01571000
         BNO   @RF00559                                            0559 01572000
*           /*********************************************************/ 01573000
*           /*                                                       */ 01574000
*           /* PROCESS SUPERLOCATE FOR GDG BASE                      */ 01575000
*           /*                                                       */ 01576000
*           /*********************************************************/ 01577000
*                                                                  0560 01578000
*           CALL SLGDGB;                                           0560 01579000
         BAL   @14,SLGDGB                                          0560 01580000
*         ELSE                                                     0561 01581000
*                                                                  0561 01582000
*           /*********************************************************/ 01583000
*           /*                                                       */ 01584000
*           /* PROCESS NORMAL SUPERLOCATE                            */ 01585000
*           /*                                                       */ 01586000
*           /*********************************************************/ 01587000
*                                                                  0561 01588000
*           CALL SLNAME;                                           0561 01589000
         B     @RC00559                                            0561 01590000
@RF00559 BAL   @14,SLNAME                                          0561 01591000
*     END;                          /*                       @ZA04937*/ 01592000
*   END SUPERLOC;                                                  0563 01593000
@EL00008 L     @13,4(,@13)                                         0563 01594000
@EF00008 DS    0H                                                  0563 01595000
@ER00008 L     @14,12(,@13)                                        0563 01596000
         BR    @14                                                 0563 01597000
*                                                                  0564 01598000
*   /*****************************************************************/ 01599000
*   /*                                                               */ 01600000
*   /* SLGDG IS CALLED TO PROCESS A SUPERLOCATE GDG REQUEST WITH BASE*/ 01601000
*   /* GENERATION NUMBER SUPPLIED                                    */ 01602000
*   /*                                                               */ 01603000
*   /*****************************************************************/ 01604000
*                                                                  0564 01605000
*SLGDG:                                                            0564 01606000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0564 01607000
SLGDG    ST    @14,12(,@13)                                        0564 01608000
         ST    @13,@SA00009+4                                      0564 01609000
         LA    @14,@SA00009                                        0564 01610000
         LR    @13,@14                                             0564 01611000
*   HOLDREL=CPLDSN(SAVER1+1:SAVER1+8);                             0565 01612000
         L     @01,CTGPLPTR                                        0565 01613000
         L     @01,CTGENT(,@01)                                    0565 01614000
         AL    @01,SAVER1                                          0565 01615000
         MVC   HOLDREL(8),CPLDSN(@01)                              0565 01616000
*   RFY                                                            0566 01617000
*    (R1,                                                          0566 01618000
*     R2,                                                          0566 01619000
*     R3,                                                          0566 01620000
*     R4) RSTD;                                                    0566 01621000
*   R1=ADDR(HOLDREL);                                              0567 01622000
*                                                                  0567 01623000
         LA    R1,HOLDREL                                          0567 01624000
*   /*****************************************************************/ 01625000
*   /*                                                               */ 01626000
*   /* CONVERT RELATIVE GEN. NUMBER TO BINARY                        */ 01627000
*   /*                                                               */ 01628000
*   /*****************************************************************/ 01629000
*                                                                  0568 01630000
*   GEN;                                                           0568 01631000
         LA    R3,7         SET LOOP CONTROL TO 7                       01632000
         LR    R2,R1        R2 = ADDRESS OF HOLDREL                     01633000
         SR    R4,R4        CLEAR R4 FOR SIGN SWITCH                    01634000
         CLI   0(R2),C'+'   CHECK FOR PLUS SIGN                         01635000
         BE    SLGDG50      FOUND,GO SET SIGN SWITCH                    01636000
         CLI   0(R2),C'-'   CHECK FOR MINUS SIGN                        01637000
         BE    SLGDG40      FOUND,GO SET SIGN SWITCH                    01638000
SLGDG0   CLI   0(R2),C')'   CHECK FOR RIGHT PAREN                       01639000
         BE    SLGDG30      FOUND,GO FINISH UP                          01640000
         TM    0(R2),X'F0'  CHECK FOR NUMERIC CHARACTER                 01641000
         BO    SLGDG20      NUMERIC,GO BUMP POINTERS                    01642000
SLGDG10  MVC   VSRC15(4),VS8 INDICATE DATASET NOT FOUND                 01643000
         B     SLGDG60        EXIT                                      01644000
SLGDG20  LA    R2,1(R2)     BUMP POINTER BY 1                           01645000
         BCT   R3,SLGDG0    GO CHECK NEXT IF LIMIT NOT REACHED          01646000
         B     SLGDG10      NO RIGHT PAREN FOUND,ERROR                  01647000
SLGDG30  CR    R1,R2        ANY CHARACTERS PROCESSED                    01648000
         BE    SLGDG10      NO GO INDICATE ERROR                        01649000
         BCTR  R2,R0        POINT TO LAST CHARACTER                     01650000
         BCT   R4,SLGDG60   BRANCH IF PLUS SIGN SWITCH                  01651000
         NI    0(R2),X'DF'  MAKE VALUE NEGATIVE                         01652000
         B     SLGDG60      END OF TEST LOOP                            01653000
SLGDG40  LA    R4,1         SET SIGN SWITCH FOR MINUS                   01654000
SLGDG50  LA    R1,1(R1)     BUMP PAST SIGN                              01655000
         LR    R2,R1        BUMP PAST SIGN                              01656000
         B     SLGDG0       GO PROCESS BYTES                            01657000
SLGDG60  DS    0H                                                       01658000
*   IF VSRC15¬=0 THEN                                              0569 01659000
         L     @05,VSRC15                                          0569 01660000
         LTR   @05,@05                                             0569 01661000
         BNZ   @RT00569                                            0569 01662000
*     ;                                                            0570 01663000
*   ELSE                                                           0571 01664000
*                                                                  0571 01665000
*     /***************************************************************/ 01666000
*     /*                                                             */ 01667000
*     /* NO ERROR YET SO CONTINUE                                    */ 01668000
*     /*                                                             */ 01669000
*     /***************************************************************/ 01670000
*                                                                  0571 01671000
*     DO;                                                          0571 01672000
*       R2=R2-R1;                   /* CALCULATE NUMBER OF BYTES FOR    01673000
*                                      EXECUTE OF PACK INST.         */ 01674000
         SLR   R2,R1                                               0572 01675000
*       GEN;                                                       0573 01676000
         EX    R2,SLEXPACK PACK RELATIVE NUM. R1 HAS CORRECT ADDR.      01677000
         CVB   R2,HOLDREL  CONVERT RELATIVE NUM TO BINARY               01678000
         ST    R2,RELNUM   SAVE RELATIVE NUMBER                         01679000
         B     SLGDG70     BRANCH AROUND PACK INSTRUCTION               01680000
SLEXPACK PACK  HOLDREL(8),0(0,R1)                                       01681000
SLGDG70  DS    0H                                                       01682000
*       RFY                                                        0574 01683000
*        (R1,                                                      0574 01684000
*         R2,                                                      0574 01685000
*         R3,                                                      0574 01686000
*         R4) UNRSTD;               /*                       @YM05181*/ 01687000
*                                                                  0574 01688000
*       /*************************************************************/ 01689000
*       /*                                                           */ 01690000
*       /* CONVERT SUPPLIED BASE TO BINARY                   @YM05181*/ 01691000
*       /*                                                           */ 01692000
*       /*************************************************************/ 01693000
*                                                                  0575 01694000
*       RFY                                                        0575 01695000
*         R1 RSTD;                  /*                       @YM05181*/ 01696000
*       R1=ADDR(GGGG);              /* ADDRESS OF S BASE     @YM05181*/ 01697000
         L     @15,CTGPLPTR                                        0576 01698000
         L     @15,CTGWKA(,@15)                                    0576 01699000
         L     R1,CTGWAGB(,@15)                                    0576 01700000
*       GEN(PACK  HOLDREL(8),0(4,R1));/*                     @YM05181*/ 01701000
         PACK  HOLDREL(8),0(4,R1)                                       01702000
*       GEN(CVB   R1,HOLDREL);      /*                       @YM05181*/ 01703000
         CVB   R1,HOLDREL                                               01704000
*       IF RELNUM>0 THEN            /*                       @ZA06684*/ 01705000
         L     @15,RELNUM                                          0579 01706000
         LTR   @15,@15                                             0579 01707000
         BNP   @RF00579                                            0579 01708000
*         DO;                       /*                       @YM05181*/ 01709000
*                                                                  0580 01710000
*           /*********************************************************/ 01711000
*           /*                                                       */ 01712000
*           /* CALC NEW G0000V00                             @YM05181*/ 01713000
*           /*                                                       */ 01714000
*           /*********************************************************/ 01715000
*                                                                  0581 01716000
*           R1=R1+RELNUM;           /*                       @ZA04937*/ 01717000
         ALR   R1,@15                                              0581 01718000
*           WKDSN(SAVER1:SAVER1+8)= /*                       @YM05181*/ 01719000
*               '.G0000V00';        /*                       @YM05181*/ 01720000
         L     @15,SAVER1                                          0582 01721000
         LA    @14,WKDSN-1(@15)                                    0582 01722000
         MVC   0(9,@14),@CC02991                                   0582 01723000
*           GEN(CVD   R1,HOLDREL);  /*                       @YM05181*/ 01724000
         CVD   R1,HOLDREL                                               01725000
*           GEN(OI    HOLDREL+7,X'0F');                            0584 01726000
         OI    HOLDREL+7,X'0F'                                          01727000
*           R1=ADDR(WKDSN)+SAVER1+1;                               0585 01728000
         LA    R1,WKDSN                                            0585 01729000
         AL    R1,SAVER1                                           0585 01730000
         AL    R1,@CF00064                                         0585 01731000
*           GEN(UNPK  0(4,R1),HOLDREL+5(3));                       0586 01732000
         UNPK  0(4,R1),HOLDREL+5(3)                                     01733000
*           RFY                                                    0587 01734000
*             R1 UNRSTD;            /*                       @YM05181*/ 01735000
*         END;                      /*                       @YM05181*/ 01736000
*                                                                  0588 01737000
*       /*************************************************************/ 01738000
*       /*                                                           */ 01739000
*       /* LOCATE DATASET                                    @YM05181*/ 01740000
*       /*                                                           */ 01741000
*       /*************************************************************/ 01742000
*                                                                  0589 01743000
*       CALL LOCNAME;               /*                       @YM05181*/ 01744000
@RF00579 BAL   @14,LOCNAME                                         0589 01745000
*       IF SLGDGF='0'B THEN                                        0590 01746000
         TM    SLGDGF,B'10000000'                                  0590 01747000
         BNZ   @RF00590                                            0590 01748000
*         VSRC15=VS8;               /* NOT A GDG             @ZA04937*/ 01749000
         L     @15,VS8                                             0591 01750000
         ST    @15,VSRC15                                          0591 01751000
*       ELSE                                                       0592 01752000
*         IF OSRC15=OS8             /*                       @YM05181*/ 01753000
*           THEN                    /*                       @YM05181*/ 01754000
         B     @RC00590                                            0592 01755000
@RF00590 CLC   OSRC15(4),OS8                                       0592 01756000
         BNE   @RF00592                                            0592 01757000
*           DO;                     /*                       @YM05181*/ 01758000
*                                                                  0593 01759000
*             /*******************************************************/ 01760000
*             /*                                                     */ 01761000
*             /* DATASET NOT FOUND,MUST BE NEW               @YM05181*/ 01762000
*             /*                                                     */ 01763000
*             /*******************************************************/ 01764000
*                                                                  0594 01765000
*             OSRC15=0;             /*                       @YM05181*/ 01766000
         SLR   @15,@15                                             0594 01767000
         ST    @15,OSRC15                                          0594 01768000
*             CALL GETUSERK;        /*                       @YM05181*/ 01769000
         BAL   @14,GETUSERK                                        0595 01770000
*             CTGNGDSN='1'B;        /*                       @YM05181*/ 01771000
         L     @01,CTGPLPTR                                        0596 01772000
         OI    CTGNGDSN(@01),B'00010000'                           0596 01773000
*             CALL GETSVCK;         /*                       @YM05181*/ 01774000
         BAL   @14,GETSVCK                                         0597 01775000
*           END;                    /*                       @YM05181*/ 01776000
*         ELSE                                                     0599 01777000
*           ;                       /*                       @YM05181*/ 01778000
@RF00592 DS    0H                                                  0600 01779000
*       IF OSRC15¬=0                /*                       @YM05181*/ 01780000
*         THEN                      /*                       @YM05181*/ 01781000
@RC00590 L     @15,OSRC15                                          0600 01782000
         LTR   @15,@15                                             0600 01783000
         BZ    @RF00600                                            0600 01784000
*         DO;                       /*                       @YM05181*/ 01785000
*           IF OSRC15=VS68 THEN     /* CANT ALLOC NEW CVOL?  @OZ24472*/ 01786000
         C     @15,VS68                                            0602 01787000
         BNE   @RF00602                                            0602 01788000
*             VSRC15=OSRC15;        /* SET RC=68             @OZ24472*/ 01789000
         ST    @15,VSRC15                                          0603 01790000
*           ELSE                    /*                       @OZ24472*/ 01791000
*             IF OSRC15=OS24        /* LOCATE IO ERROR?      @YM05181*/ 01792000
*               THEN                                               0604 01793000
         B     @RC00602                                            0604 01794000
@RF00602 L     @15,OS24                                            0604 01795000
         C     @15,OSRC15                                          0604 01796000
         BNE   @RF00604                                            0604 01797000
*               VSRC15=OS24;        /* SET IO ERROR                  */ 01798000
         ST    @15,VSRC15                                          0605 01799000
*             ELSE                                                 0606 01800000
*               VSRC15=VS8;         /* SET DSET NOT FOUND            */ 01801000
         B     @RC00604                                            0606 01802000
@RF00604 L     @15,VS8                                             0606 01803000
         ST    @15,VSRC15                                          0606 01804000
*         END;                      /*                       @YM05181*/ 01805000
*       ELSE                        /*                       @YM05181*/ 01806000
*         DO;                       /*                       @YM05181*/ 01807000
         B     @RC00600                                            0608 01808000
@RF00600 DS    0H                                                  0609 01809000
*           CALL GETUSERK;          /*                       @YM05181*/ 01810000
         BAL   @14,GETUSERK                                        0609 01811000
*           CPLDSN=LOCDSN;          /*                       @YM05181*/ 01812000
         L     @15,CTGPLPTR                                        0610 01813000
         L     @01,CTGENT(,@15)                                    0610 01814000
         MVC   CPLDSN(44,@01),LOCDSN                               0610 01815000
*           CTGCVVOL=WKCVOLVS;                                     0611 01816000
         L     @01,CTGCVOL(,@15)                                   0611 01817000
         MVC   CTGCVVOL(6,@01),WKCVOLVS                            0611 01818000
*           CALL GETSVCK;           /*                       @YM05181*/ 01819000
         BAL   @14,GETSVCK                                         0612 01820000
*           CALL SLVOLST;           /*                       @YM05181*/ 01821000
         BAL   @14,SLVOLST                                         0613 01822000
*         END;                      /*                       @YM05181*/ 01823000
*     END;                          /*                       @YM05181*/ 01824000
*   END SLGDG;                                                     0616 01825000
@EL00009 L     @13,4(,@13)                                         0616 01826000
@EF00009 DS    0H                                                  0616 01827000
@ER00009 L     @14,12(,@13)                                        0616 01828000
         BR    @14                                                 0616 01829000
*                                                                  0617 01830000
*   /*****************************************************************/ 01831000
*   /*                                                               */ 01832000
*   /* SLGDGB IS CALLED TO PROCESS A SUPERLOCATE GDG BASE ONLY       */ 01833000
*   /* REQUEST.                                                      */ 01834000
*   /*                                                               */ 01835000
*   /*****************************************************************/ 01836000
*                                                                  0617 01837000
*SLGDGB:                                                           0617 01838000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0617 01839000
SLGDGB   ST    @14,12(,@13)                                        0617 01840000
         ST    @13,@SA00010+4                                      0617 01841000
         LA    @14,@SA00010                                        0617 01842000
         LR    @13,@14                                             0617 01843000
*   WKDSN(SAVER1:SAVER1+3)='(0) ';  /* SET UP FOR LOCATE             */ 01844000
         L     @01,SAVER1                                          0618 01845000
         LA    @15,WKDSN-1(@01)                                    0618 01846000
         MVC   0(4,@15),@CC02996                                   0618 01847000
*   CALL LOCNAME;                   /* LOCATE ON (0) LEVEL           */ 01848000
         BAL   @14,LOCNAME                                         0619 01849000
*   IF OSRC15=0 THEN                                               0620 01850000
*                                                                  0620 01851000
         L     @15,OSRC15                                          0620 01852000
         LTR   @15,@15                                             0620 01853000
         BNZ   @RF00620                                            0620 01854000
*     /***************************************************************/ 01855000
*     /*                                                             */ 01856000
*     /* DATASET FOUND SO FINISH REQUEST                             */ 01857000
*     /*                                                             */ 01858000
*     /***************************************************************/ 01859000
*                                                                  0621 01860000
*     DO;                                                          0621 01861000
*       CALL SLVOLST;               /* GO FILL VOL LIST      @OZ12899*/ 01862000
         BAL   @14,SLVOLST                                         0622 01863000
*       IF VSRC15¬=VS40 THEN        /* ENOUGH SPACE?         @OZ12899*/ 01864000
         CLC   VSRC15(4),VS40                                      0623 01865000
         BE    @RF00623                                            0623 01866000
*         DO;                       /* YES, THEN DO          @OZ12899*/ 01867000
*           CALL GETUSERK;          /* GET INTO USER'S KEY           */ 01868000
         BAL   @14,GETUSERK                                        0625 01869000
*           CPLDSN=LOCDSN;          /* DATASET NAME TO USER          */ 01870000
         L     @01,CTGPLPTR                                        0626 01871000
         L     @01,CTGENT(,@01)                                    0626 01872000
         MVC   CPLDSN(44,@01),LOCDSN                               0626 01873000
*           CALL GETSVCK;           /* GET INTO SVC KEY              */ 01874000
         BAL   @14,GETSVCK                                         0627 01875000
*           IF SLGDGF='0'B THEN                                    0628 01876000
         TM    SLGDGF,B'10000000'                                  0628 01877000
         BNZ   @RF00628                                            0628 01878000
*             VSRC15=VS8;           /* SET NO DATASET        @ZA04937*/ 01879000
         L     @15,VS8                                             0629 01880000
         ST    @15,VSRC15                                          0629 01881000
*           ELSE                                                   0630 01882000
*             DO;                                                  0630 01883000
         B     @RC00628                                            0630 01884000
@RF00628 DS    0H                                                  0631 01885000
*               CALL GETUSERK;      /* GET INTO USER'S KEY           */ 01886000
         BAL   @14,GETUSERK                                        0631 01887000
*               CTGWAGCT=SLCURSIZ;  /* # GENS TO USR         @ZA04937*/ 01888000
         L     @01,CTGPLPTR                                        0632 01889000
         L     @01,CTGWKA(,@01)                                    0632 01890000
         LH    @00,SLCURSIZ                                        0632 01891000
         STH   @00,CTGWAGCT(,@01)                                  0632 01892000
*               CALL GETSVCK;       /* GET INTO SVC KEY              */ 01893000
         BAL   @14,GETSVCK                                         0633 01894000
*             END;                                                 0634 01895000
*         END;                      /*                       @OZ12899*/ 01896000
*     END;                                                         0636 01897000
*   ELSE                                                           0637 01898000
*                                                                  0637 01899000
*     /***************************************************************/ 01900000
*     /*                                                             */ 01901000
*     /* DATASET NOT FOUND CHECK IF A GIPE EXISTS                    */ 01902000
*     /*                                                             */ 01903000
*     /***************************************************************/ 01904000
*                                                                  0637 01905000
*     IF OSRC15¬=OS8|SLGDGF='0'B THEN/* IF OTHER THAN 'DSET NOT    0637 01906000
*                                      FOUND' OR GIPE NOT FOUND    0637 01907000
*                                                            @ZA04937*/ 01908000
         B     @RC00620                                            0637 01909000
@RF00620 CLC   OSRC15(4),OS8                                       0637 01910000
         BNE   @RT00637                                            0637 01911000
         TM    SLGDGF,B'10000000'                                  0637 01912000
         BNZ   @RF00637                                            0637 01913000
@RT00637 DS    0H                                                  0638 01914000
*       IF OSRC15=VS68 THEN         /* AND CANT ALLOC NEXT CVOL    0638 01915000
*                                                            @OZ24472*/ 01916000
         L     @15,OSRC15                                          0638 01917000
         C     @15,VS68                                            0638 01918000
         BNE   @RF00638                                            0638 01919000
*         VSRC15=OSRC15;            /* SET NOT ALLOCATED     @OZ24472*/ 01920000
         ST    @15,VSRC15                                          0639 01921000
*       ELSE                        /*                       @OZ24472*/ 01922000
*         VSRC15=VS8;               /* SET DSET NOT FOUND    @ZA04937*/ 01923000
         B     @RC00638                                            0640 01924000
@RF00638 L     @15,VS8                                             0640 01925000
         ST    @15,VSRC15                                          0640 01926000
*     ELSE                                                         0641 01927000
*                                                                  0641 01928000
*       /*************************************************************/ 01929000
*       /*                                                           */ 01930000
*       /* EMPTY GIPE EXISTS SO INDICATE EMPTY BASE                  */ 01931000
*       /*                                                           */ 01932000
*       /*************************************************************/ 01933000
*                                                                  0641 01934000
*       DO;                                                        0641 01935000
         B     @RC00637                                            0641 01936000
@RF00637 DS    0H                                                  0642 01937000
*         LOCDSN(SAVER1:SAVER1+8)='.G0000V00';/* SET UP EMPTY GEN  0642 01938000
*                                      INDEX                         */ 01939000
         L     @01,SAVER1                                          0642 01940000
         LA    @15,LOCDSN-1(@01)                                   0642 01941000
         MVC   0(9,@15),@CC02991                                   0642 01942000
*         CALL GETUSERK;            /* GET INTO USER'S KEY           */ 01943000
         BAL   @14,GETUSERK                                        0643 01944000
*         CPLDSN=LOCDSN;            /* GIVE BACK DATASET NM.         */ 01945000
         L     @15,CTGPLPTR                                        0644 01946000
         L     @01,CTGENT(,@15)                                    0644 01947000
         MVC   CPLDSN(44,@01),LOCDSN                               0644 01948000
*         CTGWAGCT=0;               /* ZERO NUMBER OF GENS           */ 01949000
         L     @01,CTGWKA(,@15)                                    0645 01950000
         SLR   @00,@00                                             0645 01951000
         STH   @00,CTGWAGCT(,@01)                                  0645 01952000
*         CALL GETSVCK;             /* GET INTO SVC KEY              */ 01953000
         BAL   @14,GETSVCK                                         0646 01954000
*       END;                                                       0647 01955000
*   END SLGDGB;                                                    0648 01956000
@EL00010 L     @13,4(,@13)                                         0648 01957000
@EF00010 DS    0H                                                  0648 01958000
@ER00010 L     @14,12(,@13)                                        0648 01959000
         BR    @14                                                 0648 01960000
*                                                                  0649 01961000
*   /*****************************************************************/ 01962000
*   /*                                                               */ 01963000
*   /* SLNAME IS CALLED TO PROCESS A NORMAL SUPERLOCATE OR A GDG ALL */ 01964000
*   /* REQUEST.                                                      */ 01965000
*   /*                                                               */ 01966000
*   /*****************************************************************/ 01967000
*                                                                  0649 01968000
*SLNAME:                                                           0649 01969000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0649 01970000
SLNAME   ST    @14,12(,@13)                                        0649 01971000
         ST    @13,@SA00011+4                                      0649 01972000
         LA    @14,@SA00011                                        0649 01973000
         LR    @13,@14                                             0649 01974000
*   CALL LOCNAME;                   /* LOCATE ON SUPPLIED NAME       */ 01975000
         BAL   @14,LOCNAME                                         0650 01976000
*   IF OSRC15=0 THEN                                               0651 01977000
*                                                                  0651 01978000
         L     @15,OSRC15                                          0651 01979000
         LTR   @15,@15                                             0651 01980000
         BNZ   @RF00651                                            0651 01981000
*     /***************************************************************/ 01982000
*     /*                                                             */ 01983000
*     /* DATASET FOUND SO FINISH REQUEST                             */ 01984000
*     /*                                                             */ 01985000
*     /***************************************************************/ 01986000
*                                                                  0652 01987000
*     DO;                                                          0652 01988000
*       CALL GETUSERK;              /* GET INTO USER'S KEY           */ 01989000
         BAL   @14,GETUSERK                                        0653 01990000
*       CPLDSN=LOCDSN;              /* DATASET NAME TO USER          */ 01991000
         L     @01,CTGPLPTR                                        0654 01992000
         L     @01,CTGENT(,@01)                                    0654 01993000
         MVC   CPLDSN(44,@01),LOCDSN                               0654 01994000
*       CALL GETSVCK;               /* GET INTO SVC KEY              */ 01995000
         BAL   @14,GETSVCK                                         0655 01996000
*       CALL SLVOLST;               /* GO FILL VOLUME LIST           */ 01997000
         BAL   @14,SLVOLST                                         0656 01998000
*     END;                                                         0657 01999000
*   ELSE                                                           0658 02000000
*                                                                  0658 02001000
*     /***************************************************************/ 02002000
*     /*                                                             */ 02003000
*     /* DATASET NOT FOUND CHECK IF A GIPE EXISTS(GDG ALL)           */ 02004000
*     /*                                                             */ 02005000
*     /***************************************************************/ 02006000
*                                                                  0658 02007000
*     DO;                                                          0658 02008000
         B     @RC00651                                            0658 02009000
@RF00651 DS    0H                                                  0659 02010000
*       IF OSRC15=OS12&SLGDGF='1'B THEN/* IF NOT RC=12 AND GDG     0659 02011000
*                                                            @ZA04937*/ 02012000
*                                                                  0659 02013000
         CLC   OSRC15(4),OS12                                      0659 02014000
         BNE   @RF00659                                            0659 02015000
         TM    SLGDGF,B'10000000'                                  0659 02016000
         BNO   @RF00659                                            0659 02017000
*         /***********************************************************/ 02018000
*         /*                                                         */ 02019000
*         /* GIPE EXISTS SO PROCESS AS GDG ALL REQUEST               */ 02020000
*         /*                                                         */ 02021000
*         /***********************************************************/ 02022000
*                                                                  0660 02023000
*         DO;                                                      0660 02024000
*           CALL GETUSERK;          /* GET INTO USER'S KEY           */ 02025000
         BAL   @14,GETUSERK                                        0661 02026000
*           CTGGDGB='1'B;           /* INDICATE BASE LOCATED         */ 02027000
         L     @15,CTGPLPTR                                        0662 02028000
         OI    CTGGDGB(@15),B'00100000'                            0662 02029000
*           CTGWAGCT=SLCURSIZ;      /* NUMBER OF GENS TO USER      0663 02030000
*                                                            @ZA04937*/ 02031000
         L     @01,CTGWKA(,@15)                                    0663 02032000
         LH    @00,SLCURSIZ                                        0663 02033000
         STH   @00,CTGWAGCT(,@01)                                  0663 02034000
*           CALL GETSVCK;           /* GET INTO SVC KEY              */ 02035000
         BAL   @14,GETSVCK                                         0664 02036000
*         END;                                                     0665 02037000
*       ELSE                                                       0666 02038000
*         IF OSRC15=VS68 THEN       /* CANNOT ALLOCATE       @OZ17073*/ 02039000
         B     @RC00659                                            0666 02040000
@RF00659 L     @15,OSRC15                                          0666 02041000
         C     @15,VS68                                            0666 02042000
         BNE   @RF00666                                            0666 02043000
*           VSRC15=OSRC15;          /* CATALOG               @OZ17073*/ 02044000
         ST    @15,VSRC15                                          0667 02045000
*         ELSE                      /*                       @OZ17073*/ 02046000
*           VSRC15=VS8;             /* SET NOT DATASET       @ZA04937*/ 02047000
         B     @RC00666                                            0668 02048000
@RF00666 L     @15,VS8                                             0668 02049000
         ST    @15,VSRC15                                          0668 02050000
*     END;                                                         0669 02051000
*   END SLNAME;                                                    0670 02052000
@EL00011 L     @13,4(,@13)                                         0670 02053000
@EF00011 DS    0H                                                  0670 02054000
@ER00011 L     @14,12(,@13)                                        0670 02055000
         BR    @14                                                 0670 02056000
*                                                                  0671 02057000
*   /*****************************************************************/ 02058000
*   /*                                                               */ 02059000
*   /* GENLOC IS CALLED TO PERFORM A VSAM-LIKE GENERIC LOCATE. MOST  */ 02060000
*   /* OF THE PROCESSING IS DONE BY THE SECOND CSECT OF THE INTERFACE*/ 02061000
*   /* MAPPER(IGG0CLCB) WHICH IS COMPOSED OF MODIFIED CODE FROM VS2-1*/ 02062000
*   /* TSO LISTCAT COMMAND.                                          */ 02063000
*   /*                                                               */ 02064000
*   /*****************************************************************/ 02065000
*                                                                  0671 02066000
*GENLOC:                                                           0671 02067000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0671 02068000
GENLOC   ST    @14,12(,@13)                                        0671 02069000
         ST    @13,@SA00012+4                                      0671 02070000
         LA    @14,@SA00012                                        0671 02071000
         LR    @13,@14                                             0671 02072000
*   WKDSN=CPLDSN;                   /* MOVE DATA SET NAME TO WKAREA  */ 02073000
         L     @15,CTGPLPTR                                        0672 02074000
         L     @01,CTGENT(,@15)                                    0672 02075000
         MVC   WKDSN(44),CPLDSN(@01)                               0672 02076000
*   IF CTGRCATN='1'B THEN                                          0673 02077000
*                                                                  0673 02078000
         TM    CTGRCATN(@15),B'00100000'                           0673 02079000
         BNO   @RF00673                                            0673 02080000
*     /***************************************************************/ 02081000
*     /*                                                             */ 02082000
*     /* IF RETURN CATALOG NAME SWITCH IS ON RETURN CATALOG NAME TO  */ 02083000
*     /* USER'S AREA BEFORE INVOKING IGG0CLCB TO RETURN DATASET      */ 02084000
*     /* NAMES.                                                      */ 02085000
*     /*                                                             */ 02086000
*     /***************************************************************/ 02087000
*                                                                  0674 02088000
*     DO;                                                          0674 02089000
*       CALL GETUSERK;              /* GET INTO USER'S KEY           */ 02090000
         BAL   @14,GETUSERK                                        0675 02091000
*       RFY                                                        0676 02092000
*         R3 RSTD;                                                 0676 02093000
*       R3=WALEN2;                  /* GET LENGTH USED VALUE         */ 02094000
         L     @01,CTGPLPTR                                        0677 02095000
         L     @01,CTGWKA(,@01)                                    0677 02096000
         LH    R3,WALEN2(,@01)                                     0677 02097000
         N     R3,@CF03065                                         0677 02098000
*       IF R3=0 THEN                /* IF USED LENGTH IS ZERO        */ 02099000
         LTR   R3,R3                                               0678 02100000
         BNZ   @RF00678                                            0678 02101000
*         R3=4;                     /* SET DEFAULT LENGTH TO 4       */ 02102000
         LA    R3,4                                                0679 02103000
*       ELSE                                                       0680 02104000
*         ;                                                        0680 02105000
@RF00678 DS    0H                                                  0681 02106000
*       R3=R3+45;                   /* ADD 45 TO USED LENGTH         */ 02107000
         AL    R3,@CF03003                                         0681 02108000
*       WALEN2=R3;                  /* STORE UPDATED LENGTH          */ 02109000
         L     @02,CTGPLPTR                                        0682 02110000
         L     @02,CTGWKA(,@02)                                    0682 02111000
         STH   R3,WALEN2(,@02)                                     0682 02112000
*       RFY                                                        0683 02113000
*         R3 UNRSTD;                                               0683 02114000
*       CALL GETSVCK;               /* GET BACK INTO SVC KEY         */ 02115000
         BAL   @14,GETSVCK                                         0684 02116000
*       IF WALEN2<=WALEN1 THEN                                     0685 02117000
*                                                                  0685 02118000
         L     @01,CTGPLPTR                                        0685 02119000
         L     @15,CTGWKA(,@01)                                    0685 02120000
         CLC   WALEN2(2,@15),WALEN1(@15)                           0685 02121000
         BH    @RF00685                                            0685 02122000
*         /***********************************************************/ 02123000
*         /*                                                         */ 02124000
*         /* IF THERE IS ROOM TO FIT THE CATALOG NAME INTO THE USER'S*/ 02125000
*         /* WORK AREA THEN MOVE IT IN.                              */ 02126000
*         /*                                                         */ 02127000
*         /***********************************************************/ 02128000
*                                                                  0686 02129000
*         DO;                                                      0686 02130000
*           CALL GETUSERK;          /* GET INTO USER'S KEY           */ 02131000
         BAL   @14,GETUSERK                                        0687 02132000
*           RFY                                                    0688 02133000
*             R3 RSTD;                                             0688 02134000
*           R3=CTGWKA+(WALEN2-45);  /* CALCULATE ENT.ADDR.           */ 02135000
         L     @01,CTGPLPTR                                        0689 02136000
         L     @15,CTGWKA(,@01)                                    0689 02137000
         LH    R3,WALEN2(,@15)                                     0689 02138000
         N     R3,@CF03065                                         0689 02139000
         SL    R3,@CF03003                                         0689 02140000
         ALR   @15,R3                                              0689 02141000
         LR    R3,@15                                              0689 02142000
*           R3->WATYPE='0';         /* CAT.NAME TYPE IS 'F0'X        */ 02143000
         MVI   WATYPE(R3),C'0'                                     0690 02144000
*           R3->WADSNAME=WKCATNM;   /* MOVE CATALOG NAME             */ 02145000
         MVC   WADSNAME(44,R3),WKCATNM                             0691 02146000
*           RFY                                                    0692 02147000
*             R3 UNRSTD;                                           0692 02148000
*           CALL GETSVCK;           /* GET BACK INTO SVC KEY         */ 02149000
         BAL   @14,GETSVCK                                         0693 02150000
*         END;                                                     0694 02151000
*       ELSE                                                       0695 02152000
*         DO;                       /*                       @OZ19727*/ 02153000
         B     @RC00685                                            0695 02154000
@RF00685 DS    0H                                                  0696 02155000
*           VSRC15=VS44;            /* WORKAREA TOO SMALL    @OZ08008*/ 02156000
         L     @15,VS44                                            0696 02157000
         ST    @15,VSRC15                                          0696 02158000
*           GOTO ENDLOC;            /* RETURN TO USER        @OZ19727*/ 02159000
         B     ENDLOC                                              0697 02160000
*         END;                      /*                       @OZ19727*/ 02161000
*     END;                                                         0699 02162000
*   ELSE                                                           0700 02163000
*     ;                                                            0700 02164000
@RF00673 DS    0H                                                  0701 02165000
*   RFY                                                            0701 02166000
*    (R0,                                                          0701 02167000
*     R1,                                                          0701 02168000
*     R2) RSTD;                                                    0701 02169000
@RC00673 DS    0H                                                  0702 02170000
*   R0=CTGENT;                      /* PASS ADDRESS OF DSNAME        */ 02171000
         L     @03,CTGPLPTR                                        0702 02172000
         L     R0,CTGENT(,@03)                                     0702 02173000
*   R1=CTGWKA;                      /* PASS ADDRESS OF WORKAREA      */ 02174000
         L     R1,CTGWKA(,@03)                                     0703 02175000
*   R2=TCBPTR;                      /* PASS ADDRESS OF TCB           */ 02176000
         L     R2,TCBPTR                                           0704 02177000
*   GEN(ST    R13,XSAVAREA+4);      /* SAVE REG13 ADDR               */ 02178000
         ST    R13,XSAVAREA+4                                           02179000
*   GEN(LA    R13,XSAVAREA);        /* GET NEW SAVEAREA ADDR         */ 02180000
         LA    R13,XSAVAREA                                             02181000
*   CALL IGG0CLCB;                  /* GO DO GENERIC LOCATE(S)       */ 02182000
         L     @15,@CV00057                                        0707 02183000
         BALR  @14,@15                                             0707 02184000
*   GEN(L     R13,XSAVAREA+4);      /* RESET REG13                   */ 02185000
         L     R13,XSAVAREA+4                                           02186000
*   IF CTGRCATN='1'B THEN           /* RETURN CAT SWITCH     @OZ32592*/ 02187000
         L     @03,CTGPLPTR                                        0709 02188000
         TM    CTGRCATN(@03),B'00100000'                           0709 02189000
         BNO   @RF00709                                            0709 02190000
*     DO;                                                          0710 02191000
*       CALL GETUSERK;              /* INTO USERS KEY        @OZ32592*/ 02192000
         BAL   @14,GETUSERK                                        0711 02193000
*       RFY                                                        0712 02194000
*         R3 RSTD;                                                 0712 02195000
*       R3=CTGWKA+4;                /* CTLG NAME SLOT PTR    @OZ32592*/ 02196000
         LA    R3,4                                                0713 02197000
         L     @15,CTGPLPTR                                        0713 02198000
         AL    R3,CTGWKA(,@15)                                     0713 02199000
*       IF R3->WATYPE='0' THEN      /* CATALOG ENTRY?        @OZ32592*/ 02200000
         CLI   WATYPE(R3),C'0'                                     0714 02201000
         BNE   @RF00714                                            0714 02202000
*         R3->WADSNAME=WKCATNM;     /* THEN REVISE IN CASE NEW CVOL     02203000
*                                      WAS ACCESSED          @OZ32592*/ 02204000
         MVC   WADSNAME(44,R3),WKCATNM                             0715 02205000
*       ELSE                                                       0716 02206000
*         ;                         /*                       @OZ32592*/ 02207000
@RF00714 DS    0H                                                  0717 02208000
*       CALL GETSVCK;               /* BACK TO SYSTEM KEY    @OZ32592*/ 02209000
         BAL   @14,GETSVCK                                         0717 02210000
*     END;                                                         0718 02211000
*   RFY                                                            0719 02212000
*    (R0,                                                          0719 02213000
*     R1,                                                          0719 02214000
*     R2,                                                          0719 02215000
*     R3) UNRSTD;                                                  0719 02216000
@RF00709 DS    0H                                                  0720 02217000
*   RFY                                                            0720 02218000
*     R15 RSTD;                                                    0720 02219000
*   IF R15=GL4 THEN                                                0721 02220000
         C     R15,GL4                                             0721 02221000
         BNE   @RF00721                                            0721 02222000
*     VSRC15=VS8;                   /* SET DATASET NOT FOUND         */ 02223000
         L     @14,VS8                                             0722 02224000
         ST    @14,VSRC15                                          0722 02225000
*   ELSE                                                           0723 02226000
*     IF R15=GL8 THEN                                              0723 02227000
         B     @RC00721                                            0723 02228000
@RF00721 C     R15,GL8                                             0723 02229000
         BNE   @RF00723                                            0723 02230000
*       VSRC15=VS164;               /* SET OUT OF CORE               */ 02231000
         L     @14,VS164                                           0724 02232000
         ST    @14,VSRC15                                          0724 02233000
*     ELSE                                                         0725 02234000
*       IF R15=GL12 THEN                                           0725 02235000
         B     @RC00723                                            0725 02236000
@RF00723 C     R15,GL12                                            0725 02237000
         BNE   @RF00725                                            0725 02238000
*         VSRC15=VS44;              /* WORKAREA TOO SMALL    @OZ08008*/ 02239000
         L     @14,VS44                                            0726 02240000
         ST    @14,VSRC15                                          0726 02241000
*       ELSE                                                       0727 02242000
*         ;                                                        0727 02243000
@RF00725 DS    0H                                                  0728 02244000
*ENDLOC:                            /*                       @OZ19727*/ 02245000
*   RFY                                                            0728 02246000
*    (R15) UNRSTD;                                                 0728 02247000
*   END GENLOC;                                                    0729 02248000
@EL00012 L     @13,4(,@13)                                         0729 02249000
@EF00012 DS    0H                                                  0729 02250000
@ER00012 L     @14,12(,@13)                                        0729 02251000
         BR    @14                                                 0729 02252000
*                                                                  0730 02253000
*   /*****************************************************************/ 02254000
*   /*                                                               */ 02255000
*   /* DELETE IS CALLED TO PERFORM A VSAM-LIKE DELETE REQUEST. THIS  */ 02256000
*   /* IS ACCOMPLISHED BY ISSUING OS UCATDX REQUEST AND OPTIONALLY   */ 02257000
*   /* ISSUING SCRATCH SVC.                                          */ 02258000
*   /*                                                               */ 02259000
*   /*****************************************************************/ 02260000
*                                                                  0730 02261000
*DELETE:                                                           0730 02262000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0730 02263000
DELETE   ST    @14,12(,@13)                                        0730 02264000
         ST    @13,@SA00013+4                                      0730 02265000
         LA    @14,@SA00013                                        0730 02266000
         LR    @13,@14                                             0730 02267000
*   IF CTGTYPE¬='A' THEN                                           0731 02268000
         L     @01,CTGPLPTR                                        0731 02269000
         CLI   CTGTYPE(@01),C'A'                                   0731 02270000
         BE    @RF00731                                            0731 02271000
*     VSRC15=VS48;                  /* SET INVALID FUNCTION          */ 02272000
         L     @15,VS48                                            0732 02273000
         ST    @15,VSRC15                                          0732 02274000
*   ELSE                                                           0733 02275000
*                                                                  0733 02276000
*     /***************************************************************/ 02277000
*     /*                                                             */ 02278000
*     /* DATASET TYPE CODE IS NON VSAM SO PROCESS IT                 */ 02279000
*     /*                                                             */ 02280000
*     /***************************************************************/ 02281000
*                                                                  0733 02282000
*     DO;                                                          0733 02283000
         B     @RC00731                                            0733 02284000
@RF00731 DS    0H                                                  0734 02285000
*       WKDSN=CPLDSN;               /* SAVE DATASET NAME             */ 02286000
         L     @01,CTGPLPTR                                        0734 02287000
         L     @01,CTGENT(,@01)                                    0734 02288000
         MVC   WKDSN(44),CPLDSN(@01)                               0734 02289000
*       CALL LOCNAME;               /* LOCATE DATASET IN CATALOG     */ 02290000
         BAL   @14,LOCNAME                                         0735 02291000
*       IF OSRC15¬=0 THEN                                          0736 02292000
         L     @15,OSRC15                                          0736 02293000
         LTR   @15,@15                                             0736 02294000
         BZ    @RF00736                                            0736 02295000
*         DO;                                                      0737 02296000
*           IF OSRC15=OS24 THEN                                    0738 02297000
         C     @15,OS24                                            0738 02298000
         BNE   @RF00738                                            0738 02299000
*             VSRC15=VS28;          /* SET NON LOC. IO ERROR         */ 02300000
         L     @15,VS28                                            0739 02301000
         ST    @15,VSRC15                                          0739 02302000
*           ELSE                                                   0740 02303000
*             VSRC15=VS8;           /* SET NO DATASET                */ 02304000
         B     @RC00738                                            0740 02305000
@RF00738 L     @15,VS8                                             0740 02306000
         ST    @15,VSRC15                                          0740 02307000
*         END;                                                     0741 02308000
*       ELSE                                                       0742 02309000
*         DO;                                                      0742 02310000
         B     @RC00736                                            0742 02311000
@RF00736 DS    0H                                                  0743 02312000
*           RFY                                                    0743 02313000
*             I RSTD;                                              0743 02314000
*           IF CTGSCR='1'B THEN                                    0744 02315000
*                                                                  0744 02316000
         L     @07,CTGPLPTR                                        0744 02317000
         TM    CTGSCR(@07),B'00000010'                             0744 02318000
         BNO   @RF00744                                            0744 02319000
*             /*******************************************************/ 02320000
*             /*                                                     */ 02321000
*             /* SCRATCH BIT IS ON SO SCRATCH DATASETS BEFORE        */ 02322000
*             /* UNCATALOGING THEM. SCR VOLUMES 20 AT A TIME         */ 02323000
*             /*                                                     */ 02324000
*             /*******************************************************/ 02325000
*                                                                  0745 02326000
*             DO;                                                  0745 02327000
*               IF CTGPURG='1'B THEN                               0746 02328000
         TM    CTGPURG(@07),B'00100000'                            0746 02329000
         BNO   @RF00746                                            0746 02330000
*                 WKOPTNS=SCRPURGE; /* SCRATCH PURGE                 */ 02331000
         MVC   WKOPTNS(4),SCRPURGE                                 0747 02332000
*               ELSE                                               0748 02333000
*                 WKOPTNS=SCRNOPUR; /* SCRATCH-NO PURGE              */ 02334000
         B     @RC00746                                            0748 02335000
@RF00746 MVC   WKOPTNS(4),SCRNOPUR                                 0748 02336000
*               IF CTGTIOT='1'B THEN/*                       @OZ28096*/ 02337000
@RC00746 L     @07,CTGPLPTR                                        0749 02338000
         TM    CTGTIOT(@07),B'00000100'                            0749 02339000
         BNO   @RF00749                                            0749 02340000
*                 DO;               /* SYSZTIOT ALREADY ENQUED       */ 02341000
*                   CALL CHEKAUTH;  /* CALLER AUTHORIZED?    @OZ28096*/ 02342000
         BAL   @14,CHEKAUTH                                        0751 02343000
*                   RFY                                            0752 02344000
*                    (R15) RSTD;                                   0752 02345000
*                   IF R15=ALLZERO THEN/* CALLER AUTHRIZED?@OZ19636  */ 02346000
         CL    R15,ALLZERO                                         0753 02347000
         BNE   @RF00753                                            0753 02348000
*                     SCRTIOT='1'B; /* YES-SET TIOT ENQD     @OZ19636*/ 02349000
         OI    SCRTIOT,B'10000000'                                 0754 02350000
*                   ELSE                                           0755 02351000
*                     ;                                            0755 02352000
@RF00753 DS    0H                                                  0756 02353000
*                 END;                                             0756 02354000
*               ELSE                                               0757 02355000
*                 ;                 /*                       @OZ19636*/ 02356000
@RF00749 DS    0H                                                  0758 02357000
*               RFY                                                0758 02358000
*                (R15) UNRSTD;                                     0758 02359000
*               DO I=WKVOLNUM TO 1 BY-20;/*                  @ZA01269*/ 02360000
         LH    I,WKVOLNUM                                          0759 02361000
         B     @DE00759                                            0759 02362000
@DL00759 DS    0H                                                  0760 02363000
*                 IF WKVOLNUM<20 THEN                              0760 02364000
         LH    @07,WKVOLNUM                                        0760 02365000
         C     @07,@CF02082                                        0760 02366000
         BL    @RT00760                                            0760 02367000
*                   ;               /* NUMBER OF VOLUMES FOR SCRATCH    02368000
*                                      OK                            */ 02369000
*                 ELSE                                             0762 02370000
*                   WKVOLNUM=20;    /* SET VOL NUM TO 20             */ 02371000
         MVC   WKVOLNUM(2),@CH02082                                0762 02372000
*                 WKPTR1=ADDR(LOCDSN);/* POINT TO DS NAME            */ 02373000
@RT00760 LA    @07,LOCDSN                                          0763 02374000
         ST    @07,WKPTR1                                          0763 02375000
*                 WKCVOLP=ZEROPTR;  /* ZERO CVOL POINTER             */ 02376000
         L     @07,ZEROPTR                                         0764 02377000
         ST    @07,WKCVOLP                                         0764 02378000
*                 WKPTR3=ADDR(WKVOLST);/* POINT TO VOL LIST          */ 02379000
         LA    @15,WKVOLST                                         0765 02380000
         ST    @15,WKPTR3                                          0765 02381000
*                 RFY                                              0766 02382000
*                  (R0,                                            0766 02383000
*                   R1) RSTD;       /*                       @ZA03197*/ 02384000
*                 R0=ZEROPTR;       /* R0 MUST BE 0 FOR SCRATCH    0767 02385000
*                                                            @ZA03197*/ 02386000
         LR    R0,@07                                              0767 02387000
*                 R1=ADDR(WKCAMLST);/* POINT TO PARM LIST            */ 02388000
         LA    R1,WKCAMLST                                         0768 02389000
*                 GEN(SCRATCH (1)  ISSUE SCRATCH SVC);             0769 02390000
         SCRATCH (1)  ISSUE SCRATCH SVC                                 02391000
*                 RFY                                              0770 02392000
*                  (R0,                                            0770 02393000
*                   R1) UNRSTD;     /*                       @ZA03197*/ 02394000
*/********************************************************************/ 02395000
*/*                                                                  */ 02396000
*/*       CHECK SCRATCH RETURN CODES FOR EACH VOLUME                 */ 02397000
*/*             RTN = 2  PASSWORD FAILED                             */ 02398000
*/*             RTN = 3  EXPIRATION DATE STILL ACTIVE                */ 02399000
*/*             RTN = 5  UNMATCHED DEV TYPE                          */ 02400000
*/*             RTN = 7  DATA SET IS OPEN                            */ 02401000
*/*                                                                  */ 02402000
*/********************************************************************/ 02403000
*                                                                  0771 02404000
*                 DO WKSCRLP=WKVOLNUM TO 1 BY-1 WHILE VSRC15=ZEROPTR;   02405000
         LH    WKSCRLP,WKVOLNUM                                    0771 02406000
         B     @DE00771                                            0771 02407000
@DL00771 CLC   VSRC15(4),ZEROPTR                                   0771 02408000
         BNE   @DC00771                                            0771 02409000
*                                   /*                       @ZA01269*/ 02410000
*                   IF WKSCRSTS(WKSCRLP)¬='00'X THEN/* IF RTN CODE 0772 02411000
*                                                            @OZ09410*/ 02412000
         LR    @07,WKSCRLP                                         0772 02413000
         MH    @07,@CH00127                                        0772 02414000
         LA    @03,WKSCRSTS-12(@07)                                0772 02415000
         CLI   0(@03),X'00'                                        0772 02416000
         BE    @RF00772                                            0772 02417000
*                     IF WKSCRSTS(WKSCRLP)='02'X THEN/* IF PASSWORD     02418000
*                                      FAILED                @OZ09410*/ 02419000
         LA    @03,WKSCRSTS-12(@07)                                0773 02420000
         CLI   0(@03),X'02'                                        0773 02421000
         BNE   @RF00773                                            0773 02422000
*                       VSRC15=VS56;/* SET ERROR CODE        @ZA01269*/ 02423000
         L     @07,VS56                                            0774 02424000
         ST    @07,VSRC15                                          0774 02425000
*                     ELSE          /*                       @OZ09410*/ 02426000
*                       IF WKSCRSTS(WKSCRLP)='03'X THEN/* ACTIVE EXP    02427000
*                                      DATE                  @OZ09410*/ 02428000
         B     @RC00773                                            0775 02429000
@RF00773 LR    @07,WKSCRLP                                         0775 02430000
         MH    @07,@CH00127                                        0775 02431000
         LA    @03,WKSCRSTS-12(@07)                                0775 02432000
         CLI   0(@03),X'03'                                        0775 02433000
         BNE   @RF00775                                            0775 02434000
*                         VSRC15=VS84;/* SET ERROR CODE      @OZ09410*/ 02435000
         L     @07,VS84                                            0776 02436000
         ST    @07,VSRC15                                          0776 02437000
*                       ELSE        /*                       @OZ18258*/ 02438000
*                         IF WKSCRSTS(WKSCRLP)='05'X THEN/* INCRECT     02439000
*                                      DEVTYPE               @OZ18258*/ 02440000
         B     @RC00775                                            0777 02441000
@RF00775 LR    @07,WKSCRLP                                         0777 02442000
         MH    @07,@CH00127                                        0777 02443000
         LA    @03,WKSCRSTS-12(@07)                                0777 02444000
         CLI   0(@03),X'05'                                        0777 02445000
         BNE   @RF00777                                            0777 02446000
*                           VSRC15=VS168;/* SET ERROR CODE   @OZ18258*/ 02447000
         L     @07,VS168                                           0778 02448000
         ST    @07,VSRC15                                          0778 02449000
*                         ELSE      /*                       @OZ09410*/ 02450000
*                           IF WKSCRSTS(WKSCRLP)='07'X THEN/* DATA 0779 02451000
*                                      SET OPEN              @OZ09410*/ 02452000
         B     @RC00777                                            0779 02453000
@RF00777 LR    @07,WKSCRLP                                         0779 02454000
         MH    @07,@CH00127                                        0779 02455000
         LA    @03,WKSCRSTS-12(@07)                                0779 02456000
         CLI   0(@03),X'07'                                        0779 02457000
         BNE   @RF00779                                            0779 02458000
*                             VSRC15=VS184;/* SET ERROR CODE @OZ09410*/ 02459000
         L     @07,VS184                                           0780 02460000
         ST    @07,VSRC15                                          0780 02461000
*                           ELSE                                   0781 02462000
*                             IF WKSCRSTS(WKSCRLP)='08'X THEN/* RACF    02463000
*                                      SECUR CHK             @OZ13519*/ 02464000
         B     @RC00779                                            0781 02465000
@RF00779 LR    @07,WKSCRLP                                         0781 02466000
         MH    @07,@CH00127                                        0781 02467000
         LA    @03,WKSCRSTS-12(@07)                                0781 02468000
         CLI   0(@03),X'08'                                        0781 02469000
         BNE   @RF00781                                            0781 02470000
*                               VSRC15=VS102;/* SET ERROR CODE     0782 02471000
*                                                            @OZ13519*/ 02472000
         L     @07,VS102                                           0782 02473000
         ST    @07,VSRC15                                          0782 02474000
*                             ELSE                                 0783 02475000
*                               ;   /*                       @OZ09410*/ 02476000
@RF00781 DS    0H                                                  0784 02477000
*                   ELSE                                           0784 02478000
*                     ;             /*                       @OZ09410*/ 02479000
@RF00772 DS    0H                                                  0785 02480000
*                 END;              /*                       @ZA01269*/ 02481000
*                                                                  0785 02482000
@RC00772 BCTR  WKSCRLP,0                                           0785 02483000
@DE00771 LTR   WKSCRLP,WKSCRLP                                     0785 02484000
         BP    @DL00771                                            0785 02485000
@DC00771 DS    0H                                                  0786 02486000
*                 /***************************************************/ 02487000
*                 /*                                                 */ 02488000
*                 /* LOCATE ADDITIONAL VCB'S FOR SCRATCH             */ 02489000
*                 /*                                                 */ 02490000
*                 /***************************************************/ 02491000
*                                                                  0786 02492000
*                 IF WKNXTTTR=HEX3ZERO/* IF TTR OF 0         @ZA01269*/ 02493000
*                     |WKVOLNUM=1   /* OR SINGLE VOLUME      @ZA01269*/ 02494000
*                     |VSRC15¬=ZEROPTR/* ERROR CODE THEN     @OZ09410*/ 02495000
*                   THEN            /* STOP LOOP             @ZA01269*/ 02496000
         CLC   WKNXTTTR(3),HEX3ZERO                                0786 02497000
         BE    @RT00786                                            0786 02498000
         CLC   WKVOLNUM(2),@CH00064                                0786 02499000
         BE    @RT00786                                            0786 02500000
         CLC   VSRC15(4),ZEROPTR                                   0786 02501000
         BE    @RF00786                                            0786 02502000
@RT00786 DS    0H                                                  0787 02503000
*                   I=1;            /* SET I TO STOP LOOP            */ 02504000
         LA    I,1                                                 0787 02505000
*                 ELSE              /* GET NEXT BLOCK                */ 02506000
*                   DO;                                            0788 02507000
         B     @RC00786                                            0788 02508000
@RF00786 DS    0H                                                  0789 02509000
*                     SAVEI=I;      /* SAVE I AROUND CALL            */ 02510000
         ST    I,SAVEI                                             0789 02511000
*                     CALL LOCTTR;  /* LOCATE NEXT VCB               */ 02512000
         BAL   @14,LOCTTR                                          0790 02513000
*                     IF OSRC15¬=0 THEN                            0791 02514000
         L     @07,OSRC15                                          0791 02515000
         LTR   @07,@07                                             0791 02516000
         BZ    @RF00791                                            0791 02517000
*                       DO;                                        0792 02518000
*                         VSRC15=VS28;/* SET NONLOC IO               */ 02519000
         L     @07,VS28                                            0793 02520000
         ST    @07,VSRC15                                          0793 02521000
*                         SAVEI=1;  /* STOP LOOP                     */ 02522000
         MVC   SAVEI(4),@CF00064                                   0794 02523000
*                       END;                                       0795 02524000
*                     ELSE                                         0796 02525000
*                       ;                                          0796 02526000
@RF00791 DS    0H                                                  0797 02527000
*                     I=SAVEI;      /* RESET I                       */ 02528000
         L     I,SAVEI                                             0797 02529000
*                   END;                                           0798 02530000
*               END;                                               0799 02531000
@RC00786 AL    I,@CF03010                                          0799 02532000
@DE00759 LTR   I,I                                                 0799 02533000
         BP    @DL00759                                            0799 02534000
*             END;                                                 0800 02535000
*           ELSE                                                   0801 02536000
*             ;                                                    0801 02537000
@RF00744 DS    0H                                                  0802 02538000
*         END;                                                     0802 02539000
*       RFY                                                        0803 02540000
*         I UNRSTD;                                                0803 02541000
@RC00736 DS    0H                                                  0804 02542000
*       IF VSRC15¬=0 THEN                                          0804 02543000
         L     @15,VSRC15                                          0804 02544000
         LTR   @15,@15                                             0804 02545000
         BNZ   @RT00804                                            0804 02546000
*         ;                         /* ERROR HAS OCCURRED.EXIT       */ 02547000
*       ELSE                                                       0806 02548000
*         DO;                                                      0806 02549000
*           WKOPTNS=UCATOPTN;       /* INDICATE UCATDX               */ 02550000
         MVC   WKOPTNS(4),UCATOPTN                                 0807 02551000
*           WKPTR1=ADDR(LOCDSN);    /* POINT TO DSNAME               */ 02552000
         LA    @15,LOCDSN                                          0808 02553000
         ST    @15,WKPTR1                                          0808 02554000
*           WKCVOLP=ZEROPTR;        /* ZERO CVOL POINTER             */ 02555000
         L     @15,ZEROPTR                                         0809 02556000
         ST    @15,WKCVOLP                                         0809 02557000
*           WKBLANK(1:1)=WKDSN;     /* SAVE DSN CHAR         @OZ19136*/ 02558000
         MVC   WKBLANK(1),WKDSN                                    0810 02559000
*           WKDSN(1:1)=' ';         /* SET LOCDSN EOD        @OZ19136*/ 02560000
         MVI   WKDSN,C' '                                          0811 02561000
*           RFY                                                    0812 02562000
*             R1 RSTD;                                             0812 02563000
*           R1=ADDR(WKCAMLST);      /* POINT TO PARM LIST            */ 02564000
         LA    R1,WKCAMLST                                         0813 02565000
*           GEN(ST    R13,XSAVAREA+4 POINT TO PREVIOUS SA);        0814 02566000
         ST    R13,XSAVAREA+4 POINT TO PREVIOUS SA                      02567000
*           GEN(LA    R13,XSAVAREA   R13=NEW SAVEAREA );           0815 02568000
         LA    R13,XSAVAREA   R13=NEW SAVEAREA                          02569000
*           CALL IGG0CLCC;          /* GO UNCATALOG DS               */ 02570000
         L     @15,@CV00058                                        0816 02571000
         BALR  @14,@15                                             0816 02572000
*           GEN(L     R13,XSAVAREA+4 RESET R13 );                  0817 02573000
         L     R13,XSAVAREA+4 RESET R13                                 02574000
*           RFY                                                    0818 02575000
*            (R0,                                                  0818 02576000
*             R15) RSTD;                                           0818 02577000
*           GEN(STM   R15,R0,OSRC15 SAVE RETURN CODES);            0819 02578000
         STM   R15,R0,OSRC15 SAVE RETURN CODES                          02579000
*           WKDSN(1:1)=WKBLANK;     /* RESTORE DSN CHAR      @OZ19136*/ 02580000
         MVC   WKDSN(1),WKBLANK                                    0820 02581000
*           WKBLANK(1:1)=' ';       /* RESTORE BLANK         @OZ19136*/ 02582000
         MVI   WKBLANK,C' '                                        0821 02583000
*           RFY                                                    0822 02584000
*            (R0,                                                  0822 02585000
*             R1,                                                  0822 02586000
*             R15) UNRSTD;                                         0822 02587000
*           IF OSRC15¬=0 THEN                                      0823 02588000
         L     @15,OSRC15                                          0823 02589000
         LTR   @15,@15                                             0823 02590000
         BZ    @RF00823                                            0823 02591000
*             DO;                                                  0824 02592000
*               IF OSRC15=OS28 THEN                                0825 02593000
         C     @15,OS28                                            0825 02594000
         BNE   @RF00825                                            0825 02595000
*                 VSRC15=VS28;      /* NONLOCATE IO ERR              */ 02596000
         L     @15,VS28                                            0826 02597000
         ST    @15,VSRC15                                          0826 02598000
*               ELSE                                               0827 02599000
*                 VSRC15=VS8;       /* SET NO DATASET                */ 02600000
         B     @RC00825                                            0827 02601000
@RF00825 L     @15,VS8                                             0827 02602000
         ST    @15,VSRC15                                          0827 02603000
*               IF OSRC15=VS8&OSRC0=VS56 THEN/*              @Z40CSRC   02604000
*                                      IF SECURITY VIOLATION @Z40CSRC*/ 02605000
@RC00825 CLC   OSRC15(4),VS8                                       0828 02606000
         BNE   @RF00828                                            0828 02607000
         L     @15,VS56                                            0828 02608000
         C     @15,OSRC0                                           0828 02609000
         BNE   @RF00828                                            0828 02610000
*                 VSRC15=VS56;      /* SET SEC VIOL RC       @Z40CSRC*/ 02611000
         ST    @15,VSRC15                                          0829 02612000
*               ELSE                                               0830 02613000
*                 ;                 /* SECURITY OK           @Z40CSRC*/ 02614000
@RF00828 DS    0H                                                  0831 02615000
*             END;                                                 0831 02616000
*           ELSE                                                   0832 02617000
*             DO;                                                  0832 02618000
         B     @RC00823                                            0832 02619000
@RF00823 DS    0H                                                  0833 02620000
*               CALL GETUSERK;      /* GET INTO USER'S KEY           */ 02621000
         BAL   @14,GETUSERK                                        0833 02622000
*               RFY                                                0834 02623000
*                 R3 RSTD;                                         0834 02624000
*               R3=WALEN2;          /* GET USED LENGTH               */ 02625000
         L     @01,CTGPLPTR                                        0835 02626000
         L     @01,CTGWKA(,@01)                                    0835 02627000
         LH    R3,WALEN2(,@01)                                     0835 02628000
         N     R3,@CF03065                                         0835 02629000
*               IF R3=0 THEN                                       0836 02630000
         LTR   R3,R3                                               0836 02631000
         BNZ   @RF00836                                            0836 02632000
*                 R3=4;             /* SET DEFAULT LENGTH            */ 02633000
         LA    R3,4                                                0837 02634000
*               ELSE                                               0838 02635000
*                 ;                                                0838 02636000
@RF00836 DS    0H                                                  0839 02637000
*               WALEN2=R3+45;       /* ADD DS NAME LENGTH            */ 02638000
         L     @02,CTGPLPTR                                        0839 02639000
         L     @02,CTGWKA(,@02)                                    0839 02640000
         LA    @15,45                                              0839 02641000
         ALR   @15,R3                                              0839 02642000
         STH   @15,WALEN2(,@02)                                    0839 02643000
*               RFY                                                0840 02644000
*                 R3 UNRSTD;                                       0840 02645000
*               CALL GETSVCK;       /* GET INTO SVC KEY              */ 02646000
         BAL   @14,GETSVCK                                         0841 02647000
*               IF WALEN2<=WALEN1 THEN                             0842 02648000
         L     @01,CTGPLPTR                                        0842 02649000
         L     @15,CTGWKA(,@01)                                    0842 02650000
         CLC   WALEN2(2,@15),WALEN1(@15)                           0842 02651000
         BH    @RF00842                                            0842 02652000
*                 DO;                                              0843 02653000
*                   CALL GETUSERK;  /* GET IN USERKEY                */ 02654000
         BAL   @14,GETUSERK                                        0844 02655000
*                   RFY                                            0845 02656000
*                     R3 RSTD;                                     0845 02657000
*                   R3=CTGWKA+(WALEN2-45);                         0846 02658000
         L     @01,CTGPLPTR                                        0846 02659000
         L     @15,CTGWKA(,@01)                                    0846 02660000
         LH    R3,WALEN2(,@15)                                     0846 02661000
         N     R3,@CF03065                                         0846 02662000
         SL    R3,@CF03003                                         0846 02663000
         ALR   @15,R3                                              0846 02664000
         LR    R3,@15                                              0846 02665000
*                   R3->WATYPE='A';                                0847 02666000
         MVI   WATYPE(R3),C'A'                                     0847 02667000
*                   R3->WADSNAME=WKDSN;                            0848 02668000
         MVC   WADSNAME(44,R3),WKDSN                               0848 02669000
*                   RFY                                            0849 02670000
*                     R3 UNRSTD;                                   0849 02671000
*                   CALL GETSVCK;   /* GET INTO SVCKEY               */ 02672000
         BAL   @14,GETSVCK                                         0850 02673000
*                 END;                                             0851 02674000
*               ELSE                                               0852 02675000
*                 VSRC15=40;        /* SET TOO SMALL ERR             */ 02676000
         B     @RC00842                                            0852 02677000
@RF00842 MVC   VSRC15(4),@CF02833                                  0852 02678000
*             END;                                                 0853 02679000
*         END;                                                     0854 02680000
*     END;                                                         0855 02681000
*   END DELETE;                                                    0856 02682000
@EL00013 L     @13,4(,@13)                                         0856 02683000
@EF00013 DS    0H                                                  0856 02684000
@ER00013 L     @14,12(,@13)                                        0856 02685000
         BR    @14                                                 0856 02686000
*                                                                  0857 02687000
*   /*****************************************************************/ 02688000
*   /*                                                               */ 02689000
*   /* LOCNAME IS CALLED TO ISSUE AN OS LOCATE BY NAME               */ 02690000
*   /*                                                               */ 02691000
*   /*****************************************************************/ 02692000
*                                                                  0857 02693000
*LOCNAME:                                                          0857 02694000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0857 02695000
LOCNAME  ST    @14,12(,@13)                                        0857 02696000
         ST    @13,@SA00014+4                                      0857 02697000
         LA    @14,@SA00014                                        0857 02698000
         LR    @13,@14                                             0857 02699000
*   LOCDSN=WKDSN;                   /* SAVE DATASET NAME             */ 02700000
         MVC   LOCDSN(44),WKDSN                                    0858 02701000
*   IF CTGSUPLT='1'B THEN           /* SUPERLOCATE?          @ZA04937*/ 02702000
         L     @15,CTGPLPTR                                        0859 02703000
         TM    CTGSUPLT(@15),B'00010000'                           0859 02704000
         BNO   @RF00859                                            0859 02705000
*     IF CTGGDGL='1'B THEN          /* BASE SUPPLIED?        @ZA04937*/ 02706000
         TM    CTGGDGL(@15),B'00001000'                            0860 02707000
         BNO   @RF00860                                            0860 02708000
*       WKOPTNS=SLOPTN2;            /* SET SLOC + BASE SUPPLIED    0861 02709000
*                                                            @ZA04937*/ 02710000
         MVC   WKOPTNS(4),SLOPTN2                                  0861 02711000
*     ELSE                                                         0862 02712000
*       WKOPTNS=SLOPTN1;            /* SET SUPERLOC ONLY     @ZA04937*/ 02713000
         B     @RC00860                                            0862 02714000
@RF00860 MVC   WKOPTNS(4),SLOPTN1                                  0862 02715000
*   ELSE                                                           0863 02716000
*     WKOPTNS=LOCNMOPT;             /* INDICATE LOCATE BY NAME       */ 02717000
         B     @RC00859                                            0863 02718000
@RF00859 MVC   WKOPTNS(4),LOCNMOPT                                 0863 02719000
*   WKPTR1=ADDR(LOCDSN);            /* POINT TO DATASET NAME         */ 02720000
@RC00859 LA    @15,LOCDSN                                          0864 02721000
         ST    @15,WKPTR1                                          0864 02722000
*   WKCVOLP=ZEROPTR;                /* ZERO CVOL POINTER             */ 02723000
         L     @15,ZEROPTR                                         0865 02724000
         ST    @15,WKCVOLP                                         0865 02725000
*   WKPTR3=ADDR(WKVOLST);           /* POINT TO WORKAREA             */ 02726000
         LA    @15,WKVOLST                                         0866 02727000
         ST    @15,WKPTR3                                          0866 02728000
*   WKBLANK(1:1)=WKDSN;             /* SAVE DSN CHAR         @OZ08030*/ 02729000
         MVC   WKBLANK(1),WKDSN                                    0867 02730000
*   WKDSN(1:1)=' ';                 /* SET LOCDSN EOD        @OZ08030*/ 02731000
         MVI   WKDSN,C' '                                          0868 02732000
*   RFY                                                            0869 02733000
*     R1 RSTD;                                                     0869 02734000
*   R1=ADDR(WKCAMLST);              /* POINT TO PARM LIST            */ 02735000
         LA    R1,WKCAMLST                                         0870 02736000
*   GEN(ST    R13,XSAVAREA+4  POINT TO PREVIOUS SAVEAREA);         0871 02737000
         ST    R13,XSAVAREA+4  POINT TO PREVIOUS SAVEAREA               02738000
*   GEN(LA    R13,XSAVAREA    R13=NEW SAVEAREA ADDRESS);           0872 02739000
         LA    R13,XSAVAREA    R13=NEW SAVEAREA ADDRESS                 02740000
*   CALL IGG0CLCC;                  /* GO LOCATE BY NAME             */ 02741000
         L     @15,@CV00058                                        0873 02742000
         BALR  @14,@15                                             0873 02743000
*   GEN(L     R13,XSAVAREA+4  RESET R13 TO PREVIOUS SAVEAREA);     0874 02744000
         L     R13,XSAVAREA+4  RESET R13 TO PREVIOUS SAVEAREA           02745000
*   RFY                                                            0875 02746000
*    (R0,                                                          0875 02747000
*     R15) RSTD;                                                   0875 02748000
*   GEN(STM   R15,R0,OSRC15 SAVE RETURN CODES);                    0876 02749000
         STM   R15,R0,OSRC15 SAVE RETURN CODES                          02750000
*   WKDSN(1:1)=WKBLANK;             /* RESTORE DSN CHAR      @OZ08030*/ 02751000
         MVC   WKDSN(1),WKBLANK                                    0877 02752000
*   WKBLANK(1:1)=' ';               /* RESTORE BLANK         @OZ08030*/ 02753000
         MVI   WKBLANK,C' '                                        0878 02754000
*   IF OSRC15=OS8                   /*                       @YM05181*/ 02755000
*     THEN                                                         0879 02756000
         CLC   OSRC15(4),OS8                                       0879 02757000
         BNE   @RF00879                                            0879 02758000
*     WKVOLNUM=WKVOLNUM&&WKVOLNUM;  /*                       @YM05181*/ 02759000
         LH    @14,WKVOLNUM                                        0880 02760000
         LR    @09,@14                                             0880 02761000
         XR    @09,@14                                             0880 02762000
         STH   @09,WKVOLNUM                                        0880 02763000
*   ELSE                                                           0881 02764000
*     ;                             /*                       @YM05181*/ 02765000
@RF00879 DS    0H                                                  0882 02766000
*   RFY                                                            0882 02767000
*    (R0,                                                          0882 02768000
*     R1,                                                          0882 02769000
*     R15) UNRSTD;                                                 0882 02770000
*   INCORESW=ON;                    /* INDICATE BLOCK LOCATED BY   0883 02771000
*                                      LOCATE-BY-NAME                */ 02772000
         MVC   INCORESW(1),ON                                      0883 02773000
*   END LOCNAME;                                                   0884 02774000
@EL00014 L     @13,4(,@13)                                         0884 02775000
@EF00014 DS    0H                                                  0884 02776000
@ER00014 L     @14,12(,@13)                                        0884 02777000
         BR    @14                                                 0884 02778000
*                                                                  0885 02779000
*   /*****************************************************************/ 02780000
*   /*                                                               */ 02781000
*   /* LOCTTR IS CALLED TO ISSUE AN OS LOCATE BY TTR.                */ 02782000
*   /*                                                               */ 02783000
*   /*****************************************************************/ 02784000
*                                                                  0885 02785000
*LOCTTR:                                                           0885 02786000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0885 02787000
LOCTTR   ST    @14,12(,@13)                                        0885 02788000
         ST    @13,@SA00015+4                                      0885 02789000
         LA    @14,@SA00015                                        0885 02790000
         LR    @13,@14                                             0885 02791000
*   WKOPTNS=LOCTTROP;               /* INDICATE LOCATE BY TTR        */ 02792000
         MVC   WKOPTNS(4),LOCTTROP                                 0886 02793000
*   WKPTR1=ADDR(WKDSCBT);           /* POINT TO TTR AREA             */ 02794000
         LA    @15,WKDSCBT                                         0887 02795000
         ST    @15,WKPTR1                                          0887 02796000
*   WKCVOLP=ZEROPTR;                /* ZERO CVOL POINTER             */ 02797000
         L     @15,ZEROPTR                                         0888 02798000
         ST    @15,WKCVOLP                                         0888 02799000
*   WKPTR3=ADDR(WKVOLST);           /* POINT TO WORKAREA             */ 02800000
         LA    @15,WKVOLST                                         0889 02801000
         ST    @15,WKPTR3                                          0889 02802000
*   WKDSCBT=WKNXTTTR;               /* MOVE TTR TO WORKAREA          */ 02803000
         MVC   WKDSCBT(3),WKNXTTTR                                 0890 02804000
*   RFY                                                            0891 02805000
*     R1 RSTD;                                                     0891 02806000
*   R1=ADDR(WKCAMLST);              /* POINT TO PARM LIST            */ 02807000
         LA    R1,WKCAMLST                                         0892 02808000
*   GEN(ST    R13,XSAVAREA+4  POINT TO PREVIOUS SAVEAREA);         0893 02809000
         ST    R13,XSAVAREA+4  POINT TO PREVIOUS SAVEAREA               02810000
*   GEN(LA    R13,XSAVAREA    R13=NEW SAVEAREA ADDRESS);           0894 02811000
         LA    R13,XSAVAREA    R13=NEW SAVEAREA ADDRESS                 02812000
*   CALL IGG0CLCC;                  /* GO LOCATE BY TTR              */ 02813000
         L     @15,@CV00058                                        0895 02814000
         BALR  @14,@15                                             0895 02815000
*   GEN(L     R13,XSAVAREA+4  RESET R13 TO PREVIOUS SAVEAREA);     0896 02816000
         L     R13,XSAVAREA+4  RESET R13 TO PREVIOUS SAVEAREA           02817000
*   RFY                                                            0897 02818000
*    (R0,                                                          0897 02819000
*     R15) RSTD;                                                   0897 02820000
*   GEN(STM   R15,R0,OSRC15 SAVE RETURN CODES);                    0898 02821000
         STM   R15,R0,OSRC15 SAVE RETURN CODES                          02822000
*   RFY                                                            0899 02823000
*    (R0,                                                          0899 02824000
*     R1,                                                          0899 02825000
*     R15) UNRSTD;                                                 0899 02826000
*   INCORESW=OFF;                   /* INDICATE BLOCK LOCATED BY   0900 02827000
*                                      LOCATE-BY-TTR                 */ 02828000
         MVC   INCORESW(1),OFF                                     0900 02829000
*   END LOCTTR;                                                    0901 02830000
@EL00015 L     @13,4(,@13)                                         0901 02831000
@EF00015 DS    0H                                                  0901 02832000
@ER00015 L     @14,12(,@13)                                        0901 02833000
         BR    @14                                                 0901 02834000
*                                                                  0902 02835000
*   /*****************************************************************/ 02836000
*   /*                                                               */ 02837000
*   /* SLVOLST IS CALLED FROM SUPERLOCATE PROCESSORS TO FILL THE     */ 02838000
*   /* USER'S VOLUME LIST AREA WITH VOL-SERS, DEVICE TYPES AND FILE  */ 02839000
*   /* SEQUENCE NUMBERS.                                             */ 02840000
*   /*                                                               */ 02841000
*   /*****************************************************************/ 02842000
*                                                                  0902 02843000
*SLVOLST:                                                          0902 02844000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0902 02845000
SLVOLST  ST    @14,12(,@13)                                        0902 02846000
         ST    @13,@SA00016+4                                      0902 02847000
         LA    @14,@SA00016                                        0902 02848000
         LR    @13,@14                                             0902 02849000
*   CALL GETUSERK;                  /* GET INTO USER'S KEY           */ 02850000
         BAL   @14,GETUSERK                                        0903 02851000
*   CTGWAUCT=0;                     /* MINIMUM UNIT COUNT = 0        */ 02852000
         L     @01,CTGPLPTR                                        0904 02853000
         L     @01,CTGWKA(,@01)                                    0904 02854000
         SLR   @00,@00                                             0904 02855000
         STH   @00,CTGWAUCT(,@01)                                  0904 02856000
*   CALL GETSVCK;                   /* GET INTO SVC KEY              */ 02857000
         BAL   @14,GETSVCK                                         0905 02858000
*   IF WKVOLNUM=0 THEN                                             0906 02859000
*                                                                  0906 02860000
         LH    @15,WKVOLNUM                                        0906 02861000
         LTR   @15,@15                                             0906 02862000
         BNZ   @RF00906                                            0906 02863000
*     /***************************************************************/ 02864000
*     /*                                                             */ 02865000
*     /* NUMBER OF VOLUMES CATALOGED IS ZERO,SPECIAL HANDLE          */ 02866000
*     /*                                                             */ 02867000
*     /***************************************************************/ 02868000
*                                                                  0907 02869000
*     DO;                                                          0907 02870000
*       CALL GETUSERK;              /* GET INTO USER'S KEY           */ 02871000
         BAL   @14,GETUSERK                                        0908 02872000
*       CTGWAVCT=0;                 /* SET NUMBER OF VOLUMES TO 0    */ 02873000
         L     @01,CTGPLPTR                                        0909 02874000
         L     @01,CTGWKA(,@01)                                    0909 02875000
         SLR   @00,@00                                             0909 02876000
         STH   @00,CTGWAVCT(,@01)                                  0909 02877000
*       CALL GETSVCK;               /* GET INTO SVC KEY              */ 02878000
         BAL   @14,GETSVCK                                         0910 02879000
*     END;                                                         0911 02880000
*   ELSE                                                           0912 02881000
*                                                                  0912 02882000
*     /***************************************************************/ 02883000
*     /*                                                             */ 02884000
*     /* NUMBER OF VOLUMES CATALOGED IS NOT ZERO                     */ 02885000
*     /*                                                             */ 02886000
*     /***************************************************************/ 02887000
*                                                                  0912 02888000
*     DO;                                                          0912 02889000
         B     @RC00906                                            0912 02890000
@RF00906 DS    0H                                                  0913 02891000
*       IF WKVOLNUM=1 THEN                                         0913 02892000
         CLC   WKVOLNUM(2),@CH00064                                0913 02893000
         BNE   @RF00913                                            0913 02894000
*         IF CTGWALV<15 THEN                                       0914 02895000
         L     @01,CTGPLPTR                                        0914 02896000
         L     @01,CTGWKA(,@01)                                    0914 02897000
         LH    @15,CTGWALV(,@01)                                   0914 02898000
         C     @15,@CF00188                                        0914 02899000
         BNL   @RF00914                                            0914 02900000
*           DO;                     /* VOLIST AREA TOO SMALL TO HOLD    02901000
*                                      1 ENTRY                       */ 02902000
*             CALL GETUSERK;        /* GET INTO USER'S KEY           */ 02903000
         BAL   @14,GETUSERK                                        0916 02904000
*             CTGFDBK=15;           /* SET NEEDED SIZE TO 15         */ 02905000
         L     @15,CTGPLPTR                                        0917 02906000
         MVC   CTGFDBK(2,@15),@CH00188                             0917 02907000
*             CTGWAVCT=0;           /* SET NUMBER OF VOLUMES=0       */ 02908000
         L     @01,CTGWKA(,@15)                                    0918 02909000
         SLR   @00,@00                                             0918 02910000
         STH   @00,CTGWAVCT(,@01)                                  0918 02911000
*             CALL GETSVCK;         /* GET INTO SVC KEY              */ 02912000
         BAL   @14,GETSVCK                                         0919 02913000
*             VSRC15=VS40;          /* SET TOOSMALL INDICATOR        */ 02914000
         L     @15,VS40                                            0920 02915000
         ST    @15,VSRC15                                          0920 02916000
*           END;                                                   0921 02917000
*         ELSE                                                     0922 02918000
*           DO;                     /* WORK AREA OK TO HOLD 1 ENTRY  */ 02919000
         B     @RC00914                                            0922 02920000
@RF00914 DS    0H                                                  0923 02921000
*             CALL GETUSERK;        /* GET INTO USER'S KEY           */ 02922000
         BAL   @14,GETUSERK                                        0923 02923000
*             CTGWAVCT=1;           /* SET NUMBER OF VOLUMES=1       */ 02924000
         L     @01,CTGPLPTR                                        0924 02925000
         L     @15,CTGWKA(,@01)                                    0924 02926000
         MVC   CTGWAVCT(2,@15),@CH00064                            0924 02927000
*             RFY                                                  0925 02928000
*               K RSTD;                                            0925 02929000
*             K=ADDR(WKVOLST)+2;    /* GET ADDRESS OF ENTRY          */ 02930000
         LA    K,WKVOLST                                           0926 02931000
         AL    K,@CF00105                                          0926 02932000
*             CTGVLVOL(1)=K->SVOLSER;/* MOVE VOLSER                  */ 02933000
         L     @09,CTGWAVL(,@15)                                   0927 02934000
         MVC   CTGVLVOL(6,@09),SVOLSER(K)                          0927 02935000
*             CTGVLDEV(1)=K->SDEVTYPE;/* MOVE DEV.TYPE               */ 02936000
         MVC   CTGVLDEV(4,@09),SDEVTYPE(K)                         0928 02937000
*             CTGVLSEQ(1)=K->SFSEQNO;/* MOVE FILE S.N.               */ 02938000
         LH    @15,SFSEQNO(,K)                                     0929 02939000
         STH   @15,CTGVLSEQ(,@09)                                  0929 02940000
*             CTGVLTTR=WKNXTTTR;    /* MOVE DSCB TTR                 */ 02941000
         MVC   CTGVLTTR(3,@09),WKNXTTTR                            0930 02942000
*             RFY                                                  0931 02943000
*               K UNRSTD;                                          0931 02944000
*             CALL GETSVCK;         /* GET INTO SVC KEY              */ 02945000
         BAL   @14,GETSVCK                                         0932 02946000
*           END;                                                   0933 02947000
*       ELSE                                                       0934 02948000
*         IF(WKVOLNUM*12)>CTGWALV THEN                             0934 02949000
         B     @RC00913                                            0934 02950000
@RF00913 LH    @15,WKVOLNUM                                        0934 02951000
         MH    @15,@CH00127                                        0934 02952000
         L     @01,CTGPLPTR                                        0934 02953000
         L     @01,CTGWKA(,@01)                                    0934 02954000
         CH    @15,CTGWALV(,@01)                                   0934 02955000
         BNH   @RF00934                                            0934 02956000
*           DO;                     /* VOLIST TOO SMALL TO HOLD ALL     02957000
*                                      ENTRIES                       */ 02958000
*             CALL GETUSERK;        /* GET INTO USER'S KEY           */ 02959000
         BAL   @14,GETUSERK                                        0936 02960000
*             CTGFDBK=WKVOLNUM*12;  /* SET REQUIRED SIZE             */ 02961000
         L     @15,CTGPLPTR                                        0937 02962000
         LH    @14,WKVOLNUM                                        0937 02963000
         MH    @14,@CH00127                                        0937 02964000
         STH   @14,CTGFDBK(,@15)                                   0937 02965000
*             CTGWAVCT=0;           /* SET NUMBER OF VOLUMES TO 0    */ 02966000
         L     @01,CTGWKA(,@15)                                    0938 02967000
         SLR   @00,@00                                             0938 02968000
         STH   @00,CTGWAVCT(,@01)                                  0938 02969000
*             CALL GETSVCK;         /* GET INTO SVC KEY              */ 02970000
         BAL   @14,GETSVCK                                         0939 02971000
*             VSRC15=VS40;          /* SET TOO SMALL INDICATOR       */ 02972000
         L     @15,VS40                                            0940 02973000
         ST    @15,VSRC15                                          0940 02974000
*           END;                                                   0941 02975000
*         ELSE                                                     0942 02976000
*           DO;                     /* VOLIST BIG ENOUGH FOR ALL   0942 02977000
*                                      ENTRIES                       */ 02978000
         B     @RC00934                                            0942 02979000
@RF00934 DS    0H                                                  0943 02980000
*             RFY                                                  0943 02981000
*              (I,                                                 0943 02982000
*               J,                                                 0943 02983000
*               K) RSTD;                                           0943 02984000
*             CALL GETUSERK;        /* GET INTO USER'S KEY           */ 02985000
         BAL   @14,GETUSERK                                        0944 02986000
*             CTGWAVCT=WKVOLNUM;    /* SET VOLUME COUNT              */ 02987000
         L     @09,CTGPLPTR                                        0945 02988000
         L     @09,CTGWKA(,@09)                                    0945 02989000
         LH    @15,WKVOLNUM                                        0945 02990000
         STH   @15,CTGWAVCT(,@09)                                  0945 02991000
*             CALL GETSVCK;         /* GET INTO SVC KEY              */ 02992000
         BAL   @14,GETSVCK                                         0946 02993000
*             SAVEI=CTGWAVL;        /* GET ADDRESS OF VOLUMELIST     */ 02994000
         L     @09,CTGPLPTR                                        0947 02995000
         L     @09,CTGWKA(,@09)                                    0947 02996000
         L     @09,CTGWAVL(,@09)                                   0947 02997000
         ST    @09,SAVEI                                           0947 02998000
*             DO WHILE(WKNXTTTR¬='FFFFFF'X);                       0948 02999000
         B     @DE00948                                            0948 03000000
@DL00948 DS    0H                                                  0949 03001000
*               IF WKVOLNUM<20 THEN                                0949 03002000
         LH    @09,WKVOLNUM                                        0949 03003000
         C     @09,@CF02082                                        0949 03004000
         BNL   @RF00949                                            0949 03005000
*                 LIMIT=WKVOLNUM;                                  0950 03006000
         ST    @09,LIMIT                                           0950 03007000
*               ELSE                                               0951 03008000
*                 LIMIT=20;                                        0951 03009000
         B     @RC00949                                            0951 03010000
@RF00949 MVC   LIMIT(4),@CF02082                                   0951 03011000
*               CALL GETUSERK;      /* GET INTO USER'S KEY           */ 03012000
@RC00949 BAL   @14,GETUSERK                                        0952 03013000
*               I=SAVEI;            /* INIT I FOR DO LOOP            */ 03014000
         L     I,SAVEI                                             0953 03015000
*               K=ADDR(WKVOLST)+2;  /* SET START ADDRESS             */ 03016000
         LA    K,WKVOLST                                           0954 03017000
         AL    K,@CF00105                                          0954 03018000
*               DO J=1 TO LIMIT;                                   0955 03019000
         LA    J,1                                                 0955 03020000
         B     @DE00955                                            0955 03021000
@DL00955 DS    0H                                                  0956 03022000
*                 I->MVLVOL=K->SVOLSER;/* MOVE VOLSER                */ 03023000
         MVC   MVLVOL(6,I),SVOLSER(K)                              0956 03024000
*                 I->MVLDEV=K->SDEVTYPE;/* MOVE DEV.TP               */ 03025000
         MVC   MVLDEV(4,I),SDEVTYPE(K)                             0957 03026000
*                 I->MVLSEQ=K->SFSEQNO;/* MOVE FILE SN               */ 03027000
         LH    @09,SFSEQNO(,K)                                     0958 03028000
         STH   @09,MVLSEQ(,I)                                      0958 03029000
*                 I=I+12;           /* BUMP POINTER                  */ 03030000
         LA    @09,12                                              0959 03031000
         ALR   I,@09                                               0959 03032000
*                 K=K+12;           /* BUMP POINTER                  */ 03033000
         ALR   K,@09                                               0960 03034000
*               END;                                               0961 03035000
         AL    J,@CF00064                                          0961 03036000
@DE00955 C     J,LIMIT                                             0961 03037000
         BNH   @DL00955                                            0961 03038000
*               CALL GETSVCK;       /* GET INTO SVC KEY              */ 03039000
         BAL   @14,GETSVCK                                         0962 03040000
*               SAVEI=SAVEI+240;    /* INCREMENT SAVEI               */ 03041000
         LA    @09,240                                             0963 03042000
         AL    @09,SAVEI                                           0963 03043000
         ST    @09,SAVEI                                           0963 03044000
*               IF WKNXTTTR=HEX3ZERO THEN                          0964 03045000
         CLC   WKNXTTTR(3),HEX3ZERO                                0964 03046000
         BNE   @RF00964                                            0964 03047000
*                 WKNXTTTR='FFFFFF'X;/* LAST BLOCK SET DO STOP       */ 03048000
         MVC   WKNXTTTR(3),@CB03026                                0965 03049000
*               ELSE                                               0966 03050000
*                 DO;               /* SET UP AND LOCATE NEXT BLOCK  */ 03051000
         B     @RC00964                                            0966 03052000
@RF00964 DS    0H                                                  0967 03053000
*                   CALL LOCTTR;    /* LOCATE NEXT BLOCK             */ 03054000
         BAL   @14,LOCTTR                                          0967 03055000
*                   IF OSRC15¬=0 THEN                              0968 03056000
         L     @09,OSRC15                                          0968 03057000
         LTR   @09,@09                                             0968 03058000
         BZ    @RF00968                                            0968 03059000
*                     DO;                                          0969 03060000
*                       VSRC15=VS24;/* SET IO ERROR                  */ 03061000
         L     @09,VS24                                            0970 03062000
         ST    @09,VSRC15                                          0970 03063000
*                       WKNXTTTR='FFFFFF'X;/* STOPLOOP               */ 03064000
         MVC   WKNXTTTR(3),@CB03026                                0971 03065000
*                     END;                                         0972 03066000
*                   ELSE                                           0973 03067000
*                     ;             /* BLOCK FOUND CONTINUE          */ 03068000
@RF00968 DS    0H                                                  0974 03069000
*                 END;                                             0974 03070000
*             END;                                                 0975 03071000
@RC00964 DS    0H                                                  0975 03072000
@DE00948 CLC   WKNXTTTR(3),@CB03026                                0975 03073000
         BNE   @DL00948                                            0975 03074000
*             RFY                                                  0976 03075000
*              (I,                                                 0976 03076000
*               J,                                                 0976 03077000
*               K) UNRSTD;                                         0976 03078000
*           END;                                                   0977 03079000
*     END;                                                         0978 03080000
*   END SLVOLST;                                                   0979 03081000
@EL00016 L     @13,4(,@13)                                         0979 03082000
@EF00016 DS    0H                                                  0979 03083000
@ER00016 L     @14,12(,@13)                                        0979 03084000
         BR    @14                                                 0979 03085000
*                                                                  0980 03086000
*   /*****************************************************************/ 03087000
*   /*                                                               */ 03088000
*   /* VLOC IS CALLED TO PROCESS A VSAM LOCATE OR AMS LISTCAT        */ 03089000
*   /*                                                               */ 03090000
*   /*****************************************************************/ 03091000
*                                                                  0980 03092000
*VLOC:                                                             0980 03093000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           0980 03094000
VLOC     ST    @14,12(,@13)                                        0980 03095000
         ST    @13,@SA00017+4                                      0980 03096000
         LA    @14,@SA00017                                        0980 03097000
         LR    @13,@14                                             0980 03098000
*   WKDSN=CPLDSN;                   /* SAVE DATASET NAME             */ 03099000
         L     @15,CTGPLPTR                                        0981 03100000
         L     @01,CTGENT(,@15)                                    0981 03101000
         MVC   WKDSN(44),CPLDSN(@01)                               0981 03102000
*   IF WALEN2=0 THEN                                               0982 03103000
         L     @01,CTGWKA(,@15)                                    0982 03104000
         LH    @15,WALEN2(,@01)                                    0982 03105000
         N     @15,@CF03065                                        0982 03106000
         LTR   @15,@15                                             0982 03107000
         BNZ   @RF00982                                            0982 03108000
*     DO;                           /* SET DEFAULT LENGTH FOR WORK 0983 03109000
*                                      AREA                          */ 03110000
*       CALL GETUSERK;              /* GET INTO USER'S KEY           */ 03111000
         BAL   @14,GETUSERK                                        0984 03112000
*       WALEN2=4;                   /* SET DEFAULT LENGTH            */ 03113000
         L     @01,CTGPLPTR                                        0985 03114000
         L     @01,CTGWKA(,@01)                                    0985 03115000
         MVC   WALEN2(2,@01),@CH00180                              0985 03116000
*       CALL GETSVCK;               /* GET INTO SVC KEY              */ 03117000
         BAL   @14,GETSVCK                                         0986 03118000
*     END;                                                         0987 03119000
*   ELSE                                                           0988 03120000
*     ;                                                            0988 03121000
@RF00982 DS    0H                                                  0989 03122000
*   CALL LOCNAME;                   /* LOCATE BY NAME                */ 03123000
         BAL   @14,LOCNAME                                         0989 03124000
*   IF CTGFUNC='100'B&CTGCNAME='1'B&CPLCATNM(1:1)=' ' THEN/* @OZ32592*/ 03125000
         L     @15,CTGPLPTR                                        0990 03126000
         TM    CTGFUNC(@15),B'10000000'                            0990 03127000
         BNO   @RF00990                                            0990 03128000
         TM    CTGFUNC(@15),B'01100000'                            0990 03129000
         BNZ   @RF00990                                            0990 03130000
         TM    CTGCNAME(@15),B'00000010'                           0990 03131000
         BNO   @RF00990                                            0990 03132000
         L     @01,CTGCAT(,@15)                                    0990 03133000
         CLI   CPLCATNM(@01),C' '                                  0990 03134000
         BNE   @RF00990                                            0990 03135000
*     DO;                           /* AMS LISTCAT SPECIFIED SO    0991 03136000
*                                      RETURN CATALOG NAME           */ 03137000
*       CALL GETUSERK;              /* GET INTO USERS KEY    @OZ32592*/ 03138000
         BAL   @14,GETUSERK                                        0992 03139000
*       CPLCATNM=WKCATNM;           /* CAT. NAME TO USER     @OZ32592*/ 03140000
         L     @01,CTGPLPTR                                        0993 03141000
         L     @01,CTGCAT(,@01)                                    0993 03142000
         MVC   CPLCATNM(44,@01),WKCATNM                            0993 03143000
*       CALL GETSVCK;               /* GET INTO SVC KEY      @OZ32592*/ 03144000
         BAL   @14,GETSVCK                                         0994 03145000
*     END;                                                         0995 03146000
*   ELSE                                                           0996 03147000
*     ;                                                            0996 03148000
@RF00990 DS    0H                                                  0997 03149000
*   RFY                                                            0997 03150000
*     I RSTD;                                                      0997 03151000
*   IF OSRC15¬=0 THEN                                              0998 03152000
         L     @07,OSRC15                                          0998 03153000
         LTR   @07,@07                                             0998 03154000
         BZ    @RF00998                                            0998 03155000
*     DO;                           /* BAD LOCATE. SET RETURN CODES  */ 03156000
*       IF OSRC15=OS24 THEN                                        1000 03157000
         C     @07,OS24                                            1000 03158000
         BNE   @RF01000                                            1000 03159000
*         VSRC15=VS24;              /* SET LOCATE IO ERROR           */ 03160000
         L     @07,VS24                                            1001 03161000
         ST    @07,VSRC15                                          1001 03162000
*       ELSE                                                       1002 03163000
*         VSRC15=VS8;               /* SET DATASET NOT FOUND         */ 03164000
         B     @RC01000                                            1002 03165000
@RF01000 L     @07,VS8                                             1002 03166000
         ST    @07,VSRC15                                          1002 03167000
*     END;                                                         1003 03168000
*   ELSE                                                           1004 03169000
*     DO I=1 TO CTGNOFLD;           /* PROCESS FPLS                  */ 03170000
         B     @RC00998                                            1004 03171000
@RF00998 LA    I,1                                                 1004 03172000
         B     @DE01004                                            1004 03173000
@DL01004 DS    0H                                                  1005 03174000
*       SAVEI=I;                    /* SAVE INDEX VALUE              */ 03175000
         ST    I,SAVEI                                             1005 03176000
*       CTGFLPTR=CTGFIELD(I);       /* SET FPL ADDRESS               */ 03177000
         LR    @07,I                                               1006 03178000
         SLA   @07,2                                               1006 03179000
         L     @01,CTGPLPTR                                        1006 03180000
         L     @07,CTGFIELD-4(@07,@01)                             1006 03181000
         ST    @07,CTGFLPTR                                        1006 03182000
*       CALL GETUSERK;              /* GET INTO USER'S KEY           */ 03183000
         BAL   @14,GETUSERK                                        1007 03184000
*       CTGFLNG(1)=ZEROPTR;         /* INIT FIELD LENGTH             */ 03185000
         L     @07,ZEROPTR                                         1008 03186000
         L     @15,CTGFLPTR                                        1008 03187000
         ST    @07,CTGFLNG(,@15)                                   1008 03188000
*       CTGFLPT(1)=ZEROPTR;         /* INIT FIELD POINTER            */ 03189000
         ST    @07,CTGFLPT(,@15)                                   1009 03190000
*       CALL GETSVCK;               /* GET INTO SVC KEY              */ 03191000
         BAL   @14,GETSVCK                                         1010 03192000
*       IF CTGFLCHN=0 THEN                                         1011 03193000
         L     @07,CTGFLPTR                                        1011 03194000
         L     @07,CTGFLCHN(,@07)                                  1011 03195000
         LTR   @07,@07                                             1011 03196000
         BNZ   @RF01011                                            1011 03197000
*         DO;                       /* FPL IS NOT CHAINED SO PROCESS */ 03198000
*           IF INCORESW=OFF THEN                                   1013 03199000
         CLC   INCORESW(1),OFF                                     1013 03200000
         BNE   @RF01013                                            1013 03201000
*             DO;                   /* LOCATE BY NAME NEEDED         */ 03202000
*               CALL LOCNAME;       /* LOCATE BY NAME                */ 03203000
         BAL   @14,LOCNAME                                         1015 03204000
*               IF OSRC15¬=0 THEN                                  1016 03205000
         L     @07,OSRC15                                          1016 03206000
         LTR   @07,@07                                             1016 03207000
         BZ    @RF01016                                            1016 03208000
*                 DO;               /* PROCESS BAD LOCATE            */ 03209000
*                   IF OSRC15=OS24 THEN                            1018 03210000
         C     @07,OS24                                            1018 03211000
         BNE   @RF01018                                            1018 03212000
*                     VSRC15=VS24;                                 1019 03213000
         L     @07,VS24                                            1019 03214000
         ST    @07,VSRC15                                          1019 03215000
*                   ELSE                                           1020 03216000
*                     VSRC15=VS8;                                  1020 03217000
         B     @RC01018                                            1020 03218000
@RF01018 L     @07,VS8                                             1020 03219000
         ST    @07,VSRC15                                          1020 03220000
*                 END;                                             1021 03221000
*               ELSE                                               1022 03222000
*                 ;                                                1022 03223000
@RF01016 DS    0H                                                  1023 03224000
*             END;                                                 1023 03225000
*           ELSE                                                   1024 03226000
*             ;                                                    1024 03227000
@RF01013 DS    0H                                                  1025 03228000
*           IF VSRC15=VS24 THEN                                    1025 03229000
@RC01013 CLC   VSRC15(4),VS24                                      1025 03230000
         BNE   @RF01025                                            1025 03231000
*             SAVEI=CTGNOFLD;       /* IO ERROR SO STOP LOOP         */ 03232000
         L     @07,CTGPLPTR                                        1026 03233000
         SLR   @15,@15                                             1026 03234000
         IC    @15,CTGNOFLD(,@07)                                  1026 03235000
         ST    @15,SAVEI                                           1026 03236000
*           ELSE                                                   1027 03237000
*             DO;                   /* ALL OK SO PROCESS FPL         */ 03238000
         B     @RC01025                                            1027 03239000
@RF01025 DS    0H                                                  1028 03240000
*               HOLDFPLN=FPLNAME;   /* SAVE FPL NAME                 */ 03241000
         L     @07,CTGFLPTR                                        1028 03242000
         L     @07,CTGFLDNM(,@07)                                  1028 03243000
         MVC   HOLDFPLN(8),FPLNAME(@07)                            1028 03244000
*               RFY                                                1029 03245000
*                 R3 RSTD;                                         1029 03246000
*               GEN;                                               1030 03247000
         LA    R3,FPLTABLE GET ADDRESS OF FPL LOOKUP TABLE              03248000
VLOC0001 CLC   0(8,R3),ENDTABLE IS THIS THE END OF THE TABLE            03249000
         BE    VLOC0010         YES,EXIT                                03250000
         CLC   0(8,R3),HOLDFPLN IS THIS A SUPPORTED FPL                 03251000
         BE    VLOC0010         YES,EXIT                                03252000
         LA    R3,12(R3)        BUMP TABLE POINTER                      03253000
         B     VLOC0001                                                 03254000
VLOC0010 MVC   ENTCOUNT(4),8(R3) SAVE ENTRY BYTE COUNT                  03255000
VLOC0020 MVC   HOLDFPLN(8),0(R3) SAVE FPLNAME                           03256000
*               RFY                                                1031 03257000
*                 R3 UNRSTD;                                       1031 03258000
*               SAVER4=CTGWKA+WALEN2;/* SAVE DATA PTR                */ 03259000
         L     @07,CTGPLPTR                                        1032 03260000
         L     @07,CTGWKA(,@07)                                    1032 03261000
         LH    @15,WALEN2(,@07)                                    1032 03262000
         N     @15,@CF03065                                        1032 03263000
         ALR   @15,@07                                             1032 03264000
         ST    @15,SAVER4                                          1032 03265000
*               IF HOLDFPLN=ENDTABLE THEN                          1033 03266000
         CLC   HOLDFPLN(8),ENDTABLE                                1033 03267000
         BE    @RT01033                                            1033 03268000
*                 ;                 /* FPLNAME NOT FOUND,SKIP IT     */ 03269000
*               ELSE                                               1035 03270000
*                 DO;                                              1035 03271000
*                   CALL GETUSERK;  /* GET INTO USERKEY              */ 03272000
         BAL   @14,GETUSERK                                        1036 03273000
*                   IF HOLDFPLN='DEVTYP  '|HOLDFPLN='VOLSER  '|HOLDFPLN 03274000
*                       ='FILESEQ '|HOLDFPLN='CATVOL  '            1037 03275000
*                                                                  1037 03276000
*                   /*************************************************/ 03277000
*                   /*                                               */ 03278000
*                   /* CALCULATE REPEATING FIELD FPL DATA LENGTH     */ 03279000
*                   /*                                               */ 03280000
*                   /*************************************************/ 03281000
*                                                                  1037 03282000
*                     THEN                                         1037 03283000
         CLC   HOLDFPLN(8),@CC02864                                1037 03284000
         BE    @RT01037                                            1037 03285000
         CLC   HOLDFPLN(8),@CC02867                                1037 03286000
         BE    @RT01037                                            1037 03287000
         CLC   HOLDFPLN(8),@CC02870                                1037 03288000
         BE    @RT01037                                            1037 03289000
         CLC   HOLDFPLN(8),@CC02876                                1037 03290000
         BNE   @RF01037                                            1037 03291000
@RT01037 DS    0H                                                  1038 03292000
*                     WALEN2=WALEN2+(WKVOLNUM*ENTCOUNT);           1038 03293000
*                                                                  1038 03294000
         L     @07,CTGPLPTR                                        1038 03295000
         L     @07,CTGWKA(,@07)                                    1038 03296000
         L     @15,ENTCOUNT                                        1038 03297000
         MH    @15,WKVOLNUM                                        1038 03298000
         LH    @14,WALEN2(,@07)                                    1038 03299000
         N     @14,@CF03065                                        1038 03300000
         ALR   @15,@14                                             1038 03301000
         STH   @15,WALEN2(,@07)                                    1038 03302000
*                   /*************************************************/ 03303000
*                   /*                                               */ 03304000
*                   /* CALCULATE SINGLE ENTRY FPL DATA LENGTH        */ 03305000
*                   /*                                               */ 03306000
*                   /*************************************************/ 03307000
*                                                                  1039 03308000
*                   ELSE                                           1039 03309000
*                     WALEN2=WALEN2+ENTCOUNT;                      1039 03310000
         B     @RC01037                                            1039 03311000
@RF01037 L     @07,CTGPLPTR                                        1039 03312000
         L     @07,CTGWKA(,@07)                                    1039 03313000
         LH    @15,WALEN2(,@07)                                    1039 03314000
         N     @15,@CF03065                                        1039 03315000
         AL    @15,ENTCOUNT                                        1039 03316000
         STH   @15,WALEN2(,@07)                                    1039 03317000
*                   CALL GETSVCK;   /* GET INTO SVC KEY              */ 03318000
@RC01037 BAL   @14,GETSVCK                                         1040 03319000
*                   IF WALEN2<=WALEN1 THEN                         1041 03320000
         L     @07,CTGPLPTR                                        1041 03321000
         L     @07,CTGWKA(,@07)                                    1041 03322000
         CLC   WALEN2(2,@07),WALEN1(@07)                           1041 03323000
         BH    @RF01041                                            1041 03324000
*                     DO;           /* WORKAREA SIZE OK              */ 03325000
*                       CALL GETUSERK;/* GET USERKEY SET DATA ADDR 1043 03326000
*                                      AND PTR                       */ 03327000
         BAL   @14,GETUSERK                                        1043 03328000
*                       CTGFLNG(1)=(CTGWKA+WALEN2)-SAVER4;         1044 03329000
         L     @07,CTGFLPTR                                        1044 03330000
         L     @15,SAVER4                                          1044 03331000
         L     @01,CTGPLPTR                                        1044 03332000
         L     @14,CTGWKA(,@01)                                    1044 03333000
         LH    @09,WALEN2(,@14)                                    1044 03334000
         N     @09,@CF03065                                        1044 03335000
         ALR   @09,@14                                             1044 03336000
         SLR   @09,@15                                             1044 03337000
         ST    @09,CTGFLNG(,@07)                                   1044 03338000
*                       CTGFLPT(1)=SAVER4;                         1045 03339000
         ST    @15,CTGFLPT(,@07)                                   1045 03340000
*                       CALL GETSVCK;/* GET SVC KEY                  */ 03341000
         BAL   @14,GETSVCK                                         1046 03342000
*                       IF HOLDFPLN='DEVTYP  '|HOLDFPLN='VOLSER  '|     03343000
*                           HOLDFPLN='FILESEQ '|HOLDFPLN='CATVOL  '     03344000
*                         THEN                                     1047 03345000
         CLC   HOLDFPLN(8),@CC02864                                1047 03346000
         BE    @RT01047                                            1047 03347000
         CLC   HOLDFPLN(8),@CC02867                                1047 03348000
         BE    @RT01047                                            1047 03349000
         CLC   HOLDFPLN(8),@CC02870                                1047 03350000
         BE    @RT01047                                            1047 03351000
         CLC   HOLDFPLN(8),@CC02876                                1047 03352000
         BNE   @RF01047                                            1047 03353000
@RT01047 DS    0H                                                  1048 03354000
*                         CALL FPLMV;                              1048 03355000
         BAL   @14,FPLMV                                           1048 03356000
*                       ELSE                                       1049 03357000
*                         IF HOLDFPLN='ENTYPE  ' THEN              1049 03358000
         B     @RC01047                                            1049 03359000
@RF01047 CLC   HOLDFPLN(8),@CC02858                                1049 03360000
         BNE   @RF01049                                            1049 03361000
*                           CALL ENTYPE;                           1050 03362000
         BAL   @14,ENTYPE                                          1050 03363000
*                         ELSE                                     1051 03364000
*                           IF HOLDFPLN='ENTNAME ' THEN            1051 03365000
         B     @RC01049                                            1051 03366000
@RF01049 CLC   HOLDFPLN(8),@CC02861                                1051 03367000
         BNE   @RF01051                                            1051 03368000
*                             CALL ENTNAME;                        1052 03369000
         BAL   @14,ENTNAME                                         1052 03370000
*                           ELSE                                   1053 03371000
*                             IF HOLDFPLN='DSCBTTR ' THEN          1053 03372000
         B     @RC01051                                            1053 03373000
@RF01051 CLC   HOLDFPLN(8),@CC02873                                1053 03374000
         BNE   @RF01053                                            1053 03375000
*                               CALL DSCBTTR;                      1054 03376000
         BAL   @14,DSCBTTR                                         1054 03377000
*                             ELSE                                 1055 03378000
*                               IF HOLDFPLN='DSTYPNAM' THEN        1055 03379000
         B     @RC01053                                            1055 03380000
@RF01053 CLC   HOLDFPLN(8),@CC02879                                1055 03381000
         BNE   @RF01055                                            1055 03382000
*                                 CALL DSTYPNAM;/*           @VS32767*/ 03383000
         BAL   @14,DSTYPNAM                                        1056 03384000
*                               ELSE                               1057 03385000
*                                 IF HOLDFPLN='RELCRA  '/*   @VS34653*/ 03386000
*                                   THEN                           1057 03387000
         B     @RC01055                                            1057 03388000
@RF01055 CLC   HOLDFPLN(8),@CC02891                                1057 03389000
         BNE   @RF01057                                            1057 03390000
*                                   CALL RELCRA;/*           @VS34653*/ 03391000
         BAL   @14,RELCRA                                          1058 03392000
*                                 ELSE                             1059 03393000
*                                   CALL NSUPPORT;/*         @VS32767*/ 03394000
         B     @RC01057                                            1059 03395000
@RF01057 BAL   @14,NSUPPORT                                        1059 03396000
*                     END;                                         1060 03397000
*                   ELSE                                           1061 03398000
*                     VSRC15=VS40;  /* AREA SMALL                    */ 03399000
         B     @RC01041                                            1061 03400000
@RF01041 L     @07,VS40                                            1061 03401000
         ST    @07,VSRC15                                          1061 03402000
*                 END;                                             1062 03403000
*             END;                                                 1063 03404000
*         END;                                                     1064 03405000
*       ELSE                                                       1065 03406000
*         ;                         /* CHAINED FPLS NOT SUPPORTED SO    03407000
*                                      SKIP FPL                      */ 03408000
@RF01011 DS    0H                                                  1066 03409000
*       I=SAVEI;                    /* RESET INDEX                   */ 03410000
@RC01011 L     I,SAVEI                                             1066 03411000
*     END;                                                         1067 03412000
         AL    I,@CF00064                                          1067 03413000
@DE01004 L     @07,CTGPLPTR                                        1067 03414000
         SLR   @15,@15                                             1067 03415000
         IC    @15,CTGNOFLD(,@07)                                  1067 03416000
         CR    I,@15                                               1067 03417000
         BNH   @DL01004                                            1067 03418000
*   RFY                                                            1068 03419000
*     I UNRSTD;                                                    1068 03420000
*   END VLOC;                                                      1069 03421000
@EL00017 L     @13,4(,@13)                                         1069 03422000
@EF00017 DS    0H                                                  1069 03423000
@ER00017 L     @14,12(,@13)                                        1069 03424000
         BR    @14                                                 1069 03425000
*                                                                  1070 03426000
*   /*****************************************************************/ 03427000
*   /*                                                               */ 03428000
*   /* ENTYPE IS CALLED TO PROCESS AN 'ENTYPE' FPL                   */ 03429000
*   /*                                                               */ 03430000
*   /*****************************************************************/ 03431000
*                                                                  1070 03432000
*ENTYPE:                                                           1070 03433000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           1070 03434000
ENTYPE   ST    @14,12(,@13)                                        1070 03435000
         ST    @13,@SA00018+4                                      1070 03436000
         LA    @14,@SA00018                                        1070 03437000
         LR    @13,@14                                             1070 03438000
*   CALL GETUSERK;                  /* GET INTO USER'S KEY           */ 03439000
         BAL   @14,GETUSERK                                        1071 03440000
*   RFY                                                            1072 03441000
*     R4 RSTD;                                                     1072 03442000
*   R4=SAVER4;                      /* GET ADDRESS FOR ENTRY         */ 03443000
         L     R4,SAVER4                                           1073 03444000
*   GEN(MVI   0(R4),C'A');          /* SET ENTRY TYPE-NON VSAM       */ 03445000
         MVI   0(R4),C'A'                                               03446000
*   RFY                                                            1075 03447000
*     R4 UNRSTD;                                                   1075 03448000
*   CALL GETSVCK;                   /* GET INTO SVC KEY              */ 03449000
         BAL   @14,GETSVCK                                         1076 03450000
*   END ENTYPE;                                                    1077 03451000
@EL00018 L     @13,4(,@13)                                         1077 03452000
@EF00018 DS    0H                                                  1077 03453000
@ER00018 L     @14,12(,@13)                                        1077 03454000
         BR    @14                                                 1077 03455000
*                                                                  1078 03456000
*   /*****************************************************************/ 03457000
*   /*                                                               */ 03458000
*   /* ENTNAME IS CALLED TO PROCESS AN 'ENTNAME' FPL                 */ 03459000
*   /*                                                               */ 03460000
*   /*****************************************************************/ 03461000
*                                                                  1078 03462000
*ENTNAME:                                                          1078 03463000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           1078 03464000
ENTNAME  ST    @14,12(,@13)                                        1078 03465000
         ST    @13,@SA00019+4                                      1078 03466000
         LA    @14,@SA00019                                        1078 03467000
         LR    @13,@14                                             1078 03468000
*   CALL GETUSERK;                  /* GET INTO USER'S KEY           */ 03469000
         BAL   @14,GETUSERK                                        1079 03470000
*   RFY                                                            1080 03471000
*     R4 RSTD;                                                     1080 03472000
*   R4=SAVER4;                      /* GET ADDRESS FOR ENTRY         */ 03473000
         L     R4,SAVER4                                           1081 03474000
*   IF CTGFUNC='100'B THEN                                         1082 03475000
         L     @05,CTGPLPTR                                        1082 03476000
         TM    CTGFUNC(@05),B'10000000'                            1082 03477000
         BNO   @RF01082                                            1082 03478000
         TM    CTGFUNC(@05),B'01100000'                            1082 03479000
         BNZ   @RF01082                                            1082 03480000
*     DO;                           /* LISTCAT REQUEST SO RETURN   1083 03481000
*                                      ORIGINAL DSNAME               */ 03482000
*       GEN(MVC   0(44,R4),WKDSN);  /* RETURN DSNAME                 */ 03483000
         MVC   0(44,R4),WKDSN                                           03484000
*     END;                                                         1085 03485000
*   ELSE                                                           1086 03486000
*     DO;                           /* VSAM LOCATE SO RETURN LOCATED    03487000
*                                      NAME                          */ 03488000
         B     @RC01082                                            1086 03489000
@RF01082 DS    0H                                                  1087 03490000
*       GEN(MVC   0(44,R4),LOCDSN); /* RETURN DSNAME                 */ 03491000
         MVC   0(44,R4),LOCDSN                                          03492000
*     END;                                                         1088 03493000
*   RFY                                                            1089 03494000
*     R4 UNRSTD;                                                   1089 03495000
@RC01082 DS    0H                                                  1090 03496000
*   CALL GETSVCK;                   /* GET INTO SVC KEY              */ 03497000
         BAL   @14,GETSVCK                                         1090 03498000
*   END ENTNAME;                                                   1091 03499000
@EL00019 L     @13,4(,@13)                                         1091 03500000
@EF00019 DS    0H                                                  1091 03501000
@ER00019 L     @14,12(,@13)                                        1091 03502000
         BR    @14                                                 1091 03503000
*                                                                  1092 03504000
*   /*****************************************************************/ 03505000
*   /*                                                               */ 03506000
*   /* DSCBTTR IS CALLED TO PROCESS A 'DSCBTTR' FPL                  */ 03507000
*   /*                                                               */ 03508000
*   /*****************************************************************/ 03509000
*                                                                  1092 03510000
*DSCBTTR:                                                          1092 03511000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           1092 03512000
DSCBTTR  ST    @14,12(,@13)                                        1092 03513000
         ST    @13,@SA00020+4                                      1092 03514000
         LA    @14,@SA00020                                        1092 03515000
         LR    @13,@14                                             1092 03516000
*   CALL GETUSERK;                  /* GET INTO USER'S KEY           */ 03517000
         BAL   @14,GETUSERK                                        1093 03518000
*   RFY                                                            1094 03519000
*    (R4,                                                          1094 03520000
*     K) RSTD;                                                     1094 03521000
*   R4=SAVER4;                      /* GET START ADDRESS             */ 03522000
         L     R4,SAVER4                                           1095 03523000
*   IF WKVOLNUM=1 THEN                                             1096 03524000
         CLC   WKVOLNUM(2),@CH00064                                1096 03525000
         BNE   @RF01096                                            1096 03526000
*     DO;                           /* NUMBER OF VOLUMES IS 1 AND HAS   03527000
*                                      A DSCBTTR                     */ 03528000
*       GEN(MVC   0(3,R4),WKNXTTTR);/* MOVE DSCBTTR                  */ 03529000
         MVC   0(3,R4),WKNXTTTR                                         03530000
*     END;                                                         1099 03531000
*   ELSE                                                           1100 03532000
*     DO;                           /* NOT 1 VOLUME SO DSCBTTR NON 1100 03533000
*                                      EXISTANT                      */ 03534000
         B     @RC01096                                            1100 03535000
@RF01096 DS    0H                                                  1101 03536000
*       GEN(MVC   0(3,R4),HEX3ZERO);/* SET DSCBTTR TO 0              */ 03537000
         MVC   0(3,R4),HEX3ZERO                                         03538000
*     END;                                                         1102 03539000
*   R4=R4+3;                        /* BUMP POINTER                  */ 03540000
@RC01096 AL    R4,@CF00091                                         1103 03541000
*   DO K=(WKVOLNUM-1) TO 1 BY-1;    /* SET REST OF TTRS TO ZEROS     */ 03542000
         LH    K,WKVOLNUM                                          1104 03543000
         BCTR  K,0                                                 1104 03544000
         B     @DE01104                                            1104 03545000
@DL01104 DS    0H                                                  1105 03546000
*     GEN(MVC   0(3,R4),HEX3ZERO);  /* MOVE ZEROS TO TTR             */ 03547000
         MVC   0(3,R4),HEX3ZERO                                         03548000
*     GEN(LA    R4,3(R4));          /* BUMP POINTER                  */ 03549000
         LA    R4,3(R4)                                                 03550000
*   END;                                                           1107 03551000
         BCTR  K,0                                                 1107 03552000
@DE01104 LTR   K,K                                                 1107 03553000
         BP    @DL01104                                            1107 03554000
*   RFY                                                            1108 03555000
*    (R4,                                                          1108 03556000
*     K) UNRSTD;                                                   1108 03557000
*   CALL GETSVCK;                   /* GET INTO SVC KEY              */ 03558000
         BAL   @14,GETSVCK                                         1109 03559000
*   END DSCBTTR;                                                   1110 03560000
@EL00020 L     @13,4(,@13)                                         1110 03561000
@EF00020 DS    0H                                                  1110 03562000
@ER00020 L     @14,12(,@13)                                        1110 03563000
         BR    @14                                                 1110 03564000
*                                                                  1111 03565000
*   /*****************************************************************/ 03566000
*   /*                                                               */ 03567000
*   /* FPLMV IS CALLED TO PROCESS THE FOLLOWING REPEATING FIELD      */ 03568000
*   /* FPL'S. DEVTYP, VOLSER, FILESEQ, AND CATVOL                    */ 03569000
*   /*                                                               */ 03570000
*   /*****************************************************************/ 03571000
*                                                                  1111 03572000
*FPLMV:                                                            1111 03573000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           1111 03574000
FPLMV    ST    @14,12(,@13)                                        1111 03575000
         ST    @13,@SA00021+4                                      1111 03576000
         LA    @14,@SA00021                                        1111 03577000
         LR    @13,@14                                             1111 03578000
*   RFY                                                            1112 03579000
*    (R1,                                                          1112 03580000
*     R4,                                                          1112 03581000
*     R6,                                                          1112 03582000
*     K) RSTD;                                                     1112 03583000
*   SAVER1=1;                       /* INIT RELREPNO COUNTER         */ 03584000
         LA    @09,1                                               1113 03585000
         ST    @09,SAVER1                                          1113 03586000
*   LIMIT=1;                        /* SET LIMIT TO NON ZERO         */ 03587000
         ST    @09,LIMIT                                           1114 03588000
*   DO WHILE(LIMIT¬=0);                                            1115 03589000
         B     @DE01115                                            1115 03590000
@DL01115 DS    0H                                                  1116 03591000
*     IF WKVOLNUM<20 THEN                                          1116 03592000
         LH    @09,WKVOLNUM                                        1116 03593000
         C     @09,@CF02082                                        1116 03594000
         BNL   @RF01116                                            1116 03595000
*       LIMIT=WKVOLNUM;                                            1117 03596000
         ST    @09,LIMIT                                           1117 03597000
*     ELSE                                                         1118 03598000
*       LIMIT=20;                                                  1118 03599000
         B     @RC01116                                            1118 03600000
@RF01116 MVC   LIMIT(4),@CF02082                                   1118 03601000
*     CALL GETUSERK;                /* GET INTO USER'S KEY           */ 03602000
@RC01116 BAL   @14,GETUSERK                                        1119 03603000
*     R1=SAVER1;                    /* RESET RELREPNO COUNTER        */ 03604000
         L     R1,SAVER1                                           1120 03605000
*     R4=SAVER4;                    /* RESET R4 POINTER              */ 03606000
         L     R4,SAVER4                                           1121 03607000
*     K=ADDR(WKVOLST)+2;            /* K=ADDR OF VOLIST ENTRY        */ 03608000
         LA    K,WKVOLST                                           1122 03609000
         AL    K,@CF00105                                          1122 03610000
*     DO R6=1 TO LIMIT;                                            1123 03611000
         LA    R6,1                                                1123 03612000
         B     @DE01123                                            1123 03613000
@DL01123 DS    0H                                                  1124 03614000
*       IF HOLDFPLN='DEVTYP  ' THEN                                1124 03615000
         CLC   HOLDFPLN(8),@CC02864                                1124 03616000
         BNE   @RF01124                                            1124 03617000
*         DO;                                                      1125 03618000
*           GEN(MVC   0(4,R4),0(K));/* MOVE DEVICE TYPE              */ 03619000
         MVC   0(4,R4),0(K)                                             03620000
*         END;                                                     1127 03621000
*       ELSE                                                       1128 03622000
*         IF HOLDFPLN='VOLSER  ' THEN                              1128 03623000
         B     @RC01124                                            1128 03624000
@RF01124 CLC   HOLDFPLN(8),@CC02867                                1128 03625000
         BNE   @RF01128                                            1128 03626000
*           DO;                                                    1129 03627000
*             GEN(MVC   0(6,R4),4(K));/* MOVE VOLSER                 */ 03628000
         MVC   0(6,R4),4(K)                                             03629000
*           END;                                                   1131 03630000
*         ELSE                                                     1132 03631000
*           IF HOLDFPLN='FILESEQ ' THEN                            1132 03632000
         B     @RC01128                                            1132 03633000
@RF01128 CLC   HOLDFPLN(8),@CC02870                                1132 03634000
         BNE   @RF01132                                            1132 03635000
*             DO;                                                  1133 03636000
*               GEN(MVC   0(2,R4),10(K));/* MOVE FILE SEQ.NO.        */ 03637000
         MVC   0(2,R4),10(K)                                            03638000
*             END;                                                 1135 03639000
*           ELSE                                                   1136 03640000
*             DO;                   /* PROCESS CATVOL                */ 03641000
         B     @RC01132                                            1136 03642000
@RF01132 DS    0H                                                  1137 03643000
*               GEN(STH   R1,0(R4));/* MOVE RELREPNO                 */ 03644000
         STH   R1,0(R4)                                                 03645000
*               GEN(MVC   2(4,R4),0(K));/* MOVE DEVICE TYPE          */ 03646000
         MVC   2(4,R4),0(K)                                             03647000
*               GEN(MVC   6(6,R4),4(K));/* MOVE VOLSER               */ 03648000
         MVC   6(6,R4),4(K)                                             03649000
*               GEN(MVC   12(2,R4),10(K));/* MOVE FILESEQ NO         */ 03650000
         MVC   12(2,R4),10(K)                                           03651000
*               GEN(MVI   14(R4),X'FF');/* DEFAULT VOLFLG            */ 03652000
         MVI   14(R4),X'FF'                                             03653000
*             END;                                                 1142 03654000
*       GEN(LA    R1,1(R1));        /* BUMP RELREPNO COUNTER         */ 03655000
@RC01132 DS    0H                                                  1143 03656000
@RC01128 DS    0H                                                  1143 03657000
@RC01124 DS    0H                                                  1143 03658000
         LA    R1,1(R1)                                                 03659000
*       GEN(A     R4,ENTCOUNT);     /* BUMP POINTER SAVE             */ 03660000
         A     R4,ENTCOUNT                                              03661000
*       GEN(LA    K,12(K));         /* BUMP POINTER                  */ 03662000
         LA    K,12(K)                                                  03663000
*     END;                                                         1146 03664000
         AL    R6,@CF00064                                         1146 03665000
@DE01123 C     R6,LIMIT                                            1146 03666000
         BNH   @DL01123                                            1146 03667000
*     CALL GETSVCK;                 /* GET INTO SVC KEY              */ 03668000
         BAL   @14,GETSVCK                                         1147 03669000
*     SAVER1=SAVER1+20;             /* BUMP RELREPNO SAVE            */ 03670000
         LA    @09,20                                              1148 03671000
         L     @07,SAVER1                                          1148 03672000
         ALR   @07,@09                                             1148 03673000
         ST    @07,SAVER1                                          1148 03674000
*     SAVER4=SAVER4+(ENTCOUNT*20);  /* BUMP POINTER                  */ 03675000
         LR    @03,@09                                             1149 03676000
         M     @02,ENTCOUNT                                        1149 03677000
         AL    @03,SAVER4                                          1149 03678000
         ST    @03,SAVER4                                          1149 03679000
*     IF WKNXTTTR=HEX3ZERO|WKVOLNUM=1/*                      @YM07777*/ 03680000
*       THEN                                                       1150 03681000
         CLC   WKNXTTTR(3),HEX3ZERO                                1150 03682000
         BE    @RT01150                                            1150 03683000
         CLC   WKVOLNUM(2),@CH00064                                1150 03684000
         BNE   @RF01150                                            1150 03685000
@RT01150 DS    0H                                                  1151 03686000
*       LIMIT=0;                    /* NO MORE BLOCKS,STOP LOOP      */ 03687000
         SLR   @09,@09                                             1151 03688000
         ST    @09,LIMIT                                           1151 03689000
*     ELSE                                                         1152 03690000
*       DO;                                                        1152 03691000
         B     @RC01150                                            1152 03692000
@RF01150 DS    0H                                                  1153 03693000
*         CALL LOCTTR;              /* GO GET NEXT BLOCK             */ 03694000
         BAL   @14,LOCTTR                                          1153 03695000
*         IF OSRC15¬=0 THEN                                        1154 03696000
         SLR   @09,@09                                             1154 03697000
         C     @09,OSRC15                                          1154 03698000
         BE    @RF01154                                            1154 03699000
*           DO;                     /* IO ERROR,SET RETURN CODE,STOP    03700000
*                                      LOOP                          */ 03701000
*             VSRC15=VS24;          /* SET IO ERROR CODE             */ 03702000
         L     @07,VS24                                            1156 03703000
         ST    @07,VSRC15                                          1156 03704000
*             LIMIT=0;              /* STOP LOOP                     */ 03705000
         ST    @09,LIMIT                                           1157 03706000
*           END;                                                   1158 03707000
*         ELSE                                                     1159 03708000
*           ;                                                      1159 03709000
@RF01154 DS    0H                                                  1160 03710000
*       END;                                                       1160 03711000
*   END;                                                           1161 03712000
@RC01150 DS    0H                                                  1161 03713000
@DE01115 L     @09,LIMIT                                           1161 03714000
         LTR   @09,@09                                             1161 03715000
         BNZ   @DL01115                                            1161 03716000
*   RFY                                                            1162 03717000
*    (R1,                                                          1162 03718000
*     R4,                                                          1162 03719000
*     R6,                                                          1162 03720000
*     K) UNRSTD;                                                   1162 03721000
*   END FPLMV;                                                     1163 03722000
@EL00021 L     @13,4(,@13)                                         1163 03723000
@EF00021 DS    0H                                                  1163 03724000
@ER00021 L     @14,12(,@13)                                        1163 03725000
         BR    @14                                                 1163 03726000
*                                                                  1164 03727000
*   /*****************************************************************/ 03728000
*   /*                                                               */ 03729000
*   /* DSTYPNAM IS CALLED TO PROCESS AN 'DSTYPNAM' FPL               */ 03730000
*   /*                                                               */ 03731000
*   /*****************************************************************/ 03732000
*                                                                  1164 03733000
*DSTYPNAM:                                                         1164 03734000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));                           1164 03735000
DSTYPNAM ST    @14,12(,@13)                                        1164 03736000
         ST    @13,@SA00022+4                                      1164 03737000
         LA    @14,@SA00022                                        1164 03738000
         LR    @13,@14                                             1164 03739000
*   CALL GETUSERK;                  /* GET INTO USER'S KEY           */ 03740000
         BAL   @14,GETUSERK                                        1165 03741000
*   RFY                                                            1166 03742000
*     R4 RSTD;                                                     1166 03743000
*   R4=SAVER4;                      /* GET START ADDRESS             */ 03744000
         L     R4,SAVER4                                           1167 03745000
*   GEN(MVI   0(R4),C'A');          /* SET ENTRY TYPE-NON VSAM       */ 03746000
         MVI   0(R4),C'A'                                               03747000
*   GEN(MVC   1(3,R4),EIGHTXFF);    /* DEFAULT ENTIDNO               */ 03748000
         MVC   1(3,R4),EIGHTXFF                                         03749000
*   RFY                                                            1170 03750000
*     R4 UNRSTD;                                                   1170 03751000
*   CALL GETSVCK;                   /* GET INTO SVC KEY              */ 03752000
         BAL   @14,GETSVCK                                         1171 03753000
*   END DSTYPNAM;                                                  1172 03754000
@EL00022 L     @13,4(,@13)                                         1172 03755000
@EF00022 DS    0H                                                  1172 03756000
@ER00022 L     @14,12(,@13)                                        1172 03757000
         BR    @14                                                 1172 03758000
*                                                                  1173 03759000
*   /*****************************************************************/ 03760000
*   /*                                                               */ 03761000
*   /* RELCRA IS CALLED TO PROCESS THE COMBINATION           @VS34653*/ 03762000
*   /* FPL 'RELCRA' CONSISTING OF RELEASE INDICATOR,         @VS34653*/ 03763000
*   /* CATALOG RECOVERY AREA (CRA) VOLUME SERIAL,            @VS34653*/ 03764000
*   /* CRA CI NUMBER, AND CRA VOLUME DEVICE TYPE.            @VS34653*/ 03765000
*   /*                                                               */ 03766000
*   /*****************************************************************/ 03767000
*                                                                  1173 03768000
*RELCRA:                                                           1173 03769000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));/*                   @VS34653*/ 03770000
RELCRA   ST    @14,12(,@13)                                        1173 03771000
         ST    @13,@SA00023+4                                      1173 03772000
         LA    @14,@SA00023                                        1173 03773000
         LR    @13,@14                                             1173 03774000
*   CALL GETUSERK;                  /* GET INTO USER'S KEY   @VS34653*/ 03775000
         BAL   @14,GETUSERK                                        1174 03776000
*   RFY                                                            1175 03777000
*    (R4,                                                          1175 03778000
*     R5,                                                          1175 03779000
*     R6,                                                          1175 03780000
*     R7) RSTD;                     /*                       @VS34653*/ 03781000
*   R4=SAVER4;                      /* GET START ADDRESS     @VS34653*/ 03782000
         L     R4,SAVER4                                           1176 03783000
*   R5=ENTCOUNT;                    /* OBTAIN LENGTH         @VS34653*/ 03784000
         L     R5,ENTCOUNT                                         1177 03785000
*   R7=0;                           /* PAD CHAR TO CLEAR     @VS34653*/ 03786000
         SLR   R7,R7                                               1178 03787000
*   GEN(MVCL R4,R6);                /* RETURN INFO OF ZEROS  @VS34653*/ 03788000
         MVCL R4,R6                                                     03789000
*   RFY                                                            1180 03790000
*    (R4,                                                          1180 03791000
*     R5,                                                          1180 03792000
*     R6,                                                          1180 03793000
*     R7) UNRSTD;                   /*                       @VS34653*/ 03794000
*   CALL GETSVCK;                   /* GET INTO SVC KEY      @VS34653*/ 03795000
         BAL   @14,GETSVCK                                         1181 03796000
*   END RELCRA;                     /*                       @VS34653*/ 03797000
@EL00023 L     @13,4(,@13)                                         1182 03798000
@EF00023 DS    0H                                                  1182 03799000
@ER00023 L     @14,12(,@13)                                        1182 03800000
         BR    @14                                                 1182 03801000
*                                                                  1183 03802000
*   /*****************************************************************/ 03803000
*   /*                                                               */ 03804000
*   /* TEST FOR CALLERS AUTHORIZATION                        @OZ28096*/ 03805000
*   /*                                                               */ 03806000
*   /*****************************************************************/ 03807000
*                                                                  1183 03808000
*CHEKAUTH:                          /*                       @OZ28096*/ 03809000
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               1183 03810000
CHEKAUTH DS    0H                                                  1184 03811000
*   GEN;                                                           1184 03812000
         STM   R14,R3,XSAVAREA+12     SAVE REGS              @OZ27009   03813000
         TESTAUTH FCTN=1,STATE=YES,KEY=YES,BRANCH=YES,RBLEVEL=2         03814000
         L     R14,XSAVAREA+12        RESTORE REG 14         @OZ27009   03815000
         LM    R0,R3,XSAVAREA+20      RESTORE REGS           @OZ27009   03816000
*   END CHEKAUTH;                                                  1185 03817000
@EL00024 DS    0H                                                  1185 03818000
@EF00024 DS    0H                                                  1185 03819000
@ER00024 BR    @14                                                 1185 03820000
*                                                                  1186 03821000
*   /*****************************************************************/ 03822000
*   /*                                                               */ 03823000
*   /* NSUPPORT IS CALLED TO PROCESS AN UNKNOWN FPL          @VS32767*/ 03824000
*   /*                                                               */ 03825000
*   /*****************************************************************/ 03826000
*                                                                  1186 03827000
*NSUPPORT:                                                         1186 03828000
*   PROC OPTIONS(SAVEAREA(16),SAVE(14));/*                   @VS32767*/ 03829000
NSUPPORT ST    @14,12(,@13)                                        1186 03830000
         ST    @13,@SA00025+4                                      1186 03831000
         LA    @14,@SA00025                                        1186 03832000
         LR    @13,@14                                             1186 03833000
*   DCL                                                            1187 03834000
*     NSUPMVC CHAR(6) STATIC LOCAL GENERATED;/* EX MVC               */ 03835000
*   CALL GETUSERK;                  /* GET INTO USER'S KEY   @VS32767*/ 03836000
         BAL   @14,GETUSERK                                        1188 03837000
*   RFY                                                            1189 03838000
*     R4 RSTD;                      /*                       @VS32767*/ 03839000
*   R4=SAVER4;                      /* GET START ADDRESS     @VS32767*/ 03840000
         L     R4,SAVER4                                           1190 03841000
*   GEN;                                                           1191 03842000
*                                                         /*@OZ17948*/  03843000
        L     R1,ENTCOUNT    /* GET LENGTH                  @OZ17948*/  03844000
        LA    R1,0(R1)       /* CLEAR HIGH ORDER BYTE       @OZ17948*/  03845000
        LTR   R1,R1          /* LENGTH ZERO?                @OZ17948*/  03846000
        BZ    NSUP001        /* YES, BR                     @OZ17948*/  03847000
        BCTR  R1,0           /* SET UP FOR MOVE             @OZ17948*/  03848000
        EX    R1,NSUPMVC     /* MOVE IN 'FF'S               @OZ17948*/  03849000
NSUP001 EQU *                                             /*@OZ17948*/  03850000
*   GEN DATA DEFS(NSUPMVC) REFS(EIGHTXFF);                         1192 03851000
*   RFY                                                            1193 03852000
*     R4 UNRSTD;                    /*                       @VS32767*/ 03853000
*   CALL GETSVCK;                   /* GET INTO SVC KEY      @VS32767*/ 03854000
         BAL   @14,GETSVCK                                         1194 03855000
*   END NSUPPORT;                   /*                       @VS32767*/ 03856000
@EL00025 L     @13,4(,@13)                                         1195 03857000
@EF00025 DS    0H                                                  1195 03858000
@ER00025 L     @14,12(,@13)                                        1195 03859000
         BR    @14                                                 1195 03860000
*   END IGG0CLCA                    /*                       @OZ00963*/ 03861000
*                                                                  1196 03862000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 03863000
*/*%INCLUDE SYSLIB  (IEZCTGPL)                                       */ 03864000
*/*%INCLUDE SYSLIB  (IEZCTGWA)                                       */ 03865000
*/*%INCLUDE SYSLIB  (IEZCTGVL)                                       */ 03866000
*/*%INCLUDE SYSLIB  (IEZCTGCV)                                       */ 03867000
*/*%INCLUDE SYSLIB  (IEZCTGFL)                                       */ 03868000
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */ 03869000
*/*%INCLUDE SYSLIB  (CVT     )                                       */ 03870000
*/*%INCLUDE SYSLIB  (IEZJSCB )                                       */ 03871000
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */ 03872000
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */ 03873000
*/*%INCLUDE SYSLIB  (IKJPSCB )                                       */ 03874000
*/*%INCLUDE SYSLIB  (IEFPCCB )                                       */ 03875000
*/*%INCLUDE SYSLIB  (IHARB   )                                       */ 03876000
*/*%INCLUDE SYSLIB  (IKJRB   )                                       */ 03877000
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */ 03878000
*/*%INCLUDE SYSLIB  (IEFTIOT1)                                       */ 03879000
*                                                                  1196 03880000
*       ;                                                          1196 03881000
@EL00001 L     @13,4(,@13)                                         1196 03882000
@EF00001 DS    0H                                                  1196 03883000
@ER00001 BR    @14                                                 1196 03884000
@DATA    DS    0H                                                       03885000
@CH00180 DC    H'4'                                                     03886000
@CH00127 DC    H'12'                                                    03887000
@SM03066 MVC   WKDSN(0),CAMDSN(R3)                                      03888000
@DATD    DSECT                                                          03889000
         DS    0F                                                       03890000
@SA00001 DS    4F                                                       03891000
@SA00008 DS    4F                                                       03892000
@SA00009 DS    4F                                                       03893000
@SA00010 DS    4F                                                       03894000
@SA00011 DS    4F                                                       03895000
@SA00012 DS    4F                                                       03896000
@SA00013 DS    4F                                                       03897000
@SA00017 DS    4F                                                       03898000
@SA00018 DS    4F                                                       03899000
@SA00019 DS    4F                                                       03900000
@SA00021 DS    4F                                                       03901000
@SA00020 DS    4F                                                       03902000
@SA00022 DS    4F                                                       03903000
@SA00016 DS    4F                                                       03904000
@SA00004 DS    4F                                                       03905000
@SA00014 DS    4F                                                       03906000
@SA00015 DS    4F                                                       03907000
@SA00003 DS    4F                                                       03908000
@SA00002 DS    15F                                                      03909000
@SA00023 DS    4F                                                       03910000
@SA00025 DS    4F                                                       03911000
IGG0CLCA CSECT                                                          03912000
         DS    0F                                                       03913000
@CF00064 DC    F'1'                                                     03914000
@CH00064 EQU   @CF00064+2                                               03915000
@CF00105 DC    F'2'                                                     03916000
@CF00091 DC    F'3'                                                     03917000
@CF00188 DC    F'15'                                                    03918000
@CH00188 EQU   @CF00188+2                                               03919000
@CF02082 DC    F'20'                                                    03920000
@CH02082 EQU   @CF02082+2                                               03921000
@CF02418 DC    F'36'                                                    03922000
@CF02833 DC    F'40'                                                    03923000
@CF00206 DC    F'44'                                                    03924000
@CF03003 DC    F'45'                                                    03925000
@CF03010 DC    F'-20'                                                   03926000
@CF02930 DC    XL4'7FFFFFFF'                                            03927000
@CF03065 DC    XL4'0000FFFF'                                            03928000
@DATD    DSECT                                                          03929000
         DS    0D                                                       03930000
OSRC1    DS    F                                                        03931000
@TS00001 DS    CL4                                                      03932000
IGG0CLCA CSECT                                                          03933000
         DS    0F                                                       03934000
@SIZDATD DC    AL1(0)                                                   03935000
         DC    AL3(@ENDDATD-@DATD)                                      03936000
@CV00057 DC    V(IGG0CLCB)                                              03937000
@CV00058 DC    V(IGG0CLCC)                                              03938000
         DS    0D                                                       03939000
ZEROPTR  DC    A(0)                                                     03940000
TWELVE   DC    A(12)                                                    03941000
STCHK    DC    XL4'0000011A'                                            03942000
GL4      DC    A(4)                                                     03943000
VS8      DC    A(8)                                                     03944000
VS24     DC    A(24)                                                    03945000
VS28     DC    A(28)                                                    03946000
VS40     DC    A(40)                                                    03947000
VS44     DC    A(44)                                                    03948000
VS48     DC    A(48)                                                    03949000
VS56     DC    A(56)                                                    03950000
VS68     DC    A(68)                                                    03951000
VS84     DC    A(84)                                                    03952000
VS102    DC    A(102)                                                   03953000
VS164    DC    A(164)                                                   03954000
VS168    DC    A(168)                                                   03955000
VS184    DC    A(184)                                                   03956000
@CC02916 DC    C'SYSCTLG.V'                                             03957000
@CC02991 DC    C'.G0000V00'                                             03958000
@CC02858 DC    C'ENTYPE  '                                              03959000
@CC02861 DC    C'ENTNAME '                                              03960000
@CC02864 DC    C'DEVTYP  '                                              03961000
@CC02867 DC    C'VOLSER  '                                              03962000
@CC02870 DC    C'FILESEQ '                                              03963000
@CC02873 DC    C'DSCBTTR '                                              03964000
@CC02876 DC    C'CATVOL  '                                              03965000
@CC02879 DC    C'DSTYPNAM'                                              03966000
@CC02891 DC    C'RELCRA  '                                              03967000
@CC02996 DC    C'(0) '                                                  03968000
@CB02928 DC    X'000000000000'                                          03969000
@CB03026 DC    X'FFFFFF'                                                03970000
ON       DC    X'FF'                                                    03971000
OFF      DC    X'00'                                                    03972000
OSLOCMSK DC    X'387F8000'                                              03973000
HEX3ZERO DC    X'000000'                                                03974000
SCRPURGE DC    X'41005000'                                              03975000
SCRNOPUR DC    X'41004000'                                              03976000
UCATOPTN DC    X'88040000'                                              03977000
LOCNMOPT DC    X'80000000'                                              03978000
SLOPTN1  DC    X'80000200'                                              03979000
SLOPTN2  DC    X'80000600'                                              03980000
LOCTTROP DC    X'82000000'                                              03981000
EIGHTXFF DC    X'FFFFFFFFFFFFFFFF'                                      03982000
PCQNAM   DC    CL8'SYSZPCCB'                                            03983000
PCRNAM   DC    CL4'PCCB'                                                03984000
SYSDSN   DC    CL8'SYSDSN  '                                            03985000
SYSZOP   DC    CL8'SYSZOPEN'                                            03986000
ACCOPTNS DC    B'0001010010101000'                                      03987000
ACCOPTN1 DC    B'0001000000101000'                                      03988000
FPLTABLE DS    CL156                                                    03989000
         ORG   FPLTABLE                                                 03990000
@NM00156 DC    CL8'ENTYPE  '                                            03991000
@NM00157 DC    F'1'                                                     03992000
@NM00158 DC    CL8'ENTNAME '                                            03993000
@NM00159 DC    F'44'                                                    03994000
@NM00160 DC    CL8'DEVTYP  '                                            03995000
@NM00161 DC    F'4'                                                     03996000
@NM00162 DC    CL8'VOLSER  '                                            03997000
@NM00163 DC    F'6'                                                     03998000
@NM00164 DC    CL8'FILESEQ '                                            03999000
@NM00165 DC    F'2'                                                     04000000
@NM00166 DC    CL8'DSCBTTR '                                            04001000
@NM00167 DC    F'3'                                                     04002000
@NM00168 DC    CL8'CATVOL  '                                            04003000
@NM00169 DC    F'15'                                                    04004000
@NM00170 DC    CL8'DSTYPNAM'                                            04005000
@NM00171 DC    F'4'                                                     04006000
@NM00172 DC    CL8'DSETCRDT'                                            04007000
@NM00173 DC    F'3'                                                     04008000
@NM00174 DC    CL8'DSETEXDT'                                            04009000
@NM00175 DC    F'3'                                                     04010000
@NM00176 DC    CL8'OWNERID '                                            04011000
@NM00177 DC    F'8'                                                     04012000
@NM00178 DC    CL8'RELCRA  '                                            04013000
@NM00179 DC    F'14'                                                    04014000
ENDTABLE DC    CL8'00000000'                                            04015000
@NM00180 DC    F'4'                                                     04016000
         ORG   FPLTABLE+156                                             04017000
FIXAREA  DS    CL100                                                    04018000
         ORG   FIXAREA                                                  04019000
@NM00181 DC    100CL1'Z'                                                04020000
         ORG   FIXAREA+100                                              04021000
RECORD   DS    CL24                                                     04022000
         ORG   RECORD                                                   04023000
MODNM    DC    CL8'IGG0CLCA'                                            04024000
CSECTN   DC    CL8'IGG0CLCA'                                            04025000
FRRID    DC    8X'00'                                                   04026000
         ORG   RECORD+24                                                04027000
SKELHDR  DS    CL43                                                     04028000
         ORG   SKELHDR                                                  04029000
@NM00182 DC    AL1(42+1)                                                04030000
SKELMSG  DC    CL42'SDUMP - IGG0CLCA - CVOL CATALOG MANAGEMENT'         04031000
         ORG   SKELHDR+43                                               04032000
@DATD    DSECT                                                          04033000
         ORG   @DATD+496     FORCE ALIGNMENT FOR DCL ON DOUBLEWORD      04034000
WORKCLCA DS    CL3600        DEFINE WORKAREA                            04035000
IGG0CLCA CSECT                                                          04036000
*                                     /* MACRO LIST FORMS   @Z40CSRC*/  04037000
ENQSYSDS ENQ   (SYSZOP,,S,15,SYSTEM),RET=USE,MF=L ENQ LIST  @Z40CSRC    04038000
ENQDEQML ENQ   (PCQNAM,PCRNAM,S,4,SYSTEM),MF=L ENQ-DEQ PARM LIST        04039000
IGG0CLCA CSECT                                                          04040000
DUMPL    SDUMP SDATA=(PSA,LSQA,RGN,LPA),MF=L                            04041000
IGG0CLCA CSECT                                                          04042000
*                                                         /*@VS32767*/  04043000
NSUPMVC  MVC 0(0,R4),EIGHTXFF                                           04044000
@DATD    DSECT                                                          04045000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                04046000
@ENDDATD EQU   *                                                        04047000
IGG0CLCA CSECT                                                          04048000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       04049000
@01      EQU   01                                                       04050000
@02      EQU   02                                                       04051000
@03      EQU   03                                                       04052000
@04      EQU   04                                                       04053000
@05      EQU   05                                                       04054000
@06      EQU   06                                                       04055000
@07      EQU   07                                                       04056000
@08      EQU   08                                                       04057000
@09      EQU   09                                                       04058000
@10      EQU   10                                                       04059000
@11      EQU   11                                                       04060000
@12      EQU   12                                                       04061000
@13      EQU   13                                                       04062000
@14      EQU   14                                                       04063000
@15      EQU   15                                                       04064000
WKSCRLP  EQU   @02                                                      04065000
DSNLEN   EQU   @06                                                      04066000
R0       EQU   @00                                                      04067000
R1       EQU   @01                                                      04068000
R2       EQU   @02                                                      04069000
GPR02F   EQU   @02                                                      04070000
R3       EQU   @03                                                      04071000
WKREG    EQU   @03                                                      04072000
R4       EQU   @04                                                      04073000
R5       EQU   @05                                                      04074000
R6       EQU   @06                                                      04075000
I        EQU   @06                                                      04076000
R7       EQU   @07                                                      04077000
J        EQU   @07                                                      04078000
K        EQU   @08                                                      04079000
R10      EQU   @10                                                      04080000
R11      EQU   @11                                                      04081000
R12      EQU   @12                                                      04082000
R14      EQU   @14                                                      04083000
R15      EQU   @15                                                      04084000
GPR01P   EQU   @01                                                      04085000
GPR00P   EQU   @00                                                      04086000
GPR14P   EQU   @14                                                      04087000
GPR15P   EQU   @15                                                      04088000
GPR00F   EQU   @00                                                      04089000
GPR02P   EQU   @02                                                      04090000
GPR12F   EQU   @12                                                      04091000
GPR13P   EQU   @13                                                      04092000
R13      EQU   @13                                                      04093000
R8       EQU   @08                                                      04094000
R9       EQU   @09                                                      04095000
PSA      EQU   0                                                        04096000
FLCRNPSW EQU   PSA                                                      04097000
FLCROPSW EQU   PSA+8                                                    04098000
FLCICCW2 EQU   PSA+16                                                   04099000
PSAEEPSW EQU   PSA+132                                                  04100000
PSAESPSW EQU   PSA+136                                                  04101000
FLCSVILC EQU   PSAESPSW+1                                               04102000
PSAEPPSW EQU   PSA+140                                                  04103000
FLCPIILC EQU   PSAEPPSW+1                                               04104000
FLCPICOD EQU   PSAEPPSW+2                                               04105000
PSAPICOD EQU   FLCPICOD+1                                               04106000
FLCTEA   EQU   PSAEPPSW+4                                               04107000
FLCPER   EQU   PSA+152                                                  04108000
FLCMCLA  EQU   PSA+168                                                  04109000
FLCIOEL  EQU   FLCMCLA+4                                                04110000
FLCIOA   EQU   FLCMCLA+16                                               04111000
FLCFSA   EQU   FLCMCLA+80                                               04112000
PSAAOLD  EQU   PSA+548                                                  04113000
PSASUPER EQU   PSA+552                                                  04114000
PSASUP1  EQU   PSASUPER                                                 04115000
PSASUP2  EQU   PSASUPER+1                                               04116000
PSASUP3  EQU   PSASUPER+2                                               04117000
PSASUP4  EQU   PSASUPER+3                                               04118000
PSACLHT  EQU   PSA+640                                                  04119000
PSALKSA  EQU   PSA+696                                                  04120000
PSAHLHI  EQU   PSA+760                                                  04121000
PSADSSFL EQU   PSA+836                                                  04122000
PSADSSF1 EQU   PSADSSFL                                                 04123000
PSADSSF3 EQU   PSADSSFL+2                                               04124000
PSADSSF4 EQU   PSADSSFL+3                                               04125000
PSARSVT  EQU   PSA+896                                                  04126000
CTGPL    EQU   0                                                        04127000
CTGOPTN1 EQU   CTGPL                                                    04128000
CTGCNAME EQU   CTGOPTN1                                                 04129000
CTGGENLD EQU   CTGOPTN1                                                 04130000
CTGOPTN2 EQU   CTGPL+1                                                  04131000
CTGEXT   EQU   CTGOPTN2                                                 04132000
CTGERASE EQU   CTGOPTN2                                                 04133000
CTGSMF   EQU   CTGERASE                                                 04134000
CTGREL   EQU   CTGSMF                                                   04135000
CTGPURG  EQU   CTGOPTN2                                                 04136000
CTGVMNT  EQU   CTGPURG                                                  04137000
CTGRCATN EQU   CTGVMNT                                                  04138000
CTGGTNXT EQU   CTGOPTN2                                                 04139000
CTGSCR   EQU   CTGOPTN2                                                 04140000
CTGOPTN3 EQU   CTGPL+2                                                  04141000
CTGFUNC  EQU   CTGOPTN3                                                 04142000
CTGSUPLT EQU   CTGOPTN3                                                 04143000
CTGGDGL  EQU   CTGOPTN3                                                 04144000
CTGSRH   EQU   CTGOPTN3                                                 04145000
CTGOPTN4 EQU   CTGPL+3                                                  04146000
CTGLBASE EQU   CTGOPTN4                                                 04147000
CTGDOCAT EQU   CTGOPTN4                                                 04148000
CTGTIOT  EQU   CTGOPTN4                                                 04149000
CTGENT   EQU   CTGPL+4                                                  04150000
CTGCAT   EQU   CTGPL+8                                                  04151000
CTGCVOL  EQU   CTGCAT                                                   04152000
CTGWKA   EQU   CTGPL+12                                                 04153000
CTGDSORG EQU   CTGPL+16                                                 04154000
CTGOPTNS EQU   CTGDSORG                                                 04155000
CTGTYPE  EQU   CTGPL+18                                                 04156000
CTGNOFLD EQU   CTGPL+19                                                 04157000
CTGDDNM  EQU   CTGPL+20                                                 04158000
CTGNEWNM EQU   CTGDDNM                                                  04159000
CTGFDBK  EQU   CTGNEWNM                                                 04160000
CTGFBFLG EQU   CTGNEWNM+2                                               04161000
CTGGDGB  EQU   CTGFBFLG                                                 04162000
CTGNGDSN EQU   CTGFBFLG                                                 04163000
CTGJSCB  EQU   CTGPL+24                                                 04164000
CTGFIELD EQU   CTGPL+28                                                 04165000
CTGWA    EQU   0                                                        04166000
CTGWAVL  EQU   CTGWA                                                    04167000
CTGWALV  EQU   CTGWA+4                                                  04168000
CTGWAVCT EQU   CTGWA+6                                                  04169000
CTGWAUCT EQU   CTGWA+8                                                  04170000
CTGWAGCT EQU   CTGWA+10                                                 04171000
CTGWAGB  EQU   CTGWA+12                                                 04172000
CTGVL    EQU   0                                                        04173000
CTGVLVOL EQU   CTGVL                                                    04174000
CTGVLDEV EQU   CTGVL+6                                                  04175000
CTGVLSEQ EQU   CTGVL+10                                                 04176000
CTGVLX   EQU   0                                                        04177000
CTGVLTTR EQU   CTGVLX+12                                                04178000
CTGCV    EQU   0                                                        04179000
CTGCVVOL EQU   CTGCV                                                    04180000
CTGCVDSN EQU   CTGCV+6                                                  04181000
CTGCVCC  EQU   CTGCV+50                                                 04182000
CTGFL    EQU   0                                                        04183000
CTGFLDRE EQU   CTGFL+3                                                  04184000
CTGFLDNM EQU   CTGFL+8                                                  04185000
CTGFLCHN EQU   CTGFL+12                                                 04186000
CTGFLDAT EQU   CTGFL+16                                                 04187000
CTGFLNG  EQU   CTGFLDAT                                                 04188000
CTGFLPT  EQU   CTGFLDAT+4                                               04189000
TCBFIX   EQU   0                                                        04190000
TCBFRS   EQU   TCBFIX                                                   04191000
TCB      EQU   0                                                        04192000
TCBRBP   EQU   TCB                                                      04193000
TCBPIE   EQU   TCB+4                                                    04194000
TCBPMASK EQU   TCBPIE                                                   04195000
TCBTIO   EQU   TCB+12                                                   04196000
TCBCMP   EQU   TCB+16                                                   04197000
TCBCMPF  EQU   TCBCMP                                                   04198000
TCBCPP   EQU   TCBCMPF                                                  04199000
TCBSTCC  EQU   TCBCMPF                                                  04200000
TCBCDBL  EQU   TCBCMPF                                                  04201000
TCBCWTO  EQU   TCBCMPF                                                  04202000
TCBCIND  EQU   TCBCMPF                                                  04203000
TCBCMSG  EQU   TCBCMPF                                                  04204000
TCBTRN   EQU   TCB+20                                                   04205000
TCBABF   EQU   TCBTRN                                                   04206000
TCBMSS   EQU   TCB+24                                                   04207000
TCBPKF   EQU   TCB+28                                                   04208000
TCBFLGS  EQU   TCB+29                                                   04209000
TCBFLGS1 EQU   TCBFLGS                                                  04210000
TCBFLGS2 EQU   TCBFLGS+1                                                04211000
TCBFLGS3 EQU   TCBFLGS+2                                                04212000
TCBFLGS4 EQU   TCBFLGS+3                                                04213000
TCBFLGS5 EQU   TCBFLGS+4                                                04214000
TCBABWF  EQU   TCBFLGS5                                                 04215000
TCBJPQ   EQU   TCB+44                                                   04216000
TCBPURGE EQU   TCBJPQ                                                   04217000
TCBGRS   EQU   TCB+48                                                   04218000
TCBFSA   EQU   TCB+112                                                  04219000
TCBTME   EQU   TCB+120                                                  04220000
TCBJSTCB EQU   TCB+124                                                  04221000
TCBTSFLG EQU   TCB+148                                                  04222000
TCBTSTSK EQU   TCBTSFLG                                                 04223000
TCBSTAB  EQU   TCB+160                                                  04224000
TCBNSTAE EQU   TCBSTAB                                                  04225000
TCBTCT   EQU   TCB+164                                                  04226000
TCBTCTGF EQU   TCBTCT                                                   04227000
TCBSCNDY EQU   TCB+172                                                  04228000
TCBNDSP  EQU   TCBSCNDY                                                 04229000
TCBNDSP1 EQU   TCBNDSP+1                                                04230000
TCBNDSP2 EQU   TCBNDSP+2                                                04231000
TCBNDSP3 EQU   TCBNDSP+3                                                04232000
TCBJSCB  EQU   TCB+180                                                  04233000
TCBRECDE EQU   TCBJSCB                                                  04234000
TCBEXT1  EQU   TCB+196                                                  04235000
TCBBITS  EQU   TCB+200                                                  04236000
TCBNDSP4 EQU   TCBBITS                                                  04237000
TCBNDSP5 EQU   TCBBITS+1                                                04238000
TCBFLGS6 EQU   TCBBITS+2                                                04239000
TCBFLGS7 EQU   TCBBITS+3                                                04240000
TCBDAR   EQU   TCB+204                                                  04241000
TCBDARC  EQU   TCBDAR                                                   04242000
TCBEXT2  EQU   TCB+208                                                  04243000
TCBFOE   EQU   TCB+244                                                  04244000
TCBESTAE EQU   TCB+264                                                  04245000
TCBESTRM EQU   TCBESTAE+1                                               04246000
TCBFBYT1 EQU   TCB+276                                                  04247000
TCBFBYT2 EQU   TCB+277                                                  04248000
TCBRV124 EQU   TCB+278                                                  04249000
TCBRV133 EQU   TCB+279                                                  04250000
TCBXTNT2 EQU   0                                                        04251000
TCBGTF   EQU   TCBXTNT2                                                 04252000
TCBTFLG  EQU   TCBGTF                                                   04253000
TCBRV146 EQU   TCBXTNT2+28                                              04254000
TCBRV155 EQU   TCBXTNT2+29                                              04255000
TCBRV164 EQU   TCBXTNT2+30                                              04256000
TCBRV173 EQU   TCBXTNT2+31                                              04257000
CVTMAP   EQU   0                                                        04258000
CVTDAR   EQU   CVTMAP+72                                                04259000
CVTFLGS1 EQU   CVTDAR                                                   04260000
CVTDCB   EQU   CVTMAP+116                                               04261000
CVTIOQET EQU   CVTMAP+120                                               04262000
CVTIERLC EQU   CVTMAP+144                                               04263000
CVTHEAD  EQU   CVTMAP+160                                               04264000
CVTSV76C EQU   CVTHEAD                                                  04265000
CVTOPTA  EQU   CVTMAP+182                                               04266000
CVTOPTB  EQU   CVTMAP+183                                               04267000
CVTGTF   EQU   CVTMAP+236                                               04268000
CVTGTFST EQU   CVTGTF                                                   04269000
CVTGTFS  EQU   CVTGTFST                                                 04270000
CVTSTATE EQU   CVTGTFST                                                 04271000
CVTTMODE EQU   CVTGTFST                                                 04272000
CVTFORM  EQU   CVTGTFST                                                 04273000
CVTAQAVT EQU   CVTMAP+240                                               04274000
CVTTCMFG EQU   CVTAQAVT                                                 04275000
CVTVOLM2 EQU   CVTMAP+244                                               04276000
CVTTATA  EQU   CVTVOLM2                                                 04277000
CVTTSKS  EQU   CVTTATA                                                  04278000
CVTVOLF2 EQU   CVTTSKS                                                  04279000
CVTTAT   EQU   CVTTATA+1                                                04280000
CVTATER  EQU   CVTMAP+248                                               04281000
CVTEXT1  EQU   CVTMAP+252                                               04282000
CVTPURG  EQU   CVTMAP+260                                               04283000
CVTQMSG  EQU   CVTMAP+268                                               04284000
CVTDMSR  EQU   CVTMAP+272                                               04285000
CVTRSV37 EQU   CVTDMSR                                                  04286000
CVTDMSRF EQU   CVTRSV37                                                 04287000
CVTERPV  EQU   CVTMAP+316                                               04288000
CVTINTLA EQU   CVTMAP+320                                               04289000
CVTAPF   EQU   CVTMAP+324                                               04290000
CVTEXT2  EQU   CVTMAP+328                                               04291000
CVTHJES  EQU   CVTMAP+332                                               04292000
CVTPGSIA EQU   CVTMAP+348                                               04293000
CVTA1F1  EQU   CVTMAP+356                                               04294000
CVTSYSK  EQU   CVTMAP+357                                               04295000
CVTVOLM1 EQU   CVTMAP+380                                               04296000
CVTVOLF1 EQU   CVTVOLM1                                                 04297000
CVTATMCT EQU   CVTMAP+388                                               04298000
CVTXTNT1 EQU   0                                                        04299000
CVTXTNT2 EQU   0                                                        04300000
CVTDSSV  EQU   CVTXTNT2                                                 04301000
CVTFLGBT EQU   CVTXTNT2+5                                               04302000
CVTQID   EQU   CVTXTNT2+24                                              04303000
CVTRV400 EQU   CVTXTNT2+52                                              04304000
CVTRV409 EQU   CVTXTNT2+53                                              04305000
CVTATCVT EQU   CVTXTNT2+64                                              04306000
CVTRV429 EQU   CVTXTNT2+84                                              04307000
CVTRV438 EQU   CVTXTNT2+85                                              04308000
CVTRV457 EQU   CVTXTNT2+112                                             04309000
CVTRV466 EQU   CVTXTNT2+113                                             04310000
CVTFIX   EQU   0                                                        04311000
CVTRELNO EQU   CVTFIX+252                                               04312000
IEZJSCB  EQU   0                                                        04313000
JSCBSEC1 EQU   IEZJSCB+188                                              04314000
JSCHPCE  EQU   JSCBSEC1+4                                               04315000
JSCBPCC  EQU   JSCBSEC1+16                                              04316000
JSCBTCBP EQU   JSCBSEC1+20                                              04317000
JSCBDCB  EQU   JSCBSEC1+36                                              04318000
JSCBOPTS EQU   JSCBSEC1+48                                              04319000
JSCBSWT1 EQU   JSCBSEC1+55                                              04320000
JSCBWTP  EQU   JSCBSEC1+64                                              04321000
JSCBWTFG EQU   JSCBWTP                                                  04322000
JSCBEND1 EQU   IEZJSCB+260                                              04323000
ASCB     EQU   0                                                        04324000
ASCBTSB  EQU   ASCB+60                                                  04325000
ASCBFW1  EQU   ASCB+100                                                 04326000
ASCBRCTF EQU   ASCBFW1+2                                                04327000
ASCBFLG1 EQU   ASCBFW1+3                                                04328000
ASCBDSP1 EQU   ASCB+114                                                 04329000
ASCBFLG2 EQU   ASCB+115                                                 04330000
PSCB     EQU   0                                                        04331000
PSCBATR1 EQU   PSCB+16                                                  04332000
PSCBVMNT EQU   PSCBATR1                                                 04333000
IEFPCCB  EQU   0                                                        04334000
PCCNEXTP EQU   IEFPCCB+4                                                04335000
PCCSTATS EQU   IEFPCCB+12                                               04336000
PCCSTAT1 EQU   PCCSTATS                                                 04337000
PCCACTIV EQU   PCCSTAT1                                                 04338000
PCOSCVOL EQU   PCCSTAT1                                                 04339000
PCCACBP  EQU   IEFPCCB+16                                               04340000
PCCDSNAM EQU   IEFPCCB+28                                               04341000
PCVOLSER EQU   IEFPCCB+116                                              04342000
NONADDR  EQU   0                                                        04343000
RBPRFX   EQU   0                                                        04344000
RBBASIC  EQU   0                                                        04345000
RBEXRTNM EQU   RBBASIC                                                  04346000
RBTMFLD  EQU   RBEXRTNM                                                 04347000
RBSTAB   EQU   RBBASIC+10                                               04348000
XSTAB    EQU   RBSTAB                                                   04349000
RBSTAB1  EQU   XSTAB                                                    04350000
XSTAB1   EQU   RBSTAB1                                                  04351000
RBFTCKPT EQU   XSTAB1                                                   04352000
RBSTAB2  EQU   XSTAB+1                                                  04353000
XSTAB2   EQU   RBSTAB2                                                  04354000
RBTCBNXT EQU   XSTAB2                                                   04355000
RBFACTV  EQU   XSTAB2                                                   04356000
RBFDYN   EQU   XSTAB2                                                   04357000
RBECBWT  EQU   XSTAB2                                                   04358000
RBOPSW   EQU   RBBASIC+16                                               04359000
XRBPSW   EQU   RBOPSW                                                   04360000
RBOPSWB2 EQU   XRBPSW+1                                                 04361000
RBLINK   EQU   RBBASIC+28                                               04362000
XRBLNK   EQU   RBLINK                                                   04363000
RBWCF    EQU   XRBLNK                                                   04364000
RBLINKB  EQU   XRBLNK+1                                                 04365000
RBGRSAVE EQU   RBBASIC+32                                               04366000
XRBREG   EQU   RBGRSAVE                                                 04367000
RBGRS0   EQU   XRBREG                                                   04368000
RBGRS1   EQU   XRBREG+4                                                 04369000
RBGRS2   EQU   XRBREG+8                                                 04370000
RBGRS3   EQU   XRBREG+12                                                04371000
RBGRS4   EQU   XRBREG+16                                                04372000
RBGRS5   EQU   XRBREG+20                                                04373000
RBGRS6   EQU   XRBREG+24                                                04374000
RBGRS7   EQU   XRBREG+28                                                04375000
RBGRS8   EQU   XRBREG+32                                                04376000
RBGRS9   EQU   XRBREG+36                                                04377000
RBGRS10  EQU   XRBREG+40                                                04378000
RBGRS11  EQU   XRBREG+44                                                04379000
RBGRS12  EQU   XRBREG+48                                                04380000
RBGRS13  EQU   XRBREG+52                                                04381000
RBGRS14  EQU   XRBREG+56                                                04382000
RBGRS15  EQU   XRBREG+60                                                04383000
XRBESA   EQU   RBBASIC+96                                               04384000
RBPREFIX EQU   0                                                        04385000
RBRSV019 EQU   RBPREFIX+14                                              04386000
RBRSV028 EQU   RBPREFIX+15                                              04387000
RBRSV041 EQU   RBPREFIX+27                                              04388000
RBRSV054 EQU   RBPREFIX+39                                              04389000
RBRTOPSW EQU   RBPREFIX+40                                              04390000
RBRTPSW2 EQU   RBRTOPSW+8                                               04391000
RBRTICIL EQU   RBRTPSW2                                                 04392000
RBFLAGS1 EQU   RBPREFIX+56                                              04393000
RBINTCDA EQU   RBPREFIX+61                                              04394000
RBSECT   EQU   0                                                        04395000
RBPPSAV  EQU   RBSECT                                                   04396000
@NM00058 EQU   RBSECT+10                                                04397000
@NM00059 EQU   @NM00058                                                 04398000
RBTRSVRB EQU   @NM00059                                                 04399000
@NM00061 EQU   @NM00058+1                                               04400000
RBETXR   EQU   @NM00061                                                 04401000
RBEP     EQU   RBSECT+12                                                04402000
RBPGMQ   EQU   RBSECT+24                                                04403000
@NM00068 EQU   RBSECT+28                                                04404000
IRBEND   EQU   RBSECT+96                                                04405000
@NM00072 EQU   RBSECT+96                                                04406000
RBRSV138 EQU   @NM00072+7                                               04407000
RBRSV150 EQU   RBSECT+167                                               04408000
SDWA     EQU   0                                                        04409000
SDWAFIOB EQU   SDWA+4                                                   04410000
SDWAABCC EQU   SDWAFIOB                                                 04411000
SDWACMPF EQU   SDWAABCC                                                 04412000
SDWAREQ  EQU   SDWACMPF                                                 04413000
SDWACMPC EQU   SDWAABCC+1                                               04414000
SDWACTL1 EQU   SDWA+8                                                   04415000
SDWACMKA EQU   SDWACTL1                                                 04416000
SDWAMWPA EQU   SDWACTL1+1                                               04417000
SDWAPMKA EQU   SDWACTL1+4                                               04418000
SDWACTL2 EQU   SDWA+16                                                  04419000
SDWACMKP EQU   SDWACTL2                                                 04420000
SDWAMWPP EQU   SDWACTL2+1                                               04421000
SDWAPMKP EQU   SDWACTL2+4                                               04422000
SDWAGRSV EQU   SDWA+24                                                  04423000
SDWANAME EQU   SDWA+88                                                  04424000
SDWAEC1  EQU   SDWA+104                                                 04425000
SDWAEMK1 EQU   SDWAEC1                                                  04426000
SDWAMWP1 EQU   SDWAEC1+1                                                04427000
SDWAINT1 EQU   SDWAEC1+2                                                04428000
SDWANXT1 EQU   SDWAEC1+4                                                04429000
SDWAAEC1 EQU   SDWA+112                                                 04430000
SDWAILC1 EQU   SDWAAEC1+1                                               04431000
SDWAINC1 EQU   SDWAAEC1+2                                               04432000
SDWAICD1 EQU   SDWAINC1+1                                               04433000
SDWAEC2  EQU   SDWA+120                                                 04434000
SDWAEMK2 EQU   SDWAEC2                                                  04435000
SDWAMWP2 EQU   SDWAEC2+1                                                04436000
SDWAINT2 EQU   SDWAEC2+2                                                04437000
SDWANXT2 EQU   SDWAEC2+4                                                04438000
SDWAAEC2 EQU   SDWA+128                                                 04439000
SDWAILC2 EQU   SDWAAEC2+1                                               04440000
SDWAINC2 EQU   SDWAAEC2+2                                               04441000
SDWAICD2 EQU   SDWAINC2+1                                               04442000
SDWASRSV EQU   SDWA+136                                                 04443000
SDWAIDNT EQU   SDWA+200                                                 04444000
SDWAMCH  EQU   SDWA+204                                                 04445000
SDWASTCK EQU   SDWAMCH                                                  04446000
SDWAMCHI EQU   SDWAMCH+8                                                04447000
SDWAMCHS EQU   SDWAMCHI                                                 04448000
SDWAMCHD EQU   SDWAMCHI+1                                               04449000
SDWARSR1 EQU   SDWAMCH+12                                               04450000
SDWARSR2 EQU   SDWAMCH+13                                               04451000
SDWAFLGS EQU   SDWA+232                                                 04452000
SDWAERRA EQU   SDWAFLGS                                                 04453000
SDWAERRB EQU   SDWAFLGS+1                                               04454000
SDWAERRC EQU   SDWAFLGS+2                                               04455000
SDWAPERC EQU   SDWAERRC                                                 04456000
SDWAERRD EQU   SDWAFLGS+3                                               04457000
SDWAIOFS EQU   SDWA+238                                                 04458000
SDWACPUA EQU   SDWA+248                                                 04459000
SDWAPARQ EQU   SDWA+252                                                 04460000
SDWARCDE EQU   SDWAPARQ                                                 04461000
SDWAACF2 EQU   SDWAPARQ+1                                               04462000
SDWARCRD EQU   SDWAACF2                                                 04463000
SDWAACF3 EQU   SDWAPARQ+2                                               04464000
SDWAACF4 EQU   SDWAPARQ+3                                               04465000
SDWALKWA EQU   SDWA+256                                                 04466000
SDWALKWS EQU   SDWALKWA                                                 04467000
SDWARECP EQU   SDWA+292                                                 04468000
SDWASNPA EQU   SDWA+320                                                 04469000
SDWADUMP EQU   SDWASNPA                                                 04470000
SDWADPFS EQU   SDWADUMP+1                                               04471000
SDWADDAT EQU   SDWASNPA+4                                               04472000
SDWASDAT EQU   SDWADDAT                                                 04473000
SDWAPDAT EQU   SDWADDAT+2                                               04474000
SDWADPSA EQU   SDWA+328                                                 04475000
SDWADPSL EQU   SDWADPSA                                                 04476000
SDWARA   EQU   SDWA+400                                                 04477000
SDWADPVA EQU   SDWARA+2                                                 04478000
TIOT1    EQU   0                                                        04479000
CAMLSTD  EQU   0                                                        04480000
CAMOPTNS EQU   CAMLSTD                                                  04481000
CAMOPTN1 EQU   CAMOPTNS                                                 04482000
CAMCAT   EQU   CAMOPTN1                                                 04483000
CAMRECAT EQU   CAMOPTN1                                                 04484000
CAMLTTR  EQU   CAMOPTN1                                                 04485000
CAMOPTN2 EQU   CAMOPTNS+1                                               04486000
CAMNOALC EQU   CAMOPTN2                                                 04487000
CAMBLDA  EQU   CAMOPTN2                                                 04488000
CAMLNKX  EQU   CAMOPTN2                                                 04489000
CAMDTTR  EQU   CAMOPTN2                                                 04490000
CAMDLTA  EQU   CAMOPTN2                                                 04491000
CAMOPTN3 EQU   CAMOPTNS+2                                               04492000
CAMDRPX  EQU   CAMOPTN3                                                 04493000
CAMTIOT  EQU   CAMOPTN3                                                 04494000
CAMAM0   EQU   CAMOPTN3                                                 04495000
CAMPTR1  EQU   CAMLSTD+4                                                04496000
CAMPTR3  EQU   CAMLSTD+12                                               04497000
CAMDSCBP EQU   CAMLSTD+16                                               04498000
CAMDSN   EQU   0                                                        04499000
CPLDSN   EQU   0                                                        04500000
CAMVOLST EQU   0                                                        04501000
CAMVOLCT EQU   CAMVOLST                                                 04502000
CAMDSCBT EQU   0                                                        04503000
CAMIDXNM EQU   0                                                        04504000
CAMNEWVL EQU   0                                                        04505000
GLWA     EQU   0                                                        04506000
WALEN1   EQU   GLWA                                                     04507000
WALEN2   EQU   GLWA+2                                                   04508000
GLENTS   EQU   0                                                        04509000
WATYPE   EQU   GLENTS                                                   04510000
WADSNAME EQU   GLENTS+1                                                 04511000
GIPE     EQU   0                                                        04512000
CPLCATNM EQU   0                                                        04513000
FPLNAME  EQU   0                                                        04514000
GGGG     EQU   0                                                        04515000
SVOLENTS EQU   0                                                        04516000
SDEVTYPE EQU   SVOLENTS                                                 04517000
SVOLSER  EQU   SVOLENTS+4                                               04518000
SFSEQNO  EQU   SVOLENTS+10                                              04519000
MVOLENTS EQU   0                                                        04520000
MVLVOL   EQU   MVOLENTS                                                 04521000
MVLDEV   EQU   MVOLENTS+6                                               04522000
MVLSEQ   EQU   MVOLENTS+10                                              04523000
WKSTDNM  EQU   0                                                        04524000
WKUNIQUE EQU   WKSTDNM+8                                                04525000
WKSTDVS  EQU   WKUNIQUE+1                                               04526000
I256C    EQU   0                                                        04527000
I001C    EQU   0                                                        04528000
I008P    EQU   0                                                        04529000
I015F    EQU   0                                                        04530000
I015P    EQU   0                                                        04531000
I031F    EQU   0                                                        04532000
I031P    EQU   0                                                        04533000
WKCATNM  EQU   WORKCLCA+4                                               04534000
WKCATANM EQU   WORKCLCA+48                                              04535000
WKCVOLVS EQU   WORKCLCA+92                                              04536000
CVTPTR   EQU   WORKCLCA+100                                             04537000
TCBPTR   EQU   WORKCLCA+104                                             04538000
VSRC15   EQU   WORKCLCA+112                                             04539000
LIMIT    EQU   WORKCLCA+120                                             04540000
EXITSAV  EQU   WORKCLCA+124                                             04541000
CTGPLPTR EQU   WORKCLCA+128                                             04542000
CTGFLPTR EQU   WORKCLCA+132                                             04543000
CAMPLPTR EQU   WORKCLCA+136                                             04544000
PRMLSTSZ EQU   WORKCLCA+140                                             04545000
WKCAMLST EQU   WORKCLCA+216                                             04546000
WKOPTNS  EQU   WKCAMLST                                                 04547000
WKPTR1   EQU   WKCAMLST+4                                               04548000
WKCVOLP  EQU   WKCAMLST+8                                               04549000
WKPTR3   EQU   WKCAMLST+12                                              04550000
WKDSCBP  EQU   WKCAMLST+16                                              04551000
GIPEPTR  EQU   WORKCLCA+236                                             04552000
PCCBPTR  EQU   WORKCLCA+240                                             04553000
SAVER1   EQU   WORKCLCA+244                                             04554000
SAVER4   EQU   WORKCLCA+252                                             04555000
SAVEI    EQU   WORKCLCA+276                                             04556000
OSRC150  EQU   WORKCLCA+280                                             04557000
OSRC15   EQU   OSRC150                                                  04558000
OSRC0    EQU   OSRC150+4                                                04559000
RELNUM   EQU   WORKCLCA+288                                             04560000
ENTCOUNT EQU   RELNUM                                                   04561000
SLAREA   EQU   WORKCLCA+292                                             04562000
SLGGGG   EQU   SLAREA                                                   04563000
SLCURSIZ EQU   SLAREA+4                                                 04564000
SLFLAGS  EQU   SLAREA+6                                                 04565000
SLGDGF   EQU   SLFLAGS                                                  04566000
LOCDSN   EQU   WORKCLCA+300                                             04567000
WKDSN    EQU   WORKCLCA+344                                             04568000
WKBLANK  EQU   WORKCLCA+388                                             04569000
WKDSCBT  EQU   WORKCLCA+389                                             04570000
KEYTYPE  EQU   WORKCLCA+392                                             04571000
OLDKEY   EQU   WORKCLCA+393                                             04572000
INCORESW EQU   WORKCLCA+394                                             04573000
PCCBSW   EQU   WORKCLCA+395                                             04574000
ENQDEQSW EQU   WORKCLCA+396                                             04575000
HOLDINDX EQU   WORKCLCA+400                                             04576000
HOLDFPLN EQU   HOLDINDX                                                 04577000
HOLDREL  EQU   WORKCLCA+408                                             04578000
WKVOLST  EQU   WORKCLCA+416                                             04579000
WKVOLNUM EQU   WKVOLST                                                  04580000
WKVOLS   EQU   WKVOLST+2                                                04581000
WKVOLLST EQU   WKVOLS                                                   04582000
WKSCRSTS EQU   WKVOLLST+11                                              04583000
WKNXTTTR EQU   WKVOLST+252                                              04584000
@NM00138 EQU   WORKCLCA+684                                             04585000
TRTABLE  EQU   @NM00138                                                 04586000
WKTMPCNM EQU   @NM00138+288                                             04587000
WKCL1ASV EQU   WORKCLCA+3480                                            04588000
WKSHRPRM EQU   WORKCLCA+3552                                            04589000
ACCCBP   EQU   WKSHRPRM                                                 04590000
ACCRWP1  EQU   WKSHRPRM+4                                               04591000
ACCJSCBP EQU   WKSHRPRM+8                                               04592000
ACCCATP1 EQU   WKSHRPRM+12                                              04593000
ACCALSP1 EQU   WKSHRPRM+16                                              04594000
ACCDDNMP EQU   WKSHRPRM+20                                              04595000
ACCRWP2  EQU   WKSHRPRM+24                                              04596000
ACCCATP2 EQU   WKSHRPRM+28                                              04597000
ACCALSP2 EQU   WKSHRPRM+32                                              04598000
ACCRW    EQU   WKSHRPRM+36                                              04599000
ACCRETCD EQU   ACCRW                                                    04600000
ACCCB    EQU   WKSHRPRM+40                                              04601000
ACAC6    EQU   ACCCB                                                    04602000
@NM00005 EQU   CTGDDNM                                                  04603000
CTGPROB  EQU   @NM00005                                                 04604000
CTGREASN EQU   CTGPROB+2                                                04605000
CVTS01   EQU   CVTPGSIA                                                 04606000
CVTLPDIA EQU   CVTS01+12                                                04607000
CVTDIRST EQU   CVTLPDIA                                                 04608000
CVTSLIDA EQU   CVTS01+24                                                04609000
CVTCTLFG EQU   CVTS01+50                                                04610000
CVTRV210 EQU   CVTS01+424                                               04611000
CVTRV219 EQU   CVTS01+425                                               04612000
CVTRV228 EQU   CVTS01+426                                               04613000
CVTRV237 EQU   CVTS01+427                                               04614000
CVTMFRTR EQU   CVTS01+452                                               04615000
CVTRV262 EQU   CVTS01+468                                               04616000
CVTRV271 EQU   CVTS01+469                                               04617000
CVTRV280 EQU   CVTS01+470                                               04618000
CVTRV289 EQU   CVTS01+471                                               04619000
CVTGSDA  EQU   CVTS01+600                                               04620000
JSCBSEC2 EQU   JSCBEND1                                                 04621000
JSCBSEC3 EQU   JSCBEND1                                                 04622000
JSCBJCT  EQU   JSCBSEC3                                                 04623000
JSCBJCTA EQU   JSCBJCT+1                                                04624000
JSCBPSCB EQU   JSCBSEC3+4                                               04625000
JSCBASID EQU   JSCBSEC3+8                                               04626000
JSCBFBYT EQU   JSCBSEC3+10                                              04627000
JSCBJNL  EQU   JSCBSEC3+28                                              04628000
JSCBJJSB EQU   JSCBJNL                                                  04629000
JSCBSUB  EQU   JSCBSEC3+40                                              04630000
JSCSCT   EQU   JSCBSEC3+68                                              04631000
JSCBACT  EQU   JSCBSEC3+88                                              04632000
JSCRSV45 EQU   JSCBSEC3+112                                             04633000
JSCRSV46 EQU   JSCRSV45                                                 04634000
JSCRSV47 EQU   JSCRSV45+2                                               04635000
PSARSVTE EQU   PSARSVT                                                  04636000
RBSECS03 EQU   RBEP                                                     04637000
RBCDE    EQU   RBSECS03                                                 04638000
RBCDFLGS EQU   RBCDE                                                    04639000
RBSECS05 EQU   RBPGMQ                                                   04640000
RBSQE    EQU   RBSECS05                                                 04641000
RBSECS06 EQU   RBPGMQ                                                   04642000
RBIQE    EQU   RBSECS06                                                 04643000
RBSECS07 EQU   RBPGMQ                                                   04644000
RBIQE2   EQU   RBSECS07                                                 04645000
RBSECS08 EQU   IRBEND                                                   04646000
RBSECS09 EQU   IRBEND                                                   04647000
TIOENTRY EQU   TIOT1+24                                                 04648000
TIOESTTA EQU   TIOENTRY+1                                               04649000
TIOERLOC EQU   TIOENTRY+2                                               04650000
TIOELINK EQU   TIOERLOC+1                                               04651000
TIOESYOT EQU   TIOELINK                                                 04652000
TIOESTTC EQU   TIOENTRY+15                                              04653000
TIOESTTB EQU   TIOENTRY+16                                              04654000
POOLSTAR EQU   TIOENTRY+20                                              04655000
TIOEDEVE EQU   TIOESTTB                                                 04656000
TIOSTTB  EQU   TIOEDEVE                                                 04657000
ENQPARMA EQU   WKSHRPRM                                                 04658000
ENQDEQPL EQU   ENQPARMA+4                                               04659000
ENQRETCD EQU   ENQDEQPL+3                                               04660000
WKNEWCV  EQU   WKVOLST                                                  04661000
WKALISNM EQU   WKNEWCV                                                  04662000
DUMPLIST EQU   WKSHRPRM                                                 04663000
DUMPHDR  EQU   WKCL1ASV                                                 04664000
ALLZERO  EQU   ZEROPTR                                                  04665000
USERKEY  EQU   ON                                                       04666000
SVCKEY   EQU   OFF                                                      04667000
SCROPTNS EQU   WKOPTNS                                                  04668000
SCRTIOT  EQU   SCROPTNS+2                                               04669000
OS4      EQU   GL4                                                      04670000
OS8      EQU   VS8                                                      04671000
OS12     EQU   TWELVE                                                   04672000
OS24     EQU   VS24                                                     04673000
OS28     EQU   VS28                                                     04674000
GL8      EQU   VS8                                                      04675000
GL12     EQU   TWELVE                                                   04676000
FLC      EQU   PSA                                                      04677000
VS4      EQU   GL4                                                      04678000
*                                      START UNREFERENCED COMPONENTS    04679000
@NM00155 EQU   SCROPTNS+2                                               04680000
@NM00154 EQU   SCROPTNS                                                 04681000
DMPMSG   EQU   DUMPHDR+1                                                04682000
@NM00149 EQU   DUMPHDR                                                  04683000
@NM00148 EQU   ENQDEQPL+4                                               04684000
@NM00147 EQU   ENQDEQPL                                                 04685000
@NM00146 EQU   ENQPARMA                                                 04686000
TIOUCBP  EQU   TIOEDEVE+1                                               04687000
TIOVERF  EQU   TIOSTTB                                                  04688000
TIOUNLD  EQU   TIOSTTB                                                  04689000
TIOMNTD  EQU   TIOSTTB                                                  04690000
TIOSETU  EQU   TIOSTTB                                                  04691000
TIOVLSR  EQU   TIOSTTB                                                  04692000
TIOPVIO  EQU   TIOSTTB                                                  04693000
TIOREQD  EQU   TIOSTTB                                                  04694000
TIOUSED  EQU   TIOSTTB                                                  04695000
TIOTFEND EQU   POOLSTAR+16                                              04696000
TIOPSLOT EQU   POOLSTAR+13                                              04697000
TIOPSTTB EQU   POOLSTAR+12                                              04698000
TIOPPOOL EQU   POOLSTAR+4                                               04699000
TIOPNSRT EQU   POOLSTAR+3                                               04700000
@NM00123 EQU   POOLSTAR+2                                               04701000
TIOPNSLT EQU   POOLSTAR+1                                               04702000
@NM00122 EQU   POOLSTAR                                                 04703000
TIOEFSRT EQU   TIOENTRY+17                                              04704000
TIOSVERF EQU   TIOESTTB                                                 04705000
TIOSUNLD EQU   TIOESTTB                                                 04706000
TIOSMNTD EQU   TIOESTTB                                                 04707000
TIOSSETU EQU   TIOESTTB                                                 04708000
TIOSVLSR EQU   TIOESTTB                                                 04709000
TIOSPVIO EQU   TIOESTTB                                                 04710000
TIOSREQD EQU   TIOESTTB                                                 04711000
TIOSUSED EQU   TIOESTTB                                                 04712000
TIOSBALS EQU   TIOESTTC                                                 04713000
TIOSBALP EQU   TIOESTTC                                                 04714000
TIOSVOLS EQU   TIOESTTC                                                 04715000
TIOSVOLP EQU   TIOESTTC                                                 04716000
TIOSAFFS EQU   TIOESTTC                                                 04717000
TIOSAFFP EQU   TIOESTTC                                                 04718000
TIOSDEFR EQU   TIOESTTC                                                 04719000
TIOSDKCR EQU   TIOESTTC                                                 04720000
TIOEJFCB EQU   TIOENTRY+12                                              04721000
TIOEDDNM EQU   TIOENTRY+4                                               04722000
TIOTREM  EQU   TIOELINK                                                 04723000
TIOESSDS EQU   TIOESYOT                                                 04724000
TIOESYIN EQU   TIOELINK                                                 04725000
TIOEQNAM EQU   TIOELINK                                                 04726000
TIOEDYNM EQU   TIOELINK                                                 04727000
TIOTTERM EQU   TIOELINK                                                 04728000
TIOTRV01 EQU   TIOELINK                                                 04729000
TIOSYOUT EQU   TIOELINK                                                 04730000
TIOEWTCT EQU   TIOERLOC                                                 04731000
TIOSDSP2 EQU   TIOESTTA                                                 04732000
TIOSDSP1 EQU   TIOESTTA                                                 04733000
TIOSLABL EQU   TIOESTTA                                                 04734000
TIOSDADS EQU   TIOESTTA                                                 04735000
TIOSJBLB EQU   TIOESTTA                                                 04736000
TIOSPLTS EQU   TIOESTTA                                                 04737000
TIOSPLTP EQU   TIOESTTA                                                 04738000
TIOSLTYP EQU   TIOESTTA                                                 04739000
TIOELNGH EQU   TIOENTRY                                                 04740000
RBRSV161 EQU   RBSECS09+64                                              04741000
RBSIRBWA EQU   RBSECS09                                                 04742000
RBIQEWRK EQU   RBSECS08+4                                               04743000
RBNEXAV  EQU   RBSECS08                                                 04744000
RBIQEA   EQU   RBIQE2                                                   04745000
RBIQE1   EQU   RBIQE+1                                                  04746000
RBUSE    EQU   RBIQE                                                    04747000
RBSQEA   EQU   RBSQE+1                                                  04748000
@NM00073 EQU   RBSQE                                                    04749000
RBCDE1   EQU   RBCDE+1                                                  04750000
RBCDLOAD EQU   RBCDFLGS                                                 04751000
RBCDXCTL EQU   RBCDFLGS                                                 04752000
RBCDSYNC EQU   RBCDFLGS                                                 04753000
RBCDNODE EQU   RBCDFLGS                                                 04754000
RBCDSAVE EQU   RBCDFLGS                                                 04755000
RBCDATCH EQU   RBCDFLGS                                                 04756000
RBRSV009 EQU   RBCDFLGS                                                 04757000
RBNOCELL EQU   RBCDFLGS                                                 04758000
PSARSAV  EQU   PSARSVTE+60                                              04759000
PSARSTK  EQU   PSARSVTE+56                                              04760000
PSAESAV3 EQU   PSARSVTE+52                                              04761000
PSAESTK3 EQU   PSARSVTE+48                                              04762000
PSAESAV2 EQU   PSARSVTE+44                                              04763000
PSAESTK2 EQU   PSARSVTE+40                                              04764000
PSAESAV1 EQU   PSARSVTE+36                                              04765000
PSAESTK1 EQU   PSARSVTE+32                                              04766000
PSAPSAV  EQU   PSARSVTE+28                                              04767000
PSAPSTK  EQU   PSARSVTE+24                                              04768000
PSAMSAV  EQU   PSARSVTE+20                                              04769000
PSAMSTK  EQU   PSARSVTE+16                                              04770000
PSASSAV  EQU   PSARSVTE+12                                              04771000
PSASSTK  EQU   PSARSVTE+8                                               04772000
PSANSTK  EQU   PSARSVTE+4                                               04773000
PSACSTK  EQU   PSARSVTE                                                 04774000
JSCBEND3 EQU   JSCBSEC3+120                                             04775000
JSCRSV52 EQU   JSCBSEC3+116                                             04776000
JSCRSV51 EQU   JSCRSV47+1                                               04777000
JSCRSV50 EQU   JSCRSV47                                                 04778000
JSCRSV49 EQU   JSCRSV46+1                                               04779000
JSCRSV48 EQU   JSCRSV46                                                 04780000
JSCRSV44 EQU   JSCBSEC3+108                                             04781000
JSCRSV43 EQU   JSCBSEC3+104                                             04782000
JSCRSV42 EQU   JSCBSEC3+100                                             04783000
JSCBASWA EQU   JSCBSEC3+96                                              04784000
JSCBUFPT EQU   JSCBSEC3+92                                              04785000
JSCBSWSP EQU   JSCBSEC3+87                                              04786000
JSCRSV33 EQU   JSCBSEC3+86                                              04787000
JSCDDNUM EQU   JSCBSEC3+84                                              04788000
JSCRSV53 EQU   JSCBSEC3+82                                              04789000
JSCDDNNO EQU   JSCBSEC3+80                                              04790000
JSCBVATA EQU   JSCBSEC3+76                                              04791000
JSCTMCOR EQU   JSCBSEC3+72                                              04792000
JSCSCTP  EQU   JSCSCT+1                                                 04793000
JSCRSV55 EQU   JSCSCT                                                   04794000
JSCRSV54 EQU   JSCBSEC3+64                                              04795000
JSCDSABQ EQU   JSCBSEC3+60                                              04796000
JSCBSSIB EQU   JSCBSEC3+56                                              04797000
JSCBFRBA EQU   JSCBSEC3+48                                              04798000
JSCRSV28 EQU   JSCBSEC3+46                                              04799000
JSCBSONO EQU   JSCBSEC3+44                                              04800000
JSCBSUBA EQU   JSCBSUB+1                                                04801000
JSCRSV31 EQU   JSCBSUB                                                  04802000
JSCBSMLR EQU   JSCBSEC3+36                                              04803000
JSCBJNLR EQU   JSCBSEC3+32                                              04804000
JSCBJNLA EQU   JSCBJNL+1                                                04805000
JSCBJSBT EQU   JSCBJJSB                                                 04806000
JSCBJSBX EQU   JSCBJJSB                                                 04807000
JSCBJSBA EQU   JSCBJJSB                                                 04808000
JSCBJSBI EQU   JSCBJJSB                                                 04809000
@NM00017 EQU   JSCBJJSB                                                 04810000
JSCBJNLE EQU   JSCBJJSB                                                 04811000
JSCBJNLF EQU   JSCBJJSB                                                 04812000
JSCBJNLN EQU   JSCBJJSB                                                 04813000
@NM00016 EQU   JSCBSEC3+24                                              04814000
JSCBJRBA EQU   JSCBSEC3+16                                              04815000
JSCBIECB EQU   JSCBSEC3+12                                              04816000
JSCBRV08 EQU   JSCBSEC3+11                                              04817000
JSCBRV07 EQU   JSCBFBYT                                                 04818000
JSCBRV06 EQU   JSCBFBYT                                                 04819000
JSCBRV05 EQU   JSCBFBYT                                                 04820000
JSCBRV04 EQU   JSCBFBYT                                                 04821000
JSCBRV03 EQU   JSCBFBYT                                                 04822000
JSCBRV02 EQU   JSCBFBYT                                                 04823000
JSCBADSP EQU   JSCBFBYT                                                 04824000
JSCBRV01 EQU   JSCBFBYT                                                 04825000
JSCBTJID EQU   JSCBASID                                                 04826000
JSCJCTP  EQU   JSCBJCTA                                                 04827000
JSCRSV24 EQU   JSCBJCT                                                  04828000
JSCBEND2 EQU   JSCBSEC2                                                 04829000
CVTRV628 EQU   CVTS01+728                                               04830000
CVTRV627 EQU   CVTS01+724                                               04831000
CVTRV626 EQU   CVTS01+720                                               04832000
CVTRV625 EQU   CVTS01+716                                               04833000
CVTRV624 EQU   CVTS01+712                                               04834000
CVTRV623 EQU   CVTS01+708                                               04835000
CVTRV622 EQU   CVTS01+704                                               04836000
CVTRV621 EQU   CVTS01+700                                               04837000
CVTIHASU EQU   CVTS01+696                                               04838000
CVTRV619 EQU   CVTS01+692                                               04839000
CVTRV618 EQU   CVTS01+688                                               04840000
CVTRV617 EQU   CVTS01+684                                               04841000
CVTRV616 EQU   CVTS01+680                                               04842000
CVTRV615 EQU   CVTS01+676                                               04843000
CVTRV614 EQU   CVTS01+672                                               04844000
CVTRV613 EQU   CVTS01+668                                               04845000
CVTTCASP EQU   CVTS01+664                                               04846000
CVT0PT03 EQU   CVTS01+660                                               04847000
CVT0PT0E EQU   CVTS01+656                                               04848000
CVTRV609 EQU   CVTS01+652                                               04849000
CVTCGK   EQU   CVTS01+648                                               04850000
CVTRAC   EQU   CVTS01+644                                               04851000
CVTHSM   EQU   CVTS01+640                                               04852000
CVTRV605 EQU   CVTS01+636                                               04853000
CVTRV604 EQU   CVTS01+632                                               04854000
CVTEFF02 EQU   CVTS01+628                                               04855000
CVTCBBR  EQU   CVTS01+624                                               04856000
CVTSSCR  EQU   CVTS01+620                                               04857000
CVTEVENT EQU   CVTS01+616                                               04858000
CVTCRCA  EQU   CVTS01+612                                               04859000
CVTTPIO  EQU   CVTS01+608                                               04860000
CVTADV   EQU   CVTS01+604                                               04861000
CVTGSDAB EQU   CVTGSDA                                                  04862000
CVTQV3   EQU   CVTS01+596                                               04863000
CVTQV2   EQU   CVTS01+592                                               04864000
CVTQV1   EQU   CVTS01+588                                               04865000
CVTRPT   EQU   CVTS01+584                                               04866000
CVTSSRB  EQU   CVTS01+580                                               04867000
CVTCSDRL EQU   CVTS01+576                                               04868000
CVTEXP1  EQU   CVTS01+572                                               04869000
CVTRMPMT EQU   CVTS01+568                                               04870000
CVTRMPTT EQU   CVTS01+564                                               04871000
CVTVPSA  EQU   CVTS01+560                                               04872000
CVTVSTOP EQU   CVTS01+556                                               04873000
CVTGTFR8 EQU   CVTS01+552                                               04874000
CVTQUIT  EQU   CVTS01+548                                               04875000
CVTVACR  EQU   CVTS01+544                                               04876000
CVTWTCB  EQU   CVTS01+540                                               04877000
CVTSTPRS EQU   CVTS01+536                                               04878000
CVT0PT02 EQU   CVTS01+532                                               04879000
CVTDARCM EQU   CVTS01+528                                               04880000
CVTIRECM EQU   CVTS01+524                                               04881000
CVTJRECM EQU   CVTS01+520                                               04882000
CVTVEMS0 EQU   CVTS01+516                                               04883000
CVTSPFRR EQU   CVTS01+512                                               04884000
CVTRLSTG EQU   CVTS01+508                                               04885000
CVT0TC0A EQU   CVTS01+504                                               04886000
CVTGMBR  EQU   CVTS01+500                                               04887000
CVTLFRM  EQU   CVTS01+496                                               04888000
CVTRMBR  EQU   CVTS01+492                                               04889000
CVTVIOP  EQU   CVTS01+488                                               04890000
CVTRV307 EQU   CVTS01+486                                               04891000
CVTRV306 EQU   CVTS01+484                                               04892000
CVTRV305 EQU   CVTS01+482                                               04893000
CVTRV304 EQU   CVTS01+480                                               04894000
CVTRV303 EQU   CVTS01+478                                               04895000
CVTRV302 EQU   CVTS01+476                                               04896000
CVTTRCA  EQU   CVTS01+472                                               04897000
CVTRV297 EQU   CVTRV289                                                 04898000
CVTRV296 EQU   CVTRV289                                                 04899000
CVTRV295 EQU   CVTRV289                                                 04900000
CVTRV294 EQU   CVTRV289                                                 04901000
CVTRV293 EQU   CVTRV289                                                 04902000
CVTRV292 EQU   CVTRV289                                                 04903000
CVTRV291 EQU   CVTRV289                                                 04904000
CVTRV290 EQU   CVTRV289                                                 04905000
CVTRV288 EQU   CVTRV280                                                 04906000
CVTRV287 EQU   CVTRV280                                                 04907000
CVTRV286 EQU   CVTRV280                                                 04908000
CVTRV285 EQU   CVTRV280                                                 04909000
CVTRV284 EQU   CVTRV280                                                 04910000
CVTRV283 EQU   CVTRV280                                                 04911000
CVTRV282 EQU   CVTRV280                                                 04912000
CVTRV281 EQU   CVTRV280                                                 04913000
CVTRV279 EQU   CVTRV271                                                 04914000
CVTRV278 EQU   CVTRV271                                                 04915000
CVTRV277 EQU   CVTRV271                                                 04916000
CVTRV276 EQU   CVTRV271                                                 04917000
CVTRV275 EQU   CVTRV271                                                 04918000
CVTRV274 EQU   CVTRV271                                                 04919000
CVTRV273 EQU   CVTRV271                                                 04920000
CVTRV272 EQU   CVTRV271                                                 04921000
CVTRV270 EQU   CVTRV262                                                 04922000
CVTRV269 EQU   CVTRV262                                                 04923000
CVTRV268 EQU   CVTRV262                                                 04924000
CVTRV267 EQU   CVTRV262                                                 04925000
CVTRV266 EQU   CVTRV262                                                 04926000
CVTRV265 EQU   CVTRV262                                                 04927000
CVTRV264 EQU   CVTRV262                                                 04928000
CVTRV263 EQU   CVTRV262                                                 04929000
CVTVFP   EQU   CVTS01+464                                               04930000
CVTVSI   EQU   CVTS01+460                                               04931000
CVTVPSIB EQU   CVTS01+456                                               04932000
CVTMFACT EQU   CVTMFRTR                                                 04933000
CVTMFCTL EQU   CVTS01+448                                               04934000
CVTPVBP  EQU   CVTS01+444                                               04935000
CVTPWI   EQU   CVTS01+440                                               04936000
CVTRV254 EQU   CVTS01+438                                               04937000
CVTRV253 EQU   CVTS01+436                                               04938000
CVTRV252 EQU   CVTS01+434                                               04939000
CVTRV251 EQU   CVTS01+433                                               04940000
CVTRV250 EQU   CVTS01+432                                               04941000
CVTRV249 EQU   CVTS01+431                                               04942000
CVTRV248 EQU   CVTS01+430                                               04943000
CVTRV247 EQU   CVTS01+429                                               04944000
CVTRV246 EQU   CVTS01+428                                               04945000
CVTRV245 EQU   CVTRV237                                                 04946000
CVTRV244 EQU   CVTRV237                                                 04947000
CVTRV243 EQU   CVTRV237                                                 04948000
CVTRV242 EQU   CVTRV237                                                 04949000
CVTRV241 EQU   CVTRV237                                                 04950000
CVTRV240 EQU   CVTRV237                                                 04951000
CVTRV239 EQU   CVTRV237                                                 04952000
CVTRV238 EQU   CVTRV237                                                 04953000
CVTRV236 EQU   CVTRV228                                                 04954000
CVTRV235 EQU   CVTRV228                                                 04955000
CVTRV234 EQU   CVTRV228                                                 04956000
CVTRV233 EQU   CVTRV228                                                 04957000
CVTRV232 EQU   CVTRV228                                                 04958000
CVTRV231 EQU   CVTRV228                                                 04959000
CVTRV230 EQU   CVTRV228                                                 04960000
CVTRV229 EQU   CVTRV228                                                 04961000
CVTRV227 EQU   CVTRV219                                                 04962000
CVTRV226 EQU   CVTRV219                                                 04963000
CVTRV225 EQU   CVTRV219                                                 04964000
CVTRV224 EQU   CVTRV219                                                 04965000
CVTRV223 EQU   CVTRV219                                                 04966000
CVTRV222 EQU   CVTRV219                                                 04967000
CVTRV221 EQU   CVTRV219                                                 04968000
CVTRV220 EQU   CVTRV219                                                 04969000
CVTRV218 EQU   CVTRV210                                                 04970000
CVTRV217 EQU   CVTRV210                                                 04971000
CVTRV216 EQU   CVTRV210                                                 04972000
CVTRV215 EQU   CVTRV210                                                 04973000
CVTRV214 EQU   CVTRV210                                                 04974000
CVTRV213 EQU   CVTRV210                                                 04975000
CVTRV212 EQU   CVTRV210                                                 04976000
CVTRV211 EQU   CVTRV210                                                 04977000
CVTLCCAT EQU   CVTS01+420                                               04978000
CVTPCCAT EQU   CVTS01+416                                               04979000
CVTIPCRP EQU   CVTS01+412                                               04980000
CVTIPCRI EQU   CVTS01+408                                               04981000
CVTIPCDS EQU   CVTS01+404                                               04982000
CVTAIDVT EQU   CVTS01+400                                               04983000
CVTSSAP  EQU   CVTS01+396                                               04984000
CVTEHCIR EQU   CVTS01+392                                               04985000
CVTEHDEF EQU   CVTS01+388                                               04986000
CVTDAIR  EQU   CVTS01+384                                               04987000
CVTPERFM EQU   CVTS01+380                                               04988000
CVT044R2 EQU   CVTS01+376                                               04989000
CVTFETCH EQU   CVTS01+372                                               04990000
CVTRSTWD EQU   CVTS01+368                                               04991000
CVTSPOST EQU   CVTS01+364                                               04992000
CVTIOBP  EQU   CVTS01+360                                               04993000
CVTASMVT EQU   CVTS01+356                                               04994000
CVTRECRQ EQU   CVTS01+352                                               04995000
CVTWSAC  EQU   CVTS01+348                                               04996000
CVTRV149 EQU   CVTS01+344                                               04997000
CVTWSAL  EQU   CVTS01+340                                               04998000
CVTSPSA  EQU   CVTS01+336                                               04999000
CVTGLMN  EQU   CVTS01+332                                               05000000
CVTVEAC0 EQU   CVTS01+328                                               05001000
CVT062R1 EQU   CVTS01+324                                               05002000
CVTRPOST EQU   CVTS01+320                                               05003000
CVTDQIQE EQU   CVTS01+316                                               05004000
CVTCSD   EQU   CVTS01+312                                               05005000
CVTLKRMA EQU   CVTS01+308                                               05006000
CVTRSPIE EQU   CVTS01+304                                               05007000
CVTRENQ  EQU   CVTS01+300                                               05008000
CVTLQCB  EQU   CVTS01+296                                               05009000
CVTFQCB  EQU   CVTS01+292                                               05010000
CVTQCS01 EQU   CVTS01+288                                               05011000
CVTAPFT  EQU   CVTS01+284                                               05012000
CVTPARRL EQU   CVTS01+280                                               05013000
CVTVWAIT EQU   CVTS01+276                                               05014000
CVTGSPL  EQU   CVTS01+272                                               05015000
CVTLSMQ  EQU   CVTS01+268                                               05016000
CVTGSMQ  EQU   CVTS01+264                                               05017000
CVTEXPRO EQU   CVTS01+260                                               05018000
CVTOPCTP EQU   CVTS01+256                                               05019000
CVTSIC   EQU   CVTS01+252                                               05020000
CVTTPIOS EQU   CVTS01+248                                               05021000
CVTRTMS  EQU   CVTS01+244                                               05022000
CVTSDBF  EQU   CVTS01+240                                               05023000
CVTSCBP  EQU   CVTS01+236                                               05024000
CVTSDMP  EQU   CVTS01+232                                               05025000
CVTSV60  EQU   CVTS01+228                                               05026000
CVTRTMCT EQU   CVTS01+224                                               05027000
CVTASCBL EQU   CVTS01+220                                               05028000
CVTASCBH EQU   CVTS01+216                                               05029000
CVTGDA   EQU   CVTS01+212                                               05030000
CVTASVT  EQU   CVTS01+208                                               05031000
CVTVVMDI EQU   CVTS01+204                                               05032000
CVTAQTOP EQU   CVTS01+200                                               05033000
CVTIOSCS EQU   CVTS01+196                                               05034000
CVTSDRM  EQU   CVTS01+192                                               05035000
CVTOPTE  EQU   CVTS01+188                                               05036000
CVTSTXU  EQU   CVTS01+184                                               05037000
CVTQUIS  EQU   CVTS01+180                                               05038000
CVTPARS  EQU   CVTS01+176                                               05039000
CVTS1EE  EQU   CVTS01+172                                               05040000
CVTFRAS  EQU   CVTS01+168                                               05041000
CVTQSAS  EQU   CVTS01+164                                               05042000
CVTCRAS  EQU   CVTS01+160                                               05043000
CVTCRMN  EQU   CVTS01+156                                               05044000
CVTDELCP EQU   CVTS01+152                                               05045000
CVTFRECL EQU   CVTS01+148                                               05046000
CVTGETCL EQU   CVTS01+144                                               05047000
CVTBLDCP EQU   CVTS01+140                                               05048000
CVTAUTHL EQU   CVTS01+136                                               05049000
CVTSCAN  EQU   CVTS01+132                                               05050000
CVTRV144 EQU   CVTS01+130                                               05051000
CVTMAXMP EQU   CVTS01+128                                               05052000
CVTSTCK  EQU   CVTS01+124                                               05053000
CVTRV139 EQU   CVTS01+123                                               05054000
CVTDSSAC EQU   CVTS01+122                                               05055000
CVTRV513 EQU   CVTS01+121                                               05056000
CVTIOSPL EQU   CVTS01+120                                               05057000
CVTPTGT  EQU   CVTS01+116                                               05058000
CVTCSPIE EQU   CVTS01+112                                               05059000
CVTSMFEX EQU   CVTS01+108                                               05060000
CVTOLT0A EQU   CVTS01+104                                               05061000
CVTSRBRT EQU   CVTS01+100                                               05062000
CVTPUTL  EQU   CVTS01+96                                                05063000
CVTASCRL EQU   CVTS01+92                                                05064000
CVTASCRF EQU   CVTS01+88                                                05065000
CVTRV326 EQU   CVTS01+84                                                05066000
CVTRV325 EQU   CVTS01+80                                                05067000
CVTRV324 EQU   CVTS01+76                                                05068000
CVT0VL01 EQU   CVTS01+72                                                05069000
CVTSHRVM EQU   CVTS01+68                                                05070000
CVTRV332 EQU   CVTS01+64                                                05071000
CVTTAS   EQU   CVTS01+60                                                05072000
CVTRSCN  EQU   CVTS01+56                                                05073000
CVTTRAC2 EQU   CVTS01+54                                                05074000
CVTTRACE EQU   CVTS01+52                                                05075000
CVTAPG   EQU   CVTS01+51                                                05076000
CVTSDTRC EQU   CVTCTLFG                                                 05077000
CVTGTRCE EQU   CVTCTLFG                                                 05078000
CVTNOMP  EQU   CVTCTLFG                                                 05079000
CVTRSV79 EQU   CVTCTLFG                                                 05080000
CVTDSTAT EQU   CVTCTLFG                                                 05081000
CVTRSV78 EQU   CVTCTLFG                                                 05082000
CVTRV333 EQU   CVTCTLFG                                                 05083000
CVTRV323 EQU   CVTCTLFG                                                 05084000
CVTSPVLK EQU   CVTS01+49                                                05085000
CVTRSV77 EQU   CVTS01+48                                                05086000
CVTRV331 EQU   CVTS01+44                                                05087000
CVTRV330 EQU   CVTS01+40                                                05088000
CVTRV329 EQU   CVTS01+36                                                05089000
CVTRV328 EQU   CVTS01+32                                                05090000
CVTRV322 EQU   CVTS01+28                                                05091000
CVTSLID  EQU   CVTSLIDA+1                                               05092000
CVTSYLK  EQU   CVTSLIDA                                                 05093000
CVTRV321 EQU   CVTS01+20                                                05094000
CVTRV320 EQU   CVTS01+16                                                05095000
CVTLPDIR EQU   CVTLPDIA+1                                               05096000
CVTRSV69 EQU   CVTDIRST                                                 05097000
CVTRSV68 EQU   CVTDIRST                                                 05098000
CVTRSV67 EQU   CVTDIRST                                                 05099000
CVTRSV66 EQU   CVTDIRST                                                 05100000
CVTRSV65 EQU   CVTDIRST                                                 05101000
CVTRSV64 EQU   CVTDIRST                                                 05102000
CVTRSV63 EQU   CVTDIRST                                                 05103000
CVTDICOM EQU   CVTDIRST                                                 05104000
CVTPVTP  EQU   CVTS01+8                                                 05105000
CVTLPDSR EQU   CVTS01+4                                                 05106000
CVTGETL  EQU   CVTS01                                                   05107000
CTGREAS2 EQU   CTGREASN+1                                               05108000
CTGREAS1 EQU   CTGREASN                                                 05109000
CTGMODID EQU   CTGPROB                                                  05110000
@NM00145 EQU   WKSHRPRM+42                                              05111000
ACAC12   EQU   ACCCB+1                                                  05112000
@NM00144 EQU   ACCCB+1                                                  05113000
ACAC10   EQU   ACCCB+1                                                  05114000
@NM00143 EQU   ACCCB+1                                                  05115000
ACAC8    EQU   ACCCB+1                                                  05116000
@NM00142 EQU   ACCCB                                                    05117000
ACAC5    EQU   ACCCB                                                    05118000
@NM00141 EQU   ACCCB                                                    05119000
ACAC3    EQU   ACCCB                                                    05120000
@NM00140 EQU   ACCCB                                                    05121000
ACCRESCD EQU   ACCRW+2                                                  05122000
@NM00139 EQU   WORKCLCA+3478                                            05123000
ESTAELST EQU   @NM00138+272                                             05124000
LKNM     EQU   @NM00138+264                                             05125000
LKDP     EQU   @NM00138+260                                             05126000
LKNP     EQU   @NM00138+256                                             05127000
@NM00137 EQU   WORKCLCA+681                                             05128000
@NM00136 EQU   WKVOLST+255                                              05129000
@NM00135 EQU   WKVOLLST                                                 05130000
@NM00134 EQU   WORKCLCA+397                                             05131000
SLEMPTY  EQU   SLFLAGS                                                  05132000
@NM00133 EQU   WORKCLCA+272                                             05133000
SAVER12  EQU   WORKCLCA+268                                             05134000
SAVER11  EQU   WORKCLCA+264                                             05135000
SAVER10  EQU   WORKCLCA+260                                             05136000
SAVER6   EQU   WORKCLCA+256                                             05137000
SAVER3   EQU   WORKCLCA+248                                             05138000
XSAVAREA EQU   WORKCLCA+144                                             05139000
REG13SAV EQU   WORKCLCA+116                                             05140000
SVRBSAV  EQU   WORKCLCA+108                                             05141000
@NM00132 EQU   WORKCLCA+98                                              05142000
@NM00131 EQU   WORKCLCA                                                 05143000
@NM00153 EQU   WKSTDNM+16                                               05144000
@NM00152 EQU   WKUNIQUE+7                                               05145000
@NM00151 EQU   WKUNIQUE                                                 05146000
@NM00150 EQU   WKSTDNM                                                  05147000
GENCNT   EQU   GIPE+14                                                  05148000
@NM00130 EQU   GIPE+11                                                  05149000
GENTTR   EQU   GIPE+8                                                   05150000
@NM00129 EQU   GIPE                                                     05151000
@NM00128 EQU   CAMVOLST+2                                               05152000
CAMCVOLP EQU   CAMLSTD+8                                                05153000
CAMGEN   EQU   CAMOPTNS+3                                               05154000
CAMSLOC  EQU   CAMOPTN3                                                 05155000
CAMSLOCB EQU   CAMOPTN3                                                 05156000
CAMEMPTY EQU   CAMOPTN3                                                 05157000
@NM00127 EQU   CAMOPTN3                                                 05158000
CAMDELET EQU   CAMOPTN3                                                 05159000
CAMDLTX  EQU   CAMOPTN2                                                 05160000
CAMBLDG  EQU   CAMOPTN2                                                 05161000
CAMBLDX  EQU   CAMOPTN2                                                 05162000
@NM00126 EQU   CAMOPTN1                                                 05163000
@NM00125 EQU   CAMOPTN1                                                 05164000
CAMUCAT  EQU   CAMOPTN1                                                 05165000
@NM00124 EQU   CAMOPTN1                                                 05166000
CAMCVOL  EQU   CAMOPTN1                                                 05167000
TIOCSTEP EQU   TIOT1+8                                                  05168000
TIOCNJOB EQU   TIOT1                                                    05169000
@NM00121 EQU   SDWA+512                                                 05170000
SDWAVRA  EQU   SDWARA+4                                                 05171000
SDWAURAL EQU   SDWARA+3                                                 05172000
@NM00120 EQU   SDWADPVA                                                 05173000
SDWAEBC  EQU   SDWADPVA                                                 05174000
SDWAHEX  EQU   SDWADPVA                                                 05175000
SDWAVRAL EQU   SDWARA                                                   05176000
@NM00119 EQU   SDWA+396                                                 05177000
SDWACOMP EQU   SDWA+392                                                 05178000
SDWARCPL EQU   SDWA+364                                                 05179000
@NM00118 EQU   SDWADPSA+32                                              05180000
SDWATO4  EQU   SDWADPSL+28                                              05181000
SDWAFRM4 EQU   SDWADPSL+24                                              05182000
SDWATO3  EQU   SDWADPSL+20                                              05183000
SDWAFRM3 EQU   SDWADPSL+16                                              05184000
SDWATO2  EQU   SDWADPSL+12                                              05185000
SDWAFRM2 EQU   SDWADPSL+8                                               05186000
SDWATO1  EQU   SDWADPSL+4                                               05187000
SDWAFRM1 EQU   SDWADPSL                                                 05188000
@NM00117 EQU   SDWADDAT+3                                               05189000
@NM00116 EQU   SDWAPDAT                                                 05190000
SDWAUSPL EQU   SDWAPDAT                                                 05191000
SDWADPSW EQU   SDWAPDAT                                                 05192000
SDWATJPA EQU   SDWAPDAT                                                 05193000
SDWATLPA EQU   SDWAPDAT                                                 05194000
SDWADREG EQU   SDWAPDAT                                                 05195000
SDWADSAH EQU   SDWAPDAT                                                 05196000
SDWADSAS EQU   SDWAPDAT                                                 05197000
@NM00115 EQU   SDWADDAT+1                                               05198000
@NM00114 EQU   SDWASDAT                                                 05199000
SDWAQQS  EQU   SDWASDAT                                                 05200000
SDWACBS  EQU   SDWASDAT                                                 05201000
SDWAGTF  EQU   SDWASDAT                                                 05202000
SDWASWA  EQU   SDWASDAT                                                 05203000
SDWALSQA EQU   SDWASDAT                                                 05204000
SDWASQA  EQU   SDWASDAT                                                 05205000
SDWANUC  EQU   SDWASDAT                                                 05206000
@NM00113 EQU   SDWADUMP+2                                               05207000
@NM00112 EQU   SDWADPFS                                                 05208000
SDWASLST EQU   SDWADPFS                                                 05209000
@NM00111 EQU   SDWADPFS                                                 05210000
SDWADLST EQU   SDWADPFS                                                 05211000
SDWADPT  EQU   SDWADPFS                                                 05212000
SDWADPID EQU   SDWADUMP                                                 05213000
SDWADPLA EQU   SDWA+316                                                 05214000
SDWAREXN EQU   SDWARECP+16                                              05215000
SDWACSCT EQU   SDWARECP+8                                               05216000
SDWAMODN EQU   SDWARECP                                                 05217000
@NM00110 EQU   SDWALKWA+32                                              05218000
SDWATALW EQU   SDWALKWS+28                                              05219000
SDWATDLW EQU   SDWALKWS+24                                              05220000
SDWATNLW EQU   SDWALKWS+20                                              05221000
SDWAAPLW EQU   SDWALKWS+16                                              05222000
SDWAIPLW EQU   SDWALKWS+12                                              05223000
SDWAILLW EQU   SDWALKWS+8                                               05224000
SDWAIULW EQU   SDWALKWS+4                                               05225000
SDWAICLW EQU   SDWALKWS                                                 05226000
SDWAFLLK EQU   SDWAACF4                                                 05227000
SDWACMS  EQU   SDWAACF4                                                 05228000
SDWAOPTM EQU   SDWAACF4                                                 05229000
SDWATADB EQU   SDWAACF4                                                 05230000
SDWATDNB EQU   SDWAACF4                                                 05231000
SDWATNCB EQU   SDWAACF4                                                 05232000
SDWAILCH EQU   SDWAACF4                                                 05233000
SDWAIUCB EQU   SDWAACF4                                                 05234000
SDWAICAT EQU   SDWAACF3                                                 05235000
SDWAIPRG EQU   SDWAACF3                                                 05236000
SDWASALL EQU   SDWAACF3                                                 05237000
SDWAASMP EQU   SDWAACF3                                                 05238000
SDWADISP EQU   SDWAACF3                                                 05239000
@NM00109 EQU   SDWAACF3                                                 05240000
@NM00108 EQU   SDWAACF2                                                 05241000
SDWAFREE EQU   SDWAACF2                                                 05242000
SDWAUPRG EQU   SDWAACF2                                                 05243000
@NM00107 EQU   SDWAACF2                                                 05244000
SDWASPIN EQU   SDWAACF2                                                 05245000
@NM00106 EQU   SDWAACF2                                                 05246000
SDWALCPU EQU   SDWACPUA+2                                               05247000
@NM00105 EQU   SDWACPUA                                                 05248000
SDWARECA EQU   SDWA+244                                                 05249000
SDWARTYA EQU   SDWA+240                                                 05250000
@NM00104 EQU   SDWA+239                                                 05251000
@NM00103 EQU   SDWAIOFS                                                 05252000
SDWANIOP EQU   SDWAIOFS                                                 05253000
SDWANOIO EQU   SDWAIOFS                                                 05254000
SDWAIOHT EQU   SDWAIOFS                                                 05255000
SDWAIOQR EQU   SDWAIOFS                                                 05256000
SDWAFMID EQU   SDWA+236                                                 05257000
@NM00102 EQU   SDWAERRD                                                 05258000
SDWAMCIV EQU   SDWAERRD                                                 05259000
SDWARPIV EQU   SDWAERRD                                                 05260000
SDWAMABD EQU   SDWAERRD                                                 05261000
SDWACTS  EQU   SDWAERRD                                                 05262000
SDWASTAE EQU   SDWAERRD                                                 05263000
SDWANRBE EQU   SDWAERRD                                                 05264000
SDWACLUP EQU   SDWAERRD                                                 05265000
@NM00101 EQU   SDWAERRC                                                 05266000
SDWAEAS  EQU   SDWAERRC                                                 05267000
SDWAIRB  EQU   SDWAERRC                                                 05268000
SDWASTAI EQU   SDWAERRC                                                 05269000
SDWASTAF EQU   SDWAERRC                                                 05270000
SDWASRBM EQU   SDWAERRB                                                 05271000
SDWALDIS EQU   SDWAERRB                                                 05272000
SDWAENRB EQU   SDWAERRB                                                 05273000
SDWATYP1 EQU   SDWAERRB                                                 05274000
@NM00100 EQU   SDWAERRB                                                 05275000
SDWAPGIO EQU   SDWAERRA                                                 05276000
SDWATEXC EQU   SDWAERRA                                                 05277000
SDWASVCE EQU   SDWAERRA                                                 05278000
SDWAABTM EQU   SDWAERRA                                                 05279000
SDWASVCD EQU   SDWAERRA                                                 05280000
SDWARKEY EQU   SDWAERRA                                                 05281000
SDWAPCHK EQU   SDWAERRA                                                 05282000
SDWAMCHK EQU   SDWAERRA                                                 05283000
SDWATIME EQU   SDWAMCH+20                                               05284000
SDWARFSA EQU   SDWAMCH+16                                               05285000
@NM00099 EQU   SDWAMCH+14                                               05286000
SDWAVEQR EQU   SDWARSR2                                                 05287000
SDWAPGFX EQU   SDWARSR2                                                 05288000
SDWAFLSQ EQU   SDWARSR2                                                 05289000
SDWAFSQA EQU   SDWARSR2                                                 05290000
SDWANUCL EQU   SDWARSR2                                                 05291000
SDWASPER EQU   SDWARSR2                                                 05292000
SDWAINTC EQU   SDWARSR2                                                 05293000
SDWAOFLN EQU   SDWARSR2                                                 05294000
SDWACHNG EQU   SDWARSR1                                                 05295000
SDWAMSER EQU   SDWARSR1                                                 05296000
@NM00098 EQU   SDWARSR1                                                 05297000
SDWACPID EQU   SDWAMCH+10                                               05298000
SDWATERR EQU   SDWAMCHD                                                 05299000
SDWAFPRX EQU   SDWAMCHD                                                 05300000
SDWAINSF EQU   SDWAMCHD                                                 05301000
SDWAACR  EQU   SDWAMCHD                                                 05302000
SDWASCK  EQU   SDWAMCHD                                                 05303000
SDWAPSWU EQU   SDWAMCHD                                                 05304000
SDWAREGU EQU   SDWAMCHD                                                 05305000
SDWASKYF EQU   SDWAMCHD                                                 05306000
@NM00097 EQU   SDWAMCHS                                                 05307000
SDWARSRF EQU   SDWAMCHS                                                 05308000
SDWARSRC EQU   SDWAMCHS                                                 05309000
SDWAINVP EQU   SDWAMCHS                                                 05310000
SDWATSVL EQU   SDWAMCHS                                                 05311000
SDWARCDF EQU   SDWAMCHS                                                 05312000
SDWASRVL EQU   SDWAMCHS                                                 05313000
SDWASCKE EQU   SDWASTCK+4                                               05314000
SDWASCKB EQU   SDWASTCK                                                 05315000
SDWALNTH EQU   SDWAIDNT+1                                               05316000
SDWASPID EQU   SDWAIDNT                                                 05317000
SDWASR15 EQU   SDWASRSV+60                                              05318000
SDWASR14 EQU   SDWASRSV+56                                              05319000
SDWASR13 EQU   SDWASRSV+52                                              05320000
SDWASR12 EQU   SDWASRSV+48                                              05321000
SDWASR11 EQU   SDWASRSV+44                                              05322000
SDWASR10 EQU   SDWASRSV+40                                              05323000
SDWASR09 EQU   SDWASRSV+36                                              05324000
SDWASR08 EQU   SDWASRSV+32                                              05325000
SDWASR07 EQU   SDWASRSV+28                                              05326000
SDWASR06 EQU   SDWASRSV+24                                              05327000
SDWASR05 EQU   SDWASRSV+20                                              05328000
SDWASR04 EQU   SDWASRSV+16                                              05329000
SDWASR03 EQU   SDWASRSV+12                                              05330000
SDWASR02 EQU   SDWASRSV+8                                               05331000
SDWASR01 EQU   SDWASRSV+4                                               05332000
SDWASR00 EQU   SDWASRSV                                                 05333000
SDWATRN2 EQU   SDWAAEC2+4                                               05334000
SDWAIPC2 EQU   SDWAICD2                                                 05335000
SDWAIMC2 EQU   SDWAICD2                                                 05336000
SDWAIPR2 EQU   SDWAICD2                                                 05337000
@NM00096 EQU   SDWAINC2                                                 05338000
@NM00095 EQU   SDWAILC2                                                 05339000
SDWAIL2  EQU   SDWAILC2                                                 05340000
@NM00094 EQU   SDWAILC2                                                 05341000
@NM00093 EQU   SDWAAEC2                                                 05342000
SDWAADD2 EQU   SDWANXT2+1                                               05343000
@NM00092 EQU   SDWANXT2                                                 05344000
@NM00091 EQU   SDWAEC2+3                                                05345000
SDWASGN2 EQU   SDWAINT2                                                 05346000
SDWAEXP2 EQU   SDWAINT2                                                 05347000
SDWADEC2 EQU   SDWAINT2                                                 05348000
SDWAFPO2 EQU   SDWAINT2                                                 05349000
SDWACC2  EQU   SDWAINT2                                                 05350000
@NM00090 EQU   SDWAINT2                                                 05351000
SDWAPGM2 EQU   SDWAMWP2                                                 05352000
SDWAWAT2 EQU   SDWAMWP2                                                 05353000
SDWAMCK2 EQU   SDWAMWP2                                                 05354000
SDWAECT2 EQU   SDWAMWP2                                                 05355000
SDWAKEY2 EQU   SDWAMWP2                                                 05356000
SDWAEXT2 EQU   SDWAEMK2                                                 05357000
SDWAIO2  EQU   SDWAEMK2                                                 05358000
SDWATRM2 EQU   SDWAEMK2                                                 05359000
@NM00089 EQU   SDWAEMK2                                                 05360000
SDWAPER2 EQU   SDWAEMK2                                                 05361000
@NM00088 EQU   SDWAEMK2                                                 05362000
SDWATRAN EQU   SDWAAEC1+4                                               05363000
SDWAIPC1 EQU   SDWAICD1                                                 05364000
SDWAIMC1 EQU   SDWAICD1                                                 05365000
SDWAIPR1 EQU   SDWAICD1                                                 05366000
@NM00087 EQU   SDWAINC1                                                 05367000
@NM00086 EQU   SDWAILC1                                                 05368000
SDWAIL1  EQU   SDWAILC1                                                 05369000
@NM00085 EQU   SDWAILC1                                                 05370000
@NM00084 EQU   SDWAAEC1                                                 05371000
SDWAADD1 EQU   SDWANXT1+1                                               05372000
@NM00083 EQU   SDWANXT1                                                 05373000
@NM00082 EQU   SDWAEC1+3                                                05374000
SDWASGN1 EQU   SDWAINT1                                                 05375000
SDWAEXP1 EQU   SDWAINT1                                                 05376000
SDWADEC1 EQU   SDWAINT1                                                 05377000
SDWAFPO1 EQU   SDWAINT1                                                 05378000
SDWACC1  EQU   SDWAINT1                                                 05379000
@NM00081 EQU   SDWAINT1                                                 05380000
SDWAPGM1 EQU   SDWAMWP1                                                 05381000
SDWAWAT1 EQU   SDWAMWP1                                                 05382000
SDWAMCK1 EQU   SDWAMWP1                                                 05383000
SDWAECT1 EQU   SDWAMWP1                                                 05384000
SDWAKEY1 EQU   SDWAMWP1                                                 05385000
SDWAEXT1 EQU   SDWAEMK1                                                 05386000
SDWAIO1  EQU   SDWAEMK1                                                 05387000
SDWATRM1 EQU   SDWAEMK1                                                 05388000
@NM00080 EQU   SDWAEMK1                                                 05389000
SDWAPER1 EQU   SDWAEMK1                                                 05390000
@NM00079 EQU   SDWAEMK1                                                 05391000
SDWAIOBR EQU   SDWA+100                                                 05392000
SDWAEPA  EQU   SDWA+96                                                  05393000
@NM00078 EQU   SDWANAME+4                                               05394000
SDWARBAD EQU   SDWANAME                                                 05395000
SDWAGR15 EQU   SDWAGRSV+60                                              05396000
SDWAGR14 EQU   SDWAGRSV+56                                              05397000
SDWAGR13 EQU   SDWAGRSV+52                                              05398000
SDWAGR12 EQU   SDWAGRSV+48                                              05399000
SDWAGR11 EQU   SDWAGRSV+44                                              05400000
SDWAGR10 EQU   SDWAGRSV+40                                              05401000
SDWAGR09 EQU   SDWAGRSV+36                                              05402000
SDWAGR08 EQU   SDWAGRSV+32                                              05403000
SDWAGR07 EQU   SDWAGRSV+28                                              05404000
SDWAGR06 EQU   SDWAGRSV+24                                              05405000
SDWAGR05 EQU   SDWAGRSV+20                                              05406000
SDWAGR04 EQU   SDWAGRSV+16                                              05407000
SDWAGR03 EQU   SDWAGRSV+12                                              05408000
SDWAGR02 EQU   SDWAGRSV+8                                               05409000
SDWAGR01 EQU   SDWAGRSV+4                                               05410000
SDWAGR00 EQU   SDWAGRSV                                                 05411000
SDWANXTP EQU   SDWACTL2+5                                               05412000
SDWASGP  EQU   SDWAPMKP                                                 05413000
SDWAEUP  EQU   SDWAPMKP                                                 05414000
SDWADOP  EQU   SDWAPMKP                                                 05415000
SDWAFPP  EQU   SDWAPMKP                                                 05416000
SDWACCP  EQU   SDWAPMKP                                                 05417000
SDWAILP  EQU   SDWAPMKP                                                 05418000
SDWAINTP EQU   SDWACTL2+2                                               05419000
SDWASPVP EQU   SDWAMWPP                                                 05420000
SDWAWATP EQU   SDWAMWPP                                                 05421000
SDWAMCKP EQU   SDWAMWPP                                                 05422000
@NM00077 EQU   SDWAMWPP                                                 05423000
SDWAKEYP EQU   SDWAMWPP                                                 05424000
SDWAEXTP EQU   SDWACMKP                                                 05425000
SDWAIOP  EQU   SDWACMKP                                                 05426000
SDWANXTA EQU   SDWACTL1+5                                               05427000
SDWASGA  EQU   SDWAPMKA                                                 05428000
SDWAEUA  EQU   SDWAPMKA                                                 05429000
SDWADOA  EQU   SDWAPMKA                                                 05430000
SDWAFPA  EQU   SDWAPMKA                                                 05431000
SDWACCA  EQU   SDWAPMKA                                                 05432000
SDWAILA  EQU   SDWAPMKA                                                 05433000
SDWAINTA EQU   SDWACTL1+2                                               05434000
SDWASPVA EQU   SDWAMWPA                                                 05435000
SDWAWATA EQU   SDWAMWPA                                                 05436000
SDWAMCKA EQU   SDWAMWPA                                                 05437000
@NM00076 EQU   SDWAMWPA                                                 05438000
SDWAKEYA EQU   SDWAMWPA                                                 05439000
SDWAEXTA EQU   SDWACMKA                                                 05440000
SDWAIOA  EQU   SDWACMKA                                                 05441000
@NM00075 EQU   SDWACMPF                                                 05442000
SDWASTCC EQU   SDWACMPF                                                 05443000
@NM00074 EQU   SDWACMPF                                                 05444000
SDWASTEP EQU   SDWACMPF                                                 05445000
SDWAPARM EQU   SDWA                                                     05446000
SIRBEND  EQU   RBSECT+168                                               05447000
SVRBEND  EQU   RBSECT+168                                               05448000
RBRSV158 EQU   RBRSV150                                                 05449000
RBRSV157 EQU   RBRSV150                                                 05450000
RBRSV156 EQU   RBRSV150                                                 05451000
RBRSV155 EQU   RBRSV150                                                 05452000
RBRSV154 EQU   RBRSV150                                                 05453000
RBRSV153 EQU   RBRSV150                                                 05454000
RBRSV152 EQU   RBRSV150                                                 05455000
RBRSV151 EQU   RBRSV150                                                 05456000
RBRSV149 EQU   RBSECT+166                                               05457000
RBRSV148 EQU   RBSECT+164                                               05458000
RBSCBB   EQU   RBSECT+144                                               05459000
TIRBEND  EQU   @NM00072+8                                               05460000
PRBEND   EQU   @NM00072+8                                               05461000
RBRSV146 EQU   RBRSV138                                                 05462000
RBRSV145 EQU   RBRSV138                                                 05463000
RBRSV144 EQU   RBRSV138                                                 05464000
RBRSV143 EQU   RBRSV138                                                 05465000
RBRSV142 EQU   RBRSV138                                                 05466000
RBRSV141 EQU   RBRSV138                                                 05467000
RBRSV140 EQU   RBRSV138                                                 05468000
RBRSV139 EQU   RBRSV138                                                 05469000
RBRSV137 EQU   @NM00072+6                                               05470000
RBRSV136 EQU   @NM00072+4                                               05471000
RBRSV135 EQU   @NM00072                                                 05472000
@NM00071 EQU   RBSECT+32                                                05473000
@NM00070 EQU   @NM00068+1                                               05474000
@NM00069 EQU   @NM00068                                                 05475000
RBPGMQ1  EQU   RBPGMQ+1                                                 05476000
@NM00067 EQU   RBPGMQ                                                   05477000
@NM00066 EQU   RBSECT+16                                                05478000
@NM00065 EQU   @NM00061                                                 05479000
@NM00064 EQU   @NM00061                                                 05480000
RBIQETP  EQU   @NM00061                                                 05481000
RBUSIQE  EQU   RBETXR                                                   05482000
RBATTN   EQU   @NM00061                                                 05483000
@NM00063 EQU   @NM00061                                                 05484000
@NM00062 EQU   @NM00061                                                 05485000
RBPMSVRB EQU   @NM00059                                                 05486000
RBATNXIT EQU   @NM00059                                                 05487000
@NM00060 EQU   @NM00059                                                 05488000
RBWAITP  EQU   @NM00059                                                 05489000
RBFNSVRB EQU   RBTRSVRB                                                 05490000
RBFTP    EQU   @NM00059                                                 05491000
RBSIZE   EQU   RBSECT+8                                                 05492000
RBABOPSW EQU   RBSECT+4                                                 05493000
RBPPSAV1 EQU   RBPPSAV+1                                                05494000
@NM00057 EQU   RBPPSAV                                                  05495000
RBPRFXND EQU   RBPREFIX+64                                              05496000
RBINTCOD EQU   RBINTCDA+1                                               05497000
RBINLNTH EQU   RBINTCDA                                                 05498000
RBWCSA   EQU   RBPREFIX+60                                              05499000
RBRSV004 EQU   RBPREFIX+57                                              05500000
RBSSSYN  EQU   RBFLAGS1                                                 05501000
RBSCB    EQU   RBFLAGS1                                                 05502000
RBLONGWT EQU   RBFLAGS1                                                 05503000
RBASIR   EQU   RBFLAGS1                                                 05504000
RBRSV159 EQU   RBFLAGS1                                                 05505000
RBABEND  EQU   RBFLAGS1                                                 05506000
RBXWAIT  EQU   RBFLAGS1                                                 05507000
RBSLOCK  EQU   RBFLAGS1                                                 05508000
RBRTRAN  EQU   RBRTPSW2+4                                               05509000
RBRTINCD EQU   RBRTICIL+2                                               05510000
RBRTILC  EQU   RBRTICIL+1                                               05511000
RBRSV160 EQU   RBRTICIL                                                 05512000
RBRTPSW1 EQU   RBRTOPSW                                                 05513000
RBRSV062 EQU   RBRSV054                                                 05514000
RBRSV061 EQU   RBRSV054                                                 05515000
RBRSV060 EQU   RBRSV054                                                 05516000
RBRSV059 EQU   RBRSV054                                                 05517000
RBRSV058 EQU   RBRSV054                                                 05518000
RBRSV057 EQU   RBRSV054                                                 05519000
RBRSV056 EQU   RBRSV054                                                 05520000
RBRSV055 EQU   RBRSV054                                                 05521000
RBRSV053 EQU   RBPREFIX+38                                              05522000
RBRSV052 EQU   RBPREFIX+36                                              05523000
RBRSV051 EQU   RBPREFIX+32                                              05524000
RBPRFXST EQU   RBPREFIX+32                                              05525000
RBRSV050 EQU   RBPREFIX+28                                              05526000
RBRSV049 EQU   RBRSV041                                                 05527000
RBRSV048 EQU   RBRSV041                                                 05528000
RBRSV047 EQU   RBRSV041                                                 05529000
RBRSV046 EQU   RBRSV041                                                 05530000
RBRSV045 EQU   RBRSV041                                                 05531000
RBRSV044 EQU   RBRSV041                                                 05532000
RBRSV043 EQU   RBRSV041                                                 05533000
RBRSV042 EQU   RBRSV041                                                 05534000
RBRSV040 EQU   RBPREFIX+26                                              05535000
RBRSV039 EQU   RBPREFIX+24                                              05536000
RBRSV038 EQU   RBPREFIX+20                                              05537000
RBRSV037 EQU   RBPREFIX+16                                              05538000
RBRSV036 EQU   RBRSV028                                                 05539000
RBRSV035 EQU   RBRSV028                                                 05540000
RBRSV034 EQU   RBRSV028                                                 05541000
RBRSV033 EQU   RBRSV028                                                 05542000
RBRSV032 EQU   RBRSV028                                                 05543000
RBRSV031 EQU   RBRSV028                                                 05544000
RBRSV030 EQU   RBRSV028                                                 05545000
RBRSV029 EQU   RBRSV028                                                 05546000
RBRSV027 EQU   RBRSV019                                                 05547000
RBRSV026 EQU   RBRSV019                                                 05548000
RBRSV025 EQU   RBRSV019                                                 05549000
RBRSV024 EQU   RBRSV019                                                 05550000
RBRSV023 EQU   RBRSV019                                                 05551000
RBRSV022 EQU   RBRSV019                                                 05552000
RBRSV021 EQU   RBRSV019                                                 05553000
RBRSV020 EQU   RBRSV019                                                 05554000
RBRSV018 EQU   RBPREFIX+13                                              05555000
RBRSV017 EQU   RBPREFIX+12                                              05556000
RBSRV016 EQU   RBPREFIX+11                                              05557000
RBRSV015 EQU   RBPREFIX+10                                              05558000
RBRSV014 EQU   RBPREFIX+8                                               05559000
RBRSV013 EQU   RBPREFIX+4                                               05560000
RBRSV012 EQU   RBPREFIX                                                 05561000
RBEXSAVE EQU   XRBESA                                                   05562000
XRBREG15 EQU   RBGRS15                                                  05563000
XRBREG14 EQU   RBGRS14                                                  05564000
XRBREG13 EQU   RBGRS13                                                  05565000
XRBREG12 EQU   RBGRS12                                                  05566000
XRBREG11 EQU   RBGRS11                                                  05567000
XRBREG10 EQU   RBGRS10                                                  05568000
XRBREG9  EQU   RBGRS9                                                   05569000
XRBREG8  EQU   RBGRS8                                                   05570000
XRBREG7  EQU   RBGRS7                                                   05571000
XRBREG6  EQU   RBGRS6                                                   05572000
XRBREG5  EQU   RBGRS5                                                   05573000
XRBREG4  EQU   RBGRS4                                                   05574000
XRBREG3  EQU   RBGRS3                                                   05575000
XRBREG2  EQU   RBGRS2                                                   05576000
XRBREG1  EQU   RBGRS1                                                   05577000
XRBREG0  EQU   RBGRS0                                                   05578000
XRBLNKA  EQU   RBLINKB                                                  05579000
XRBWT    EQU   RBWCF                                                    05580000
@NM00056 EQU   RBBASIC+24                                               05581000
RBOPSWPS EQU   RBOPSWB2                                                 05582000
@NM00055 EQU   RBOPSWB2                                                 05583000
@NM00054 EQU   XRBPSW                                                   05584000
@NM00053 EQU   RBBASIC+12                                               05585000
XRBWAIT  EQU   RBECBWT                                                  05586000
XRBFRRB  EQU   RBFDYN                                                   05587000
@NM00052 EQU   XSTAB2                                                   05588000
XRBACTV  EQU   RBFACTV                                                  05589000
XRBTCBP  EQU   RBTCBNXT                                                 05590000
@NM00051 EQU   XSTAB1                                                   05591000
XRBCKPT  EQU   RBFTCKPT                                                 05592000
@NM00050 EQU   XSTAB1                                                   05593000
@NM00049 EQU   RBBASIC+8                                                05594000
@NM00048 EQU   RBEXRTNM+1                                               05595000
RBTMIND3 EQU   RBTMFLD                                                  05596000
RBTMIND2 EQU   RBTMFLD                                                  05597000
RBTMCMP  EQU   RBTMFLD                                                  05598000
RBWLIM   EQU   RBTMFLD                                                  05599000
RBRSV005 EQU   RBTMFLD                                                  05600000
RBTMTOD  EQU   RBTMFLD                                                  05601000
RBTMQUE  EQU   RBTMFLD                                                  05602000
@NM00047 EQU   RBPRFX                                                   05603000
PCCRSVD2 EQU   IEFPCCB+128                                              05604000
PCCLACBP EQU   IEFPCCB+124                                              05605000
PCCRSVD1 EQU   IEFPCCB+122                                              05606000
PCCTGCON EQU   IEFPCCB+72                                               05607000
PCCDDNAM EQU   IEFPCCB+20                                               05608000
PCCSTAT4 EQU   PCCSTATS+3                                               05609000
PCCSTAT3 EQU   PCCSTATS+2                                               05610000
PCCSTAT2 EQU   PCCSTATS+1                                               05611000
@NM00046 EQU   PCCSTAT1                                                 05612000
PCCTCL   EQU   PCCSTAT1                                                 05613000
PCCALIAS EQU   PCCSTAT1                                                 05614000
PCCSTEPC EQU   PCCSTAT1                                                 05615000
PCCPREVP EQU   IEFPCCB+8                                                05616000
PCCACRO  EQU   IEFPCCB                                                  05617000
PSCBU    EQU   PSCB+64                                                  05618000
PSCBRSZ  EQU   PSCB+60                                                  05619000
PSCBLINE EQU   PSCB+59                                                  05620000
PSCBCHAR EQU   PSCB+58                                                  05621000
PSCBUPTL EQU   PSCB+56                                                  05622000
PSCBUPT  EQU   PSCB+52                                                  05623000
PSCBRLGB EQU   PSCB+48                                                  05624000
PSCBDEST EQU   PSCB+40                                                  05625000
@NM00045 EQU   PSCB+36                                                  05626000
@NM00044 EQU   PSCB+32                                                  05627000
PSCBSOUT EQU   PSCB+31                                                  05628000
PSCBSUBM EQU   PSCB+30                                                  05629000
PSCBSUBC EQU   PSCB+29                                                  05630000
PSCBSUBH EQU   PSCB+28                                                  05631000
PSCBLTI2 EQU   PSCB+24                                                  05632000
PSCBLTIM EQU   PSCB+20                                                  05633000
PSCBATR2 EQU   PSCB+18                                                  05634000
@NM00043 EQU   PSCBATR1                                                 05635000
@NM00042 EQU   PSCBATR1                                                 05636000
PSCBRCVR EQU   PSCBATR1                                                 05637000
PSCBATTN EQU   PSCBATR1                                                 05638000
PSCBJCL  EQU   PSCBATR1                                                 05639000
PSCBACCT EQU   PSCBATR1                                                 05640000
PSCBCTRL EQU   PSCBATR1                                                 05641000
PSCBGPNM EQU   PSCB+8                                                   05642000
PSCBUSRL EQU   PSCB+7                                                   05643000
PSCBUSER EQU   PSCB                                                     05644000
ASCBEND  EQU   ASCB+208                                                 05645000
ASCBSRBT EQU   ASCB+200                                                 05646000
ASCBSWTL EQU   ASCB+196                                                 05647000
ASCBRS14 EQU   ASCB+195                                                 05648000
ASCBSMCT EQU   ASCB+194                                                 05649000
ASCBRS12 EQU   ASCB+192                                                 05650000
ASCBPCTT EQU   ASCB+188                                                 05651000
ASCBVGTT EQU   ASCB+184                                                 05652000
ASCBLGCB EQU   ASCB+180                                                 05653000
ASCBJBNS EQU   ASCB+176                                                 05654000
ASCBJBNI EQU   ASCB+172                                                 05655000
ASCBMCC  EQU   ASCB+168                                                 05656000
ASCBRTWA EQU   ASCB+164                                                 05657000
ASCBIQEA EQU   ASCB+160                                                 05658000
ASCBXMPQ EQU   ASCB+156                                                 05659000
ASCBRS01 EQU   ASCB+154                                                 05660000
ASCBFMCT EQU   ASCB+152                                                 05661000
ASCBOUXB EQU   ASCB+148                                                 05662000
ASCBOUCB EQU   ASCB+144                                                 05663000
ASCBMECB EQU   ASCB+140                                                 05664000
ASCBQECB EQU   ASCB+136                                                 05665000
ASCBCMSB EQU   ASCB+132                                                 05666000
ASCBCMSF EQU   ASCB+128                                                 05667000
ASCBTCBS EQU   ASCB+124                                                 05668000
ASCBNVSC EQU   ASCB+122                                                 05669000
ASCBVSC  EQU   ASCB+120                                                 05670000
ASCBSRBS EQU   ASCB+118                                                 05671000
ASCBSSRB EQU   ASCB+116                                                 05672000
ASCBRV06 EQU   ASCBFLG2                                                 05673000
ASCBRV05 EQU   ASCBFLG2                                                 05674000
ASCBRV04 EQU   ASCBFLG2                                                 05675000
ASCBSNQS EQU   ASCBFLG2                                                 05676000
ASCBS2S  EQU   ASCBFLG2                                                 05677000
ASCBCEXT EQU   ASCBFLG2                                                 05678000
ASCBPXMT EQU   ASCBFLG2                                                 05679000
ASCBXMPT EQU   ASCBFLG2                                                 05680000
ASCBRF07 EQU   ASCBDSP1                                                 05681000
ASCBRF06 EQU   ASCBDSP1                                                 05682000
ASCBRF05 EQU   ASCBDSP1                                                 05683000
ASCBRF04 EQU   ASCBDSP1                                                 05684000
ASCBRF03 EQU   ASCBDSP1                                                 05685000
ASCBRF02 EQU   ASCBDSP1                                                 05686000
ASCBFAIL EQU   ASCBDSP1                                                 05687000
ASCBNOQ  EQU   ASCBDSP1                                                 05688000
ASCBSWCT EQU   ASCB+112                                                 05689000
ASCBASXB EQU   ASCB+108                                                 05690000
ASCBTMCH EQU   ASCB+104                                                 05691000
ASCBNSWP EQU   ASCBFLG1                                                 05692000
ASCBTYP1 EQU   ASCBFLG1                                                 05693000
ASCBSTND EQU   ASCBFLG1                                                 05694000
ASCBABNT EQU   ASCBFLG1                                                 05695000
ASCBTERM EQU   ASCBFLG1                                                 05696000
ASCBS3S  EQU   ASCBFLG1                                                 05697000
ASCBCMSH EQU   ASCBFLG1                                                 05698000
ASCBTOFF EQU   ASCBFLG1                                                 05699000
ASCBRF01 EQU   ASCBRCTF                                                 05700000
ASCBTMLW EQU   ASCBRCTF                                                 05701000
ASCBOUT  EQU   ASCBRCTF                                                 05702000
ASCBWAIT EQU   ASCBRCTF                                                 05703000
ASCBRV08 EQU   ASCBRCTF                                                 05704000
ASCBFQU  EQU   ASCBRCTF                                                 05705000
ASCBFRS  EQU   ASCBRCTF                                                 05706000
ASCBTMNO EQU   ASCBRCTF                                                 05707000
ASCBAFFN EQU   ASCBFW1                                                  05708000
ASCBDUMP EQU   ASCB+96                                                  05709000
ASCBQSVC EQU   ASCB+92                                                  05710000
ASCBUBET EQU   ASCB+88                                                  05711000
ASCBECB  EQU   ASCB+84                                                  05712000
ASCBJSTL EQU   ASCB+80                                                  05713000
ASCBEWST EQU   ASCB+72                                                  05714000
ASCBEJST EQU   ASCB+64                                                  05715000
ASCBCSCB EQU   ASCB+56                                                  05716000
ASCBRSM  EQU   ASCB+52                                                  05717000
ASCBLDA  EQU   ASCB+48                                                  05718000
ASCBSTOR EQU   ASCB+44                                                  05719000
ASCBDP   EQU   ASCB+43                                                  05720000
ASCBRV07 EQU   ASCB+42                                                  05721000
ASCBIOSM EQU   ASCB+40                                                  05722000
ASCBSEQN EQU   ASCB+38                                                  05723000
ASCBASID EQU   ASCB+36                                                  05724000
ASCBCPUS EQU   ASCB+32                                                  05725000
ASCBSPL  EQU   ASCB+28                                                  05726000
ASCBLSLQ EQU   ASCB+24                                                  05727000
ASCBFSLQ EQU   ASCB+20                                                  05728000
ASCBIOSP EQU   ASCB+16                                                  05729000
ASCBLOCK EQU   ASCB+12                                                  05730000
ASCBBWDP EQU   ASCB+8                                                   05731000
ASCBFWDP EQU   ASCB+4                                                   05732000
ASCBASCB EQU   ASCB                                                     05733000
ASCBEGIN EQU   ASCB                                                     05734000
JSCBCSCB EQU   JSCBSEC1+68                                              05735000
JSCBPMG  EQU   JSCBWTP+2                                                05736000
JSCBWTSP EQU   JSCBWTP+1                                                05737000
JSCRSV23 EQU   JSCBWTFG                                                 05738000
JSCRSV22 EQU   JSCBWTFG                                                 05739000
JSCRSV21 EQU   JSCBWTFG                                                 05740000
JSCRSV20 EQU   JSCBWTFG                                                 05741000
JSCRSV19 EQU   JSCBWTFG                                                 05742000
JSCRSV18 EQU   JSCBWTFG                                                 05743000
JSCBRET  EQU   JSCBWTFG                                                 05744000
JSCBIOFG EQU   JSCBWTFG                                                 05745000
@NM00015 EQU   JSCBSEC1+60                                              05746000
JSCBQMPI EQU   JSCBSEC1+56                                              05747000
JSCBPMSG EQU   JSCBSWT1                                                 05748000
JSCRSV16 EQU   JSCBSWT1                                                 05749000
JSCRSV15 EQU   JSCBSWT1                                                 05750000
JSCRSV14 EQU   JSCBSWT1                                                 05751000
JSCRSV13 EQU   JSCBSWT1                                                 05752000
JSCRSV12 EQU   JSCBSWT1                                                 05753000
JSCRSV11 EQU   JSCBSWT1                                                 05754000
JSCBPASS EQU   JSCBSWT1                                                 05755000
JSCBTTTR EQU   JSCBSEC1+52                                              05756000
JSCRSV10 EQU   JSCBSEC1+49                                              05757000
JSCBAUTH EQU   JSCBOPTS                                                 05758000
JSCSIOTS EQU   JSCBOPTS                                                 05759000
JSCRSV08 EQU   JSCBOPTS                                                 05760000
JSCRSV07 EQU   JSCBOPTS                                                 05761000
JSCRSV06 EQU   JSCBOPTS                                                 05762000
JSCBLONG EQU   JSCBOPTS                                                 05763000
JSCRSV05 EQU   JSCBOPTS                                                 05764000
JSCRSV04 EQU   JSCBOPTS                                                 05765000
JSCBSECB EQU   JSCBSEC1+44                                              05766000
JSCRSV03 EQU   JSCBSEC1+41                                              05767000
JSCBSTEP EQU   JSCBSEC1+40                                              05768000
JSCBDCBA EQU   JSCBDCB+1                                                05769000
JSCRSV02 EQU   JSCBDCB                                                  05770000
JSCBID   EQU   JSCBSEC1+32                                              05771000
JSCBDBTB EQU   JSCBSEC1+28                                              05772000
JSCBIJSC EQU   JSCBSEC1+24                                              05773000
JSCBTCP  EQU   JSCBSEC1+12                                              05774000
JSCBSHR  EQU   JSCBSEC1+8                                               05775000
JSCHPCEA EQU   JSCHPCE+1                                                05776000
JSCRSV32 EQU   JSCHPCE                                                  05777000
JSCRSV01 EQU   JSCBSEC1                                                 05778000
@NM00014 EQU   IEZJSCB                                                  05779000
CVTLEVL  EQU   CVTRELNO+2                                               05780000
CVTNUMB  EQU   CVTRELNO                                                 05781000
CVTMDL   EQU   CVTFIX+250                                               05782000
@NM00013 EQU   CVTFIX+248                                               05783000
@NM00012 EQU   CVTFIX                                                   05784000
CVTRV482 EQU   CVTXTNT2+128                                             05785000
CVTRV481 EQU   CVTXTNT2+124                                             05786000
CVTRV480 EQU   CVTXTNT2+120                                             05787000
CVTRV479 EQU   CVTXTNT2+118                                             05788000
CVTRV478 EQU   CVTXTNT2+117                                             05789000
CVTRV477 EQU   CVTXTNT2+116                                             05790000
CVTRV476 EQU   CVTXTNT2+115                                             05791000
CVTRV475 EQU   CVTXTNT2+114                                             05792000
CVTRV474 EQU   CVTRV466                                                 05793000
CVTRV473 EQU   CVTRV466                                                 05794000
CVTRV472 EQU   CVTRV466                                                 05795000
CVTRV471 EQU   CVTRV466                                                 05796000
CVTRV470 EQU   CVTRV466                                                 05797000
CVTRV469 EQU   CVTRV466                                                 05798000
CVTRV468 EQU   CVTRV466                                                 05799000
CVTRV467 EQU   CVTRV466                                                 05800000
CVTRV465 EQU   CVTRV457                                                 05801000
CVTRV464 EQU   CVTRV457                                                 05802000
CVTRV463 EQU   CVTRV457                                                 05803000
CVTRV462 EQU   CVTRV457                                                 05804000
CVTRV461 EQU   CVTRV457                                                 05805000
CVTRV460 EQU   CVTRV457                                                 05806000
CVTRV459 EQU   CVTRV457                                                 05807000
CVTRV458 EQU   CVTRV457                                                 05808000
CVTRV456 EQU   CVTXTNT2+108                                             05809000
CVTRV455 EQU   CVTXTNT2+104                                             05810000
CVTRV454 EQU   CVTXTNT2+100                                             05811000
CVTRV453 EQU   CVTXTNT2+96                                              05812000
CVTRV452 EQU   CVTXTNT2+94                                              05813000
CVTRV451 EQU   CVTXTNT2+92                                              05814000
CVTRV450 EQU   CVTXTNT2+90                                              05815000
CVTRV449 EQU   CVTXTNT2+88                                              05816000
CVTRV448 EQU   CVTXTNT2+87                                              05817000
CVTRV447 EQU   CVTXTNT2+86                                              05818000
CVTRV446 EQU   CVTRV438                                                 05819000
CVTRV445 EQU   CVTRV438                                                 05820000
CVTRV444 EQU   CVTRV438                                                 05821000
CVTRV443 EQU   CVTRV438                                                 05822000
CVTRV442 EQU   CVTRV438                                                 05823000
CVTRV441 EQU   CVTRV438                                                 05824000
CVTRV440 EQU   CVTRV438                                                 05825000
CVTRV439 EQU   CVTRV438                                                 05826000
CVTRV437 EQU   CVTRV429                                                 05827000
CVTRV436 EQU   CVTRV429                                                 05828000
CVTRV435 EQU   CVTRV429                                                 05829000
CVTRV434 EQU   CVTRV429                                                 05830000
CVTRV433 EQU   CVTRV429                                                 05831000
CVTRV432 EQU   CVTRV429                                                 05832000
CVTRV431 EQU   CVTRV429                                                 05833000
CVTRV430 EQU   CVTRV429                                                 05834000
CVTRV428 EQU   CVTXTNT2+80                                              05835000
CVTRV427 EQU   CVTXTNT2+76                                              05836000
CVTRV426 EQU   CVTXTNT2+72                                              05837000
CVTRV425 EQU   CVTXTNT2+68                                              05838000
CVTATACT EQU   CVTATCVT                                                 05839000
CVTRV423 EQU   CVTXTNT2+62                                              05840000
CVTRV422 EQU   CVTXTNT2+60                                              05841000
CVTRV421 EQU   CVTXTNT2+58                                              05842000
CVTRV420 EQU   CVTXTNT2+56                                              05843000
CVTRV419 EQU   CVTXTNT2+55                                              05844000
CVTRV418 EQU   CVTXTNT2+54                                              05845000
CVTRV417 EQU   CVTRV409                                                 05846000
CVTRV416 EQU   CVTRV409                                                 05847000
CVTRV415 EQU   CVTRV409                                                 05848000
CVTRV414 EQU   CVTRV409                                                 05849000
CVTRV413 EQU   CVTRV409                                                 05850000
CVTRV412 EQU   CVTRV409                                                 05851000
CVTRV411 EQU   CVTRV409                                                 05852000
CVTRV410 EQU   CVTRV409                                                 05853000
CVTRV408 EQU   CVTRV400                                                 05854000
CVTRV407 EQU   CVTRV400                                                 05855000
CVTRV406 EQU   CVTRV400                                                 05856000
CVTRV405 EQU   CVTRV400                                                 05857000
CVTRV404 EQU   CVTRV400                                                 05858000
CVTRV403 EQU   CVTRV400                                                 05859000
CVTRV402 EQU   CVTRV400                                                 05860000
CVTRV401 EQU   CVTRV400                                                 05861000
CVTICB   EQU   CVTXTNT2+48                                              05862000
CVTSKTA  EQU   CVTXTNT2+44                                              05863000
CVTCCVT  EQU   CVTXTNT2+40                                              05864000
CVTRSV98 EQU   CVTXTNT2+36                                              05865000
CVTRSV97 EQU   CVTXTNT2+34                                              05866000
CVTRSV96 EQU   CVTXTNT2+32                                              05867000
CVTOLTEP EQU   CVTXTNT2+28                                              05868000
CVTQIDA  EQU   CVTQID+1                                                 05869000
CVTRSV95 EQU   CVTQID                                                   05870000
CVTRSV94 EQU   CVTXTNT2+20                                              05871000
CVTRSV93 EQU   CVTXTNT2+16                                              05872000
CVTRSV92 EQU   CVTXTNT2+12                                              05873000
CVTDEBVR EQU   CVTXTNT2+8                                               05874000
CVTRSV91 EQU   CVTXTNT2+6                                               05875000
CVTRSV9H EQU   CVTFLGBT                                                 05876000
CVTRSV9G EQU   CVTFLGBT                                                 05877000
CVTRSV9F EQU   CVTFLGBT                                                 05878000
CVTRSV9E EQU   CVTFLGBT                                                 05879000
CVTRSV9D EQU   CVTFLGBT                                                 05880000
CVTRSV9C EQU   CVTFLGBT                                                 05881000
CVTVME   EQU   CVTFLGBT                                                 05882000
CVTNPE   EQU   CVTFLGBT                                                 05883000
CVTNUCLS EQU   CVTXTNT2+4                                               05884000
CVTDSSVA EQU   CVTDSSV+1                                                05885000
CVTRSV89 EQU   CVTDSSV                                                  05886000
CVTRSV88 EQU   CVTXTNT1+8                                               05887000
CVTRSV87 EQU   CVTXTNT1+4                                               05888000
CVTFACHN EQU   CVTXTNT1                                                 05889000
CVTRV488 EQU   CVTMAP+412                                               05890000
CVTRV487 EQU   CVTMAP+408                                               05891000
CVTRV486 EQU   CVTMAP+404                                               05892000
CVTRV485 EQU   CVTMAP+400                                               05893000
CVTACTAP EQU   CVTMAP+396                                               05894000
CVTAUTH  EQU   CVTMAP+392                                               05895000
CVTATMCA EQU   CVTATMCT+1                                               05896000
CVTATMST EQU   CVTATMCT                                                 05897000
CVTRSV61 EQU   CVTMAP+384                                               05898000
CVTVOLT1 EQU   CVTVOLM1+1                                               05899000
CVTVOLI1 EQU   CVTVOLF1                                                 05900000
CVTSTOA  EQU   CVTMAP+376                                               05901000
CVTRSV58 EQU   CVTMAP+374                                               05902000
CVTRSV57 EQU   CVTMAP+372                                               05903000
CVTDDCE  EQU   CVTMAP+368                                               05904000
CVTPNWFR EQU   CVTMAP+364                                               05905000
CVTSMF   EQU   CVTMAP+360                                               05906000
CVTSULK  EQU   CVTMAP+358                                               05907000
CVTSLKO  EQU   CVTSYSK                                                  05908000
CVTSLKP  EQU   CVTSYSK                                                  05909000
CVTSLKQ  EQU   CVTSYSK                                                  05910000
CVTSLKR  EQU   CVTSYSK                                                  05911000
CVTRSV56 EQU   CVTSYSK                                                  05912000
CVTRSV55 EQU   CVTSYSK                                                  05913000
CVTRSV54 EQU   CVTSYSK                                                  05914000
CVTRSV53 EQU   CVTSYSK                                                  05915000
CVTRSV52 EQU   CVTA1F1                                                  05916000
CVTRSV51 EQU   CVTA1F1                                                  05917000
CVTRSV50 EQU   CVTA1F1                                                  05918000
CVTRSV49 EQU   CVTA1F1                                                  05919000
CVTRSV48 EQU   CVTA1F1                                                  05920000
CVTRSV47 EQU   CVTA1F1                                                  05921000
CVTSRSW  EQU   CVTA1F1                                                  05922000
CVTPFSW  EQU   CVTA1F1                                                  05923000
CVTPCVT  EQU   CVTMAP+352                                               05924000
CVTRSV46 EQU   CVTMAP+344                                               05925000
CVTRSV45 EQU   CVTMAP+340                                               05926000
CVTRSV44 EQU   CVTMAP+338                                               05927000
CVTRSV43 EQU   CVTMAP+336                                               05928000
CVTHJESA EQU   CVTHJES+1                                                05929000
CVTRSV42 EQU   CVTHJES                                                  05930000
CVTEXT2A EQU   CVTEXT2+1                                                05931000
CVTRSV41 EQU   CVTEXT2                                                  05932000
CVTAPFA  EQU   CVTAPF+1                                                 05933000
CVTRSV40 EQU   CVTAPF                                                   05934000
CVTRV518 EQU   CVTINTLA                                                 05935000
CVTRV517 EQU   CVTERPV                                                  05936000
CVTEORM  EQU   CVTMAP+312                                               05937000
CVTMCHPR EQU   CVTMAP+308                                               05938000
CVTTZ    EQU   CVTMAP+304                                               05939000
CVTJEPS  EQU   CVTMAP+300                                               05940000
CVTJESCT EQU   CVTMAP+296                                               05941000
CVTMODE  EQU   CVTMAP+292                                               05942000
CVTPTRV  EQU   CVTMAP+288                                               05943000
CVTREAL  EQU   CVTMAP+284                                               05944000
CVTRSV39 EQU   CVTMAP+280                                               05945000
CVTRSV38 EQU   CVTMAP+276                                               05946000
CVTDMSRA EQU   CVTDMSR+1                                                05947000
CVTRV634 EQU   CVTDMSRF                                                 05948000
CVTRV633 EQU   CVTDMSRF                                                 05949000
CVTRV632 EQU   CVTDMSRF                                                 05950000
CVTRV631 EQU   CVTDMSRF                                                 05951000
CVTRV630 EQU   CVTDMSRF                                                 05952000
CVTRV629 EQU   CVTDMSRF                                                 05953000
CVTUDUMP EQU   CVTDMSRF                                                 05954000
CVTSDUMP EQU   CVTDMSRF                                                 05955000
CVTQMSGA EQU   CVTQMSG+1                                                05956000
CVTRSV36 EQU   CVTQMSG                                                  05957000
CVTAMFF  EQU   CVTMAP+264                                               05958000
CVTPURGA EQU   CVTPURG+1                                                05959000
CVTRSV35 EQU   CVTPURG                                                  05960000
CVTCBSP  EQU   CVTMAP+256                                               05961000
CVTATERA EQU   CVTATER+1                                                05962000
CVTSYST  EQU   CVTATER                                                  05963000
CVTVOLT2 EQU   CVTTAT                                                   05964000
CVTVOLI2 EQU   CVTVOLF2                                                 05965000
CVTAQAVB EQU   CVTAQAVT+1                                               05966000
CVTRSV34 EQU   CVTTCMFG                                                 05967000
CVTRSV33 EQU   CVTTCMFG                                                 05968000
CVTRSV32 EQU   CVTTCMFG                                                 05969000
CVTRSV31 EQU   CVTTCMFG                                                 05970000
CVTRSV30 EQU   CVTTCMFG                                                 05971000
CVTRSV29 EQU   CVTTCMFG                                                 05972000
CVTRSV28 EQU   CVTTCMFG                                                 05973000
CVTTCRDY EQU   CVTTCMFG                                                 05974000
CVTGTFA  EQU   CVTGTF+1                                                 05975000
CVTRSV27 EQU   CVTGTFST                                                 05976000
CVTRNIO  EQU   CVTGTFST                                                 05977000
CVTUSR   EQU   CVTGTFST                                                 05978000
CVTRV318 EQU   CVTFORM                                                  05979000
CVTRV317 EQU   CVTTMODE                                                 05980000
CVTRV316 EQU   CVTSTATE                                                 05981000
CVTRV315 EQU   CVTGTFS                                                  05982000
CVTGTFAV EQU   CVTGTFS                                                  05983000
CVT0SCR1 EQU   CVTMAP+232                                               05984000
CVTRV515 EQU   CVTMAP+228                                               05985000
CVTRMS   EQU   CVTMAP+224                                               05986000
CVTPATCH EQU   CVTMAP+220                                               05987000
CVTTSCE  EQU   CVTMAP+216                                               05988000
CVTLNKSC EQU   CVTMAP+214                                               05989000
CVTQABST EQU   CVTMAP+212                                               05990000
CVTMDLDS EQU   CVTMAP+208                                               05991000
CVTUSER  EQU   CVTMAP+204                                               05992000
CVTABEND EQU   CVTMAP+200                                               05993000
CVTSMCA  EQU   CVTMAP+196                                               05994000
CVTRSV18 EQU   CVTMAP+192                                               05995000
CVTQLPAQ EQU   CVTMAP+188                                               05996000
CVTQCDSR EQU   CVTMAP+184                                               05997000
CVTRSV17 EQU   CVTOPTB                                                  05998000
CVTRSV16 EQU   CVTOPTB                                                  05999000
CVTFP    EQU   CVTOPTB                                                  06000000
CVTAPTHR EQU   CVTOPTB                                                  06001000
CVTNLOG  EQU   CVTOPTB                                                  06002000
CVTTOD   EQU   CVTOPTB                                                  06003000
CVTCTIMS EQU   CVTOPTB                                                  06004000
CVTPROT  EQU   CVTOPTB                                                  06005000
CVTXPFP  EQU   CVTOPTA                                                  06006000
CVTASCII EQU   CVTOPTA                                                  06007000
CVTRSV13 EQU   CVTOPTA                                                  06008000
CVTRSV12 EQU   CVTOPTA                                                  06009000
CVTNIP   EQU   CVTOPTA                                                  06010000
CVTDDR   EQU   CVTOPTA                                                  06011000
CVTAPR   EQU   CVTOPTA                                                  06012000
CVTCCH   EQU   CVTOPTA                                                  06013000
CVTSNCTR EQU   CVTMAP+180                                               06014000
CVTQMWR  EQU   CVTMAP+176                                               06015000
CVTQOCR  EQU   CVTMAP+172                                               06016000
CVT1EF00 EQU   CVTMAP+168                                               06017000
CVTMZ00  EQU   CVTMAP+164                                               06018000
CVTSV76Q EQU   CVTSV76C                                                 06019000
CVTRSV11 EQU   CVTMAP+156                                               06020000
CVT0PT01 EQU   CVTMAP+152                                               06021000
CVTMSER  EQU   CVTMAP+148                                               06022000
CVTRV516 EQU   CVTIERLC                                                 06023000
CVTILCH  EQU   CVTMAP+140                                               06024000
CVT0DS   EQU   CVTMAP+136                                               06025000
CVTFBOSV EQU   CVTMAP+132                                               06026000
CVTNUCB  EQU   CVTMAP+128                                               06027000
CVTIXAVL EQU   CVTMAP+124                                               06028000
CVTSV76M EQU   CVTIOQET                                                 06029000
CVTDCBA  EQU   CVTMAP+117                                               06030000
CVTMVS2  EQU   CVTDCB                                                   06031000
CVT6DAT  EQU   CVTDCB                                                   06032000
CVT4MPS  EQU   CVTDCB                                                   06033000
CVTRSV09 EQU   CVTDCB                                                   06034000
CVT4MS1  EQU   CVTDCB                                                   06035000
CVT2SPS  EQU   CVTDCB                                                   06036000
CVT1SSS  EQU   CVTDCB                                                   06037000
CVTRSV08 EQU   CVTDCB                                                   06038000
CVTSTB   EQU   CVTMAP+112                                               06039000
CVTQTD00 EQU   CVTMAP+108                                               06040000
CVTQTE00 EQU   CVTMAP+104                                               06041000
CVTCUCB  EQU   CVTMAP+100                                               06042000
CVTSJQ   EQU   CVTMAP+96                                                06043000
CVTPBLDL EQU   CVTMAP+92                                                06044000
CVTTPC   EQU   CVTMAP+88                                                06045000
CVTSVDCB EQU   CVTMAP+84                                                06046000
CVTBRET  EQU   CVTMAP+82                                                06047000
CVTEXIT  EQU   CVTMAP+80                                                06048000
CVT0FN00 EQU   CVTMAP+76                                                06049000
CVTDARA  EQU   CVTDAR+1                                                 06050000
CVTRSV07 EQU   CVTFLGS1                                                 06051000
CVTRSV06 EQU   CVTFLGS1                                                 06052000
CVTRSV05 EQU   CVTFLGS1                                                 06053000
CVTRSV04 EQU   CVTFLGS1                                                 06054000
CVTRSV03 EQU   CVTFLGS1                                                 06055000
CVTRSV02 EQU   CVTFLGS1                                                 06056000
CVTRSV01 EQU   CVTFLGS1                                                 06057000
CVTDMPLK EQU   CVTFLGS1                                                 06058000
CVTXITP  EQU   CVTMAP+68                                                06059000
CVTZDTAB EQU   CVTMAP+64                                                06060000
CVTMSLT  EQU   CVTMAP+60                                                06061000
CVTDATE  EQU   CVTMAP+56                                                06062000
CVTBTERM EQU   CVTMAP+52                                                06063000
CVTSYSAD EQU   CVTMAP+48                                                06064000
CVTXTLER EQU   CVTMAP+44                                                06065000
CVTILK2  EQU   CVTMAP+40                                                06066000
CVTILK1  EQU   CVTMAP+36                                                06067000
CVTPRLTV EQU   CVTMAP+32                                                06068000
CVTPCNVT EQU   CVTMAP+28                                                06069000
CVT0VL00 EQU   CVTMAP+24                                                06070000
CVTXAPG  EQU   CVTMAP+20                                                06071000
CVTBUF   EQU   CVTMAP+16                                                06072000
CVTJOB   EQU   CVTMAP+12                                                06073000
CVTLINK  EQU   CVTMAP+8                                                 06074000
CVT0EF00 EQU   CVTMAP+4                                                 06075000
CVTTCBP  EQU   CVTMAP                                                   06076000
CVT      EQU   CVTMAP                                                   06077000
@NM00011 EQU   TCBXTNT2+32                                              06078000
TCBRV181 EQU   TCBRV173                                                 06079000
TCBRV180 EQU   TCBRV173                                                 06080000
TCBRV179 EQU   TCBRV173                                                 06081000
TCBRV178 EQU   TCBRV173                                                 06082000
TCBRV177 EQU   TCBRV173                                                 06083000
TCBRV176 EQU   TCBRV173                                                 06084000
TCBRV175 EQU   TCBRV173                                                 06085000
TCBRV174 EQU   TCBRV173                                                 06086000
TCBRV172 EQU   TCBRV164                                                 06087000
TCBRV171 EQU   TCBRV164                                                 06088000
TCBRV170 EQU   TCBRV164                                                 06089000
TCBRV169 EQU   TCBRV164                                                 06090000
TCBRV168 EQU   TCBRV164                                                 06091000
TCBRV167 EQU   TCBRV164                                                 06092000
TCBRV166 EQU   TCBRV164                                                 06093000
TCBRV165 EQU   TCBRV164                                                 06094000
TCBRV163 EQU   TCBRV155                                                 06095000
TCBRV162 EQU   TCBRV155                                                 06096000
TCBRV161 EQU   TCBRV155                                                 06097000
TCBRV160 EQU   TCBRV155                                                 06098000
TCBRV159 EQU   TCBRV155                                                 06099000
TCBRV158 EQU   TCBRV155                                                 06100000
TCBRV157 EQU   TCBRV155                                                 06101000
TCBRV156 EQU   TCBRV155                                                 06102000
TCBRV154 EQU   TCBRV146                                                 06103000
TCBRV153 EQU   TCBRV146                                                 06104000
TCBRV152 EQU   TCBRV146                                                 06105000
TCBRV151 EQU   TCBRV146                                                 06106000
TCBRV150 EQU   TCBRV146                                                 06107000
TCBRV149 EQU   TCBRV146                                                 06108000
TCBRV148 EQU   TCBRV146                                                 06109000
TCBRV147 EQU   TCBRV146                                                 06110000
TCBRV145 EQU   TCBXTNT2+26                                              06111000
TCBRV144 EQU   TCBXTNT2+24                                              06112000
TCBCAUF  EQU   TCBXTNT2+20                                              06113000
TCBRV142 EQU   TCBXTNT2+16                                              06114000
TCBRSV49 EQU   TCBXTNT2+12                                              06115000
TCBEVENT EQU   TCBXTNT2+8                                               06116000
TCBRCMP  EQU   TCBXTNT2+5                                               06117000
TCBRSVAB EQU   TCBXTNT2+4                                               06118000
TCBGTFA  EQU   TCBGTF+1                                                 06119000
TCBRSV47 EQU   TCBTFLG                                                  06120000
TCBRSV46 EQU   TCBTFLG                                                  06121000
TCBRSV45 EQU   TCBTFLG                                                  06122000
TCBRSV44 EQU   TCBTFLG                                                  06123000
TCBRSV43 EQU   TCBTFLG                                                  06124000
TCBDSPIT EQU   TCBTFLG                                                  06125000
TCBERRTN EQU   TCBTFLG                                                  06126000
TCBASYNC EQU   TCBTFLG                                                  06127000
@NM00010 EQU   TCB+296                                                  06128000
TCBSVCA2 EQU   TCB+292                                                  06129000
TCBSWASA EQU   TCB+288                                                  06130000
TCBDBTB  EQU   TCB+284                                                  06131000
TCBRPT   EQU   TCB+280                                                  06132000
TCBRV141 EQU   TCBRV133                                                 06133000
TCBRV140 EQU   TCBRV133                                                 06134000
TCBRV139 EQU   TCBRV133                                                 06135000
TCBRV138 EQU   TCBRV133                                                 06136000
TCBRV137 EQU   TCBRV133                                                 06137000
TCBRV136 EQU   TCBRV133                                                 06138000
TCBRV135 EQU   TCBRV133                                                 06139000
TCBRV134 EQU   TCBRV133                                                 06140000
TCBRV132 EQU   TCBRV124                                                 06141000
TCBRV131 EQU   TCBRV124                                                 06142000
TCBRV130 EQU   TCBRV124                                                 06143000
TCBRV129 EQU   TCBRV124                                                 06144000
TCBRV128 EQU   TCBRV124                                                 06145000
TCBRV127 EQU   TCBRV124                                                 06146000
TCBRV126 EQU   TCBRV124                                                 06147000
TCBRV125 EQU   TCBRV124                                                 06148000
TCBRV123 EQU   TCBFBYT2                                                 06149000
TCBRV122 EQU   TCBFBYT2                                                 06150000
TCBECBNV EQU   TCBFBYT2                                                 06151000
TCBSSSYN EQU   TCBFBYT2                                                 06152000
TCBFPRAP EQU   TCBFBYT2                                                 06153000
TCBFDW   EQU   TCBFBYT2                                                 06154000
TCBFMW   EQU   TCBFBYT2                                                 06155000
TCBCNCB  EQU   TCBFBYT2                                                 06156000
TCBLLH   EQU   TCBFBYT1                                                 06157000
TCBRV113 EQU   TCBFBYT1                                                 06158000
TCBEOT   EQU   TCBFBYT1                                                 06159000
TCBRTM2  EQU   TCBFBYT1                                                 06160000
TCBPGNLY EQU   TCBFBYT1                                                 06161000
TCBNDIOS EQU   TCBFBYT1                                                 06162000
TCBACTIV EQU   TCBFBYT1                                                 06163000
TCBEOTFM EQU   TCBFBYT1                                                 06164000
TCBAFFN  EQU   TCB+274                                                  06165000
TCBCCPVI EQU   TCB+272                                                  06166000
TCBUKYSP EQU   TCB+268                                                  06167000
TCBMODE  EQU   TCBESTAE+3                                               06168000
TCBERTYP EQU   TCBESTAE+2                                               06169000
TCBRV314 EQU   TCBESTRM                                                 06170000
TCBRV313 EQU   TCBESTRM                                                 06171000
TCBRV312 EQU   TCBESTRM                                                 06172000
TCBRV311 EQU   TCBESTRM                                                 06173000
TCBRV310 EQU   TCBESTRM                                                 06174000
TCBRV309 EQU   TCBESTRM                                                 06175000
TCBRV308 EQU   TCBESTRM                                                 06176000
TCBETERM EQU   TCBESTRM                                                 06177000
TCBSCBKY EQU   TCBESTAE                                                 06178000
TCBRTM12 EQU   TCB+260                                                  06179000
TCBTCBID EQU   TCB+256                                                  06180000
TCBRSV96 EQU   TCB+252                                                  06181000
TCBSWA   EQU   TCB+248                                                  06182000
TCBFOEA  EQU   TCBFOE+1                                                 06183000
TCBRSV42 EQU   TCBFOE                                                   06184000
TCBRV306 EQU   TCB+240                                                  06185000
TCBRSV41 EQU   TCB+239                                                  06186000
TCBTID   EQU   TCB+238                                                  06187000
TCBRSVAA EQU   TCB+237                                                  06188000
TCBABCUR EQU   TCB+236                                                  06189000
TCBTMSAV EQU   TCB+232                                                  06190000
TCBIOTIM EQU   TCB+228                                                  06191000
TCBRTWA  EQU   TCB+224                                                  06192000
TCBBACK  EQU   TCB+220                                                  06193000
TCBTIRB  EQU   TCB+216                                                  06194000
TCBAECB  EQU   TCB+212                                                  06195000
TCBEXT2A EQU   TCBEXT2+1                                                06196000
TCBRSV39 EQU   TCBEXT2                                                  06197000
TCBSTMCT EQU   TCB+207                                                  06198000
TCBSYSCT EQU   TCB+206                                                  06199000
TCBRSV37 EQU   TCB+205                                                  06200000
TCBEXSVC EQU   TCBDAR                                                   06201000
TCBDARMS EQU   TCBDAR                                                   06202000
TCBDARWT EQU   TCBDAR                                                   06203000
TCBDARO  EQU   TCBDAR                                                   06204000
TCBDARMC EQU   TCBDARC                                                  06205000
TCBDARD  EQU   TCBDAR                                                   06206000
TCBDARS  EQU   TCBDAR                                                   06207000
TCBDARP  EQU   TCBDAR                                                   06208000
TCBGTOFM EQU   TCBFLGS7                                                 06209000
TCBADMP  EQU   TCBFLGS7                                                 06210000
TCBRSTSK EQU   TCBFLGS7                                                 06211000
TCBSVCS  EQU   TCBFLGS7                                                 06212000
TCBSTACK EQU   TCBFLGS7                                                 06213000
TCBRSV34 EQU   TCBFLGS7                                                 06214000
TCBRSV33 EQU   TCBFLGS7                                                 06215000
TCBGPECB EQU   TCBFLGS7                                                 06216000
TCBNTJS  EQU   TCBFLGS6                                                 06217000
TCBAPG   EQU   TCBFLGS6                                                 06218000
TCBMIGR  EQU   TCBFLGS6                                                 06219000
TCBRV303 EQU   TCBFLGS6                                                 06220000
TCBSPVLK EQU   TCBFLGS6                                                 06221000
TCBCPU   EQU   TCBFLGS6                                                 06222000
TCBPIE17 EQU   TCBFLGS6                                                 06223000
TCBRV    EQU   TCBFLGS6                                                 06224000
TCBRSV79 EQU   TCBNDSP5                                                 06225000
TCBRSV78 EQU   TCBNDSP5                                                 06226000
TCBRSV77 EQU   TCBNDSP5                                                 06227000
TCBRSV76 EQU   TCBNDSP5                                                 06228000
TCBRSV75 EQU   TCBNDSP5                                                 06229000
TCBRSV74 EQU   TCBNDSP5                                                 06230000
TCBRSV95 EQU   TCBNDSP5                                                 06231000
TCBRSV94 EQU   TCBNDSP5                                                 06232000
TCBRSV93 EQU   TCBNDSP4                                                 06233000
TCBRSV92 EQU   TCBNDSP4                                                 06234000
TCBRSV91 EQU   TCBNDSP4                                                 06235000
TCBRSV90 EQU   TCBNDSP4                                                 06236000
TCBRSV89 EQU   TCBNDSP4                                                 06237000
TCBRSV88 EQU   TCBNDSP4                                                 06238000
TCBRSV87 EQU   TCBNDSP4                                                 06239000
TCBRSV86 EQU   TCBNDSP4                                                 06240000
TCBEXT1A EQU   TCBEXT1+1                                                06241000
TCBRSV32 EQU   TCBEXT1                                                  06242000
TCBEXCPD EQU   TCB+192                                                  06243000
TCBIOBRC EQU   TCB+188                                                  06244000
TCBDDWTC EQU   TCB+186                                                  06245000
TCBDDEXC EQU   TCB+184                                                  06246000
TCBJSCBB EQU   TCBJSCB+1                                                06247000
@NM00009 EQU   TCBRECDE                                                 06248000
TCBREC   EQU   TCBRECDE                                                 06249000
TCBMDIDS EQU   TCB+176                                                  06250000
TCBNDINT EQU   TCBNDSP3                                                 06251000
TCBRSV27 EQU   TCBNDSP3                                                 06252000
TCBRSV26 EQU   TCBNDSP3                                                 06253000
TCBRSV25 EQU   TCBNDSP3                                                 06254000
TCBRSV24 EQU   TCBNDSP3                                                 06255000
TCBSRBND EQU   TCBNDSP3                                                 06256000
TCBRV302 EQU   TCBNDSP3                                                 06257000
TCBLJSND EQU   TCBNDSP3                                                 06258000
TCBABE   EQU   TCBNDSP2                                                 06259000
TCBDSS   EQU   TCBNDSP2                                                 06260000
TCBOWAIT EQU   TCBNDSP2                                                 06261000
TCBIWAIT EQU   TCBNDSP2                                                 06262000
TCBNDTS  EQU   TCBNDSP2                                                 06263000
TCBNDSVC EQU   TCBNDSP2                                                 06264000
TCBSTPP  EQU   TCBNDSP2                                                 06265000
TCBABD   EQU   TCBNDSP2                                                 06266000
TCBRSV22 EQU   TCBNDSP1                                                 06267000
TCBPIEND EQU   TCBNDSP1                                                 06268000
TCBTPSP  EQU   TCBNDSP1                                                 06269000
TCBDDRND EQU   TCBNDSP1                                                 06270000
TCBRSPND EQU   TCBNDSP1                                                 06271000
TCBRSTND EQU   TCBNDSP1                                                 06272000
TCBDARPN EQU   TCBNDSP1                                                 06273000
TCBDARTN EQU   TCBNDSP1                                                 06274000
TCBNDSP0 EQU   TCBNDSP                                                  06275000
TCBUSER  EQU   TCB+168                                                  06276000
TCBTCTB  EQU   TCBTCT+1                                                 06277000
TCBRSV9C EQU   TCBTCTGF                                                 06278000
TCBRSV9B EQU   TCBTCTGF                                                 06279000
TCBRSV9A EQU   TCBTCTGF                                                 06280000
TCBRSV99 EQU   TCBTCTGF                                                 06281000
TCBRSV98 EQU   TCBTCTGF                                                 06282000
TCBRSV97 EQU   TCBTCTGF                                                 06283000
TCBRSV20 EQU   TCBTCTGF                                                 06284000
TCBSMFGF EQU   TCBTCTGF                                                 06285000
TCBSTABB EQU   TCBSTAB+1                                                06286000
TCBSTCUR EQU   TCBNSTAE                                                 06287000
TCBRV301 EQU   TCBNSTAE                                                 06288000
TCBSYNCH EQU   TCBNSTAE                                                 06289000
TCBHALT  EQU   TCBNSTAE                                                 06290000
TCBPPSUP EQU   TCBNSTAE                                                 06291000
TCB33E   EQU   TCBNSTAE                                                 06292000
TCBQUIES EQU   TCBNSTAE                                                 06293000
TCBSTABE EQU   TCBNSTAE                                                 06294000
TCBAQE   EQU   TCB+156                                                  06295000
TCBPQE   EQU   TCB+152                                                  06296000
TCBTSDP  EQU   TCB+151                                                  06297000
TCBTSLP  EQU   TCB+150                                                  06298000
TCBSTPCT EQU   TCB+149                                                  06299000
TCBCPUBN EQU   TCBTSFLG                                                 06300000
TCBDYDSP EQU   TCBTSFLG                                                 06301000
TCBRSV18 EQU   TCBTSFLG                                                 06302000
TCBRSV17 EQU   TCBTSFLG                                                 06303000
TCBTIOTG EQU   TCBTSFLG                                                 06304000
TCBATT   EQU   TCBTSFLG                                                 06305000
TCBSTPPR EQU   TCBTSFLG                                                 06306000
TCBRV300 EQU   TCBTSTSK                                                 06307000
TCBECB   EQU   TCB+144                                                  06308000
TCBIQE   EQU   TCB+140                                                  06309000
TCBLTC   EQU   TCB+136                                                  06310000
TCBOTC   EQU   TCB+132                                                  06311000
TCBNTC   EQU   TCB+128                                                  06312000
TCBJSTCA EQU   TCBJSTCB+1                                               06313000
TCBRSV16 EQU   TCBJSTCB                                                 06314000
TCBTQET  EQU   TCBTME                                                   06315000
TCBTCB   EQU   TCB+116                                                  06316000
TCBFSAB  EQU   TCBFSA+1                                                 06317000
TCBQEL   EQU   TCBFSA                                                   06318000
TCBGRS15 EQU   TCBGRS+60                                                06319000
TCBGRS14 EQU   TCBGRS+56                                                06320000
TCBGRS13 EQU   TCBGRS+52                                                06321000
TCBGRS12 EQU   TCBGRS+48                                                06322000
TCBGRS11 EQU   TCBGRS+44                                                06323000
TCBGRS10 EQU   TCBGRS+40                                                06324000
TCBGRS9  EQU   TCBGRS+36                                                06325000
TCBGRS8  EQU   TCBGRS+32                                                06326000
TCBGRS7  EQU   TCBGRS+28                                                06327000
TCBGRS6  EQU   TCBGRS+24                                                06328000
TCBGRS5  EQU   TCBGRS+20                                                06329000
TCBGRS4  EQU   TCBGRS+16                                                06330000
TCBGRS3  EQU   TCBGRS+12                                                06331000
TCBGRS2  EQU   TCBGRS+8                                                 06332000
TCBGRS1  EQU   TCBGRS+4                                                 06333000
TCBGRS0  EQU   TCBGRS                                                   06334000
TCBJPQB  EQU   TCBJPQ+1                                                 06335000
TCBRSV15 EQU   TCBPURGE                                                 06336000
TCBRSV14 EQU   TCBPURGE                                                 06337000
TCBRSV13 EQU   TCBPURGE                                                 06338000
TCBRSV12 EQU   TCBPURGE                                                 06339000
TCBRSV11 EQU   TCBPURGE                                                 06340000
TCBRSV10 EQU   TCBPURGE                                                 06341000
TCBRSV09 EQU   TCBPURGE                                                 06342000
TCBJPQF  EQU   TCBPURGE                                                 06343000
TCBJLB   EQU   TCB+40                                                   06344000
TCBLLS   EQU   TCB+36                                                   06345000
TCBDSP   EQU   TCB+35                                                   06346000
TCBLMP   EQU   TCB+34                                                   06347000
TCBPNDSP EQU   TCBFLGS5                                                 06348000
TCBFCD1  EQU   TCBFLGS5                                                 06349000
TCBSTP   EQU   TCBFLGS5                                                 06350000
TCBSYS   EQU   TCBFLGS5                                                 06351000
TCBANDSP EQU   TCBFLGS5                                                 06352000
TCBPAGE  EQU   TCBFLGS5                                                 06353000
TCBUXNDF EQU   TCBABWF                                                  06354000
TCBFC    EQU   TCBFLGS5                                                 06355000
TCBONDSP EQU   TCBFLGS4                                                 06356000
TCBMPCND EQU   TCBFLGS4                                                 06357000
TCBMPCVQ EQU   TCBFLGS4                                                 06358000
TCBUXNDV EQU   TCBFLGS4                                                 06359000
TCBHNDSP EQU   TCBFLGS4                                                 06360000
TCBRQENA EQU   TCBFLGS4                                                 06361000
TCBSER   EQU   TCBFLGS4                                                 06362000
TCBNDUMP EQU   TCBFLGS4                                                 06363000
TCBDWSTA EQU   TCBFLGS3                                                 06364000
TCBRSV08 EQU   TCBFLGS3                                                 06365000
TCBRSV07 EQU   TCBFLGS3                                                 06366000
TCBRSV06 EQU   TCBFLGS3                                                 06367000
TCBABGM  EQU   TCBFLGS3                                                 06368000
TCBABTRM EQU   TCBFLGS3                                                 06369000
TCBADINP EQU   TCBFLGS3                                                 06370000
TCBFSM   EQU   TCBFLGS3                                                 06371000
TCBFTS   EQU   TCBFLGS2                                                 06372000
TCBFETXR EQU   TCBFLGS2                                                 06373000
TCBFDSOP EQU   TCBFLGS2                                                 06374000
TCBFJMC  EQU   TCBFLGS2                                                 06375000
TCBFSMC  EQU   TCBFLGS2                                                 06376000
TCBFABOP EQU   TCBFLGS2                                                 06377000
TCBFSTI  EQU   TCBFLGS2                                                 06378000
TCBFOINP EQU   TCBFLGS2                                                 06379000
TCBFX    EQU   TCBFLGS1                                                 06380000
TCBFS    EQU   TCBFLGS1                                                 06381000
TCBFT    EQU   TCBFLGS1                                                 06382000
TCBPDUMP EQU   TCBFLGS1                                                 06383000
TCBNONPR EQU   TCBFLGS1                                                 06384000
TCBFERA  EQU   TCBFLGS1                                                 06385000
TCBFE    EQU   TCBFLGS1                                                 06386000
TCBFA    EQU   TCBFLGS1                                                 06387000
TCBZERO  EQU   TCBPKF                                                   06388000
TCBFLAG  EQU   TCBPKF                                                   06389000
TCBMSSB  EQU   TCBMSS+1                                                 06390000
TCBRSV03 EQU   TCBMSS                                                   06391000
TCBTRNB  EQU   TCBTRN+1                                                 06392000
TCBRSV02 EQU   TCBABF                                                   06393000
TCBOLTEP EQU   TCBABF                                                   06394000
TCBTCP   EQU   TCBABF                                                   06395000
TCBTCPP  EQU   TCBABF                                                   06396000
TCBRSV01 EQU   TCBABF                                                   06397000
TCBGRPH  EQU   TCBABF                                                   06398000
TCBNOCHK EQU   TCBABF                                                   06399000
TCBMOD91 EQU   TCBABF                                                   06400000
TCBCMPC  EQU   TCBCMP+1                                                 06401000
TCBRV318 EQU   TCBCMSG                                                  06402000
TCBRV317 EQU   TCBCIND                                                  06403000
TCBRV316 EQU   TCBCWTO                                                  06404000
TCBCASID EQU   TCBCDBL                                                  06405000
TCBNOCC  EQU   TCBSTCC                                                  06406000
TCBDMPO  EQU   TCBCPP                                                   06407000
TCBCSTEP EQU   TCBCMPF                                                  06408000
TCBCREQ  EQU   TCBCMPF                                                  06409000
TCBDEB   EQU   TCB+8                                                    06410000
TCBPIEA  EQU   TCBPIE+1                                                 06411000
TCBPM    EQU   TCBPMASK                                                 06412000
@NM00008 EQU   TCBPMASK                                                 06413000
TCBFRS6  EQU   TCBFRS+24                                                06414000
TCBFRS4  EQU   TCBFRS+16                                                06415000
TCBFRS2  EQU   TCBFRS+8                                                 06416000
TCBFRS0  EQU   TCBFRS                                                   06417000
CTGFLDWA EQU   CTGFL+4                                                  06418000
CTGFLDTS EQU   CTGFLDRE                                                 06419000
@NM00007 EQU   CTGFLDRE                                                 06420000
CTGFLDGC EQU   CTGFL+2                                                  06421000
CTGFLDCD EQU   CTGFL+1                                                  06422000
CTGFLDNO EQU   CTGFL                                                    06423000
CTGCVDEV EQU   CTGCVDSN                                                 06424000
@NM00006 EQU   CTGVLX                                                   06425000
CTGPSWD  EQU   CTGJSCB                                                  06426000
@NM00004 EQU   CTGFBFLG                                                 06427000
CTGKEEP  EQU   CTGFBFLG                                                 06428000
CTGPAR   EQU   CTGFBFLG                                                 06429000
@NM00003 EQU   CTGDSORG                                                 06430000
CTGFVT   EQU   CTGENT                                                   06431000
@NM00002 EQU   CTGOPTN4                                                 06432000
CTGBYPMT EQU   CTGOPTN4                                                 06433000
CTGCOIN  EQU   CTGOPTN4                                                 06434000
CTGNPROF EQU   CTGOPTN4                                                 06435000
CTGAM0   EQU   CTGOPTN3                                                 06436000
CTGNUM   EQU   CTGOPTN3                                                 06437000
@NM00001 EQU   CTGOPTN2                                                 06438000
CTGOVRID EQU   CTGOPTN2                                                 06439000
CTGDISC  EQU   CTGOPTN2                                                 06440000
CTGUCRAX EQU   CTGGTNXT                                                 06441000
CTGSWAP  EQU   CTGRCATN                                                 06442000
CTGGTALL EQU   CTGREL                                                   06443000
CTGNSVS  EQU   CTGEXT                                                   06444000
CTGNAME  EQU   CTGOPTN1                                                 06445000
CTGREAD  EQU   CTGOPTN1                                                 06446000
CTGUPD   EQU   CTGOPTN1                                                 06447000
CTGCI    EQU   CTGOPTN1                                                 06448000
CTGMAST  EQU   CTGOPTN1                                                 06449000
CTGBYPSS EQU   CTGOPTN1                                                 06450000
@NM00041 EQU   PSA+3668                                                 06451000
PSASTAK  EQU   PSA+3072                                                 06452000
@NM00040 EQU   PSA+1048                                                 06453000
PSAUSEND EQU   PSA+1048                                                 06454000
PSARV062 EQU   PSA+1044                                                 06455000
PSACDAL  EQU   PSA+1040                                                 06456000
PSAWTCOD EQU   PSA+1036                                                 06457000
PSAATCVT EQU   PSA+1032                                                 06458000
PSAPCPSW EQU   PSA+1024                                                 06459000
PSAPIR2  EQU   PSA+1020                                                 06460000
PSARV059 EQU   PSA+1018                                                 06461000
PSASVC13 EQU   PSA+1016                                                 06462000
PSALSFCC EQU   PSA+1012                                                 06463000
PSASFACC EQU   PSA+1008                                                 06464000
PSASTOP  EQU   PSA+992                                                  06465000
PSASTART EQU   PSA+976                                                  06466000
PSARSPSW EQU   PSA+968                                                  06467000
PSASRPSW EQU   PSA+960                                                  06468000
PSARV045 EQU   PSA+892                                                  06469000
PSARV044 EQU   PSA+888                                                  06470000
PSARV043 EQU   PSA+884                                                  06471000
PSARV042 EQU   PSA+880                                                  06472000
PSARV041 EQU   PSA+876                                                  06473000
PSARV040 EQU   PSA+872                                                  06474000
PSARV025 EQU   PSA+868                                                  06475000
PSADSSED EQU   PSA+868                                                  06476000
PSADSSPR EQU   PSA+864                                                  06477000
PSADSSFW EQU   PSA+860                                                  06478000
PSADSS14 EQU   PSA+856                                                  06479000
PSADSSPP EQU   PSA+848                                                  06480000
PSADSSRP EQU   PSA+840                                                  06481000
PSADSS05 EQU   PSADSSF4                                                 06482000
PSADSS10 EQU   PSADSSF4                                                 06483000
PSADSSVE EQU   PSADSSF4                                                 06484000
PSADSSDE EQU   PSADSSF4                                                 06485000
PSADSSC0 EQU   PSADSSF4                                                 06486000
PSADSSIE EQU   PSADSSF4                                                 06487000
PSADSS12 EQU   PSADSSF4                                                 06488000
PSADSSRC EQU   PSADSSF4                                                 06489000
PSARV057 EQU   PSADSSF3                                                 06490000
PSARV056 EQU   PSADSSF3                                                 06491000
PSARV055 EQU   PSADSSF3                                                 06492000
PSADSSMC EQU   PSADSSF3                                                 06493000
PSADSSRW EQU   PSADSSF3                                                 06494000
PSADSSNM EQU   PSADSSF3                                                 06495000
PSADSSES EQU   PSADSSF3                                                 06496000
PSADSSGP EQU   PSADSSF3                                                 06497000
PSADSSF2 EQU   PSADSSFL+1                                               06498000
PSADSSPI EQU   PSADSSF1                                                 06499000
PSADSSOI EQU   PSADSSF1                                                 06500000
PSADSSSP EQU   PSADSSF1                                                 06501000
PSADSSTP EQU   PSADSSF1                                                 06502000
PSADSSDW EQU   PSADSSF1                                                 06503000
PSADSSDD EQU   PSADSSF1                                                 06504000
PSADSSDM EQU   PSADSSF1                                                 06505000
PSADSSMV EQU   PSADSSF1                                                 06506000
PSADSSTS EQU   PSA+816                                                  06507000
PSADSSWK EQU   PSA+812                                                  06508000
PSADSSR3 EQU   PSA+808                                                  06509000
PSADSSR2 EQU   PSA+804                                                  06510000
PSADSSRS EQU   PSA+800                                                  06511000
PSASTOR  EQU   PSA+796                                                  06512000
PSACPUSA EQU   PSA+794                                                  06513000
PSAVSTAP EQU   PSA+792                                                  06514000
PSAWKVAP EQU   PSA+788                                                  06515000
PSAWKRAP EQU   PSA+784                                                  06516000
PSAMCHIC EQU   PSA+783                                                  06517000
PSARV061 EQU   PSA+782                                                  06518000
PSASYMSK EQU   PSA+781                                                  06519000
PSAMCHFL EQU   PSA+780                                                  06520000
PSACR0   EQU   PSA+776                                                  06521000
PSAPSWSV EQU   PSA+768                                                  06522000
PSALITA  EQU   PSA+764                                                  06523000
PSACLHS  EQU   PSAHLHI                                                  06524000
PSALKR15 EQU   PSALKSA+60                                               06525000
PSALKR14 EQU   PSALKSA+56                                               06526000
PSALKR13 EQU   PSALKSA+52                                               06527000
PSALKR12 EQU   PSALKSA+48                                               06528000
PSALKR11 EQU   PSALKSA+44                                               06529000
PSALKR10 EQU   PSALKSA+40                                               06530000
PSALKR9  EQU   PSALKSA+36                                               06531000
PSALKR8  EQU   PSALKSA+32                                               06532000
PSALKR7  EQU   PSALKSA+28                                               06533000
PSALKR6  EQU   PSALKSA+24                                               06534000
PSALKR5  EQU   PSALKSA+20                                               06535000
PSALKR4  EQU   PSALKSA+16                                               06536000
PSALKR3  EQU   PSALKSA+12                                               06537000
PSALKR2  EQU   PSALKSA+8                                                06538000
PSALKR1  EQU   PSALKSA+4                                                06539000
PSALKR0  EQU   PSALKSA                                                  06540000
PSARV023 EQU   PSACLHT+52                                               06541000
PSALOCAL EQU   PSACLHT+48                                               06542000
PSACMSL  EQU   PSACLHT+44                                               06543000
PSAOPTL  EQU   PSACLHT+40                                               06544000
PSATPACL EQU   PSACLHT+36                                               06545000
PSATPDNL EQU   PSACLHT+32                                               06546000
PSATPNCL EQU   PSACLHT+28                                               06547000
PSAIOSLL EQU   PSACLHT+24                                               06548000
PSAIOSUL EQU   PSACLHT+20                                               06549000
PSAIOSCL EQU   PSACLHT+16                                               06550000
PSAIOSSL EQU   PSACLHT+12                                               06551000
PSASALCL EQU   PSACLHT+8                                                06552000
PSAASML  EQU   PSACLHT+4                                                06553000
PSADISPL EQU   PSACLHT                                                  06554000
PSASRSA  EQU   PSA+636                                                  06555000
PSARV050 EQU   PSA+634                                                  06556000
PSADSSGO EQU   PSA+633                                                  06557000
PSARECUR EQU   PSA+632                                                  06558000
PSAHLHIS EQU   PSA+628                                                  06559000
PSAIPCSA EQU   PSA+624                                                  06560000
@NM00039 EQU   PSA+621                                                  06561000
PSAIPCDM EQU   PSA+620                                                  06562000
PSAIPCD  EQU   PSA+616                                                  06563000
@NM00038 EQU   PSA+613                                                  06564000
PSAIPCRM EQU   PSA+612                                                  06565000
PSAIPCR  EQU   PSA+608                                                  06566000
PSAMCHEX EQU   PSA+600                                                  06567000
PSAMPSW  EQU   PSA+592                                                  06568000
PSAEXPS2 EQU   PSA+584                                                  06569000
PSAEXPS1 EQU   PSA+576                                                  06570000
PSAPIREG EQU   PSA+572                                                  06571000
PSARSREG EQU   PSA+568                                                  06572000
PSAGPREG EQU   PSA+556                                                  06573000
PSARV022 EQU   PSASUP4                                                  06574000
PSARV021 EQU   PSASUP4                                                  06575000
PSARV020 EQU   PSASUP4                                                  06576000
PSARV019 EQU   PSASUP4                                                  06577000
PSARV018 EQU   PSASUP4                                                  06578000
PSARV017 EQU   PSASUP4                                                  06579000
PSARV016 EQU   PSASUP4                                                  06580000
PSARV015 EQU   PSASUP4                                                  06581000
PSARV014 EQU   PSASUP3                                                  06582000
PSAULCMS EQU   PSASUP3                                                  06583000
PSARV012 EQU   PSASUP3                                                  06584000
PSAESTA  EQU   PSASUP3                                                  06585000
PSASPR   EQU   PSASUP3                                                  06586000
PSAPSREG EQU   PSASUP3                                                  06587000
PSAPI2   EQU   PSASUP3                                                  06588000
PSAIOSUP EQU   PSASUP3                                                  06589000
PSALCR   EQU   PSASUP2                                                  06590000
PSARTM   EQU   PSASUP2                                                  06591000
PSAACR   EQU   PSASUP2                                                  06592000
PSAIPCE2 EQU   PSASUP2                                                  06593000
PSAIPCES EQU   PSASUP2                                                  06594000
PSAIPCEC EQU   PSASUP2                                                  06595000
PSAGTF   EQU   PSASUP2                                                  06596000
PSAIPCRI EQU   PSASUP2                                                  06597000
PSATYPE6 EQU   PSASUP1                                                  06598000
PSATCTL  EQU   PSASUP1                                                  06599000
PSADISP  EQU   PSASUP1                                                  06600000
PSALOCK  EQU   PSASUP1                                                  06601000
PSAPI    EQU   PSASUP1                                                  06602000
PSAEXT   EQU   PSASUP1                                                  06603000
PSASVC   EQU   PSASUP1                                                  06604000
PSAIO    EQU   PSASUP1                                                  06605000
PSAANEW  EQU   PSA+544                                                  06606000
PSATOLD  EQU   PSA+540                                                  06607000
PSATNEW  EQU   PSA+536                                                  06608000
PSALCCAR EQU   PSA+532                                                  06609000
PSALCCAV EQU   PSA+528                                                  06610000
PSAPCCAR EQU   PSA+524                                                  06611000
PSAPCCAV EQU   PSA+520                                                  06612000
PSACPULA EQU   PSA+518                                                  06613000
PSACPUPA EQU   PSA+516                                                  06614000
PSAPSA   EQU   PSA+512                                                  06615000
FLCHDEND EQU   PSA+512                                                  06616000
FLCCRSAV EQU   FLCMCLA+280                                              06617000
FLCGRSAV EQU   FLCMCLA+216                                              06618000
FLCFPSAV EQU   FLCMCLA+184                                              06619000
FLCFLA   EQU   FLCMCLA+88                                               06620000
FLCRGNCD EQU   FLCMCLA+84                                               06621000
FLCFSAA  EQU   FLCFSA+1                                                 06622000
@NM00037 EQU   FLCFSA                                                   06623000
@NM00036 EQU   FLCMCLA+72                                               06624000
FLCMCIC  EQU   FLCMCLA+64                                               06625000
@NM00035 EQU   FLCMCLA+20                                               06626000
FLCIOAA  EQU   FLCIOA+1                                                 06627000
@NM00034 EQU   FLCIOA                                                   06628000
@NM00033 EQU   FLCMCLA+15                                               06629000
@NM00032 EQU   FLCMCLA+14                                               06630000
@NM00031 EQU   FLCMCLA+12                                               06631000
FLCLCL   EQU   FLCMCLA+8                                                06632000
FLCIOELA EQU   FLCIOEL+1                                                06633000
@NM00030 EQU   FLCIOEL                                                  06634000
FLCCHNID EQU   FLCMCLA                                                  06635000
@NM00029 EQU   PSA+160                                                  06636000
FLCMTRCD EQU   PSA+157                                                  06637000
@NM00028 EQU   PSA+156                                                  06638000
FLCPERA  EQU   FLCPER+1                                                 06639000
@NM00027 EQU   FLCPER                                                   06640000
@NM00026 EQU   PSA+151                                                  06641000
FLCPERCD EQU   PSA+150                                                  06642000
FLCMCNUM EQU   PSA+149                                                  06643000
@NM00025 EQU   PSA+148                                                  06644000
FLCTEAA  EQU   FLCTEA+1                                                 06645000
@NM00024 EQU   FLCTEA                                                   06646000
PSAPIPC  EQU   PSAPICOD                                                 06647000
PSAPIMC  EQU   PSAPICOD                                                 06648000
PSAPIPER EQU   PSAPICOD                                                 06649000
PSARV049 EQU   FLCPICOD                                                 06650000
FLCPILCB EQU   FLCPIILC                                                 06651000
@NM00023 EQU   FLCPIILC                                                 06652000
@NM00022 EQU   PSAEPPSW                                                 06653000
FLCSVCN  EQU   PSAESPSW+2                                               06654000
FLCSILCB EQU   FLCSVILC                                                 06655000
@NM00021 EQU   FLCSVILC                                                 06656000
@NM00020 EQU   PSAESPSW                                                 06657000
FLCEICOD EQU   PSAEEPSW+2                                               06658000
PSASPAD  EQU   PSAEEPSW                                                 06659000
@NM00019 EQU   PSA+128                                                  06660000
FLCINPSW EQU   PSA+120                                                  06661000
FLCMNPSW EQU   PSA+112                                                  06662000
FLCPNPSW EQU   PSA+104                                                  06663000
FLCSNPSW EQU   PSA+96                                                   06664000
FLCENPSW EQU   PSA+88                                                   06665000
FLCTRACE EQU   PSA+84                                                   06666000
FLCTIMER EQU   PSA+80                                                   06667000
FLCCVT2  EQU   PSA+76                                                   06668000
FLCCAW   EQU   PSA+72                                                   06669000
FLCCSW   EQU   PSA+64                                                   06670000
FLCIOPSW EQU   PSA+56                                                   06671000
FLCMOPSW EQU   PSA+48                                                   06672000
FLCPOPSW EQU   PSA+40                                                   06673000
FLCSOPSW EQU   PSA+32                                                   06674000
FLCEOPSW EQU   PSA+24                                                   06675000
@NM00018 EQU   FLCICCW2+4                                               06676000
FLCCVT   EQU   FLCICCW2                                                 06677000
FLCICCW1 EQU   FLCROPSW                                                 06678000
FLCIPPSW EQU   FLCRNPSW                                                 06679000
*                                      END UNREFERENCED COMPONENTS      06680000
@RC00165 EQU   ENDIT                                                    06681000
@RC00198 EQU   @RC00197                                                 06682000
@RC00204 EQU   @RC00203                                                 06683000
@RF00231 EQU   NOENQ                                                    06684000
@RF00234 EQU   NOENQ                                                    06685000
@RC00278 EQU   @RC00276                                                 06686000
@RT00292 EQU   @RC00276                                                 06687000
@RC00444 EQU   @RC00443                                                 06688000
@RF00552 EQU   @EL00008                                                 06689000
@RC00559 EQU   @EL00008                                                 06690000
@RC00554 EQU   @EL00008                                                 06691000
@RT00569 EQU   @EL00009                                                 06692000
@RC00600 EQU   @EL00009                                                 06693000
@RC00637 EQU   @EL00010                                                 06694000
@RC00620 EQU   @EL00010                                                 06695000
@RC00651 EQU   @EL00011                                                 06696000
@RC00666 EQU   @EL00011                                                 06697000
@RC00659 EQU   @EL00011                                                 06698000
@RC00685 EQU   @RC00673                                                 06699000
@RC00723 EQU   @EL00012                                                 06700000
@RC00721 EQU   @EL00012                                                 06701000
ENDLOC   EQU   @EL00012                                                 06702000
@RC00738 EQU   @RC00736                                                 06703000
@RC00779 EQU   @RC00772                                                 06704000
@RC00777 EQU   @RC00772                                                 06705000
@RC00775 EQU   @RC00772                                                 06706000
@RC00773 EQU   @RC00772                                                 06707000
@RC00731 EQU   @EL00013                                                 06708000
@RT00804 EQU   @EL00013                                                 06709000
@RC00823 EQU   @EL00013                                                 06710000
@RC00842 EQU   @EL00013                                                 06711000
@RC00860 EQU   @RC00859                                                 06712000
@RC00906 EQU   @EL00016                                                 06713000
@RC00934 EQU   @EL00016                                                 06714000
@RC00913 EQU   @EL00016                                                 06715000
@RC01016 EQU   @RC01013                                                 06716000
@RC01025 EQU   @RC01011                                                 06717000
@RT01033 EQU   @RC01011                                                 06718000
@RC01041 EQU   @RC01011                                                 06719000
@RC00998 EQU   @EL00017                                                 06720000
@PB00025 EQU   @EL00001                                                 06721000
@RC00199 EQU   @RC00198                                                 06722000
@RC00604 EQU   @RC00600                                                 06723000
@RC00602 EQU   @RC00600                                                 06724000
@RF00623 EQU   @RC00620                                                 06725000
@RC00628 EQU   @RC00620                                                 06726000
@RC00638 EQU   @RC00637                                                 06727000
@RC00914 EQU   @RC00913                                                 06728000
@RC01000 EQU   @RC00998                                                 06729000
@RC01018 EQU   @RC01016                                                 06730000
@RC01057 EQU   @RC01041                                                 06731000
@RC01055 EQU   @RC01041                                                 06732000
@RC01053 EQU   @RC01041                                                 06733000
@RC01051 EQU   @RC01041                                                 06734000
@RC01049 EQU   @RC01041                                                 06735000
@RC01047 EQU   @RC01041                                                 06736000
@PB00024 EQU   @PB00025                                                 06737000
@PB00023 EQU   @PB00024                                                 06738000
@PB00022 EQU   @PB00023                                                 06739000
@PB00021 EQU   @PB00022                                                 06740000
@PB00020 EQU   @PB00021                                                 06741000
@PB00019 EQU   @PB00020                                                 06742000
@PB00018 EQU   @PB00019                                                 06743000
@PB00017 EQU   @PB00018                                                 06744000
@PB00016 EQU   @PB00017                                                 06745000
@PB00015 EQU   @PB00016                                                 06746000
@PB00014 EQU   @PB00015                                                 06747000
@PB00013 EQU   @PB00014                                                 06748000
@PB00012 EQU   @PB00013                                                 06749000
@PB00011 EQU   @PB00012                                                 06750000
@PB00010 EQU   @PB00011                                                 06751000
@PB00009 EQU   @PB00010                                                 06752000
@PB00008 EQU   @PB00009                                                 06753000
@PB00007 EQU   @PB00008                                                 06754000
@PB00006 EQU   @PB00007                                                 06755000
@PB00005 EQU   @PB00006                                                 06756000
@PB00004 EQU   @PB00005                                                 06757000
@PB00003 EQU   @PB00004                                                 06758000
@ENDDATA EQU   *                                                        06759000
         END   IGG0CLCA,(C'PLS1841',0701,78206)                         06760000
./  ADD  SSI=71790406,NAME=IGG0CLCB
 TITLE 'IGG0CLCB - SECOND CSECT OF INTERFACE MAPPER'                    00010002
IGG0CLCB CSECT                                                          00020002
*A193924-193944,297710,C297800,D193960                         @YM04820 00020202
*A029996,306380,C192181                                        @YM07060 00020302
*A029434,C194113                                               @YM05170 00020402
********THIS ENTIRE PROGRAM WRITTEN BY                         @YL026ZB 00021002
*********************************************************************** 00240002
* STATUS -- CHANGE LEVEL                                              * 00250002
*    THIS MODULE IS A MODIFIED VERSION OF OS VS2-1 MODULE IKJEHCT1    * 00252002
*    WHICH WAS USED FOR TSO LISTCAT COMMAND.                          * 00254002
*                                                                     * 00260002
* FUNCTION --                                                         * 00270002
*    THIS IS THE MAIN PROCESSING MODULE FOR GENERIC LOCATE.           * 00280002
*    IT GETS CONTROL FROM IGG0CLCA VIA BALR 14,15                     * 00290002
*    AND WILL SEARCH THE SYSCTLG DATA SET USING THE CATALOG           * 00300002
*    MANAGEMENT ROUTINE LOCATE AND RETURN THE NAMES OF ALL DATA       * 00310002
*    SETS SETS THAT ARE FOUND TO HAVE THE REQUESTED HIGH LEVEL        * 00320002
*    QUALIFIERS AS THE FIRST PART OF THE DATASET NAME.                * 00322002
*    THE CIR SUBROUTINE IS USED TO DO THE ACTUAL LOCATES AND BUILD    * 00332002
*    LISTS OF QUALIFIERS TO BE PROCESSED.                             * 00342002
*                                                                     * 00580002
*                                                                     * 00660002
* ENTRY POINTS --                                                     * 00670002
*         IGG0CLCB                                                    * 00680002
*                                                                     * 00690002
* INPUT --                                                            * 00700002
*    INPUT CONSISTS OF FOUR REGISTERS CONTAINING THE FOLL0WING;       * 00710002
*                                                                     * 00712002
*          REG 0  - ADDRESS OF THE HIGH LEVEL QUALIFIERS OF THE       * 00720002
*                   DATASET NAMES TO BE LOCATED.                      * 00730002
*          REG 1  - ADDRESS OF THE USER'S WORK AREA WHERE THE LOCATED * 00732002
*                   DATASET NAMES ARE TO BE RETURNED.                 * 00734002
*          REG 2  - TCB ADDRESS.                                      * 00736002
*          REG 12 - ADDRESS OF SVC 26(CONTROLLER III) WORK AREA       * 00738002
*                                                                     * 00740002
* OUTPUT --                                                           * 00750002
*    A LIST OF DSNAMES FOUND CATALOGED UNDER THE REQUESTED HIGH       * 00760002
*    QUALIFIERS.                                                      * 00770002
*                                                                     * 00780002
* EXTERNAL REFERENCES --                                              * 00790002
*        IGG0CLCC - OS CATALOG MANAGEMENT                             * 00791002
*                                                                     * 00860002
* EXITS, NORMAL -- RETURN TO IGG0CLCA VIA BR 14 WITH RETURN CODE IN   * 00870002
*                  REGISTER 15 OF ZERO.                               * 00872002
*                                                                     * 00880002
* EXITS, ERROR -- RETURN TO IGG0CLCA VIA BR 14 WITH ONE OF THE        * 00890002
*                 FOLLOWING RETURN CODES IN REGISTER 15;              * 00894002
*                 4 - DATASET(S) NOT FOUND                            * 00896002
*                 8 - OUT OF CORE OR ESTAE MACRO FAILURE              * 00898002
*                12 - USER'S WORK AREA TOO SMALL                      * 00898402
*                                                                     * 00900002
* TABLES/WORK AREAS --                                                * 00910002
*    WORKCORE- MAIN WORK AREA CONTAINING SWITCHS, MACRO LIST FORMS,   * 00970002
*    POINTERS AND BLOCKS OF CORE USED IN NORMAL PROCESSING.           * 00974002
*                                                                     * 00990002
* ATTRIBUTES -- REENTRANT, READ-ONLY, REFRESHABLE                     * 01000002
*                                                                     * 01010002
* CHARACTER CODE DEPENDENCY -- CHARACTER CODE INDEPENDENT             * 01020002
*                                                                     * 01030002
* NOTES --                                                            * 01040002
*    REGISTER CONVENTIONS                                             * 01050002
*       R11 - BASE REGISTER                                           * 01051002
*       R12 - POINTER TO CONTROLLER III WORKAREA                      * 01052002
*       R13 - POINTER TO WORKCORE OF WHICH THE FIRST                  * 01053002
*             72 BYTES IS A SAVE AREA                                 * 01054002
*********************************************************************** 01060002
         EJECT                                                          01070002
R0       EQU   0                   REGISTER 0                           01110002
R1       EQU   1                    POINTS TO CURRENT SLOT IN MAINLINE  01120002
R2       EQU   2                   REGISTER 2                           01130002
R3       EQU   3                   REGISTER 3                           01140002
R4       EQU   4                   REGISTER 4                           01150002
R5       EQU   5                   REGISTER 5                           01160002
R6       EQU   6                   REGISTER 6                           01170002
R7       EQU   7                   REGISTER 7                           01180002
R8       EQU   8                   REGISTER 8                           01190002
R9       EQU   9                   REGISTER 9                           01200002
R10      EQU   10                  REGISTER 10                          01210002
R11      EQU   11                       MAIN BASE REG FOR THE PROGRAM   01220002
R12      EQU   12                  POINTS TO CNTRLR III WORKAREA        01230002
R13      EQU   13                           POINTS TO WORK AREA.        01240002
R14      EQU   14                  REGISTER 14                          01250002
R15      EQU   15                  REGISTER 15                          01260002
BLKSP    EQU   0                   SUBPOOL FOR LOCATE BLOCKS            01740002
WORKSP   EQU   0                   SUBPOOL FOR WORKAREA                 01760002
TTROFF   EQU   9                   OFFSET TO TTR FIELD                  01790002
CIRVOLS  EQU   X'04'               VOLUMES OPTION                       01800002
CIRDSN   EQU   X'01'               DSNAME  OPTION                       01810002
CIRIND   EQU   X'02'               INDEX   OPTION                       01820002
CIROFF   EQU   8                   OFFSET TO CIR ENTRY                  01850002
DSNENT   EQU   X'07'               CIR DSNAME CODE                      01860002
DSNLEN   EQU   9                   LENGTH OF DSNAME ENTRY               01870002
GDGENT   EQU   X'02'               GDG ENTRY CODE                       01880002
GDGLEN   EQU   16                  LENGTH OF GDG ENTRY                  01890002
INDENT   EQU   X'00'               INDEX ENTRY                          01900002
INDLEN   EQU   12                  LENGTH OF INDEX ENTRY                01910002
VOLENT   EQU   X'08'               VOLUMES WITH DSNAME ENTRY            01920002
VCBENT   EQU   X'01'               VOLUME CONTROL BLOCK ENTRY           01930002
VCBLEN   EQU   12                  LENGTH OF VCB ENTRY                  01940002
ALIENT   EQU   X'04'               ALIAS ENTRY                          01950002
ALILEN   EQU   20                  LENGTH OF ALIAS ENTRY                01960002
CVOLENT  EQU   X'05'               CVOL POINTER ENTRY                   01970002
CVOLLEN  EQU   19                  LENGTH OF CVOL ENTRY                 01980002
CIRVOLID EQU   259                 OFFSET TO VOLID IN CIR LIST (LOCATE) 01990002
ASTSW    EQU   X'80'               OPTMASK-ASTERISK IN INDEX STRUCTURE  02020002
GDGSW    EQU   X'20'               OPTMASK GDG SWITCH                   02070002
ANYOPT   EQU   X'07'               HISTORY + DATA + MEMBERS             02090002
GDGSWOFF EQU   X'DF'               AND MASK FOR GDGSW                   02120002
LOCSAVOF EQU   72                  OFFSET TO LOCAL SAVEAREA             02150002
HIGHBIT   EQU   X'80'              USED FOR TEST OF HIGH BIT            02190002
BLANK    EQU   C' '                BLANK                                02200002
CHARG    EQU   C'G'                G                                    02210002
CHARV    EQU   C'V'                V                                    02220002
COMPZONE EQU   X'F0'               MASK TO TEST FOR COMPLEMENT          02230002
FOXES    EQU   X'FF'               VALUE OF HEX FF                      02240002
ON       EQU   X'01'               SWITCH ON VALUE                      02250002
OFF      EQU   X'00'               SWITCH OFF VALUE                     02260002
EIGHT    EQU   X'08'               VALUE OF HEX 08                      02270002
FORTY5   EQU   45                  VALUE OF 45                          02280002
ENTPTR   EQU   4                   OFFSET OF 4 FOR CIR RTN              02290002
CHARA    EQU   C'A'                TYPE CODE FOR NON-VSAM DATASETS      02350002
HEX00    EQU   X'00'               BYTE COMPARE FIELD                   02360002
FORWARD  EQU   8                   OFFSET TO FORWARD CHAIN SAVE         02420002
BACKWARD EQU   4                   OFFSET TO BACKWARD CHAIN SAVE        02430002
L0       EQU   0                   USED FOR LENGTH OFFSETS WHEN NECC    02450002
L1       EQU   1                   LENGTH OFFSET OF ONE                 02460002
L3       EQU   3                   LENGTH OF 3                          02480002
L4       EQU   4                   LENGTH OF 4                          02490002
D0       EQU   0                   DISPLACEMENT OF 0                    02530002
D1       EQU   1                   DISPLACEMENT OF 1                    02540002
D2       EQU   2                   DISPLACEMENT OF 2                    02550002
D3       EQU   3                   DISPLACEMENT OF 3                    02560002
D4       EQU   4                   DISPLACEMENT OF 4                    02570002
D6       EQU   6                   DISPLACEMENT OF 6                    02590002
D8       EQU   8                   DISPLACEMENT OF 8                    02592002
L8       EQU   8                   LENGTH OF EIGHT                      02600002
PERIOD   EQU   C'.'                USED FOR PERIOD CONSTANT             02660002
D14      EQU   14                  OFFSET OF 14                         02730002
D15      EQU   15                  OFFSET OF 15                         02740002
L43      EQU   43                  LENGTH OF 43                         02750002
TWELVE   EQU   12                  USED FOR OFFSET OF 12                02760002
CIROPT   EQU   0                   OFFSET TO OPTION BYTE IN PARM LIST   02770002
CIRSRCH  EQU   4                   OFFSET TO WORD PTR TO TTR OR NAME    02780002
CIRWA    EQU   12                  OFFSET TO WORK AREA FOR LIST         02790002
ACIRSAVE EQU   16                  OFFSET TO WORK SAVE AREA PASSED      02800002
HEXFF    EQU   X'FF'               MASK FOR ALL BITS ON                 02810002
FRSTNTRY EQU   2                   OFFSET TO FIRST ENTRY IN A CTLG BLK  02820002
CODEOFF  EQU   0                   OFFSET TO CODE IN ENTRY FOR OUTPUT   02822002
NAMEOFF  EQU   1                   OFFSET TO NAME IN ENTRY FOR OUTPUT   02824002
ATTROFF  EQU   256                 OFFSET TO TTR OF NEXT CATALOG BLOCK  02826002
VOLOFF   EQU   259                 OFFSET TO VOLSER OF CATALOG CVOL     02828002
VOLSEROF EQU   4                   OFFSET TO VOLSER IN LINK ENTRY       02828402
GDGDATA  EQU   12                  OFFSET TO GDGDATA FIELD IN ENTRY     02828802
DEVCDEOF EQU   9                   OFFSET TO DEVICE CODE FIELD IN ENTRY 02829202
CVOLVOL  EQU   13                  OFFSET TO VOLSER OF CVOL IN ENTRY    02829602
NAMLEN   EQU   8                   LENGTH OF SIMPLE NAME                02829702
ONE      EQU   1                   ONE MEANS 1--USED MAINLY IN SHIFTING 02829802
CATENTLN EQU   12                  LENGTH OF BASIC CATALOG ENTRY        02829902
TTRLEN   EQU   3                   LENGTH OF TTR                        02833202
VOLLEN   EQU   6                   LENGTH OF VOLSER                     02835202
ALIASLEN EQU   12                  LENGTH OF ALIAS ENTRY IN LIST        02835602
DSLEN    EQU   9                   LENGTH OF BASIC PART OF LIST ENTRY   02836002
DATALEN  EQU   4                   LENGTH OF GDG DATA IN OUTPUT LIST    02836402
DEVCDELN EQU   4                   LENGTH OF DEVICE CODE IN CVOL ENTRY  02836502
INDXNTRY EQU   X'00'               INDEX ENTRY CODE                     02836602
DSNMNTRY EQU   X'07'               DS NAME ENTRY CODE                   02837702
MULTIVOL EQU   X'F8'               DS NAME ENTRY WITH MULTIVOLUMES      02838102
GDGENTRY EQU   X'02'               GDG ENTRY CODE                       02838502
VCBENTRY EQU   X'01'               VOLUME CONTROL BLOCK ENTRY CODE      02838602
ALIAS    EQU   X'04'               ALIAS ENTRY CODE                     02838702
OLDPTR   EQU   X'03'               OLD CVOL PTR CODE (BEFORE REL. 17)   02838802
NEWPTR   EQU   X'05'               NEW CVOL PTR CODE (AFTER RELEASE 17) 02841602
DSOPT    EQU   X'01'               OPT CODE FOR SIMPLE DSNAMES IN LIST  02843602
INDOPT   EQU   X'02'               OPT CODE FOR SIMPLE QUALS IN LIST    02844002
VOLOPT   EQU   X'04'               OPTION CODE FOR VOLS TO BE INCLUDED  02844102
OTHROPT  EQU   X'08'               OPTION CODE FOR ALL OTHER ENTRIES    02844202
ALLOPT   EQU   X'0F'               MASK FOR ALL OPTIONS                 02844302
INDXCODE EQU   X'00'               LIST CODE FOR AN INDEX ENTRY         02845202
VCBCODE  EQU   X'01'               VOLUME CONTROL BLOCK ENTRY LIST CODE 02845602
GDGCODE  EQU   X'02'               GDG ENTRY LIST CODE                  02846002
ALIASCDE EQU   X'04'               ALIAS ENTRY LIST CODE                02846102
CVOLCODE EQU   X'05'               CVOL ENTRY LIST CODE                 02846202
DSNWOVOL EQU   X'07'               SIMPLE DSNAME ENTRY WITHOUT VOLUMES  02847102
DSNWVOLS EQU   X'08'               SIMPLE DSNAME ENTRY WITH VOLUMES     02847602
LINKCODE EQU   X'FF'               LINK ENTRY LIST CODE                 02848002
INDXCBLK EQU   X'00'               FOR TESTING FOR INDEX CTL ENTRIES    02848102
TWENTY5  EQU   25                  MINIMUM COUNT FOR VALID INDEX BLOCK  02850402
VOLPLUS  EQU   X'0B'               ALL OPTIONS EXCEPT VOLOPT            02852402
CNT      EQU   11                  OFFSET TO CNT FIELD IN CTLG ENTRIES  02852802
ERR01    EQU   8                   VOLS ONLY REQUEST--INDEX BLOCK FOUND 02852902
ERR02    EQU   12                  VCB FOUND IN ERROR                   02853002
ERR03    EQU   4                   LOCATE FAILED-- RC STORED INTO LIST  02853802
ABENDCD  EQU   X'11A'              ABEND CODE WHEN UNDER USERS KEY      02854002
         EJECT                                                          02854602
         SAVE  (14,12),,*                                               02855402
         LR    R11,R15             SET UP ADDRESSABILITY                02857702
         USING IGG0CLCB,R11        USE R11 FOR MAIN BASE.               02860002
         LR    R4,R1               SAVE OUT AREA ADDRESS                02880002
         LR    R3,R0         SAVE DSNAME AREA ADDRESS                   02882002
         GETMAIN  R,LV=WORKSIZE,SP=WORKSP    GET INITIAL CORE           02890002
         ST    R13,BACKWARD(R1)      SET UP BACKWARD CHAIN              02900002
         ST    R1,FORWARD(R13)       SET UP FORWARD CHAIN               02910002
         LR    R13,R1              SETUP ADDRESSABILITY FOR WORK SPACE. 02920002
         USING WORKCORE,R13          USE R13 FOR WORKCORE BASE          02930002
         ST    R4,OUTADDR      SAVE OUT AREA ADDRESS                    02932002
         ST    R2,TCBADDR    SAVE ADDRESS OF TCB                        02934002
         MVI   TOOSMALL,OFF  INIT SWITCH TO OFF                         02936002
         MVI   KEYTYPE,OFF   INIT SWITCH TO SVC KEY                     02938002
*********************************************************************** 02938202
*                                                                       02938402
*        INITIALIZE CHAIN ADDRESSES OF CIR BLOCKS AND POINT TO START    02938602
*        OF CHAIN FROM FIRSTBLK LOCATION.                               02938802
*                                                                       02938902
*      BLOCKS ARE OBTAINED DYNAMICALLY AS NEEDED AND ARE KEPT           02939902
*      IN THE TABLE UNTIL THE END OF THE PROGRAM WHEN THEY ARE FREED.   02940202
*                                                                       02940402
*********************************************************************** 02940602
         LA    R1,CIRBLOCK         POINT AT FIRST BLOCK                 02940802
         ST    R1,FRSTBLK          SAVE ADDR OF FIRST CIR BLOCK         02941102
         ST    R1,CURNTBLK         INITIALIZE CURRENT CIR BLOCK PTR     02941302
         XC    ENTPTR(L4,R1),ENTPTR(R1) CLEAR CURRNT ENTRY PT           02941502
         LA    R1,CIRBLOCK+CIRBLKLN LINK FOUR BLOCKS TOGETHER           02941602
         ST    R1,CIRBLOCK         LINK ONE TO TWO                      02941702
         XC    ENTPTR(L4,R1),ENTPTR(R1) CLEAR CRRNT ENTRY PTR           02942002
         LA    R2,CIRBLKLN(R1)     LINK BLOCK TWO TO THREE              02942202
         ST    R2,D0(R1)           STORE PTR                            02942302
         XC    ENTPTR(L4,R2),ENTPTR(R2)   CLEAR CURRENT ENTPTR          02942402
         LA    R1,CIRBLKLN(R2)     LINK THREE TO FOUR                   02942502
         ST    R1,D0(R2)           STORE PTR                            02942602
         XC    D0(L8,R1),D0(R1)    CLEAR CHAIN ADDR -CURRENT ENTRY PTR  02942802
         XC    ESTAELST(16),ESTAELST ZERO ESTAE MACRO LIST FORM         02943302
         STM   R11,R13,SAVER11 SAVE REGS FOR ESTAE             @YM05170 02943402
         ESTAE ESTAEXIT,CT,PARAM=SAVER11,XCTL=NO,RECORD=YES,           *02943802
               MF=(E,ESTAELST) ISSUE ESTAE                              02943902
         LTR   R15,R15       IS RETURN CODE ZERO                        02944302
         BZ    ESTAEOK       YES,CONTINUE                               02944602
         MVC   RETCD,RC8     SET RETURN CODE                            02944902
         B     WRAPUP        EXIT                                       02945902
ESTAEOK  EQU   *                                                        02946102
         NI    OPTMASK,HEX00       CLEAR OPTION BYTE                    02946902
         MVI   FIRSTCIR,OFF        TURN OFF FIRST CIR SWITCH            02950002
         MVI   FIRSTIME,ON         TURN ON FIRST ALLOCATE SWITCH        02960002
         MVC   GETML(LILFS),GETMLMDL  MOVE LIST FORM OF MACROS TO WORK  02970002
         CLI   0(R3),L43     IS NODE TOO LARGE                          02971002
         BH    NOENTRY       YES,EXIT WITH RETURN CODE 4                02972002
         CLI   0(R3),L1      IS NODE TOO SMALL                          02973002
         BL    NOENTRY       YES,EXIT WITH RETURN CODE 4                02974002
         MVI   USERNODE,BLANK        PROPAGATE BLANKS FOR USERID        02980002
         MVC   USERNODE+D1(L'USERNODE-D1),USERNODE CLEAR USERND AREA    02990002
         SR    R1,R1         CLEAR REG 1                                02992002
         IC    R1,D0(R3)     PUT DSNAME LENGTH IN R1                    02994002
         LA    R7,D0(R3,R1)  POINT TO LAST BYTE OF NAME                 02995002
         CLI   D0(R7),PERIOD IS THIS A PERIOD                           02995202
         BNE   MOVENODE      NO,GO AHEAD WITH REQUEST                   02995402
         BCTR  R1,R0         YES,DECREMENT LENGTH BY ONE                02995602
         LTR   R1,R1         IS LENGTH NOW ZERO                         02995802
         BZ    NOENTRY       YES,CANNOT PROCESS SO EXIT WITH RC=4       02995902
MOVENODE EQU   *                                                        02996602
         STH   R1,USRNODEL   SAVE LENGTH                                02997302
         LA    R3,D1(R3)     POINT TO DSNAME                            02998002
         BCTR  R1,R0         DECREMENT LENGTH FOR MOVE                  02998402
         LA    R7,USERNODE   POINT TO HOLD AREA FOR NODE                02998802
         EX    R1,MOVE       MOVE NODE TO HOLD AREA                     02999202
         MVC   SAVENODE,USERNODE      SAVE NODE FOR BUILD NAME @YM07060 02999602
         XC    RETCD,RETCD         SET RETURN CODE TO ZERO INITIALLY    03000002
         XC    GDGCNT,GDGCNT       CLEAR GDG COUNT AREA                 03010002
         LA    R1,USERNODE         POINT AT NAME TO SEARCH ON           05560002
         ST    R1,CIRINDX          STORE IN PARM LIST                   05570002
         LA    R1,CIRSAVE          CIR SAVE AREA                        05580002
         ST    R1,CIRWK2           STORE IN LIST                        05590002
         XC    CIRVOL,CIRVOL       CLEAR VOLUME PTR                     05600002
MAIN00A  XC    CIRPARM,CIRPARM      CLEAR OPTIONS                       05610002
         OI    CIRPARM,CIRDSN+CIRIND REQUEST DSNAMES AND INDEX NAMES    05660002
         BAL   R8,OBTBLK           GET FIRST FREE BLK                   05670002
         MVI   FIRSTCIR,ON         TURN ON FIRST CIR SWITCH             05680002
         BAL   R8,CIRROUT          CALL CIR                             05690002
         LTR   R15,R15             TEST R15 FOR 0                       05700002
         BZ    MAIN00              YES, GO PROCESS                      05710002
         MVC   RETCD,RC4     INDICATE DATASET NOT FOUND                 05720002
         B     WRAPUP              GO TERMINATE                         05760002
         EJECT                                                          05770002
MAIN00   EQU   *                                                        05780002
*********************************************************************** 05790002
*                                                                       05800002
* CHECK FOR A NULL LIST AND RETURN TO CALLER WITH RC OF 4 IF THE INDEX  05810002
* STRUCTURE SPECIFIED, OR USERID, HAD NO DATA SETS CATALOGED            05820002
* UNDER IT.                                                             05830002
*                                                                       05840002
*********************************************************************** 05850002
         L     R1,CURNTBLK         GET CURRENT BLK POINTER              05860002
         LA    R6,D8(R1)           POINT AT LIST                        05870002
         ST    R6,D4(R1)           MAKE FIRST ENTRY CURRENT             05880002
         CLI   D0(R6),FOXES        CHECK FOR LINK ENTRY                 05890002
         BNE   MAIN01              NO, PROCESS LIST                     05900002
         CLC   D1(L3,R6),ZERO      SEE IF TTR IS ZERO                   05910002
         BE    NOENTRY             YES, TERMINATE                       05920002
MORDATA  LA    R1,D4(R6)           PT AT VOLSER IN LINK ENTRY           05930002
         MVC   CIRCVOL(L'CIRCVOL),D0(R1) MOVE CVOL TO SAVE AREA         05940002
         LA    R1,CIRCVOL          POINT AT CVOL                        05950002
         ST    R1,CIRVOL           STORE INTO LIST                      05960002
         LA    R1,D1(R6)           POINT AT TTR                         05970002
         MVC   CIRTTR(L'CIRTTR),D0(R1) MOVE TTR TO SAVE AREA            05980002
         LA    R1,CIRTTR           ADDRESS OF TTR FOR PARM LIST         05990002
         ST    R1,CIRINDX          STORE IN LIST                        06000002
         OI    CIRINDX,ASTSW       TURN ON TTR INDICATOR BIT            06010002
         B     MAIN00A             TRY AGAIN                            06020002
NOENTRY  EQU   *                                                        06030002
         MVC   RETCD,RC4     INDICATE DATASET NOT FOUND                 06040002
         B     WRAPUP              GO TERMINATE                         06060002
*                                                                       06070002
MAIN01   EQU   *                                                        06080002
*********************************************************************** 06090002
*                                                                       06100002
*        ENTRY IS MADE TO THIS ROUTINE WITH REG 6 POINTING TO A NEW     06110002
*        LIST ELEMENT. THE LIST ENTRY IS ANALYZED AND THE APPROPRIATE   06120002
*        ROUTINE IS USED TO PROCESS IT. DSNAME ENTRIES ARE USED TO      06130002
*        COMPLETE FULLY QUALIFIED DATA SET NAMES, AND ARE RETURNED      06140002
*        TO THE CALLERS OUTPUT AREA                                     06150002
*                                                                       06160002
*********************************************************************** 06170002
         CLI   D0(R6),DSNENT       DSNAME ENTRY                         06180002
         BE    DSNAMRT             YES, GO BUILD FULL DSNAME            06190002
*                                                                       06200002
         CLI   D0(R6),VOLENT       DSNAME ENTRY WITH VOLUMES            06210002
         BE    DSNAMRT             YES, GO BUILD FULL DSNAME            06220002
*                                                                       06230002
         CLI   D0(R6),VCBENT       VOLUME CONTROL BLOCK ENTRY           06240002
         BE    VCBROUT             YES, GO PROCESS--BUILD FULL DSNAME   06250002
*                                                                       06260002
         CLI   D0(R6),INDENT       INDEX ENTRY                          06270002
         BE    INDEXRT             YES, GO PROCESS-GET A NEW LIST       06280002
*                                                                       06290002
         CLI   D0(R6),GDGENT       GENERATION DATA GROUP ENTRY          06300002
         BE    GDGROUT             YES, GO PROCESS SIMPLE NAMES         06310002
         CLI   D0(R6),FOXES        CHECK FOR LINK ENTRY                 06320002
         BE    MAIN01A             PROCESS NORMALLY                     06330002
         CLC   D1(L3,R6),ZERO      SEE IF TTR IS ZERO                   06340002
         BE    WRAPUP              GO TERMINATE                         06350002
         B     MORDATA             MORE DATA TO BE PROCESSED            06360002
*                                                                       06370002
MAIN01A  EQU   *                                                        06380002
         BAL   R8,POINTER          GO UPDATE CURRENT ENTRY PTR TO NEXT  06390002
         L     R6,CURNTBLK         GET CURRENT BLOCK POINTER            06400002
         L     R6,D4(R6)           GET CURRENT ENTRY POINTER            06410002
         B     MAIN01              GO ANALYZE ENTRY TYPE.               06420002
       EJECT                                                            06430002
INDEXRT  DS    0H                                                       06440002
*********************************************************************** 06450002
*                                                                       06460002
*        THIS ROUTINE GETS CONTROL WHEN AN INDEX ENTRY IS DISCOVERED    06470002
*        IN THE LIST FROM CIR. IT SETS UP A PARAMETER LIST FOR CIR      06480002
*        AND USES OBTBLK TO ALLOCATE ANOTHER BLOCK FOR A NEW LIST       06490002
*        OF LOWER QUALIFIERS. IF THE NEW LIST IS FOUND TO BE EMPTY,     06500002
*        THE NEXT ENTRY IS PROCESSED.OTHERWISE THE NEW LIST             06510002
*        IS MADE CURRENT.                                               06530002
*              CURNTBLK POINTS TO CURRENT CIR LIST                      06540002
*                                                                       06550002
*********************************************************************** 06560002
         XC    CIRPARM,CIRPARM     CLEAR CIR OPTIONS                    06570002
         LA    R1,TTROFF(R6)       POINT AT TTR FIELD IN INDEX ENTRY    06580002
         ST    R1,CIRINDX          STORE IN CIRPARM LIST                06590002
         OI    CIRINDX,HIGHBIT     TURN ON HIGH BIT EQUALTTR            06600002
         L     R1,CURNTBLK         GET CURNT BLOCK ADDRESS              06610002
         LA    R1,CIRVOLID+VOLENT(R1) POINT PAST CHAIN ADDRS TO VOLSER  06620002
*                                AT END OF CIR LIST.                    06630002
         ST    R1,CIRVOL           PUT PTR IN PARM LIST                 06640002
IND00    EQU   *                                                        06680002
         OI    CIRPARM,CIRDSN+CIRIND REQUEST DSNAMES AND INDEXNAMES     06690002
         BAL   R8,OBTBLK           GET FIRST FREE BLOCK                 06700002
         BAL   R8,CIRROUT          CALL CIR                             06710002
         LTR   R15,R15             TEST RETURN CODE                     06720002
         BNZ   CIR08               NONZERO, LET CIRROUT HANDLE ERROR    06730002
*                                                                       06740002
*        CHECK FOR EMPTY INDEX STRUCTURE                                06750002
*                                                                       06760002
         L     R1,CURNTBLK         GET ADDR OF NEW BLOCK                06770002
         LA    R6,D8(R1)           POINT AT FIRST ENTRY                 06780002
         ST    R6,D4(R1)           MAKE IT CURRENT ENTRY                06790002
         CLI   D0(R6),FOXES        CHECK FOR LINK ENTRY                 06800002
         BNE   MAIN01              NO, GO PROCESS LIST                  06810002
         CLC   D1(D3,R6),ZERO      SEE IF TTR IS ZERO                   06820002
         BE    EMPTYIND            YES, IT IS AN EMPTY INDEX            06830002
         LA    R1,D4(R6)           POINT AT VOLSER IN LINK ENTRY        06840002
         ST    R1,CIRVOL           PUT INTO CIR PARM LIST               06850002
         LA    R1,D1(R6)           POINT AT TTR                         06860002
         ST    R1,CIRINDX          STORE INTO LIST                      06870002
         OI    CIRINDX,ASTSW       INDICATE TTR ENTRY                   06880002
         XC    CIRPARM,CIRPARM     CLEAR OPTION BYTES                   06890002
         B     IND00               TRY AGAIN                            06900002
EMPTYIND EQU   *                                                        06910002
         XC    D4(L4,R1),D4(R1)    FREE CURRENT BLK                     06920002
         B     MAIN01A       GO PROCESS NEXT ENTRY                      06930002
       EJECT                                                            06950002
DSNAMRT  DS    0H                                                       06960002
VCBROUT  DS    0H                                                       06970002
*********************************************************************** 06980002
*                                                                       06990002
*        THIS ROUTINE IS GIVEN CONTROL WHEN A DATA SET ENTRY OR         07000002
*        VOLUME CONTROL BLOCK ENTRY IS FOUND IN THE LIST FROM CIR.      07010002
*        A CHECK IS MADE TO DETERMINE IF A GENERATION DATA GROUP IS     07020002
*        BEING PROCESSED. IF SO, THE GENERATION PORTION OF THE SIMPLE   07030002
*        NAME MUST BE COMPLEMENTED. THEN THE FULLY QUALIFIED NAME,      07040002
*        WITH THE NODE, IS CONSTRUCTED AND RETURNED TO THE CALLERS      07050002
*        OUTPUT AREA.                                                   07051002
*              REG 6 POINTS TO CURRENT ENTRY                            07080002
*                                                                       07090002
*********************************************************************** 07100002
*  CHECK FOR GENERATION DATA GROUP DATA SET NAME                        07110002
         CLI   D1(R6),CHARG        TEST FOR A G                         07120002
         BNE   GDGTEST             NO, CONTINUE                         07130002
         CLI   D6(R6),CHARV        TEST FOR A V                         07140002
         BNE   GDGTEST             NO, CONTINUE                         07150002
         L     R1,FOUR             SET LOOP CONTROL                     07160002
GDGLOOP  LA    R7,D0(R1,R6)        POINT TO CHARACTER TO BE TESTED      07170002
         TM    D1(R7),COMPZONE     TEST FOR COMPLEMENTED NUMBER         07180002
         BNZ   GDGTEST             NOT COMPLEMENT, CONTINUE             07190002
         BCT   R1,GDGLOOP          YES, CHECK NEXT CHARACTER            07200002
         XC    D2(L4,R6),FOXMASK   COMPLEMENT GENERATION NUMBER         07210002
GDGTEST  TM    OPTMASK,GDGSW       SEE IF GDG SWITCH IS ON              07220002
         BNO   DSN01               NO, SKIP COMPLEMENT                  07230002
         L     R1,GDGCNT           GET NUMBER OF DATASETS REMAINING     07240002
         BCT   R1,DSN01A           DECREMENT COUNT                      07250002
         NI    OPTMASK,GDGSWOFF    TURN OFF GDGSW                       07260002
DSN01A   ST    R1,GDGCNT           SAVE UPDATED COUNT                   07270002
DSN01    EQU   *                                                        07280002
         BAL   R8,BUILDNAM         USE PORTION OF OBTBLK ROUT TO BUILD  07300002
*                                  DSNAME                               07310002
         B     MAIN01A             PROCESS NORMALLY                     07800002
         EJECT                                                          07810002
GDGROUT  DS    0H                                                       07820002
*********************************************************************** 07830002
*                                                                       07840002
*        THIS ROUTINE IS ENTERED IF A GDG ENTRY IS FOUND IN THE CIR     07850002
*        LIST. IT TURNS ON THE GDGSW SWITCH SO THAT THE DSNAME ENTRY    07860002
*        ROUTINE WILL KNOW THAT THE GENERATION NUMBER IN THE SIMPLE     07870002
*        NAMES WILL REQUIRE COMPLEMENTING. A CHECK IS MADE TO SEE       07880002
*        IF ANY GENERATIONS EXIST. IF NOT, THE ENTRY IS SKIPPED.        07890002
*        IF IT IS NOT EMPTY THE COUNT IS KEPT AND DECREMENTED EACH      07900002
*        TIME A GENERATION NAME IS PROCESSED. CONTROL IS PASSED TO THE  07910002
*        INDEX ENTRY ROUTINE TO READ IN THE LIST OF NAMES THROUGH CIR.  07920002
*                                                                       07940002
*              REG 6 POINTS TO CURRENT ENTRY                            07950002
*                                                                       07960002
*********************************************************************** 07970002
         XR    R1,R1               CLEAR REG FOR IC                     07980002
*  COUNT IS LAST 2 BYTES OF ENTRY                                       07990002
         IC    R1,D14(R6)          GET FIRST BYTE                       08000002
         SLL   R1,L8               SHIFT FIRST BYTE OVER                08010002
         IC    R1,D15(R6)          GET SECOND CHARCTER                  08020002
         LTR   R1,R1               IS COUNT ZERO                        08030002
         BZ    MAIN01A             YES,GO PROCESS NEXT ENTRY            08040002
         ST    R1,GDGCNT           NO, SAVE COUNT                       08050002
         OI    OPTMASK,GDGSW       TURN ON GDG SWITCH                   08060002
         B     INDEXRT             GO GET LIST FROM CIR                 08070002
         EJECT                                                          08110002
WRAPUP   DS    0H                                                       08120002
*********************************************************************** 08130002
*                                                                       08140002
*        THIS ROUTINE GETS CONTROL WHEN COMPLETE OR                     08150002
*        AN ERROR RESULTING IN TERMINATION OCCURS. IT FREES ALL         08160002
*        DYNAMIC CORE OBTAINED.                                         08170002
*                                                                       08190002
*********************************************************************** 08200002
         ESTAE 0             REMOVE ESTAE                               08201002
         L     R1,FRSTBLK        GET PTR TO FIRST CIR BLOCK             08202002
         L     R1,CIRBLKLN*3(R1) GET CHAIN PTR OUT OF LAST BLOCK        08210002
WRAPUP00 C     R1,ZERO             IS IT ZERO                           08250002
         BE    WRAPUP01            YES, ALL EXTRA BLOCKS ARE FREED      08260002
         L     R2,D0(R1)           CHAIN PTR TO NEXT                    08270002
         FREEMAIN R,LV=CIRBLKLN,A=(1),SP=BLKSP                          08280002
         LR    R1,R2               COPY CHAIN PTR                       08290002
         B     WRAPUP00            GO CHECK NEXT PTR                    08300002
WRAPUP01 EQU   *                                                        08310002
         L     R2,RETCD      SAVE RETURN CODE ACCROSS FREEMAIN          08320002
         CLI   TOOSMALL,ON   WAS USER AREA EXCEEDED?                    08330002
         BNE   WRAPUP02      NO,LEAVE RETURN CODE AS IS                 08340002
         L     R2,RC12       YES,INDICATE USER AREA EXCEEDED            08350002
WRAPUP02 EQU   *                                                        08360002
         L     R3,D4(R13)    SAVE PREVIOUS SAVEAREA ADDRESS             08370002
         FREEMAIN R,LV=WORKSIZE,A=(13),SP=WORKSP                        08380002
         LR    R15,R2        RESET RETURN CODE                          08390002
         LR    R13,R3        RESET PREVIOUS SAVE AREA ADDRESS           08400002
         RETURN (14,12),RC=(15)                                         08450002
         EJECT                                                          13300002
POINTER  DS    0H                                                       17220002
*********************************************************************** 17230002
*                                                                       17240002
*        THIS ROUTINE IS ENTERED TO UPDATE THE CURRENT ENTRY POINTER    17250002
*        IN THE CURRENT BLOCK. THE CURRENT BLOCK IS DETERMINED BY       17260002
*        SEARCHING THE CHAIN FOR THE FIRST ONE WITH A ZERO ENTRY        17270002
*        POINTER AND THEN BACKING UP ONE. THE CURRENT ENTRY TYPE IS     17280002
*        DETERMINED AND THE POINTER IS ADVANCED ACCORDINGLY. IF THE     17290002
*        NEXT ENTRY IS A LINK ENTRY WHICH CONTAINS A NONZERO TTR,       17300002
*        THE CIR IS CALLED TO PROVIDE THE NEXT BLOCK OF ENTRIES. IF     17310002
*        THE TTR IS ZERO, THE CURRENT BLOCK IS RELEASED AND THE         17320002
*        PRECEDING BLOCK IS CONSIDERED. WHEN ALL BLOCKS ARE PROCESSED,  17330002
*        IE, THE CURRENT BLOCK EQUALS THE FIRST BLOCK AND THE ENTRY     17340002
*        POINTER IS ZERO, THE WRAPUP ROUTINE IS ENTERED.                17350002
*                                                                       17360002
*********************************************************************** 17370002
         STM   R0,R9,LOCSAVOF(R13)  SAVE REGISTERS LOCALLY              17380002
PTR00    L     R1,FRSTBLK          GET PTR TO FIRST BLOCK               17390002
         CLC   D4(L4,R1),ZERO      SEE IF PTR IS ZERO                   17400002
         BE    WRAPUP              YES, WE ARE FINISHED                 17410002
PTR01    ST    R1,PREVBLK          SAVE THIS BLOCK PTR                  17420002
         L     R1,D0(R1)           GET PTR TO NEXT BLOCK                17430002
         CLC   D4(L4,R1),ZERO      SEE IF PTR IS ZERO                   17440002
         BE    PTR02               YES,PROCESS LAST PTR                 17450002
         CLC   D0(L4,R1),ZERO      NO, CHECK CHAIN ADDRESS              17460002
         BNE   PTR01               IF NOT ZERO, TRY NEXT BLOCK.         17470002
         B     PTR03               GO AROUND NEXT INSTRUCTION           17480002
PTR02    L     R1,PREVBLK          GET PREVIOUS BLOCK POINTER.          17490002
PTR03    L     R2,ENTPTR(R1)       PICK UP CURRENT ENTRY POINTER        17500002
         CLI   D0(R2),DSNENT       CHECK FOR DSNAME ENTRY               17510002
         BNE   PTR04               NO, CHECK NEXT CODE                  17520002
         LA    R2,DSNLEN(R2)       UPDATE PTR                           17530002
         B     PTRFFCHK            GO CHECK FOR LINK ENTRY              17540002
*                                                                       17550002
PTR04    CLI   D0(R2),GDGENT       GDG ENTRY                            17560002
         BNE   PTR05               NO, CHECK NEXT                       17570002
         LA    R2,GDGLEN(R2)       BUMP PTR                             17580002
         B     PTRFFCHK            GO CHECK FOR LINK ENTRY              17590002
*                                                                       17600002
PTR05     CLI   D0(R2),INDENT      INDEX ENTRY                          17610002
         BNE   PTR06               NO, CHECK NEXT                       17620002
         LA    R2,INDLEN(R2)       BUMP PTR                             17630002
         B     PTRFFCHK            GO CHECK FOR LINK ENTRY              17640002
*                                                                       17650002
PTR06    CLI  D0(R2),VOLENT        VOLUMES WITH DSNAME                  17660002
         BNE   PTR07               NO, CHECK NEXT                       17670002
         XR    R4,R4               CLEAR FOR INSERT CHARACTER           17680002
         IC    R4,DSNLEN+D1(R2)       GET VOLUME COUNT                  17690002
         LA    R5,VCBLEN           LENGTH OF EACH ENTRY IN VOLUME LIST  17700002
         MR    R4,R4               TOTAL LENGTH OF LIST                 17710002
         LA    R2,DSNLEN+D2(R2,R5)    BUMP PTR BEYOND ENTRY             17720002
         B     PTRFFCHK            GO CHECK FOR LINK ENTRY.             17730002
*                                                                       17740002
PTR07    CLI   D0(R2),VCBENT       VOLUME CONTROL BLOCK PTR ENTRY       17750002
         BNE   PTR08               NO, CHECK NEXT                       17760002
         LA    R2,VCBLEN(R2)       BUMP POINTER                         17770002
         B     PTRFFCHK            CHECK FOR LINK ENTRY                 17780002
*                                                                       17790002
PTR08    CLI   D0(R2),ALIENT       ALIAS ENTRY                          17800002
         BNE   PTR09               NO, CHECK NEXT                       17810002
         LA    R2,ALILEN(R2)       BUMP POINTER                         17820002
         B     PTRFFCHK            CHECK FOR LINK ENTRY                 17830002
*                                                                       17840002
PTR09    CLI   0(R2),CVOLENT       CHECK FOR CVOL PTR ENTRY             17850002
         BNE   PTR10               NO, MUST BE LINK ENTRY               17860002
         LA    R2,CVOLLEN(R2)      BUMP POINTER                         17870002
PTRFFCHK EQU   *                                                        17880002
         ST    R2,ENTPTR(R1)       UPDATE ENTRY PTR IN BLOCK            17890002
         CLI   D0(R2),FOXES        CHECK FOR LINK ENTRY                 17900002
         BNE   PTREXIT             GO TO EXIT IF NOT LINK ENTRY         17910002
PTR10    CLC   D1(L3,R2),ZERO      IS TTR ZERO                          17920002
         BNE   PTR11               NO, GET ANOTHER BLOCK                17930002
         XC    D4(L4,R1),D4(R1)    CLEAR ENTRY POINTER                  17940002
         B     PTR00               GO BACK TO START OF ROUTINE          17950002
PTR11    EQU   *                                                        17960002
*                                                                       17970002
*        A LINK ENTRY WAS FOUND WITH A NONZERO TTR. UNCHAIN LAST        17980002
*        BLOCK AND PASS IT BACK TO CIR TO COMPLETE LIST.                17990002
*                                                                       18000002
         XC    D4(L4,R1),D4(R1)     UNCHAIN LAST BLOCK                  18010002
         LA    R3,D8(R1)           POINT AT AREA FOR LIST FROM CIR      18020002
         ST    R3,CIRWK1           STORE IN PARM LIST                   18030002
         LA    R3,D1(R2)           POINT AT TTR                         18040002
         MVC   CIRTTR(L'CIRTTR),D0(R3)  MOVE TTR TO SAVE AREA           18050002
         LA    R1,CIRTTR           POINT AT TTR OF NEXT BLOCK           18060002
         ST    R1,CIRINDX          PUT IN LIST                          18070002
         OI    CIRINDX,ASTSW       TURN ON BIT INDICATING TTR           18080002
         LA    R3,D3(R3)           POINT AT VOLID FOR CATALOG           18090002
         MVC   CIRCVOL(L'CIRCVOL),D0(R3)  MOVE CVOL TO SAVE AREA        18100002
         LA    R1,CIRCVOL          GET ADDRESS OF CVOL                  18110002
         ST    R1,CIRVOL           PUT ADDRESS IN LIST                  18120002
         XC    CIRPARM,CIRPARM     CLEAR OPTION BYTE                    18130002
         TM    OPTMASK,ANYOPT      CHECK FOR HISTORY, VOLUMES, MEMBERS  18140002
         BZ    PTR12               NONE, SKIP VOLUME REQUEST OPT        18150002
         OI    CIRPARM,CIRVOLS     REQUEST VOLUMES                      18160002
PTR12    OI    CIRPARM,CIRDSN+CIRIND REQUEST DSNAMES AND INDEX NAMES    18170002
*                                                                       18180002
         BAL   R8,CIRROUT          CALL CIR                             18190002
         LTR   R15,R15             CHECK R15 FOR ZERO                   18200002
         BNZ   CIR08               NO, PROCESS ERROR BACK IN CIRROUT    18210002
*                                                                       18220002
         L     R2,CIRWK1           GET AREA POINTER                     18230002
         LR    R1,R2                                                    18240002
         LA    R3,D8               GET DECREMENT FACTOR                 18250002
         SR    R1,R3               POINT AT LINK FIELDS OF BLOCK        18260002
         ST    R2,D4(R1)           STORE IN BLOCK                       18270002
PTREXIT  EQU   *                                                        18280002
         ST    R1,CURNTBLK         POINT TO NEW BLOCK AS CURRENT        18290002
         LM    R0,R9,LOCSAVOF(R13)  REFRESH REGISTERS                   18300002
         BR    R8                  RETURN TO CALLER                     18310002
CIRROUT  EQU   *                                                        18320002
         LA    R1,CIRPARM          PARM LIST FOR CALL MACRO             18330002
         LA    R15,CIR       GET CIR ADDRESS                            18332002
         BALR  R14,R15       CALL CIR SUBROUTINE                        18340002
         B     CIRRC(R15)          ANALYZE RETURN CODE                  18360002
*                                                                       18370002
CIRRC    B     CIROK               RC=00 SUCCESSFUL OPERATION           18380002
         B     CIR04               RC=04 LOCATE FAILED                  18390002
         B     CIR08               RC=08 VOL REQUEST-INCOMPATIBLE OPT   18400002
         B     CIR12               RC=12 VOLUMES FOUND-INCOMPATIBLE OPT 18410002
CIR04    EQU   *                                                        18420002
CIR08    EQU   *                                                        18430002
         MVC   RETCD,RC4     INDICATE DATASET NOT FOUND                 18440002
         B     WRAPUP        TERMINATE                                  18450002
CIROK    EQU   *                                                        18630002
CIR12    EQU   *                                                        18640002
         BR    R8                  RETURN TO CALL.                      18650002
         EJECT                                                          18660002
OBTBLK   DS    0H                                                       18670002
*********************************************************************** 18680002
*                                                                       18690002
*        THIS ROUTINE IS ENTERED VIA 'BAL R8,OBTBLK' AND IS USED TO     18700002
*        OBTAIN A NEW BLOCK TO BE USED AS A WORK AREA FOR CIR AND       18710002
*        TO BECOME THE CURRENT BLOCK. IF NO FREE BLOCKS ARE AVAILABLE   18720002
*        THEN A CONDITIONAL GETMAIN IS ISSUED AND THE NEW BLOCK IS      18730002
*        ADDED ON THE CHAIN. IF THE GETMAIN FAILS, CONTROL IS           18740002
*        RETURNED TO THE CALLER WITH RETURN CODE OF 8.                  18750002
*                                                                       18770002
*********************************************************************** 18780002
         STM   R0,R9,LOCSAVOF(R13)  SAVE REGISTERS LOCALLY.             18790002
         L     R1,FRSTBLK          GET PTR TO FIRST BLOCK.              18800002
OBTBLK01 CLC   ENTPTR(D4,R1),ZERO     SEE IF THE ENTRY POINTER IS ZERO  18810002
         BE    OBTBLK03            YES, USE THIS BLOCK                  18820002
         CLC   D0(L4,R1),ZERO      SEE IF CHAIN ADDRESS IS ZERO         18830002
         BE    OBTBLK02            YES, ISSUE GETMAIN FOR ANOTHER BLOCK 18840002
         L     R1,0(R1)            NO, PICK UP CHAIN ADDRESS            18850002
         B     OBTBLK01            GO CHECK NEXT BLOCK.                 18860002
OBTBLK02 LR    R3,R1               SAVE PTR TO CURRENT LAST BLK         18870002
         LA    R1,GETML            POINT AT LIST FORM OF MACRO          18880002
         LA    R2,TEMPSAVE         ANSWER PLACE                         18890002
         GETMAIN A=(R2),LV=CIRBLKLN,SP=BLKSP,MF=(E,(1))                 18900002
         LTR   R15,R15             CHECK FOR RETURN CODE                18910002
         BNZ   OBTBLK04            YES, PROCESS ERROR                   18920002
         L     R1,TEMPSAVE         GET NEW BLK ADDRESS                  18930002
         ST    R1,D0(R3)           CHAIN IT ONTO LAST BLK               18940002
         XC    D0(L8,R1),D0(R1)     CLEAR ENTRY PTR AND CHAIN ADDR      18950002
OBTBLK03 EQU   *                                                        18960002
         ST    R1,CURNTBLK         SAVE IT AS CURRENT BLOCK             18970002
         LA    R1,CIROFF(R1)       POINT AT CIR BLOCK                   18980002
         ST    R1,CIRWK1           PUT IN LIST                          18990002
         LM    R0,R9,LOCSAVOF(R13)  REFRESH REGISTERS                   19000002
         BR    R8                  RETURN TO CALLER                     19010002
OBTBLK04 EQU   *                                                        19020002
         MVC   RETCD,RC8     INDICATE OUT OF CORE                       19080002
         B     WRAPUP        TERMINATE                                  19090002
BUILDNAM EQU   *                                                        19200002
         MVI   KEYTYPE,ON    INDICATE CHANGE TO USER KEY                19202002
         L     R10,TCBADDR   GET ADDRESS OF TCB                         19202802
         USING TCB,R10       ESTABLISH ADDRESSABILITY TO TCB            19203202
* GET INTO USER'S KEY                                                   19203602
         MODESET EXTKEY=RBT234,SAVEKEY=OLDKEY,WORKREG=3                 19204402
         DROP  R10           DONE WITH TCB                              19204802
         SR    R0,R0         CLEAR REG 0                                19205202
         L     R7,OUTADDR    GET ADDRESS OF USER WORKAREA               19206002
         CH    R0,D2(R7)     IS CURRENT LENGTH ZERO?                    19208002
         BNE   OBTBLKA       NO,GO CALCULATE NEXT ENTRY ADDR            19208402
         L     R0,FOUR       LOAD R0 WITH A FOUR                        19208802
         STH   R0,D2(R7)     SET INITIAL LENGTH TO FOUR                 19209202
OBTBLKA  EQU   *                                                        19210002
         LH    R2,D2(R7)     GET CURRENT LENGTH IN R2                   19210802
         LA    R3,FORTY5(R2) R3=CURRENT LENGTH + 45                     19211602
         STH   R3,D2(R7)     SET CURRENT LENGTH                         19212402
         CH    R3,D0(R7)     IS THERE ROOM FOR NEXT ENTRY?              19213202
         BH    OBTBLK08      NO,GO SET TOOSMALL INDICATOR               19215202
         AR    R7,R2         R7=ADDR OF NEXT ENTRY                      19215602
         MVI   D0(R7),CHARA  SET TYPE FIELD TO NONVSAM -A-              19216002
         LA    R7,D1(R7)     BUMP PAST TYPE FIELD                       19216402
         MVI   D0(R7),BLANK  CLEAR ENTRY AREA TO BLANKS                 19216502
         MVC   D1(L43,R7),D0(R7)                                        19216602
         LH    R2,USRNODEL   GET LENGTH OF NODE                         19217702
         LA    R3,SAVENODE   GET ADDRESS OF NODE               @YM07060 19218102
         BCTR  R2,R0         DECREMENT LENGTH FOR MOVE                  19218502
         EX    R2,MOVE       MOVE NODE TO USER WORKAREA                 19218602
         LA    R1,D1(R2,R7)  BUMP PAST NODE                             19218702
         MVI   D0(R1),PERIOD PUT A PERIOD AFTER NODE                    19218802
         LA    R1,D1(R1)     BUMP PAST PERIOD                           19221602
         L     R2,FRSTBLK          GET FIRST BLK PTR                    19224402
         L     R3,D4(R2)           GET CURRENT ENTRY POINTER            19227202
OBTBLK05 MVC   D0(L8,R1),D1(R3)    MOVE QUALIFIER TO USER AREA          19230002
         LA    R1,D8(R1)           POINT BEYOND NAME                    19240002
OBTBLK06 BCTR  R1,R0               BACKUP POINTER BY ONE AND            19250002
         CLI   D0(R1),BLANK        TRUNCATE BLANKS.IS IT A BLANK        19260002
         BE    OBTBLK06            YES, TRY AGAIN                       19270002
         LA    R1,D1(R1)           POINT JUST BEYOND NAME               19280002
         L     R2,D0(R2)           GET NEXT BLOCK                       19290002
         LTR   R2,R2               SEE IF ADDRESS IS ZERO               19300002
         BZ    OBTBLK07            YES, WE ARE DONE                     19310002
         CLC   D4(L4,R2),ZERO      IS ENTRY PTR ZERO                    19320002
         BE    OBTBLK07            YES, WE ARE DONE                     19330002
         L     R3,ENTPTR(R2)       NO, PICK UP PTR                      19340002
         MVI   D0(R1),PERIOD       PLACE PERIOD AFTER LAST QUALIFIER    19350002
         LA    R1,D1(R1)           UPDATE POINTER                       19360002
         B     OBTBLK05            PROCESS NEXT QUALIFIER               19370002
OBTBLK07 EQU   *                                                        19380002
* GET BACK INTO SVC KEY                                                 19380402
         MODESET KEYADDR=OLDKEY,WORKREG=3                               19382002
         MVI   KEYTYPE,OFF   INDICATE CHANGE BACK TO SVC KEY            19386002
         BR    R8                  RETURN TO CALLER                     19390002
OBTBLK08 EQU   *                                                        19392002
* GET BACK INTO SVC KEY                                        @YM04820 19392402
         MODESET KEYADDR=OLDKEY,WORKREG=3                      @YM04820 19392802
         MVI   KEYTYPE,OFF   INDICATE CHANGE BACK TO SVC KEY   @YM04820 19393202
         MVI   TOOSMALL,ON   SET WORKAREA TOO SMALL INDICATOR  @YM04820 19394002
         BR    R8                  RETURN TO CALLER            @YM04820 19394402
         EJECT                                                          19397002
ESTAEXIT EQU   *             ESTAE EXIT ROUTINE                         19398002
         DROP  R11                                                      19399002
         USING *,R15                                                    19399202
         C     R0,RC12       IS RTCA AVAILABLE                          19399402
         BE    NORTCA        NO,GO PROCESS WITHOUT IT                   19399602
         DROP  R15                                                      19399802
         USING IGG0CLCB,R11                                             19399902
         STM   R14,R12,TWELVE(R13) SAVE REGS                            19400902
         LR    R4,R14        SAVE RETURN POINT                          19401102
         L     R15,D0(R1)    GET PARM LIST ADDRESS                      19401302
         LM    R11,R13,D0(R15) RESET NEEDED REGS                        19401502
         LR    R3,R1         SAVE SDWA-RTCA ADDRESS                     19401702
         USING SDWA,R3       SET ADDRESSABILITY TO SDWA                 19401802
         TM    SDWAERRC,SDWAPERC WERE WE PERCOLLATED TO                 19402802
         BO    ESTX0020      YES,BYPASS DUMPING                         19403002
         CLI   KEYTYPE,ON    WERE WE UNDER USERS KEY                    19403202
         BNE   ESTX0010      NO,BYPASS SETTING ABEND CODE               19403402
         SETRP DUMP=YES,COMPCOD=(ABENDCD,SYSTEM),RC=0,WKAREA=(3)        19403602
         B     ESTX0030      GO TO CLEAN UP                             19403702
ESTX0010 EQU   *                                                        19404702
         SETRP DUMP=NO,RECORD=YES,RC=0,RECPARM=RECORD,WKAREA=(3)        19404902
         SDUMP SDATA=LPA                                                19405102
         B     ESTX0030      GO TO CLEAN UP                             19405302
ESTX0020 EQU   *                                                        19405502
         SETRP DUMP=IGNORE,RECORD=YES,RC=0,WKAREA=(3),RECPARM=RECORD    19405602
ESTX0030 EQU   *                                                        19406602
         L     R1,FRSTBLK    GET PTR TO FIRST CIR BLOCK                 19406802
         L     R1,CIRBLKLN*3(R1) GET CHAIN PTR OUT OF LAST BLOCK        19407002
ESTX0040 EQU   *                                                        19407202
         C     R1,ZERO       HAVE ALL BLOCKS BEEN FREED                 19407402
         BE    ESTX0050      YES,BYPASS FREEMAIN                        19407502
         L     R2,D0(R1)     CHAIN TO NEXT BLOCK                        19408502
         FREEMAIN R,LV=CIRBLKLN,A=(1),SP=BLKSP                          19408702
         LR    R1,R2         COPY CHAIN PTR                             19408902
         B     ESTX0040      GO CHECK NEXT PTR                          19409102
ESTX0050 EQU   *                                                        19409302
         FREEMAIN R,LV=WORKSIZE,A=(13),SP=WORKSP FREEMAIN WORKAREA      19409402
         LR    R14,R4        RESET RETURN POINT                         19410402
         SR    R15,R15       ZERO RETURN CODE                           19410602
         BR    R14           RETURN TO RTM                              19410802
NORTCA   EQU   *                                                        19411002
         LR    R4,R14        SAVE RETURN POINT                          19411202
         LM    R11,R13,D0(R2) RESET NEEDED REGISTERS           @YM05170 19411302
         B     ESTX0030      GO TO CLEAN UP                             19412302
         DROP  R3                                                       19412502
         EJECT                                                          19413302
*********************************************************************** 26230002
* THIS CODE IS A MODIFIED VERSION OF OS VS2-1 MODULE IKJEHCIR WHICH   * 26240002
* WAS USED FOR TSO LISTCAT COMMAND.                                   * 26244002
*                                                                     * 26250002
* FUNCTION --                                                         * 26260002
*                                                                     * 26270002
*    THIS SUBROUTINE IS DESIGNED TO PROVIDE AN INTERFACE BETWEEN      * 26280002
*    IGG0CLCB AND THE SYSTEM CATALOG.  IT ABBREVIATES                 * 26290002
*    INFORMATION FOUND IN THE CATALOG INDEX BLOCKS ACCORDING TO       * 26300002
*    OPTIONS SPECIFIED BY THE CALLER.  THE LIST OF INFORMATION        * 26310002
*    RETURNED TO THE CALLER AS A RESULT OF ONE CALL TO THIS           * 26320002
*    MODULE WILL INCLUDE ONLY WHAT IS FOUND IN ONE INDEX BLOCK.       * 26330002
*    MULTIPLE CALLS MAY THEREFORE BE REQUIRED IF ALL OF THE           * 26340002
*    INFORMATION AT A PARTICULAR LEVEL OF INDEX IS DESIRED.           * 26350002
*    THE INFORMATION OBTAINED BY THIS MOUDLE IS GOTTEN BY A CALL TO OS* 26360002
*    CATALOG MANAGEMENT WITH EITHER THE BLOCK OR NAME OPTION.         * 26370002
*    THE SECOND WORD OF THE PARAMETER LIST INPUT TO THIS MODULE       * 26380002
*    INDICATES WHICH OPTION IS TO BE SELECTED AS DESCRIBED LATER.     * 26390002
*    THE WORK AREA PROVIDED BY THE CALLER IS USED TO HOLD THE         * 26400002
*    INDEX BLOCK READ AND ULTIMATELY THE INFORMATION LIST. EACH       * 26410002
*    ENTRY IN THE INDEX BLOCK IS EXAMINED AND REQUESTED               * 26420002
*    INFORMATION IS RIPPLED DOWN TO THE FORWARD PORTION OF THE        * 26430002
*    BLOCK.                                                           * 26440002
*                                                                     * 26450002
* ENTRY POINTS --                                                     * 26460002
*                                                                     * 26470002
*         CIR                                                         * 26480002
*                                                                     * 26490002
* INPUT --                                                            * 26500002
*                                                                     * 26510002
*    THE FOLLOWING PARMETER LIST MUST BE SUPPLIED BY THE CALLING      * 26520002
*    PROGRAM FOR EACH ENTRY TO THIS MODULE.                           * 26530002
*                                                                     * 26540002
*                   *************************                         * 26550002
*               + 0 * OPTIONS*   UNUSED     *                         * 26560002
*                   *************************                         * 26570002
*               + 4 * A(INDEXNAME OR TTR)   *  IF TTR, HIGH ORDER BIT * 26580002
*                   *************************     SHOULD BE ON.       * 26590002
*               + 8 * A(VOLID OF CVOL)      *  DEFAULTS TO SYSRES IF  * 26600002
*                   *************************     NOT SPECIFIED.      * 26610002
*               + C * A(WORKAREA1)          *  265 BYTE AREA FOR      * 26620002
*                   *************************     LOCATE AND LIST     * 26630002
*               +10 * A(WORKAREA2)          *  72 BYTE AREA USED AS   * 26640002
*                   *************************     REG SAVEAREA        * 26650002
*                                                                     * 26660002
*    OPTIONS IS A 1 BYTE FIELD THAT COULD CONTAIN ANY COMBINATION     * 26670002
*    OF THE FOLLOWING BIT DEFINITIONS.                                * 26680002
*                                                                     * 26690002
*              X'01'-LOWEST LEVEL QUALIFIERS ARE REQUESTED            * 26700002
*              X'02'-INDEX NAMES ARE REQUESTED                        * 26710002
*              X'04'-VOLIDS ARE REQUESTED                             * 26720002
*              X'08'-ALL OTHER VALID ENTRIES ARE REQUESTED            * 26730002
*                                                                     * 26740002
* OUTPUT --                                                           * 26750002
*                                                                     * 26760002
*    LIST ENTRIES OF THE FORM SHOWN BELOW DEPENDING ON SELECTED       * 26770002
*    OPTION CODES.                                                    * 26780002
*                                                                     * 26790002
*           OPTION X'01' -   **************                           * 26800002
*                            *07* DSNAME  *                           * 26810002
*                            **************                           * 26820002
*                            / 2/   8     /                           * 26830002
*                                                                     * 26840002
*                            ************************                 * 26850002
*                            *02* GDGNAME *TTR* DATA*                 * 26860002
*                            ************************                 * 26870002
*                            / 2/   8     / 3 /  4  /                 * 26880002
*                                                                     * 26890002
*           OPTION X'02' -   *******************                      * 26900002
*                            *00* INDEXNAME*TTR*                      * 26910002
*                            *******************                      * 26920002
*                            / 2/    8     / 3 /                      * 26930002
*                                                                     * 26940002
*           OPTION X'04'     ***********************************      * 26950002
*                            *08* DSNAME *CT*CODE*VOLSER1*SEQ*        * 26960002
*                            ***********************************..... * 26970002
*                            / 2/    8   / 2/  4 /  6    / 2 /        * 26980002
*                                                                     * 26990002
*                             CT   -NUMBER OF VOLSERS DESCRIBED       * 27000002
*                             CODE -4 BYTE DEVICE CODE                * 27010002
*                             VOLSER- A VOLUME ID                     * 27020002
*                             SEQ  -SEQUENCE FIELD FOR TAPE DEVICE    * 27030002
*                                                                     * 27040002
*                            *****************                        * 27050002
*                            *01* DSNAME *TTR*                        * 27060002
*                            *****************                        * 27070002
*                            / 2/   8    / 3 /                        * 27080002
*                             TTR POINTS TO VOLUME CONTROL BLOCK      * 27090002
*                                                                     * 27100002
*           OPTION X'08'     *****************************            * 27110002
*                            *04* ALIASNAME*TTR* TRUENAME*            * 27120002
*                            *****************************            * 27130002
*                            / 2/   8      / 3 /    8    /            * 27140002
*                                                                     * 27150002
*                            **************************               * 27160002
*                            *05* DSNAME *CODE*CVOLSER*               * 27170002
*                            **************************               * 27180002
*                            / 2/   8    / 4  /   6   /               * 27190002
*                                                                     * 27200002
*    THE LAST ENTRY IN EVERY LIST WILL BE A LINK ENTRY AS SHOWN       * 27210002
*    BELOW. IT MARKS THE END OF THE LIST AND IF THE TTR IS NONZERO    * 27220002
*    IT POINTS TO THE NEXT INDEX BLOCK IN THE CURRENT STRUCTURE       * 27230002
*    AND THE VOLSER WILL INDICATE THE CVOL IT IS ON.                  * 27240002
*                                                                     * 27250002
*                            ***************                          * 27260002
*                            *FF*TTR*VOLSER*                          * 27270002
*                            ***************                          * 27280002
*                            / 2/ 3 /   6  /                          * 27290002
*                                                                     * 27300002
*                                                                     * 27310002
* EXTERNAL REFERENCES --                                              * 27320002
*                                                                     * 27330002
*    IGG0CLCC - OS CATALOG MANAGEMENT                                 * 27340002
*                                                                     * 27360002
* EXITS, NORMAL --                                                    * 27370002
*                                                                     * 27380002
*    BR 14 RETURN CODE IN REG 15 SET TO 00.                           * 27390002
*                                                                     * 27400002
* EXITS, ERROR                                                        * 27410002
*    BR 14 WITH A RETURN CODE IN REG 15 AS FOLLOWS                    * 27420002
*                                                                     * 27430002
*                        RC=04 LOCATE FAILED. THE LOCATE RETURN CODE  * 27440002
*                              IS STORED IN THE FIRST WORD OF THE     * 27450002
*                              USERS PARAMETER LIST                   * 27460002
*                                                                     * 27470002
*                        RC=08 ONLY VOLUMES WERE REQUESTED BUT THE    * 27480002
*                              DSNAME POINTED TO WAS NOT FULLY        * 27490002
*                              QUALIFIED OR IF A TTR WAS SPECIFIED,   * 27500002
*                              IT DID NOT POINT TO A VOLUME CONTROL   * 27510002
*                              BLOCK.                                 * 27520002
*                                                                     * 27530002
*                        RC=12 VOLUMES WERE RETURNED BY LOCATE BUT    * 27540002
*                              THIS WAS NOT COMPATIBLE WITH THE       * 27550002
*                              OPTIONS REQUESTED.                     * 27560002
*                                                                     * 27570002
* TABLES/WORK AREAS --                                                * 27580002
*                                                                     * 27590002
*    ONLY THOSE DESCRIBED IN THE INPUT PARM LIST                      * 27600002
*                                                                     * 27610002
* ATTRIBUTES --                                                       * 27620002
*    REENTRANT,READ ONLY,REFRESHABLE                                  * 27630002
*                                                                     * 27640002
* CHARACTER CODE DEPENDENCY -- NONE                                   * 27650002
*                                                                     * 27660002
* NOTES -- N/A                                                        * 27670002
*                                                                     * 27680002
* REGISTER USAGE                                                      * 27700002
*  R1  POINTS AT ENTRY IN WORK AREA.                                  * 27720002
*  R2  POINTS AT CURRENT ENTRY IN BLOCK                               * 27730002
*  R4  CONTAINS PARAMETER LIST ADDRESS                                * 27750002
*  R11 MAIN BASE REG                                                  * 27820002
*  R12 ADDRESS OF CONTROLLER III WORKAREA                             * 27830002
*  R15 WILL CONTAIN RETURN CODE                                       * 27860002
*********************************************************************** 27870002
      EJECT                                                             28600002
CIR      SAVE  (14,12),,*                                               28610002
         L     R2,ACIRSAVE(R1)     GET ADDR OF SAVEAREA FROM PARM LIST  28640002
         ST    R2,FORWARD(R13)     ESTABLISH FORWARD CHAIN              28650002
         ST    R13,BACKWARD(R2)    ESTABLISH BACKWARD CHAIN             28660002
         LR    R13,R2              NEW SAVEAREA                         28670002
         LR    R4,R1               COPY PARAMETER LIST ADDRESS.         28680002
         L     R5,CIROPT(R4)       SAVE OPTION BITS                     28690002
         TM    CIRSRCH(R4),HIGHBIT TEST FOR TTR ADDRESS OR NAME         28700002
         BO    TTRADD              TTR WAS SPECIFIED.                   28710002
         MVC   CIROPT(L4,R4),CAM1  SET CAMLST OPTIONS TO NAME           28720002
         B     LOCATE        GO LOCATE                                  28730002
TTRADD   MVC   CIROPT(L4,R4),CAM2  SET CAMLST OPTION TO BLOCK           28750002
         NI    CIRSRCH(R4),HEXFF-HIGHBIT TURN OFF TTR ADDRESS INDICATOR 28760002
LOCATE   EQU   *                                                        28770002
         L     R15,CLCCADDR  R15 = ENTRY POINT OF OS CAT.MGMT.          28780002
         BALR  R14,R15       GO DO LOCATE                               28782002
         LTR   R15,R15             TEST LOCATE RETURN CODE              28790002
         BZ    CODE00              SUCCESS, CONTINUE                    28800002
         C     R15,TWELVERC        TEST FOR RC = 12                     28810002
         BE    CODE12              OK, INDEX BLOCK READ                 28820002
ERRCODE  EQU   *                                                        28830002
         ST    R15,CIROPT(R4)      SAVE LOCATE CODE IN 1ST WORD OF LIST 28840002
         LA    R15,ERR03           SET RC=4 FOR CALLER.                 28850002
ERREXIT  EQU   *                                                        28860002
         L     R13,BACKWARD(R13)   GET CALLERS SAVEAREA                 28870002
         RETURN (14,12),RC=(15)    RETURN  TO CALLER                    28880002
*                                                                       28890002
CODE12   ST    R5,CIROPT(R4)       REPLACE OPTION BITS IN LIST          28900002
         TM    CIROPT(R4),ALLOPT-VOLOPT WAS VOLUMES ONLY REQUESTED      28910002
         BNZ   CODE12A             NO, PROCESS BLOCK                    28920002
         LA    R15,ERR01           SET ERROR CODE                       28930002
         B     ERREXIT             GO EXIT WITH ERROR                   28940002
CODE12A  L     R1,CIRWA(R4)        POINT TO LOCATE WORKAREA             28950002
         LR    R7,R1               SAVE BLOCK ADDRESS.                  28960002
         LH    R6,D0(R1)           GET BYTE COUNT FOR BLOCK             28970002
         LA    R6,D0(R1,R6)        POINT AT END OF USED PART OF BLOCK   28980002
         LA    R2,FRSTNTRY(R1)     POINT AT FIRST ENTRY                 28990002
CHKTYPE  EQU   *                                                        29000002
         CLI   CNT(R2),INDXNTRY    CHECK FOR INDEX PTR ENTRY            29010002
         BE    INDEXPTR            YES, GO                              29020002
         TM    CIROPT(R4),DSOPT    CHECK FOR DSNAME OPTION SPECIFIED    29030002
         BNO   ALLCHK              NO, GO CHECK                         29040002
         TM    CNT(R2),DSNMNTRY    CHECK FOR DSNAME ENTRY.              29050002
         BO    DSENTRY             PROCESS AS A DS                      29060002
         TM    CNT(R2),MULTIVOL    IS IT A DS PTR WITH SEVERAL VOLUMES  29070002
         BNZ   DSENTRY             YES, GO                              29080002
         CLI   CNT(R2),GDGENTRY    IS IT A GDG PTR                      29090002
         BE    GDGPTR              YES, GO                              29100002
         CLI   CNT(R2),VCBENTRY    IS IT A VOL CONTROL BLOCK            29110002
         BE    VOLPTR              YES, GO                              29120002
ALLCHK   EQU   *                                                        29130002
         TM    CIROPT(R4),OTHROPT  CHECK FOR OTHER OPTION               29140002
         BNO   NEXENTRY            NO, SKIP THIS ENTRY.                 29150002
         CLI   CNT(R2),ALIAS       IS IT AN ALIAS ENTRY                 29160002
         BE    ALIASENT            YES, GO                              29170002
         CLI   CNT(R2),OLDPTR      IS IT AN OLD CVOL PTR                29180002
         BE    OLDCVOL             YES, GO                              29190002
         CLI   CNT(R2),NEWPTR      IS IT A NEW CVOL PTR                 29200002
         BE    NEWCVOL             YES, GO                              29210002
         B     NEXENTRY            SKIP TO NEXT ENTRY                   29220002
*                                                                       29230002
DSENTRY  TM    CIROPT(R4),VOLOPT   CHECK FOR VOLUME OPTION              29240002
         BO    DSENTRY1            YES, GO BUILD ENTRIES WITH VOLUMES   29250002
         MVI   CODEOFF(R1),DSNWOVOL DSNAME WITH OUT VOLUMES CODE        29260002
         MVC   NAMEOFF(NAMLEN,R1),D0(R2) MOVE NAME TO LIST              29270002
         LA    R1,DSLEN(R1)        INCREMENT WORKAREA POINTER           29280002
NEXENTRY EQU *                                                          29290002
         XR    R3,R3               CLEAR REG FOR INSERT INSTRUCTION     29300002
         IC    R3,CNT(R2)          PICK UP HW COUNT                     29310002
         SLL   R3,ONE              MULTIPLY BY 2 TO MAKE IT BYTES       29320002
         LA    R2,CATENTLN(R3,R2)  ADJUST POINTER TO NEXT ENTRY         29330002
EOBCHK   EQU   *                                                        29340002
         CR    R2,R6               SEE IF END OF BLOCK IS REACHED       29350002
         BL    CHKTYPE             IF NOT, PROCESS ANOTHER ENTRY        29360002
         MVI   CODEOFF(R1),LINKCODE INDICATE LINK ENTRY                 29370002
         MVC   NAMEOFF(TTRLEN,R1),ATTROFF(R7) MOVE TTR TO ENTRY         29380002
         MVC   VOLSEROF(VOLLEN,R1),VOLOFF(R7) MOVE VOLSER TO ENTRY      29390002
         B     NORMEXIT            NORMAL EXIT FROM ROUTINE             29400002
DSENTRY1 MVI   CODEOFF(R1),DSNWVOLS INDICATE DSNAME WITH VOLUMES        29410002
         MVC   NAMEOFF(NAMLEN,R1),D0(R2) MOVE NAME TO LIST              29420002
         LA    R1,DSLEN(R1)        INCREMENT WORKAREA POINTER           29430002
         XR    R3,R3               CLEAR FOR INSERT INSTRUCTION         29440002
         IC    R3,CNT(R2)          GET HW COUNT                         29450002
         SLL   R3,ONE              MULTIPLY BY 2 TO MAKE IT BYTES       29460002
         BCTR  R3,R0               DECREMENT CNT BY ONE FOR EX          29470002
         EX    R3,MOVEVOLS         MOVE VOLUME LIST                     29480002
         LA    R3,L1(R3)           ADD BACK DECREMENT VALUE             29490002
         LA    R2,CATENTLN(R3,R2)  POINT TO NEXT ENTRY IN BLOCK         29500002
         LA    R1,L0(R3,R1)        POINT TO NEXT LIST ENTRY LOCATION.   29510002
         B     EOBCHK              CHK FOR END OF BLOCK                 29520002
INDEXPTR CLI   D0(R2),LINKCODE     CHECK FOR LINK ENTRY                 29530002
         BE    LINKPTR             YES, GO EXIT.                        29540002
         TM    CIROPT(R4),INDOPT   WAS INDEX INFORMATION REQUESTED      29550002
         BO    INDEXGO             YES, GO                              29560002
         B     NEXENTRY            GET NEXT ENTRY                       29570002
INDEXGO  MVI   CODEOFF(R1),INDXCODE INDICATE INDEX NAME.                29580002
         MVC   NAMEOFF(CNT,R1),D0(R2) MOVE NAME AND TTR TO LIST ENTRY   29590002
         LA    R1,INDLEN(R1)       POINT TO NEXT LIST ENTRY             29600002
         B     NEXENTRY            GET NEXT ENTRY                       29610002
NODATA   LR    R1,R2               POINT TO WORKAREA                    29620002
         LR    R7,R1               SAVE BLK ADDRESS                     29630002
         LA    R2,FRSTNTRY(R2)     ADJUST R2 POINTER                    29640002
LINKPTR  MVI   CODEOFF(R1),LINKCODE INDICATE LINK ENTRY                 29650002
         MVC   NAMEOFF(TTRLEN,R1),NAMLEN(R2) MOVE TTR TO LIST           29660002
         MVC   VOLSEROF(VOLLEN,R1),VOLOFF(R7) MOVE VOLSER TO ENTRY      29670002
NORMEXIT EQU   *                                                        29680002
         L     R13,BACKWARD(R13)   GET CALLERS SAVE AREA ADDRESS        29690002
         XR    R15,R15             SET RC=0                             29700002
         RETURN (14,12),RC=(15)    RETURN TO CALLER                     29710002
*                                                                       29720002
VOLPTR   EQU   *                                                        29730002
         TM    CIROPT(R4),VOLOPT   SEE IF VOLUMES WERE REQUESTED        29740002
         BO    VOLPTR1             YES, GO                              29750002
         MVI   CODEOFF(R1),DSNWOVOL INDICATE DSNAME WITHOUT VOLUMES     29760002
         MVC   NAMEOFF(NAMLEN,R1),D0(R2) MOVE NAME TO LIST              29770002
         LA    R1,DSLEN(R1)        INCREMENT WORKAREA POINTER  @YM04820 29771002
         B     NEXENTRY            GET NEXT ENTRY              @YM04820 29780002
VOLPTR1  MVI   CODEOFF(R1),VCBCODE INDICATE DSNAME AND TTR OF VCB       29790002
         MVC   NAMEOFF(CNT,R1),D0(R2) MOVE NAME AND TTR TO LIST         29800002
VOLEXIT  LA    R1,VCBLEN(R1)       INCREMENT LIST PTR                   29810002
         B     NEXENTRY            GET NEXT ENTRY                       29820002
GDGPTR   MVI   CODEOFF(R1),GDGCODE INDICATE GDG ENTRY IN LIST           29830002
         MVC   NAMEOFF(CNT,R1),D0(R2) MOVE NAME AND TTR TO LIST ENTRY   29840002
         XR    R3,R3               CLEAR REGISTER FOR INSERT            29850002
         IC    R3,CNT(R2)                                               29860002
         MVC   GDGDATA(DATALEN,R1),CATENTLN(R2) PUT FLAGS IN LIST       29870002
         LA    R1,GDGLEN(R1)       ADJUST LIST PTR                      29880002
         SLL   R3,ONE              MULT HW COUNT BY 2-- MAKE IT BYTES   29890002
         LA    R2,CATENTLN(R3,R2)  POINT TO NEXT ENTRY IN BLOCK         29900002
         B     EOBCHK              CHECK FOR END OF BLOCK               29910002
ALIASENT EQU   *                                                        29920002
         MVI   CODEOFF(R1),ALIASCDE INDICATE ALIAS ENTRY                29930002
         MVC   NAMEOFF(CNT,R1),D0(R2) MOVE ALIAS AND TTR TO LIST.       29940002
         XR    R3,R3               CLEAR FOR INSERT CHARA               29950002
         IC    R3,CNT(R2)                                               29960002
         MVC   ALIASLEN(NAMLEN,R1),CATENTLN(R2) MOVE TRUE NAME TO LIST  29970002
         LA    R1,ALIASLEN+NAMLEN(R1) ADJUST LIST PTR                   29980002
         SLL   R3,ONE              CONVERT HALFWORDS TO BYTES           29990002
         LA    R2,CATENTLN(R3,R2)  POINT TO NEXT ENTRY IN BLOCK         30000002
         B     EOBCHK              CHECK FOR END OF BLOCK               30010002
OLDCVOL  CLI   D0(R2),INDXCBLK     INDEX CONTROL ENTRY                  30020002
         BE    NEXENTRY            YES, GO TRY NEXT                     30030002
         MVI   CODEOFF(R1),CVOLCODE INDICATE CVOL PTR IN LIST ENTRY     30040002
         MVC   NAMEOFF(NAMLEN,R1),D0(R2) MOVE NAME TO LIST              30050002
         XC    DEVCDEOF(DEVCDELN,R1),DEVCDEOF(R1) ZERO DEVICE CODE      30060002
         MVC   CVOLVOL(VOLLEN,R1),CATENTLN(R2) MOVE VOLID TO LIST       30070002
         XR    R3,R3               CLEAR FOR INSERT CHARA               30080002
         IC    R3,CNT(R2)                                               30090002
CVOLEXIT SLL   R3,ONE              CONVERT HALFWORD COUNT TO BYTES      30100002
         LA    R2,CATENTLN(R3,R2)  POINT AT NEXT ENTRY IN BLOCK         30110002
         LA    R1,CVOLLEN(R1)      POINT AT NEXT LIST ENTRY             30120002
         B     EOBCHK              CHECK FOR END OF BLOCK               30130002
NEWCVOL  CLI   D0(R2),INDXCBLK     INDEX CONTROL ENTRY CHECK            30140002
         BE    NEXENTRY            GET NEXT ENTRY                       30150002
         MVI   CODEOFF(R1),CVOLCODE  INDICATE CVOL                      30160002
         MVC   NAMEOFF(NAMLEN,R1),D0(R2) PUT NAME INTO LIST ENTRY       30170002
         MVC   DEVCDEOF(DEVCDELN+VOLLEN,R1),CATENTLN(R2) MOVE DEVICE    30180002
*                             CODE AND VOLSER TO LIST ENTRY.            30190002
         XR    R3,R3               CLEAR FOR INSERT CHARACTER           30200002
         IC    R3,CNT(R2)                                               30210002
         B     CVOLEXIT            EXIT FROM ROUTINE                    30220002
**********************************************************************  30230002
*                                                                       30240002
*   THIS ROUTINE GETS CONTROL IF A ROUTINE CODE OF ZERO IS PASSED BACK  30250002
*   FROM LOCATE.                                                        30260002
*                                                                       30270002
**********************************************************************  30280002
CODE00   EQU   *                                                        30290002
         L     R2,CIRWA(R4)        PICK UP BLOCK ADDRESS                30300002
         CLC   CIROPT(L4,R4),CAM1  WAS THIS A LOCATE BY NAME            30310002
         ST    R5,D0(R4)           RESTORE OPTION BYTES                 30320002
         BE    TESTVCB             YES, BLOCK MUST BE A VCB             30330002
         CLI   FRSTNTRY(R2),LINKCODE TEST FOR NO ENTRY                  30340002
         BE    NODATA              YES, GO TO NODATA RTN                30350002
         LA    R3,TWENTY5          GET MINIMUM POSSIBLE BYTE COUNT      30360002
         CH    R3,D0(R2)           CHECK AGAINST ACTUAL BYTE COUNT      30370002
         BH    TESTVCB             IF COUNT IS LESS THAN MINIMUM, VCB   30380002
         TM    CIROPT(R4),VOLPLUS  WAS OTHER THAN VOLUMES REQUESTED     30390002
         BNZ   CODE12A             YES, PROCESS AS INDEX BLOCK.         30400002
*                                                                       30410002
*   SINCE NO OTHER OPTIONS WERE REQUESTED, WE MUST ASSUME IT IS A       30420002
*   VOLUME CONTROL BLOCK.  THE FOLLOWING CHECKS ARE MADE BASED          30430002
*   ON THAT ASSUMPTION. IF NO OPTIONS WERE REQUESTED, IT IS STILL       30440002
*   AN ERROR AND IS CAUGHT HERE. EVEN IF IT IS NOT A VCB, SINCE         30450002
*   OPTIONS DID NOT INDICATE HE EXPECTED OTHER THAN A VCB AND WE        30460002
*   CAN NOT DETERMINE FOR SURE WHAT IT IS, HE WILL GET WHATEVER         30470002
*   HE POINTED AT WITH THE TTR HE FURNISHED.                            30480002
*                                                                       30490002
TESTVCB  TM    CIROPT(R4),VOLOPT   WAS VOLUMES REQUESTED                30500002
         BZ    ERRVCB              NO, PROCESS ERROR                    30510002
         TM    CIROPT(R4),VOLPLUS  WERE THERE OTHER REQUESTS            30520002
         BNZ   ERRVCB              YES, PROCESS AS ERROR.               30530002
         B     NORMEXIT            NO, EXIT NORMALLY                    30540002
ERRVCB   EQU   *                                                        30550002
         LA    R15,ERR02           SET RC=12, VOLUME BLK FOUND IN ERROR 30560002
         B     ERREXIT             EXIT IN ERROR                        30570002
         EJECT                                                          30572002
CAM1     CAMLST  NAME,1,,3         LOCATE CAMLST                        30580002
CAM2     CAMLST                    BLOCK,1,2,3                          30590002
GETMLMDL GETMAIN                   EC,MF=L                              30612002
FREEMMDL FREEMAIN                  E,MF=L                               30614002
EILFS    EQU   *                   END OF LIST FORMS FOR INITCORE       30616002
LILFS    EQU   EILFS-GETMLMDL      LENGTH OF LIST FORMS FOR INITCORE    30618002
MOVE     MVC   D0(L0,R7),D0(R3)    MVC INSTRUCTION FOR MOVES            30618402
MOVEVOLS MVC   D0(L0,R1),TWELVE(R2) USED FOR EXECUTE                    30618502
RC0      EQU   *                   RETURN CODE 0                        30618602
ZERO     DC    F'0'                VALUE OF 0                           30618802
RC4      EQU   *                   RETURN CODE 4                        30618902
FOUR     DC    F'4'                VALUE OF 4                           30619202
RC8      DC    F'8'                RETURN CODE 8                        30619602
RC12     EQU   *                   RETURN CODE 12                       30620702
TWELVERC DC    F'12'               TWELVE FOR RC TEST                   30622402
RECORD   DC    C'IGG0CLCA',C'IGG0CLCB',8X'00'  RECORD AREA FOR SETRP    30623202
FOXMASK  DC    X'FFFFFFFF'         MASK TO COMPLEMENT GENERATION NUMBER 30623902
CLCCADDR DC    V(IGG0CLCC)   ADDRESS OF OS CATLG.MGMT.                  30624302
         EJECT                                                          30625402
WORKCORE DSECT                                                          30626902
STRTDSCT EQU   *                   START OF DSECT                       30628402
SAVE     DS    28F                 SAVE AREA                            30629902
GETML    GETMAIN EC,MF=L                                                30631902
FREEML   FREEMAIN E,MF=L                                                30633902
USRNODEL DS    H                   LENGTH OF USERID OR NODE             30635902
USERNODE DS    CL44                USERID OR NODE IS KEPT HERE          30637902
SAVENODE DS    CL44                USERID OR NODE IS SAVED HERE@YM07060 30638002
OPTMASK  DS    CL1                 MASK OF USER OPTS SPECIFIED IN CMD.  30638302
FIRSTIME DS    CL1                 ALLOCATE FIRST TIME  SWITCH          30638702
FIRSTCIR DS    CL1                 FIRST TIME SWITCH FOR CIRROUT        30639102
TOOSMALL DS    CL1           WORKAREA TOO SMALL SWITCH                  30639502
OLDKEY   DS    CL1           KEY SAVE AREA FOR MODESET MACRO            30639602
KEYTYPE  DS    CL1           KEYTYPE SWITCH. 01=USER,00=SVC             30639702
SAVER11  DS    F             REGISTER 11 SAVE FOR ESTAE                 30641702
SAVER12  DS    F             REGISTER 12 SAVE FOR ESTAE                 30642102
SAVER13  DS    F             REGISTER 13 SAVE FOR ESTAE                 30642502
ESTAELST DS    4F            ESTAE MACRO LIST FORM                      30642702
TCBADDR  DS    F             SAVE AREA FOR TCB ADDRESS                  30643002
OUTADDR  DS    F             ADDRESS OF USER WORKAREA                   30646502
CURNTBLK DS    F                   PTR TO CURRENT BLOCK FROM CIR.       30649802
FRSTBLK  DS    F                   PTR TO FIRST BLOCK IN CHAIN.         30651802
         DS    0D                                                       30653802
CIRBLOCK DS    4CL280              WORKAREAS FOR CIR--DBLWORD ALIGNED   30655802
CIRBLKLN EQU   L'CIRBLOCK          LENGTH OF ONE CIRBLOCK.              30657802
*                                                                       30658202
*                                                                       30658602
*     PARMLIST FOR CIR RTN    *********                                 30659002
CIRPARM  DS    0F                  BEGIN OF PARMLIST                    30659402
CIROPTNS DS    1F                  OPTIONS USED                         30659502
CIRINDX  DS    1F                  ADDR OF INDEXNAMES OR TTR            30659602
CIRVOL   DS    1F                  ADDR OF VOLID OF CVOL                30659702
CIRWK1   DS    1F                  ADDR OF WORKAREA1                    30669702
CIRWK2   DS    1F                  ADDR OF WORKAREA2                    30671702
*                                                                       30673702
*    END OF CIR PARMLIST                                                30675702
*                                                                       30677702
*                                                                       30678102
CIRSAVE  DS    28F                 SAVEAREA FOR CIR PLUS SUBROUTINES    30678502
CIRTTR   DS    CL3                 HOLDS TTR OF NEXT BLOCK FOR CIRROUT  30678902
CIRCVOL  DS    CL6                 HOLDS CVOL VOLID FOR NEXT BLOCK      30679302
PREVBLK  DS    F             USED BY POINTER ROUTINE                    30679402
GDGCNT   DS    F             GDG COUNT OF GENERATIONS                   30679502
RETCD    DS    F                   RETURN CODE FOR TMP                  30679602
TEMPSAVE DS    F                   FOR GETMAIN ADDR, ALIGNING VOL COUNT 30689602
ENDDSCT  EQU   *                   END OF WORKCORE DSECT                30691602
WORKSIZE EQU   ENDDSCT-STRTDSCT    SIZE OF WORKAREA                     30693602
         EJECT                                                          30695602
         IKJTCB                                                         30696002
         EJECT                                                          30696402
         IHARB                                                          30696802
         EJECT                                                          30697202
         IHASDWA                                                        30697402
         EJECT                                                          30697502
IGG0CLCB CSECT                                                          30697602
         DS    0F            FORCE ALIGNMENT FOR PATCH AREA             30698402
PATCH    DC    50C'Z'        PATCH AREA                                 30698802
         END                                                            30699602
./  ADD  SSI=82080313,NAME=IGG0CLCC
     TITLE 'IGG0CLCC - INITIALIZATION, LOCATE, RELATIVE GDG, ALIAS'     00010002
* /* START OF SPECIFICATIONS ****                                       00020002
*                                                                       00030002
*01*  MODULE-NAME = IGG0CLCC                                   @YL026UD 00040002
*01*  STATUS = 00                                                       00050002
*01*  CHANGE-ACTIVITY = NEW FOR RELEASE 21,CHANGED FOR OSVS      Y01113 00060002
*                       (AS IGG0CLC0,IGG0CLC1,IGG0CLC2,IECPBLDL)        00060402
*                       RENAMED AND CHANGED FOR VS2 RELEASE 2  @YL026UD 00062002
* 16 BIT UCB ADDRESS SUPPORT FOR VS2-3                         @Z30AAEH 00064000
*A042920-042940                                                 YA00090 00066002
* A41320-41400                                                 @Z30AAEH 00066100
*          DELETIONS/CHANGES FOR VS2-3.0                                00066408
*A041920-041940,042960-042980                                   ZA00015 00066708
*A199900-1999400,C201000,260800                                @ZA01897 00067008
*A197830-197832,198410-198420                                  @ZA02286 00067308
*       VS2 037 CHANGES                                                 00067608
*A020042-020056,A020066-020179                                 @OZ03161 00067908
*A044600                                                       @OZ04613 00068208
*A136210-136280,A139810-139880                                 @OZ04937 00068508
*A201800                                                       @OZ05600 00068808
*A017100-017200,A017900                                        @OZ06685 00069108
*A139871-139877                                                @OZ14626 00069408
*A192701-192702                                                @OZ14790 00069508
*D135600-136200                                                @OZ14792 00069608
*A270802                                                       @OZ20755 00069708
*C017300,C018200,A017370-018420,A247800-248100                 @OZ30106 00069808
*D248840-248867,A248962,A250775-250776                         @OZ30106 00069908
*C199200,C199320                                               @OZ31408 00070132
*A144320-144380                                                @OZ32573 00070437
*A145750,A153220-153280                                        @OZ32593 00070537
*C136250,C139840,C195030                                       @OZ33388 00070637
*                                                                       00070737
*********************************************************************** 00070837
*********************************************************************** 00071608
*01*  DESCRIPTIVE-NAME = INITIALIZATION, LOCATE,               @YL026UD 00071708
* EXTENDED MVS CVOL SUPPORT                                    @Z40CSRC 00071808
* SU32  RACF VERSION 2                                         @G32DSFS 00072432
*                                                                       00073032
*                                                                       00073808
*01*  DESCRIPTIVE-NAME = INITIALIZATION, LOCATE,               @YL026UD 00078008
*                        RELATIVE GDG, AND ALIAS               @YL026UD 00082008
*01*  FUNCTION = INITIALIZATION                                @YL026UD 00086008
*                  1.  ESTABLISHES THE WORKAREA                @YL026UD 00090002
*                  2.  CONSTRUCTS THE NAME REFERENCING TABLE   @YL026UD 00100002
*                  3.  BRANCHES TO IGC0002H TO OPEN SYSCTLG    @YL026UD 00100802
*                  4.  ESTABLISHES RPS WORKAREA FOR NON-LOCATE @YL026UD 00101202
*                LOCATE                                        @YL026UD 00102002
*                  1.  LOCATES THE HIGH LEVEL NAME             @YL026UD 00110002
*                  2.  ENQUES AND DEQUES NECESSARY RESOURCES   @YL026UD 00120002
*                  3.  LOCATES BY BLOCK                        @YL026UD 00130002
*                  4.  LOCATES THE REMAINING NAME LEVELS       @YL026UD 00140002
*                  5.  SETS LOCATE RETURN CODE                 @YL026UD 00142002
*                  6.  DEQUES ALL RESOURCES FOR NORMAL LOCATE  @YL026UD 00144002
*                  7.  RETURNS VOLUME INFORMATION TO CALLER    @YL026UD 00146002
*                      FOR NORMAL LOCATE                       @YL026UD 00148002
*                  8.  MAINTAINS A TTR OF THE FIRST DELETABLE  @YL026UD 00148408
*                      BLOCK FOR UCATDX OPERATION              @YL026UD 00148802
*                RELATIVE GDG AND ALIAS                        @YL026UD 00149202
*                  1.  LOCATES RELATIVELY NAMED GENERATION     @YL026UD 00149602
*                      DATA SETS                               @YL026UD 00149702
*                  2.  BUILDS ALIAS ENTRIES                    @YL026UD 00149802
*                  3.  BUILDS CVOL POINTER ENTRIES             @YL026UD 00149902
*                  4.  RESOLVES ALIAS NAMES AND RE-ENQUES      @YL026UD 00153202
*     FOR AN OVERVIEW OF THIS MODULE AND ITS RELATIONSHIP WITH THE      00156702
*     OTHER CATALOG MANAGEMENT MODULES, REFER TO THE CVOL PROCESSOR     00160008
*     PLM, Y35-0011.                                                    00170008
*01*  NOTES = LABELS REFERED TO IN COMMENTARY ARE ENCLOSED IN SINGLE    00180002
*     QUOTES. EQUATED CONSTANTS ARE PREFIXED WITH 'D' OR 'X' WHEN THEY  00190002
*     ARE DECIMAL OR HEXADECIMAL RESPECTIVELY; FOR EXAMPLE, D12 EQU 12, 00200002
*     AND X12 EQU X'12'. ERROR CODES ARE SET USING 'ERRORXX' AT         00210002
*     CORRESPONDING LABELS, 'ERRXX'. BRANCHES ORIGINATE FROM LABELS     00220002
*     'IGG0CLCX'. FLAGS ARE LABELED 'FLAGX'.  IO IS DONE FROM EITHER A  00230002
*     SUBROUTINE NAMED 'CALLBLDL' OR A SUBROUTINE NAMED 'IO'. ADDRESS   00240002
*     CONVERSION IS ACCOMPLISHED IN SUBROUTINES NAMED 'TOABSL' AND      00250002
*     'TORLTV'. THESE CONVENTIONS ARE FOLLOWED IN EVERY MODULE WHERE    00260002
*     THE EVENT EXISTS.                                                 00270002
*02*    DEPENDENCIES = THE OPERATION OF THIS MODULE DEPENDS ON THE      00280002
*       COLLATING SEQUENCE OF THE EXTERNAL CHARACTER SET.  A TRANSLATE  00290002
*       AND TEST TABLE IS CONSTRUCTED FOR THE EBCDIC CHARACTER SET AND  00300002
*       IS ARRANGED SO THAT REDEFINITION OF THE CHARACTER CONSTANTS BY  00310002
*       REASSEMBLY WILL RESULT IN A CORRECT TABLE.  THE CONSTANTS IN    00320002
*       QUESTION ARE PREFIXED WITH 'CCD', FOR 'CHARACTER CODE           00330002
*       DEPENDENT'.                                                     00340002
*02*    PERFORMANCE = 1.  AN ENQUEUE SCHEME COMPOSED OF THREE           00350002
*                         RESOURCES (HIGH LEVEL NAME, VOLUME INDEX,     00360002
*                         AND VICE), WHICH INCREASES THE AVAILABILITY   00370002
*                         OF SYSCTLG.                                   00380002
*                     2.  CATALOG MANAGEMENT OPERATES ENABLED.          00410002
*                     3.  A TABLE IS CONSTRUCTED FROM THE GIVEN NAME.   00420002
*                     4.  THE GIVEN NAME IS CHECKED FOR SYNTAX ERRORS   00430002
*                         IN THIS MODULE.                               00440002
*02*    RESTRICTIONS = ALL DIRECT ACCESS STORAGE DEVICES EXCEPT 2321    00450002
*       DATA CELL ARE SUPPORTED BY CATALOG MANAGEMENT.                  00460002
*02*    REGISTER-CONVENTIONS = REGISTERS ARE LABELED 'R0,R1,...,R15'.   00470002
*       REQUIRED ADDITIONAL LABELS ARE EQUATED TO THESE.  REGISTERS     00480002
*       COMMON TO ALL MODULES OF CATALOG MANAGEMENT ARE                 00490002
*       R4  BASE REGISTER FOR THE MODULE.                               00500002
*       R6  BASE REGISTER FOR THE WORKAREA DSECT.                       00510002
*       R8  BASE REGISTER FOR THE CAMLSTD DSECT.                        00520002
*02*    PATCH-LABEL = 'FIXAREA'                                @YL026UD 00530002
*01*  MODULE-TYPE = MODULE                                              00540002
*02*    PROCESSOR = ASSEMBLER                                           00550002
*02*    MODULE-SIZE = SEE EXTERNAL SYMBOL DICTIONARY ABOVE              00560008
*02*    ATTRIBUTES = REENTERABLE, READ ONLY, ENABLED, SUPERVISORY MODE  00570002
*01*  ENTRY = IGG0CLCC                                           Y01113 00580002
*02*    PURPOSE = (IGG0CLC0) THIS IS THE FIRST LOAD OF OS CATLG  Y01113 00590002
*       PROCESSING. ENTERED TO INITIALIZE THE WORKAREA,          Y01113 00600002
*       CERTAIN PARAMETERS, AND OPEN THE APPROPRIATE SYSCTLG.    Y01113 00610002
*       (IGG0CLC1) ENTERED FOR 'LNKX', 'BLDA', 'BLOCK', 'NAME' @YL026UD 00612002
*       FOR RELATIVELY NAMED GENERATION DATA SETS, AND ANY     @YL026UD 00614002
*       REQUEST REQUIRING A LOCATE BY ALIAS NAME.  FOR 'LNKX'  @YL026UD 00616002
*       AND 'BLDA', INSURES THAT REQUEST CAN BE PERFORMED ON   @YL026UD 00618002
*       STRUCTURE THAT EXISTS IN SYSCTLG.                      @YL026UD 00618402
*       (IGG0CLC2) ENTERED FOR EVERY REQUEST TO FINISH THE     @YL026UD 00618802
*       LOCATE FUNCTION AND EITHER RETURN TO IGG0CLCA OR       @YL026UD 00619202
*       IGG0CLCB OR SET UP FOR THE FOLLOWING LOADS OF CATALOG  @YL026UD 00619602
*       MANAGEMENT.                                            @YL026UD 00619702
*02*    LINKAGE = BALR 14,15                                            00620008
*02*    INPUT = 1.  R1 -- POINTER TO THE CAMLST (SEE CAMLSTD DSECT FOR  00630002
*                         A DESCRIPTION OF THE FIELDS)                  00640002
*               2.  R12 - POINTER TO CONTROLLER III WORKAREA.  @YL026UD 00680002
*                         MUST BE RESTORED AT RETURN.            Y01113 00690002
*               3.  R13 - POINTER TO REGISTER SAVEAREA         @YL026UD 00692002
*                         (IN CONTROLLER III WORKAREA)         @YL026UD 00696002
*02*    OUTPUT = FOR A RETURN TO IGG0CLCA OR IGG0CLCB, THE     @YL026UD 00700002
*                OUTPUT CONSISTS OF, WHERE APPROPRIATE,        @YL026UD 00750002
*                .  LOCATE RETURN CODES                        @YL026UD 00760002
*                .  VOLUME LIST FOR DATA SET                   @YL026UD 00770002
*                .  TTR OF DSCB FOR DATA SET                   @YL026UD 00772002
*                .  VOLUME IDENTIFICATION OF THE CVOL          @YL026UD 00774002
*                   CONTAINING SYSCTLG                         @YL026UD 00776002
*                .  DEVICE TYPE OF THE CVOL CONTAINING SYSCTLG @YL026UD 00778002
*                .  TTR OF THE NEXT VCB                        @YL026UD 00778402
*                THE FORMAT OF THE RETURNED DATA IS DESCRIBED  @YL026UD 00778802
*                AT 'RETDATA' IN THE WORKAREA.                 @YL026UD 00779202
*02*    EXIT-NORMAL = IGG0CLCD OR IGG0CLCA OR IGG0CLCB         @YL026UD 00780002
*02*    EXIT-ERROR = IGG0CLC7                                  @YL026UD 00790002
*01*  EXTERNAL-REFERENCES = AS FOLLOWS:                                 00800002
*02*    ROUTINES = IECPBLDL, FREEMAIN, IGC0002H (OPEN/EXTEND),          00810008
*         IGG0CL1A (CVOL DYNAMIC ALLOCATION ROUTINE)           @Z40CSRC 00812008
*02*    DATA-SETS = SYSCTLG                                             00820002
*02*    DATA-AREA = ALL DATA AREAS ARE DESCRIBED BY DSECTS AT THE END   00830002
*       OF THE MODULE                                                   00840002
*01*  TABLES = 'NAMTABLE'                                               00850002
*01*  MACROS = ENQ, DEQ, GETMAIN, ESTAE, EXCP, WAIT, RACHECK            00860008
*                                                                       00870002
**** END OF SPECIFICATIONS ***/                                         00880002
         EJECT                                                 @YL026UD 00890002
IGG0CLCC CSECT                                                 @YL026UD 00900002
*                                                                       00910002
*      SAVE REGISTERS IN CONTROLLER III WORKAREA               @YL026UD 00960002
*      (REGISTER 12 POINTS TO THE WORKAREA)                    @YL026UD 00960402
*                                                              @YL026UD 00962002
         STM   R14,R12,12(R13)         SAVE REGISTERS 14-12    @YL026UD 00964002
         ST    R13,612(R12)            SAVE REGISTER 13        @YL026UD 00966002
*                                                              @YL026UD 00968002
         BALR  BASE,0                  SET BASE REGISTER       @YL026UD 00968402
         USING *,BASE                                                   00970002
         B     MODLABEL               BRANCH AROUND MOD LABEL  @YL026UD 00970402
         DC    C'IGG0CLCC  '           MODULE IDENTIFIER       @Z40CSRC 00970808
         DC    C'&SYSDATE'             COMPILATION DATE        @Z40CSRC 00974608
         DC    C'UZ19845'              PTF LEVEL               @OZ33388 00975337
MODLABEL DS    0H                      AROUND LABEL            @Z40CSRC 00976008
*                                                              #YL026UD 00977408
*      OBTAIN ADDRESSES OF THE CVT, CALLER'S TCB, AND          #YL026UD 00978808
*      THIS TASK'S SVRB FROM THE CONTROLLER III WORKAREA       #YL026UD 00980208
*                                                              #YL026UD 00981608
         L     R3,596(R12)             OBTAIN CVT ADDRESS      #YL026UD 00983008
         L     R9,600(R12)             OBTAIN CALLER'S TCB     #YL026UD 00984408
         L     R5,604(R12)             OBTAIN THIS TASK'S SVRB #YL026UD 00985808
*                                                              #YL026UD 00987208
         USING CAMLSTD,R1                                               00988608
         USING CVT,R3                                                   00990002
         USING SVRBEXTD,R5                                              01000002
         USING UCB,R11                                                  01010002
         USING WORKAREA,R6                                              01020002
         USING BLDLAREA,R13                                             01030002
*                                                                       01032002
         TITLE 'IGG0CLCC - (IGG0CLC0) INITIALIZATION AND LOCATE'        01032402
*********************************************************************** 01032802
*                                                                     * 01033202
*     IGG0CLC0 - INITIALIZATION AND LOCATE                            * 01033602
*                                                                     * 01033702
*********************************************************************** 01033802
*                                                              @YL026UD 01033902
IGG0CLC0 EQU   *                                                        01034002
*                                                                       01040002
*      NECESSARY TO CHECK CALLER'S WORKAREA POINTER?                    01050002
*                                                                       01060002
         L     R0,CAMMASK1             GET MASK FOR CAMLST FLAGS        01070002
         N     R0,CAMLSTD              NON-LOCATE?                      01080002
*      R0 IS NOW A TEMPORARY LOCATE SWITCH (IF 0, LOCATE FUNCTION)      01090002
         LR    R13,R0                                                   01100002
         LR    R14,R1                                                   01110002
         BNZ   GETWA                   BRANCH IF YES                    01120002
         L     R6,CAMPTR3              GET WA PTR AND SET DSECT BASE    01130002
*                                                                       01140002
*      SINCE MODULE IGG0CLCA OR IGG0CLCB HAS BUILT THE         @YL026UD 01150002
*      PARAMETER LIST IN PROTECT KEY ZERO, VALIDITY            @YL026UD 01160002
*      CHECKING FORMERLY PERFORMED AT THIS POINT IS            @YL026UD 01170002
*      NO LONGER REQUIRED.                                     @YL026UD 01180002
*                                                                       01610002
*                                                                       01620002
GETWA    EQU   *                                                        01630002
*                                                                       01640002
         LR    R8,R14                  ESTABLISH BASE FOR CAMLSTD DSECT 01650002
         USING CAMLSTD,R8                                               01660002
         DROP  R1                                                       01670002
         LTR   TLOCSW,R13              TEST AND SAVE TEMPORARY LOC SW   01680002
         BNZ   CATMAIN                 BRANCH IF NOT LOCATE             01690002
*                                                                       01700002
*********************************************************************** 01710008
*      FUNCTION LOCATE - GETMAIN FOR BLDLAREA                  @ZA06685 01712008
*********************************************************************** 01714008
         LA    R0,BLDLEND-BLDLAREA     GET LENGTH AND SUBPOOL  @ZA06685 01720008
         GETMAIN RC,LV=(0)                                     @OZ30106 01730008
         LTR   R15,R15                 WAS GETMAIN SUCCESSFUL? @OZ30106 01737008
         BNZ   GETMNERR                BR IF NOT               @OZ30106 01740008
         LR    R13,R1                  ESTABLISH BLDLAREA BASE          01743008
         B     ZEROWA                  BRANCH TO ZERO WORKAREA @OZ30106 01746008
*                                                                       01760002
*********************************************************************** 01770008
*      NON-LOCATE FUNCTION - GETMAIN FOR WORKAREA/BLDLAREA     @ZA06685 01778008
*********************************************************************** 01786008
CATMAIN  EQU   *                                                        01794008
         LA    R0,WORKEND-WORKAREA     LENGTH AND SUBPOOL NO.           01802008
         GETMAIN RC,LV=(0)                                     @OZ30106 01820008
         LTR   R15,R15                 WAS GETMAIN SUCCESSFUL? @OZ30106 01822008
         BNZ   GETMNERR                BR IF NOT               @OZ30106 01823008
         LR    R6,R1                   ESTABLISH WORKAREA BASE          01824008
         LA    R13,BLDLAREA-WORKAREA(R6)    ESTABLISH BLDLAREA BASE     01825008
         B     ZEROWA                  BR TO ZERO WORKAREA     @OZ30106 01826008
*                                                                       01827008
*********************************************************************** 01828008
* SET RETURN CODE AND MESSAGE IEC340I - COND. GETMAIN FAILURE @OZ30106* 01829008
*********************************************************************** 01830008
GETMNERR EQU   *                                                        01831008
         LA    R1,MSG1                 POINT TO MESSAGE        @OZ30106 01832008
         WTO   MF=(E,(1))              WRITE MESSAGE IEF340I   @OZ30106 01833008
         SR    R0,R0                   CLEAR FOR RETURN        @OZ30106 01834008
         SR    R1,R1                   CLEAR FOR RETURN        @OZ30106 01835008
         LTR   TLOCSW,TLOCSW           LOCATE FUNCTION?        @OZ30106 01836008
         BNZ   NONLERR                 BR IF NOT               @OZ30106 01837008
         LA    R15,ERROR24             LOCATE ERROR 24         @OZ30106 01838008
         B     CLCAEXIT                EXIT TO CLCA/CLCB       @OZ30106 01839008
NONLERR  EQU   *                                                        01840008
         LA    R15,ERROR28             NON-LOCATE ERROR 28     @OZ30106 01841008
         B     CLCAEXIT                EXIT TO CLCA/CLCB       @OZ30106 01842008
*********************************************************************** 01843008
*                                                                       01860002
ZEROWA   EQU   *                                                        01870002
*                                                                       01880002
*      CLEAR WORKAREA (SET ALL FLAGS TO ZERO) AND SAVE POINTER   Y01113 01890002
*      TO CATALOG CONTROLLER WORKAREA.                           Y01113 01900002
*                                                                       01910002
         XC    WORKAREA(D256),WORKAREA                                  01920002
         ST    R12,CWAP                SAVE CONTROLLER WA PTR    Y01113 01930002
         MVC   VOLSN,588(R12)          OBTAIN SYSCTLG VOLSER   @YL026UD 01932002
         LTR   TLOCSW,TLOCSW           TEST TEMPORARY LOCATE SWITCH     01940002
         BNZ   ESTAESET                BRANCH IF NOT LOCATE    @YL026UD 01950002
*                                                                       01960002
         OI    FLAG1,LOCATEF           * TURN ON PERMANENT LOCATE SW    01970002
*                                                                       01980002
*      TEMPORARY LOCATE SWITCH NO LONGER NEEDED                         01990002
*                                                              @YL026UD 01992002
*                                                              @YL026UD 01992402
ESTAESET EQU   *                                               @YL026UD 01994002
*                                                              @YL026UD 01996002
*      BUILD ESTAE PARAMETER LIST, ISSUE ESTAE MACRO,          @YL026UD 01998002
*      AND SET ESTAE-RELATED FLAGS AND POINTERS TO ZERO        @YL026UD 01998402
*                                                              @YL026UD 01998802
         LA    R14,D96(R5)             SET SVRB SAVEAREA PTR   @YL026UD 01999202
         ST    R14,ESTAER5             SAVE SVRB SAVEAREA PTR  @YL026UD 01999602
         ST    R6,ESTAER6              SAVE CATALOG WKA PTR    @YL026UD 01999702
         ST    R13,ESTAER13            SAVE BLDL WKA PTR       @YL026UD 01999802
         XC    ESTAESVA(40),ESTAESVA  ZERO ESTAE INFO AREA     @ZA03161 01999908
         LA    R14,ESTAEPRM            GET ESTAE PARM LIST PTR @YL026UD 02003202
         L     R7,ESTAEXIT        LOAD EXIT ADDRESS            @ZA03161 02004208
*                                                              @YL026UD 02005202
         ESTAE (R7),CT,PARAM=(R14),XCTL=YES,                   @ZA03161*02005608
               RECORD=YES,MF=(E,ESTAELST)                      @YL026UD 02005702
*                                                              @YL026UD 02006002
         ST    R15,ESTAEFLG            SAVE ESTAE RETURN CODE    YM4836 02006102
         LTR   R15,R15                 TEST ESTAE RETURN CODE  @YL026UD 02006402
         BZ    SAVESVRB                BRANCH IF OK            @ZA03161 02006608
         OI    FLAG2,ESTAEFL      SET ESTAE ERROR FLAG         @ZA03161 02007408
         B   ERR28                   SET PERM I/O ERROR        @ZA03161 02011908
*                                                                       02013402
*                                                                       02016702
SAVESVRB EQU   *                                               @YL026UD 02020002
*                                                                       02030002
         LA    R5,D96(R5)              SET DSECT BASE REG TO SAVE AREA  02040002
         ST    R5,SVRBEXTP             SAVE POINTER FOR LATER MODULES   02050002
         XC    SVRBEXT,SVRBEXT         ZERO EXTENDED SAVE AREA          02060002
*                                                                       02140002
*      FIND AND STORE IN THE WORKAREA THE ENTRY POINTS TO THE           02150002
*      FOLLOWING RESIDENT ROUTINES FOR LATER USE:                       02160002
*      A)  IECPRLTV  (CONVERTS ABSOLUTE DASD ADDRESS TO RELATIVE)       02170002
*      B)  IECPCNVT  (CONVERTS RELATIVE DASD ADDRESS TO ABSOLUTE)       02180002
*      C)  IECPBLDL  (USED TO LOCATE LEVEL NAMES)                       02190002
*                                                                       02200002
         L     R14,CVTPRLTV            GET ADDRESS                      02210002
         L     R15,CVTPCNVT                                             02220002
         STM   R14,R15,CONVERTS        STORE IN WORKAREA                02230002
*                                                                       02242002
         LA    R14,IECPBLDL            GET BLDL ENTRY ADDRESS  @YL026UD 02244002
         ST    R14,EPBLDL              STORE BLDL ENTRY ADDR   @YL026UD 02246002
*                                                                       02250002
         ST    R6,BLDLISTP             SET LIST POINTER FOR BLDL        02260002
*                                                                       02270002
*      CONSTRUCT 8 BYTES OF FF FOR THIS AND LATER MODULES               02280002
*                                                                       02290002
         MVI   HIBIN,XFF                                                02300002
         MVC   HIBIN+1(L'HIBIN-1),HIBIN  8 BYTES OF FF                  02310002
*                                                                       02320002
         TM    CAMOPTN1,CAMBLOCK       IS THIS A LOCATE BY TTR ?        02330002
         BO    UCBSRCH                 BRANCH IF YES                    02340002
*                                                                       02350002
*      BUILD ENQ/DEQ PARAMETER LIST IN THE SVRB                         02360002
*      EXTENDED SAVE AREA                                               02370002
*                                                                       02380002
         MVC   ENQNAME,QNAM            SET UP QNAME                     02390002
         MVI   ENQPARM,ENDLIST         SET END OF LIST INDICATOR        02400002
         MVI   ENQRLEN,L'ENQRNAME      SET RNAME LENGTH                 02410002
         LA    R14,ENQNAME             ADDRESS OF MAJOR NAME            02420002
         LA    R15,ENQRNAME            ADDRESS OF MINOR NAME            02430002
         LA    R0,UCBADDR              ADDRESS OF UCB ADDR              02440002
         STM   R14,R0,ENQPTRS          PUT INTO PARM LIST               02450002
*                                                                       02460002
*                                                                       02470002
*      SCAN THE GIVEN NAME AND CONSTRUCT THE NAME TABLE                 02480002
*      (SEE NAMTABLE IN WORKAREA DSECT FOR NAMES AND DESCRIPTIONS OF    02490002
*      THE NAME TABLE CONTENTS)                                         02500002
*                                                                       02510002
*      NOTE: NAME TABLE WAS ZEROED AT ZEROWA                            02520002
         XC    TRTABLE,TRTABLE         CLEAR TRT AREA                   02530002
         MVI   TRTABLE+CCDPERD,CODPERD    PERIOD TRANSLATES TO 4        02540002
         MVI   TRTABLE+CCDBLANK,CODBLANK  BLANK TRANSLATES TO 8         02550002
         MVI   TRTABLE+CCDLPARN,CODPARN   LEFT PAREN TRANSLATES TO 12   02560002
         XR    R1,R1                   CLEAR FOR TRT                    02570002
*                                                                       02580002
*                                                                       02590002
*      SET ONELVLSW AS A FLAG INDICATING A ONE LEVEL OPERATION          02600002
*      (BLDA,DLTA,LINKX OR DRPX)                                        02610002
*      IF ONELVLSW IS ZERO, THEN NOT ONE LEVEL OPERATION                02620002
*      IF ONELVLSW IS NON-ZERO, THEN ONE LEVEL OPERATION                02630002
*                                                                       02640002
         L     ONELVLSW,ONELVLMK       GET ONE LEVEL BIT MASK           02650002
         N     ONELVLSW,CAMLSTD        'AND' WITH CAM LIST OPTIONS      02660002
         XR    LEVELCTR,LEVELCTR       SET TO 0                         02670002
         L     NAMPSAV,CAMPTR1         GET NAME POINTER                 02680002
*      NOTE: SAVE NAMEPSAV FOR LATER USE AS HINAMP                      02690002
         LR    LEVELPTR,NAMPSAV        INITIALIZE                       02700002
         LA    NAMENDP,D44(NAMPSAV)                                     02710002
         LA    DLPTR,NAMLEN1           POINT TO FIRST LEVEL NAME LEN    02720002
*      NOTE: FIRST DISPLACEMENT HAS BEEN SET TO 0                       02730002
*                                                                       02740002
*                                                                       02750002
NAMELOOP EQU   *                                                        02760002
*                                                                       02770002
*      SCAN NAME FOR NEXT DELIMITER                                     02780002
*                                                                       02790002
*      FIRST: A LEVEL NAME MAY NOT BEGIN WITH A NUMBER OR X'FF'         02800002
*                                                                       02810002
         TM    0(LEVELPTR),XFF         IS FIRST BYTE BINARY 0 OR -1?    02820002
         BNM   ERR20                   BRANCH IF THE ABOVE              02830002
*                                                                       02840002
*                                                                       02850002
TRTLEVEL EQU   *                                                        02860002
*                                                                       02870002
         TRT   0(D09,LEVELPTR),TRTABLE SCAN TO NEXT DELIMITER           02880002
*      UNDER 9 CHARACTERS IN LEVEL NAME?                                02890002
         BNZ   LEVELOK                 BRANCH IF YES                    02900002
*      SCANNED 9 AND NO DELIMITER                                       02910002
         LA    R1,D08(LEVELPTR)        FAKE A GOOD TRT RESULT           02920002
         LA    R2,CODBLANK             SET DELIM CODE TO A BLANK        02930002
*      9 OR MORE CHARACTERS - DOES THE NAME HAVE MORE THAN 44 CHARS     02940002
         CR    R1,NAMENDP              NAME EQUAL 44 BYTES?             02950002
         BL    ONELVLCK                BRANCH IF LESS THAN 44           02960002
         LR    R1,NAMENDP              SET DELIMITER TO MAX NAME        02970002
         B     LEVELOK                 PROCESS LEVEL                    02980002
*                                                                       02990002
*                                                                       03000002
ONELVLCK EQU   *                                                        03010002
*                                                                       03020002
*      IS IT A ONE LEVEL OPERATION?                                     03030002
         LTR   ONELVLSW,ONELVLSW       BLDA,DLTA,LINKX OR DRPX?         03040002
         BZ    ERR20                   BRANCH IF NO                     03050002
*                                                                       03060002
*                                                                       03070002
*      IF THIS IS THE FIRST LEVEL, IT IS OK SINCE A DELIMITER IS NOT    03080002
*      REQUIRED FOR A ONE LEVEL NAME                                    03090002
*                                                                       03100002
*      IS THIS THE FIRST LEVEL?                                         03110002
*                                                                       03120002
*     LEVELCTR NOT UPDATED UNTIL LATER, SO IF FIRST, LEVELCTR IS 0      03130002
         LTR   LEVELCTR,LEVELCTR       ZERO?                            03140002
         BNZ   ERR20                   BRANCH IF NO                     03150002
*                                                                       03160002
*                                                                       03170002
LEVELOK  EQU   *                                                        03180002
*                                                                       03190002
         LR    SAVDELP,R1              SAVE DELIMITER POINTER           03200002
         SR    R1,LEVELPTR             CALCULATE LEVEL LENGTH           03210002
         BNP   ERR20                   BRANCH IF 0 OR NEG LEN           03220002
*      DECREMENT LENGTH BY 1 FOR LATER EXECUTE INSTRUCTIONS             03230002
         BCTR  R1,0                    DECREMENT LENGTH BY 1            03240002
         STC   R1,0(DLPTR)             SAVE LENGTH IN NAMTABLE          03250002
*      INCREMENT NUMBER OF LEVELS GIVEN IN NAME                         03260002
         LA    LEVELCTR,D01(LEVELCTR)  INCREMENT BY 1                   03270002
*                                                                       03280002
*      END OF NAME?                                                     03290002
*                                                                       03300002
         STC   R2,NAMDELIM             SAVE POSSIBLE NAME DELIMITER     03310002
         CLI   NAMDELIM,CODPERD        LAST DELIMITER NOT A PERIOD?     03320002
         BNE   NAMEND                  BRANCH IF YES                    03330002
*                                                                       03340002
*      CALCULATE DISPLACEMENT FOR THE NEXT LEVEL                        03350002
*                                                                       03360002
         LA    LEVELPTR,D01(SAVDELP)   POINT TO NEXT LEVEL NAME         03370002
         LR    NXTDISP,LEVELPTR                                         03380002
         SR    NXTDISP,NAMPSAV         NXTDISP HAS NEXT DISPLACEMENT    03390002
         LA    DLPTR,D01(DLPTR)        POINT TO NEXT LEVEL DISP FIELD   03400002
         STC   NXTDISP,0(DLPTR)        SAVE DISPLACEMENT                03410002
         STC   NXTDISP,INDEXLEN                                         03420002
         LA    DLPTR,D01(DLPTR)        POINT TO NEXT LEVEL LEN FIELD    03430002
         B     NAMELOOP                LOOP THROUGH AGAIN               03440002
*                                                                       03450002
*                                                                       03460002
NAMEND   EQU   *                                                        03470002
*                                                                       03480002
*      THE SCAN OF THE NAME IS FINISHED                                 03490002
*                                                                       03500002
         ST    SAVDELP,NAMDELMP        SAVE POINTER TO ENDING DELIM     03510002
*      CALCULATE LENGTH OF NAME (MINUS 1 FOR EX INSTRUCTIONS)           03520002
         SR    SAVDELP,NAMPSAV         CALCULATE LENGTH                 03530002
         BCTR  SAVDELP,0               DECREMENT BY 1                   03540002
         STH   SAVDELP,NAMLEN          SAVE IN WORKAREA                 03550002
         BCTR  DLPTR,0                 DECREMENT BY 1                   03560002
         ST    DLPTR,NAMLSTP           SAVE LAST DISPL. POINTER         03570002
         STH   LEVELCTR,NAMLG          SAVE LEVEL COUNTER               03580002
*                                                                       03590002
*      IS THIS A ONE LEVEL OPERATION (I.E. BLDA,DLTA,LINK OR DRPX)?     03600002
*      IF SO, IS THE GIVEN NAME ONE LEVEL?                              03610002
*                                                                       03620002
         LTR   ONELVLSW,ONELVLSW       TEST ONE LEVEL FLAG              03630002
         BZ    MOVEHIL                 BRANCH IF NOT ONE LEVEL          03640002
*                                                                       03650002
*      ONE LEVEL OPERATION REQUIRES AN UNQUALIFIED NAME                 03660002
*                                                                       03670002
         BCT   LEVELCTR,ERR20          BRANCH IF NO                     03680002
*                                                                       03690002
*                                                                       03700002
MOVEHIL  EQU   *                                                        03710002
*                                                                       03720002
*                                                                       03730002
*      MOVE HIGH LEVEL NAME INTO HILVLNAM BY PREPARING AND USING        03740002
*      AN EXECUTE INSTRUCTION                                           03750002
         XR    HILVLEN,HILVLEN         CLEAR HILVLEN                    03760002
         IC    HILVLEN,NAMLEN1         GET LENGTH OF HIGH LEVEL NAME    03770002
         MVI   HILVLNAM,CCDBLANK       BLANK HILVLNAM                   03780002
         MVC   HILVLNAM+1(L'HILVLNAM-1),HILVLNAM                        03790002
         EX    HILVLEN,MOVENAME        MVC   HILVLNAM(0),0(NAMPSAV)     03800002
*                                                                       03810002
*      PUT FIRST LEVEL NAME IN BLDL AND ENQ INPUT PARM LISTS            03820002
*                                                                       03830002
         MVC   NAME,HILVLNAM           FIRST LEVEL NAME                 03840002
         MVC   ENQRNAM8,HILVLNAM       SET RNAME FOR ENQ                03850002
*                                                                       03860002
*                                                                       03870002
UCBSRCH  EQU   *                                                        03880002
*                                                                       03890002
*      FIND THE UCB OF THE GIVEN VOLUME                        @YL026UD 03900002
*                                                                       03910002
*      ESTABLISH A BASE FOR THE UCB DSECT                      @YL026UD 03920002
*                                                                       03940002
         L     UCBPTR,CVTSYSAD                                          03950002
*                                                                       04020002
*                                                                       04030002
SRCHTAB  EQU   *                                                        04040002
*                                                                       04050002
*      SEARCH THE UCB TABLE LOOKING FOR THE VOLUME SERIAL      @YL026UD 04060002
*      CONTAINED IN VOLSN                                      @YL026UD 04070002
*                                                                       04080002
         L     UCBTABP,CVTILK2         GET POINTER TO UCB TABLE         04090002
*                                                                       04100002
*      SET UP LOOP TO RETURN HERE EACH TIME FOR NEXT UCB ENTRY          04110002
*                                                                       04120002
         BALR  BALREG1,0               SET LOOP RETURN                  04130002
         LH    UCBPTR,0(UCBTABP)       GET NEXT UCB ADDRESS    @Z30AAEH 04140000
         LA    UCBTABP,D02(UCBTABP)    POINT TO NEXT UCB ENTRY          04150002
         LTR   UCBPTR,UCBPTR           IF 0, NO UCB ENTRY               04160002
         BCR   8,BALREG1               REENTER LOOP IF NO               04170002
         BP    HAVEUCB                TEST VALID UCB           @Z30AAEH 04172000
         N     UCBPTR,FFFF            DROP HIGH ORDER BITS     @Z30AAEH 04174000
         C     UCBPTR,FFFF            TEST FOR END OF TABLE    @Z30AAEH 04176000
*      TAKE ERROR EXIT IF END OF UCB TABLE AND VOLUME NOT MOUNTED       04180002
         BE    ERR04                   TAKE ERROR EXIT         @Z30AAEH 04190000
HAVEUCB  TM    UCBSTAT,UCBONLI         TEST IF ONLINE           ZA00015 04192000
         BCR   8,BALREG1               OFFLINE, GET NEXT UCB    ZA00015 04194002
*                                                                       04200002
         TM    UCBTBYT3,UCB3DACC       TEST DEVICE CLASS                04210002
         BCR   8,BALREG1               REENTER LOOP IF NOT DASD         04220002
*                                                                       04230002
         CLC   SRTEVOLI,VOLSN          COMPARE VOL SER NUMBERS @YL026UD 04240002
         BCR   7,BALREG1               GET NEXT UCB                     04250002
*                                                                       04260002
         CLC   ZEROVOLS,VOLSN          ALL ZEROES VOLID?        YA00090 04292002
         BE    ERR04A                  YES, ERROR 4             YA00090 04294002
         TM    UCBFL1,UCBNOTRD         TEST IF READY            ZA00015 04296002
         BO    ERR04                   NOTREADY-4,MOUNT         ZA00015 04298002
*                                                                       04300002
*                                                                       04310002
SAVEVOL  EQU   *                                                        04320002
*                                                                       04330002
         ST    UCBPTR,UCBADDR          PUT UCB ADDRESS IN RNAME         04350002
*      NOTE: SAVE UCB ADDRESS IN UCBPTR FOR SVC OPENEXT INSTRUCTION     04360002
         TM    CAMOPTN1,CAMBLOCK       LOCATE BY BLOCK?                 04370002
         BO    OPENGTMN                BRANCH IF YES                    04380002
*                                                                       04390002
*      IF FUNCTION IS LOCATE, ENQUEUE SHARE ON THE HIGH LEVEL NAME,     04400002
*      OTHERWISE ENQUEUE EXCLUSIVE                                      04410002
*                                                                       04420002
*      NOTE: RNAME ALREADY SET TO HIGH LEVEL NAME.                      04430002
*      INITIALIZE FLAGS TO HAVE, EXCLUSIVE, RESERVE            @ZA04613 04440008
*                                                                X01965 04450002
         MVI   ENQFLAGS,HAVE+RESERVE                           @ZA04613 04460008
         TM    FLAG1,LOCATEF           * LOCATE FUNCTION?               04470002
         BZ    ENQNAM                  BRANCH IF NOT LOCATE             04480002
*                                                                       04490002
         OI    ENQFLAGS,SHARE          SET ENQ TO SHARE                 04500002
*                                                                       04510002
ENQNAM   EQU   *                                                        04520002
*                                                                       04530002
         ENQ   ,MF=(E,(R5))                                             04540002
*                                                                       04550002
*      INITIALIZE FLAGS FOR VOLUME INDEX ENQUE                          04560002
         MVI   ENQFLAGS,HAVE+SHARE+SYSTEM                               04570002
         MVC   ENQRNAM8,QNAM           SET FIRST 8 BYTES OF RNAME       04580002
         TM    FLAG1,LOCATEF           * LOCATE?                        04590002
*      BRANCH IF YES -- ENQFLAGS ARE PROPERLY SET                       04600002
         BO    ENQVI                   ENQ ON VOLUME INDEX              04610002
*                                                                       04620002
*      TEST AND SET FLAG FOR CATBX                                      04630002
*                                                                       04640002
         TM    CAMOPTN1,CAMCAT         CATALOG OPERATION?               04650002
         BZ    TSTLEVEL                BRANCH IF NO                     04660002
         TM    CAMOPTN2,CAMBLDX        BLDX OPERATION?                  04670002
         BZ    TSTLEVEL                BRANCH IF NO                     04680002
         OI    FLAG1,CATBXF            * TURN FLAG BIT ON               04690002
         B     ENQEXCL                 SINCE CATBX ENQ EXCLUSIVE        04700002
*                                                                       04710002
*                                                                       04720002
TSTLEVEL EQU   *                                                        04730002
*                                                                       04740002
*      HOW MANY LEVELS IN THE NAME?                                     04750002
*                                                                       04760002
         CLI   NAMLG+1,X02             GREATER THAN 2?                  04770002
         BH    ENQVI                   BRANCH IF YES & ENQ SHARE        04780002
*                                                                       04790002
*                                                                       04800002
ENQEXCL  EQU   *                                                        04810002
*                                                                       04820002
*      ENQUE EXCLUSIVE SINCE IT IS UNKNOWN AT THIS POINT WHETHER OR     04830002
*      NOT THE VOLUME INDEX WILL BE MODIFIED.  AFTER THE FIRST LEVEL    04840002
*      IS LOCATED, ENOUGH INFORMATION IS AVAILABLE TO KNOW IF THE       04850002
*      VOLUME INDEX WILL BE MODIFIED.                                   04860002
*                                                                       04870002
         NI    ENQFLAGS,EXCL           SET FLAG TO EXCLUSIVE            04880002
*                                                                       04890002
*                                                                       04900002
ENQVI    EQU   *                                                        04910002
*                                                                       04920002
         ENQ   ,MF=(E,(R5))                                             04930002
*                                                                       04940002
*                                                                       04950002
OPENGTMN EQU   *                                                        04960002
*                                                                       04970002
*      GET MAIN STORAGE IN SUBPOOL 253 TO BE USED AS AN OPEN   @YL026UD 04980008
*      WORKAREA.  OPEN (IGC0002H) WILL BUILD THE DEB AND DCB   @YL026UD 04990008
*      IN THIS AREA.                                           @YL026UD 05000008
*                                                                       05010002
*                                                                       05020002
*      INPUT TO IGC0002H                                       @YL026UD 05030002
*        R0  -  SET TO ZERO INDICATES AN OPEN CATALOG REQUEST           05040002
*        R1  -  UCB ADDRESS                                             05050002
*        R15 -  ADDRESS OF OPEN WORKAREA                                05060002
*                                                                       05070002
*                                                                       05080002
         L     R0,SPNBYTES             GET SP ID AND SIZE OF WA         05090002
         GETMAIN R,LV=(0)                                               05100002
         ST    R1,SVOPNWAP             SAVE WKA PTR (ESTAE)    @YL026UD 05102002
*                                                                       05110002
         USING DCBAREA,R1                                      @YL026UD 05120002
         ST    R6,CATWAP               SAVE WORKAREA PTR FOR 2H         05130002
         ST    R13,BLDLAP              SAVE BLDLAREA PTR       @YL026UD 05132002
         DROP  R1                                                       05140002
*                                                                       05150002
         LR    R15,R1                  PUT OPEN WA PTR INTO R15         05160002
         XR    R0,R0                   ZERO R0 TO INDICATE OPEN REQUEST 05170002
         LR    R1,UCBPTR               GET UCB ADDRESS         @YL026UD 05180002
         L     R2,OPENMOD              GET IGC0002H MOD ADDR   @YL026UD 05190002
         BALR  R14,R2                  ISSUE OPEN              @YL026UD 05192002
*                                                                       05200002
*      UPON RETURN:                                                     05210002
*        R1  -  CONTAINS DCB ADDRESS                                    05220002
*        R15 -  CONTAINS RETURN CODE                                    05230002
*      THE NUMBER OF BYTES FOR THE DCB/DEB IS IN THE FIRST WORD OF THE  05240002
*      DCB/DEB CALLED NMBYTES                                           05250002
*                                                                       05260002
         LR    R2,R1                   SAVE DCB ADDRESS                 05270002
         LCR   R1,R15                  CHECK RETURN CODE AND SET SW     05280002
         BNZ   IGG0CLC7                BRANCH IF ERROR                  05290002
         ST    R2,DCBADDR              SAVE DCB ADDRESS                 05300002
         L     R2,D44(R2)              GET DEB ADDRESS                  05310002
         ST    R2,DEBADDR              SAVE DEB ADDRESSS                05320002
*                                                                       05330002
*                                                                       05340002
*****  THE CATALOG IS NOW OPEN                                          05350002
*                                                                       05360002
*                                                                       05370002
*      IF LOCATE BY BLOCK, BRANCH TO IGG0CLC1                  @YL026UD 05380002
*                                                                       05390002
         TM    CAMOPTN1,CAMBLOCK       LOCATE BY TTR?                   05400002
         BO    IGG0CLC1                BRANCH IF YES                    05410002
*                                                                       05420002
         MVI   BLDLIST+3,BLDLCON       SET BLDL INPUT CONSTANT (76)     05430002
*      NOTE: FIRST LEVEL NAME HAS ALREADY BEEN PUT INTO THE NAME        05440002
*      FIELD FOR BLDL                                                   05450002
         MVI   TTR+2,REC1              START BLDL SEARCH AT FIRST BLK   05460002
         ST    R6,BASESAVE             SAVE CATALOG WA BASE             05470002
         STM   R3,R8,SVAREA6           SAVE NECESSARY REGS OVER BLDL    05480002
         LM    R15,R1,BLDLPARM         LOAD INPUT PARAMETERS            05490002
         BALR  R14,R15                 GO TO BLDL                       05500002
*                                                                       05510002
*      OUTPUT FROM BLDL:                                                05520002
*      R15                 CATALOG WA               R1                  05530002
*      0-ENTRY FOUND       ENTRY STARTING AT NAME   POINT TO ENTRY      05540002
*                                                   IN BUFFER           05550002
*      4-ENTRY NOT FOUND   UNCHANGED                DESTROYED           05560002
*      8-I/O ERROR         UNCHANGED                DESTROYED           05570002
*                                                                       05580002
         L     R6,BASESAVE             RESTORE WA BASE                  05590002
         LM    R3,R8,SVAREA6           RESTORE REGS                     05600002
*                                                                       05610002
*      THE FOLLOWING SHIFT SETS THE CONDITION AS FOLLOWS:               05620002
*      IF R15=0,THEN CC=0              RESULT IS ZERO                   05630002
*      IF R15=4,THEN CC=2              RESULT IS POSITIVE               05640002
*      IF R15=8,THEN CC=3              RESULT OVERFLOWS                 05650002
*                                                                       05660002
         SLA   R15,D28                 SET CONDITION CODE               05670002
*                                                                       05680002
*      A ZERO 'FOUNDENT' INDICATES NO ENTRY WAS FOUND                   05690002
*                                                                       05700002
         BP    ROUTE                   BRANCH IF NOT FOUND              05710002
*                                                                       05720002
         ST    R1,FOUNDENT             SAVE POSSIBLE POINTER TO GIPE    05730002
         BO    ERR28                   BRANCH IF ERROR (R15=8)          05740002
*                                                                       05750002
*      WHAT TYPE OF ENTRY FOUND?                                        05760002
*                                                                       05770002
         CLI   TYPEB,NCVOLTYP          NEW CVOL TYPE?                   05780002
         BE    TSTDL                   BRANCH IF YES                    05790002
*                                                                       05800002
         CLI   TYPEB,OCVOLTYP          OLD CVOL TYPE?                   05810002
         BNE   SHARETST                BRANCH IF NO                     05820002
*                                                                       05830002
*                                                                       05840002
TSTDL    EQU   *                                                        05850002
*                                                                       05860002
*      TEST FOR DRPX OR LNKX                                            05870002
*                                                                       05880002
         OI    FLAG2,CVOLF             * INDICATE CVOL ENTRY FOUND      05890002
         TM    CAMOPTN2,CAMLNKX        LNKX?                            05900002
         BO    IGG0CLC1                BRANCH IF YES                    05910002
         TM    CAMOPTN3,CAMDRPX        DRPX?                            05920002
         BNO   NEWCAT                  NO, GO GET NEW CATLG    @Z40CSRC 05930008
         EJECT                                                          05935008
*                                                              @Z40CSRC 05936008
*      CHECK FOR A DRPX WITHIN A RACF-DEFINED CATALOG          @Z40CSRC 05937008
*                                                              @Z40CSRC 05938008
         TM    FLAG5,OCWRACAT          IN A RAC-DEFINED CATLG  @Z40CSRC 05939008
         BNO   IGG0CLC2                NO, CONTINUE            @Z40CSRC 05939208
         L     R15,RACFADDR            GET ADDR OF RACF RTN    @Z40CSRC 05939408
         BALR  R14,R15                 GO CHECK AUTHORIZATION  @Z40CSRC 05939608
         LTR   R15,R15                 IS USER UNAUTHORIZED    @Z40CSRC 05939808
         BNZ   ERRRACF                 YES, SET UP ERROR EXIT  @Z40CSRC 05939908
         B     IGG0CLC2                CONTINUE PROCESSING     @Z40CSRC 05943208
         EJECT                                                 @Z40CSRC 05944208
NEWCAT   EQU   *                       NOT LNKX OR DRPX        @Z40CSRC 05944708
*                                                                       05945208
**********************************************************************  05945708
*   THIS ROUTINE IS ENTERED WHEN A CVOL POINTER ENTRY IS FOUND       *  05947008
*   AND THE PRESENT CATALOG IS NOT THE DESIRED ONE.                  *  05954008
*      THE FOLLOWING MUST BE DONE:                                   *  05961008
*      1) DEQ THE VOLUME INDEX AND HIGH LEVEL NAME                   *  05968008
*      2) CLOSE THIS CATALOG                                         *  05975008
*      3) CALL IGG0CL1A TO DYNAMICALLY ALLOCATE THE NEW CVOL   @Z40CSRC 05982008
**********************************************************************  06003008
*      GET VOL SER AND DEVICE TYPE INFORMATION FROM CVOL ENTRY.         06020002
*                                                                       06030002
         XC    DEVTYPE,DEVTYPE         0 DEVICE TYPE AREA               06040002
         MVC   VOLSN,DATAB             SAVE VOL SER IF OLD TYPE CVOL    06050002
         CLI   TYPEB,OCVOLTYP           OLD TYPE ENTRY?                 06060002
         BE    DEQVI                   BRANCH IF YES                    06070002
         MVC   DEVTYPE,DATAB           MOVE DEVICE TYPE CODE FROM ENTRY 06080002
         MVC   VOLSN,DATAB+4           MOVE VOL SER                     06090002
*                                                                       06100002
DEQVI    EQU   *                                                        06110008
*      DEQUEUE THE VOLUME INDEX                                @Z40CSRC 06119008
*                                                              @Z40CSRC 06190008
         DEQ   ,MF=(E,(R5))            DEQ VOL INDEX           @Z40CSRC 06240008
*                                                              @Z40CSRC 06290008
*      DEQUEUE THE HIGH LEVEL NAME & 'UN-RESERVE' THE DEVICE   @Z40CSRC 06340008
*                                                              @Z40CSRC 06390008
         MVC   ENQRNAM8,HILVLNAM       RESTORE NAME            @Z40CSRC 06440008
         MVI   ENQFLAGS,HAVE+SYSTEMS   SET DEQ OPTIONS         @Z40CSRC 06490008
         DEQ   ,MF=(E,(R5))            DEQ HIGH LEVEL NAME     @Z40CSRC 06540008
*                                                              @Z40CSRC 06590008
*      FREE DCB/DEB AND CLOSE CATALOG DATA SET.                @Z40CSRC 06592008
*                                                              @Z40CSRC 06594008
         L     R1,DCBADDR              POINT TO DCB AREA       @Z40CSRC 06596008
         USING DCBAREA,R1              DCB AREA ADDRESSABLE    @Z40CSRC 06598008
         L     R0,NMBYTES              GET LENGTH TO FREE      @Z40CSRC 06598408
         LA    R1,DCBAREA              GET ADDR TO FREE        @Z40CSRC 06598508
         XC    SVOPNWAP,SVOPNWAP       CLEAR ESTAE'S PTR       @Z40CSRC 06598608
         FREEMAIN R,LV=(0),A=(1)       FREE DCB/DEB STORAGE    @Z40CSRC 06598808
         DROP  R1                      ADDRESSABILITY ENDS     @Z40CSRC 06599208
         NI    FLAG2,CVOLFC            RESET 'CVPE FOUND' SW   @Z40CSRC 06599608
         XC    PTRS,PTRS               CLEAR POINTERS SINCE THEY ARE    06599908
*                                      USED AS SWITCHES        @Z40CSRC 06603208
*                                                              @Z40CSRC 06605208
*     THE FOLLOWING COUNTER PREVENTS INFINITE LOOPING          @Z40CSRC 06605608
*     IN A CLOSED CHAIN OF CVOLS                               @Z40CSRC 06606008
*                                                              @Z40CSRC 06606408
         SR    R2,R2                   CLEAR REG               @Z40CSRC 06606508
         IC    R2,CVOLCTR              GET CVOL COUNTER (IS INITIALIZED*06606608
                                       TO ZERO & DECREMENTED TO        *06612008
                                       ZERO AGAIN              @Z40CSRC 06612408
         BCT   R2,NOLOOP               DECREMENT & BR IF NOT 0 @Z40CSRC 06612808
*                                                                       06613008
         B     ERR04A                  BEEN THRU 256 CVOL'S    @Z40CSRC 06613208
*                                                              @Z40CSRC 06613308
NOLOOP   EQU   *                       LESS THAN 256 CVOL'S    @Z40CSRC 06616608
*                                                              @Z40CSRC 06618608
*     NOT IN A CVOL LOOP                                       @Z40CSRC 06619008
*                                                              @Z40CSRC 06619408
         STC   R2,CVOLCTR              STORE UPDATE COUNT      @Z40CSRC 06619808
*                                                              @Z40CSRC 06619908
*     INVOKE IGG0CL1A TO DYNAMICALLY ALLOCATE THE NEW CVOL     @Z40CSRC 06620008
*                                                              @Z40CSRC 06623308
*        INTERFACE WITH IGG0CL1A --                            @Z40CSRC 06625308
*              R12 - ADDRESS OF CONTROLLER III WORK AREA       @Z40CSRC 06625608
*              R14 - RETURN ADDRESS                            @Z40CSRC 06625908
*              R15 - ENTRY POINT ADDRESS                       @Z40CSRC 06626208
*        ALL REGISTERS ARE SAVED AND RESTORED BY IGG0CL1A      @Z40CSRC 06626508
*        IN A SAVE AREA IN THE CONTROLLER WORK AREA.           @Z40CSRC 06626608
*              R15 - 0 IF SUCCESSFUL, NON-ZERO IF UNSUCCESSFUL @Z40CSRC 06626708
*                                                              @Z40CSRC 06627008
         L     R12,CWAP                GET WORK AREA ADDR      @Z40CSRC 06627108
         USING CC3WA,R12               WORK AREA ADDRESSABLE   @Z40CSRC 06627208
         MVC   CC3CVOLS,VOLSN          SET UP CVOL VOLSER      @Z40CSRC 06627308
         L     R15,ALLOCRTN            GET ADDR OF ROUTINE     @Z40CSRC 06627408
         BALR  R14,R15                 CALL IGG0CL1A           @Z40CSRC 06627508
         LTR   R15,R15                 WAS ALLOCATION OK       @Z40CSRC 06627608
         BZ    SRCHTAB                 YES, GO FIND UCB        @Z40CSRC 06627708
         STC   R15,ERRLOCSV            SAVE ERROR CODE         @Z40CSRC 06627808
         B     IGG0CLC7                EXIT TO ERROR ROUTINE   @Z40CSRC 06628008
         DROP  R12                     ADDRESSABILITY ENDS     @Z40CSRC 06629008
         EJECT                                                          06630108
SHARETST EQU   *                                                        06633408
*                                                                       06636708
         TM    ENQFLAGS,SHARE          ENQUED SHARED?                   06640002
         BZ    DEQTST                  BRANCH IF NO                     06650002
*                                                                       06660002
*      VOLUME INDEX NO LONGER NEEDED SINCE FIRST LEVEL FOUND            06670002
*                                                                       06680002
         B     DEQUE                   GO DEQUE & ROUTE          X01965 06690002
*                                                                       06700002
*                                                                       06710002
DEQTST   EQU   *                                                        06720002
*                                                                       06730002
*      THE VOLUME INDEX WAS ENQUED EXCLUSIVE.  ENOUGH INFORMATION IS    06740002
*      NOW AVAILABLE TO CONCLUDE WHETHER THE VOLUME INDEX IS TO BE      06750002
*      MODIFIED.   IF THE NUMBER OF LEVELS GIVEN IS ONE OR THE          06760002
*      FIRST ENTRY IS A A GIPE, THEN THE VOLUME INDEX MAY NOT           06770002
*      BE DEQUEUED SINCE IT WILL BE MODIFIED.                           06780002
*                                                                       06790002
         CLI   NAMLG+1,X01             NO. OF LEVELS 1?                 06800002
         BE    ROUTE                   BRANCH IF YES                    06810002
*                                                                       06820002
         CLI   TYPEB,GIPETYP           GIPE?                            06830002
         BE    ROUTE                   BRANCH IF YES                    06840002
*                                                                X01965 06850002
DEQUE    EQU   *                                                 X01965 06860002
*                                                                       06870002
*      THE VOLUME INDEX WILL NOT BE MODIFIED, SO DEQ                    06880002
*                                                                       06890002
         DEQ   ,MF=(E,(R5))                                             06900002
*                                                                       06910002
*                                                                       06920002
ROUTE    EQU   *                                                        06930002
*                                                                       06940002
*      ROUTE THE REQUEST TO CLC1 OR CLC2                                06950002
*                                                                       06960002
         TM    CAMOPTN2,CAMBLDA+CAMLNKX    BLDA OR LNKX OPERATION?      06970002
         BM    IGG0CLC1                BRANCH IF YES                    06980002
*                                                                       06990002
*      IF AN ALIAS ENTRY, XCTL TO IGG0CLC1 TO RESOLVE ALIAS NAME AND    07000002
*      ENQ ON THE TRUE NAME AND DEQ ON THE ALIAS NAME,                  07010002
*      UNLESS A DLTA OPERATION, THEN XCTL TO CLC2 AND DO NOT ENQ ON     07020002
*      THE ALIAS NAME --- THIS AVOIDS A POTENTIAL ENQ INTERLOCK         07030002
*      BETWEEN THE VOLUME INDEX RESOURCE AND THE TRUE NAME RESOURCE     07040002
*                                                                       07050002
         TM    CAMOPTN2,CAMDLTA        DLTA?                            07060002
         BO    IGG0CLC2                BRANCH IF YES                    07070002
*                                                                       07080002
         CLI   TYPEB,ALIASTYP          ALIAS ENTRY?                     07090002
         BE    IGG0CLC1                BRANCH IF YES                    07100002
*                                                              @YL026UD 07102002
*       BRANCH TO IGG0CLC2 FOR ALL OTHER REQUESTS              @YL026UD 07110002
*                                                                       07120002
         B     IGG0CLC2                                        @YL026UD 07122002
         TITLE 'IGG0CLCC - (IGG0CLC1) RELATIVE GDG AND ALIAS'  @YL026UD 09140002
*********************************************************************** 09190002
*                                                                     * 09240002
*     IGG0CLC1 - RELATIVE GDG AND ALIAS                               * 09290002
*                                                                     * 09340002
*********************************************************************** 09390002
*                                                              @YL026UD 09440002
IGG0CLC1 EQU   *                                                        10080002
*                                                                       10082002
         DROP  R3                                              @YL026UD 10084002
         DROP  R11                                             @YL026UD 10086002
*                                                                       10088002
         USING WORKAREA,R6             ESTABL BASE FOR WORKAREA         10096002
         USING CAMLSTD,R8              ESTABL BASE FOR CAMLST           10106002
         USING BLDLAREA,R13            ESTABL BASE FOR BLDL'S WORKAREA  10116002
         OI    MODMAP1,MODCLC1         INDIC ENTRY TO IGG0CLC1          10140002
*                                                                       10150002
         TM    CAMOPTN1,CAMBLOCK       LOCATE BY TTR?                   10160002
         BO    BYBLOCK                 BRANCH IF YES                    10170002
*                                                                       10180002
*      IF CONTROL WAS RECEIVED FROM IGG0CLC2, THEN REQUEST IS FOR       10190002
*      LOCATING A RELATIVELY NAMED GENERATION DATA SET.                 10200002
*                                                                       10210002
         TM    MODMAP1,MODCLC2         CONTROL FROM IGG0CLC2?           10220002
         BO    RELGDG                  YES, MUST BE RELATIVE GDS NAME   10230002
*                                                                       10240002
         TM    CAMOPTN2,CAMBLDA        FUNCTION BLDA?                   10250002
         BO    BLDARTN                 YES, GO TO BUILD ALIAS ROUTINE   10260002
*                                                                       10270002
         TM    CAMOPTN2,CAMLNKX        FUNCTION LNKX?                   10280002
         BO    LNKXRTN                 YES, GO TO 'LNKXRTN'             10290002
*                                                                       10300002
         CLI   TYPEB,ALIASTYP          ALIAS ENTRY FOUND?               10310002
         BE    ALIAS                   YES, GO RESOLVE ALIAS NAME       10320002
*                                                                       10330002
         B     ERR08                   DO NOTHING                       10340002
*                                                                       10350002
LNKXRTN  EQU   *                                                        10360002
*                                                                       10370002
*      LNKX FUNCTION (CONNECT CVOL'S)                                   10380002
*                                                                       10390002
         NC    FOUNDENT,FOUNDENT       WAS AN ENTRY FOUND?              10400002
         BNZ   ERR12                   YES, DON'T LNKX                  10410002
*                                                                       10420002
*      BUILD THE ENTRY AND PASS CONTROL TO IGG0CLC2.                    10430002
*                                                                       10440002
*      ESTABLISH AUXILIARY ADDRESSABILITY TO THE PORTION OF THE         10450002
*      WORKAREA IN WHICH THE NEW CVOL POINTER ENTRY WILL BE BUILT.      10460002
*                                                                       10470002
         LA    NEWENTRY,NAME           NEW ENTRY STARTS AT NAME         10480002
         USING ENTRY,NEWENTRY          ESTABL BASE FOR ENTRY            10490002
         L     POINT,CAMPTR3           DEVICE TYPE & CVOL VOLUME SERIAL 10500002
*                                                                       10510002
*      BUILD THE ENTRY.                                                 10520002
*                                                                       10530002
         MVI   ETYPE,NCVOLTYP          MOVE IN COUNT OF HALF WORDS      10540002
         XC    ETTR,ETTR               ZERO THE TTR FIELD               10550002
*                                                                       10560002
*      MOVE IN 4-BYTE DEVICE TYPE AND 6-BYTE VOLUME SERIAL              10570002
*                                                                       10580002
         MVC   EDEVTYP(L'EDEVTYP+L'EVOLID),0(POINT)                     10590002
         B     IGG0CLC2                BRANCH TO IGG0CLC2      @YL026UD 10600002
*                                                                       10610002
         DROP  NEWENTRY                                                 10620002
*                                                                       10630002
         EJECT                                                          10640002
*                                                                       10650002
BLDARTN  EQU   *                                                        10660002
*                                                                       10670002
         NC    FOUNDENT,FOUNDENT       WAS AN ENTRY FOUND?              10680002
         BZ    ERR08                   NO, DON'T BLDA                   10690002
*                                                                       10700002
*      BUILD THE ALIAS ENTRY                                            10710002
*                                                                       10720002
         CLI   TYPEB,IPETYP            IS ENTRY FOUND AN IPE?           10730002
         BNE   ERR08                   NOT AN IPE                       10740002
*                                                                       10750002
         MVC   TRUE,NAME               MOVE TRUE NAME INTO AE           10760002
         L     R3,TTR0                 SAVE THE TTR0                    10770002
         L     R1,CAMPTR3              POINT TO ALIAS                   10780002
         TM    0(R1),XFF               IS FIRST BYTE BINARY 0 OR -1?    10790002
         BNM   ERR20                   YES, ERROR                       10800002
*                                                                       10810002
         MVC   NAME,0(R1)              MOVE IN ALIAS NAME               10820002
         LA    R0,X0100                GET TTR TO FIRST BLK             10830002
         ST    R0,TTR                  START BLDL AT FIRST BLK          10840002
*                                                                       10850002
*      SEARCH FOR DUPLICATE ALIAS NAME OR GET BLOCK TO BE UPDATED       10860002
*                                                                       10870002
         BAL   BALREG3,CALLBLDL        SEARCH FOR ALIAS                 10880002
         BZ    ERR12                   BRANCH IF NAME FOUND             10890002
*                                                                       10900002
*      CONSTRUCT ALIAS ENTRY                                            10910002
*                                                                       10920002
         ST    R3,TTR0                 RESTORE THE TTR0                 10930002
         MVI   TYPE,ALIASTYP           SET TYPE CODE                    10940002
         OI    FLAG2,ALIASBLT          * INDIC ALIAS ENTRY IS BUILT     10950002
         B     IGG0CLC2                BRANCH TO IGG0CLC2      @YL026UD 10960002
*                                                                       10970002
         EJECT                                                          10980002
*                                                                       10990002
ALIAS    EQU   *                                                        11000002
*                                                                       11010002
*      FIRST LOAD OF LOCATE FOUND AN ALIAS ENTRY.                       11020002
*                                                                       11030002
*      1.  TRANSLATE THE ALIAS NAME INTO THE TRUENAME                   11040002
*      2.  MOVE TRUE QUALIFIED NAME INTO DSNAME AREA PASSED BY USER     11050002
*      3.  UPDATE THE NAME TABLE.                                       11060002
*      4.  ENQUEUE THE TRUE HIGH-LEVEL NAME.                            11070002
*      5.  DEQUEUE THE ALIAS NAME.                                      11080002
*                                                                       11090002
*                                                                       11100002
         OI    FLAG2,ALIASSW           FLAG ALIAS ENTRY FOUND  @YL026UD 11102002
*                                                              @YL026UD 11104002
*      INITIALIZE REGISTERS.                                            11110002
*                                                                       11120002
         L     R3,CAMPTR1              ALIAS NAME POINTER               11130002
         XR    R7,R7                   ZERO R7                          11140002
         XR    R1,R1                   ZERO R1                          11150002
*                                                                       11160002
*      SET UP TRANSLATE TABLE TO SCAN TRUE NAME IN ALIAS ENTRY FOR      11170002
*      FIRST BLANK (OR END).                                            11180002
*                                                                       11190002
         XC    TRTABLE,TRTABLE         CLEAR THE TRANSLATE TABLE        11200002
         MVI   TRTABLE+CCDBLANK,CODBLANK BLANK TRANSLATES TO 08         11210002
         TRT   TRUEB,TRTABLE           SCAN TRUE NAME                   11220002
         BNZ   UNDER8                  FOUND A BLANK                    11230002
*                                                                       11240002
*      ALL EIGHT CHARACTERS ARE SIGNIFICANT.                            11250002
*                                                                       11260002
         LA    R1,D08                  PUT LENGTH IN R1                 11270002
         B     STRULEN                 GO STORE TRUE NAME LENGTH        11280002
*                                                                       11290002
*                                                                       11300002
UNDER8   EQU   *                                                        11310002
*                                                                       11320002
*      LESS THAN EIGHT CHARACTERS ARE SIGNIFICANT.                      11330002
*                                                                       11340002
         LA    R0,TRUEB                TRUE NAME AS FOUND BY BLDL       11350002
         SR    R1,R0                   LENGTH OF TRUE NAME IN R1        11360002
*                                                                       11370002
STRULEN  EQU   *                                                        11380002
*                                                                       11390002
*      SAVE THE LENGTH OF THE TRUE FIRST LEVEL NAME.                    11400002
*      FIND THE TOTAL LENGTH OF THE GIVEN NAME, OUT TO A LEFT           11410002
*      PARENTHESIS IF PRESENT.                                          11420002
*                                                                       11430002
         LR    TRULEN,R1               SAVE TRUE LENGTH                 11440002
         LH    R1,NAMLEN               (LENGTH-1) OF FULL NAME          11450002
         CLI   NAMDELIM,CODBLANK       LAST DELIMITER A BLANK?          11460002
         BE    CHEKLEN                 YES, CHECK LENGTH                11470002
*                                                                       11480002
*      R1 CONTAINS (LENGTH-1) OF GIVEN NAME OUT TO LAST LEVEL, WHICH    11490002
*      WHEN RESOLVED WILL REQUIRE 8 CHARACTERS PLUS A DELIMITER.        11500002
*                                                                       11510002
         LA    R1,D09(R1)              SET R1 TO FINAL NAME LENGTH      11520002
*                                                                       11530002
CHEKLEN  EQU   *                                                        11540002
*                                                                       11550002
*      SAVE THE NAME AS GIVEN                                   SA48399 11560002
*      BLANK THE GIVEN NAME IN THE USER AREA                    SA48399 11570002
*                                                               SA48399 11580002
         MVC   RESALIAS,0(R3)          SAVE THE GIVEN NAME      SA48399 11590002
         MVI   0(R3),CCDBLANK          SET UP TO BLANK USER NAMESA48399 11600002
         LR    R11,R1                  (LENGTH-1) OF FINAL NAME SA48399 11610002
         EX    R11,MOVE2               BLANK THE AREA           SA48399 11620002
*                                                               SA48399 11630002
*      CALCULATE LENGTH OF 'TRUENAME.SECONDLEVEL...LASTLEVEL'           11640002
*      LAST LEVEL IS 8 BYTES LONG IF NAME WAS RELATIVE GDG.             11650002
*                                                                       11660002
         IC    R7,NAMLEN1              (LENGTH-1) OF ALIAS              11670002
         SR    R1,R7                   SUBTRACT (LENGTH-1) OF ALIAS     11680002
*                                                                       11690002
*      ADD (LENGTH-1) OF TRUE                                           11700002
*                                                                       11710002
         AR    R1,TRULEN               ADD LENGTH OF TRUE               11720002
*                                                                       11730002
         LA    R0,D44                  MAXIMUM LENGTH                   11740002
         CR    R1,R0                   IS FINAL RESULT TOO LONG?        11750002
         BH    ERR20                   YES                      SA48399 11760002
*                                                               SA48399 11770002
*      IF NAME IS LESS THAN 44 BYTES THEN MOVE NAME PLUS        SA48399 11780002
*      TRAILING BLANK.                                          SA48399 11790002
*                                                               SA48399 11800002
*      IF NAME IS 44 BYTES LONG THEN MOVE 44 BYTES.             SA48399 11810002
*                                                               SA48399 11820002
         BL    RECONSTR                GO MOVE NAME +1 BYTE     SA48399 11830002
*                                                               SA48399 11840002
         BCTR  R1,0                    MINUS 1, NAME IS 44 BYTESSA48399 11850002
*                                                               SA48399 11860002
RECONSTR EQU   *                                                SA48399 11870002
*                                                                       11880002
*      FINAL RESULT IS AN ALLOWABLE LENGTH                              11890002
*                                                                       11900002
*      1.  MOVE IN TRUE FIRST LEVEL NAME.                       SA48399 11910002
*      2.  MOVE BACK IN SECOND THRU LAST LEVELS.                SA48399 11920002
*                                                                       11930002
         MVC   0(L'TRUEB,R3),TRUEB     MOVE IN TRUE FIRST LEVEL         11940002
         CLC   NAMLG,H01               ONE LEVEL NAME?                  11950002
         BE    NOLOW                   YES, NO LOW LEVELS TO MOVE       11960002
*                                                                       11970002
         AR    R3,TRULEN               POINT TO FIRST DELIMITER         11980002
*                                                                       11990002
*      OBTAIN (LENGTH-1) OF SECOND THRU LAST LEVELS,                    12000002
*      INCLUDING FIRST DELIMITER, FOR AN EXECUTE INSTRUCTION            12010002
*                                                                       12020002
         SR    R1,TRULEN               ELIMINATE LENGTH OF FIRST LEVEL  12030002
         LA    R11,RESALIAS+1(R7)      POINT TO FRST DELIM IN SVD NAME  12040002
         EX    R1,MOVE1                MOVE IN REST OF NAME             12050002
*                                                                       12060002
*      FULLY QUALIFIED TRUE NAME IS SET UP IN USER'S AREA.              12070002
*                                                                       12080002
NOLOW    EQU   *                                                        12090002
*                                                                       12100002
*      UPDATE NAME TABLE IF NECESSARY.                                  12110002
*                                                                       12120002
         BCTR  TRULEN,0                (LENGTH-1) OF TRUE               12130002
         STC   TRULEN,NAMLEN1          SAVE (LENGTH-1) OF FIRST LEVEL   12140002
         SR    TRULEN,R7               ARE ALIAS AND TRUE SAME LENGTH?  12150002
         BZ    RESOLVED                YES, NAME TABLE IS OK            12160002
*                                                                       12170002
*      ALIAS AND TRUE NAMES DIFFER IN LENGTH.  UPDATE NAME TABLE.       12180002
*      TRULEN CONTAINS (TRUE LENGTH) - (ALIAS LENGTH)                   12190002
*                                                                       12200002
         XR    R7,R7                   ZERO R7                          12210002
         LH    R9,NAMLG                SET LOOP COUNTER                 12220002
         LA    R11,NAMDISP2            POINT TO SECOND DISPLACEMENT     12230002
         BCT   R9,NXTLVL               DECR LOOP COUNTER                12240002
*                                                                       12250002
         B     NOLOW2                  NO LOW LEVELS TO UPDATE          12260002
*                                                                       12270002
*                                                                       12280002
NXTLVL   EQU   *                                                        12290002
*                                                                       12300002
*      CHANGE EACH DISPLACEMENT TO CORRESPOND WITH CHANGE IN LENGTH     12310002
*      OF FIRST LEVEL.                                                  12320002
*                                                                       12330002
         IC    R7,0(R11)               GET DISPLACEMENT                 12340002
         AR    R7,TRULEN               CHANGE IT                        12350002
         STC   R7,0(R11)               STORE NEW DISPLACEMENT           12360002
         LA    R11,D02(R11)            BUMP TO NEXT 'NAMDISP'           12370002
         BCT   R9,NXTLVL               LOOP, TO END OF NAME TABLE       12380002
*                                                                       12390002
NOLOW2   EQU   *                                                        12400002
*                                                                       12410002
         L     R11,NAMDELMP            GET 'NAMDELMP'                   12420002
         AR    R11,TRULEN              CHANGE 'NAMDELMP'                12430002
         ST    R11,NAMDELMP            STORE UPDATED POINTERS           12440002
         AH    TRULEN,NAMLEN           CHANGE 'NAMLEN'                  12450002
         STH   TRULEN,NAMLEN           STORE UPDATED LENGTH             12460002
*                                                                       12470002
RESOLVED EQU   *                                                        12480002
*                                                                       12490002
*      NAME AND NAME TABLE ARE UPDATED.                                 12500002
*                                                                       12510002
*      RE-ENQUEUE                                                       12520002
*                                                                       12530002
         USING SVRBEXTD,R5             ESTABL ADDRBLTY TO SVRB EXT SA   12540002
         L     R5,SVRBEXTP             SET BASE                         12550002
         IC    R7,ENQFLAGS             SAVE FLAG BYTE                   12560002
         MVI   ENQFLAGS,HAVE+SYSTEMS   INDIC TYPE OF REQUEST     X01965 12570002
         TM    FLAG1,LOCATEF           * LOCATE REQUEST?                12580002
         BZ    EXCLUSIV                NO                               12590002
*                                                                       12600002
         OI    ENQFLAGS,SHARE          INDIC SHARED ENQ                 12610002
*                                                                       12620002
EXCLUSIV EQU   *                                                        12630002
*                                                                       12640002
*      ENQUEUE THE TRUE HIGH LEVEL NAME.                                12650002
*                                                                       12660002
         MVC   HILVLNAM,TRUEB          SAVE TRUE NAME FOR IGG0CLC2      12670002
         MVC   ENQRNAM8,TRUEB          SET RNAME TO TRUE NAME           12680002
         ENQ   ,MF=(E,(R5))                                             12690002
         MVC   ENQRNAM8,ALIASNAM       SET RNAME TO ALIAS NAME          12700002
         DEQ   ,MF=(E,(R5))                                             12710002
         MVC   ENQRNAM8,ENQNAME        SET RNAME BACK TO SYSCTLG        12720002
         STC   R7,ENQFLAGS             RESTORE FLAG BYTE                12730002
*                                                                       12740002
*      ALIAS NAME IS COMPLETELY RESOLVED.                               12750002
*                                                                       12760002
*      PASS CONTROL TO IGG0CLC2 FOR THE REMAINDER OF LOCATE.            12770002
*                                                                       12780002
*      IGG0CLC2 WILL RETURN HERE IF RELATIVE NAMING IS USED IN A        12790002
*      LATER LEVEL.                                                     12800002
*                                                                       12810002
         B     IGG0CLC2                GO FINISH FUNCTION               12820002
         EJECT                                                          12830002
*                                                                       12840002
RELGDG   EQU   *                                                        12850002
*                                                                       12860002
         TM    FLAG1,LOCATEF           IS FUNCTION LOCATE?              12870002
         BZ    ERR20                   NO                               12880002
*                                                                       12890002
*      THE FUNCTION IS LOCATE A GENERATION DATA SET AND THE             12900002
*      NAME GIVEN IS IN RELATIVE FORMAT.                                12910002
*                                                                       12920002
*      1.  CONVERT RELATIVE MEMBER TO BINARY - RESULT IS 'QUALIFIER'.   12930002
*      2.  READ FIRST BLOCK OF GENERATION DATA SET NAMES.               12940002
*                                                                       12950002
*      IF QUALIFIER IS POSITIVE                                         12960002
*      .   TRANSLATE FIRST NAME TO BINARY.                              12970002
*      .   ADD THE QUALIFIER.                                           12980002
*      .   BUILD A NEW NAME.                                            12990002
*      .   RETURN.                                                      13000002
*                                                                       13010002
*      IF QUALIFIER IS NEGATIVE OR ZERO                                 13020002
*      .   USE QUALIFIER TO COUNT ENTRIES UNTIL QUALIFIER IS ZERO OR    13030002
*          NAMES ARE EXHAUSTED.                                         13040002
*      .   IF QUALIFIER IS ZERO, DESIRED ENTRY IS FOUND.                13050002
*          RETURN TO USER WITH ABSOLUTE NAME AND VOLUME LIST.           13060002
*      .   IF NAMES ARE EXHAUSTED RETURN TO USER WITH ERRLOC=8.         13070002
*                                                                       13080002
         L     R1,NAMDELMP             POINT TO LEFT PAREN '('          13090002
         MVC   RELNUMBR,L'CCDLPARN(R1) GET NEXT 8 CHARACTERS            13100002
         LA    R1,RELNUMBR             POINT TO RELATIVE NUMBER         13110002
*                                                                       13120002
AGAIN    EQU   *                                                        13130002
*                                                                       13140002
*      SCAN DIGITS FOR RIGHT PARENTHESIS ')' TO GET LENGTH.             13150008
*                                                                       13160002
         LA    R1,D01(R1)              NEXT DIGIT                       13170002
         TM    0(R1),XF0               NUMBER?                          13180002
         BO    AGAIN                   YES                              13190002
*                                                                       13200002
*      NOT A NUMBER, MUST BE RIGHT PARENTHESIS ')'                      13210002
*                                                                       13220002
         CLI   0(R1),CCDRPARN          ')'?                             13230002
         BNE   ERR20                   NO                               13240002
*                                                                       13250002
         BCTR  R1,0                    LEAST SIGNIFICANT DIGIT          13260002
         CLI   RELNUMBR,CCDMINUS       IS FIRST CHARACTER '-'?          13270002
         BNE   POS                     NO                               13280002
*                                                                       13290002
         MVI   RELNUMBR,CCD0           YES, CHANGE IT TO ZERO           13300002
         MVZ   0(L'MINUS,R1),MINUS     MOVE IN A MINUS ZONE             13310002
         B     NUMBER                  GO CONVERT IT TO BINARY          13320002
*                                                                       13330002
*                                                                       13340002
POS      EQU   *                                                        13350002
*                                                                       13360002
         CLI   RELNUMBR,CCDPLUS        IS FIRST CHARACTER '+'?          13370002
         BNE   NUMBER                  NO, GO CONVERT IT TO BINARY      13380002
*                                                                       13390002
         MVI   RELNUMBR,CCD0           YES, CHANGE IT TO A ZERO         13400002
*                                                                       13410002
NUMBER   EQU   *                                                        13420002
*                                                                       13430002
         TM    RELNUMBR,XF0            IS FIRST CHARACTER A NUMBER?     13440002
         BNO   ERR20                   NO                               13450002
*                                                                       13460002
         LA    R2,RELNUMBR             YES, POINT TO IT                 13470002
         SR    R1,R2                   SUBTRACT FOR LENGTH              13480002
         XC    PKDNUMBR,PKDNUMBR       ZERO AREA FOR PACKING            13490002
         EX    R1,PACK1                PACK THE RELATIVE NUMBER         13500002
         CVB   Q,PKDNUMBR              Q IS QUALIFIER REGISTER          13510002
*                                                                       13520002
*      THE GIPE WAS READ BY BLDL.  THE DATA PORTION IS TWO BYTES        13530002
*      DISPLACED FROM ITS NORMAL POSITION IN A CATALOG ENTRY.           13540002
*                                                                       13550002
*                                                              @ZA04937 13621008
*    TEST FOR SUPER LOCATE WITH BASE SUPPLIED AND IF SO        @ZA04937 13622008
*    SET UP THE SUPPLIED BASE                                  @ZA04937 13623008
*                                                              @ZA04937 13624008
        TM    CAMOPTN3,X'06'      TEST FOR SLOC WITH BASE      @OZ33388 13625008
        BNO   NEWBLOCK             NO SKIP BASE SETUP          @ZA04937 13626008
        L     R7,CAMDSCBP          LOAD POINTER TO BASE        @ZA04937 13627008
        XC    0(4,R7),MASKFF       MATCH PATTERN IN CATALOG    @ZA04937 13628008
*                                                                       13630002
*      QUALIFIER REGISTER IS THE BINARY EQUIVALENT OF THE GIVEN         13640002
*      RELATIVE NUMBER AND IS USED AS                                   13650002
*                                                                       13660002
*      1.  IF NEGATIVE, AN ENTRY COUNTER WHILE SCANNING THE             13670002
*          BLOCKS FOR THE DESIRED ENTRY.                                13680002
*                                                                       13690002
*      2.  IF POSITIVE, AN INCREMENT TO ALTER THE FIRST                 13700002
*          ENTRY IN THE GENERATION DATA GROUP TO PRODUCE A NEW          13710002
*          ABSOLUTE NUMBER.                                             13720002
*                                                                       13730002
*      3.  IF ZERO, AN INDICATOR TO LOCATE THE LATEST DATA SET.         13740002
*                                                                       13750002
*                                                                       13760002
NEWBLOCK EQU   *                                                        13770002
*                                                                       13780002
*      CALL BLDL TO READ IN THE BLOCK AT TTR                            13790002
*                                                                       13800002
         XC    NAME,NAME               ZERO THE NAME                    13810002
         BAL   BALREG3,CALLBLDL        READ THE BLOCK                   13820002
*                                                                       13830002
*      SET UP POINTERS TO INDICATE START OF FIRST ENTRY (POINT)         13840002
*      AND END OF LAST ENTRY (LAST).                                    13850002
*                                                                       13860002
         USING ENTRY,POINT             ESTABL ADDRBLTY TO ENTRY         13870002
         LA    POINT,BLDLBUFF+L'INBYTSU   SKIP HALFWORD OF BYTE CNT     13880002
         CLI   ETYPE,ICETYP            ICE?                             13890002
         BNE   NXTENTRY                NO, 'POINT' IS GOOD              13900002
         LA    POINT,L'ICE(POINT)      YES, BUMP 'POINT' TO NEXT ENTRY  13910002
*                                                                       13920002
*      DETERMINE WHETHER OR NOT THIS IS THE DESIRED ENTRY.              13930002
*                                                                       13940002
NXTENTRY EQU   *                                                        13950002
*                                                                       13960002
         CLC   ENAME,HIBIN             IS NAME ALL FF'S?                13970002
         BE    FFF                     YES                              13980002
*                                                              @ZA04937 13981008
*    TEST FOR SUPERLOCATE WITH BASE                            @ZA04937 13982008
*                                                              @ZA04937 13983008
         TM    CAMOPTN3,X'06'      TEST FOR SLOC WITH BASE     @OZ33388 13984008
         BNO   NSLOC               BR IF NOT                   @ZA04937 13985008
         CLC   EGENNO,0(R7)        COMP CATLG GENERATION & BASE         13985408
         BL    INCRNXT             BR IF BASE NOT REACHED YET  @ZA04937 13985808
         BE    NSLOC               BASE FOUND - BR             @ZA14626 13986208
*   THIS CODE ADJUSTS Q WHEN BASE HAS BEEN DELETED                      13986608
         CVB   R0,PKDNUMBR         BASE DELETED, GET GIVEN Q   @OZ14626 13987008
         CR    R0,Q                HAS Q BEEN INCREMENTED?     @OZ14626 13987408
         BNE   NSLOC               YES-BR, Q ALREADY ADJUSTED  @OZ14626 13987808
         AH    Q,H01               REL GEN 0 DELETED, ADJUST SO WE CAN  13988208
*                                  FIND CORRECT (-X) GENERATION@OZ14626 13988608
NSLOC    EQU   *                                               @OZ04937 13989608
*                                                                       13990002
         LTR   Q,Q                     IS QUALIFIER NEGATIVE?           14000002
         BNM   COMPL                   NO, THIS IS THE DESIRED ENTRY    14010002
*                                                                       14020002
         AH    Q,H01                   YES, INCREMENT QUALIFIER         14030002
*                                                                       14040002
*      INCREMENT POINT TO NEXT ENTRY.                                   14050002
*                                                                       14060002
INCRNXT  EQU   *                                               @ZA04937 14061008
         XR    R2,R2                   ZERO R2                          14070002
         IC    R2,ETYPE                GET COUNT OF HALFWORDS           14080002
         LA    R2,D12(R2,R2)           CALCULATE ENTRY LENGTH           14090002
         AR    POINT,R2                INCREMENT POINT                  14100002
         B     NXTENTRY                GO CHECK                         14110002
*                                                                       14120002
*                                                                       14130002
FFF      EQU   *                                                        14140002
*                                                                       14150002
*      END OF BLOCK, CHECK FOR ANOTHER.                                 14160002
*                                                                       14170002
         NC    ETTR,ETTR               ANOTHER BLOCK IN CHAIN?          14180002
         BZ    NEWGEN                  NO                               14190002
*                                                                       14200002
         MVC   TTR,ETTR                YES, GET ITS TTR                 14210002
         B     NEWBLOCK                GO READ THE BLOCK                14220002
*                                                                       14230002
*                                                                       14240002
NEWGEN   EQU   *                                                        14250002
*                                                                       14260002
*      NAME WAS NOT FOUND, BUILD ABSOLUTE NAME.                         14270002
*                                                                       14280002
         LTR   Q,Q                     IS QUALIFIER POSITIVE?           14290002
         BNP   ERR08                   NO                               14300002
*                                                                       14310002
         XC    ENAME,ENAME             SET UP FOR BUILD                 14320002
         MVI   ENAME,CCDG              FIRST CHARACTER IS G             14330002
         MVI   ENAME+5,CCDV            SIXTH CHARACTER IS V             14340002
         XR    R2,R2                   ZERO R2                          14350002
         B     ADDQUAL                 GO ADD QUALIFIER REG             14360002
*                                                                       14370002
*                                                                       14380002
COMPL    EQU   *                                                        14390002
*                                                                       14400002
*      ENTRY AT POINT IS THE DESIRED ENTRY.  TRANSLATE ITS              14410002
*      GENERATION NUMBER INTO BINARY FOR ENSUING CALCULATION.           14420002
*                                                                       14430002
         CLI   ENAME,CCDG              FIRST CHAR A 'G'?       @OZ32573 14432008
         BNE   ERR12                   BR IF NOT               @OZ32573 14434008
         CLI   ENAME+5,CCDV            SIXTH CHAR A 'V'?       @OZ32573 14436008
         BNE   ERR12                   BR IF NOT               @OZ32573 14438008
         XC    EGENNO,MASKFF           COMPLEMENT GENERATION NUMBER     14440002
         LTR   Q,Q                     GENERATING A NEW NAME?           14450002
         BZ    MOVE                    NO                               14460002
*                                                                       14470002
         PACK  PKDNUMBR,EGENNO         YES, PACK THE NUMBER FOUND       14480002
         CVB   R2,PKDNUMBR             CONVERT IT TO BINARY             14490002
*                                                                       14500002
ADDQUAL  EQU   *                                                        14510002
*                                                                       14520002
         AR    R2,Q                    ADD QUALIFIER TO GENERATN NO.    14530002
         CVD   R2,PKDNUMBR             CONVERT GENERATN NO. TO DECIMAL  14540002
         UNPK  EGENNO,PKDNUMBR         UNPACK GENERATN NO.              14550002
         OI    L'EGENNO(POINT),CCD0    ENSURE LO-ORDER DIGIT UNSIGNED   14560002
         MVC   L'EGENNO+2(L'ZEROS,POINT),ZEROS SET VERSION NO. TO ZERO  14570002
         OI    FLAG4,GDGPLUS           GDG REL. NO. IS PLUS    @OZ32593 14575008
*                                                                       14580002
MOVE     EQU   *                                                        14590002
*                                                                       14600002
         L     R2,NAMDELMP             POINT TO DELIMITER               14610002
         MVI   0(R2),CCDPERD           CHANGE '(' TO '.'                14620002
         MVC   L'CCDPERD(L'ENAME,R2),ENAME    MOVE NAME TO USER AREA    14630002
         MVC   NAME,ENAME              IMITATE BLDL                     14640002
         LTR   Q,Q                     GENERATING A NEW NAME?           14650002
         BP    ERR00                   YES, DONE                        14660002
*                                                                       14670002
         CLI   ETYPE,VCBPETYP          VCBPE?                           14680002
         BNE   ERR00                   NO, GO RETURN                    14690002
*                                                                       14700002
         MVC   TTR,ETTR                SET UP TTR FOR BLDL              14710002
         XC    NAME,NAME               CLEAR NAME TO READ BLOCK         14720002
         BAL   BALREG3,CALLBLDL        READ VCB                         14730002
         B     ERR00                   GO RETURN                        14740002
*                                                                       14750002
         DROP  POINT                                                    14760002
*                                                                       14770002
         EJECT                                                          14780002
*                                                                       14790002
BYBLOCK  EQU   *                                                        14800002
*                                                                       14810002
*      READ THE SPECIFIED BLOCK                                         14820002
*      BLDL PARM AREA WAS PREVIOUSLY SET TO 0 IN IGG0CLC0               14830008
*                                                                       14840002
         L     R2,CAMPTR1              GET POINTER TO TTR               14850002
         MVC   TTR,0(R2)               MOVE IN TTR FOR BLDL             14860002
         CLI   TTR+2,X00               IS R OF USER TTR 0?              14870002
         BE    ERR28                   BRANCH IF YES                    14880002
*                                                                       14890002
         BAL   BALREG3,CALLBLDL        READ SPECIFIED BLK               14900002
         NC    BLDLECB,BLDLECB         WAS A BLOCK READ?                14910002
         BZ    ERR28                   NO, TTR TOO BIG                  14920002
*                                                                       14930002
         B     RETURN                  YES, TAKE LOCATE EXIT            14940002
*                                                                       14950002
         EJECT                                                          14960002
*                                                                       14970002
ERR00    EQU   *                                                        14980002
*                                                                       14990002
         MVI   ERRLOCSV,ERROR00        RETURN CODE IS ZERO              15000002
*                                                                       15010002
*      DEQUEUE ALL RESOURCES, RETURN VOLUME LIST, FREEMAIN AND EXIT.    15020002
*                                                                       15030002
         USING SVRBEXTD,R5             ESTABL ADDRBLTY TO SVRB EXT SA   15040002
         L     R5,SVRBEXTP             SET BASE                         15050002
         OI    ENQFLAGS,RESERVE        TURN ON RESERVE           YM5073 15060002
         MVC   ENQRNAM8,HILVLNAM       RESTORE HIGH LEVEL NAME          15070002
         DEQ   ,MF=(E,(R5))            DEQ NAME & RELEASE DEVICE        15080002
*                                                                       15090002
RETURN   EQU   *                                                        15100002
*                                                                       15110002
         L     R5,SVRBEXTP             SET SVRB EXT POINTER      Y01113 15120002
         L     R1,DCBADDR              SET BASE TO DCB/DEB              15130002
         USING DCBAREA,R1              ESTABL BASE TO DCB/DEB           15140002
         L     R0,NMBYTES              GET SUBPOOL AND NUMBER OF BYTES  15150002
         LA    R1,DCBAREA              AREA TO FREE            @YL026UD 15160002
         XC    SVOPNWAP(4),SVOPNWAP    RESET WKA PTR (ESTAE)   @YL026UD 15162002
         SVC   FREEMAIN                FREE DCB/DEB & CLOSE CATALOG     15170002
         L     R12,CWAP                RESTORE CONTROLLER WA PTR Y01113 15180002
*                                                                       15190002
*      MOVE THE APPROPRIATE DATA TO THE CALLER'S AREA.                  15200002
*                                                                       15210002
*      IF THE FUNCTION IS LOCATE A GENERATION DATA SET IN ORDER         15220002
*      TO ESTABLISH A NEW NAME, ZERO THE CALLER'S AREA.                 15230008
*                                                                       15240002
*      IF THE FUNCTION IS LOCATE A BLOCK OR IF A VCBPE WAS FOUND,       15250002
*      THEN MOVE THE BLOCK INTO THE CALLER'S AREA.                      15260002
*                                                                       15270002
*      IF A DSPE WAS FOUND, THEN MOVE THE VOLUME LIST AND THE DSCBTTR   15280002
*      INTO THE CALLER'S AREA.                                          15290002
*                                                                       15300002
*      THE VOLUME SERIAL AND DEVICE TYPE ARE IN PLACE AT THIS POINT.    15310002
*                                                                       15320002
         TM    FLAG4,GDGPLUS           RELATIVE GDG PLUS?      @OZ32593 15322008
         BNO   MOVEDATA                YES, DONT BRANCH        @OZ32593 15324008
         XC    WORKAREA(D256),WORKAREA ZERO CALLER'S WORKAREA  @OZ32593 15326008
         B     FREE                    GO FREE BLDL WORKAREA   @OZ32593 15328008
MOVEDATA EQU   *                                               @OZ32593 15329008
         USING ENTRY,POINT             ESTABL ADDRBLTY TO ENTRY         15330002
         NC    NAME,NAME               WAS  A BLOCK READ?               15340002
         BZ    MOVEBLOK                YES                              15350002
*                                                                       15360002
         MVC   RETDSCBT(L'EDSCBTTR),EDSCBTTR  DSCB TTR TO RETURN AREA   15370002
         MVI   RETDSCBT+3,X00          ZERO LO-ORDER BYTE               15380002
         MVC   RETDATA(L'EVOLIST),EVOLIST   VOLUME LIST TO RETURN AREA  15390002
         B     FREE                    GO FREE BLDLS WORKAREA           15400002
*                                                                       15410002
         DROP  POINT                                                    15420002
*                                                                       15430002
*                                                                       15440002
MOVEBLOK EQU   *                                                        15450002
*                                                                       15460002
         MVC   RETDATA,BLDLBUFF        MOVE BLOCK INTO CALLER'S AREA    15470002
*                                                                       15480002
FREE     EQU   *                                                        15490002
*                                                                       15500002
         LA    R1,0(R13)               POINT TO AREA TO FREE            15520002
         LA    R0,BLDLEND-BLDLAREA     GET LENGTH TO FREEMAIN  @YL026UD 15524002
*                                      AND 0 HIGH ORDER BYTE            15530002
         SVC   FREEMAIN                FREE THE WORKAREA                15540002
*                                                                       15550002
         XR    R15,R15                 SET RETURN CODE         @YL026UD 15560002
         B     IGG0CLCA                RETURN TO IGG0CLCA/CLCB @YL026UD 15580002
         EJECT                                                          15590002
*                                                                       15600002
****************                                                        15610002
*              *                                                        15620002
CALLBLDL EQU   *                                                        15630002
*              *                                                        15640002
****************                                                        15650002
*                                                                       15660002
* FUNCTION:                                                             15670002
*    CALLS BLDL TO READ THE BLOCK AT TTR.                               15680002
*                                                                       15690002
* INPUT:                                                                15700002
*    TTR,BALREG3 IS RETURN REGISTER,BLDLPARM                            15710002
*                                                                       15720002
* OUTPUT:                                                               15730002
*    BLDLBUFF CONTAINS BLOCK,R15=0                                      15740002
*                                                                       15750002
* DESTROYED:                                                            15760002
*    R0,R1,R2,R10,R11,R12,BALREG1,BASESAVE,SAVEAREA                     15770002
*                                                                       15780002
* EXITS:                                                                15790002
*         RETURN IF PERMANENT I/O ERROR.                                15800002
***                                                                     15810002
         ST    R6,BASESAVE             SAVE THE WORKAREA BASE           15820002
         STM   R3,R9,SVAREA7           SAVE REGISTERS                   15830002
         LM    R15,R1,BLDLPARM         GET PARAMETERS FOR BLDL          15840002
         BALR  BALREG1,R15             CALL BLDL                        15850002
         L     R6,BASESAVE             RESTORE WORKAREA BASE            15860002
         LM    R3,R9,SVAREA7           RESTORE REGISTERS                15870002
         SLA   R15,D28                 SET CC FROM RETURN CODE          15880002
         BCR   14,BALREG3              BR IF NO I/O ERROR               15890002
*                                                                       15900002
*      ELSE FALL THRU TO ERR28                                          15910002
*                                                                       15920002
         B     ERR28                                                    15922002
         TITLE 'IGG0CLCC - (IGG0CLC2) SECOND LOAD OF LOCATE'   @YL026UD 17550002
*********************************************************************** 17600002
*                                                                     * 17650002
*     IGG0CLC2 - SECOND LOAD OF LOCATE                                * 17700002
*                                                                     * 17750002
*********************************************************************** 17800002
*                                                              @YL026UD 17850002
IGG0CLC2 EQU   *                                                        18492002
*                                                                       18494002
         DROP  R1                                              @YL026UD 18496002
*                                                                       18506002
         USING WORKAREA,R6                                              18516002
         USING BLDLAREA,R13                                             18526002
         USING SVRBEXTD,R5                                              18536002
         USING CAMLSTD,R8                                               18546002
         USING UCB,R2                                                   18560002
         OI    MODMAP1,MODCLC2         INDIC ENTRY TO IGG0CLC2          18570002
*                                                                       18580002
         TM    CAMOPTN1,CAMUNCAT       UNCATALOG OPERATION?             18590002
         BZ    SKIP1                   BRANCH IF NO                     18600002
         TM    CAMOPTN2,CAMDLTX        DLTX OPERATION?                  18610002
         BZ    SKIP1                   BRANCH IF NO                     18620002
         OI    FLAG1,UCATDXF           * TURN FLAG BIT ON               18630002
*                                                                       18640002
*                                                                       18650002
SKIP1    EQU   *                                                        18660002
*                                                                       18670002
         XR    LEVELCNT,LEVELCNT       INITIALIZE LEVEL COUNT TO ZERO   18680002
*      DID 2F FIND AN ENTRY?   YES IF FOUNDENT IS NON-ZERO              18690002
         L     R1,FOUNDENT             RESTORE R1 IN CASE OF GIPE       18700002
         LTR   R1,R1                   R1 0?                            18710002
         BZ    EXIT08                  BRANCH IF NO ENTRY FOUND         18720002
         LA    TABLEPTR,NAMDISP2       POINT TO 2ND LEVEL NAME DATA     18730002
*                                                                       18740002
*                                                                       18750002
UCATCHK  EQU   *                                                        18760002
*                                                                       18770002
*    TEST FOR UCATDX FUNCTION                                           18780002
*                                                                       18790002
         LA    LEVELCNT,D01(LEVELCNT)   INCREMENT LEVELS                18800002
*                                                                       18810002
         TM    FLAG1,UCATDXF           UCATDX OPERATION?                18820002
         BZ    ANALTYPE                BRANCH IF NO--ANALYZE TYPE       18830002
*                                                                       18840002
         LR    R10,R1                  SAVE R1 -- MAY POINT TO GIPE     18850002
         BAL   BALREG3,UCATDX          BRANCH TO UCATDX UPDATE          18860002
         LR    R1,R10                  RESTORE R1                       18870002
*                                                                       18880002
*                                                                       18890002
ANALTYPE EQU   *                                                        18900002
*                                                                       18910002
*      ANALYZE TYPE OF ENTRY FOUND                                      18920002
*                                                                       18930002
*      LAST ENTRY FOUND CVOL ENTRY OR WAS AN ALIAS ENTRY BUILT IN C1?   18940002
         TM    FLAG2,CVOLF+ALIASBLT                                     18950002
         BM    EXIT12                  BRANCH IF YES AND SET CODE       18960002
*                                                                       18970002
         CLI   TYPEB,ALIASTYP          ALIAS ENTRY?                     18980002
         BE    IPE                     BRANCH IF YES AN TREAT AS IPE    18990002
*                                                                       19000002
         CLI   TYPEB,IPETYP            IPE?                             19010002
         BE    IPE                     BRANCH IF YES                    19020002
*                                                                       19030002
         CLI   TYPEB,GIPETYP           GIPE?                            19040002
         BE    GIPE                    BRANCH IF YES                    19050002
*                                                                       19060002
*      ASSUME ENTRY IS DSPE OR VCBPE                                    19070002
*                                                                       19080002
         CH    LEVELCNT,NAMLG          ANY MORE LEVELS?                 19090002
         BL    ERR16                   BRANCH IF YES                    19100002
*                                                                       19110002
         TM    FLAG1,LOCATEF           * LOCATE?                        19120002
         BO    LOCDLOC                 YES, PREPARE TO RETURN  @Z40CSRC 19130008
*                                                              @Z40CSRC 19131008
*     TEST FOR UNCATLG OR RECATLG IN A RACF-DEFINED CATALOG    @Z40CSRC 19132008
*                                                              @Z40CSRC 19133008
         TM    FLAG5,OCWRACAT          IS CATLG RACF DEFINED   @Z40CSRC 19134008
         BNO   CLC3PREP                NO, GO SET UP FOR CLC3  @Z40CSRC 19135008
         TM    CAMOPTN1,CAMUNCAT+CAMRECAT UNCAT OR RECAT       @Z40CSRC 19136008
         BZ    CLC3PREP                NO, GO SET UP FOR CLC3  @Z40CSRC 19137008
         L     R15,RACFADDR            GET ADDR OF RACF RTN    @Z40CSRC 19138008
         BALR  R14,R15                 GO CHECK AUTHORIZATION  @Z40CSRC 19139008
         LTR   R15,R15                 IS USER UNAUTHORIZED    @Z40CSRC 19139208
         BNZ   ERRRACF                 YES, SET UP ERROR EXIT  @Z40CSRC 19139408
         B     CLC3PREP                CONTINUE PROCESSING     @Z40CSRC 19139608
*                                                              @Z40CSRC 19139808
LOCDLOC  EQU   *                       LOCATE LOCATED          @Z40CSRC 19139908
*                                                                       19140002
         CLI   NAMDELIM,CODPARN        INVALID NAME?                    19150002
         BE    ERR16                   BRANCH IF YES                    19160002
*                                                                       19170002
         CLI   TYPEB,VCBPETYP          VCBPE?                           19180002
         BNE   FREERES                 BRANCH IF NO                     19190002
*                                                                       19200002
*      READ VCB                                                         19210002
*                                                                       19220002
         BAL   BALREG3,READBLK         READ VCB                         19230002
         B     FREERES                 FREE RESOURES                    19240002
*                                                                       19250002
*                                                                       19260002
IPE      EQU   *                                                        19270002
         TM    FLAG2,GDGSW             GDG SWITCH ON?          @OZ14790 19273008
         BO    EXIT12                  YES, BR-THIS ENTRY INVAL@OZ14790 19276008
*                                                                       19280002
         CH    LEVELCNT,NAMLG          ANY MORE LEVELS?                 19290002
         BNL   EXIT12                  BRANCH IF NO                     19300002
*                                                                       19310002
*      SAVE ICE TTR OF LEVEL TO BE UPDATED                              19320002
         MVC   ICETTR,TTR0                                              19330002
*                                                                       19340002
*                                                                       19350002
MORELVLS EQU   *                                                        19360002
*                                                                       19370002
         BAL   BALREG1,NEXTLVL         GET NEXT LEVEL FOR BLDL          19380002
*                                                                       19390002
*                                                                       19400002
FINDNAME EQU   *                                                        19410002
*                                                                       19420002
         BAL   BALREG3,BLDLCALL        FIND THE LEVEL NAME              19430002
*                                                                       19440002
         BC    2,EXIT08                BRANCH IF NAME NOT FOUND         19450002
*                                                                       19460002
         B     UCATCHK                 CHECK IF UCATDX                  19470002
*                                                                       19480002
*                                                                       19490002
GIPE     EQU   *                                                        19500002
*                                                              @ZA04937 19501008
*    TEST FOR SUPERLOCATE AND SET INFORMATION                  @ZA04937 19502008
         TM    CAMOPTN3,X'02'      TEST FOR SUPERLOCATE        @OZ33388 19503008
         BZ    NSLOC3              NO BR                       @ZA04937 19504008
         L     R1,CAMDSCBP         LOAD POINTER TO WORKAREA    @ZA04937 19505008
         LA    R15,NAME+2                                      @ZA04937 19506008
         USING ENTRY,R15                                       @ZA04937 19507008
         LH    R0,EGCURSIZ         LOAD CURRENT GEN COUNT      @ZA04937 19508008
         STH   R0,4(,R1)           STORE IN SLOC WKAREA        @ZA04937 19509008
         MVI   6(R1),X'80'         SET GDG FLAG FOR CLCA       @ZA04937 19509208
         LTR   R0,R0               TEST FOR EMPTY GDG          @ZA04937 19509408
         BNZ   NSLOC3              BR NOT EMPTY                @ZA04937 19509608
         OI    6(R1),X'40'         SET EMPTY FLAG              @ZA04937 19509808
NSLOC3   EQU   *                                               @ZA04937 19509908
*                                                                       19510002
         OI    FLAG2,GDGSW             TURN ON GDG FLAG                 19520002
         TM    FLAG1,LOCATEF           * LOCATE FUNCTION?               19530002
         BO    CHECKLVL                BRANCH IF YES                    19540002
*                                                                       19550002
         TM    FLAG2,ALIASSW           GIPE ALIAS?             @YL026UD 19552002
         BO    ERR16                   BRANCH TO ERROR IF YES  @YL026UD 19554002
*                                                              @YL026UD 19556002
         MVC   OUTDATA,INDATA          SAVE GIPE BLK FOR UPDATE         19560002
*      CALCULATE DISPLACEMENT BETWEEN BUFFERS SO GIPE PTR MAY BE        19570002
*      ADJUSTED                                                         19580002
         LA    R1,OUTDATA-INDATA(R1)   ADJUST POINTER                   19590002
         ST    R1,FOUNDENT             SAVE POINTER                     19600002
         BAL   BALREG2,TORLTV          CONVERT GIPE DASD ADDRESS        19610002
         ST    R0,WRITETTR             SAVE TTR                         19620002
*                                                                       19630002
*      IN CASE OPERATION IS UCATDX, CHANGE TO UNCAT SINCE A GIPE HAS    19640002
*      BEEN FOUND                                                       19650002
*                                                                       19660002
         NI    FLAG1,UCATDXFC          TURN OFF IN CASE ON              19670002
         XC    DELTTR1,DELTTR1         0, SINCE IT A SWITCH IN C3       19680002
*                                                                       19690002
*                                                                       19700002
CHECKLVL EQU   *                                                        19710002
*                                                                       19750002
         TM    FLAG2,ALIASSW           GIPE ALIAS?             @YL026UD 19752002
         BO    ERR08                   BRANCH TO ERROR IF YES  @YL026UD 19754002
*                                                              @YL026UD 19756002
         CH    LEVELCNT,NAMLG          ANY MORE LEVELS?         YA00091 19774002
         BL    ABSLEVEL                BRANCH IF YES            YA00091 19776002
         CLI   NAMDELIM,CODPARN        LAST DELIMITER A LEFT PAREN ?    19780002
         BNE   EXIT12                  SET EXIT CODE TO 12     @YL026UD 19782002
*      SAVE ICE TTR OF LEVEL TO BE UPDATED                     @ZA02286 19783008
         MVC   ICETTR,TTR0                                     @ZA02286 19783208
*      SAVE NO. OF LEVELS FOUND IN CASE OF LATER ERROR EXIT OR CATBX    19784002
         STH   LEVELCNT,NAMLF                                  @YL026UD 19786002
         B     IGG0CLC1                RESOLVE RELATIVE GDG    @YL026UD 19790002
*                                                                       19810002
*                                                                       19820002
*                                                                       19830002
ABSLEVEL EQU   *                                                        19840002
*      SAVE ICE TTR OF LEVEL TO BE UPDATED                     @ZA02286 19841008
         MVC   ICETTR,TTR0                                     @ZA02286 19842008
*                                                                       19850002
*      GET NEXT LEVEL NAME WHICH IS AN ABSOLUTE GDG NAME                19860002
*                                                                       19870002
         BAL   BALREG1,NEXTLVL         GET NEXT LEVEL                   19880002
*                                                                       19890002
*      CHECK IF GIVEN ABSOLUTE GENERATION NAME IS IN PROPER FORMAT      19900002
         CLI   NAME,CCDG               FIRST CHAR. A 'G' ?              19910002
         BNE   ERR08                   BRANCH IF NO            @OZ31408 19920008
         CLI   NAME+5,CCDV             SIXTH CHAR. A 'V' ?              19926008
         BNE   ERR08                   BRANCH IF NO            @OZ31408 19932008
*                                                                       19950002
*      NAME IS OK - COMPLEMENT THE NUMBER IN THE GENERATION NAME -      19960002
*      (I.E. THE X'S OF GXXXXV00)                                       19970002
*                                                                       19980002
         CLC   GENNO,CCDZERO           IS IT G0000VXX?         @ZA01897 19990008
         BE    ERR08B                  YES, BR-INVALID         @ZA01897 19992008
         XC    GENNO,MASKFF            NO, COMPLEMENT GEN. NO.          19994008
*                                                                       20000002
*      INDICATE TO CLC6 AN ABSOLUTE GDG NAME                            20010002
         OI    FLAG3,GDS               SET FLAG                         20020002
*                                                                       20030002
         TM    CAMOPTN1,CAMCAT         IS THIS A CAT FUNCTION?          20040002
         BZ    FINDNAME                BRANCH IF NO AND SEARCH FOR NAME 20050002
*                                                              @Z40CSRC 20050508
*      CATALOGING A NEW GDG GENERATION.                        @Z40CSRC 20051008
*      THIS REQUIRES AN AUTHORIZATION CHECK IF PERFORMED       @Z40CSRC 20051508
*      IN A RACF-DEFINED CATALOG.                              @Z40CSRC 20052008
*                                                              @Z40CSRC 20052508
         TM    FLAG5,OCWRACAT          IN RACF-DEFINED CATALOG @Z40CSRC 20053008
         BNO   NORAC                   NO, SKIP RAC CHECK      @Z40CSRC 20053508
         L     R15,RACFADDR            GET ADDR OF RACF RTN    @Z40CSRC 20054008
         BALR  R14,R15                 GO CHK AUTHORIZATION    @Z40CSRC 20054508
         LTR   R15,R15                 IS USER UNAUTHORIZED    @Z40CSRC 20055008
         BNZ   ERRRACF                 YES, SET UP ERROR EXIT  @Z40CSRC 20055508
*                                                              @Z40CSRC 20056008
NORAC    EQU   *                       NO RACF AUTH FAILURE    @Z40CSRC 20056508
*                                                                       20060002
*      IF THE VERSION NUMBER IS NON-ZERO, THEN THE BLOCK RETURNED       20070002
*      BY BLDL MAY NOT BE THE BLOCK TO BE UPDATED (SEE APAR 43345)      20080002
*                                                                       20090002
         CLC   NAME+6(2),CCDZERO       ZERO?                   @ZA01897 20100002
         BE    FINDNAME                BRANCH IF YES                    20110002
*                                                                       20120002
*      CHANGE THE VERSION NUMBER SO BLDL WILL ALWAYS RETURN THE BLOCK   20130002
*      TO BE UPDATED                                                    20140002
*                                                                       20150002
         LH    R9,NAME+6               SAVE VERSION NUMBER              20160002
*      NOTE: R9 IS TABLEPTR, SO TABLEPTR IS NOW INVALID                 20170002
         MVC   NAME+6(2),CCDZERO       SET VERSION NO. TO 0    @ZA05600 20180008
         BAL   BALREG3,BLDLCALL        FIND BLK TO BE UPDATED           20190002
         STH   R9,NAME+6               RESTORE VERSION NO.              20200002
         B     EXIT08                  SET LOCATE CODE TO NOT FOUND     20210002
*                                                                       20220002
*                                                                       20230002
FREERES  EQU   *                                                        20240002
*                                                                       20250002
         L     R12,CWAP                RESTORE CONTROLLER WA PTR Y01113 20260002
         L     R5,SVRBEXTP                                              20270002
         MVC   ENQRNAM8,HILVLNAM       RESTORE HIGH LEVEL NAME          20280002
*      DEQUE NAME AND RELEASE ('UN-RESERVE') THE DEVICE                 20290002
         MVI   ENQFLAGS,HAVE+SYSTEMS   SET FLAGS                        20300002
*                                                                       20310002
DEQNAME  EQU   *                                                        20320002
*                                                                       20330002
         DEQ   ,MF=(E,(R5))            DEQ NAME                         20340002
*                                                                       20350002
*      FREE DCB/DEB AND CLOSE THE CATALOG                               20360002
*                                                                       20370002
         L     R1,DCBADDR              GET POINTER TO DCB/DEB           20380002
         USING DCBAREA,R1                                               20390002
         L     R0,NMBYTES              GET NO. OF BYTES TO FREE         20400002
*                                                                       20410002
*      GET THE ADDRESS OF THE AREA TO FREE AND 0 THE HIGH ORDER BYTE    20420002
*      TO INDICATE FREEMAIN                                             20430002
         LA    R1,DCBAREA                                      @YL026UD 20440002
         XC    SVOPNWAP(4),SVOPNWAP    RESET WKA PTR (ESTAE)   @YL026UD 20442002
         SVC   FREEMAIN                FREEMAIN  R,LV=(0),A=(1)         20450002
         DROP  R1                                                       20460002
*                                                                       20470002
         CLI   TYPEB,VCBPETYP          VCBPE?                           20480002
         BNE   DSPE                    BRANCH IF NO                     20490002
*                                                                       20500002
         MVC   RETDATA,BLDLBUFF        MOVE BLK INTO USER'S WA          20510002
         B     RETURN2                 FREEMAIN AND RETURN TO CALLER    20520002
*                                                                       20530002
*                                                                       20540002
DSPE     EQU   *                                                        20550002
*                                                                       20560002
*      RETURN DATA TO USER                                              20570002
*                                                                       20580002
         MVC   RETDSCBT(L'TTR),TTR     RETURN DSCB TTR                  20590002
         MVI   RETDSCBT+3,X00          0 FOURTH BYTE                    20600002
         MVC   RETDATA(D62),DATAB      RETURN DATA                      20610002
*                                                                       20620002
*                                                                       20630002
RETURN2  EQU   *                                                        20640002
*                                                                       20650002
*      FREE WORKAREA                                                    20660002
*                                                                       20670002
         LR    R1,R13                  GET POINTER TO AREA TO FREE      20690002
         LA    R0,BLDLEND-BLDLAREA     GET LENGTH TO FREEMAIN  @YL026UD 20694002
         SVC FREEMAIN                  FREEMAIN R,LV=(0),A=(R13)        20700002
*                                                                       20710002
         XR    R15,R15                 SET RETURN CODE         @YL026UD 20720002
         B     IGG0CLCA                RETURN TO IGG0CLCA/CLCB @YL026UD 20740002
*                                                                       20750002
*                                                                       20760002
EXIT08   EQU   *                                                        20770002
*                                                                       20780002
         MVI   ERRLOCSV,ERROR08        SET ERROR CODE                   20790002
         B     LOCTEST2                TEST IF LOCATE FUNCTION          20800002
*                                                                       20810002
*                                                                       20820002
EXIT12   EQU   *                                                        20830002
*                                                                       20840002
         MVI   ERRLOCSV,ERROR12        SET ERROR CODE                   20850002
*                                                                       20860002
LOCTEST2 EQU   *                                                        20870002
*                                                                       20880002
         TM    FLAG1,LOCATEF           LOCATE?                          20890002
         BZ    CLC3PREP                BRANCH IF NO AND PREPARE FOR C3  20900002
*                                                                       20910002
*      NO DSPE OR VCBPE FOUND, LOCATE ERROR -- PREPARE AND BRANCH TO C7 20920002
*                                                                       20930002
         OI    FLAG1,RTNBLK            INDIC TO C7 TO RETURN BLK        20940002
*                                                                       20950002
         CLI   ERRLOCSV,ERROR08        ERROR 8?                         20960002
         BE    BRANCHC7                BRANCH IF YES TO C7     @YL026UD 20970002
*                                                                       20980002
         BAL   BALREG3,READBLK         READ NEXT BLK FOR ERROR 16       20990002
*                                                              @YL026UD 21000002
BRANCHC7 EQU   *                                               @YL026UD 21002002
*                                                              @YL026UD 21004002
         STH   LEVELCNT,NAMLF          SAVE NO. LEVELS FOUND   @YL026UD 21006002
         B     IGG0CLC7                BRANCH TO CLC7          @YL026UD 21008002
*                                                                       21010002
*                                                                       21020002
CLC3PREP EQU   *                                                        21030002
*                                                                       21040002
*      PREPARE FOR IGG0CLC3 AND LATER MODULES                           21050002
*                                                                       21060002
*      SAVE THE CCHHR OF THE BLOCK JUST READ. SAVE IT AS A TTR.         21070002
*                                                                       21080002
         BAL   BALREG2,TORLTV          SAVE DASD ADDRESS                21090002
         ST    R0,READTTR              SAVE TTR                         21100002
*                                                                       21110002
*      CHECK FIRST NAME IN LAST BLOCK READ FOR AN ICE ENTRY             21120002
*                                                                       21130002
         CLI   INENTRY,X00             DOES NAME START WITH 00?         21140002
         MVC   ICEPERT,INENTRY+L'INAME   ASSUME YES                     21150002
         BE    SKIP3                   BRANCH IF YES AND CONTINUE       21160002
         OI    FLAG1,READICEF          SET FLAG TO READ ICE IN CLC3     21170002
*                                                                       21180002
SKIP3    EQU   *                                                        21190002
*                                                                       21200002
*      DO INITIAL PREPARATIONS FOR SEVERAL FUNCTIONS                    21210002
*                                                                       21220002
*                                                                       21230002
         TM    FLAG1,CATBXF            * CATBX?                         21240002
         BZ    UCATDXCK                BRANCH IF NO                     21250002
*                                                                       21260002
         CLI   ERRLOCSV,ERROR00        DSPE OR VCBPE FOUND?             21270002
         BE    ERR08B                  BRANCH IF YES           @YL026UD 21280002
*                                                                       21290002
         TM    FLAG2,GDGSW             HAS A GIPE BEEN FOUND?           21300002
         BO    RELOC                   BRANCH IF YES--'NAME' UPDATED    21310002
*                                                                       21320002
*      PUT LAST LEVEL NAME INTO 'NAME' FOR CATALOG OPERATION            21330002
*                                                                       21340002
*      POINT TO LAST LEVEL DATA IN 'NAMTABLE' FOR SUBROUTINE NEXTLVL    21350002
         L     TABLEPTR,NAMLSTP        SET POINTER                      21360002
         BAL   BALREG1,NEXTLVL         PUT LAST LEVEL NAME INTO 'NAME'  21370002
*                                                                       21380002
*                                                                       21390002
UCATDXCK EQU   *                                                        21400002
*                                                                       21410002
         TM    FLAG1,UCATDXF           * UCATDX OPERATION?              21420002
         BZ    RELOC                   BRANCH IF NO                     21430002
*                                                                       21440002
         CLI   ERRLOCSV,ERROR00        LOCATE FIND DSPE OR VCBPE?       21450002
         BNE   ERR08B                  BRANCH IF NO            @YL026UD 21460002
         MVC   NAME,UCATNAM            INDIC NAME FOR CLC6 TO DELETE    21470002
         CLC   UCATICE,ICETTR          TTR'S EQUAL?                     21480002
         BE    RELOC                   BRANCH IF YES                    21490002
         OI    FLAG1,READICEF          MUST READ ICE                    21500002
         MVC   ICETTR,UCATICE          SET TTR TO READ                  21510002
*                                                                       21520002
*                                                                       21530002
RELOC    EQU   *                                                        21540002
*                                                                       21550002
*      RELOCATE THE CCWS TO BE USED BY LATER MODULES.                   21560002
*                                                                       21570002
         DROP  R13                     NO LONGER NEEDED--NONLOCATE FUN  21580002
         LM    R9,R2,FIRST5            GET 5 CCWS                       21590002
         AR    R9,R6                   RELOCATE                         21600002
         AR    R11,R6                                                   21610002
         AR    R13,R6                                                   21620002
         AR    R15,R6                                                   21630002
         AR    R1,R6                                                    21640002
         STM   R9,R2,CCWFRST5          STORE INTO WA                    21650002
         LM    R9,R2,SECOND5           GET NEXT 5 CCWS                  21660002
         AR    R9,R6                   RELOCATE                         21670002
         AR    R11,R6                                                   21680002
         AR    R13,R6                                                   21690002
         AR    R15,R6                                                   21700002
         AR    R1,R6                                                    21710002
*     RELOCATE 2 CONTIGUOUS TO PREVIOUS 5                               21720002
         STM   R9,R12,CCWSEC2                                           21730002
         STM   R13,R2,CCWLST3          RELOCATE LAST 3 ELSEWHERE        21740002
         LA    R1,SIDE1                GET NEW CHANNEL ADDRESS          21750002
         ST    R1,IOBCHPR              UPDATE IOB                       21760002
*                                                                       21770002
*      RPS DEVICE?                                                      21780002
*                                                                       21790002
         L     R5,SVRBEXTP             RESTORE FOR CLC2 AND CLC3        21800002
         L     R2,UCBADDR              GET UCB ADDRESS                  21810002
         TM    UCBTBYT2,RPSBIT         RPS BIT ON?                      21820002
         BZ    IGG0CLC3                BRANCH IF NO                     21830002
*                                                                       21840002
*      RPS DEVICE                                                       21850002
*                                                                       21860002
         OI    FLAG2,RPSDEV            TURN ON RPS FLAG                 21870002
*      GETMAIN FOR RPS SUPPORT.                                         21880002
         LA    R0,RPSEND-RPSD          GET LENGTH AND SP NUMBER         21890002
         GETMAIN R,LV=(0)                                               21900002
         ST    R1,SVRPSWAP             SAVE WKA PTR (ESTAE)    @YL026UD 21902002
         USING RPSD,R1                                                  21910002
         ST    R1,RPSAVEP              SAVE IN WORKAREA                 21920002
         ST    R1,RPSR1                SAVE IN RPS AREA                 21930002
         ST    R1,IOBCHPR              UPDATE IOB CHAN PROG POINTER     21940002
         LA    R15,THETA               POINT TO THETA IN WA             21950002
         ST    R15,RPSPTR              PUT POINTER IN RPS AREA          21960002
         MVC   RPSPTR(D01),UCBTBYT4    PUT IN UCB TYPE CODE             21970002
         LM    R9,R12,RPSCCWS          GET RPS CCWS                     21980002
         AR    R9,R6                   RELOCATE                         21990002
         AR    R11,R6                                                   22000002
         STM   R9,R12,RPSCCW           PUT INTO RPS AREA                22010002
*      SET UP DD=BLOCKSIZE=256, K=KEYLEN=8, R=RECORD NO. IN RPS AREA    22020002
         MVC   RPSDDKR,RPSDDK                                           22030002
         L     R9,CVTPTR               GET POINTER TO CVT               22040002
         USING CVT,R9                                                   22050002
*      GET POINTER TO SECTOR CONVERT ROUTINE                            22060002
         MVC   RPSCNVT,CVT0SCR1                                         22070002
         DROP  R9                                                       22080002
         DROP  R1                                                       22090002
*                                                                       22100002
         B     IGG0CLC3                                                 22110002
         EJECT                                                          22160002
*                                                                       22170002
****************                                                        22180002
*              *                                                        22190002
UCATDX   EQU   *                                                        22200002
*              *                                                        22210002
****************                                                        22220002
* FUNCTION:                                                             22230002
*    TO MAINTAIN A TTR TRAIL OF DELETABLE BLOCKS -- THIS IS DONE BY     22240002
*    KEEPING A TTR TO THE FIRST BLOCK TO BE DELETED                     22250002
*                                                                       22260002
* INPUT:                                                                22270002
*    A DATA BLOCK IN BLDLBUFF                                           22280002
*    RETURN ADDRESS IN BALREG3                                          22290002
*                                                                       22300002
* OUTPUT:                                                               22310002
*    UPDATED TTR FIELD OF DELTTR1                                       22320002
*                                                                       22330002
*                                                                       22340002
* DESTROYED:                                                            22350002
*    R0,R1,R2,BALREG2,BALREG3,R14,AND R15                               22360002
*                                                                       22370002
*                                                                       22380002
* SUBROUTINES USED:                                                     22390002
*         TORLTV                                                        22400002
*                                                                       22410002
****************                                                        22420002
****************                                                        22430002
*                                                                       22440002
         USING BLDLAREA,R13                                             22450002
         BAL   BALREG2,TORLTV          CONVERT CCHHR OF BLK TO TTR      22460002
*      R0 HAS TTR0 OF BLK AND MUST BE PRESERVED IN SUBROUTINE           22470002
*                                                                       22480002
*      1) THE FIRST LEVEL NAME MAY NOT BE REMOVED OR THE BLK DELETED    22490002
*      2) THE SECOND MAY BE REMOVED BUT THE BLK NOT DELETED             22500002
*                                                                       22510002
         CH    LEVELCNT,THREE          FIRST OR SECOND LEVEL?           22520002
         BL    NOTDEL                  BRANCH IF YES                    22530002
*                                                                       22540002
*      IS THE ONLY ENTRY (BESIDES THE ICE AND ILE) THE FOUND ENTRY?     22550002
*      IF SO THE BLOCK IS DELETABLE                                     22560002
*                                                                       22570002
         XR    R1,R1                   CLEAR                            22580002
         IC    R1,TYPEB                GET NO. OF HALF WORDS            22590002
*                                                                       22600002
*      2 BYTE LENGTH + ICE(18) + ILE(12)                                22610002
*      + ENTRY LENGTH BEFORE DATA(12) = 44 BYTES                        22620002
*                                                                       22630002
         LA    R1,D44(R1,R1)                                            22640002
*      R1 NOW CONTAINS NO. OF BYTES IN BLK IF FOUND ENTRY THE ONLY ONE  22650002
*                                                                       22660002
         CH    R1,INBYTSU              ONE ENTRY?                       22670002
         BNE   NOTDEL                  BRANCH IF NO                     22680002
*                                                                       22690002
         C     R0,ICETTR               FIRST BLOCK IN CHAIN?            22700002
         BE    UPDTTR                  BRANCH IF YES                    22710002
*                                                                       22720002
*                                                                       22730002
NOTDEL   EQU   *                                                        22740002
*                                                                       22750002
*                                                                       22760002
*      THIS BLOCK IS NOT DELETABLE (MORE THAN ONE ENTRY OR FIRST OR     22770002
*      SECOND LEVEL)                                                    22780002
*                                                                       22790002
         ST    R0,WRITETTR             SAVE TTR OF BLK TO BE UPDATED    22800002
*      0 DELTTR1 SINCE NO BLKS ARE DELETABLE                            22810002
         XC    DELTTR1,DELTTR1                                          22820002
         MVC   OUTDATA,INDATA          SAVE BLK TO UPDATED              22830002
         MVC   UCATICE,ICETTR          SAVE ICE TTR FOR THIS LEVEL      22840002
         MVC   UCATNAM,NAME            SAVE NAME TO BE DELETED          22850002
         BR    BALREG3                 RETURN TO CALLER                 22860002
*                                                                       22870002
*                                                                       22880002
UPDTTR   EQU   *                                                        22890002
*                                                                       22900002
*      IF DELTTR1=0, THEN FIRST DELETEABLE BLK, SO UPDATE DELTTR1       22910002
*      IF DELTTR1 NOT 0, THEN NOT FIRST DELETEABLE BLK, SO RETURN       22920002
*                                                                       22930002
         NC    DELTTR1,DELTTR1         DELTTR1=0 ?                      22940002
         BCR   7,BALREG3               RETURN IF NO                     22950002
         ST    R0,DELTTR1              UPDATE FIRST DELETABLE BLK       22960002
         BR    BALREG3                 RETURN                           22970002
         DROP  R13                                                      22980002
         EJECT                                                          22990002
*                                                                       23000002
****************                                                        23010002
*              *                                                        23020002
READBLK  EQU   *                                                        23030002
*              *                                                        23040002
****************                                                        23050002
*                                                                       23060002
***FUNCTION:                                                            23070002
*    THIS SUBROUTINE READS A BLOCK BY TTR USING BLDL.                   23080002
*                                                                       23090002
* INPUT:                                                                23100002
*    RETURN ADDRES IN BALREG3                                           23110002
*    TTR AT 'TTR0'                                                      23120002
*                                                                       23130002
* OUTPUT:                                                               23140002
*    IF FOUND, THE BLOCK IS AT BLDLBUFF                                 23150002
*                                                                       23160002
* DESTROYED:                                                            23170002
*    REGISTERS R0,R1,R2,R3,R10,R11,R12,R14, AND R15                     23180002
*    'NAME'                                                             23190002
*    'BLDLBUFF'                                                         23200002
*                                                                       23210002
* EXITS:                                                                23220002
*                                                                       23230002
*    EXITS TO CALLBLDL                                                  23240002
*                                                                       23250002
***************                                                         23260002
***************                                                         23270002
*                                                                       23280002
         XC    NAME,NAME               0 NAME FOR BLDL                  23290002
*                                                                       23300002
*      FALL THROUGH TO 'CALLBLDL'                                       23310002
*                                                                       23320002
         EJECT                                                          23330002
*                                                                       23340002
****************                                                        23350002
*              *                                                        23360002
BLDLCALL EQU   *                                                        23370002
*              *                                                        23380002
****************                                                        23390002
* FUNCTION:                                                             23400002
*    THIS SUBROUTINE INTERFACES TO BLDL TO SEARCH FOR THE NAME IN       23410002
*    'NAME' OR READ A BLOCK SPECIFIED BY A TTR IN 'TTR' WHEN 'NAME'     23420002
*    IS 0                                                               23430002
*                                                                       23440002
* INPUT:                                                                23450002
*    RETURN ADDRESS IN BALREG3                                          23460002
*    NAME AND TTR SET                                                   23470002
*                                                                       23480002
* OUTPUT:                                                               23490002
*    1) CONDITION CODE=0 IF ENTRY IS FOUND                              23500002
*    2) CONDITION CODE=2 IF ENTRY IS NOT FOUND                          23510002
*    3) IF THE ENTRY IS FOUND, IT IS PLACED AT NAME AND THE DATA        23520002
*      IS IN BLDLBUFF WITH R1 POINTING TO THE ENTRY IN THE BLOCK        23530002
*    4) IF THE ENTRY IS NOT FOUND, THE BLOCK IT WOULD GO INTO           23540002
*      IS IN BLDLBUFF                                                   23550002
* DESTROYED:                                                            23560002
*    REGISTERS R0,R1,R2,R3,R10,R11,R12,R14, AND R15 -- BLDLBUFF         23570002
*                                                                       23580002
* EXITS:                                                                23590002
*         PERMANENT I/O ERROR, IT WILL BRANCH TO IGG0CLC7      @YL026UD 23600002
***************                                                         23610002
***************                                                         23620002
*                                                                       23630002
         USING BLDLAREA,R13                                             23640002
         ST    R6,BASESAVE             SAVE THE WA BASE                 23650002
         STM   R4,R9,SVAREA6           SAVE REGS OVER BLDL              23660002
         LM    R15,R1,BLDLPARM         GET BLDL INPUT PARMS             23670002
         BALR  R14,R15                 BRANCH TO BLDL                   23680002
         L     R6,BASESAVE             RESTORE WA BASE                  23690002
         LM    R4,R9,SVAREA6           RESTORE REGS                     23700002
*      THE FOLLOWING SHIFT SETS THE CONDITION CODE AS FOLLOWS:          23710002
*      IF R15=0, THEN CC=0                                              23720002
*      IF R15=4, THEN CC=2                                              23730002
*      IF R15=8, THEN CC=3             (OVERFLOW)                       23740002
         SLA   R15,28                  SET CC                           23750002
         BCR   10,BALREG3              RETURN IF R15=0 OR 4             23760002
*                                                                       23770002
         B     ERR28B                  ERROR EXIT              @YL026UD 23780002
         DROP  R13                                                      23790002
         EJECT                                                          23800002
*                                                                       23810002
****************                                                        23820002
*              *                                                        23830002
TORLTV   EQU   *                                                        23840002
*              *                                                        23850002
****************                                                        23860002
*                                                                       23870002
***FUNCTION:                                                            23880002
*    THIS SUBROUTINE CONVERTS THE DATA COUNT, READ BY BLDL, FOR THE     23890002
*    CURRENT IN CORE DATA BLOCK AND CONVERTS IT TO A TTR                23900002
*                                                                       23910002
* INPUT:                                                                23920002
*    RETURN ADDRESS IN BALREG2                                          23930002
*                                                                       23940002
* OUTPUT:                                                               23950002
*    TTR0 IN REGISTER 0                                                 23960002
* DESTROYED:                                                            23970002
*    REGISTERS R0,R1,R2,R14 AND R15 -- SAVEAREA,BLDLCHR                 23980002
*                                                                       23990002
* SUBROUTINES USED:                                                     24000002
*    THE RESIDENT CONVERT ROUTINE -- IECPRLTV                           24010002
*                                                                       24020002
***************                                                         24030002
***************                                                         24040002
*                                                                       24050002
         USING BLDLAREA,R13                                             24060002
*                                                                       24070002
*      FIRST MOVE THE DATA COUNT FIELD INTO THE IOB MBBCCHHR            24080002
         MVC   BLDLCHR(L'BLDLCHR),BLDLCNT                               24090002
*      SAVE THE REGS DESTROYED BY CONVERT                               24100002
         STM   R9,R13,SVAREA5                                           24110002
         L     R1,DEBADDR              GET DEB ADDR                     24120002
         LA    R2,BLDLMBB              POINT TO MBBCCHHR IN IOB         24130002
         L     R15,EPTORLTV            GET ENTRY POINT                  24140002
         BALR  BALREG1,R15             CONVERT                          24150002
         LM    R9,R13,SVAREA5          RESTORE MODIFIED REGISTERS       24160002
*      THIS ROUTINE ALWAYS GIVES A RETURN CODE OF 0, SO IT IS NOT       24170002
*      CHECKED                                                          24180002
         BR    BALREG2                 RETURN TO CALLER                 24190002
         DROP  R13                                                      24200002
         EJECT                                                          24210002
*                                                                       24220002
****************                                                        24230002
*              *                                                        24240002
NEXTLVL  EQU   *                                                        24250002
*              *                                                        24260002
****************                                                        24270002
*                                                                       24280002
***FUNCTION:                                                            24290002
*    THIS SUBROUTINE GETS THE NEXT LEVEL NAME AND PUTS IT INTO          24300002
*    THE 'NAME' WORKAREA LOCATION                                       24310002
*                                                                       24320002
* INPUT:                                                                24330002
*    RETURN ADDRESS IN BALREG1                                          24340002
*    REGISTER TABLEPTR (MAINTAINED IN THIS SUBROUTINE) POINTING TO      24350002
*    NEXT DISPLACEMENT IN THE NAME TABLE                                24360002
*                                                                       24370002
* OUTPUT:                                                               24380002
*    NEXT LEVEL IN 'NAME'                                               24390002
*    TABLEPTR INCREMENTED TO NEXT ENTRY                                 24400002
* DESTROYED:                                                            24410002
*    REGISTERS R1,R2, AND TABLEPTR                                      24420002
***************                                                         24430002
***************                                                         24440002
*                                                                       24450002
         MVI   NAME,CCDBLANK           BLANK NAME                       24460002
         MVC   NAME+1(L'NAME-1),NAME                                    24470002
         XR    R1,R1                   0 R1                             24480002
         IC    R1,0(TABLEPTR)          GET LEVEL DISPLACEMENT           24490002
         L     R2,CAMPTR1              LOAD POINTER TO NAME             24500002
         AR    R2,R1                   R2 NOW POINTS TO PROPER LEVEL    24510002
         IC    R1,D01(TABLEPTR)        GET LEVEL LENGTH MINUS ONE       24520002
*      MOVE LEVEL NAME INTO 'NAME'                                      24530002
         EX    R1,MOVELVL              MVC   NAME(0),0(R2)              24540002
*      INCREMENT TO NEXT LEVEL NAME INFORMATION                         24550002
         LA    TABLEPTR,D02(TABLEPTR)                                   24560002
         BR    BALREG1                 RETURN                           24570002
         EJECT                                                          24580002
*                                                                       24582002
ERR04A   EQU   *                                                        24584002
*                                                                       24586002
*      SET SCHEDULER SWITCH SO MOUNT MESSAGE IS NOT ISSUED              24588002
         XC    DEVTYPE,DEVTYPE         0 SWITCH                         24588402
*                                                                       24588802
*                                                                       24589202
ERR04    EQU   *                                                        24589602
*                                                                       24589702
         MVI   ERRLOCSV,ERROR04        SET ERROR CODE                   24589802
         B     IGG0CLC7                BRANCH TO IGG0CLC7      @YL026UD 24589902
*                                                                       24592002
*                                                                       24600002
ERR08    EQU   *                                                        24610002
*                                                                       24620002
         MVI   ERRLOCSV,ERROR08        SET EXIT CODE TO 8      @YL026UD 24630002
         B     IGG0CLC7                BRANCH TO IGG0CLC7      @YL026UD 24640002
*                                                                       24650002
*                                                                       24650402
ERR08B   EQU   *                                               @YL026UD 24650802
*                                                                       24651202
*      SAVE NO. OF LEVELS FOUND IN CASE OF LATER ERROR EXIT OR CATBX    24652602
         STH   LEVELCNT,NAMLF                                  @YL026UD 24654602
         MVI   ERRCATSV,ERROR08        RETURN CODE IS 08       @YL026UD 24656002
         B     IGG0CLC7                GO TO XCTL                       24657402
*                                                                       24658802
*                                                                       24660202
ERR12    EQU   *                                                        24661602
*                                                                       24663002
         MVI   ERRLOCSV,ERROR12        RETURN CODE IS 12                24664402
         B     IGG0CLC7                BRANCH TO IGG0CLC7      @YL026UD 24665802
*                                                                       24667202
*                                                                       24668602
ERR16    EQU   *                                                        24670002
*                                                                       24680002
*      SAVE NO. OF LEVELS FOUND IN CASE OF LATER ERROR EXIT OR CATBX    24682002
         STH   LEVELCNT,NAMLF                                  @YL026UD 24684002
         MVI   ERRLOCSV,ERROR16        SET ERROR CODE TO 16             24690002
         B     IGG0CLC7                BRANCH TO IGG0CLC7      @YL026UD 24700002
*                                                                       24710002
*                                                                       24720002
ERR20B   EQU   *                                               @YL026UD 24722002
*                                                              @YL026UD 24724002
*      SAVE NO. OF LEVELS FOUND IN CASE OF LATER ERROR EXIT OR CATBX    24726002
         STH   LEVELCNT,NAMLF                                  @YL026UD 24728002
*                                                              @YL026UD 24728402
ERR20    EQU   *                                                        24730002
*                                                                       24740002
         MVI   ERRLOCSV,ERROR20        SET ERROR CODE TO 20             24750002
         B     IGG0CLC7                BRANCH TO IGG0CLC7      @YL026UD 24760002
*                                                                       24770002
ERR28B   EQU   *                                               @YL026UD 24842002
*                                                              @YL026UD 24844002
*      SAVE NO. OF LEVELS FOUND IN CASE OF LATER ERROR EXIT OR CATBX    24846002
         STH   LEVELCNT,NAMLF                                  @YL026UD 24848002
*                                                              @YL026UD 24848402
ERR28    EQU   *                                                        24850002
*                                                                       24860002
         MVI   ERRLOCSV,ERROR28        SET ERROR TO 28                  24870002
         B     IGG0CLC7                BRANCH TO IGG0CLC7      @YL026UD 24872002
*                                                              @YL026UD 24888902
*                                                              @YL026UD 24889202
IGG0CLCA EQU   *                                               @YL026UD 24889302
*                                                              @YL026UD 24889402
*      RETURN TO INTERFACE MAPPER (IGG0CLCA OR IGG0CLCB)       @YL026UD 24889502
*                                                              @YL026UD 24891002
         LR    R2,R15                  SAVE RETURN CODE        @YL026UD 24891102
         LR    R3,R0                   SAVE RETURN CODE        @YL026UD 24891202
         LR    R4,R1                   SAVE RETURN CODE        @YL026UD 24891302
*                                                              @YL026UD 24892802
         ESTAE 0                       RESET ESTAE EXIT        @YL026UD 24894502
*                                                              @YL026UD 24895702
         LR    R15,R2                  RESTORE RETURN CODE     @YL026UD 24895802
         LR    R0,R3                   RESTORE RETURN CODE     @YL026UD 24895902
         LR    R1,R4                   RESTORE RETURN CODE     @YL026UD 24896102
CLCAEXIT EQU   *                                               @OZ30106 24896208
         L     R13,612(R12)            GET CIII SAVEAREA PTR   #YL026UD 24896502
         LM    R2,R12,28(R13)          RESTORE REGISTERS 2-12  #YL026UD 24897502
         L     R14,12(R13)             RESTORE RETURN REGISTER #YL026UD 24899002
         BR    R14                     RETURN TO IGG0CLCA/CLCB #YL026UD 24900502
*                                                                       24902002
*                                                                       24903502
IGG0CLC3 EQU   *                                                        24905002
*                                                                       24906502
*      SAVE NO. OF LEVELS FOUND IN CASE OF LATER ERROR EXIT OR CATBX    24908002
         STH   LEVELCNT,NAMLF                                  @YL026UD 24909502
         L     R15,IGG0CLCD            OBTAIN MODULE NAME      @YL026UD 24911002
         BALR  R14,R15                 BRANCH TO IGG0CLCD MOD  @YL026UD 24912502
*                                                                       24914002
ERRRACF  EQU   *                       RACF ERROR EXIT         @Z40CSRC 24914508
*                                                                       24915502
IGG0CLC7 EQU   *                                                        24917002
*                                                                       24918502
         L     R15,ERRORMOD            OBTAIN MODULE NAME      @YL026UD 24920002
         BALR  R14,R15                 BRANCH TO ERROR MODULE  @YL026UD 24922002
*                                                                       24930002
         TITLE 'IGG0CLCC - (IECPBLDL) FIND/BLDL ROUTINE'       @YL026UD 25000002
*********************************************************************** 25000402
*                                                                     * 25000802
*     IECPBLDL - FIND/BLDL ROUTINE                                    * 25001202
*                                                                     * 25001602
*********************************************************************** 25001702
*                                                              @YL026UD 25001802
IGG0CLCC CSECT                                                          25002002
*                                                                       25004002
IECPBLDL BALR  RGBASE,0                SET BASE REGISTER FOR MODULE     25008402
         USING BASE1,RGBASE            ESTABL BASE FOR MODULE           25008802
         USING BLDLWKA,RGAREA          ESTABL BASE FOR BLDL WORKAREA    25009202
BASE1    L     RGA,EPTOABSL            GET CONVERT ENTRY PT    @YL026UD 25009602
         ST    RGA,IECPCNVT            SAVE ADDR IN BLDL WKA   @YL026UD 25009702
         SR    RGA,RGA                 ZERO REGISTER                    25009802
         LA    RGAREA,0(RGAREA)        CLEAR HI-ORDER BYTE              25009902
         ST    RGA,ERCODE              ERCODE, C.N., Z TO ZERO          25013202
         LR    RGJ,RGDCB               RGJ HAS DCB ADDRESS              25015202
BBBB1    LR    RGK,RGADDR              RGK POINTS TO FFLL               25015602
         STM   R6,R11,RDAREA           TEMPORARY SAVE                   25016002
*                                                                       25016402
***      CONSTRUCT CHANNEL PROGRAM, ECB, AND IOB FOR READING            25016502
***      DIRECTORY BLOCKS                                               25016602
*                                                                       25019902
         LM    R0,R11,CHANPROG         GET AND RELOCATE CHAN PROG       25021908
         ALR   R0,RGAREA               CCW1 - SID CCHHR                 25022708
         ALR   R2,RGAREA               CCW2 - TIC TO CCW1               25023508
         AR    R4,RGAREA               CCW3 - RDCNT INTO NEWCNT         25024308
         AR    R8,RGAREA               CCW5 - TIC TO CCW3               25025108
         AR    R10,RGAREA              CCW6 - RD DATA INTO RDAREA       25025908
         STM   R0,R11,CCW              STORE IN BLDAREA WA              25026708
         SR    R0,R0                   ZERO ECB                         25028602
         LA    R2,ECBBLDL              MOVE AND RELOCATE IOB            25029002
         LA    R5,CCW                                                   25029402
         SR    R8,R8                   ZERO BLK INCR FIELD              25029802
         STM   R0,R8,ECBBLDL           ECB AND IOB TO WORKAREA          25029902
         MVI   IOBBLDL,X'02'           SET NON-RELATED FLAG             25030002
         LM    R6,R11,RDAREA           RESTORE REGISTERS                25033302
         LA    RGF,4(RGK)              PT TO NAME ARGUMENT              25035308
         AH    R0,0(RGK)               PICK UP NO. OF FIELDS            25035702
         BZ    H                       Q. TTR START SUPPLIED            25036102
         LR    RGA,RGK                 INIT USERS LIST                  25036502
BBB1     MVI   14(RGA),0               ZERO R FIELD                     25036602
         AH    RGA,2(RGK)              GO TO NEXT FIELD IN LIST         25036702
         BCT   0,BBB1                  Q. ANOTHER FIELD                 25037802
         LH    RGG,0(RGK)              GET NO. OF ENTRIES               25039802
BB1      SR    R0,R0                   SET TTR START TO ZERO            25039902
BB1A     IC    R0,ERCODE+2             INSERT C.N.                      25042002
         USING IHADCB,RGJ              GET ADDRESSIBILITY FOR DCB       25044002
BB2      L     R1,DCBDEBAD             GET DEB ADDRESS                  25044402
         LA    R2,MBB                  FOR RESULT MBBCCHHR              25044802
         LR    R3,RGAREA                                                25045402
         STM   R11,R15,RDAREA          SAVE VOLATILE REGISTERS          25045802
         L     R15,IECPCNVT            USE TTR CONVERT ROUTINE @YL026UD 25046202
         BALR  R14,R15                                                  25046602
         LTR   R15,R15                 WAS USER TTR VALID               25047202
         LM    R11,R15,RDAREA-FIRST(R3) RESTORE VOLATILE REGISTERS      25047602
         BNZ   BADIO                   BRANCH IF INVALID TTR            25048002
         LR    RGH,RGF                 POINT TO FIRST EMPTY ENTRY       25048402
         LR    RGI,RGG                 NO. OF ENTRIES REMAINING         25048502
         ST    RGJ,IOBBLDL+20          DCB ADDRESS INTO IOB             25048602
         A     RGH,SKEH                SEARCH CCW OP                    25048702
B1       ST    RGH,CCW4                INIT SEARCH                      25048802
         LR    R2,R15                  SAVE BASE                        25048902
         EXCP  IOBBLDL                                                  25049002
         DROP  RGBASE                                                   25049502
         USING BASE1,R2                                                 25049902
         WAIT  1,ECB=ECBBLDL                                            25050302
WAITLOOP TM    ECBBLDL,X'60'           CHECK COMPLETE AND ERROR BITS    25050402
         BZ    WAITLOOP                Q. NOT YET COMPLETE              25050602
         BO    GOODIO                  CONTINUE IF NO ERRORS            25050702
BADIO    LA    R15,8                   GET I/O ERROR CODE               25050802
         BR    RGRET                   RETURN                           25050902
GOODIO   EQU   *                                                        25051302
         LR    R15,R2                  RESTORE BASE                     25051702
         DROP  R2                                                       25052102
         USING BASE1,RGBASE                                             25052202
* SCAN DIRECTORY BLOCK                                                  25052302
         LA    R3,RDAREA               GET INPUT BLOCK ADDR    @YL026UD 25052502
         BCTR  R3,0                                                     25052602
         AH    R3,RDAREA               SET END ADDR-1                   25052702
         LA    R1,RDAREA+2             SET START ADDRESS                25052802
         LA    R0,31                   SET MASK FOR C BYTE              25052902
C        CLC   0(8,R1),0(RGH)          COMPARE NAMES                    25053002
         BE    D                       Q. FOUND                         25053302
         BH    G                       Q. NOT IN THIS SECTION           25053702
         IC    R2,11(R1)               GET USERS FIELD LENGTH           25054102
         NR    R2,R0                   MASK 3 H.O. BITS                 25054202
         LA    R2,12(R2,R2)            ENTIRE ENTRY LENGTH IN R2        25054302
         BXLE  R1,R2,C                 Q. MORE ENTRIES IN BLOCK         25054402
         MVC   CCHHR,NEWCNT            SET NEW START                    25054802
         B     B1                                                       25055202
*                                                                       25055302
D        MVC   8(3,RGH),8(R1)          MOVE TTR                         25055402
         IC    R4,11(R1)               GET C FROM DIRECTORY             25055502
         NR    R4,R0                   MASK 3 H.O. BITS                 25055602
         LH    R5,2(RGK)               GET USERS LL                     25055802
         SH    R5,C14                                                   25056202
         BM    E1                      Q. LL LESS THAN 14               25056602
         BXLE  R4,R4,E                                                  25056702
         LR    R4,R5                   USE REG 4                        25056802
E        EX    R4,BLDLMOVE             MOVE INTO USERS LIST             25056902
         MVC   12(1,RGH),ERCODE+3      GET Z                            25057002
E1       IC    R4,ERCODE+2             GET C.N.                         25057402
         STC   R4,11(RGH)              C.N. INTO USERS LIST             25057502
F        BCT   RGI,F2                  Q. ANOTHER LIST ENTRY            25057602
F1       LR    RGI,R15                 SAVE BASE                        25057702
         DROP  RGBASE                                                   25057802
         USING BASE1,RGI                                                25057902
         LH    R15,ERCODE                                               25058002
         BR    RGRET                   BRANCH TO RETURN        @YL026UD 25058202
*                                                                       25058302
         DROP  RGI                                                      25064802
         USING BASE1,RGBASE                                             25064902
F2       AH    RGH,2(RGK)              GO TO NEXT ENTRY                 25065202
         CLI   10(RGH),0               FIND NEXT ZERO R                 25065602
         BE    C                       Q. EMPTY ENTRY                   25065702
         B     F                       SEE IF ANOTHER EMPTY ENTRY       25065802
*                                                                       25066102
G        CLI   0(R1),X'FF'             CHECK FOR CONTINUATION POINTER   25066502
         BL    G1                      Q. NOT HIGH NAME                 25066902
         CLC   1(7,R1),0(R1)           MAKE SURE                        25067302
         BL    G1                      Q. REALLY NOT HIGH NAME          25067602
GG1      MVC   FNDLST3,8(R1)           GET TTR0 ON WORD BOUNDARY        25068002
         L     R0,FNDLST3                                               25068402
         SH    R0,H256                 DECREMENT R BY 1                 25068802
         BNM   BB1A                    Q. CONTINUATION POINTER          25069108
G1       CLI   ERCODE+1,4                                               25069502
         BE    E1                      Q. PREVIOUS ERROR                25069902
         LA    RGF,0(RGH)              POINT TO FIRST EMPTY ENTRY       25070302
*                                      ZERO H.O. BYTE                   25070702
         LR    RGG,RGI                 NO. OF ENTRIES REMAINING         25071102
         MVI   ERCODE+1,4              SET ERROR CODE 4                 25071502
         B     E1                                                       25071902
*                                                                       25072002
H        LA    RGG,R1                  SET FOR ONE ENTRY                25072102
         LR    R1,RGF                  MAKE MOVE AT GG1 WORK            25072202
         LR    RGH,RGF                 POINT TO ENTRY                   25072302
         LR    RGI,RGG                                                  25072402
         B     GG1                                                      25072502
*                                                                       25072602
         TITLE 'IGG0CLCC - CONSTANT DEFINITIONS'               @YL026UD 25072802
*                                                                       25073402
*********************************************************************** 25073502
*                                                                       25073602
* CONSTANTS FOR ALL EXCEPT RACHECK ROUTINE                              25073708
*                                                                       25074008
*********************************************************************** 25074108
         DS    0F                                                       25074202
CAMMASK1 DC    X'387F8000'             CHECK ALL BITS USED BY CATALOG   25074602
ONELVLMK DC    X'00198000'             CHECK FOR ONE LEVEL OPERATION    25075002
FFFF     DC    X'0000FFFF'                                     @Z30AAEH 25075100
QNAM     DC    CL8'SYSCTLG '           ENQ NAME                         25075402
SPNBYTES DS    0F                      PUT ON FULL WORD BOUNDARY        25075802
         DC    AL1(253)                SUBPOOL ID                       25076202
         DC    AL3(AREAEND-DCBAREA)    GET SIZE OF AREA        #YL026UD 25076602
ENABLE   DC    X'FF'                   SSM MASK                         25077002
ZEROVOLS DC    6X'00'                  VOLUME ID                YA00090 25077402
MSG1     WTO   'IEC340I - IGG0CLCC, INSUFFICIENT STORAGE FOR THE CATALOX25077508
               G WORKAREA',ROUTCDE=(11),MF=L                   @OZ30106 25077608
MOVENAME MVC   HILVLNAM(0),0(NAMPSAV)                                   25077802
MOVELVL  MVC   NAME(0),0(R2)           MOVE LEVEL NAME                  25078202
H01      DC    H'01'                                                    25078502
ZEROS    DC    X'F0F0'                                                  25080602
MINUS    DC    X'D0'                                                    25082702
MOVE1    MVC   0(0,R3),0(R11)          MOVE SECOND THRU LAST LEVELS     25084802
MOVE2    MVC   1(0,R3),0(R3)           BLANK USER NAME AREA             25086902
PACK1    PACK  PKDNUMBR,0(0,R2)        PACK THE RELATIVE NUMBER         25089002
RPSDDK   DC    X'01000800'             RPS THETA CONVERT CONSTANT       25091102
*                                                                       25092402
BLDLMOVE MVC   13(1,RGH),11(R1)        BLDL MOVE                        25092802
C14      DC    H'14'                                                    25092902
*                                                                       25093202
RACFADDR DC    A(RACHK)                RACHECK ROUTINE         @Z40CSRC 25094208
IGG0CLCD DC    V(IGG0CLCD)                                     @YL026UD 25095302
ERRORMOD DC    V(IGG0CLC7)                                     @YL026UD 25097402
OPENMOD  DC    V(IGC0002H)                                     @YL026UD 25099502
ESTAEXIT DC    V(ESTAEXIT)                                     @YL026UD 25101602
ALLOCRTN DC    V(IGG0CL1A)             ALLOCATION ROUTINE      @Z40CSRC 25101908
*                                                                       25103702
         TITLE 'IGG0CLCC - CHANNEL COMMAND WORD DEFINITIONS'   @YL026UD 25107802
*                                                                       25107902
*       CHANNEL COMMAND WORDS                                           25110002
*                                                                       25120002
*      THE FIRST TWO CCW'S POSITION TO A RECORD                         25130002
         DS    0F                      ALIGN ON WORD BOUNDARY           25140002
FIRST5   EQU   *                                                        25150002
CCWSIDE1 EQU   *                                                        25160002
         DC    X'31'                  SEARCH ID EQUAL                   25170002
         DC    AL3(IOBSKADD+3-WORKAREA)    POINT TO IOB CCHHR           25180002
         DC    X'4000'                 COMMAND CHAIN ON                 25190002
         DC    H'5'                    COMPARE 5 BYTES                  25200002
*                                                                       25210002
CCWTIC1  EQU   *                                                        25220002
         DC    X'08'                   TIC TO SIDE1                     25230002
         DC    AL3(SIDE1-WORKAREA)     POINT TO CCWSIDE1                25240002
*      MUST KEEP THE FOLLOWING 0 SINCE IT IS USED BY CCWSKE AND CCWNOP  25250002
         DC    F'0'                    USUALLY ZERO FOR TIC             25260002
*                                                                       25270002
READATA  EQU   *                                                        25280002
*                                                                       25290002
*      USED TO READ VICE, ICE AND FIRST PART OF AN EMPTY BLOCK          25300002
*                                                                       25310002
         DC    X'06'                   READ DATA                        25320002
*      READS 24 BYTES INTO THE TEMPORARY BUFFER IN THE SAVEAREA         25330002
         DC    AL3(TEMPBUFF-WORKAREA)                                   25340002
         DC    X'2000'                 SUPPRESS INCORRECT LENGTH        25350002
         DC    H'24'                   READ 24 BYTES                    25360002
*                                                                       25370002
CCWRC    EQU   *                       READ COUNT                       25380002
         DC    X'92'                   MULTI-TRACK OPERATION            25390002
         DC    AL3(NEXTCNT-WORKAREA)   POINT TO INPUT BUFFER            25400002
         DC    X'4000'                 COMMAND CHAIN ON                 25410002
         DC    H'8'                    READ 8 BYTES                     25420002
*                                                                       25430002
*      THE NEXT FOUR CCW'S ARE USED TO FIND THE NEXT AVAILABLE BLK      25440002
*      (HAS 0 KEY) IN THE CATALOG BY DOING A SEQUENTIAL SEARCH FROM     25450002
*      THE OLD FIRST AVAILABLE BLOCK.                                   25460002
CCWSKE   EQU   *                                                        25470002
         DC    X'29'                  SEARCH KEY EQUAL (TO 0)           25480002
         DC    AL3(TIC1+4-WORKAREA)    POINT TO 4 BYTES OF 0            25490002
*      COMMAND CHAINING AND SUPPRESS INCORRECT LENGTH                   25500002
         DC    X'6000'                                                  25510002
         DC    H'4'                    COMPARE ONLY FOUR BYTES          25520002
*                                                                       25530002
SECOND5  EQU   *                                                        25540002
CCWTIC2  EQU   *                                                        25550002
         DC    X'08'                   TIC TO READ COUNT                25560002
         DC    AL3(RC-WORKAREA)        POINT TO READ COUNT CCW          25570002
         DC    F'0'                    USUALLY ZERO FOR TIC             25580002
*                                                                       25590002
CCWNOP   EQU   *                                                        25600002
*                                                                       25610002
*      AFTER A KEY MATCH AT CCWSKE, THIS CCW IS EXECUTED                25620002
*                                                                       25630002
         DC    X'03'                   CCW NOP                          25640002
         DC    AL3(TIC1+4-WORKAREA)    SEE REMARK BELOW                 25650002
         DC    X'2000'                 SUPPRESS INCORRECT LENGTH        25660002
         DC    H'4'                    SEE REMARK BELOW                 25670002
*      THE ABOVE CCW OPCODE IS MODIFIED AND ALSO USED AS A WKD.         25680002
*                                                                       25690002
*      THE NEXT CCW WRITE VERIFIES (I.E. READS WHAT WAS JUST            25700002
*      WRITTEN TO CHECK CYCLIC BITS ON THE DEVICE).                     25710002
*                                                                       25720002
CCWRKD   EQU   *                                                        25730002
         DC    X'0E'                   READ KEY AND DATA                25740002
         DC    AL3(OUTPUT-WORKAREA)    POINT TO 'OUTPUT' BUFFER         25750002
*      SUPPRESS TRANSFER TO MAIN-STORAGE AND SUPPRESS INCORRECT LENGTH  25760002
         DC    X'3000'                                                  25770002
         DC    H'264'                  KEY LEN PLUS DATA LEN            25780002
*                                                                       25790002
CCWRD    EQU   *                                                        25800002
         DC    X'06'                   READ A DATA BLOCK                25810002
         DC    AL3(INPUT-WORKAREA)     READ INTO INPUT BUFFER           25820002
         DC    F'256'                  ALL FLAGS OFF AND READ 1 BLOCK   25830002
*                                                                       25840002
CCWWKD   EQU   *                                                        25850002
         DC    X'0D'                   WRITE KEY AND DATA               25860002
         DC    AL3(OUTPUT-WORKAREA)    WRITE FROM OUTPUT BUFFER         25870002
         DC    F'264'                  ALL FLAGS OFF-- WRITE KEY DATA   25880002
*                                                                       25890002
         DS    0F                                                       25900002
RPSCCWS  EQU   *                                                        25910002
*                                                                       25920002
CCWSS    EQU   *                                                        25930002
         DC    X'23'                   SET SECTOR                       25940002
         DC    AL3(THETA-WORKAREA)     POINT TO RPS THETA               25950002
         DC    X'4000'                 COMMAND CHAINING                 25960002
         DC    H'1'                    BYTE COUNT 1 FOR THETA           25970002
*                                                                       25980002
CCWTIC3  EQU   *                                                        25990002
*                                                                       26000002
*      TIC TO NORMAL CHANNEL PROGRAM (CCWSIDE1)                         26010002
*                                                                       26020002
         DC    X'08'                   TIC CCW                          26030002
         DC    AL3(CHPROG-WORKAREA)    POINT TO USUAL CCW LIST          26040002
         DC    F'0'                    USUALLY ZERO FOR TIC             26050002
*                                                                       26060002
THREE    DC    H'3'                    COMPARE TO LEVELCNT FOR UCATDX   26070002
CCDZERO  DC    CL4'0000'                 CHARACTER ZERO        @ZA01897 26080002
         EJECT                                                          26090002
CHANPROG DS    0F                                                       26092002
*CCW1                                                                   26094002
         DC    X'31'                   SEARCH ID EQUAL                  26096002
         DC    AL3(0+CCHHR-FIRST)                                       26098002
         DC    X'4000'                 COMMAND CHAIN                    26098402
         DC    H'5'                    COUNT                            26098802
*CCW2                                                                   26099202
         DC    X'08'                   TIC                              26099602
         DC    AL3(0+CCW1-FIRST)                                        26099702
         DC    F'0'                                                     26099802
*CCW3                                                                   26099902
         DC    X'92'                   RD COUNT, M/T                    26103202
         DC    AL3(NEWCNT-FIRST)                                        26105202
         DC    X'4000'                                                  26105602
         DC    H'8'                                                     26106002
*CCW4                                                                   26106402
SKEH     DC    X'69'                   SEARCH EQUAL HI KEY              26106502
         DC    AL3(0)                                                   26106602
         DC    X'4000'                 COMMAND CHAIN                    26109902
         DC    H'8'                    COUNT                            26111902
*CCW5                                                                   26112302
         DC    X'08'                   TIC                              26112702
         DC    AL3(0+CCW3-FIRST)                                        26113102
         DC    F'0'                                                     26113202
*CCW6                                                                   26113302
         DC    X'06'                   READ DATA                        26116602
         DC    AL3(0+RDAREA-FIRST)                                      26118602
         DC    H'0'                                                     26119002
H256     DC    H'256'                                                   26119402
*                                                              @YL026UD 26119502
*                                                              @YL026UD 26122002
*      MODULE PATCH AREA (MAINTENANCE AREA)                    @YL026UD 26124002
*                                                              @YL026UD 26124402
         DS    0H                                                       26124808
FIXAREA  DC    100C'Z'                                         @YL026UD 26125308
*                                                                       26125808
         TITLE 'IGG0CLCC - CONSTANT EQUATE DEFINITIONS'        @YL026UD 26126308
*                                                                       26127502
*                                                                       26130002
*      CONSTANT EQUATES                                                 26132502
*                                                                       26135002
VICETYP  EQU   5                       VICE TYPE CODE                   26137502
ICETYP   EQU   3                       ICE TYPE CODE                    26140002
ILETYP   EQU   0                       ILE TYPE CODE                    26150002
IPETYP   EQU   0                       IPE TYPE CODE                    26160002
DSPETYP  EQU   7                       OR MORE, FOR DSPE TYPE CODE      26170002
VCBPETYP EQU   1                       VCBPE TYPE CODE                  26180002
OCVOLTYP EQU   3                       OLD CVOL TYPE CODE               26190002
NCVOLTYP EQU   5                       NEW CVOL TYPE CODE               26200002
ALIASTYP EQU   4                       ALIAS TYPE CODE                  26210002
GIPETYP  EQU   2                       GIPE TYPE CODE                   26220002
ERROR00  EQU   0                                                        26230002
ERROR04  EQU   4                                                        26240002
ERROR08  EQU   8                                                        26250002
ERROR12  EQU   12                                                       26260002
ERROR16  EQU   16                                                       26270002
ERROR20  EQU   20                                                       26280002
ERROR24  EQU   24                                                       26290002
ERROR28  EQU   28                                                       26300002
ERROR72  EQU   72                                                       26320002
*********************************************************************** 26330002
*      CHARACTER CODE DEPENDENT CONSTANTS                               26340002
*********************************************************************** 26350002
CCDBLANK EQU   C' '                                                     26360002
CCDRPARN EQU   C')'                                                     26370002
CCDMINUS EQU   C'-'                                                     26380002
CCDPLUS  EQU   C'+'                                                     26390002
CCD0     EQU   C'0'                                                     26400002
CCDG     EQU   C'G'                                                     26410002
CCDV     EQU   C'V'                                                     26420002
CCDPERD  EQU   C'.'                                                     26430002
CCDLPARN EQU   C'('                                                     26440002
*********************************************************************** 26450002
CODPERD  EQU   4                                                        26460002
CODBLANK EQU   8                                                        26470002
CODPARN  EQU   12                                                       26480002
CLC1     EQU   C'1'                                                     26490002
CLC2     EQU   C'2'                                                     26500002
CLC3     EQU   C'3'                                                     26510002
CLC4     EQU   C'4'                                                     26520002
CLC5     EQU   C'5'                                                     26530002
CLC6     EQU   C'6'                                                     26540002
CLC7     EQU   C'7'                                                     26550002
EXIT     EQU   3                                                        26560002
FREEMAIN EQU   10                                                       26570002
GETMAIN  EQU   10                                                       26600002
FIRSTBLK EQU   256                                                      26610002
RPSBIT   EQU   X'10'                                                    26620002
BLDLCON  EQU   76                                                       26634002
CELLTYPE EQU   5                                                        26634502
DBLWD    EQU   X'07'                                                    26634902
ENDLIST  EQU   X'FF'                                                    26635302
REC1     EQU   1                                                        26635402
*                                                                       26635702
X00      EQU   X'00'                                                    26636202
X01      EQU   X'01'                                                    26636702
X02      EQU   X'02'                                                    26638002
X48      EQU   X'48'                                                    26638102
XF0      EQU   X'F0'                                                    26638402
XFF      EQU   X'FF'                                                    26638802
X0100    EQU   X'0100'                                                  26639202
D01      EQU   1                                                        26641202
D02      EQU   2                                                        26643202
D08      EQU   8                                                        26645202
D09      EQU   9                                                        26645602
D12      EQU   12                                                       26645702
D17      EQU   17                                                       26646002
D28      EQU   28                                                       26646402
D44      EQU   44                                                       26646502
D62      EQU   62                                                       26646808
D96      EQU   96                                                       26647008
D256     EQU   256                                                      26647702
D264     EQU   264                                                      26648102
*                                                                       26680002
POMASK   EQU   X'02'    MASK INDICATING PARTITIONED ORGANIZATION        26682002
OUTMASK  EQU   X'0F'    MASK INDICATING NOT INPUT PROCESSING            26684002
         TITLE 'IGG0CLCC - REGISTER EQUATE DEFINITIONS'        @YL026UD 26692002
*                                                                       26700002
*      REGISTER EQUATES                                                 26710002
*                                                                       26720002
R0       EQU   0                                                        26730002
R1       EQU   1                                                        26740002
R2       EQU   2                                                        26750002
R3       EQU   3                                                        26760002
R4       EQU   4                       BASE REGISTER FOR ALL MODULES    26770002
R5       EQU   5                                                        26780002
R6       EQU   6                       WORKAREA BASE REGISTER           26790002
R7       EQU   7                                                        26800002
R8       EQU   8                       CAMLST POINTER                   26810002
R9       EQU   9                                                        26820002
R10      EQU   10                                                       26830002
R11      EQU   11                                                       26840002
R12      EQU   12                      SECONDARY LINKAGE REGISTER       26850002
R13      EQU   13                      BLDL WORKAREA BASE REGISTER      26860002
R14      EQU   14                      PRIMARY LINKAGE REGISTER         26870002
R15      EQU   15                                                       26880002
*                                                                       26890002
BALREG1  EQU   R14                                                      26900002
BALREG2  EQU   R12                                                      26910002
BALREG3  EQU   R5                                                       26912002
BASE     EQU   R4                                                       26920002
*                                                                       26922002
UCBTABP  EQU   R12                     POINTS TO UCB LOOK UP TABLE      26924002
UCBPTR   EQU   R11                     POINTS TO UCB                    26926002
HILVLEN  EQU   R9                      HIGH LEVEL NAME LENGTH           26928402
NXTDISP  EQU   R9                      NEXT DISPLACEMENT                26928802
SAVDELP  EQU   R9                                                       26929202
DLPTR    EQU   R10                     PTR TO DISP & LEN FIELDS         26929602
NAMENDP  EQU   R14                     END OF LARGEST ALLOWABLE NAME    26929702
LEVELPTR EQU   R12                     POINTS TO THE LEVEL NAME         26929802
NAMPSAV  EQU   R7                      SAVES THE POINTER TO THE         26929902
LEVELCTR EQU   R15                     LEVEL COUNTER                    26933202
ONELVLSW EQU   R0                      ONE LEVEL SWITCH                 26935202
TLOCSW   EQU   R7                      TEMPORARY LOCATE SWITCH          26935602
LEVELCNT EQU   R7                                                       26940002
ERRLOC   EQU   R3                                                       26950002
TABLEPTR EQU   R9                                                       26960002
Q        EQU   R9                                                       26972002
TRULEN   EQU   R10                                                      26974002
POINT    EQU   R10                                                      26976002
NEWENTRY EQU   R7                                                       26978002
*                                                                       26978102
RGADDR   EQU   0                                                        26978202
RGDCB    EQU   1                                                        26978302
RGA      EQU   2                                                        26980602
RGB      EQU   3                                                        26982602
RGC      EQU   4                                                        26983002
RGD      EQU   5                                                        26985802
RGE      EQU   6                                                        26987802
RGF      EQU   7                                                        26988202
RGG      EQU   8                                                        26988602
RGH      EQU   9                                                        26988702
RGI      EQU   10                                                       26989102
RGJ      EQU   11                                                       26989502
RGK      EQU   12                                                       26989902
RGAREA   EQU   13                                                       26992702
RGRET    EQU   14                                                       26994702
RGBASE   EQU   15                                                       26995102
*                                                                       26996002
DISABLE  EQU   ONELVLMK                                                 26998802
*                                                                       27001602
*********************************************************************** 27004402
*                                                                     * 27007202
         TITLE 'IGG0CLCC - RACF AUTHORIZATION CHECKING ROUTINE'         27010008
*********************************************************************** 27010508
*                                                              @Z40CSRC 27010908
RACHK    EQU   *                       RACHECK ROUTINE         @Z40CSRC 27011308
*                                                              @Z40CSRC 27011708
*********************************************************************** 27012108
*                                                              @Z40CSRC 27013008
*  FUNCTION:                                                   @Z40CSRC 27013508
*        CHECK AUTHORIZATION VIA RACF                          @Z40CSRC 27014008
*                                                              @Z40CSRC 27014508
*  INPUT:                                                      @Z40CSRC 27015008
*        R4 - MODULE BASE ADDRESS                              @Z40CSRC 27015108
*        R6 - OS CATALOG WORK AREA ADDR                        @Z40CSRC 27015508
*        R8 - CAMLST ADDR                                      @Z40CSRC 27016008
*        R13 - BLDL AREA ADDR                                  @Z40CSRC 27016508
*        R14 - RETURN ADDR                                     @Z40CSRC 27017008
*                                                              @Z40CSRC 27017508
*  OUTPUT:                                                     @Z40CSRC 27018008
*        R15 - RETURN CODE -- 0=OK, 4=NOT AUTHORIZED.          @Z40CSRC 27018508
*        ERRLOCSV=8 AND NAMLF=56 IF NOT AUTHORIZED             @Z40CSRC 27019008
*                                                              @Z40CSRC 27019508
*  DESTROYED:                                                  @Z40CSRC 27020008
*        REGISTER R15 (OTHER REGISTERS ARE PRESERVED)          @Z40CSRC 27020508
*        CC3SAV1A, CC3RACHK,                                   @Z40CSRC 27021008
*                                                              @Z40CSRC 27021508
****************                                               @Z40CSRC 27022008
*                                                              @Z40CSRC 27022508
         USING WORKAREA,R6             WORK AREA ADDRESSABLE   @Z40CSRC 27023008
         USING CAMLSTD,R8              CAMLST ADDRESSABLE      @Z40CSRC 27023508
         USING BLDLAREA,R13            BLDL AREA ADDRESSABLE   @Z40CSRC 27024008
*                                                              @Z40CSRC 27024508
         L     R15,CWAP                GET ADDR OF CC3 WK AREA @Z40CSRC 27025008
         USING CC3WA,R15               CC3 WK AREA ADDRESSABLE @Z40CSRC 27025508
         STM   R0,R14,CC3SAV1A         SAVE REGISTERS          @Z40CSRC 27026008
         LR    R12,R15                 COPY ADDR OF CC3WA      @Z40CSRC 27026508
         DROP  R15                     CEASE USING CC3WA,R15   @Z40CSRC 27027008
         USING CC3WA,R12               ADDRESS CC3WA VIA R12   @Z40CSRC 27027508
         BALR  R9,R0                   SET BASE REG.           @Z40CSRC 27028008
         USING *,R9                    CODE ADDRESSABLE        @Z40CSRC 27028508
         MVI   CC3NAMSV,X00            SHOW NO NAME SAVED YET  @Z40CSRC 27028608
*                                                              @Z40CSRC 27029008
*   INITIALIZE RACHECK PARAMETER LIST                          @Z40CSRC 27029508
*                                                              @Z40CSRC 27030008
         MVC   CC3RACHK(ACHKLEN),RACHKMDL MOVE IN DEFAULTS     @Z40CSRC 27030508
         LA    R7,CC3RACHK             ADDR OF PARM AREA       @Z40CSRC 27031008
         USING ACHKLIST,R7             PARM AREA ADDRESSABLE   @Z40CSRC 27031508
         L     R14,CAMPTR1             GET ADDR OF DSNAME      @Z40CSRC 27032008
         ST    R14,ACHKENTW            ENTITY NAME ADDR        @Z40CSRC 27032508
*                                                              @Z40CSRC 27033008
*   CHECK FOR CATALOGING A GDG GENERATION                      @Z40CSRC 27034008
*                                                              @Z40CSRC 27034508
         TM    CAMOPTN1,CAMCAT         CATALOG REQUEST         @Z40CSRC 27035008
         BNO   NOTCATG                 NO, SKIP CAT CODE       @Z40CSRC 27035508
         MVI   ACHKFLG2,ACHKTUPD       SET UPDATE LEVEL        @Z40CSRC 27036008
*                                                              @Z40CSRC 27036508
*   TEMPORARILY BLANK OUT '.G----V--' IN GENERATION NAME       @Z40CSRC 27037008
*                                                              @Z40CSRC 27037508
         L     R14,NAMLSTP             GET ADDR OF LAST        @Z40CSRC 27038008
*                                      ENTRY IN NAME TABLE     @Z40CSRC 27038508
         SR    R15,R15                 CLEAR REG.              @Z40CSRC 27039008
         IC    R15,X00(,R14)           GET OFFSET TO LAST      @Z40CSRC 27039508
*                                      QUALIFIER OF NAME       @Z40CSRC 27040008
         BCTR  R15,R0                  GET OFFSET TO LAST '.'  @Z40CSRC 27040508
         A     R15,CAMPTR1             ADDR OF LAST '.'        @Z40CSRC 27041008
         MVC   X00(GVLEN,R15),CCDBLKS  BLANK .G----V--         @Z40CSRC 27041508
         LA    R14,VOLSN               ADDR OF VOLSER          @Z40CSRC 27042008
         B     RACSETUP                GO SET UP FOR RACHECK   @Z40CSRC 27042508
*                                                              @Z40CSRC 27043008
NOTCATG  EQU   *                       NOT CATLG GDG           @Z40CSRC 27043508
*                                                              @Z40CSRC 27044008
*   CHECK FOR DRPX                                             @Z40CSRC 27044508
*                                                              @Z40CSRC 27045008
         TM    CAMOPTN3,CAMDRPX        IS IT DRPX              @Z40CSRC 27045508
         BNO   NOTDRPX                 NO, SKIP DRPX CODE      @Z40CSRC 27046008
         LA    R14,CCDCNAME            ADDR OF 'SYSCTLG'       @Z40CSRC 27046508
         ST    R14,ACHKENTW            STORE ENTITY NAME       @Z40CSRC 27047008
         MVI   ACHKFLG2,ACHKTALT       MUST BE ALTER OWNER     @Z40CSRC 27047508
         LA    R14,CVPEVOLS            GET ADDR OF VOLSER      @Z40CSRC 27048008
         CLI   TYPEB,OCVOLTYP          WAS THIS CVOL POINTER   @Z40CSRC 27048508
*                                      CREATED BEFORE OS       @Z40CSRC 27049008
*                                      RELEASE 17              @Z40CSRC 27049508
         BNE   RACSETUP                NO, GO SET UP FOR RACF  @Z40CSRC 27050008
         LA    R14,DATAB               ADDR OF VOLSER--OLD TYP @Z40CSRC 27050508
         B     RACSETUP                GO SET UP FOR RACHECK   @Z40CSRC 27051008
*                                                              @Z40CSRC 27051508
NOTDRPX  EQU   *                       NOT DRPX REQUEST        @Z40CSRC 27052008
*                                                              @Z40CSRC 27052508
*   SET AUTHORIZATION LEVEL FOR UNCATALOG & RECATALOG          @Z40CSRC 27053008
*                                                              @Z40CSRC 27053508
         TM    CAMOPTN1,CAMRECAT       IS IT RECAT             @Z40CSRC 27054008
         BNO   NOTRECAT                NO, SKIP RECAT CODE     @Z40CSRC 27054508
         MVI   ACHKFLG2,ACHKTUPD       SET UPDATE AUTH LEVEL   @Z40CSRC 27055008
         B     GETVOLS                 GO GET VOL SER          @Z40CSRC 27055508
*                                                              @Z40CSRC 27056008
NOTRECAT EQU   *                       NOT RECAT REQUEST       @Z40CSRC 27056508
         TM    CAMOPTN1,CAMUNCAT       IS IT UNCAT             @Z40CSRC 27057008
         BNO   RACSETUP                NO, GO SET UP RACHECK   @Z40CSRC 27057508
         MVI   ACHKFLG2,ACHKTALT       SET ALTER OWNER LEVEL   @Z40CSRC 27058008
*                                                              @Z40CSRC 27058508
*   GET 1ST VOLSER OF DATA SET                                 @Z40CSRC 27059008
*                                                              @Z40CSRC 27059508
GETVOLS  EQU   *                       GET VOLSER CODE         @Z40CSRC 27060008
         LA    R14,DSPEVOL1            ASSUME ENTRY IS DSPE    @Z40CSRC 27060508
         CLI   TYPEB,VCBPETYP          IS IT REALLY A VCBPE    @Z40CSRC 27061008
         BNE   RACFSTUP                NO ,DO RACHECK          @G32DSFS 27061532
*                                                              @Z40CSRC 27062532
*   READ IN VCB TO GET VOLSER                                  @Z40CSRC 27062632
*                                                              @Z40CSRC 27063008
         MVC   CC3NAMSV,NAME           SAVE NAME               @Z40CSRC 27063508
         MVC   CC3TTRSV,ICETTR         SAVE TTR OF CURRENT REC @Z40CSRC 27064008
*                                      (IS ZERO IF IN VICE)    @Z40CSRC 27064108
         L     R15,AREADBLK            GET ADDR OF BLK RD RTN  @Z40CSRC 27064508
         BALR  BALREG3,R15             GO READ BLOCK           @Z40CSRC 27065008
         L     R12,CWAP                RESTORE CC3WA ADDR      @Z40CSRC 27065208
         LA    R14,VCBVOL1             POINT TO 1ST VOLSER     @Z40CSRC 27065508
*                                                              @Z40CSRC 27066008
*   INVOKE RACF TO CHECK AUTHORIZATION                         @Z40CSRC 27066508
*                                                              @Z40CSRC 27067008
RACFSTUP EQU   *                       TEST FOR TAPE           @G32DSFS 27067532
*                                                              @G32DSFS 27067632
         LR    R15,R14                 TYPE FIELD +2           @G32DSFS 27067732
         SH    R15,TYPEOFF             TYPE FIELD PTR          @G32DSFS 27067832
         TM    0(R15),UCB3TAPE         IS DEV TYPE EQU TAPE    @G32DSFS 27067932
         BZ    RACSETUP                NOT TAPE DEVICE         @G32DSFS 27068032
*                                                              @G32DSFS 27068132
         L     R15,CVTPTR              LOAD CVT ADDRESS        @G32DSFS 27068232
         USING CVT,R15                 CVT ADDRESSABILITY      @G32DSFS 27068332
         L     R15,CVTRAC              LOAD RACF CVT ADDRESS   @G32DSFS 27068432
         LTR   R15,R15                 RACF ACTIVE             @G32DSFS 27068532
         BZ    PASTRERR                RACF NOT ACTIVE         @G32DSFS 27068632
         USING RCVT,R15                RCVT ADDRESSABILITY     @G32DSFS 27068732
         TM    RCVTSTA1,RCVTTAPE       TEST FOR TAPE VOLUME    @G32DSFS 27068832
         BZ    PASTRERR                NOT TAPE VOLUME         @G32DSFS 27068932
*                                                              @G32DSFS 27069032
         STCM  R14,B'0111',ACHKENT     VOLSER INTO ENTITY      @G32DSFS 27069132
         LA    R14,TAPEVOL             TAPE VOL CLASS NAME     @G32DSFS 27069232
         STCM  R14,B'0111',ACHKCLN     CLASS NAME INTO LIST    @G32DSFS 27069332
         SR    R14,R14                 VOLSER @ ZERO FOR TAPE  @G32DSFS 27069432
*                                                              @G32DSFS 27069532
RACSETUP EQU   *                       RACHECK SET UP          @Z40CSRC 27069632
         RACHECK VOLSER=(R14),MF=(E,(R7))                      @G32DSFS 27069732
         LA    R14,ERROR08             LOAD COMPARISON VALUE   @Z40CSRC 27069832
         CR    R15,R14                 TEST IF UNAUTHORIZED    @Z40CSRC 27069932
         BNE   PASTRERR                BR IF NOT UNAUTHORIZED  @Z40CSRC 27070032
         MVI   ERRCATSV,ERROR08        SET ERROR RETURN CODE   @Z40CSRC 27070132
         MVI   ERRLOCSV,X00            CLEAR LOCATE RET CODE   @Z40CSRC 27070232
         MVI   NAMLF+D01,RACREASN      SET REASON CODE TO BE   @Z40CSRC 27070332
*                                      RETURNED TO USER IN R0  @Z40CSRC 27070508
*                                                              @Z40CSRC 27071008
PASTRERR EQU   *                       BEYOND RACF ERROR CODE  @Z40CSRC 27071508
*                                                              @Z40CSRC 27072008
*   REFRESH IN-CORE CATALOG RECORD                             @Z40CSRC 27072508
*                                                              @Z40CSRC 27073008
         CLI   CC3NAMSV,X00            IS REFRESHING NEEDED    @Z40CSRC 27073208
         BE    PASTREFR                NO, SKIP REFR CODE      @Z40CSRC 27074008
         MVC   NAME,CC3NAMSV           RESTORE NAME FOR BLDL   @Z40CSRC 27074508
         L     R15,CC3TTRSV            GET ORIGINAL TTR        @Z40CSRC 27074708
         ST    R15,TTR0                SET TTR FOR BLDL        @Z40CSRC 27074908
         LTR   R15,R15                 IS TTR ZERO             @Z40CSRC 27075108
         BNZ   BLCALL                  BRANCH IF TTR NON-ZERO  @Z40CSRC 27075308
         MVI   TTR0+D02,REC1           SET TO START AT 1ST REC @Z40CSRC 27075408
*                                                              @Z40CSRC 27075608
BLCALL   EQU   *                       SET UP TO CALL BLDL     @Z40CSRC 27075708
         L     R15,ABLDLCAL            GET ADDR OF BLDL RTN    @Z40CSRC 27075808
         BALR  BALREG3,R15             GO READ ORIG ENTRY      @Z40CSRC 27076008
         L     R12,CWAP                RESTORE CC3WA ADDRESS   @Z40CSRC 27076208
*                                                              @Z40CSRC 27076508
PASTREFR EQU   *                       PAST REFRESH CODE       @Z40CSRC 27077008
*                                                              @Z40CSRC 27077508
*   RESTORE LAST QUALIFIER OF GDG GENERATION                   @Z40CSRC 27078008
*                                                              @Z40CSRC 27078508
         TM    CAMOPTN1,CAMCAT         IS IT CATLG GDG         @Z40CSRC 27079008
         BNO   RACLNUP                 NO, GO CLEAN UP         @Z40CSRC 27079508
         L     R14,NAMLSTP             PT TO LAST IN NAME TBL  @Z40CSRC 27079608
         SR    R15,R15                 CLEAR REG.              @Z40CSRC 27079708
         IC    R15,X00(,R14)           OFFSET TO LAST QUAL.    @Z40CSRC 27079808
         A     R15,CAMPTR1             ADDR OF LAST QUALIFIER  @Z40CSRC 27079908
         MVC   X00(L'NAME,R15),NAME    MOVE IN NAME            @Z40CSRC 27080108
         XC    D01(4,R15),MASKFF       RESTORE TO TRUE NAME    @OZ20755 27080208
         BCTR  R15,R0                  POINT TO PERIOD SPOT    @Z40CSRC 27080308
         MVI   X00(R15),CCDPERD        MOVE IN '.'             @Z40CSRC 27080408
*                                                              @Z40CSRC 27080508
*   CLEANUP FOR RACF ROUTINE                                   @Z40CSRC 27080608
*                                                              @Z40CSRC 27080708
RACLNUP  EQU   *                       CLEANUP                 @Z40CSRC 27080808
         LM    R0,R14,CC3SAV1A         RESTORE REGISTERS       @Z40CSRC 27080908
         DROP  R7,R9,R12               ADDRESSABILITY ENDS     @Z40CSRC 27081008
         SR    R15,R15                 ASSUME SUCCESS          @Z40CSRC 27081108
         CLI   NAMLF+D01,RACREASN      IS USER UNAUTHORIZED    @Z40CSRC 27081208
         BNER  R14                     NO, RETURN              @Z40CSRC 27081308
         LA    R15,ERROR04             SET RETURN CODE         @Z40CSRC 27081408
         BR    R14                     RETURN                  @Z40CSRC 27081508
*                                                              @Z40CSRC 27081608
*   EQUATES FOR RACF ROUTINE                                   @Z40CSRC 27081708
*                                                              @Z40CSRC 27081808
RACSHFT  EQU   28                      RACF REG CD SHIFT VALUE @Z40CSRC 27082108
RACREASN EQU   56                      RACF REASON CODE        @Z40CSRC 27082208
GVLEN    EQU   9                       LENGTH OF .G----V--     @Z40CSRC 27082308
*                                                              @Z40CSRC 27082508
*********************************************************************** 27082608
*   CONSTANTS FOR RACF ROUTINE                                 @Z40CSRC 27082708
*********************************************************************** 27082808
*                                                              @Z40CSRC 27082908
CCDBLKS  DC    CL9' '                  BLANKS                  @Z40CSRC 27083008
CCDCNAME DC    CL44'SYSCTLG'           CVOL NAME               @Z40CSRC 27083108
CLASNAME DC    AL1(L'CCDCLASS)         LENGTH OF CLASS NAME    @Z40CSRC 27083232
CCDCLASS DC    C'DATASET'              CLASS NAME--MUST FOLLOW @Z40CSRC 27083332
*                                      LENGTH                  @G32DSFS 27083432
TAPEVOL  DC    AL1(L'TAPE)             LENGTH OF CLASS NAME    @G32DSFS 27083532
TAPE     DC    C'TAPEVOL'              CLASS NAME--MUST FOLLOW @G32DSFS 27083632
*                                      LENGTH                  @Z40CSRC 27083732
TYPEOFF  DC    H'2'                    DISP TO GET TO TYPE FLD @G32DSFS 27083832
AREADBLK DC    A(READBLK)              READ BLOCK RTN          @Z40CSRC 27083932
ABLDLCAL DC    A(BLDLCALL)             BLDL CALLING RTN        @Z40CSRC 27084032
*********************************************************************** 27084132
RACHKMDL RACHECK CLASS=CLASNAME,DSTYPE=N,MF=L                  @Z40CSRC 27084232
*                                                                       27084332
* END OF IGG0CLCC CSECT                                               * 27084432
CLCCSIZE EQU   *                                                      * 27084532
         TITLE 'IGG0CLCC - RACHECK PARAMETER LIST'             @Z40CSRC 27084632
         ICHACHKL                                              @Z40CSRC 27084732
*********************************************************************** 27084832
         TITLE 'IGG0CLCC - RACF CVT DSECT DEFINITIONS'         @Z40CSRC 27084932
         ICHPRCVT                                              @Z40CSRC 27085032
         TITLE 'IGG0CLCC - CATALOG CONTROLLER III WORK AREA'   @Z40CSRC 27085632
*                                                              @Z40CSRC 27085732
*  CATALOG CONTROLLER III WORK AREA                            @Z40CSRC 27085832
*                                                              @Z40CSRC 27085932
*        THIS AREA IS OBTAINED BY IGC0002F                     @Z40CSRC 27086032
*        AND FREED BY IGC0002F AND IGG0CLCA.                   @Z40CSRC 27086132
*        FOR A DESCRIPTION OF THE RESERVED FIELDS              @Z40CSRC 27086232
*        SEE THE ABOVE MODULES.                                @Z40CSRC 27086332
*                                                              @Z40CSRC 27086432
CC3WA    DSECT                                                 @Z40CSRC 27086532
         DS    CL588                   RESERVED                @Z40CSRC 27086632
CC3CVOLS DS    CL6                     CVOL VOLUME SERIAL      @Z40CSRC 27086732
*                                      (SAME AS WKCVOLVS IN CLCA)       27086832
         DS    CL2886                  RESERVED                @Z40CSRC 27086932
CC3SAV1A DS    18F                     SAVE AREA (FOR CL1A)    @Z40CSRC 27087008
*                                      (SAME AS WKCL1ASV IN CLCA)       27087108
CC3RACHK DS    12F                     RACF PARAMETER AREA     @Z40CSRC 27087508
*                                      (SAVE AS WKSHRPRM IN CLCA)       27087608
         ORG   CC3RACHK+ACHKLEN        BEYOND ACTUAL LIST      @Z40CSRC 27088008
CC3NAMSV DS    CL8                     SAVE INDEX NAME         @Z40CSRC 27088508
CC3TTRSV DS    F                       SAVE TTR OF ORIG BLK    @Z40CSRC 27089008
         TITLE 'IGG0CLCC - CATALOG WORKAREA DSECT DEFINITION'  @YL026UD 27092002
         WORKAREA LIST=YES                                       Y01113 27100002
CVPEVOLS EQU   DATAB+4                 VOLSER IN CVPE          @Z40CSRC 27100508
DSPEVOL1 EQU   VOLCNTB+6               1ST VOLSER IN DSPE      @Z40CSRC 27101008
VCBVOL1  EQU   INENTRY+4               1ST VOLSER IN VCB       @Z40CSRC 27101508
         TITLE 'IGG0CLCC - COMMUNICATIONS VECTOR TABLE DSECT'  @YL026UD 27112002
CVT      DSECT                                                          27120002
         CVT                                                            27130002
         TITLE 'IGG0CLCC - UNIT CONTROL BLOCK DSECT'           @YL026UD 27142002
UCB      DSECT                                                          27150002
         IEFUCBOB                                                       27160002
         TITLE 'IGG0CLCC - BLDL WORKAREA DSECT DEFINITION'     @YL026UD 29290002
*                                                                       29650002
***      BLDL WORKAREA DEFINITION                                       29660002
*                                                                       29670002
BLDLWKA  DSECT                                                          29680002
FIRST    DS    0D                                                       29690002
SAVE2H   DS    12F                     SAVEAREA FOR IGC0002H   @YL026UD 29692002
ESTAREA  DS    14F                     ESTAE INFORMATION AREA  @YL026UD 29694002
RDAREA   DS    64F                     256 BYTE READIN AREA             29700002
NEWCNT   DS    2F                                                       29710002
CCW      DS    0D                                                       29720002
CCW1     DS    D                                                        29730002
CCW2     DS    D                                                        29740002
CCW3     DS    D                                                        29750002
CCW4     DS    D                                                        29760002
CCW5     DS    D                                                        29770002
CCW6     DS    D                                                        29780002
ECBBLDL  DS    F                                                        29790002
IOBBLDL  DS    8F                                                       29800002
MBB      DS    C'mbb'                                                   29810002
CCHHR    DS    C'cchhr'                                                 29820002
ERCODE   DS    F                                                        29830002
FNDLST1  DS    F                                                        29840002
IECPCNVT EQU   FNDLST1                                         @YL026UD 29842002
FNDLST2  DS    CL8                                                      29850002
FNDLST3  DS    F                                                        29860002
REPSW    DS    X                       'AVT REPLACED' INDICATOR         29870002
SAVEAVT  DS    3X                      SAVE AREA FOR USER'S AVT PT      29882002
LAST     DS    0D                                                       29890002
*                                                                       29900002
         TITLE 'IGG0CLCC - DCB DEFINITION DSECT (IHADCB)'      @YL026UD 29960002
*                                                                       30180002
***      DCB DEFINITION                                                 30190002
*                                                                       30200002
         DCBD  DSORG=PS,DEVD=DA                                         30210002
*                                                                       30220002
         TITLE 'IGG0CLCC - DEB DEFINITION DSECT (IHADEB)'      @YL026UD 30232002
*                                                                       30240002
***      DEB DEFINITION                                                 30250002
*                                                                       30260002
IHADEB   DSECT                                                          30270002
         DS    F                                                        30280002
DEBAMLNG DS    X                       LENGTH OF DEB A/M SECTION        30290002
         DS    3X                                                       30300002
DEBOFLGS DS    X                       OPEN FLAGS                       30310002
         DS    3X                                                       30320002
DEBOPATB DS    X                       METHOD OF I/O PROCESSING         30330002
         DS    3X                                                       30340002
DEBNMEXT DS    X                                                        30350002
         DS    12X                                                      30360002
DEBAPPAD DS    3X                      APPENDAGE VECTOR TABLE ADDRESS   30370002
DEBDVMOD DS    F                                                        30380002
DEBBINUM DS    H                                                        30390002
DEBSTRCC DS    H                                                        30400002
DEBSTRHH DS    H                                                        30410002
DEBENDCC DS    H                                                        30420002
DEBENDHH DS    H                                                        30430002
DEBNMTRK DS    H                                                        30440002
*                                                                       30450002
         END   IGG0CLCC                                                 30460002
./  ADD  SSI=80610574,NAME=IGG0CLCD
         TITLE 'IGG0CLCD - UPDATE AND ENTRY BUILDING'          @YL026UD 00010002
* /* START OF SPECIFICATIONS ****                                       00020002
*                                                                       00030002
*01*  MODULE-NAME = IGG0CLCD                                   @YL026UD 00040002
*01*  STATUS = 00                                                       00050002
*01*  CHANGE-ACTIVITY = NEW FOR RELEASE 21                              00060002
*                       (AS IGG0CLC3,IGG0CLC4,IGG0CLC5)        @YL026UD 00062002
*                       RENAMED AND CHANGED FOR VS2 RELEASE 2  @YL026UD 00064002
*01*  DESCRIPTIVE-NAME = UPDATE AND ENTRY BUILDING             @YL026UD 00090002
*01*  FUNCTION = (IN IGG0CLC3)                                 @YL026UD 00092002
*                1.  ENQUES ON THE VICE                                 00100002
*                2.  READS THE CONTROL ENTRIES (ICE AND VICE).          00110002
*                3.  INSURES THAT SOME SPACE IS AVAILABLE TO PROCESS    00120002
*                    REQUEST.                                           00130002
*                4.  BUILDS INDEX ENTRIES                               00140002
*                5.  BUILDS INDEX CHAINS                                00150002
*                6.  BUILDS GENERATION INDEX ENTRIES                    00160002
*                7.  ROUTES CONTROL TO THE NEXT LOAD ACCORDING TO THE   00170002
*                    REQUEST TYPE.                                      00180002
*                8.  MAINTAINS ALIAS COUNTS                             00190002
*                (IN IGG0CLC4)                                 @YL026UD 00192002
*                1.  UPDATES A GENERATION INDEX POINTER ENTRY. @YL026UD 00194002
*                2.  REMOVES LAST ENTRY FROM A FULL            @YL026UD 00196002
*                    GENERATION DATA GROUP.                    @YL026UD 00198002
*                3.  SCRATCHES ALL DATA SETS REMOVED FROM      @YL026UD 00198402
*                    A GENERATION DATA GROUP.                  @YL026UD 00198802
*                4.  BUILDS A DATA SET POINTER ENTRY.          @YL026UD 00199202
*                5.  BUILDS VOLUME CONTROL BLOCK POINTER ENTRY.@YL026UD 00199602
*                (IN IGG0CLC5)                                 @YL026UD 00199702
*                1.  FREES A CHAIN OF INDEX LEVELS.            @YL026UD 00199802
*                2.  FREES A CHAIN OF VCBS.                    @YL026UD 00199902
*                3.  FREES A BLOCK.                            @YL026UD 00203202
*                4.  WRITES A BLOCK CONTAINING A NEW GIPE.     @YL026UD 00205202
*                5.  WRITES A NEW LAST BLOCK OF A GDG.         @YL026UD 00205602
*                6.  EMPTYS A GDG.                             @YL026UD 00206002
*                7.  BUILDS A CHAIN OF VCBS.                   @YL026UD 00206402
*                8.  CLEANS UP PARTIALLY CREATED INDEX         @YL026UD 00206502
*                    STRUCTURES AND VCB CHAINS ON CATALOG      @YL026UD 00206602
*                    FULL ERROR CONDITIONS.                    @YL026UD 00207702
*     FOR AN OVERVIEW OF THIS MODULE AND ITS RELATIONSHIP WITH THE      00208902
*     OTHER CATALOG MANAGEMENT MODULES, REFER TO THE CATALOG MANAGEMENT 00210002
*     PLM, Y28-6606.                                                    00220002
*01*  NOTES = LABELS REFERED TO IN COMMENTARY ARE ENCLOSED IN SINGLE    00230002
*     QUOTES. EQUATED CONSTANTS ARE PREFIXED WITH 'D' OR 'X' WHEN THEY  00240002
*     ARE DECIMAL OR HEXADECIMAL RESPECTIVELY; FOR EXAMPLE, D12 EQU 12, 00250002
*     AND X12 EQU X'12'. ERROR CODES ARE SET USING 'ERRORXX' AT         00260002
*     CORRESPONDING LABELS, 'ERRXX'. BRANCHES ORIGINATE FROM LABELS     00270002
*     'IGG0CLCX'. FLAGS ARE LABELED 'FLAGX'.  IO IS DONE FROM EITHER A  00280002
*     SUBROUTINE NAMED 'CALLBLDL' OR A SUBROUTINE NAMED 'IO'. ADDRESS   00290002
*     CONVERSION IS ACCOMPLISHED IN SUBROUTINES NAMED 'TOABSL' AND      00300002
*     'TORLTV'. THESE CONVENTIONS ARE FOLLOWED IN EVERY MODULE WHERE    00310002
*     THE EVENT EXISTS.                                                 00320002
*02*    DEPENDENCIES = THE OPERATION OF THIS MODULE DEPENDS ON THE      00330002
*       COLLATING SEQUENCE OF THE EXTERNAL CHARACTER SET.  A TRANSLATE  00340002
*       AND TEST TABLE IS CONSTRUCTED FOR THE EBCDIC CHARACTER SET AND  00350002
*       IS ARRANGED SO THAT REDEFINITION OF THE CHARACTER CONSTANTS BY  00360002
*       REASSEMBLY WILL RESULT IN A CORRECT TABLE.  THE CONSTANTS IN    00370002
*       QUESTION ARE PREFIXED WITH 'CCD', FOR 'CHARACTER CODE           00380002
*       DEPENDENT'.                                                     00390002
*02*    PERFORMANCE = 1.  THE ICE IS NOT REREAD.                        00400002
*                     2.  THE VOLUME INDEX IS ENQUED SHARED WHEN AN     00410002
*                         ENTRY IS NOT BEING INSERTED INTO IT.          00420002
*                     3.  THE BLOCK TO BE UPDATED IS NOT                00430002
*                         OVERLAID IN MOST CASES.                       00440002
*                     4.  BEFORE THE SYSCTLG DATA SET IS MODIFIED, THE  00450002
*                         'STEP MUST COMPLETE' (SMC) ENQ IS ISSUED      00460002
*                     5.  UPON AN ERROR CONDITION, ALL USED DATA BLOCKS 00470002
*                         ARE FREED                                     00480002
*                     6.  CHECKS ARE MADE FOR CONSISTENCY BETWEEN       00490002
*                         THE REQUEST AND THE STATE OF SYSCTLG IN       00500002
*                         ORDER TO MAINTAIN THE INTEGRITY OF SYSCTLG    00510002
*02*  RESTRICTIONS = ALL DIRECT ACCESS STORAGE DEVICES EXCEPT 2321      00520002
*       DATA CELL ARE SUPPORTED BY CATALOG MANAGEMENT.                  00530002
*02*    REGISTER-CONVENTIONS = REGISTERS ARE LABELED 'R0,R1,...,R15'.   00540002
*       REQUIRED ADDITIONAL LABELS ARE EQUATED TO THESE.  REGISTERS     00550002
*       COMMON TO ALL MODULES OF CATALOG MANAGEMENT ARE                 00560002
*       R4  BASE REGISTER FOR THE MODULE.                               00570002
*       R6  BASE REGISTER FOR THE WORKAREA DSECT.                       00580002
*       R8  BASE REGISTER FOR THE CAMLSTD DSECT.                        00590002
*02*    PATCH-LABEL = 'FIXAREA'                                @YL026UD 00600002
*01*  MODULE-TYPE = MODULE                                              00610002
*02*    PROCESSOR = ASSEMBLER                                           00620002
*02*    MODULE-SIZE = 4000 BYTES                               @YL026UD 00630002
*02*    ATTRIBUTES = REENTERABLE READ ONLY, ENABLED, SUPERVISORY MODE   00640002
*01*  ENTRY = IGG0CLCD                                         @YL026UD 00650002
*02*    PURPOSE = (IGG0CLC3) ENTERED FOR EVERY NON-LOCATE      @YL026UD 00660002
*       REQUEST. BUILDS ALL MISSING INDEX LEVELS. FOR BLDA,    @YL026UD 00670002
*       DLTA, BLDX, DLTX, DRPX, BLDG, IT INSURES THE REQUEST   @YL026UD 00680002
*       CAN BE PERFORMED ON THE EXISTING SYSCTLG STRUCTURE.    @YL026UD 00690002
*       (IGG0CLC4) ENTERED FOR 'CAT', 'UNCAT', 'RECAT',        @YL026UD 00692002
*       'CATBX', FOR EITHER GDG OR NON-GDG.                    @YL026UD 00694002
*       (IGG0CLC5) ENTERED FOR A VARIETY OF REQUESTS FOR THE   @YL026UD 00696002
*       PERFORMANCE OF NECESSARY IO OTHER THAN THE NORMAL      @YL026UD 00698002
*       UPDATING OF AN INDEX LEVEL.                            @YL026UD 00698402
*02*    LINKAGE = LINK                                         @YL026UD 00700002
*02*    INPUT = FOR ALL MODULES, EXCEPT IGC0002F, CONSISTS OF           00710002
*       .  WORKAREA (BLDLAREA)                                          00720002
*       .  SVRB EXTENSION                                               00730002
*       .  DCB                                                          00740002
*       .  DEB                                                          00750002
*       .  CAMLST AND PARAMETERS                                        00760002
*       .  SYSCTLG                                                      00770002
*       IN ADDITION, IGG0CLC3 REQUIRES                         @YL026UD 00780002
*       .  'READICEF'--INDICATES IF ICE MUST BE READ                    00790002
*       .  'ICETTR'--TTR OF ICE FOR THIS REQUEST                        00800002
*       .  'NAMETTR0'--USED TO CONSTRUCT AN INDEX                       00810002
*       IN ADDITION, IGG0CLC4 REQUIRES                         @YL026UD 00812002
*       .  'FOUNDENT'--POINTER TO THE GIPE (CAT,UNCAT)         @YL026UD 00814002
*       .  'NAMLG'--NUMBER OF LEVELS GIVEN (CAT,CATBX)         @YL026UD 00816002
*       .  'NAMLF'--NUMBER OF LEVELS FOUND (CAT,CATBX)         @YL026UD 00818002
*       IN ADDITION, IGG0CLC5 REQUIRES                         @YL026UD 00818402
*       .  'DELTTR1'--POINTER TO INDEX LEVEL CHAIN TO FREE     @YL026UD 00818802
*       .  'DELTTR3'--POINTER TO VCB CHAIN TO FREE             @YL026UD 00819202
*       .  'TTR0'--POINTER TO BLOCK TO FREE                    @YL026UD 00819602
*       .  'WRITETTR'--POINTER TO NEW BLOCK TO WRITE           @YL026UD 00819702
*       .  'READTTR'--POINTER TO NEW LAST GDG BLOCK TO WRITE   @YL026UD 00819802
*       .  'ICE'--FOR EMPTYING A GENERATION DATA GROUP         @YL026UD 00819902
*02*    OUTPUT = SEE INPUT FOR NEXT LOAD                                00820002
*02*    EXIT-NORMAL = IGG0CLCE                                 @YL026UD 00830002
*02*    EXIT-ERROR = IGG0CLC7 (IN IGG0CLCE)                    @YL026UD 00840002
*01*  EXTERNAL-REFERENCES = AS FOLLOWS:                                 00850002
*02*    ROUTINES = IECPRLTV, IECPCNVT, ENQ, OPENEXT(IGC0002H)  @YL026UD 00860002
*02*    DATA-SETS = SYSCTLG                                             00870002
*02*    DATA-AREA = ALL DATA AREAS ARE DESCRIBED BY DSECTS AT THE END   00880002
*       OF THE MODULE LISTING.                                          00890002
*01*  TABLES = NAME TABLE (SEE LABELS PREFIXED WITH 'NAM' IN WORKAREA   00900002
*     DSECT)                                                            00910002
*01*  MACROS = EXCP, GETMAIN, ENQ, DEQ, FREEMAIN, SCRATCH,     @YL026UD 00920037
*              SETRP, SDUMP, TESTAUTH, WAIT                             00923037
*                                                                       00930002
*              VS2 RELEASE 037 CHANGES                                  00932037
*A286018-286028                                                @OZ03161 00934037
*C115700                                                       @OZ14792 00934437
*C285940                                                       @OZ17516 00934837
*A173810-173880,A286551                                        @OZ19636 00935237
*A173916,A173924                                               @OZ27009 00935637
*A285940-285943,A286689-286701,A297708-297716                  @OZ29464 00935837
*                                                                       00936037
**** END OF SPECIFICATIONS ***/                                         00940002
         EJECT                                                 @YL026UD 00950002
IGG0CLCD CSECT                                                          00960002
*                                                                       00962002
         BALR  BASE,0                  SET BASE REGISTER                00970002
         USING *,BASE                                                   00980002
         USING WORKAREA,R6                                              00990002
         USING SVRBEXTD,R5                                              01000002
         USING CAMLSTD,R8                                               01010002
         USING CVT,R3                                                   01020002
         B     MODLABEL                BRANCH AROUND MOD LABEL @YL026UD 01020402
         DC    C'IGG0CLCD        '     MODULE IDENTIFIER       @YL026UD 01020802
         DC    C'&SYSDATE'             DATE OF ASSEMBLY                 01021037
MODLABEL EQU   *                                                        01021202
*                                                                       01022002
         TITLE 'IGG0CLCD - (IGG0CLC3) UPDATE INITIALIZATION'   @YL026UD 01022402
*********************************************************************** 01022802
*                                                                     * 01023202
*     IGG0CLC3 - UPDATE INITIALIZATION                                * 01023602
*                                                                     * 01023702
*********************************************************************** 01023802
*                                                              @YL026UD 01023902
IGG0CLC3 EQU   *                                               @YL026UD 01024002
*                                                                       01026002
         OI    MODMAP1,MODCLC3         INDIC ENTRY TO IGG0CLC3          01030002
         XC    DELTTR3,DELTTR3         RESET TO ZERO             Y01113 01040002
*                                                                       01050002
         TM    MODMAP1,MODCLC4         BEEN TO CLC4?                    01060002
         BO    CATBX                   BRANCH IF YES AND BUILD INDEXES  01070002
*                                                                       01080002
         TM    FLAG1,READICEF          MUST READ ICE?                   01090002
         BZ    ENQVI                   BRANCH IF NO                     01100002
*                                                                       01110002
*      READ ICE ENTRY                                                   01120002
*                                                                       01130002
         L     R0,ICETTR               GET ICE TTR                      01140002
*                                                                       01150002
*      IF ICETTR=0, THEN ICE=VICE FOR THIS REQUEST                      01160002
*                                                                       01170002
         LTR   R0,R0                   ICETTR 0?                        01180002
         MVI   ITYPE,VICETYP           ASSUME YES                       01190002
         BZ    ENQVI                   BRANCH IF YES                    01200002
*                                                                       01210002
         BAL   BALREG2,TOABSL          CONVERT TTR                      01220002
*                                                                       01230002
*      CHANNEL PROGRAM SET DURING RELOCATE.                             01240002
*                                                                       01250002
         BAL   BALREG1,IO1             ***READ ICE***                   01260002
         MVC   ICEPERT,TEMPBUFF+L'INBYTSU+L'INAME  SAVE ICE             01270002
*                                                                       01280002
ENQVI    EQU   *                                                        01290002
*                                                                       01300002
*      ENQUEUE ON VOLUME INDEX (IF NECESSARY), AND VICE AND READ VICE.  01310002
*                                                                       01320002
         MVI   ENQFLAGS,SHARE+HAVE+SYSTEM  INDIC TYPE OF REQUEST X01965 01330002
         ENQ   ,MF=(E,(R5))                                             01340002
*                                                                       01350002
*      ENQUE ON VICE                                                    01360002
*                                                                       01370002
         XC    ENQRNAM8,ENQRNAM8       RNAME OF ZERO                    01380002
         MVI   ENQFLAGS,HAVE+SYSTEM    INDIC TYPE OF REQUEST     X01965 01390002
         ENQ   ,MF=(E,(R5))                                             01400002
*                                                                       01410002
*      READ VICE ENTRY                                                  01420002
*                                                                       01430002
         LA    R0,VICETTR              SET VICE TTR OF 001              01440002
         BAL   BALREG2,TOABSL          CONVERT                          01450002
*                                                                       01460002
*      CHANNEL PROGRAM WAS SET DURING RELOCATE IN CLC2                  01470002
*                                                                       01480002
         BAL   BALREG1,IO1             READ THE BLOCK                   01490002
*      GET THE NEEDED PART OF THE VICE                                  01500002
         MVC   VICEPERT,TEMPBUFF+L'INBYTSU+L'VNAME                      01510002
*                                                                       01520002
*      SAVE ORIGINAL 'VFHOLE' --- IF 'VFHOLE' IS NOT CHANGED THEN THE   01530002
*      VICE DOES NOT HAVE TO BE UPDATED, HENCE NOT REREAD AND WRITTEN   01540002
*      IN IGG0CLC7                                                      01550002
*                                                                       01560002
         MVC   VICESAVE,VSAVE          SAVE ORIGINAL VFHOLE             01570002
*                                                                       01580002
*      IF THE VOLUME INDEX WAS PREVIOUSLY DEQUEUED AND ENQUEUED AGAIN,  01590002
*      THEN A CHECK MUST BE MADE TO BE SURE THE CATALOG WAS NOT         01600002
*      EXTENDED DURING THE INTERVENING TIME.  IF SO, CLOSE AND REOPEN   01610002
*      THE CATALOG SO THE DEB REFLECTS THE NEW EXTENT.                  01620002
*                                                                       01630002
         L     R0,VCLSTBLK             TTR TO LST BLK IN CURRENT CTLG   01640002
         BAL   BALREG2,TOABSL          TTR WITHIN DEB EXTENTS?          01650002
         LTR   R15,R15                 RETURN CODE 0? (I.E. WITHIN DEB) 01660002
         BZ    SPACECHK                BRANCH IF YES                    01670002
*                                                                       01680002
*      CLOSE CATALOG BY FREEING THE DCB/DEB                             01690002
*                                                                       01700002
         L     R1,IOBDCB               GET DCB POINTER                  01710002
         USING DCBAREA,R1              ESTABL ADDRBLTY TO DCBAREA       01720002
         L     R0,NMBYTES              GET NUMBER OF BYTES TO FREE      01730002
         LA    R1,DCBAREA              POINTER TO AREA         @YL026UD 01740002
         XC    SVOPNWAP(4),SVOPNWAP    RESET WKA PTR (ESTAE)   @YL026UD 01742002
         SVC   FREEMAIN                FREEMAIN R,LV=(0),A=(1)          01750002
*                                                                       01760002
         L     R0,SPNBYTES             GET SP ID AND SIZE OF WA         01770002
         GETMAIN R,LV=(0)              GET NEW DCB/DEB AREA FOR 2H      01780002
         ST    R1,SVOPNWAP             SAVE WKA PTR (ESTAE)    @YL026UD 01782002
*                                                                       01790002
*      PREPARE FOR OPEN                                                 01800002
*                                                                       01810002
         USING DCBAREA,R1              ESTABL DCBAREA ADDRBLTY @YL026UD 01820002
         ST    R6,CATWAP               SAVE WORKAREA PTR FOR 2H         01830002
         LA    R0,BLDLAREA             OBTAIN 'BLDLAREA' ADDRESS        01832002
         ST    R0,BLDLAP               SAVE BLDLAREA PTR (2H)  @YL026UD 01834002
         DROP  R1                                                       01840002
         LR    R15,R1                  OPEN WA POINTER                  01850002
         XR    R0,R0                   INDICATE OPEN REQUEST            01860002
         L     R1,UCBADDR              GET UCB ADDRESS                  01870002
         L     R2,OPENMOD              GET IGC0002H MODULE ADDRESS      01880002
         BALR  R14,R2                  RE-OPEN CATALOG                  01884002
*                                                                       01890002
         LR    R2,R1                   SAVE DCB ADDRESS                 01900002
         LCR   R1,R15                  CHECK RETURN CODE                01910002
         BNZ   IGG0CLC7                TAKE ERROR EXIT                  01920002
*                                                                       01930002
         ST    R2,IOBDCB               UPDATE IOB DCB                   01940002
         L     R2,D44(R2)              GET DEB ADDRESS                  01950002
         ST    R2,DEBADDR              SAVE DEB ADDRESS                 01960002
*                                                                       01970002
*                                                                       01980002
SPACECHK EQU   *                                                        01990002
*                                                                       02000002
*      IS THERE SUFFICIENT SPACE AVAILABLE IN THE CATALOG TO PROCEED    02010002
*      BEYOND THIS POINT?                                               02020002
*                                                                       02030002
*      WILL DATA BE ADDED TO THE CATALOG?                               02040002
*                                                                       02050002
         TM    CAMOPTN1,CAMCAT+CAMRECAT     CATALOG OR RECAT?   SA52093 02060002
*      BRANCH IF YES AND CHECK SPACE                            SA52093 02070002
         BM    FULLCHK                      BRANCH IF YES       SA52093 02080002
*      BLDX OR BLDG OR BLDA OR LNKX?                                    02090002
         TM    CAMOPTN2,CAMBLDX+CAMBLDG+CAMBLDA+CAMLNKX                 02100002
         BZ    ROUTE                   BRANCH IF NO - CHECK UNNECESSARY 02110002
*                                                                       02120002
*                                                                       02130002
FULLCHK  EQU   *                                                        02140002
*                                                                       02150002
         CLI   VFHOLE,XFF              CATALOG FULL?                    02160002
         BE    ERR20                   BRANCH IF YES                    02170002
*                                                                       02180002
*                                                                       02190002
ROUTE    EQU   *                                                        02200002
*                                                                       02210002
*      ROUTE THE REQUEST TO THE PROPER MODULE OR ROUTINE                02220002
*                                                                       02230002
*      IF UCATDX AND BLOCKS HAVE TO BE FREED -- GO TO CLC5              02240002
*                                                                       02250002
         NC    DELTTR1,DELTTR1         ANY BLKS TO FREE?                02260002
         BNZ   IGG0CLC5                BRANCH IF YES                    02270002
*                                                                       02280002
*     CAT, RECAT, UNCAT, CATBX OR UCATDX ----   GO TO IGG0CLC4          02290002
*                                                                       02300002
         TM    CAMOPTN1,CAMCAT+CAMRECAT+CAMUNCAT                        02310002
         BM    IGG0CLC4                BRANCH IF YES                    02320002
*                                                                       02330002
*      TEST FOR LNKX                                                    02340002
*                                                                       02350002
         TM    CAMOPTN2,CAMLNKX        LNKX?                            02360002
         BO    IGG0CLC6                BRANCH IF YES AND GO TO CLC6     02370002
*                                                                       02380002
*      TEST FOR BLDX OR BLDG                                            02390002
*                                                                       02400002
         TM    CAMOPTN2,CAMBLDX+CAMBLDG                                 02410002
         BM    BLDX                    BRANCH IF BLDX OR BLDG           02420002
*                                                                       02430002
*      IS LAST ENTRY FOUND AN IPE, ALIAS OR CVOL?                       02440002
*                                                                       02450002
         CLI   ERRLOCSV,ERROR12        IS LOCATE ERROR CODE 12?         02460002
         BNE   ERR08                   BRANCH IF NO                     02470002
*                                                                       02480002
*      TEST FOR DRPX                                                    02490002
*                                                                       02500002
         TM    CAMOPTN3,CAMDRPX        DRPX?                            02510002
         BO    DRPX                    BRANCH IF YES                    02520002
*                                                                       02530002
*      CHECK FOR DLTX FUNCTION                                          02540002
*                                                                       02550002
         TM    CAMOPTN2,CAMDLTX        IS DLTX BIT ON?                  02560002
         BO    DLTXRTN                 BRANCH IF YES                    02570002
*                                                                       02580002
*      CHECK FOR BLDA OR DLTA                                           02590002
*                                                                       02600002
         TM    CAMOPTN2,CAMBLDA+CAMDLTA     IS BLDA OR DLTA BIT ON?     02610002
         BM    BDLTARTN                BRANCH IF YES                    02620002
*                                                                       02630002
*      ALL POSSIBLITIES ARE EXHAUSED --- NO FUNCTION MATCH              02640002
*                                                                       02650002
         B     ERR08                   ERROR EXIT                       02660002
*                                                                       02670002
*                                                                       02680002
DRPX     EQU   *                                                        02690002
*                                                                       02700002
         TM    FLAG2,CVOLF             * CVOL LAST ENTRY FOUND?         02710002
         BO    IGG0CLC6                YES, CONTINUE PROCESSING         02720002
         B     ERR08                   ERROR--INCORRECT ENTRY           02730002
*                                                                       02740002
*                                                                       02750002
BLDX     EQU   *                                                        02760002
*                                                                       02770002
*      ALL PREVIOUS LEVELS TO THE LAST MUST EXIST BEFORE BUILDING AN    02780002
*      INDEX                                                            02790002
         LH    R15,NAMLG               NAME LEVELS GIVEN                02800002
         BCTR  R15,0                   DECREMENT BY 1                   02810002
         CH    R15,NAMLF                                                02820002
         BL    ERR08                   BRANCH IF EQUAL (DUPLICATE)      02830002
         BH    ERR16                   BRANCH IF LEVELS MISSING         02840002
*                                                                       02850002
*      BUILD AN INDEX.                                                  02860002
*                                                                       02870002
*      CONSTRUCT FIRST 28 BYTES OF THE KEY AND DATA FIELDS              02880002
         BAL   BALREG1,KEYICE          CONSTRUCT FIRST PART OF BLK      02890002
*                                                                       02900002
*      PUT IN LINK ENTRY                                                02910002
         MVC   OUTDATA+L'OUTBYTSU+L'ICE(L'LNKENTRY),LNKENTRY            02920002
*                                                                       02930002
*      SINCE THE CATALOG DATA SET IS TO BE MODIFIED, ISSUE THE STEP     02940002
*      MUST COMPLETE ENQ                                                02950002
*                                                                       02960002
         OI    ENQFLAGS,SMCSTEP        SET FLAGS FOR SMC                02970002
         ENQ   ,MF=(E,(R5))            ISSUE REQUEST                    02980002
*      WRITE BLOCK, FIND NEXT FREE BLOCK AND PUT INTO VICE              02990002
         BAL   BALREG5,WRTSRCH         ***WRITE BLOCK***                03000002
*                                                                       03010002
*                                                                       03020002
BLDXCHK  EQU   *                                                        03030002
*                                                                       03040002
         TM    CAMOPTN2,CAMBLDX        BLDX?                            03050002
         BO    IGG0CLC6                BRANCH IF YES                    03060002
*                                                                       03070002
*      BUILD A GIPE.                                                    03080002
*                                                                       03090002
         LA    R2,NAME                 POINT TO ENTRY                   03100002
         USING EINDEX,R2               USE ENTRY DSECT                  03110002
         XC    EGIPEF,EGIPEF           ZERO GIPE DATA FIELD             03120002
         MVI   ETYPE,GIPETYP           SET TYPE TO GIPE                 03130002
         MVC   EGMAXSIZ,CAMGEN         GET MAXIMUM GENERATION COUNT     03140002
         TM    CAMOPTN3,CAMEMPTY       'EMPTY' OPTION SPECIFIED?        03150002
         BZ    TSTDELET                BRANCH IF NO                     03160002
         OI    EGFLAGS,EGEMPTY         TURN ON EMPTY FLAG               03170002
*                                                                       03180002
TSTDELET EQU   *                                                        03190002
*                                                                       03200002
         TM    CAMOPTN3,CAMDELET       'DELETE' OPTION SPECIFIED?       03210002
         BZ    IGG0CLC6                BRANCH IF NO                     03220002
         OI    EGFLAGS,EGDELETE        TURN ON DELETE FLAGS             03230002
         B     IGG0CLC6                GO TO CLC6 AND INSERT NAME       03240002
*                                                                       03250002
         DROP  R2                                                       03260002
*                                                                       03270002
CATBX    EQU   *                                                        03870002
*                                                                       03880002
*      BUILD ALL INDEXES FOR CATBX.                                     03890002
*                                                                       03900002
*      FIRST BUILD THE BLOCK TO CONTAIN THE DSPE OR VCBPE ENTRY         03910002
*                                                                       03920002
*      SINCE THE CATALOG DATA SET WILL BE MODIFIED, WILL ISSUE          03930002
*      'STEP MUST COMPLETE'                                             03940002
*                                                                       03950002
         TM    ENQFLAGS,SMCSTEP        SMC ALREADY ISSUED?       Y01965 03960002
         BO    SKIPSMC                 BRANCH IF YES             Y01965 03970002
*                                                                       03980002
         OI    ENQFLAGS,SMCSTEP        SET FLAGS FOR SMC                03990002
         ENQ   ,MF=(E,(R5))            ISSUE REQUEST                    04000002
*                                                                Y01965 04010002
SKIPSMC  EQU   *                                                 Y01965 04020002
*                                                                Y01965 04030002
*                                                                       04040002
*      CONSTRUCT KEY AND ICE IN 'OUTPUT' AND 0 REMAINING BLOCK          04050002
         BAL   BALREG1,KEYICE          CONSTRUCT FIRST PART OF BLK      04060002
         LH    LEVEL,NAMLG             GET NUMBER OF LEVELS GIVEN       04070002
*      DECREMENT BY ONE SO PROPER EXIT IS TAKEN ON CORRECT LEVEL        04080002
         BCTR  LEVEL,0                 DECREMENT BY 1                   04090002
         LA    R1,D02                  INITIALIZE FOR VCBPE             04100002
         CLI   TYPE,VCBPETYP           VCBPE?                           04110002
         BE    MOVENTRY                BRANCH IF YES                    04120002
*      ASSUME ENTRY IS DSPE.                                            04130002
         IC    R1,TYPE                 GET NUMBER OF HALFWORDS          04140002
         LA    R1,0(R1,R1)             DOUBLE                           04150002
         BCTR  R1,0                    DECREMENT FOR EX INSTRUCTION     04160002
         L     R2,CAMPTR3              GET POINTER TO VOLUME LIST       04170002
         EX    R1,MOVEVOLS             MVC    OUTDATA+32(0),0(R2)       04180002
         LA    R1,D01(R1)              RESET DATA LENGTH                04190002
*                                                                       04200002
*                                                                       04210002
MOVENTRY EQU   *                                                        04220002
*                                                                       04230002
*      PUT NEW ENTRY INTO BUFFER.                                       04240002
*                                                                       04250002
         MVC   OUTENTRY+L'ICE(L'NAMTTR0),NAMTTR0                        04260002
*                                                                       04270002
*      IF THE ENTRY IS A VCBPE, ONLY 12 BYTES OF THE ENTRY ARE MOVED    04280002
*      BY THE ABOVE INSTRUCTION, BUT THE LAST TWO BYTES OF A VCBPE      04290002
*      ARE 0 AND THE BLOCK WAS ZEROED IN THE 'KEYICE' ROUTINE.  THE     04300002
*      EXTRA TWO BYTES ARE ALLOWED FOR IN THE FOLLOWING BY THE ABOVE    04310002
*      LA R1,2 INSTRUCTION.                                             04320002
*                                                                       04330002
         LA    R1,D12(R1)              CALCULATE LENGTH OF ENTRY        04340002
*      ADD 32 FOR HALFWORD COUNT, ICE AND ILE                           04350002
         AH    R1,OUTBYTSU                                              04360002
*      UPDATE BYTES USED FIELD IN BLOCK                                 04370002
         STH   R1,OUTBYTSU                                              04380002
*      POINT R2 TO WHERE ILE GOES                                       04390002
         LA    R2,OUTDATA-L'LNKENTRY(R1)                                04400002
         MVC   0(L'LNKENTRY,R2),LNKENTRY    PUT IN ILE                  04410002
*      SAVE TTR OF BLOCK, WRITE IT AND FIND NEXT FREE BLOCK             04420002
         BAL   BALREG5,WRTSRCH         ***WRITE BLOCK***                04430002
*                                                                       04440002
*      NOW BUILD REMAINING INDEXES                                      04450002
*                                                                       04460002
         BCTR  LEVEL,0                 DECREMENT TO NEXT LEVEL          04470002
         BAL   BALREG1,MOVELVL         MOVE NEXT LEVEL NAME INTO 'NAME' 04480002
         MVI   TYPE,IPETYP             SET AS IPE                       04490002
         CH    LEVEL,NAMLF             LESS THAN NO. OF LEVELS FOUND?   04500002
         BE    BLDXCHK                 BRANCH IF YES                    04510002
         BL    ERR08                   ERROR CONDITION                  04520002
*                                                                       04530002
*      ANOTHER INDEX LEVEL TO BUILD.                                    04540002
*                                                                       04550002
         BAL   BALREG1,KEYICE          BUILD KEY AND ICE AND 0 BLOCK    04560002
         XR    R1,R1                   SET R1 TO CORRECT LENGTH         04570002
         B     MOVENTRY                BRANCH AND PUT ENTRY INTO BUFFER 04580002
*                                                                       04590002
*                                                                       04600002
DLTXRTN  EQU   *                                                        04610002
*                                                                       04620002
*      DELETE INDEX ROUTINE                                             04630002
*                                                                       04640002
*      THE ONLY POSSIBLE ENTRY TYPES AT THIS POINT ARE IPE AND ALIAS    04650002
*                                                                       04660002
         L     R0,TTR                                                   04670002
         BAL   BALREG2,TOABSL          CONVERT TTR                      04680002
         BAL   BALREG1,IO1             READ 20 BYTES INTO TEMPBUFF      04690002
         CLI   TEMPBUFF+1,X20          IS THERE AN ENTRY IN THE BLOCK?  04700002
         BNE   ERR12                   BRANCH IF YES--CAN'T DELETE      04710002
         CLI   TEMPBUFF+ALIASDSP,X00   CHECK ALIAS COUNT                04720002
         BNZ   ERR12                   CAN'T DELETE--HAS ALIASES        04730002
*      OK TO DELETE INDEX -- INDICATE TO CLC5 TO FREE BLK AT 'TTR'      04740002
         OI    FLAG3,FRBLK                                              04750002
         B     IGG0CLC5                GO TO CLC5 AND FREE BLK          04760002
*                                                                       04770002
*                                                                       04780002
BDLTARTN EQU   *                                                        04790002
*                                                                       04800002
*      BUILD AND DELETE ALIAS ROUTINE                                   04810002
*                                                                       04820002
*      UPDATE THE ALIAS COUNT IN THE ICE AT 'TTR', AND PASS CONTROL     04830002
*      TO IGG0CLC5                                                      04840002
*                                                                       04850002
         L     R0,TTR0                 GET TTR OF ICE                   04860002
         IC    R0,ZERO                 ZERO THE COUNT FIELD             04870002
         BAL   BALREG2,TOABSL          CONVERT THE TTR                  04880002
         MVC   OPTNCCW,RD              MOVE IN CCW TO READ DATA         04890002
         BAL   BALREG1,IO1             READ DATA INTO INPUT             04900002
*                                                                       04910002
*      UPDATE ALIAS COUNT OF ICE IN BLOCK JUST READ.                    04920002
*                                                                       04930002
         XR    ALIASCNT,ALIASCNT       CLEAR                            04940002
         IC    ALIASCNT,INDATA+ALIASDSP    GET ALIAS CNT                04950002
         LA    INTEGER,D01              PUT 1 IN ANOTHER REGISTER       04960002
*                                                                       04970002
*      IF FUNCTION IS BLDA, INCREMENT THE ALIAS COUNT                   04980002
*      IF FUNCTION IS DLTA, DECREMENT THE ALIAS COUNT                   04990002
*                                                                       05000002
         TM    CAMOPTN2,CAMBLDA        BLDA?                            05010002
         BO    ADDREG                  BRANCH IF YES                    05020002
*                                                                       05030002
*      DLTA FUNCTION.                                                   05040002
*                                                                       05050002
         CLI TYPEB,ALIASTYP            ALIAS ENTRY?                     05060002
         BNE ERR08                     BRANCH IF NO -- INCORRECT ENTRY  05070002
         LCR   INTEGER,INTEGER         COMPLEMENT INTEGER TO DECREMENT  05080002
*                                                                       05090002
ADDREG   EQU   *                                                        05100002
*                                                                       05110002
         AR    ALIASCNT,INTEGER        MODIFY ALIAS COUNT               05120002
         STC   ALIASCNT,INDATA+ALIASDSP   UPDATE ALIAS CNT              05130002
*                                                                       05140002
*      ALIAS COUNT IN ICE UPDATED.  READY FOR WRITE.                    05150002
*      INDICATE TO CLC5 TO WRITE UPDATED BLOCK                          05160002
*                                                                       05170002
         OI    FLAG3,WRBLK+NEEDBLK                                      05180002
*      PREPARE FOR IGG0CLC5                                             05190002
         MVC   OUTDATA,INDATA          MOVE BLK TO OUTPUT BUFFER        05200002
         MVC   WRITETTR(L'TTR),TTR     INDICATE WHERE TO WRITE BLK      05210002
         B     IGG0CLC5                GO TO CLC5 TO WRITE BLK          05220002
         EJECT                                                          05230002
*                                                                       05240002
****************                                                        05250002
*              *                                                        05260002
WRTSRCH  EQU   *                                                        05270002
*              *                                                        05280002
****************                                                        05290002
*                                                                       05300002
* FUNCTION:                                                             05310002
*    WRITE THE KEY AND DATA BLOCK AT 'OUTPUT' INTO THE FREE BLOCK       05320002
*    POINTED TO BY 'VFHOLE' - WRITE VERIFY WHAT WAS JUST WRITTEN AND    05330002
*    THEN SEARCH FOR A NEW FREE BLOCK.                                  05340002
*                                                                       05350002
* INPUT:                                                                05360002
*    1)  RETURN ADDRESS IN BALREG3                                      05370002
*    2)  UPDATE OUTPUT BLOCK                                            05380002
*                                                                       05390002
* OUTPUT:                                                               05400002
*    1)  PUT TTR0 OF BLOCK WRITTEN INTO 'TTR'                           05410002
*    2)  BLOCK WRITTEN FROM BUFFER 'OUTPUT'                             05420002
*    3)  NEW HOLE INTO VFHOLE                                           05430002
*                                                                       05440002
* DESTROYED:                                                            05450002
*    NEXTCNT UPON FIRST HOLE SEARCH                                     05460002
*    VFHOLE IN VICE                                                     05470002
*                                                                       05480002
* EXITS:                                                                05490002
*         1)  TOABSL - TO CONVERT THE TTR                               05500002
*         2)  IO - TO WRITE, WRITE VERIFY AND SEARCH FOR NEXT FREE      05510002
*             BLOCK.                                                    05520002
*                                                                       05530002
***************                                                         05540002
***************                                                         05550002
*                                                                       05560002
         L     R0,VFHOLE               GET FREE BLOCK TTR               05570002
         ST    R0,TTR0                 SAVE TTR TO CONSTRUCT IPE        05580002
         BAL   BALREG2,TOABSL          CONVERT                          05590002
         MVC   OPTNCCW,WKD             MOVE IN WRITE KEY AND DATA CCW   05600002
         BAL   BALREG1,IO1             WRITE BLOCK                      05610002
         MVC   OPTNCCW,RKD             MOVE IN WRITE VERIFY CCW         05620002
         OI    OPTNCCW+4,CC            COMMAND CHAIN TO SEARCH NXT HOLE 05630002
         BAL   BALREG1,IO1             WRITE VERIFY                     05640002
         LTR   R15,R15                 ANOTHER FREE BLK FOUND?          05650002
         BZ    CONTINUE                BRANCH IF YES                    05660002
*                                                                       05670002
         OI    FLAG1,ERRFULL           SET ERROR FLAG FOR CLC5          05680002
         B     IGG0CLC5                GO TO CLC5 AND FREE BLKS         05690002
*                                                                       05700002
CONTINUE EQU   *                                                        05710002
*                                                                       05720002
         BAL   BALREG2,TORLTV          CONVERT NEW FREE BLK ADDR TO TTR 05730002
         ST    R0,VFHOLE               PUT INTO VICE                    05740002
         BR    BALREG5                 RETURN TO CALLER                 05750002
         EJECT                                                          05760002
****************                                                        05770002
*              *                                                        05780002
KEYICE   EQU   *                                                        05790002
*              *                                                        05800002
****************                                                        05810002
*                                                                       05820002
* FUNCTION:                                                             05830002
*    CONSTRUCT AN ICE ENTRY IN OUTPUT.  ALSO PUT IN AN FF KEY AND 32    05840002
*    IN THE BYTES USED FIELD OF THE DATA BLOCK.                         05850002
*                                                                       05860002
* INPUT:                                                                05870002
*    RETURN ADDRESS IN BALREG1                                          05880002
*                                                                       05890002
* OUTPUT:                                                               05900002
*    KEY, BYTES USED FIELD, AND ICE IN OUTPUT                           05910002
*    REMAINING BLOCK ZEROED                                             05920002
*    32 IN BYTES USED FIELD OF DATA BLOCK                               05930002
*                                                                       05940002
* DESTROYED:                                                            05950002
*    OUTPUT                                                             05960002
*    OUTKEY                                                             05970002
*    SAVETTR                                                            05980002
*                                                                       05990002
***************                                                         06000002
***************                                                         06010002
*                                                                       06020002
         MVC   OUTKEY,HIBIN            PUT IN FF KEY                    06030002
         XC    OUTDATA,OUTDATA         0 BLOCK                          06040002
*      SET UP HALFWORD BYTE COUNT AND ICE                               06050002
         MVI   OUTBYTSU+1,X20          HLFWD BYTE COUNT                 06060002
         MVI   OUTICE+7,X01            SET ICE NAME                     06070002
         MVI   OUTICECD,X03            SET ICE CODE                     06080002
         MVC   OUTILBLK,VFHOLE         UPDATE THE LAST BLOCK ADDRESS    06090002
         MVC   OUTILL,VFHOLE           UPDATE THE INDEX LOWER LIMIT     06100002
         BR    BALREG1                 RETURN TO CALLER                 06110002
         EJECT                                                          06120002
*                                                                       06890002
****************                                                        06900002
*              *                                                        06910002
IO1      EQU   *                                                        06920002
*              *                                                        06930002
****************                                                        06940002
*                                                                       06950002
* FUNCTION:                                                             06960002
*    1.  IF THE DEVICE HAS THE RPS FEATURE, THE SET SECTOR CCW IS       06970002
*        UPDATED.                                                       06980002
*    2.  ISSUE EXCP FOR THE CHANNEL PROGRAM POINTED TO BY THE IOB.      06990002
*    3.  WAIT FOR THE OPERATION TO COMPLETE AND CHECK THE ECB.          07000002
*    4.  IF AN END OF EXTENT CONDITION, BRANCH TO IGC0002H     @YL026UD 07010002
*        AND EXTEND THE CATALOG.                               @YL026UD 07020002
*    5.  IF A PERMANENT I/O ERROR, SET AN ERROR CODE AND BRANCH TO      07030002
*        IGG0CLC7.                                                      07040002
*                                                                       07050002
* INPUT:                                                                07060002
*    UPDATED CHANNEL PROGRAM                                            07070002
*    RETURN ADDRESS IN BALREG 1                                         07080002
*                                                                       07090002
* OUTPUT:                                                               07100002
*    1.  FILLED BUFFER OR                                               07110002
*    2.  EMPTIED BUFFER OR                                              07120002
*    3.  ANOTHER FREE BLOCK ADDRESS                                     07130002
*                                                                       07140002
* DESTROYED:                                                            07150002
*    REGISTERS R0,R1,R15 (IF EXTENDS)                                   07160002
*                                                                       07170002
* EXTERNAL ROUTINES USED:                                               07180002
*    EXCP, WAIT, IGC0002H TO EXTEND CATALOG                    @YL026UD 07190002
*                                                                       07200002
* EXITS:                                                                07210002
*         IGC0002H TO EXTEND THE CATALOG                       @YL026UD 07220002
*         IGG0CLC7 FOR PERMANENT I/O ERROR                              07230002
***************                                                         07240002
***************                                                         07250002
*                                                                       07260002
         TM    FLAG2,RPSDEV            RPS FEATURE?                     07270002
         BZ    EXCP1                   BRANCH IF NO                     07280002
         L     R1,RPSAVEP              GET RPS SAVE AREA PTR            07290002
         USING RPSD,R1                                                  07300002
         STM   R9,R2,RPSAVE            SAVE REGISTERS TO BE DESTROYED   07310002
         LM    R15,R2,RPSINPUT         GET THETA CONVERT INPUT PARMS    07320002
         IC    R0,IOBSKADD+7           GET R OF CCHHR                   07330002
         BALR  R14,R15                 CONVERT R TO THETA               07340002
*      NOTE: R1 AND R3 THROUGH R8 ARE NOT DESTROYED BY THE CONVERT      07350002
         LM    R9,R2,RPSAVE            RESTORE REGISTERS                07360002
*                                                                       07370002
*                                                                       07380002
EXCP1    EQU   *                                                        07390002
*                                                                       07400002
         EXCP  IOB                     ISSUE EXCP                       07410002
         WAIT  ECB=ECB                 WAIT FOR REQUEST                 07420002
         XR    R15,R15                 SET RETURN CODE TO 0             07430002
         CLI   ECB,X7F                 NORMAL COMPLETION?               07440002
         BCR   8,BALREG1               BRANCH IF YES                    07450002
         CLI   ECB,X42                 OUT OF EXTENT?                   07460002
         BNE   ERR28                   NO, PERMANENT I/O ERROR          07470002
*                                                                       07480002
*      FALL THROUGH AND EXTEND CATALOG                                  07490002
*                                                                       07500002
         ST    BALREG1,SVBALREG        SAVE CURRENT BALREG1    @YL026UD 07502002
         L     R0,IOBDCB               GET DCB ADDRESS                  07510002
         L     R2,OPENMOD              GET IGC0002H ADDRESS    @YL026UD 07520002
         BALR  BALREG1,R2              EXTEND                  @YL026UD 07522002
*                                                                       07524002
         L     BALREG1,SVBALREG        RESTORE SAVED BALREG1   @YL026UD 07526002
         CH    R15,H08                 NO MORE EXTENDS?                 07530002
         BCR   8,BALREG1               RETURN IF YES                    07540002
*                                                                       07550002
         LCR   R1,R15                  CHECK RETURN CODE                07560002
*                                                                       07570002
         BNZ   IGG0CLC7                BRANCH IF DID NOT EXTEND         07580002
         B     EXCP1                   RE-ISSUE REQUEST                 07590002
         DROP  R1                                                       07600002
         EJECT                                                          07610002
*                                                                       07620002
****************                                                        07630002
*              *                                                        07640002
MOVELVL EQU    *                                                        07650002
*              *                                                        07660002
****************                                                        07670002
*                                                                       07680002
* FUNCTION:                                                             07690002
*    TO PUT THE CURRENT LEVEL NAME INTO THE 'NAME' WORKAREA LOCATION    07700002
*                                                                       07710002
* INPUT:                                                                07720002
*    1)  RETURN ADDRESS IN BALREG1                                      07730002
*    2)  CURRENT LEVEL NUMBER IN REGISTER 'LEVEL'                       07740002
*                                                                       07750002
* OUTPUT:                                                               07760002
*    1)  CURRENT LEVEL IN 'NAME'                                        07770002
*    2)  REGISTER 'LEVEL' DECREMENTED BY 1                              07780002
*                                                                       07790002
* DESTROYED:                                                            07800002
*    1)  REGISTERS - R1,R2, AND R15                                     07810002
*                                                                       07820002
***************                                                         07830002
***************                                                         07840002
*                                                                       07850002
         MVI   NAME,CCDBLANK           INSERT BLANK                     07860002
         MVC   NAME+1(L'NAME-1),NAME   BLANK NAME                       07870002
         LA    R15,0(LEVEL,LEVEL)      DOUBLE LEVEL                     07880002
*      SET R15 POINT TO THE DATA FOR THE LEVEL INDICATED BY 'LEVEL'     07890002
         LA    R15,NAMTABLE(R15)                                        07900002
         XR    R1,R1                   CLEAR R1                         07910002
         IC    R1,0(R15)               GET DISPLACEMENT                 07920002
         L     R2,CAMPTR1              GET POINTER NAME                 07930002
         AR    R2,R1                   POINT TO LEVEL NAME              07940002
         IC    R1,D01(R15)             GET LENGTH                       07950002
         EX    R1,MOVELVLN             MVC    NAME(0),0(R2)             07960002
         BR    BALREG1                 RETURN TO CALLER                 07970002
         TITLE 'IGG0CLCD - (IGG0CLC4) ENTRY BUILDING'          @YL026UD 09280002
*********************************************************************** 09290002
*                                                                     * 09300002
*     IGG0CLC4 - ENTRY BUILDING                                       * 09310002
*                                                                     * 09320002
*********************************************************************** 09330002
*                                                              @YL026UD 09340002
IGG0CLC4 EQU   *                                               @YL026UD 10160002
*                                                                       10162002
         DROP  R3                                                       10172002
         DROP  R5                                                       10182002
*                                                                       10184002
         USING WORKAREA,R6                                              10186002
         USING CAMLSTD,R8                                               10188002
*                                                                       10192002
         OI    MODMAP1,MODCLC4         INDIC ENTRY TO IGG0CLC4          10210002
*                                                                       10220002
*      INITIALIZE                                                       10230002
*                                                                       10240002
         L     GIPE,FOUNDENT           SET BASE TO GIPE IF PRESENT      10250002
*                                                                       10260002
*      SAVE LENGTH OF ALL LEVELS OUT TO THE LAST LEVEL OF THE DATA      10270002
*      SET NAME IN CASE OF AN EVENTUAL SCRATCH.                         10280002
*                                                                       10290002
*      TEST THE FUNCTION REQUESTED FOR CONSISTENCY WITH WHETHER OR NOT  10300002
*      THIS ENTRY WAS FOUND IN PHASE I.                                 10310002
*                                                                       10320002
         CLI   ERRLOCSV,ERROR00        WAS THE ENTRY FOUND?             10330002
         BE    FOUND                   YES                              10340002
*                                                                       10350002
*      ENTRY NOT FOUND, CHECK FOR ALLOWABLE FUNCTIONS, CAT & CATBX.     10360002
*                                                                       10370002
         TM    CAMOPTN1,CAMCAT         IS FUNCTION CAT?                 10380002
         BO    CATRTN                  YES                              10390002
*                                                                       10400002
*      FUNCTION IS NOT COMPATIBLE WITH LOCATE RETURN CODE.              10410002
*                                                                       10420002
         B     ERR08                   NO                               10430002
*                                                                       10440002
*                                                                       10450002
FOUND    EQU   *                                                        10460002
*                                                                       10470002
*      ENTRY FOUND, CHECK FOR ALLOWABLE FUNCTIONS, RECAT & UNCAT        10480002
*                                                                       10490002
         TM    CAMOPTN1,CAMUNCAT       IS FUNCTION UNCAT?               10500002
         BO    ALTERTN                 YES                              10510002
*                                                                       10520002
         OI    FLAG1,RECATF            SET RECAT SWITCH IN CASE         10530002
         TM    CAMOPTN1,CAMRECAT       IS FUNCTION RECAT?               10540002
         BO    ALTERTN                 YES                              10550002
*                                                                       10560002
*      FUNCTION REQUESTED IS NOT COMPATIBLE WITH LOCATE RETURN CODE.    10570002
*                                                                       10580002
         B     ERR08                   ERROR EXIT                       10590002
*                                                                       10600002
         EJECT                                                          10610002
*                                                                       10620002
CATRTN   EQU   *                                                        10630002
*                                                                       10640002
*      FUNCTION IS CAT OR CATBX                                         10650002
*                                                                       10660002
*      1.  COMPARE LEVELS GIVEN AND LEVELS FOUND.                       10670002
*                                                                       10680002
*          .  (GIVEN)-(FOUND)=0, CATALOG ERROR CODE=8.                  10690002
*                                                                       10700002
*          .  (GIVEN)-(FOUND)=1, FUNCTION IS CAT.                       10710002
*                                                                       10720002
*          .  (GIVEN)-(FOUND)=2 OR MORE, DO 2.                          10730002
*                                                                       10740002
*      2.  CHECK FUNCTION.                                              10750002
*                                                                       10760002
*          .  IF FUNCTION IS NOT CATBX, CATALOG ERROR CODE = 8.         10770002
*                                                                       10780002
*          .  IF FUNCTION IS CATBX, DO 3A OR 3B.                        10790002
*                                                                       10800002
*      3A. IF A DSPE IS REQUIRED (FOR 5 OR FEWER VOLUMES), THE ENTRY    10810002
*          IS BUILT AND CONTROL IS PASSED TO IGG0CLC3 FOR THE BUILDING  10820002
*          OF MISSING INDEX LEVELS.                                     10830002
*                                                                       10840002
*      3B. IF A VCBPE IS REQUIRED (FOR 6 OR MORE VOLUMES), THE ENTRY    10850002
*          IS BUILT WITHOUT THE TTR FIELD AND CONTROL IS PASSED TO      10860002
*          IGG0CLC5 FOR THE BUILDING OF REQUIRED VCB'S.                 10870002
*                                                                       10880002
*      COMPARE LEVELS GIVEN WITH LEVELS FOUND.                          10890002
*                                                                       10900002
         LH    LEVEL2,NAMLG            GET NUMBER OF LEVELS GIVEN       10910002
         SH    LEVEL2,NAMLF            SUBTRACT NUMBER FOUND            10920002
         BNP   ERR08                   DIFFERENCE=0                     10930002
*                                                                       10940002
         BCTR  LEVEL2,0                MINUS ONE                        10950002
         LTR   LEVEL2,LEVEL2           RESULT ZERO?                     10960002
         BZ    CATNOBLD                YES, DIFFERENCE=1                10970002
*                                                                       10980002
*      DIFFERENCE IS 2 OR MORE, CHECK FUNCTION                          10990002
*                                                                       11000002
         TM    FLAG1,CATBXF            * IS FUNCTION CATBX?             11010002
         BZ    ERR16                   NO                               11020002
*                                                                       11030002
*      FUNCTION IS CATBX.                                               11040002
*                                                                       11050002
         BAL   BALREG1,BLDENTRY        BUILD ENTRY                      11060002
         TM    FLAG3,BLVCB             * MORE THAN 5 VOLUMES?           11070002
         BO    IGG0CLC5                YES, GO BUILD VCBS               11080002
*                                                                       11090002
         L     R5,SVRBEXTP             RESTORE BASE FOR CLC3            11092002
         B     IGG0CLC3                NO, GO BUILD INDEX LEVELS        11100002
*                                                                       11110002
         EJECT                                                          11120002
*                                                                       11130002
CATNOBLD EQU   *                                                        11140002
*                                                                       11150002
*                                                                       11160002
*      CHANGE CATBX FUNCTION TO CAT FUNCTION.                           11170002
*                                                                       11180002
         NI    FLAG1,CATBXFC           * TURN OFF CATBXF                11190002
*                                                                       11200002
CATONLY  EQU   *                                                        11210002
*                                                                       11220002
*      FUNCTION IS CAT                                                  11230002
*                                                                       11240002
*      THE LAST BLOCK BLDL SEARCHED IS AT INPUT                         11250002
*                                                                       11260002
         TM    FLAG2,GDGSW             GENERATION DATA SET?             11270002
         BZ    CULMINAT                NO                               11280002
*                                                                       11290002
*      DATA SET NAME IS IN COMPLIMENT FORM (FROM IGG0CLC2) AT NAME      11300002
*                                                                       11310002
         BAL   BALREG1,SETUP           SET POINT AND LAST               11320002
*                                                                       11330002
CATCMPR  EQU   *                                                        11340002
*                                                                       11350002
         USING ENTRY,POINT             ESTABL ADDRBLTY TO ENTRY         11360002
         CLC   EGENNO,GENNO            DO THE ABSOL NUMBERS MATCH?      11370002
         BNE   CATRTN1                 NO, GO LOOK AT NEXT ENTRY        11380002
*                                                                       11390002
         CLC   ENAME,NAME              ARE THE NAMES IDENTICAL?         11400002
         BNE   ALTER                   NO, SET RECAT            YA00092 11402002
         MVI   ERRLOCSV,ERROR00        YES,ZERO LOCATE CODE     YA00092 11404002
*                                      IN CASE NON-ZERO VERSION YA00092 11406002
         BE    ERR08                   DUPLICATE NAME                   11410002
*                                                                       11420002
ALTER    OI    FLAG1,RECATF            * SET RECAT FLAG         YA00092 11430002
         B     ALTERTN                 GO TO ALTER ROUTINE              11440002
*                                                                       11450002
*                                                                       11460002
CATRTN1  EQU   *                                                        11470002
*                                                                       11480002
         LR    R1,POINT                SAVE POINT TEMPORARILY           11490002
         BAL   BALREG1,INCR            INCREMENT 'POINT'                11500002
         CR    POINT,LAST              ANY MORE ENTRIES?                11510002
         BL    CATCMPR                 YES                              11520002
*                                                                       11530002
         DROP  POINT                                                    11540002
         USING ENTRY,GIPE              ESTABL ADDRBLTY TO GIPE          11550002
         CLC   EGMAXSIZ,EGCURSIZ+1     IS GROUP FULL?                   11560002
         BNH   OPTION                  YES, GO PROCESS OPTIONS @OZ14792 11570037
*                                                                       11580002
*      ADD 1 TO GENERATION COUNT AND INDICATE A WRITE FOR IGG0CLC5      11590002
*                                                                       11600002
         LH    R1,EGCURSIZ             GET CURRENT SIZE OF GROUP        11610002
         LA    R1,D01(R1)              ADD ONE                          11620002
         STH   R1,EGCURSIZ             UPDATE IN-CORE GIPE              11630002
         OI    FLAG3,WRBLK             * TURN ON WRITE BLOCK FLAG       11640002
         BAL   BALREG1,BLDENTRY        BUILD ENTRY                      11650002
         B     IGG0CLC5                GO WRITE BLOCK WITH UPDATED GIPE 11660002
*                                                                       11670002
         EJECT                                                          11680002
*                                                                       11690002
OPTION   EQU   *                                                        11700002
*                                                                       11710002
*      GROUP IS FULL.  IF NEW ENTRY HAS GENERATION NUMBER GREATER       11720002
*      THAN THE GREATEST IN THE GROUP, THE NEW ENTRY WILL NOT BE ADDED. 11730002
*                                                                       11740002
         DROP  GIPE                                                     11750002
         USING ENTRY,R1                POINT WAS SAVED IN R1            11760002
         CLC   EGENNO,GENNO            IS NEW ENTRY OLDER THAN LAST?    11770002
         BL    ERR24                   YES, RETURN TO ISSUER OF SVC 26  11780002
*                                                                       11790002
         DROP  R1                                                       11800002
         USING ENTRY,GIPE              ESTABL ADDRBLTY TO GIPE          11810002
*                                                                       11820002
*      NAMED ENTRY WILL BE ADDED TO GENERATION DATA GROUP.              11830002
*      GROUP IS FULL AND OPTIONS MUST BE PROCESSED.                     11840002
*                                                                       11850002
         TM    EGFLAGS,EGEMPTY         EMPTY SPECIFIED?                 11860002
         BNO   REMOVLST                NO, REMOVE ONLY LAST ENTRY       11870002
*                                                                       11880002
*      EMPTY OPTION WAS SPECIFIED.                                      11890002
*                                                                       11900002
         MVI   EGCURSIZ+1,X01          UPDATE GIPE                      11910002
         OI    FLAG3,EMPTY+WRBLK       * SET EMPTY & WRITE BLOCK FLAG   11920002
         TM    EGFLAGS,EGDELETE        DELETE SPECIFIED?                11930002
         BZ    CULMINAT                NO                               11940002
*                                                                       11950002
*      START AT THE BEGINNING OF THE GENERATION DATA GROUP AND          11960002
*      SCRATCH ALL DATA SETS, READING NEW BLOCKS AS NECESSARY.          11970002
*                                                                       11980002
         CLC   ETTR,READTTR            TTR IN GIPE = TTR OF 'INPUT'?    11990002
         BE    NOREAD                  YES                              12000002
*                                                                       12010002
         MVC   READTTR(L'ETTR),ETTR    GET TTR FROM GIPE                12020002
*                                                                       12030002
READ     EQU   *                                                        12040002
*                                                                       12050002
         BAL   BALREG4,GET             ***READ BLOCK INTO INPUT***      12060002
*                                                                       12070002
NOREAD   EQU   *                                                        12080002
*                                                                       12090002
         BAL   BALREG1,SETUP           SETUP 'POINT' AND 'LAST'         12100002
*                                                                       12110002
RECUR    EQU   *                                                        12120002
*                                                                       12130002
         BAL   BALREG1,SCRATCH         SCRTCH ALL VOLS OF DS AT 'POINT' 12140002
         BAL   BALREG1,INCR            BUMP 'POINT' TO NEXT ENTRY       12150002
         CR    POINT,LAST              POINTING TO THE ILE?             12160002
         BL    RECUR                   NOT YET                          12170002
*                                                                       12180002
         DROP  GIPE                                                     12190002
         USING ENTRY,POINT             ESTABL ADDRBLTY TO ENTRY         12200002
         NC    ETTR,ETTR               ANOTHER BLOCK IN CHAIN?          12210002
         BZ    CULMINAT                NO                               12220002
*                                                                       12230002
         MVC   READTTR(L'ETTR),ETTR    GET TTR FROM ILE                 12240002
         B     READ                    GO READ THE NEXT BLOCK           12250002
*                                                                       12260002
         EJECT                                                          12270002
*                                                                       12280002
REMOVLST EQU   *                                                        12290002
*                                                                       12300002
*      STORE READTTR FOR POSSIBLE USE BY WRLSTRTN IN C5         YA00091 12302002
*      IF WE NOW HAVE THE LAST BLOCK                            YA00091 12304002
*                                                               YA00091 12306002
         MVC   SAVETTR3,READTTR        SAVE TTR OF BLK TO BE UPDATED    12308002
*                                                               YA00091 12308402
         CLC   ILSTBLK,READTTR         ALREADY HAVE THE LAST BLOCK?     12310002
         BE    FINDLAST                YES, GO SCAN IT FOR LAST ENTRY   12320002
*                                                                       12330002
         MVC   READTTR(L'ILSTBLK),ILSTBLK NO, GET TTR OF LAST BLOCK     12350002
         BAL   BALREG4,GET             ***READ BLOCK INTO INPUT***      12360002
*                                                                       12370002
FINDLAST EQU   *                                                        12380002
*                                                                       12390002
*      ADJUST 'POINT' TO POINT TO ENTRY JUST PRECEDING THE INDEX LINK   12400002
*      ENTRY IN 'INPUT'.                                                12410002
*                                                                       12420002
         BAL   BALREG1,SETUP           SET UP 'POINT' AND 'LAST'        12430002
*                                                               SA52084 12440002
*      IF 'POINT' AND 'LAST' ARE EQUAL THEN THE BLK IS EMPTY,   SA52084 12450002
*      SO DO NOT SCAN THE BLK NOR DELETE THE LAST ENTRY.        SA52084 12460002
*                                                               SA52084 12470002
         CR    POINT,LAST              EQUAL?                   SA52084 12480002
         BE    SETFLG3                 BRANCH IF YES            SA52084 12490002
*                                                                       12500002
FINDSCAN EQU   *                                                        12510002
*                                                                       12520002
*      SCAN BLOCK FOR THE LAST ENTRY.  LENGTH WILL CONTAIN LENGTH OF    12530002
*      ENTRY JUST PRECEDING INDEX LINK ENTRY.                           12540002
*                                                                       12550002
         CR    POINT,LAST              THERE YET?                       12560002
         BNL   FINDED                  YES                              12570002
*                                                                       12580002
         BAL   BALREG1,INCR            BUMP POINT TO NEXT ENTRY         12590002
         B     FINDSCAN                CHECK AGAIN                      12600002
*                                                                       12610002
*                                                                       12620002
FINDED   EQU   *                                                        12630002
*                                                                       12640002
*      POINT POINTS TO LAST ENTRY (ILE) AND LENGTH CONTAINS THE LENGTH  12650002
*      OF THE PRECEDING ENTRY.                                          12660002
*      SUBTRACT LENGTH FROM POINT TO FIND THE LAST NON-'FF' ENTRY IN    12670002
*      THE BLOCK.                                                       12680002
*                                                                       12690002
         SR    POINT,LENGTH            BACKUP ONE ENTRY                 12700002
         USING ENTRY,POINT             EST. ADDRBLTY TO ENTRY   SA55225 12710002
*                                                               SA55225 12720002
*     CHECK FOR ANY DELETABLE VCBS                              SA55225 12730002
*                                                               SA55225 12740002
         CLI   ETYPE,VCBPETYP          VCBPE?                   SA55225 12750002
         BNE   TESTDLT                 BRANCH IF NO             SA55225 12760002
*                                                               SA55225 12770002
*     SET FLAG AND TTR FOR MODULE                               SA55225 12780002
*     IGG0CLC5 TO DELETE THE VCBS                               SA55225 12790002
*                                                               SA55225 12800002
         OI    FLAG3,FRVCB             * SET FREE VCB FLAG      SA55225 12810002
         MVC   DELTTR3(L'ETTR),ETTR    SAVE VCB CHAIN PTR       SA55225 12820002
*                                                               SA55225 12830002
*                                                               SA55225 12840002
TESTDLT  EQU  *                                                 SA55225 12850002
*                                                               SA55225 12860002
         DROP  POINT                                                    12870002
         USING ENTRY,GIPE              EST ADDRBLTY TO GIPE             12880002
         TM    EGFLAGS,EGDELETE        DELETE SPECIFIED?                12890002
         BZ    DONTSCR                 NO                               12900002
*                                                                       12910002
         BAL   BALREG1,SCRATCH         SCRATCH ALL VOLS OF LAST ENTRY   12920002
*                                                                       12930002
DONTSCR  EQU   *                                                        12940002
*                                                                       12950002
         DROP  GIPE                                                     12960002
         USING ENTRY,POINT             REESTABL PRIOR ADDRBLTY          12970002
         MVC   EINDEX,0(LAST)          MOVE ILE OVER LAST ENTRY         12980002
         LCR   LENGTH,LENGTH           PREPARE TO SUBTRACT              12990002
         AH    LENGTH,INBYTSU          DECREMENT BYTES USED BY LENGTH   13000002
         STH   LENGTH,INBYTSU          UPDATE IN-CORE BYTES USED FIELD  13010002
*                                                               SA52084 13020002
*                                                               SA52084 13030002
SETFLG3  EQU   *                                                SA52084 13040002
*                                                               SA52084 13050002
         OI    FLAG3,WRLST             * SET WRITE LAST FLAG            13060002
         B     CULMINAT                GO BUILD ENTRY          @YL026UD 13070002
*                                                                       13080002
         EJECT                                                          13090002
*                                                                       13100002
ALTERTN  EQU   *                                                        13110002
*                                                                       13120002
*      ALTER ROUTINE PROCESSES RECAT & UNCAT REQUESTS                   13130002
*                                                                       13140002
*      CHECK FOR ANY DELETABLE VCBS                                     13150002
*                                                                       13160002
         CLI   TYPEB,VCBPETYP          VCBPE FOUND?                     13170002
         BNE   VCBSNONE                NO                               13180002
*                                                                       13190002
         MVC   DELTTR3(L'TTR),TTR      GET VCB CHAIN POINTER            13200002
         OI    FLAG3,FRVCB             * SET FREE VCB FLAG              13210002
*                                                                       13220002
*      STARTING TTR OF VCB CHAIN IS IN DELTTR3 AND FRVCB FLAG IS ON     13230002
*      FOR IGG0CLC5, AS AN INDICATION TO DELETE THOSE VCBS.             13240002
*                                                                       13250002
VCBSNONE EQU   *                                                        13260002
*                                                                       13270002
*      CHECK FUNCTION                                                   13280002
*                                                                       13290002
         TM    CAMOPTN1,CAMUNCAT       REQUESTED FUNCTION UNCAT?        13300002
         BO    CHEKGDG                 YES                              13310002
*                                                                       13320002
         TM    FLAG1,RECATF            * REQUESTED FUNCTION RECAT?      13330002
         BNO   ERR08                   NO                               13340002
*                                                                       13350002
*      FUNCTION IS RECAT, BUILD A NEW ENTRY.                            13360002
*                                                                       13370002
         B     CULMINAT                GO BUILD ENTRY          @YL026UD 13380002
*                                                                       13390002
*                                                                       13400002
CHEKGDG  EQU   *                                                        13410002
*                                                                       13420002
*      FUNCTION IS UNCAT                                                13430002
*      CHECK FOR GDG OR NON-GDG, FOR GIPE PROCESSING                    13440002
*                                                                       13450002
         TM    FLAG2,GDGSW             * GDG PROCESSING?                13460002
         BNO   NEXTLOAD                NO                               13470002
*                                                                       13480002
*      ESTABLISH ADDRESSABILITY TO THE GIPE                             13490002
*                                                                       13500002
         DROP  POINT                                                    13510002
         USING ENTRY,GIPE              ESTABL ADDRBLTY TO GIPE          13520002
*                                                                       13530002
*      UPATE GIPE & INDICATE NEED TO WRITE IT                           13540002
*                                                                       13550002
         LH    R1,EGCURSIZ             GET CURRENT SIZE OF GROUP        13560002
         BCTR  R1,0                    MINUS ONE                        13570002
         STH   R1,EGCURSIZ             UPDATE IN-CORE CURRENT SIZE      13580002
         OI    FLAG3,WRBLK             * SET WRITE BLOCK FLAG           13590002
*                                                                       13600002
*      BLOCK IS IN 'OUTPUT' & ITS TTR IS IN 'WRITETTR'                  13610002
*      'WRBLK' SWITCH IS SET FOR IGG0CLC5                               13620002
*                                                                       13630002
         DROP  GIPE                                                     13640002
         B     IGG0CLC5                BRANCH TO IGG0CLC5      @YL026UD 13650002
*                                                                       13660002
         EJECT                                                          13670002
*                                                                       13680002
CULMINAT EQU   *                                                        13690002
*                                                                       13700002
*      BUILD THE REQUIRED ENTRY AND BRANCH TO THE APPROPRIATE MODULE.   13710002
*                                                                       13720002
         BAL   BALREG1,BLDENTRY        GO BUILD ENTRY                   13730002
*                                                                       13740002
NEXTLOAD EQU   *                                                        13750002
*                                                                       13760002
*      THE NEXT MODULE IS DETERMINED BY WHETHER OR NOT SPECIAL          13770002
*      PROCESSING IS REQUIRED. IF IT IS, IGG0CLC5 IS  BRANCHED TO       13780002
*      TO FREE AND WRITE ANY VCB'S, WRITE ANY NEW INDEX        @YL026UD 13790002
*      BLOCKS, AND PROCESS EMPTY REQUESTS.                              13800002
*                                                                       13810002
*      IF NO SPECIAL PROCESSING IS REQUIRED, IGG0CLC5 IS                13820002
*      BYPASSED AND IGG0CLC6 IS THE NEXT MODULE TO RECEIVE CONTROL.     13830002
*                                                                       13840002
         TM    FLAG3,WRBLK+FRVCB+BLVCB+WRLST+EMPTY * NEED IGG0CLC5?     13850002
         BZ    IGG0CLC6                NO                               13860002
*                                                                       13870002
         B     IGG0CLC5                YES                              13880002
*                                                                       13890002
         EJECT                                                          13900002
*                                                                       13910002
****************                                                        13920002
*              *                                                        13930002
TOABSL2  EQU   *                                                        13940002
*              *                                                        13950002
****************                                                        13960002
*                                                                       13970002
* FUNCTION:                                                             13980002
*    CONVERT THE TTR0 IN R0 TO AN ABSOLUTE DASD ADDRESS AND             13990002
*    PUT IT INTO THE IOB MBBCCHHR                                       14000002
*                                                                       14010002
* INPUT:                                                                14020002
*    R0 IS THE TTR0 TO BE CONVERTED                                     14030002
*    RETURN ADDRESS IN BALREG2                                          14040002
*                                                                       14050002
* OUTPUT:                                                               14060002
*    ABSOLUTE DASD ADDRESS IN IOB                                       14070002
*    ERROR CODE IN R15                                                  14080002
*                                                                       14090002
* DESTROYED:                                                            14100002
*    REGISTERS - R0,R1,R2,R14, AND R15=0                                14110002
*    WA - SAVEAREA AND MBBCCHHR OF THE IOB                              14120002
*                                                                       14130002
* SUBROUTINES USED:                                                     14140002
*         THE RESIDENT CONVERT ROUTINE - IECPCNVT                       14150002
*                                                                       14160002
*                                                                       14170002
***                                                                     14180002
*                                                                       14190002
         L     R15,EPTOABSL            GET EP TO 'IECPCNVT'             14200002
         STM   R9,R13,SAVEAREA         SAVE REGS DESTROYED BY CONVERT   14210002
         L     R1,DEBADDR              GET DEB ADDRESS                  14220002
         LA    R2,IOBSKADD             POINT TO MBBCCHHR                14230002
         BALR  BALREG1,R15             GO TO CONVERT                    14240002
         LM    R9,R13,SAVEAREA         RESTORE REGISTERS                14250002
         BR    BALREG2                 RETURN                           14260002
*                                                                       14270002
         EJECT                                                          14280002
*                                                                       14290002
****************                                                        14300002
*              *                                                        14310002
IO2      EQU   *                                                        14320002
*              *                                                        14330002
****************                                                        14340002
*                                                                       14350002
* FUNCTION:                                                             14360002
*    1.  IF THE DEVICE HAS THE RPS FEATURE, THE SET SECOTR CCW IS       14370002
*        UPDATED.                                                       14380002
*    2.  ISSUE EXCP FOR THE CHANNEL PROGRAM POINTED TO BY THE JOB.      14390002
*    3.  WAIT FOR THE OPERATION TO COMPLETE AND CHECK THE ECB.          14400002
*    4.  IF AN END OF EXTENT CONDITION, BRANCH TO IGC0002H     @YL026UD 14410002
*        AND EXTEND THE CATALOG.                               @YL026UD 14420002
*    5.  IF A PERMANENT I/O ERROR, SET AN ERROR CODE AND BRANCH TO      14430002
*        IGG0CLC7.                                                      14440002
*                                                                       14450002
* INPUT:                                                                14460002
*    UPDATED CHANNEL PROGRAM                                            14470002
*    RETURN ADDRESS IN BALREG 1                                         14480002
*                                                                       14490002
* OUTPUT:                                                               14500002
*    1.  FILLED BUFFER                                                  14510002
*    2.  EMPTIED BUFFER                                                 14520002
*    3.  ANOTHER FREE BLOCK ADDRESS                                     14530002
*                                                                       14540002
* DESTROYED:                                                            14550002
*    REGISTERS R0,R1,R15 (IF EXTENDS), AND ERRCAT                       14560002
*                                                                       14570002
* EXTERNAL ROUTINES USED:                                               14580002
*    EXCP, WAIT, IGC0002H TO EXTEND CATALOG                    @YL026UD 14590002
*                                                                       14600002
* EXITS:                                                                14610002
*         IGG0CLC7 FOR PERMANENT I/O ERROR                              14620002
***                                                                     14630002
*                                                                       14640002
         USING RPSD,R1                 ESTABL BASE TO RPS WORKAREA      14650002
         TM    FLAG2,RPSDEV            RPS FEATURE?                     14660002
         BZ    EXCP2                   BRANCH IF NO                     14670002
*                                                                       14680002
         L     R1,RPSAVEP              GET RPS SAVE AREA PTR            14690002
         STM   R9,R2,RPSAVE            SAVE REGS DESTROYED BY CONVERT   14700002
         LM    R15,R2,RPSINPUT         GET THETA CONVERT INPUT PARMS    14710002
         IC    R0,IOBSKADD+7           GET R OF CCHHR                   14720002
         BALR  BALREG1,R15             GO TO CONVERT R TO THETA         14730002
         LM    R9,R2,RPSAVE            RESTORE REGISTERS                14740002
*                                                                       14750002
EXCP2    EQU   *                                                        14760002
*                                                                       14770002
         EXCP  IOB                     ISSUE EXCP                       14780002
         WAIT  ECB=ECB                 WAIT FOR REQUEST                 14790002
         CLI   ECB,X7F                 I/O ERROR?                       14800002
         BCR   8,BALREG1               BRANCH IF NO                     14810002
*                                                                       14820002
         B     ERR28                   ERROR EXIT                       14830002
*                                                                       14840002
         DROP  R1                                                       14850002
*                                                                       14860002
         EJECT                                                          14870002
*                                                                       14880002
****************                                                        14890002
*              *                                                        14900002
GET      EQU   *                                                        14910002
*              *                                                        14920002
****************                                                        14930002
*                                                                       14940002
* FUNCTION:                                                             14950002
*    CONVERTS READTTR INTO AN ABSOLUTE ADDRESS AND READS THE BLOCK      14960002
*    AT THAT ADDRESS INTO INPUT.                                        14970002
* INPUT:                                                                14980002
*    READTTR,BALREG3 IS RETURN REGISTER                                 14990002
* OUTPUT:                                                               15000002
*    INDEX BLOCK AT INPUT,MBBCCHHR OF BLOCK AT MBBCCHHR                 15010002
* DESTROYED:                                                            15020002
*    BALREG2,R0,OPTNCCW                                                 15030002
* SUBROUTINES USED:                                                     15040002
*    TOABSL,IO                                                          15050002
***                                                                     15060002
*                                                                       15070002
         L     R0,READTTR              GET TTR FOR CONVERSION           15080002
         BAL   BALREG2,TOABSL2         CONVERT FOR IO                   15090002
         MVC   OPTNCCW,RD              MOVE READ DATA CCW               15100002
         BAL   BALREG1,IO2             READ 256 BYTE BLOCK INTO 'INPUT' 15110002
         BR    BALREG4                 RETURN                           15120002
*                                                                       15130002
         EJECT                                                          15140002
*                                                                       15150002
****************                                                        15160002
*              *                                                        15170002
SETUP    EQU   *                                                        15180002
*              *                                                        15190002
****************                                                        15200002
*                                                                       15210002
* FUNCTION:                                                             15220002
*    SETS TWO REGISTERS, POINT AND LAST, TO POINT TO THE FIRST ENTRY    15230002
*    IN INPUT AND THE LAST ENTRY IN INPUT, RESPECTIVELY.                15240002
* INPUT:                                                                15250002
*    INBLKSZ,H12,BALREG1 IS RETURN REGISTER                             15260002
* OUTPUT:                                                               15270002
*    POINT,LAST                                                         15280002
* DESTROYED:                                                            15290002
*    NOTHING                                                            15300002
* SUBROUTINES USED:                                                     15310002
*    NONE                                                               15320002
***                                                                     15330002
*                                                                       15340002
         LA    POINT,INENTRY           ADDRESS OF FIRST ENTRY           15350002
         LA    LAST,INBYTSU            ADDR OF HALFWORD BLOCK SIZE      15360002
         AH    LAST,INBYTSU            POINT TO END OF ILE              15370002
         SH    LAST,H12                SUBTRACT LENGTH OF ILE           15380002
         BR    BALREG1                 RETURN                           15390002
*                                                                       15400002
         EJECT                                                          15410002
*                                                                       15420002
****************                                                        15430002
*              *                                                        15440002
INCR     EQU   *                                                        15450002
*              *                                                        15460002
****************                                                        15470002
*                                                                       15480002
* FUNCTION:                                                             15490002
*    ADJUSTS POINT TO POINT TO THE NEXT ENTRY IN INPUT                  15500002
* INPUT:                                                                15510002
*    ETYPE,POINT,BALREG1 IS RETURN REGISTER                             15520002
* OUTPUT:                                                               15530002
*    POINT,LENGTH                                                       15540002
* DESTROYED:                                                            15550002
*    NOTHING                                                            15560002
*                                                                       15570002
***                                                                     15580002
*                                                                       15590002
         USING ENTRY,POINT             ESTABL BASE FOR ENTRY            15600002
         SR    LENGTH,LENGTH           ZERO LENGTH                      15610002
         IC    LENGTH,ETYPE            PICK UP ENTRY TYPE               15620002
*                                                                       15630002
*      TOTAL LENGTH OF THE ENTRY IS 12 + 2*(ETYPE)                      15640002
*                                                                       15650002
         LA    LENGTH,D12(LENGTH,LENGTH)    CALCULATE LENGTH            15660002
         AR    POINT,LENGTH            ADJUST POINT                     15670002
         BR    BALREG1                 POINT IS AT NEXT ENTRY           15680002
*                                                                       15690002
         DROP  POINT                                                    15700002
*                                                                       15710002
         EJECT                                                          15720002
*                                                                       15730002
****************                                                        15740002
*              *                                                        15750002
BLDENTRY EQU   *                                                        15760002
*              *                                                        15770002
****************                                                        15780002
*                                                                       15790002
* FUNCTION:                                                             15800002
*    BUILDS AN ENTRY TO REPRESENT THE DATA SET LEVEL OF A QUALIFIED     15810002
*    NAME.                                                              15820002
*    1.  IF A VCB IS REQUIRED, A VCBPE IS BUILT.  SINCE THIS MODULE     15830002
*        DOES NOT WRITE IN THE SYSCTLG DATA SET, A SWITCH (BLVCB)       15840002
*        IS TURNED ON TO INDICATE TO PHASE III THAT A CHAIN OF VCB'S    15850002
*        REQUIRE BUILDING.                                              15860002
*    2.  IF A VCB IS NOT REQUIRED, A DSPE IS BUILT.  IF THE NUMBER      15870002
*        OF VOLUMES IS ONE, THE DSCBTTR OPTION IS PROCESSED.            15880002
*        N.B.  IF THE FUNCTION IS CATBX AND CONTROL IS RETURNING TO     15890002
*        CLC3, THE VOLUME LIST IS NOT APPENDED TO THE ENTRY AT THIS     15900002
*        POINT, BECAUSE NAMTABLE MUST BE PRESERVED.                     15910002
*    THE ENTRY IS BUILT STARTING AT NAME IN THE WORKAREA AND CONTINUING 15920002
*    THRU AS MANY BYTES AS ARE NECESSARY, NOT OVER 74.                  15930002
* INPUT:                                                                15940002
*    BITS USED AS SWITCHES ARE DESIGNATED "BYTE(BIT,BIT,...)"           15950002
*    CAMPTR3,H06,CAMDSCBP,VOLUME LIST,CAMOPTN2(CAMDSCBT),MOVE1,         15960002
*    FLAG1(CATBXF),CAMOPTN1(CAMRECAT),BALREG1 IS RETURN REGISTER        15970002
* OUTPUT:                                                               15980002
*    BITS SET AS SWITCHES ARE DESIGNATED "BYTE(BIT,BIT,...)"            15990002
*    TTR,TYPE,     VOLCNT,DATA,FLAG3(BLVCB)                             16000002
*                                                                       16010002
* DESTROYED:                                                            16020002
*    R1,R2                                                              16030002
*                                                                       16040002
* SUBROUTINES USED:                                                     16050002
*    NONE                                                               16060002
***                                                                     16070002
*                                                                       16080002
*      DECIDE WHAT TYPE OF ENTRY TO BUILD, VCBPE OR DSPE.               16090002
*                                                                       16100002
         L     R1,CAMPTR3              POINT TO VOLUME LIST             16110002
         LH    TALLY,0(R1)             GET THE COUNT                    16120002
*                                                               SA53641 16130002
         LTR   TALLY,TALLY                                      SA53641 16140002
         BNP   ERR08                                            SA53641 16150002
*                                                               SA53641 16160002
         CH    TALLY,H06               VCB REQUIRED?                    16170002
         BL    BLDDSPE                 GO BUILD DSPE                    16180002
*                                                                       16190002
*      VCB'S ARE REQUIRED.  INDICATE SO FOR PHASE III.                  16200002
*                                                                       16210002
         MVI   TYPE,VCBPETYP           MOVE IN ENTRY TYPE               16220002
         XC    VOLCNT,VOLCNT           CLEAR LAST HFWD OF ENTRY         16230002
         OI    FLAG3,BLVCB             INDIC NEED TO BUILD VCBS         16240002
         BR    BALREG1                 RETURN                           16250002
*                                                                       16260002
*                                                                       16270002
BLDDSPE  EQU   *                                                        16280002
*                                                                       16290002
*      DSPE IS REQUIRED.                                                16300002
*                                                                       16310002
*      CALCULATE NUMBER OF HALFWORDS REQUIRED TO CONTAIN VOLUME LIST;   16320002
*      (NO. OF HALFWORDS) = 6*(NO. OF VOLUMES) + 1                      16330002
*                                                                       16340002
*      RESULT GOES IN THE TYPE FIELD OF THE ENTRY.                      16350002
*                                                                       16360002
         MH    TALLY,H06               MULTIPLY BY 6                    16370002
         LA    TALLY,D01(TALLY)        ADD ONE                          16380002
         STC   TALLY,TYPE              MOVE IN THE ENTRY TYPE           16390002
*                                                                       16400002
*      DECIDE WHETHER OR NOT TO APPEND VOLUME LIST TO ENTRY.            16410002
*                                                                       16420002
         TM    FLAG1,CATBXF            * IS FUNCTION CATBX?             16430002
         BO    BLDLATER                YES, DON'T APPEND                16440002
*                                                                       16450002
*      FUNCTION IS NOT CATBX.  COMPLETE THE ENTRY.                      16460002
*                                                                       16470002
         SLL   TALLY,1                 DOUBLE NUMBER OF HALFWORDS       16480002
         BCTR  TALLY,0                 MINUS ONE FOR EXECUTE            16490002
         EX    TALLY,MOVE1             MVC   VOLCNT(0),0(R1)            16500002
*                                                                       16510002
BLDLATER EQU   *                                                        16520002
*                                                                       16530002
*      CHECK FOR DSCBTTR PROCESSING                                     16540002
*                                                                       16550002
         CLI   TYPE,DSPETYP            ONLY ONE VOLUME?                 16560002
         BNE   BLDCLEAR                NO, DON'T PROCESS DSCBTTR OPTION 16570002
*                                                                       16580002
         TM    CAMOPTN2,CAMDSCBT       DSCBTTR SPECIFIED?               16590002
         BO    BLDDSCBT                YES                              16600002
*                                                                       16610002
*      DSCBTTR IS NOT SPECIFIED, SET TO ZERO                    SA52095 16620002
*                                                                       16630002
*                                                                       16640002
BLDCLEAR EQU   *                                                        16650002
*                                                                       16660002
*      ZERO TTR FIELD AND RETURN                                        16670002
*                                                                       16680002
         XC    TTR,TTR                 3 BYTES OF ZEROS IN TTR          16690002
         BR    BALREG1                 ENTRY IS BUILT                   16700002
*                                                                       16710002
*                                                                       16720002
BLDDSCBT EQU   *                                                        16730002
*                                                                       16740002
*      TTR OF DSCB OF NAMED DATA SET IS SPECIFIED.                      16750002
*                                                                       16760002
         L     R1,CAMDSCBP             POINT TO 3 BYTE DSCBTTR          16770002
         MVC   TTR,0(R1)               MOVE IN DSCBTTR                  16780002
         BR    BALREG1                 ENTRY IS BUILT                   16790002
*                                                                       16800002
         EJECT                                                          16810002
*                                                                       16820002
****************                                                        16830002
*              *                                                        16840002
SCRATCH  EQU   *                                                        16850002
*              *                                                        16860002
****************                                                        16870002
*                                                                       16880002
* FUNCTION:                                                             16890002
*    RELEASES SPACE ALLOCATED TO DATA SET NAMED AT POINT.  MAY RESIDE   16900002
*    ON MORE THAN ONE VOLUME.  ROUTINE SCRATCHES UP TO 20 VOLUMES       16910002
*    AT A TIME UNTIL ALL SPACE HAS BEEN RELEASED.                       16920002
* INPUT:                                                                16930002
*    CAMPTR1, USER-PASSED DATA SET INDEX LEVELS, LASTLEV,MOVE2,         16940002
*    POINT, ENTRY AT POINT, MASKFF, SCROPTN, VCB'S IF PRESENT.          16950002
*    BALREG1 IS RETURN REGISTER                                         16960002
* OUTPUT:                                                               16970002
*    NOTHING                                                            16980002
* DESTROYED:                                                            16990002
*    DSNAME,LEN,DSN,SCRPARM,R0,R1,R3,VCBMAIN,BALREGS,BALREG2            17000002
* SUBROUTINES USED:                                                     17010002
*    GETMAIN SERVICE ROUTINE, FREEMAIN SERVICE ROUTINE, TOABSL,         17020002
*    IO, SCRATCH SERVICE ROUTINE.                                       17030002
***                                                                     17040002
*                                                                       17050002
         USING ENTRY,POINT             ESTABL ADDRBLTY TO ENTRY         17060002
*                                                                       17070002
*      SETUP PARAMETERS FOR SCRATCH                                     17080002
*                                                                       17090002
*      BUILD THE NAME                                                   17100002
*                                                                       17110002
         MVI   DSNAME,CCDBLANK         MOVE IN A BLANK                  17120002
         MVC   DSNAME+1(L'DSNAME-1),DSNAME CLEAR THE DSNAME AREA        17130002
         L     DSN,CAMPTR1             POINT TO NAME                    17140002
         XR    LEN,LEN                 ZERO 'LEN'                       17150002
         IC    LEN,INDEXLEN            GET LNGTH OF ALL BUT LAST LVL    17160002
*                                                                       17170002
*      MOVE ALL BUT LAST LEVEL INTO 'DSNAME', INCLUDING LAST DELIMITER  17180002
*                                                                       17190002
         BCTR  LEN,0                   MINUS ONE FOR EXECUTE            17200002
         EX    LEN,MOVE2               MVC DSNAME(0),0(DSN)             17210002
*                                                                       17220002
*      POINT TO WHERE LAST LEVEL WILL GO.  '+1' IS TO CORRECT FOR       17230002
*      BCTR ON LEN.                                                     17240002
*                                                                       17250002
         LA    LEN,DSNAME+1(LEN)                                        17260002
         TM    ENAME,XFF               ICE OR ILE?                      17270002
         BCR   11,BALREG1              YES, DON'T SCRATCH IT            17280002
*                                                                       17290002
         MVC   0(L'ENAME,LEN),ENAME    APPEND LAST LEVEL                17300002
         DROP  POINT                                                    17310002
         USING ENTRY,LEN               ESTABL ADDRBLTY TO GEN DSPE      17320002
         XC    EGENNO,MASKFF           COMPLIMENT GENERATION NUMBER     17330002
         DROP  LEN                                                      17340002
         USING ENTRY,POINT             REESTABL ADDRBLTY                17350002
*                                                                       17360002
*      BUILD THE SCRATCH CAMLST                                         17370002
*                                                                       17380002
         TM    CAMOPTN3,CAMTIOT        IS TIOT ENQUED?         @OZ19636 17390037
         BZ    SCROPTNA                NO, BR TO CONTINUE      @OZ19636 17390737
*                                                                       17391437
*    TEST CALLER AUTHORIZATION                                 @OZ19636 17391537
*                                                                       17391637
         LR    R9,R14                  SAVE R14                @OZ19636 17391737
         STM   R0,R3,SVAREA4           SAVE REGS               @OZ27009 17391837
         TESTAUTH FCTN=1,STATE=YES,KEY=YES,BRANCH=YES,RBLEVEL=2         17391937
         LR    R14,R9                  RESTORE R14             @OZ19636 17392237
         LM    R0,R3,SVAREA4           RESTORE REGS            @OZ27009 17392437
         LTR   R15,R15                 CALLER AUTHORIZED?      @OZ19636 17392837
         BNZ   SCROPTNA                NO, BR AROUND           @OZ19636 17393537
         L     R0,SCROPTN2             SET TIOT ENQUED OPTION  @OZ19636 17394237
*                                    AND ALL OTHER SCRATCH OPTIONS      17394937
         B     SCROPTNB                                        @OZ19636 17395637
SCROPTNA EQU   *                                                        17396337
         L     R0,SCROPTN              GET OPTION BYTES                 17397037
SCROPTNB EQU   *                                                        17397737
         LA    R1,DSNAME               GET ADDR OF FULLY QUALIFIED NAME 17400002
         STM   R0,R1,SCRPARM           FRST TWO WRDS OF SCRATCH CAMLST  17410002
*                                                                       17420002
*      THIRD WORD OF SCRATCH CAMLST IS NOT USED.                        17430002
*      FOURTH WORD CONTAINS ADDRESS OF THE VOLUME LIST.                 17440002
*      1.  IF THE DATA SET RESIDES ON FROM 1 THRU 5 VOLUMES, THE        17450002
*          ADDRESS OF THE VOLUME LIST IS EVOLCNT IN INPUT.              17460002
*      2.  IF THE DATA SET RESIDES ON 6 OR MORE VOLUMES, THE ADDRESS    17470002
*          OF THE VOLUME LIST IS THE ADDRESS OF A 256 BYTE GETMAIN      17480002
*          AREA OBTAINED FOR THE PURPOSE OF READING VCB'S.              17490002
*                                                                       17500002
         CLI   ETYPE,VCBPETYP          IS ENTRY A VCBPE?                17510002
         BNE   SCR1TO5                 NO                               17520002
*                                                                       17530002
*      GETMAIN TO SERVE AS AN INPUT BUFFER                              17540002
*                                                                       17550002
         USING VCBD,VCBMAIN2           VCBMAIN2 EQU R11                 17560002
         LA    R0,BLOCK                GET SIZE OF AREA         SA53664 17570002
         GETMAIN R,LV=(0)                                               17580002
         ST    R1,SVVCBLK4             SAVE BLOCK PTR (ESTAE)  @YL026UD 17582002
         LR    VCBMAIN2,R1             SET BASE FOR AREA                17590002
         ST    VCBMAIN2,SCRVOLS        FOURTH WORD OF SCRATCH CAMLST    17600002
*                                                                       17610002
*      SAVE RETURN SO THAT SCRATCHY CAN BE LINKED TO REPETITIVELY       17620002
*      FROM THIS VCB PROCESSING PORTION.                                17630002
*                                                                       17640002
         ST    BALREG1,BALREGS         SAVE RETURN REG                  17650002
*                                                                       17660002
*      GET TTR OF FIRST VCB OF CHAIN FROM THE VCBPE                     17670002
*                                                                       17680002
         MVC   SAVEAREA(L'ETTR),ETTR   MOVE IT INTO A WORD              17690037
         L     R0,SAVEAREA             PREPARE FOR CONVERT              17700002
         IC    R0,ZERO                 ZERO TYPE, ETTR IS 3-BYTE FIELD  17710002
*                                                                       17720002
*      SETUP TO READ DATA INTO GETMAIN AREA                             17730002
*                                                                       17740002
         MVC   OPTNCCW,RD              MOVE IN CCW TO READ DATA         17750002
         ST    VCBMAIN2,OPTNCCW        MOVE IN ADDRESS                  17760002
         MVI   OPTNCCW,RDOP            MOVE IN READ DATA OP-CODE        17770002
*                                                                       17780002
SCREAD   EQU   *                                                        17790002
*                                                                       17800002
         BAL   BALREG2,TOABSL2         CONVERT TTR                      17810002
         BAL   BALREG1,IO2             READ DATA INTO VCBMAIN           17820002
*                                                                       17830002
*      SET VOLUME COUNT FOR SCRATCH                                     17840002
*                                                                       17850002
         LA    R0,D20                  GET 20 FOR COMPARAND             17860002
         CH    R0,VCBVOLCT             MORE VOLUMES THAN IN THIS LIST?  17870002
         BNL   SCRLAST                 NO, VOLUME COUNT IS GOOD         17880002
*                                                                       17890002
         STH   R0,VCBVOLCT             YES, CORRECT SIZE OF LIST = 20   17900002
*                                                                       17910002
SCRLAST  EQU   *                                                        17920002
*                                                                       17930002
*      CALL 'SCRATCHY' FOR THIS LIST                                    17940002
*                                                                       17950002
         BAL   BALREG1,SCRATCHY        SCRATCH A SET OF VOLUMES         17960002
*                                                                       17970002
*      PREPARE FOR NEXT READ                                            17980002
*                                                                       17990002
         L     R0,VCBLNK               GET TTR OF NEXT VCB              18000002
         LTR   R0,R0                   IS THERE A NEXT BLOCK            18010002
         BNZ   SCREAD                  YES, GO READ IT                  18020002
*                                                                       18030002
*      END OF VCB CHAIN, FREEMAIN AND RETURN                            18040002
*                                                                       18050002
         LA    R0,BLOCK                GET THE SIZE OF THE AREA         18060002
         LR    R1,VCBMAIN2             GET THE ADDRESS OF THE AREA      18070002
         XC    SVVCBLK4(4),SVVCBLK4    RESET BLOCK PTR (ESTAE) @YL026UD 18072002
         FREEMAIN R,LV=(0),A=(1)                                        18080002
         L     BALREG1,BALREGS         RESTORE RETURN REG               18090002
         BR    BALREG1                 RETURN                           18100002
*                                                                       18110002
*                                                                       18120002
SCR1TO5  EQU   *                                                        18130002
*                                                                       18140002
*      ENTIRE VOLUME LIST IS CONTAINED IN DSPE                          18150002
*                                                                       18160002
         LA    R0,EVOLCNT              POINT TO VOLUME LIST             18170002
         ST    R0,SCRVOLS              FOURTH WORD OF SCRATCH CAMLST    18180002
*                                                                       18190002
SCRATCHY EQU   *                                                        18200002
*                                                                       18210002
*      ISSUE SCRATCH MACRO & RETURN VIA BALREG1                         18220002
*                                                                       18230002
         SR    R0,R0                   ZERO 'R0'                        18240002
         SCRATCH SCRPARM                                                18250002
         BR    BALREG1                 RETURN                           18260002
*                                                                       18270002
         DROP  VCBMAIN2                                                 18280002
         DROP  POINT                                                    18290002
*                                                                       18300002
         TITLE 'IGG0CLCD - (IGG0CLC5) FIRST LOAD OF UPDATE'    @YL026UD 20000002
*********************************************************************** 20010002
*                                                                     * 20020002
*     IGG0CLC5 - FIRST LOAD OF UPDATE                                 * 20030002
*                                                                     * 20040002
*********************************************************************** 20050002
*                                                              @YL026UD 20060002
IGG0CLC5 EQU   *                                               @YL026UD 20940002
*                                                                       20942002
         USING CAMLSTD,R8                                               20952002
         USING WORKAREA,R6                                              20962002
         OI    MODMAP1,MODCLC5         INDIC ENTRY TO IGG0CLC5          20990002
         TM    FLAG1,ERRFULL           * BEING ENTERED TO CLEAN UP?     21000002
         BO    ERRTN                   YES, GO DELETE INDEX STRUCTURE   21010002
*                                                                       21020002
*      START THE UPDATE PROCESS.  SINCE SYSCTLG IS GOING TO BE WRITTEN  21030002
*      IN, OTHER TASKS IN THE REGION MUST BE NON-DISPATCHABLE.          21040002
*                                                                       21050002
         USING SVRBEXTD,R1             ESTABL ADRBLTY TO SVRBEXT Y01965 21060002
         L     R1,SVRBEXTP             POINT TO PARAMETER LIST          21070002
         TM    ENQFLAGS,SMCSTEP        SMC ALREADY ISSUED?       Y01965 21080002
         BO    SMCSKIP                 BRANCH IF YES             Y01965 21090002
*                                                                Y01965 21100002
         OI    ENQFLAGS,SMCSTEP        SET ENQ TO SMC            Y01965 21110002
         ENQ   ,MF=(E,(1))             DISABLE STEP TASKS        Y01965 21120002
         DROP  R1                                                Y01965 21130002
*                                                                Y01965 21140002
SMCSKIP  EQU   *                                                 Y01965 21150002
*                                                                Y01965 21160002
*                                                                       21170002
*      CHECK0                                                           21180002
*                                                                       21190002
*      CHECK FOR REQUEST TO FREE INDEX LEVELS FOR UCATDX FUNCTION.      21200002
*                                                                       21210002
         NC    DELTTR1,DELTTR1         NEED TO FREE INDEX BLOCKS?       21220002
         BZ    CHECK1                  NO                               21230002
*                                                                       21240002
         BAL   BALREG3,FRNDXRTN        YES, CALL FREE INDEX ROUTINE     21250002
         B     RESTORE                 GO MOVE BLK TO BE UPDTD TO INPUT 21260002
*                                                                       21270002
*                                                                       21280002
CHECK1   EQU   *                                                        21290002
*                                                                       21300002
*      CHECK FOR REQUEST TO FREE A CHAIN OF VCB'S.                      21310002
*                                                                       21320002
         TM    FLAG3,FRVCB             * NEED TO FREE VCB'S?            21330002
         BNO   CHECK2                  NO                               21340002
*                                                                       21350002
         BAL   BALREG3,FRVCBRTN        YES, CALL FREE VCB ROUTINE       21360002
*                                                                       21370002
CHECK2   EQU   *                                                        21380002
*                                                                       21390002
*      CHECK FOR REQUEST TO FREE A BLOCK FOR DLTX FUNCTION.             21400002
*                                                                       21410002
         TM    FLAG3,FRBLK             * NEED TO FREE BLOCK?            21420002
         BNO   CHECK3                  NO                               21430002
*                                                                       21440002
         L     R0,TTR0                 GET ADDR OF BLOCK                21450002
         BAL   BALREG3,FRBLKRTN        YES, CALL FREE BLOCK ROUTINE     21460002
*                                                                       21470002
CHECK3   EQU   *                                                        21480002
*                                                                       21490002
*      CHECK FOR REQUEST TO WRITE THE BLOCK CONTAINING AN UPDATED GIPE. 21500002
*                                                                       21510002
         TM    FLAG3,WRBLK             * NEED TO WRITE A BLOCK?         21520002
         BNO   CHECK4                  NO                               21530002
*                                                                       21540002
         BAL   BALREG3,WRBLKRTN        YES, CALL WRITE BLOCK ROUTINE    21550002
*                                                                       21560002
CHECK4   EQU   *                                                        21570002
*                                                                       21580002
*      CHECK FOR A REQUEST TO REWRITE THE NEW LAST BLOCK OF A CHAIN     21590002
*      OF GENERATION DATA SET POINTERS                                  21600002
*                                                                       21610002
         TM    FLAG3,WRLST             * NEED TO WRITE LAST?            21620002
         BNO   SAVE                    NO                               21630002
*                                                                       21640002
         BAL   BALREG3,WRLSTRTN        YES, CALL WRITE LAST ROUTINE     21650002
*                                                                       21660002
*                                                                       21670002
SAVE     EQU   *                                                        21680002
*                                                                       21690002
*      SAVE THE BLOCK IN INPUT BY MOVING IT TO OUTPUT AND ITS TTR       21700002
*      FROM READTTR TO WRITETTR.                                        21710002
*                                                                       21720002
*      IT MAY BE:                                                       21730002
*                                                                       21740002
*      1.  THE BLOCK TO BE UPDATED, IF WRLST IS NOT ON.  THIS WILL      21750002
*          BE PASSED TO THE NEXT LOAD OF UPDATE.                        21760002
*                                                                       21770002
*      2.  THE BLOCK WHICH WRLSTRTN WAS REQUESTED TO WRITE.             21780002
*                                                                       21790002
*      IF WRLST IS ON AND THE BLOCK DOES NOT CONTAIN AN ICE, THE        21800002
*      BLOCK WAS ACTUALLY WRITTEN AND THIS IS A MEANINGLESS MOVE.       21810002
*                                                                       21820002
*      IF WRLST IS ON AND THE BLOCK DOES CONTAIN AN ICE, THE BLOCK      21830002
*      WAS NOT WRITTEN AND THIS MOVE SAVES IT FOR THE NEXT LOAD OF      21840002
*      UPDATE.                                                          21850002
*                                                                       21860002
         MVC   OUTDATA,INDATA          SAVE THE BLOCK                   21870002
         MVC   WRITETTR,READTTR        SAVE ITS TTR                     21880002
         XC    READTTR,READTTR         CLEAR READTTR                    21890002
*                                                                       21900002
*      CHECK5                                                           21910002
*                                                                       21920002
*      CHECK FOR REQUEST TO PROCESS EMPTY OPTION FOR A FULL GENERATION  21930002
*      DATA GROUP.                                                      21940002
*                                                                       21950002
         TM    FLAG3,EMPTY             * NEED TO EMPTY GDG?             21960002
         BNO   RESTORE                 NO                               21970002
*                                                                       21980002
         BAL   BALREG3,EMPTYRTN        YES, CALL EMPTY ROUTINE          21990002
*                                                                       22000002
*                                                                       22010002
RESTORE  EQU   *                                                        22020002
*                                                                       22030002
*      MOVE BLOCK AND TTR BACK INTO INDATA                              22040002
*                                                                       22050002
         MVC   INDATA,OUTDATA          MOVE BLOCK BACK TO 'INDATA'      22060002
         MVC   READTTR,WRITETTR        MOVE TTR BACK TO 'READTTR'       22070002
         XC    WRITETTR,WRITETTR       CLEAR 'WRITETTR'                 22080002
*                                                                       22090002
*                                                                       22100002
*      CHECK6                                                           22110002
*                                                                       22120002
*      CHECK FOR REQUEST TO BUILD A CHAIN OF VCB'S.                     22130002
*                                                                       22140002
         TM    FLAG3,BLVCB             * NEED TO BUILD VCB'S?           22150002
         BNO   NXTLOAD                 NO                               22160002
*                                                                       22170002
         BAL   BALREG3,BLVCBRTN        YES, CALL BUILD VCB ROUTINE      22180002
*                                                                       22190002
NXTLOAD  EQU   *                                                        22200002
*                                                                       22210002
         TM    FLAG1,CATBXF            * REQUESTED FUNCTION CATBX?      22220002
         BNO   IGG0CLC6                NO, GO UPDATE                    22224002
*                                                                       22226002
         L     R5,SVRBEXTP             RESTORE BASE FOR CLC3            22228002
         B     IGG0CLC3                YES, GO BUILD NEEDED INDICES     22230002
*                                                                       22260002
         EJECT                                                          22270002
*                                                                       22280002
****************                                                        22290002
*              *                                                        22300002
WRBLKRTN EQU   *                                                        22310002
*              *                                                        22320002
****************                                                        22330002
*                                                                       22340002
* FUNCTION:                                                             22350002
*    WRITES THE BLOCK FROM OUTPUT AT THE ADDRESS IN WRITETTR.           22360002
*                                                                       22370002
* INPUT:                                                                22380002
*    OUTPUT,WRITETTR,BALREG3 IS RETURN REGISTER                         22390002
*                                                                       22400002
* OUTPUT:                                                               22410002
*    NONE                                                               22420002
*                                                                       22430002
* DESTROYED:                                                            22440002
*    R0,BALREG2,BALREG1,OPTNCCW                                         22450002
*                                                                       22460002
* SUBROUTINES USED:                                                     22470002
*    TOABSL,IO                                                          22480002
***                                                                     22490002
*                                                                       22500002
*                                                                       22510002
*      WRITE THE BLOCK.                                                 22520002
*                                                                       22530002
*      IT IS IN 'OUTDATA' AND ITS TTR IS IN 'WRITETTR'.                 22540002
*                                                                       22550002
         L     R0,WRITETTR             GET WRITE ADDRESS                22560002
         BAL   BALREG2,TOABSL          CONVERT IT                       22570002
         LA    R0,OUTDATA              GET ADDRESS OF BUFFER            22580002
         MVC   OPTNCCW,RD              GET SKELETON CCW                 22590002
         ST    R0,OPTNCCW              MOVE IN ADDRESS                  22600002
         BAL   BALREG2,WRITE           ***WRITE DATA FROM OUTPUT***     22610002
         BR    BALREG3                 RETURN                           22620002
*                                                                       22630002
         EJECT                                                          22640002
*                                                                       22650002
****************                                                        22660002
*              *                                                        22670002
WRLSTRTN EQU   *                                                        22680002
*              *                                                        22690002
****************                                                        22700002
*                                                                       22710002
* FUNCTION:                                                             22720002
*    WRITES THE LAST BLOCK OF A CHAIN OF DATA SET LEVEL POINTERS IN     22730002
*    GENERATION DATA GROUP.  IGG0CLC4 HAS PREVIOUSLY REMOVED THE        22740002
*    LAST ENTRY TO MAKE ROOM IN THE GROUP FOR THE NEW ENTRY.            22750002
*    IF THE LAST BLOCK IS ALSO THE FIRST BLOCK, IT IS SAVED FOR         22760002
*    FURTHER UPDATING (IN THE ICE), TO BE DONE BY IGG0CLC7.             22770002
*                                                                       22780002
* INPUT:                                                                22790002
*    INPUT,READTTR,BALREG3 IS RETURN REGISTER.                          22800002
*                                                                       22810002
* OUTPUT:                                                               22820002
*    NONE                                                               22830002
*                                                                       22840002
* DESTROYED:                                                            22850002
*    POINT,R0,BALREG2,OPTNCCW                                           22860002
*                                                                       22870002
* SUBROUTINES USED                                                      22880002
*    TOABSL,IO                                                          22890002
***                                                                     22900002
*                                                                       22910002
*                                                                       22920002
*      ESTABLISH ADDRESSABILITY FOR THE FIRST ENTRY IN THE BLOCK TO     22930002
*      BE WRITTEN.  IF THE FIRST ENTRY IS AN ICE, THE BLOCK WILL        22940002
*      NOT BE WRITTEN; THE BLOCK IS SAVED SO THAT WHEN THE ICE          22950002
*      IS UPDATED, A READ IS NOT REQUIRED.                              22960002
*                                                                       22970002
         LA    POINT2,INENTRY          GET ADDRESS OF FIRST ENTRY       22980002
         USING ENTRY,POINT2            ESTABL ADDRBLTY TO ENTRY         22990002
         CLI   ETYPE,ICETYP            IS ENTRY AN ICE?                 23000002
         BCR   8,BALREG3               YES, DO NOT WRITE THE BLOCK      23010002
*                                                                       23020002
*      WRITE THE BLOCK.  IT IS IN INPUT AND ITS TTR IS IN READTTR.      23030002
*                                                                       23040002
         L     R0,READTTR              GET WRITE ADDRESS                23050002
         BAL   BALREG2,TOABSL          CONVERT IT                       23060002
         MVC   OPTNCCW,RD              MOVE IN READ DATA CCW            23070002
         BAL   BALREG2,WRITE           ***WRITE DATA FROM INPUT***      23080002
         MVC   READTTR,SAVETTR3        SET TTR TO BLK TO BE UPDATED     23090002
         OI    FLAG3,NEEDBLK           * SET FLAG SO C6 WILL READ BLK   23100002
         BR    BALREG3                 RETURN                           23110002
*                                                                       23120002
         DROP  POINT2                                                   23130002
*                                                                       23140002
         EJECT                                                          23150002
*                                                                       23160002
****************                                                        23170002
*              *                                                        23180002
EMPTYRTN EQU   *                                                        23190002
*              *                                                        23200002
****************                                                        23210002
*                                                                       23220002
* FUNCTION:                                                             23230002
*    PROCESSES A REQUEST TO EMPTY A GENERATION DATA GROUP.              23240002
*    1.  READS BLOCK.                                                   23250002
*    2.  REMOVES ALL VCB'S POINTED TO FROM BLOCK.                       23260002
*    3.  MOVES NEW ENTRY INTO FIRST BLOCK AND SAVES IT.                 23270002
*    4.  FREES BLOCK, IF NOT THE FIRST.                                 23280002
*    5.  REPEATS 1 THRU 4 UNTIL END OF CHAIN AND GROUP IS EMPTIED.      23290002
*                                                                       23300002
*    FIRST BLOCK IS SAVED FOR IGG0CLC7, WHICH UPDATES THE ICE           23310002
*    AND WRITES THE BLOCK.                                              23320002
*                                                                       23330002
* INPUT:                                                                23340002
*    ICE,LNKENTRY,FLAG4(COMPLETE=0), NEW ENTRY AT NAME, BALREG3         23350002
*    IS RETURN REGISTER.                                                23360002
*                                                                       23370002
* OUTPUT:                                                               23380002
*    OUTPUT,WRITETTR                                                    23390002
*                                                                       23400002
* DESTROYED:                                                            23410002
*    BALREGS,DELTTR3=0,OPTNCCW,R0,BALREG2,BALREG1,LEN,LINKTTR=0,        23420002
*    POINT,TARGET,SIZE,INPUT                                            23430002
*                                                                       23440002
* SUBROUTINES USED:                                                     23450002
*    TOABSL,IO,SETUP,FRVCBRTN,INCR,FRBLOK                               23460002
***                                                                     23470002
*                                                                       23480002
*                                                                       23490002
*        ESTABLISH POINT AS A BASE REGISTER FOR INSPECTING ENTRIES.     23500002
*                                                                       23510002
         USING ENTRY,POINT2            ESTABL ADDRBLTY TO ENTRY         23520002
         ST    BALREG3,BALREGS         SAVE THE RETURN REGISTER         23530002
*                                                                       23540002
*      TTR OF FIRST BLOCK OF CHAIN TO BE EMPTIED IS IN THE ICE OF       23550002
*      THAT BLOCK.                                                      23560002
*                                                                       23570002
         MVC   READTTR(L'IFSTBLK),IFSTBLK   GET TTR                     23580002
*                                                                       23590002
EMPREAD  EQU   *                                                        23600002
*                                                                       23610002
*      READ THE BLOCK AND SETUP THE ENTRY POINTERS.                     23620002
*                                                                       23630002
         MVC   OPTNCCW,RD              GET CCW                          23640002
         L     R0,READTTR              GET READ ADDRESS                 23650002
         BAL   BALREG2,TOABSL          CONVERT IT                       23660002
         BAL   BALREG1,IO3             ***READ DATA INTO INPUT***       23670002
         LA    POINT2,INENTRY          ADDRESS OF FIRST ENTRY           23680002
*                                                                       23690002
EMPCHEK  EQU   *                                                        23700002
*                                                                       23710002
*      INSPECT THE INDICATED ENTRY                                      23720002
*                                                                       23730002
         CLC   ENAME,HIBIN             IS THE NAME ALL 'FF'S?           23740002
         BE    EMPRENEW                YES, END OF BLOCK                23750002
*                                                                       23760002
         CLI   ETYPE,VCBPETYP          IS THE ENTRY A VCBPE?            23770002
         BNE   EMPNEXT                 NO, DONE WITH THIS ENTRY         23780002
*                                                                       23790002
         MVC   DELTTR3(L'ETTR),ETTR    GET VCB CHAIN PTR                23800002
         BAL   BALREG3,FRVCBRTN        GO FREE THEM                     23810002
*                                                                       23820002
EMPNEXT  EQU   *                                                        23830002
*                                                                       23840002
         BAL   BALREG1,INCR2           INCREMENT ENTRY POINTER          23850002
         B     EMPCHEK                 LOOP BACK                        23860002
*                                                                       23870002
*                                                                       23880002
EMPRENEW EQU   *                                                        23890002
*                                                                       23900002
*      IF THE BLOCK JUST SCANNED WAS THE FIRST BLOCK, THEN              23910002
*      BUILD THE NEW FIRST BLOCK IN OUTPUT, COMPLETE.  PUT ITS TTR      23920002
*      IN WRITETTR. THE BLOCK IS THEN PASSED TO IGG0CLC7 FOR            23930002
*      THE UPDATE OF ITS ICE.                                           23940002
*                                                                       23950002
*      IF THE BLOCK JUST SCANNED WAS NOT THE FIRST BLOCK THEN GO TO     23960002
*      EMPFR TO FREE IT.                                                23970002
*                                                                       23980002
         TM    FLAG4,COMPLETE          * IS THE FIRST BLOCK COMPLETE?   23990002
         BO    EMPFR                   YES                              24000002
*                                                                       24010002
*      SET UP AN EMPTY BLOCK SO THE NEXT LOAD OF UPDATE CAN INSERT      24020002
*      THE NEW ENTRY.                                                   24030002
*                                                                       24040002
         MVC   OUTDATA,INDATA          PUT 1ST BLK INTO OUTPUT  SA55202 24050002
         XC    LINKTTR,LINKTTR         ENSURE LINK ENTRY HAS ZERO TTR   24060002
         MVC   OUTENTRY+L'ICE(L'LNKENTRY),LNKENTRY       SET ILE        24070002
         MVI   OUTBYTSU+1,X20          SET BYTES USED FOR UPDATE        24080002
*                                                                       24090002
*      INDICATE BLOCK IS COMPLETE AND SAVE ITS TTR.                     24100002
*                                                                       24110002
         OI    FLAG4,COMPLETE          * SET COMPLETE                   24120002
         MVC   WRITETTR(L'IFSTBLK),IFSTBLK     NEW BLOCK'S WRITE ADDR   24130002
*                                                                       24140002
         B     EMPRESET                GO CHECK FOR ANOTHER BLOCK       24150002
*                                                                       24160002
*                                                                       24170002
EMPFR    EQU   *                                                        24180002
*                                                                       24190002
*      FREE THE BLOCK JUST SCANNED.                                     24200002
*                                                                       24210002
         L     R0,READTTR              GET WRITE ADDRESS                24220002
         BAL   BALREG3,FRBLKRTN        GO TO FREE BLOCK ROUTINE         24230002
*                                                                       24240002
*                                                                       24250002
EMPRESET EQU   *                                                        24260002
*                                                                       24270002
*      IF THERE IS ANOTHER BLOCK, GET ITS READ ADDRESS AND GO TO        24280002
*      'EMPREAD' TO READ IT.                                            24290002
*                                                                       24300002
*      IF THERE IS NOT ANOTHER BLOCK, RETURN.                           24310002
*                                                                       24320002
         MVC   READTTR(L'ETTR),ETTR    GET LINK TTR                     24330002
         NC    READTTR,READTTR         IS IT ZERO?                      24340002
         BNZ   EMPREAD                 NO                               24350002
*                                                                       24360002
*      END OF CHAIN.                                                    24370002
*                                                                       24380002
         MVI   FLAG4,X00               * RESET FLAG4                    24390002
         L     BALREG3,BALREGS         RESTORE RETURN REGISTER          24400002
         BR    BALREG3                 RETURN                           24410002
*                                                                       24420002
         DROP  POINT2                                                   24430002
*                                                                       24440002
         EJECT                                                          24450002
*                                                                       24460002
****************                                                        24470002
*              *                                                        24480002
FRNDXRTN EQU   *                                                        24490002
*              *                                                        24500002
****************                                                        24510002
*                                                                       24520002
         ST    BALREG3,BALREGS         SAVE THE RETURN REG              24530002
         USING ENTRY,POINT2            ESTABL ADDRBLTY TO ENTRY         24540002
         LA    POINT2,INENTRY+L'ICE    POINT TO FIRST ENTRY IN BLOCK    24550002
*                                                                       24560002
FRNDXRD  EQU   *                                                        24570002
*                                                                       24580002
         L     R0,DELTTR1              ADDR OF FREEABLE BLOCK           24590002
         LTR   R0,R0                   ABOUT TO READ RECORD ZERO?       24600002
         BZ    FRNDXEND                YES, END OF CHAIN                24610002
*                                                                       24620002
         BAL   BALREG2,TOABSL          GO TO CONVERT                    24630002
         MVC   OPTNCCW,RD              MOVE IN READ DATA CCW            24640002
         BAL   BALREG1,IO3             ***READ DATA INTO INPUT***       24650002
         L     R0,DELTTR1              ADDR OF FREEABLE BLOCK           24660002
         BAL   BALREG3,FRBLKRTN        ***FREE BLOCK***                 24670002
         MVC   DELTTR1(L'ETTR),ETTR    ADDR OF NEXT FREEABLE BLOCK      24680002
         CLI   ETYPE,VCBPETYP          ENTRY FOUND A VCBPE?             24690002
         BE    FRNDXVCB                GO FREE THEM                     24700002
*                                                                       24710002
         CLI   ETYPE,DSPETYP           ENTRY FOUND A DSPE?              24720002
         BNL   FRNDXEND                YES, DONE                        24730002
*                                                                       24740002
         B     FRNDXRD                 READ NEXT BLOCK IF THERE IS ONE  24750002
*                                                                       24760002
*                                                                       24770002
FRNDXVCB EQU   *                                                        24780002
*                                                                       24790002
         MVC   DELTTR3,DELTTR1         GET VCB CHAIN PTR                24800002
         BAL   BALREG3,FRVCBRTN        ***FREE VCBS***                  24810002
*                                                                       24820002
FRNDXEND EQU   *                                                        24830002
*                                                                       24840002
         L     BALREG3,BALREGS         RESTORE RETURN REG               24850002
         BR    BALREG3                 RETURN                           24860002
*                                                                       24870002
         EJECT                                                          24880002
*                                                                       24890002
****************                                                        24900002
*              *                                                        24910002
FRVCBRTN EQU   *                                                        24920002
*              *                                                        24930002
****************                                                        24940002
*                                                                       24950002
         USING VCBD,VCBMAIN            ESTABL ADDRBLTY TO VCB           24960002
         LA    R0,BLOCK+L'VCBBAL       LENGTH OF REQUIRED AREA          24970002
         GETMAIN R,LV=(0)                                               24980002
         ST    R1,SVVCBLK5             SAVE BLOCK PTR (ESTAE)  @YL026UD 24982002
         LR    VCBMAIN,R1              SET BASE TO AREA                 24990002
         ST    BALREG3,VCBBAL          SAVE RETURN REG                  25000002
*                                                                       25010002
FRVCBRD  EQU   *                                                        25020002
*                                                                       25030002
*      SET UP CHANNEL PROGRAM TO READ DATA INTO VCBMAIN AREA.           25040002
*                                                                       25050002
         MVC   OPTNCCW,RD              MOVE IN READ DATA CCW            25060002
         ST    VCBMAIN,OPTNCCW         MOVE IN ADDRESS                  25070002
         MVI   OPTNCCW,RDOP            RESTORE READ DATA OP-CODE        25080002
         L     R0,DELTTR3                                               25090002
         LTR   R0,R0                   ZERO?                            25100002
         BZ    FRVCBEND                YES, DONE                        25110002
         BAL   BALREG2,TOABSL          GO TO CONVERT                    25120002
         BAL   BALREG1,IO3             ***READ DATA INTO VCBMAIN***     25130002
         L     R0,DELTTR3              ADDR OF VCB                      25140002
         BAL   BALREG3,FRBLKRTN        ***FREE BLOCK***                 25150002
         MVC   DELTTR3,VCBLNK          ADDR OF NEXT VCB                 25160002
         B     FRVCBRD                 GO READ IT                       25170002
*                                                                       25180002
*                                                                       25190002
FRVCBEND EQU   *                                                        25200002
*                                                                       25210002
         L     BALREG3,VCBBAL          RESTORE RETURN REG               25220002
         LA    R0,BLOCK+L'VCBBAL       LENGTH OF AREA TO FREE           25230002
         LR    R1,VCBMAIN              ADDR OF AREA TO FREE             25240002
         XC    SVVCBLK5(4),SVVCBLK5    RESET BLOCK PTR (ESTAE) @YL026UD 25242002
         FREEMAIN R,LV=(0),A=(1)                                        25250002
         BR    BALREG3                 RETURN                           25260002
*                                                                       25270002
         DROP  VCBMAIN                                                  25280002
*                                                                       25290002
         EJECT                                                          25300002
*                                                                       25310002
****************                                                        25320002
*              *                                                        25330002
FRBLKRTN EQU   *                                                        25340002
*              *                                                        25350002
****************                                                        25360002
*                                                                       25370002
*      FREE ONE BLOCK                                                   25380002
*                                                                       25390002
*      PRIOR TO FIRST HOLE IN SYSCTLG?                          SA52119 25400002
         CL    R0,VFHOLE                                        SA52119 25410002
         BNL   FROK                    NO, OK TO JUST FREE IT           25420002
         ST    R0,VFHOLE               YES, RESET 'VFHOLE'              25430002
*                                                                       25440002
FROK     EQU   *                                                        25450002
*                                                                       25460002
         BAL   BALREG2,TOABSL          GO TO CONVERT                    25470002
         MVC   OPTNCCW,NOP             MOVE IN SKELETON CCW             25480002
         MVI   OPTNCCW,WKDOP           MOVE IN WRITE KEY & DATA OP-CODE 25490002
         BAL   BALREG1,IO3             ***WRITE ZERO KEY & DATA***      25500002
         BR    BALREG3                 RETURN                           25510002
*                                                                       25520002
         EJECT                                                          25530002
*                                                                       25540002
****************                                                        25550002
*              *                                                        25560002
BLVCBRTN EQU   *                                                        25570002
*              *                                                        25580002
****************                                                        25590002
*                                                                       25600002
         LA    VCBMAIN,OUTDATA         SET BASE FOR VCB                 25610002
         USING VCBD,VCBMAIN            ESTABL BASE FOR VCB              25620002
         MVC   OUTKEY,HIBIN            SET KEY TO X'FF'                 25630002
         XC    VCBTTR,VCBTTR           ZERO 'VCBTTR'                    25640002
         LA    MODULUS,D20             NUMBER OF VOLUMES PER VCB        25650002
         XR    WORK2,WORK2             ZERO 'WORK2'                     25660002
         L     WORK1,CAMPTR3           POINT TO VOLUME LIST             25670002
         LH    WORK3,0(WORK1)          GET NUMBER OF VOLUMES            25680002
         BCTR  WORK3,0                 MINUS 1                          25690002
         DR    WORK2,MODULUS           NUMBER OF VCB'S - 1 IN WORK3     25700002
         LA    WORK2,D01(WORK2)        NUMBER OF VOLUMES IN LAST VCB    25710002
         LA    COUNT,D01(WORK3)        VCB COUNTER                      25720002
         MH    WORK3,H240              TIMES NUMBER OF BYTES/VCB        25730002
         LA    POINT2,D02(WORK1,WORK3) 1ST VOLUME ENTRY FOR LAST VCB    25740002
         LR    WORK1,WORK2             NUMBER OF VOLUMES IN LAST VCB    25750002
         MH    WORK1,H12               NUMBER OF BYTES TO BE MOVED      25760002
*                                                                       25770002
BLVCB1   EQU   *                                                        25780002
*                                                                       25790002
         XC    OUTDATA,OUTDATA         CLEAR BLOCK                      25800002
         BCTR  WORK1,0                 MINUS 1 FOR EXECUTE              25810002
         EX    WORK1,MOVE3             MOVE USERS VOLUME LIST           25820002
         STH   WORK2,VCBVOLCT          VOLUME COUNT TO VCB              25830002
         MVC   VCBLNK,VCBTTR           WRITE LINK TTR                   25840002
         L     R0,VFHOLE               GET NEXT BLOCK ADDR              25850002
         ST    R0,VCBTTR               SAVE AS NEXT LINK TTR            25860002
         BAL   BALREG2,TOABSL          GO TO CONVERT                    25870002
         MVC   OPTNCCW,WKD             MOVE IN WRITE KEY & DATA OP-CODE 25880002
         BAL   BALREG1,IO3             ***WRITE KEY & DATA***           25890002
         MVC   OPTNCCW,RKD             READ KEY & DATA -- NO TRANSFER   25900002
         OI    OPTNCCW+4,CC            COMMAND CHAIN                    25910002
         BAL   BALREG1,IO3             ***VERIFY WRITE & SEARCH KEY=0** 25920002
*                                                                       25930002
*      CHECK FOR CATALOG FULL CONDITION.                                25940002
*                                                                       25950002
         LTR   R15,R15                 CATALOG FULL?                    25960002
         BZ    BLVCB2                  NO                               25970002
*                                                                       25980002
         MVC   DELTTR3,VCBTTR          GET VCB CHAIN PTR                25990002
         BAL   BALREG3,FRVCBRTN        GO FREE THEM                     26000002
         B     ERR20                   AND EXIT                         26010002
*                                                                       26020002
*                                                                       26030002
BLVCB2   EQU   *                                                        26040002
*                                                                       26050002
         BAL   BALREG2,TORLTV          GET THE NEW TTR                  26060002
         ST    R0,VFHOLE               PUT NEW TTR IN VICE              26070002
         LA    WORK2,D20(WORK2)        BUMP VOL COUNT BY 20             26080002
         SH    POINT2,H240             BACKUP IN VOLUME LIST            26090002
         LA    WORK1,L'VCBVOLS         NUMBER OF BYTES TO BE MOVED      26100002
         BCT   COUNT,BLVCB1            BRANCH IF ANY MORE VCB'S         26110002
         MVC   TTR,VCBTTR              HEAD OF CHAIN TTR INTO VCBPE     26120002
         XC    VCBTTR,VCBTTR           ZERO 'VCBTTR'                    26130002
         BR    BALREG3                 RETURN                           26140002
*                                                                       26150002
         DROP  POINT2                                                   26160002
*                                                                       26170002
         EJECT                                                          26180002
*                                                                       26190002
****************                                                        26200002
*              *                                                        26210002
INCR2    EQU   *                                                        26220002
*              *                                                        26230002
****************                                                        26240002
*                                                                       26250002
* FUNCTION:                                                             26260002
*    ADJUSTS POINT TO POINT TO THE NEXT ENTRY IN INPUT                  26270002
* INPUT:                                                                26280002
*    ETYPE,POINT,BALREG1 IS RETURN REGISTER                             26290002
* OUTPUT:                                                               26300002
*    POINT,LENGTH                                                       26310002
* DESTROYED:                                                            26320002
*    NOTHING                                                            26330002
*                                                                       26340002
***                                                                     26350002
*                                                                       26360002
         USING ENTRY,POINT2            ESTABL ADDRBLTY TO ENTRY         26370002
*                                                                       26380002
         XR    LENGTH2,LENGTH2         ZERO 'LENGTH2'                   26390002
         IC    LENGTH2,ETYPE           PICK UP ENTRY TYPE               26400002
*                                                                       26410002
*      TOTAL LENGTH OF THE ENTRY IS 12 + 2*(ETYPE)                      26420002
*                                                                       26430002
         LA    LENGTH2,D12(LENGTH2,LENGTH2)    CALCULATE LENGTH         26440002
         AR    POINT2,LENGTH2          ADJUST POINT                     26450002
         BR    BALREG1                 POINT IS AT NEXT ENTRY           26460002
*                                                                       26470002
         DROP  POINT2                                                   26480002
*                                                                       26490002
         EJECT                                                          26500002
*                                                                       26510002
****************                                                        26520002
*              *                                                        26530002
WRITE    EQU   *                                                        26540002
*              *                                                        26550002
****************                                                        26560002
*                                                                       26570002
         MVI   OPTNCCW,WDOP            MOVE IN WRITE DATA OP CODE       26580002
         BAL   BALREG1,IO3             WRITE DATA                       26590002
*                                                                       26600002
*      VERIFY THE WRITE OPERATION                                       26610002
*                                                                       26620002
         MVC   OPTNCCW,RKD             MOVE IN CCW - NO TRANSFER        26630002
         BAL   BALREG1,IO3             ***READ KEY & DATA***            26640002
         BR    BALREG2                 RETURN                           26650002
*                                                                       26660002
         EJECT                                                          26670002
*                                                                       26680002
****************                                                        26690002
*              *                                                        26700002
TOABSL   EQU   *                                                        26710002
*              *                                                        26720002
****************                                                        26730002
*                                                                       26740002
* FUNCTION:                                                             26750002
*    CONVERT THE TTR0 IN R0 TO AN ABSOLUTE DASD ADDRESS AND             26760002
*    PUT IT INTO THE IOB MBBCCHHR                                       26770002
*                                                                       26780002
* INPUT:                                                                26790002
*    R0 IS THE TTR0 TO BE CONVERTED                                     26800002
*    RETURN ADDRESS IN BALREG2                                          26810002
*                                                                       26820002
* OUTPUT:                                                               26830002
*    ABSOLUTE DASD ADDRESS IN IOB                                       26840002
*    ERROR CODE IN R15                                                  26850002
*                                                                       26860002
* DESTROYED:                                                            26870002
*    REGISTERS - R0,R1,R2,R14, AND R15=0                                26880002
*    WA - SAVEAREA AND MBBCCHHR OF THE IOB                              26890002
*                                                                       26900002
* SUBROUTINES USED:                                                     26910002
*         THE RESIDENT CONVERT ROUTINE - IECPCNVT                       26920002
*                                                                       26930002
*                                                                       26940002
***                                                                     26950002
*                                                                       26960002
         L     R15,EPTOABSL            GET EP TO 'IECPCNVT'             26970002
         B     CONVERT                 GO SET UP FOR CONVERT            26980002
*                                                                       26990002
         EJECT                                                          27000002
*                                                                       27010002
****************                                                        27020002
*              *                                                        27030002
TORLTV   EQU   *                                                        27040002
*              *                                                        27050002
****************                                                        27060002
*                                                                       27070002
* FUNCTION:                                                             27080002
*    MOVE THE DASD ADDRESS OF CCHHR FROM NXTCNT INTO THE CCHHR OF THE   27090002
*    IOB.  THIS GIVES THE TTR OF THE NEXT FREE BLOCK.                   27100002
*                                                                       27110002
* INPUT:                                                                27120002
*    RETURN IN BALREG2                                                  27130002
*    UPDATED NXTCNT                                                     27140002
*                                                                       27150002
* OUTPUT:                                                               27160002
*    TTR0 IN R0                                                         27170002
*                                                                       27180002
* DESTROYED:                                                            27190002
*    REGISTERS -- R0,R1,R2,R14, AND R15=0                               27200002
*    WA -- SAVEAREA AND CCHHR OF IOB                                    27210002
*                                                                       27220002
* SUBROUTINES USED:                                                     27230002
*         THE RESIDENT CONVERT ROUTINE -- IECPRLTV                      27240002
*                                                                       27250002
*                                                                       27260002
***                                                                     27270002
*                                                                       27280002
*      MOVE DATA COUNT FIELD INTO IOB                                   27290002
*                                                                       27300002
         MVC   IOBSKADD+3(L'NXTCCHHR),NXTCCHHR MOVE DATA COUNT FIELD    27310002
         L     R15,EPTORLTV            GET EP TO 'IECPRLTV'             27320002
*                                                                       27330002
CONVERT  EQU   *                                                        27340002
*                                                                       27350002
         STM   R9,R13,SVAREA5          SAVE REGS DESTROYED BY CONVERT   27360002
         L     R1,DEBADDR              GET DEB ADDRESS                  27370002
         LA    R2,IOBSKADD             POINT TO MBBCCHHR                27380002
         BALR  BALREG1,R15             GO TO CONVERT                    27390002
         LM    R9,R13,SVAREA5          RESTORE REGISTERS                27400002
         BR    BALREG2                 RETURN                           27410002
*                                                                       27420002
         EJECT                                                          27430002
*                                                                       27440002
****************                                                        27450002
*              *                                                        27460002
IO3      EQU   *                                                        27470002
*              *                                                        27480002
****************                                                        27490002
*                                                                       27500002
* FUNCTION:                                                             27510002
*    1.  IF THE DEVICE HAS THE RPS FEATURE, THE SET SECOTR CCW IS       27520002
*        UPDATED.                                                       27530002
*    2.  ISSUE EXCP FOR THE CHANNEL PROGRAM POINTED TO BY THE JOB.      27540002
*    3.  WAIT FOR THE OPERATION TO COMPLETE AND CHECK THE ECB.          27550002
*    4.  IF AN END OF EXTENT CONDITION, BRANCH TO IGC0002H     @YL026UD 27560002
*        AND EXTEND THE CATALOG.                               @YL026UD 27570002
*    5.  IF A PERMANENT I/O ERROR, SET AN ERROR CODE AND BRANCH TO      27580002
*        IGG0CLC7.                                                      27590002
*                                                                       27600002
* INPUT:                                                                27610002
*    UPDATED CHANNEL PROGRAM                                            27620002
*    RETURN ADDRESS IN BALREG 1                                         27630002
*                                                                       27640002
* OUTPUT:                                                               27650002
*    1.  FILLED BUFFER                                                  27660002
*    2.  EMPTIED BUFFER                                                 27670002
*    3.  ANOTHER FREE BLOCK ADDRESS                                     27680002
*                                                                       27690002
* DESTROYED:                                                            27700002
*    REGISTERS R0,R1,R15 (IF EXTENDS), AND ERRCAT                       27710002
*                                                                       27720002
* EXTERNAL ROUTINES USED:                                               27730002
*    EXCP, WAIT, SVC 28 TO EXTEND CATALOG                               27740002
*                                                                       27750002
* EXITS:                                                                27760002
*         IGC0002H TO EXTEND THE CATALOG                       @YL026UD 27770002
*         IGG0CLC7 FOR PERMANENT I/O ERROR                              27780002
***                                                                     27790002
*                                                                       27800002
         USING RPSD,R1                 ESTABL ADDRBLTY TO RPS AREA      27810002
         TM    FLAG2,RPSDEV            * RPS FEATURE?                   27820002
         BZ    EXCP3                   BRANCH IF NO                     27830002
*                                                                       27840002
         L     R1,RPSAVEP              GET RPS SAVE AREA PTR            27850002
         STM   R9,R2,RPSAVE            SAVE REGS DESTROYED BY CONVERT   27860002
         LM    R15,R2,RPSINPUT         GET CONVERT INPUT PARAMETERS     27870002
         IC    R0,IOBSKADD+7           GET R OF CCHHR                   27880002
         BALR  R14,R15                 CONVERT R TO THETA               27890002
         LM    R9,R2,RPSAVE            RESTORE REGISTERS                27900002
*                                                                       27910002
EXCP3    EQU   *                                                        27920002
*                                                                       27930002
         EXCP  IOB                     ISSUE EXCP                       27940002
         WAIT  ECB=ECB                 WAIT FOR REQUEST                 27950002
         XR    R15,R15                 ZERO RETURN CODE                 27960002
         CLI   ECB,X7F                 I/O ERROR?                       27970002
         BCR   8,BALREG1               BRANCH IF NO                     27980002
*                                                                       27990002
         CLI   ECB,X42                 END OF EXTENT?                   28000002
         BNE   ERR28                   BRANCH IF NO AND EXIT            28010002
*                                                                       28020002
*      EXTEND CATALOG                                                   28030002
*                                                                       28040002
         ST    BALREG1,SVBALREG        SAVE CURRENT BALREG1    @YL026UD 28042002
         L     R0,IOBDCB               GET DCB ADDRESS                  28050002
         L     R2,OPENMOD              GET IGC0002H ADDRESS    @YL026UD 28060002
         BALR  BALREG1,R2              EXTEND                  @YL026UD 28064002
*                                                                       28070002
         L     BALREG1,SVBALREG        RESTORE SAVED BALREG1   @YL026UD 28072002
         CH    R15,H08                 ANY MORE EXTENTS?                28080002
         BCR   8,BALREG1               BRANCH IF NO                     28090002
*                                                                       28100002
         LCR   R1,R15                  RETURN CODE 0?                   28110002
         BNZ   IGG0CLC7                BRANCH IF NO                     28120002
*                                                                       28130002
         B     EXCP3                   RE-ISSUE REQUEST                 28140002
*                                                                       28150002
         DROP  R1                                                       28160002
*                                                                       28170002
         EJECT                                                          28180002
*                                                                       28190002
ERRTN    EQU   *                                                        28200002
*                                                                       28210002
         MVC   DELTTR1,TTR0            PREPARE FOR FRNDXRTN             28220002
         BAL   BALREG3,FRNDXRTN        GO FREE INDEX CHAIN              28230002
         B     ERR20                   SET RETURN CODE OF 20   @YL026UD 28230102
*                                                                       28230402
*                                                                       28232002
ERR08    EQU   *                                                        28234002
*                                                                       28236002
         MVI   ERRCATSV,ERROR08        RETURN CODE IS 08                28238002
         B     IGG0CLC7                BRANCH TO IGG0CLC7      @YL026UD 28238402
*                                                                       28238802
*                                                                       28239202
ERR12    EQU   *                                                        28239602
*                                                                       28239702
         MVI   ERRCATSV,ERROR12        RETURN CODE IS 12                28239802
         B     IGG0CLC7                BRANCH TO IGG0CLC7      @YL026UD 28239902
*                                                                       28243202
*                                                                       28245202
ERR16    EQU   *                                                        28245602
*                                                                       28246002
         MVI   ERRCATSV,ERROR16        RETURN CODE IS 16                28246402
         B     IGG0CLC7                BRANCH TO IGG0CLC7      @YL026UD 28246502
*                                                                       28246602
*                                                                       28246702
ERR20    EQU   *                                                        28250002
*                                                                       28260002
         MVI   ERRCATSV,ERROR20        RETURN CODE IS 20                28270002
         B     IGG0CLC7                BRANCH TO IGG0CLC7      @YL026UD 28280002
*                                                                       28290002
*                                                                       28292002
ERR24    EQU   *                                                        28294002
*                                                                       28296002
         MVI   ERRCATSV,ERROR24        RETURN CODE IS 24                28298002
         B     IGG0CLC7                BRANCH TO IGG0CLC7      @YL026UD 28298402
*                                                                       28298802
*                                                                       28300002
ERR28    EQU   *                                                        28310002
*                                                                       28320002
         MVI   ERRCATSV,ERROR28        RETURN CODE IS 28                28330002
         B     IGG0CLC7                BRANCH TO IGG0CLC7      @YL026UD 28340002
*                                                                       28350002
*                                                                       28430002
IGG0CLC6 EQU   *                                                        28440002
*                                                                       28450002
         L     R15,IGG0CLCE            OBTAIN MODULE NAME      @YL026UD 28460002
         BALR  R14,R15                 BRANCH TO IGG0CLCE      @YL026UD 28470002
*                                                                       28480002
*                                                                       28490002
IGG0CLC7 EQU   *                                                        28500002
*                                                                       28510002
         L     R15,ERRORMOD            OBTAIN MODULE NAME      @YL026UD 28520002
         BALR  R14,15                  BRANCH TO ERROR MODULE  @YL026UD 28522002
*                                                                       28530002
         TITLE 'IGG0CLCD - (ESTAEXIT) ESTAE EXIT ROUTINE'      @YL026UD 28572002
*********************************************************************** 28572402
*                                                                     * 28572802
*     ESTAEXIT - ESTAE EXIT ROUTINE                                   * 28572902
*                                                                     * 28573002
*********************************************************************** 28573102
*                                                              @YL026UD 28573202
         ENTRY ESTAEXIT                                        @YL026UD 28573602
*                                                              @YL026UD 28573702
*      ESTAEXIT IS GIVEN CONTROL ON PERCOLATION FROM ANOTHER   @YL026UD 28574002
*      ESTAE EXIT ROUTINE, OR RECEIVES CONTROL BECAUSE OF AN   @YL026UD 28574402
*      INTERRUPT IN MODULES IGG0CLCC, IGG0CLCD, IGG0CLCE.      @YL026UD 28574802
*      REGISTER 14 MUST BE SAVED FOR RETURN TO THE TRM.        @YL026UD 28575202
*      AN RTCA MAY OR MAY NOT BE AVAILABLE.  ESTAEXIT ALWAYS   @YL026UD 28575602
*      PERCOLATES TO THE NEXT ESTAE ON THE CHAIN.              @YL026UD 28576002
*                                                              @YL026UD 28576402
*                                                              @YL026UD 28576802
ESTAEXIT EQU   *                                               @YL026UD 28578002
*                                                              @YL026UD 28578402
         BALR  BASE,0                  SET BASE REG FOR MODULE @YL026UD 28578802
         USING *,BASE                  ESTABLISH BASE REGISTER @YL026UD 28579202
*                                                              @YL026UD 28579602
         CH    R0,H12                  IS RTCA AVAILABLE       @YL026UD 28579702
         BE    NORTCA                  NO, PROCESS WITHOUT IT  @YL026UD 28579802
         STM   R14,R12,12(R13)         SAVE REGISTERS          @YL026UD 28580002
         LR    R2,R14                  SAVE RETURN REGISTER    @YL026UD 28583202
         L     R15,0(R1)               GET ESTAE INFO LIST PTR @YL026UD 28585202
         L     R5,0(R15)               RESTORE SVRB BASE REG   @YL026UD 28585602
         L     R6,4(R15)               RESTORE CATLG WKA REG   @YL026UD 28586002
         L     R13,8(R15)              RESTORE BLDL  WKA REG   @YL026UD 28586402
         LR    R3,R1                   SAVE SDWA-RTCA ADDRESS  @YL026UD 28586502
         USING SDWA,R3                 SET SDWA ADDRESSIBILITY @YL026UD 28586602
         TM    SDWAERRC,SDWAPERC       WERE WE PERCOLATED TO?  @YL026UD 28587702
         BO    PERC                    YES, BYPASS DUMPING     @YL026UD 28588102
*                                                              @YL026UD 28588502
*      NOT PERCOLATED TO                                       @YL026UD 28588602
*                                                              @YL026UD 28588702
         SETRP RECORD=YES,DUMP=NO,RECPARM=RECORD,RC=0,         @YL026UD*28588802
               WKAREA=(R3)                                     @YL026UD 28591602
*                                                              @YL026UD 28593602
         MVC   DUMPHDR(L'SKELHDR),SKELHDR STORE SDUMP HEADER   @OZ29464 28594037
         MVC   DUMPLIST(SDUMPSIZ),DUMPL STORE PARM LIST        @OZ29464 28594137
         LA    R2,DUMPHDR              POINT TO HEADER         @OZ29464 28594737
         SDUMP HDRAD=(R2),MF=(E,DUMPLIST) ISSUE SDUMP MACRO    @OZ29464 28594837
         B     DEQALL                  BRANCH TO DEQUES        @YL026UD 28594937
*                                                              @YL026UD 28595037
PERC     EQU   *                                               @YL026UD 28595137
*                                                              @YL026UD 28595202
*      PERCOLATED TO                                           @YL026UD 28595602
*                                                              @YL026UD 28596002
         SETRP RECORD=YES,DUMP=IGNORE,RECPARM=RECORD,RC=0,     @YL026UD*28596102
               WKAREA(R3)                                      @YL026UD 28596202
         B     DEQALL                  BRANCH TO DEQUES        @YL026UD 28597102
         DROP  R3                                              @YL026UD 28597602
*                                                              @YL026UD 28598002
NORTCA   EQU   *                                               @YL026UD 28598102
*                                                              @YL026UD 28599402
         L     R5,0(R2)                RESTORE SVRB BASE REG   @YL026UD 28599802
         L     R6,4(R2)                RESTORE CATLG WKA REG   @YL026UD 28600202
         L     R13,8(R2)               RESTORE BLDL  WKA REG   @YL026UD 28600602
         LR    R2,R14                  SAVE RETURN REGISTER    @YL026UD 28600702
*                                                              @YL026UD 28600802
         TM   FLAG2,ESTAEFL      TEST ESTAE FLAG               @ZA03161 28601837
         BO   FREEALL            BRANCH IF ESTAE FAILURE       @ZA03161 28602837
*                                                                       28603802
*                                                              @YL026UD 28604002
DEQALL   EQU   *                                               @YL026UD 28604502
*                                                              @YL026UD 28605002
*      DEQUE ALL ENQUED RESOURCES                              @YL026UD 28605502
*                                                              @YL026UD 28606002
         USING SVRBEXTD,R5             ENQ INFO ADDRESSIBILITY @YL026UD 28606502
         XC    ENQRNAM8,ENQRNAM8       RESET RNAME FOR VICE    @YL026UD 28607002
         OI    ENQFLAGS,HAVE           SET FLAG IN CASE NO     @YL026UD 28607502
*                                      PREVIOUS ENQ            @YL026UD 28608002
         DEQ   ,MF=(E,(R5))            DEQUE VICE              @YL026UD 28608502
*                                                              @YL026UD 28609002
         NI    ENQFLAGS,SMCSTEPC       RESET 'STEP MUST CMPLT' @YL026UD 28609502
         MVC   ENQRNAM8,ENQNAME        SET RNAME FOR VOL INDEX @YL026UD 28610002
         DEQ   ,MF=(E,(R5))            DEQUE VOLUME INDEX      @YL026UD 28610502
*                                                              @YL026UD 28611002
         OI    ENQFLAGS,RESERVE        TURN ON RESERVE FLAG    @YL026UD 28611502
         MVC   ENQRNAM8,HILVLNAM       SET RNAME FOR HIGH LEVEL@YL026UD 28612002
         DEQ   ,MF=(E,(R5))            DEQUE HIGH LEVEL NAME   @YL026UD 28612502
*                                      AND RELEASE THE DEVICE  @YL026UD 28613002
*                                                              @YL026UD 28613502
*                                                              @YL026UD 28614002
FREEALL  EQU   *                                               @YL026UD 28614502
*                                                              @YL026UD 28615002
*      FREE ALL ACQUIRED STORAGE AREAS                         @YL026UD 28615502
*                                                              @YL026UD 28616002
         L     R1,SVEXTWAP             GET EXTEND WKA PTR      @YL026UD 28616502
         LTR   R1,R1                   DOES WKA EXIST?         @YL026UD 28617002
         BZ    FREEFMT                 BRANCH IF NOT           @YL026UD 28617502
*                                                              @YL026UD 28618002
FREEEXT  EQU   *                                               @YL026UD 28618502
*                                                              @YL026UD 28619002
         LA    R0,EXTWALEN             GET EXTEND WKA LENGTH   @YL026UD 28619502
         SVC   FREEMAIN                FREE EXTEND WORKAREA    @YL026UD 28620002
*                                                              @YL026UD 28620502
FREEFMT  EQU   *                                               @YL026UD 28621002
*                                                              @YL026UD 28621502
         L     R1,SVFMTWAP             GET FORMAT WKA PTR      @YL026UD 28622002
         LTR   R1,R1                   DOES WKA EXIST?         @YL026UD 28622502
         BZ    FREEVCB5                BRANCH IF NOT           @YL026UD 28623002
         LA    R0,FMTWALEN             GET FORMAT WKA LENGTH   @YL026UD 28623502
         SVC   FREEMAIN                FREE FORMAT WORKAREA    @YL026UD 28624002
*                                                              @YL026UD 28624502
FREEVCB5 EQU   *                                               @YL026UD 28625002
*                                                              @YL026UD 28625502
         L     R1,SVVCBLK5             GET VCB WKA PTR (CLC5)  @YL026UD 28626002
         LTR   R1,R1                   DOES WKA EXIST?         @YL026UD 28626502
         BZ    FREEVCB4                BRANCH IF NOT           @YL026UD 28627002
         LA    R0,VCB5LEN              GET VCB WKA LENGTH      @YL026UD 28627502
         SVC   FREEMAIN                FREE VCB WORKAREA (CLC5)@YL026UD 28628002
*                                                              @YL026UD 28628502
FREEVCB4 EQU   *                                               @YL026UD 28629002
*                                                              @YL026UD 28629502
         L     R1,SVVCBLK4             GET VCB WKA PTR (CLC4)  @YL026UD 28630002
         LTR   R1,R1                   DOES WKA EXIST?         @YL026UD 28630502
         BZ    FREEOPN                 BRANCH IF NOT           @YL026UD 28631002
         LA    R0,VCB4LEN              GET VCB WKA LENGTH      @YL026UD 28631502
         SVC   FREEMAIN                FREE VCB WORKAREA (CLC4)@YL026UD 28632002
*                                                              @YL026UD 28632502
FREEOPN  EQU   *                                               @YL026UD 28633002
*                                                              @YL026UD 28633502
         L     R1,SVOPNWAP             GET OPEN WKA PTR        @YL026UD 28634002
         LTR   R1,R1                   DOES WKA EXIST?         @YL026UD 28634502
         BZ    FREERPS                 BRANCH IF NOT           @YL026UD 28635002
         USING DCBAREA,R1                                      @YL026UD 28635502
         L     R0,NMBYTES              GET OPEN WKA LENGTH     @YL026UD 28636002
         DROP  R1                                              @YL026UD 28636502
         SVC   FREEMAIN                FREE OPEN WORKAREA      @YL026UD 28637002
*                                                              @YL026UD 28637502
FREERPS  EQU   *                                               @YL026UD 28638002
*                                                              @YL026UD 28638502
         L     R1,SVRPSWAP             GET RPS WKA PTR         @YL026UD 28639002
         LTR   R1,R1                   DOES WKA EXIST?         @YL026UD 28639502
         BZ    FREECAT                 BRANCH IF NOT           @YL026UD 28640002
         LA    R0,RPSEND-RPSD          GET RPS WKA LENGTH      @YL026UD 28640502
         SVC   FREEMAIN                FREE RPS WORKAREA       @YL026UD 28641002
*                                                              @YL026UD 28641502
FREECAT  EQU   *                                               @YL026UD 28642002
*                                                              @YL026UD 28642502
         TM    FLAG1,LOCATEF           LOCATE REQUEST?         @YL026UD 28643002
         BZ    NOLOCATE                BRANCH IF NOT           @YL026UD 28643502
         LR    R1,R13                  GET BLDL WKA PTR        @YL026UD 28644002
         LA    R0,BLDLEND-BLDLAREA     GET BLDL WKA LENGTH     @YL026UD 28644502
         B     FREECAT1                BRANCH TO FREEMAIN      @YL026UD 28645002
*                                                              @YL026UD 28645502
NOLOCATE EQU   *                                               @YL026UD 28646002
*                                                              @YL026UD 28646502
         LR    R1,R6                   GET CATALOG WKA PTR     @YL026UD 28647002
         LA    R0,WORKEND-WORKAREA     GET CATALOG WKA LENGTH  @YL026UD 28647502
*                                                              @YL026UD 28648002
FREECAT1 EQU   *                                               @YL026UD 28648502
*                                                              @YL026UD 28649002
         SVC   FREEMAIN                FREE WORKAREA           @YL026UD 28649502
*                                                              @YL026UD 28650002
         SR    R15,R15                 ZERO REGISTER 15        @YL026UD 28650502
         LR    R14,R2                  RESTORE RETURN REGISTER @YL026UD 28651002
         BR    R14                     RETURN TO RTM           @YL026UD 28651502
*                                                              @YL026UD 28652002
         TITLE 'IGG0CLCD - CONSTANT DEFINITIONS'               @YL026UD 28652502
*                                                                       28653002
*      CONSTANTS                                                        28653502
*                                                                       28654002
         DS    0F                                                       28654502
SCROPTN  DC    XL4'41004000'           NO PURGE SCRATCH OPTIONS         28655037
SCROPTN2 DC    XL4'4100C000'           OPTNS WITH TIOT ENQUED  @OZ19636 28655137
H06      DC    H'06'                                                    28655502
H08      DC    H'08'                                                    28656002
H12      DC    H'12'                                                    28656502
H240     DC    H'240'                                                   28657002
*                                                                       28657402
MOVEVOLS MVC   OUTDATA+32(0),0(R2)                                      28658602
MOVELVLN MVC   NAME(0),0(R2)                                            28658902
MOVE1    MVC   VOLCNT(0),0(R1)         APPEND VOLUME LIST               28659002
MOVE2    MVC   DSNAME(0),0(DSN)        MOVE IN ALL BUT LAST LEVEL       28659502
MOVE3    MVC   OUTENTRY(0),0(POINT2)                                    28660002
*                                                                       28660502
EXTWALEN DC    AL1(253)                EXTEND WORKAREA SUBPOOL @YL026UD 28661002
         DC    AL3(250)                EXTEND WORKAREA LENGTH  @YL026UD 28661502
FMTWALEN DC    F'512'                  FORMAT WORKAREA LENGTH  @YL026UD 28662002
VCB5LEN  DC    F'260'                  VCB BLOCK (CLC5) LENGTH @YL026UD 28662502
VCB4LEN  DC    F'256'                  VCB BLOCK (CLC4) LENGTH @YL026UD 28663002
RECORD   DC    C'IGG0CLCa'             ESTAE RECORD MODULE     @YL026UD 28663502
         DC    C'IGG0CLCD'             ESTAE RECORD CSECT      @YL026UD 28664002
         DC    8X'00'                  ESTAE RECORD FRR ID     @YL026UD 28664502
*                                                                       28665002
SPNBYTES DS    0F                      PUT ON WORD BOUNDARY             28665502
         DC    AL1(253)                SET SUBPOOL ID                   28666002
         DC    AL3(AREAEND-DCBAREA)    SIZE                    @YL026UD 28666502
*                                                                       28667002
IGG0CLCE DC    V(IGG0CLCE)                                              28667502
ERRORMOD DC    V(IGG0CLC7)                                              28668002
OPENMOD  DC    V(IGC0002H)                                              28668502
DUMPL    SDUMP SDATA=(PSA,LSQA,RGN,LPA),MF=L SDUMP LIST FORM   @OZ29464 28668937
SDUMPSIZ EQU *-DUMPL                                                    28669237
SKELHDR  DS    0XL43                 SDUMP HEADER              @OZ29464 28669537
         DC    AL1(42+1)             SDUMP HEADER SIZE FIELD   @OZ29464 28669837
SKELMSG  DC    CL42'SDUMP - IGG0CLCD - CVOL CATALOG MANAGEMENT' OZ29464 28670137
*                                                              @YL026UD 28670437
*                                                              @YL026UD 28671102
*      PATCH AREA (MAINTENANCE AREA)                           @YL026UD 28673102
*                                                              @YL026UD 28673202
FIXAREA  DC    100X'00'                                        @YL026UD 28673302
*                                                              @YL026UD 28676002
         TITLE 'IGG0CLCD - CONSTANT EQUATE DEFINITIONS'        @YL026UD 28679202
*                                                                       28681902
*      CONSTANT EQUATES                                                 28684602
*                                                                       28687302
VICETYP  EQU   5                       VICE TYPE CODE                   28690002
ICETYP   EQU   3                       ICE TYPE CODE                    28700002
ILETYP   EQU   0                       ILE TYPE CODE                    28710002
IPETYP   EQU   0                       IPE TYPE CODE                    28720002
DSPETYP  EQU   7                       OR MORE, FOR DSPE TYPE CODE      28730002
VCBPETYP EQU   1                       VCBPE TYPE CODE                  28740002
OCVOLTYP EQU   3                       OLD CVOL TYPE CODE               28750002
NCVOLTYP EQU   5                       NEW CVOL TYPE CODE               28760002
ALIASTYP EQU   4                       ALIAS TYPE CODE                  28770002
GIPETYP  EQU   2                       GIPE TYPE CODE                   28780002
ERROR00  EQU   0                                                        28790002
ERROR04  EQU   4                                                        28800002
ERROR08  EQU   8                                                        28810002
ERROR12  EQU   12                                                       28820002
ERROR16  EQU   16                                                       28830002
ERROR20  EQU   20                                                       28840002
ERROR24  EQU   24                                                       28850002
ERROR28  EQU   28                                                       28860002
ERROR32  EQU   32                                                       28870002
ERROR72  EQU   72                                                       28880002
*********************************************************************** 28890002
*      CHARACTER CODE DEPENDENT CONSTANTS                               28900002
*********************************************************************** 28910002
CCDBLANK EQU   C' '                                                     28920002
CCDRPARN EQU   C')'                                                     28930002
CCDMINUS EQU   C'-'                                                     28940002
CCDPLUS  EQU   C'+'                                                     28950002
CCD0     EQU   C'0'                                                     28960002
CCDG     EQU   C'G'                                                     28970002
CCDV     EQU   C'V'                                                     28980002
CCDPERD  EQU   C'.'                                                     28990002
CCDLPARN EQU   C'('                                                     29000002
*********************************************************************** 29010002
CODPERD  EQU   4                                                        29020002
CODBLANK EQU   8                                                        29030002
CODPARN  EQU   12                                                       29040002
CLC1     EQU   C'1'                                                     29050002
CLC2     EQU   C'2'                                                     29060002
CLC3     EQU   C'3'                                                     29070002
CLC4     EQU   C'4'                                                     29080002
CLC5     EQU   C'5'                                                     29090002
CLC6     EQU   C'6'                                                     29100002
CLC7     EQU   C'7'                                                     29110002
EXIT     EQU   3                                                        29120002
FREEMAIN EQU   10                                                       29130002
*                                                                       29150002
CC       EQU   X'40'                   COMMAND CHAIN                    29160002
BLOCK    EQU   256                                                      29170002
VICETTR  EQU   256                                                      29172002
ALIASDSP EQU   17                                                       29174002
*                                                                       29184002
X00      EQU   X'00'                                                    29190002
X01      EQU   X'01'                                                    29192002
X03      EQU   X'03'                                                    29194002
X20      EQU   X'20'                                                    29200002
X42      EQU   X'42'                                                    29210002
X7F      EQU   X'7F'                                                    29220002
XFF      EQU   X'FF'                                                    29222002
D01      EQU   1                                                        29230002
D02      EQU   2                                                        29240002
D12      EQU   12                                                       29242002
D20      EQU   20                                                       29250002
D44      EQU   44                                                       29252002
         TITLE 'IGG0CLCD - REGISTER EQUATE DEFINITIONS'        @YL026UD 29262002
*                                                                       29270002
*      REGISTER EQUATES                                                 29280002
*                                                                       29290002
R0       EQU   0                                                        29300002
R1       EQU   1                                                        29310002
R2       EQU   2                                                        29320002
R3       EQU   3                                                        29330002
R4       EQU   4                       BASE REGISTER FOR ALL MODULES    29340002
R5       EQU   5                                                        29350002
R6       EQU   6                       WORKAREA BASE REGISTER           29360002
R7       EQU   7                                                        29370002
R8       EQU   8                       CAMLST POINTER                   29380002
R9       EQU   9                                                        29390002
R10      EQU   10                                                       29400002
R11      EQU   11                                                       29410002
R12      EQU   12                      SECONDARY LINKAGE REGISTER       29420002
R13      EQU   13                      BLDL WORKAREA BASE REGISTER      29430002
R14      EQU   14                      PRIMARY LINKAGE REGISTER         29440002
R15      EQU   15                                                       29450002
*                                                                       29460002
BALREG1  EQU   R14                                                      29470002
BALREG2  EQU   R12                                                      29480002
BASE     EQU   R4                                                       29490002
*                                                                       29500002
BALREG3  EQU   R7                                                       29510002
BALREG4  EQU   R3                                                       29512002
BALREG5  EQU   R9                                                       29514002
*                                                                       29516002
COUNT    EQU   R13                                                      29520002
MODULUS  EQU   R0                                                       29530002
POINT    EQU   R10                                                      29540002
POINT2   EQU   R5                                              @YL026UD 29542002
SIZE     EQU   R0                                                       29550002
TARGET   EQU   BALREG2                                                  29560002
LENGTH   EQU   R9                                              @YL026UD 29570002
LENGTH2  EQU   R7                                              @YL026UD 29572002
LEVEL    EQU   R7                                                       29574002
LEVEL2   EQU   R1                                              @YL026UD 29576002
VCBMAIN  EQU   R9                                                       29580002
VCBMAIN2 EQU   R11                                             @YL026UD 29580402
*                                                                       29582002
INTEGER  EQU   R15                                                      29584002
ALIASCNT EQU   R11                                                      29586002
DSN      EQU   R1                                                       29588002
GIPE     EQU   R5                                                       29588402
LAST     EQU   R7                                                       29588802
LEN      EQU   R2                                                       29589202
TALLY    EQU   R2                                                       29589602
*                                                                       29589702
WORK1    EQU   R3                                                       29590002
WORK2    EQU   R10                                                      29600002
WORK3    EQU   R11                     WORK2 + 1                        29610002
*                                                                       29620002
*********************************************************************** 29630002
*                                                                     * 29640002
* END OF IGG0CLCD CSECT                                               * 29650002
*                                                                     * 29660002
CLCDSIZE EQU   *                                                      * 29670002
MAXISIZE EQU   IGG0CLCD+X'1000'                                       * 29680002
AVAILABL EQU   MAXISIZE-CLCDSIZE                                      * 29690002
*                                                                     * 29700002
*********************************************************************** 29710002
*                                                                       29720002
         TITLE 'IGG0CLCD - CATALOG WORKAREA DSECT'             @YL026UD 29732002
*                                                                       29740002
*      DSECTS                                                           29750002
*                                                                       29760002
         WORKAREA LIST=YES                                       Y01113 29770037
DUMPLIST EQU   SAVEAREA           SDUMP PARM LIST IN WORKAREA  @OZ29464 29770837
DUMPHDR  EQU   INPUT              SDUMP HEADER                 @OZ29464 29771637
         TITLE 'IGG0CLCD - COMMUNICATION VECTOR TABLE DSECT'   @YL026UD 29772402
CVT      DSECT                                                          29774002
         CVT                                                            29776002
         TITLE 'IGG0CLCD - UNIT CONTROL BLOCK DSECT'           @YL026UD 29778102
UCB      DSECT                                                          29778402
         IEFUCBOB                                                       29778802
         TITLE 'IGG0CLCD - STAE DIAGNOSTIC WORK AREA DSECT'    @YL026UD 31072002
         IHASDWA DSECT=YES                                     @YL026UD 31080002
         END   IGG0CLCD                                        @YL026UD 31090002
./  ADD  SSI=82080029,NAME=IGG0CLCE
         TITLE 'IGG0CLCE - UPDATE, CLEANUP, ERROR PROCESSING'  @YL026UD 00010037
* /* START OF SPECIFICATIONS ****                                       00020002
*                                                                       00030002
*01*  MODULE-NAME = IGG0CLCE                                   @YL026UD 00040002
*01*  STATUS = 00                                                       00050002
*                                                                       00060037
*01*  DESCRIPTIVE-NAME = UPDATE, CLEANUP, OPEN, AND FORMAT     @YL026UD 00130002
*01*  FUNCTION = IGG0CLC6 -                                    @YL026UD 00132002
*                1.  CREATES A NEW UPDATED BLOCK.              @YL026UD 00140002
*                2.  RIPPLES THE UPDATE DOWN THE INDEX CHAIN.  @YL026UD 00150002
*                IGG0CLC7 -                                    @YL026UD 00152002
*                1.  WRITES THE LAST BLOCK OF AN UPDATE.       @YL026UD 00154002
*                2.  UPDATES THE ICE AND REWRITES IT.          @YL026UD 00156002
*                3.  UPDATES THE VICE AND REWRITES IT.         @YL026UD 00158002
*                4.  DEQUEUES ALL RESOURCES.                   @YL026UD 00158402
*                5.  FREES ALL MAIN STORAGE.                   @YL026UD 00158802
*                6.  SETS RETURN CODES.                        @YL026UD 00159202
*                7.  CREATES AN ENVIRONMENT RECORD FOR         @YL026UD 00159602
*                    NON-LOCATE ERROR CODES OF 8 AND 28.       @YL026UD 00159702
*     FOR AN OVERVIEW OF THIS MODULE AND ITS RELATIONSHIP WITH THE      00166702
*     OTHER CATALOG MANAGEMENT MODULES, REFER TO THE CATALOG MANAGEMENT 00170002
*     PLM, Y28-6606.                                                    00180002
*01*  NOTES = LABELS REFERED TO IN COMMENTARY ARE ENCLOSED IN SINGLE    00190002
*     QUOTES. EQUATED CONSTANTS ARE PREFIXED WITH 'D' OR 'X' WHEN THEY  00200002
*     ARE DECIMAL OR HEXADECIMAL RESPECTIVELY; FOR EXAMPLE, D12 EQU 12, 00210002
*     AND X12 EQU X'12'. ERROR CODES ARE SET USING 'ERRORXX' AT         00220002
*     CORRESPONDING LABELS, 'ERRXX'. BRANCHES ORIGINATE FROM LABELS     00230002
*     'IGG0CLCX'. FLAGS ARE LABELED 'FLAGX'.  IO IS DONE FROM EITHER A  00240002
*     SUBROUTINE NAMED 'CALLBLDL' OR A SUBROUTINE NAMED 'IO'. ADDRESS   00250002
*     CONVERSION IS ACCOMPLISHED IN SUBROUTINES NAMED 'TOABSL' AND      00260002
*     'TORLTV'. THESE CONVENTIONS ARE FOLLOWED IN EVERY MODULE WHERE    00270002
*     THE EVENT EXISTS.                                                 00280002
*02*    DEPENDENCIES = OPERATION OF THIS MODULE DEPENDS ON THE          00290002
*       COLLATING SEQUENCE OF THE EXTERNAL CHARACTER SET. REDEFINITION  00300002
*       OF THE CHARACTER CONSTANTS BY REASSEMBLY WILL RESULT IN A       00310002
*       CORRECT MODULE. THE CONSTANTS IN QUESTION ARE PREFIXED WITH     00320002
*       'CCD', FOR 'CHARACTER CODE DEPENDENT'.                          00330002
*02*    PERFORMANCE = (IGG0CLC6) INHIBITS RIPPLING WHERE POSSIBLE       00340002
*       AND ATTEMPTS MOVEMENT OF INDEX BLOCKS TO ATTAIN CONTIGUITY.     00350002
*       (IGG0CLC7) REWRITES THE VICE OR ICE ONLY WHEN IT HAS            00352002
*       BEEN MODIFIED.                                         @YL026UD 00354002
*02*    RESTRICTIONS = ALL DIRECT ACCESS STORAGE DEVICES EXCEPT 2321    00360002
*       DATA CELL ARE SUPPORTED BY CATALOG MANAGEMENT.                  00370002
*02*    REGISTER-CONVENTIONS = REGISTERS ARE LABELED 'R0,R1,...,R15'.   00380002
*       REQUIRED ADDITIONAL LABELS ARE EQUATED TO THESE. REGISTERS      00390002
*       COMMON TO ALL MODULES OF CATALOG MANAGEMENT ARE                 00400002
*       R4  BASE REGISTER FOR THE MODULE.                               00410002
*       R6  BASE REGISTER FOR THE WORKAREA DSECT.                       00420002
*       R8  BASE REGISTER FOR THE CAMLSTD DSECT.                        00430002
*02*    PATCH-LABEL = 'FIXAREA'                                @YL026UD 00440002
*01*  MODULE-TYPE = MODULE                                              00450002
*02*    PROCESSOR = ASSEMBLER                                           00460002
*02*    MODULE-SIZE = 4000 BYTES                               @YL026UD 00470002
*02*    ATTRIBUTES = REENTERABLE, READ ONLY, ENABLED, SUPERVISORY MODE  00480002
*01*  ENTRY = IGG0CLCE                                         @YL026UD 00490002
*02*    PURPOSE = (IGG0CLC6) ENTERED FOR ALL NON-LOCATE        @YL026UD 00500002
*       REQUESTS FOR THE UPDATING OF AN INDEX LEVEL.           @YL026UD 00510002
*       (IGG0CLC7) ENTERED FOR ALL NON-LOCATE REQUESTS TO      @YL026UD 00512002
*       FINISH THE UPDATING OF AN INDEX LEVEL AND TO INDICATE  @YL026UD 00514002
*       THE NEW STATUS OF THE SYSCTLG IN THE CONTROL ENTRIES.  @YL026UD 00516002
*       ALSO ENTERED TO PROCESS ERROR CONDITIONS AND RETURN    @YL026UD 00518002
*       CONTROL TO THE ISSUER OF SVC 26.                       @YL026UD 00518402
*02*    LINKAGE = LINK                                         @YL026UD 00520002
*02*    INPUT = FOR IGG0CLC6 AND IGG0CLC7 CONSISTS OF                   00530002
*       .  WORKAREA (BLDLAREA)                                          00540002
*       .  SVRB EXTENSION                                               00550002
*       .  DCB                                                          00560002
*       .  DEB                                                          00570002
*       .  CAMLST AND PARAMETERS                                        00580002
*       .  SYSCTLG                                                      00590002
*       IN ADDITION, IGG0CLC6 REQUIRES                                  00600002
*       .  'READTTR'                                                    00610002
*       .  'NAME'                                                       00620002
*       .  'TTR0'                                                       00630002
*       .  'DATA'                                                       00640002
*       .  OPTIONALLY THE BLOCK TO BE UPDATED                           00650002
*       IN ADDITION, IGG0CLC7 REQUIRES                         @YL026UD 00652002
*       (NORMAL)                                               @YL026UD 00654002
*       .  'LINKTTR'--INDICATES BLOCK MAY BE FREED             @YL026UD 00656002
*       .  'WRITETTR'--WHERE TO WRITE LAST BLOCK               @YL026UD 00658002
*       .  'ICEPERT'--USED PART OF ICE                         @YL026UD 00658402
*       .  'VICEPERT'--USED PART OF VICE                       @YL026UD 00658802
*       .  'OUTPUT'--CONTAINS BLOCK TO BE WRITTEN              @YL026UD 00659202
*       .  'ERRCODE'--ZERO                                     @YL026UD 00659602
*       .  R1--ZERO OR POSITIVE                                @YL026UD 00659702
*       .  R7--POINTER TO THE LINK ENTRY                       @YL026UD 00659802
*       (ERROR)                                                @YL026UD 00659902
*       .  'ERRCODE'--CONTAINS CATALOG AND LOCATE ERROR CODES  @YL026UD 00663202
*       .  R1 NEGATIVE--INDICATES IGC0002H RETURNED ERROR CODE @YL026UD 00665202
*02*    OUTPUT = (IGG0CLC6) SEE INPUT FOR IGG0CLC7             @YL026UD 00686802
*       (IGG0CLC7) NORMAL                                      @YL026UD 00688802
*       .  R15 = 0                                             @YL026UD 00689202
*       .  UPDATED SYSCTLG                                     @YL026UD 00689602
*       (IGG0CLC7) ERROR                                       @YL026UD 00690002
*       .  R15 = RETURN CODE                                   @YL026UD 00693302
*       .  R0 = NUMBER OF LEVELS FOUND                         @YL026UD 00695302
*       .  R1 = LOCATE ERROR CODE                              @YL026UD 00695702
*02*    EXIT-NORMAL = IGG0CLCA OR IGG0CLCB                     @YL026UD 00696802
*02*    EXIT-ERROR = IGG0CLCA OR IGG0CLCB                      @YL026UD 00700102
*01*  EXTERNAL-REFERENCES = AS FOLLOWS.                                 00703402
*02*    ROUTINES = IECPRLTV, IECPCNVT                                   00706702
*02*    DATA-SETS = SYSCTLG                                             00710002
*02*    DATA-AREA = ALL DATA AREAS ARE DESCRIBED BY DSECTS AT THE END   00720002
*       OF THE MODULE LISTING.                                          00730002
*01*  TABLES = NONE                                                     00740002
*01*  MACROS = EXCP, WAIT, ESTAE, FREEMAIN, ENQ, DEQ, TIME, WTO         00750037
*                                                                       00751037
*01*  CHANGE-ACTIVITY = NEW FOR RELEASE 21                              00752037
*                       (AS IGG0CLC6,IGG0CLC7)                          00753037
*                       RENAMED AND CHANGED FOR VS2 RELEASE 2  @YL026UD 00754037
* IGC0002H,IGG0CLF2 SPLIT OFF TO IGG0CLCF                      @OZ00006 00755037
* A127959                                                      @OZ02274 00762737
*A10510-10520                                                  @ZA02665 00763037
*A18770-18796                                                  @ZA02665 00763637
*A127812-127829                                                @ZA02665 00764237
*A291390-291395                                                @ZA02665 00764837
*        VS2 RELEASE 030 CHANGES                                        00765437
* A132620                                                      @OZ03161 00765637
* A134100                                                      @OZ04613 00765837
*A127810                                                       @OZ05575 00766037
*A011910-012009,127830-127929,127957-127980,291395-291407      @OZ05908 00766637
*A127505                                                       @OZ07534 00767237
* D128200,A128200,128620                                       @OZ07699 00767837
*        VS2 RELEASE 037 CHANGES                                        00767937
* A018792,A046620-046680,A127890-127898,C127900,C291392        @OZ12193 00768037
* A098301-098305                                               @OZ12193 00768137
* D127505,A127852-127858                                       @OZ12244 00768237
*D011910-012009,A015101,A017401,A028400-028418                 @OZ11109 00768337
*A127896,A127926,A127959,C291368,C291390,C291395               @OZ14802 00768437
*C128200,D128620                                               @OZ15062 00768808
*A142458,A292252                                               @OZ32432 00769208
*                                                                       00771237
**** END OF SPECIFICATIONS *******************************************/ 00773237
         EJECT                                                 @YL026UD 00780002
IGG0CLCE CSECT                                                 @YL026UD 00790002
*                                                                       00792002
         BALR  BASE,0                  SET BASE FOR MODULE              00800002
         USING *,BASE                  ESTABL BASE FOR MODULE           00810002
         USING CAMLSTD,R8              ESTABL BASE FOR CAMLST           00820002
         USING ENTRY,R9                ESTABL BASE FOR ENTRY            00830002
         USING WORKAREA,R6             ESTABL BASE FOR WORKAREA         00840002
*                                                                       00840402
         B     MODLABEL                BRANCH AROUND MOD LABEL @YL026UD 00840502
         DC    C'IGG0CLCE        '     MODULE IDENTIFIER       @YL026UD 00840702
         DC    C'&SYSDATE'             DATE OF ASSEMBLY                 00841437
         DC    C'UZ20205'              PTF LEVEL                        00842108
         DS    0H                                                       00842537
MODLABEL EQU   *                                                        00842902
         TITLE 'IGG0CLCE - (IGG0CLC6) SECOND LOAD OF UPDATE'   @YL026UD 00845802
*********************************************************************** 00848002
*                                                                     * 00850202
*     IGG0CLC6 - SECOND LOAD OF UPDATE                                * 00852402
*                                                                     * 00854602
*********************************************************************** 00856802
*                                                              @YL026UD 00859002
IGG0CLC6 EQU   *                                               #YL026UD 00861202
*                                                                       00863402
         OI    MODMAP1,MODCLC6         INDIC ENTRY TO IGG0CLC6          00865602
*                                                                       00867802
*      SET ALL OTHER TASKS IN REGION NON-DISPATCHABLE                   00870002
*                                                                       00880002
         USING SVRBEXTD,R1             ESTABL ADDRBLTY TO SVRB EXT      00890002
         L     R1,SVRBEXTP             SET BASE TO PARAMETER LIST       00900002
         TM    ENQFLAGS,SMCSTEP        SMC ALREADY ISSUED?       Y01965 00910002
         BO    SKIPSMC                 BRANCH IF YES             Y01965 00920002
*                                                                       00930002
         OI    ENQFLAGS,SMCSTEP        SET ENQ FLAGS             Y01965 00940002
         ENQ   ,MF=(E,(1))             DISABLE STEP TASKS               00950002
         DROP  R1                                                       00960002
*                                                                Y01965 00970002
SKIPSMC  EQU   *                                                 Y01965 00980002
*                                                                Y01965 00990002
*                                                                       01000002
*      INITITALIZE                                                      01010002
*                                                                       01020002
         SR    LENGTH,LENGTH           ZERO 'LENGTH'             Y01113 01030002
         XC    TTRS,TTRS               ZERO 'WRITETTR, LINKTTR'  Y01113 01040002
         ST    LENGTH,EXCLUDE          ZERO 'EXCLUDE'            Y01113 01050002
         XC    SAVEKEY,SAVEKEY          SIMULATE PREVIOUS       ZA02665 01051002
*                                       ENTRY KEY = 0           ZA02665 01052002
         XC    OUTDATA,OUTDATA         CLEAR THE OUTPUT BLOCK           01060002
         LA    OUT,OUTENTRY            FIRST HOLE IN NEW BLOCK          01070002
         TM    FLAG3,NEEDBLK           BLOCK FOR UPDATE IN?             01080002
         BZ    SETUP                   YES                              01090002
*                                                                       01100002
         BAL   R10,GET                 NO, READ BLOCK FOR UPDATE        01110002
         B     COMPARE                 START THE UPDATE PROCESS         01120002
*                                                                       01130002
*                                                                       01140002
SETUP    EQU   *                                                        01150002
*                                                                       01160002
         BAL   R10,GETSET              SET UP TTRS                      01170002
*                                                                       01180002
COMPARE  EQU   *                                                        01190002
*                                                                       01201937
*      COMPARE 4 BYTES OF GDG NAME OR 8 BYTES OF NON-GDG NAME           01210002
*      AT 'IN' WITH UPDATE NAME.                                        01220002
*                                                                       01230002
*      GO TO 'ADD' IF UPDATE NAME IS SMALLER,                           01240002
*      GO TO 'CHEKROOM' IF UPDATE NAME IS GREATER,                      01250002
*      GO TO NEXT INSTRUCTION ('DELETE') IF NAMES MATCH.                01260002
*                                                                       01270002
         TM    FLAG3,GDS               * PROCESSING GDG?                01280002
         BZ    NONGDG                  NO                               01290002
*                                                                       01300002
         CLC   GENNO,EGENNO            YES, COMPARE GENERATION NUMBERS  01310002
         B     CRIT                    GO MAKE THE CC DECISION          01320002
*                                                                       01330002
*                                                                       01340002
NONGDG   EQU   *                                                        01350002
*                                                                       01360002
         CLC   NAME,ENAME              COMPARE ENTIRE NAMES             01370002
*                                                                       01380002
CRIT     EQU   *                                                        01390002
*                                                                       01400002
         BL    ADD                     NEW IS LESS THAN EXISTING        01410002
*                                                                       01420002
         BH    CHEKROOM                NEW IS GREATER THAN EXISTING     01430002
*                                                                       01440002
*      DELETE                          NEW IS EQUAL TO EXISTING         01450002
*                                                                       01460002
*      CALCULATE THE LENGTH OF THE ENTRY TO BE DELETED AND              01470002
*      INCREMENT THE 'IN' POINTER SO THAT ENTRY WILL BE IGNORED.        01480002
*      TURN THE COMPLETION SWITCH ON.  GO TO NEXT INSTRUCTION           01490002
*      ('ADD') IF REQUEST IS RECATALOG, OTHERWISE GO TO 'CHEKLINK'.     01500002
*                                                                       01510002
         BAL   BALREG3,EDITYPE         GO EDIT ENTRY TYPE      @OZ11109 01515037
         IC    LENGTH,ETYPE            COUNT FIELD OF INPUT ENTRY       01520002
         LA    LENGTH,D12(LENGTH,LENGTH)    LENGTH OF INPUT             01530002
         AR    IN,LENGTH               STEP OVER ENTRY                  01540002
         OI    FLAG4,UPDATED           * SET UPDATE COMPLETE            01550002
         TM    FLAG1,RECATF            RECAT?                           01560002
         BZ    CHEKLINK                NO                               01570002
*                                                                       01580002
         NI    FLAG4,X'FF'-UPDATED     * UPDATE NOT COMPLETE   @OZ11109 01590037
*                                                                       01600002
ADD      EQU   *                                                        01610002
*                                                                       01620002
*      SAVE 'IN' AND SET UPDATE IN PROGRESS SWITCH TO INDICATE 'IN'     01630002
*      IS IRREGULAR.  LOAD 'IN' WITH ADDRESS OF UPDATE ENTRY.  GO       01640002
*                                                                       01650002
         ST    IN,ADDING               SAVE POINTER TO ENTRY            01660002
         OI    FLAG4,UPDATING          * SET UPDATE IN PROGRESS         01670002
         LA    IN,NAME                 POINT TO NEW ENTRY               01680002
*                                                                       01690002
CHEKROOM EQU   *                                                        01700002
*                                                                       01710002
*      COMPUTE LENGTH OF ENTRY TO BE MOVED (TO 'OUT').                  01720002
*      CALL 'PUT' IF THERE IS NOT ENOUGH ROOM TO MOVE THE ENTRY.        01730002
*                                                                       01740002
         BAL   BALREG3,EDITYPE         GO EDIT ENTRY TYPE      @OZ11109 01745037
         IC    LENGTH,ETYPE            COUNT FIELD OF INPUT ENTRY       01750002
         LA    LENGTH,D12(LENGTH,LENGTH)    LENGTH OF INPUT ENTRY       01760002
*                                                                       01770002
*      POINT TO FIRST CHARACTER OF LAST POSSIBLE LINK ENTRY             01780002
*                                                                       01790002
         LA    R1,OUTLKLMT                                              01800002
         SR    R1,OUT                  GET BYTES AVAILABLE              01810002
         CR    R1,LENGTH               ROOM AVAILABLE?                  01820002
         BNL   TRANS                   YES, GO MOVE THE ENTRY           01830002
*                                                                       01840002
         BAL   BALREG3,PUT             ***GO WRITE THE BLOCK***         01850002
*                                                                       01860002
TRANS    EQU   *                                                        01870002
*                                                               ZA02665 01871002
*     MAKE SURE THE NEXT ENTRY TO BE MOVED TO OUTPUT IS         ZA02665 01872002
*     OF A HIGHER KEY THAN THE PREVIOUS ONE.  IF NOT, SET       ZA02665 01873002
*     A FLAG TO HAVE IGG0CLC7 WRITE A WARNING MESSAGE TO        ZA02665 01874002
*     THE OPERATOR THAT THE CATALOG NEEDS REPAIR.               ZA02665 01875002
*                                                               ZA02665 01876002
         CLC   SAVEKEY,0(IN)            TEST PREVIOUS KEY LESS  ZA02665 01877002
*                                       THAN NEXT KEY           ZA02665 01878002
         BL    TRANS2                   YES, OK                 ZA02665 01879002
         OI    FLAG2,SEQERR             ENTRY OUT OF SEQUENCE  @OZ02665 01879237
         OI    FLAG4,ERRORTTR           SET ERROR HOLD FLAG    @OZ12193 01879337
TRANS2   EQU   *                                                ZA02665 01879402
         MVC   SAVEKEY,0(IN)         SAVE FOR NEXT TIME THRU    ZA02665 01879602
*                                                                       01880002
*      MOVE ENTRY AT 'IN' TO 'OUT' AND BUMP 'IN' TO POINT TO            01890002
*      NEXT ENTRY TO BE MOVED.  SAVE NAME MOVED IN CASE                 01900002
*      IT BECOMES A KEY.  GO TO 'COMPARE' IF UPDATE IS NOT COMPLETE.    01910002
*                                                                       01920002
         LR    R1,LENGTH               GET LENGTH OF ENTRY              01930002
         BCTR  R1,0                    MINUS ONE FOR EXECUTE            01940002
         EX    R1,MOVE1                MVC 0(0,OUT),0(IN)               01950002
         MVC   OUTKEY,0(IN)            SAVE AS A POSSIBLE KEY           01960002
         TM    FLAG4,UPDATING          ADDING OR JUST MOVING?           01970002
         BZ    INCRIN                  JUST MOVING                      01980002
*                                                                       01990002
         L     IN,ADDING               RESTORE POINTER TO ENTRY         02000002
*                                                                       02010002
*      TURN OFF 'UPDATING' SWITCH AND ON 'UPDATED' SWITCH               02020002
*                                                                       02030002
         XI    FLAG4,COMPLETE          * SET UPDATE COMPLETE            02040002
         B     STABLIN                 DON'T INCR 'IN'                  02050002
*                                                                       02060002
*                                                                       02070002
INCRIN   EQU   *                                                        02080002
*                                                                       02090002
         AR    IN,LENGTH               INCR 'IN'                        02100002
*                                                                       02110002
STABLIN  EQU   *                                                        02120002
*                                                                       02130002
         AR    OUT,LENGTH              INCR 'OUT'                       02140002
         TM    FLAG4,UPDATED           * UPDATE COMPLETE?               02150002
         BZ    COMPARE                 NO                               02160002
*                                                                       02170002
CHEKLINK EQU   *                                                        02180002
*                                                                       02190002
*      CHECK NEXT ENTRY TO BE MOVED.  GO TO 'CHEKROOM' IF IT IS NOT A   02200002
*      LINK ENTRY.  IF IT IS, GO TO 'NEXTLOAD' IF THE LINK IS ZERO      02210002
*      AND GO TO NEXT INSTRUCTION 'READ' IF LINK IS NON-ZERO.           02220002
*                                                                       02230002
         CLC   ENAME,HIBIN             IS NEXT ENTRY A LINK ENTRY?      02240002
         BNE   CHEKROOM                NO                               02250002
*                                                                       02260002
         NC    ETTR,ETTR               IS LINK TTR ZERO?                02270002
         BZ    LAST                    YES, END OF INPUT                02280002
*                                                                       02290002
*      UPDATE IS COMPLETE. THE NEXT ENTRY IN 'INPUT' IS A LINK ENTRY    02300002
*      WITH A NON-ZERO TTR.                                             02310002
*                                                                       02320002
         TM    FLAG4,STOP              * IS THIS THE FIRST BLOCK?       02330002
         BC    11,CONTUPDT             NO, CONTINUE UPDATE              02340002
*                                                               SA52084 02350002
*      'SLACK' IS NOT PERMITTED IN GDG PROCESSING               SA52084 02360002
*                                                               SA52084 02370002
         TM    FLAG3,GDS               GDG PROCESSING?          SA52084 02380002
         BO    CONTUPDT                YES, CONTINUE UPDATE     SA52084 02390002
*                                                                       02400002
*      CHECK UNUSED BYTES IN BLOCK.                                     02410002
*                                                                       02420002
*      IF NUMBER OF UNUSED BYTES IS LESS THAN 'SLACK', THEN STOP        02430002
*      THE UPDATE PROCESS, CONTINUE IF NOT.                             02440002
*                                                                       02450002
         LA    R0,SLACK(OUT)           ADD SLACK TO PTR                 02460002
         LA    R1,OUTLKLMT             GET LAST AVAIL BYTE ADDR         02470002
         CR    R0,R1                   NO. OF UNUSED BYTES PERMSBLE?    02480002
         BNL   LAST                    YES                              02490002
*                                                                       02500002
*      READ A NEW INPUT BLOCK IF NECESSARY.                             02510002
*                                                                       02520002
CONTUPDT EQU   *                                                        02530002
*                                                                       02540002
         MVC   READTTR,ETTR            GET TTR OF NEXT BLOCK FOR UPDATE 02550002
         BAL   R10,GET                 ***READ IT IN***                 02560002
         B     CHEKLINK                CHECK FIRST ENTRY                02570002
*                                                                       02580002
*                                                                       02590002
LAST     EQU   *                                                        02600002
*                                                                       02610002
*      PREPARE TO GO TO IGG0CLC7 FOR THE WRITING OF THE                 02620002
*      LAST BLOCK.                                                      02630002
*                                                                       02640002
         MVC   0(L'LNKENTRY,OUT),0(IN) MOVE IN THE ILE                  02650002
         BAL   BALREG3,SETKEYCT        SET KEY AND 'OUTBYTSU'           02660002
*                                                                       02670002
*      FREE THE BLOCK AT 'LINKTTR' UNLESS IT IS BEING USED              02680002
*                                                                       02690002
         DROP  IN                                                       02700002
         USING ENTRY,OUT               ESTABL ADDRBLTY TO LINK ENTRY    02710002
         CLC   ETTR,LINKTTR            BLOCK AT 'LINKTTR' BEING USED?   02720002
         BE    DONTFREE                YES, DON'T FREE THE BLOCK        02730002
*                                                                       02740002
         MVC   EXCLUDE,LINKTTR         SET UP FOR 'KEY0WRIT'            02750002
         BAL   BALREG3,KEY0WRIT        GO FREE THE BLOCK                02760002
         BAL   BALREG3,HOLE            REPLACE 'VFHOLE' IF NECESSARY    02770002
         DROP  OUT                                                      02780002
         USING ENTRY,IN                RE-ESTABL ADDRBLTY TO IN ENTRY   02790002
*                                                                       02800002
DONTFREE EQU   *                                                        02810002
*                                                                       02820002
         B     ERR00                   GO TO IGG0CLC7                   02830002
*                                                                       02840002
         EJECT                                                          02850002
*******************************                                @OZ11109 02850437
*                             *                                         02850837
EDITYPE  EQU   *              *                                @OZ11109 02851237
*                             *                                         02851637
* TEST FOR VALID RECORD TYPE  *                                @OZ11109 02852037
*******************************                                         02852437
         CLI   ETYPE,NCVOL                                     @OZ11109 02852837
         BNH   ETYPEOK                                         @OZ11109 02853237
         CLI   ETYPE,DSPE7                                     @OZ11109 02853637
         BE    ETYPEOK                                         @OZ11109 02854037
         CLI   ETYPE,DSPED                                     @OZ11109 02854437
         BE    ETYPEOK                                         @OZ11109 02854837
         CLI   ETYPE,DSPE13                                    @OZ11109 02855237
         BE    ETYPEOK                                         @OZ11109 02855637
         CLI   ETYPE,DSPE19                                    @OZ11109 02856037
         BE    ETYPEOK                                         @OZ11109 02856437
         CLI   ETYPE,DSPE1F                                    @OZ11109 02856837
         BE    ETYPEOK                                         @OZ11109 02857237
         MVI   ERRCATSV,ERROR08        NOT A VALID ENTRY       @OZ11109 02857637
         OI    FLAG2,ETYPERR                                   @OZ11109 02858037
         B     IGG0CLC7                                        @OZ11109 02858437
ETYPEOK  EQU   *                                               @OZ11109 02858837
         BR    BALREG3                                         @OZ11109 02859237
         EJECT                                                          02859637
*                                                                       02860002
****************                                                        02870002
*              *                                                        02880002
GET      EQU   *                                                        02890002
*              *                                                        02900002
****************                                                        02910002
*                                                                       02920002
*       IF 'LINKTTR' IS EMPTY OR EQUAL TO 'READTTR', CONTINUE.          02930002
*       ELSE, EMPTY 'LINKTTR' BY CALLING 'PUT'.                         02940002
*                                                                       02950002
         NC    LINKTTR,LINKTTR         EMPTY?                           02960002
         BZ    GETCHP                  YES                              02970002
*                                                                       02980002
         CLC   LINKTTR,READTTR         EQUAL TO 'READTTR'?              02990002
         BE    GETCHP                  YES                              03000002
*                                                                       03010002
         BAL   BALREG3,PUT             ***GO WRITE THE BLOCK***         03020002
*                                                                       03030002
GETCHP   EQU   *                                                        03040002
*                                                                       03050002
         MVC   NEXTKEY,HIBIN           SET IN CASE NEXT KEY NOT READ    03060002
         MVC   OPTNCCW,RD              MOVE IN READ DATA CCW            03070002
         MVI   RC,RKDOP                MOVE IN READ KEY & DATA OP-CODE  03080002
         MVI   RC+4,SILI               SUPPRESS INCORRECT LENGTH INDIC  03090002
         CLC   VHIREC,READTTR+2        LAST RECORD ON TRK?              03100002
         BE    GETREAD                 YES, DON'T READ NEXT KEY         03110002
*                                                                       03120002
         OI    OPTNCCW+4,CC            COMMAND CHAIN                    03130002
*                                                                       03140002
GETREAD  EQU   *                                                        03150002
*                                                                       03160002
         L     R0,READTTR              GET READ ADDRESS                 03170002
         BAL   BALREG2,TOABSL          CONVERT THE READ ADDRESS         03180002
*                                                                       03190002
*      READ DATA INTO INPUT AND NEXT KEY IF ON SAME TRACK               03200002
*                                                                       03210002
         BAL   BALREG1,IO1             ***READ DATA & KEY***            03220002
         MVI   RC,RCOP                 RESTORE RC CCW                   03230002
         MVI   RC+4,CC                                                  03240002
         NI    FLAG4,CONTIGLC          * TURN OFF 'CONTIGL' BIT         03250002
         BAL   BALREG3,KEY0WRIT        FREE THE BLOCK AT 'EXCLUDE'      03260002
*                                                                       03270002
*      UPDATE 'WRITETTR' AND 'LINKTTR' AS APPROPRIATE TO THE PATTERN    03280002
*      OF GETS AND PUTS FOR THIS REQUEST.                               03290002
*                                                                       03300002
*      IF 'WRITETTR' IS ZERO OR EQUAL TO 'READTTR'                      03310002
*      THEN SET                                                         03320002
*      'WRITETTR' EQUAL TO 'READTTR', AND                               03330002
*      'LINKTTR' FROM THE INDEX LINK ENTRY IN THE BLOCK JUST READ.      03340002
*                                                                       03350002
*      IF 'WRITETTR' DOES NOT MEET THE ABOVE CONDITION,                 03360002
*      THEN SET                                                         03370002
*      'LINKTTR' EQUAL TO 'READTTR'.                                    03380002
*                                                                       03390002
         NC    WRITETTR,WRITETTR       OK TO PUT 'READTTR' HERE         03400002
         BZ    GETWRITE                YES                              03410002
*                                                                       03420002
         CLC   WRITETTR,READTTR        IS 'READTTR' ALREADY HERE?       03430002
         BE    GETWRITE                YES                              03440002
*                                                                       03450002
*      MUST SET 'LINKTTR' EQUAL TO 'READTTR'                            03460002
*                                                                       03470002
         NC    NEXTKEY,NEXTKEY         IS NEXT BLOCK AVAIL              03480002
         BNZ   GETLINK                 NO                               03490002
*                                                                       03500002
*      INDIC THAT BLOCK FOLLOWING 'LINKTTR' IS A FREE BLOCK             03510002
*                                                                       03520002
         OI    FLAG4,CONTIGL           * TURN ON 'CONTIGL' BIT          03530002
*                                                                       03540002
GETLINK  EQU   *                                                        03550002
*                                                                       03560002
         MVC   LINKTTR,READTTR         SET 'LINKTTR'                    03570002
         B     GETDONE                 PREPARE TO RETURN                03580002
*                                                                       03590002
*                                                                       03600002
GETWRITE EQU   *                                                        03610002
*                                                                       03620002
*      SET 'WRITETTR' EQUAL TO 'READTTR'                                03630002
*                                                                       03640002
         NI    FLAG4,CONTIGWC          * 'WRITETTR' EQUALS ZERO         03650002
         NC    NEXTKEY,NEXTKEY         IS THE NEXT BLOCK AVAILABLE?     03660002
         BNZ   GETSET                  NO                               03670002
*                                                                       03680002
*      INDIC THAT BLOCK FOLLOWING WRITETTR IS A FREE BLOCK              03690002
*                                                                       03700002
         OI    FLAG4,CONTIGW           * TURN ON 'CONTIGW' BIT          03710002
*                                                                       03720002
GETSET   EQU   *                                                        03730002
*                                                                       03740002
         DROP  IN                                                       03750002
         USING ENTRY,R1                EST ADDRBLTY TO LINK ENTRY       03760002
         MVC   WRITETTR,READTTR        SET 'WRITETTR'                   03770002
         LH    R1,INBYTSU              NUMBER OF BYTES USED             03780002
         LA    R1,INPUT-L'LNKENTRY(R1) POINT TO LINK ENTRY              03790002
*                                                                       03800002
*      SET 'LINKTTR'                                                    03810002
*                                                                       03820002
         MVC   LINKTTR,ETTRTYPE        MOVE IN LINK TTR & ZERO COUNT    03830002
*                                                                       03840002
GETDONE  EQU   *                                                        03850002
*                                                                       03860002
*                                                                       03870002
*      SAVE THE READ ADDRESS.  LATER, IF A TTR BECOMES UNNEEDED         03880002
*      BECAUSE OF REARRANGING FOR CONTIGUITY (IN 'PUT'),                03890002
*      THE BLOCK AT THAT TTR MAY BE FREED IF IT HAS BEEN READ.          03900002
*                                                                       03910002
         MVC   SAVETTR,READTTR         INDIC BLOCK IS IN 'INPUT'        03920002
         XC    READTTR,READTTR         ZERO 'READTTR'                   03930002
         LA    IN,INENTRY              POINT TO FIRST ENTRY             03940002
         BR    R10                     RETURN                           03950002
*                                                                       03960002
         DROP  R1                                                       03970002
*                                                                       03980002
         EJECT                                                          03990002
*                                                                       04000002
****************                                                        04010002
*              *                                                        04020002
PUT      EQU   *                                                        04030002
*              *                                                        04040002
****************                                                        04050002
*                                                                       04060002
         STM   R10,R11,SVAREA2X        BALREG3 EQU R11                  04070002
         BAL   BALREG2,PUTINCR         GET TTR FOLLOWING WRITETTR       04080002
*                                                                       04090002
*      LOOK FOR CONTIGUITY                                              04100002
*                                                                       04110002
         C     R1,LINKTTR              ALREADY CONTIGUOUS?              04120002
         BE    PUTWRITE                YES                              04130002
*                                                                       04140002
         LR    NEXTTTR,R1              SAVE 'NEXTTTR'                   04150002
*      IS NEXT BLOCK THE FIRST AVAIL?                           SA52119 04160002
         CL    NEXTTTR,VFHOLE                                   SA52119 04170002
         BE    PUTFHOLE                YES, USE IT                      04180002
*                                                                       04190002
         TM    FLAG4,CONTIGW           IS NEXT BLOCK FREE?              04200002
         BO    PUTNEXT                 YES, USE IT                      04210002
*                                                                       04220002
         B     PUTHOLE                 CONTIGUITY IMPOSSIBLE            04230002
*                                                                       04240002
*                                                                       04250002
PUTFHOLE EQU   *                                                        04260002
*                                                                       04270002
         BAL   BALREG3,KEY0PREP        PREPARE TO FREE A BLOCK          04280002
         BAL   BALREG3,HOLE            MAINTAIN VFHOLE                  04290002
         B     PUTHOLE                 GO SET 'LINKTTR'                 04300002
*                                                                       04310002
*                                                                       04320002
PUTNEXT  EQU   *                                                        04330002
*                                                                       04340002
         BAL   BALREG3,KEY0PREP        PREPARE TO FREE A BLOCK          04350002
         ST    NEXTTTR,LINKTTR         USE 'NEXTTTR'                    04360002
         B     PUTWRITE                TTRS ARE SET                     04370002
*                                                                       04380002
*                                                                       04390002
PUTHOLE  EQU   *                                                        04400002
*                                                                       04410002
         NC    LINKTTR,LINKTTR         LINKTTR = 0?                     04420002
         BNZ   PUTWRITE                NO, 'LINKTTR' SET OK             04430002
*                                                                       04440002
         L     R0,VFHOLE               GET TTR OF FIRST HOLE            04450002
         BAL   BALREG3,SWAP            SET 'LINKTTR' = 'VFHOLE'         04460002
         BAL   BALREG2,TOABSL          GO TO CONVERT                    04470002
         MVC   OPTNCCW,TIC2            MOVE IN SEARCH CCW               04480002
         BAL   BALREG1,IO1             ***SEARCH FOR KEY=0***           04490002
         BAL   BALREG2,TORLTV          GET ITS TTR                      04500002
         ST    R0,VFHOLE               MAINTAIN 'VFHOLE'                04510002
*                                                                       04520002
PUTWRITE EQU   *                                                        04530002
*                                                                       04540002
         USING ENTRY,OUT               ESTABL ADDRBLTY TO ENTRY         04550002
         MVC   EINDEX,LNKENTRY         MOVE IN ILE                      04560002
         BAL   BALREG3,SETKEYCT        GO SET KEY & 'OUTBYTSU'          04570002
         MVC   OPTNCCW,WKD             MOVE IN WRITE KEY & DATA CCW     04580002
         BAL   BALREG1,IO1             ***WRITE KEY AND DATA***         04590002
*                                                                       04600002
*      VERIFY THE WRITE OPERATION                                       04610002
*                                                                       04620002
         MVC   OPTNCCW,RKD             MOVE IN CCW--NO TRANSFER         04630002
         BAL   BALREG1,IO1             ***READ KEY AND DATA***          04640002
         XC    OUTDATA,OUTDATA         CLEAR THE OUTPUT BLOCK           04650002
         TM    FLAG4,ERRORTTR          ERROR HOLD ON?          @OZ12193 04661037
         BNO   STORTTR                 YES - FALL THROUGH      @OZ12193 04662037
         MVC   CONWORK(4),WRITETTR     SAVE FOR MSG IEC304I    @OZ12193 04663037
         NI    FLAG4,X'FF'-ERRORTTR    TURN ERROR HOLD OFF     @OZ12193 04664037
STORTTR  EQU   *                                                        04665037
         MVC   WRITETTR,LINKTTR        SET NEW 'WRITETTR'               04667037
         XC    LINKTTR,LINKTTR         ZERO 'LINKTTR'                   04670002
         OI    FLAG4,WROTE             * INDIC FIRST BLOCK WRITTEN      04680002
         NI    FLAG4,CONTIGC           * TURN OFF ALL CONTIG SW         04690002
         LM    R10,R11,SVAREA2X        BALREG3 EQU R11                  04700002
         LA    OUT,OUTENTRY            POINT TO FIRST ENTRY SLOT        04710002
         BR    BALREG3                 RETURN                           04720002
*                                                                       04730002
         EJECT                                                          04740002
*                                                                       04750002
****************                                                        04760002
*              *                                                        04770002
PUTINCR  EQU   *                                                        04780002
*              *                                                        04790002
****************                                                        04800002
*                                                                       04810002
         L     R1,WRITETTR             GET TTR TO INCREMENT             04820002
         CLC   VHIREC,WRITETTR+2       END OF TRACK?                    04830002
         BE    PUTINCRT                YES, INCREMENT TRACK             04840002
*                                                                       04850002
         A     R1,ONEREC               INCREMENT RECORD         SA53646 04860002
         BR    BALREG2                 RETURN                           04870002
*                                                                       04880002
*                                                                       04890002
PUTINCRT EQU   *                                                        04900002
*                                                                       04910002
         SRL   R1,D16                  SHIFT OUT THE R                  04920002
         LA    R1,X01(R1)              INCREMENT TT                     04930002
         SLL   R1,D16                  REPOSITION TTR IN REG            04940002
         A     R1,ONEREC               SET R TO 1               SA53646 04950002
         BR    BALREG2                 RETURN                           04960002
*                                                                       04970002
         EJECT                                                          04980002
*                                                                       04990002
****************                                                        05000002
*              *                                                        05010002
KEY0PREP EQU   *                                                        05020002
*              *                                                        05030002
****************                                                        05040002
*                                                                       05050002
         MVC   EXCLUDE,LINKTTR         SAVE TTR OF BLOCK TO BE FREED    05060002
         CLC   EXCLUDE,SAVETTR         BLOCK BEEN READ?                 05070002
         BE    KEY0WRIT                YES, GO FREE IT                  05080002
*                                                                       05090002
         MVC   LINKTTR,HIBIN           SET LINKTTR TO FF                05100002
         BR    BALREG3                 RETURN                           05110002
*                                                                       05120002
*                                                                       05130002
KEY0WRIT EQU   *                                                        05140002
*                                                                       05150002
         NC    EXCLUDE,EXCLUDE         IS TTR ZERO?                     05160002
         BCR   8,BALREG3               YES, NOTHING TO FREE, RETURN     05170002
*                                                                       05180002
         L     R0,EXCLUDE              TTR OF BLOCK TO FREE             05190002
         BAL   BALREG2,TOABSL          GO CONVERT IT                    05200002
         MVC   OPTNCCW,NOP             MOVE IN SKELETON CCW             05210002
         MVI   OPTNCCW,WKDOP           MOVE IN WRITE KEY & DATA CCW     05220002
         BAL   BALREG1,IO1             WRITE ZERO KEY AND BLOCK         05230002
         XC    EXCLUDE,EXCLUDE         BLOCK IS FREED                   05240002
         BR    BALREG3                 RETURN                           05250002
*                                                                       05260002
         EJECT                                                          05270002
*                                                                       05280002
****************                                                        05290002
*              *                                                        05300002
SETKEYCT EQU   *                                                        05310002
*              *                                                        05320002
****************                                                        05330002
*                                                                       05340002
         LR    R10,BASE                MAKE R10 BIG                     05350002
         BAL   BALREG2,PUTINCR         GO INCREMENT 'WRITETTR'          05360002
         ST    R1,SAVETTR3             SAVE TTR OF NEXT BLOCK           05370002
         CLC   ETTR,SAVETTR3           SHOULD KEY INDIC CONTIGUITY?     05380002
         BNE   SETKEY                  NO, GO RESET KEY                 05390002
*                                                                       05400002
         XR    R10,R10                 YES, CHECK FOR EXTENT BOUNDARY   05410002
         L     R0,SAVETTR3             GET LINK TTR                     05420002
         BAL   BALREG2,TOABSL          GO TO CONVERT                    05430002
         IC    R10,IOBSKADD            SAVE THE 'M'                     05440002
*                                                                       05450002
SETKEY   EQU   *                                                        05460002
*                                                                       05470002
         L     R0,WRITETTR             GET WRITE TTR                    05480002
         BAL   BALREG2,TOABSL          GO TO CONVERT                    05490002
         IC    R15,IOBSKADD            PICK UP 'M'                      05500002
         CR    R10,R15                 ARE 'M'S EQUAL?                  05510002
         BE    SETCOUNT                YES                              05520002
*                                                                       05530002
         MVC   OUTKEY,HIBIN            SET KEY TO ALL X'FF'             05540002
*                                                                       05550002
SETCOUNT EQU   *                                                        05560002
*                                                                       05570002
         LA    R10,L'EINDEX(OUT)       BUMP 'OUT' AROUND ILE            05580002
         LA    R0,OUTDATA              POINT TO START OF BLOCK          05590002
         SR    R10,R0                  GET BYTES USED                   05600002
         STH   R10,OUTBYTSU            SET BYTES USED                   05610002
         BR    BALREG3                 RETURN                           05620002
*                                                                       05630002
         DROP  OUT                                                      05640002
*                                                                       05650002
         EJECT                                                          05660002
*                                                                       05670002
****************                                                        05680002
*              *                                                        05690002
HOLE     EQU   *                                                        05700002
*              *                                                        05710002
****************                                                        05720002
*                                                                       05730002
         CLC   VFHOLE,LINKTTR          NEED TO UPDATE VFHOLE?           05740002
         BH    SWAP                    YES                              05750002
*                                                                       05760002
         XC    LINKTTR,LINKTTR         NO, DISPOSE LINKTTR              05770002
         BR    BALREG3                 RETURN                           05780002
*                                                                       05790002
*                                                                       05800002
SWAP     EQU   *                                                        05810002
*                                                                       05820002
         XC    VFHOLE,LINKTTR          START THE SWAP                   05830002
         XC    LINKTTR(L'VFHOLE),VFHOLE                                 05840002
         XC    VFHOLE,LINKTTR          SWAP COMPLETE                    05850002
         BR    BALREG3                 RETURN                           05860002
*                                                                       05870002
         EJECT                                                          05872002
*                                                                       05880002
****************                                                        05890002
*              *                                                        05900002
TOABSL   EQU   *                                                        05910002
*              *                                                        05920002
****************                                                        05930002
*                                                                       05940002
* FUNCTION:                                                             05950002
*    CONVERT THE TTR0 IN R0 TO AN ABSOLUTE DASD ADDRESS AND             05960002
*    PUT IT INTO THE IOB MBBCCHHR                                       05970002
*                                                                       05980002
* INPUT:                                                                05990002
*    R0 IS THE TTR0 TO BE CONVERTED                                     06000002
*    RETURN ADDRESS IN BALREG2                                          06010002
*                                                                       06020002
* OUTPUT:                                                               06030002
*    ABSOLUTE DASD ADDRESS IN IOB                                       06040002
*    ERROR CODE IN R15                                                  06050002
*                                                                       06060002
* DESTROYED:                                                            06070002
*    REGISTERS - R0,R1,R2,R14, AND R15=0                                06080002
*    WA - SAVEAREA AND MBBCCHHR OF THE IOB                              06090002
*                                                                       06100002
* SUBROUTINES USED:                                                     06110002
*         THE RESIDENT CONVERT ROUTINE - IECPCNVT                       06120002
*                                                                       06130002
*                                                                       06140002
****************                                                        06150002
****************                                                        06160002
*                                                                       06170002
         L     R15,EPTOABSL            GET CONVERT ADDRESS FROM WA      06180002
         B     CONVERT                 USE COMMON CODE                  06190002
         EJECT                                                          06200002
*                                                                       06210002
****************                                                        06220002
*              *                                                        06230002
TORLTV   EQU   *                                                        06240002
*              *                                                        06250002
****************                                                        06260002
*                                                                       06270002
* FUNCTION:                                                             06280002
*    MOVE THE DASD ADDRESS OF CCHHR FROM NXTCNT INTO THE CCHHR OF THE   06290002
*    IOB.  THIS GIVES THE TTR OF THE NEXT FREE BLOCK.                   06300002
*                                                                       06310002
* INPUT:                                                                06320002
*    RETURN IN BALREG2                                                  06330002
*    UPDATED NXTCNT                                                     06340002
*                                                                       06350002
* OUTPUT:                                                               06360002
*    TTR0 IN R0                                                         06370002
*                                                                       06380002
* DESTROYED:                                                            06390002
*    REGISTERS -- R0,R1,R2,R14, AND R15=0                               06400002
*    WA -- SAVEAREA AND CCHHR OF IOB                                    06410002
*                                                                       06420002
* SUBROUTINES USED:                                                     06430002
*         THE RESIDENT CONVERT ROUTINE -- IECPRLTV                      06440002
*                                                                       06450002
*                                                                       06460002
****************                                                        06470002
****************                                                        06480002
*                                                                       06490002
         MVC   IOBSKADD+3(L'NXTCCHHR),NXTCCHHR    MOVE COUNT FIELD      06500002
*                                                                       06510002
         L     R15,EPTORLTV            GET ADDRESS OF ROUTINE FROM WA   06520002
*                                                                       06530002
*                                                                       06540002
CONVERT  EQU   *                                                        06550002
*                                                                       06560002
*      THE FOLLOWING SECTION IS COMMON TO BOTH ROUTINES                 06570002
*                                                                       06580002
         STM   R9,R13,SAVEAREA         SAVE REGS DESTROYED BY CONVERT   06590002
         L     R1,DEBADDR              GET DEB ADDRESS                  06600002
         LA    R2,IOBSKADD             POINT TO MBBCCHHR                06610002
         BALR  BALREG1,R15             GO TO CONVERT ROUTINE            06620002
         LM    R9,R13,SAVEAREA         RESTORE REGISTERS                06630002
         BR    BALREG2                 RETURN TO CALLER                 06632002
         EJECT                                                          06640002
*                                                                       06650002
****************                                                        06660002
*              *                                                        06670002
IO1      EQU   *                                                        06680002
*              *                                                        06690002
****************                                                        06700002
*                                                                       06710002
* FUNCTION:                                                             06720002
*    1.  IF THE DEVICE HAS THE RPS FEATURE, THE SET SECTOR CCW IS       06730002
*        UPDATED.                                                       06740002
*    2.  ISSUE EXCP FOR THE CHANNEL PROGRAM POINTED TO BY THE IOB.      06750002
*    3.  WAIT FOR THE OPERATION TO COMPLETE AND CHECK THE ECB.          06760002
*    4.  IF AN END OF EXTENT CONDITION, BRANCH TO IGC0002H     @YL026UD 06770002
*        AND EXTEND THE CATALOG.                               @YL026UD 06780002
*    5.  IF A PERMANENT I/O ERROR, SET AN ERROR CODE AND XCTL TO        06790002
*        IGG0CLC7.                                                      06800002
*                                                                       06810002
* INPUT:                                                                06820002
*    UPDATED CHANNEL PROGRAM                                            06830002
*    RETURN ADDRESS IN BALREG 1                                         06840002
*                                                                       06850002
* OUTPUT:                                                               06860002
*    1.  FILLED BUFFER                                                  06870002
*    2.  EMPTIED BUFFER                                                 06880002
*    3.  ANOTHER FREE BLOCK ADDRESS                                     06890002
*                                                                       06900002
* DESTROYED:                                                            06910002
*    REGISTERS R0,R1,R15 (IF EXTENDS), AND ERRCAT                       06920002
*                                                                       06930002
* EXTERNAL ROUTINES USED:                                               06940002
*    EXCP, WAIT, IGC0002H TO EXTEND CATALOG                    @YL026UD 06950002
*                                                                       06960002
* EXITS:                                                                06970002
*         IGC0002H TO EXTEND THE CATALOG                       @YL026UD 06980002
*         IGG0CLC7 FOR PERMANENT I/O ERROR                              06990002
***                                                                     07000002
*                                                                       07010002
         USING RPSD,R1                 ESTABL ADDRBLTY TO RPS WORKAREA  07020002
         TM    FLAG2,RPSDEV            * RPS FEATURE?                   07030002
         BZ    EXCP1                   BRANCH IF NO                     07040002
*                                                                       07050002
         L     R1,RPSAVEP              GET RPS SAVE AREA PTR            07060002
         STM   R9,R2,RPSAVE            SAVE REGS DESTROYED BY CONVERT   07070002
         LM    R15,R2,RPSINPUT         GET CONVERT INPUT PARAMETERS     07080002
         IC    R0,IOBSKADD+7           GET R OF CCHHR                   07090002
         BALR  R14,R15                 CONVERT R TO THETA               07100002
         LM    R9,R2,RPSAVE            RESTORE REGISTERS                07110002
*                                                                       07120002
EXCP1    EQU   *                                                        07130002
*                                                                       07140002
         EXCP  IOB                     ISSUE EXCP                       07150002
         WAIT  ECB=ECB                 WAIT FOR REQUEST                 07160002
         CLI   ECB,X7F                 I/O ERROR?                       07170002
         BCR   8,BALREG1               RETURN IF NO                     07180002
*                                                                       07190002
         CLC   OPTNCCW,TIC2            SEARCHING FOR NEXT HOLE?         07200002
         BNE   ERR28                   NO                               07210002
*                                                                       07220002
         CLI   ECB,X42               END OF EXTENT?            @OZ00006 07222002
         BNE   ERR28                 NO,  SET I/O ERROR        @OZ00006 07224002
         MVI   VFHOLE,XFF              INDIC CATALOG FULL               07230002
         B     PUTWRITE                RETURN                           07240002
*                                                                       07250002
         DROP  R1                                                       07260002
*                                                                       07270002
         EJECT                                                          07280002
*                                                                       07290002
ERR28    EQU   *                                                        07300002
*                                                                       07310002
         MVI   ERRCATSV,ERROR28        RETURN CODE IS 28       @YL026UD 07320002
         B     IGG0CLC7                GO TO ERROR MODULE      @YL026UD 07330002
*                                                                       07340002
*                                                                       07350002
ERR00    EQU   *                                                        07360002
*                                                                       07370002
         XR    R1,R1                   SET FOR NORMAL EXIT              07380002
         XC    ERRCODE,ERRCODE         RETURN CODE IS 00                07390002
         B     IGG0CLC7                                                 07392002
*                                                                       07400002
         TITLE 'IGG0CLCE - (IGG0CLC7) THIRD LOAD OF UPDATE AND CLEANUP' 08440002
*********************************************************************** 08490002
*                                                                     * 08540002
*     IGG0CLC7 - THIRD LOAD OF UPDATE AND CLEANUP                     * 08590002
*                                                                     * 08640002
*********************************************************************** 08690002
*                                                              @YL026UD 08740002
         ENTRY IGG0CLC7                                        @YL026UD 09512002
*                                                                       09514002
IGG0CLC7 EQU   *                                               @YL026UD 09520002
*                                                                       09526002
         BALR  BASE,0                  SET BASE FOR MODULE              09536002
         USING *,BASE                  ESTABL BASE FOR MODULE           09546002
*                                                                       09548002
         USING ENTRY,R7                ESTABL BASE FOR ENTRY DSECT      09550002
         USING WORKAREA,R6             ESTABL BASE FOR WORKAREA         09560002
         USING CAMLSTD,R8              ESTABL BASE FOR CAMLST           09570002
         USING SVRBEXT,R5              ESTABL BASE FOR SVRB EXTN        09580002
*                                                                       09582002
         OI    MODMAP1,MODCLC7         INDIC ENTRY TO IGG0CLC7          09590002
         L     R5,SVRBEXTP             SET BASE FOR SVRB EXTN           09600002
*                                                                       09610002
*      IF R1 IS NEGATIVE, THEN AN ERROR OCCURRED IN 'OPENEXT', AS       09620002
*      CALLED FROM A PREVIOUS MODULE                                    09630002
*                                                                       09640002
         LCR   R1,R1                   NEGATIVE?                        09650002
         BP    ERR2H                   BRANCH IF YES                    09660002
*                                                                       09670002
         NC    ERRCODE,ERRCODE         ERROR TO PROCESS?        SA52062 09680002
         BNZ   ERREXIT                 BRANCH AND PROCESS ERROR SA52062 09690002
*                                                               SA52062 09700002
         EJECT                                                          09710002
*                                                                       09720002
*      COMPLETE THE UPDATE                                              09730002
*      .  WRITE THE LAST BLOCK OF THE UPDATE                            09740002
*      .  UPDATE THE ICE IF NECESSARY                                   09750002
*      .  UPDATE THE VICE IF NECESSARY                                  09760002
*      .  CHECK FOR THE NEED TO EXTEND THE SYSCTLG DATA SET             09770002
*                                                                       09780002
*      THE BLOCK IN 'OUTPUT' IS THE LAST BLOCK OF THE UPDATE.           09790002
*      SET UP TO WRITE KEY & DATA FROM 'OUTPUT'.                        09800002
*                                                                       09810002
         L     R0,WRITETTR             GET THE WRITE ADDR               09820002
         BAL   BALREG2,TOABSL1         GO TO CONVERT                    09830002
         TM    FLAG4,ERRORTTR          ERROR HOLD ON?          @OZ12193 09831037
         BNO   DONTSAVE                YES - FALL THROUGH      @OZ12193 09832037
         MVC   CONWORK(4),WRITETTR     SAVE FOR MSG IEC304I    @OZ12193 09833037
         NI    FLAG4,X'FF'-ERRORTTR    TURN ERROR HOLD OFF     @OZ12193 09834037
DONTSAVE EQU   *                                                        09835037
         MVC   OPTNCCW,WKD             MOVE IN WRITE KEY & DATA OP-CODE 09840002
*                                                                       09850002
*      THE BLOCK MAY CONTAIN THE ICE FOR THE LEVEL OR IT MAY CONTAIN    09860002
*      THE VICE.  IT IS CHECKED FOR THESE TWO POSSIBILITIES             09870002
*      AND HANDLED ACCORDING TO THE FOLLOWING DECISION TABLE.           09880002
*                                                                       09890002
*      'Y' INDICATES THE REFERENCED BIT IN 'FLAG5' IS '1'B.             09900002
*      'N' INDICATES THE REFERENCED BIT IN 'FLAG5' IS '0'B.             09910002
*                                                                       09920002
*      ---------------------------------------------------------------  09930002
*      |                             |'FLAG5'| 1 2 3 4 5 6 7 8 9 A B |  09940002
*      ---------------------------------------------------------------  09950002
*      | BLOCK CONTAIN ICE OR VICE?  | 'FST' |   Y Y N N N N N Y Y Y |  09960002
*      | 'XLSTBLK' FIELD REQ UPDATE? | 'LST' | N Y Y Y Y Y Y N N Y N |  09970002
*      | NEW 'VFHOLE'?               | 'VFH' | N N Y N Y Y N Y Y   Y |  09980002
*      | UPDATE IN LOW LEVEL INDEX?  | 'LIN' |   Y Y Y Y N N   Y N N |  09990002
*      ---------------------------------------------------------------  10000002
*      | UPDATE 'VLSTBLK'                    |           X X     X   |  10010002
*      ---------------------------------------------------------------  10020002
*      | 'VICE' TO 'OUTPUT'     | 'MOVEVICE' |                   X X |  10030002
*      | WRITE 'OUTPUT'         | 'WRITVICE' | X                 X X |  10040002
*      | CHECK FOR CATALOG FULL |            | X                 X X |  10050002
*      | WRITE 'OUTPUT'         | 'READICE'  |       X X             |  10060002
*      | READ IN ICE BLOCK      |            |       X X             |  10070002
*      | 'ILSTBLK' TO 'INPUT'   |            |       X X             |  10080002
*      | WRITE 'INPUT'          |            |       X X             |  10090002
*      | 'ILSTBLK' TO 'OUTPUT'  | 'MOVEICE'  |   X X                 |  10100002
*      | WRITE 'OUTPUT'         | 'WRITICE'  |   X X     X X X X     |  10110002
*      | READ IN VICE BLOCK     | 'READVICE' |     X   X X X X X     |  10120002
*      | 'VICE' TO 'INPUT'      |            |     X   X X X X X     |  10130002
*      | WRITE 'INPUT'          |            |     X   X X X X X     |  10140002
*      | CHECK FOR CATALOG FULL | 'CHEKSPAC' |     X   X X X X X     |  10150002
*      ---------------------------------------------------------------  10160002
*                                                                       10170002
         EJECT                                                          10180002
*                                                                       10190002
*      SET SWITCHES IN 'FLAG5', 'VFHOLE' AND 'VLSTBLK'                  10200002
*                                                                       10210002
         CLI   ITYPE,ICETYP            UPDATING LOW LEVEL?              10220002
         BNE   VIUPDATE                NO, UPDATING THE VOL INDEX       10230002
*                                                                       10240002
         OI    FLAG5,LIN               * SET LOW LEVEL INDEX SWITCH     10250002
         MVC   TEMPBUFF(L'ICEPERT),ICEPERT GET PERT PORTION OF ICE      10260002
         B     FSTCHEK                 GO CHECK FOR 'FST'               10270002
*                                                                       10280002
*                                                                       10290002
VIUPDATE EQU   *                                                        10300002
*                                                                       10310002
         MVC   TEMPBUFF(L'VICEPERT),VICEPERT GET PERT PORTION OF VICE   10320002
         MVC   FSTBLK,TTRVFST          FIRST BLOCK OF VOLUME INDEX      10330002
*                                                                       10340002
FSTCHEK  EQU   *                                                        10350002
*                                                                       10360002
         CLC   FSTBLK,WRITETTR         WRITING THE FIRST BLOCK?         10370002
         BNE   LSTCHEK                 NO, GO CHECK FOR 'LST'           10380002
*                                                                       10390002
         OI    FLAG5,FST               * SET FIRST BLOCK SWITCH         10400002
*                                                                       10410002
LSTCHEK  EQU   *                                                        10420002
*                                                                       10430002
         NC    ETTR,ETTR               WRITING THE LAST BLOCK?          10440002
         BNZ   VFHCHEK                 NO, GO CHECK 'VFH'               10450002
*                                                                       10460002
         CLC   LSTBLK,WRITETTR         LAST BLOCK PROPERLY INDIC?       10470002
         BE    VFHCHEK                 YES, GO CHECK FOR 'VFH'          10480002
*                                                                       10490002
         OI    FLAG5,LST               * SET 'LST' SWITCH               10500002
         TM    FLAG5,LIN               * LOW LEVEL UPDATE?              10510002
         BO    VFHCHEK                 YES, DON'T RESET 'VLSTBLK'       10520002
*                                                                       10530002
         MVC   VLSTBLK,WRITETTR        RESET 'VLSTBLK'                  10540002
*                                                                       10550002
VFHCHEK  EQU   *                                                        10560002
*                                                                       10570002
         CLC   VSAVE,VICESAVE          NEED TO UPDATE VICE?             10580002
         BE    ROUTE                   NO                               10590002
*                                                                       10600002
         OI    FLAG5,VFH               * YES, SET 'VFH' SWITCH          10610002
*                                                                       10620002
         EJECT                                                          10630002
*                                                                       10640002
ROUTE    EQU   *                                                        10650002
*                                                                       10660002
         TM    FLAG5,LST+VFH           * TAKE THE 'WRITVICE' ENTRY?     10670002
         BZ    WRITVICE                YES                              10680002
*                                                                       10690002
         TM    FLAG5,FST+LST+LIN       * TAKE THE 'MOVEICE' ENTRY?      10700002
         BO    MOVEICE                 YES                              10710002
*                                                                       10720002
         TM    FLAG5,LST+LIN           * TAKE THE 'READICE' ENTRY?      10730002
         BO    READICE                 YES                              10740002
*                                                                       10750002
         TM    FLAG5,FST               * TAKE THE 'WRITICE' ENTRY?      10760002
         BZ    WRITICE                 YES                              10770002
*                                                                       10780002
         TM    FLAG5,LIN               * TAKE THE 'MOVEVICE' ENTRY?     10790002
         BO    WRITICE                 NO                               10800002
*                                                                       10810002
*      FALL THRU TO 'MOVEVICE'                                          10820002
*                                                                       10830002
         EJECT                                                          10840002
*                                                                       10850002
MOVEVICE EQU   *                                                        10860002
*                                                                       10870002
         MVC   OUTENTRY+L'VNAME(L'VICEPERT),VICEPERT VICE TO 'OUTPUT'   10880002
*                                                                       10890002
WRITVICE EQU   *                                                        10900002
*                                                                       10910002
         BAL   BALREG4,WRITE           ***WRITE KEY & DATA***           10920002
         B     CHEKSPAC                CHECK FOR CATALOG FULL           10930002
*                                                                       10940002
*                                                                       10950002
READICE  EQU   *                                                        10960002
*                                                                       10970002
         BAL   BALREG4,WRITE           ***WRITE KEY & DATA***           10980002
         L     R0,IFSTBLK              TTR OF ICE                       10990002
         IC    R0,ZERO                 ZERO ALIAS COUNT                 11000002
         BAL   BALREG4,READ            ***READ ICE DATA***              11010002
         MVC   INENTRY+L'INAME(L'ILSTBLK),WRITETTR    MOVE IN NEW ICE   11020002
         BAL   BALREG4,WRITE           ***WRITE ICE DATA***             11030002
         TM    FLAG5,VFH               * OK TO QUIT UPDATE?             11040002
         BZ    EXITCODE                YES                              11050002
*                                                                       11060002
         B     READVICE                NO, VICE NEEDS UPDATING          11070002
*                                                                       11080002
*                                                                       11090002
MOVEICE  EQU   *                                                        11100002
*                                                                       11110002
         MVC   OUTENTRY+L'INAME(L'ILSTBLK),WRITETTR UPDATE ICE          11120002
*                                                                       11130002
WRITICE  EQU   *                                                        11140002
*                                                                       11150002
         BAL   BALREG4,WRITE           ***WRITE KEY & DATA***           11160002
         CLI   FLAG5,FST+LST+LIN       * OK TO QUIT UPDATE?             11170002
         BE    EXITCODE                YES                              11180002
*                                                                       11190002
READVICE EQU   *                                                        11200002
*                                                                       11210002
         LA    R0,X0100                GET TTR OF VICE                  11220002
         BAL   BALREG4,READ            ***READ VICE DATA***             11230002
         MVC   INENTRY+L'VNAME(L'VICEPERT),VICEPERT  VICE TO 'INPUT'    11240002
         BAL   BALREG4,WRITE           ***WRITE VICE DATA***            11250002
         EJECT                                                          11260002
*                                                                       11270002
CHEKSPAC EQU   *                                                        11280002
*                                                                       11290002
         CLI   VFHOLE,XFF              IS CATALOG FULL?                 11300002
         BNE   EXITCODE                NO, FUNCTION IS COMPLETE         11310002
*                                                                       11320002
*      CATALOG IS FULL.  ATTEMPT TO EXTEND BY STARTING AT THE LAST      11330002
*      BLOCK IN THE CATALOG AND SEARCHING FOR KEY=0.                    11340002
*      'IO' WILL BRANCH TO IGC0002H TO EXTEND.                 @YL026UD 11350002
*                                                                       11360002
*      IF A NEW EXTENT IS AVAILABLE, CONTROL WILL RETURN AND 'VFHOLE'   11370002
*      WILL BE UPDATED IN THE ALREADY WRITTEN VICE.                     11380002
*                                                                       11390002
*      IF NO NEW EXTENT IS AVAILABLE, CONTROL WILL GO TO THE            11400002
*      EXITING CODE AND THE VICE WILL REMAIN INDICATING CATALOG         11410002
*      FULL.                                                            11420002
*                                                                       11430002
         MVC   OPTNCCW,TIC2            TO SEARCH KEY=0                  11440002
         MVC   VFHOLE,VICESAVE         PUT ON WORD BDY           YM5075 11450002
         L     R0,VFHOLE               TTR OF ORIGINAL 'VFHOLE'  YM5075 11460002
         BAL   BALREG2,TOABSL1         GO TO CONVERT                    11470002
         BAL   BALREG1,IO2             ***SEARCH KEY=0***               11480002
         BAL   BALREG2,TORLTV1         GO TO CONVERT                    11490002
         ST    R0,VFHOLE               UPDATE 'VFHOLE'                  11500002
*                                                                       11510002
*      'VCLSTBLK' IS UPDATED BY IGC0002H                       @YL026UD 11520002
*                                                                       11530002
         B     READVICE                UPDATE VICE                      11540002
*                                                                       11550002
         EJECT                                                          11560002
*                                                                       11570002
ERREXIT  EQU   *                                                        11580002
*                                                                       11590002
         TM    FLAG1,LOCATEF           LOCATE?                          11600002
         BO    EXITCODE                BRANCH IF YES                    11610002
*                                                                       11620002
         CLI   VTYPE,VICETYP           IS VICE IN CORE?                 11630002
         BNE   EXITCODE                BRANCH IF NO AND DON'T CREATE ER 11640002
*                                                                       11650002
*      SAVE REGISTERS IN CASE AN ENVIRONMENT RECORD IS CREATED.         11660002
*                                                                       11670002
         LA    R15,OUTPUT              SET TEMPORARY BASE FOR ER        11680002
         USING EREC,R15                                                 11690002
         STM   R0,R14,EREGSAV          SAVE REGS EXCEPT R15             11700002
         LR    R9,R15                  SET PERMANENT BASE FOR ER        11710002
         DROP  15                                                       11720002
         USING EREC,R9                                                  11730002
         CLI   ERRCATSV,ERROR08        CATALOG ERROR=8?                 11740002
         BE    ER                      BRANCH IF YES AND CREATE ER      11750002
*                                                                       11760002
*      CREATE AN ENVIRONMENT RECORD FOR ALL ERROR CODES 28 OR GREATER   11770002
*                                                                       11780002
         CLI   ERRCATSV,ERROR28        I/O ERROR?                       11790002
         BL    EXITCODE                BRANCH IF NO                     11800002
*                                                                       11810002
*                                                                       11820002
ER       EQU   *                                                        11830002
*                                                                       11840002
*      SAVE THE IOB AND OPTION CCW ('OPTNCCW') SO MORE I/O MAY BE       11850002
*      DONE AND NOT INVALID THE ENVIRONMENT RECORD                      11860002
*                                                                       11870002
         MVC   ERIOB,IOB               SAVE OLD IOB                     11880002
         MVC   EROPTNCC,OPTNCCW        SAVE OPTION CCW                  11890002
*                                                                       11900002
*      IF THE LAST BLOCK OF THE DATA SET ('VCLSTBLK') IS AVAILABLE      11910002
*      (KEY FIELD ZERO), THEN THE ENVIRONMENT RECORD (SEE EREC DSECT    11920002
*      FOR A DESCRIPTION) MAY BE WRITTEN.                               11930002
*                                                                       11940002
         L     R0,VCLSTBLK             GET TTR TO CATALOG LAST BLOCK    11950002
         BAL   BALREG2,TOABSL1         CONVERT                          11960002
*                                                                       11970002
*      SET UP CCW TO READ LAST KEY FIELD                                11980002
*                                                                       11990002
         LM    R14,R15,ERCCWR          GET RKD CCW                      12000002
         AR    R14,R9                  RELOCATE                         12010002
         STM   R14,R15,OPTNCCW         BUILD THE CHANNEL PROGRAM        12020002
*                                                                       12030002
*      READ KEY FIELD AND 4 BYTES OF DATA OF THE LAST BLOCK OF CATALOG  12040002
*      DATA SET.                                                        12050002
*                                                                       12060002
         BAL   BALREG1,IO2             ***READ KEY FIELD***             12070002
         NC    ERKEY,ERKEY             KEY 0?                           12080002
         BNZ   EXITCODE                DO NOT CREATE ER                 12090002
*                                                                       12100002
*      CREATE THE ENVIRONMENT RECORD (SEE EREC FOR A DESCRIPTION)       12110002
*                                                                       12120002
*      RELOCATE WRITE CCW                                               12130002
*                                                                       12140002
         LM    R14,R15,ERCCWW          GET WRITE DATA CCW               12150002
         AR    R14,R9                  RELOCATE FOR EREC1               12160002
         STM   R14,R15,OPTNCCW         BUILD THE CHANNEL PROGRAM        12170002
*                                                                       12180002
*      FIRST SAVE THE FIRST 20 BYTES OF EACH BUFFER                     12190002
*                                                                       12200002
         MVC   ERINPUT,INENTRY         SAVE 18 BYTES OF INPUT           12210002
         MVC   EROUTPUT,OUTENTRY       SAVE 18 BYTES OF OUTPUT          12220002
         LA    R1,D01                                                   12230002
         A     R1,EROCTR               INCREMENT BY 1                   12240002
         ST    R1,ERCTR                SAVE IN NEW OUTPUT AREA          12250002
         MVC   ERMODMAP,MODMAP1        RELOCATE MOD MAP                 12260002
         MVC   ERERRCOD,ERRCODE        RELOCATE ERROR CODES             12270002
         MVI   ERNAME,CCDBLANK                                          12280002
         MVC   ERNAME+1(L'ERNAME-1),ERNAME     BLANK NAME               12290002
         LH    R15,NAMLEN              GET LENGTH OF NAME-1             12300002
         L     R14,CAMPTR1             GET PTR TO NAME                  12310002
         EX    R15,MOVENAME            MVC ERNAME(0),0(R14)             12320002
         TIME  DEC                     GET TIME AND DATE                12330002
         STM   R0,R1,ERTIME            SAVE TIME AND DATE IN ER         12340002
*                                                                       12350002
*      MOVE FLAGS INTO THE RECORD                                       12360002
*                                                                       12370002
         MVC   ERFLG12,ERFLAG12        FLAG1 AND FLAG2                  12380002
         MVC   ERFLAG3,FLAG3           FLAG3                            12390002
         MVC   ERNAMTTR,NAMTTR0        SAVE LEVEL NAME                  12400002
         MVC   ERCAMLST,CAMLSTD        SAVE OPTION BYTES                12410002
         MVC   ERWA1,ERTTRS            SAVE TTRS                        12420002
         BAL   BALREG1,IO2             WRITE ENVIRONMENT RECORD         12430002
         B     EXITCODE                PREPARE AND RETURN TO CALLER     12440002
*                                                                       12450002
*                                                                       12460002
ERR2H    EQU   *                                                        12470002
*                                                                       12480002
*      AN ERROR FROM IGC0002H, TRANSLATE THE ERROR CODE TO     @YL026UD 12490002
*      THE PROPER CATALOG ERROR CODE                                    12500002
*                                                                       12510002
         STC   R1,ERRSV2H              SAVE ERROR CODE                  12520002
         LA    R7,ERROR28              INITIALLY ASSUME I/O ERROR       12530002
         CLI   ERRSV2H,ERROR12         12?                              12540002
         BE    SETCODE                 BRANCH IF YES                    12550002
*                                                                       12560002
         LA    R7,ERROR20              ASSUME NO SPACE ERROR            12570002
         CLI   ERRSV2H,ERROR08         8?                               12580002
         BE    SETCODE                 BRANCH IF YES                    12590002
*                                                                       12600002
         LR    R7,R1                   MUST BE 4 OR 72                  12610002
*                                                                       12620002
*      SET SO SCHEDULER MOUNT MESSAGE IS NOT ISSUED                     12630002
         XC    DEVTYPE,DEVTYPE         0 SWITCH                         12640002
*                                                                       12650002
SETCODE  EQU   *                                                        12660002
*                                                                       12670002
         TM    FLAG1,LOCATEF           * LOCATE?                        12680002
         BZ    SKIP1                   BRANCH IF NO                     12690002
         STC   R7,ERRLOCSV             LOCATE ERROR                     12700002
         B     EXITCODE                SET PROPER CODE AND EXIT         12710002
*                                                                       12720002
SKIP1    EQU   *                                                        12730002
*                                                                       12740002
         STC   R7,ERRCATSV             NON-LOCATE ERROR                 12750002
*                                                              @OZ07699 12751037
EXITCODE EQU   *                                               @OZ07699 12758037
         USING BLDLAREA,R13            BASE FOR MSGAREA        @ZA05575 12765037
*                                                               ZA02665 12782037
*  WRITE A MESSAGE TO THE OPERATOR IF THE ERROR CONDITION      @ZA05908 12783037
* CALLS FOR IT                                                 @ZA05908 12784037
*                                                               ZA02665 12785037
         TM    FLAG1,LOCATEF           LOCATE?                 @OZ12244 12785237
         BO    TSTSQERR                YES, GOTO TSTSQERR      @OZ12244 12785437
         LA    R13,BLDLAREA-WORKAREA(R6) ADDRESSABILITY        @OZ12244 12785637
TSTSQERR EQU   *                                                        12785837
         TM    FLAG2,SEQERR             DID CLC6 FIND SEQUENCE  ZA02665 12786037
*                                       ERROR                   ZA02665 12787037
         BZ    TSTENTRY                 NO,SKIP                @ZA05908 12788037
         MVC   INPUT(MSG2LEN),MSG2     BUILD ERROR MESSAGE     @ZA05908 12789037
*  ROUTINE TO CONVERT TTR FROM HEX TO EBCDC FOR IEC304I MSG             12789137
         UNPK  CONWORK(7),CONWORK(4)   TTR                     @OZ12193 12789237
         NC    CONWORK(7),MASK         DROP ZONES              @OZ12193 12789337
         TR    CONWORK(6),CONTABL      SET TO EBCDIC           @OZ12193 12789437
         LA    R1,INPUT+MSG2LEN-15     PT TO TTR OF MSG        @OZ12193 12789537
         MVC   0(6,R1),CONWORK         MOVE TTR TO MSG         @OZ12193 12789637
         MVC   INPUT+MSG2LEN+44(L'DESCRTE),DESCRTE    MOVE IN  @OZ14802 12789737
*                                      ROUTE & DESCR CODES     @OZ14802 12789837
         LA    1,INPUT+MSG2LEN-7       SET BASE TO COMPLETE MSG         12790037
         B     BUILDMSG                                        @ZA05908 12791037
TSTENTRY EQU   *                                               @ZA05908 12792037
         TM    FLAG2,ETYPERR           CHK FOR ETYPE ERR       @ZA05908 12792237
         BZ    TESTIO                  NO BR                   @ZA05908 12792437
         MVC   INPUT(MSG3LEN),MSG3     MOVE MSG TO WORKAREA    @ZA05908 12792637
         MVC   INPUT+MSG3LEN+44(L'DESCRTE),DESCRTE    MOVE IN  @OZ14802 12792737
*                                      ROUTE & DESCR CODES     @OZ14802 12792837
         LA    1,INPUT+MSG3LEN-7       SET TO COMPLETE MSG     @ZA05908 12792937
         B     BUILDMSG                                        @ZA05908 12793037
TESTIO   EQU   *                                                ZA02665 12793137
*                                                              @OZ00006 12793337
* WRITE I/O ERROR MESSAGE TO OPERATOR IF THERE WAS AN I/O      @OZ00006 12794337
* ERROR, SO HE CAN NOTIFY THE SYSTEMS PROGRAMMER               @OZ00006 12794537
*                                                              @OZ00006 12794737
         CLI   ERRLOCSV,ERROR28        I/O ERROR ON LOCATE     @OZ00006 12794937
         BE    WRITMSG                 YES, WRITE MSG          @OZ00006 12795137
         CLI   ERRCATSV,ERROR28        I/O ERROR ON NON-LOCATE @OZ00006 12795237
         BNE   SETLEVLS                NOT I/O ERROR, GO EXIT  @OZ00006 12795537
WRITMSG  EQU   *                                               @ZA05908 12795737
         MVC   INPUT(MSGLEN),MSG      MESSAGE SKELETON         @ZA02274 12795937
         MVC   INPUT+MSGLEN+44(L'DESCRTE),DESCRTE     MOVE IN  @OZ14802 12796037
*                                      ROUTE & DESCR CODES     @OZ14802 12796137
         LA    1,INPUT+MSGLEN-7                                @ZA05908 12796237
BUILDMSG EQU   *                                               @ZA05908 12796337
         MVC   0(6,1),VOLSN    VOL SER TO MSG                  @ZA05908 12796437
         MVI   7(1),CCDBLANK  BLANK NAME                       @ZA05908 12796637
         MVC   8(L'ERNAME-1,1),7(1)                            @ZA05908 12796737
         LH    R15,NAMLEN              NAME LENGTH             @ZA05908 12796837
         L     R14,CAMPTR1             POINT TO NAME           @ZA05908 12796937
         EX    R15,MOVENAM2            MOVE NAME TO MSG        @ZA05908 12797037
         LA    R1,INPUT                                        @ZA05908 12797637
         WTO   MF=(E,(1))                                      @ZA05908 12797837
         DROP  R13                                             @ZA05908 12798037
*                                                              @OZ00006 12798237
SETLEVLS EQU   *                                               @OZ00006 12798837
*                                                                       12799437
*      SET PROPER ANALYSIS RETURN CODES                        @OZ07699 12800037
*                                                                       12810002
         LH    R10,NAMLF               GET # OF LEVELS         @OZ15062 12820008
         XR    R11,R11                 CLEAR                            12830002
         IC    R11,ERRLOCSV            GET LOCATE ERROR CODE            12840002
         XR    R7,R7                   CLEAR                            12850002
         IC    R7,ERRCATSV             INITIALLY ASSUME CATALOG ERROR   12860002
*                                                                       12862008
         LTR   R7,R7                   CATALOG ERROR ?                  12872008
         BNZ   FREERES                 BRANCH IF YES; RETURN THIS CODE  12882008
*                                                                       12892008
         LTR   R11,R11                 LOCATE ERROR ?                   12902008
         BZ    FREERES                 BRANCH IF NO; NO ERROR           12912008
*                                                                       12930002
         LR    R7,R11                  SET LOCATE ERROR CODE            12940002
         TM    FLAG1,LOCATEF           * LOCATE?                        12950002
         BO    LOCODE                  BRANCH IF YES                    12960002
*                                                                       12970002
         CLI   ERRLOCSV,ERROR04        LOCATE ERROR OF 4?               12980002
         BE    FREERES                 BRANCH IF YES                    12990002
*                                                                       13000002
         CLI   ERRLOCSV,ERROR72        ERROR 72?                        13010002
         BE    FREERES                 BRANCH IF YES; RETURN A 72       13020002
*                                                                       13030002
         LA    R7,ERROR08                                               13040002
         CLI   ERRLOCSV,ERROR28        LOCATE I/O ERROR?                13050002
         BNE   FREERES                 BRANCH IF NO; RETURN AN 8        13060002
*                                                                       13070002
         LA    R7,ERROR28              SET TO CATALOG I/O ERROR         13080002
         B     FREERES                 FREE RESOURCES                   13090002
*                                                                       13100002
*                                                                       13110002
LOCODE   EQU   *                                                        13120002
*                                                                       13130002
         CLI   ERRLOCSV,ERROR28        LOCATE I/O ERROR?                13140002
         BNE   FREERES                 BRANCH IF NO; RETURN THIS CODE   13150002
*                                                                       13160002
         TM    CAMOPTN1,CAMBLOCK       LOCATE BY BLOCK?                 13170002
         BO    DCBDEB                  BRANCH IF YES; RETURN A 28       13180002
*                                                                       13190002
         LA    R7,ERROR24              LOCATE I/O ERROR CODE IS 24      13200002
*                                                                       13210002
FREERES  EQU   *                                                        13220002
*                                                                       13230002
         TM    CAMOPTN1,CAMBLOCK       LOCATE BY BLOCK?                 13240002
         BO    DCBDEB                  BRANCH IF YES--DO NOT ISSUE DEQ  13250002
*                                                                       13260002
         TM    FLAG2,ESTAEFL      TESTFOR ESTAE FAILURE        @ZA03161 13262037
         BNZ   DCBDEB                  BRANCH IF ESTAE FAILURE @YL026UD 13266002
*                                                                       13268002
*      DEQUEUE VICE, VOLUME INDEX AND HIGH LEVEL NAME(RELEASE DEVICE),  13270002
*      IF ENQUEUED UPON                                                 13280002
*                                                                       13290002
         XC    ENQRNAM8,ENQRNAM8       SET RNAME FOR VICE               13300002
*                                                                       13310002
*      SET FLAG TO HAVE IN CASE NO PREVIOUS ENQ                         13320002
*                                                                       13330002
         OI    ENQFLAGS,HAVE                                            13340002
         DEQ   ,MF=(E,(R5))            DEQ VICE                         13350002
*                                                                       13360002
         NI    ENQFLAGS,SMCSTEPC       NO 'RESET MUST CMPLT'     Y01965 13370002
         MVC   ENQRNAM8,ENQNAME        SET RNAME FOR VOLUME INDEX       13380002
         DEQ   ,MF=(E,(R5))            DEQ VOLUME INDEX                 13390002
*                                                                       13400002
         MVI   ENQFLAGS,RESERVE+HAVE   TURN ON RESERVE         @ZA04613 13410037
         MVC   ENQRNAM8,HILVLNAM       SET RNAME FOR HIGH LEVEL         13420002
*                                                                       13430002
*      DEQUE NAME AND RELEASE ('UN-RESERVE') THE DEVICE                 13440002
*                                                                       13450002
         DEQ   ,MF=(E,(R5))            DEQ NAME                         13460002
*                                                                       13470002
*                                                                       13480002
DCBDEB   EQU   *                                                        13490002
*                                                                       13500002
*     FREE THE MAIN STORAGE FOR THE DCB/DEB AREA                        13510002
*                                                                       13520002
         TM    FLAG1,FREEDCB           DCB/DEB ALREADY FREED?           13530002
         BO    RPSTST                  BRANCH IF YES; CHECK FOR RPS WA  13540002
*                                                                       13550002
*      GET DCB/DEB ADDRESS FREE                                         13560002
         L     R1,DCBADDR                                               13570002
*      IF CLC3 HAS GOTTEN CONTROL DCBADDR IS NO LONGER VALID            13580002
         TM    MODMAP1,MODCLC3         HAS CLC3 GOTTEN CONTROL?         13590002
         BZ    SKIP5                   BRANCH IF NO                     13600002
         L     R1,IOBDCB               GET DCB ADDRESS FROM IOB         13610002
*                                                                       13620002
SKIP5    EQU   *                                                        13630002
*                                                                       13640002
*      IF R1=0 THEN THE DCB/DEB GETMAIN HAS NOT BEEN ISSUED YET         13650002
*                                                                       13660002
         LTR   R1,R1                   0?                               13670002
         BZ    FREEWA                  BRANCH IF YES                    13680002
*      FREE THE DCB/DEB AND CLOSE THE CATALOG                           13690002
         USING DCBAREA,R1                                               13700002
         L     R0,NMBYTES              GET LENGTH                       13710002
         LA    R1,DCBAREA              GET ADDRESS             @YL026UD 13720002
         XC    SVOPNWAP(4),SVOPNWAP    RESET WKA PTR (ESTAE)   @YL026UD 13722002
         SVC   FREEMAIN                FREEMAIN   R,LV=(0),A=(1)        13730002
         DROP  R1                                                       13740002
*                                                                       13750002
*                                                                       13760002
RPSTST   EQU   *                                                        13770002
*                                                                       13780002
         TM    FLAG2,RPSDEV            RPS WA?                          13790002
         BZ    FREEWA                  BRANCH IF NO                     13800002
*                                                                       13810002
*      FREE RPS WORKAREA                                                13820002
*                                                                       13830002
         LA    R0,RPSEND-RPSD          GET LENGTH                       13840002
         L     R1,RPSAVEP              GET ADDRESS OF THE AREA          13850002
         XC    SVRPSWAP(4),SVRPSWAP    RESET WKA PTR (ESTAE)   @YL026UD 13852002
         SVC   FREEMAIN                FREEMAIN   R,LV=(0),A=(1)        13860002
*                                                                       13870002
*                                                                       13880002
FREEWA   EQU   *                                                        13890002
*                                                                       13900002
*      FREE WORKAREA                                                    13910002
*                                                                       13920002
*      INITIALLY ASSUME NON-LOCATE FUNCTION                             13930002
*                                                                       13940002
         L     R12,CWAP                RESTORE CONTROLLER WA PTR Y01113 13950002
         LA    R0,WORKEND-WORKAREA     GET LENGTH OF AREA TO FREE       13960002
         LR    R1,R6                   GET POINTER TO AREA TO FREE      13970002
*                                                                       13980002
         TM    FLAG1,LOCATEF           * LOCATE?                        13990002
         BZ    FREEWA2                 BRANCH IF NO                     14000002
*                                                                       14010002
         TM    FLAG1,RTNBLK            RETURN BLK TO USER?              14020002
         BZ    SKIP6                   BRANCH IF NO                     14030002
*                                                                       14040002
         USING BLDLAREA,R13            ESTABL ADDRBLTY TO 'BLDLAREA'    14050002
         MVC   RETDATA,BLDLBUFF        RETURN BLK                       14060002
         DROP  R13                                                      14070002
*                                                                       14080002
*                                                                       14090002
SKIP6    EQU   *                                                        14100002
*                                                                       14110002
         LR    R1,R13                  GET POINTER TO AREA TO FREE      14130002
         LA    R0,BLDLEND-BLDLAREA     GET LENGTH TO FREEMAIN  @YL026UD 14134002
*                                                                       14140002
FREEWA2  EQU   *                                                        14150002
*                                                                       14160002
         SVC   FREEMAIN                FREEMAIN R,LV=(0),A=(1)          14170002
*                                                                       14180002
*      RETURN TO INTERFACE MAPPER (IGG0CLCA OR IGG0CLCB)       @YL026UD 14242002
*                                                              @YL026UD 14244002
         ESTAE 0                       RESET ESTAE EXIT        @YL026UD 14244402
*                                                              @YL026UD 14244502
*      PUT RETURN CODES INTO PROPER REGISTERS AND EXIT         @YL026UD 14244802
*                                                              @YL026UD 14245202
         LR    R0,R10                  NUMBER OF LEVELS FOUND  @YL026UD 14245602
         LR    R1,R11                  INDIC RETURN & CODE     @YL026UD 14245702
         ICM   R1,8,HEX8               INDCATE CVOL VS VSAMCAT @OZ32432 14245837
         LR    R15,R7                  SET RETURN CODE         @YL026UD 14246237
*                                                              @YL026UD 14246637
         L     R13,612(R12)            GET CIII SAVEAREA PTR   @YL026UD 14247037
         LM    R2,R12,28(R13)          RESTORE REGISTERS 2-12  @YL026UD 14248002
         L     R14,12(R13)             RESTORE RETURN REGISTER @YL026UD 14248102
         BR    R14                     RETURN TO IGG0CLCA/CLCB @YL026UD 14248402
         EJECT                                                          14250002
*                                                                       14260002
****************                                                        14270002
*              *                                                        14280002
READ     EQU   *                                                        14290002
*              *                                                        14300002
****************                                                        14310002
*                                                                       14320002
         BAL   BALREG2,TOABSL1         GO TO CONVERT                    14330002
         MVC   OPTNCCW,RD              MOVE IN READ DATA CCW            14340002
         BAL   BALREG1,IO2             ***READ DATA***                  14350002
         MVI   OPTNCCW,WDOP            MOVE IN WRITE DATA OP-CODE       14360002
         BR    BALREG4                 RETURN                           14370002
*                                                                       14380002
         EJECT                                                          14390002
*                                                                       14400002
****************                                                        14410002
*              *                                                        14420002
WRITE    EQU   *                                                        14430002
*              *                                                        14440002
****************                                                        14450002
*                                                                       14460002
         BAL   BALREG1,IO2             ***WRITE DATA***                 14470002
*                                                                       14480002
*      VERIFY THE WRITE OPERATION                                       14490002
*                                                                       14500002
         MVC   OPTNCCW,RKD             MOVE IN CCW--NO TRANSFER         14510002
         BAL   BALREG1,IO2             ***READ KEY & DATA***            14520002
         BR    BALREG4                 RETURN                           14530002
*                                                                       14540002
         EJECT                                                          14550002
*                                                                       14560002
****************                                                        14570002
*              *                                                        14580002
TOABSL1  EQU   *                                                        14590002
*              *                                                        14600002
****************                                                        14610002
*                                                                       14620002
* FUNCTION:                                                             14630002
*    CONVERT THE TTR0 IN R0 TO AN ABSOLUTE DASD ADDRESS AND             14640002
*    PUT IT INTO THE IOB MBBCCHHR                                       14650002
*                                                                       14660002
* INPUT:                                                                14670002
*    R0 IS THE TTR0 TO BE CONVERTED                                     14680002
*    RETURN ADDRESS IN BALREG2                                          14690002
*                                                                       14700002
* OUTPUT:                                                               14710002
*    ABSOLUTE DASD ADDRESS IN IOB                                       14720002
*    ERROR CODE IN R15                                                  14730002
*                                                                       14740002
* DESTROYED:                                                            14750002
*    REGISTERS - R0,R1,R2,R14, AND R15=0                                14760002
*    WA - SAVEAREA AND MBBCCHHR OF THE IOB                              14770002
*                                                                       14780002
* SUBROUTINES USED:                                                     14790002
*         THE RESIDENT CONVERT ROUTINE - IECPCNVT                       14800002
*                                                                       14810002
*                                                                       14820002
****************                                                        14830002
****************                                                        14840002
*                                                                       14850002
         L     R15,EPTOABSL            GET CONVERT ADDRESS FROM WA      14860002
         B     CONVERT1                USE COMMON CODE                  14870002
         EJECT                                                          14880002
*                                                                       14890002
****************                                                        14900002
*              *                                                        14910002
TORLTV1  EQU   *                                                        14920002
*              *                                                        14930002
****************                                                        14940002
*                                                                       14950002
* FUNCTION:                                                             14960002
*    MOVE THE DASD ADDRESS OF CCHHR FROM NXTCNT INTO THE CCHHR OF THE   14970002
*    IOB.  THIS GIVES THE TTR OF THE NEXT FREE BLOCK.                   14980002
*                                                                       14990002
* INPUT:                                                                15000002
*    RETURN IN BALREG2                                                  15010002
*    UPDATED NXTCNT                                                     15020002
*                                                                       15030002
* OUTPUT:                                                               15040002
*    TTR0 IN R0                                                         15050002
*                                                                       15060002
* DESTROYED:                                                            15070002
*    REGISTERS -- R0,R1,R2,R14, AND R15=0                               15080002
*    WA -- SAVEAREA AND CCHHR OF IOB                                    15090002
*                                                                       15100002
* SUBROUTINES USED:                                                     15110002
*         THE RESIDENT CONVERT ROUTINE -- IECPRLTV                      15120002
*                                                                       15130002
*                                                                       15140002
****************                                                        15150002
****************                                                        15160002
*                                                                       15170002
         MVC   IOBSKADD+3(L'NXTCCHHR),NXTCCHHR    MOVE COUNT FIELD      15180002
*                                                                       15190002
         L     R15,EPTORLTV            GET ADDRESS OF ROUTINE FROM WA   15200002
*                                                                       15210002
*                                                                       15220002
CONVERT1 EQU   *                                                        15230002
*                                                                       15240002
*      THE FOLLOWING SECTION IS COMMON TO BOTH ROUTINES                 15250002
*                                                                       15260002
         STM   R9,R13,SAVEAREA         SAVE REGS DESTROYED BY CONVERT   15270002
         L     R1,DEBADDR              GET DEB ADDRESS                  15280002
         LA    R2,IOBSKADD             POINT TO MBBCCHHR                15290002
         BALR  BALREG1,R15             GO TO CONVERT ROUTINE            15300002
         LM    R9,R13,SAVEAREA         RESTORE REGISTERS                15310002
         BR    BALREG2                 RETURN TO CALLER                 15320002
         EJECT                                                          15330002
*                                                                       15340002
***                                                                     15350002
****************                                                        15360002
*              *                                                        15370002
IO2      EQU   *                                                        15380002
*              *                                                        15390002
****************                                                        15400002
*                                                                       15410002
* FUNCTION:                                                             15420002
*    1.  IF THE DEVICE HAS THE RPS FEATURE, THE SET SECTOR CCW IS       15430002
*        UPDATED.                                                       15440002
*    2.  ISSUE EXCP FOR THE CHANNEL PROGRAM POINTED TO BY THE IOB.      15450002
*    3.  WAIT FOR THE OPERATION TO COMPLETE AND CHECK THE ECB.          15460002
*    4.  IF AN END OF EXTENT CONDITION, BRANCH TO IGC0002H     @YL026UD 15470002
*        AND EXTEND THE CATALOG.                               @YL026UD 15480002
*    5.  IF A PERMANENT I/O ERROR, SET AN ERROR CODE AND BRANCH TO      15490002
*        ERREXIT.                                                       15500002
*                                                                       15510002
* INPUT:                                                                15520002
*    UPDATED CHANNEL PROGRAM                                            15530002
*    RETURN ADDRESS IN BALREG 1                                         15540002
*                                                                       15550002
* OUTPUT:                                                               15560002
*    1.  FILLED BUFFER OR                                               15570002
*    2.  EMPTIED BUFFER OR                                              15580002
*    3.  ANOTHER FREE BLOCK ADDRESS                                     15590002
*                                                                       15600002
* DESTROYED:                                                            15610002
*    REGISTERS R0,R1,R15 (IF EXTENDS)                                   15620002
*                                                                       15630002
* EXTERNAL ROUTINES USED:                                               15640002
*    EXCP, WAIT, IGC0002H TO EXTEND CATALOG                    @YL026UD 15650002
*                                                                       15660002
* EXITS:                                                                15670002
*         IGC0002H TO EXTEND THE CATALOG                       @YL026UD 15680002
*         IGG0CLC7 FOR PERMANENT I/O ERROR                              15690002
****************                                                        15700002
****************                                                        15710002
*                                                                       15720002
         USING RPSD,R1                                                  15730002
*                                                                       15740002
         TM    FLAG2,RPSDEV            RPS FEATURE?                     15750002
         BZ    EXCP2                   BRANCH IF NO                     15760002
         L     R1,RPSAVEP              GET RPS SAVE AREA PTR            15770002
         STM   R9,R2,RPSAVE            SAVE REGS DESTROYED BY CONVERT   15780002
         LM    R15,R2,RPSINPUT         GET SECTOR CONVERT INPUT PARAMS  15790037
         IC    R0,IOBSKADD+7           GET R OF CCHHR                   15800037
         BALR  R14,R15                 CONVERT R TO SECTOR              15810037
         LM    R9,R2,RPSAVE            RESTORE REGISTERS                15820002
*                                                                       15830002
*                                                                       15840002
EXCP2    EQU   *                                                        15850002
*                                                                       15860002
         EXCP  IOB                     ISSUE EXCP                       15870002
         WAIT  ECB=ECB                 WAIT FOR REQUEST                 15880002
         CLI   ECB,X7F                 I/O ERROR?                       15890002
         BCR   8,BALREG1               BRANCH IF NO                     15900002
         NC    ERRCODE,ERRCODE         PROCESSING ER?                   15910002
         BNZ   EXITCODE                BRANCH IF YES--IGNORE ERROR      15920002
         CLI   ECB,X'42'               OUT OF EXTENT?                   15930002
         BE    EXTEND2                 BRANCH IF YES AND EXTEND         15940002
         MVI   ERRCATSV,ERROR28        SET ERROR CODE TO I/O ERROR      15950002
         B     ERREXIT                 EXIT                             15960002
*                                                                       15970002
EXTEND2  EQU   *                                                        15980002
*                                                                       15990002
*      EXTEND CATALOG                                                   16000002
*                                                                       16010002
         ST    BALREG1,SVBALREG        SAVE CURRENT BALREG1    @YL026UD 16012002
         L     R0,IOBDCB               GET DCB PTR                      16020002
         L     R15,IGC0002H                                    @OZ00006 16022002
         BALR  BALREG1,R15             GO TO NEXT EXTENT       @OZ00006 16030002
*                                                                       16032002
         L     BALREG1,SVBALREG        RESTORE SAVED BALREG1   @YL026UD 16034002
         LTR   R1,R15                  CHECK RETURN CODE                16040002
         BZ    EXCP2                   RE-ISSUE REQUEST IF OK           16050002
*                                                               SA52094 16060002
*      UNABLE TO EXTEND CATALOG, BUT THIS REQUEST HAS           SA52094 16070002
*      COMPLETED NORMALLY SO EXIT                               SA52094 16080002
*                                                               SA52094 16090002
         B     EXITCODE                EXIT                     SA52094 16100002
*                                                                       16110002
         DROP  R1                                                       16120002
         TITLE 'IGG0CLCE - CONSTANT DEFINITIONS'               @YL026UD 29090002
*                                                                       29100002
* CONSTANTS                                                    @YL026UD 29110002
*                                                                       29120002
         USING EREC,R9                                         @YL026UD 29120402
         DS    0F                                                       29122002
ERCCWR   EQU   *                                                        29124002
         DC    X'0E'                   READ KEY AND DATA                29126002
         DC    AL3(ERKEY-EREC)         POINT TO BUFFER                  29128002
         DC    X'2000'                 SLI                              29128402
         DC    H'12'                   READ 12 BYTES                    29128802
         DS    0F                                                       29129202
ERCCWW   EQU   *                                                        29129602
         DC    X'05'                   WRITE DATA                       29129702
         DC    AL3(0)                  BUFFER PTR SET DURING EXECUTION  29129802
TTRVFST  DS    0XL3                    TTR OF THE FIRST BLOCK OF VI     29129902
         DC    X'0000'                 ALL FLAGS OFF                    29133202
         DC    H'256'                  BYTES WRITTEN                    29135202
*                                                                       29135602
ONEREC   DC    F'256'                  UP TTR0 BY ONE                   29136002
MOVE1    MVC   0(0,OUT),0(IN)                                           29136402
MSG      DC    AL2(MSGLEN+44),X'8000'                          @OZ14802 29136837
         DC    C'IEC302I SYSCTLG I/O ERROR,VVVVVV,'            @OZ00006 29137002
MSGLEN   EQU   *-MSG                   LENGTH OF MSG SKELETON  @OZ00006 29137102
DESCRTE  DC    X'10004040'             SYSTEM STATUS,SYSTEM    @OZ00006 29137202
*                                      ERROR/MAINTENANCE,      @OZ00006 29137402
*                                      MASTER CONSOLE INFOR-   @OZ00006 29138002
*                                      MATIONAL                @OZ00006 29138202
         DS    0H                                              @OZ00006 29138402
MOVENAM2 MVC   7(0,1),0(R14)   OBJECT OF EXECUTE      @ZA02274 @ZA05908 29138637
MOVENAME MVC   ERNAME(0),0(R14)                                         29138802
MSG2     DC    AL2(MSG2LEN+44),X'8000'                         @OZ14802 29139037
         DC    C'IEC304I SYSCTLG ENTRY SEQUENCE ERROR,X''TTTTRR'',VVVVV*29139137
               V,'                      SEQUENCE ERROR MESSAGE @OZ12193 29139237
MSG2LEN  EQU   *-MSG2                                           ZA02665 29139337
MSG3     DC    AL2(MSG3LEN+44),X'8000'                         @OZ14802 29139437
         DC    C'IEC305I INVALID ENTRY IN SYSCTLG,VVVVVV,'     @ZA05908 29139737
MSG3LEN  EQU   *-MSG3                                          @ZA05908 29140737
         DROP  R9                                               YL026UD 29141737
*                                                                       29142737
HICCHHNT DC    X'7FFF7FFF7FFF'    HIGH CCHH COUNT.                      29219602
IGC0002H  DC    V(IGC0002H)                                    @OZ00006 29219702
EXTMAXCC DC    F'2'               MAXIMUM EXTEND RETURN CODE   @YL026UD 29223202
CONTABL  DC    CL16'0123456789ABCDEF'     TRANSLATE TABLE      @OZ12193 29223837
MASK     DC    X'0F0F0F0F0F0F00'          HEX TO EBCDC MASK    @OZ12193 29224437
HEX8     DC    X'08'                      ONE BYTE CONSTANT 08 @OZ32432 29225237
         TITLE 'IGG0CLCE - CHANNEL COMMAND WORD DEFINITIONS'            29225602
*                                                                       29226002
* PATTERN CHANNEL COMMAND WORDS.                                        29226702
*                                                                       29230002
CCW1     CCW   X'31',M2B2C2HR+3-AREADCB,X'40',5 SEARCH EQUAL ID@YL026UD 29232002
CCW2     CCW   X'08',CHPG-AREADCB,0,1          TIC TO CCW1     @YL026UD 29234002
CCW3     CCW   X'06',IECSDSF4-AREADCB,X'60',48 READ VTOC DSCB. @YL026UD 29236002
CCW4     CCW   X'D1',DS4HPCHR-AREADCB,X'40',5  SEARCH HI ID.   @YL026UD 29238002
CCW5     CCW   X'08',CHPG+48-AREADCB,0,1       TIC TO CCW7.    @YL026UD 29238402
CCW6     CCW   X'03',0,0,1                   CONTROL NOP.               29238802
CCW7     CCW   X'29',DS1DSNAM-AREADCB,X'60',44 SEARCH KEY EQUAL@YL026UD 29239202
CCW8     CCW   X'08',CHPG+24-AREADCB,0,1       TIC TO CCW4.    @YL026UD 29239602
CCW9     CCW   X'06',DS1FMTID-AREADCB,X'40',96 RD SYSCTLG DSCB @YL026UD 29239702
CCW10    CCW   X'12',COUNT-AREADCB,0,8         READ COUNT.     @YL026UD 29239802
CCWRDKD  CCW   X'0E',DSCBK-AREADCB,0,140       READ KEY & DATA @YL026UD 29239902
*                                                                       29243202
CCWSID   CCW   X'31',MBBCCHHR+3-WKAREA,X'40',5 SEARCH ID                29246702
         DC    X'0800000000000000'     TIC                              29250002
CCWWR    CCW   X'1D',COUNT2-CHPGA2,X'60',8 WRITE CKD, SLI               29260002
CCWRCH   CCW   X'1E',0,X'50',272       READ CKD, SKIP                   29270002
READVTOC CCW   X'29',D1SDSNAM-WKAREA,X'60',44 SEARCH KEY EQUAL          29280002
         CCW   X'08',CHPGA-WKAREA,0,1    TIC                            29290002
         CCW   X'06',D1SFMTID-WKAREA,0,96 READ DATA                     29300002
WRVTOC   CCW   X'05',D1SFMTID-WKAREA,X'40',96 WRITE DATA                29310002
         CCW   X'29',D1SDSNAM-WKAREA,X'60',44 SEARCH KEY EQUAL          29320002
         CCW   X'08',CHPGA4-WKAREA,0,1 TIC                              29330002
         CCW   X'06',0,X'10',96        CHECK DATA                       29340002
CCWRD    CCW   X'06',BLOCK-WKAREA,X'00',256 READ DATA           SA50973 29350002
CCWWDOP  EQU   X'05'                   WRITE DATA OP CODE       SA50973 29360002
CCWOPTN1 EQU   X'30'                   NO TRANSFER, SILI        SA50973 29370002
CCWOPTN2 EQU   X'40'                   COMMAND CHAIN            SA50973 29380002
*                                                              @YL026UD 29382002
*                                                              @YL026UD 29384002
*      MODULE PATCH AREA (MAINTENANCE AREA)                    @YL026UD 29386002
*                                                              @YL026UD 29388002
         DS    0H                                                       29388437
FIXAREA  DC    100C'Z'                                         @YL026UD 29388537
*                                                              @YL026UD 29388802
         TITLE 'IGG0CLCE - CONSTANT EQUATE DEFINITIONS'                 29390002
*                                                                       29392002
*      CONSTANT EQUATES                                                 29394002
*                                                                       29396002
VICETYP  EQU   5                       VICE TYPE CODE                   29398002
ICETYP   EQU   3                       ICE TYPE CODE                    29398402
ILETYP   EQU   0                       ILE TYPE CODE                    29398802
IPETYP   EQU   0                       IPE TYPE CODE                    29399202
DSPETYP  EQU   7                       OR MORE, FOR DSPE TYPE CODE      29399602
VCBPETYP EQU   1                       VCBPE TYPE CODE                  29399702
OCVOLTYP EQU   3                       OLD CVOL TYPE CODE               29399802
NCVOLTYP EQU   5                       NEW CVOL TYPE CODE               29399902
ALIASTYP EQU   4                       ALIAS TYPE CODE                  29403202
GIPETYP  EQU   2                       GIPE TYPE CODE                   29405202
ERROR00  EQU   0                                                        29405602
ERROR04  EQU   4                                                        29406002
ERROR08  EQU   8                                                        29406402
ERROR12  EQU   12                                                       29406502
ERROR16  EQU   16                                                       29406602
ERROR20  EQU   20                                                       29407702
ERROR24  EQU   24                                                       29408102
ERROR28  EQU   28                                                       29408502
ERROR32  EQU   32                                                       29408602
ERROR72  EQU   72                                                       29408702
*********************************************************************** 29408802
*      CHARACTER CODE DEPENDENT CONSTANTS                               29411602
*********************************************************************** 29413602
CCDBLANK EQU   C' '                                                     29414002
CCDRPARN EQU   C')'                                                     29414102
CCDMINUS EQU   C'-'                                                     29414202
CCDPLUS  EQU   C'+'                                                     29414302
CCD0     EQU   C'0'                                                     29415202
CCDG     EQU   C'G'                                                     29415602
CCDV     EQU   C'V'                                                     29416002
CCDPERD  EQU   C'.'                                                     29416102
CCDLPARN EQU   C'('                                                     29416202
*********************************************************************** 29417102
*                                                                       29418202
* MISCELLANEOUS EQUATES USED .                                          29419102
*                                                                       29420002
ONE      EQU   1                       A ONE CONSTANT.                  29440002
TWO      EQU   2                       A TWO CONSTANT.                  29450002
THREE    EQU   3                       A THREE CONSTANT.                29460002
FOUR     EQU   4                       A FOUR CONSTANT.                 29470002
EIGHT    EQU   8                       AN EIGHT CONSTANT.               29480002
TEN      EQU   10                      A TEN CONSTANT.                  29490002
TWELVE   EQU   12                      A TWELVE CONSTANT.               29492002
NINTY    EQU   90                      DSCB MOVE LENGTH.                29494002
B12      EQU   12                      BINARY 12                        29500002
B14      EQU   14                      BINARY 14                        29510002
B15      EQU   15                      BINARY 15.                       29520002
B22      EQU   22                      BINARY 22                        29530002
B24      EQU   24                      BINARY 24                        29540002
B26      EQU   26                      BINARY 26                        29550002
B36      EQU   36                      BINARY 36                        29560002
B40      EQU   40                      BINARY 40 EQUATE.                29570002
B100     EQU   100                     BINARY 100                       29580002
B105     EQU   105                     BINARY 105                       29590002
B184     EQU   184                     BINARY 184                       29592002
B253     EQU   253                     SUBPOOL 253 CONSTANT.            29594002
RPSIDLOC EQU   62                      OFFSET TO RPS ID          XM2100 29600002
X00      EQU   X'00'                   HEX 00                           29610002
X01      EQU   X'01'                   HEX 01                           29612002
X0D      EQU   X'0D'                   HEX 0D                           29620002
X0E      EQU   X'0E'                   HEX 0E                           29630002
X10      EQU   X'10'                   HEX 10                           29632002
X12      EQU   X'12'                   HEX 12                           29640002
X14      EQU   X'14'                   HEX 14                           29650002
X18      EQU   X'18'                   HEX 18                           29652002
X20      EQU   X'20'                   HEX 20                           29660002
X42      EQU   X'42'                   HEX 42                           29662002
X7F      EQU   X'7F'                   HEX 7F                           29664002
X81      EQU   X'81'                   HEX 81                           29666002
XBF      EQU   X'BF'                   HEX BF                           29670002
XFF      EQU   X'FF'                   HEX FF                           29680002
X100     EQU   X'100'                  HEX 100                          29690002
X105     EQU   X'105'                  HEX 105                          29700002
X0100    EQU   X'0100'                 HEX 0100                         29704002
DEBAD    EQU   44                      DEB POINTER IN DCB               29720002
WASZ     EQU   128                     SIZE OF RPS WORK AREA.           29730002
AVTSV    EQU   120                     DISP TO AVT PTR IN RPSWA.        29740002
DEBAPDS  EQU   28                      APPNDG. PTR DISP. IN DEB.        29750002
FMWAL    EQU   512                     FORMAT WORKAREA LENGTH.          29752002
*                                                                       29754002
CODPERD  EQU   4                                                        29756002
CODBLANK EQU   8                                                        29758002
CODPARN  EQU   12                                                       29758402
CLC1     EQU   C'1'                                                     29758802
CLC2     EQU   C'2'                                                     29759202
CLC3     EQU   C'3'                                                     29759602
CLC4     EQU   C'4'                                                     29759702
CLC5     EQU   C'5'                                                     29759802
CLC6     EQU   C'6'                                                     29759902
CLC7     EQU   C'7'                                                     29763202
FREEMAIN EQU   10                                                       29765202
*                                                                       29765602
CC       EQU   X'40'                   COMMAND CHAIN                    29766002
SLACK    EQU   32                      MAXIMUM NUMBER OF UNUSED BYTES   29766402
*                                      ALLOWED IN A CATALOG INDEX BLOCK 29766502
SILI     EQU   X'20'                   SUPPRESS INCORRECT LENGTH        29766602
*                                                                       29769902
D01      EQU   1                                                        29772002
D12      EQU   12                                                       29772402
D16      EQU   16                                                       29772802
         TITLE 'IGG0CLCE - REGISTER EQUATE DEFINITIONS'                 29773202
*                                                                       29776702
* THE FOLLOWING ARE REGISTER EQUATES USED IN THIS PROGRAM.              29780002
*                                                                       29790002
R0       EQU   0                       REGISTER 0                       29800002
R1       EQU   1                       REGISTER 1                       29810002
R2       EQU   2                       REGISTER 2                       29820002
R3       EQU   3                       REGISTER 3                       29830002
R4       EQU   4                       REGISTER 4                       29840002
R5       EQU   5                       REGISTER 5                       29850002
R6       EQU   6                       REGISTER 6                       29860002
R7       EQU   7                       REGISTER 7                       29870002
R8       EQU   8                       REGISTER 8                       29880002
R9       EQU   9                       REGISTER 9                       29890002
R10      EQU   10                      REGISTER 10                      29900002
R11      EQU   11                      REGISTER 11                      29910002
R12      EQU   12                      REGISTER 12                      29920002
R13      EQU   13                      REGISTER 13                      29930002
R14      EQU   14                      REGISTER 14                      29940002
R15      EQU   15                      REGISTER 15                      29950002
RGA      EQU   2                       REGISTER 2                       29960002
RGB      EQU   3                       REGISTER 3                       29970002
RGC      EQU   4                       REGISTER 4                       29980002
RGD      EQU   5                       REGISTER 5                       29990002
RGE      EQU   6                       REGISTER 6                       30000002
RGF      EQU   7                       REGISTER 7                       30010002
RGG      EQU   8                       REGISTER 8                       30020002
RGH      EQU   9                       REGISTER 9                       30030002
RGBASE   EQU   4                       BASE REGISTER           @YL026UD 30032002
RGDQTY   EQU   10                      DIRECTORY QUANTITY               30040002
RGTTR    EQU   11                      RELATIVE TRACK COUNTER           30050002
RGAREA   EQU   13                      WORK AREA ADDRESS                30070002
RGRET    EQU   14                      RETURN REGISTER                  30080002
*                                                                       30082002
BALREG1  EQU   R14                                                      30084002
BALREG2  EQU   R12                                                      30086002
BASE     EQU   R4                                                       30088002
*                                                                       30088402
BALREG3  EQU   R11                                                      30088802
BALREG4  EQU   R3                                                       30089202
*                                                                       30089602
IN       EQU   R9                                                       30089702
OUT      EQU   R7                                                       30089802
LENGTH   EQU   R5                                                       30089902
NEXTTTR  EQU   R10                                                      30093202
*                                                                       30095202
RFKEY    EQU   0                  INPUT FUNCTION REQUEST KEY.           30095602
RPARM    EQU   1                  INPUT PARAMETER REGISTER.             30096002
RBASE    EQU   4                  BASE REGISTER.               @YL026UD 30096502
RCWA     EQU   6                  CATALOG WORK AREA BASE.               30096602
RGAREA2  EQU   8                  SECONDARY DCB BASE REGISTER.          30099902
RGAREA3  EQU   9                  TERTIARY DCB BASE REGISTER.           30102002
RFKEYA   EQU   10                 POSSIBLE TTR KEY FROM EXTEND.         30102402
RUCB     EQU   11                 UCB BASE REGISTER.                    30102802
RBR      EQU   15                 RETURN CODE REGISTER.                 30103202
*                                                                       30103302
         SPACE                                                          30103402
*                                                                       30106702
**********************************************************************  30110002
*                                                                       30120002
* END OF THE IGG0CLCE CSECT.                                            30130002
*                                                                       30140002
FMTSIZE  EQU   *                       EQUATE TO LAST BYTE OF CSECT.    30150002
MAXSIZE  EQU   IGG0CLCE+X'1000'        MAXIMUM ALLOWABLE LENGTH.        30160002
AVAILABL EQU   MAXSIZE-FMTSIZE         FREE SPACE REMAINING.            30170002
*                                                                       30180002
**********************************************************************  30190002
*                                                                       30200002
         TITLE 'IGG0CLCE - CATALOG WORKAREA DSECT'                      30210002
*                                                                       30212002
*      DSECTS                                                           30214002
*                                                                       30216002
         WORKAREA LIST=YES                                              30218037
         TITLE 'IGG0CLCE - ENVIRONMENT RECORD DSECT'                    30218402
EREC     DSECT                         ENVIRONMENT RECORD               30218802
ERCTR    DS    F                       RESERVED                         30219202
ERES1    DS    1F                      RESERVED                         30219602
ERTIME   DS    2F                      TIME AND DATE                    30219702
ERCAMLST DS    1F                      CAMLST OPTION BYTES              30219802
ERMODMAP DS    XL1                     MODULE MAP                       30219902
ERFLG12  DS    XL2                     FLAG1 AND FLAG2                  30223202
ERFLAG3  DS    XL1                     FLAG3                            30225202
ERERRCOD DS    XL2                     CATALOG AND LOCATE ERROR CODES   30225602
ERNAMTTR DS    XL14                    CURRENT LEVEL NAME               30226002
EREGSAV  DS    15F                     REGS 1 THROUGH 14                30226402
ERWA1    DS    XL28                    TTRS IN WORKAREA                 30226502
         ORG   ERWA1                   OVERLAY 12 BYTES 'ERWA1' SA52063 30226602
ERKEY    DS    CL8                     KEY FIELD                SA52063 30227702
EROCTR   DS    CL4                     OLD COUNT                SA52063 30228102
         ORG                                                            30228502
ERINPUT  DS    XL18                    FIRST 18 BYTES OF 'INPUT'        30228602
EROUTPUT DS    XL18                    FIRST 18 BYTES OF 'OUTPUT'       30228702
EROPTNCC DS    XL8                     'OPTNCCW'--INDICATES LAST I/O    30228802
ERIOB    DS    XL40                    IOB                              30231602
ERNAME   DS    CL44                    FULL GIVEN NAME                  30233602
ERBUFF   EQU   ERWA1                   READ BUFFER                      30234002
         TITLE 'IGG0CLCE - FORMAT WORKAREA DSECT'                       30234102
*                                                                       30234402
* THIS DSECT DEFINES THE WORK AREA PASSED TO THE FORMAT ROUTINE.        30237202
*                                                                       30240002
         SPACE                                                          30250002
WKAREA   DSECT                                                          30260002
FSVAREA  DS    0F                      REG SAVE AREA.                   30270002
SVBLKS   DS    F                       NUMBER OF BLOCKS FOR DIRECTORY   30280002
SVDCB    DS    F                       DCB ADDRESS                      30290002
SVBLPTK  DS    F                       NUMBER OF BLOCKS PER TRACK       30300002
SVBYTES  DS    F                       NUMBER OF BYTES IN WORK AREA     30310002
SVADDR   DS    F                       ADDRESS OF WORK AREA             30320002
SVCNT    DS    F                       DATA MANAGEMENT COUNT            30330002
SVTT     DS    F                       STARTING RELATIVE TRACK ADDRESS  30340002
CHPGA    DS    0D                      WRITE CHANNEL PROGRAM            30350002
CHPGA1   DS    D                       CCW 1.                           30360002
CHPGA2   DS    D                       CCW 2.                           30370002
CHPGA3   DS    D                       CCW 3.                           30380002
CHPGA4   DS    D                       CCW 4.                           30390002
CHPGA5   DS    D                       CCW 5.                           30400002
CHPGA6   DS    D                       CCW 6.                           30410002
CHPGA7   DS    D                       CCW 7.                           30420002
CHPGA8   DS    D                       CCW 8.                           30430002
CHPGA9   DS    D                       CCW 9.                           30440002
CHPGA10  DS    D                       CCW 10.                          30450002
CHPGA11  DS    D                       CCW 11.                          30460002
CHPGA12  DS    D                       CCW 12.                          30470002
CHPGA13  DS    D                       CCW 13.                          30480002
CHPGA14  DS    D                       CCW 14.                          30490002
CHPGA15  DS    D                       CCW 15.                          30500002
CHPGA16  DS    D                       CCW 16.                          30510002
CHPGA17  DS    D                       CCW 17.                          30520002
CHPGB    DS    0D                      READ CHANNEL PROGRAM             30530002
CHPGB1   DS    D                       CCW 1.                           30540002
CHPGB2   DS    D                       CCW 2.                           30550002
CHPGB3   DS    D                       CCW 3.                           30560002
CHPGB4   DS    D                       CCW 4.                           30570002
CHPGB5   DS    D                       CCW 5.                           30580002
CHPGB6   DS    D                       CCW 6.                           30590002
CHPGB7   DS    D                       CCW 7.                           30600002
CHPGB8   DS    D                       CCW 8.                           30610002
CHPGB9   DS    D                       CCW 9.                           30620002
CHPGB10  DS    D                       CCW 10.                          30630002
CHPGB11  DS    D                       CCW 11.                          30640002
CHPGB12  DS    D                       CCW 12.                          30650002
CHPGB13  DS    D                       CCW 13.                          30660002
CHPGB14  DS    D                       CCW 14.                          30670002
CHPGB15  DS    D                       CCW 15.                          30680002
CHPGB16  DS    D                       CCW 16.                          30690002
CHPGB17  DS    D                       CCW 17.                          30700002
         EJECT                                                          30710002
         ORG   CHPGA6                  OVERLAY CHPGA AND B      SA50973 30720002
BLOCK    DS    0CL256                  BUFFER                   SA50973 30730002
         DS    XL2                     FILLER, 'BYTES USED'     SA50973 30740002
         DS    XL12                    FILLER, FRST PART 'VICE' SA50973 30750002
UPLSTBLK DS    XL2                     FRST 2 BYTES 'VCLSTBLK'  SA50973 30760002
         ORG                                                            30770002
COUNT2   DS    0D                      DIRECTORY CONTROL BLOCK          30780002
CTKEY    DS    CL8                     KEY OF DIR BLOCK.                30790002
CTCOUNT  DS    CL2                     COUNT OF DIRECTORY BLOCK.        30800002
CTDIR    DS    CL7                     FILLER.                          30810002
CTLBK    DS    CL1                     LOW ORDER OF NAME.               30820002
         DS    CL2                     FILLER.                          30830002
CTTTRC   DS    CL2                     TTRC                             30840002
CTHITT   DS    CL2                     HI TT.                           30850002
CTHIR    DS    CL1                     HI R.                            30860002
         DS    CL3                     FILLER.                          30870002
CTNABTR  DS    CL1                     NEXT AVAILABLE BLOCK TTR.        30880002
         DS    CL2                     FILLER.                          30890002
CTNBLB   DS    CL1                     BYTES IN LAST BLOCK.             30900002
CTHIENT  DS    CL8                     HI ENTRY.                        30910002
         DS    CL72                    FILLER.                          30920002
HICOUNT  DS    D                       LAST RELATIVE TRACK              30930002
FECB     DS    F                       EVENT CONTROL BLOCK              30940002
FIOB     DS    8F                      INPUT OUTPUT BLOCK               30950002
MBBCCHHR DS    CL8                     SEEK ADDRESS                     30960002
BPAMDIR  DS    0X                      BDAM DIRECTORY                   30970002
BPDCNT   DS    CL8                     BPAM DIR COUNT.                  30980002
BPDHIK   DS    CL9                     BPAM DIR HI KEY.                 30990002
BPDBPB   DS    CL1                     BPAM DIR BYTES PER BLOCK.        31000002
BPDHIE   DS    CL8                     BPAM DIR HI ENTRY.               31010002
         ORG   COUNT2-148              ORG EXTEND SAVE AREA.            31020002
EXTSAVE  DS    CL8                     FIRST EXTENT OF DEB              31030002
*                                                                       31040002
*      FORMAT 1 DSCB                                                    31042002
*                                                                       31044002
D1SDSNAM DS    CL44                    DATA SET NAME                    31046002
D1SFMTID DS    CL1                     FORMAT IDENTIFIER                31048002
D1SDSSN  DS    CL6                     DATA SET SERIAL NUMBER           31048402
D1SVOLSQ DS    XL2                     VOLUME SEQUENCE NUMBER           31048802
D1SCREDT DS    XL3                     CREATION DATE                    31049202
D1SEXPDT DS    XL3                     EXPIRATION DATE                  31049602
D1SNOEPV DS    XL1                     NUMBER OF EXTENTS ON VOLUME      31049702
D1SNOBDB DS    XL1                     NUMBER OF BYTES USED IN LAST     31049802
*                                         DIRECTORY BLOCK               31049902
         DS    XL1                     RESERVED                         31053202
D1SSYSCD DS    CL13                    SYSTEM CODE                      31055202
         DS    XL7                     RESERVED                         31057202
D1SDSORG DS    XL2                     DATA SET ORGANIZATION            31059202
D1SRECFM DS    XL1                     RECORD FORMAT                    31059602
D1SOPTCD DS    XL1                     OPTION CODE                      31059702
D1SBLKL  DS    XL2                     BLOCK LENGTH                     31059802
D1SLRECL DS    XL2                     RECORD LENGTH                    31059902
D1SKEYL  DS    XL1                     KEY LENGTH                       31063202
D1SRKP   DS    XL2                     RELATIVE KEY POSITION            31065202
D1SDSIND DS    XL1                     DATA SET INDICATORS              31067202
D1SSCALO DS    XL4                     SECONDARY ALLOCATION             31069202
D1SLSTAR DS    XL3                     LAST USED TRACK AND BLOCK        31069602
D1STRBAL DS    XL2                     BYTES REMAINING ON LAST TRACK    31069802
         DS    XL2                     RESERVED                         31069902
D1SEXT1  DS    XL10                    FIRST EXTENT DESCRIPTION         31073202
*        FIRST BYTE                    EXTENT TYPE INDICATOR            31075202
*        SECOND BYTE                   EXTENT SEQUENCE NUMBER           31077202
*        THIRD - SIXTH BYTES           LOWER LIMIT                      31079202
*        SEVENTH - TENTH BYTES         UPPER LIMIT                      31079602
D1SEXT2  DS    XL10                    SECOND EXTENT DESCRIPTION        31079702
D1SEXT3  DS    XL10                    THIRD EXTENT DESCRIPTION         31079802
D1SPTRDS DS    XL5                     POSSIBLE POINTER TO A FORMAT     31079902
*                                         2 OR 3 DSCB                   31083202
D1SEND   EQU   *                                                        31085202
         TITLE 'IGG0CLCE - COMMUNICATION VECTOR TABLE DSECT'            31090002
*                                                                       31340002
*COMMUNICATION VECTOR TABLE DEFINITION                                  31400002
*                                                                       31410002
         TITLE 'IGG0CLCE - DCB/DEB AREA DSECT'                          31440002
*                                                                       31450002
* THIS DSECT DESCRIBES THE DCB/DEB AREA.                                31460002
*                                                                       31470002
AREADCB  DSECT                                                          31480002
         DS    6F                 DCB AREA FILLER.                      31490002
DAREA    DS    0F                 WORK AREA REFERENCE.                  31500002
NUMBYTES DS    F                  NUMBER OF BYTES.                      31510002
DSCBTRK  DS    F                  CC HH OF SYSCTLG DSCB.                31520002
CATWKAP  DS    1F                 CATALOG WORKAREA ADDRESS     @YL026UD 31530002
BLDLP    DS    1F                 BLDL    WORKAREA ADDRESS     @YL026UD 31540002
DEB      DS    0F                 START OF THE DEB.                     31550002
DEBTCBAD DS    F                  TCB ADDRESS.                          31560002
DEBAMIND DS    0X                 AM INDICATOR.                         31570002
DEBDEBAD DS    F                  NEXT DEB ADDRESS.                     31580002
         DS    2F                 IRB AND SYS PURGE CHAIN.              31590002
DEBNMEXT DS    0X                 NO OF EXTENTS.                        31600002
         DS    2F                 USER PURGE AND PURGE ECB ADDR.        31610002
DEBDCBAD DS    F                  DCB ADDRESS.                          31620002
DEBAPPAD DS    F                  APPENDAGE VECTOR TABLE ADDRESS.       31630002
DEBDVMOD DS    0X                 DEBICE MODIFIER MASK.                 31640002
DEBUCBAD DS    F                  UCB ADDRESS.                          31650002
DEBBINUM DS    H                  BIN NUMBER.                           31660002
DEBSTRCH DS    0CL8               START/END CCHH.                       31670002
DEBSTRCC DS    H                  START CYLINDER.                       31680002
DEBSTRHH DS    H                  START HEAD.                           31690002
DEBENDCC DS    H                  END CYLINDER.                         31700002
DEBENDHH DS    H                  END HEAD.                             31710002
DEBNMTRK DS    H                  NUMBER OF TRACKS.                     31720002
EXTL     EQU   16                 LENGTH OF AN EXTENT ENTRY.            31730002
MAXEL    EQU   256                MAXIMUM EXTENT AREA LENGTH.           31740002
DEBEND   EQU   *                                                        31750002
DEBL     EQU   DEBEND-DEB         DEB LENGTH.                           31760002
         EJECT                                                          31770002
*                                                                       31780002
* FORMAT 4 DSCB DEFINITION.                                             31790002
*                                                                       31800002
         SPACE                                                          31810002
         IECSDSL1 (4)                                                   31820002
         ORG   IECSDSF4+48        ORG TO CCW AREA.                      31830002
CHPG     DS    2D                 CHANNEL PROGRAM RELOCATE AREA.        31840002
CHPGAA   DS    2D                 CHANNEL PROGRAM RELOCATE AREA.        31850002
CHPGBB   DS    2D                 CHANNEL PROGRAM RELOCATE AREA         31860002
CHPGCC   DS    2D                 CHANNEL PROGRAM RELOCATE AREA         31870002
CHPGDD   DS    2D                 CHANNEL PROGRAM RELOCATE AREA         31880002
AECB     DS    F                  EVENT CONTROL BLOCK.                  31890002
AIOB     DS    8F                 I/O CONTROL BLOCK.                    31900002
M2B2C2HR DS    CL8                SEEK ADDRESS IN THE IOB.              31910002
CCHHR    EQU   M2B2C2HR+3         CHANNEL-HEAD ADDRESS.                 31920002
CCHHRL   EQU   5                  LENGTH OF CCHHR.                      31930002
DSCBK    DS    CL44               DATA SET NAME AREA.                   31940002
DSCBK4   EQU   DSCBK+4            FOUR BYTES OFF DSCBK                  31950002
DSCBD    EQU   DSCBK+44           FOURTY FOUR BYTES OFF DSCBK           31960002
*                                                                       31970002
* FORMAT 1 DSCB DEFINITION.                                             31980002
*                                                                       31990002
         SPACE                                                          32000002
         ORG   DSCBK              ORG COUNT AREA.                       32010002
         IECSDSL1 (1)                                                   32020002
COUNT    DS    CL8                SYSCTLG DSCB DISK ADDR/               32030002
COUNTA   EQU   COUNT+4                                                  32040002
*                                 WORKAREA FOR CONVERT ROUTINE.         32050002
REGSAVE  DS    1F                 REGISTER SAVE AREA                    32060002
REGS2    DS    1F                 REGISTER SAVE AREA.                   32070002
REGS3    DS    1F                 REGISTER SAVE AREA                    32080002
REGS4    DS    1F                 REGISTER SAVE AREA.                   32090002
REGS5    DS    1F                 REGISTER SAVE AREA.                   32100002
REGS6    DS    1F                 REGISTER SAVE AREA.                   32110002
NUMUCB   DS    H                  NUMBER OF UCB'S.                      32120002
SWL      EQU   6                  LENGTH OF SWITCH AREA.                32130002
FMTSW    DS    X                  COUNT OF BLOCK TRACK.                 32140002
EXTDSW   DS    X                  EXTEND COUNTER.                       32150002
EXTDTT   DS    F                  RELATIVE TRACK ADDRESS.               32160002
AREAEND2 DS    0D                 USED TO DETERMINE NUMBER BYTES.       32170002
EXTDRGSV DS    2F                 REGISTER SAVE AREA.                   32180002
*                                                                       32190002
* EXTEND WORK AREA DEFINITION.                                          32200002
*                                                                       32210002
         ORG   DAREA              ORG TO EXTEND AREA.                   32220002
EXTDAREA DS    0F                                                       32230002
         IECDSECT                                                       32240002
         TITLE 'IGG0CLCE - UNIT CONTROL BLOCK DSECT'                    32250002
*                                                                       32260002
* THIS IS THE UCB DEFINITION DSECT.                                     32270002
*                                                                       32280002
         SPACE                                                          32290002
UCB      DSECT                                                          32300002
         IEFUCBOB                                                       32310002
         END   IGG0CLCE                                                 32320002
./  ADD  SSI=72640531,NAME=IGG0CLCF
         TITLE 'IGG0CLCF -  OPEN, EXTEND, AND FORMAT'                   00050008
*********************************************************************   00100008
*                                                                       00150000
*01*  MODULE-NAME = IGG0CLCF                                   @YL026UD 00200000
*01*  STATUS = 00                                                       00250000
*01*  CHANGE-ACTIVITY = NEW FOR RELEASE 21                              00300000
*                       (AS IGC0002H,IGG0CLF2)                          00350008
*                       RENAMED AND CHANGED FOR VS2 RELEASE 2  @YL026UD 00400000
*                      SPLIT FROM IGG0CLCE FOR APAR OZ00006             00410000
*        VS2 RELEASE 037 CHANGES                                        00416037
* EXTENDED MVS CVOL SUPPORT                                    @Z40CSRC 00420008
*ADD 'RENT' TO LINKEDIT PARMS                                  @OZ07695 00423008
*D195500-196500,D197500-199000,A197500,C501000,A729451         @OZ15077 00426008
*A162510,C183100,A190010-190040                                @OZ17531 00429008
*A191605,A708000                                               @OZ25613 00432008
*A191641,A191683                                               @OZ26358 00435008
*********************************************************************** 00438008
*01*  DESCRIPTIVE-NAME =  OPEN, EXTEND, AND FORMAT                      00450008
*01* FUNCTION=   IGC0002H -                                    @YL026UD 01100000
*                1.  OPEN SYSCTLG DATA SET.                    @YL026UD 01150000
*                2.  STEPS TO NEXT EXTENT OF CATALOG DATA SET. @YL026UD 01200000
*                3.  EXTEND SYSCTLG DATA SET.                  @Z40CSRC 01210008
*                IGG0CLF2 -                                    @YL026UD 01250000
*                1.  FORMATS ALL OR PART OF A SYSCTLG DATA SET @YL026UD 01300000
*                    (256 BYTE RECORDS WITH 8 BYTE BINARY ZERO @YL026UD 01350000
*                    KEYS ARE WRITTEN.  THE FIRST RECORD WILL  @YL026UD 01400000
*                    CONTAIN AN INITIALIZED VOLUME INDEX BLOCK)@YL026UD 01450000
*     FOR AN OVERVIEW OF THIS MODULE AND ITS RELATIONSHIP WITH THE      01500000
*     OTHER CATALOG MANAGEMENT MODULES, REFER TO THE CVOL PROCESSOR     01550008
*     PLM, SY35-0011.                                          @Z40CSRC 01600008
*01*  NOTES = LABELS REFERED TO IN COMMENTARY ARE ENCLOSED IN SINGLE    01650000
*     QUOTES. EQUATED CONSTANTS ARE PREFIXED WITH 'D' OR 'X' WHEN THEY  01700000
*     ARE DECIMAL OR HEXADECIMAL RESPECTIVELY; FOR EXAMPLE, D12 EQU 12, 01750000
*     AND X12 EQU X'12'. ERROR CODES ARE SET USING 'ERRORXX' AT         01800000
*     CORRESPONDING LABELS, 'ERRXX'. BRANCHES ORIGINATE FROM LABELS     01850000
*     'IGG0CLCX'. FLAGS ARE LABELED 'FLAGX'.  IO IS DONE FROM EITHER A  01900000
*     SUBROUTINE NAMED 'CALLBLDL' OR A SUBROUTINE NAMED 'IO'. ADDRESS   01950000
*     CONVERSION IS ACCOMPLISHED IN SUBROUTINES NAMED 'TOABSL' AND      02000000
*     'TORLTV'. THESE CONVENTIONS ARE FOLLOWED IN EVERY MODULE WHERE    02050000
*     THE EVENT EXISTS.                                                 02100000
*02*    DEPENDENCIES = OPERATION OF THIS MODULE DEPENDS ON THE          02150000
*       COLLATING SEQUENCE OF THE EXTERNAL CHARACTER SET. REDEFINITION  02200000
*       OF THE CHARACTER CONSTANTS BY REASSEMBLY WILL RESULT IN A       02250000
*       CORRECT MODULE. THE CONSTANTS IN QUESTION ARE PREFIXED WITH     02300000
*       'CCD', FOR 'CHARACTER CODE DEPENDENT'.                          02350000
*02*    RESTRICTIONS = ALL DIRECT ACCESS STORAGE DEVICES EXCEPT 2321    02600000
*       DATA CELL ARE SUPPORTED BY CATALOG MANAGEMENT.                  02650000
*02*    REGISTER-CONVENTIONS = REGISTERS ARE LABELED 'R0,R1,...,R15'.   02700000
*       REQUIRED ADDITIONAL LABELS ARE EQUATED TO THESE. REGISTERS      02750000
*       COMMON TO ALL MODULES OF CATALOG MANAGEMENT ARE                 02800000
*       R4  BASE REGISTER FOR THE MODULE.                               02850000
*       R6  BASE REGISTER FOR THE WORKAREA DSECT.                       02900000
*       R8  BASE REGISTER FOR THE CAMLSTD DSECT.                        02950000
*02*    PATCH-LABEL = 'FIXAREA'                                @YL026UD 03000000
*01*  MODULE-TYPE = MODULE                                              03050000
*02*    PROCESSOR = ASSEMBLER                                           03100000
*02*    MODULE-SIZE = SEE LENGTH OF IGG0CLCF IN                         03150008
*                     EXTERNAL SYMBOL DICTIONARY ABOVE.                 03160008
*02*    ATTRIBUTES = REENTERABLE, READ ONLY, ENABLED, SUPERVISORY MODE  03200000
*01*  ENTRY = IGC0002H                                                  03250008
*02*    PURPOSE = TO OPEN OR EXTEND AN OS CVOL                 @Z40CSRC 03600008
*02*    LINKAGE = BALR 14,15                                   @Z40CSRC 03750008
*02*  INPUT =                                                  @Z40CSRC 03800008
*       (REQUEST TO OPEN CATALOG)                              @YL026UD 05150000
*       .  R0 CONTAINS ZERO                                    @YL026UD 05200000
*       .  R1 CONTAINS UCB ADDRESS OF THE VOLUME WHOSE         @YL026UD 05250000
*          CATALOG IS TO BE OPENED                             @YL026UD 05300000
*       .  R8 CONTAINS CAMLST ADDRESS                          @Z40CSRC 05310008
*       .  R15 CONTAINS THE ADDRESS OF A WORKAREA IN WHICH THE @YL026UD 05350000
*          DCB/DEB CHAIN IS TO BE BUILT.  THIS WORKAREA ALSO   @YL026UD 05400000
*          CONTAINS ENOUGH SPACE TO READ IN A DSCB.  IF OPEN   @YL026UD 05450000
*          IS SUCCESSFUL, CORE BEYOND THE DEB IS FREED.        @YL026UD 05500000
*       (REQUEST TO LOCATE NEXT EXISTING EXTENT)               @YL026UD 05550000
*       .  R0 CONTAINS THE DCB ADDRESS                         @YL026UD 05600000
*       .  R8 CONTAINS ADDRESS OF CAMLST                       @Z40CSRC 05602008
*       (REQUEST TO EXTEND SYSCTLG).                           @Z40CSRC 05610008
*       .  R0 CONTAINS ADDRESS OF DCB AREA.                    @Z40CSRC 05620008
*       .  R8 CONTAINS ADDRESS OF CAMLST.                      @Z40CSRC 05622008
*       .  THE REQUEST IS FOR A NEW EXTENT IF THE 'M'+1        @Z40CSRC 05642008
*          OF THE MBBCCHHR IN THE IOB OF THE CATALOG           @Z40CSRC 05644008
*          WORK AREA IS EQUAL TO THE 'M' IN THE NUMBER         @Z40CSRC 05646008
*          OF EXTENTS IN THE DEB.                              @Z40CSRC 05648008
*       (IF CONTROL HAS RETURNED VIA XCTL FROM EXTEND RTNS)    @Z40CSRC 05648408
*       .  R4 - CONTAINS ADDRESS OF EXTEND WORK AREA.          @Z40CSRC 05649208
*       .  R6 - CONTAINS ADDRESS OF SVRB                       @Z40CSRC 05649308
*       .  R7 - CONTAINS ADDRESS OF DCB.                       @Z40CSRC 05649808
*       .  R8 - CONTAINS ZERO.                                 @Z40CSRC 05649908
*       .  R9 - CONTAINS THE DCB ADDRESS FOR CATALOG.          @Z40CSRC 05650008
*       .  R10 - CONTAINS UCB ADDR FOR CATLG VOLUME.           @Z40CSRC 05680008
*        (GENERAL)                                             @Z40CSRC 06110008
*       .  THE ADDRESS OF THE CATALOG WORK AREA IS             @Z40CSRC 06120008
*          LOCATED AT OFFSET 32 OF THE DCB AREA.               @Z40CSRC 06130008
*02*    OUTPUT =                                                        06150000
*          ADDRESS OF THE DCB IS RETURNED IN R1.                        06550008
*          R15 - CONTAINS RETURN CODE.                         @Z40CSRC 06620008
*02*    EXIT-NORMAL = BR 14 WITH R15 = 0                       @Z40CSRC 06650008
*02*    EXIT-ERROR = BR 14 WITH R15 SET TO ERROR CODE:         @Z40CSRC 06700008
*        04 - SYSCTLG NOT FOUND OR INVALID.                    @Z40CSRC 06710008
*        08 - NO SECONDARY SPACE ALLOCATED.                    @Z40CSRC 06720008
*        12 - PERMANENT I/O ERROR.                             @Z40CSRC 06730008
*01*  EXTERNAL-REFERENCES = AS FOLLOWS.                                 06750000
*02*    ROUTINES = IECPRLTV, IECPCNVT, IGG0553A (EXTEND)                06800008
*02*    DATA-SETS = SYSCTLG                                             06850000
*02*    DATA-AREA = ALL DATA AREAS ARE DESCRIBED BY DSECTS AT THE END   06900000
*       OF THE MODULE LISTING.                                          06950000
*01*  TABLES = NONE                                                     07000000
*01*  MACROS = EXCP, WAIT, CVT, GETMAIN, FREEMAIN, DEQ                  07050000
*                                                                       07100000
*********************************************************************   07150008
         TITLE 'IGG0CLCF - (IGC0002H) CATALOG OPEN/EXTEND MODULE'       07200008
IGG0CLCF CSECT                                                          07210000
          USING CAMLSTD,R8        ESTABL BASE FOR CAMLST                07220000
         USING ENTRY,R9           ESTABL BASE FOR ENTRY                 07230000
         USING WORKAREA,R6        ESTABL BASE FOR WORKAREA              07240000
         BALR  BASE,0             SET BASE FOR MODULE                   07242000
         USING *,BASE             ESTABL BASE FOR MODULE                07244000
         B    MODLABEL                                                  07245200
         DC    C'IGG0CLCF'        MODULE IDENTIFIER                     07246000
         DC    C'&SYSDATE'        DATE OF ASSEMBLY             @Z40CSRC 07246408
MODLABEL EQU   *                                                        07248000
*********************************************************************** 07250000
*                                                                     * 07300000
*     IGC0002H - CATALOG OPEN MODULE                                  * 07350000
*                                                                     * 07400000
*********************************************************************** 07450000
*                                                              @YL026UD 07500000
         ENTRY IGC0002H                                        @YL026UD 07550000
*                                                                       07600000
IGC0002H EQU   *                                               @YL026UD 07650000
*                                                                       07700000
         LR    R2,BASE            SAVE CALLER'S BASE REGISTER  @YL026UD 07750000
         BALR  BASE,0             SET BASE FOR MODULE          @YL026UD 07800000
         USING *,BASE             ESTABL BASE FOR MODULE       @YL026UD 07850000
*                                                              @YL026UD 07900000
         LTR   R8,R8              TEST RETURNING FROM EXTEND   @Z40CSRC 07950008
         BZ    EXTENDB            YES, GO CHK SUCCESS          @Z40CSRC 08000008
         LTR   RFKEY,RFKEY        TEST FOR EXTEND REQUEST      @YL026UD 08200000
         BP    EXTEND             BRANCH FOR EXTEND REQUEST    @YL026UD 08250000
*                                                              @YL026UD 08300000
*      OPEN REQUEST                                            @YL026UD 08350000
*                                                              @YL026UD 08400000
         USING AREADCB,R15        SET DCB/DEB ADDRESSIBILITY   @YL026UD 08450000
         LR    R0,R2              SAVE CALLER'S BASE REGISTER  @YL026UD 08500000
         L     R2,BLDLP           OBTAIN 'BLDLAREA' ADDRESS    @YL026UD 08550000
         DROP  R15                                             @YL026UD 08600000
         STM   R3,R14,0(R2)       SAVE REGISTERS               @YL026UD 08650000
         ST    R0,4(R2)           SAVE CALLER'S BASE REG       @YL026UD 08700000
*                                                                       08750000
         L     RCVT,CVTPTR        PICK UP THE CVT POINTER.              08800000
         LR    RGAREA,R15         LOAD AREA ADDRESS.                    08850000
         USING CVT,RCVT           SET CVT ADDRESSABILITY.               08900000
         USING AREADCB,RGAREA     SET DCB/DEB ADDRESSABILITY.  @YL026UD 08950000
         USING UCB,RUCB           SET UCB ADDRESSABILITY.               09000000
         LR    RUCB,RPARM         SET UP UCB BASE REGISTER.             09050000
         XC    FMTSW(SWL),FMTSW   CLEAR ALL SWITCHES.                   09100000
         EJECT                                                          09150000
*                                                                       09200000
*********************************************************************** 09250000
*                                                                       09300000
* THE FOLLOWING CODE FROM THE LABEL BLDEB TO YESFMT INITIALIZES A       09350000
* DCB AND DEB IN THE WORK AREA PROVIDED.                                09400000
*                                                                       09450000
*********************************************************************** 09500000
*                                                                       09550000
*                                                                       09600000
*      CLEAR DEB AND SET UCB ADDRESS                                    09650000
*                                                                       09700000
RVTTR    EQU   0                  REG 0 HOLDS VTOC TTR                  09750000
RDBSET   EQU   6                  REG 6 USED TO SET UP THE DEB.         09800000
BLDEB    EQU   *                                                        09850000
         XC    DEB(DEBL),DEB      CLEAR THE DEB AREA.                   09900000
         ST    RUCB,DEBUCBAD      STORE UCB ADDRESS IN THE DEB.         09950000
         L     RVTTR,SRTEFSCT     GET THE VTOC TTR.                     10000000
*                                                                       10050000
*      INITIALIZE APPENDAGE VECTOR TABLE                                10100000
*                                                                       10150000
         MVC   DEBAPPAD,CVTXAPG   MOVE APP VECTOR TABLE ADDRESS.        10200000
         MVI   DEBAPPAD,FOUR      SET EXTENT CLASS.                     10250000
*                                                                       10300000
*      SET DCBDEBAD                                                     10350000
*                                                                       10400000
         LA    RDBSET,DEBDEBAD    USE AS DCB.                           10450000
         S     RDBSET,FDEBAD      MINUS DEB ID COMPL & DISPL.           10500000
         ST    RDBSET,DEBDCBAD    ACTUAL DCB ADDRESS.                   10550000
         MVI   DEBDVMOD,X10       FILE MASK, PERMIT SEEK HH.            10600000
         MVC   DEBENDCC(L'HICCHHNT),HICCHHNT SET HI UPPER EXTENT.       10650000
         MVI   DEBNMEXT,X01       NUMBER OF EXTENTS.                    10700000
*                                                                       10750000
*      CONVERT RELATIVE TO ACTUAL ADDRESSES                             10800000
*                                                                       10850000
RDEBP    EQU   1                  DEB POINTER FOR INPUT TO CNVT.        10900000
RRES     EQU   2                  RESULT RETURN AREA POINTER.           10950000
         IC    RVTTR,ZEROA        SET CONCAT NO. TO ZERO.               11000000
         L     RBR,CVTPCNVT       ENTRY OF CNVT RTN.                    11050000
         LA    RDEBP,DEB          GET DEB ADDRESS.                      11100000
         ST    RDEBP,DEBDEBAD     DEB POINTER.                          11150000
         LA    RRES,M2B2C2HR      CONVERTED RESULT AREA.                11200000
         LR    RGAREA2,RGAREA     SAVE AREA ADDR.                       11250000
         STM   R9,R13,DSCBK       SAVE VOLITILE REGISTERS.              11300000
         BALR  RGRET,RBR          GO TO THE CONVERT ROUTINE.            11350000
         LM    R9,R13,DSCBK-AREADCB(R8) RESTORE VOLATILE REGS. @YL026UD 11400000
         DROP  RCVT                                                     11450000
         DROP  RUCB                                                     11500000
         MVI   DS1FMTID,X00       ZERO THE FORMAT ID FIELD.             11550000
*                                                                       11600000
*      CONSTRUCT AN IOB AND ECB                                         11650000
*                                                                       11700000
RECBA    EQU   0                  REGS USED TO SET UP ECB/IOB.          11750000
RECBB    EQU   2                  REGS USED TO SET UP ECB/IOB.          11800000
RECBC    EQU   3                  REGS USED TO SET UP ECB/IOB.          11850000
         SR    RECBA,RECBA        ECB.                                  11900000
         LA    RECBB,AECB         ECB POINTER.                          11950000
         STM   RECBA,RECBB,AECB   STORE ECB POINTER.           @YL026UD 12000000
         LA    RECBA,CHPG         CHANNEL PROGRAM POINTER.     @YL026UD 12050000
         SR    RECBC,RECBC        BLOCK INCR FLD.              @YL026UD 12100000
         LR    R1,RDBSET          DCB POINTER FOR IOB          @YL026UD 12150000
         STM   RECBA,RECBC,AIOB+16  STORE ECB AND IOB.         @YL026UD 12200000
         MVI   AIOB,X42           SET UNRELATED REQUEST.                12250000
*                                                                       12300000
*      RELOCATE CHANNEL PROGRAM FOR DSCB READ                           12350000
*                                                                       12400000
RCCWA    EQU   0                  REGS USED TO SET CCW ADDRESSES.       12450000
RCCWB    EQU   2                  REGS USED TO SET CCW ADDRESSES.       12500000
RCCWC    EQU   3                  REGS USED TO SET CCW ADDRESSES.       12550000
         LM    RCCWA,RCCWC,CCW1   GET THE CCW CONSTANTS.       @YL026UD 12600000
         AR    RCCWA,RGAREA       MODIFY THE ADDRESSES                  12650000
         AR    RCCWB,RGAREA       IN THE PATTERN CCWS.                  12700000
         STM   RCCWA,RCCWC,CHPG   STORE THE CHANNEL PROGRAM    @YL026UD 12750000
         LM    RCCWA,RCCWC,CCW3   GET MORE CCW CONSTANTS       @YL026UD 12800000
         AR    RCCWA,RGAREA       MODIFY THE ADDRESSES         @YL026UD 12850000
         AR    RCCWB,RGAREA       IN THE PATTERN CCWS.         @YL026UD 12900000
         STM   RCCWA,RCCWC,CHPGAA STORE THE CHANNEL PROGRAM    @YL026UD 12950000
         LM    RCCWA,RCCWC,CCW5   GET MORE CCW CONSTANTS       @YL026UD 13000000
         AR    RCCWA,RGAREA       MODIFY THE ADDRESSES         @YL026UD 13050000
*                                 IN THE PATTERN CCWS.         @YL026UD 13100000
         STM   RCCWA,RCCWC,CHPGBB STORE THE CHANNEL PROGRAM.   @YL026UD 13150000
         LM    RCCWA,RCCWC,CCW7   GET MORE CCW CONSTANTS.      @YL026UD 13200000
         AR    RCCWA,RGAREA       MODIFY THE ADDRESSES                  13250000
         AR    RCCWB,RGAREA       IN THE PATTERN CCWS.                  13300000
         STM   RCCWA,RCCWC,CHPGCC STORE THE CHANNEL PROGRAM    @YL026UD 13350000
         LM    RCCWA,RCCWC,CCW9   GET MORE CCW CONSTANTS       @YL026UD 13400000
         AR    RCCWA,RGAREA       MODIFY THE ADDRESSES         @YL026UD 13450000
         AR    RCCWB,RGAREA       IN THE PATTERN CCWS.         @YL026UD 13500000
         STM   RCCWA,RCCWC,CHPGDD STORE REMAINING CHAN PROGS.  @YL026UD 13550000
*                                                                       13600000
*      SET SEARCH ARGUMENT AND READ DSCB                                13650000
*                                                                       13700000
         MVC   DSCBK(L'SYSCTLG),SYSCTLG  SET DS NAME.                   13750000
         MVC   DSCBK+8(L'DSCBK-L'SYSCTLG),DSCBK+7  BLANK REMAINDER      13800000
*                                                                       13850000
*      IO:  EXCP, WAIT, AND CHECK                                       13900000
*                                                                       13950000
         BAL   RGRET,IO3          GO TO THE IO ROUTINE.                 14000000
         TM    DS1FMTID,XFF       CHECK FORMAT ID FIELD.                14050000
         BZ    ERROR4             SYSCTLG DATA SET NOT FOUND.           14100000
         MVC   DSCBTRK,COUNT      SAVE CCHH OF SYSCTLG DSCB.            14150000
*                                                                       14160008
*      CHECK FOR RACF-INDICATED SYSCTLG                        @Z40CSRC 14170008
*                                                                       14180008
         TM    DS1DSIND,DS1RACDF  IS CATLG RACF INDICATED      @Z40CSRC 14190008
         BNO   CHKEXTD            NO, SKIP RACF CODE           @Z40CSRC 14192008
         L     RCWA,CATWKAP       GET ADDR OF CATLG WORK AREA  @Z40CSRC 14194008
         USING WORKAREA,RCWA      WORK AREA ADDRESSABLE        @Z40CSRC 14196008
         OI    FLAG5,OCWRACAT     SET RACF INDICATOR           @Z40CSRC 14198008
         DROP  RCWA                                            @Z40CSRC 14198408
*                                                                       14198808
CHKEXTD  EQU   *                  CHECK FOR EXTEND             @Z40CSRC 14199208
         CLI   EXTDSW,1           TEST THE EXTEND SWITCH.               14200000
         BH    YESFMT             BRANCH IF 2ND PASS OF EXTEND.         14250000
         BE    EXTENDA            BR IF 1ST PASS OF EXTEND.    @Z40CSRC 14300008
         EJECT                                                          14650000
*                                                                       14700000
* NOTE THAT THIS CODE IS ENTERED ONLY IF THE REQUEST IS FOR AN OPEN.    14750000
* THIS CODE BUILDS THE ACTUAL DEB/DCB FOR THE SYSCTLG DATA SET.         14800000
*                                                                       14850000
         TM    DS1LSTAR+2,XFF     'R' OF TTRLL IN DSCB.                 14900000
         BO    NOFMT              DON'T FORMAT.                         14950000
*                                                                       15000000
*      SET THE FORMAT FLAG ON                                           15050000
*                                                                       15100000
YESFMT   EQU   *                                                        15150000
         MVC   FMTSW,DS4DEVDB     SAVE DIRECTORY BLOCKS/TRACK.          15200000
*                                                                       15250000
*      GET NUMBER OF EXTENTS ALLOWED                                    15300000
*                                                                       15350000
REXT     EQU   12                 NUMBER OF EXTENTS REGISTER.  @YL026UD 15400000
NOFMT    EQU   *                                                        15450000
         SR    REXT,REXT                                                15500000
         IC    REXT,DS1NOEPV      GET NUMBER OF EXTENTS.                15550000
         LTR   REXT,REXT          IS EXTENT ALLOCATION ZERO?            15600000
         BZ    ERROR4             BRANCH IF NO EXTENTS ALLOCATED.       15650000
*                                                              @Y30LSRA 15651003
* IF THE CVOL RESIDE ON VIRTUAL DASD, THIS ROUTINE GETS CORE   @Y30LSRA 15652003
* TO BUILD A PARM LIST TO ACQUIRE THE SPACE ON DASD.  THE ADDR @Y30LSRA 15653003
* OF THIS SPACE IS TEMPORARILY SAVED IN THE UNUSED PORTIONS OF @Y30LSRA 15654003
* THE DEB.                                                     @Y30LSRA 15655003
*                                                              @Y30LSRA 15656003
         USING UCB,RUCB           ADDRESS UCB                  @Y30LSRA 15657003
         TM    UCBTBYT2,VIRTDASD  IS CVOL ON VIRT DASD         @Y30LSRA 15658003
         BNO   RNVIRT             DONT ISSUE GETMAIN FOR LIST  @Y30LSRA 15659003
         GETMAIN R,LV=L96,SP=230  GET NEEDED CORE              @Y30LSRA 15660003
         XC    D0(L96,R1),D0(R1)  ZERO OUT THE CORE            @Y30LSRA 15661003
         ST    R1,DEBDEBAD+D4     SAVE ADDR OF AREA IN UNUSED  @Y30LSRA 15662003
         MVC   D8(L6,R1),UCBVOLI  GET THE VOLID OF VIRT PACK   @Y30LSRA 15663003
         LA    R1,D28(,R1)        POINT TO PARAM LIST AREA     @Y30LSRA 15664003
         ST    R1,DEBDEBAD+D8     SAVE IT IN UNUSED            @Y30LSRA 15665003
         DROP  RUCB               DONT NEED IT ANYMORE         @Y30LSRA 15666003
RNVIRT   EQU   *                                               @Y30LSRA 15667003
*                                                                       15700000
*      FORMAT 1 DSCB EXTENT LOOP                                        15750000
*                                                                       15800000
RTOB     EQU   3                  EXTENT TO BASE.              @YL026UD 15850000
RFRL     EQU   7                  FROM LIMIT REGISTER.                  15900000
RFRS     EQU   6                  SIZE FO FROM REGISTER.                15950000
RFRB     EQU   5                  EXTENT FROM BASE.                     16000000
         STC   REXT,DEBNMEXT      STORE NO. OF EXTENTS.                 16050000
         LA    RTOB,DAREA-EXTL    SET EXTENT AREA POINTER      @Z40CSRC 16100008
         LA    RFRL,DS1EXT3       LIMIT FOR BXLE.                       16150000
         LA    RFRS,DS1EXT2-DS1EXT1 SIZE OF 'FROM' EXTENT.              16200000
         LA    RFRB,DS1SCALO+1    'FROM' BASE.                          16250000
         MVI   COUNT,X'00'        INITIALIZE M BYTE = ZERO     @OZ17531 16270008
BLDXTLP  EQU   *                                                        16300000
         LA    RTOB,EXTL(RTOB)    GO TO NEXT EXTENT IN DEB.             16350000
         BXLE  RFRB,RFRS,BLDXTM   BR IF STILL IN FORMAT 1 DSCB.         16400000
*                                                                       16450000
*      IO:  READ FORMAT 3 DSCB                                          16500000
*                                                                       16550000
RCCWH    EQU   1                  REG USED IN RELOCATING CCWS.          16600000
         MVC   CCHHR(CCHHRL),DS1PTRDS  FORMAT 3 POINTER.                16650000
         LM    RCCWA,RCCWH,CCWRDKD  READ KEY DATA CCW.                  16700000
         AR    RCCWA,RGAREA       RELOCATE.                             16750000
         STM   RCCWA,RCCWH,CHPG+CCW3-CCW1    MODIFY EXISTING CHAN PROG. 16800000
         MVC   DSVEXTNT,DEBSTRCC  SAVE OFF 1ST EXTEND          @Z40CSRC 16810008
         XC    DEBSTRCC(FOUR),DEBSTRCC CLEAR START CCHH        @Z40CSRC 16820008
         MVC   DEBENDCC(L'HICCHHNT),HICCHHNT ALLOW FULL ACCESS @Z40CSRC 16830008
         BAL   RGRET,IO3          EXCP, WAIT CHECK.                     16850000
         MVC   DEBSTRCC(L'DSVEXTNT),DSVEXTNT RESTORE 1ST EXT   @Z40CSRC 16860008
         MVC   DS1FMTID(NINTY),DS1DSSN  SHIFT FLD LEFT 1 BYTE.          16900000
         LA    RFRB,DSCBK4        'FROM' EXTENT BASE.                   16950000
*                                                                       17000000
*      SET FORMAT 3 EXTENTS                                             17050000
*                                                                       17100000
BLDXTM   EQU   *                                                        17150000
         MVC   DEBUCBAD-DAREA((L'DEBUCBAD+L'DEBBINUM),RTOB),DEBUCBAD    17200000
*                                 MOVE DVMOD, UCBADR,BB TO DEB.         17250000
         MVC   DEBSTRCC-DAREA(EIGHT,RTOB),TWO(RFRB)                     17300000
*                                 MOVE CCHH TO DEB.                     17350000
* IF THE CVOL RESIDES ON VIRTUAL DASD, THIS ROUTINE FILLS IN   @Y30LSRA 17351003
* EXTENT INFORMATION INTO THE PARAMETER LIST TO ACQUIRE SPACE. @Y30LSRA 17352003
*                                                              @Y30LSRA 17353003
         L     RBR,DEBDEBAD+D8    GET POINTER TO ENTRIES       @Y30LSRA 17354003
         LTR   RBR,RBR            IS THERE ONE                 @Y30LSRA 17355003
         BZ    RNVIRT2            NO, NOTHING TO DO HERE       @Y30LSRA 17356003
         MVC   D0(L2,RBR),TWO(RFRB) MOVE IN LOW CC OF EXTENT   @Y30LSRA 17357003
         MVC   D2(L2,RBR),SIX(RFRB) MOVE IN HIGH CC OF EXTENT  @Y30LSRA 17358003
         LA    RBR,D4(RBR)        INCR POINTER TO EXT ENTRIES  @Y30LSRA 17359003
         ST    RBR,DEBDEBAD+D8    STORE IT BACK                @Y30LSRA 17360003
RNVIRT2  EQU   *                                               @Y30LSRA 17361003
         CLI   0(RFRB),X81        CHECK EXTENT TYPE.                    17400000
         BE    CALCNT             BRANCH ON CYLINDER BOUNDARY.          17450000
         MVI   DEBUCBAD-DAREA(RTOB),X18  FILE MASK TO INHIBIT HD SW.    17500000
*                                                                       17550000
*      CALCULATE NUMBER OF TRACKS IN EXTENT                             17600000
*                                                                       17650000
CALCNT   EQU   *                                                        17700000
RCVTA    EQU   8                  SECOND CVT BASE REGISTER.             17750000
RTTCT    EQU   10                 COUNT OF TT REGISTER.                 17800000
RTTCTA   EQU   0                  COUNT OF TT REG A.                    17850000
         L     RCVTA,CVTPTR                                             17900000
         USING CVT,RCVTA                                                17950000
         L     RBR,CVTPRLTV       CONVERT ROUTINE ADDRESS.              18000000
         LA    RDEBP,DEB          REGISTER 1 = DEB ADDRESS.             18050000
         LA    RRES,COUNT         RRES = ADDRESS OF RESULTS.            18100000
         STM   R11,R15,REGS2      SAVE REGS.                            18150000
         LR    RGAREA2,RGAREA     SAVE AREA ADDR.                       18200000
         DROP  RGAREA                                                   18250000
         USING AREADCB,RGAREA2                                 @YL026UD 18300000
         XC    COUNT+1(7),COUNT+1 CLEAR MBBCCHH0 FIELD FOR CNV @OZ17531 18310008
         MVC   COUNT+3(L'DEBSTRCC+L'DEBSTRHH),DEBSTRCC-DAREA(RTOB)      18350000
*                                 MOVE START CCHH TO DEB.               18400000
         BALR  RGRET,RBR          CONVERT TO START TT.                  18450000
         ST    RTTCTA,REGSAVE     SAVE START TT.                        18500000
         CL    RTTCTA,X10000      ARE WE ON TRACK 0            @Z40CSRC 18502008
         BL    ISFIRST            YES, LEAVE TTRN 0            @Z40CSRC 18504008
         ST    RTTCTA,EXTDTT      SAVE TTRN OF START OF LAST   @Z40CSRC 18510008
*                                 EXTENT                       @Z40CSRC 18520008
ISFIRST  EQU   *                  BEYOND TTR STORING           @Z40CSRC 18530008
         L     RBR,REGS6          RESTORE ROUTINE ADDR.                 18550000
         MVC   COUNT+3(L'DEBENDCC+L'DEBENDHH),DEBENDCC-DAREA(RTOB)      18600000
*                                 MOVE END CCHH TO DEB.                 18650000
         BALR  RGRET,RBR          CONVERT TO END TT.                    18700000
         LM    R10,R15,REGSAVE    LOAD START TT AND RESTORE REGS.       18750000
         SR    RTTCT,RTTCTA       START TT - END TT = -(NT-1)           18800000
         SRL   RTTCT,16           GET -(NT-1) AS HALF WORD.             18850000
         BCTR  RTTCT,RTTCTA       -(NT-1)-1=-NT                         18900000
         LCR   RTTCT,RTTCT        NT= NUMBER OF TKS IN EXTENT.          18950000
         STH   RTTCT,DEBNMTRK-DAREA(RTOB)      PUT IN EXTENT.           19000000
         SR    R10,R10            CLEAR WORK REG               @OZ17531 19010008
         IC    R10,COUNT          GET M BYTE                   @OZ17531 19020008
         LA    R10,ONE(R10)       BUMP IT FOR NEXT EXTENT      @OZ17531 19030008
         STC   R10,COUNT          STORE IT BACK                @OZ17531 19040008
         DROP  RCVTA                                                    19050000
         USING AREADCB,RGAREA                                  @YL026UD 19100000
         BCT   REXT,BLDXTLP       BRANCH IF ANOTHER EXTENT.             19150000
*                                                              @Y30LSRA 19151003
*  FOR VIRTUAL DASD BELONGING TO THE MSS  SUBSYSTEM, THIS      @Y30LSRA 19152003
* ROUTINE ACQUIRES SPACE FOR THE CVOL.                         @Y30LSRA 19153003
*                                                              @Y30LSRA 19154003
         L     RDEBP,DEBDEBAD+D4  WAS PARM LIST BUILT          @Y30LSRA 19155003
         LTR   RDEBP,RDEBP        IF SO PROCESS IT             @Y30LSRA 19156003
         BZ    RNVIRT6            IF NOT, CONTINUE AS NORMAL   @Y30LSRA 19157003
         XC    DEBDEBAD+D4(L8),DEBDEBAD+D4 ZERO TEMP SAVE AREA @Y30LSRA 19158003
         MVC   D7(L1,RDEBP),DEBNMEXT GET NUMBER OF EXTENTS     @Y30LSRA 19159003
         MVI   D3(RDEBP),L96      MOVE IN HEADER LENGTH        @Y30LSRA 19160003
         MVI   D4(RDEBP),ACQOP    INDICATE TYPE=ACQUIRE        @OZ25613 19160537
         ICBACREL TYPE=ACQ,MF=(E,(1))                          @Y30LSRA 19161003
         LTR   RBR,RBR            ANY ERRORS                   @Y30LSRA 19162003
         BZ    RNVIRT4            NO DARN IT.  IT GOES SO WELL.@Y30LSRA 19163003
RVIRT1   EQU   *                  PROBLEM DETERMINATION        @Y30LSRA 19163203
         USING  UCB,RUCB          ESTABLISH ADDRESSABILITY     @Y30LSRA 19163603
         STH   R0,D0(RDEBP)       SAVE RETURN CODE             @Y30LSRA 19164003
         L     R10,BLDLP          SAVE BLDL WORKAREA ADDRESS   @OZ26358 19164137
         MVC   MESSAGEA(MSSMLEN),MSSMSG SET UP MSG             @Y30LSRA 19164203
         L     R15,CVTPTR         GET CVT ADDR                 @Y30LSRA 19164403
         L     R15,D0(,R15)       GET ADDR OF TCB WORDS        @Y30LSRA 19164603
         L     R15,D4(,R15)       GET CURRENT TCB PTR          @Y30LSRA 19164803
         L     R15,D12(,R15)      GET TIOT PTR                 @Y30LSRA 19165003
         MVC   MESSAGEA+D12(L8),D0(R15) GET JOBNAME            @Y30LSRA 19165203
         MVC   MESSAGEA+D21(L6),D8(RDEBP) INSERT VOLSER        @Y30LSRA 19165403
RVIRT6   SR    R15,R15            ZERO REGISTER                @Y30LSRA 19165603
         LH    R15,D26(,RDEBP)    GET REASON CODE              @Y30LSRA 19165803
         LTR   R15,R15            TEST FOR NON ZERO            @Y30LSRA 19165903
         BNZ   RVIRT7             YES -USE IT IN NSG           @Y30LSRA 19166103
         L     RDEBP,D92(RDEBP)   GET NEXT LIST PTR            @Y30LSRA 19166203
         LTR   RDEBP,RDEBP        TEST FOR ZERO                @Y30LSRA 19166403
         BZ    RVIRT7             YES-- USE CODE IN LIST       @Y30LSRA 19166503
         LR    RDEBP,R0           SET NEWLIST PTR              @Y30LSRA 19166603
         B     RVIRT6             EXAMINE REASON CODE          @Y30LSRA 19166803
RVIRT7   EQU   *                                               @Y30LSRA 19167003
         STH   R15,D0(,RDEBP)     SAVE REASON CODE             @Y30LSRA 19167103
RVIRT8   EQU   *                                               @Y30LSRA 19167203
         SLL   R15,D4             SHIFT 4 BITS                 @Y30LSRA 19167403
         STH   R15,D0(RDEBP)      RESET REASON CODE            @Y30LSRA 19167503
         UNPK  MESSAGEA+D60(L3),D0(L2,RDEBP) UNPACK REASON CDE @Y30LSRA 19167603
         OI    MESSAGEA+D62,DECZERO INSURE VALID DIGIT         @Y30LSRA 19167803
         TR    MESSAGEA+D60(L3),ABTABLE MAKE PRINTABLE         @Y30LSRA 19168003
         LA    R1,MESSAGEA        GET ADDR OF LST IN R1        @Y30LSRA 19168103
         WTO   MF=(E,(1))         ISSUE WTO,WTP                @Y30LSRA 19168203
         ST    R10,BLDLP          RESTORE BLDL WORKAREA ADDR   @OZ26358 19168337
         B     ERROR4             EXIT                         @Y30LSRA 19168437
RNVIRT4  EQU   *                                               @Y30LSRA 19168703
         LA    R0,L96             GET SIZE OF AREA             @Y30LSRA 19168803
         FREEMAIN R,LV=L96,A=(1),SP=230 RELEASE                @Y30LSRA 19168903
RNVIRT6  EQU   *                                               @Y30LSRA 19169003
*                                                                       19200000
*      SETUP NUMBYTES FIELD IN OPEN WORKAREA FOR FUTURE FREEMAIN        19250008
*                                                                       19350008
RNMA     EQU   1                  WORK REGISTER                         19450008
RNMB     EQU   2                  NUMBER OF BYTES.                      19550008
RNMT     EQU   0                  NUMBER OF TRACKS                      19650008
         L     RNMB,SPBYTES       GET # OF BYTES IN WORKAREA   @OZ15077 19750008
         ST    RNMB,NUMBYTES      TO BE FREED LATER.                    19850008
RBT      EQU   2                  BLOCKS PER TRACK REGISTER.            19950000
         SR    RBT,RBT                                                  20000000
         IC    RBT,FMTSW          GET COUNT OF BLOCKS/TRACK.            20050000
         LH    RTTRP,EXTDTT       LOAD FORMATTING START TT.             20100000
         SLL   RTTRP,16           SET THE TTRN.                         20150000
         EJECT                                                          20400000
*                                                                       20450000
* THIS CODE HANDLES THE INTERFACE WITH THE FORMAT ROUTINE.              20500000
*                                                                       20550000
RFSW     EQU   2                  FORMAT SWITCH REGISTER.               20600000
RRP      EQU   1                  RETURN REGISTER POINTER.              20650000
         LTR   RFSW,RFSW          TEST FORMAT SW.                       20700000
         BC    7,FORMAT           BRANCH TO FORMAT.                     20750000
         L     RRP,DEBDCBAD       LOAD THE DCB ADDRESS.                 20800000
*                                                                       20850000
RRC      EQU   15                 RETURN CODE REGISTER.                 20900000
         SR    RRC,RRC            SET ZERO RETURN CODE.                 20950000
*                                                                       21000000
         L     R2,BLDLP           OBTAIN 'BLDLAREA' ADDRESS             21050000
         LM    R3,R14,0(R2)       RESTORE REGISTERS                     21100000
         BR    R14                RETURN TO CALLER                      21150000
*                                                                       21200000
*      SET UP FORMAT ROUTINE WORKAREA                          @YL026UD 21250000
*                                                                       21300000
FORMAT   EQU   *                                                        21350000
RTTRP    EQU   6                  TTRN PARM REGISTER.                   21400000
         LA    R0,FMWAL           SET SP=0, LEN=512.                    21450000
         LR    R3,R0              SAVE BYTE COUNT FOR CLF2.             21500000
         GETMAIN R,LV=(0)                                               21550000
         L     R7,BLDLP             OBTAIN BLDLAREA ADDRESS    @ZA06686 21600037
         USING BLDLAREA,R7                                     @ZA06686 21610037
         ST    R1,SVFMTWAP          SAVE WKA PTR FOR ESTAE     @ZA06686 21620037
         DROP  R7                                              @ZA06686 21630037
         LR    R7,R1              SAVE WORK AREA ADDR.         @YL026UD 21650000
         L     R1,DEBDCBAD        LOAD THE DCB ADDRESS.                 21700000
         SR    RFKEY,RFKEY        SET CATALOG CALL INDICATOR.           21750000
*                                                                       21800000
         B     IGG0CLF2           GO TO FORMAT MODULE          @YL026UD 21850000
         EJECT                                                          21900000
*                                                                       21950000
* THE FOLLOWING CODE HANDLES THE EXTENDING OF CATALOGS.                 22000000
*                                                                       22050000
* INITIAL ENTRY FOR THE EXTEND FUNCTION IS AT THE LABEL 'EXTEND'.       22100000
* CHECK FIRST TO SEE IF THE REQUEST IS FOR A NEW EXTENT OR STEP TO      22150000
* THE NEXT EXTENT.                                                      22200000
*                                                                       22250000
EXTEND   EQU   *                                                        22300000
         DROP  RGAREA                                                   22350000
*                                                              @YL026UD 22400000
         LR    R15,R0             OBTAIN DCB ADDRESS           @YL026UD 22450000
         USING AREADCB,R15        SET DCB/DEB ADDRESSIBILITY   @YL026UD 22500000
         L     R15,BLDLP          OBTAIN 'BLDLAREA' ADDRESS    @YL026UD 22550000
         DROP  R15                                             @YL026UD 22600000
         STM   R3,R14,0(R15)      SAVE REGISTERS               @YL026UD 22650000
         ST    R2,4(R15)          SAVE CALLER'S BASE REG       @YL026UD 22700000
*                                                              @YL026UD 22750000
         L     RCVT,CVTPTR        PICK UP THE CVT POINTER      @YL026UD 22800000
         LR    RGAREA3,RFKEY      OBTAIN THE INPUT DCB ADDR    @YL026UD 22850000
         USING AREADCB,RGAREA3                                          22900000
         L     RCWA,CATWKAP        GET CAT WORK AREA POINTER.           22950000
         USING WORKAREA,RCWA                                            23000000
         MVC   OPTNCCW,TIC2        SET TIC TO BYPASS WRITE VERIFY.      23050000
         LH    RTTCT,VCLSTBLK      LOAD THE TT OF EXTENT.               23100000
         LA    RTTCT,ONE(RTTCT)    STEP TO NEXT RELATIVE TRACK.         23150000
         SR    RIOBS,RIOBS         CLEAR AN ARITHMETIC REG.             23200000
         IC    RIOBS,IOBSKADD      PICK UP 'M' FROM THE IOB.            23250000
         LA    RIOBS,ONE(RIOBS)    STEP M TO M+1.                       23300000
         STC   RIOBS,IOBSKADD      STORE IT BACK IN THE IOB.            23350000
         CLC   DEBNMEXT,IOBSKADD   COMPARE 'M' TO NO. OF EXTENTS.       23400000
         BE    EXTENDC             BRANCH FOR NEW EXTENT.               23450000
*                                                                       23500000
* THE REQUEST IS FOR A STEP TO THE NEXT EXISTING EXTENT.                23550000
* SATISFY THAT REQUEST HERE.                                            23600000
*                                                                       23650000
RIOBS    EQU   15                 REGISTERS USED TO SET CAT IOB.        23700000
         SLL   RIOBS,FOUR         SHIFT M TO USE AS AN INDEX.           23750000
         LA    RIOBS,DEBSTRCC(RIOBS) POINT R3 TO CCHH OF                23800000
*                                        NEXT EXTENT.                   23850000
         MVC   IOBSKADD+3(FOUR),0(RIOBS)   MOVE THE CCHH TO THE IOB     23900000
         MVI   IOBSKADD+7,X00     SET R TO ZERO.                        23950000
         MVI   THETA,X00          SET RPS THETA TO ZERO.                24000000
         SR    RRC,RRC            ZERO THE RETURN CODE.                 24050000
*                                                                       24100000
         L     R2,BLDLP           OBTAIN 'BLDLAREA' ADDRESS    @YL026UD 24150000
         LM    R3,R14,0(R2)       RESTORE REGISTERS            @YL026UD 24200000
         BR    R14                RETURN TO CALLER             @YL026UD 24250000
         DROP  RCWA                                                     24300000
         EJECT                                                          24350000
*                                                                       24400000
* PREPARE TO GET A NEW EXTENT FOR THE USER.                             24450000
*                                                                       24500000
EXTENDC  EQU   *                                                        24550000
         L     RUCB,DEBUCBAD      GET THE UCB ADDRESS.                  24600000
         L     RNMT,XTBYTES       GET SUB-POOL AND LENGTH.              24650000
         MODESET EXTKEY=DATAMGT   GET INTO DATA MGT KEY        @Z40CSRC 24660008
         BAL   RGRET,GETMAINB     BRANCH TO GET MAIN ROUTINE.           24700000
         MODESET EXTKEY=ZERO      GET BACK TO KEY ZERO         @Z40CSRC 24710008
*                                                                       24750000
         L     R6,BLDLP           GET BLDL WORKAREA PTR        @YL026UD 24800000
         USING BLDLAREA,R6        ESTABLISH ADDRESSIBILITY     @YL026UD 24850000
         ST    R1,SVEXTWAP        SAVE WKA PTR (ESTAE)         @YL026UD 24900000
         DROP  R6                                              @YL026UD 24950000
         L     RCWA,CATWKAP       ADDR OF CATLG WORK AREA      @Z40CSRC 24960008
         DROP  RGAREA3                                           YM5169 25000000
         USING AREADCB,RGAREA                                    YM5169 25050000
         ST    RCWA,CATWKAP       SAVE ADDR OF CATLG WORK AREA @Z40CSRC 25060008
         MVI   EXTDSW,X01         INDICATE 1ST PASS OF EXTEND.          25100000
         STM   R9,R10,EXTDRGSV    SAVE THE INPUT PARAMETERS.            25150000
         B     BLDEB              GO TO GET DSCB FOR EXTEND.            25200000
         EJECT                                                          25250000
*                                                                       25300000
* THE FOLLOWING CODE COMPLETES THE BLOCKS FOR THE CALL TO EXTEND        25350000
* AND THEN DOES THE XCTL TO THE EXTEND ROUTINE.                         25400000
*                                                                       25450000
EXTENDA  EQU   *                                                        25500000
         LM    R9,R10,EXTDRGSV    RESTORE REGS 9 & 10.                  25550000
         OC    DS1SCALO+1(L'DS1SCALO-1),DS1SCALO+1  SEC ALLOC ZERO      25600000
         BC    8,EXTENDAA         BRANCH IF NO SEC ALLOCATION.          25650000
         MVC   NUMBYTES,DS1SCALO  SAVE SEC ALLOCATION REQUEST.          25700000
*                                                                       25750000
*      CONSTRUCT DUMMY JFCB                                             25800000
*                                                                       25850000
         MVC   JFCBDSNM,DSCBK     D.S. NAME OF SYSCTLG.                 25900000
         XC    JFCBELNM(B184),JFCBELNM   ZERO JFCB, ECB AND IOB.        25950000
         MVC   JFCBCTRI(L'NUMBYTES),NUMBYTES  SEC ALLOC REQUEST.        26000000
         MVI   JFCBDRLH,ONE       AVE REC LENGTH = 1.                   26050000
         STM   R9,R10,JFCBELNM    SAVE SOME REGISTERS.                  26100000
*                                                                       26150000
*      CONSTRUCT THE IOB                                                26200000
*                                                                       26250000
RIOBR    EQU   0                  REGISTERS USED TO SET THE IOB.        26300000
RIOBT    EQU   12                 REGISTERS USED TO SET IOB    @YL026UD 26350000
         LM    RIOBR,RCVT,JFCBTSDM    LOAD ZEROS.                       26400000
         LA    RIOBR,DXECB        ECB ADDRESS.                          26450000
         LA    RCVT,DXCCW         CHANNEL PROGRAM START ADDRESS.        26500000
         STM   RIOBR,RCVT,IOBECBPT    STORE THEM IN THE IOB.   @YL026UD 26550000
         LA    RIOBT,DXDCB        DCB ADDRESS.                          26600000
         ST    RIOBT,IOBECBPT+16  STORE DCB ADDRESS IN IOB.    @YL026UD 26650000
*                                                                       26700000
*      CONSTRUCT THE DEB                                                26750000
*                                                                       26800000
         MVC   DXDEB(DEBL),DEB    GET FROM ALL READY CONSTRUCTED DEB.   26850000
         MVC   DXDEBDCB+1(L'DXDEBDCB-1),IOBDCBPT  NEW DCB POINTER.      26900000
*                                                                       26950000
*      CONSTRUCT THE DCB                                                27000000
*                                                                       27050000
RXDEB    EQU   0                  DEB ADDRESS MANIPULATING REG.         27100000
         LA    RXDEB,DXDEB                                              27150000
         ST    RXDEB,DXDCBDEB     STORE THE DEB POINTER.                27200000
*                                                                       27250000
*      SET UP FOR EXTEND XCTL                                           27300000
*                                                                       27350000
RXP1     EQU   2                  XCTL PARM REG 1.                      27400000
RXP3     EQU   5                  XCTL PARM REG 3.                      27450000
RXP4     EQU   10                 XCTL PARM REG 4.                      27500000
         LR    RXP1,RGAREA3       SET THE DCB ADDRESS.                  27550000
         LR    R7,RGAREA          SET THE WORK AREA ADDRESS.   @YL026UD 27600000
         DROP  RGAREA                                                   27650000
         USING AREADCB,RGAREA3                                          27700000
         LA    RXP3,DEB           SET THE DEB ADDRESS.                  27750000
         L     RXP4,DEBUCBAD      SET THE UCB ADDRESS.                  27800000
         DROP  RGAREA3                                                  27850000
         LA    RGAREA,TWO         INDICATE SYSCTLG EXTEND.              27900000
         LA    RBR,XCTLCONX       EXTEND MODULE NAME ADDRESS.           27950000
         XC    FOUR(FOUR,R7),FOUR(R7)  ZERO XCTL DCB ADDRESS   @YL026UD 28000000
         MVC   EIGHT(EIGHT,R7),0(RBR)  MODULE NAME             @YL026UD 28050000
         LA    RBR,EIGHT(R7)      SET XCTL PTR TO MOD NAME     @YL026UD 28100000
         ST    RBR,0(R7)          STORE XCTL POINTER           @YL026UD 28150000
         LA    R4,EXTDAREA-AREADCB(,R7) ADDR OF EXTEND WK AREA @Z40CSRC 28160008
         SR    R8,R8              WILL SHOW RETURNING FROM     @Z40CSRC 28170008
*                                 EXTEND UPON RETURN FROM DADSM         28180008
         USING AREADCB,R7         WORK AREA ADDRESSABLE        @Z40CSRC 28182008
         L     R6,PSATOLD-PSA     GET ADDR OF TCB              @Z40CSRC 28185008
         L     R6,TCBRBP-TCB(,R6) GET ADDR OF SVRB             @Z40CSRC 28190008
         MVC   DSVSVRB,RBEXSAVE-RBBASIC(R6) SAVE RBEXSAVE      @Z40CSRC 28195008
         MODESET EXTKEY=DATAMGT   GO TO DADSM IN KEY 5         @Z40CSRC 28196008
         XCTL  MF=(E,(1)),SF=(E,(R7))                          @YL026UD 28200000
         DROP  R7                 ADDRESSABILITY ENDS          @Z40CSRC 28220008
         EJECT                                                 @YL026UD 28250000
*                                                                       28300000
* THIS CODE HANDLES THE CASE WHERE EXTEND WAS REQUESTED BUT NO          28350000
* SECONDARY SPACE HAS BEEN ALLOCATED.                                   28400000
*                                                                       28450000
* FREE THE EXTEND WORK AREA                                             28500000
*                                                                       28550000
EXTENDAA EQU   *                                                        28600000
         L     RNMT,XTBYTES       EXTEND WORK AREA LENGTH.              28650000
         LA    RNMA,0(RGAREA)     LOAD WORK AREA ADDRESS.               28700000
         USING AREADCB,RGAREA3    SET DCB/DEB ADDRESSIBILITY   @YL026UD 28750000
         L     R2,BLDLP           OBTAIN 'BLDLAREA' ADDRESS    @YL026UD 28800000
         USING BLDLAREA,R2        ESTABLISH ADDRESSIBILITY     @YL026UD 28850000
         XC    SVEXTWAP(4),SVEXTWAP    RESET WKA PTR (ESTAE)   @YL026UD 28900000
         MODESET EXTKEY=DATAMGT   GET INTO KEY 5               @Z40CSRC 28920008
         SVC   FREEMAIN           FREE THE EXTEND WORK AREA CORE.       28950000
         MODESET EXTKEY=ZERO      GET BACK TO KEY 0            @Z40CSRC 28970008
*                                                                       29000000
ERROR8   EQU   *                  TO EXIT WITH RETURN CODE 8   @Z40CSRC 29010008
         LR    RRP,RGAREA3        SET DCB AREA ADDRESS FOR RETURN.      29050000
         LA    RRC,EIGHT          SET NO EXTENT RETURN CODE.            29100000
*                                                                       29150000
         DROP  RGAREA3                                                  29200000
         DROP  R2                                              @YL026UD 29250000
         LM    R3,R14,0(R2)       RESTORE REGISTERS                     29300000
         BR    R14                RETURN TO CALLER                      29350000
         EJECT                                                          29400000
*                                                                       29450000
* THIS CODE HANDLES THE ENTRY FROM THE EXTEND MODULES AFTER THEY        29500000
* HAVE COMPLETED THEIR WORK.                                            29550000
*                                                                       29700000
* FREE EXTEND WORK AREA CORE                                            29750000
*                                                                       29800000
EXTENDB  EQU   *                                                        29850000
         MODESET EXTKEY=ZERO      GET INTO KEY ZERO            @Z40CSRC 29860008
         MVC   RBEXSAVE-RBBASIC(L'SVRBEXT,R6),DSVSVRB-AREADCB(R7)      -29870008
                                  REFRESH SVRB E.S.A           @Z40CSRC 29880008
         L     RCVT,CVTPTR        PICK UP THE CVT POINTER      @YL026UD 29900000
         LR    RUCB,R10           RESTORE UCB ADDRESS          @Z40CSRC 29950008
         L     RNMT,XTBYTES       EXTEND WORK AREA LENGTH.              30000000
         LA    RNMA,0(,R7)        EXTEND WORK AREA ADDRESS.    @Z40CSRC 30050008
         USING AREADCB,RGAREA3    SET DCB/DEB ADDRESSIBILITY   @YL026UD 30100000
         L     R2,BLDLP           GET BLDL WORKAREA ADDRESS    @YL026UD 30150000
         USING BLDLAREA,R2        ESTABLISH ADDRESSIBILITY     @YL026UD 30200000
         XC    SVEXTWAP(4),SVEXTWAP    RESET WKA PTR (ESTAE)   @YL026UD 30250000
         MODESET EXTKEY=DATAMGT   GET INTO KEY 5 FOR FREEMAIN  @Z40CSRC 30260008
         SVC   FREEMAIN           FREE THE EXTEND CORE.                 30300000
         MODESET EXTKEY=ZERO      GET BACK INTO KEY 0          @Z40CSRC 30305008
*                                                              @Z40CSRC 30310008
*      CHECK FOR ERRORS FROM DADSM                             @Z40CSRC 30320008
*                                                              @Z40CSRC 30330008
         LCR   R13,R13            TEST FOR DADSM ERR (R13 NEG) @Z40CSRC 30340008
         BNP   NOEXTERR           BRANCH IF NO ERROR           @Z40CSRC 30342008
         LA    R15,ERROR16        LOAD COMPARISON VALUE        @Z40CSRC 30344008
         CR    R15,R13            TEST FOR I/O ERR (R13=-16)   @Z40CSRC 30345008
         BNE   ERROR8             BRANCH IF NO I/O ERROR       @Z40CSRC 30346008
         LR    RGAREA,RGAREA3     GET ADDR OF DCB AREA         @Z40CSRC 30348008
         B     IOERR              GO TO I/O ERROR ROUTINE      @Z40CSRC 30348408
NOEXTERR EQU   *                  NO EXTEND ERROR              @Z40CSRC 30348808
*                                                                       30350000
*      FREE OLD SYSCTLG DEB/DCB                                         30400000
*                                                                       30450000
         USING AREADCB,RGAREA3                                          30500000
         L     RCWA,CATWKAP       SAVE CAT WORK AREA POINTER.           30550000
         L     RNMT,NUMBYTES      GET NUMBER OF BYTES.                  30600000
         LA    RNMA,X00(,RGAREA3) ADDRESS OF AREA TO FREE      @Z40CSRC 30650008
         XC    SVOPNWAP(4),SVOPNWAP    RESET WKA PTR (ESTAE)   @YL026UD 30700000
         SVC   FREEMAIN           FREE THE OLD DCB AREA.                30750000
         DROP  RGAREA3                                                  30800000
*                                                                       30850000
*      GET NEW SYSCTLG DEB/DCB CORE                                     30900000
*                                                                       30950000
         BAL   RGRET,GETMAIN      BRANCH TO GET MAIN ROUTINE.           31000000
         ST    R1,SVOPNWAP        SAVE WKA PTR (ESTAE)         @YL026UD 31050000
         USING AREADCB,RGAREA                                  @YL026UD 31100000
         ST    RCWA,CATWKAP       STORE THE CAT WORK AREA PTR.          31150000
         ST    R2,BLDLP           STORE THE BLDL WORK AREA PTR @YL026UD 31200000
         MVI   EXTDSW,TWO         INDICATE SECOND PASS.                 31300000
         B     BLDEB              GO TO BUILD NEW DEB.                  31350000
         DROP  R2                                              @YL026UD 31400000
         EJECT                                                          31450000
*                                                                       31500000
* THE FOLLOWING ARE SUB-ROUTINES USED BY THE OPEN MODULE.               31550000
*                                                                       31600000
GETMAIN  EQU   *                                                        31650000
         L     RNMT,SPBYTES       NO OF BYTES FOR SYSCTLG DEB/DCB.      31700000
GETMAINB EQU   *                                                        31750000
         GETMAIN R,LV=(0)                                               31800000
         LR    RGAREA,RPARM       SET GOTTEN AREA ADDRESS IN BASE.      31850000
         BR    RGRET              RETURN TO THE CALLER.                 31900000
         SPACE                                                          31950000
*                                                                       32000000
* EXCP, WAIT AND IO ERROR CHECKING ROUTINE.                             32050000
*                                                                       32100000
IO3      EQU   *                                                        32150000
         EXCP  AIOB                                                     32200000
         WAIT  1,ECB=AECB                                               32250000
         CLI   AECB,X7F           TEST ECB CONDITION.                   32300000
         BCR   8,RGRET            BRANCH NO ERROR.                      32350000
RRCA     EQU   7                  TEMP RETURN CODE REGISTER.   @YL026UD 32400000
*                                                              @Z40CSRC 32410008
IOERR    EQU   *                  I/O ERROR EXIT ROUTINE       @Z40CSRC 32420008
         LA    RRCA,TWELVE        SET IO ERROR CONDITION CODE.          32450000
         SPACE                                                          32500000
*                                                                       32550000
* RETURN TO THE CALLER IF AN ERROR HAS OCCURRED.                        32600000
*                                                                       32650000
RETURN   EQU   *                                                        32700000
         L     RCWA,CATWKAP       SAVE THE CATALOG WORK AREA ADDR.      32750000
         L     RNMT,SPBYTES       LOAD WORK AREA LENGTH.                32800000
         LA    RNMA,0(RGAREA)     GET DCB AREA ADDRESS.                 32850000
         L     R2,BLDLP           GET BLDL WORKAREA ADDRESS    @YL026UD 32900000
         USING BLDLAREA,R2        ESTABLISH ADDRESSIBILITY     @YL026UD 32950000
         XC    SVOPNWAP(4),SVOPNWAP     RESET WKA PTR (ESTAE)  @YL026UD 33000000
         SVC   FREEMAIN           FREE DCB AREA CORE.                   33050000
*                                                                       33100000
* THIS CODE IS TO SET DCB/DEB AREA CORE RELEASED FLAG.                  33150000
*                                                                       33200000
         SPACE                                                          33250000
         USING WORKAREA,RCWA                                            33300000
         OI    FLAG1,FREEDCB      TURN ON CORE FREED FLAG.              33350000
         DROP  RCWA                                                     33400000
*                                                                       33450000
         LR    RRC,RRCA           SET CONDITION CODE.                   33500000
         LM    R3,R14,0(R2)       RESTORE REGISTERS                     33550000
         BR    R14                RETURN TO CALLER                      33600000
         DROP  R2                                              @YL026UD 33650000
         SPACE                                                          33700000
ERROR4   EQU   *                                                        33750000
         LA    RRCA,FOUR          SET ERROR CODE IN R2.                 33800000
         B     RETURN             GO TO RETURN TO CALLER.               33850000
*                                                                       33900000
         TITLE 'IGG0CLCF - (IGG0CLF2) SYSCTLG FORMATTER'       @YL026UD 33950000
*********************************************************************** 34000000
*                                                                     * 34050000
*     IGG0CLF2 - SYSCTLG FORMATTER                                    * 34100000
*                                                              @Z40CSRC 34102008
*       INPUT =                                                @Z40CSRC 34104008
*       .  R0 CONTAINS ZERO                                    @YL026UD 34110008
*       .  R1 CONTAINS DCB OF DATA SET TO BE FORMATTED         @YL026UD 34120008
*       .  R2 CONTAINS NUMBER OF BLOCKS PER TRACK FOR DEVICE   @YL026UD 34130008
*          WHICH CONTAINS THE DATA SET                         @YL026UD 34140008
*       .  R3 CONTAINS COUNT OF BYTES IN WORKAREA PASSED TO    @YL026UD 34142008
*          THIS ROUTINE                                        @YL026UD 34144008
*       .  R5 CONTAINS DATA MANAGEMENT COUNT DECREMENT VALUE   @YL026UD 34146008
*       .  R6 CONTAINS STARTING RELATIVE (TTR) BEGIN ADDRESS   @YL026UD 34148008
*       .  R7 CONTAINS ADDRESS OF A WORKAREA                   @YL026UD 34148408
*                                                                     * 34150000
*********************************************************************** 34200000
*                                                                       34250000
IGG0CLF2 EQU   *                                               @YL026UD 34300000
*                                                                       34350000
IEINIT   EQU   *                                                        34400000
         LR    RGAREA,R7               AREA ADR FROM PREV PHASE         34450000
         USING WKAREA,RGAREA           SET WORK AREA ADDRESSABILITY.    34500000
         STM   R0,R6,FSVAREA           SAVE INPUT PARAS                 34550000
         ST    R7,SVADDR               SAVE WORKAREA ADDRESS   @YL026UD 34600000
         LR    RGTTR,R6                SAVE TTR0 START                  34650000
         LR    RGDQTY,R0               SAVE FUNCTION CODE               34700000
*                                                                       34750000
* BUILD AND RELOCATE ECB AND IOB                                        34800000
*                                                                       34850000
         SR    R0,R0                   ZERO ECB                         34900000
         LA    R2,FECB                 ECB PTR IN IOB                   34950000
         LA    R5,CHPGA                CHAN PROG PTR                    35000000
         L     R6,SVDCB                DCB PTR                          35050000
         SR    R8,R8                   ZERO BLOCK INCR FIELD            35100000
         STM   R0,R8,FECB              ECB AND IOB                      35150000
         MVI   FIOB,TWO                SET UNRELATED BIT                35200000
         LTR   RGDQTY,RGDQTY           CHECK FUNCTION                   35250000
         B     CTLGFMT                 BRANCH FOR CATALOG FORMAT        35300000
*                                                              @YL026UD 35350000
*      CODE TO FORMAT A BPAM DATA SET HAS BEEN REMOVED         @YL026UD 35400000
*      FROM THIS VS2 RELEASE 2 CODE                            @YL026UD 35450000
         EJECT                                                          35500000
*                                                                       35550000
* THIS SECTION OF CODE FORMATS FOR THE CATALOG DATA SET.                35600000
*                                                                       35650000
         SPACE                                                          35700000
CTLOOP1  L     RGA,SVBLPTK             NO. BLKS PER TRK                 35750000
CTLOOP2  BAL   RGRET,RELOC             SET UP CHAN PROG                 35800000
         BAL   RGRET,IO                WRITE COMPLETE OR PARTIAL TRK    35850000
         MVC   MBBCCHHR+7(ONE),HICOUNT+4 SET R INCASE TRK NOT COMPLETE  35900000
         LTR   RGA,RGA                 SEE IF TRK COMPLETE              35950000
         BP    CTLOOP2                 NO, WRITE REST OF TRK            36000000
         A     RGTTR,X10000            GO TO NEXT TRK                   36050000
CTLGFMT  BAL   RGRET,CNVT              CONVERT TTR                      36100000
         LTR   R15,R15                 TEST RETURN CODE                 36150000
         BZ    CTLOOP1                 BRANCH IF NOT AT END OF EXTENT   36200000
         S     RGTTR,X10000            GO BACK TO LAST TRACK            36250000
         ST    RGTTR,HICOUNT           LAST TTR IN CTLG                 36300000
         OC    SVTT(FOUR),SVTT         TEST TTR0 START                  36350000
         BC    7,EXTNDA                BR IF FORMATTED AN EXTENDED AREA 36400000
         LA    RGTTR,X100              SET TTR TO INDEX DIR             36450000
         BAL   RGRET,CNVT              GO TO CONVERT TTR.               36500000
         LA    RGA,ONE                 SET TO WR ONE BLK                36550000
         BAL   RGRET,RELOC             SET UP CHAN PRG                  36600000
*                                                                       36650000
* FILL IN DIRECTORY CONTROL BLOCK                                       36700000
*                                                                       36750000
         MVC   COUNT2(TEN),HIKEY       KEY AND BYTE COUNT               36800000
         XC    CTDIR(B22),CTDIR        ZERO DIR CTL BLK AREA            36850000
         MVI   CTLBK,ONE               LOWEST NAME G.T. ZERO            36900000
         LA    RGA,X105                TTRC                             36950000
         STH   RGA,CTTTRC              STORE TTRC.                      37000000
         MVC   CTHITT(TWO),HICOUNT     LAST TT IN CTLG                  37050000
         MVC   CTHIR(ONE),SVBLPTK+3    HIGH R ON LAST TRACK             37100000
         MVI   CTNABTR,TWO             TTR OF NXT AVAIL BLK             37150000
         MVC   CTHIENT(EIGHT),HIKEY    HIGH ENTRY                       37200000
*                                                                       37250000
* ALTER CHANNEL PROGRAM                                                 37300000
*                                                                       37350000
         MVI   CHPGA3,X0D              WRITE KD                         37400000
         MVI   CHPGA3+7,B40            COUNT                            37450000
         MVI   CHPGB3,X0E              READ KD                          37500000
         MVI   CHPGB3+7,EIGHT          CHANGE COUNT TO 264              37550000
*                                                                       37600000
* WRITE DIRECTORY CONTROL BLOCK                                         37650000
*                                                                       37700000
         BAL   RGRET,IO                GO EXECUTE EXCP AND WAIT.        37750000
*                                                                       37800000
* SET UP DEB AND CHANNEL PROGRAM TO READ SYSCTLG DSCB--                 37850000
*                                                                       37900000
         L     RGH,SVDCB               GET DCB ADDRESS                  37950000
         USING AREADCB,RGH                                              38000000
         MVC   D1SDSNAM(EIGHT),SYSCTLG  SET UP DSNAME FOR SEARCH KEY    38050000
         MVC   D1SDSNAM+8(B36),D1SDSNAM+7  PAD WITH BLANKS     @YL026UD 38100000
         MVC   EXTSAVE,DEBSTRCC        SAVE 1ST EXTENT OF DEB           38150000
         MVC   DEBSTRCC(FOUR),DSCBTRK  MODIFY DEB TO READ AND  @YL026UD 38200000
         MVC   DEBENDCC(FOUR),DSCBTRK  WRITE SYSCTLG DSCB      @YL026UD 38250000
         MVC   MBBCCHHR+3(FOUR),DSCBTRK   SET SEEK ADDRESS              38300000
         LM    R0,R3,READVTOC          RELOCATE CHANNEL PROG   @YL026UD 38350000
         AR    R0,RGAREA               MODIFY CCW ADDRESSES             38400000
         AR    R2,RGAREA               MODIFY CCW ADDRESSES.            38450000
         STM   R0,R3,CHPGA             STORE CHANNEL PROGRAM   @YL026UD 38500000
         LM    R0,R1,READVTOC+16       RELOCATE CHANNEL PROG   @YL026UD 38550000
         AR    R0,RGAREA               MODIFY CCW ADDRESSES.   @YL026UD 38600000
         STM   R0,R1,CHPGA3            STORE CHAN PROG         @YL026UD 38650000
         BAL   RGRET,IO                READ SYSCTLG DSCB                38700000
*                                                                       38750000
* TURN ON ALREADY FORMATTED INDICATOR AND REWRITE SYSCTLG DSCB--        38800000
*                                                                       38850000
         MVI   D1SLSTAR+2,XFF          SET 'FORMATTED' SW IN DSCB       38900000
         LM    R0,R3,WRVTOC            RELOCATE CHANNEL PROG   @YL026UD 38950000
         AR    R0,RGAREA               ADD BASE TO OFFSET               39000000
         AR    R2,RGAREA               ADD BASE TO OFFSET.              39050000
         STM   R0,R3,CHPGA3            STORE CCWS.             @YL026UD 39100000
         LM    R0,R3,WRVTOC+16         RELOCATE CHANNEL PROG   @YL026UD 39150000
         AR    R0,RGAREA               ADD BASE TO OFFSET.     @YL026UD 39200000
         STM   R0,R3,CHPGA5            STORE CCWS.             @YL026UD 39250000
         BAL   RGRET,IO                WRITE UPDATED DSCB               39300000
         MVC   DEBSTRCC(EIGHT),EXTSAVE  RESTORE 1ST EXTENT OF DEB       39350000
         EJECT                                                          39400000
OK       SR    R10,R10                 SET ZERO ERROR CODE       YM6411 39450000
*                                                                       39500000
* FREE RPS CORE AND UNLOAD IGG019EK.                                    39550000
*                                                                       39600000
RETURN2  EQU   *                                                        39650000
         L     RGH,SVDCB               GET DCB.                         39700000
         L     R1,DEBAD(RGH)           GET DEB PTR.                     39750000
         L     R3,DEBAPDS(R1)          GET APPENDAGE TABLE.    @YL026UD 39800000
         L     R12,FOUR(R3)            GET SIO APPENDAGE.      @YL026UD 39850000
         L     RGH,SVDCB          GET THE DCB ADDRESS          @YL026UD 39900000
         USING AREADCB,RGH        ESTABLISH ADDRESSIBILITY     @YL026UD 39950000
         L     R2,BLDLP           OBTAIN 'BLDLAREA' ADDRESS    @YL026UD 40000000
         USING BLDLAREA,R2        ESTABLISH ADDRESSIBILITY     @YL026UD 40050000
         CLC   RPSIDLOC(L'RPSID,R12),RPSID  IS THIS THE RPS APPENDAGE?  40100000
         BNE   CONTINUE                NO, NO RPSWA EXISTS              40150000
         MVC   DEBAPDS(FOUR,R1),AVTSV(R3)  RESTORE DEB AVT POINTER      40200000
         LA    R0,WASZ                 GET RPS WORK AREA SIZE           40250000
         XC    SVRPSWAP(4),SVRPSWAP     RESET WKA PTR (ESTAE)  @YL026UD 40300000
         FREEMAIN R,LV=(0),A=(3)       FREE RPS WORK AREA               40350000
         DELETE EP=IGG019EK                                             40400000
CONTINUE EQU   *                                                        40450000
*                                                                       40500000
* FREEMAIN AND EXIT                                                     40550000
*                                                                       40600000
         LM    R14,R1,SVDCB            DCB, NO. BYTES, AND AREA ADR     40650000
         XC    SVFMTWAP(4),SVFMTWAP     RESET WKA PTR (ESTAE)  @ZA06686 40700037
         FREEMAIN R,LV=(0),A=(1)                                        40750000
         LR    R15,R10                 SET ERROR CODE            YM6411 40800000
         LR    R0,RGTTR                HIGHEST TT                       40850000
         LR    R1,R14                  RETURN DCB ADR                   40900000
*                                                                       40950000
         DROP  R2                                              @YL026UD 41000000
         DROP  RGH                                                      41050000
         LM    R3,R14,0(R2)       RESTORE REGISTERS            @YL026UD 41100000
         BR    R14                RETURN TO CALLER             @YL026UD 41150000
         EJECT                                                          41200000
*                                                                       41250000
* SET UP EXTENT FOR THE CATALOG ROUTINES IF FORMATTING NEW EXTENT.      41300000
*                                                                       41350000
         SPACE                                                          41400000
EXTNDA   EQU   *                                                        41450000
RCWAA    EQU   8                       CAT WORK AREA BASE.              41500000
         L     RGH,SVDCB               GET THE DCB ADDRESS.             41550000
         USING AREADCB,RGH                                              41600000
         L     RCWAA,CATWKAP           LOAD CATALOG WORK AREA ADDRESS.  41650000
         USING WORKAREA,RCWAA                                           41700000
         MVC   VCLSTBLK(TWO),HICOUNT   SET LAST BLOCK TT IN VICE.       41750000
         ST    RGH,IOBDCB              STORE THE DCB PTR IN THE IOB.    41800000
         LA    RGA,DEB                 GET THE DEB ADDRESS.             41850000
         ST    RGA,DEBADDR             STORE IN CATALOG WORK AREA.      41900000
         MVI   THETA,X00               ZERO THE THETA VALUE FOR RPS.    41950000
         SR    RGA,RGA                                                  42000000
         IC    RGA,IOBSKADD            GET M FROM THE IOB.              42050000
         SLL   RGA,FOUR                SHIFT M TO USE AS EXT INDEX.     42100000
         LA    RGA,DEBSTRCC(RGA)       PT. RGA TO CCHH OF NEW EXTENT.   42150000
         MVC   IOBSKADD+3(FOUR),0(RGA)  MOVE CCHH TO THE IOB.           42200000
         MVI   IOBSKADD+7,X00          SET R TO ZERO.                   42250000
*                                                               SA50973 42300000
*      AT THIS POINT THE NEW EXTENT HAS BEEN OBTAINED AND       SA50973 42350000
*      FORMATTED WITH ALL THE NECESSARY INFORMATION BEING       SA50973 42400000
*      UPDATED IN THE CATALOG MANAGEMENT WORKAREA.  THE DATA    SA50973 42450000
*      SET, HOWEVER, HAS NOT BEEN UPDATED TO REFLECT THE NEW    SA50973 42500000
*      EXTENT.                                                  SA50973 42550000
*                                                               SA50973 42600000
*      TO INSURE THAT THE 'VICE' REMAINS CURRENT,               SA50973 42650000
*      1.  READ THE FIRST BLOCK OF THE SYSCTLG                  SA50973 42700000
*      2.  UPDATE 'VCLSTBLK' IN THE 'VICE'                      SA50973 42750000
*      3.  REWRITE THE BLOCK WITH THE UPDATED 'VICE'            SA50973 42800000
*                                                               SA50973 42850000
         LA    RGTTR,X100              TTR OF FIRST BLOCK       SA50973 42900000
         BAL   RGRET,CNVT              CONVERT TO MBBCCHHR      SA50973 42950000
*                                                               SA50973 43000000
*      SET UP THE CHANNEL PROGRAM AREA                          SA50973 43050000
*                                                               SA50973 43100000
         LM    RGE,RGF,CCWSID          GET SID CCW             @YL026UD 43150000
         AR    RGE,RGAREA              RELOCATE SID            @YL026UD 43200000
         STM   RGE,RGF,CHPGA           SID                     @YL026UD 43250000
         LM    RGE,RGF,CCWSID+8        GET TIC CCW             @YL026UD 43300000
         LA    RGG,CHPGA               DEVELOP TIC ADDR        @YL026UD 43350000
         AR    RGE,RGG                 RELOCATE TIC             SA50973 43400000
         STM   RGE,RGF,CHPGA2          TIC                     @YL026UD 43450000
*                                                               SA50973 43500000
         LM    RGE,RGF,CCWRD           GET RD CCW              @YL026UD 43550000
         AR    RGE,RGAREA              RELOCATE RD             @YL026UD 43600000
         STM   RGE,RGF,CHPGA3          RD                      @YL026UD 43650000
*                                                               SA50973 43700000
         STM   RGE,RGF,CHPGA4          RD                       SA50973 43750000
*                                                               SA50973 43800000
         BAL   RGRET,IO                ***READ VICE BLOCK***    SA50973 43850000
*                                                               SA50973 43900000
         MVC   UPLSTBLK(L'UPLSTBLK),HICOUNT UPDATE 'VCLSTBLK'   SA50973 43950000
*                                                               SA50973 44000000
         MVI   CHPGA3,CCWWDOP          CHANGE TO WD             SA50973 44050000
         MVI   CHPGA3+4,CCWOPTN2       COMMAND CHAIN            SA50973 44100000
         MVI   CHPGA4+4,CCWOPTN1       NO TRANSFER              SA50973 44150000
         BAL   RGRET,IO                ***WRITE VICE BLOCK***   SA50973 44200000
*                                                               SA50973 44250000
         B     OK                      GO TO SET RETURN         SA50973 44300000
         EJECT                                                  SA50973 44350000
*                                                                       44400000
* CONVERT TTR IN RGTTR TO MBBCCHHR                                      44450000
*                                                                       44500000
CNVT     LR    R0,RGTTR                                                 44550000
         L     R1,SVDCB                DCB ADR                          44600000
         L     R1,DEBAD(R1)            DEB ADR                          44650000
         LA    R2,MBBCCHHR                                              44700000
         LR    R3,RGAREA               SAVE AREA ADR                    44750000
         STM   R9,R14,COUNT2           SAVE VOLATILE REGS               44800000
         USING CVT,R15                                                  44850000
         L     R15,CVTPTR              GET ADR OF CVT                   44900000
         L     R15,CVTPCNVT            GET ADR OF CONVERT ROUTINE       44950000
         DROP  R15                                                      45000000
         BALR  R14,R15                 GO TO CONVERT ROUTINE.           45050000
         LM    R9,R14,COUNT2-WKAREA(R3)  RESTORE REGS                   45100000
         BR    RGRET                   RETURN TO CALLING CODE.          45150000
         EJECT                                                          45200000
*                                                                       45250000
* BUILD CHANNEL PROGRAM OF 1 THRU 15 WRITE CCW'S FOLLOWED BY AN EQUAL   45300000
*        NUMBER OF WRITE CHECK CCW'S.                                   45350000
* ENTER NUMBER OF CCW'S TO BE WRITTEN ON GIVEN TRACK IN RGA.            45400000
* MBBCCHHR INDICATES PROPER TRACK AND ONE LESS THAN R OF FIRST RECORD   45450000
* UPON RETURN, RGA CONTAINS EXCESS OF ORIGINAL VALUE OVER 15, AND       45500000
*        RGG POINTS TO LAST WRITE CCW                                   45550000
*                                                                       45600000
RELOC    LR    RGB,RGA                 NUMBER OF CCW'S                  45650000
         LA    RGE,B15                 MAXIMUM NO.  OF CCW'S   @YL026UD 45700000
         SR    RGA,RGE                                         @YL026UD 45750000
         BC    12,LTMAX                BRANCH IF LESS THAN MAX VALUE    45800000
         LA    RGB,B15                 SET TO MAX                       45850000
LTMAX    LM    RGE,RGF,CCWSID          RELOCATE SID CCW        @YL026UD 45900000
         AR    RGE,RGAREA                                      @YL026UD 45950000
         STM   RGE,RGF,CHPGA           STORE SID CCW           @YL026UD 46000000
         STM   RGE,RGF,CHPGB           STORE SID CCW           @YL026UD 46050000
         LM    RGE,RGF,CCWSID+8        RELOCATE TIC CCW        @YL026UD 46100000
         LA    RGG,CHPGA               DEVELOP TIC ADDR        @YL026UD 46150000
         AR    RGE,RGG                                                  46200000
         STM   RGE,RGF,CHPGA2          STORE TIC               @YL026UD 46250000
         LA    RGG,CHPGB-CHPGA         DEVELOP SECOND TIC ADDR @YL026UD 46300000
         AR    RGE,RGG                                                  46350000
         STM   RGE,RGF,CHPGB2          SECOND SID, TIC         @YL026UD 46400000
         LA    RGG,CHPGA2                                               46450000
         LM    RGE,RGF,MBBCCHHR        DEVELOP COUNT FIELD              46500000
         SLDL  RGE,B24                 DROP MBB                         46550000
         A     RGF,X080100             SET KL AND DL                    46600000
RELOOP1  L     RGD,CCWWR               WR CKD CCW              @YL026UD 46650000
         AR    RGD,RGG                 POINT TO COUNT FIELD    @YL026UD 46700000
         ST    RGD,EIGHT(RGG)                                  @YL026UD 46750000
         L     RGD,CCWWR+4             WR CKD CCW              @YL026UD 46800000
         ST    RGD,B12(RGG)                                    @YL026UD 46850000
         MVC   CHPGB-SVTT(EIGHT,RGG),CCWRCH  MOVE WR CHECK CCW          46900000
         A     RGF,X1000000            INCREMENT R                      46950000
         STM   RGE,RGF,COUNT2-CHPGA2(RGG) STORE COUNT FIELD             47000000
         LA    RGG,EIGHT(RGG)          GO TO NEXT CCW                   47050000
         BCT   RGB,RELOOP1             BRANCH IF ANOTHER CCW            47100000
         NI    CHPGB-CHPGA1+4(RGG),XBF  TURN OFF CMD CHAIN BIT          47150000
         LTR   RGA,RGA                 SEE IF ALL CCW'S FILLED          47200000
         BCR   10,RGRET                BR IF ALL FILLED                 47250000
         MVC   EIGHT(EIGHT,RGG),CHPGB2  MOVE TIC                        47300000
         BR    RGRET                   RETURN TO CALLING CODE.          47350000
         EJECT                                                          47400000
*                                                                       47450000
* EXCP, WAIT, AND I/O ERROR CHECK                                       47500000
*                                                                       47550000
IO       EXCP  FIOB                                                     47600000
         WAIT  1,ECB=FECB                                               47650000
         TM    FECB,X20                CHECK I/O ERROR BIT              47700000
         BCR   1,RGRET                 Q. NO ERROR                      47750000
         LA    R10,B12                 SET I/O ERROR CODE        YM6411 47800000
         B     RETURN2                 RETURN TO CALLER                 47850000
         TITLE 'IGG0CLCF - CONSTANT DEFINITIONS'               @YL026UD 47900000
*                                                                       47950000
* CONSTANTS                                                    @YL026UD 48000000
*                                                                       48050000
         USING EREC,R9                                         @YL026UD 48100000
         DS    0F                                                       48150000
ERCCWR   EQU   *                                                        48200000
         DC    X'0E'                   READ KEY AND DATA                48250000
         DC    AL3(ERKEY-EREC)         POINT TO BUFFER                  48300000
         DC    X'2000'                 SLI                              48350000
         DC    H'12'                   READ 12 BYTES                    48400000
         DS    0F                                                       48450000
ERCCWW   EQU   *                                                        48500000
         DC    X'05'                   WRITE DATA                       48550000
         DC    AL3(0)                  BUFFER PTR SET DURING EXECUTION  48600000
TTRVFST  DS    0XL3                    TTR OF THE FIRST BLOCK OF VI     48650000
         DC    X'0000'                 ALL FLAGS OFF                    48700000
         DC    H'256'                  BYTES WRITTEN                    48750000
*                                                                       48800000
ONEREC   DC    F'256'                  UP TTR0 BY ONE                   48850000
MOVE1    MVC   0(0,OUT),0(IN)                                           48900000
MSG      DC    AL2(81),X'8000'                                 @OZ00006 48950000
         DC    C'IEC302I SYSCTLG I/O ERROR,VVVVVV,'            @OZ00006 49000000
MSGLEN   EQU   *-MSG                   LENGTH OF MSG SKELETON  @OZ00006 49050000
DESCRTE  DC    X'10004040'             SYSTEM STATUS,SYSTEM    @OZ00006 49100000
*                                      ERROR/MAINTENANCE,      @OZ00006 49150000
*                                      MASTER CONSOLE INFOR-   @OZ00006 49200000
*                                      MATIONAL                @OZ00006 49250000
         DS    0H                                              @OZ00006 49300000
MOVENAM2 MVC   OUTPUT+MSGLEN(0),0(R14)   OBJECT OF EXECUTE     @OZ00006 49350000
MOVENAME MVC   ERNAME(0),0(R14)                                         49400000
         DROP  R9                                              #YL026UD 49450000
*                                                                       49500000
SYSCTLG  DC    C'SYSCTLG '             DATA SET NAME.                   49550000
HIKEY    DC    X'FFFFFFFFFFFFFFFF'     HIGHEST POSSIBLE KEY.            49600000
         DC    HL2'36'                 COUNT CONSTANT.                  49650000
         DS    0F                      FILLER.                          49700000
X10000   DC    X'00010000'             TTR STEP CONSTANT.               49750000
X080100  DC    X'00080100'             KEY AND DATA LENGTH CONSTANT.    49800000
X1000000 DC    X'01000000'             R INCREMENT VALUE.               49850000
RPSID    DC    C'RPSA'                 ID OF RPS SIO APPENDAGE.         49900000
*                                                                       49950000
SPBYTES  DS    0F                 GET SP 253 PARAMETER WORD.            50000000
         DC    AL1(253)           SUBPOOL NUMBER.                       50050000
         DC    AL3(AREAEND1-AREADCB) NUMBER OF BYTES.          @OZ15077 50100008
XTBYTES  DC    AL1(230)           SUBPOOL NUMBER               @Z40CSRC 50150008
         DC    AL3(DSEXTEND-AREADCB) LEN OF EXTEND WORK AREA   @Z40CSRC 50200008
FDEBAD   DS    0F                 ARITHMETIC CONSTANT EQUAL TO          50250000
         DC    X'F1'              2'S COMPL OF PROT TAG, DEB ID AND     50300000
         DC    AL3(DEBAD)         DEB ADDR DISPLACEMENT.                50350000
HICCHHNT DC    X'7FFF7FFF7FFF'    HIGH CCHH COUNT.                      50400000
FF       EQU   HICCHHNT+1         EQUATES TO A 1 BYTE FF CONSTANT.      50450000
ZEROA    DC    H'00'              A ONE BYTE ZERO CONSTANT.             50500000
XCTLCONX DC    C'IGG0553A'        EXTEND MODULE NAME.                   50550000
EXTMAXCC DC    F'2'               MAXIMUM EXTEND RETURN CODE   @YL026UD 50600000
ABTABLE  EQU   *-240              TR TABLE                     @Y30LSRA 50600203
         DC    C'0123456789ABCDEF'                             @Y30LSRA 50600403
MSSMSG   WTO   'IEC366I JOBNAMED,VOLSER MSS FAILURE DURING ACQUIRE CODE*50600603
               =NNN',DESC=4,ROUTCDE=(2,11),MF=L                @Y30LSRA 50600803
MSSMLEN   EQU   *-MSSMSG          END OF MESSAGE               @Y30LSRA 50601003
*                                                                       50650000
         TITLE 'IGG0CLCF - CHANNEL COMMAND WORD DEFINITIONS'            50700000
*                                                                       50750000
* PATTERN CHANNEL COMMAND WORDS.                                        50800000
*                                                                       50850000
CCW1     CCW   X'31',M2B2C2HR+3-AREADCB,X'40',5 SEARCH EQUAL ID@YL026UD 50900000
CCW2     CCW   X'08',CHPG-AREADCB,0,1          TIC TO CCW1     @YL026UD 50950000
CCW3     CCW   X'06',IECSDSF4-AREADCB,X'60',48 READ VTOC DSCB. @YL026UD 51000000
CCW4     CCW   X'D1',DS4HPCHR-AREADCB,X'40',5  SEARCH HI ID.   @YL026UD 51050000
CCW5     CCW   X'08',CHPG+48-AREADCB,0,1       TIC TO CCW7.    @YL026UD 51100000
CCW6     CCW   X'03',0,0,1                   CONTROL NOP.               51150000
CCW7     CCW   X'29',DS1DSNAM-AREADCB,X'60',44 SEARCH KEY EQUAL@YL026UD 51200000
CCW8     CCW   X'08',CHPG+24-AREADCB,0,1       TIC TO CCW4.    @YL026UD 51250000
CCW9     CCW   X'06',DS1FMTID-AREADCB,X'40',96 RD SYSCTLG DSCB @YL026UD 51300000
CCW10    CCW   X'12',COUNT-AREADCB,0,8         READ COUNT.     @YL026UD 51350000
CCWRDKD  CCW   X'0E',DSCBK-AREADCB,0,140       READ KEY & DATA @YL026UD 51400000
*                                                                       51450000
CCWSID   CCW   X'31',MBBCCHHR+3-WKAREA,X'40',5 SEARCH ID                51500000
         DC    X'0800000000000000'     TIC                              51550000
CCWWR    CCW   X'1D',COUNT2-CHPGA2,X'60',8 WRITE CKD, SLI               51600000
CCWRCH   CCW   X'1E',0,X'50',272       READ CKD, SKIP                   51650000
READVTOC CCW   X'29',D1SDSNAM-WKAREA,X'60',44 SEARCH KEY EQUAL          51700000
         CCW   X'08',CHPGA-WKAREA,0,1    TIC                            51750000
         CCW   X'06',D1SFMTID-WKAREA,0,96 READ DATA                     51800000
WRVTOC   CCW   X'05',D1SFMTID-WKAREA,X'40',96 WRITE DATA                51850000
         CCW   X'29',D1SDSNAM-WKAREA,X'60',44 SEARCH KEY EQUAL          51900000
         CCW   X'08',CHPGA4-WKAREA,0,1 TIC                              51950000
         CCW   X'06',0,X'10',96        CHECK DATA                       52000000
CCWRD    CCW   X'06',BLOCK-WKAREA,X'00',256 READ DATA           SA50973 52050000
CCWWDOP  EQU   X'05'                   WRITE DATA OP CODE       SA50973 52100000
CCWOPTN1 EQU   X'30'                   NO TRANSFER, SILI        SA50973 52150000
CCWOPTN2 EQU   X'40'                   COMMAND CHAIN            SA50973 52200000
*                                                              @YL026UD 52250000
*                                                              @YL026UD 52300000
*      MODULE PATCH AREA (MAINTENANCE AREA)                    @YL026UD 52350000
*                                                              @YL026UD 52400000
FIXAREA  DC    100X'00'                                        @YL026UD 52450000
*                                                              @YL026UD 52500000
         TITLE 'IGG0CLCF - CONSTANT EQUATE DEFINITIONS'                 52550000
*                                                                       52600000
*      CONSTANT EQUATES                                                 52650000
*                                                                       52700000
VICETYP  EQU   5                       VICE TYPE CODE                   52750000
ICETYP   EQU   3                       ICE TYPE CODE                    52800000
ILETYP   EQU   0                       ILE TYPE CODE                    52850000
IPETYP   EQU   0                       IPE TYPE CODE                    52900000
DSPETYP  EQU   7                       OR MORE, FOR DSPE TYPE CODE      52950000
VCBPETYP EQU   1                       VCBPE TYPE CODE                  53000000
OCVOLTYP EQU   3                       OLD CVOL TYPE CODE               53050000
NCVOLTYP EQU   5                       NEW CVOL TYPE CODE               53100000
ALIASTYP EQU   4                       ALIAS TYPE CODE                  53150000
GIPETYP  EQU   2                       GIPE TYPE CODE                   53200000
ERROR00  EQU   0                                                        53250000
ERROR04  EQU   4                                                        53300000
ERROR08  EQU   8                                                        53350000
ERROR12  EQU   12                                                       53400000
ERROR16  EQU   16                                                       53450000
ERROR20  EQU   20                                                       53500000
ERROR24  EQU   24                                                       53550000
ERROR28  EQU   28                                                       53600000
ERROR32  EQU   32                                                       53650000
ERROR72  EQU   72                                                       53700000
*********************************************************************** 53750000
*      CHARACTER CODE DEPENDENT CONSTANTS                               53800000
*********************************************************************** 53850000
CCDBLANK EQU   C' '                                                     53900000
CCDRPARN EQU   C')'                                                     53950000
CCDMINUS EQU   C'-'                                                     54000000
CCDPLUS  EQU   C'+'                                                     54050000
CCD0     EQU   C'0'                                                     54100000
CCDG     EQU   C'G'                                                     54150000
CCDV     EQU   C'V'                                                     54200000
CCDPERD  EQU   C'.'                                                     54250000
CCDLPARN EQU   C'('                                                     54300000
*********************************************************************** 54350000
*                                                                       54400000
* MISCELLANEOUS EQUATES USED .                                          54450000
*                                                                       54500000
ONE      EQU   1                       A ONE CONSTANT.                  54550000
TWO      EQU   2                       A TWO CONSTANT.                  54600000
THREE    EQU   3                       A THREE CONSTANT.                54650000
FOUR     EQU   4                       A FOUR CONSTANT.                 54700000
SIX      EQU   6                       A SIX CONSTANT          @Y30LSRA 54701003
EIGHT    EQU   8                       AN EIGHT CONSTANT.               54750000
TEN      EQU   10                      A TEN CONSTANT.                  54800000
TWELVE   EQU   12                      A TWELVE CONSTANT.               54850000
NINTY    EQU   90                      DSCB MOVE LENGTH.                54900000
B12      EQU   12                      BINARY 12                        54950000
B14      EQU   14                      BINARY 14                        55000000
B15      EQU   15                      BINARY 15.                       55050000
B22      EQU   22                      BINARY 22                        55100000
B24      EQU   24                      BINARY 24                        55150000
B26      EQU   26                      BINARY 26                        55200000
B36      EQU   36                      BINARY 36                        55250000
B40      EQU   40                      BINARY 40 EQUATE.                55300000
B100     EQU   100                     BINARY 100                       55350000
B105     EQU   105                     BINARY 105                       55400000
B184     EQU   184                     BINARY 184                       55450000
B253     EQU   253                     SUBPOOL 253 CONSTANT.            55500000
RPSIDLOC EQU   62                      OFFSET TO RPS ID          XM2100 55550000
X00      EQU   X'00'                   HEX 00                           55600000
X01      EQU   X'01'                   HEX 01                           55650000
X0D      EQU   X'0D'                   HEX 0D                           55700000
X0E      EQU   X'0E'                   HEX 0E                           55750000
X10      EQU   X'10'                   HEX 10                           55800000
X12      EQU   X'12'                   HEX 12                           55850000
X14      EQU   X'14'                   HEX 14                           55900000
X18      EQU   X'18'                   HEX 18                           55950000
X20      EQU   X'20'                   HEX 20                           56000000
X42      EQU   X'42'                   HEX 42                           56050000
X7F      EQU   X'7F'                   HEX 7F                           56100000
X81      EQU   X'81'                   HEX 81                           56150000
XBF      EQU   X'BF'                   HEX BF                           56200000
XFF      EQU   X'FF'                   HEX FF                           56250000
X100     EQU   X'100'                  HEX 100                          56300000
X105     EQU   X'105'                  HEX 105                          56350000
X0100    EQU   X'0100'                 HEX 0100                         56400000
DEBAD    EQU   44                      DEB POINTER IN DCB               56450000
WASZ     EQU   128                     SIZE OF RPS WORK AREA.           56500000
AVTSV    EQU   120                     DISP TO AVT PTR IN RPSWA.        56550000
DEBAPDS  EQU   28                      APPNDG. PTR DISP. IN DEB.        56600000
FMWAL    EQU   512                     FORMAT WORKAREA LENGTH.          56650000
*                                                                       56700000
CODPERD  EQU   4                                                        56750000
CODBLANK EQU   8                                                        56800000
CODPARN  EQU   12                                                       56850000
CLC1     EQU   C'1'                                                     56900000
CLC2     EQU   C'2'                                                     56950000
CLC3     EQU   C'3'                                                     57000000
CLC4     EQU   C'4'                                                     57050000
CLC5     EQU   C'5'                                                     57100000
CLC6     EQU   C'6'                                                     57150000
CLC7     EQU   C'7'                                                     57200000
FREEMAIN EQU   10                                                       57250000
*                                                                       57300000
CC       EQU   X'40'                   COMMAND CHAIN                    57350000
SLACK    EQU   32                      MAXIMUM NUMBER OF UNUSED BYTES   57400000
*                                      ALLOWED IN A CATALOG INDEX BLOCK 57450000
SILI     EQU   X'20'                   SUPPRESS INCORRECT LENGTH        57500000
*                                                                       57550000
D0       EQU   0                  DISPLACEMENT OF ZERO         @Y30LSRA 57551003
D01      EQU   1                                                        57600000
D2       EQU   2                  DISPLACEMENT OF TWO          @Y30LSRA 57601003
D3       EQU   3                  DISPLACEMENT OF THREE        @Y30LSRA 57602003
D4       EQU   4                  DISPLACEMENT OF FOUR         @Y30LSRA 57603003
D6       EQU   6                  DISPLACEMENT OF SIX          @Y30LSRA 57604003
D7       EQU   7                  DISPLACEMENT OF SEVEN        @Y30LSRA 57605003
D8       EQU   8                  DISPLACEMENT OF EIGHT        @Y30LSRA 57606003
D12      EQU   12                                                       57650000
D16      EQU   16                                                       57700000
D21      EQU   21                 DISPLACEMENT OF 21           @Y30LSRA 57700203
D23      EQU   23                 DISPLACEMENT OF 23           @Y30LSRA 57700403
D24      EQU   24                 DISPLACEMENT OF 24           @Y30LSRA 57700603
D26      EQU   26                 DISPLACEMENT OF 26           @Y30LSRA 57700803
D28      EQU   28                 DISPLACEMENT OF TWENTY-EIGHT @Y30LSRA 57701003
D51      EQU   51                 DISPLACEMENT OF 51           @Y30LSRA 57701203
D60      EQU   60                 DISPLACEMENT OF 60           @Y30LSRA 57701403
D62      EQU   62                 DISPLACEMENT OF 62           @Y30LSRA 57701603
D92      EQU   92                 DISPLACEMENT OF 92           @Y30LSRA 57701803
L1       EQU   1                  LENGTH OF ONE                @Y30LSRA 57702003
L2       EQU   2                  LENGTH OF TWO                @Y30LSRA 57703003
L3       EQU   3                  LENGTH OF THREE              @Y30LSRA 57703203
L6       EQU   6                  LENGTH OF SIX                @Y30LSRA 57704003
L8       EQU   8                  LENGTH OF EIGHT              @Y30LSRA 57705003
L11      EQU   11                 LENGTH OF ELEVEN             @Y30LSRA 57705203
L96      EQU   96                 LENGTH OF NINETY-SIX         @Y30LSRA 57706003
L100     EQU   100                LENGTH OF ONE HUNDRED        @Y30LSRA 57707003
BLANK    EQU   C' '               BLANK                        @Y30LSRA 57707203
DECZERO  EQU   X'F0'              DECIMAL ZERO                 @Y30LSRA 57707403
VIRTDASD EQU   X'08'              VIRTUAL DASD                 @Y30LSRA 57708003
ACQOP    EQU   X'02'              ICBACREL ACQUIRE OP CODE     @OZ25613 57728037
         TITLE 'IGG0CLCF - REGISTER EQUATE DEFINITIONS'                 57750000
*                                                                       57800000
* THE FOLLOWING ARE REGISTER EQUATES USED IN THIS PROGRAM.              57850000
*                                                                       57900000
R0       EQU   0                       REGISTER 0                       57950000
R1       EQU   1                       REGISTER 1                       58000000
R2       EQU   2                       REGISTER 2                       58050000
R3       EQU   3                       REGISTER 3                       58100000
R4       EQU   4                       REGISTER 4                       58150000
R5       EQU   5                       REGISTER 5                       58200000
R6       EQU   6                       REGISTER 6                       58250000
R7       EQU   7                       REGISTER 7                       58300000
R8       EQU   8                       REGISTER 8                       58350000
R9       EQU   9                       REGISTER 9                       58400000
R10      EQU   10                      REGISTER 10                      58450000
R11      EQU   11                      REGISTER 11                      58500000
R12      EQU   12                      REGISTER 12                      58550000
R13      EQU   13                      REGISTER 13                      58600000
R14      EQU   14                      REGISTER 14                      58650000
R15      EQU   15                      REGISTER 15                      58700000
RGA      EQU   2                       REGISTER 2                       58750000
RGB      EQU   3                       REGISTER 3                       58800000
RGC      EQU   4                       REGISTER 4                       58850000
RGD      EQU   5                       REGISTER 5                       58900000
RGE      EQU   6                       REGISTER 6                       58950000
RGF      EQU   7                       REGISTER 7                       59000000
RGG      EQU   8                       REGISTER 8                       59050000
RGH      EQU   9                       REGISTER 9                       59100000
RGBASE   EQU   4                       BASE REGISTER           @YL026UD 59150000
RGDQTY   EQU   10                      DIRECTORY QUANTITY               59200000
RGTTR    EQU   11                      RELATIVE TRACK COUNTER           59250000
RGAREA   EQU   13                      WORK AREA ADDRESS                59300000
RGRET    EQU   14                      RETURN REGISTER                  59350000
*                                                                       59400000
BALREG1  EQU   R14                                                      59450000
BALREG2  EQU   R12                                                      59500000
BASE     EQU   R4                                                       59550000
*                                                                       59600000
BALREG3  EQU   R11                                                      59650000
BALREG4  EQU   R3                                                       59700000
*                                                                       59750000
IN       EQU   R9                                                       59800000
OUT      EQU   R7                                                       59850000
LENGTH   EQU   R5                                                       59900000
NEXTTTR  EQU   R10                                                      59950000
*                                                                       60000000
RFKEY    EQU   0                  INPUT FUNCTION REQUEST KEY.           60050000
RPARM    EQU   1                  INPUT PARAMETER REGISTER.             60100000
RCVT     EQU   3                  CVT BASE REGISTER.                    60150000
RBASE    EQU   4                  BASE REGISTER.               @YL026UD 60200000
RCWA     EQU   6                  CATALOG WORK AREA BASE.               60250000
RGAREA2  EQU   8                  SECONDARY DCB BASE REGISTER.          60300000
RGAREA3  EQU   9                  TERTIARY DCB BASE REGISTER.           60350000
RFKEYA   EQU   10                 POSSIBLE TTR KEY FROM EXTEND.         60400000
RUCB     EQU   11                 UCB BASE REGISTER.                    60450000
RBR      EQU   15                 RETURN CODE REGISTER.                 60500000
*                                                                       60550000
         SPACE                                                          60600000
*                                                                       60650000
**********************************************************************  60700000
*                                                                       60750000
* END OF THE IGG0CLCF CSECT.                                            60800000
*                                                                       60850000
FMTSIZE  EQU   *                       EQUATE TO LAST BYTE OF CSECT.    60900000
MAXSIZE  EQU   IGG0CLCF+X'1000'        MAXIMUM ALLOWABLE LENGTH.        60950000
AVAILABL EQU   MAXSIZE-FMTSIZE         FREE SPACE REMAINING.            61000000
*                                                                       61050000
**********************************************************************  61100000
*                                                                       61150000
         TITLE 'IGG0CLCF - CATALOG WORKAREA DSECT'                      61200000
*                                                                       61250000
*      DSECTS                                                           61300000
*                                                                       61350000
         WORKAREA LIST=NO                                               61400000
         TITLE 'IGG0CLCF - ENVIRONMENT RECORD DSECT'                    61450000
EREC     DSECT                         ENVIRONMENT RECORD               61500000
ERCTR    DS    F                       RESERVED                         61550000
ERES1    DS    1F                      RESERVED                         61600000
ERTIME   DS    2F                      TIME AND DATE                    61650000
ERCAMLST DS    1F                      CAMLST OPTION BYTES              61700000
ERMODMAP DS    XL1                     MODULE MAP                       61750000
ERFLG12  DS    XL2                     FLAG1 AND FLAG2                  61800000
ERFLAG3  DS    XL1                     FLAG3                            61850000
ERERRCOD DS    XL2                     CATALOG AND LOCATE ERROR CODES   61900000
ERNAMTTR DS    XL14                    CURRENT LEVEL NAME               61950000
EREGSAV  DS    15F                     REGS 1 THROUGH 14                62000000
ERWA1    DS    XL28                    TTRS IN WORKAREA                 62050000
         ORG   ERWA1                   OVERLAY 12 BYTES 'ERWA1' SA52063 62100000
ERKEY    DS    CL8                     KEY FIELD                SA52063 62150000
EROCTR   DS    CL4                     OLD COUNT                SA52063 62200000
         ORG                                                            62250000
ERINPUT  DS    XL18                    FIRST 18 BYTES OF 'INPUT'        62300000
EROUTPUT DS    XL18                    FIRST 18 BYTES OF 'OUTPUT'       62350000
EROPTNCC DS    XL8                     'OPTNCCW'--INDICATES LAST I/O    62400000
ERIOB    DS    XL40                    IOB                              62450000
ERNAME   DS    CL44                    FULL GIVEN NAME                  62500000
ERBUFF   EQU   ERWA1                   READ BUFFER                      62550000
         TITLE 'IGG0CLCF - FORMAT WORKAREA DSECT'                       62600000
*                                                                       62650000
* THIS DSECT DEFINES THE WORK AREA PASSED TO THE FORMAT ROUTINE.        62700000
*                                                                       62750000
         SPACE                                                          62800000
WKAREA   DSECT                                                          62850000
FSVAREA  DS    0F                      REG SAVE AREA.                   62900000
SVBLKS   DS    F                       NUMBER OF BLOCKS FOR DIRECTORY   62950000
SVDCB    DS    F                       DCB ADDRESS                      63000000
SVBLPTK  DS    F                       NUMBER OF BLOCKS PER TRACK       63050000
SVBYTES  DS    F                       NUMBER OF BYTES IN WORK AREA     63100000
SVADDR   DS    F                       ADDRESS OF WORK AREA             63150000
SVCNT    DS    F                       DATA MANAGEMENT COUNT            63200000
SVTT     DS    F                       STARTING RELATIVE TRACK ADDRESS  63250000
CHPGA    DS    0D                      WRITE CHANNEL PROGRAM            63300000
CHPGA1   DS    D                       CCW 1.                           63350000
CHPGA2   DS    D                       CCW 2.                           63400000
CHPGA3   DS    D                       CCW 3.                           63450000
CHPGA4   DS    D                       CCW 4.                           63500000
CHPGA5   DS    D                       CCW 5.                           63550000
CHPGA6   DS    D                       CCW 6.                           63600000
CHPGA7   DS    D                       CCW 7.                           63650000
CHPGA8   DS    D                       CCW 8.                           63700000
CHPGA9   DS    D                       CCW 9.                           63750000
CHPGA10  DS    D                       CCW 10.                          63800000
CHPGA11  DS    D                       CCW 11.                          63850000
CHPGA12  DS    D                       CCW 12.                          63900000
CHPGA13  DS    D                       CCW 13.                          63950000
CHPGA14  DS    D                       CCW 14.                          64000000
CHPGA15  DS    D                       CCW 15.                          64050000
CHPGA16  DS    D                       CCW 16.                          64100000
CHPGA17  DS    D                       CCW 17.                          64150000
CHPGB    DS    0D                      READ CHANNEL PROGRAM             64200000
CHPGB1   DS    D                       CCW 1.                           64250000
CHPGB2   DS    D                       CCW 2.                           64300000
CHPGB3   DS    D                       CCW 3.                           64350000
CHPGB4   DS    D                       CCW 4.                           64400000
CHPGB5   DS    D                       CCW 5.                           64450000
CHPGB6   DS    D                       CCW 6.                           64500000
CHPGB7   DS    D                       CCW 7.                           64550000
CHPGB8   DS    D                       CCW 8.                           64600000
CHPGB9   DS    D                       CCW 9.                           64650000
CHPGB10  DS    D                       CCW 10.                          64700000
CHPGB11  DS    D                       CCW 11.                          64750000
CHPGB12  DS    D                       CCW 12.                          64800000
CHPGB13  DS    D                       CCW 13.                          64850000
CHPGB14  DS    D                       CCW 14.                          64900000
CHPGB15  DS    D                       CCW 15.                          64950000
CHPGB16  DS    D                       CCW 16.                          65000000
CHPGB17  DS    D                       CCW 17.                          65050000
         EJECT                                                          65100000
         ORG   CHPGA6                  OVERLAY CHPGA AND B      SA50973 65150000
BLOCK    DS    0CL256                  BUFFER                   SA50973 65200000
         DS    XL2                     FILLER, 'BYTES USED'     SA50973 65250000
         DS    XL12                    FILLER, FRST PART 'VICE' SA50973 65300000
UPLSTBLK DS    XL2                     FRST 2 BYTES 'VCLSTBLK'  SA50973 65350000
         ORG                                                            65400000
COUNT2   DS    0D                      DIRECTORY CONTROL BLOCK          65450000
CTKEY    DS    CL8                     KEY OF DIR BLOCK.                65500000
CTCOUNT  DS    CL2                     COUNT OF DIRECTORY BLOCK.        65550000
CTDIR    DS    CL7                     FILLER.                          65600000
CTLBK    DS    CL1                     LOW ORDER OF NAME.               65650000
         DS    CL2                     FILLER.                          65700000
CTTTRC   DS    CL2                     TTRC                             65750000
CTHITT   DS    CL2                     HI TT.                           65800000
CTHIR    DS    CL1                     HI R.                            65850000
         DS    CL3                     FILLER.                          65900000
CTNABTR  DS    CL1                     NEXT AVAILABLE BLOCK TTR.        65950000
         DS    CL2                     FILLER.                          66000000
CTNBLB   DS    CL1                     BYTES IN LAST BLOCK.             66050000
CTHIENT  DS    CL8                     HI ENTRY.                        66100000
         DS    CL72                    FILLER.                          66150000
HICOUNT  DS    D                       LAST RELATIVE TRACK              66200000
FECB     DS    F                       EVENT CONTROL BLOCK              66250000
FIOB     DS    8F                      INPUT OUTPUT BLOCK               66300000
MBBCCHHR DS    CL8                     SEEK ADDRESS                     66350000
BPAMDIR  DS    0X                      BDAM DIRECTORY                   66400000
BPDCNT   DS    CL8                     BPAM DIR COUNT.                  66450000
BPDHIK   DS    CL9                     BPAM DIR HI KEY.                 66500000
BPDBPB   DS    CL1                     BPAM DIR BYTES PER BLOCK.        66550000
BPDHIE   DS    CL8                     BPAM DIR HI ENTRY.               66600000
         ORG   COUNT2-148              ORG EXTEND SAVE AREA.            66650000
EXTSAVE  DS    CL8                     FIRST EXTENT OF DEB              66700000
*                                                                       66750000
*      FORMAT 1 DSCB                                                    66800000
*                                                                       66850000
D1SDSNAM DS    CL44                    DATA SET NAME                    66900000
D1SFMTID DS    CL1                     FORMAT IDENTIFIER                66950000
D1SDSSN  DS    CL6                     DATA SET SERIAL NUMBER           67000000
D1SVOLSQ DS    XL2                     VOLUME SEQUENCE NUMBER           67050000
D1SCREDT DS    XL3                     CREATION DATE                    67100000
D1SEXPDT DS    XL3                     EXPIRATION DATE                  67150000
D1SNOEPV DS    XL1                     NUMBER OF EXTENTS ON VOLUME      67200000
D1SNOBDB DS    XL1                     NUMBER OF BYTES USED IN LAST     67250000
*                                         DIRECTORY BLOCK               67300000
         DS    XL1                     RESERVED                         67350000
D1SSYSCD DS    CL13                    SYSTEM CODE                      67400000
         DS    XL7                     RESERVED                         67450000
D1SDSORG DS    XL2                     DATA SET ORGANIZATION            67500000
D1SRECFM DS    XL1                     RECORD FORMAT                    67550000
D1SOPTCD DS    XL1                     OPTION CODE                      67600000
D1SBLKL  DS    XL2                     BLOCK LENGTH                     67650000
D1SLRECL DS    XL2                     RECORD LENGTH                    67700000
D1SKEYL  DS    XL1                     KEY LENGTH                       67750000
D1SRKP   DS    XL2                     RELATIVE KEY POSITION            67800000
D1SDSIND DS    XL1                     DATA SET INDICATORS              67850000
D1SSCALO DS    XL4                     SECONDARY ALLOCATION             67900000
D1SLSTAR DS    XL3                     LAST USED TRACK AND BLOCK        67950000
D1STRBAL DS    XL2                     BYTES REMAINING ON LAST TRACK    68000000
         DS    XL2                     RESERVED                         68050000
D1SEXT1  DS    XL10                    FIRST EXTENT DESCRIPTION         68100000
*        FIRST BYTE                    EXTENT TYPE INDICATOR            68150000
*        SECOND BYTE                   EXTENT SEQUENCE NUMBER           68200000
*        THIRD - SIXTH BYTES           LOWER LIMIT                      68250000
*        SEVENTH - TENTH BYTES         UPPER LIMIT                      68300000
D1SEXT2  DS    XL10                    SECOND EXTENT DESCRIPTION        68350000
D1SEXT3  DS    XL10                    THIRD EXTENT DESCRIPTION         68400000
D1SPTRDS DS    XL5                     POSSIBLE POINTER TO A FORMAT     68450000
*                                         2 OR 3 DSCB                   68500000
D1SEND   EQU   *                                                        68550000
         TITLE 'IGG0CLCF - COMMUNICATION VECTOR TABLE DSECT'            68600000
*                                                                       68650000
*COMMUNICATION VECTOR TABLE DEFINITION                                  68700000
*                                                                       68750000
CVT      DSECT                                                          68800000
         CVT   SYS=MIN                                                  68850000
         TITLE 'IGG0CLCF - DCB/DEB AREA DSECT'                          68900000
*                                                                       68950000
* THIS DSECT DESCRIBES THE DCB/DEB AREA.                                69000000
*                                                                       69050000
AREADCB  DSECT                                                          69100000
         DS    6F                 DCB AREA FILLER.                      69150000
DAREA    DS    0F                 WORK AREA REFERENCE.                  69200000
NUMBYTES DS    F                  NUMBER OF BYTES.                      69250000
DSCBTRK  DS    F                  CC HH OF SYSCTLG DSCB.                69300000
CATWKAP  DS    1F                 CATALOG WORKAREA ADDRESS     @YL026UD 69350000
BLDLP    DS    1F                 BLDL    WORKAREA ADDRESS     @YL026UD 69400000
DEB      DS    0F                 START OF THE DEB.                     69450000
DEBTCBAD DS    F                  TCB ADDRESS.                          69500000
DEBAMIND DS    0X                 AM INDICATOR.                         69550000
DEBDEBAD DS    F                  NEXT DEB ADDRESS.                     69600000
         DS    2F                 IRB AND SYS PURGE CHAIN.              69650000
DEBNMEXT DS    0X                 NO OF EXTENTS.                        69700000
         DS    2F                 USER PURGE AND PURGE ECB ADDR.        69750000
DEBDCBAD DS    F                  DCB ADDRESS.                          69800000
DEBAPPAD DS    F                  APPENDAGE VECTOR TABLE ADDRESS.       69850000
DEBDVMOD DS    0X                 DEBICE MODIFIER MASK.                 69900000
DEBUCBAD DS    F                  UCB ADDRESS.                          69950000
DEBBINUM DS    H                  BIN NUMBER.                           70000000
DEBSTRCH DS    0CL8               START/END CCHH.                       70050000
DEBSTRCC DS    H                  START CYLINDER.                       70100000
DEBSTRHH DS    H                  START HEAD.                           70150000
DEBENDCC DS    H                  END CYLINDER.                         70200000
DEBENDHH DS    H                  END HEAD.                             70250000
DEBNMTRK DS    H                  NUMBER OF TRACKS.                     70300000
EXTL     EQU   16                 LENGTH OF AN EXTENT ENTRY.            70350000
MAXEL    EQU   256                MAXIMUM EXTENT AREA LENGTH.           70400000
DEBEND   EQU   *                                                        70450000
DEBL     EQU   DEBEND-DEB         DEB LENGTH.                           70500000
         EJECT                                                          70550000
*                                                                       70600000
* FORMAT 4 DSCB DEFINITION.                                             70650000
*                                                                       70700000
         SPACE                                                          70750000
         IECSDSL1 (4)                                                   70800000
DS1RACDF EQU   X'40'              DATA SET IS RACF DEFINED     @Z40CSRC 70810008
*                                 (IN BYTE DS1DSIND)           @Z40CSRC 70820008
         ORG   IECSDSF4+48        ORG TO CCW AREA.                      70850000
CHPG     DS    2D                 CHANNEL PROGRAM RELOCATE AREA.        70900000
CHPGAA   DS    2D                 CHANNEL PROGRAM RELOCATE AREA.        70950000
CHPGBB   DS    2D                 CHANNEL PROGRAM RELOCATE AREA         71000000
CHPGCC   DS    2D                 CHANNEL PROGRAM RELOCATE AREA         71050000
CHPGDD   DS    2D                 CHANNEL PROGRAM RELOCATE AREA         71100000
AECB     DS    F                  EVENT CONTROL BLOCK.                  71150000
AIOB     DS    8F                 I/O CONTROL BLOCK.                    71200000
M2B2C2HR DS    CL8                SEEK ADDRESS IN THE IOB.              71250000
CCHHR    EQU   M2B2C2HR+3         CHANNEL-HEAD ADDRESS.                 71300000
CCHHRL   EQU   5                  LENGTH OF CCHHR.                      71350000
DSCBK    DS    CL44               DATA SET NAME AREA.                   71400000
DSCBK4   EQU   DSCBK+4            FOUR BYTES OFF DSCBK                  71450000
DSCBD    EQU   DSCBK+44           FOURTY FOUR BYTES OFF DSCBK           71500000
*                                                                       71550000
* FORMAT 1 DSCB DEFINITION.                                             71600000
*                                                                       71650000
         SPACE                                                          71700000
         ORG   DSCBK              ORG COUNT AREA.                       71750000
         IECSDSL1 (1)                                                   71800000
COUNT    DS    CL8                SYSCTLG DSCB DISK ADDR/               71850000
COUNTA   EQU   COUNT+4                                                  71900000
*                                 WORKAREA FOR CONVERT ROUTINE.         71950000
REGSAVE  DS    1F                 REGISTER SAVE AREA                    72000000
REGS2    DS    1F                 REGISTER SAVE AREA.                   72050000
REGS3    DS    1F                 REGISTER SAVE AREA                    72100000
REGS4    DS    1F                 REGISTER SAVE AREA.                   72150000
REGS5    DS    1F                 REGISTER SAVE AREA.                   72200000
REGS6    DS    1F                 REGISTER SAVE AREA.                   72250000
NUMUCB   DS    H                  NUMBER OF UCB'S.                      72300000
SWL      EQU   6                  LENGTH OF SWITCH AREA.                72350000
FMTSW    DS    X                  COUNT OF BLOCK TRACK.                 72400000
EXTDSW   DS    X                  EXTEND COUNTER.                       72450000
EXTDTT   DS    F                  RELATIVE TRACK ADDRESS.               72500000
AREAEND2 DS    0D                 USED TO DETERMINE NUMBER BYTES.       72550000
EXTDRGSV DS    2F                 REGISTER SAVE AREA.                   72600000
*                                                                       72650000
* EXTEND WORK AREA DEFINITION.                                          72700000
*                                                                       72750000
         ORG   DAREA              ORG TO EXTEND AREA.                   72800000
EXTDAREA DS    0F                                                       72850000
         IECDSECT                                                       72900000
DSVSVRB  DS    CL(L'SVRBEXT)      TO SAVE RBEXSAVE             @Z40CSRC 72905008
DSVEXTNT DS    CL10               DEB EXTENT SAVE AREA         @Z40CSRC 72925008
DSEXTEND DS    0D                 END OF EXTEND WORK AREA      @Z40CSRC 72945008
AREAEND1 EQU   DSEXTEND           END OF OPEN WORKAREA         @OZ15077 72947008
         TITLE 'IGG0CLCF - UNIT CONTROL BLOCK DSECT'                    72950000
*                                                                       73000000
* THIS IS THE UCB DEFINITION DSECT.                                     73050000
*                                                                       73100000
         SPACE                                                          73150000
UCB      DSECT                                                          73200000
         IEFUCBOB                                                       73250000
         TITLE 'IGG0CLCF - SYSCTLG OPEN, EXTEND, FORMAT'       @Z40CSRC 73255008
         IHAPSA                                                @Z40CSRC 73260008
         IHARB                                                 @Z40CSRC 73265008
         IKJTCB                                                @Z40CSRC 73270008
         END   IGG0CLCF                                                 73300000
./  ADD  SSI=72940148,NAME=IGG026DU
        TITLE '*****  IGG026DU    CATALOG CONTROLLER 3 DUMMY MODULE'    00050060
IGG026DU CSECT                                                          00100060
**********************************************************************  00150060
*                                                                    *  00200060
*        MODULE NAME - IGG026DU                                      *  00250060
*                                                                    *  00300060
*        DESCRIPTIVE NAME - CATALOG CONTROLLER LEVEL 3 DUMMY MODULE  *  00350060
*                                                                    *  00400060
*        COPYRIGHT - NONE                                            *  00450060
*                                                                    *  00500060
*        STATUS - VS/2 RELEASE 3.7                                   *  00550060
*                                                                    *  00600060
*        FUNCTION                                                    *  00650060
*          THIS MODULE IS THE FIRST LOAD OF SVC 26 (CATALOG          *  00700060
*          MANAGEMENT). IT IS A DUMMY CSECT WHICH IMMEDIATELY PASSES *  00750060
*          CONTROL TO CATALOG MODULE IGC0002F WITHOUT CHANGING ANY   *  00800060
*          REGISTERS EXCEPT REGISTER 15.                             *  00850060
*                                                                    *  00900060
*          THIS CSECT MAY BE REPLACED BY A USER WRITTEN ROUTINE      *  00950060
*          IF DESIRED TO PERFORM PROCESSING BEFORE OR AFTER THE      *  01000060
*          SYSTEM CATALOG ROUTINES RECEIVE CONTROL.                  *  01050060
*                                                                    *  01100060
*          ANY USER WRITTEN ROUTINE WHICH REPLACES THIS CSECT MUST   *  01150060
*          BE RE-ENTRANT AND PASS CONTROL TO THE FIRST CATALOG       *  01200060
*          MODULE IGC0002F WITH THE REGISTER CONTENTS CONFORMING     *  01250060
*          TO STANDARD SVC ROUTINE CONVENTIONS. REGISTER 1 MUST      *  01300060
*          CONTAIN THE ADDRESS OF THE CATALOG PARAMETER LIST.        *  01350060
*                                                                    *  01400060
*          IF THE USER WRITTEN ROUTINE NEEDS TO SAVE REGISTERS,      *  01450060
*          IT MUST PROVIDE A RE-ENTRANT SAVE AREA TO SAVE AND        *  01500060
*          RESTORE ITS REGISTERS.  THE SVRB SAVE AREA SHOULD NOT     *  01550060
*          BE USED SINCE IT IS USED BY THE CATALOG ROUTINES.         *  01600060
*                                                                    *  01650060
*          DEPENDENCIES - EBCDIC CHARACTER CODE DEPENDENCIES - THIS  *  01700060
*                         MODULE MUST BE COMPILED AND EXECUTED ON    *  01750060
*                         A MACHINE WITH AN EBCDIC CHARACTER SET.    *  01800060
*                                                                       01850060
*                                                                    *  01900060
*          RESTRICTIONS - NONE                                       *  01950060
*                                                                    *  02000060
*          REGISTER CONVENTIONS -                                    *  02050060
*            UPON ENTRY TO IGG026DU:                                 *  02100060
*              R1 = CATALOG PARAMETER LIST ADDRESS                   *  02150060
*              R3 = POINTER TO CVT                                   *  02200060
*              R4 = POINTER TO TCB                                   *  02250060
*              R5 = POINTER TO SVRB                                  *  02300060
*             R14 = ADDRESS OF EXIT PROLOG                           *  02350060
*                                                                    *  02400060
*        MODULE TYPE - PROCEDURE                                     *  02450060
*                                                                    *  02500060
*          PROCESSOR - ASSEMBLER                                     *  02550060
*                                                                    *  02600060
*          MODULE SIZE - SEE LENGTH PRINTED IN EXTERNAL SYMBOL       *  02650060
*            DICTIONARY IN ASSEMBLY LISTING.                         *  02700060
*                                                                    *  02750060
*          ATTRIBUTES - REENTRANT AND READ-ONLY                      *  02800060
*                                                                    *  02850060
*        ENTRY POINT -                                               *  02900060
*          THE ONLY EXTERNAL ENTRY POINT OF THIS MODULE IS THE       *  02950060
*          MODULE NAME - IGG026DU. INVOKED BY SVC 26.                *  03000060
*                                                                    *  03050060
*          PURPOSE - TO ALLOW A USER WRITTEN ROUTINE TO BE EASILY    *  03100060
*                    PLACED BEFORE THE ENTRY POINT OF CATALOG.       *  03150060
*                                                                    *  03200060
*          LINKAGE - IGG026DU IS THE FIRST LOAD OF SVC 26 AND IS     *  03250060
*                    ENTERED VIA STANDARD LINKAGE CONVENTIONS        *  03300060
*                    WHENEVER SVC 26 IS INVOKED.                     *  03350060
*                                                                    *  03400060
*          INPUT -                                                   *  03450060
*            INPUT IS IN THE FORM OF A CATALOG REQUEST PARAMETER     *  03500060
*            LIST POINTED TO BY REGISTER 1.  THE LIST MAY BE IN THE  *  03550060
*            FORM OF AN OS/VS CAMLST OR A VSAM REQUEST LIST.         *  03600060
*                                                                    *  03650060
*          OUTPUT - REGISTER 15 CONTAINS THE ENTRY POINT ADDRESS OF  *  03700060
*            CATALOG MODULE IGC0002F. REGISTERS 0 - 14 ARE THE SAME  *  03750060
*            AS THEY WERE UPON ENTRY TO IGG026DU.                    *  03800060
*                                                                    *  03850060
*          EXIT NORMAL -                                             *  03900060
*            CONTROL IS PASSED TO THE CATALOG CONTROLLER MODULE      *  03950060
*            IGC0002F.                                               *  04000060
*                                                                    *  04050060
*          EXIT ERROR - NONE                                         *  04100060
*                                                                    *  04150060
*        EXTERNAL REFERENCES - NONE                                  *  04200060
*                                                                    *  04250060
*          DATA SETS - NONE                                          *  04300060
*                                                                    *  04350060
*          DATA AREAS - NONE                                         *  04400060
*                                                                    *  04450060
*        TABLES - NONE                                               *  04500060
*                                                                    *  04550060
*        MACROS - NONE                                               *  04600060
*                                                                    *  04650060
*        CHANGE ACTIVITY -                                           *  04700060
*                                                                    *  04750060
*    MODULE NEW FOR VS2-3.7  SU60                              @G60ASBJ 04800060
*                                                                    *  04850060
**********************************************************************  04900060
*REGISTER USAGE:                                                        04950060
R0       EQU   0                       REGISTER 0 - NOT CHANGED         05000060
R15      EQU   15                      BASE REGISTER - ENTRY POINT ADDR 05020060
         SPACE 3                                                        05040060
         BALR  R15,R0                  INITIALIZE REGISTER 15           05060060
         USING *,R15                   ESTABLISH BASE REGISTER          05080060
         L     R15,IGC0002F            GET ADDRESS OF IGC0002F ENTRY    05150060
         BR    R15                     TRANSFER CONTROL TO IGC0002F     05200060
IGC0002F DC    V(IGC0002F)             ENTRY POINT ADDRESS OF IGC0002F  05250060
         END                                                            05300060
