./  ADD  SSI=40140108,NAME=IASXSD81
         TITLE 'IASXSD81 - EXTERNAL WRITER CLASSNAME SET-UP ROUTINE'    00100002
IASXSD81 CSECT                                                          00200002
*                                                                       00300002
*          RELEASE 21 DELETIONS/CHANGES                                 00400002
* 23808-23814,23868                                              A58681 00500002
* 23712,23720,23978-24098,54850,61459,61475                      A58031 00600002
*0641016692                                                      M3017  00700002
*0641                                                            A53230 00800002
*0641023720,023938                                               A45415 00900002
*0641                                                            A43873 01000002
*0641023087,023093-023096,048140                                 A42459 01100002
*0641020920                                                      A36842 01200002
*          RELEASE 20 DELETIONS/CHANGES                                 01300002
*1045023087-023093                                               S20202 01400002
* 017680,023092,023808-023868,023898,046500-047600               A32047 01500002
* 057204-057364,059400-061080                                    MAPMAC 01600002
*          RELEASE 19 DELETIONS/CHANGES                                 01700002
* 023080,023710,023740-023746,024000                             A27785 01800002
* 013680,017320-017440,017650,017840,023586-023590,023693-023714   I272 01900002
* 031800,032600,061160-061320                                      I272 02000002
* 020720,022360,022920-022960                                    A29072 02100002
*          RELEASE 18 DELETIONS/CHANGES                                 02200002
* 000260-000320,014320,017480,019040-019120                        MC01 02300002
* 023340-023346,023584-023594,023666,023676                        MC01 02400002
* 023688-023702,023704-023710,054230,061440-061565                 MC01 02500002
         EJECT                                                          02600002
**********************************************************************  02700002
*                                                                    *  02800002
*TITLE-- IASXSD81 - EXTERNAL WRITER                                  *  02900002
*                   CLASSNAME SET-UP ROUTINE                         *  03000002
*                                                                    *  03100002
*STATUS CHANGE LEVEL 008                                                03200002
*                                                                    *  03300002
*FUNCTION/OPERATION--THE ROUTINE IS ENTERED INITIALLY FROM           *  03400002
*   IASXWR00 IN RESPONSE TO A 'START XWTR' COMMAND OR FROM           *  03500002
*   THE EXTERNAL WRITER CONTROL MODULE IASXSD82 IN RESPONSE TO A     *  03600002
*   'MODIFY' COMMAND.                                              CC0H 03700002
*   1. THE COMMAND MUST BE CHECKED TO CONFIRM THAT IT IS VALID.    CC0H 03800002
*   IF NOT A MESSAGE MUST BE GIVEN INDICATING THE ERROR. THE       CC0H 03900002
*   TYPE OF OUTPUT (PRINTER OR PUNCH), CLASSES TO BE HANDLED,      CC0H 04000002
*   AND NAME OF THE JOB SEPERATION ROUTINE ARE SAVED IF IT IS      CC0H 04100002
*   A START COMMAND. THE TYPE OF PAUSE AND CLASSES ARE SAVED IF    CC0H 04200002
*   IT IS A MODIFY COMMAND.                                        CC0H 04300002
*   2. ON A START COMMAND IT IS NECESSARY TO OPEN THE DCB. IF      CC0H 04400002
*   COMMAND CHAINING IS TO BE USED AN EXCP DCB MUST BE OPENED      CC0H 04500002
*   RATHER THAN A QSAM DCB. THIS WILL INVOLVE SETTING UP AN ECB,   CC0H 04600002
*   IOB, CCWS, AND BUFFERS WHICH EXCP WILL USE. IT WILL ALSO       CC0H 04700002
*   REQUIRE THE LOADING OF THE IEFSDXYZ MODULE WHICH WILL BE       CC0H 04800002
*   BRANCHED TO WHEN A PUT COMMAND IS GIVEN.                       CC0H 04900002
*   A CHANNEL END APPENDAGE IGG019C5 WILL BE LOADED TO HANDLE    A29072 05000002
*   CARRIAGE CONTROL TAPE OVERFLOW SKIP TO ONE INDICATORS        A29072 05100002
*   4. AFTER EXECUTING THE COMMAND THE COMMAND INPUT BUFFER IS     CC0H 05200002
*   ZEROED OUT.                                                    CC0H 05300002
*   5. IF THE COMMAND IS INVALID IT IS NOT CARRIED OUT, IF A       CC0H 05400002
*   MODIFY. IF INVALID AND A START COMMAND THE WRITER IS NOT       CC0H 05500002
*   STARTED. IN BOTH CASES MESSAGES ARE WRITTEN TO THE OPERATOR.   CC0H 05600002
*                                                                    *  05700002
*ENTRY POINT--                                                       *  05800002
*        IASXSD81 - EITHER FROM IASXWR00(INITIALIZATION RTN) OR      *  05900002
*   FROM IASXSD82 (MAIN LOGIC CONTROL MODULE)                        *  06000002
*                                                                    *  06100002
*INPUT-- THIS ROUTINE RECEIVES IN REGISTER 1 A PTR TO A 13-WORD    CC0H 06200002
*   PARAMETER LIST.                                                CC0H 06300002
*                                                                    *  06400002
*OUTPUT-- THE PARAMETER LIST WHICH THIS MODULE GOT AS INPUT AND    CC0H 06500002
*   WHICH IT FILLED IS PASSED ON TO THE NEXT MODULE IN REG. 1.     CC0H 06600002
*                                                                    *  06700002
*EXTERNAL ROUTINES--NONE                                             *  06800002
*                                                                    *  06900002
*EXIT--IF THE COMMAND IS AN INVALID START COMMAND RETURNS TO       CC0H 07000002
*   MASTER SCHEDULER.                                              CC0H 07100002
*      OTHERWISE TO                                                CC0H 07200002
*   IASXSD82 - THE MAINLINE LOGIC PROCESSING ROUTINE OF THE          *  07300002
*   SYSOUT WRITER (OR TO A MODULE WHICH USES  XCTL  TO  TRANSFER     *  07400002
*                                                                    *  07500002
*TABLES/WORK AREAS--                                                 *  07600002
*   THE SPL IS A SINGLE POINTER:                                   I272 07700002
*   1. POINTER TO PARAMETER FIELD OF THE PROCEDURE STARTED.        CC0H 07800002
*   SYSOUT WRITER                                                    *  07900002
*   THE FIELD POINTED TO CONSISTS OF A FIELD LENGTH,               CC0H 08000002
*   A P OR A C, THE CLASS NAMES, AND THE NAME OF THE JOB           CC0H 08100002
*   SEPERATER PROGRAM IF THERE IS ONE.                             CC0H 08200002
*                                                                  I272 08300002
*   THE CSCB COMMUNICATIONS AREA CONSISTS OF TWO POINTERS:         I272 08400002
*   2. POINTER TO THE COMMUNICATION ECB. THIS ECB IS POSTED ON     CC0H 08500002
*   A COMMAND TO THIS WRITER.                                      CC0H 08600002
*   3. POINTER TO THE COMMAND INPUT BUFFER (CIB). THE FIELD        CC0H 08700002
*   (MAPPED IN A DSECT BELOW) INCLUDES FIELD LENGTH,               CI0I 08800002
*   COMMAND TYPE, AND THE COMMAND CONSISTING OF CLASS AND/OR       CC0H 08900002
*   PAUSE TYPE.                                                    CC0H 09000002
*                                                                    *  09100002
*ATTRIBUTES--THIS ROUTINE IS REENTRANT AND REFRESHABLE             CC0H 09200002
*                                                                    *  09300002
*NOTES--THE FOLLOWING SYSTEM MACROS ARE USED                         *  09400002
*   GETMAIN,FREEMAIN,OPEN,RETURN                                   CC0H 09500002
*                                                                    *  09600002
**********************************************************************  09700002
*        ESSENTIAL EQUATES                                           *  09800002
**********************************************************************  09900002
R0       EQU   0                                                        10000002
R1       EQU   1                                                        10100002
R2       EQU   2                                                        10200002
R3       EQU   3                                                        10300002
R4       EQU   4                                                        10400002
R5       EQU   5                                                        10500002
R6       EQU   6                                                        10600002
R7       EQU   7                                                        10700002
R8       EQU   8                                                        10800002
R9       EQU   9                                                        10900002
R10      EQU   10                                                       11000002
R11      EQU   11                                                       11100002
R12      EQU   12                                                       11200002
R13      EQU   13                                                       11300002
R14      EQU   14                                                       11400002
R15      EQU   15                                                       11500002
*                                                                       11600002
ORDISP   EQU   10                  'OR' DISPLACEMENT INTO TABLE ENTRY   11700002
SSOBDISP EQU   8                   PARAMETER DISPLACEMENT INTO SSOB     11800002
KEYSIZE  EQU   12                  SIZE OF ONE TABLE ENTRY              11900002
KEYDISP  EQU   0                   DISP. OF KEY IN TABLE ENTRY          12000002
ANDDISP  EQU   11                  'AND' DISP. IN TABLE ENTRY           12100002
MSGSIZ   EQU   46                  SIZE OF KEYWORD BAD MSG.             12200002
NAMDISP  EQU   16                  DISP. OF WTR. NAME IN KEYWORD MSG.   12300002
*                                                                    *  12400002
FTFTWO   EQU   128                      1442               SWITCH       12500002
*                                                                A29072 12600002
INCONE   EQU   1                        INCREMENT BY ONE         A29072 12700002
DIVTWO   EQU   1                        DIVIDE BY TWO            A29072 12800002
EOCFLAG  EQU   5                                                 M3017  12900002
CCWLGN   EQU   8                        LGN OF 1 CCW             A29072 13000002
NOP      EQU   X'03'                    NOP CCW OP CODE          A29072 13100002
NINE     EQU   X'09'                    DIVIDE TO 2 CHAINS       A29072 13200002
FLAGF    EQU   X'FF'                    ONE BYTE FLAG TO MARK    A29072 13300002
*                                         END OF CCW CHAIN OR    A29072 13400002
*                                         USER SPECIFIED CNTRL C A29072 13500002
SIXTEEN  EQU   16                       LENGTH OF SIXTEEN        A43873 13600002
DEBADDR  EQU   8                                                 A32047 13700002
UCBADDR  EQU   32                                                A32047 13800002
FOUR     EQU   4                        LENGTH OF FOUR           S20202 13900002
HIAR1    EQU   X'80'                    HIARCHY 1 IN PARUCSID    A36842 14000002
**********************************************************************  14100002
         EJECT                                                          14200002
**********************************************************************  14300002
*        IASXSD81                  THE PROGRAM                       *  14400002
**********************************************************************  14500002
***                                                                ***  14600002
*        ESTABLISH BASE                                              *  14700002
***                                                                ***  14800002
         BALR  R9,0                                                     14900002
         USING *,R9                                                     15000002
***                                                                ***  15100002
*        MOVE CLASSNAME INDICATION FROM CSCB TO WORK AREA IN PARLIST *  15200002
***                                                                ***  15300002
         LR    R6,R1                    SAVE INPUT REG                  15400002
         USING PARLIST,R6               ADDRESSABILITY FOR PARLIST      15500002
         L     R3,PARCOMM              GET ADDRESS OF COMM AREA    I272 15600002
         USING COMMAD,R3               ADDRESSABILITY FOR COMM AREAI272 15700002
         L     R4,COMMCIB              GET ADDR OF CIB             I272 15800002
         USING CIB,R4                                              CI0I 15900002
         CLI   CIBVERB,CIBSTART    TEST FOR START COMMAND; IF NOT, CI0I 16000002
         BNE   SD81MOD                  BRANCH TO DO MODIFY             16100002
         MVC   PARSAV+12(4),SD81EXIT    SAVE RETURN ADDRESS IN PARSAV   16200002
         NI    PARSAV+16,X'7F'     TURN OFF TO INDICATE START FOR ERROR 16300002
***                                                                 *** 16400002
*        THE FOLLOWING DOES STARTING A WRITER. FIRST DO EXECUTE PARMS * 16500002
***                                                                 *** 16600002
         LA    R0,COMMCIB              GET ADDR OF CIB PTR         I272 16700002
         QEDIT CIBCTR=1,ORIGIN=(0)     SET CIB COUNT FOR MODIFY    CI0I 16800002
         MVC   PARWORK2(8),SD81BLNK     BLANKS FOR CLASSNAMES           16900002
         L     R5,PARSPL               GET ADDRESS OF SPL          I272 17000002
         USING SPLAD,R5                START PARAMETER LIST        I272 17100002
         L     R5,SPLPAR                GET ADDRESS OF PROCEDURE PARMS  17200002
         LH    R11,0(R5)                GET LENGTH OF PARM FIELD        17300002
         LA    R11,2(R11,R5)           ADDRESS BYTE BEYOND END     I272 17400002
         L     R3,SD81MESG              GET ADDRESS OF MESSAGES         17500002
         LA    R5,2(R5)                 GET START OF SCAN AREA          17600002
         CR    R5,R11                   TEST HAVE MORE CONTENT IN PARMS 17700002
         BNL   SD81ERPR                 BRANCH TO PARM LENGTH ERROR     17800002
         CLI   0(R5),C'P'               TEST FOR PRINT TYPE. IF NOT     17900002
         BE    SD81SCS                  BRANCH AROUND SETTING PUNCH SW  18000002
         CLI   0(R5),C'C'               TEST FOR PUNCH TYPE. IF NOT     18100002
         BNE   SD81ERPR                 BRANCH TO PARM MISSPELL         18200002
         OI    PARSWCH,PARPUN           TURN ON PUNCH TYPE SWITCH       18300002
SD81SCS  LA    R7,PARWORK2              GET LOCATION CLASSES PUT AT     18400002
         CLI   1(R5),C','          IS THERE NO CLASS LIST?              18500002
         BE    SD81SEP             NO, CHECK FOR JOB SEPARATOR          18600002
         CLI   1(R5),C' '          IS THERE A BLANK FOR END OF LIST?    18700002
         BE    SD81SSC             YES, CHECK START STATEMENT           18800002
         BAL   R12,SD81NCM              BRANCH TO SCAN WITHOUT COMMAS   18900002
         B     SD81SSC                  BRANCH OUT OF SCANS        000F 19000002
         B     SD81ERPR           BRANCH TO PARM LENGTH ERROR      000F 19100002
         CH    R2,SD81THRE              TEST FOR COMMA. IF NOT          19200002
         BNE   SD81ERPR                 BRANCH TO PARM BAD DELIMETER    19300002
*        SEPERATION JOB ROUTINE HANDLED HERE                            19400002
SD81SEP  EQU   *                                                        19500002
         LA    R8,1(R5)                 GET START OF SEPERATION FIELD   19600002
         CR    R8,R11                   TEST FOR NO SEPERATION FIELD    19700002
         BNL   SD81ERPR                 BRANCH TO PARM BAD DELIMETER    19800002
         CLI   1(R5),C' '               TEST FOR NO SEPERATION FIELD    19900002
         BE    SD81ERPR                 BRANCH TO PARM BAD DELIMETER    20000002
         TM    1(R5),X'F0'              TEST FOR NUMERIC FIRST CHAR.    20100002
         BO    SD81ERPR                 BRANCH TO PARM MISPELL IF SO    20200002
         L     R7,PARJBSEP              GET WHERE ROUTINE NAME TO GO    20300002
         BAL   R12,SD81NCM              BRANCH TO SCAN WITHOUT COMMAS   20400002
         B     SD81SSC                  BRANCH OUT OF SCANS        000F 20500002
         B     SD81ERPR           BRANCH TO PARM LENGTH ERROR      000F 20600002
         B     SD81ERPR                 BRANCH TO PARM BAD DELIMETER    20700002
*        SCAN THE START COMMAND TO SEE IF CLASSES TO BE OVERRIDDEN    * 20800002
SD81SSC  LA    R5,CIBDATA          ADDRESS JOBNAMES                CI0I 20900002
         LH    R11,CIBDATLN        LENGTH OF CIBDATA               CI0I 21000002
         AR    R11,R5              ADD. BYTE BEYOND END OF CIBDATA CI0I 21100002
         CR    R5,R11                   TEST HAVE CONTENT IN CIB        21200002
         BNL   SD81SSD                  BRANCH TO DONE                  21300002
         CLI   0(R5),C' '               TEST FOR BLANKS AS NEXT CHAR.   21400002
         BE    SD81SSD                  BRANCH TO ARE DONE              21500002
         MVC   PARWORK2(8),SD81BLNK     BLANKS FOR CLASSNAMES           21600002
         BAL   R12,SD81NCP         BRANCH TO SCAN CLASS -COMMAS ILLEGAL 21700002
         B     SD81SSD             END OF SCAN, CLASSES VALID           21800002
         B     SD81ERTL            BRANCH TO TERM LENGTH ERROR          21900002
         B     SD81ERDL            BRANCH TO DELIMITER ERROR            22000002
SD81SSD  BAL   R12,SD81FKO              BRANCH TO FREE CORE OF CIB      22100002
***                                                                 *** 22200002
         CLI   PARWORK2,C' '       WAS THERE NO CLASS LIST              22300002
         BNE   SD81ONXT            YES, THERE IS A CLASS LIST           22400002
         OI    PARDUM,PARMOD       INDICATE TO WAIT ON ONE ECB ONLY     22500002
SD81ONXT EQU   *                   CONTINUE WITH OPEN                   22600002
*        OPEN FOR SYSOUT                                              * 22700002
***                                                                 *** 22800002
         LA    R1,PARFORM               LOAD ADDRESS OF WORD USED FOR   22900002
*                                        OPEN LIST (GOT CORE)           23000002
         L     R2,PARDCB                LOAD ADDRESS OF DCB             23100002
         MVC   PARFORM,SD81OPEN         MOVE OPEN LIST INTO GOT CORE    23200002
         MVC   PARFORM+1(3),PARDCB+1    MOVE ADDR OF ACTUAL DCB,        23300002
*                                        THAT IS, DCB IN GOTTEN CORE,   23400002
*                                        INTO WORD USED AS OPEN LIST    23500002
         USING IHADCB,R2                ADRESSABILITY FOR DCB      CC0H 23600002
*ACTUAL OPEN                                                       CC0H 23700002
SD81OPN  LA    R1,PARFORM               GET OPEN LIST WORD         CC0H 23800002
         OPEN  ((R2),OUTPUT),MF=(E,(1)) OPEN FOR OUTPUT                 23900002
         TM    DCBOFLGS,X'10'      TEST FOR SUCCESSFULL OPEN     A27785 24000002
         BZ    SD81WTOG            WRITE MSG. IF OPEN FAILED            24100002
OPENOK   MVC   PARFORM(4),SD81BLNK BLANK OUT PARFORM                    24200002
         TM    PARSWCH,PARDUMMY    IS THIS A DUMMY DATA SET             24300002
         BO    CONTINUE            YES- DON'T GET UCB ADDR.             24400002
         L     R8,16               GET TCB ADDRESS                      24500002
         L     R8,0(R8)                                                 24600002
         L     R8,4(R8)            NOW HAVE TCB ADDRESS                 24700002
         L     R8,DEBADDR(R8)      GET DEB ADDRESS                      24800002
         L     R8,UCBADDR(R8)      GET UCB ADDRESS                      24900002
         ST    R8,PARUCB           UPT UCB ADDR IN PARLIST              25000002
         USING UCBOB,R8            BASE FOR UCB                         25100002
         MVC   PARWTRNM,UCBNAME    SAVE WRITER NAME FOR DUMMY D.S.      25200002
         TM    UCBTBYT3,UCB3UREC        IS IT UNIT RECORD?       S20202 25300002
         BZ    CONTINUE                 NO, BYPASS 3211 CODE     S20202 25400002
         CLI   UCBTBYT4,X'09'           IS IT 3211 UCB                  25500002
         BNE   CONTINUE                 NO, BYPASS 3211 CODE            25600002
         L     R8,UCBXTADR              PICK UP UCB EXTENSION    S20202 25700002
         DROP  R8                                                A42459 25800002
         USING UCBUCS,R8                BASE FOR UCS EXTENSION   A42459 25900002
         MVC   PARUCSID(FOUR),UCBUCSID  SAVE DEFAULT UCS ID      A42459 26000002
         MVC   PARFCBID(FOUR),UCBFCBID  SAVE DEFAULT FCB ID      A42459 26100002
CONTINUE MVC   PARLRECL(2),DCBLRECL                              S20202 26200002
         B     SD81OLD                  BRANCH TO SET UP WRITER TO RUN  26300002
***                                                                 *** 26400002
*        THE FOLLOWING HANDLES A MODIFY COMMAND. FIRST TEST PAUSE     * 26500002
SD81MOD  ST    R14,PARSAV+12       SAVE RETURN ADDRESS                  26600002
         LR    R14,R7              ADDRESS OF SSOB INTO R14             26700002
         USING SSOB,R14            ADDRESSABILITY FOR SSOB FOR MODIFY   26800002
         LA    R5,CIBDATA          ADDRESS JOBNAMES                     26900002
         OI    PARSAV+16,X'80'     INDICATE MODIFY IN CASE OF ERR RTRN  27000002
         LH    R11,CIBDATLN        LENGTH OF CIBDATA               CI0I 27100002
         AR    R11,R5              ADD. BYTE BEYOND END OF CIBDATA CI0I 27200002
         L     R3,SD81MESG         ADDRESS MESSAGES                CI0I 27300002
         MVI   PARCHAR,X'00'            INDICATE NOTHING TO MODIFY YET  27400002
         CR    R5,R11                   TEST HAVE MORE CONTENT IN CIB   27500002
         BNL   SD81ERPM                 BRANCH TO NO PARAMETER ERROR    27600002
         CLI   0(R5),C' '               TEST FOR BLANK AS NEXT CHAR.    27700002
         BE    SD81ERPM                 BRANCH TO NO PARAMETER ERROR    27800002
SD81TRD  CR    R5,R11                   TEST HAVE MORE CONTENT IN CIB   27900002
         BE    SD81IMD             BRANCH TO IMPLEMENT COMMAND          28000002
SD81TFR  CLC   0(11,R5),SD81FRM         COMPARE TO PAUSE=FORMS          28100002
         BE    SD81PAUF            BRANCH TO PROCESS PAUSE=FORMS        28200002
         CLC   0(7,R5),SD81SFMP    TEST FOR P=FORMS                     28300002
         BNE   SD81TDA             BRANCH TO TEST PAUSE=DATASET         28400002
         SH    R5,=H'4'            SUBTRACT FOUR TO MAKE UP FOR SHORT   28500002
SD81PAUF TM    PARCHAR,PARCPAU     TEST FOR ALREADY HAVE PAUSE          28600002
         BO    SD81ERDF                 BRANCH TO DUPLICATE FIELD ERROR 28700002
         OI    PARCHAR,PARCPAU          INDICATE PAUSE=FORMS            28800002
         LA    R5,11(R5)                GET NEXT CHARACTER TO TEST      28900002
SD81TND  CR    R5,R11                   TEST ARE DONE                   29000002
         BH    SD81ERTL                 BRANCH TO TERM LENGTH ERROR     29100002
         BE    SD81IMD                  BRANCH TO IMPLEMENT COMMAND     29200002
         CLI   0(R5),C' '               TEST ARE DONE                   29300002
         BE    SD81IMD                  BRANCH TO IMPLEMENT COMMAND     29400002
SD81TCM  CLI   0(R5),C','               TEST FOR COMMA AS NEXT CHAR.    29500002
         BNE   SD81ERDL                 BRANCH TO DELIM ERROR AS NOT ,  29600002
         LA    R5,1(R5)                 GET NEXT CHARACTER TO TEST      29700002
         B     SD81TRD                  BRANCH TO TEST FOR MORE FIELDS  29800002
SD81TDA  CLC   0(13,R5),SD81DTS         COMPARE TO PAUSE=DATASET        29900002
         BE    SD81PAUD            BRANCH TO PROCESS PAUSE=DATASET      30000002
         CLC   0(9,R5),SD81SFMD    IS KEYWORD 'P=DATASET'               30100002
         BNE   SD81TCL             BRANCH TO CLASS TEST IF NOT          30200002
         SH    R5,=H'4'            SUBTRACT 4 FOR SHORT FORM            30300002
SD81PAUD TM    PARCHAR,PARCPAU     TEST FOR ALREADY HAVE PAUSE          30400002
         BO    SD81ERDF                 BRANCH TO DUPLICATE FIELD ERROR 30500002
         OI    PARCHAR,PARCPAU+PARCDAT  INDICATE PAUSE=DATASET          30600002
         LA    R5,13(R5)                GET NEXT CHARACTER TO TEST      30700002
         B     SD81TND                  BRANCH TO SEE IF THIS FIELD OK  30800002
*                                                                     * 30900002
*        THIS HANDLES CLASS                                           * 31000002
*                                                                     * 31100002
SD81TCL  CLC   0(6,R5),SD81CLA          COMPARE TO CLASS=               31200002
         BE    SD81CLSS            BRANCH TO PROCESS CLASS              31300002
         CLC   0(2,R5),SD81CLSE    IS KEYWORD C=                        31400002
         BNE   SD81SELC            TEST FOR OTHER KEYWORDS              31500002
         SH    R5,=H'4'            SUBTRACT TO ACCOUNT FOR SHORT FORM   31600002
SD81CLSS TM    PARCHAR,PARCCLA     TEST FOR ALREADY HAVE CLASSES        31700002
         BO    SD81ERDF                 BRANCH TO DUPLICATE FIELD ERROR 31800002
         OI    PARCHAR,PARCCLA          INDICATE CLASSES                31900002
         LA    R5,6(R5)                 GET NEXT CHARACTER TO TEST      32000002
         CR    R5,R11                   TEST FOR TOO LONG. IF SO        32100002
         BE    SD81AND1            YES, CLASS IS NULL                   32200002
         BH    SD81ERTL            BRANCH TO TERM LENGTH ERROR          32300002
         CLI   0(R5),C','          IS CLASS NULL                        32400002
         BNE   CKCLS               NO, GO ADD CLASSES                   32500002
SD81AND1 NI    SSSOFLG1,255-SSSOSCLS    TURN OFF SELECTION BY CLASS     32600002
         B     SD81TND             CHECK FOR MORE KEYWORDS              32700002
CKCLS    OI    SSSOFLG1,SSSOSCLS   TURN ON SELECTION BY CLASS           32800002
         MVC   PARWORK2(8),SD81BLNK     BLANK FOR CLASSNAMES            32900002
         SR    R2,R2               GET ZERO IN FUNCTION REGISTER        33000002
SD81OCL  BAL   R12,SD81NCP        BRANCH TO SCAN WITHOUT COMMAS    000F 33100002
         B     SD81CLSM            BRANCH TO MOVE IN CLASS LIST         33200002
         B     SD81ERTL           BRANCH TO TERM LENGTH ERROR      000F 33300002
         B     SD81CLSM            BRANCH TO MOVE IN CLASS LIST         33400002
*                                                                     * 33500002
*        COMMAND IS VALID. THIS SECTION IMPLEMENTS IT.                * 33600002
*                                                                     * 33700002
SD81IMD  BAL   R12,SD81FKO              BRANCH TO FREE CORE OF CIB      33800002
         TM    PARCHAR,PARCCLA          TEST FOR HAVE CLASSES, IF SO    33900002
         BO    SD81IMP                  BRANCH AROUND USE PREVIOUS 000F 34000002
         MVC   PARWORK2(8),PARGCLN     USE PREVIOUS CLASSNAMES   A28724 34100002
SD81IMP  TM    PARCHAR,PARCPAU+PARCDAT  TEST FOR PAUSE CHANGE           34200002
         BZ    SD81MODO            BRANCH TO AVOID PAUSE CHANGE         34300002
         BO    SD81IDA                  BRANCH TO MAKE PAUSE ON DATASET 34400002
         NI    PARSWCH,255-PARDAT       INDICATE PAUSE ON FORMS         34500002
         B     SD81MODO            BRANCH TO FIX WRITER TO RUN          34600002
SD81IDA  OI    PARSWCH,PARDAT           INDICATE PAUSE ON DATASET       34700002
         B     SD81MODO            BRANCH TO FIX WRITER TO RUN          34800002
***                                                                 *** 34900002
*        THE FOLLOWING CODE IS A SUBROUTINE THAT SCANS ALPHANUMERIC   * 35000002
*        CHARACTERS IN XXXXXXXX FORM AND PUTS THEM IN A DESTINATION.  * 35100002
*        NO MORE THAN 8 CHARACTERS ARE MOVED.                      000F 35200002
***                                                                000F 35300002
SD81NCP  LA    R7,PARWORK2        GET LOCATION CLASSES PUT AT      000F 35400002
         SR    R2,R2                    ZERO OUT FUNCTION REGISTER 000F 35500002
         SR    R8,R8                    ZERO OUT COUNT             000F 35600002
         B     SD81NCQ                  BRANCH TO CONTINUE SCAN    000F 35700002
SD81NCM  SR    R2,R2                    ZERO OUT FUNCTION REGISTER      35800002
         SR    R8,R8                    ZERO OUT COUNT                  35900002
SD81NCN  LA    R5,1(R5)                 GET LOCATION OF NEXT CHAR       36000002
SD81NCQ  CR    R5,R11                   TEST FOR BEYOND END        000F 36100002
         BCR   11,R12                   BRANCH OUT OF SCANS        000F 36200002
         TRT   0(1,R5),SD81TRT          TEST THE CHARACTER. IF NOT GOOD 36300002
         BC    2,SD81NCO                BRANCH TO SEE IF A BLANK        36400002
         CH    R8,SD81EIGT              TEST FOR 8 CHAR. MOVED ALREADY  36500002
         BNL   4(0,R12)                 BRANCH TO LENGTH ERROR     000F 36600002
         IC    R10,0(R5)                GET CHARACTER                   36700002
         STC   R10,0(R7,R8)             STORE IT IN DESTINATION         36800002
         LA    R8,1(R8)                 UP COUNT BY 1                   36900002
         B     SD81NCN                  BRANCH TO DO NEXT CHARACTER     37000002
SD81NCO  CH    R2,SD81ATWO              TEST FOR CHARACTER A BLANK      37100002
         BCR   8,R12                    BRANCH OUT OF SCANS        000F 37200002
         B     8(0,R12)           BRANCH OUT OF SCANS TO 3RD ADD   000F 37300002
SD81CLSM MVC   PARGCLN(8),PARWORK2 MOVE IN GOOD CLASS LIST              37400002
         B     SD81TND             BRANCH TO TEST IF ARE DONE           37500002
***                                                                 *** 37600002
*        FREE CIB SUBROUTINE                                          * 37700002
***                                                                 *** 37800002
         USING COMMAD,R3                                         A27785 37900002
SD81FKO  L     R3,PARCOMM              GET ADDR OF COMM AREA       I272 38000002
         QEDIT ORIGIN=COMMCIB,BLOCK=(4) FREE CIB                   I272 38100002
         BR    R12                      RETURN                          38200002
***                                                                ***  38300002
*        TRANSLATE AND TEST TABLE                                     * 38400002
***                                                                ***  38500002
SD81TRT  DS    0F                                                       38600002
         DC    XL25'01010101010101010101010101010101010101010101010101' 38700002
         DC    XL25'01010101010101010101010101010101010101010101010101' 38800002
         DC    XL14'0101010101010101010101010101'                       38900002
         DC    XL1'02'                  BLANK                           39000002
         DC    XL12'010101010101010101010101'                           39100002
         DC    XL1'04'                  LEFT PAREN                      39200002
         DC    XL15'010101010101010101010101010101'                     39300002
         DC    XL1'05'                  RIGHT PAREN                     39400002
         DC    XL13'01010101010101010101010101'                         39500002
         DC    XL1'03'                  COMMA                           39600002
         DC    XL25'01010101010101010101010101010101010101010101010101' 39700002
         DC    XL25'01010101010101010101010101010101010101010101010101' 39800002
         DC    XL25'01010101010101010101010101010101010101010101010101' 39900002
         DC    XL10'01010101010101010101'                               40000002
         DC    XL9'00'                  A THRU I                        40100002
         DC    XL7'01010101010101'                                      40200002
         DC    XL9'00'                  J THRU R                        40300002
         DC    XL8'0101010101010101'                                    40400002
         DC    XL8'00'                  S THRU Z                        40500002
         DC    XL6'010101010101'                                        40600002
         DC    XL10'00'                 0 THRU 9                        40700002
         DC    XL6'010101010101'                                        40800002
SD81TED  EQU   *                                                        40900002
***                                                                 *** 41000002
*        ERRORS FOUND IN EXECUTE PARAMETER AND COMMAND FIELDS         * 41100002
***                                                                 *** 41200002
         USING SD81MEPR,R3              ADDRESSABILITY FOR MESSAGES     41300002
SD81ERPR LA    R1,SD81MEPR              PROCEEDURE PARM MESSAGE         41400002
         B     SD81WTOS                 BRANCH TO WTO                   41500002
SD81ERDL LA    R1,SD81MSDL              DELIMETER ERROR START MESSAGE   41600002
         CLI   CIBVERB,CIBSTART    TEST FOR START COMMAND; IF SO,  CI0I 41700002
         BE    SD81WTOS                 BRANCH TO WTO                   41800002
         LA    R1,SD81MMDL              IF NOT GET MODIFY MESSAGE       41900002
         B     SD81WTOM                 BRANCH TO WTO                   42000002
SD81ERTL LA    R1,SD81MSTL              TERM LENGTH START MESSAGE       42100002
         CLI   CIBVERB,CIBSTART    TEST FOR START COMMAND; IF SO,  CI0I 42200002
         BE    SD81WTOS                 BRANCH TO WTO                   42300002
         LA    R1,SD81MMTL              IF NOT GET MODIFY MESSAGE       42400002
         B     SD81WTOM                 BRANCH TO WTO                   42500002
SD81ERPM LA    R1,SD81MMPM              PARAMETER MISSING MODIFY MESG   42600002
         B     SD81WTOM                 BRANCH TO WTO                   42700002
SD81ERDF LA    R1,SD81MMDF              PARAMETERS CONFLICT MODIFY MESG 42800002
         B     SD81WTOM                 BRANCH TO WTO                   42900002
SD81WTOM OI    PARDUM,PARMOD       INDICATE WAIT ON ONE ECB ONLY        43000002
         L     R3,PARCOMM          GET ADDR. OF COMM AREA               43100002
         USING COMMAD,R3               ADDRESSABILITY FOR COMM AREAI272 43200002
         L     R3,COMMCIB              GET ADDR OF CIB             I272 43300002
         USING CIB,R3                  COMMAND INPUT BUFFER        I272 43400002
         SR    R0,R0                   CLEAR REGISTER              I272 43500002
         IC    R0,CIBCONID             GET CONSOLE ID              I272 43600002
SD81MWTO WTO   MF=(E,(1))          WRITE TO OPERATOR                    43700002
         BAL   R12,SD81FKO             FREE CIB CORE               I272 43800002
         MVC   PARWORK2(8),PARGCLN      USE PREVIOUS CLASSNAMES    I272 43900002
         B     SD81OLD                 SET UP CLASSNAMES           I272 44000002
SD81WTOS L     R3,PARCOMM              GET ADDR OF COMM AREA       I272 44100002
         USING COMMAD,R3               CSCB COMMUNICATIONS AREA    I272 44200002
         L     R3,COMMCIB              GET ADDR OF CIB             I272 44300002
         USING CIB,R3                  COMMAND INPUT BUFFER        I272 44400002
         SR    R0,R0                   CLEAR REGISTER              I272 44500002
         IC    R0,CIBCONID             GET CONSOLE ID              I272 44600002
         WTO   MF=(E,(1))              WRITE START MESSAGE         I272 44700002
FREECORE BAL   R12,SD81FKO         BRANCH TO FREE CORE OF CIB    A27785 44800002
*                                                                  I272 44900002
ERROUT   SR    R15,R15                  INDICATE NO I/O ERROR    A58031 45000002
         TM    PARSAV+16,X'80'     MODIFY?                              45100002
         BZ    RESTORE             NO                                   45200002
         L     R14,PARSAV+12       RESTORE RETURN ADDRESS               45300002
         LA    R15,4               INDICATE ERROR RETURN                45400002
         BR    R14                 RETURN                               45500002
*                                                                     * 45600002
RESTORE  ST    R15,SIXTEEN(R13)    STORE IN SAVE AREA                   45700002
         L     R1,PARDCB                LOAD ADDRESS OF CORE     A58031 45800002
*                                       OBTAINED                 A45415 45900002
*                                        BY IEFSD080 (INIT. ROUT.)      46000002
         LA    R7,4                     DECREMENT THE ADDRESS           46100002
         SR    R1,R7                     TO THE LENGTH FIELD ADDR       46200002
         L     R0,0(R1)                 LOAD PREVIOUSLY STORED LENGTH   46300002
         FREEMAIN R,LV=(0),A=(1)                                        46400002
         LR    R1,R3                    RESTORE ORIGINAL CONTENTS OF    46500002
*                                        PARAMETER REGISTER (SPL PTR)   46600002
*                                        BEFORE RETURNING               46700002
         RETURN (14,12),T               ISSUE RETURN                    46800002
***                                                                 *** 46900002
* THE SYSOUT WRITER GIVES                                             * 47000002
* UP CONTROL AT THIS POINT                                            * 47100002
***                                                                 *** 47200002
         USING SD81MEPR,R3                                       A27785 47300002
SD81WTOG L     R3,SD81MESG         EST ADDRESSIBILITY FOR MSG    A27785 47400002
         L     R7,PARWORK          GET ADDRESS OF CORE FOR WTO          47500002
         MVC   0(SD81OEND-SD81OPER,R7),SD81OPER   MOVE MSG TO WRITE     47600002
         MVC   WTRNMPS(3,R7),PARWTRNM   PUT WRITER IDENT. IN MSG.       47700002
         LR    R1,R7               ADDRES OF WTO                        47800002
WTOPR    WTO   MF=(E,(1))              ISSUE MESSAGE             A27785 47900002
         B     ERROUT                   BRANCH TO FREECORE &     A45415 48000002
*                                       RETURN                   A45415 48100002
*                                      THE CLASSNAMES ARE NOW IN THE    48200002
*                                        PARAMETER LIST WORK AREA,      48300002
*                                        SUCCESSIVE AND LEFT-JUSTIFIED  48400002
*                                        THEREIN, FOLLOWED BY BLANKS    48500002
*                                        IF LESS THAN 8 CLASSNAMES      48600002
SD81OLD  MVC   PARGCLN(8),PARWORK2 SAVE GOOD CLASSNAMES                 48700002
         USING SPLAD,R3                                          A27785 48800002
SD81MODO EQU   *                                                        48900002
         L     R3,PARCOMM              GET ADDRESS OF COMM AREA    I272 49000002
         USING COMMAD,R3               CSCB COMMUNICATIONS AREA    I272 49100002
         L     R3,COMMECB              GET ADDR OF COMMAND ECB     I272 49200002
         ST    R3,PARECBL          SAVE COMMAND ECB ADDR.               49300002
**********************************************************************  49400002
*        EXIT                                                        *  49500002
**********************************************************************  49600002
         LR    R1,R6                    RESTORE ADDR OF PARLIST         49700002
         XR    R8,R8                    CLEAR IND REG USED BY IEFSD082  49800002
         L     R14,PARSAV+12       RESTORE RETURN ADDRESS               49900002
         SR    R15,R15             NORMAL RETURN                        50000002
         BR    R14                 EXIT                                 50100002
*                                       **************                  50200002
***                                                                 *** 50300002
*   SEARCH SELECTION CRITERIA TABLE FOR MATCH, ADD OR DELETE SELECTION* 50400002
*   CRITERIA FROM SSOB                                                  50500002
***                                                                 *** 50600002
SD81SELC MVC   PARWORK2(8),SD81BLNK     CLEAR WORK AREA                 50700002
         LA    R7,PARWORK2         ADDRESS FOR KEYWORD                  50800002
         LR    R2,R5               START OF KEYWORD                     50900002
         XR    R1,R1               ZERO R1                              51000002
SD81EQU  CLI   0(R2),C'='          IS THIS THE END OF KEYWORD           51100002
         BE    SD81MVE             YES                                  51200002
         LA    R2,1(R2)            INCREMENT TO NEXT BYTE               51300002
         LA    R1,1(R1)            INCREASE SIZE OF KEYWORD             51400002
         CH    R1,SEVEN            HAS MAXIMUM SIZE BEEN REACHED        51500002
         BNL   KEYBAD              YES, ISSUE ERROR MSG.                51600002
         B     SD81EQU             CHECK FOR END OF KEYWORD             51700002
SD81MVE  EX    R1,SD81MOVE         MOVE KEYWORD TO WORK AREA            51800002
         LA    R5,1(R2)            INCREMENT TO PARAMETER               51900002
         LA    R15,TABLE           BEGINNING OF TABLE                   52000002
         LA    R1,8                ENTRIES IN TABLE                     52100002
KEYMTCH  CLC   PARWORK2(7),KEYDISP(R15)      DOES KEYWORD MATCH TABLE   52200002
         BE    SD81MTCH            YES                                  52300002
         LA    R15,KEYSIZE(R15)    INCREMENT TO NEXT ENTRY              52400002
         BCT   R1,KEYMTCH          TRY NEXT ENTRY                       52500002
         B     KEYBAD              NO MATCH FOUND                       52600002
SD81MTCH CLI   0(R5),C','          IS PARAMETER A NULL                  52700002
         BE    SD81AND             YES, PARAMETER IS NULL               52800002
         CR    R5,R11              TEST FOR END OF COMMAND              52900002
         BNE   SD81ORC             NO, GO ADD CRITERIA                  53000002
SD81AND  NC    SSSOFLG1(1),ANDDISP(R15) REMOVE SELECTION CRITERIA       53100002
         B     SD81TND             SEARCH FOR ANOTHER CRITERIA          53200002
SD81ORC  CR    R5,R11              IS THIS END OF DATA                  53300002
         BNL   SD81ERTL            YES                                  53400002
         MVC   PARWORK2(8),SD81BLNK     CLEAR WORK AREA                 53500002
         SR    R2,R2               ZERO R2                              53600002
         BAL   R12,SD81NCP         PARSE PARAMETER                      53700002
         B     SD81IMPL            NORMAL RETURN                        53800002
         B     SD81ERTL            ERROR RETURN                         53900002
SD81IMPL LH    R1,SSOBDISP(R15)    GET DISPLACEMENT INTO SSOB           54000002
         AR    R1,R14              ADD DISPLACEMENT TO SSOB ADDR.       54100002
         CLI   0(R15),C'F'         IS KEYWORD FORMS                     54200002
         BE    SD81FORM            YES                                  54300002
         CLI   0(R15),C'W'         IS THE KEYWORD WRITER?               54400002
         BNE   MOVEPARM            NO                                   54500002
         CLC   PARWORK2(6),=C'STDWTR'   IS WRITER NAME STDWTR?          54600002
         BNE   MOVEPARM            NO, CONTINUE                         54700002
         MVC   PARWORK2(8),SD81BLNK     BLANK OUT WRITER NAME           54800002
MOVEPARM MVC   0(8,R1),PARWORK2    PUT PARAMETER INTO SSOB              54900002
ORCHAR   OC    SSSOFLG1(1),ORDISP(R15)  OR IN SELECTION CRITERIA FLAG   55000002
         B     SD81TND             CHECK FOR MORE KEYWORDS              55100002
SD81FORM CLC   PARWORK2+4(4),SD81BLNK   IS FORM NUMBER VALID            55200002
         BNE   SD81ERTL            NO                                   55300002
         MVC   0(4,R1),PARWORK2    PUT FORM NUMBER INTO SSOB            55400002
         OC    SSSOFLG1(1),ORDISP(R15)  OR ON CRITERIA FLAG             55500002
         B     SD81TND             CHECK FOR MORE KEYWORDS              55600002
         USING SD81MEPR,R3         MESSAGE ADDRESSABILITY               55700002
KEYBAD   LA    R2,M81MODBD         KEYWORD INVALID                      55800002
         L     R15,PARWKLST        WORK LIST ADDRESSABILITY             55900002
         USING WORKLST,R15         ADDRESS WORK LIST                    56000002
         L     R1,WJFCB            WORK AREA ADDRESS                    56100002
         DROP  R15                 DROP REGISTER 15                     56200002
         MVC   0(MSGSIZ,R1),0(R2)  MOVE MSG. SKELETON TO WORK AREA      56300002
         MVC   NAMDISP(3,R1),PARWTRNM   MOVE IN WRITER NAME             56400002
         OI    PARDUM,PARMOD       TELL 082 TO WAIT ON ONE ECB          56500002
         B     SD81MWTO            WRITE MSG                            56600002
SD81MOVE MVC   0(1,R7),0(R5)       MOVE KEYWORD INTO WORK AREA          56700002
         EJECT                                                          56800002
**********************************************************************  56900002
*        CONSTANTS  AND  DSECTS                                      *  57000002
**********************************************************************  57100002
         DS    0F                                                       57200002
SD81CLAS DC    X'000000C0'                                              57300002
SD81PSTD DC    X'40000000'              MODEL OF POSTED  ECB            57400002
SD81BT1N DC    X'80000000'                                              57500002
SD81000F DC    X'0000000F'                                              57600002
SD81BLNK DC    C'        '                                              57700002
SD81THRE DC    H'3'                                                     57800002
SD81ATWO DC    H'2'                                                     57900002
SD81FIVE DC    H'5'                                                     58000002
SD81FOUR DC    H'4'                                                     58100002
SD81EIGT DC    H'8'                                                     58200002
SEVEN    DC    H'7'                SEVEN                                58300002
SD81EXIT DC    V(IASXSD82)         ADDRESS OF EXIT ROUTINE              58400002
SD81MESG DC    A(IASSD81M)         ADDRESS OF MESSAGE CSECT             58500002
SD81OPEN OPEN  (0,OUTPUT),MF=L                                          58600002
         DS    0F                                                       58700002
SD81FRTY DC    H'40'                                                    58800002
SD81SFMP DC    C'P=FORMS'                                               58900002
SD81SFMD DC    C'P=DATASET'        PAUSE=DATASET, SHORT FORM            59000002
SD81CLSE DC    C'C='               SHORT FORM OF CLASS=                 59100002
SD81FRM  DC    C'PAUSE=FORMS'                                           59200002
SD81DTS  DC    C'PAUSE=DATASET'                                         59300002
SD81CLA  DC    C'CLASS='                                                59400002
TABLE    DS    0F                  TABLE OF VALID KEYWORDS              59500002
         DC    CL8'F=',AL2(SSSOFORM-SSOB),AL1(SSSOSFRM)                 59600002
         DC    AL1(255-SSSOSFRM)                                        59700002
         DC    CL8'D=',AL2(SSSODEST-SSOB),AL1(SSSODST)                  59800002
         DC    AL1(255-SSSODST)                                         59900002
         DC    CL8'W=',AL2(SSSOPGMN-SSOB),AL1(SSSOSPGM)                 60000002
         DC    AL1(255-SSSOSPGM)                                        60100002
         DC    CL8'J=',AL2(SSSOJOBI-SSOB),AL1(SSSOSJBI)                 60200002
         DC    AL1(255-SSSOSJBI)                                        60300002
         DC    CL8'FORMS=',AL2(SSSOFORM-SSOB),AL1(SSSOSFRM)             60400002
         DC    AL1(255-SSSOSFRM)                                        60500002
         DC    CL8'DEST=',AL2(SSSODEST-SSOB),AL1(SSSODST)               60600002
         DC    AL1(255-SSSODST)                                         60700002
         DC    CL8'WRITER=',AL2(SSSOPGMN-SSOB),AL1(SSSOSPGM)            60800002
         DC    AL1(255-SSSOSPGM)                                        60900002
         DC    CL8'JOBID=',AL2(SSSOJOBI-SSOB),AL1(SSSOSJBI)             61000002
         DC    AL1(255-SSSOSJBI)                                        61100002
         DC    20F'0'                                                   61200002
***                                                                     61300002
**********************************************************************  61400002
TCBAR    DSECT                                                          61500002
         DS    2F                                                       61600002
TCBDEB   DS    1F                                                       61700002
TCBTIO   DS    1F                                                       61800002
**********************************************************************  61900002
         IEFJSSOB (SO)             SSOB                                 62000002
*********************************************************************** 62100002
         IEFSDWKT                                                       62200002
*********************************************************************** 62300002
         IEFTIOT1                                                A27785 62400002
*********************************************************************** 62500002
DEBAR    DSECT                                                          62600002
         DS    8F                                                       62700002
DEBUCB   DS    1F                                                       62800002
**********************************************************************  62900002
CIB      DSECT                                                     CI0I 63000002
         IEZCIB                                                    CI0I 63100002
         IEFSDBAR                                                MAPMAC 63200002
         EJECT                                                          63300002
**********************************************************************  63400002
UCBAR    DSECT                                                          63500002
         IEFUCBOB                                                       63600002
**********************************************************************  63700002
         EJECT                                                          63800002
**********************************************************************  63900002
         DCBD  DSORG=PS                                                 64000002
         EJECT                                                          64100002
         IEFSDPAR                                                MAPMAC 64200002
COMMAD   DSECT                         COMMUNICATIONS AREA IN CSCB I272 64300002
COMMECB  DS    A                       ADDR OF COMMAND ECB         I272 64400002
COMMCIB  DS    A                       ADDR OF COMMAND INPUT BUFFERI272 64500002
**********************************************************************  64600002
IASSD81M CSECT                                                          64700002
***                                                                 *** 64800002
*                                                                     * 64900002
* THIS CSECT CONTAINS THE MESSAGES USED TO INDICATE A COMMAND OR      * 65000002
* EXECUTE PARAMETER ERROR. THE COMMAND WILL NOT BE EXEUCTED.          * 65100002
*                                                                     * 65200002
***                                                                 *** 65300002
WTRNMPS  EQU   12                  WTR NAME DISPLACEMENT         A27785 65400002
SD81MEPR WTO   'IEE192I INVALID PROCEDURE PARM FIELD FORMAT',MF=L, MC0IX65500002
               DESC=(5),MCSFLAG=(REG0)                             MC0I 65600002
SD81MSDL WTO   'IEE307I START  DELIMITER ERROR',MF=L,            A58031X65700002
               DESC=(5),MCSFLAG=(REG0)                             MC0I 65800002
SD81MMDL WTO   'IEE307I MODIFY DELIMITER ERROR',MF=L,            A58031X65900002
               DESC=(5),MCSFLAG=(REG0)                             MC0I 66000002
SD81MSTL WTO   'IEE308I START  TERM LENGTH ERROR',MF=L,            MC0IX66100002
               DESC=(5),MCSFLAG=(REG0)                             MC0I 66200002
SD81MMTL WTO   'IEE308I MODIFY TERM LENGTH ERROR',MF=L,            MC0IX66300002
               DESC=(5),MCSFLAG=(REG0)                             MC0I 66400002
SD81MMPM WTO   'IEE311I MODIFY PARAMETER MISSING',MF=L,            MC0IX66500002
               DESC=(5),MCSFLAG=(REG0)                             MC0I 66600002
SD81MMDF WTO   'IEE312I MODIFY PARAMETERS CONFLICT',MF=L,          MC0IX66700002
               DESC=(5),MCSFLAG=(REG0)                             MC0I 66800002
SD81MSCN WTO   'IEE323I START  CLASSNAME ERROR',MF=L,              MC0IX66900002
               DESC=(5),MCSFLAG=(REG0)                             MC0I 67000002
SD81MMCN WTO   'IEE323I MODIFY CLASSNAME ERROR',MF=L,              MC0IX67100002
               DESC=(5),MCSFLAG=(REG0)                             MC0I 67200002
SD81OPER  WTO 'IEF307I XXX WTR CLOSED-OUTPUT DCB FAILED TO OPEN',      "67300002
               MF=L,ROUTCDE=(7,10),DESC=(4),MCSFLAG=(REG0)       A27785 67400002
SD81OEND EQU   *                                                 A27785 67500002
M81MODBD WTO   'IEF177I WTR DDD INVALID MODIFY KEYWORD',MF=L,          C67600002
               ROUTCDE=(2),DESC=(3)                                     67700002
M81MODPM WTO   'IEF178I WTR DDD MODIFY PARAMETER INVALID',MF=L,ROUTCDE=C67800002
               (2),DESC=(3)                                             67900002
         END                                                            68000002
./  ADD  SSI=43650023,NAME=IASXSD82
SD82     TITLE 'IASXSD82 - ACCESS SYSOUT DATA SETS FROM HASP'           00080000
*********************************************************************** 00160000
*                                                                     * 00240000
*STATUS CHANGE LEVEL 000                                              * 00320000
*                                                                     * 00400000
*FUNCTION OF THIS MODULE:                                             * 00480000
*                                                                     * 00560000
*    1. PREPARE TO PUT OUT A DATA SET.                                * 00640000
*    2. ISSUE IEFSSREQ TO OBTAIN A DATA SET FROM HASP.                * 00720000
*    3. DYNAMICALLY ALLOCATE THE DATA SET RECEIVED FROM HASP.         * 00800000
*    4. PUT OUT MESSAGES TO THE OPERATOR INDICATING PAUSE BETWEEN     * 00880000
*       DATA SETS OR FORMS CHANGE.                                    * 00960000
*    5. WRITE TYPE 6 SMF RECORD PER JOB OR FORM WITHIN JOB.           * 01040000
*    6. ATTACH IEFSD087 OR USER WRITTEN WRITER.                       * 01120000
*    7. WAIT FOR WORK IF HASP HAS NO DATA SETS ELGIBLE FOR WRITER.    * 01200000
*                                                                     * 01280000
*OPERATION OF THIS MODULE:                                            * 01360000
*    ENTRY POINT:                                                     * 01440000
*       IASXSD82 - FROM IASXSD81                                      * 01520000
*                                                                     * 01600000
*    EXIT POINT 1 - ATTACH IEFSD087 OR USER WRITER                    * 01680000
*    EXIT POINT 2 - RETURN TO VS WHEN STOP COMMAND RECEIVED           * 01760000
*    EXIT POINT 3 - TO IASXSD81 TO PROCESS A MODIFY COMMAND           * 01840000
*                                                                     * 01920000
*EXTERNAL ROUTINES:                                                   * 02000000
*                                                                     * 02080000
*    IEFSD087 - STANDARD OUTPUT WRITER OR USER WRITER                 * 02160000
*    IEFSSREQ - INTERFACE TO HASP TO OBTAIN WORK                      * 02240000
*                                                                     * 02320000
*ATTRIBUTES - REENTRANT, REUSABLE, KEY1, SUPERVISOR STATE             * 02400000
*                                                                     * 02480000
*                                                                     * 02560000
*REGISTER USAGE:                                                      * 02640000
*                                                                     * 02720000
*    R1-R4- WORK REGISTERS                                            * 02800000
*    R5   - OUTPUT AND INPUT DCB ADDRESSABILITY                       * 02880000
*    R6   - ADDRESS OF PARLIST                                        * 02960000
*    R7   - SSOB ADDRESSABILTTY                                       * 03040000
*    R8   - DYNAMIC ALLOCATION RB ADDRESSABILITY                      * 03120000
*    R9   - BASE REGISTER                                             * 03200000
*    R10  - ERROR MESSAGES ADDRESSABILITY                             * 03280000
*    R14  - RETURN REGISTER                                           * 03360000
*                                                                     * 03440000
*CORE USAGE:                                                          * 03520000
*                                                                     * 03600000
*    ONE GETMAIN IS ISSUED FOR THE FOLLOWING AREAS                    * 03680000
*                                                                     * 03760000
*        1.  WORKLST                                                  * 03840000
*        2.  SAVE AREA FOR EXTERNAL WRITER                            * 03920000
*        3.  INPUT DCB, OPEN AND CLOSE LISTS                          * 04000000
*        4.  ECBLIST, ATACHLIST,ETC.                                  * 04080000
*        5.  FOUR BYTES FOR READ JFCB L-FORM DATA                     * 04160000
*        6.  JFCB FOR INPUT DCB                                       * 04240000
*        7.  VALID WRITER NAME TABLE                                  * 04320000
*        8.  SMF RECORD AREA                                          * 04400000
*        9.  ALLOC PARAMETER LIST                                     * 04480000
*                                                                     * 04560000
*********************************************************************** 04640000
         EJECT                                                          04720000
IASXSD82 CSECT                                                          04800000
R0       EQU   0                                                        04880000
R1       EQU   1                                                        04960000
R2       EQU   2                                                        05040000
R3       EQU   3                                                        05120000
R4       EQU   4                                                        05200000
R5       EQU   5                                                        05280000
R6       EQU   6                                                        05360000
R7       EQU   7                                                        05440000
R8       EQU   8                                                        05520000
R9       EQU   9                                                        05600000
R10      EQU   10                                                       05680000
R11      EQU   11                                                       05760000
R12      EQU   12                                                       05840000
R13      EQU   13                                                       05920000
R14      EQU   14                                                       06000000
R15      EQU   15                                                       06080000
VARSP    EQU   X'48'               VARIABLE  SPANNED RECFM              06160000
SUBPOOL  EQU   245                 SUBPOOL FOR CSCB                     06240000
CSCBSIZ  EQU   64                  CSCB SIZE                            06320000
MODFCM   EQU   X'08'               MODIFY COMMAND BIT                   06400000
STOPCM   EQU   X'10'               STOP COMMAND BIT                     06480000
NOENTRYS EQU   8                   NO. OF ENTRIES IN TABLE              06560000
ENTRYSIZ EQU   8                   SIZE OF EACH ENTRY                   06640000
TBLESIZ  EQU   NOENTRYS*ENTRYSIZ   SIZE OF VALID NAMES TABLE            06720000
SAVEAREA EQU   72                                                       06800000
WAITAND  EQU   X'7F'               CLEAR WAIT FLAG                      06880000
SIZPRG   EQU   12                  SIZE OF PURGE PARAMETER LIST         06960000
PRGDEB   EQU   0                   ADDRESS OF DEB IN PURGE LIST         07040000
PRGOPT   EQU   0                   OTION BYTE IN PURGE LIST             07120000
PRGTCB   EQU   4                   ADDRESS OF TCB IN PURGE LIST         07200000
PRGUSR   EQU   8                   ADDRESS OF PURGE LINK FIELD          07280000
PURGOPT  EQU   X'E4'               PURGE RQE'S FOR DEB ONLY,            07360000
*                                   POST PURGED REQUESTS, HALT I/O OPTS 07440000
PRGOPT2  EQU   X'84'               PURGE BY DEV, POST, & QUIESCE OPTION 07520000
DEBTCBAD EQU   0                   ADDR. OF TCB IN DEB                  07600000
DEBUSRPG EQU   16                  USER PURGE CHAIN                     07680000
ENTRY82  EQU   X'FF'               INDICATOR FOR IEFSD094 THAT          07760000
*                                   ENTRY IS FROM IASXSD82              07840000
TTETYPE  EQU   X'09'               3211 UNIT TYPE                       07920000
UCBFDF   EQU   X'80'               UCB FCB ID IS DEFAULT ID             08000000
UCBUDF   EQU   X'80'               UCB UCS ID IS DEFAULT ID             08080000
ZERO     EQU   0                                                        08160000
         EJECT                                                          08240000
         BALR  R9,0                SET UP BASE REGISTER                 08320000
         USING *,R9                                                     08400000
         LR    R6,R1               SAVE PARM REG                        08480000
         USING PARLIST,R6                                               08560000
         XC    PARXXX(8),PARXXX    INDICATE NO SPANNING MODULE          08640000
         OI    PARDUM,PARWAIT      INDICATE WRITER IS TO WRITE WAIT MSG 08720000
         L     R10,MSGADDR         GET MESSAGE ADDRESS                  08800000
         USING IASXS82M,R10                                             08880000
         L     R5,PARDCB           ADDRESS OF OUTPUT DCB                08960000
         USING IHADCB,R5                                                09040000
         TM    DCBRECFM,VARSP      IF NOT VS, DON'T LOAD XXX            09120000
         BNO   SD82WKT                                                  09200000
***                                                                 *** 09280000
*   LOAD VARIABLE SPANNING MODULE AND GET WORK AREA FOR IT            * 09360000
***                                                                 *** 09440000
         LOAD  EP=IEFSDXXX         LOAD THE VARIABLE SPANNING MODULE    09520000
         ST    R0,PARXXX           SAVE THE ADDRESS OF THE MODULE       09600000
         LA    R0,WORKFEND-WORKFXXX     GET CORE FOR SPANNING WORK AREA 09680000
         GETMAIN R,LV=(0)                                               09760000
         ST    R1,PARXXA           SAVE ADDRESS OF WKX                  09840000
SD82WKT  LA    R0,SD82CORE         GET SIZE OF CORE NEEDED FOR IEFSD082 09920000
         GETMAIN R,LV=(0)          GET CORE FOR INPUT DCB WKT, ETC.     10000000
         ST    R1,PARWKLST         SAVE ADDRESS OF CORE           .     10080000
         USING WORKLST,R1                                               10160000
         LA    R2,WORKT(R1)        ADDRESS OF SAVE AREA                 10240000
         ST    R13,4(R2)           SAVE CONTENT OF SAVE REGISTER        10320000
         LR    R13,R2              NEW SAVE AREA ADDRESS                10400000
         LA    R2,SAVEAREA(R2)     INCREMENT TO DCB ADDRESS             10480000
         ST    R2,DCBIN            SAVE DCB ADDRESS                     10560000
         LA    R3,IDCB(R2)         ADDRESS OF ECB AND ATTACH LISTS      10640000
         ST    R3,VARAR            STORE LISTS ADDR IN WORKLST          10720000
         LA    R2,ATCHADDR+ATCHLST+4(R3)  ADDRESS OF INPUT DCB JFCB     10800000
         ST    R2,WJFCB            SAVE ADDR OF INPUT DCB JFCB          10880000
         LA    R2,JFCBLGTH(R2)     ADDRESS OF VALID WRITER NAMES TABLE  10960000
         MVI   0(R2),X'00'         CLEAR WRITER NAME TABLE              11040000
         MVC   1(TBLESIZ-1,R2),0(R2)    CLEAR WRITER NAME TABLE         11120000
         ST    R2,PARNAMES         SAVE ADDR. OF NAME TABLE             11200000
         LA    R2,TBLESIZ(R2)      ADDRESS OF SMF RECORD                11280000
         ST    R2,PARSMF           SAVE ADDRESS OF SMF RECORD           11360000
         LA    R2,SMF6(R2)         ADDRESS OF DYNAMIC ALLOCATE PARM LST 11440000
         ST    R2,PARALLOC         STORE ADDRESS OF ALLOC AREA          11520000
         XC    PARSMB,PARSMB       ZERO PARSMB                          11600000
***                                                                 *** 11680000
*   INITIALIZE WORKLST                                                * 11760000
***                                                                 *** 11840000
         ST    R13,WOSAP           USE SAME SAVE REGISTER               11920000
         ST    R6,WOSPS            ADDRESS OF PARLIST                   12000000
         MVC   DCBOT(4),PARDCB     ADDRESS OF OUTPUT DCB                12080000
         MVC   WOXXX(8),PARXXX     ADDRESS OF SPANNING MODULE AND WORK  12160000
         L     R3,16               GET TCB ADDR.                        12240000
         L     R3,0(R3)                                                 12320000
         L     R3,4(R3)            NOW HAVE TCB ADDR.                   12400000
         USING TCB,R3              TCB ADDRESSABILITY                   12480000
         MVC   WOTIO(4),TCBTIO     GET TIOT PTR. FOR WORKLST            12560000
         L     R2,TCBJSCB          ADDRESS OF JSCB                      12640000
         USING IEZJSCB,R2          JSCB ADDRESSABILITY                  12720000
         L     R2,JSCBSSIB         ADDRESS OF SSIB                      12800000
         USING SSIB,R2             USE SSIB TO GET SUBSYSTEM NAME       12880000
         TM    PARSWCH,PARDUMMY    IS THIS A DUMMY DATA SET             12960000
         BZ    NODUMMY             NO                                   13040000
         OI    VARBA,UNRWR         TURN ON UNIT RECORD SWITCH           13120000
         B     SD82NDWK            BRANCH OUT                           13200000
NODUMMY  L     R4,PARUCB           GET ADDR OF OUTPUT UCB               13280000
         USING UCBOB,R4                                                 13360000
         TM    UCBTBYT3,UCB3UREC   TEST FOR UNIT RECORD                 13440000
         BZ    SD82TFPT            NO                                   13520000
         OI    VARBA,UNRWR         TURN ON UNIT RECORD SWITCH           13600000
         CLI   UCBTBYT4,X'0C'      CHECK FOR 3525 PUNCH                 13680000
         BE    PCHTYP              YES                                  13760000
         TM    UCBTBYT4,X'F8'      TEST FOR NO-PUNCH                    13840000
         BNE   SD82NDWK            BRANCH OUT IF SO                     13920000
PCHTYP   OI    VARBA,PUNSH         TURN ON PUNCH SWITCH                 14000000
         CLI   UCBTBYT4,X'03'      TEST FOR 1442                        14080000
         BNE   SD82NDWK            BRANCH OUT                           14160000
         OI    VARBA,FTFTW         TURN ON 1442 SWITCH                  14240000
         B     SD82NDWK            BRANCH OUT                           14320000
SD82TFPT TM    PARSWCH,PARPUN      TEST FOR PUNCH TYPE                  14400000
         BZ    SD82NDWK            BRANCH OUT                           14480000
         OI    VARBA,PUNSH         TURN ON PUNCH SWITCH                 14560000
         DROP  R1,R4                                                    14640000
SD82NDWK EQU   *                                                        14720000
***                                                                 *** 14800000
*        INITIALIZE DYNAMIC ALLOCATION PARAMETER AREA                 * 14880000
***                                                                 *** 14960000
         L     R8,PARALLOC                                              15040000
         LR    R1,R8                 ADDRESS OF PARALLOC                15120000
         LA    R8,4(R8)            INCREMENT TO DAL REQUEST BLOCK       15200000
         ST    R8,0(R1)            SET UP RB PTR ADDR.                  15280000
         OI    0(R1),S99RBPND                                           15360000
         USING S99RB,R8                                                 15440000
         XC    S99RB(DYNRBSIZ),S99RB                                    15520000
         MVI   S99RBLN,DYNRBSIZ    SIZE OF RB                           15600000
         LA    R3,DYNRBSIZ(R8)     INCREMENT TO FIRST TEXT POINTER      15680000
         USING DYNTXTPT,R3                                              15760000
         LA    R4,TXTPTSIZ(R3)     INCREMENT TO TEXT UNITS              15840000
         USING S99TUNIT,R4                                              15920000
         ST    R4,DSNTXTPT         SET UP ADDR OF FIRST TEXT UNIT       16000000
         XC    S99TUKEY(DYNEND-DYNTXTND),S99TUKEY ZERO TEXT UNITS       16080000
         MVI   S99TUKEY+1,DALDSNAM DSNAME IS SUPPLIED TO SVC99          16160000
         MVI   S99TUNUM+1,X'01'    NUMBER OF ENTRIES                    16240000
         MVI   S99TULNG+1,44       SIZE OF DSNAME                       16320000
         LA    R4,L'DSNTXTUT(R4)   INCREMENT TO SSREQ TEXT UNIT         16400000
         ST    R4,SSRTXTPT         ADDRESS OF SSREQ TEXT UNIT           16480000
         MVI   S99TUKEY+1,DALSSREQ THIS IS A REQUEST FOR SUBSYSTEM      16560000
         MVI   S99TULNG+1,4        LENGTH OF PARM FIELD                 16640000
         MVC   S99TUPAR(4),SSIBSSNM PRIMARY SUBSYSTEM NAME              16720000
         DROP  R2                  UNUSE SSIB                           16800000
         MVI   S99TUNUM+1,X'01'    NUMBER OF REQUESTS                   16880000
         LA    R4,L'SSRTXTUT(R4)   INCREMENT TO DDN TEXT UNIT           16960000
         ST    R4,DDNTXTPT         ADDR OF DDNAME RETURNED TEXT UNIT    17040000
         MVI   DDNTXTPT,S99TUPLN   LAST TEXT UNIT PTR. IN LIST          17120000
         MVI   S99TUKEY+1,DALRTDDN RETURN DDNAME TO ME                  17200000
         MVI   S99TUNUM+1,X'01'    NUMBER OF ENTRIES                    17280000
         MVI   S99TULNG+1,8        LENGTH OF PARM FIELD                 17360000
         MVC   S99TUPAR(8),BLANKS  INITIALIZE TO BLANKS                 17440000
         LA    R4,L'DDNTXTUT(R4)   INCREMENT TO DDNAME UNALLOC TEXT     17520000
         ST    R4,UDNTXTPT         SAVE UNALLOC TEXT ADDRESS            17600000
         MVI   S99TUKEY+1,DUNDDNAM USE DDNAME TO UNALLOCATE             17680000
         MVI   S99TUNUM+1,X'01'    NUMBER OF ENTRIES                    17760000
         MVI   S99TULNG+1,8        LENGTH OF PARM FIELD                 17840000
         LA    R4,L'UDNTXTUT(R4)   INCREMENT TO OVERRIDE TEXT           17920000
         ST    R4,UORTXTPT         SAVE ADDRESS OF OVERRIDE TEXT        18000000
         MVI   UORTXTPT,S99TUPLN   LAST TEXT UNIT PTR. IN LIST          18080000
         MVI   S99TUKEY+1,DUNOVDSP OVERRIDE DISPOSITION KEY             18160000
         MVI   S99TULNG+1,1        LENGTH OF PARM FIELD                 18240000
         MVI   S99TUNUM+1,X'01'    NUMBER OF ENTRIES                    18320000
         DROP  R4                                                       18400000
         DROP  R3                                                       18480000
***                                                                 *** 18560000
*        INITIALIZE FIRST TYPE 6 RECORD                               * 18640000
***                                                                 *** 18720000
         L     R3,PARSMF                                                18800000
         USING SMFREC,R3                                                18880000
         XC    SMFREC(SMF6),SMFREC ZERO SMF RECORD                      18960000
         MVI   SMFLEN1+1,SMFEND-SMFLEN1 LENGTH OF SECTION               19040000
         MVI   SMFRECTP,X'06'      RECORD TYPE                          19120000
         MVI   SMFLLBB+1,(SMFENDFM-SMFLLBB)+(SMFEND-SMFRSV1) SIZE OF 6  19200000
         TIME  BIN                                                      19280000
         STM   R0,R1,SMFWORKA      SAVE START TIME AND DATE             19360000
         MVC   SMFSTTM(8),SMFWORKA PUT TIME AND DATE IN SMF RECORD      19440000
         DROP  R3                                                       19520000
***                                                                 *** 19600000
*   SET UP SSOB TO ISSUE IEFSSREQ TO ACCESS A DATA SET                * 19680000
***                                                                 *** 19760000
SD82SSOB EQU   *                                                        19840000
         L     R1,PARWORK          GET ADDRESS OF CORE FOR SSOB         19920000
         LA    R7,4(R1)            INCREMENT TO SSOB ITSELF             20000000
         USING SSOB,R7                                                  20080000
         ST    R7,0(R1)            SET UP ADDR OF ADDR OF SSOB IN R1    20160000
         OI    0(R1),X'80'                                              20240000
         XC    SSOBEGIN(SSOBHSIZ),SSOBEGIN   CLEAR SSOB HEADER          20320000
         LA    R2,SSOBGN           INITIALIZE SSOB                      20400000
         XC    0(SSSOSIZE,R2),0(R2)     CLEAR SYSOUT EXTENSION          20480000
         MVC   SSOB(WTRSOSIZ),WTRSSOB   INITIALIZE HEADER               20560000
         ST    R2,SSOBINDV         ADDRESS OF SYSOUT EXTENSION          20640000
         LA    R4,SSSOSIZE         SYSOUT EXTENSION SIZE                20720000
         STH   R4,0(R2)            SET UP SIZE OF SYSOUT EXTENSION      20800000
         MVC   SSSOPGMN,BLANKS     INITIALIZE WRITER NAME TO BLANKS     20880000
         OI    SSSOFLG1,SSSODST    DEFAULT DESTINATION IS LOCAL         20960000
         MVC   SSSODEST(8),=C'LOCAL   ' SET DEFAULT DESTINATION         21040000
         TM    PARDUM,PARMOD       IS WRITER TO WAIT FOR MODIFY COMND?  21120000
         BO    SD82WAIT            YES, GO WAIT                         21200000
         OI    SSSOFLG1,SSSOSCLS   INDICATE USE CLASS LIST              21280000
SD82CLSL MVC   SSSOCLSL,PARGCLN    SET UP CLASS LIST IN SSOB            21360000
SD82HASP EQU *                                                          21440000
         IEFSSREQ                  ASK HASP FOR WORK                    21520000
         LTR   R15,R15             TEST RETURN CODE                     21600000
         BZ    SD82RTRN            NORMAL RETURN                        21680000
         LA    R11,SD82M1          SET UP ADDRESS OF ERR MSG            21760000
         STH   R15,PARSMB+2        SAVE RETURN FROM SUBSYSTEM   OZ02411 21840000
         B     SD82STOP                                                 21920000
SD82RTRN EQU   *                                                        22000000
         C     R15,SSOBRETN                                             22080000
         BE    SD82NEXT            NORMAL RETURN                        22160000
         LA    R2,4                COMPARE RETURN TO 4                  22240000
         C     R2,SSOBRETN         ARE THERE ANY MORE DATA SETS.        22320000
         BE    SD82WAIT            NO, WAIT FOR WORK                    22400000
         OI    PARDUM,PARMOD+PARWAIT    WRITE MSG. AND WAIT ON ONE ECB  22480000
         L     R14,PARWKLST        ADDRESS WORK LIST                    22560000
         USING WORKLST,R14         ADDRESS WORK LIST                    22640000
         L     R1,WJFCB            WORK AREA FOR WTO SKELETON           22720000
         DROP  R14                                                      22800000
         LA    R11,M82KEYBD        INVALID JOBID/DEST MSG               22880000
         MVC   0(SIZINVAL,R1),0(R11)    MOVE IN MSG. SKELETON           22960000
         MVC   WTRNAM(3,R1),PARWTRNM  PUT IDENT. OF WTR IN MSG.         23040000
         NI    SSSOFLG2,255-SSSOCTRL    TURN CONTROL BIT OFF            23120000
         CLI   SSOBRETN+3,SSSOIDST WAS THERE A DEST. ERROR              23200000
         BNE   SD82SSJB            NO, GO TEST FOR JOBID ERROR          23280000
         LA    R2,SSSODEST         ADDRESS OF DEST IN SSOB              23360000
         MVC   DESTDISP(5,R1),=C'DEST '      MOVE DEST INTO MSG.        23440000
         B     WRITDJ              GO WRITE MSG.                        23520000
SD82SSJB CLI   SSOBRETN+3,SSSOINVA IS RETURN INVALID SEARCH ARGUMENTS   23600000
         BNE   SD82SSER            NO, GO PRINT SS ERR.                 23680000
         TM    SSSOFLG1,SSSOSJBI   DO I SELECT BY JOBID?                23760000
         BZ    SD82SSER            NO, THEN IT IS LOGIC ERROR           23840000
         LA    R2,SSSOJOBI         ADDRESS OF JOBID IN SSOB             23920000
WRITDJ   MVC   DISPPARM(8,R1),0(R2)     MOVE SSOB FIELD INTO MSG.       24000000
         WTO   MF=(E,(1))          WRITE MSG.                           24080000
         B     SD82WAIT            GO WAIT FOR NEW COMMAND              24160000
SD82SSER EQU   *                                                        24240000
         LA    R11,SD82M1          ADDR. OF ERROR MSG.                  24320000
         MVC   PARSMB+2(2),SSOBRETN+2        SAVE RETURN CODE           24400000
         MVI   PARSMB,X'FF'        INDICATE MSG. IS SSOBRETN            24480000
         B     SD82STOP                                                 24560000
SD82NEXT EQU   *                                                        24640000
***                                                                 *** 24720000
*  DETERMINE IF WRITER NAME IS VALID OR IF OPERATOR MUST BE QUESTIONED* 24800000
***                                                                 *** 24880000
         OI    PARDUM,PARWAIT      PRINT WAIT MSG. NEXT TIME            24960000
         L     R2,PARWKLST         ADDRESS WORK LIST                    25040000
         USING WORKLST,R2                                               25120000
         MVC   WOWRN(8),OSWTR      SET UP STD. NAME AS DEFAULT          25200000
         CLC   SSSOPGMN,BLANKS     WAS THERE A SPECIAL WTR NAME?        25280000
         BE    SD82DAL             NO                                   25360000
         CLC   SSSOPGMN,OSWTR      IS EXTERNAL WRITER NAME = IBM NAME?  25440000
         BE    SD82DAL             YES                                  25520000
         LA    R1,NOENTRYS         ENTRIES IN NAME TABLE                25600000
         L     R3,PARNAMES         ADDR. OF VALID WRITER NAMES          25680000
TESTNAME CLC   SSSOPGMN,0(R3)      IS NAME IN TABLE                     25760000
         BE    SD82USE             YES                                  25840000
         CLI   0(R3),X'00'         IS THIS END OF TABLE                 25920000
         BE    ASKOPER             YES, OPERATOR MUST VALIDATE NAME     26000000
         LA    R3,ENTRYSIZ(R3)     INCREMENT TO NEXT ENTRY              26080000
         BCT   R1,TESTNAME         TRY AGAIN                            26160000
         L     R3,PARNAMES         POINT TO BEGINNING OF TABLE          26240000
         MVC   0(TBLESIZ-ENTRYSIZ,R3),ENTRYSIZ(R3) WIPE OUT FIRST ENTRY 26320000
         LA    R3,TBLESIZ-ENTRYSIZ(R3)  POINT TO LAST ENTRY IN TABLE    26400000
ASKOPER  L     R4,WJFCB            GET ADDR. OF MSG AREA                26480000
         LA    R11,SD82M6          ADDR. OF MSG.                        26560000
         SLR   R1,R1               ZERO REGISTER                        26640000
         ST    R1,0(,R4)           ZERO ECB                             26720000
         STH   R1,4(,R4)           ZERO REPLY AREA                      26800000
         MVC   6(8,R4),BLANKS      BLANK OUT REPLY AREA                 26880000
         ST    R4,OECBL(R4)        STORE ADDR. OF ECB IN WTOR           26960000
         LA    R1,OREPLY(R4)       INCREMENT TO REPLY AREA              27040000
         ST    R1,OREPLL(R4)       STORE ADDR. OF REPLY AREA IN WTOR    27120000
         MVI   OREPLL(R4),10       PUT IN LENGTH 10 FOR REPLY           27200000
         MVC   OWTORH(LENVALID,R4),0(R11)    MOVE MSG. SKELETON         27280000
         MVC   OFSETO(3,R4),PARWTRNM    PUT IN WRITER IDENT.            27360000
         MVC   MSGNAME(8,R4),SSSOPGMN   NAME OF WRITER TO BE VALIDATED  27440000
         MVC   JOBIDSP(8,R4),SSSOJOBI   PRINT JOBID                     27520000
         LA    R1,OREPLL(,R4)      WTOR LOCATION                        27600000
         WTOR  MF=(E,(1))          WRITE TO OPERATOR                    27680000
         LR    R1,R4               ECB ADDR.                            27760000
         WAIT  ECB=(1)             WAIT FOR REPLY                       27840000
         CLI   OREPLY(R4),C'U'     USE THE NAME?                        27920000
         BNE   SD82NO              NO, CONTINUE TESTING                 28000000
         MVC   0(8,R3),SSSOPGMN    PUT VALID WTR NAME IN TABLE          28080000
SD82USE  MVC   WOWRN(8),SSSOPGMN   USE WRITER NAME                      28160000
         B     SD82DAL             GO ALLOCATE DATA SET                 28240000
SD82NO   CLI   OREPLY(R4),C'N'     DON'T WRITE DATA SET?                28320000
         BNE   SD82DAL             NO, USE DEFAULT                      28400000
         CLI   OREPLY+1(R4),C','   IS ANOTHER NAME TO BE SUBSTITUTED?   28480000
         BNE   SD82ALUN            BO, BYPASS THIS DATA SET             28560000
         MVC   WOWRN(8),OREPLY+2(R4)    USE NAME SUPPLIED BY OPERATOR   28640000
SD82DAL  EQU   *                   DYNAMICALLY ALLOCATE DATA SET        28720000
***                                                                 *** 28800000
*    SET UP TO DYNAMICALLY ALLOCATE DATA SET                          * 28880000
***                                                                 *** 28960000
         MVI   S99VERB,S99VRBAL    ALLOCATION VERB                      29040000
         LA    R3,DISPDSN(R8)      ADDR. DSNAME TEXT UNIT               29120000
         ST    R3,S99TXTPP         STORE ADDR OF TEXT UNIT PTRS         29200000
         L     R4,0(,R3)           ADDR OF FIRST TEXT UNIT              29280000
         MVC   6(44,R4),SSSODSN    GET DATA SET NAME FROM SSOB          29360000
         BAL   R11,DYNAL           DYNAMICALLY ALLOCATE DATA SET        29440000
***                                                                 *** 29520000
         MVC   DCBLRECL(2),PARLRECL     RESET OUTPUT DCB LRECL          29600000
         L     R2,PARWKLST         GET WORKLST ADDRESSABILITY           29680000
         USING WORKLST,R2                                               29760000
         L     R3,PARSMF                                                29840000
         USING SMFREC,R3           ADDRESS SMF RECORD                   29920000
         CLC   SSSOJOBN,SMFJOBNM   DID JOB NAME CHANGE                  30000000
         BE    SD82SAME            NO                                   30080000
         CLI   SMFCLASS,0          IS THIS THE FIRST JOB                30160000
         BNE   CHSEP               NO, CONTINUE WITH SEPARATOR TEST     30240000
         BAL   R4,CRE8NEW          GO INITIALIZE SMF RECORD             30320000
CHSEP    EQU   *                                                        30400000
***                                                                 *** 30480000
*   CALL JOB SEPARATOR ROUTINE, IF APPLICABLE                         * 30560000
***                                                                 *** 30640000
         L     R4,PARJBSEP         ADDRESS OF SEPARATOR ROUTINE         30720000
         CLC   0(8,R4),BLANKS      IS THERE A JOB SEPARATOR ROUTINE     30800000
         BE    SD82SAME            NO JOB SEPARATOR ROUTINE             30880000
         TM    PARSWCH,PARDUMMY    IS OUTPUT DUMMY DATA SET             30960000
         BO    SD82SEP             YES                                  31040000
         L     R1,PARUCB           NO, GET ADDRESS OF OUTPUT DCB        31120000
         USING UCBOB,R1            ADDRESS UCB                          31200000
         TM    UCBTBYT3,UCB3UREC   IS DEVICE CLASS UNIT RECORS          31280000
         BNO   SD82SEP             NO, CONTINUE                         31360000
         TM    UCBTBYT4,TTETYPE    IS UNIT TYPE A 3211 PRINTER          31440000
         BNO   SD82SEP             NO                                   31520000
* CHECK OUTPUT UCB FOR DEFAULT LOADS IN UCS/FCB BUFFERS                 31600000
         L     R1,UCBXTADR         SHIFT TO UCB/UCS EXTENSION           31680000
         USING UCBUCS,R1                                                31760000
         TM    UCBUCSOP,UCBUDF     IS DEFAULT VALID                     31840000
         BO    CHKFCB              CONTINUE                             31920000
         CLI   PARUCSID,ZERO       DO I HAVE A UCSID                    32000000
         BNE   TTENT               YES                                  32080000
CHKFCB   TM    UCBFCBOP,UCBFDF     IS PRESENT FCB IMAGE DEFAULT?        32160000
         BO    SD82SEP             YES, NORMAL OPERATION                32240000
         CLI   PARFCBID,ZERO       WAS FCB LOADED?                      32320000
         BE    SD82SEP             NO                                   32400000
TTENT    OI    PARSWCH,PARTTE1     TURN ON TTE ENTRY SW                 32480000
         ST    R13,PARSAP          SET UP SAVE AREA ADDRESS FOR TTE     32560000
         LA    R13,PARSAV          SAVE AREA FOR TTE                    32640000
         DROP  R1                                                       32720000
         LR    R1,R8               ADDRESS OF PARLIST IN R1             32800000
         L     R7,PARWKLST         ADDRESS OF WORKLST FOR TTE           32880000
* LINK TO THE 3211 SUPPORT MODULE                                     * 32960000
         LINK  EP=IEFSDTTE,MF=(E,(1))   LINK TO 3211 PROCESSOR          33040000
         L     R13,PARSAP          RELOAD R13                           33120000
         USING WORKLST,R7          WORK LIST ADDRESSABLILTY             33200000
         L     R7,WOSAP            ERROR RETURN ADDRESS                 33280000
         CLI   19(R7),0            DID TTE GIVE AN ERROR RETURN         33360000
         BNE   SD82NORM            YES                                  33440000
         L     R7,PARWORK          GET ADDRESS OF SSOB                  33520000
         LA    R7,4(R7)            RESTORE ADDRESS OF SSOB              33600000
         USING SSOB,R7             RESTORE SSOB ADDRESSABILITY          33680000
         B     SD82SEP             GO TO JOB SEPARATOR ROUTINE          33760000
SD82SAME EQU   *                                                        33840000
         TM    VARBA,UNRWR         NO SMF OR PAUSE IF NOT UNIT RECORD   33920000
         BNZ   SD82UR              OUTPUT DEVICE IS UNIT RECORD         34000000
         MVC   SMFJOBNM(8),SSSOJOBN     CHANGE SMF JOB NAME             34080000
         B     SD82DCB             GO INITIALIZE DCB                    34160000
SD82UR   SLR   R1,R1               CLEAR R1                             34240000
         CLC   SMFJOBNM(8),SSSOJOBN     DID JOBNAME CHANGE              34320000
         BE    TCLAS               NO, TEST FOR CLASS CHANGE            34400000
         LA    R1,1(R1)            INCREMENT R1 TO INDICATE SMF         34480000
TCLAS    CLC   SMFCLASS(1),SSSOCLAS     DID CLASS CHANGE                34560000
         BE    TFORM               NO                                   34640000
         LA    R1,1(R1)            INDICATE SMF NEEDED                  34720000
TFORM    CLC   PARFORM(4),SSSOFORM DID FORM CHANGE?                     34800000
         BE    TSMF                NO                                   34880000
         BAL   R4,WRITSMF          WRITE SMF RECORD                     34960000
         MVC   PARFORM(4),SSSOFORM INDICATE NEW FORM UNMBER             35040000
         LA    R11,M82FORM         FORMS MOUNT MESSAGE ADDRESS          35120000
         SR    R15,R15             INDICATE THIS IS FORMS MOUNT MSG.    35200000
         B     SD82WTOR            GO WRITE MSG                         35280000
TSMF     LTR   R1,R1               WRITE SMF RECORD?                    35360000
         BZ    TPAUS               NO, TEST FOR PAUSE BY DATA SET       35440000
         BAL   R4,WRITSMF          GO WRITE SMF RECORD                  35520000
TPAUS    TM    PARSWCH,PARDAT                                           35600000
         BZ    SD82DCB             NO PAUSE BY DATA SET                 35680000
         LA    R11,SD82M7          ADDRESS OF PAUSE MSG.                35760000
         LA    R15,1(,R15)         MAKE R15 NON-ZERO                    35840000
         DROP  R3                                                       35920000
SD82WTOR L     R3,WJFCB            MESSAGE AREA                         36000000
         MVI   0(R3),X'00'         ZERO FIRST TWO WORDS                 36080000
         MVC   1(7,R3),0(R3)       ZERO FIRST TWO WORDS                 36160000
         ST    R3,RECBL(R3)        PUT IN PTR. TO ECB                   36240000
         LA    R14,REPLY(,R3)      REPLY LOCATION                       36320000
         ST    R14,REPLL(,R3)      POINT TO IT                          36400000
         MVI   REPLL(R3),1         PUT IN LENGTH 1 FOR REPLY            36480000
         MVC   WTORH(LENGTH,R3),0(R11)  MOVE IN MSG. SKELETON           36560000
         MVC   OFSET(3,R3),PARWTRNM     WRITER IDENTITY                 36640000
         LTR   R15,R15             FORMS MSG.?                          36720000
         BNZ   PIPAS               NO                                   36800000
         MVC   FORMN(4,R3),PARFORM MOVE IN FORM NUMBER                  36880000
PIPAS    LA    R1,REPLL(,R3)       INCREMENT TO MSG. ITSELF             36960000
         WTOR  MF=(E,(1))          WRITE TO OPERATOR                    37040000
         WAIT  ECB=(R3)            WAIT FOR REPLY                       37120000
SD82DCB  EQU   *                   INITIALIZE DCB                       37200000
*   INITIALIZE INPUT DCB                                              * 37280000
***                                                                 *** 37360000
         L     R5,DCBIN            GET ADDRESS OF INPUT DCB             37440000
         MVC   IHADCB(IDCB),INDCB  INITIALIZE INPUT DCB                 37520000
         L     R3,S99TXTPP         ADDRESS OF TEXT UNITS                37600000
         L     R4,DDNTXTPT-DYNTXTPT(R3) ADDRESS OF DDNAME TEXT UNIT     37680000
         MVC   DCBDDNAM(8),6(R4)   PUT DDNAME IN INPUT DCB              37760000
***                                                                 *** 37840000
*   READ JFCB FOR INPUT DCB                                           * 37920000
***                                                                 *** 38000000
         LA    R3,WJFCB            ADDRESS OF INPUT DCB JFCB CORE       38080000
         ST    R3,DCBEXLST         PUT JFCB ADDR. INTO INPUT DCB EXTLST 38160000
         MVI   WJFCB,X'87'         INDICATE THIS IS ONLY ENTRY          38240000
         LA    R3,4                FOUR                                 38320000
         L     R1,WJFCB            ADDRESS OF JFCB                      38400000
         SLR   R1,R3               ADDRESS OF L FORM OF READ JFCB       38480000
         MVC   0(L'JFCBL,R1),JFCBL PUT JFCB LIST INTO GOTTEN CORE       38560000
         RDJFCB ((R5)),MF=(E,(1))  READ JFCB                            38640000
         SLR   R3,R3               CLEAR R3                             38720000
         L     R1,WJFCB            GET ADDRESS OF JFCB                  38800000
         USING INFMJFCB,R1         ADDRESS JFCB                         38880000
         CLC   JFCUCSID(4),HASPDFLT     IS UCS HASP DEFAULT             38960000
         BNE   TSTFCB              NO, GO TEST FOR DEFAULT FCB          39040000
         ST    R3,JFCUCSID         MAKE DEFAULT ZERO                    39120000
TSTFCB   CLC   JFCFCBID(4),HASPDFLT     IS FCB HASP DEFAULT             39200000
         BNE   CONTCSCB            NO                                   39280000
         ST    R3,JFCFCBID         MAKE DEFAULT ZERO                    39360000
         DROP  R1                                                       39440000
CONTCSCB EQU   *                   GET CSCB                             39520000
***                                                                 *** 39600000
*   CREATE CANCEL CSCB FOR SUBTASK - CANCELABLE STEP TYPE             * 39680000
***                                                                 *** 39760000
         LA    R0,CSCBSIZ          GET SIZE OF CSCB                     39840000
         LR    R3,R0               SAVE CSCB SIZE                       39920000
         ICM   R0,8,SBPL           PUT SUBPOOL NUMBER IN HIGH ORDER BYT 40000000
         MODESET EXTKEY=ZERO       KEY TO ACCESS CSCB                   40080000
         GETMAIN R,LV=(0)          GET CORE FOR CSCB                    40160000
         USING CHAIN,R1            ADDRESSABILITY FOR CSCB              40240000
         MVI   CHAIN,X'00'         ZERO CSCB CORE                       40320000
         MVC   CHAIN+1(CSCBSIZ-1),CHAIN  ZERO CSCB CORE                 40400000
         SRL   R3,3                CONVERT TO DOUBLE WORD SIZE          40480000
         STC   R3,CHSZE            STORE CSCB SIZE                      40560000
         MVC   CHKEY(8),BLANKS     PUT IN PADDING OF BLANKS             40640000
         MVC   CHKEY(3),PARWTRNM   PUT IDENT. OF WTR IN CSCB            40720000
         MVC   CHUNIT(3),PARWTRNM  PUT IDENT. OF WTR IN CSCB            40800000
         L     R3,PARWKLST         GET ADDR. OF ECBLIST CORE            40880000
         USING WORKLST,R3                                               40960000
         SR    R2,R2               ZERO R2                              41040000
         ICM   R2,7,VARAR+1        GET ADDRESS OF LISTS                 41120000
         NI    VARBA,X'EF'         TURN OFF DATASET WTR-FAILURE SWITCH  41200000
         USING LISTS,R2                                                 41280000
         ST    R1,CSCBADDR         SAVE THE NEW CSCB ADDR.              41360000
         LA    R4,CHCECB           ECB ADDR IN NEW CSCB                 41440000
         ST    R4,WOTIQ                                                 41520000
         ST    R4,CHECBPTR                                              41600000
         SR    R0,R0               ZERO REGISTER ZERO                   41680000
         ST    R0,CHECB            CLEAR CANCEL ECB                     41760000
         ST    R0,ATACHECB         CLEAR ATTACH ECB                     41840000
         LA    R4,ATACHECB         SET UP ADDR OF ATTACH ECB            41920000
         ST    R4,ATECBPTR         ATTACH - ECB IN ECBLIST              42000000
         MVI   ATECBPTR,X'80'      MARK AS LAST ECB                     42080000
         MVI   CHTRKID,CHJOBID     INDICATE JOB IDENTIFIER              42160000
         L     R4,PSAAOLD-PSA      ADDRESS OF ASCB                      42240000
         LH    R4,ASCBASID-ASCB(,R4)    ADDRESS OF ASID                 42320000
         STH   R4,CHASID           BUT ASID INTO CSCB                   42400000
         OI    CHACT,CHCL          MARK CSCB 'CANCELABLE'               42480000
         OI    CHSTS,CHAD          INDICATE 'ADD TO CHAIN'              42560000
         MGCR  (1),CHAIN                                                42640000
         DROP  R1                                                       42720000
         MODESET EXTKEY=HASP       NORMAL KEY                           42800000
***                                                                 *** 42880000
*        ATTACH THE WRITER                                            * 42960000
***                                                                 *** 43040000
         LA    R1,IASXS82A                                              43120000
         IDENTIFY EP=IASXS82A,ENTRY=(1)                                 43200000
         LR    R1,R3               PARAMETER REGISTER FOR 087           43280000
         MVC   ATACHLST(SUPLEND-SUPVLIST),SUPVLIST MOVE ATTACH LIST     43360000
         L     R13,WOSAP           OLD SAVE AREA                        43440000
         XC    16(4,R13),16(R13)   INDICATE GOOD RETURN                 43520000
         LA    R13,WOSVA           REGISTER SAVE AREA                   43600000
         LA    R15,ATACHLST        ADDR. OF ATTACH LIST                 43680000
         LA    R14,ATACHECB        ADDRESS OF ECB FOR 087               43760000
         ST    R14,ATACHLST+8      PUT INTO ATTACH LIST                 43840000
         ATTACH SF=(E,(15))        AWAY WE GO                           43920000
         ST    R1,ATACHTCB         SAVE SUBTASK'S TCB ADDR.             44000000
         LA    R1,ATECBPTR         POINT TO ECBLIST                     44080000
         WAIT  ECBLIST=(1)         WAIT ON SUBTASK                      44160000
***                                                                 *** 44240000
*        AFTER REGAINING CONTROL, DETACH AND UNCHAIN AND FREE CSCB    * 44320000
***                                                                 *** 44400000
         MODESET EXTKEY=ZERO       KEY TO ACCESS CSCB                   44480000
         L     R1,CSCBADDR                                              44560000
         USING CHAIN,R1                                                 44640000
         NI    CHSTS,255-CHAD      TURN OFF ADD TO CHAIN INDICATOR      44720000
         OI    CHSTS,CHDL+CHFC     INDICATE DELETE AND FREE CORE        44800000
         MGCR  (1),CHAIN           GET RID OF CSCB                      44880000
         MODESET EXTKEY=HASP       NORMAL KEY                           44960000
         L     R5,DCBOT            GET OUTPUT DCB ADDRESS               45040000
         L     R11,WOSAP           GET ADDRESS ERROR RETURN PUT AT      45120000
         XC    16(4,R11),16(R11)   CLEAR RETURN INDICATION              45200000
         L     R1,ATECBPTR         LOAD ATTACH ECB PTR                  45280000
         MVC   19(1,R11),3(R1)     MOVE RC FROM ECB POST CODE TO R15    45360000
         L     R1,ATACHTCB         ADDR. OF SUBTASK TCB                 45440000
         MVI   S99VERB,S99VRBUN    UNALLOCATION VERB                    45520000
         DROP  R3                                                       45600000
         LA    R3,DISPUAL(R8)      INCREMENT TO UNAL                    45680000
         ST    R3,S99TXTPP         STORE ADDR. OF TEXT UNIT PTRS.       45760000
         L     R3,0(R3)            ADDRESS OF DDNAME FOR UNALLOCATE     45840000
         L     R4,DISPDDN(R8)      ADDRESS OF DDNAME UNIT               45920000
         MVC   6(8,R3),6(R4)       PUT DDNAME INTO TEXT FOR UNALLOC     46000000
         L     R4,DISPOVR(R8)      ADDRESS OF OVERIDE UNIT              46080000
         TM    16(R1),X'80'        TEST FOR SUCCESSFUL COMPLETION       46160000
         BO    KEEPDS              ABNORMAL RETURN FROM SUBTASK         46240000
         MVI   6(R4),X'04'         DELETE DATA SET                      46320000
         LA    R4,DETACH           NORMAL RETURN FROM SUBTASK           46400000
         B     DYNUN               UNALLOCATE WITH DELETE DISP          46480000
KEEPDS   MVI   6(R4),X'08'         KEEP DATA SET                        46560000
         LA    R4,BADSBTSK         BAD RETURN FROM SUBTASK              46640000
DYNUN    BAL   R11,DYNAL           DYNAMICALLY UNALLOCATE DATA SET      46720000
         BR    R4                  DETACH SUBTASK                       46800000
DETACH   EQU   *                                                        46880000
* RESTORE I/O PURGED AT END OF SUBTASK                                  46960000
         L     R1,DCBDEBAD         LOAD DEB POINTER                     47040000
         LA    R1,DEBUSRPG(R1)     ADDERESS OF USER PURGE CHAIN         47120000
         RESTORE (1)               SVC 17                               47200000
         LA    R1,ATACHTCB         LOAD SUBTASK TCB                     47280000
         DETACH (1)                DETACH IT                            47360000
         L     R2,PARSMF           ADDRESS SMF RECORD                   47440000
         USING SMFREC,R2           ADDRESSABILITY FOR SMF RECORD        47520000
         IC    R1,SMFDSCTF         GET DATA SET COUNT                   47600000
         LA    R1,1(,R1)           INCREMENT BY 1                       47680000
         STC   R1,SMFDSCTF         STORE NEW COUNT IN SMF RECORD        47760000
         DROP  R2                                                       47840000
TESTCSCB EQU   *                                                        47920000
         BAL   R2,SD82COMD         SEE IF COMMAND ECB POSTED            48000000
         L     R1,PARWORK          SSOB ADDR.                           48080000
         B     SD82HASP            GO GET MORE WORK                     48160000
SD82WAIT EQU   *                   SET UP TO WAIT FOR DIRECTION         48240000
         L     R2,PARWKLST         ADDR. OF WORK LIST                   48320000
         USING WORKLST,R2          WORK LIST ADDRESSABILITY             48400000
         TM    VARBA,UNRWR         NO SMF IF NOT UNIT RECORD            48480000
         BZ    SD82W               SKIP SMF                             48560000
         BAL   R4,WRITSMF          GO WRITE SMF RECORD IF NEEDED        48640000
SD82W    EQU   *                   CONTINUE                             48720000
         L     R1,WJFCB            USE JFCB AREA FOR MESSAGE AREA       48800000
         L     R4,VARAR            ADDR. OF ECBS,ETC.                   48880000
         USING LISTS,R4                                                 48960000
         DROP  R2                                                       49040000
         TM    PARDUM,PARWAIT      IS WRITER TO WRITE WAIT MSG.         49120000
         BZ    WAITWORK            NO                                   49200000
         LA    R11,M82WAIT         WAIT MESSAGE ADDRESS                 49280000
         LH    R3,0(R11)           GET SIZE OF MESSAGE                  49360000
         LA    R3,3(R3)            SIZE OF WHOLE WTO                    49440000
         EX    R3,SD82MSG          MOVE SKELETON TO MESSAGE AREA        49520000
         MVC   WTRNAM(3,R1),PARWTRNM  PUT IDENT. OF WTR IN MSG.         49600000
         LA    R3,CRITERIA(R1)     INCREMENT TO VARIABLE AREA           49680000
         MVI   0(R3),X'40'         CLEAR VARIABLE AREA                  49760000
         MVC   1(VARBLARA-1,R3),0(R3)  BLANK OUT VARIABLE AREA  OZ01279 49840000
         TM    SSSOFLG1,SSSOSCLS   DOES WTR SELECT BY CLASS LIST        49920000
         BZ    TRYFORM             NO                                   50000000
         MVI   0(R3),C','          SEPARATE KEYWORDS WITH COMMAS        50080000
         MVC   2(6,R3),CLASS       MOVE IN 'CLASS='                     50160000
         MVC   8(8,R3),SSSOCLSL    MOVE CLASS LIST FROM SSOB            50240000
         LA    R3,15(R3)           INCREMENT FOR NEXT KEYWORD           50320000
TRYFORM  TM    SSSOFLG1,SSSOSFRM   DOES WTR SELECT BY FORM NUMBER       50400000
         BZ    TRYDEST             NO                                   50480000
SUB1     BCTR  R3,0                SUBTRACT 1 TO CHECK BLANK            50560000
         CLI   0(R3),C' '          IS THIS A BLANK                      50640000
         BE    SUB1                YES, GO SUBTRACT AGAIN               50720000
         MVI   1(R3),C','          SEPARATE KEYWORDS WITH COMMAS        50800000
         MVC   3(6,R3),FORMS       MOVE 'FORMS=' INTO MSG               50880000
         MVC   9(4,R3),SSSOFORM    MOVE FORM NUMBER FROM SSOB           50960000
         LA    R3,12(R3)           INCREMENT TO NEXT KEYWORD SLOT       51040000
TRYDEST  TM    SSSOFLG1,SSSODST    DOES WTR SELECT BY DEST              51120000
         BZ    TRYJOBID            NO                                   51200000
SUB2     BCTR  R3,0                SUBTRACT 1 TO CHECK BLANK            51280000
         CLI   0(R3),C' '          IS THIS A BLANK                      51360000
         BE    SUB2                YES, GO SUBTRACT AGAIN               51440000
         MVI   1(R3),C','          SEPARATE KEYWORDS WITH COMMAS        51520000
         MVC   3(5,R3),DEST        MOVE 'DEST=' INTO MSG.               51600000
         MVC   8(8,R3),SSSODEST    MOVE DEST NAME FROM SSOB             51680000
         LA    R3,15(R3)           INCREMENT TO NEXT KEYWORD SLOT       51760000
TRYJOBID TM    SSSOFLG1,SSSOSJBI   DOES WTR SELECT BY JOBID             51840000
         BZ    TRYWRITR            NO                                   51920000
SUB3     BCTR  R3,0                SUBTRACT 1 TO CHECK BLANK            52000000
         CLI   0(R3),C' '          IS THIS A BLANK                      52080000
         BE    SUB3                YES, GO SUBTRACT AGAIN               52160000
         MVI   1(R3),C','          SEPARATE KEYWORDS WITH COMMAS        52240000
         MVC   3(6,R3),JOBID       MOVE 'JOBID=' INTO MSG.              52320000
         MVC   9(8,R3),SSSOJOBI    MOVE JOBID FROM SSOB                 52400000
         LA    R3,17(R3)           INCREMENT FOR NEXT KEYWORD           52480000
TRYWRITR TM    SSSOFLG1,SSSOSPGM   DOES WTR SELECT BY PROGRAM NAME      52560000
         BZ    WRITMSG             NO                                   52640000
SUB4     BCTR  R3,0                SUBTRACT 1 TO CHECK BLANK            52720000
         CLI   0(R3),C' '          IS THIS A BLANK                      52800000
         BE    SUB4                YES, GO SUBTRACT AGAIN               52880000
         MVI   1(R3),C','          SEPARATE KEYWORDS WITH COMMAS        52960000
         MVC   3(7,R3),WRITER      MOVE 'WRITER=' INTO MSG.             53040000
         MVC   10(8,R3),SSSOPGMN   MOVE WRITER NAME FROM SSOB           53120000
WRITMSG  WTO   MF=(E,(1))          WRITE WAITING FOR WORK MSG.          53200000
         NI    PARDUM,WAITAND      CLEAR WAIT A BIT FLAG                53280000
WAITWORK EQU   *                                                        53360000
         MVC   HASPECB,SSSOWTRC    SAVE ADDR. OF HASP ECB               53440000
         MVC   COMNDECB,PARECBL    SAVE ADDR. OF COMMAND ECB FROM CSCB  53520000
         BAL   R2,SD82COMD         SEE IF COMMAND ECB POSTED            53600000
         L     R4,PARWKLST         ADDRESS OF WORK LIST                 53680000
         USING WORKLST,R4                                               53760000
         L     R4,VARAR            ADDRESS OF ECB LISTS                 53840000
         USING LISTS,R4                                                 53920000
         OI    COMNDECB,X'80'      INDICATE COMM ECB IS LAST IN LIST    54000000
         LA    R1,HASPECB          ADDR. OF WAIT LIST                   54080000
         TM    PARDUM,PARMOD       DOES WRITER WAIT ON ONLY ONE ECB?    54160000
         BZ    WAIT                NO, WAIT ON TWO                      54240000
         LA    R1,COMNDECB         WAIT ONLY ON COMMAND ECB             54320000
         NI    PARDUM,255-PARMOD   TURN WAIT BIT OFF                    54400000
WAIT     EQU   *                                                        54480000
         WAIT  1,ECBLIST=(1)       WAIT FOR WORK OR COMMAND ECB         54560000
         MVI   SSSODSN,X'00'       INDICATE THIS IS AN INITIAL REQUEST  54640000
         TIME  BIN                 GET TIME FOR SMF RECORD              54720000
         L     R3,PARSMF           ADDRESS SMF RECORD                   54800000
         USING SMFREC,R3           SMF RECORD ADDRESSABILITY            54880000
         STM   R0,R1,SMFWORKA      STORE TIME                           54960000
         MVC   SMFSTTM(8),SMFWORKA SAVE NEW START TIME                  55040000
         DROP  R3                                                       55120000
         BAL   R2,SD82COMD         WAS COMMAND ECB POSTED?              55200000
         L     R1,PARWORK          ADDR. OF SSOB                        55280000
         B     SD82HASP            GO TRY TO GET MORE WORK FROM HASP    55360000
         DROP  R4                                                       55440000
***                                                                 *** 55520000
*        STOP THE WRITER                                              * 55600000
***                                                                 *** 55680000
SD82NORM LA    R11,SD82M2          NORMAL STOP MESSAGE                  55760000
SD82OK   XC    PARSMB,PARSMB       ZERO ERROR CODE                      55840000
SD82HALT OI    SSSOFLG2,SSSOCTRL   INDICATING STOPPING                  55920000
         L     R1,PARWORK          SSOB ADDR                            56000000
         IEFSSREQ                  TELL HASP WTR IS QUITTING            56080000
SD82STOP EQU   *                                                        56160000
         L     R1,PARWKLST         ADDRESS OF WKT                       56240000
         USING WORKLST,R1          WORK LIST ADDRESSABILITY             56320000
         TM    VARBA,UNRWR         IS OUTPUT DEVICE UNIT RECORD         56400000
         BZ    SD82CLR             NO, SKIP SMF                         56480000
         BAL   R4,WRITSMF          GO WRITE FINAL SMF RECORD            56560000
         DROP  R1                  DROP SMF ADDRESSABILITY              56640000
SD82CLR  EQU   *                                                        56720000
         LA    R0,SD82CORE         SIZE OF CORE TO BE FREED             56800000
         L     R1,PARWKLST         ADDRESS OF WKT                       56880000
         USING WORKLST,R1          ADDRESS WOSAP                        56960000
         L     R13,WOSAP           RESTORE REGISTER 13                  57040000
         L     R13,4(R13)          RESTORE SAVE AREA ADDRESS            57120000
         DROP  R1                                                       57200000
         FREEMAIN R,LV=(0),A=(1)   FREE CORE                            57280000
         L     R1,PARXXA           GET THE SPANNED ADDRESS              57360000
         LTR   R1,R1               IS THE ADDRESS EXISTANT              57440000
         BZ    SD82NOSP            NO, DON'T DELETE IT                  57520000
         LA    R0,WORKFEND-WORKFXXX     GET SIZE                        57600000
         FREEMAIN R,LV=(0),A=(1)   FREE CORE                            57680000
         DELETE EP=IEFSDXXX        DELETE VARIABLE SPANNING MODULE      57760000
SD82NOSP EQU   *                                                        57840000
***                                                                     57920000
*        CLOSE OUTPUT DCB                                             * 58000000
***                                                                 *** 58080000
         MVC   PARWORK2(4),SD82CLOS     MOVE CLOSE LIST                 58160000
         L     R2,PARDCB           ADDR OF OUTPUT DCB                   58240000
         LA    R1,PARWORK2         POINT TO CLOSE LIST                  58320000
         CLOSE ((R2),),MF=(E,(1))  CLOSE OUTPUT DCB                     58400000
***                                                                 *** 58480000
*        SET UP MESSAGE TO OPERATOR TO INDICATE WRITER CLOSED         * 58560000
***                                                                 *** 58640000
         L     R1,PARWORK          MSG. AREA                            58720000
         LH    R3,0(R11)           MSG. SIZE                            58800000
         LA    R3,3(R3)            INCREMENT TO INCLUDE DESC. & RT      58880000
         EX    R3,SD82MSG          MOVE IN MESSAGE PATTERN              58960000
         MVC   UNIT(3,R1),PARWTRNM PUT IDENT. OF WTR IN MSG.            59040000
         L     R3,PARCOMM          GET ADDR. OF COMM AREA               59120000
         USING COMMAD,R3           CSCB COMMUNICATIONS AREA             59200000
         L     R3,COMMCIB          GET ADDRESS OF CIB                   59280000
         USING CIB,R3                                                   59360000
         SR    R0,R0               CLEAR REGISTER                       59440000
         IC    R0,CIBCONID         GET CONSOLE IDENTIFIER               59520000
         SR    R5,R5                                                    59600000
         C     R5,PARSMB           ARE ANY ERROR CODES TO BE PRINTED?   59680000
         BE    SD82WTOO            NO                                   59760000
         UNPK  SSERR(5,R1),PARSMB+2(3)                                  59840000
         TR    SSERR(4,R1),TRTBLE-240   MAKE CODE PRINTABLE             59920000
         MVI   SSERR+4(R1),C'/'    INSERT SLASH INTO MESSAGE            60000000
         CH    R5,PARSMB           ANY MORE ERROR CODES?                60080000
         BE    SD82WTOO            NO                                   60160000
         UNPK  DALERR(5,R1),PARSMB(3)                                   60240000
         TR    DALERR(4,R1),TRTBLE-240  MAKE CODE PRINTABLE             60320000
         MVI   DALERR+4(R1),X'40'                                       60400000
         DROP  R3                                                       60480000
***                                                                 *** 60560000
*        WRITE MSG TO OPERATOR TO INDICATE WRITER CLOSED              * 60640000
***                                                                 *** 60720000
SD82WTOO WTO   MF=(E,(1))                                               60800000
***                                                                 *** 60880000
*        FREE WORK AREAS AND RETURN                                   * 60960000
***                                                                 *** 61040000
SD82PARF L     R1,PARDCB           ADDR OF CORE GOT BY IEFSD080         61120000
         LA    R7,4                DECREMENT TO                         61200000
         SR    R1,R7                 LENGTH FIELD ADDR.                 61280000
         L     R0,0(R1)            LOAD PREVIOUSLY STORED LENGTH        61360000
         FREEMAIN R,LV=(0),A=(1)   FREE PARLIST AND OUTPUT DCB, ETC.    61440000
         RETURN (14,12),RC=0       ISSUE RETURN                         61520000
***                                                                 *** 61600000
*        THE WRITER JUST GAVE UP CONTROL                              * 61680000
***                                                                 *** 61760000
WRITSMF  EQU   *                   WRITE OUT SMF RECORD, IF ANY DATA    61840000
         L     R3,PARSMF           ADDRESS OF SMF RECORD                61920000
         USING SMFREC,R3           ADDRESSABILITY TO TYPE 6 RECORD      62000000
         MVC   SMFWORKA(4),SMFSOCTF     DATA SET COUNT                  62080000
         ICM   R0,15,SMFWORKA      TEST FOR ZERO                        62160000
         BZ    CRE8NEW             CREATE NEW SMF RECORD                62240000
         MVC   SMFENDFM(SMFEND-SMFRSV1),SMFRSV1  MOVE RECORD INTO PLACE 62320000
         LA    R1,SMFLLBB          ADDRESS OF SMF RECORD                62400000
         SMFWTM (1)                WRITE TYPE 6 RECORD                  62480000
         TIME  BIN                 GET TIME FOR NEXT RECORD             62560000
         STM   R0,R1,SMFWORKA      SAVE FOR NEXT RECORD                 62640000
         MVC   SMFSTTM(8),SMFWORKA GET NEW START TIME                   62720000
CRE8NEW  MVC   SMFJOBNM(8),SSSOJOBN     PUT JOB NAME INTO SMF RECORD    62800000
         MVC   SMFFORM(4),SSSOFORM SAVE FORM UNMBER                     62880000
         MVC   SMFCLASS(1),SSSOCLAS     SAVE CLASS OF DATA SET          62960000
         L     R15,SSSOWTRC        ADDRESS OF JOB LOG                   63040000
         MVC   SMFRDSTM(16),SSSORDR(R15)     READER START TIME          63120000
         MVC   SMFJOBNO(4),SSSOJOBI+4   JOB NUMBER                      63200000
         MVI   SMFSOCTF,0          ZERO COUNTS                          63280000
         MVC   SMFSOCTF+1(5),SMFSOCTF   ZERO COUNTS                     63360000
         MVC   SMFFCB,PARFCBID     DEFAULT FCBID                        63440000
         MVC   SMFUCS,PARUCSID     DEFAULT UCS                          63520000
         LA    R1,SMF6             SIZE OF SMF WORK AREA                63600000
         ST    R1,SMFWKLL          SAVE LENGTH OF WORK AREA             63680000
         MVI   SMFDYCNT,0          CLEAR SMF RECORD WORK AREA           63760000
         MVC   SMFDYCNT+1(4),SMFDYCNT   CLEAR AREA                      63840000
         DROP  R3                                                       63920000
         BR    R4                  RETURN TO CALLER                     64000000
***                                                                ***  64080000
*   SUBROUTINE TO CHECK TO SEE IF THE COMMAND ECB HAS BEEN POSTED     * 64160000
***                                                                ***  64240000
SD82COMD EQU   *                                                        64320000
         L     R4,PARECBL          ADDR OF COMMAND ECB                  64400000
         XR    R0,R0                                                    64480000
         TM    0(R4),STOPCM        STOP COMMAND                         64560000
         BO    SD82NORM            EXIT                                 64640000
TESTMOD  TM    0(R4),MODFCM        MODIFY COMMAND?                      64720000
         BZR   R2                  NO, RETURN TO CALLER                 64800000
MODIFY   LR    R1,R6               RESTORE PARM LIST ADDRESS            64880000
         OI    PARDUM,PARWAIT      PRINT WAIT MSG. NEXT TIME            64960000
         MODESET EXTKEY=ZERO       KEY FOR CSCB ACCESSING               65040000
         ST    R0,0(R4)            ZERO ECB                             65120000
         MODESET EXTKEY=HASP       NORMAL KEY                           65200000
         STM   R0,R12,20(R13)      SAVE REGISTERS                       65280000
         L     R15,SD82EXIT        GO TO SD081 TO PROCESS MODIFY        65360000
         BALR  R14,R15                                                  65440000
         LM    R0,R12,20(R13)      RESTORE REGISTERS                    65520000
         TM    PARDUM,PARMOD       WAS MODIFY COMMAND INVALID?          65600000
         BO    SD82WAIT            GO AWAIT COMMAND                     65680000
         LTR   R15,R15             NORMAL RETURN?                       65760000
         BNZ   SD82NORM            NO, HALT                             65840000
         L     R1,PARWORK          ADDR. OF SSOB                        65920000
         B     SD82CLSL            GO TO SSREQ WITH NEW CLASS LIST      66000000
***                                                                 *** 66080000
*   DYNAMICALLY ALLOCATE AND UNALLOCATE DATA SET TO DELETE IT         * 66160000
***                                                                 *** 66240000
SD82ALUN MVI   S99VERB,S99VRBAL    ALLOCATION VERB                      66320000
         LA    R3,DISPDSN(R8)      ADDR. DSNAME TEXT UNIT               66400000
         ST    R3,S99TXTPP         STORE ADDR. OF TEXT UNIT PTRS.       66480000
         L     R4,0(,R3)           ADDR. OF FIRST TEXT UNIT             66560000
         MVC   6(44,R4),SSSODSN    GET DATA SET NAME FROM SSOB          66640000
         BAL   R11,DYNAL           DYNAMICALLY ALLOCATE DATA SET        66720000
         MVI   S99VERB,S99VRBUN    UNALLOCATION VERB                    66800000
         LA    R3,DISPUAL(R8)      INCREMENT TO UNAL                    66880000
         ST    R3,S99TXTPP         STORE ADDR. OF TEXT UNIT PTRS.       66960000
         L     R3,0(,R3)           ADDRESS OF DDNAME FOR UNALLOCATE     67040000
         L     R4,DISPDDN(R8)      ADDRESS OF DDNAME UNIT               67120000
         MVC   6(8,R3),6(R4)       PUT DDNAME INTO TEXT FOR UNALLOC     67200000
         L     R4,DISPOVR(R8)      ADDRESS OF OVERIDE UNIT              67280000
         MVI   6(R4),X'04'         DELETE DATA SET                      67360000
         BAL   R11,DYNAL           DYNAMICALLY UNALLOCATE DATA SET      67440000
         B     TESTCSCB            RETURN TO SUBSYSTEM                  67520000
         TITLE 'LINK TO JOB SEPARATOR ROUTINE'                          67600000
         USING SMFREC,R3           ADDRESSABILITY TO SMF RECORD         67680000
SD82SEP  L     R2,PARWKLST         ADDRESS WORK LIST                    67760000
         USING WORKLST,R2          ADDRESSABILITY FOR WORK LIST         67840000
         XR    R1,R1               ZERO R1                              67920000
         ICM   R1,7,WJFCB+1        SET UP TO CREATE JOB SEP PARM LIST   68000000
         USING JSPARMS,R1          JOB SEP LIST ADDRESSABILITY          68080000
         MVC   JSSWTCHS(1),VARBA   SET SWITCHES BYTE                    68160000
         MVC   JSDCBOUT(4),PARDCB  OUTPUT DCB POINTER                   68240000
         MVI   JSSWT078,ENTRY82    SET ENTRY FROM IASXSD82              68320000
         LA    R0,SSSOJOBN         GET ADDRESS OF JOB NAME              68400000
         ST    R0,JSNAMEAD         PUT IT INTO JOB SEP PARM LIST        68480000
         LA    R0,JSLTH(R1)        ADDRESS OF SYSOUT CLASS BYTE         68560000
         ST    R0,JSSYSCLA         PUT INTO SYSOUT CLASS POINTER        68640000
         MVC   JSLTH(1,R1),SSSOCLAS     PUT CLASS NAME INTO LIST        68720000
         MVC   JSLIST,LINKLST      MOVE LINK CODE TO CORE               68800000
         ST    R4,JSLIST           STORE EPLOC INTO PARM LIST           68880000
         LA    R15,JSLIST          PTR TO SPVR PARAM. LIST              68960000
         LINK  ,MF=(E,(1)),SF=(E,(15))  LINK TO JOB SEPARATOR RPUTINE   69040000
         LTR   R15,R15             ERROR RETURN?                        69120000
         BZ    SD82SAME            NORMAL RETURN                        69200000
         DROP  R3                                                       69280000
***                                                                 *** 69360000
*   FOR ABNORMAL RETURN FROM JOB SEPARATOR ROUTINE, UNALLOCATE DATA   * 69440000
*    SET WITH KEEP OPTION, ISSUE OUTPUT ERROR MESSAGE, AND HALT       * 69520000
***                                                                 *** 69600000
         MVI   S99VERB,S99VRBUN    UNALLOCATION VERB                    69680000
         LA    R3,DISPUAL(R8)      INCREMENT TO UNAL                    69760000
         ST    R3,S99TXTPP         STORE ADDRESS OF TEXT UNIT PTRS.     69840000
         L     R3,0(R3)            ADDRESS OF DDNAME FOR UNALLOCATE     69920000
         L     R4,DISPDDN(R8)      ADDRESS OF DDNAME                    70000000
         MVC   6(8,R3),6(R4)       PUT DDNAME INTO UNALLOC TEXT UNIT    70080000
         L     R4,DISPOVR(R8)      ADDRESS OVERRIDE TEXT UNIT           70160000
         MVI   6(R4),X'08'         KEEP DATA SET                        70240000
         BAL   R11,DYNAL           DYNAMICALLY UNALLOCATE DATA SET      70320000
         LA    R11,SD82M3          INDICATE OUTPUT ERROR                70400000
         B     SD82OK              RETURN                               70480000
         DROP  R1                                                       70560000
         TITLE 'CLEANUP AFTER SUBTASK TERMINATING ABNORMALLY'           70640000
***                                                                 *** 70720000
*   IF THE SUBTASK ABENDED, ISSUE WTO, CLEANUP, AND STOP              * 70800000
***                                                                 *** 70880000
BADSBTSK EQU   *                                                        70960000
         USING LISTS,R2                                                 71040000
         LA    R4,ATACHTCB         SAVE TCB ADDRESS                     71120000
         L     R2,ATACHTCB         TCB ADDRESS FOR SUBTASK              71200000
         DROP  R2                                                       71280000
         L     R1,PARWKLST         ADDRESS WORKLIST                     71360000
         USING WORKLST,R1          ADDRESS WORKLIST                     71440000
         OI    VARBA,X'10'         TURN ON DATASET WTR-FAILURE SWITCH   71520000
         L     R11,WOSAP           ADDRESS OF SAVE AREA                 71600000
         MVI   19(R11),X'00'       FAKE GOOD COMPLETION                 71680000
         L     R1,WJFCB            USE JFCB AREA FOR WTO                71760000
         LR    R11,R1              SAVE AREA ADDRESS FOR PURGE LIST     71840000
         DROP  R1                                                       71920000
         MVC   0(ABSZ,R1),ABEND    MOVE MSG. SKELETON                   72000000
         USING TCB,R2              TCB ADDRESSABILITY                   72080000
         L     R3,TCBTIO           ADDR. OF TIOT                        72160000
         USING TIOT1,R3                                                 72240000
         MVC   STEPNAME(8,R1),TIOCSTEP  MOVE IN STEPNAME                72320000
         UNPK  CMPCODE(7,R1),TCBCMP+1(4)     TASK COMPLETION CODE       72400000
         TR    CMPCODE(6,R1),TRTBLE-240  MAKE IT PRINTABLE              72480000
         MVC   SYSCODE(3,R1),CMPCODE(R1)     MAKE ROOM FOR SLASH        72560000
         MVI   SLASH(R1),C'/'      SEPARATE SYSTEM AND USER CODE        72640000
         MVI   PERIOD(R1),C'.'     END OF PRINTED MSG.                  72720000
STEPNAME EQU   23                                                       72800000
SYSCODE  EQU   61                                                       72880000
CMPCODE  EQU   62                                                       72960000
SLASH    EQU   64                                                       73040000
PERIOD   EQU   68                                                       73120000
         WTO   MF=(E,(1))          WRITE MSG.                           73200000
         LR    R1,R4               TCB ADDR                             73280000
         DETACH (1)                GET RID OF SUBTASK                   73360000
*********************************************************************** 73440000
*                                                                     * 73520000
* CLEANUP IOB'S WHOSE I/O REQUESTS HAVE BEEN PURGED BY ABTERM.        * 73600000
* THE ADDRESS OF THE IOB PREFIX IS X'44' BYTES INTO THE DCB.          * 73680000
*                                                                     * 73760000
*********************************************************************** 73840000
         NI    DCBIFLGS,X'FF'-X'C0'     TURN OFF I FLAGS IN DCB         73920000
* BUILD PURGE PARAMETER LIST                                          * 74000000
         LR    R1,R11              RESTORE WORK AREA ADDRESS            74080000
         L     R3,DCBDEBAD         GET DEB PTR.                         74160000
         ST    R3,PRGDEB(R1)       STORE IN PURGE LIST                  74240000
         MVI   PRGOPT(R1),PURGOPT  SET PURGE OPTION BYTE                74320000
         L     R4,DEBTCBAD(R3)     GET TCB ADDRESS                      74400000
         ST    R4,PRGTCB(R1)       STORE TCB ADDRESS IN PURGE           74480000
         MVI   PRGTCB(R1),X'00'    ZERO HIGH ORDER BYTE                 74560000
         L     R4,DEBUSRPG(R3)     GET LINK FIELD OF USER PURGE CHAIN   74640000
         ST    R4,PRGUSR(R1)       STORE IN PURGE LIST                  74720000
         MVI   PRGUSR(R1),X'00'    ZERO HIGH ORDER BYTE                 74800000
         PURGE (1)                 ISSUE PURGE MACRO, SVC 16            74880000
         LA    R11,SD82M3          INDICATE OUTPUT ERROR        OZ00573 74960000
         B     SD82HALT            GO STOP                              75040000
         TITLE 'CALL DYNAMIC ALLOCATE/UNALLOCATE SUBROUTINE'            75120000
DYNAL    L     R1,PARALLOC         LOAD ADDR. OF ALLOCATE PARM LIST     75200000
         DYNALLOC                                                       75280000
         LTR   R15,R15             RETURN NORMAL?                       75360000
         BZR   R11                 RETURN IF NORMAL RETURN              75440000
         STH   R15,PARSMB+2        SAVE RETURN CODE FOR MSG.            75520000
         MVC   PARSMB(2),S99ERROR  SAVE SVC 99 ERROR RETURN             75600000
         LA    R11,SD82M1          ADDR. OF ERROR MSG.                  75680000
         B     SD82HALT            GO STOP                              75760000
DALOK    EQU   *                   INPUT NOW ALLOCATED                  75840000
SD82MSG  MVC   0(1,R1),0(R11)                                           75920000
         LTORG                                                          76000000
         TITLE 'CONSTANTS AND DSECTS FOR IASXSD82'                      76080000
*    CONSTANTS                                                          76160000
OSWTR    DC    CL8'IEFSD087'       DEFAULT WRITER NAME                  76240000
IAS82A   DC    CL8'IASXS82A'                                            76320000
BLANKS   DC    CL8' '              BLANKS                               76400000
SD82EXIT DC    V(IASXSD81)         EXIT FOR START COMMAND               76480000
MSGADDR  DC    A(IASXS82M)         ADDRESS OF MESSAGES PUT OUT BY 082   76560000
WTRSSOB  DS    0F                                                       76640000
WTSSOBID DC    CL4'SSOB'                                                76720000
WTSSOBSZ DC    AL2(SSOBHSIZ)                                            76800000
WTSSOBFN DC    AL2(SSOBSOUT)                                            76880000
WTRSOSIZ EQU   *-WTRSSOB                                                76960000
TRTBLE   DC    C'0123456789ABCDEF'                                      77040000
JFCBL    RDJFCB (0),MF=L           READ JFCB LIST                       77120000
LINKLST  LINK  ,,SF=L              REMOTE SUPV PARAM LIST               77200000
SUPVLIST ATTACH SF=L,EPLOC=IAS82A,SVAREA=YES,SM=PROB,                  C77280000
               LPMOD=1,DPMOD=-1,GIVEJPQ=NO                              77360000
SUPLEND  EQU   *                                                        77440000
*DEFINE DCB AND OPEN AND CLOSE. (EODAD,SYNAD,OPEN AND CLOSE)            77520000
INDCB    DCB   DSORG=PS,MACRF=GL,BUFNO=2                                77600000
INOPEN   OPEN  (0,INPUT),MF=L                                           77680000
SD82CLOS CLOSE (0),MF=L            CLOSE LIST                           77760000
SPEXL    DC    F'0'                DCB EXIT LIST                        77840000
SPEXL1   DC    F'0'                DCB EXIT LIST                        77920000
INDCBEND EQU   *                                                        78000000
FZERO    DC    F'0'                FULL WORD OF ZERO                    78080000
CLASS    DC    C'CLASS='                                                78160000
FORMS    DC    C'FORMS='           FOR WAITING FOR WORK MSG.            78240000
WRITER   DC    C'WRITER='          FOR WAITING FOR WORK MSG.            78320000
DEST     DC    C'DEST='            FOR WAITING FOR WORK MSG.            78400000
JOBID    DC    C'JOBID='           FOR WAITING FOR WORK MSG.            78480000
HASPDFLT DC    CL4'****'           HASP DEFAULT UCS/FCB                 78560000
SBPL     DC    AL1(SUBPOOL)        SUBPOOL NUMBER                       78640000
         DC    C'ZAPZAPZAPZAPZAPZAP'                                    78720000
         DC    C'ZAPZAPZAPZAPZAPZAP'                                    78800000
         DC    C'ZAPZAPZAPZAPZAPZAP'                                    78880000
         DC    C'ZAPZAPZAPZAPZAPZAP'                                    78960000
         DC    C'ZAPZAPZAPZAPZAPZAP'                                    79040000
         DC    C'ZAPZAPZAPZAPZAPZAP'                                    79120000
         TITLE 'SUBTASK IASXS82A ATTACHED BY IASXSD82'                  79200000
*********************************************************************** 79280000
*                                                                     * 79360000
* SUBTASK CODE -- THIS IS ATTACHED, IT IN TURN CALLS TO THE WRITER    * 79440000
* PROGRAM.  THIS ALLOWS THE PURGE TO BE DONE WITHIN THE SUBTASK,      * 79520000
* WITHOUT REQUIRING USERS TO PUT PURGE INTO THEIR EXISTING CODE.        79600000
*                                                                     * 79680000
*********************************************************************** 79760000
         DS    0F                                                       79840000
         ENTRY IASXS82A            ENTRY FOR SUBTASK                    79920000
IASXS82A LR    R2,R14              SAVE RETURN REGISTER                 80000000
         LR    R3,R1               SAVE PARM REG                        80080000
         USING WORKLST,R3          ADDRESS WORKLIST                     80160000
*LOAD AND CALL WRITER PROGRAM                                           80240000
         LOAD  EPLOC=WOWRN         LOAD WRITER LOAD MODULE              80320000
         LR    R15,R0              PASS ENTRY POINT                     80400000
         LR    R1,R3               PASS PARM REGISTER TO SUBTASK        80480000
         CALL  (15),MF=(E,(1))     CALL                                 80560000
         LR    R4,R15              SAVE RETURN CODE                     80640000
*BUILD PURGE PARAMETER LIST                                             80720000
         L     R5,DCBOT            GET OUTPUT DCB                       80800000
* PARWORK IS USED TO READ THE OUTPUT JFCB INTO BY IASXWR00,             80880000
*  THEN TO CREATE THE SSOB INTO BY IASXSD82,                            80960000
* AND THIS SUBTASK USES 12 BYTES BEYOND THE SSOB AS A PURGE LIST        81040000
         L     R1,PARWORK          ADDRESS OF SSOB CORE                 81120000
         LA    R1,SSOBLEN1+8(R1)   INCREMENT BEYOND SSOB AND POINTER    81200000
         XC    PRGOPT(SIZPRG,R1),PRGOPT(R1)  ZERO CORE                  81280000
         L     R11,DCBDEBAD        ADDR. OF DCB TO BE PURGED            81360000
         ST    R11,PRGDEB(R1)                                           81440000
         LA    R11,DEBUSRPG(R11)   ADDR. TO RECEIVE RESTORE POINTER     81520000
         ST    R11,PRGUSR(R1)      SAVE IN PARMLIST                     81600000
         MVI   PRGOPT(R1),PRGOPT2  SET PURGE OTPION BYTE                81680000
         PURGE (1)                 PURGE RQE'S                          81760000
         DELETE EPLOC=WOWRN        DELETE LOAD MODULE                   81840000
         LR    R15,R4              RESTORE RETURN CODE                  81920000
         LR    R14,R2              RESTORE RETURN ADDRESS.              82000000
         BR    R14                 *** END OF SUBTASK ***               82080000
         DROP  R3                                                       82160000
         TITLE 'DSECTS USED BY IASXSD82'                                82240000
*    DSECTS                                                             82320000
*********************************************************************** 82400000
COMMAD   DSECT                     COMMUMICATIONS AREA IN CSCB          82480000
COMMECB  DS    A                   ADDR OF COMMAND ECB                  82560000
COMMCIB  DS    A                   ADDR OF COMMAND INPUT BUFFER         82640000
*ATTACH LIST                                                            82720000
LISTS    DSECT                                                          82800000
CSCBADDR DS    F                   SLOT FOR SUBTASK CSCB ADDR.          82880000
ATACHTCB DS    F                   SLOT FOR SUBTASK TCB ADDR.           82960000
ATACHECB DS    F                   ATTACH - ECB                         83040000
ATECBPTR DS    F                   ECBLIST -- ATTACH - ECB PTR.         83120000
CHECBPTR DS    F                   ECBLIST -- CANCEL - ECB PTR.         83200000
*  ECB LIST USED WHEN WAITING FOR WORK OR OS COMMAND                  * 83280000
HASPECB  DS    F                   ECBLIST-- HASP ECB PTR FOR CLASSWRK  83360000
COMNDECB DS    F                   ECBLIST-- CSCB ECB PTR FOR COMMANDS  83440000
ATACHLST EQU   *                                                        83520000
*DYNAMIC ALLOCATION DSECT                                               83600000
DYNTXTPT DSECT                                                          83680000
DSNTXTPT DS    F                   POINTER TO DSNAME TEXT UNIT          83760000
SSRTXTPT DS    F                   PTR. TO SUBSYSTEM REQUEST TEXT UNIT  83840000
DDNTXTPT DS    F                   PTR TO DDNAME RETURNED TEXT UNIT     83920000
UDNTXTPT DS    F                   DDNAME TEXT PTR. FOR UNALLOCATE      84000000
UORTXTPT DS    F                   OVERRIDE TEXT PTR. FOR UNALLOCATE    84080000
DYNTXTND EQU   *                   END OF TEXT POINTERS                 84160000
DSNTXTUT DS    CL50                DSNAME TEXT UNIT                     84240000
SSRTXTUT DS    CL10                SUBSYSTEM REQUEST TEXT UNIT          84320000
DDNTXTUT DS    CL14                DDNAME RETURNED  TEXT UNIT           84400000
UDNTXTUT DS    CL14                UNALLOCATE DDNAME TEXT UNIT          84480000
UORTXTUT DS    CL7                 OVERRIDE DISPOSITION FOR UNALLOCATE  84560000
DYNEND   EQU   *                                                        84640000
*********************************************************************** 84720000
***                                                                 *** 84800000
*   JOB SEPARATOR PARAM LIST PASSED TO JOB SEPARATOR ROUTINE.         * 84880000
***                                                                 *** 84960000
         DS    0F                                                       85040000
JSPARMS  DSECT                                                          85120000
JSSWTCHS DS    C                   SWITCHES.                            85200000
JSP1442  EQU   128                 1442 SWITHC.                         85280000
JSPUTYPE EQU   64                  PUNCH TYPE SWITCH.                   85360000
JSPUPR   EQU   32                  UNIT RCD WRITER SWITCH.              85440000
JSDCBOUT DS    F                   ADDRESS OF OUTPUT DCB.               85520000
JSNAMEAD DS    F                   ADDRESS OF 8 CHAR JOBNAME FIELD      85600000
JSSYSCLA DS    F                   ADDRESS OF SYSOUT CLASS.             85680000
JSEND    EQU   *                   END OF JSPARMS.                      85760000
         DS    F                   SYSOUT CLASS NAME                    85840000
JSLIST   DS    CL8                 REMOTE LINK LIST                     85920000
JSLTH    EQU   JSEND-JSPARMS       LENGTH OF JSPARMS LIST.              86000000
JSSWT078 EQU   JSSWTCHS+1          SWITCH FOR ENTRY FROM 078            86080000
         IEFSDPAR                  DEFINE PAR WORK LIST                 86160000
         IEFSDWKX                  DEFINE WORKX                         86240000
         IEFSDWKT                  DEFINE WORKLST                       86320000
         IEFSDSMF                  DEFINE TYPE 6 SMF RECORD             86400000
         IEFZB4D0                                                       86480000
         IEFZB4D2                                                       86560000
         IEFJSSOB (SO)                                                  86640000
         IEFJESCT                                                       86720000
         IKJTCB LIST=YES           TCB MAPPING MACRO                    86800000
         IEZJSCB ,                 JSCB MAPPING MACRO                   86880000
         IEFJSSIB ,                SSIB MAPPING MACRO                   86960000
         IEFTIOT1                  DEFINE TIOT                          87040000
CIB      DSECT                                                          87120000
         IEZCIB                                                         87200000
         CVT   DSECT=YES                                                87280000
CHAINDSC DSECT                                                          87360000
         IEECHAIN                  DEFINE CSCB                          87440000
         DCBD  DSORG=PS                                                 87520000
JFCBD    DSECT                                                          87600000
         IEFJFCBN LIST=YES                                              87680000
         DSECT                                                          87760000
         IEFUCBOB LIST=YES         DEFINE UCB                           87840000
         IHAPSA                                                         87920000
         IHAASCB                                                        88000000
*********************************************************************** 88080000
*EQUATES:                                                             * 88160000
WORKT    EQU   WORKEND-WORKLST                                          88240000
SMF6     EQU   SMFEND-SMFREC       SIZE OF TYPE 6 SMF RECORD            88320000
TXTPTSIZ EQU   DYNTXTND-DYNTXTPT   SIZE OF TEXT UNIT POINTERS           88400000
DYNRBSIZ EQU   S99RBEND-S99RB      SIZE OF DYN ALLOC REQUEST BLOCK      88480000
DYN      EQU   TXTPTSIZ+DYNRBSIZ+(DYNEND-DSNTXTUT)+L'S99RBPTR           88560000
ATCHADDR EQU   ATACHLST-LISTS      SIZE OF ATTACH LIST ADDRESSES        88640000
ATCHLST  EQU   SUPLEND-SUPVLIST    SIZE OF ATTACH LIST                  88720000
IDCB     EQU   INDCBEND-INDCB                                           88800000
SD82CORE EQU   WORKT+SAVEAREA+IDCB+ATCHADDR+ATCHLST+4+JFCBLGTH+TBLESIZ+C88880000
               SMF6+DYN            SIZE OF GETMAIN FOR IASXSD82         88960000
DISPDDN  EQU   DYNRBSIZ+DDNTXTPT-DYNTXTPT    ADDR. OF DDNAME IN DYN LST 89040000
DISPOVR  EQU   DYNRBSIZ+UORTXTPT-DYNTXTPT    ADDR. OVRIDE IN DYN LST    89120000
DISPUAL  EQU   DYNRBSIZ+UDNTXTPT-DYNTXTPT    ADDR. UNAL IN DYN LST      89200000
DISPDSN  EQU   DYNRBSIZ+DSNTXTPT-DYNTXTPT    ADDR. DSNAME IN DYN LIST   89280000
SMFJOBNM EQU   SMFJOBLG+4          JOB NAME DISPLACEMENT IN SMF RECORD  89360000
SMFCLASS EQU   SMFJOBLG+28                                              89440000
SSSORDR  EQU   4                   DISP. IN SSSOWTC OF RDR START TIME   89520000
SMFRDSTM EQU   SMFJOBLG+12                                              89600000
         TITLE 'ERROR MESSAGES PRODUCED BY THIS EXTERNAL WRITER MODULE' 89680000
*********************************************************************** 89760000
IASXS82M CSECT                                                          89840000
SD82M1   WTO   'IEF300I XXX WTR CLOSED - SUBSYSTEM INTERFACE ERROR XXXXC89920000
               /YYYY',MF=L,ROUTCDE=(2,10),DESC=(4),MCSFLAG=(REG0)       90000000
SD82M2   WTO   'IEF301I XXX WTR CLOSED',MF=L,DESC=(4),MCSFLAG=(REG0)    90080000
SD82M3   WTO   'IEF303I XXX WTR CLOSED - OUTPUT ERROR',MF=L,           X90160000
               ROUTCDE=(7,10),DESC=(4),MCSFLAG=(REG0)                   90240000
SD82M6   WTO   'IEF302A CCC WTR WAITING TO START AAAAAAAA FOR JOBID NNNC90320000
               NNNNN',MF=L,ROUTCDE=(2,7),DESC=(2)                       90400000
SD82M7   WTO   'IEF382A CCC WTR WAIT DUE TO PAUSE',MF=L,               X90480000
               ROUTCDE=(2,7),DESC=(2)                                   90560000
M82FORM  WTO   'IEF383A CCC WTR, CHANGE FORM TO NNNN',MF=L,            C90640000
               ROUTCDE=(7),DESC=(2)                                     90720000
M82WAIT  WTO   'IEF176I WTR DDD WAITING FOR WORK,                      C90800000
                                                               ',MF=L,RC90880000
               OUTCDE=(2),DESC=(4)                                      90960000
M82KEYBD WTO   'IEF179I WTR DDD INVALID JOBID XXXXXXXX',MF=L,          C91040000
               ROUTCDE=(2),DESC=(3)                                     91120000
ABEND    WTO   'IEF438I SUBTASK OF          TERMINATED.  COMPLETION CODX91200000
               E         ',MF=L,ROUTCDE=(2),DESC=(4)                    91280000
ABENDEND EQU   *                                                        91360000
SD82MEND EQU   *                                                        91440000
ABSZ     EQU   ABENDEND-ABEND                                           91520000
UNIT     EQU   12                  OFFSET OF UNIT NAME FOR CLOSE MSGS   91600000
SSERR    EQU   55                  OFFSET OF RETURN CODE IN MSG.        91680000
DALERR   EQU   60                  DISPLACEMENT INTO MESSAGE            91760000
LENVALID EQU   SD82M7-SD82M6                                            91840000
OFSETO   EQU   36                  OFFSET OF WRITER IDENT.              91920000
MSGNAME  EQU   61                  OFFSET OF NAME OF WRITER TO BE ATTCH 92000000
OECBL    EQU   20                  LOCATION OF ECB                      92080000
OREPLY   EQU   4                   AREA OF REPLY                        92160000
OREPLL   EQU   16                  ADDRESS OF WTOR AREA & REPLY ADDR.   92240000
OREPLOC  EQU   8                   LOCATION OF REPLY                    92320000
OWTORH   EQU   24                  LENGTH OF HEADER FOR WTOR            92400000
JOBIDSP  EQU   80                  OFFSET OF JOBID NEEDING WTR VALID.   92480000
RECBL    EQU   12                  ECB POINTER LOCATION                 92560000
REPLY    EQU   4                   REPLY LOCATION                       92640000
REPLL    EQU   8                   ADDRESS OF REPLY LOCATION            92720000
WTORH    EQU   16                  ADDRESS OF WTOR AREA                 92800000
LENGTH   EQU   82                  LENGTH OF MESSAGE                    92880000
OFSET    EQU   28                  OFSET OF WRITER IDENTITY             92960000
FORMN    EQU   52                  OFSET OF FORM NUMBER                 93040000
SIZINVAL EQU   46                  SIZE OF DEST/JOBID MSG               93120000
DISPPARM EQU   34                  DISP. OF JOBID/DEST IN MSG           93200000
DESTDISP EQU   28                  DISP OF 'DEST '                      93280000
WTRDISP  EQU   16                  DISP OF WTR ID IN MSG.               93360000
VARBLARA EQU   71                  VARIABLE AREA LENGTH TO BE CLEARED   93440000
CRITERIA EQU   36                  DISP. WHERE VARIABLE AREA STARTS     93520000
WTRNAM   EQU   16                  DISP. OF WTRNAME                     93600000
         END                                                            93680000
./  ADD  SSI=40140110,NAME=IASXWR00
IASXWR00 CSECT                                                          00400002
*                                                                       00800002
*          RELEASE 22 DELETIONS/CHANGES                                 01200002
*          RELEASE 21 DELETIONS/CHANGES                                 01600002
*          RELEASE 20 DELETIONS/CHANGES                                 02000002
* 041900-043300,044200-045000                                    MAPMAC 02400002
* 022030,022038,022100-023350                                    A32047 02800002
*                                                                       03200002
*                                                                 M3785 03600002
* 020800-021205                                                   M3070 04000002
* 044400-044500                                                    I272 04400002
*3245000260-000360                                                 SM0I 04800002
*025100                                                          A29072 05200002
*                                                                S20201 05600002
*                                                                A42459 06000002
         TITLE 'IASXWR00 - EXTERNAL WRITER INITIALIZATION'              06400002
**********************************************************************  06800002
*                                                                    *  07200002
*TITLE-- IASXWR00 - EXTERNAL WRITER INITIALIZATION ROUTINE           *  07600002
*                                                                    *  08000002
*0371                                                            A36842 08400002
*STATUS CHANGE LEVEL 007                                                08800002
*FUNCTION/OPERATION--                                                *  09200002
*   THIS ROUTINE SERVES TO INITIALIZE THE SYSOUT WRITER, PERFORMING  *  09600002
*   THE FOLLOWING STEPS                                              *  10000002
*   1. GETS CERTAIN BLOCKS OF STORAGE FOR THE SYSOUT WRITER, INCL.   *  10400002
*      A PARAMETER LIST COMMON TO ALL OF ITS ROUTINES                *  10800002
*   2. INITIALIZES PARTS OF THE PARAMETER LIST                       *  11200002
*   3. GETS DCB FOR PUT LOCATE. READS IN JFCB AND TESTS TO SEE IF  CC0H 11600002
*      CHAIN SCHEDULING IS TO BE DONE ON OUTPUT. IF SO THE DCB IS  CC0H 12000002
*      REPLACED BY A DCB FOR EXCP AND INFORMATION IS SAVED WHICH   CC0H 12400002
*      WILL BE NEEDED TO CONSTRUCT TABLES FOR EXCP.                CC0H 12800002
*   4. SCANS PARAMETER FIELD  PROVIDED IN EXEC PROC STATEMENT FOR THE * 13200002
*      JOB SEPARATOR PROGRAM NAME.IF FOUND,IT IS SAVED LEFT ADJUSTED  * 13600002
*      AND PADDED WITH BLANKS TO MAKE IT 8 CHARACTER FIELD,IF NOT     * 14000002
*      FOUND,THE ENTIRE 8 CHAR JOB SEPARATOR NAME FIELD IS MADE BLANKS* 14400002
*   5. EXITS TO IEFSD081,WITH THE ADDRESS OF THE PARAMETER LIST       * 14800002
*      IN THE STANDARD PARAMETER REGISTER                            *  15200002
*                                                                    *  15600002
*ENTRY POINT--                                                       *  16000002
*        IASXWR00 - BY WAY OF ATTACH BY MASTER SCHEDULER, IN         *  16400002
*   RESPONSE TO A  'START WTR'  COMMAND.                             *  16800002
*                                                                    *  17200002
*INPUT--                                                             *  17600002
*   EXPLICIT--  ADDRESS OF START PARAMETER LIST (SAL) IN REG. 1.   CC0H 18000002
*   IMPLICITLY--  TCB, JFCB, TIOT, UCB.                            CC0H 18400002
*                                                                    *  18800002
*OUTPUT--                                                            *  19200002
*   IN REGISTER 1, THE ADDRESS OF A 13-WORD PARAMETER LIST         CC0H 19600002
*   COMMON TO ALL SYSOUT WRITER ROUTINES.                          CC0H 20000002
*                                                                    *  20400002
*                                                                    *  20800002
*EXTERNAL ROUTINES--NONE                                             *  21200002
*                                                                    *  21600002
*EXIT--  AT END OF INITIALIZATION, CONTROL IS PASSED TO              *  22000002
*        IASXSD81, THE EXTERNAL WRITER 'CLASSNAME SET-UP' ROUTINE    *  22400002
*                                                                    *  22800002
*TABLES/WORKAREAS--                                                  *  23200002
*   THIS ROUTINE OBTAINS MAIN STORAGE FOR A  DCB AND A PARAMETER     *  23600002
*   LIST. IT ALSO GETS CORE FOR THE JFCB WHICH IT SUBSEQUENTLY     CC0H 24000002
*   FREES.                                                         CC0H 24400002
*                                                                    *  24800002
*NOTES--                                                             *  25200002
*   THE FOLLOWING SYSTEM MACROS ARE USED--                           *  25600002
*        GETMAIN, FREEMAIN, DCB, DCBD, RDJFCB                      CC0H 26000002
*                                                                    *  26400002
*ATTRIBUTES--                                                        *  26800002
*   THIS ROUTINE IS REENTRANT AND REFRESHABLE.                     CC0H 27200002
*                                                                    *  27600002
**********************************************************************  28000002
***                                                                ***  28400002
*        ESSENTIAL EQUATES                                           *  28800002
***                                                                ***  29200002
R0       EQU   0                                                        29600002
R1       EQU   1                                                        30000002
R2       EQU   2                                                        30400002
R3       EQU   3                                                        30800002
R4       EQU   4                                                        31200002
R5       EQU   5                                                        31600002
R6       EQU   6                                                        32000002
R7       EQU   7                                                        32400002
R8       EQU   8                                                        32800002
R9       EQU   9                                                        33200002
R10      EQU   10                                                       33600002
R11      EQU   11                                                       34000002
R12      EQU   12                                                       34400002
R13      EQU   13                                                       34800002
R14      EQU   14                                                       35200002
R15      EQU   15                                                       35600002
MFTWO    EQU   X'74'                                               000H 36000002
MFTBT    EQU   X'20'                                               000H 36400002
TCBPIB   EQU   X'7C'                                               000H 36800002
PIBWTR   EQU   X'10'                                               000H 37200002
HIAR1    EQU   X'84'                    TEST JFCBHIAR FIELD      A36842 37600002
SET0     EQU   X'7F'                    SET PARUCS TO HIAR 0     A36842 38000002
SET1     EQU   X'80'                    SET PARUCS TO HIAR 1     A36842 38400002
WTRPART  EQU   X'02'              USED TO SET BIT 6 WTR IN PARTIT M3785 38800002
DEVLNGH  EQU   8                       AMOUNT OF CORE FOR DEVTPE A32047 39200002
*                                                                    *  39600002
**********************************************************************  40000002
         EJECT                                                          40400002
**********************************************************************  40800002
*        IASXWR00                  THE PROGRAM                       *  41200002
**********************************************************************  41600002
***                                                                ***  42000002
*        ESTABLISH BASE REGISTER AND SAVE INPUT REGISTERS            *  42400002
***                                                                ***  42800002
         SAVE  (14,12)                  SAVE REGISTERS                  43200002
         BALR  R9,0                     ESTABLISH                       43600002
         USING *,R9                       BASE REGISTER                 44000002
         LR    R7,R1                    SAVE PARAM REG                  44400002
         MODESET MODE=SUP                                               44800002
***                                                                ***  45200002
*        GETMAIN AND ESTABLISH ADDRESSABILITY                        *  45600002
***                                                                ***  46000002
         LA    R0,CORELENG              LOAD LTH OF DCB+PARLIST+4  CC0H 46400002
         GETMAIN R,LV=(0)                                               46800002
         LA    R0,CORELENG              REESTABLISH SIZE           SM0I 47200002
         ST    R0,0(R1)                 STORE LENGTH IN FIRST 4 BYTES   47600002
         LA    R2,4(R1)                 INCREMENT ADDR PAST LENGTH      48000002
*                                        FIELD TO DCB ADDR              48400002
         LA    R3,PARDCBLN(R2)          LOAD ADDR OF PARAMETER LIST,    48800002
*                                        HENCEFORTH CALLED 'PARLIST'    49200002
*     SET UP ADDR OF JFCB AND DEVDTYP AREAS IN R4                       49600002
         LA    R4,JFCBDISP(R1)     LOAD ADDR OF DEVD & JFCB             50000002
         USING IHADCB,R2                ADDRESSABILITY FOR DCB          50400002
         USING PARLIST,R3               ADDRESSABILITY FOR PARLIST      50800002
         USING SPLAD,R7                 ADDRESSABILITY FOR SPL          51200002
***                                                                ***  51600002
*        INITIALIZE PARTS OF THE PARAMETER LIST                      *  52000002
***                                                           *** M3070 52400002
         ST    R2,PARDCB           STORE DCB ADDR IN PARLIST      M3070 52800002
         ST    R7,PARSPL           STORE SAVED SPL ADDR IN LIST   M3070 53200002
         ST    R4,PARWORK          SET UP ADDR. OF WORK SPACE IN LIST   53600002
         LR    R1,R2               ADDRESS OF EXTRACT LIST              54000002
         MVC   0(COMMLENG,1),COMMLIST  MOVE LIST TO GOTTEN CORE   M3070 54400002
         EXTRACT PARCOMM,MF=(E,(1))    EXECUTE EXTRACT SVC        M3070 54800002
***                                                             ***000H 55200002
         XC    PARSMF(4),PARSMF    ZERO OUT SMF ADDRESS            SM0I 55600002
***                                                                ***  56000002
*        PREPARE DCB FOR OUTPUT OPEN                                 *  56400002
***                                                                ***  56800002
CONTINUE MVC   0(PARDCBLN,R2),SD80DCB  MOVE OUTPUT DCB INTO GOTCORE000H 57200002
         XC    PAREXCP(4),PAREXCP CLEAR OUT EXCP POINTERS        A32047 57600002
         XC    PARWORK1(16),PARWORK1   CLEAR WRKAREA & SWITCHES  A32047 58000002
*GET CORE FOR JFCB AND DCB EXIT LIST AND MAKE UP EXIT LIST         CC0H 58400002
         L     R6,16                   GET TCB ADDRESS           A32047 58800002
         L     R6,0(R6)                                          A32047 59200002
         L     R6,4(R6)                NOW HAVE TCB ADDRESS      A32047 59600002
         USING TCBAR,R6                ADDRESSABILITY FOR TCB    A32047 60000002
         L     R6,TCBTIO               GET TIOT ADDRESS          A32047 60400002
         USING TIOTAR,R6               ADDRESSIBILITY FOR TIOT   A32047 60800002
         MVC   DCBDDNAM(8),TIOEDDNM    MOVE DDNAME TO DCB        A32047 61200002
         DEVTYPE DCBDDNAM,(R4)     IS DATA SET DUMMY?                   61600002
         CLC   PAREXCP(4),0(R4)    TEST FOR DUMMY DATA SET              62000002
         BNE   SD80EXT             NO - DON'T SET SWITCH                62400002
SETDUMSW OI    PARSWCH,PARDUMMY        TURN ON DD DUMMY SWITCH   A32047 62800002
         MVC   PARWTRNM(3),TIOCNJOB     USE JOB AS WTR ID               63200002
SD80EXT  EQU   *                                                        63600002
         XC    DCBEXLST+1(3),DCBEXLST+1 CLEAR OUT EXIT LIST PTR.   CC0H 64000002
         LA    R4,PARJSNM                                          CC0H 64400002
         ST    R4,PARJBSEP              SET PTR TO JOB SEP NAME FIELD.  64800002
         MVI   0(R4),C' '               BLANK OUT NAME FIELD.           65200002
         MVC   1(7,R4),0(R4)                                            65600002
**********************************************************************  66000002
*        EXIT                                                        *  66400002
**********************************************************************  66800002
         LR    R1,R3                    LOAD ADDRESS OF PARLIST.        67200002
         L     R15,SD80EXIT             LOAD ADDR FOR EXIT              67600002
         BALR  R14,R15                  LEAVE                           68000002
**********************************************************************  68400002
*                                                                    *  68800002
*                                                                    *  69200002
*                                                                    *  69600002
**********************************************************************  70000002
*        CONSTANTS AND DSECTS                                        *  70400002
**********************************************************************  70800002
COMMLIST EXTRACT ,FIELDS=COMM,MF=L     EXTRACT LIST FORM           I272 71200002
COMMLENG EQU   *-COMMLIST              LENGTH OF EXTRACT PARAMETERSI272 71600002
SD80EXIT DC    V(IASXSD81)         EXIT ADDRESS (CLASSNAME              72000002
*                                        SET-UP RTN OR XCTL RTN)        72400002
SD80EREX EQU   0                        *** TEMP***                  *  72800002
VARSW    EQU   X'40'                    VARIABLE SWITCH            CC0H 73200002
FIXSW    EQU   X'80'                    FIXED SWITCH               CC0H 73600002
SD80JFCB RDJFCB (0),MF=L                READ JFCB LIST             CC0H 74000002
SD80EXC  DCB   DSORG=PS,                                           CC0HX74400002
               CENDA=C5,                                         A29072*74800002
               MACRF=E                                             CC0H 75200002
SD80DCB  DCB   DSORG=PS,                                               X75600002
               MACRF=PL,                                               X76000002
               BFTEK=S,                                                X76400002
               SYNAD=SD80EREX                                           76800002
*                                                                    *  77200002
*                                                                    *  77600002
*                                                                    *  78000002
*                                                                    *  78400002
*        N O T E      THAT IN THE FOLLOWING EXPANSION USED FOR       *  78800002
*        AN OPEN LIST   THE  DCB ADDRESS IS  OVERRIDDEN IN THE       *  79200002
*        ABOVE CODE BY THE ADDRESS OF THE  DCB  WHICH IS ACTUALLY    *  79600002
*        TO BE OPENED, NAMELY, THE ONE IN GOTTEN CORE                *  80000002
*                                                                    *  80400002
*                                                                    *  80800002
         DCBD  DSORG=PS                                                 81200002
         IEFSDPAR                                                MAPMAC 81600002
PARDCBLN EQU   DCBEOB+4-IHADCB                                   MAPMAC 82000002
JFCBDISP EQU   PARLENGT+PARDCBLN+4                                      82400002
         EJECT                                                          82800002
**********************************************************************  83200002
JFCAR    DSECT                                                          83600002
         IEFJFCBN                                                       84000002
CORELENG EQU   PARLENGT+PARDCBLN+JFCBLGTH+8  SIZE OF GETMAIN            84400002
         EJECT                                                          84800002
**********************************************************************  85200002
TIOTAR   DSECT                                                          85600002
         IEFTIOT1                                                       86000002
**********************************************************************  86400002
TCBAR    DSECT                                                          86800002
         DS    2F                                                       87200002
TCBDEB   DS    1F                                                       87600002
TCBTIO   DS    1F                                                       88000002
**********************************************************************  88400002
DEBAR    DSECT                                                     CC0H 88800002
         DS    8F                                                  CC0H 89200002
DEBUCB   DS    1F                                                  CC0H 89600002
*******************************************************************CC0H 90000002
UCBAR    DSECT                                                     CC0H 90400002
         IEFUCBOB                                                       90800002
         END                                                            91200002
./  ADD  SSI=21520635,NAME=IEFSDTTE
IEFSDTTE CSECT                                                          00100020
         TITLE 'IEFSDTTE - 3211 PRINTER SUPPORT MODULE'                 00200020
*********************************************************************** 00300020
*1320                                                            A53806 00320021
*0000                                                            M5709  00350020
*0000                                                            M5878  00370020
*0000                                                            M5882  00380020
*1320                                                            A42459 00390021
*                                                                     * 00400020
*TITLE-- IEFSDTTE - 3211 PRINTER SUPPORT MODULE                       * 00500020
*                                                                     * 00600020
* STATUS CHANGE LEVEL 001                                               00700021
*                                                                     * 00800020
*FUNCTION/OPERATION-- THIS ROUTINE ANALYZES THE USER REQUESTS FOR     * 00900020
*   UCS/FCB ENVIRONMENTS AND DYNAMICALLY CAUSES LOADING OF THE 3211   * 01000020
*   PRINTER UNIVERSAL CHARACTER SET BUFFER AND THE FORMS CONTROL      * 01100020
*   BUFFER FOR EACH OUTPUT DATA SET.                                  * 01200020
*                                                                     * 01300020
*ENTRY POINT-- IEFSDTTE - FROM THE STANDARD SYSTEM OUTPUT WRITER IN   * 01400020
*   IEFSD087 PRIOR TO OPENING EACH INPUT DATA SET DESTINED FOR OUTPUT * 01500020
*   TO THE 3211 PRINTER.                                              * 01600020
*   FROM THE SMB PROCESSOR IN IEFSD086 PRIOR TO THE WRITING OF EACH   * 01700020
*   GROUP OF SMBS TO:                                                 * 01800020
*        1. FORCE BLOCKING OF DATA CHECKS                             * 01900020
*        2. PROVIDE UCS/FCB IMAGE-IDS WHICH ARE DEFAULTS              * 02000020
*   FROM THE LINKOR ROUTINE IN IEFSD078 PRIOR TO PROCESSING           * 02100020
*   JOB SEPERATORS TO.                                                * 02200020
*        1. FORCE BLOCKING OF DATA CHECKS                             * 02300020
*        2. PROVIDE UCS/FCB IMAGE-IDS WHICH ARE DEFAULTS              * 02400020
*                                                                     * 02500020
*INPUT-- REGISTER 7 POINTS TO THE WORK LIST USED BY DSD AND SMB       * 02600020
*        ROUTINE.                                                     * 02700020
*        REGISTER 8 POINTS TO THE WORK AREA FOR STANDARD OUTPUT       * 02800020
*        ROUTINE.                                                     * 02900020
*                                                                     * 03000020
*OUTPUT-- ON RETURN, REGISTER 15 WILL CONTAIN A RETURN                * 03100020
*   CODE INDICATING UCS/FCB ENVIRONMENTAL CONDITIONS.                 * 03200020
*        REGISTER 15 RETURN CODE=00 - SUCCESSFUL COMPLETION.          * 03300020
*        REGISTER 15 RETURN CODE<0C AND                               * 03400020
*             SWITCH SORS1=INERS - INPUT ERROR.                       * 03500020
*        REGISTER 15 RETURN CODE>08 - OUTPUT ERROR.                   * 03600020
*                                                                     * 03700020
*EXTERNAL ROUTINES--                                                  * 03800020
*        IEFSD089 TO OUTPUT ERROR MESSAGE                             * 03900020
*                                                                     * 04000020
*EXIT-NORMAL-- RETURNS TO THE INSTRUCTION FOLLOWING THE ONE WHICH     * 04100020
*   LINKED TO THIS ROUTINE TO RESUME NORMAL WRITER PROCESSING.        * 04200020
*                                                                     * 04300020
*EXIT-ERROR-- RETURNS TO FREE WORKFILES AND ON                        * 04400020
*   INPUT ERRORS-- SKIP INPUT DATA SET.                               * 04500020
*   OUTPUT ERRORS-- REENQUEUE DATA SET AND TERMINATE WRITER.          * 04600020
*                                                                     * 04700020
*TABLES/WORK AREAS-- THE WORKLST AND WKSOR WRITER COMMUNICATION LISTS,* 04800020
*   THE PARLIST COMMUNICATION REGION,                                 * 04900020
*   THE OUTPUT DCB, THE INPUT JFCB, AND THE OUTPUT UCB.               * 05000020
*                                                                     * 05100020
*ATTRIBUTES-- THIS ROUTINE IS REENTRANT AND REFRESHABLE.              * 05200020
*                                                                     * 05300020
*NOTES-- THE SETPRT MACRO IS USED TO REQUEST DATA MANAGEMENT LOADING  * 05400020
*   OF THE UCS/FCB BUFFERS.                                           * 05500020
*                                                                     * 05600020
*********************************************************************** 05700020
*                                                                     * 05800020
         EJECT                                                          05900020
*DEFINE DCB                                                             06000020
         DCBD  DSORG=PS                                                 06100020
*DEFINE JFCB                                                            06200020
IEFJFCBN DSECT                                                          06300020
         IEFJFCBN                                                       06400020
*DEFINE UCB                                                             06500020
IEFUCBOB DSECT                                                          06600020
         IEFUCBOB                                                       06700020
*DEFINE PARAMETER LIST                                                  06800020
         IEFSDPAR                                                       06900020
*DEFINE SETPRT LIST                                                     07000020
         IEFSDSET                                                       07100020
*DEFINE WKSOR WORK AREA                                                 07200020
         IEFSDSDR                                                       07300020
*DEFINE WORKLST                                                         07400020
         IEFSDWKT                                                       07500020
         EJECT                                                          07600020
*                                                                     * 07700020
*********************************************************************** 07800020
*                                                                     * 07900020
*        ESSENTIAL EQUATES                                              08000020
*********************************************************************** 08100020
ZERO     EQU   0                        LENGTH OF ZERO                  08200020
ONE      EQU   1                        LENGTH OF ONE                   08300020
XZERO    EQU   X'00'                    ZERO FCB RETURN CODE            08400020
TWO      EQU   2                        LENGTH OF TWO                   08500020
THREE    EQU   3                        CONSTANT OF THREE               08600020
FOUR     EQU   4                        LENGTH OF FOUR                  08700020
NINETEEN EQU   19                       CONSTANT OF 19                  08800020
ONEBYTE  EQU   8                        LENGTH OF 1-BYTE SHIFT          08900020
TWOBYTES EQU   16                       LENGTH OF 2-BYTE SHIFT          09000020
THREEBYT EQU   24                       LENGTH OF 3-BYTE SHIFT          09100020
INERR    EQU   4                        INPUT ERR RET CODE TO 087       09200020
OUTERR   EQU   8                        OUTPUT ERR RET CODE TO 087      09300020
DDDOFSET EQU   16                            WTR DEVICE ADDR OFFSET     09400020
RCOFFSET EQU   19                       RET CODE IN GR15 SAVE AREA      09500020
SDTTMLGN EQU   102                      WTO MAX MESSAGE LENGTH          09600020
SDTTMLG1 EQU   78                       WTO MESSAGE LENGTH              09700020
FCBTST   EQU   X'80'                    FCB TEST IN PROCESS INDICATOR   09800020
ASAS1    EQU   C' '                     ASA CNTRL CHAR SPACE 1          09900020
MCCS1    EQU   X'09'                    MACHINE CNTRL CHAR SPACE 1      10000020
MACSW    EQU   2                        MACHINE CNTRL CHAR              10100020
RCHIGH   EQU   X'1C'                    HIGHEST VALID RETURN CODE       10200020
FLAGF    EQU   X'FF'                    ONE BYTE FLAG OF F              10300020
ENTSW    EQU   FLAGF-PARTTE-PARTTE1     USED TO TURN OFF ENTRYSW M5878  10350020
DCBLK    EQU   X'80'                    DATA CHECK BLOCK REQUEST        10400020
DCUNBLK  EQU   X'40'                    DATA CHECK UNBLOCK REQUEST      10500020
DCFOLD   EQU   X'04'                    DATA CHECK FOLD REQUEST         10600020
DCUNFOLD EQU   X'08'                    DATA CHECK UNFOLD REQUEST       10700020
DCBUNBLK EQU   X'40'                    DATA CHECKS UNBLOCKED           10800020
DEBUCBAD EQU   32                       UCB ADDR OFFSET IN DEB          10900020
FCBVERFY EQU   X'80'                    FCB VERIFY REQUEST              11000020
FCBALIGN EQU   X'01'                    FCB ALIGN REQUEST               11100020
JFCBFVR  EQU   X'04'                    JFCB FCB VERIFY REQUEST         11200020
JFCBFAL  EQU   X'08'                    JFCB FCB ALIGN REQUEST          11300020
JFCBUVR  EQU   X'10'                    JFCB UCS VERIFY REQUEST         11400020
JFCBUF   EQU   X'40'                    JFCB UCS FOLD REQUEST           11500020
JFCBUBLK EQU   X'40'                    JFCB UNBLOCK (ALLOW DATA CHECK) 11600020
LMFOLD   EQU   X'40'                    LOAD MODE FOLD REQUEST          11700020
LMUNFOLD EQU   X'00'                    LOAD MODE UNFOLD                11800020
UCBFDF   EQU   X'80'                    UCB FCB ID IS A DEFAULT ID      11900020
UCBUDF   EQU   X'80'                    UCB UCS ID IS A DEFAULT ID      12000020
UCBUPE   EQU   X'01'                    UCB UCS PARITY ERROR            12100020
UCBUF    EQU   X'40'                    UCB UCS FOLD MODE               12200020
EIGHT    EQU   8                       LENGTH OF EIGHT           M5709  12230020
SVSIZE   EQU   72                       SIZE OF SAVE AREA        M5709  12260020
UCSVERFY EQU   X'10'                    UCS VERIFY REQUEST              12300020
*                                                                       12400020
*********************************************************************** 12500020
*                                                                       12600020
*        REGISTER EQUATES                                               12700020
*********************************************************************** 12800020
*                                                                       12900020
PR0      EQU   0                        PARAMETER REGISTER 0            13000020
PR1      EQU   1                        PARAMETER REGISTER 1            13100020
MSGRET   EQU   2                        ERROR MSG RETURN REG            13200020
PARLISTR EQU   3                        PARLIST BASE                    13300020
JFCBR    EQU   4                        INPUT JFCB BASE                 13400020
UCBR     EQU   5                        OUTPUT UCB PRT EXTENSION BASE   13500020
DCBR     EQU   6                        OUTPUT DCB BASE                 13600020
WORKLSTR EQU   7                        WORKLIST BASE                   13700020
WKSOREG  EQU   8                        WKSOR BASE                      13800020
BASER    EQU   9                        BASE REGISTER                   13900020
SETPR    EQU   10                       SETPRT LIST BASE                14000020
MSGSTRTR EQU   11                       ERROR MSG STARTING ADDRESS      14100020
BRTABR   EQU   11                       BRANCH TABLE BASE REGISTER      14200020
MSGLGNR  EQU   12                       ERROR MSG LENGTH                14300020
WORKR    EQU   12                       WORK REGISTER                   14400020
RCREG    EQU   12                       RETURN CODE PROCESSING REG      14500020
SAVER    EQU   13                       SAVE AREA POINTER               14600020
RETR     EQU   14                       RETURN REGISTER                 14700020
BRANCHR  EQU   15                       MSG WTR BRANCH REGISTER         14800020
         EJECT                                                          14900020
*                                                                     * 15000020
*********************************************************************** 15100020
*                                                                     * 15200020
*        THE 3211 PRINTER PROCESSOR MODULE                            * 15300020
*                                                                     * 15400020
*********************************************************************** 15500020
*                                                                     * 15600020
IEFSDTTE CSECT                                                          15700020
         SPACE                                                          15800020
*INITIALIZE REGISTERS                                                   15900020
         SAVE  (14,12)                  SAVE REGISTERS                  16000020
         BALR  BASER,0                  ESTABLISH                       16100020
         USING *,BASER                    CSECT BASE                    16200020
         LR    PARLISTR,PR1             SAVE CONTENTS OF REG 1   M5709  16210020
         LA    PR0,SVSIZE               LOAD SIZE OF SAVE AREA   M5709  16220020
         GETMAIN R,LV=(0)               GET CORE FOR SAVE AREA   M5709  16230020
         ST    SAVER,FOUR(PR1)          BUILD SAVE AREA CHAIN    M5709  16240020
         ST    PR1,EIGHT(SAVER)                                  M5709  16250020
         LR    SAVER,PR1                POINTER TO NEW SAVE AREA M5709  16260020
         LR    PR1,PARLISTR             RESTORE REG 1            M5709  16270020
         USING WORKLST,WORKLSTR           WORK LIST BASE                16300020
         L     PARLISTR,WOSPS           GET ADDR OF PARLIST             16400020
         USING PARLIST,PARLISTR         ESTABLISH ADDRESSIBILITY        16500020
         USING WKSOR,WKSOREG              WKSOR BASE                    16600020
         USING INFMJFCB,JFCBR             INPUT JFCB BASE               16700020
         L     DCBR,DCBOT               ESTABLISH                       16800020
         USING IHADCB,DCBR                OUTPUT DCB BASE               16900020
         L     UCBR,PARUCB              GET OUTPUT UCB ADDRESS          17000020
         USING UCBOB,UCBR                 OUTPUT UCB BASE               17100020
         L     UCBR,UCBXTADR            SHIFT TO UCB/UCS EXTENSIONTTE0K 17200020
         DROP  UCBR                                              A42459 17230021
         USING UCBUCS,UCBR              BASE FOR UCS EXTENSION   A42459 17260021
         SPACE                                                          17300020
*GET CORE FOR DYNAMICALLY CHANGED SETPRT LIST                           17400020
         LR    WORKR,PR1          COPY ADDR OF 089 PASSED BY     TEST   17500020
*                                         086 OR 087             TEST   17600020
         LA    PR0,184+SPLEND-SPLIST   GET SIZE OF SETPRT LIST   TEST   17700020
         GETMAIN R,LV=(0)               GET CORE FOR LIST               17800020
         LR    SETPR,PR1                ESTABLISH                       17900020
         USING SPLIST,SETPR               SETPRT LIST BASE              18000020
*INITIALIZE GOTTEN CORE                                                 18100020
         XC    SPLIST(SPLLGN),SPLIST   CLEAR SETPRT LIST AREA    TEST   18200020
         MVC   0(SPLLGN-8,SETPR),SETPRTL                         TEST   18300020
*                                 COPY SETPRT LIST TO GOT CORE   TEST   18400020
         ST    WORKR,SPLOP        SAVE ADDR OF 089 IN GOT CORE   TEST   18500020
         OI    SPLDACK,DCBLK            DEFAULT TO BLOCK DATA CHECKS    18600020
         OI    SPLDACK,DCUNFOLD         DEFAULT TO UNFOLD IMAGE         18700020
         MVC   SPLDCBAD(FOUR),DCBOT     GET OUTPUT DCB ADDR FOR SETPRT  18800020
         TM    PARSWCH,PARTTE+PARTTE1   IS ENTRY FROM 086 OR 078        18900020
         BZ    FCBID1                   NO, ENTRY FROM IEFSD087         19000020
         SPACE                                                          19100020
*                                                                       19200020
*********************************************************************** 19300020
*                                                                       19400020
         TM    UCBUCSOP,UCBUDF          PRESENT UCS IMAGE DEFAULT       19500020
         BO    DEFAULT3                 YES, DONT CHANGE IT             19600020
         CLC   UCBUCSID(FOUR),PARUCSID  DEFAULT IMAGE ALREADY LOADED    19700020
         BE    DEFAULT3                 YES, DONT RELOAD IT             19800020
         MVC   SPLUCSID(FOUR),PARUCSID  PLACE DEFAULT UCS IMAGE-ID      19900020
*                                         SAVED IN PARLIST INTO SETPRT  20000020
DEFAULT3 EQU   *                                                        20100020
         TM    UCBFCBOP,UCBFDF          PRESENT FCB IMAGE DEFAULT       20200020
         BO    DEFAULT4                 YES, DONT CHANGE IT             20300020
         CLC   UCBFCBID(FOUR),PARFCBID  DEFAULT IMAGE ALREADY LOADED    20400020
         BE    DEFAULT4                 YES, DONT RELOAD IT             20500020
         MVC   SPLFCBID(FOUR),PARFCBID  PLACE DEFAULT FCB IMAGE-ID      20600020
*                                         SAVED IN PARLIST INTO SETPRT  20700020
DEFAULT4 EQU   *                                                        20800020
         TM    DCBOPTCD,DCBUNBLK        DATA CHECKS PRESENTLY UNBLOCKED 20900020
         BZ    MAC1                     NO, ISSUE SETPRT FOR IMAGE-IDS  21000020
         NI    SPLDACK,FLAGF-DCUNBLK    TURN OFF UNBLOCK DATA CK BIT    21100020
         OI    SPLDACK,DCBLK            PLACE BLOCK REQ IN SETPRT LIST  21200020
         B     MAC1                     ISSUE SETPRT MACRO              21300020
*                                                                       21400020
*********************************************************************** 21500020
         EJECT                                                          21600020
*ENVIRONMENTAL ANALYSIS                                                 21700020
*                                                                     * 21800020
*********************************************************************** 21900020
*                                                                     * 22000020
*   THE INPUT JFCB CONTAINS THE USER REQUESTS FOR THE ENVIRONMENT     * 22100020
*   REQUIRED FOR EACH OUTPUT DATA SET AS DESCRIBED ON THE USERS OUTPUT* 22200020
*   DD CARDS.  THE OUTPUT UCB CONTAINS THE PRESENT 3211 OUTPUT UCS/FCB* 22300020
*   DESCRIPTION.  THIS CODE CHECKS THE JFCB FOR REQUESTS WHICH DIFFER * 22400020
*   FROM THE PRESENT UCB ENTRIES.  THOSE THAT DIFFER CONSTITUTE CHANGE* 22500020
*   REQUESTS VIA THE SETPRT MACRO TO ESTABLISH A NEW ENVIRONMENT FOR  * 22600020
*   THE NEXT OUTPUT DATA SET.                                         * 22700020
*                                                                     * 22800020
*********************************************************************** 22900020
*                                                                     * 23000020
         SPACE                                                          23100020
FCBID1   EQU   *                                                        23200020
         L     JFCBR,WJFCB              LOAD JFCB POINTER        M5882  23250020
         CLC   JFCFCBID(FOUR),INVALADR  FCB IMAGE-ID SPECIFIED          23300020
         BNE   FCBID1P                  YES, COMPARE WITH PRESENT ID    23400020
         TM    UCBFCBOP,UCBFDF          PRESENT IMAGE-ID A DEFAULT      23500020
         BZ    DEFAULT1                 NO, USE DEFAULT PARAMETERS      23600020
FCBVER1  EQU   *                                                        23700020
         TM    JFCUCSOP,JFCBFVR         FCB IMAGE-ID VERIFY REQUEST     23800020
         BO    FCBVERM                  YES, OUTPUT NO IMAGE MSG.       23900020
FCBALN1  EQU   *                                                        24000020
         TM    JFCUCSOP,JFCBFAL         FCB IMAGE-ID ALIGNMENT REQUEST  24100020
         BO    FCBALNM                  YES, OUTPUT NO IMAGE MSG.       24200020
UCSID1   EQU   *                                                        24300020
         CLC   JFCUCSID(FOUR),INVALADR  UCS IMAGE-ID SPECIFIED          24400020
         BNE   UCSID1P                  YES, COMPARE WITH PRESENT ID    24500020
         TM    UCBUCSOP,UCBUPE          RELOAD REQUEST FROM OPEN        24600020
         BO    RELOAD                   YES, PREPARE TO RELOAD          24700020
         TM    UCBUCSOP,UCBUDF          PRESENT IMAGE-ID A DEFAULT      24800020
         BZ    DEFAULT2                 NO, USE DEFAULT PARAMETERS      24900020
UCSVER1  EQU   *                                                        25000020
         TM    JFCUCSOP,JFCBUVR         UCS IMAGE-ID VERIFY REQUEST     25100020
         BO    UCSVER1P                 YES, OUTPUT NO IMAGE MSG.       25200020
FOLD1    EQU   *                                                        25300020
         TM    JFCUCSOP,JFCBUF          UCS FOLD MODE REQUEST           25400020
         BO    FOLD1P                   YES, PREPARE TO FOLD            25500020
UNBLK1   EQU   *                                                        25600020
         TM    JFCOPTCD,JFCBUBLK        ALLOW DATA CK.-UNBLOCK REQUEST  25700020
         BO    UNBLKREQ                 YES, PREPARE TO UNBLOCK         25800020
*                                         ELSE DEFAULT TO BLOCK         25900020
*********************************************************************** 26000020
*                                                                       26100020
LISTCLR1 EQU   *                                                        26200020
         LA    PR0,184+SPLEND-SPLIST   GET SIZE OF SETPRT LIST   TEST   26300020
         LR    PR1,SETPR                GET ADDR OF AREA TO FREE        26400020
         FREEMAIN R,LV=(0),A=(1)        FREE SETPRT LIST CORE           26500020
*LEAVE THIS MODULE                                                      26600020
WRAPUP   EQU   *                                                        26700020
         NI    PARSWCH,ENTSW            TURN OFF ENTRY SW 78/86  M5878  26710020
         LR    PR1,SAVER                AREA TO FREE             M5709  26720020
         L     SAVER,FOUR(PR1)          REST SAVE AREA POINTER   M5709  26740020
         LA    PR0,SVSIZE               SIZE OF CORE TO FREE     M5709  26760020
         FREEMAIN  R,LV=(0),A=(1)       FREE SAVE AREA CORE      M5709  26780020
         RETURN  (14,12)                                                26800020
*                                         RETURN TO CALLER              26900020
*                                                                       27000020
*********************************************************************** 27100020
*                                                                       27200020
         EJECT                                                          27300020
*COMPARE NEW JFCB REQUEST WITH PRESENT UCB                              27400020
FCBID1P  EQU   *                                                        27500020
         OC    JFCFCBID(FOUR),BLANKS    BLANK OUT TRAILING ZEROES       27600020
         CLC   JFCFCBID(FOUR),UCBFCBID  JFCB AND UCB ID EQUAL           27700020
         BE    FCBVER2                  YES, IGNORE CHANGE REQUEST      27800020
         MVC   SPLFCBID(FOUR),JFCFCBID  PLACE NEW FCB-ID REQ. IN SETPRT 27900020
FCBVER2  EQU   *                                                        28000020
         TM    JFCUCSOP,JFCBFVR         FCB IMAGE-ID VERIFY REQUEST     28100020
         BZ    FCBALN2                  NO, SKIP REQUEST                28200020
         OI    SPLFCBVA,FCBVERFY        PLACE NEW FCB VERIFY REQ. IN    28300020
*                                         SETPRT LIST                   28400020
         B     UCSID2                   GO TO CHECK UCS ID REQUEST      28500020
FCBALN2  EQU   *                                                        28600020
         TM    JFCUCSOP,JFCBFAL         FCB IMAGE-ID ALIGNMENT REQUEST  28700020
         BZ    UCSID2                   NO, GO TO CHECK UCS ID REQUEST  28800020
FCBALP   EQU   *                                                        28900020
         OI    SPLFCBVA,FCBALIGN        PLACE NEW FCB ALIGN REQUEST     29000020
*                                         IN SETPRT LIST                29100020
UCSID2   EQU   *                                                        29200020
         CLC   JFCUCSID(FOUR),INVALADR  UCS IMAGE-ID SPECIFIED          29300020
         BNE   UCSID1P                  YES, COMPARE WITH PRESENT ID    29400020
         TM    UCBUCSOP,UCBUPE          RELOAD REQUEST FROM OPEN        29500020
         BO    RELOAD                   YES, PREPARE TO RELOAD          29600020
         TM    UCBUCSOP,UCBUDF          PRESENT IMAGE-ID A DEFAULT      29700020
         BZ    DEFAULT2                 NO, USE DEFAULT PARAMETERS      29800020
UCSVER3  EQU   *                                                        29900020
         TM    JFCUCSOP,JFCBUVR         UCS IMAGE-ID VERIFY REQUEST     30000020
         BO    UCSVER3P                 YES, OUTPUT NO IMAGE MSG.       30100020
FOLD3    EQU   *                                                        30200020
         TM    JFCUCSOP,JFCBUF          UCS FOLD MODE REQUEST           30300020
         BO    FOLD1P                   YES, PREPARE TO FOLD            30400020
UNBLK2   EQU   *                                                        30500020
         TM    JFCOPTCD,JFCBUBLK        ALLOW DATA CK.-UNBLOCK REQUEST  30600020
         BZ    MAC1                     NO, ISSUE SETPRT MACRO          30700020
UNBLKREQ EQU   *                                                        30800020
         NI    SPLDACK,FLAGF-DCBLK      TURN OFF BLOCK DATA CK BIT      30900020
         OI    SPLDACK,DCUNBLK          PLACE UNBLOCK REQ IN SETPRT     31000020
         SPACE                                                          31100020
MAC1     EQU   *                                                        31200020
         LR    PR1,SETPR                GET ADDR OF SETPRT LIST         31300020
         SETPRT (DCBR),OPTCD=B,MF=(E,(PR1))                             31400020
         SPACE                                                          31500020
*********************************************************************** 31600020
*                                                                       31700020
*TEST RETURN CODES FROM SETPRT MACRO                                    31800020
         LTR   BRANCHR,BRANCHR          SUCCESSFUL SETPRT EXEC          31900020
         BZ    LISTCLR                  YES, CLEAR SETPRT LIST          32000020
*PICK UP FIRST FCB THEN UCS RETURN CODE                                 32100020
         LR    JFCBR,BRANCHR            SAVE RETURN CODE         A53806 32150021
         L     UCBR,PARUCB             RESTORE POINTER TO UCB           32200020
         OI    SPLOP,FCBTST             TURN ON FCB TEST ENTRY SWITCH   32300020
RCTST    EQU   *                                                        32400020
         LA    BRTABR,BRTABLE           GET ADDR OF BRANCH TABLE        32500020
         TM    PARSWCH,PARTTE1          IS ENTRY FROM 078               32600020
         BZ    RCTST1                  NO, CONTINUE                     32700020
         LA    BRTABR,BRTABLE1          YES, ADVANCE TO SECOND BRANCH   32800020
*                                         TABLE                         32900020
RCTST1   EQU   *                                                        33000020
         LR    RCREG,BRANCHR            COPY FCB RETURN CODE            33100020
         SLL   RCREG,TWOBYTES           CLEAR TWO HIGH BYTES            33200020
         TM    SPLOP,FCBTST             FCB RET CODE TEST IN PROCESS    33300020
         BO    TESTGO                   YES, BYPASS UCS PROCESS         33400020
         SLL   RCREG,ONEBYTE            CLEAR EXTRA BYTE W/FCB CODE     33500020
TESTGO   EQU   *                                                        33600020
         SRL   RCREG,THREEBYT           RIGHT JUSTIFY RET CODE          33700020
         LA    PR1,RCHIGH               HIGHEST VALID RETURN CODE       33800020
         CR    RCREG,PR1                IS RET CODE > 1C                33900020
         BNH   TESTGO1                  NO, ANALIZE IT                  34000020
         B     WTO1                     YES, OUTPUT MESSAGE IEF327I     34100020
TESTGO1  EQU   *                                                        34200020
         AR    BRTABR,RCREG             INCREMENT INTO BRTABLE          34300020
         BR    BRTABR                     TO ACT ON RETURN CODE         34400020
*RETURN CODE DETERMINES BRANCH TABLE ENTRY                              34500020
*TABLE IF ENTRY IS FROM 086 OR 087                                      34600020
BRTABLE  EQU   *                                                        34700020
*                                  RETURN CODE =                        34800020
         B     LISTCLR             00 - SUCCESSFUL                      34900020
         B     IDNAM               04 - INPUT ERROR MSG WRITE  IEF325I  35000020
         B     IDBLEM              08 - INPUT ERROR MSG WRITE  IEF326I  35100020
         B     WTO1                0C - OUTPUT ERROR MSG WRITE IEF327I  35200020
         B     WTO2                10 - OUTPUT ERROR MSG WRITE IEF328I  35300020
         B     WTO3                14 - OUTPUT ERROR MSG WRITE IEF329I  35400020
         B     PLIM                18 - INPUT ERROR MSG WRITE  IEF311I  35500020
         B     WTO4                1C - OUTPUT ERROR MSG WRITE IEF331I  35600020
*                                                                       35700020
*TABLE IF ENTRY IS FROM 078                                             35800020
BRTABLE1 EQU   *                                                        35900020
*                                  RETURN CODE =                        36000020
         B     LISTCLR             00 - SUCCESSFUL                      36100020
         B     WTO5                04 - INPUT ERROR MSG WRITE  IEF325I  36200020
         B     WTO6                08 - INPUT ERROR MSG WRITE  IEF326I  36300020
         B     WTO1                0C - OUTPUT ERROR MSG WRITE IEF327I  36400020
         B     WTO2                10 - OUTPUT ERROR MSG WRITE IEF328I  36500020
         B     WTO3                14 - OUTPUT ERROR MSG WRITE IEF329I  36600020
         B     WTO7                18 - INPUT ERROR MSG WRITE  IEF311I  36700020
         B     WTO4                1C - OUTPUT ERROR MSG WRITE IEF331I  36800020
*********************************************************************** 36900020
         SPACE                                                          37000020
UCSID1P  EQU   *                                                        37100020
         OC    JFCUCSID(FOUR),BLANKS    BLANK OUT TRAILING ZEROES       37200020
         CLC   JFCUCSID(FOUR),UCBUCSID  JFCB AND UCB ID EQUAL           37300020
         BE    UCSVER2                  YES, IGNORE CHANGE REQUEST      37400020
         MVC   SPLUCSID(FOUR),JFCUCSID  PLACE NEW UCS-ID REQ. IN SETPRT 37500020
UCSVER2  EQU   *                                                        37600020
         TM    JFCUCSOP,JFCBUVR         UCS IMAGE ID VERIFY REQUEST     37700020
         BZ    FOLD2                    NO, SKIP REQUEST                37800020
UCSVER2P EQU   *                                                        37900020
         OI    SPLUCSV,JFCBUVR          PLACE NEW UCS VERIFY REQ. IN    38000020
*                                         SETPRT LIST                   38100020
FOLD2    EQU   *                                                        38200020
         TM    JFCUCSOP,JFCBUF          UCS FOLD MODE REQUEST           38300020
         BZ    UNBLK2                   NO, TEST FOR UNBLOCK REQUEST    38400020
FOLD2P   EQU   *                                                        38500020
         OI    SPLLMO,JFCBUF            PLACE FOLD REQ. IN SETPRT LIST  38600020
         B     UNBLK2                   CONTINUE WITH UNBLOCK TEST      38700020
FOLD1P   EQU   *                                                        38800020
         OI    SPLDACK,JFCBUF           PLACE FOLD REQ. IN SETPRT LIST  38900020
         B     UNBLK2                   CONTINUE WITH UNBLOCK TEST      39000020
RELOAD   EQU   *                                                        39100020
         MVC   SPLUCSID(FOUR),UCBUCSID  PLACE UCS IMAGE-ID PRESENTLY    39200020
*                                         IN UCB INTO SETPRT LIST       39300020
         B     UCSVER2                  CONTINUE WITH VERIFY TEST       39400020
DEFAULT1 EQU   *                                                        39500020
         CLC   UCBFCBID(FOUR),PARFCBID  DEFAULT IMAGE ALREADY LOADED    39600020
         BE    FCBVER2                  YES, DONT RELOAD IN             39700020
         MVC   SPLFCBID(FOUR),PARFCBID  PLACE DEFAULT FCB IMAGE-ID      39800020
*                                         SAVED IN PARLIST INTO SETPRT  39900020
         B     FCBVER2                  CONTINUE WITH VERIFY TEST       40000020
DEFAULT2 EQU   *                                                        40100020
         CLC   UCBUCSID(FOUR),PARUCSID  DEFAULT IMAGE ALREADY LOADED    40200020
         BE    UCSVER2                  YES, DONT RELOAD IN             40300020
         MVC   SPLUCSID(FOUR),PARUCSID  PLACE DEFAULT UCS IMAGE-ID      40400020
*                                         SAVED IN PARLIST INTO SETPRT  40500020
         B     UCSVER2                  CONTINUE WITH VERIFY TEST       40600020
*                                                                       40700020
*********************************************************************** 40800020
*                                                                       40900020
FCBVERM  EQU   *                                                        41000020
         LA    MSGRET,FCBALN1           LD REG FOR RET AFTER MSG WRT    41100020
         LA    MSGSTRTR,MSFCBV          GET START OF MESSAGE IEF322I    41200020
         LA    MSGLGNR,MSFCBVE-MSFCBV   GET LENGTH OF MESSAGE           41300020
ERRMSGOT EQU   *                                                        41400020
*PUT IN ERROR MESSAGE CONTROL CHARACTER                                 41500020
         MVI   CONCH,ASAS1              INIT TO ASA SPACE 1 CNTRL CHAR  41600020
         TM    DCBRECFM,MACSW           MACH CNTRL CHAR SPECIFIED       41700020
         BZ    OUTMSG                   NO, OUTPUT MSG                  41800020
         MVI   CONCH,MCCS1              GET MACH SPACE 1 CNTRL CHAR     41900020
*TURN ON OLD SWITCH                                                     42000020
OUTMSG   EQU   *                                                        42100020
         OI    SORS1,OLDSW                                              42200020
         L     PR1,WOSAP                GET ADDR ERR RET PUT AT         42300020
         CLI   RCOFFSET(PR1),OUTERR     IS PRESENT RC OUTPUT ERROR      42400020
         BNL   OUTMSG1                  YES, LEAVE CODE TO CAUSE TERM   42500020
         MVI   RCOFFSET(PR1),INERR      INDICATE I/O INPUT ERROR        42600020
         OI    SORS1,INERS              TURN ON INPUT I/O ERR SW        42700020
OUTMSG1  EQU   *                                                        42800020
*OUTPUT MESSAGE                                                         42900020
         STM   MSGSTRTR,MSGLGNR,INLSF   PASS MSG START AND LENGTH       43000020
         LR    RCREG,BRANCHR            COPY AND SAVE RETURN CODE       43100020
         L     BRANCHR,SPLOP            GET ADDR OF 089 PUT ROUTINE     43200020
         LA    BRANCHR,ZERO(BRANCHR)    CLEAR HI BYTE FLAG              43300020
         BALR  RETR,BRANCHR             OUTPUT MESSAGE                  43400020
         LR    BRANCHR,RCREG            RESTORE RETURN CODE             43500020
         BR    MSGRET                   RETURN TO NEXT OPERATION        43600020
UCSVER1P EQU   *                                                        43700020
         LA    MSGRET,FOLD1             LD REG FOR RET AFTER MSG WRT    43800020
UCSVER1X EQU   *                                                        43900020
         LA    MSGSTRTR,MSUCSV          GET START OF MESSAGE IEF324I    44000020
         LA    MSGLGNR,MSUCSVE-MSUCSV   GET LENGTH OF MESSAGE           44100020
         B     ERRMSGOT                 OUTPUT ERROR MSG                44200020
UCSVER3P EQU   *                                                        44300020
         LA    MSGRET,FOLD3             LD REG FOR RET AFTER MSG WRT    44400020
         B     UCSVER1X                 PICK UP MESSAGE LGN AND START   44500020
FCBALNM  EQU   *                                                        44600020
         LA    MSGRET,UCSID1            LD REG FOR RET AFTER MSG WRT    44700020
         LA    MSGSTRTR,MSFCBAL         GET START OF MESSAGE IEF323I    44800020
         LA    MSGLGNR,MSFCBALE-MSFCBAL GET LENGTH OF MESSAGE           44900020
         B     ERRMSGOT                 OUTPUT ERROR MESSAGE            45000020
IDNAM    EQU   *                                                        45100020
         LA    MSGSTRTR,MSIDNA          GET START OF MESSAGE IEF325I    45200020
         LA    MSGLGNR,MSIDNAE-MSIDNA   GET LENGTH OF MESSAGE           45300020
         LA    MSGRET,LISTCLR           LOAD REG FOR RET AFT MSG WRT    45400020
         B     ERRMSGOT                 OUTPUT ERROR MESSAGE            45500020
IDBLEM   EQU   *                                                        45600020
         LA    MSGSTRTR,MSBLE           GET START OF MESSAGE IEF326I    45700020
         LA    MSGLGNR,MSBLEE-MSBLE     GET LENGTH OF MESSAGE           45800020
         LA    MSGRET,LISTCLR           LOAD REG FOR RET AFT MSG WRT    45900020
         B     ERRMSGOT                 OUTPUT ERROR MESSAGE            46000020
PLIM     EQU   *                                                        46100020
         LA    MSGSTRTR,MSPLI           GET START OF MESSAGE IEF311I    46200020
         LA    MSGLGNR,MSPLIE-MSPLI     GET LENGTH OF MESSAGE           46300020
         LA    MSGRET,LISTCLR           LOAD REG FOR RET AFT MSG WRT    46400020
         B     ERRMSGOT                 OUTPUT ERROR MESSAGE            46500020
         SPACE                                                          46600020
*********************************************************************** 46700020
         SPACE                                                          46800020
*A WTO IS ISSUED WHEN THE SYSOUT PRINTER CANNOT BE USED                 46900020
WTO1     EQU   *                                                        47000020
         LA    MSGSTRTR,SDTTM1          GET START OF MESSAGE IEF327I    47100020
         B     WTOUT                    OUTPUT MSG                      47200020
WTO2     EQU   *                                                        47300020
         LA    MSGSTRTR,SDTTM2          GET START OF MESSAGE IEF328I    47400020
         B     WTOUT                    OUTPUT MSG                      47500020
WTO3     EQU   *                                                        47600020
         LA    MSGSTRTR,SDTTM3          GET START OF MESSAGE IEF329I    47700020
         B     WTOUT                    OUTPUT MSG                      47800020
WTO4     EQU   *                                                        47900020
         LA    MSGSTRTR,SDTTM4          GET START OF MESSAGE IEF331I    48000020
WTOUT    EQU   *                                                        48100020
         LA    PR0,SDTTMLGN             GET LENGTH OF MESSAGE           48200020
         GETMAIN R,LV=(0)               GETCORE FOR MESSAGE BUILD       48300020
         MVC   0(SDTTMLGN,PR1),0(MSGSTRTR)   MOVE IN MESSAGE LIST       48400020
         DROP  UCBR                                              A42459 48430021
         USING UCBOB,UCBR               BASE FOR UCB             A42459 48460021
         MVC   DDDOFSET(THREE,PR1),UCBNAME   PUT IN WTR NAME            48500020
         LR    MSGSTRTR,PR1             SAVE ADDR OF GOTTEN CORE        48600020
         WTO   MF=(E,(1))               WRITE MSG TO CONSOLE            48700020
         LA    PR0,SDTTMLGN             GET LENGTH OF AREA TO FREE      48800020
         LR    PR1,MSGSTRTR             GET ADDR OF AREA TO FREE        48900020
         FREEMAIN R,LV=(0),A=(1)        FREE MSG BUILD CORE             49000020
         L     WORKR,WOSAP              GET ADDR ERR RET PUT AT         49100020
         MVI   NINETEEN(WORKR),OUTERR   IND I/O OUTPUT ERROR            49200020
LISTCLR  EQU   *                                                        49300020
         TM    SPLOP,FCBTST             RET CODE TESTS COMPLETED        49400020
         BZ    HICODE                   YES, RETURN HI ERROR CODE       49500020
         NI    SPLOP,FLAGF-FCBTST       NO, SET UP TO DO                49600020
         LR    BRANCHR,JFCBR            RESTORE RETURN CODE      A53806 49650021
         B     RCTST                      UCS RETURN CODE TEST          49700020
*RETURN HIGHER OF UCS AND FCB RETURN CODES TO CALLER                    49800020
HICODE   ST    BRANCHR,SPLWORK          STORE RETURN CODES              49900020
         OC    SPLUCS,SPLFCB            COMBINE RETURN CODES            50000020
         NI    SPLFCB,XZERO             SET FCB RET CODE TO ZERO        50100020
         L     BRANCHR,SPLWORK          RELOAD SINGLE RETURN CODE       50200020
         B     LISTCLR1                 RETURN TO LEAVE MODULE   M5709  50250020
*A WTO IS ISSUED IN PLACE OF A SYSOUT MESSAGE IF INPUT ERROR IS ON THE  50300020
*JOB SEPERATOR ROUTINE.                                                 50400020
WTO5     EQU   *                                                        50500020
         LA    MSGSTRTR,SDTTM5          GET START OF MESSAGE IEF325I    50600020
         B     WTOUT1                   OUTPUT MSG                      50700020
WTO6     EQU   *                                                        50800020
         LA    MSGSTRTR,SDTTM6          GET START OF MESSAGE IEF326I    50900020
         B     WTOUT1                   OUTPUT MSG                      51000020
WTO7     EQU   *                                                        51100020
         LA    MSGSTRTR,SDTTM7          GET START OF MESSAGE IEF311I    51200020
WTOUT1   EQU   *                        OUTPUT MSG                      51300020
         LA    PR0,SDTTMLG1             GET LENGTH OF MESSAGE           51400020
         GETMAIN R,LV=(0)               GETCORE FOR MESSAGE BUILD       51500020
         MVC   0(SDTTMLG1,PR1),0(MSGSTRTR)   MOVE IN MESSAGE LIST       51600020
         LR    MSGSTRTR,PR1             SAVE ADDR OF GOTTEN CORE        51700020
         WTO   MF=(E,(1))               WRITE MESSAGE TO CONSOLE        51800020
         LA    PR0,SDTTMLG1             GET LENGTH OF AREA TO FREE      51900020
         LR    PR1,MSGSTRTR             GET ADDRESS OF AREA TO FREE     52000020
         FREEMAIN R,LV=(0),A=(1)        FREE MSG BUILD CORE             52100020
         B     LISTCLR                  CK FOR RC TESTS COMPLETE        52200020
         SPACE                                                          52300020
*********************************************************************** 52400020
SETPRTL  SETPRT OPTCD=B,MF=L            DEFAULT TO BLOCK DATA CHECKS    52500020
BLANKS   DC    CL4' '                                                   52600020
INVALADR DC    1F'0'                    INVALID ADDRESS CONSTANT        52700020
         DC    C'ZAPSZAPSZAPSZAPS'                                 VS0H 52800020
         DC    C'ZAPSZAPSZAPSZAPS'                                 VS0H 52900020
         DC    C'ZAPSZAPSZAPSZAPS'                                 VS0H 53000020
         DC    C'ZAPSZAPSZAPSZAPS'                                 VS0H 53100020
         DC    C'ZAPSZAPSZAPSZAPS'                                 VS0H 53200020
*********************************************************************** 53300020
         EJECT                                                          53400020
IEFSDTTM EQU   *                                                        53500020
         DS    0F                                                       53600020
MSPLI    DC    C'IEF311I NOP--SETPRT PARAMETER LIST INVALID.'           53700020
MSPLIE   EQU   *                                                        53800020
MSFCBV   DC    C'IEF322I NO FCB IMAGE-ID SPECIFIED FOR VERIFICATION.'   53900020
MSFCBVE  EQU   *                                                        54000020
MSFCBAL  DC    C'IEF323I NO FCB IMAGE-ID SPECIFIED FOR ALIGNMENT.'      54100020
MSFCBALE EQU   *                                                        54200020
MSUCSV   DC    C'IEF324I NO UCS IMAGE-ID SPECIFIED FOR VERIFICATION.'   54300020
MSUCSVE  EQU   *                                                        54400020
MSIDNA   DC    C'IEF325I OPERATOR CANCELLED LOAD.  UCS/FCB IMAGE-ID/'   54500020
         DC    C'CHAIN NOT AVAILABLE.'                                  54600020
MSIDNAE  EQU   *                                                        54700020
MSBLE    DC    C'IEF326I PERMANENT I/O ERROR ON BLDL LOCATE OF UCS/FCB' 54800020
         DC    C' IMAGE IN SYSTEM LIBRARY.'                             54900020
         DS    0F                       ASSURE FWD BDY ALIGNMENT        55000020
MSBLEE   EQU   *                                                        55100020
SDTTM1   EQU   *                                                        55200020
         WTO   'IEF327I WTR DDD CLOSED.  PERMANENT I/O ERROR WHILE LOADX55300020
               ING UCS/FCB BUFFER.                            ',       X55400020
               MF=L,ROUTCDE=(2,7,10,11),DESC=(4)                        55500020
         DS    0F                       ASSURE FWD BDY ALIGNMENT        55600020
SDTTM2   EQU   *                                                        55700020
         WTO   'IEF328I WTR DDD CLOSED.  PERMANENT I/O ERROR ON UCS/FCBX55800020
                IMAGE VERIFICATION.                           ',       X55900020
               MF=L,ROUTCDE=(2,7,10,11),DESC=(4)                        56000020
         DS    0F                       ASSURE FWD BDY ALIGNMENT        56100020
SDTTM3   EQU   *                                                        56200020
         WTO   'IEF329I WTR DDD CLOSED.  OPERATOR CANCELLED LOAD.  INCOX56300020
               RRECT UCS/FCB IMAGE DISPLAYED FOR VERIFICATION.',       X56400020
               MF=L,ROUTCDE=(7,11),DESC=(5)                             56500020
         DS    0F                       ASSURE FWD BDY ALIGNMENT        56600020
SDTTM4   EQU   *                                                        56700020
         WTO   'IEF331I WTR DDD CLOSED.  SETPRT NOP-UNCORRECTABLE OUTPUX56800020
               T ERROR ON PREVIOUS OPERATION.                 ',       X56900020
               MF=L,ROUTCDE=(2,7,10,11),DESC=(6)                        57000020
         DS    0F                       ASSURE FWD BDY ALIGNMENT        57100020
SDTTM5   EQU   *                                                        57200020
         WTO   'IEF325I OPERATOR CANCELLED LOAD.  UCS/FCB IMAGE-ID/CHAIX57300020
               N NOT AVAILABLE.       ',                               *57400020
               MF=L,ROUTCDE=(2,7,11),DESC=(5)                           57500020
         DS    0F                       ASSURE FWD BDY ALIGNMENT        57600020
SDTTM6   EQU   *                                                        57700020
         WTO   'IEF326I PERMANENT I/O ERROR ON BLDL LOCATE OF UCS/FCB IX57800020
               MAGE IN SYSTEM LIBRARY.',                               *57900020
               MF=L,ROUTCDE=(2,7,10,11),DESC=(4)                        58000020
         DS    0F                       ASSURE FWD BDY ALIGNMENT        58100020
SDTTM7   EQU   *                                                        58200020
         WTO   'IEF311I NOP--SETPRT PARAMETER LIST INVALID.            X58300020
                                      ',                               *58400020
               MF=L,ROUTCDE=(2,7,11),DESC=(6)                           58500020
*                                                                       58600020
*********************************************************************** 58700020
*                                                                       58800020
         END                                                            58900020
./  ADD  SSI=20830619,NAME=IEFSDXXX
         TITLE 'IEFSDXXX - SYSOUT WRITER SPANNED DATASETS'              00100017
*                                                                       00110020
*          RELEASE 22 DELETIONS/CHANGES                                 00120020
*          RELEASE 21 DELETIONS/CHANGES                                 00130020
*3200117000,133000-135000                                        A46610 00135021
*          RELEASE 20 DELETIONS/CHANGES                                 00140020
* 433000-512000                                                  MAPMAC 00150020
*2438                                                            A35780 00155020
*                                                                       00160020
*********************************************************************** 00200017
*                                                                     * 00300017
*TITLE-- IEFSDXXX - SYSOUT WRITER SPANNED DATASETS                    * 00400017
*                                                                     * 00500017
*STATUS CHANGE LEVEL 001                                                00600020
*                                                                     * 00700017
*FUNCTION/OPERATION-- THIS MODULE IS USED TO HANDLE VARIABLE SPANNED  * 00800017
*   DATASETS. IF EITHER INPUT OR OUTPUT DATASETS ARE VARIABLE SPANNED * 00900017
*   THIS MODULE WILL BE ENTERED. IN MOST CASES THERE IS NO BUILDING   * 01000017
*   OF THE COMPLETE LOGICAL RECORD FROM THE INPUT SEGMENTS BEFORE     * 01100017
*   THE RECORD IS BROKEN UP INTO SEGMENTS TO OUTPUT. RATHER, THE      * 01200017
*   INPUT SEGMENTS ARE MOVED INTO THE OUTPUT SEGMENTS DYNAMICALLY     * 01300017
*   AND GET AND PUT OF SEGMENTS IS DONE AS NEEDED. THE EXCEPTION TO   * 01400017
*   THIS IS WHEN THE WRITER OUTPUTS MACHINE CONTROL CHARACTERS AND    * 01500017
*   THE INPUT DOES NOT HAVE MACHINE CONTROL CHARACTERS. IN THIS CASE  * 01600017
*   THE WHOLE RECORD MUST BE BUILT BEFORE IT IS PUT OUT BECAUSE THE   * 01700017
*   CONTROL CHARACTER FROM THE FOLLOWING RECORD IS NEEDED TO GENERATE * 01800017
*   THE CONTROL CHARACTER FOR THIS RECORD.                            * 01900017
*   WHEN THE OUTPUT IS IN VARIABLE SPAN FORMAT AS MANY LINES OF       * 02000017
*   OUTPUT WILL BE GENERATED AS IS NEEDED TO PROCESS THE WHOLE        * 02100017
*   RECORD. IN THIS WAY A COMPLETE RECORD CAN BE PRINTED OR PUNCHED   * 02200017
*   NO MATTER HOW LONG IT MAY BE.                                     * 02300017
*                                                                     * 02400017
*ENTRY POINT-- IEFSDXXX - FROM THE IEFSD086, IEFSD087, IEFSD094 AND   * 02500017
*   IEFSD089 MODULES. THE ENTRY FROM EACH OF THESE EXCEPT IEFSD089    * 02600017
*   IS TO SET UP THE CONTROL AREAS THAT CONTAIN INFORMATION NEEDED    * 02700017
*   TO GET AND PUT VARIABLE SPANNED RECORDS AND TO GET THE AREA       * 02800017
*   NEEDED TO BUILD THE WHOLE RECORD IF THAT IS NEEDED (SEE           * 02900017
*   FUNCTION/OPERATION ABOVE). THERE ARE TWO ENTRIES FROM IEFSD089.   * 03000017
*   ONE ENTRY WHICH GOES TO IEFSDXXX TO HANDLE THE SEGMENT JUST       * 03100017
*   OBTAINED BY A GET AND THE OTHER WHICH GOES TO IEFSDXXX TO FIX     * 03200017
*   UP THE AREA JUST OBTAINED BY PUT.                                 * 03300017
*                                                                     * 03400017
*INPUT-- THE TOP BYTE OF REGISTER 15 CONTAINS:                        * 03500017
*   0 WHICH INDICATES A SEGMENT OBTAINED BY GET IS TO BE PROCESSED    * 03600017
*   4 WHICH INDICATES AN AREA JUST OBTAINED BY PUT IS TO BE FIXED     * 03700017
*   8 WHICH INDICATES THE SPANNED CONTROL AREA IS TO BE SET UP FOR    * 03800017
*      MESSAGES OR JOB SEPARATOR.                                     * 03900017
*  12 WHICH INDICATES THE SPANNED CONTROL AREA IS TO BE SET UP FOR    * 04000017
*      A DATASET.                                                     * 04100017
*   REGISTER 7  CONTAINS THE WORK LIST USED BY DSB AND SMB ROUTINE    * 04200017
*   REGISTER 8  CONTAINS THE WORK AREA FOR STANDARD OUTPUT ROUTINE    * 04300017
*   REGISTER 6  CONTAINS THE INPUT DCB OR MESSAGE.                    * 04400017
*                                                                     * 04500017
*OUTPUT-- WHEN ENTRY IS FROM IEFSD086, IEFSD087, OR IEFSD094 THE      * 04600017
*   SAME MODULE IS RETURNED TO WITH THE SPANNING CONTROL AREA SET UP. * 04700017
*   WHEN ENTRY IS FROM IEFSD089 RETURN IS TO THIS MODULE WITH A       * 04800017
*   CODE IN REGISTER 15:                                              * 04900017
*   0 GO TO PUT                                                       * 05000017
*   4 GO TO GET                                                       * 05100017
*                                                                     * 05200017
*EXTERNAL ROUTINES-- NONE                                             * 05300017
*                                                                     * 05400017
*EXIT-- RETURNS TO THE INSTRUCTION FOLLOWING THE ONE WHICH BRANCHED   * 05500017
*   TO THIS ROUTINE.                                                  * 05600017
*                                                                     * 05700017
*TABLES/WORK AREAS-- THE CONTROL AREA FOR SPANNING, ANY AREA GOT TO   * 05800017
*   BUILD THE COMPLETE RECORD IN IF SUCH AREA IS OVER 168 BYTES, THE  * 05900017
*   CONDITIONAL GETMAIN LIST, THE DCB, THE WORKLIST USED BY DSB AND   * 06000017
*   SMB ROUTINE, AND THE WORK AREA FOR STANDARD OUTPUT ROUTINE.       * 06100017
*                                                                     * 06200017
*ATTRIBUTES-- THIS ROUTINE IS REENTRANT AND REFRESHABLE.              * 06300017
*                                                                     * 06400017
*NOTES-- THE CONDITIONAL GETMAIN AND RETURN MACROS ARE USED.          * 06500017
*                                                                     * 06600017
*********************************************************************** 06700017
R0       EQU   0                                                        06800017
R1       EQU   1                                                        06900017
R2       EQU   2                                                        07000017
R3       EQU   3                                                        07100017
R4       EQU   4                                                        07200017
R5       EQU   5                                                        07300017
R6       EQU   6                                                        07400017
R7       EQU   7                                                        07500017
R8       EQU   8                                                        07600017
R9       EQU   9                                                        07700017
R10      EQU   10                                                       07800017
R11      EQU   11                                                       07900017
R12      EQU   12                                                       08000017
R13      EQU   13                                                       08100017
R14      EQU   14                                                       08200017
R15      EQU   15                                                       08300017
IEFSDXXX CSECT                                                          08400017
*THE FOLLOWING AND R5 ARE BUSY                                          08500017
         USING WORKLST,R7                                               08600017
         USING WKSOR,R8                                                 08700017
         USING IHADCB,R6                INPUT DCB OR MESSAGE LOC.       08800017
*INITIALIZATION                                                         08900017
         SAVE  (14,12)                  SAVE REGISTERS                  09000017
         BALR  R9,0                     ESTABLISH BASE                  09100017
         USING *,R9                                                     09200017
         L     R1,WOXXA                 GET ADDR. OF CONTROL AREA       09300017
         ST    R13,4(R1)                PRESERVE OLD SAVE AREA          09400017
         LR    R13,R1                   GET NEW SAVE AREA               09500017
         USING WORKFXXX,R13             GET WORK AREA BASE              09600017
*BRANCH TO THE ROUTINE DESIRED                                          09700017
         SRL   R15,24                   GET WHERE TO BRANCH TO          09800017
         B     *+4(R15)                 BRANCH TO TABLE                 09900017
         B     MAINR                    BRANCH TO INPUT RECORD          10000017
         B     AFPUT                    BRANCH TO PUT DONE              10100017
         B     SUDTA                    BRANCH TO DATASET SET UP        10200017
*SET UP CONSTANTS FOR INPUT NOT DATA SET                                10300017
         XC    SWXXX(WORKEEND-SWXXX),SWXXX  CLEAR WORK AREA             10400017
         LA    R12,168                  GET MAXIMUM INPUT SIZE          10500017
         ST    R12,MAXI1                SAVE IT                         10600017
         B     SUOUC                    BRANCH TO DO OUTPUT CONST.      10700017
*SET UP CONSTANTS FOR DATASET INPUT                                     10800017
SUDTA    XC    SWXXX(WORKEEND-SWXXX),SWXXX  CLEAR WORK AREA             10900017
         OI    SWXXX,DTASW              TURN ON DATASET SWITCH          11000017
         SR    R4,R4                    CLEAR REG 4                     11100017
         TM    DCBRECFM,ASASW+MACSW     IF NOT CONTROL CHAR. THEN       11200017
         BZ    INLTE                    GO TO GET MAX. IN  LENGTH       11300017
         LA    R4,1                     PUT 1 TO SUBTRACT FOR C.C.      11400017
INLTE    LH    R12,DCBBLKSI             GET BLOCK SIZE                  11500017
         TM    DCBRECFM,UNKSW           IF UNKNOWN TYPE THEN            11600017
         BO    SAIMA                    GO SAVE MAX LENGTH       A46610 11700021
         LH    R12,DCBLRECL             GET MAX. RECORD SIZE            11800017
         LTR   R12,R12                  IF NOT OVER 32K THEN            11900017
         BP    INLTD                    BRANCH AS HAVE LENGTH           12000017
         L     R12,MXSIZ                GET MAXIMUM SIZE                12100017
INLTD    TM    DCBRECFM,FIXSW           IF FIXED TYPE THEN              12200017
         BO    SAIMA                    GO SAVE MAX. IN LENGTH          12300017
         LA    R4,4(R4)                 ADD 4 TO SUBTRACT FOR V TYPE    12400017
SAIMA    SR    R12,R4                   GET REAL MAX. IN                12500017
         ST    R12,MAXI1                SAVE IT                         12600017
*SET UP CONSTANTS FOR OUTPUT                                            12700017
         DROP  R6                                                       12800017
         USING IHADCB,R5                ESTABLISH OUTPUT DCB BASE       12900017
SUOUC    SR    R4,R4                    CLEAR REG 4                     13000017
         MVI   SEGIN,0                  INDICATE 0                      13100017
         L     R5,DCBOT                 GET OUTPUT DCB                  13200017
INLTF    LA    R3,LENLO+4               GET LOCATION OF LENGTH          13600017
         TM    DCBRECFM,UNKSW           IF NOT UNKNOWN TYPE THEN        13700017
         BM    INLTG                    GO TO TEST FOR FIXED            13800017
         LH    R1,DCBBLKSI              GET BLOCK SIZE                  13830017
         LTR   R1,R1                    IF A BLOCK SIZE THEN            13860017
         BNZ   INTLI                    GO TO USE IT                    13890017
         LH    R1,DCBBUFL               GET BUFFER LENGTH               13920017
INTLI    LR    R11,R1                   HAVE MIN. LENGTH                13950017
         SR    R11,R4                   GET ACTUAL LENGTH               14000017
         CR    R11,R12                  IF OUTPUT SHORTER THEN          14100017
         BNH   USEOT                    GO SAVE MIN. OUTPUT LENGTH      14200017
         LR    R11,R12                  GET SMALLER LENGTH              14300017
USEOT    STH   R11,DCBLRECL             USE IT AS RECORD SIZE           14400017
         LR    R12,R1                   GET MAXIMUM LENGTH              14500017
         B     SAOMK                    GO SAVE MIN. OUTPUT LENGTH      14600017
INLTG    LH    R12,DCBLRECL             GET MAX. RECORD SIZE            14700017
         LTR   R12,R12                  IF NOT OVER 32K THEN            14800017
         BP    INLTH                    BRANCH AS HAVE LENGTH           14900017
         L     R12,MXSIZ                GET MAXIMUM SIZE                15000017
INLTH    LR    R11,R12                  GET MIN. OUT FOR F TYPE         15100017
         TM    DCBRECFM,FIXSW           IF FIXED TYPE THEN              15200017
         BO    SAOMI                    GO SAVE MIN. OUTPUT LENGTH      15300017
         LA    R4,4(R4)                 ADD 4 TO SUBTRACT FOR V TYPE    15400017
         LA    R11,18                   GET MIN. OUT FOR V NOT SPANNED  15500017
         TM    DCBRECFM,VARSP           IF SPANNED TYPE THEN            15600017
         BO    SAOMA                    GO TO FIX FOR SPANNED           15700017
SAOMI    SR    R11,R4                   GET ACTUAL MIN. OUT LENGTH      15800017
SAOMK    ST    R11,MINO1                SAVE IT                         15900017
SAOMA    SR    R12,R4                   GET REAL MAX. OUT               16000017
         ST    R12,MAXO1                SAV IT                          16100017
         ST    R3,LENLO                 SAVE IT AS WHERE LENGTH SAVED   16200017
*GET SPECIAL WORK AREA IF ASA INPUT AND VARIABLE SPANNED MACH. OUT      16300017
         TM    DCBRECFM,VARSP+MACSW     IF NOT VS MACH. OUTPUT THEN     16400017
         BNO   XXXRT                    GO TO RETURN                    16500017
         TM    DCBRECFM,UNKSW           IF UNKNOWN OUTPUT THEN          16600017
         BO    XXXRT                    GO TO RETURN                    16700017
         TM    SORS1,MACHS              IF MACHINE INPUT THEN           16800017
         BO    XXXRT                    GO TO RETURN                    16900017
         TM    SWXXX,DTASW              IF NOT DATASET INPUT THEN       17000017
         BZ    VALES                    GO TO USE AREA WE HAVE          17100017
         C     R12,MAXI1                COMPARE OUT AND IN MAXIMUM      17200017
         BNH   CMPTH                    IF HAVE SMALLER THEN BRANCH     17300017
         L     R12,MAXI1                GET SMALLER                     17400017
CMPTH    C     R12,THTOK                COMPARE TO 32K IF SMALLER       17500017
         BL    GCORM                    THEN GO TO GET WORK AREA        17600017
         OI    SORS1,OVERT              TURN ON CANT HANDLE IT SW       17700017
         B     VALES                    GO TO SET UP FAKE AREA          17800017
GCORM    C     R12,ONSXA                COMPARE TO 168 IF NOT HIGH      17900017
         BNH   VALES                    USE THE AREA AVAILABLE          18000017
         MVC   WOKRL(GETME-GETMC),GETMC PUT IN GETMAIN LIST             18100017
         ST    R12,WOKRL                PUT LENGTH IN LIST              18200017
         LA    R12,WOKRA                GET WHERE TO SAVE SIZE          18300017
         ST    R12,WOKRA                SAVE IT IN ITSELF               18400017
         LA    R1,WOKRL                 GET ADDRESS OF LIST             18500017
         GETMAIN EC,MF=(E,(1))          GET MAIN CONDITIONALLY          18600017
         LTR   R15,R15                  IS THE CORE GOT                 18700017
         BZ    XXXRT                    THEN GO TO RETURN               18800017
         OI    SORS1,CNTGE              TURN ON CANT GET CORE SW.       18900017
*USE AREA ALREADY SET UP AS WORK AREA                                   19000017
VALES    LA    R11,168                  GET 168                         19100017
         ST    R11,WOKRL                MAKE IT LENGTH                  19200017
         LA    R11,BSKWA                GET ADDRESS OF AREA             19300017
         ST    R11,WOKRA                SAVE IT AS WORK AREA ADD.       19400017
XXXRT    L     R13,4(R13)               GET SAVE AREA                   19500017
         RETURN (14,12)                 RETURN                          19600017
********                                                                19700017
*                                                                       19800017
* THE FOLLOWING IS THE BASIC ROUTINE WHICH HANDLES THE SPANNING         19900017
* FOR PUT. THIS IS BRANCHED TO FROM IEFSD089 AND RETURNS TO THERE.      20000017
*                                                                       20100017
********                                                                20200017
*SAVE SEGMENT AND CHECK IT                                              20300017
MAINR    MVC   INSEG(1),SEGIN           SAVE NEW SEGMENT                20400017
         MVI   SEGIN,0                  CLEAR SEGMENT IND.              20500017
*IS THIS A FIRST SEGMENT                                                20600017
         TM    INSEG,NOTFI              IF NOT FIRST SEGMENT THEN       20700017
         BO    CNTRT                    BRANCH TO DO SUBSEQUENT SEG.    20800017
*IS THERE A RECORD TO BE PUT FROM WORK AREA                             20900017
         TM    SWXXX,WATPT              IF 'TO BE PUT' SWITCH ON THEN   21000017
         BO    MVFWA                    BRANCH TO SET UP TO PUT         21100017
*INITIALIZE FOR RECORD JUST GOT                                         21200017
RECJG    MVC   MAXI2(12),MAXI1          INITIALIZE MAX. + MIN. COUNTS   21300017
*RETURN TO PUT                                                          21400017
RETPU    L     R15,LENLO                GET SEGMENTS LOCATION           21500017
         MVC   WOLCL+2(1),2(R15)        SAVE SEGMENT INDICATION         21600017
         SR    R15,R15                  MAKE R15 ZERO AS RETURN CODE    21700017
RETAC    L     R13,4(R13)               GET WHERE R13 POINTED           21800017
         RETURN (14,12),RC=(15)                                         21900017
*AFTER PUT WHEN THERE IS SPANNING BRANCH BACK TO HERE                   22000017
         USING IHADCB,R5                MAKE OUTPUT BASE FOR DATASET    22100017
*GET LENGTH AND LOCATION OF PUT                                         22200017
AFPUT    L     R1,ATENW+4               GET REG. SAVE AREA              22300017
         LM    R0,R1,20(R1)             GET LENGTH AND LOC.             22400017
*IS THE OUTPUT VARIABLE SPANNED                                         22500017
         TM    DCBRECFM,VARSP           IF OUTPUT IS SPANNED THEN       22600017
         BO    LLOUT                    BRANCH AS R0 HAS LENGTH         22700017
*GET LENGTH AVAILABLE WHEN NOT SPANNED                                  22800017
         L     R0,MAXO1                                                 22900017
*SAVE LENGTH AND LOCATION TO MOVE OUTPUT RECORD INTO                    23000017
LLOUT    ST    R0,SOUTL                                                 23100017
         ST    R1,SOUTL+4                                               23200017
*IS THE OUTPUT VARIABLE                                                 23300017
         TM    DCBRECFM,VARSW           IF OUTPUT ISNT VARIABLE         23400017
         BZ    FLNVA                    BRANCH TO AVOID V FIX           23500017
         TM    DCBRECFM,FIXSW           IF OUTPUT ISNT VARIABLE         23600017
         BO    FLNVA                    BRANCH TO AVOID V FIX           23700017
*FIX HEADER FOR VARIABLE TYPE OUTPUT                                    23800017
         ST    R1,LENLO                 SAVE HEADER ADDR AS LENGTH LOC. 23900017
         XC    0(4,R1),0(R1)            ZERO OUT HEADER                 24000017
         TM    INSEG,NOTFI              IF FIRST SEGMENT THEN           24100017
         BZ    GSGLT                    BRANCH TO NOT CHANGE SEGMENT    24200017
         MVI   2(R1),NOTFI              INDICATE CONTINUING SEG.        24300017
GSGLT    LA    R2,4                     GET SEGMENT LENGTH              24400017
         BAL   R14,MODOD                BRANCH TO FIX OUTPUT COUNT      24500017
         B     FIRSG                    BRANCH TO TEST FOR FIRST SEG.   24600017
*FIX LENGTH FOR NON-VARIABLE OUTPUT                                     24700017
FLNVA    L     R12,LENLO                GET LENGTH LOCATION             24800017
         XC    0(2,R12),0(R12)          MAKE LENGTH 0                   24900017
*IS THIS A FIRST SEGMENT                                                25000017
FIRSG    TM    INSEG,NOTFI              IF NOT FIRST SEG. THEN          25100017
         BO    CNTRT                    BRANCH TO AVOID INITIALIZING    25200017
*INITIALIZE OUTPUT FOR FIRST SEGMENT                                    25300017
         OI    INSEG,NOTFI              FIX INPUT SEG. TO NOT FIRST     25400017
         TM    DCBRECFM,ASASW+MACSW     IF NO CONTROL CHAR. THEN        25500017
         BNM   CNTRT                    BRANCH TO NOT PUT IT IN         25600017
         L     R12,SOUTL+4              GET C.C. LOCATION               25700017
         ST    R12,LOCAT                AND SAVE IT                     25800017
         MVC   0(1,R12),SAVEC           PUT C.C. IN IT                  25900017
         MVC   SAVEC,SAVED              SAVE NEXT C.C. IF ONE EXISTS    26000017
         LA    R2,1                     GET LENGTH OF C.C.              26100017
         BAL   R14,MODOD                BRANCH TO FIX OUTPUT COUNT      26200017
*CONTROL ROUTINE TO DECIDE WHAT TO DO NEXT                              26300017
CNTRT    LM    R3,R4,MAXI2              GET MAX. IN AND OUT LEFT        26400017
         L     R11,INLSF                GET INPUT LENGTH LEFT           26500017
         L     R12,SOUTL                GET OUTPUT LENGTH LEFT          26600017
         LTR   R2,R4                    GET MAX. OUT LENGTH. IF 0 THEN  26700017
         BZ    RECAP                    BRANCH TO NO MORE OUTPUT        26800017
         CR    R2,R3                    IF MAX. IN LENGTH NOT LESS THEN 26900017
         BNH   CMP11                    KEEP THE LOW NUMBER             27000017
         LTR   R2,R3                    GET MAX. IN LENGTH. IF 0 THEN   27100017
         BZ    FIMIN                    BRANCH TO NO MORE INPUT         27200017
CMP11    CR    R2,R11                   IF IN LENGTH NOT LESS THEN      27300017
         BNH   CMP12                    KEEP THE LOW NUMBER             27400017
         LTR   R2,R11                   GET IN LENGTH. IF 0 THEN        27500017
         BZ    LSTES                    BRANCH TO INPUT USED UP         27600017
CMP12    CR    R2,R12                   IF OUT LENGTH NOT LESS THEN     27700017
         BNH   NTDON                    KEEP THE LOW NUMBER. GO TO MOVE 27800017
         LTR   R2,R12                   GET OUT LENGTH. IF 0 THEN       27900017
         BZ    FIXLT                    BRANCH TO OUTPUT USED UP        28000017
NTDON    BAL   R14,MOVCH                BRANCH TO MOVE                  28100017
*FIX OUTPUT LENGTH. REG 2 HAS MODIFYING NUMBER                          28200017
         LM    R3,R4,MAXO2              GET MAX. AND MIN. OUTPUT        28300017
         SR    R3,R2                    SUBTRACT FROM MAX. OUTPUT       28400017
         SR    R4,R2                    SUBTRACT FROM MIN. OUTPUT       28500017
         STM   R3,R4,MAXO2              RESTORE                         28600017
         BAL   R14,MODOD                BRANCH TO FIX OTHER OUT COUNT   28700017
*FIX INPUT LENGTH. REG 2 HAS MODIFYING NUMBER                           28800017
         LM    R3,R4,INLSF              GET IN LENGTH AND LOCATION      28900017
         SR    R3,R2                    SUBTRACT FROM LENGTH            29000017
         AR    R4,R2                    ADD TO LOCATION                 29100017
         STM   R3,R4,INLSF              RESTORE                         29200017
         L     R4,MAXI2                 GET MAX. INPUT                  29300017
         SR    R4,R2                    SUBTRACT FROM MAX. INPUT        29400017
         ST    R4,MAXI2                 RESTORE                         29500017
         B     CNTRT                    BRANCH TO DECIDE WHAT NEXT      29600017
*IS THIS THE LAST OUTPUT SEGMENT                                        29700017
LSTES    TM    INSEG,NOTLA              IF NOT LAST THEN                29800017
         BO    RTGET                    GO TO GET NEXT                  29900017
*IS THERE MORE TO BE MOVED TO GET MINIMUM OUTPUT                        30000017
FIMIN    L     R12,MINO2                GET MIN. OUTPUT                 30100017
         C     R12,MAXO2                IF CAN MOVE IT ALL THEN         30200017
         BL    MOVNO                    BRANCH TO MOVE IT               30300017
         L     R12,MAXO2                GET MAXIMUM OUTPUT              30400017
MOVNO    LTR   R12,R12                  IF NOTHING MORE NEEDED THEN     30500017
         BNP   RECAP                    BRANCH TO RECORD ALL PUT        30600017
*MOVE ENOUGH TO MAKE MINIMUM. (NOTE SPANNING OUTPUT CANT COME HERE)     30700017
         L     R2,SOUTL+4               GET OUTPUT LOCATION             30800017
         MVI   0(R2),C' '               MOVE IN 1 BLANK                 30900017
         ST    R2,INLSF+4               WILL MOVE FROM BLANK            31000017
         LA    R2,1(R2)                 WILL MOVE TOO NEXT              31100017
         ST    R2,SOUTL+4                                               31200017
         LR    R2,R12                   GET AMOUNT TO MOVE              31300017
         S     R2,ONELY                 SUBTRACT 1 ALREADY MOVED        31400017
         BZ    PCTFI                    BRANCH IF ALL MOVED             31500017
         BAL   R14,MOVCH                BRANCH TO FIX OUT DONE          31600017
PCTFI    A     R2,ONELY                 GET ACTUAL NUMBER MOVED         31700017
         BAL   R14,MODCO                BRANCH TO MODIFY COUNTS         31800017
         B     RTGET                    BRANCH AS ARE DONE              31900017
*IS THE WORK AREA RECORD BEING PUT                                      32000017
RECAP    TM    SWXXX,WABPT              IF WORK AREA BEING PUT THEN     32100017
         BO    RSTGT                    BRANCH TO START NEXT RECORD     32200017
*RETURN TO GET                                                          32300017
RTGET    LA    R15,4                    MAKE R15 FOUR AS RETURN CODE    32400017
         B     RETAC                    BRANCH TO ACTUAL RETURN         32500017
*IS THE OUTPUT SPANNED                                                  32600017
FIXLT    TM    DCBRECFM,VARSP           IF NOT SPANNED TYPE             32700017
         BNO   RTGET                    GO TO GET                       32800017
*INDICATE OUTPUT RECORD SEGMENT IS NOT LAST. (ONLY USED IF SPAN OUTPUT) 32900017
         L     R12,LENLO                GET HEADER ADDRESS              33000017
         OI    2(R12),NOTLA                                             33100017
*IS WORK AREA RECORD BEING PUT                                          33200017
         TM    SWXXX,WABPT              IF WORK AREA BEING PUT THEN     33300017
         BO    RETPU                    BRANCH TO PUT                   33400017
*IS WORK AREA TO BE USED TO BUILD RECORD                                33500017
         L     R12,WOKRL                GET LENGTH OF WORK AREA         33600017
         LTR   R12,R12                  IF NONE THEN                    33700017
         BZ    RETPU                    BRANCH TO PUT                   33800017
********                                                                33900017
*                                                                       34000017
* THE FOLLOWING TAKES CARE OF CASES WHERE A WORK AREA IS USED TO BUILD  34100017
* RECORD IN.                                                            34200017
*                                                                       34300017
********                                                                34400017
*SET UP WORK AREA TO CONTINUE BUILDING RECORD FROM INPUT                34500017
         MVC   MAXI3(12),MAXI2          SAVE CURRENT MAX. + MIN. COUNTS 34600017
         LA    R12,LENLO+4              GET LENGTH LOCATION             34700017
         ST    R12,LENLO                SAVE IT                         34800017
         XC    LENLO+4(4),LENLO+4       MAKE LENGTH 0                   34900017
         MVC   SOUTL(4),MAXO2           MAKE MAX. OUT LEFT THE OUT SIZE 35000017
         MVC   SOUTL+4(4),WOKRA         MAKE WORK AREA THE OUT LOC.     35100017
         MVC   WOKRA+6(2),WOLCL         SAVE LENGTH FOR PUT             35200017
         OI    SWXXX,WATPT              TURN ON WORK AREA TO BE PUT SW  35300017
         B     CNTRT                    BRANCH TO DECIDE WHAT TO DO     35400017
*HAVE MOVED INPUT RECORD INTO WORK AREA. PREPARE TO MOVE FROM WORK AREA 35500017
MVFWA    MVC   MAXI2(12),MAXI3          RESTORE OLD MAX. + MIN. COUNTS  35600017
         MVC   INLSW(8),INLSF           SAVE INPUT INFORMATION          35700017
         MVC   INSEW(1),INSEG           SAVE INPUT SEGMENT              35800017
         MVI   INSEG,NOTFI              MAKE INPUT SEGMENT NOT FIRST    35900017
         MVC   INLSF+2(2),LENLO+4       MAKE INPUT LENGTH THE MAX. OUT  36000017
         MVC   INLSF+4(4),WOKRA         MAKE WORK AREA THE IN LOC.      36100017
         MVC   WOLCL(2),WOKRA+6         RESTORE LENGTH FOR PUT          36200017
         NI    SWXXX,255-WATPT          TURN OFF WORK AREA TO BE PUT SW 36300017
         OI    SWXXX,WABPT              TURN ON WORK AREA BEING PUT SW  36400017
         B     RETPU                    BRANCH TO PUT                   36500017
*RESTORE INFORMATION FROM LAST GET TO PREPARE TO MOVE IT                36600017
RSTGT    NI    SWXXX,255-WABPT          TURN OFF WORK AREA BEING PUT SW 36700017
         MVC   INLSF(8),INLSW           RESTORE INPUT INFORMATION       36800017
         MVC   INSEG(1),INSEW           RESTORE INPUT SEGMENT           36900017
         B     RECJG                    GO TO SET UP FOR MOVING INPUT   37000017
********                                                                37100017
*                                                                       37200017
* SUBROUTINES                                                           37300017
*                                                                       37400017
********                                                                37500017
*SUBROUTINE TO MOVE  FROM THE INPUT TO THE OUTPUT. REG 2 HAS MOVE AMT.  37600017
MOVCH    L     R3,INLSF+4               GET LOCATION TO MOVE FROM       37700017
         L     R4,SOUTL+4               GET LOCATION TO MOVE TO         37800017
         LR    R11,R2                   SAVE AMOUNT TO MOVE             37900017
MOVLO    LR    R12,R11                                                  38000017
         BCTR  R12,0                    SAVE MOVING CONSTANT            38100017
         N     R12,TWFIF                WILL MOVE ONLY UP TO 256        38200017
         BZ    MOVST                    IF ONLY 1 GO TO MOVE ONLY 1     38300017
         EX    R12,MOVST                EXECUTE MOVE OF CURRENT AMOUNT  38400017
MOVST    MVC   0(0,R4),0(R3)            MOVE 1                          38500017
         A     R12,ONELY                GET AMOUNT MOVED CORRECTED      38600017
         AR    R3,R12                   ADD TO FROM  LOC.               38700017
         AR    R4,R12                   ADD TO TO LOC.                  38800017
         SR    R11,R12                  SUBTRACT AMOUNT MOVED           38900017
         BNZ   MOVLO                    IF NOT DONE THEN MOVE MORE      39000017
         BR    R14                      RETURN                          39100017
*SUBROUTINE TO FIX OUTPUT COUNT. REG. 2 HAS MODIFYING NUMBER            39200017
MODOD    LM    R3,R4,SOUTL              GET OUTPUT LENGTH AND LOC       39300017
         SR    R3,R2                    SUBTRACT FROM LENGTH            39400017
         AR    R4,R2                    ADD TO LOCATION                 39500017
         STM   R3,R4,SOUTL              RESTORE THEM                    39600017
MODCO    L     R4,LENLO                 GET LOCATION OF LENGTH          39700017
         MVC   WOLCL(2),0(R4)           MOVE TO BOUNDRY                 39800017
         LH    R3,WOLCL                 GET LENGTH                      39900017
         AR    R3,R2                    ADD TO LENGTH                   40000017
         STH   R3,WOLCL                 RESTORE LENGTH                  40100017
         MVC   0(2,R4),WOLCL            MOVE FROM BOUNDRY               40200017
         BR    R14                      RETURN                          40300017
*CONSTANTS                                                              40400017
         DS    0F                                                       40500017
MXSIZ    DC    X'7FFFFFFF'              MAXIMUM NUMBER TO USE FOR SIZE  40600017
THTOK    DC    X'00008000'              32,768 TOO BIG FOR SET SIZE     40700017
TWFIF    DC    X'000000FF'              255                             40800017
FOURY    DC    X'00000004'                                              40900017
TWOLY    DC    X'00000002'                                              41000017
ONELY    DC    X'00000001'                                              41100017
ONSXA    DC    F'168'                                                   41200017
*GETMAIN LIST                                                           41300017
GETMC    GETMAIN EC,LV=168,MF=L                                         41400017
GETME    EQU   *                                                        41500017
         DC    C'ZAPSZAPSZAPSZAPS'                                      41600017
         DC    C'ZAPSZAPSZAPSZAPS'                                      41700017
         DC    C'ZAPSZAPSZAPSZAPS'                                      41800017
         DC    C'ZAPSZAPSZAPSZAPS'                                      41900017
         DC    C'ZAPSZAPSZAPSZAPS'                                      42000017
*EQUATES                                                                42100017
ASASW    EQU   4                        ASA CONTROL CHARACTER           42200017
MACSW    EQU   2                        MACHINE CONTROL CHARACTER       42300017
VARSW    EQU   64                       VARIABLE SWITCH WHEN NOT F      42400017
FIXSW    EQU   128                      FIXED SWITCH WHEN NOT V         42500017
NOTLA    EQU   X'1'                     NOT LAST SEGMENT                42600017
NOTFI    EQU   X'2'                     NOT FIRST SEGMENT               42700017
VARSP    EQU   X'48'                    VARIABLE SPANNED SWITCH         42800017
UNKSW    EQU   VARSW+FIXSW              UNKNOWN SWITCH                  42900017
*CONTROL AREA FOR SPANNING                                              43000017
*DEFINE DCB                                                             43100017
         DCBD  DSORG=PS                                                 43200017
         IEFSDWKT                                                MAPMAC 45200020
         IEFSDSDR                                                MAPMAC 47200020
         IEFSDWKX                                                MAPMAC 49200020
         END                                                            51300017
./  ADD  SSI=21430097,NAME=IEFSD087
         TITLE 'IEFSD087 - VMS SYSOUT STANDARD DATASET OUTPUT WRITER'   00020000
*                                                                       00022020
*          RELEASE 22 DELETIONS/CHANGES                                 00024020
*          RELEASE 21 DELETIONS/CHANGES                                 00026020
*1123083600                                                      A51944 00026221
*1123                                                            A39229 00026521
*1123                                                            A41000 00027021
*1123                                                            A42459 00027521
*          RELEASE 20 DELETIONS/CHANGES                                 00028020
*1043060240-060280,060360,063000                                 M5878  00028520
*1043004260                                                      20202  00029020
* 011200-032200,039200-046992,047122-047742                      MAPMAC 00030020
* 068720                                                         A34036 00032020
* 084243-084246                                                  A33218 00034020
*1043064200                                                      A35780 00037020
 TITLE 'IEFSD087' - STANDARD DATASET OUTPUT WRITER                      00040000
*********************************************************************** 00060000
*                                                                     * 00080000
* STATUS CHANGE LEVEL 008                                               00100021
*                                                                     * 00120000
*FUNCTION OF THIS MODULE:                                             * 00140000
*                                                                     * 00160000
*    0. DETERMINE IF THE OUTPUT DEVICE IS A 3211 PRINTER AND     20202  00165020
*       CHANGES HAVE BEEN REQUESTED TO THE UCS/FCB ENVIRONMENT.  20202  00170020
*       THEN LINK TO MODULE IEFSDTTE TO LOAD THE UCS/FCB BUFFERS.20202  00175020
*    1. GET THE INDIVIDUAL RECORDS FROM THE DATASET.                  * 00180000
*    2. WRITE TO THE SYSTEM OUTPUT DEVICE ERROR MESSAGES IF THE DCB   * 00200000
*       IS NOT SATISFACTORY FOR QSAM PROCESSING OR IF THE IS AN       * 00220000
*       UNRECOVERABLE INPUT ERROR.                                    * 00240000
*    3. IF INPUT DATASET IS SPANNED AND OUTPUT IS NOT LOADS THE    VS0H 00242017
*       VARIABLE SPANNED ROUTINE (IEFSDXXX) AND DELETES IT WHEN    VS0H 00244017
*       THE INPUT DATASET IS DONE. IF EITHER INPUT OR OUTPUT IS    VS0H 00246017
*       SPANNED IEFSDXXX IS ENTERED TO INITIALIZE THE SPAN CONTROL VS0H 00248017
*       AREA AND GET CORE FOR AN AREA TO BUILD THE SPANNED RECORD  VS0H 00250017
*       IN IF NECESSARY. IT WILL FREE THIS AREA WHEN THE INPUT     VS0H 00252017
*       IS DONE .                                                  VS0H 00254017
*                                                                     * 00260000
*OPERATION OF THIS MODULE:                                            * 00280000
*                                                                     * 00300000
*    ENTRY POINT 1 - IEFSD087 WHICH IS LINKED TO FROM IEFSD070 WHEN   * 00320000
*        THIS MODULE IS TO BE USER TO PUT OUT DATASETS.               * 00340000
*    INPUT AT ENTRY POINT 1:                                          * 00360000
*        REGISTER 1 POINTS TO THE WORK LIST USED BY DSB AND SMB       * 00380000
*        ROUTINE.                                                     * 00400000
*                                                                20202  00402020
*    EXIT POINT 0.2 - LINK TO IEFSDTTE TO LOAD THE UCS/FCB BUFFER 20202 00404020
*    OUTPUT AT EXIT POINT 0.2:                                   20202  00406020
*        REGISTER 6 POINTS TO THE INPUT DCB.                     20202  00408020
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB  20202  00410020
*        ROUTINE.                                                20202  00412020
*        REGISTER 8 POINTS TO THE WORK AREA FOR STANDARD OUTPUT  20202  00414020
*        ROUTINE.                                                20202  00416020
*                                                                     * 00420000
*    EXIT POINT 0.5 - BRANCH TO IEFSDXXX TO INITIALIZE THE SPAN    VS0H 00422017
*        CONTROL AREA IF INPUT OR OUTPUT IS VARIABLE SPANNED.      VS0H 00424017
*    OUTPUT AT EXIT POINT 0.5:                                   20202  00426020
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB    VS0H 00428017
*        ROUTINE.                                                  VS0H 00430017
*        REGISTER 8 POINTS TO THE PARAMETER LIST GIVEN TO SMB AND  VS0H 00432017
*        DSB PROCESSING ROUTINES.                                  VS0H 00434017
*                                                                  VS0H 00436017
*    EXIT POINT 1 - BRANCH TO IEFSD088 TO DO THE START TRANSITION     * 00440000
*        ROUTINE.                                                     * 00460000
*    OUTPUT AT EXIT POINT 1:                                          * 00480000
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB       * 00500000
*        ROUTINE.                                                     * 00520000
*        REGISTER 8 POINTS TO THE WORK AREA FOR STANDARD OUTPUT       * 00540000
*        ROUTINE.                                                     * 00560000
*                                                                     * 00580000
*    EXIT POINT 2 - BRANCH TO IEFSD089 TO DO THE PUT FOR EACH RECORD. * 00600000
*    OUTPUT AT EXIT POINT 2:                                          * 00620000
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB       * 00640000
*        ROUTINE.                                                     * 00660000
*        REGISTER 8 POINTS TO THE PARAMETER LIST GIVEN TO SMB AND     * 00680000
*        DSB PROCESSING ROUTINES.                                     * 00700000
*                                                                     * 00720000
*    EXIT POINT 3 - BRANCH TO IEFSD088 TO DO THE END TRANSITION       * 00740000
*        ROUTINE.                                                     * 00760000
*    OUTPUT AT EXIT POINT 3:                                          * 00780000
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB       * 00800000
*        ROUTINE.                                                     * 00820000
*        REGISTER 8 POINTS TO THE WORK AREA FOR STANDARD OUTPUT       * 00840000
*        ROUTINE.                                                     * 00860000
*                                                                     * 00880000
*    EXIT POINT 4- RETURN TO IEFSD078 IF SYSOUT WORK DONE.            * 00900000
*        THE REGISTERS ARE RESTORED TO AS THEY WERE ON LEAVING        * 00920000
*        IEFSD078.                                                    * 00940000
*                                                                     * 00960000
*EXTERNAL ROUTINES:                                                   * 00980000
*                                                                     * 01000000
*    IEFSD088  THE TRANSITION ROUTINE                                 * 01020000
*    IEFSD089  THE OUTPUT ROUTINE                                     * 01040000
*   IEFSDXXX   SPANNED DATASETS ROUTINE                            VS0H 01050017
*    IEFSD078  SYSOUT WRITER LINK-TO-DSB/SMB                          * 01060000
*    IEFSD87M  MESSAGES FOR IEFSD087                                  * 01080000
*    IEFSDTTE  THE 3211 PRINTER SUPPORT ROUTINE                         01090020
*                                                                     * 01100000
*                                                                     * 03240000
*                                                                     * 03260000
*ATTRIBUTES - REENTRANT                                               * 03280000
*                                                                     * 03300000
*********************************************************************** 03320000
*                        NEEDED DSECTS                                  03340000
*                                                                       03360000
R0       EQU   0                                                        03380000
R1       EQU   1                                                        03400000
R2       EQU   2                                                        03420000
R3       EQU   3                                                        03440000
R4       EQU   4                                                        03460000
R5       EQU   5                                                        03480000
R6       EQU   6                                                        03500000
R7       EQU   7                                                        03520000
R8       EQU   8                                                        03540000
R9       EQU   9                                                        03560000
R10      EQU   10                                                       03580000
R11      EQU   11                                                       03600000
R12      EQU   12                                                       03620000
R13      EQU   13                                                       03640000
R14      EQU   14                                                       03660000
R15      EQU   15                                                       03680000
*                                                                       03680620
*        ESSENTIAL EQUATES                                              03681220
******************************************************************      03681820
*3211 SUPPORT                                                           03682420
DEBUCBAD EQU   32                       UCB ADDR OFFSET IN DEB   M5878  03683020
FLAGF    EQU   X'FF'                    ONE BYTE FLAG            M5878  03683620
FOUR     EQU   4                        LENGTH OF FOUR           M5878  03684220
JFCBFAL  EQU   X'08'                    JFCB FCB ALIGN REQUEST   M5878  03684820
JFCBFVR  EQU   X'04'                    JFCB FCB VERIFY REQUEST  M5878  03685420
JFCBUBLK EQU   X'40'                    JFCB UNBLK ALLOW DATA CK M5878  03686020
JFCBUF   EQU   X'40'                    JFCB UCS FOLD REQUEST    M5878  03686620
JFCBUVR  EQU   X'10'                    JFCB UCS VERIFY REQUEST  M5878  03687220
RETCODE  EQU   19                       REG 15 RETURN CODE       M5878  03687820
TTETYPE  EQU   X'09'                    3211 UNIT TYPE           M5878  03688420
UCBFDF   EQU   X'80'                    UCB FCB ID IS DEFAULT ID M5878  03689020
UCBUDF   EQU   X'80'                    UCB UCS ID IS DEFAULT ID M5878  03689620
ZERO     EQU   0                        ZERO CONSTANT            M5878  03690220
UCBUPE   EQU   X'01'                    UCB UCS PARITY ERROR     M5878  03690820
*                                                                       03691420
******************************************************************      03692020
*                                                                       03692620
*DEFINE JFCB                                                            03693220
IEFJFCBN DSECT                                                          03693820
         IEFJFCBN                                                       03694420
IEFUCBOB DSECT                                                          03695020
         IEFUCBOB                                                       03695620
*                                                                       03696220
******************************************************************      03696820
*                                                                       03697420
*DEFINE DCB LABELS FOR DCB OF MAXIMUM SIZE                              03700000
         DCBD  DSORG=PS                                                 03720000
*DEFINE DCB AND OPEN AND CLOSE. (EODAD,SYNAD,OPEN,AND CLOSE TO ADD)     03740000
TODCB    DSECT                                                          03760000
         DCB   DSORG=PS,                                               *03780000
               MACRF=GL,                                               *03800000
               BUFNO=2                                                  03820000
SPOPN    OPEN  (0,INPUT),MF=L                                           03840000
SPCLO    CLOSE (0),MF=L                                                 03860000
SPEXL    DC    F'0'                     DCB EXIT LIST                   03880000
SPEXL1   DC    F'0'                    DCB EXIT LIST                    03890015
BODCB    EQU   *                                                        03900000
         IEFSDWKT                                                MAPMAC 04100020
         IEFSDSDR                                                MAPMAC 04300020
         IEFSDWKX                                                MAPMAC 04500020
*EQUATES                                                                04700218
ASASW    EQU   4                        ASA CONTROL CHARACTER           04701218
MACSW    EQU   2                        MACHINE CONTROL CHARACTER       04702218
NOTLA    EQU   X'1'                     NOT LAST SEGMENT           VS0H 04703218
NOTFI    EQU   X'2'                     NOT FIRST SEGMENT          VS0H 04704218
VARSP    EQU   X'48'                    VARIABLE SPANNED RECFM     VS0H 04705218
CVT      EQU   16                                                  000F 04706218
MFTWO    EQU   X'74'                                               000F 04707218
MFTBT    EQU   X'20'                                               000F 04708218
VARSW    EQU   64                       VARIABLE SWITCH WHEN NOT FIXED  04709218
FIXSW    EQU   128                      FIXED SWITCH WHEN NOT VARIABLE  04710218
UNKSW    EQU   VARSW+FIXSW              UNKNOWN SWITCH                  04711218
         IEFSDPAR                                                MAPMAC 04741220
         IEFSDSMF                                                MAPMAC 04771220
*                                                                     * 04820000
*                   THIS ROUTINE IS THE STANDARD SYSOUT WRITER        * 04840000
*                   ROUTINE WHICH MAY BE USED TO WRITE OUT            * 04860000
*                   DATASETS INSTEAD OF ONE SUPPLIED BY THE           * 04880000
*                   USER. IT RECEIVES A 3 WORD REGISTER SAVE          * 04900000
*                   AREA THE ADDRESS OF WHICH IS IN REGISTER          * 04920000
*                   1. THE AREA HAS THE FOLLOWING APPEARANCE:         * 04940000
*                                                                     * 04960000
*                    *************************************            * 04980000
*                    *        *        *        *        *            * 05000000
*                    *SWITCHES*        *        *        *            * 05020000
*                    *        *        *        *        *            * 05040000
*                    *************************************            * 05060000
*                    *                                   *            * 05080000
*                    *         ADDRESS OF OUTPUT DCB     *            * 05100000
*                    *                                   *            * 05120000
*                    *************************************            * 05140000
*                    *                                   *            * 05160000
*                    *         ADDRESS OF INPUT DCB      *            * 05180000
*                    *                                   *            * 05200000
*                    *************************************            * 05220000
*                                                                     * 05240000
*                   SWITCHES ARE AS FOLLOWS:                          * 05260000
*                                                                     * 05280000
*                    LEFT MOST BIT (128) IS ON IF THE OUTPUT          * 05300000
*                    UNIT IS A 1442 PUNCH                             * 05320000
*                                                                     * 05340000
*                    NEXT BIT (64)  IS ON IF THE OUTPUT UNIT          * 05360000
*                    IS A PUNCH OR IF IT IS TAPE WHICH HAS A          * 05380000
*                    PUNCH AS ITS ULTIMATE DESTINATION                * 05400000
*                                                                     * 05420000
*                    NEXT BIT (32) IS ON IF THE OUTPUT UNIT           * 05440000
*                    IS A PRINTER OR A PUNCH.                         * 05460000
*                                                                     * 05480000
*                                                                     * 05500000
*                   A USER MAY WRITE A ROUTINE TO USE INSTEAD         * 05520000
*                   OF THIS. HE WILL HAVE THE ROUTINE IN THE          * 05540000
*                   LINK LIBRARY AND THE PROGRAM NAME IN THE          * 05560000
*                   SYSOUT FIELD OF THE DD STATEMENT. SEE JCL         * 05580000
*                   PUBLICATION.                                      * 05600000
*                                                                     * 05620000
*                   THE USERS PROGRAM WILL GET CONTROL WITH           * 05640000
*                   THE OUTPUT FILE OPEN AND THE INPUT FILE           * 05660000
*                   NOT OPENED.                                       * 05680000
*                                                                     * 05700000
*                   AT THE END OF HIS ROUTINE HE WILL CLOSE           * 05720000
*                   THE INPUT FILE AND RETURN. THE INPUT FILE         * 05740000
*                   WILL THEN BE DELETED FOR HIM.                     * 05760000
*                                                                     * 05780000
*INITIALIZE                                                             05800000
IEFSD087 CSECT                                                          05820000
*3412047000-048000,058300,065800,078800,079008-079200,079400,      SM0I 05826018
*084270                                                            SM0I 05832018
*                                                                A17618 05836018
*067050-067150                                                   F40172 05838019
         SAVE  (14,12)                  SAVE REGISTERS                  05840000
         BALR  R9,0                     SET BASE REGISTER               05860000
         USING *,R9                                                     05880000
         LR    R7,R1                    SAVE PARAM REGISTERS            05900000
         USING WORKLST,R7                                               05920000
*GET CORE FOR WORK AREA                                                 05940000
         LA    R0,WKSOE-WKSOR           GET SIZE OF WORK AREA           05960000
         GETMAIN R,LV=(0)               GET CORE FOR IT                 05980000
         LR    R8,R1                    SET REGISTER TO WORK AREA       06000000
         USING WKSOR,R8                                                 06020000
         L     R4,WOSPS                 GET ADDRESS OF PARLIST   M5878  06024020
         USING PARLIST,R4               ESTABLISH ADDRESSABILITY M5878  06028020
         ST    R8,PARWKSOR              SAVE WKSOR ADDRESS       A35780 06032020
         ST    R13,SRETR                SAVE RETURN REGISTER            06040000
         LA    R13,SMSVA                GET SAVE AREA ADDRESS           06060000
*CLEAR TRANSITION WRITE SWITCH                                          06080000
         MVI   BCTSW,X'00'              PUT COUNT TO 0                  06100000
*                                                                F40172 06103019
*         INITIALIZE CONTROL CHARACTERS                          F40172 06106019
*                                                                F40172 06109019
         MVI   SAVEC,X'09'        INITIALIZE SAVEC               F40172 06112019
         MVI   SAVED,X'09'        INITIALIZE SAVED               F40172 06115019
*TURN OFF SWITCHES                                                      06120000
         MVI   SORS1,0                                                  06140000
         MVI   SORS2,0                  TURN OFF SWITCH          A35780 06145020
         MVI   SEGIN,0                  MAKE SEGMENT 0             VS0H 06150017
*PUT IN EXLST ROUTINE                                                   06160000
         L     R6,DCBIN                 GET ADDRESS OF DCB              06180000
         USING IHADCB,R6                                                06200000
         LA    R10,SPEXL-TODCB(0,R6)    GET ADDRESS OF DCB EXIT LIST    06220000
         ST    R10,SPEXL-TODCB(0,R6)    SAVE IT                         06240000
         MVC   DCBEXLST+1(3),SPEXL+1-TODCB(R6)                          06260000
         MVC   SPEXL-TODCB(4,R6),WJFCB  PUT IN JFCB ADDRESS             06270015
         MVI   SPEXL-TODCB(R6),X'07'    SET HIGH ORDER BYTE AT 7        06280015
         MVC   SPEXL-TODCB+4(4,R6),ADING   PUT IN OPEN EXIT LIST ADDR   06290015
*3211 PRINTER SUPPORT                                                   06290320
         ST    R13,PARSAP               SAVE POINTER TO SAVE     M5878  06290620
*                                       AREA                     M5878  06290920
         LA    R13,PARSAV               ADDR OF SAVE AR IN       M5878  06291220
*                                       PARLIST                  M5878  06291520
         TM    PARSWCH,PARDUMMY         IS OUTPUT DUMMY DATA SET M5878  06291820
         BO    OPENIN                   YES, NORMAL OPERATIONS   M5878  06292120
         L     R5,PARUCB                GET OUTPUT UCB ADDRESS   M5878  06292420
         USING UCBOB,R5                 ESTABLISH ADDRESSIBILITY M5878  06292720
*IS OUTPUT DEVICE 3211 PRINTER                                          06293020
         TM    UCBTBYT3,UCB3UREC        IS DEVICE CLASS UNIT REC M5878  06293320
         BNO   OPENIN                   NO, NORMAL OPERATION     M5878  06293620
         TM    UCBTBYT4,TTETYPE         IS UNIT TYPE 3211 PTR    M5878  06293920
         BNO   OPENIN                   NO, NORMAL OPERATION     M5878  06294220
*CONTINUE TEST FOR CHANGE REQUEST BEFORE LOADING 3211 PROCESSOR         06294520
         L     R10,WJFCB                ESTABLISH                M5878  06294820
         USING INFMJFCB,R10               INPUT JFCB BASE        M5878  06295120
         L     R5,UCBXTADR              SHIFT TO UCB/UCS         M5878  06295420
*                                       EXTENSION                M5878  06295720
         DROP  R5                                                A42459 06295821
         USING UCBUCS,R5                BASE FOR UCS EXTENSION   A42459 06295921
         CLC   JFCFCBID(FOUR),INVALADR  FCB IMAGE-ID SPECIFIED   M5878  06296020
         BNE   TTENT                    YES, GO TO IEFSDTTE      M5878  06296320
         TM    UCBFCBOP,UCBFDF          PRESENT IMAGE-ID A       M5878  06296620
*                                       DEFAULT                  M5878  06296920
         BO    CHKVER                   YES, GO TO CHECK VER REQ M5878  06297220
         CLI   PARFCBID,ZERO            WAS FCB SAVED            M5878  06297520
         BNE   TTENT                    YES, GO TO IEFSDTTE      M5878  06297820
CHKVER   EQU   *                                                 M5878  06298120
         TM    JFCUCSOP,JFCBFVR         FCB IMAGE-ID VERIFY REQ  M5878  06298420
         BO    TTENT                    YES, GO TO IEFSDTTE      M5878  06298720
         TM    JFCUCSOP,JFCBFAL         FCB IMAGE-ID ALIGNMENT   M5878  06299020
*                                       REQ                      M5878  06299320
         BO    TTENT                    YES, GO TO IEFSDTTE      M5878  06299620
         CLC   JFCUCSID(FOUR),INVALADR  UCS IMAGE-ID SPECIFIED   M5878  06299920
         BNE   TTENT                    YES, GO TO IEFSDTTE      M5878  06300220
         TM    UCBUCSOP,UCBUPE          RELOAD REQUEST FROM OPEN M5878  06300520
         BO    TTENT                    YES, GO TO IEFSDTTE      M5878  06300820
         TM    UCBUCSOP,UCBUDF          PRESENT IMAGE-ID A       M5878  06301120
*                                       DEFAULT                  M5878  06301420
         BO    UCSVER                   YES, GO TO CHECK VER REQ M5878  06301720
         CLI   PARUCSID,ZERO            WAS UCS ID SAVED         M5878  06302020
         BNE   TTENT                    YES, GO TO IEFSDTTE      M5878  06302320
UCSVER   EQU   *                                                 M5878  06302620
         TM    JFCUCSOP,JFCBUVR         UCB IMAGE-ID VERIFY REQ  M5878  06302920
         BO    TTENT                    YES, GO TO IEFSDTTE      M5878  06303220
         TM    JFCUCSOP,JFCBUF          UCS FOLD MODE REQUEST    M5878  06303520
         BO    TTENT                    YES, GO TO IEFSDTTE      M5878  06303820
         TM    JFCOPTCD,JFCBUBLK        ALLOW DATA CK,-UNBLOCK   M5878  06304120
*                                       REQ                      M5878  06304420
         BZ    OPENIN                   NO, NORMAL OPERATION     M5878  06304720
TTENT    EQU   *                                                 M5878  06305020
*                                                                       06305320
         DROP  R5                                                M5878  06305620
         L     R1,SD89EXIT              PASS 089 ADDR TO         M5878  06305920
*                                       IEFSDTTE                 M5878  06306220
*                                         FOR OUTPUT MSG WRITE          06306520
*LINK TO THE 3211 SUPPORT MODULE                                        06306820
         LINK  EP=IEFSDTTE,MF=(E,(1))   LINK TO 3211 PROCESSOR   M5878  06307120
         DROP  R10                                               M5878  06307420
         L     R13,PARSAP               RESTORE SAVE AREA ADDR   M5878  06307720
*********************************************************************** 06308020
*                                                                     * 06308320
*ON RETURN FROM THE 3211 PROCESSOR MODULE, REGISTER 15 WILL           * 06308620
*  CONTAIN A RETURN CODE INDICATING UCS/FCB ENVIRONMENTAL CONDI-      * 06308920
*  TIONS.  REG15 RC=00 - SUCCESSFUL COMPLETION                        * 06309220
*        REG15 RC<0C AND SORS1=INERS - INPUT ERROR                    * 06309520
*        REG15 RC>08 - OUTPUT ERROR                                   * 06309820
*                                                                     * 06310120
*********************************************************************** 06310420
         TM    SORS1,INERS              TEST FOR IO ERROR. IF SO M5878  06310720
         BO    FREEWORK                 BRANCH TO SKIP INPUT     M5878  06311020
         L     R10,WOSAP                GET ADDR ERROR RET PUT   M5878  06311320
*                                       AT                       M5878  06311620
         TM    RETCODE(R10),FLAGF       TEST FOR ERROR- IF ANY   M5878  06311920
         BNZ   FREEWORK                 TERM PRESENT OPERATION   M5878  06312220
OPENIN   EQU   *                                                 M5878  06312520
*OPEN INPUT                                                             06312820
         LA    R1,SPOPN-TODCB(0,R6)     GET ADDRESS OF OPEN             06320000
         OPEN  ((R6),INPUT),TYPE=J,MF=(E,(1))                           06340015
*PUT IN INPUT SYNAD AND EODAD ROUTINES                                  06360000
         MVC   DCBSYNAD+1(3),ADINE+1    PUT IN INPUT ERROR ROUTINE      06380000
         MVC   DCBEODAD+1(3),ADINF+1    PUT IN INPUT END OF FILE ROUT.  06400000
* SET SWITCH TO INDICATE INPUT CONTROL CHARACTER TYPE                   06406020
         TM    DCBRECFM,ASASW           ASA CNTRL CHAR ON INPUT  A35780 06412020
         BZ    MACTEST                  NO, TEST FOR MACH CC     A35780 06418020
         OI    SORS2,ASACC              TURN ON ASA SWITCH       A35780 06424020
MACTEST  EQU   *                                                 A35780 06430020
         TM    DCBRECFM,MACSW           TEST FOR MACHINE CNTRL CHAR     06440000
         BZ    VSPST                    BRANCH TO TEST SPAN IF NOT VS0H 06460017
         OI    SORS1,MACHS              TURN ON MACHINE SWITCH          06480000
*IS VARIABLE SPANNED OUTPUT                                        VS0H 06480917
VSPST    L     R15,WOXXX                GET SPANNED MODULE ADDRESS VS0H 06481817
         LTR   R15,R15                  IF A MODULE PRESENT        VS0H 06482717
         BNZ   SPANM                    THEN ENTER IT              VS0H 06483617
*IS VARIABLE SPANNED INPUT                                         VS0H 06484517
         TM    DCBRECFM,VARSP           IF NOT VS INPUT THEN       VS0H 06485417
         BNO   DTRRO                    BRANCH TO AVOID SPANNING   VS0H 06486317
*LOAD THE SPANNING MODULE                                          VS0H 06487217
         LOAD  EP=IEFSDXXX                                         VS0H 06488117
*SAVE THIS ADDRESS                                                 VS0H 06489017
         ST    R0,WOXXX                                            VS0H 06489917
*GET CORE FOR SPANNING WORK AREA                                   VS0H 06490817
         LA    R0,WORKFEND-WORKFXXX     GET SIZE                   VS0H 06491717
         GETMAIN R,LV=(0)               GET CORE                   VS0H 06492617
*SAVE THE GOT CORE OF SPANNING MODULE                              VS0H 06493517
         ST    R1,WOXXA                                            VS0H 06494417
*BRANCH TO THE SPANNING MODULE                                     VS0H 06495317
SPANM    L     R15,WOXXX                GET SPAN MODULE ADDRESS    VS0H 06496217
         O     R15,BATEY                USE 8 TO INDICATE DATASET  VS0H 06497117
         BALR  R14,R15                  GO TO SPANNING MODULE      VS0H 06498017
*DO TRANSITION ROUTINE                                                  06500000
DTRRO    L     R15,SD88EXIT             GET ADDRESS FOR EXIT            06520000
         BALR  R14,R15                                                  06540000
         L     R14,WOSPS           GET ADDRESS OF PARLIST          SM0I 06542018
         USING  PARLIST,R14                                        SM0I 06544018
         CLI   PARSMF+3,X'FF'      CHECK FOR SMF PROCESSING        SM0I 06546018
         BE    CONTUE1             IF NONE-SKIP SMF PROCESSING     SM0I 06548018
         L     R15,PARSMF          GET ADDRESS OF SMFREC           SM0I 06550018
         DROP   R14                                                SM0I 06552018
         USING  SMFREC,R15                                         SM0I 06554018
         XC    SMFDYCNT(4),SMFDYCNT  ZERO OUT TRANSITION COUNT     SM0I 06556018
         DROP  R15                                                 SM0I 06558018
*IS THERE AN UNRECOVERABLE ERROR                                        06560000
CONTUE1  L     R10,WOSAP           GET ADDRESS ERROR RETURN PUT AT SM0I 06580018
         TM    19(R10),X'FF'            TEST FOR ERROR IF SO            06600000
         BNE   CLIDS                    BRANCH TO CLOSE INPUT           06620000
*IS THERE AN UNOPENED DATASET                                           06640000
         TM    SORS1,LRERS+INERS        TEST FOR UNOPENED DATASET       06660000
         BO   SD87EOFX                  IF SO BRANCH TO END OF FILE     06680000
*WAS CORE NEEDED FOR WORK AREA THAT WASNT AVAILABLE                VS0H 06685017
         TM    SORS1,OVERT+CNTGE        IF CANT GET NEEDED CORE    VS0H 06690017
         BNZ   SD87EREX                 GO TO WRITE MESSAGE        VS0H 06695017
*GET NEXT LOGICAL RECORD                                                06700000
GLOGR    EQU   *                                                 F40172 06710019
         L     R1,WOTIQ                 SEE IF CANCEL              000F 06720015
         TM    0(R1),X'40'                                         000F 06725015
         BO    SD87EOFX           CANCEL MFT-2                     000F 06730015
GLOGS    LR    R1,R6                    GET ADDRESS OF DCB         000F 06735015
         MVI   SEGIN,0                  GET 0 SEGMENT INDICATION   VS0H 06737017
         GET   (1)                      GET NEXT RECORD                 06740000
*IS THERE A PERMANENT IO INPUT ERROR                                    06760000
         TM    SORS1,INERS              TEST FOR IO ERROR IF SO         06780000
         BO    PTICC                    BRANCH TO PUT MESSAGE CNTR CHAR 06800000
*GET LENGTH AND BEGINNING OF INPUT RECORD                               06820000
         LH    R11,DCBLRECL             GET LENGTH                      06840000
         LR    R12,R1                   GET BEGINNING                   06860000
*GET SEGMENT INDICATION                                            VS0H 06861017
         TM    DCBRECFM,VARSP           IF NOT SPANNING THEN       VS0H 06862017
         BNO   SEGDN                    AVOID SAVING SEGMENT       VS0H 06863017
         MVC   SEGIN(1),2(R12)          GET SEGMENT INDICATION     VS0H 06864017
*IS SEGMENT O.K.                                                   VS0H 06865017
         L     R3,WOXXA                 GET PREVIOUS SEGMENT BASE  VS0H 06866017
         IC    R3,INSEG-ATENW(R3)       GET PREVIOUS SEGMENT       VS0H 06867017
         IC    R10,SEGIN                GET PRESENT SEGMENT        VS0H 06868017
         SRL   R10,1                    SHIFT TO ALIGN             VS0H 06869017
         XR    R10,R3                   IF SEG OK THE LOW BIT 0    VS0H 06870017
         N     R10,ONELY                ONLY LOW BIT LEFT. IF IT 1 VS0H 06871017
         BNZ   SEGER                    THEN BRANCH TO SEG. BAD  A34036 06872020
SEGDN    EQU   *                        SAVE SEGMENT               VS0H 06873017
*IS THE INPUT RECORD IN VARIABLE FORMAT                                 06880000
         TM    DCBRECFM,FIXSW           TEST FOR NON VARIABLE IF SO     06900000
         BO    TFCCH                    BRANCH AROUND MODIFICATION      06920000
*MODIFY LENGTH AND BEGINNING LOCATION BY 4                              06940000
         LA    R10,4                    MODIFY BY 4                     06960000
         SR    R11,R10                  SUBTRACTED FROM LENGTH          06980000
         BM    SD87EREX                 ERROR AS RECORD TOO SHORT   076 07000000
         AR    R12,R10                  ADDED TO BEGINNING LOCATION     07020000
*IS THIS A SUBSEQUENT SEGMENT                                      VS0H 07025017
         TM    SEGIN,NOTFI              IF SUBSEQUENT SEGMENT THEN VS0H 07030017
         BO    TOOLD                    AVOID C.C. FIX             VS0H 07035017
*IS THERE A CONTROL CHARACTER                                           07040000
TFCCH    TM    DCBRECFM,ASASW+MACSW     TEST FOR NO CONTROL CHAR. IF SO 07060000
         BZ    ASPOC                    BRANCH TO PUT STANDARD ONE IN   07080000
*GET CONTROL CHARACTER                                                  07100000
         MVC   CONCH,0(R12)             SAVE CONTROL CHARACTER          07120000
*MODIFY LENGTH AND BEGINNING LOCATION BY 1                              07140000
         LA    R10,1                    MODIFY BY 1                     07160000
         SR    R11,R10                  SUBTRACTED FROM LENGTH          07180000
         BM    SD87EREX                 ERROR AS RECORD TOO SHORT   076 07200000
         AR    R12,R10                  ADDED TO BEGINNING LOCATION     07220000
         B     TOOLD                    BRANCH TO TURN ON OLD SWITCH    07240000
*MAKE ASA SPACE 1 THE CONTROL CHARACTER                                 07260000
ASPOC    MVI   CONCH,C' '                                               07280000
*IS PRINTER OVERFLOWED                                                  07300000
         L     R3,DCBOT                 GET DCB ADDRESS                 07320000
         PRTOV (3),12,MASCH             IF OVER FLOWED BRANCH TO SKIP   07340000
*IS OLD SWITCH ON                                                       07360000
         TM    SORS1,OLDSW              TEST FOR OLD SWITCH ON IF SO    07380000
         BO    TOOLD                    BRANCH TO DO OUTPUT ROUTINE     07400000
*MAKE ASA SKIP TO CHANNEL 1 THE CONTROL CHARACTER                       07420000
MASCH    MVI   CONCH,C'1'                                               07440000
*TURN ON OLD SWITCH                                                     07460000
TOOLD    OI    SORS1,OLDSW                                              07480000
*DO OUTPUT ROUTINE                                                      07500000
         STM   R11,R12,INLSF            SAVE LOCATION AND BEGINNING     07520000
         L     R15,SD89EXIT             GET ADDRESS FOR EXIT            07540000
         BALR  R14,R15                                                  07560000
*IS THERE AN UNRECOVERABLE ERROR                                        07580000
         L     R10,WOSAP                GET ADDRESS ERROR RETURN PUT AT 07600000
         TM    19(R10),X'FF'            TEST FOR ERROR IF SO            07620000
         BNE   CLIDS                    BRANCH TO CLOSE INPUT           07640000
*IS PERMANENT IO INPUT ERROR SWITCH ON                                  07660000
         TM    SORS1,INERS+OVERT+CNTGE+ERRSW IF IO CORRECT THEN    VS0H 07680017
         BZ    GLOGR                    BRANCH TO GET NEXT RECORD       07700000
*TURN ON OLD SWITCH                                                     07720000
SD87EOFX OI    SORS1,OLDSW                                              07740000
*FIX NUMBER OF TRANSITION WRITES                                        07760000
         MVI   BCTSW,1                  PUT IN 1 FOR PAINTER            07780000
         TM    VARBA,PUNSH              TEST FOR PUNCH IF NOT           07800000
         BZ    DTRAN                    BRANCH TO DO TRANSITION         07820000
         MVI   BCTSW,3                  PUT IN 3 FOR PUNCH              07840000
*DO TRANSITION ROUTINE                                                  07860000
DTRAN    LA    R1,DTRAN1           GET ADDRESS TO RETURN TO        SM0I 07870018
         BAL   R1,SMFPROC          GO CHECK FOR SMF PROCESSING     SM0I 07880018
DTRAN1   L     R15,SD88EXIT        GET ADDRESS FOR EXIT            SM0I 07890018
         BALR  R14,R15                                                  07900000
*IS THERE A SPANNED MODULE                                         VS0H 07901018
CLIDS    L     R3,WOXXA                 GET SPANNING WORK AREA     VS0H 07902018
         LTR   R3,R3                    IF IT IS O THEN            VS0H 07903018
         BZ    CLIDU                    AVOID CLEAN UP             VS0H 07904018
*IS THERE A SPECIAL SPAN WORK AREA                                 VS0H 07905018
         USING WORKFXXX,R3                                         VS0H 07906018
         LM    R0,R1,WOKRL              GET SIZE AND ADDRESS       VS0H 07907018
         C     R0,ONSXA                 IF NOT OVER 168 THEN       VS0H 07908018
         BNH   TFSPO                    BRANCH AS NO CORE GOT      VS0H 07909018
*FREE SPECIAL SPAN WORK AREA                                       VS0H 07910018
         FREEMAIN R,LV=(0),A=(1)        FREE CORE                  VS0H 07911018
* IS THERE SPANNED OUTPUT                                          VS0H 07912018
TFSPO    L     R1,DCBOT                 GET DCB OUTPUT ADDRESS     VS0H 07913018
         TM    DCBRECFM-IHADCB(R1),VARSP  IF SPANNED THEN          VS0H 07914018
         BO    CLIDU                    AVOID DELETING SPAN MODULE VS0H 07915018
*FREE SPAN WORK AREA                                               VS0H 07916018
         LA    R0,WORKFEND-WORKFXXX     GET SIZE                   VS0H 07917018
         LR    R1,R3                    GET CORE                   VS0H 07918018
         FREEMAIN R,LV=(0),A=(1)        FREE CORE                  VS0H 07919018
*DELETE THE SPANNING MODULE                                        VS0H 07920018
         DELETE EP=IEFSDXXX                                        VS0H 07921018
         DROP  R3                                                  VS0H 07922018
*INDICATE SPANNING CODE NOT PRESENT                                VS0H 07923018
         XC    WOXXX(8),WOXXX                                      VS0H 07924018
*CLOSE INPUT                                                            07925018
         L     R14,WOSPS           GET ADDRESS OF PARLIST          SM0I 07926018
         USING  PARLIST,R14                                        SM0I 07927018
         CLI   PARSMF+3,X'FF'      CHECK FOR SMF PROCESSING        SM0I 07928018
         BE    CLIDS               IF NONE-SKIP SMF PROCESSING     SM0I 07929018
         L     R15,PARSMF          GET ADDRESS OF SMFREC           SM0I 07930018
         DROP   R14                                                SM0I 07931018
         USING  SMFREC,R15                                         SM0I 07932018
         XC    SMFDYCNT(4),SMFDYCNT  ZERO OUT TRANSITION COUNT     SM0I 07933018
         DROP  R15                                                 SM0I 07934018
CLIDU    L     R10,WOSAP           GET ADDRESS ERROR RETURN PUT AT SM0I 07937018
         TM    19(R10),X'FF'       TEST FOR ERROR-IF NONE          SM0I 07940018
         BE    CLIDS1              SKIP SMF PROCESSING             SM0I 07943018
         LA    R1,CLIDS1           GET ADDRESS TO RETURN TO        SM0I 07946018
         BAL   R1,SMFPROC          GO CHECK FOR SMF PROCESSING     SM0I 07949018
CLIDS1   LA    R1,SPCLO-TODCB(0,R6)    GET ADDRESS OF CLOSE        SM0I 07952018
         CLOSE ((R6)),MF=(E,(1))                                        07960000
*FREE INPUT POOLS                                                       07980000
         LR    R1,R6                    GET ADDRESS OF DCB              08000000
         FREEPOOL (1)                                                   08020000
*FREE WORK AREA                                                         08040000
FREEWORK EQU   *                                                 M5878  08050020
         L     R13,SRETR                GET RETURN REGISTER             08060000
         LA    R0,WKSOE-WKSOR           GET SIZE OF WORK AREA           08080000
         LR    R1,R8                    GET START OF IT                 08100000
         FREEMAIN R,LV=(0),A=(1)                                        08120000
*SAVE RETURN INDICATION                                                 08140000
         L     R10,WOSAP                GET ADDRESS ERROR RETURN PUT AT 08160000
         MVC   16(4,R13),16(R10)        PUT IT WHERE REG. 15 GETS IT    08180000
*INDICATE NO SYNAD ROUTINE                                              08185021
         L     R6,DCBOT                 GET OUTPUT DCB ADDRESS   A41000 08190021
         MVC   DCBSYNAD+1(3),ONELY+1    PUT ONE IN SYNAD ADDRESS A41000 08195021
         RETURN (14,12)                 RETURN TO IEFSD070       A32638 08200020
*DOES DATASET HAVE FIELDS WHICH ARE NEEDED TO OPEN                      08220000
SD87EXLS NI    DCBBFTEK,X'7F'           SET HIER. BIT TO ZERO    A32638 08224020
         OI    DCBBFTEK,X'04'           TURN HIERARCHY=0 BIT ON  A32638 08228020
         TM    DCBRECFM,UNKSW           IS INPUT RECFM=U         A39229 08228821
         BNO   PCIOK                    NO, DON'T TURN OFF PCI   A39229 08229621
         NI    DCBOPTCD,X'DF'           TURN OFF PCI BIT         A39229 08230421
PCIOK    EQU   *                                                 A39229 08231221
         CLC   DCBBLKSI(2),BBLK         TEST FOR LARGE BLOCKSIZE A32638 08232020
         BNH   SDBLK                    NOT TOO LARGE            A17618 08236018
         MVI   DCBBUFNO,X'01'           USE ONE BUFFER           A17618 08244018
SDBLK    CLC   DCBBLKSI(2),FOURY        TEST FOR ZERO IF NOT     A17618 08252018
         BCR   7,R14                    BRANCH TO FINISH OPEN           08260000
         CLC   DCBBUFL(2),FOURY         TEST FOR ZERO IF NOT            08280000
         BCR   7,R14                    BRANCH TO FINISH OPEN           08300000
*FIX SO DATASET CAN COMPLETE OPEN                                       08320000
         LA    R10,18                   GET SMALLEST LENGTH             08340000
         STH   R10,DCBLRECL            PUT IN LRECL FOR OPEN     000G   08370016
         OI    SORS1,LRERS+INERS        TURN ON NO LRECL AND IO ERROR   08380000
         TM    DCBRECFM,X'40'           CHECK FOR VARIABLE FMT   A51944 08383021
         BNO   NOTVAR                   BRANCH IF NOT VARIABLE   A51944 08386021
*                                       FMT                      A51944 08389021
         LA    R10,4(R10)               ADJUST FOR BDW           A51944 08392021
NOTVAR   STH   R10,DCBBLKSI             MINIMUM BLOCKSIZE        A51944 08395021
         BR    R14                      BRANCH TO ALLOW OPEN            08400000
*INPUT ERROR ROUTINE                                                    08420000
SD87EREX L     R14,WOSPS           GET ADDRESS OF PARLIST          SM0I 08421018
         USING  PARLIST,R14                                        SM0I 08422018
         CLI   PARSMF+3,X'FF'      CHECK FOR SMF PROCESSING        SM0I 08423018
         BE    CONTUE3             IF NONE-SKIP SMF PROCESSING     SM0I 08424018
         L     R14,PARSMF              GET ADDRESS OF SMF REC    A33218 08424320
         DROP  R14                                               A33218 08424620
         USING  SMFREC,R14                                         SM0I 08425018
         OI    SMFERIN,X'04'       SET GET INPUT ERROR INDICATOR ONSM0I 08426018
         OI    SMFERINJ,X'04'      SET JOB ERROR INDICATOR         SM0I 08427018
         DROP  R14                                                 SM0I 08428018
CONTUE3  L     R10,IEFSDM87        SET UP MESSAGE BASE             SM0I 08429018
         USING IEFSD87M,R10                                        VS0H 08434017
         LA    R12,MS32K                GET START OF MESSAGE       VS0H 08441017
         LA    R11,MS32E-MS32K          GET LENGTH OF MESSAGE      VS0H 08448017
         TM    SORS1,OVERT              IF OVER 32K ERROR THEN     VS0H 08455017
         BO    PTICC                    BRANCH TO GET C.C.         VS0H 08462017
         LA    R12,MSGET                GET START OF MESSAGE       VS0H 08469017
         LA    R11,MSGEE-MSGET          GET LENGTH OF MESSAGE      VS0H 08476017
         TM    SORS1,CNTGE              IF COULDNT GET CORE THEN   VS0H 08483017
         BO    PTICC                    BRANCH TO GET C.C.         VS0H 08490017
         OI    SORS1,INERS              TURN ON IO ERROR           VS0H 08495017
         LA    R12,FIRLN                GET START OF MESSAGE            08500000
         LA    R11,ENDLN-FIRLN          GET LENGTH OF MESSAGE           08520000
         B     PTICC                    BRANCH TO GET CONTROL CHARACTER 08540000
SEGER    L     R10,IEFSDM87             SET UP MESSAGE BASE        VS0H 08544017
         LA    R12,MSSEG                GET LOCATION OF MESSAGE    VS0H 08548017
         LA    R11,MSSEE-MSSEG          GET LENGTH OF MESSAGE      VS0H 08552017
         OI    SORS1,ERRSW              TURN ON BAD SEGMENT SW.    VS0H 08556017
*PUT IN THE ERROR CONTROL CHARACTER                                     08560000
PTICC    MVI   CONCH,C' '               GET ASA SPACE 1 OR POCKET 1     08580000
         MVI   SEGIN,0                  CLEAR SEGMENT              VS0H 08590017
         TM    SORS1,MACHS              TEST FOR MACHINE CNTRL CHAR.    08600000
         BZ    TOOLD                    BRANCH TO PUT MESSAGE IF NOT    08620000
         MVI   CONCH,X'09'              GET MACHINE SPACE 1             08640000
         TM    VARBA,PUNSH              TEST FOR PUNCH TYPE OUTPUT      08660000
         BZ    TOOLD                    BRANCH TO PUT MESSAGE IF NOT    08680000
         MVI   CONCH,X'01'              GET MACHINE POCKET 1            08700000
         TM    VARBA,FTFTW              TEST FOR 1442 PUNCH IF NOT      08720000
         BZ    TOOLD                    BRANCH TO PUT MESSAGE           08740000
         MVI   CONCH,X'81'              GET 1442 POCKET 1               08760000
         B     TOOLD                    BRANCH TO PUT MESSAGE           08780000
SMFPROC  L     R14,WOSPS           GET ADDRESS OF PARLIST          SM0I 08781018
         USING  PARLIST,R14                                        SM0I 08782018
         CLI   PARSMF+3,X'FF'      CHECK FOR SMF PROCESSING        SM0I 08783018
         BE    CONTUE4             IF NONE-SKIP SMF PROCESSING     SM0I 08784018
         L     R15,PARSMF          GET ADDRESS OF SMFREC           SM0I 08785018
         DROP   R14                                                SM0I 08786018
         USING  SMFREC,R15                                         SM0I 08787018
         L     R14,SMFDYCNT        GET SYSOUT COUNT ADDITION       SM0I 08788018
         MVC   SMFWORKA(4),SMFSOCTF   GET OLD SYSOUT COUNT-FORM    SM0I 08789018
         A     R14,SMFWORKA        UPDATE COUNT                    SM0I 08790018
         ST    R14,SMFWORKA        SAVE NEW COUNT                  SM0I 08791018
         MVC   SMFSOCTF(4),SMFWORKA   STORE NEW COUNT-FORM         SM0I 08792018
         XC    SMFDYCNT(4),SMFDYCNT    CLEAR SYSOUT COUNTER        SM0I 08793018
         DROP  R15                                                 SM0I 08794018
CONTUE4  BR    R1                  RETURN TO CALLER                SM0I 08795018
*CONSTANTS                                                              08800000
BBLK     DC    H'3000'                                           A17618 08810018
         DS    0F                                                       08820000
FOURY    DC    X'00000004'                                              08840000
BATEY    DC    X'08000000'              TO INDICATE DATASET INPUT  VS0H 08846017
ONSXA    DC    F'168'                   MINIMUM GOT CORE           VS0H 08852017
ADINE    DC    A(SD87EREX)                                              08860000
ADINF    DC    A(SD87EOFX)                                              08880000
ADING    DC    X'85'                    LAST ENTRY, DATA CONTROL BLOCK  08900000
         DC    AL3(SD87EXLS)            ADDRESS OF ROUTINE              08920000
SD88EXIT DC    V(IEFSD088)              TRANSITION ROUTINE              08940000
SD89EXIT DC    V(IEFSD089)              OUTPUT ROUTINE                  08960000
IEFSDM87 DC    V(IEFSD87M)              MESSAGE CONSTANTS               08980000
INVALADR DC    1F'0'                    INVALID ADDR CONSTANT    M5878  08981020
ONELY    DC    X'00000001'                                         VS0H 08982017
         DC    C'ZAPSZAPSZAPSZAPS'                                 VS0H 08984017
         DC    C'ZAPSZAPSZAPSZAPS'                                 VS0H 08986017
         DC    C'ZAPSZAPSZAPSZAPS'                                 VS0H 08988017
         DC    C'ZAPSZAPSZAPSZAPS'                                 VS0H 08990017
         DC    C'ZAPSZAPSZAPSZAPS'                                 VS0H 08992017
*********************************************************************** 09000000
*                                                                     * 09020000
*TITLE         IEFSD87M   MESSAGES FOR IEFSD087                       * 09040000
*                                                                     * 09060000
*********************************************************************** 09080000
IEFSD87M CSECT                                                          09100000
         DS    0F                                                       09120000
FIRLN    DC    C'IEF314I SYSIO'                                         09140000
ENDLN    EQU   *                                                        09160000
MS32K    DC    C'IEF229I LRECL EXCEEDS 32K'                        VS0H 09162017
MS32E    EQU   *                                                   VS0H 09164017
MSGET    DC    C'IEF32OI STORAGE NOT AVAILABLE'                    VS0H 09166017
MSGEE    EQU   *                                                   VS0H 09168017
MSSEG    DC    C'IEF321I SEGMENT INVALID'                          VS0H 09170017
MSSEE    EQU   *                                                   VS0H 09172017
         END                                                            09180000
./  ADD  SSI=20830448,NAME=IEFSD088
         TITLE 'IEFSD088 - VMS SYSOUT TRANSITION ROUTINE'               00020000
*                                                                       00023020
*          RELEASE 22 DELETIONS/CHANGES                                 00026020
*          RELEASE 21 DELETIONS/CHANGES                                 00029020
*          RELEASE 20 DELETIONS/CHANGES                                 00032020
* 022800-043800,051000-058400                                    MAPMAC 00035020
*0772                                                            A35780 00037020
 TITLE 'IEFSD088' - THE TRANSITION ROUTINE                              00040000
*********************************************************************** 00060000
*                                                                     * 00080000
*STATUS CHANGE LEVEL 002                                                00100020
*                                                                     * 00120000
*FUNCTION OF THIS MODULE:                                             * 00140000
*                                                                     * 00160000
*OPERATION OF THIS MODULE:                                            * 00180000
*                                                                       00200000
*        WHEN A GROUP OF MESSAGES OR A DATASET IS TO BE WRITTEN BY      00220000
*        MEANS OF THE STANDARD OUTPUT ROUTINE OR A USERS SPECIAL        00240000
*        PROGRAM IT IS NECESSARY TO BUFFER THE MESSAGES FROM DATASETS   00260000
*        AND THE DATASETS FROM MESSAGES AND OTHER DATASETS. THIS        00280000
*        IS DONE BY PUTTING OUT EXTRA RECORDS BEFORE OR AFTER A         00300000
*        DATASET OR GROUP OF MESSAGES WHENEVER NECESSARY. IT IS         00320000
*        NECESSARY TO KEEP OVERPRINTING FROM OCCURING WHEN AN           00340000
*        ASA DATASET IS FOLLOWED BY A MACHINE DATASET. IT IS ALSO       00360000
*        NECESSARY, AT TIMES, TO PUT OUT EXTRA RECORDS AT THE END       00380000
*        OF A DATASET OR GROUP OF MESSAGES TO ALLOW A FINAL SPACE       00400000
*        CHARACTER TO BE EFFECTIVE. IT IS ALSO NECESSARY TO PUT         00420000
*        OUT EXTRA RECORDS AT THE END OF A DATASET OR GROUP OF          00440000
*        MESSAGES SO THAT IF THERE IS A PAUSE BEFORE A DATASET ALL      00460000
*        OF THE RECORDS WILL HAVE BEEN PRINTED OR PUNCHED BEFORE        00480000
*        THE PAUSE TAKES EFFECT.                                        00500000
*                                                                       00520000
*        THE FOLLOWING DIAGRAMS SHOW WHAT BUFFERING IS DONE AT THE      00540000
*        START AND END OF OUTPUTTING A GROUP OF MESSAGES OR A           00560000
*        DATASET. THE COMMENTS IN THE OUTPUT ROUTINE EXPLAIN THE        00580000
*        OUTPUTTING OF RECORDS OTHER THAN THOSE USED FOR BUFFERING      00600000
*                                                                       00620000
*                                                                       00640000
*              BUFFERING OF PRINTER TYPE RECORDS: MACHINE CONTROL CHAR. 00660000
*                                                                       00680000
*                       //-------/-------/-------//                     00700000
*   MACHINE C.C. IN     // P1 S1 / P2 S2 / P3 S3 //                     00720000
*                       //-------/-------/-------//                     00740000
*                                                                       00760000
*                                                                       00780000
*                   //-------/-------/-------/-------//                 00800000
*   ASA C.C. OUT    // S0 P1 / S1 P2 / S2 P3 / S3 P0 //                 00820000
*                   //-------/-------/-------/-------//                 00840000
*                                                                       00860000
*                       //-------/-------/-------/-------//             00880000
*   MACHINE C.C. OUT    // P1 S1 / P2 S2 / P3 S3 / P0 SX //             00900000
*                       //-------/-------/-------/-------//             00920000
*                                                                       00940000
*                       //-------/-------/-------/-------//             00960000
*   NO C.C. OUT         //  P1   /  P2   /  P3   /  P0   //             00980000
*                       //-------/-------/-------/-------//             01000000
*                                                                       01020000
*        P0 = A RECORD MADE UP OF BLANKS                                01040000
*        S0 = SPACE 1                                                   01060000
*        SX = SPACE SUPRESS                                             01080000
*        SN = SKIP TO CHANNEL 1                                         01100000
*                                                                       01120000
*              BUFFERING OF PRINTER TYPE RECORDS: ASA CONTROL CHAR.     01140000
*                       //-------/-------/-------//                     01160000
*   ASA C.C. IN         // S1 P1 / S2 P2 / S3 P3 //                     01180000
*                       //-------/-------/-------//                     01200000
*                                                                       01220000
*                                                                       01240000
*                       //-------/-------/-------/-------//             01260000
*   ASA C.C. OUT        // S1 P1 / S2 P2 / S3 P3 / SX P0 //             01280000
*                       //-------/-------/-------/-------//             01300000
*                                                                       01320000
*                   //-------/-------/-------/-------/-------//         01340000
*   MACHINE C.C. OUT// P0 S1 / P1 S2 / P2 S3 / P3 S0 / P0 SX //         01360000
*                   //-------/-------/-------/-------/-------//         01380000
*                                                                       01400000
*                       //-------/-------/-------/-------//             01420000
*   NO C.C. OUT         //  P1   /  P2   /  P3   /  P0   //             01440000
*                       //-------/-------/-------/-------//             01460000
*                                                                       01480000
*                                                                       01500000
*              BUFFERING OF PRINTER TYPE RECORDS: NO CONTROL CHAR.      01520000
*                                                                       01540000
*                       //-------/-------/-------//                     01560000
*   NO  C.C. IN         //  P1   /  P2   /  P3   //                     01580000
*                       //-------/-------/-------//                     01600000
*                                                                       01620000
*                                                                       01640000
*                       //-------/-------/-------/-------//             01660000
*   ASA C.C. OUT        // SN P1 / S0 P2 / S0 P3 / SX P0 //             01680000
*                       //-------/-------/-------/-------//             01700000
*                                                                       01720000
*                   //-------/-------/-------/-------/-------//         01740000
*   MACHINE C.C. OUT// P0 SN / P1 S0 / P2 S0 / P3 S0 / P0 SX //         01760000
*                   //-------/-------/-------/-------/-------//         01780000
*                                                                       01800000
*                       //-------/-------/-------/-------//             01820000
*   NO  C.C. OUT        //  P1   /  P2   /  P3   /  P0   //             01840000
*                       //-------/-------/-------/-------//             01860000
*                                                                       01880000
*              BUFFERING OF PUNCH TYPE RECORDS IS SIMPLER THAN          01900000
*              ABOVE. ALL THAT IS NECESSARY IS TO WRITE OUT AN          01920000
*              EXTRA BLANK RECORD WITH THE CONTROL CHARACTER            01940000
*              INDICATING STACKER 1.                                    01960000
*                                                                     * 01980000
*    ENTRY POINT 1 - IEFSD088 WHICH IS BRANCHED TO FROM IEFSD086,     * 02000000
*        IEFSD087, AND IEFSD089.                                      * 02020000
*                                                                     * 02040000
*    EXIT POINT 1 - BRANCH TO IEFSD089 TO DO THE OUTPUT ROUTINE.      * 02060000
*    OUTPUT AT EXIT POINT 1:                                          * 02080000
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB       * 02100000
*        ROUTINE.                                                     * 02120000
*        REGISTER 8 POINTS TO THE WORK AREA FOR STANDARD OUTPUT       * 02140000
*        ROUTINE.                                                     * 02160000
*                                                                     * 02180000
*EXTERNAL ROUTINES:                                                   * 02200000
*                                                                     * 02220000
*    IEFSD089  THE OUTPUT ROUTINE                                     * 02240000
*                                                                     * 02260000
*                                                                     * 04400000
*                                                                     * 04420000
*ATTRIBUTES - REENTRANT                                               * 04440000
*                                                                     * 04460000
*********************************************************************** 04480000
*                                                                       04500000
*                        NEEDED DSECTS                                  04520000
*                                                                       04540000
R0       EQU   0                                                        04560000
R1       EQU   1                                                        04580000
R2       EQU   2                                                        04600000
R3       EQU   3                                                        04620000
R4       EQU   4                                                        04640000
R5       EQU   5                                                        04660000
R6       EQU   6                                                        04680000
R7       EQU   7                                                        04700000
R8       EQU   8                                                        04720000
R9       EQU   9                                                        04740000
R10      EQU   10                                                       04760000
R11      EQU   11                                                       04780000
R12      EQU   12                                                       04800000
R13      EQU   13                                                       04820000
R14      EQU   14                                                       04840000
R15      EQU   15                                                       04860000
*DEFINE DCB LABELS FOR DCB OF MAXIMUM SIZE                              04880000
         DCBD  DSORG=PS                                                 04900000
*DEFINE DCB AND OPEN AND CLOSE. (EODAD,SYNAD,OPEN,AND CLOSE TO ADD)     04920000
TODCB    DSECT                                                          04940000
         DCB   DSORG=PS,                                               *04960000
               MACRF=GL,                                               *04980000
               BUFNO=2                                                  05000000
SPOPN    OPEN  (0,INPUT),MF=L                                           05020000
SPCLO    CLOSE (0),MF=L                                                 05040000
SPEXL    DC    F'0'                     DCB EXIT LIST                   05060000
BODCB    EQU   *                                                        05080000
         IEFSDWKT                                                MAPMAC 05280020
         IEFSDSDR                                                MAPMAC 05480020
*EQUATES                                                                05860000
ASASW    EQU   4                        ASA CONTROL CHARACTER           05880000
MACSW    EQU   2                        MACHINE CONTROL CHARACTER       05900000
VARSW    EQU   64                       VARIABLE SWITCH WHEN NOT FIXED  05920000
FIXSW    EQU   128                      FIXED SWITCH WHEN NOT VARIABLE  05940000
UNKSW    EQU   VARSW+FIXSW              UNKNOWN SWITCH                  05960000
*                                                                       05980000
*                   THIS ROUTINE BUFFERS DATASETS AND GROUPS            06000000
*                   OF MESSAGES SO THAT CHANGE OF INPUT CONTROL         06020000
*                   CHARACTERS FROM ASA TO MACHINE AND VICA             06040000
*                   VERSA DO NOT CAUSE TROUBLE AND SO THAT              06060000
*                   AT THE END OF PROCESSING DATASETS OR                06080000
*                   MESSAGES FOR UNIT RECORD DEVICES ALL                06100000
*                   RECORDS HAVE BEEN PRINTED OR PUNCHED.               06120000
*                                                                       06140000
*INITIALIZE                                                             06160000
IEFSD088 CSECT                                                          06180000
         BALR  R10,0                   SET BASE REGISTER                06200000
         USING *,R10                                                    06220000
         USING WORKLST,R7               SET PARAMETER BASE              06240000
         USING WKSOR,R8                 SET WORK AREA BASE              06260000
         USING IHADCB,R5                SET OUTPUT DCB BASE             06280000
*IS THIS PRINTER TYPE UNIT                                              06300000
         TM    VARBA,PUNSH              TEST FOR PUNCH IF SO            06320000
         BO    PUNRO                    BRANCH TO PUNCH ROUTINE         06340000
*IS THERE AN OUTPUT ASA CONTROL CHARACTER                               06360000
         L     R5,DCBOT                 GET OUTPUT DCB                  06380000
         TM    DCBRECFM,ASASW           TEST FOR ASA SWITCH IF NOT      06400000
         BZ    TOMCC                    BRANCH TO SEE IF MACHINE        06420000
*IS OLD SWITCH ON                                                       06440000
         TM    SORS1,OLDSW              TEST FOR END TRANSITION IF SO   06460000
         BO    TMICC                    BRANCH TO DO END TRANSITION     06480000
*IS THERE AN INPUT MACHINE CONTROL CHARACTER                            06500000
         TM    SORS1,MACHS              TEST FOR MACHINE SWITCH IF NOT  06520000
         BCR   8,R14                    RETURN                          06540000
*                                                                       06560000
*                   WHEN PRINTER TYPE WRITER, OUTPUT ASA,               06580000
*                   INPUT MACHINE, BUFFERING AT THE START               06600000
*                   CONSISTS OF MAKING ASA SPACE 1 THE                  06620000
*                   TRANSLATION OF THE CONTROL CHARACTER GOT            06640000
*                   FROM THE 'PREVIOUS' RECORD. IT WILL BE USED         06660000
*                   FOR THE FIRST RECORD WRITTEN OUT.                   06680000
*                                                                       06700000
*MAKE ASA SPACE 1 THE CONTROL CHARACTER FOR THE NEXT RECORD             06720000
         MVI   SAVEC,C' '                                               06740000
         BR    R14                      RETURN                          06760000
*IS THERE AN INPUT MACHINE CONTROL CHARACTER                            06780000
TMICC    TM    SORS1,MACHS              TEST FOR MACHINE SWITCH IF NOT  06800000
         BZ    ASPCC                    BRANCH TO MAKE ASA SUPRESS C.C. 06820000
*                                                                       06840000
*                   WHEN PRINTER TYPE WRITER, OUTPUT MACHINE,           06860000
*                   INPUT MACHINE, BUFFERING AT THE END                 06880000
*                   CONSISTS OF PUTTING OUT A BLANK LINE                06900000
*                   WITH SUPPRESS CONTROL CHARACTER. THIS               06920000
*                   IS DONE TO MAKE THE LAST RECORD BE                  06940000
*                   PUT OUT BEFORE MORE WORK IS FOUND AND               06960000
*                   A PAUSE MAY OCCUR.                                  06980000
*                                                                       07000000
*                                                                       07020000
*                   WHEN PRINTER TYPE WRITER, OUTPUT ASA,               07040000
*                   INPUT MACHINE, BUFFERING AT THE END                 07060000
*                   CONSISTS OF PUTTING OUT A BLANK LINE.               07080000
*                   THE SPACING CHARACTER WILL COME FROM                07100000
*                   THE LAST RECORD GOT. THE SUPRESS CONTROL            07120000
*                   CHARACTER TAKES EFFECT ON THE FOLLOWING             07140000
*                   RECORD IF MORE ARE NEEDED BEFORE PAUSE.             07160000
*                                                                       07180000
*PUT IN MACHINE SUPRESS CHARACTER                                       07200000
MSPCC    MVI   CONCH,X'01'                                              07220000
*                                                                       07240000
*                   WHEN PRINTER TYPE WRITER NO CONTROL                 07260000
*                   CHARACTER IN OUTPUT, INPUT ASA OR                   07280000
*                   MACHINE, BUFFERING AT THE END CONSISTS              07300000
*                   OF PUTTING OUT A BLANK LINE. THIS IS                07320000
*                   DONE TO MAKE THE LAST RECORD BE PUT                 07340000
*                   OUT BEFORE MORE WORK IS FOUND AND A                 07360000
*                   PAUSE MAY OCCUR.                                    07380000
*                                                                       07400000
*SET UP CONSTANTS FOR BLANK LINE                                        07420000
SCFBL    LA    R11,1                    MAKE LENGTH ONE                 07440000
         LA    R12,BLANK                BEGINNING OF RECORD A BLANK     07460000
         STM   R11,R12,INLSF            SAVE LOCATION AND BEGINNING     07480000
*DO OUTPUT ROUTINE                                                      07500000
DOUTR    L     R15,SD89EXIT             GET ADDRESS FOR EXIT            07520000
         BR    R15                      WILL NOT COME BACK TO HERE      07540000
*IS THERE AN OUTPUT MACHINE CONTROL CHARACTER                           07560000
TOMCC    TM    DCBRECFM,MACSW           TEST FOR MACHINE SWITCH IF NOT  07580000
         BZ    NCCOT                    BRANCH TO NO CONTROL CHAR.      07600000
*IS OLD SWITCH ON                                                       07620000
         TM    SORS1,OLDSW              TEST FOR END TRANSITION IF SO   07640000
         BO    SUFBL                    BRANCH TO DO END TRANSITION     07660000
*IS THERE AN INPUT MACHINE CONTROL CHARACTER                            07680000
         TM    SORS1,MACHS              TEST FOR MACHINE SWITCH IF SO   07700000
         BCR   1,R14                    RETURN                          07720000
*                                                                       07740000
*                   WHEN PRINTER TYPE WRITER, OUTPUT MACHINE,           07760000
*                   INPUT ASA, BUFFERING AT THE START CONSISTS          07780000
*                   OF SETTING UP AN INNOCUOUS LOCATION                 07800000
*                   NEEDED BY THE OUTPUT ROUTINE TO PUT A               07820000
*                   CHARACTER IN, AND PUTTING OUT A BLANK               07840000
*                   LINE WHICH WILL GET THE CONTROL FROM THE            07860000
*                   FIRST ASA RECORD.                                   07880000
*                                                                       07900000
*MAKE LOCATION TO PUT FIRST CONTROL CHARACTER IN                        07920000
         LA    R4,LOCAT                 GET USELESS LOCATION            07940000
         ST    R4,LOCAT                 TO PUT FIRST CONTROL CHAR. IN   07960000
*MAKE ASA SPACE 1 THE CONTROL CHARACTER                                 07980000
MASPO    MVI   CONCH,C' '                                               08000000
         B     SCFBL                    BRANCH TO SET UP FOR BLANK LINE 08020000
*IS THERE AN INPUT MACHINE CONTROL CHARACTER                            08040000
SUFBL    TM    SORS1,MACHS              TEST FOR MACHINE SWITCH IF SO   08060000
         BO    MSPCC                    BRANCH TO USE MACHINE SUPRESS   08080000
*                   WHEN PRINTER TYPE WRITER, OUTPUT MACHINE,           08100000
*                   INPUT ASA, BUFFERING AT THE END CONSISTS            08120000
*                   OF PUTTING A SPACE 1 CONTROL CHARACTER         285  08140000
*                   IN THE PREVIOUS LINE AND PUTTING OUT           285  08160000
*                   A BLANK LINE WITH A SUPRESS SPACE.             285  08180000
*                   CONTROL CHARACTER. THIS IS DONE TO MAKE             08200000
*                   THE LAST RECORD BE PUT OUT BEFORE MORE              08220000
*                   WORK IS FOUND AND A PAUSE MAY OCCUR.                08240000
*                                                                       08260000
*MAKE MACHINE SUPRESS THE CONTROL CHARACTER FOR LAST LINE          285  08280000
         MVI   SAVEC,X'01'                                         285  08300000
         B     MASPO                    BRANCH TO USE SPACE 1           08320000
*                                                                       08340000
*                   WHEN PRINTER TYPE WRITER OUTPUT ASA,                08360000
*                   INPUT ASA, BUFFERING AT THE END CONSISTS            08380000
*                   OF PUTTING OUT A BLANK LINE WITH SUPRESS            08400000
*                   CONTROL CHARACTER. THIS IS DONE TO MAKE             08420000
*                   THE LAST RECORD BE PUT OUT BEFORE MORE              08440000
*                   WORK IS FOUND AND A PAUSE MAY OCCUR.                08460000
*                                                                       08480000
*MAKE ASA SUPRESS THE CONTROL CHARACTER                                 08500000
ASPCC    MVI   CONCH,C'+'                                               08520000
         B     SCFBL                    BRANCH TO SET UP FOR BLANK LINE 08540000
*IS OLD SWITCH ON                                                       08560000
NCCOT    TM    SORS1,OLDSW              TEST FOR OLD SWITCH IF ON       08580000
         BO    SCFBL                    BRANCH TO SET UP FOR BLANK LINE 08600000
         BR    R14                      RETURN                          08620000
*IS OLD SWITCH ON                                                       08640000
PUNRO    TM    SORS1,OLDSW              TEST FOR END TRANSITION IF NOT  08660000
         BCR   8,R14                    RETURN                          08680000
*                                                                       08700000
*                   WHEN PUNCH TYPE WRITER BUFFERING AT THE             08720000
*                   END CONSISTS OF PUTTING OUT 3 BLANK LINES           08740000
*                   WITH ASA OR MACHINE STACKER 1 CONTROL               08760000
*                   CHARACTER AS IS NECESSARY. THIS IS DONE             08780000
*                   TO MAKE THE LAST RECORD BE PUT OUT BEFORE           08800000
*                   MORE WORK IS FOUND AND A PAUSE MAY OCCUR.           08820000
*                                                                       08840000
*MAKE ASA STACKER 1 THE CONTROL CHARACTER                               08860000
         MVI   CONCH,C'V'                                               08880000
*IS THERE AN INPUT MACHINE CONTROL CHARACTER                            08900000
         TM    SORS1,MACHS              TEST FOR MACHINE SWITCH IF NOT  08920000
         BZ    SCFBL                    BRANCH TO SET UP FOR BLANK CARD 08940000
*MAKE MACHINE STACKER 1 THE CONTROL CHARACTER                           08960000
         MVI   CONCH,X'01'              PUT IN 2540 STACKER 1           08980000
         TM    VARBA,FTFTW              TEST FOR PUNCH IS 1442 IF NOT   09000000
         BZ    SCFBL                    BRANCH TO SET UP FOR BLANK CARD 09020000
         MVI   CONCH,X'81'              PUT IN 1442 STACKER 1           09040000
         B     SCFBL                    BRANCH TO SET UP FOR BLANK CRAD 09060000
*CONSTANTS                                                              09080000
         DS    0F                                                       09100000
SD89EXIT DC    V(IEFSD089)              OUTPUT ROUTINE                  09120000
BLANK    DC    C' '                     BLANK TO WRITE BLANK RECORD     09140000
         END                                                            09160000
./  ADD  SSI=20830445,NAME=IEFSD089
         TITLE 'IEFSD089 - VMS SYSOUT OUTPUT ROUTINE'                   00020000
*                                                                       00023020
*          RELEASE 22 DELETIONS/CHANGES                                 00026020
*          RELEASE 21 DELETIONS/CHANGES                                 00029020
*          RELEASE 20 DELETIONS/CHANGES                                 00032020
*1043088840,089008,089016,089040,089070                          A38032 00033020
* 008400-029400,036600-044189                                    MAPMAC 00035020
*1043                                                            A35780 00037020
*1043087060-087240                                               A35926 00038020
 TITLE 'IEFSD089' - THE OUTPUT ROUTINE                                  00040000
*********************************************************************** 00060000
*                                                                     * 00080000
*STATUS CHANGE LEVEL 005                                                00100020
*                                                                     * 00120000
*FUNCTION OF THIS MODULE:                                             * 00140000
*                                                                     * 00160000
*    1. PUT THE RECORD TO BE OUTPUT INTO THE CORRECT FORM FOR THIS    * 00180000
*       SYSOUT WRITER AND PUT IT OUT.                                 * 00200000
*    2. MAKE UP AN ERROR RECORD IF A CONTROL CHARACTER IN AN INPUT    * 00220000
*       RECORD CAN NOT BE TRANSLATED INTO A MEANINGFUL CONTROL        * 00240000
*       CHARACTER FOR THE OUTPUT WRITER. THEN PUT IT OUT AND PASS     * 00260000
*       OVER THE INPUT DATASET THAT CONTAINED IT.                     * 00280000
*    3. IN CASE OF SYSOUT WRITER UNIT FAILURE REENQUEUE THE REST OF   * 00300000
*       THE JOB TO BE DONE SO THAT ANOTHER WRITER CAN FINISH IT AND   * 00320000
*       PASS ON AN INDICATION OF THE KIND OF ERROR THAT OCCURRED.     * 00340000
*    4. IN CASE THERE IS VARIABLE SPANNED INPUT OR OUTPUT          VS0H 00345017
*       THE SPAN ROUTINE (IEFSDXXX) IS USED TO MAKE UP THE         VS0H 00350017
*       RECORD TO BE PUT RATHER THAN THIS ROUTINE                  VS0H 00355017
*                                                                     * 00360000
*OPERATION OF THIS MODULE:                                            * 00380000
*                                                                     * 00400000
*    ENTRY POINT 1 - IEFSD089 WHICH IS BRANCHED TO FROM IEFSD086,     * 00420000
*        IEFSD087, AND IEFSD088.                                      * 00440000
*    INPUT AT ENTRY POINT 1:                                          * 00460000
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB       * 00480000
*        ROUTINE.                                                     * 00500000
*        REGISTER 8 POINTS TO THE WORK AREA FOR STANDARD OUTPUT       * 00520000
*        ROUTINE.                                                     * 00540000
*                                                                     * 00560000
*    EXIT POINT 0.5 - BRANCH TO IEFSDXXX TO HANDLE THE RECORD      VS0H 00561017
*       OBTAINED BY GET. IT WILL BE MOVED INTO THE PUT AREA.       VS0H 00562017
*    INPUT AT EXIT POINT 0.5:                                      VS0H 00563017
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB    VS0H 00564017
*        ROUTINE.                                                  VS0H 00565017
*        REGISTER 8 POINTS TO THE PARAMETER LIST GIVEN TO SMB AND  VS0H 00566017
*        DSB PROCESSING ROUTINES.                                  VS0H 00567017
*                                                                  VS0H 00568017
*    EXIT POINT 0.7 - BRANCH TO IEFSDXXX TO HANDLE THE AREA        VS0H 00569017
*       OBTAINED BY PUT. THE OUTPUT RECORDS WILL BE PUT            VS0H 00570017
*       FROM HERE.                                                 VS0H 00571017
*    EXIT POINT 0.5 - BRANCH TO IEFSDXXX TO INITIALIZE THE SPAN    VS0H 00572017
*        CONTROL AREA IF OUTPUT IS VARIABLE SPANNED.               VS0H 00573017
*    INPUT AT EXIT POINT 0.7:                                      VS0H 00574017
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB    VS0H 00575017
*        ROUTINE.                                                  VS0H 00576017
*        REGISTER 8 POINTS TO THE PARAMETER LIST GIVEN TO SMB AND  VS0H 00577017
*        DSB PROCESSING ROUTINES.                                  VS0H 00578017
*                                                                  VS0H 00579017
*    EXIT POINT 1 - BRANCH TO IEFSD088 TO MAKE MORE BLANK RECORDS FOR * 00580000
*        OUTPUT IN ORDER TO CLEAR OUT THE PUNCH.                      * 00600000
*    OUTPUT AT EXIT POINT 1:                                          * 00620000
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB       * 00640000
*        ROUTINE.                                                     * 00660000
*        REGISTER 8 POINTS TO THE WORK AREA FOR STANDARD OUTPUT       * 00680000
*        ROUTINE.                                                     * 00700000
*                                                                     * 00720000
*EXTERNAL ROUTINES:                                                   * 00740000
*                                                                     * 00760000
*    IEFSD088  THE TRANSITION ROUTINE                                 * 00780000
*    IEFSD89M  MESSAGES FOR IEFSD089                                  * 00800000
*   IEFSDXXX   SPANNED DATASETS ROUTINE                            VS0H 00810017
*                                                                     * 00820000
*                                                                     * 02960000
*                                                                     * 02980000
*ATTRIBUTES - REENTRANT                                               * 03000000
*                                                                     * 03020000
*********************************************************************** 03040000
*                                                                       03060000
*                        NEEDED DSECTS                                  03080000
*                                                                       03100000
R0       EQU   0                                                        03120000
R1       EQU   1                                                        03140000
R2       EQU   2                                                        03160000
R3       EQU   3                                                        03180000
R4       EQU   4                                                        03200000
R5       EQU   5                                                        03220000
R6       EQU   6                                                        03240000
R7       EQU   7                                                        03260000
R8       EQU   8                                                        03280000
R9       EQU   9                                                        03300000
R10      EQU   10                                                       03320000
R11      EQU   11                                                       03340000
R12      EQU   12                                                       03360000
R13      EQU   13                                                       03380000
R14      EQU   14                                                       03400000
R15      EQU   15                                                       03420000
*DEFINE DCB LABELS FOR DCB OF MAXIMUM SIZE                              03440000
         DCBD  DSORG=PS                                                 03460000
*DEFINE DCB AND OPEN AND CLOSE. (EODAD,SYNAD,OPEN,AND CLOSE TO ADD)     03480000
TODCB    DSECT                                                          03500000
         DCB   DSORG=PS,                                               *03520000
               MACRF=GL,                                               *03540000
               BUFNO=2                                                  03560000
SPOPN    OPEN  (0,INPUT),MF=L                                           03580000
SPCLO    CLOSE (0),MF=L                                                 03600000
SPEXL    DC    F'0'                     DCB EXIT LIST                   03620000
BODCB    EQU   *                                                        03640000
         IEFSDWKT                                                MAPMAC 03740020
         IEFSDSDR                                                MAPMAC 03840020
         IEFSDPAR                                                MAPMAC 03940020
         IEFSDSMF                                                MAPMAC 04040020
*EQUATES                                                                04420000
ASASW    EQU   4                        ASA CONTROL CHARACTER           04440000
MACSW    EQU   2                        MACHINE CONTROL CHARACTER       04460000
NOTLA    EQU   X'1'                     NOT LAST SEGMENT           VS0H 04465017
NOTFI    EQU   X'2'                     NOT FIRST SEGMENT          VS0H 04470017
VARSP    EQU   X'48'                    VARIABLE SPANNED RECFM     VS0H 04475017
VARSW    EQU   64                       VARIABLE SWITCH WHEN NOT FIXED  04480000
FIXSW    EQU   128                      FIXED SWITCH WHEN NOT VARIABLE  04500000
UNKSW    EQU   VARSW+FIXSW              UNKNOWN SWITCH                  04520000
*                                                                       04540000
*                   THIS ROUTINE HAS TWO PARTS. THE FIRST               04560000
*                   TRANSLATES THE CONTROL CHARACTER IF REQUIRED        04580000
*                   AND PUTS IT WHERE NEEDED. THE SECOND TAKES          04600000
*                   THE INPUT INFORMATION AND MAKES AN OUTPUT           04620000
*                   RECORD FROM IT.                                     04640000
*                                                                       04660000
*INITIALIZE                                                             04680000
IEFSD089 CSECT                                                          04700000
*3289047100-047150,089400                                          SM0I 04710018
*                                                                A20574 04715018
*                                                                 M2323 04717018
*                                                                 M2380 04718018
         BALR  R10,0                    SET BASE REGISTER               04720000
         USING *,R10                                                    04740000
         USING WORKLST,R7               SET PARAMETER BASE              04760000
         USING WKSOR,R8                 SET WORK AREA BASE              04780000
         USING IHADCB,R5                SET OUTPUT DCB BASE             04800000
         ST    R14,BALRG                SAVE RETURN REGISTER            04820000
*PUT IN OUTPUT SYNAD ROUTINE ADDRESS                                    04840000
         L     R5,DCBOT                 GET OUTPUT DCB                  04860000
         MVC   DCBSYNAD+1(3),ADOUE+1    MOVE IN OUTPUT ERROR ROUTINE    04880000
*IS A SUBSEQUENT SEGMENT BEING HANDLED                             VS0H 04885017
         TM    SEGIN,NOTFI              IF SUBSEQUENT SEGMENT THEN VS0H 04890017
         BO    OUTPT                    AVOID C.C. FIX             VS0H 04895017
*DOES THE OUTPUT RECORD REQUIRE A CONTROL CHARACTER                     04900000
         TM    DCBRECFM,ASASW+MACSW     TEST FOR NO CONTROL CHAR.       04920000
         BZ    OUTPT                    BRANCH TO OUTPUT RECORD         04940000
*                                                                       04960000
*                        FIRST PART OF IEFSD089                         04980000
*                   IF THE INPUT DATASET HAS MACHINE TYPE               05000000
*                   CONTROL CHARACTERS AND THE OUTPUT DATASET           05020000
*                   HAS ASA CONTROL CHARACTERS, OR VICA VERSA,          05040000
*                   THEN THE INPUT TYPE MUST BE TRANSLATED              05060000
*                   TO THE OUTPUT TYPE. THERE ARE TWO KINDS             05080000
*                   OF TRANSLATIONS, THOSE FOR PRINTER AND              05100000
*                   THOSE FOR PUNCHES. THERE ARE TWO DIFFERENT          05120000
*                   KINDS OF MACHINE CONTROL CHARACTERS FOR             05140000
*                   PUNCHES SO IF THE WRITER IS A 1442 PUNCH            05160000
*                   A SOMEWHAT DIFFERENT TRANSLATION IS USED.           05180000
*                                                                       05200000
*IS THE OUTPUT UNIT OF PRINTER TYPE                                     05220000
         SR    R4,R4              CLEAR FOR C/C                   M2380 05230018
         IC    R4,CONCH                 GET CONTROL CHARACTER           05240000
         TM    VARBA,PUNSH              TEST FOR PUNCH TYPE IF NOT      05260000
         BZ    TTAMC                    BRANCH TO TRANSLATE FOR PRINTER 05280000
*                                                                       05300000
*                   AFTER THE CONTROL CHARACTER IS OBTAINED             05320000
*                   IT MUST BE PUT IN THE CORRECT RECORD.               05340000
*                   MACHINE CONTROL CHARACTER FOR THE PRINTER           05360000
*                   ARE USED TO COMMAND SPACING OR SKIPPING             05380000
*                   AFTER THE LINE IS PRINTED. ASA CONTROL              05400000
*                   CHARACTERS FOR THE PRINTER ARE USED TO              05420000
*                   COMMAND SPACING OR SKIPPING BEFORE THE              05440000
*                   LINE IS PRINTED.                                    05460000
*                   SO IF THE INPUT FORMAT IS MACHINE AND THE           05480000
*                   OUTPUT IS ASA THE CONTROL CHARACTER FROM            05500000
*                   A RECORD MUST BE ATTACHED TO THE FOLLOWING          05520000
*                   RECORD IN ORDER TO MAKE ITS SPACING OCCUR           05540000
*                   BETWEEN THE RECORD AND THE FOLLOWING ONE.           05560000
*                   ON THE OTHER HAND, IF THE INPUT FORMAT IS           05580000
*                   ASA AND THE OUTPUT IS MACHINE THE CONTROL           05600000
*                   CHARACTER FROM A RECORD MUST BE ATTACHED            05620000
*                   TO THE PREVIOUS RECORD IN ORDER TO MAKE             05640000
*                   ITS SPACING OCCUR BEFORE THE RECORD.                05660000
*                   WHEN INPUT RECORDS HAVE NO CONTROL CHARACTERS       05680000
*                   ASA CHARACTERS ARE MADE FOR THEM. THESE             05700000
*                   ARE TREATED JUST AS REGULAR ASA CHARACTERS.         05720000
*                                                                       05740000
*IS THERE A TRANSLATION FROM ASA TO MACHINE                             05760000
         TM    DCBRECFM,ASASW           TEST FOR ASA CNTRL CHAR. OUTPUT 05780000
         BO    TFOAS                    BRANCH TO OUTPUT ASA IF SO      05800000
         TM    SORS1,MACHS              TEST FOR MACH CNTRL CHAR INPUT  05820000
         BO    PCHTEST            GO VALIDITY-CHECK C/C          A20574 05840018
*TRANSLATE ASA TO MACHINE FOR PUNCH                                     05860000
         LA    R4,X'01'                 GET 2540 STACKER 1              05880000
         CLI   CONCH,C'W'               COMPARE C.C. TO W               05900000
         BNE   TFORT                    BRANCH AS STACKER 1 IS COMMAND  05920000
         LA    R4,X'41'                 GET 2540 STACKER 2              05940000
TFORT    TM    VARBA,FTFTW              TEST FOR 1442 IF NOT            05960000
         BZ    CCTTR                    BRANCH AROUND GETTING 1442 C.C. 05980000
         LA    R4,X'80'(R4)             CHANGE 2540 CHAR. TO 1442 FORM  06000000
         B     CCTTR                    BRANCH OUT AS TRANSLATE DONE    06020000
*IS THERE A TRANSLATION FROM MACHINE TO ASA                             06040000
TFOAS    TM    SORS1,MACHS              TEST FOR MACH CNTRL CHAR INPUT  06060000
         BZ    CCTTR                    BRANCH OUT BOTH C.C. ASA        06080000
*IS THE MACHINE CHARACTER LEGITIMATE                                    06100000
         LA    R4,C'V'                  GET ASA POCKET 1                06120000
         TM    CONCH,X'1E'              TEST FOR ILLEGAL BITS IF SO     06140000
         BNE   BCCCO                    BRANCH TO CORRECTIVE            06160000
         TM    CONCH,X'01'              TEST FOR NECESSARY BIT IF NOT   06180000
         BZ    BCCCO                    BRANCH TO CORRECTIVE            06200000
         TM    VARBA,FTFTW              TEST FOR 1442 IF NOT            06220000
         BZ    TESPU                    BRANCH TO 2540 TESTING          06240000
         TM    CONCH,X'80'              TEST FOR NECESSARY BIT IF NOT   06260000
         BZ    BCCCO                    BRANCH TO CORRECTIVE            06280000
         B     TFOMC                    BRANCH TO TRANSLATE             06300000
TESPU    TM    CONCH,X'C0'              TEST FOR ILLEGAL PATTERN IF SO  06320000
         BO    BCCCO                    BRANCH TO CORRECTIVE            06340000
*TRANSLATE MACHINE TO ASA FOR PUNCH                                     06360000
TFOMC    LA    R4,C'V'                  GET POCKET 1                    06380000
         TM    CONCH,X'40'              TEST FOR POCKET 2 IF NOT        06400000
         BZ    CCTTR                    BRANCH OUT AS TRANSLATE DONE    06420000
         LA    R4,C'W'                  GET POCKET 2                    06440000
*SAVE CONTROL CHARACTER FOR THIS RECORD                                 06460000
CCTTR    STC   R4,SAVEC                                                 06480000
         B     OUTPT                    BRANCH TO OUTPUT                06500000
*BAD CONTROL CHARACTER CORRECTIVE                                       06520000
BCCCO    STC   R4,SAVEC                 WILL SPACE 1 BEFORE LINE        06540000
         MVI   SEGIN,0                  MAKE INPUT SEGMENT 0       VS0H 06550017
         L     R11,IEFSDM89             SET UP MESSAGE BASE             06560000
         USING IEFSD89M,R11                                             06580000
*SET UP MESSAGE                                                         06600000
         LA    R12,FIRLN                GET START OF MESSAGE            06620000
         LA    R11,ENDLN-FIRLN          GET LENGTH OF MESSAGE           06640000
         STM   R11,R12,INLSF            SAVE MESSAGE PARAMETERS         06660000
*TURN ON PERMANENT IO INPUT ERROR SWITCH                                06680000
         OI    SORS1,INERS                                              06700000
         B     OUTPT                    BRANCH TO PUT OUT MESSAGE       06720000
*             THIS ROUTINE TESTS TO SEE IF THE 'ONE' BIT IS             06720518
*             ON IN THE CONTROL CHARACTER.  IF IT IS NOT, THE           06721018
*             CHARACTER IS INVALID.  IF THE 'ONE' BIT IS ON,            06721518
*             THE CHARACTER IS DIVIDED BY TWO AND TESTED FOR            06722018
*             VALIDITY.  THE FUNCTION BYTES IN THE TRANSLATE            06722518
*             TABLE REFLECT THE FACT THAT THE ARGUMENT BYTE HAS         06723018
*             BEEN SHIFTED RIGHT ONE POSITION.                          06723518
PTRTEST  TM    CONCH,X'01'        DOES C/C HAVE NECESSARY BIT    A20574 06724018
         BZ    ERRTNE1            ILLEGAL C/C                    A20574 06724518
         SRL   R4,1               DIVIDE C/C BY 2                A20574 06725018
         STC   R4,SAVEC           PREPARE FOR TEST               A20574 06725518
         TRT   SAVEC(1),PRINTRT   IS C/C VALID                   A20574 06726018
         BNZ   ERRTNE1            INVALID                        A20574 06726518
         MVC   SAVEC(1),CONCH     SAVE GOOD C/C                  A20574 06727018
         B     OUTPT              GO TO PUT OUT RECORD           A20574 06727518
ERRTNE1  MVI   SAVEC,X'09'        MAKE SPACE 1 THE C/C           A20574 06728018
         B     OUTPT              GO PUT OUT RECORD              A20574 06728518
PCHTEST  TM    CONCH,X'01'        TEST FOR NECESSARY C/C BIT     A20574 06729018
         BZ    ERRTNE2            ILLEGAL MACHINE C/C            A20574 06729518
         SRL   R4,1               DIVIDE C/C BY 2                A20574 06730018
         STC   R4,SAVEC           PREPARE FOR VALIDITY CHECK     A20574 06730518
         TM    VARBA,FTFTW        TEST FOR 1442 PUNCH            A20574 06731018
         BO    TST1442            GO TO VALIDITY CHECK           A20574 06731518
         TRT   SAVEC(1),TR2540    IS C/C VALID FOR 2540          A20574 06732018
         BNZ   SS2540             GO TO ERROR RTNE               A20574 06732518
MOVECC   MVC   SAVEC(1),CONCH     SAVE GOOD C/C                  A20574 06733018
         B     OUTPT              GO TO PUT OUT RECORD           A20574 06733518
ERRTNE2  TM    VARBA,FTFTW        TEST FOR 1442 PUNCH            A20574 06734018
         BZ    SS2540             NOT 1442                       A20574 06734518
SS1442   MVI   SAVEC,X'81'        SELECT STACKER 1 FOR 1442      A20574 06735018
         B     OUTPT              GO TO PUT OUT RECORD           A20574 06735518
SS2540   MVI   SAVEC,X'01'        SELECT STACKER 1 FOR 2540      A20574 06736018
         B     OUTPT              GO TO PUT OUT RECORD           A20574 06736518
TST1442  TRT   SAVEC(1),TR1442    IS C/C VALID FOR 1442          A20574 06737018
         BNZ   SS1442             INVALID-GO TO ERROR RTNE       A20574 06737518
         B     MOVECC             GO SAVE THE C/C                A20574 06738018
*IS THERE A TRANSLATION FROM ASA TO MACHINE                             06740000
TTAMC    TM    DCBRECFM,ASASW           TEST FOR ASA CNTRL CHAR. OUTPUT 06760000
         BO    TFIMA                    BRANCH TO OUTPUT ASA IF SO      06780000
         TM    SORS1,MACHS              TEST FOR MACH CNTRL CHAR INPUT  06800000
         BO    PTRTEST            GO TEST C/C FOR PRINTER        A20574 06820018
*TRANSLATE ASA TO MACHINE FOR PRINTER                                   06840000
         LA    R4,X'09'                 PUT IN ASA SPACE1               06860000
         CLI   CONCH,C' '               TEST FOR IT IF SO               06880000
         BE    CCTPR                    BRANCH OUT AS DONE              06900000
         LA    R4,X'11'                 SPACE 2                         06920000
         CLI   CONCH,C'0'                                               06940000
         BH    SKICH                    BRANCH TO SEE IF SKIP 1 TO 9    06960000
         BE    CCTPR                                                    06980000
         LA    R4,X'19'                 SPACE 3                         07000000
         CLI   CONCH,C'-'                                               07020000
         BE    CCTPR                                                    07040000
         LA    R4,X'01'                 SPACE 0                         07060000
         CLI   CONCH,C'+'                                               07080000
         BE    CCTPR                                                    07100000
         LA    R4,X'D1'                 SKIP TO CHANNEL 10              07120000
         CLI   CONCH,C'A'                                               07140000
         BE    CCTPR                                                    07160000
         LA    R4,X'D9'                 SKIP TO CHANNEL 11              07180000
         CLI   CONCH,C'B'                                               07200000
         BE    CCTPR                                                    07220000
         LA    R4,X'E1'                 SKIP TO CHANNEL 12              07240000
         CLI   CONCH,C'C'                                               07260000
         BE    CCTPR                                                    07280000
DEFLT    LA    R4,X'09'                 PUT IN ASA SPACE 1 AS DEFAULT   07300000
         B     CCTPR                    BRANCH OUT AS DONE              07320000
SKICH    CLI   CONCH,C'9'               TEST FOR CHARACTER IS DEFAULT   07340000
         BH    DEFLT                    BRANCH TO SPACE 1 CHAR. IF SO   07360000
         LA    R4,X'01'                 PUT IN BASIC SKIP CHARACTER     07380000
         IC    R3,CONCH                 GET ASA CHARACTER               07400000
         SLL   R3,3                     ALIGN THEM TO MAKE MACH. CHAR.  07420000
         OR    R4,R3                    MAKE MACHINE CHARACTER          07440000
*PUT CONTROL CHARACTER IN PREVIOUS RECORD                               07460000
CCTPR    L     R3,LOCAT                 GET C.C. POSITION FROM PREVIOUS 07480000
         STC   R4,0(R3)                 PUT CONTROL CHARACTER THERE     07500000
         B     OUTPT                    BRANCH TO OUTPUT RECORD         07520000
*IS THERE A TRANSLATE FROM MACHINE TO ASA                               07540000
TFIMA    TM    SORS1,MACHS              TEST FOR MACH CNTRL CHAR INPUT  07560000
         BZ    CCTTR                    BRANCH OUT BOTH C.C. ASA        07580000
*IS THE MACHINE CHARACTER LEGITIMATE                                    07600000
         LA    R4,C' '                  GET ASA SPACE 1                 07620000
         STC   R4,SAVED                 USE IT AS GUIDE                 07640000
         IC    R3,CONCH                 GET OFFSET FROM MACH CNTRL CHAR 07660000
         N     R3,ONETW                 SAVE -1111--- BITS ONLY         07680000
         SRL   R3,3                     PUT THESE IN OFFSETTING FORM    07700000
         TM    CONCH,X'02'                 TEST FOR ______1_ IF NOT     07720000
         BZ    REGTS                       BRANCH TO NORMAL TEST        07740000
         NI    CONCH,X'FD'                 TURN OFF IMMEDIATE BIT       07760000
         L     R12,INLOC                   FIND LOCATION OF RECORD      07780000
         L     R15,WOXXX                IF SPANNING USED           VS0H 07785017
         LTR   R15,R15                                             VS0H 07790017
         BNZ   REGTS                    THEN DONT SUPRESS PRINT    VS0H 07795017
         MVI   0(R12),X'40'                PUT IN ONE BLANK             07800000
         MVC   INLSF(4),ONELY              MAKE LENGTH OF RECORD 1      07820000
REGTS    TM    CONCH,X'06'                 TEST FOR _____00_ IF NOT     07840000
         BNE   BCCCO                    BRANCH TO CORRECTIVE            07860000
         TM    CONCH,X'01'              TEST FOR -----001 IF NOT        07880000
         BZ    BCCCO                    BRANCH TO CORRECTIVE            07900000
         TM    CONCH,X'E0'              TEST FOR 000--001 IF SO         07920000
         BZ    TMAPR                    BRANCH TO TRANSLATE             07940000
         CLI   CONCH,X'89'              TEST FOR 10001001 OR HIGHER     07960000
         BL    BCCCO                    BRANCH TO CORRECTIVE IF NOT     07980000
         CLI   CONCH,X'E1'              TEST FOR 1110001 OR LOWER       08000000
         BH    BCCCO                    BRANCH TO CORRECTIVE IF NOT     08020000
         LA    R3,3(R3)                 FIX OFFSETTING ADDRESS          08040000
*TRANSLATE MACHINE TO ASA FOR PRINT                                     08060000
TMAPR    IC    R4,TRMAT(R3)             GET THE ASA CHARACTER           08080000
*SAVE CONTROL CHARACTER FOR FOLLOWING RECORD                            08100000
         STC   R4,SAVED                                                 08120000
*                                                                       08140000
*                        SECOND PART OF IEFSD089                        08160000
*                   THE INPUT RECORD IS IN STANDARD FORM WITH           08180000
*                   CONTROL CHARACTER TAKEN CARE OF, LENGTH             08200000
*                   SAVED AND START OF THE RECORD PROPER SAVED.         08220000
*                   THIS WILL BE PUT IN THE FORM NECESSARY FOR          08240000
*                   OUTPUT; VARIABLE OR FIXED, WITH CONTROL             08260000
*                   CHARACTER OR NOT AS REQUIRED BY THE FORMAT          08280000
*                   OF THE OUTPUT DATASET.                              08300000
*                                                                       08320000
*IS THERE A SPANNING MODULE                                        VS0H 08322017
OUTPT    L     R15,WOXXX                GET ADDRESS OF SPANNING MODVS0H 08324017
         LTR   R15,R15                  IF IT IS 0 THEN            VS0H 08326017
         BZ    OUTPX                    AVOID SPANNING             VS0H 08328017
         BALR  R14,R15                  GO TO SPANNING MODULE      VS0H 08330017
         B     *+4(R15)                 USE RETURN CODE FOR BRANCH VS0H 08332017
         B     PUTLG                    BRANCH TO PUT FOR SPANNING VS0H 08334017
         B     TBCTS                    BRANCH TO GET FOR SPANNING VS0H 08336017
*IS THIS FIXED OUTPUT                                                   08340000
OUTPX    TM    DCBRECFM,UNKSW           IF UNKNOWN OUTPUT THEN     VS0H 08360017
         BO    GSNFR                    BRANCH TO NON FIXED ROUTINE     08380000
         TM    DCBRECFM,FIXSW           TEST FOR FIXED OUTPUT IF SO     08400000
         BO    GSOFX                    BRANCH TO MAKE FIXED OUTPUT     08420000
*GET SIZE OF OUTPUT RECORD AND ITS SIZE WITHOUT CONTROL INFORMATION     08440000
GSNFR    L     R2,INLSF                 GET INPUT SIZE FOR START        08460000
         LR    R3,R2                                                    08480000
         SR    R1,R1                    GET 0 TO MODIFY WITH       VS0H 08490017
         TM    DCBRECFM,ASASW+MACSW     TEST FOR OUTPUT HAS NO C.C.     08500000
         BZ    TFVAR                    BRANCH AROUND CHANGING LENGTH   08520000
         LA    R2,1(R2)                 MAKE FULL LENTH 1 MORE          08540000
TFVAR    TM    DCBRECFM,UNKSW           TEST FOR UNKNOWN OUTPUT IF SO   08560000
         BNM   TFSMR                    BRANCH AROUND FIX LENGTH   VS0H 08570017
         S     R1,FOURY                 GET -4 TO MODIFY WITH      VS0H 08580017
         LA    R2,4(R2)                 MAKE FULL LENGTH 4 MORE         08600000
TFSMR    C     R2,ATEEN                 TEST FOR RECORDS UNDER 18 LONG  08620000
         BNL   TFOBS                    BRANCH AROUND CHANGING LENGTH   08640000
         SR    R3,R2                                                    08660000
         LA    R2,18                    MAKE FULL LENGTH 18 AND         08680000
         AR    R3,R2                    ADJUST LENGTH PROPER            08700000
TFOBS    TM    DCBBLKSI,X'F0'           IS BLOCKSIZE IN DCB      A35926 08705020
         BO    TFBUF                    IF NOT USE BUFFER SIZE   A35926 08710020
         AH    R1,DCBBLKSI              GET BLOCKSIZE TO COMPARE A35926 08715020
         B     TFOBT                    BYPASS BUFFER SIZE       A35926 08720020
TFBUF    AH    R1,DCBBUFL               GET BUFFER LENGTH        A35926 08725020
TFOBT    CR    R2,R1                    TEST REC. TOO BIG FOR BUFF VS0H 08730017
         BNH   SVRLP                    BRANCH AROUND CHANGING LENGTH   08740000
         SR    R3,R2                                                    08760000
         LR    R2,R1                    MAKE FULL LENGTH BUFF. SIZEVS0H 08780017
         AR    R3,R2                    ADJUST LENGTH PROPER            08800000
SVRLP    STH   R2,DCBLRECL              SAVE RECORD LENGTH FOR PUT      08820000
*PUT LOGICAL WITH RECORD SIZE                                           08840000
PUTLG    LR    R1,R5                    GET OUTPUT DCB ADDRESS          08860000
         PUT   (1)                                                      08880000
         B     REGPT                    GO TO SMF ROUTINE        A38032 08880520
*IS THERE SPANNING TO BE DONE                                      VS0H 08881017
CHKSPAN  EQU   *                                                 A38032 08881520
         L     R15,WOXXX                GET ADDRESS OF SPANNING    VS0H 08882017
         LTR   R15,R15                  IF IT IS ZERO, THEN        VS0H 08883017
         BZ    CONTIN                   AVOID SPANNING           A38032 08884020
*BRANCH TO SPANNING ROUTINE                                        VS0H 08885017
         O     R15,BFOUR                IND. BRANCH TO AFTER PUT   VS0H 08886017
         BALR  R14,R15                                             VS0H 08887017
         B     *+4(R15)                 USE RETURN CODE FOR BRANCH VS0H 08888017
         B     PUTLG                    BRANCH TO PUT FOR SPANNING VS0H 08889017
         B     TBCTS                    BRANCH TO TRANSITION ROUT. VS0H 08890017
*NORMAL ROUTINE USED WHEN NO SPANNING                              VS0H 08891017
REGPT    EQU   *                                                   VS0H 08892017
         LR    R4,R1                    SAVE OUTPUT LOCATION            08900000
         LR    R11,R0                   SAVE REM BUF LEN         A38032 08900120
* IS THIS PCP                                                     M0023 08900218
         L     R1,16               GET CVT ADDRESS                M0023 08900418
         TM    116(R1),X'40'       IF PCP THEN                    M0023 08900618
         BO    BYPSMF                   BYPASS SMF               A38032 08900820
         L     R1,WOSPS            GET ADDRESS OF PARLIST          SM0I 08901018
         LTR   R1,R1               TEST FOR DIRECT WRITER          O099 08901319
         BNP   BYPSMF                   YES, BYPASS SMF          A38032 08901620
         USING  PARLIST,R1                                         SM0I 08902018
         CLI   PARSMF+3,X'FF'      CHECK FOR SMF PROCESSING        SM0I 08903018
         BE    BYPSMF                   BYPASS SMF               A38032 08904020
         L     R14,PARSMF          GET ADDRESS OF SMFREC           SM0I 08905018
         LTR   R14,R14                                             SM0I 08906018
         BZ    BYPSMF                   BYPASS SMF               A38032 08907020
         DROP  R1                                                  SM0I 08908018
         USING  SMFREC,R14                                         SM0I 08909018
         L     R15,SMFDYCNT        GET SYSOUT COUNTER              SM0I 08910018
         A     R15,ONELY           ADD ONE TO SYSOUT COUNTER       SM0I 08911018
         ST    R15,SMFDYCNT        STORE NEW COUNT IN SMFREC       SM0I 08912018
         DROP  R14                                                 SM0I 08913018
BYPSMF   LR    R0,R11                   RESTORE BUF LEN          A38032 08914020
         LR    R1,R4                    RESTORE OUTPUT LOCTN     A38032 08915020
         B     CHKSPAN                  CHECK FOR SPANNED RCDS   A38032 08916020
*IS THIS VARIABLE OUTPUT                                                08920000
CONTIN   TM    DCBRECFM,FIXSW      TEST FOR FIXED OUTPUT-IF SO     SM0I 08940018
         BO    TFOCC                    BRANCH AROUND MAKE LENGTH FIELD 08960000
         TM    DCBRECFM,VARSW           TEST FOR VARIABLE OUTPUT   8162 08966017
         BZ    TFOCC                    DO NOT CHANGE LENGTH       8162 08972017
*PUT LENGTH INTO OUTPUT RECORD                                          08980000
         ST    R2,OTLWR                 SAVE LENGTH FOR 4 BYTE HEADER   09000000
         MVC   0(2,R4),OTLWR+2          PUT IN LENGTH                   09020000
         MVC   2(2,R4),BLANS            PUT IN BLANKS                   09040000
         LA    R4,4(R4)                 FIX LOCATION WHERE RECORD MOVED 09060000
*IS THERE AN OUTPUT CONTROL CHARACTER                                   09080000
TFOCC    TM    DCBRECFM,ASASW+MACSW     TEST FOR CONTROL CHARACTER      09100000
         BZ    MRBTR                    BRANCH AROUND C.C. FIX IF NOT   09120000
*FIX CONTROL CHARACTER                                                  09140000
         ST    R4,LOCAT                 SAVE LOCATION OF CONTROL CHAR.  09160000
         MVC   0(1,R4),SAVEC            PUT CONTROL CHAR. IN RECORD285  09180000
         MVC   SAVEC(1),SAVED           GET NEXT CONTROL CHAR.          09200000
         LA    R4,1(R4)            FIX LOCATION WHERE RECORD MOVED 285  09220000
*MUST RECORD BE TRUNCATED                                               09240000
MRBTR    LM    R11,R12,INLSF            GET INPUT INFORMATION           09260000
         LR    R1,R11                   INPUT LENGTH MADE AMOUNT MOVED  09280000
         CR    R3,R11                   TEST FOR INPUT RECORD TOO LONG  09300000
         BNL   MVIRC                    BRANCH AROUND USE OUTPUT LENGTH 09320000
*TRUNCATE RECORD                                                        09340000
         LR    R1,R3                    OUTPUT LENGTH MADE AMOUNT MOVED 09360000
*MOVE IN RECORD                                                         09380000
MVIRC    BCT   R1,*+4              REDUCE LENGTH BY 1 FOR MOVE     4997 09390017
         LTR   R1,R1               TEST FOR NEG LNGTH RECORD       4997 09400017
         BM    MVRRI+4             PROVIDE A BLANK RECORD          4997 09410017
TFOTF    C     R1,TWFIS                 TEST FOR OVER 256 TO BE MOVED   09420000
         BL    MVRRI                    BRANCH TO MOVE REST OF BYTES    09440000
         MVC   0(256,R4),0(R12)         MOVE IN 256 BYTES               09460000
         S     R1,TWFIS                 SUBTRACT FROM AMOUNT TO MOVE    09480000
         A     R4,TWFIS                 ADD TO LOCATION MOVED TO        09500000
         A     R12,TWFIS                ADD TO LOCATION MOVED FROM      09520000
         B     TFOTF                    BRANCH TO MOVE MORE             09540000
MVRRI    EX    R1,MVCHR                 MOVE LAST INFORMATION           09560000
*MUST RECORD BE PADDED                                                  09580000
         CR    R3,R11                   TEST FOR INPUT RECORD TOO SHORT 09600000
         BNH   TBCTS                    BRANCH IF NO PADDING            09620000
*PUT IN PADDING                                                         09640000
         LA    R4,1(R1,R4)              FIND LOCATION TO BLANK          09660000
         LR    R1,R3                    FIND NUMBER OF BLANKS TO MOVE   09680000
         SR    R1,R11                                                   09700000
         BCT   R1,*+4                   REDUCE LENGTH BY 1              09720000
         MVI   0(R4),X'40'              PUT IN 1 BLANK                  09740000
         S     R1,ONELY                 REDUCE LENGTH BY 1              09760000
         BM    TBCTS                    BRANCH TO DONE IF MINUS         09780000
TFVTF    C     R1,TWFIS                 TEST FOR OVER 256 BLANKS        09800000
         BL    PIRBL                    BRANCH TO PUT IN REST OF BLANKS 09820000
         MVC   1(256,R4),0(R4)          MOVE IN 256 BLANKS              09840000
         S     R1,TWFIS                 SUBTRACT FROM AMOUNT OF BLANKS  09860000
         A     R4,TWFIS                 ADD TO LOCATION BLANKED         09880000
         B     TFVTF                    BRANCH TO PUT IN MORE BLANKS    09900000
PIRBL    EX    R1,BLKAR                 PUT IN LAST BLANKS              09920000
*IS THE TRANSITION WRITE SWITCH ON                                      09940000
TBCTS    L     R14,BALRG                RESTORE RETURN ADDRESS          09960000
         SR    R2,R2                    GET BUFFER COUNT                09980000
         IC    R2,BCTSW                                                 10000000
         LTR   R2,R2                    TEST FOR SWITCH ON IF NOT       10020000
         BCR   8,R14                    BRANCH OUT AS DONE              10040000
*HAVE ALL TRANSITION WRITES BEEN DONE                                   10060000
         L     R15,SD88EXIT             GET ADDRESS FOR EXIT            10080000
         S     R2,ONELY                 REDUCE COUNT BY 1               10100000
         STC   R2,BCTSW                 SAVE REDUCED COUNT              10120000
         BCR   2,R15                    BRANCH TO PUT AGAIN IF NOT 0    10140000
         BR    R14                      BRANCH OUT AS DONE              10160000
*GET SIZE OF OUTPUT RECORD FOR FIXED OUTPUT                             10180000
GSOFX    LH    R2,DCBLRECL              GET FIXED RECORD SIZE FOR START 10200000
         LR    R3,R2                                                    10220000
         TM    DCBRECFM,ASASW+MACSW     TEST FOR OUTPUT HAS NO C.C.     10240000
         BZ    PUTLG                    BRANCH AROUND CHANGING LENGTH   10260000
         BCT   R3,PUTLG                 MAKE LENGTH PROPER 1 LESS       10280000
         B     PUTLG                    BRANCH TO PUT                   10300000
*TURN ON UNRECOVERABLE ERROR SWITCH                                     10320000
SD89EREX L     R1,WOSAP                 GET ADDRESS ERROR RETURN PUT AT 10340000
         MVI   19(R1),8                 INDICATE IO OUTPUT ERROR        10360000
         L     R14,BALRG                RESTORE RETURN ADDRESS          10380000
         BR    R14                      BRANCH BACK                     10400000
*CONSTANTS                                                              10420000
PRINTRT  DC    4XL4'00000101'     TRANSLATE TABLE FOR PRINTER    A20574 10421018
         DC    10XL4'01010101'                                   A20574 10422018
         DC    2XL4'01000101'                                    A20574 10423018
         DC    XL4'01010101'                                     A20574 10424018
         DC    12XL4'00000101'                                    M2323 10425018
         DC    3XL4'01000101'                                    A20574 10426018
         DS    0F                                                       10427018
TR1442   DC    4XL32'00000101010101010101010101010101000101010101010101X10428018
               01010101010101'                                          10429018
TR2540   DC    6XL16'00010101000101010101010101010101'                  10430018
         DC    2XL16'01010101010101010101010101010101'                  10431018
         DS    0F                                                       10440000
ONELY    DC    X'00000001'              ONE                             10460000
ATEEN    DC    X'00000012'              EIGHTEEN                        10480000
TWFIS    DC    X'00000100'              HIGHEST AMOUNT TO MOVE          10500000
ONETW    DC    X'00000078'              CONSTANT FOR TRANSLATING        10520000
BFOUR    DC    X'04000000'              INDICATE GO TO AFTER PUT   VS0H 10526017
FOURY    DC    X'00000004'              FOUR                       VS0H 10532017
ADOUE    DC    A(SD89EREX)              OUTPUT ERROR ROUTINE ADDRESS    10540000
SD88EXIT DC    V(IEFSD088)              TRANSITIONAL ROUTINE            10560000
IEFSDM89 DC    V(IEFSD89M)              MESSAGE CONSTANTS               10580000
TRMAT    DC    C'+ 0-'                  TABLE USED WHEN TRANSLATING     10600000
         DC    C'1234'                  MACHINE                         10620000
         DC    C'5678'                  TO                              10640000
         DC    C'9ABC'                  ASA                             10660000
BLANS    DC    C'00'                    TWO ZEROS                  VS0H 10680017
MVCHR    MVC   0(1,R4),0(R12)           INSTRUCTION USED TO MOVE RECORD 10700000
BLKAR    MVC   1(1,R4),0(R4)            INSTRUCTION USED TO BLANK OUT   10720000
*********************************************************************** 10740000
*                                                                     * 10760000
*TITLE         IEFSD89M   MESSAGES FOR IEFSD089                       * 10780000
*                                                                     * 10800000
*********************************************************************** 10820000
IEFSD89M CSECT                                                          10840000
         DS    0F                                                       10860000
FIRLN    DC    C'IEF316I CCBAD'                                         10880000
ENDLN    EQU   *                                                        10900000
         END                                                            10920000
./  ADD  SSI=43040012,NAME=IEFSD094
         TITLE 'IEFSD094 - MVT SYSOUT WRITER JOB SEPARATOR'             00100020
*********************************************************************** 00200020
*                                                                       00300020
*          RELEASE 22 DELETIONS/CHANGES                                 00400020
*          RELEASE 21 DELETIONS/CHANGES                                 00500020
* 109760                                                         A64011 00600020
* 069067                                                         Y00188 00700020
*3524                                                            M3018  00800020
*3524                                                            A41000 00900020
*          RELEASE 20 DELETIONS/CHANGES                                 01000020
*1043                                                            A32649 01100020
* 015000-036000,040612-040760,045200-048400,048600-052600        MAPMAC 01200020
* 066640,066720,067600,068000,109520,109760                      MAPMAC 01300020
* 066440-066900,067200-068200,069005-069027,109280-109920        A32649 01400020
*1043                                                            A35780 01500020
*1043066200,069080                                               M2204  01600020
*                                                                       01700020
*********************************************************************** 01800020
*                                                                     * 01900020
*                                                                     * 02000020
*TITLE-- IEFSD094 - SYSOUT WRITER JOB SEPARATOR ROUTINE               * 02100020
*                                                                     * 02200020
*STATUS CHANGE LEVEL 006                                                02300020
*FUNCTION/OPERATION--                                                 * 02400020
*   THIS ROUTINE AND ITS LOAD MODULE IS USED IN PCP.               SM0I 02500020
*   THIS ROUTINE SEPARATES JOBS IN ONE OF TWO WAYS DEPENDING ON THE   * 02600020
*   OUTPUT DATA SET TYPE :                                            * 02700020
*        1.PRINTER TYPE --- THE JOBNAME AND CLASS WILL BE PRINTED IN  * 02800020
*          BLOCK FORMAT ON TNREE PAGES AND A LINE OF ASTERISKS WILL   * 02900020
*          BE PRINTED TWICE ( OVER PRINTED ) ON THE FOLD PRECEEDING   * 03000020
*          EACH PAGE AND AFTER THE THIRD PAGE CONTAINING THE BLOCK    * 03100020
*          FORM OUTPUT .                                              * 03200020
*        2.PUNCH TYPE --- THE JOBNAME AND CLASS WILL BE PUNCHED IN    * 03300020
*          THE MIDDLE OF THREE CARDS .                                * 03400020
*                                                                     * 03500020
*OPERATION OF THIS MODULE--                                           * 03600020
*ENTRY POINT--                                                        * 03700020
*   IEFSD094 WHICH IS LINKED TO FROM IEFSD078 WHEN A JOB SEPARATOR IS * 03800020
*   SPECIFIED .                                                       * 03900020
*                                                                     * 04000020
*INPUT--                                                              * 04100020
*   REGISTER 1 POINTS TO THE PARAMETER LIST CONTAINING SWITCHES ,     * 04200020
*   ADDRESS OF OUTPUT DCB , ADDRESS OF 8 CHARACTER JOBNAME FIELD ,    * 04300020
*   AND THE ADDRESS OF 1 CHARACTER SYSOUT CLASS .                     * 04400020
*   REGISTER 6 POINTS TO PARLIST WHEN NOT PCP SYSTEM.              SM0I 04500020
*                                                                     * 04600020
*EXIT POINT 0.5 --                                                 VS0H 04700020
*   BRANCH TO IEFSDXXX IF OUTPUT TO BE SPANNED.                    VS0H 04800020
*OUTPUT AT EXIT POINT 0.5 --                                       VS0H 04900020
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB    VS0H 05000020
*        ROUTINE.                                                  VS0H 05100020
*        REGISTER 8 POINTS TO THE PARAMETER LIST GIVEN TO SMB AND  VS0H 05200020
*        DSB PROCESSING ROUTINES.                                  VS0H 05300020
*                                                                  VS0H 05400020
*EXIT POINT 1 --                                                      * 05500020
*   BRANCH TO IEFSD088 TO DO THE START TRANSITION ROUTINE             * 05600020
*                                                                     * 05700020
*OUTPUT AT EXIT POINT 1 --                                            * 05800020
*   REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB ROUTINE    * 05900020
*   REGISTER 8 POINTS TO THE WORK AREA FOR STANDARD OUTPUT ROUTINE    * 06000020
*                                                                     * 06100020
*EXIT POINT 2 --                                                      * 06200020
*   BRANCH TO IEFSD089 TO DO THE PUT FOR EACH RECORD                  * 06300020
*                                                                     * 06400020
*OUTPUT AT EXIT POINT 2 --                                            * 06500020
*   REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB ROUTINE    * 06600020
*   REGISTER 8 POINTS TO THE WORK AREA FOR STANDARD OUTPUT ROUTINE    * 06700020
*                                                                     * 06800020
*EXIT POINT 3 --                                                      * 06900020
*                                                                     * 07000020
*OUTPUT AT EXIT POINT 3 --                                            * 07100020
*   REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB ROUTINE    * 07200020
*   REGISTER 8 POINTS TO THE WORK AREA FOR STANDARD OUTPUT ROUTINE    * 07300020
*                                                                     * 07400020
*EXIT POINT 4 --                                                      * 07500020
*   BRANCH TO IEFSD095 TO DO THE BLOCK LETTER ROUTINE                 * 07600020
*                                                                     * 07700020
*OUTPUT AT EXIT POINT 4 --                                            * 07800020
*   REGISTER 1 POINTS TO THE PARAMETER LIST CONTAINING THE ADDRESS OF * 07900020
*   CHARACTER TO BE PIT OUT,THE ADDRESS OF THE LINE COUNT,            * 08000020
*   THE ADDRESS OF THE CONSTRUCTION AREA,  AND THE ADDRESS OF THE     * 08100020
*   NUMBER OF CHARACTERS .                                            * 08200020
*                                                                     * 08300020
*EXIT POINT 5 --                                                      * 08400020
*   RETURN TO IEFSD078 IF SYSOUT WORK DONE                            * 08500020
*                                                                     * 08600020
*OUTPUT AT EXIT POINT 5 --                                            * 08700020
*   THE REGISTERS ARE RESTORED TO THERE CONTENTS AS THEY WERE ON      * 08800020
*   LEAVING IEFSD078 EXCEPT REGISTER 15 CONTAINS A RETURN CODE -0-FOR * 08900020
*   CORRECT OPERATION OR -8-FOR UNRECOVERABLE OUTPUT ERROR            * 09000020
*                                                                     * 09100020
*EXTERNAL ROUTINES --                                                 * 09200020
*                                                                     * 09300020
*   IEFSD088   THE TRANSITION ROUTINE                                 * 09400020
*   IEFSD089   THE OUTPUT ROUTINE                                     * 09500020
*   IEFSD89M   MESSAGES FOR IEFSD089                                  * 09600020
*   IEFSD078   SYSOUT WRITER LINK-TO-JOB SEPARATOR-OR-TO-DSB/SMB      * 09700020
*   IEFSD095   BLOCK LETTER ROUTINE                                   * 09800020
*   IEFSDXXX   SPANNED DATASETS ROUTINE                            VS0H 09900020
*                                                                     * 10000020
*                                                                     * 10100020
*                                                                     * 10200020
*                                                                     * 10300020
*ATTRIBUTES - REENTRANT                                               * 10400020
*                                                                     * 10500020
*********************************************************************** 10600020
*                        NEEDED DSECTS                                  10700020
*                                                                       10800020
IEFSD094 CSECT                     FOR EQUATES                   Y00188 10900020
R0       EQU   0                                                        11000020
R1       EQU   1                                                        11100020
R2       EQU   2                                                        11200020
R3       EQU   3                                                        11300020
R4       EQU   4                                                        11400020
R5       EQU   5                                                        11500020
R6       EQU   6                                                        11600020
R7       EQU   7                                                        11700020
R8       EQU   8                                                        11800020
R9       EQU   9                                                        11900020
R10      EQU   10                                                       12000020
R11      EQU   11                                                       12100020
R12      EQU   12                                                       12200020
R13      EQU   13                                                       12300020
R14      EQU   14                                                       12400020
R15      EQU   15                                                       12500020
*DEFINE DCB                                                        VS0H 12600020
         DCBD  DSORG=PS                                            VS0H 12700020
         IEFSDPAR                                                MAPMAC 12800020
JSPARMS  DSECT                                                          12900020
*THE PARMAMETER LIST INPUT TO THIS MODULE                               13000020
PARMLJS  DS    0F                                                       13100020
JSSWTCHS DS    C                       SWITCHES                         13200020
         DS    0F                                                       13300020
JSDCBOUT DS    F                       OUTPUT DCB ADDRESS               13400020
JSNAMEAD DS    F                       JOBNAME FIELD ADDRESS            13500020
JSSYSCLA DS    F                       JOB CLASS ADDRESS                13600020
JSENT078 EQU   JSSWTCHS+1         X'FF' IF ENTRY FROM IEFSD078   A32649 13700020
ENTRY078 EQU   X'FF'              ENTRY SWITCH                   A32649 13800020
JSEND    EQU   *                       END OF PARM LIST                 13900020
         IEFSDWKT                                                MAPMAC 14000020
*THE AREA USED TO BUILD JOB SEPARATOR OUTPUT                     F40172 14100020
OUTAREAS DS    0F                                                F40172 14200020
         DS    30F                                               F40172 14300020
SAVER131 DS    F                   SAVE R13 FOR ENT TO TRAN1     F40172 14400020
SAVER132 DS    F                   SAVE R13 FOR ENT TO PUT       F40172 14500020
SAVER133 DS    F                   SAVE R13 FOR ENT TO TRANS2    F40172 14600020
SAVER134 DS    F                                                 F40172 14700020
SAVETRAN DS    18F                                               F40172 14800020
SAVEPUT  DS    18F                                               F40172 14900020
SAVETRA2 DS    18F                                               F40172 15000020
SAVEPUT2 DS    18F                                               F40172 15100020
ADR3     DS    F                                                 F40172 15200020
ADR11    DS    F                                                 F40172 15300020
OUTAREND EQU   *                        END OF AREA               TTE0K 15400020
         IEFSDSDR                                                MAPMAC 15500020
*EQUATES                                                                15600020
SKIPONE  EQU   9                  MACHINE C/C SINGLE SPACE       F40172 15700020
ASASW    EQU   4                   ASA CONTROL CHARACTER                15800020
MACSW    EQU   2                   MACHINE CONTROL CHARACTER            15900020
VARSW    EQU   64                  VARIABLE SWITCH WHEN NOT FIXED       16000020
FIXSW    EQU   128                 FIXED SWITCH WHEN NOT VARIABLE       16100020
UNKSW    EQU   VARSW+FIXSW         UNKNOWN SWITCH                       16200020
*                                                                     * 16300020
*                   THIS ROUTINE IS THE STANDARD JOB SEPARATOR        * 16400020
*                   ROUTINE WHICH MAY BE USED TO SEPARATE JOBS        * 16500020
*                   IN THE OUTPUT STREAM . IT RECEIVES A FOUR         * 16600020
*                   WORD REGISTER SAVE AREA THE ADDRESS OF            * 16700020
*                   WHICH IS IN REGISTER 1 . THE AREA HAS THE         * 16800020
*                   FOLLOWING APPEARANCE .                            * 16900020
*                                                                     * 17000020
*                    *************************************            * 17100020
*                    *        *        *        *        *            * 17200020
*                    *SWITCHES*        *        *        *            * 17300020
*                    *        *        *        *        *            * 17400020
*                    *************************************            * 17500020
*                    *                                   *            * 17600020
*                    *        ADDRESS OF OUTPUT DCB      *            * 17700020
*                    *                                   *            * 17800020
*                    *************************************            * 17900020
*                    *                                   *            * 18000020
*                    *  ADDRESS OF 8 CHAR. JOBNAME FIELD *            * 18100020
*                    *                                   *            * 18200020
*                    *************************************            * 18300020
*                    *                                   *            * 18400020
*                    *  ADDRESS OF 1 CHAR. CLASS FIELD   *            * 18500020
*                    *                                   *            * 18600020
*                    *************************************            * 18700020
*                                                                     * 18800020
*                   SWITCHES ARE AS FOLLOWS .                         * 18900020
*                                                                     * 19000020
*                    LEFT MOST BIT (128) IS ON IF THE OUTPUT          * 19100020
*                    UNIT IS A 1442 PUNCH                             * 19200020
*                                                                     * 19300020
*                    NEXT BIT (64) IS ON IF THE OUTPUT UNIT           * 19400020
*                    IS A PUNCH OR IF IT IS A TAPE WHICH HAS          * 19500020
*                    A PUNCH AS ITS ULTIMATE DESTINATION              * 19600020
*                                                                     * 19700020
*                    NEXT BIT (32) IS ON IF THE OUTPUT UNIT           * 19800020
*                    IS A PRINTER OR A PUNCH                          * 19900020
*   BRANCH TO IEFSD088 TO DO THE END TRANSITION ROUTINE               * 20000020
*                                                                     * 20100020
*                   A USER MAY WRITE A ROUTINE TO USE INSTEAD         * 20200020
*                   OF THIS . HE WILL HAVE THE ROUTINE IN THE         * 20300020
*                   LINK LIBRARY AND THE PROGRAM NAME IN THE          * 20400020
*                   PARM FIELD OF THE EXEC STATEMENT AND BY           * 20500020
*                   SPECIFYING THE REQUIRED PROCEEDURE NAME           * 20600020
*                   IN THE START COMMAND FOR THE SYSOUT               * 20700020
*                   WRITER . SEE JCL PUBLICATION .                    * 20800020
*                                                                     * 20900020
*                   THE USER MUST FREE ANY CORE HE OBTAINED           * 21000020
*                   DURING THE OPERATION OF HIS ROUTINE . HE          * 21100020
*                   MUST SET UP HIS OWN SYNCHRONOUS ERROR EXIT        * 21200020
*                   ROUTINE AND PLACE ITS ADDRESS IN THE              * 21300020
*                   DCBSYNAD FIELD OF THE OUTPUT DCB . HE MUST        * 21400020
*                   SAVE REGISTERS 0 TO 12 AND 14 IN THE 15 WORD      * 21500020
*                   AREA WHICH STARTS 12 BYTES BEYOND THE LOCATION    * 21600020
*                   IN REGISTER 13 . HE MUST ALSO SAVE REGISTER 13 .  * 21700020
*                                                                     * 21800020
*INITIALIZE                                                             21900020
IEFSD094 CSECT                                                          22000020
*3656065500                                                        SM0I 22100020
* 042600-045000,066600,067000,067800,109400-109800               F40172 22200020
         SAVE  (14,12)             SAVE REGISTERS                       22300020
         BALR  R9,0                SET BASE REGISTER                    22400020
         USING *,R9                                                     22500020
         LPR   R5,R1                    SAVE PARM REGISTER       M22040 22600020
*                                       A3578                    M2204  22700020
         USING PARMLJS,R5                                               22800020
*GET CORE FOR WORK AREA                                          A32649 22900020
         LA    R0,WKSOE-WKSOR+OUTAREND-OUTAREAS+WORKEND-WORKLST  A32649 23000020
*                                  GET SIZE OF WORK AREAS        A32649 23100020
         GETMAIN R,LV=(0)          GET CORE                      A32649 23200020
         USING PARLIST,R6                                          VS0H 23300020
         LR    R8,R1              ESTABLISH WORKSOR ADDRESS      A32649 23400020
         LA    R1,WKSOE-WKSOR(R8) ESTABLISH OUTAREA ADDRESS      A32649 23500020
         LA    R7,OUTAREND-OUTAREAS+WKSOE-WKSOR(R8)              A32649 23600020
*                                 ESTABLISH WORKLIST ADDRESS     A32649 23700020
         USING WKSOR,R8                                          A32649 23800020
         USING OUTAREAS,R1                                       A32649 23900020
         USING WORKLST,R7                                        A32649 24000020
         XC    WORKLST(WORKEND-WORKLST),WORKLST  CLEAR CORE      M2204  24100020
         ST    R13,WOSAP                                                24200020
         XC    16(4,R13),16(R13)                                        24300020
         ST    R13,SRETR           SAVE RETURN REGISTER                 24400020
         LA    R13,SMSVA           GET SAVE AREA ADDRESS                24500020
*IS ENTRY FROM IEFSD078                                          A32649 24600020
         XC    WOXXX(8),WOXXX     CLEAR SPANNING ADDRESSES       A32649 24700020
         TM    JSENT078,ENTRY078  IS ENTRY FROM IEFSD078         A32649 24800020
         BNO   PCP20              NO BYPASS SPANNING CHECK       A32649 24900020
*SAVE THE ADDRESS OF THE SPANNING MODULE AND GOT CORE              VS0H 25000020
         MVC   WOXXX(8),PARXXX                                     VS0H 25100020
*                                                                F40172 25200020
*           INITIALIZE CONTROL CHARACTERS                        F40172 25300020
*                                                                F40172 25400020
         MVI   SAVEC,SKIPONE      INITIALIZE SAVEC               F40172 25500020
         MVI   SAVED,SKIPONE      INITIALIZE SAVED               F40172 25600020
         ST    R6,WOSPS                 SAVE PARLIST ADDRESS     A32649 25700020
PCP20    EQU   *                                                   VS0H 25800020
         LR    R6,R1                                               VS0H 25900020
         DROP  R1                                                  VS0H 26000020
         USING OUTAREAS,R6                                         VS0H 26100020
*CLEAR TRANSITION WRITE SWITCH                                          26200020
         MVI   BCTSW,X'00'         PUT COUNT TO ZERO                    26300020
*TURN OFF SWITCHES                                                      26400020
         MVI   SEGIN,0                 INDICATE FIRST SEGMENT      VS0H 26500020
         MVI   SORS1,0                                                  26600020
         MVI   SORS2,0                  TURN OFF SWITCH          A35780 26700020
         L     R0,JSDCBOUT                                              26800020
         ST    R0,DCBOT                STORE OUTPUT DCB ADDR            26900020
         L     R0,JSSWTCHS                                              27000020
         ST    R0,VARBA                STORE OUTPUT TYPE                27100020
*IS VARIABLE SPANNED OUTPUT                                        VS0H 27200020
         L     R15,WOXXX                GET SPANNED MODULE ADDRESS VS0H 27300020
         LTR   R15,R15                  IF A MODULE NOT PRESENT    VS0H 27400020
         BZ    GOTON                    THEN DONT ENTER IT         VS0H 27500020
*BRANCH TO THE SPANNING MODULE                                     VS0H 27600020
         O     R15,BTWLV                USE 12 TO INDICATE MESSAGE VS0H 27700020
         BALR  R14,R15                  GO TO SPANNING MODULE      VS0H 27800020
GOTON    EQU   *                                                   VS0H 27900020
*DO TRANSITION  ROUTINE                                                 28000020
         ST    R13,SAVER131                                             28100020
         LA    R13,SAVETRAN                                             28200020
         STM   14,12,12(13)                                             28300020
         L     R13,SAVER131                                             28400020
         L     R15,SD88EXIT        GET ADDRESS FOR EXIT                 28500020
         BALR  R14,R15                                                  28600020
         LA    R13,SAVETRAN                                             28700020
         LM    14,12,12(13)                                             28800020
         L     R13,SAVER131                                             28900020
*IS THERE AN UNRECOVERABLE ERROR                                        29000020
         L     R10,WOSAP           GET ADDRESS ERROR RETURN PUT AT      29100020
         TM    19(R10),X'FF'       TEST FOR ERROR IF SO                 29200020
         BNE   UNREIOER            BRANCH TO FREE WORK AREAS            29300020
*IS THERE AN UNOPENED DATA SET                                          29400020
         TM    SORS1,LRERS+INERS   TEST FOR UNOPENED DATA SET           29500020
         BO    SD94EOFX            IF SO BRANCH TO END OF FILE          29600020
*IS THIS PRINTER TYPE UNIT                                              29700020
         TM    VARBA,PUNSH         TEST FOR PUNCH IF SO                 29800020
         BO    PCHRT               BRANCH TO PUNCH ROUTINE              29900020
         L     R2,ONE              SET R2 TO ONE                        30000020
         LR    R3,R2               SET R3 TO ONE                        30100020
         LR    R12,R2              SET R12 TO ONE                       30200020
BACK     LR    R1,R12              IS R12 EVEN IF SO                    30300020
         N     R1,ONE              THIS IS NOT JOBNAME                  30400020
         BM    AROUND                                                   30500020
         L     R10,JSSYSCLA                                             30600020
         L     R11,ONE             GET NUMBER OF CHARACTERS             30700020
         LA    R4,OUTAREAS+54      GET OUT AREA                         30800020
         B     GO                                                       30900020
AROUND   L     R10,JSNAMEAD                                        4686 31000020
         L     R11,EIGHT           GET NUMBER OF CHARACTERS             31100020
         LA    R4,OUTAREAS+10      GET OUT AREA                         31200020
GO       MVI   OUTAREAS,C' '                                            31300020
         MVC   OUTAREAS+1(119),OUTAREAS                                 31400020
         ST    R3,ADR3                                                  31500020
         LA    R3,ADR3                                                  31600020
         ST    R11,ADR11                                                31700020
         LA    R11,ADR11                                                31800020
         GETMAIN  R,LV=24                                          4686 31900020
         ST    R2,16(R1)           SAVE REGISTER TWO               4686 32000020
         LR    R2,R1               SAVE REGISTER ONE               4686 32100020
         CALL  IEFSD095,((10),(3),(4),(11)),MF=(E,(1))             4686 32200020
         LR    R1,R2               RESTORE REGISTER ONE            4686 32300020
         L     R2,16(R1)           RESTORE REGISTER TWO            4686 32400020
* END                                                                   32500020
         FREEMAIN  R,LV=24,A=(1)                                   4686 32600020
         L     R3,ADR3                                             4686 32700020
         L     R11,ADR11                                                32800020
         CR    R3,R2               COMPARE R3 TO 1 IF NOT EQUAL         32900020
         BNE   ARND                BRANCH AROUND                        33000020
*IS THIS JOBNAME                                                        33100020
         LR    R1,R12              IS (R12) EVEN IF SO                  33200020
         N     R1,ONE              THIS IS NOT JOBNAME SO               33300020
         BZ    ARND1               BRANCH AROUND                        33400020
         MVI   CONCH,C'9'               SKIP TO CHANNEL 9 AND WRITE CC  33500020
ASK      L     R1,OTWY                  GET 120                         33600020
         ST    R1,INLSF                 SET LENGTH OF INPUT             33700020
         LA    R1,FANFOLD               GET ADDR OF ASTERISKS           33800020
         ST    R1,INLOC                 SET INPUT ADDR                  33900020
         OI    SORS1,OLDSW              TURN ON OLD SWITCH              34000020
         ST    R13,SAVER132             SAVE R13                        34100020
         LA    R13,SAVEPUT              GET ADDR OF SAVE AREA           34200020
         STM   14,12,12(13)             SAVE REG.S                      34300020
         L     R13,SAVER132             RESTORE R13                     34400020
         L     R15,SD89EXIT             GET ADDR OF PUT ROUTINE         34500020
         BALR  R14,R15                  GO TO PUT OUT ASTERISKS         34600020
         LA    R13,SAVEPUT              GET ADDR OF SAVE AREA           34700020
         LM    14,12,12(13)             RESTORE REG.S                   34800020
         L     R13,SAVER132             RESTORE R13                     34900020
         L     R10,WOSAP                GET ADDR ERROR RETURN PUT AT    35000020
         TM    19(R10),X'FF'            TEST FOR ERROR IF SO            35100020
         BNE   UNREIOER                 BRANCH TO FREE WORK AREAS       35200020
*IS PERMANENT IO ERROR SWITCH ON                                        35300020
         TM    SORS1,INERS              TEST FOR IO ERROR IF SO         35400020
         BO    SD94EOFX                 BRANCH TO END OF FILE           35500020
         TM    CONCH,C'+'               HAS LINE OF ASTERISKS BEEN      35600020
*                                       OVER PRINTED   IF SO            35700020
         BO    WAY                      BRANCH TO OUTPUT JOBNAME AND    35800020
*                                       CLASS IN BLOCK FORM             35900020
         MVI   CONCH,C'+'               NO SKIP AND WRITE CC            36000020
         B     ASK                      GO BACK AND OVER PRINT LINE     36100020
*                                       OF ASTERISKS                    36200020
WAY      MVI   CONCH,C'1'               SKIP TO CHANNEL 1 AND WRITE CC  36300020
         B     OUT                 AND BRANCH OUT                       36400020
ARND1    MVI   CONCH,C'-'          SET CC TO SKIP 3                     36500020
         B     OUT                 AND BRANCH OUT                       36600020
ARND     MVI   CONCH,C' '          SET CC TO SKIP 1                     36700020
OUT      L     R1,OTWY             GET 120                              36800020
         ST    R1,INLSF            SET LENGTH OF INPUT                  36900020
         LA    R1,OUTAREAS         GET INPUT ADDRESS                    37000020
         ST    R1,INLOC            SET ADDRESS OF INPUT                 37100020
         OI    SORS1,OLDSW         TURN ON OLD SWITCH                   37200020
         ST    R13,SAVER132                                             37300020
         LA    R13,SAVEPUT                                              37400020
         STM   14,12,12(13)                                             37500020
         L     R13,SAVER132                                             37600020
         L     R15,SD89EXIT        GET ADDRESS FOR EXIT                 37700020
         BALR  R14,R15                                                  37800020
         LA    R13,SAVEPUT                                              37900020
         LM    14,12,12(13)                                             38000020
         L     R13,SAVER132                                             38100020
*IS THERE AN UNRECOVERABLE ERROR                                        38200020
         L     R10,WOSAP           GET ADDRESS ERROR RETURN PUT AT      38300020
         TM    19(R10),X'FF'       TEST FOR ERROR IF SO                 38400020
         BNE   UNREIOER            BRANCH TO FREE WORK AREAS            38500020
*IS PERMANENT IO INPUT ERROR SWITCH ON                                  38600020
         TM    SORS1,INERS         TEST FOR IO ERROR IF NOT             38700020
         BZ    CONT                BRANCH TO CONT                       38800020
*TURN ON OLD SWITCH                                                     38900020
SD94EOFX OI    SORS1,OLDSW                                              39000020
*FIX NUMBER OF TRANSITION WRITES                                        39100020
         MVI   BCTSW,1             PUT IN ONE FOR PRINTER               39200020
         TM    VARBA,PUNSH         TEST FOR PUNCH IF NOT                39300020
         BZ    DOTRAN              BRANCH TO DO TRANSITION              39400020
         MVI   BCTSW,3             PUT IN 3 FOR PUNCH                   39500020
*DO TRANSITION ROUTINE                                                  39600020
DOTRAN   ST    R13,SAVER133                                             39700020
         LA    R13,SAVETRA2                                             39800020
         STM   14,12,12(13)                                             39900020
         L     R13,SAVER133                                             40000020
         L     R15,SD88EXIT                                             40100020
         BALR  R14,R15                                                  40200020
         LA    R13,SAVETRA2                                             40300020
         LM    14,12,12(13)                                             40400020
         L     R13,SAVER133                                             40500020
*IS DCB SET UP FOR EXCP                                            CC0H 40600020
         L     R1,DCBOT                 GET DCB ADDRESS            CC0H 40700020
         TM    DCBMACRF-IHADCB(R1),X'80' TEST FOR EXCP. IF NOT     CC0H 40800020
         BZ    UNREIOER                 BRANCH AROUND FAKE TRUNC   CC0H 40900020
*FAKE TRUNCATE                                                     CC0H 41000020
         SR    R15,R15                  INDICATE FAKE TRUNC        CC0H 41100020
         L     R4,WOSPS                                          M3018  41200020
         USING PARLIST,R4                                        M3018  41300020
         XC    PARWKSOR,PARWKSOR        TO BYPASS XYZ CC TEST    M3018  41400020
         DROP  R4                                                M3018  41500020
         L     R11,48(0,R1) LOAD REG 11 FROM DCB                   CC0H 41600020
         BALR  R14,R11 LINK TO FAKE PUT ROUTINE                    CC0H 41700020
*DID TRUNC FAIL                                                    CC0H 41800020
         LTR   R1,R1                    TEST FOR ERROR             CC0H 41900020
         BNZ   UNREIOER                 IF NOT BRANCH TO DONE      CC0H 42000020
*PUT IN ERROR INDICATION                                           CC0H 42100020
         L     R10,WOSAP                GET ADDRESS OF ERROR RETURNCC0H 42200020
         MVI   19(R10),8                UNRECOVERABLE ERROR        CC0H 42300020
         B     UNREIOER            BRANCH TO FREE WORK AREAS            42400020
CONT     AR    R3,R2               R3=R3+1                              42500020
         C     R3,THIR             IF R3 IS NOT EQUAL TO 13             42600020
         BNE   BACK                BRANCH TO BACK                       42700020
         L     R3,ONE              SET R3 TO 1                          42800020
         AR    R12,R2              R12=R12+1                            42900020
         C     R12,SEVN            IF R12 IS NOT EQUAL TO SEVEN         43000020
         BNE   BACK                BRANCH BACK                          43100020
         MVI   CONCH,C'9'               SKIP TO CHANNEL 9 AND WRITE CC  43200020
ASK1     L     R1,OTWY                  GET 120                         43300020
         ST    R1,INLSF                 SET LENGTH OF INPUT             43400020
         LA    R1,FANFOLD               GET ADDR OF ASTERISKS           43500020
         ST    R1,INLOC                 SET INPUT ADDR                  43600020
         OI    SORS1,OLDSW              TURN ON OLD SWITCH              43700020
         ST    R13,SAVER132             SAVE R13                        43800020
         LA    R13,SAVEPUT              GET ADDR OF SAVE AREA           43900020
         STM   14,12,12(13)             SAVE REG.S                      44000020
         L     R13,SAVER132             RESTORE R13                     44100020
         L     R15,SD89EXIT             GET ADDR OF PUT ROUTINE         44200020
         BALR  R14,R15                  GO TO PUT OUT ASTERISKS         44300020
         LA    R13,SAVEPUT              GET ADDR OF SAVE AREA           44400020
         LM    14,12,12(13)             RESTORE REG.S                   44500020
         L     R13,SAVER132             RESTORE R13                     44600020
*IS THERE AN UNCORRECTABLE ERROR                                        44700020
         L     R10,WOSAP                GET ADDR ERROR RETURN PUT AT    44800020
         TM    19(R10),X'FF'            TEST FOR ERROR IF SO            44900020
         BNE   UNREIOER                 BRANCH TO FREE WORK AREAS       45000020
*IS PERMANENT IO ERROR SWITCH ON                                        45100020
         TM    SORS1,INERS              TEST FOR IO ERROR IF SO         45200020
         BO    SD94EOFX                 BRANCH TO END OF FILE           45300020
         TM    CONCH,C'+'               HAS LINE OF ASTERISKS BEEN      45400020
*                                       OVER PRINTED   IF SO            45500020
         BO    SD94EOFX                 BRANCH TO END OF FILE           45600020
         MVI   CONCH,C'+'               NO SKIP AND WRITE CC            45700020
         B     ASK1                     GO BACK AND OVER PRINT LINE     45800020
*                                       OF ASTERISKS                    45900020
*DO PUNCH TYPE                                                          46000020
PCHRT    L     R2,ONE              SET R2 TO 1                          46100020
         LR    R3,R2               SET R3 TO 1                          46200020
BACK1    MVI   OUTAREAS,C' '       MOVE BLANKS INTO OUTAREAS            46300020
         MVC   OUTAREAS+1(79),OUTAREAS                                  46400020
         L     R1,8(R5)                 GET ADDRESS OF JOBNAME          46500020
         MVC   OUTAREAS+35(8),0(R1)     MOVE IN JOBNAME                 46600020
         L     R1,12(R5)                GET ADDRESS OF CLASS            46700020
         MVC   OUTAREAS+45(1),0(R1)     MOVE IN CLASS NAME              46800020
         MVI   CONCH,C'V'               MOVE IN CC (STACKER 1)          46900020
         LA    R1,OUTAREAS              GET INPUT ADDRESS               47000020
         ST    R1,INLOC                 SET ADDR OF INPUT               47100020
         OI    SORS1,OLDSW              TURN ON OLD SWITCH              47200020
         L     R1,ETY                   GET LENGTH OF INPUT             47300020
         ST    R1,INLSF                 SET LENGTH OF INPUT             47400020
         ST    R13,SAVER134                                             47500020
         LA    R13,SAVEPUT2                                             47600020
         STM   14,12,12(13)                                             47700020
         L     R13,SAVER134                                             47800020
         L     R15,SD89EXIT             GET ADDR FOR EXIT               47900020
         BALR  R14,R15                                                  48000020
         LA    R13,SAVEPUT2                                             48100020
         LM    14,12,12(13)                                             48200020
         L     R13,SAVER134                                             48300020
*IS THERE AN UNRECOVERABLE ERROR                                        48400020
         L     R10,WOSAP                GET ADDR ERROR RETURN PUT AT    48500020
         TM    19(R10),X'FF'            TEST FOR ERROR IF SO            48600020
         BNE   UNREIOER                 BRANCH TO FREE WORK AREAS       48700020
*IS PERMANENT INPUT ERROR SWITCH ON                                     48800020
         TM    SORS1,INERS              TEST FOR ERROR IF NOT           48900020
         BZ    CONT1                    BRANCH TO CONT1                 49000020
         B     SD94EOFX                 IF SO BRANCH TO EOF             49100020
CONT1    AR    R3,R2                    R3=R3+1                         49200020
         C     R3,FOR                   IF R3 IS NOT EQUAL TO 4         49300020
         BNE   BACK1                    BRANCH TO BACK1                 49400020
         B     SD94EOFX                                                 49500020
*FREE WORK AREAS                                                        49600020
UNREIOER L     R13,SRETR                GET RETURN REGISTER             49700020
         LA    R0,WKSOE-WKSOR+OUTAREND-OUTAREAS+WORKEND-WORKLST  A32649 49800020
         FREEMAIN R,LV=(0),A=(8)  FREE WORK AREAS                A32649 49900020
         DROP  R8,R6,R7                 WKSOR OUTAREAS WORKLST   A64011 50000020
*INDICATE NO SYNAD ROUTINE                                              50100020
         L     R1,JSDCBOUT              GET OUTPUT DCB ADDRESS   A64011 50200020
         USING IHADCB,R1                DCB ADDRESSABILITY       A41000 50300020
         MVC   DCBSYNAD+1(3),ONE+1      PUT ONE IN SYNAD ADDRESS A41000 50400020
*SAVE RETURN INDICATION                                                 50500020
         RETURN (14,12)                 RETURN TO IEF078                50600020
*CONSTANTS                                                              50700020
         DS    0F                                                       50800020
ONE      DC    F'1'                                                     50900020
OTWY     DC    F'120'                                                   51000020
THIR     DC    F'13'                                                    51100020
SEVN     DC    F'7'                                                     51200020
EIGHT    DC    F'8'                                                     51300020
ETY      DC    F'80'                                                    51400020
FOR      DC    F'4'                                                     51500020
BTWLV    DC    X'0C000000'              TO INDICATE MESSAGE INPUT  VS0H 51600020
SD89EXIT DC    V(IEFSD089)              OUTPUT ROUTINE                  51700020
SD88EXIT DC    V(IEFSD088)              TRANSITION ROUTINE              51800020
FANFOLD  DC    120C'*'                                                  51900020
         DS    0F                                                A27785 52000020
         DC    C'SUPERZAP'                                              52100020
         DC    C'SUPERZAP'                                              52200020
         DC    C'SUPERZAP'                                              52300020
         DC    C'SUPERZAP'                                              52400020
         DC    C'SUPERZAP'                                              52500020
         DC    C'SUPERZAP'                                              52600020
         DC    C'SUPERZAP'                                              52700020
         END                                                            52800020
./  ADD  SSI=20830438,NAME=IEFSD095
         TITLE 'IEFSD095 BLOCK LETTER AND NUMBER ROUTINE'               00020000
*********************************************************************** 00040000
*                                                                     * 00060000
*STATUS - CHANGE LEVEL 000                                            * 00080000
*                                                                     * 00100000
*FUNCTION -                                                           * 00120000
*                                                                     * 00140000
*   BUILD IN OUT AREA ONE LINE TO BE LATER PUT OUT ON PRINTER         * 00160000
*                                                                     * 00180000
*OPERATION -                                                          * 00200000
*                                                                     * 00220000
*ENTRY POINT -  IEFSD095                                              * 00240000
*                                                                     * 00260000
*INPUT -                                                              * 00280000
*   REGISTER 1 POINTS TO THE PARAMETER LIST CONTAINING THE ADDRESS OF * 00300000
*   CHARACTERS WHICH ARE TO BE CONSTRUCTED IN BLOCK FORM,THE ADDRESS  * 00320000
*   OF THE LINE COUNT,THE ADDRESS OF THE CONSTRUCTION AREA , AND THE  * 00340000
*   ADDRESS OF THE THE NUMBER OF CHARACTERS IN THE STRING .           * 00360000
*                                                                     * 00380000
*EXIT POINT - RETURN TO CALLING PROGRAM WITH REGISTERS INTACT         * 00400000
*                                                                     * 00420000
*OUTPUT -                                                             * 00440000
*   SAME AS INPUT PLUS OUT AREA HAS BEEN FILLED WITH STRING OF CHARS. * 00460000
*                                                                     * 00480000
*EXTERNAL ROUTINES -                                                  * 00500000
*                                                                     * 00520000
*             NONE                                                    * 00540000
*                                                                     * 00560000
*TABLES/WORK AREAS -                                                  * 00580000
*                                                                     * 00600000
*                                                                     * 00620000
*   THE WORK AREA FOR THIS MODULE APPEARS AS FOLLOWS :                * 00640000
*                   /     SAVE CHARACTER       /                      * 00660000
*                   /--------------------------/                      * 00680000
*                   /      SAVE REGISTERS      /                      * 00700000
*                   /--------------------------/                      * 00720000
*                   /      6 UNUSED WORDS      /                      * 00740000
*                   /--------------------------/                      * 00760000
*                   .                          .                      * 00780000
*                   .                          .                      * 00800000
*                   .                          .                      * 00820000
*                   /--------------------------/                      * 00840000
*                                                                     * 00860000
*                                                                     * 00880000
*ATTRIBUTES - REENTRANT                                               * 00900000
*                                                                     * 00920000
*********************************************************************** 00940000
*                         NEEDED DSECT                                * 00960000
*                                                                       00980000
R0       EQU   0                                                        01000000
R1       EQU   1                                                        01020000
R2       EQU   2                                                        01040000
R3       EQU   3                                                        01060000
R4       EQU   4                                                        01080000
R5       EQU   5                                                        01100000
R6       EQU   6                                                        01120000
R7       EQU   7                                                        01140000
R8       EQU   8                                                        01160000
R9       EQU   9                                                        01180000
R10      EQU   10                                                       01200000
R11      EQU   11                                                       01220000
R12      EQU   12                                                       01240000
R13      EQU   13                                                       01260000
R14      EQU   14                                                       01280000
R15      EQU   15                                                       01300000
WORKAREA DSECT                                                          01320000
         DS    0F                                                       01340000
SAVECHAR DS    F                                                        01360000
SAVEREGR DS    F                                                        01380000
UNUSEDPT DS    6F                                                       01400000
WORKEND  EQU   *                                                        01420000
*INITIALIZE                                                             01440000
IEFSD095 CSECT                                                          01460000
         SAVE  (14,12)             SAVE REGISTERS                       01480000
         BALR  R9,0                SET BASE REGISTER                    01500000
         USING *,R9                                                     01520000
         L     R3,4(R1)                                                 01540000
         L     R3,0(R3)                                                 01560000
         L     R4,8(R1)                                                 01580000
         L     R11,12(R1)                                               01600000
         L     R11,0(R11)                                               01620000
         L     R1,0(R1)                                                 01640000
         LR    R10,R1                  SAVE R1                          01660000
         LA    R0,WORKEND-WORKAREA                                      01680000
         GETMAIN R,LV=(0)              GET CORE FOR WORK AREA           01700000
         LR    R12,R1                                                   01720000
         USING WORKAREA,R12                                             01740000
         LR    R1,R10                  RESTORE R1                       01760000
         ST    R13,SAVEREGR            SAVE R 13                        01780000
         XC    SAVECHAR(4),SAVECHAR    ZERO SAVECHARACTER               01800000
LOOP     MVC   SAVECHAR+3(1),0(R1)     GET CHARACTER                    01820000
         L     R2,SAVECHAR             PUT IT IN R2                     01840000
         LR    R10,R2                  SAVE IT IN R10                   01860000
         C     R2,BNK                    IS IT BLANK IF SO              01880000
         BE    FBL                       BRANCH TO FBL                  01900000
         C     R2,C1                     IS IT LESS THAN C1 IF SO       01920000
         BL    TROUBLE                   BRANCH TO TROUBLE              01940000
         C     R2,CA                     IS IT LESS THAN CA IF SO       01960000
         BL    TEST2                     BRANCH TO TEST2                01980000
         C     R2,D1                     IS IT LESS THAN D1 IF SO       02000000
         BL    TROUBLE                   BRANCH TO TROUBLE              02020000
         C     R2,DA                     IS IT LESS THAN DA IF SO       02040000
         BL    TEST3                     BRANCH TO TEST3                02060000
         C     R2,E2                     IS IT LESS THAN E2 IF SO       02080000
         BL    TROUBLE                   BRANCH TO TROUBLE              02100000
         C     R2,EA                     IS IT LESS THAN EA IF SO       02120000
         BL    TEST4                     BRANCH TO TEST4                02140000
         C     R2,F0                     IS IT LESS THAN F0 IF SO       02160000
         BL    TROUBLE                   BRANCH TO TROUBLE              02180000
         C     R2,FA                     IS IT LESS THAN FA IF SO       02200000
         BL    TEST5                     BRANCH TO TEST5                02220000
TROUBLE  B     FBL                 SET ILLEGAL CHARACTER TO BLANK       02240000
FBL      LA    R6,CHARACTR-1       SET R6 TO ADDR OF BLANK              02260000
         B     EXIT1               GO TO EXIT1                          02280000
TEST2    S     R2,C0               GET OFF SET                          02300000
         MH    R2,TWLV+2                                                02320000
         LA    R6,CHARACTR-1       SET R6 TO ADDR OF LETTER             02340000
         AR    R6,R2                                                    02360000
         B     EXIT1                                                    02380000
TEST3    S     R2,D0               GET OFF SET                          02400000
         MH    R2,TWLV+2                                                02420000
         A     R2,ONZET                                                 02440000
         LA    R6,CHARACTR-1       SET R6 TO ADDR OF LETTER             02460000
         AR    R6,R2                                                    02480000
         B     EXIT1                                                    02500000
TEST4    S     R2,E1               GET OFF SET                          02520000
         MH    R2,TWLV+2                                                02540000
         A     R2,TWOSX                                                 02560000
         LA    R6,CHARACTR-1       SET R6 TO ADDR OF LETTER             02580000
         AR    R6,R2                                                    02600000
         B     EXIT1                                                    02620000
TEST5    S     R2,EF               GET OFF SET                          02640000
         MH    R2,TWLV+2                                                02660000
         A     R2,TROTW                                                 02680000
         LA    R6,CHARACTR-1       SET R6 TO ADDR OF LETTER             02700000
         AR    R6,R2                                                    02720000
*GET POINTER TO LINE PATTERN                                            02740000
EXIT1    XR    R7,R7               ZERO R7                              02760000
         AR    R6,R3                                                    02780000
         IC    R7,0(R6)                                                 02800000
*                                  LINE PATTERN FROM LINEPATN           02820000
         LA    R8,LINEPATN                                              02840000
         AR    R7,R8                                                    02860000
         LH    R5,0(R7)                              *                  02880000
         SLL   R5,19                                ***                 02900000
         O     R5,ONEX                                                  02920000
         BXH   R5,R5,LP1                           * * *                02940000
        STC   R10,0(R4)                              *                  02960000
LP1      BXH   R5,R5,LP2                             *                  02980000
        STC   R10,1(R4)                              *                  03000000
LP2      BXH   R5,R5,LP3                             *                  03020000
        STC   R10,2(R4)                              *                  03040000
LP3      BXH   R5,R5,LP4                             *                  03060000
        STC   R10,3(R4)                              *                  03080000
LP4      BXH   R5,R5,LP5                             *                  03100000
        STC   R10,4(R4)                              *                  03120000
LP5      BXH   R5,R5,LP6           THIS SECTION OF CODE STORES THE      03140000
        STC   R10,5(R4)            CHARACTER IF THE BIT IS ON           03160000
LP6      BXH   R5,R5,LP7           LINE PATTERN,OTHERWISE NO STORE      03180000
        STC   R10,6(R4)                              *                  03200000
LP7      BXH   R5,R5,LP8                             *                  03220000
        STC   R10,7(R4)                              *                  03240000
LP8      BXH   R5,R5,LP9                             *                  03260000
        STC   R10,8(R4)                              *                  03280000
LP9      BXH   R5,R5,LP10                            *                  03300000
        STC   R10,9(R4)                              *                  03320000
LP10     BXH   R5,R5,LP11                            *                  03340000
        STC   R10,10(R4)                           * * *                03360000
LP11     BXH   R5,R5,LP12                           ***                 03380000
        STC   R10,11(R4)                             *                  03400000
LP12     A     R4,FORT             ADD 14 TO ADDR OF OUT AREA FOR NEXT  03420000
*                                  CHARACTER TO BEGIN AT                03440000
         A     R1,ONEX             ADD 1 TO ADDR OF CHARACTER STRING    03460000
*                                  TO POINT TO NEXT CHARACTER           03480000
         S     R11,ONEX            SUBTRACT 1 FROM NUMBER OF CHARACTERS 03500000
         XR    R8,R8               ZERO R8                              03520000
         CR    R11,R8              IS R11 GREATER THAN ZERO IF SO       03540000
         BH    LOOP                BRANCH TO DO NEXT CHARACTER          03560000
         L     R13,SAVEREGR        RESTORE R13                          03580000
         LA    R0,WORKEND-WORKAREA                                      03600000
         LR    R1,R12                                                   03620000
         FREEMAIN R,LV=(0),A=(1)   FREE CORE                            03640000
         RETURN (14,12)            RETURN TO CALLING PROGRAM            03660000
*CONSTANTS                                                              03680000
         DS    0F                                                       03700000
BNK      DC    XL4'40'                                                  03720000
C1       DC    XL4'C1'                                                  03740000
CA       DC    XL4'CA'                                                  03760000
D1       DC    XL4'D1'                                                  03780000
DA       DC    XL4'DA'                                                  03800000
E2       DC    XL4'E2'                                                  03820000
EA       DC    XL4'EA'                                                  03840000
F0       DC    XL4'F0'                                                  03860000
FA       DC    XL4'FA'                                                  03880000
C0       DC    XL4'C0'                                                  03900000
D0       DC    XL4'D0'                                                  03920000
E1       DC    XL4'E1'                                                  03940000
EF       DC    XL4'EF'                                                  03960000
TWLV     DC    XL4'0C'                                                  03980000
ONZET    DC    XL4'6C'                                                  04000000
TWOSX    DC    XL4'D8'                                                  04020000
TROTW    DC    XL4'0138'                                                04040000
FORT     DC    XL4'0E'                                                  04060000
ONEX     DC    XL4'01'                                                  04080000
*********************************************************************** 04100000
*                                                                     * 04120000
*        FOLLOWING IS THE CHARACTER PARM LIST CONTAINING 444 BYTES    * 04140000
*        WHERE EACH BYTE IS THE OFF SET FROM L1 IN THE LINE PARAMETER * 04160000
*        LIST WHERE ONE LINE PATTERN OF A PARTICULAL CHARACTER IS     * 04180000
*        STORED . A CHARACTER IS REPRESENTED BY 12 ORDERED LINE       * 04200000
*        PATTERNS .FOR EXAMPLE A IS REPRESENTED BY THE  FOLLOWING     * 04220000
*        ORDERED LINE PATTERNS  L2,L1,L5,L5,L5,L1,L1,L5,L5,L5,L5,L5   * 04240000
*        AND WILL APPEAR ON THE PRINTER AS FOLLOWS                    * 04260000
*                                                                     * 04280000
*                             AAAAAAAAAA                              * 04300000
*                            AAAAAAAAAAAA                             * 04320000
*                            AA        AA                             * 04340000
*                            AA        AA                             * 04360000
*                            AA        AA                             * 04380000
*                            AAAAAAAAAAAA                             * 04400000
*                            AAAAAAAAAAAA                             * 04420000
*                            AA        AA                             * 04440000
*                            AA        AA                             * 04460000
*                            AA        AA                             * 04480000
*                            AA        AA                             * 04500000
*                            AA        AA                             * 04520000
*                                                                     * 04540000
*********************************************************************** 04560000
CHARACTR DS    0F                                                       04580000
BLANK    DC    12X'4C'                                                  04600000
A        DC    X'020008080800000808080808'                              04620000
B        DC    X'2C000808322A2A320808002C'                              04640000
C        DC    X'020008262626262626080002'                              04660000
D        DC    X'282A32080808080808322A28'                              04680000
E        DC    X'000026262668682626260000'                              04700000
F        DC    X'000026262668682626262626'                              04720000
G        DC    X'020008262626343408080002'                              04740000
H        DC    X'080808080800000808080808'                              04760000
I        DC    X'020214141414141414140202'                              04780000
J        DC    X'66660A0A0A0A0A0A3A3A686A'                              04800000
K        DC    X'08322E3C3A36363A3C2E3208'                              04820000
L        DC    X'262626262626262626260000'                              04840000
M        DC    X'083E40424446080808080808'                              04860000
N        DC    X'086C6E484A464E5052540876'                              04880000
O        DC    X'000008080808080808080000'                              04900000
P        DC    X'2C00080808002C2626262626'                              04920000
Q        DC    X'020008080808084E50522C56'                              04940000
R        DC    X'2C00080808002C3A3C2E3208'                              04960000
S        DC    X'02000826585A5C5E64080002'                              04980000
T        DC    X'000014141414141414141414'                              05000000
U        DC    X'080808080808080808080002'                              05020000
V        DC    X'080808080808083062206014'                              05040000
W        DC    X'080808080808464442403E08'                              05060000
X        DC    X'080830622060602062300808'                              05080000
Y        DC    X'080830622060141414141414'                              05100000
Z        DC    X'00001070120A147216742400'                              05120000
ZERO     DC    X'040208080808080808080204'                              05140000
ONE      DC    X'140C0E141414141414140202'                              05160000
TWO      DC    X'020008646410121416180000'                              05180000
THREE    DC    X'02000864641A1A6464080002'                              05200000
FOUR     DC    X'061C1E202224001212121212'                              05220000
FIVE     DC    X'0000262626282A106464002C'                              05240000
SIX      DC    X'02000826262C000808080002'                              05260000
SEVEN    DC    X'002C2E120A14141414141414'                              05280000
EIGHT    DC    X'020008083004043008080002'                              05300000
NINE     DC    X'020008080800006464080002'                              05320000
*********************************************************************** 05340000
*                                                                     * 05360000
*        FOLLOWING IS THE LINE PARAMETER LIST CONTAINING 60           * 05380000
*        DISTINCT LINE PATTERNS . IF THE BIT IS ON THE CHARACTER      * 05400000
*        THE CHARACTER IS SUPPRESSED . A COMBINATION OF 12 LINE       * 05420000
*        PATTERNS ( AS SPECIFIED IN THE CHARACTER REPRESENTATION      * 05440000
*        LIST ) REPRESENTS EITHER A BLANK , A LETTER FROM A TO Z,     * 05460000
*        OR A NUMBER FROM 0 TO 9 .                                    * 05480000
*                                                                     * 05500000
*********************************************************************** 05520000
LINEPATN DS    0F                                                       05540000
L1       DC    BL2'111111111111'                                        05560000
L2       DC    BL2'011111111110'                                        05580000
L3       DC    BL2'001111111100'                                        05600000
L4       DC    BL2'000000111000'                                        05620000
L5       DC    BL2'110000000011'                                        05640000
L6       DC    BL2'000000110000'                                        05660000
L7       DC    BL2'000011100000'                                        05680000
L8       DC    BL2'000111100000'                                        05700000
*        WILL BE PRINTED AND IF THE BIT IS OFF THE PRINTING OF        * 05720000
L9       DC    BL2'000000000110'                                        05740000
L10      DC    BL2'000000011000'                                        05760000
L11      DC    BL2'000001100000'                                        05780000
L12      DC    BL2'000110000000'                                        05800000
L13      DC    BL2'011000000000'                                        05820000
L14      DC    BL2'000000011110'                                        05840000
L15      DC    BL2'000001111000'                                        05860000
*                                                                     * 05880000
*                                                                     * 05900000
*                   /--------------------------/                      * 05920000
L16      DC    BL2'000011011000'                                        05940000
L17      DC    BL2'000110011000'                                        05960000
L18      DC    BL2'001100011000'                                        05980000
L19      DC    BL2'011111111111'                                        06000000
L20      DC    BL2'110000000000'                                        06020000
L21      DC    BL2'111111111000'                                        06040000
L22      DC    BL2'111111111100'                                        06060000
L23      DC    BL2'111111111110'                                        06080000
L24      DC    BL2'110000001100'                                        06100000
L25      DC    BL2'011000000110'                                        06120000
L26      DC    BL2'110000000110'                                        06140000
L27      DC    BL2'110000011111'                                        06160000
L28      DC    BL2'111111100000'                                        06180000
L29      DC    BL2'110001100000'                                        06200000
L30      DC    BL2'110000110000'                                        06220000
L31      DC    BL2'110000011000'                                        06240000
L32      DC    BL2'111000000111'                                        06260000
L33      DC    BL2'111100001111'                                        06280000
L34      DC    BL2'110110011011'                                        06300000
L35      DC    BL2'110011110011'                                        06320000
L36      DC    BL2'110001100011'                                        06340000
L37      DC    BL2'110110000011'                                        06360000
L38      DC    BL2'110011000011'                                        06380000
L39      DC    BL2'000000000000'                                        06400000
L40      DC    BL2'110000110011'                                        06420000
L41      DC    BL2'110000011011'                                        06440000
L42      DC    BL2'110000001111'                                        06460000
L43      DC    BL2'110000000111'                                        06480000
L44      DC    BL2'011111111011'                                        06500000
L45      DC    BL2'111000000000'                                        06520000
L46      DC    BL2'011111111100'                                        06540000
L47      DC    BL2'001111111110'                                        06560000
L48      DC    BL2'000000000111'                                        06580000
L49      DC    BL2'000011110000'                                        06600000
L50      DC    BL2'001100001100'                                        06620000
L51      DC    BL2'000000000011'                                        06640000
L52      DC    BL2'001111111111'                                        06660000
L53      DC    BL2'111111110000'                                        06680000
L54      DC    BL2'011111100000'                                        06700000
L55      DC    BL2'111000000011'                                        06720000
L56      DC    BL2'111100000011'                                        06740000
L57      DC    BL2'000000001100'                                        06760000
L58      DC    BL2'000011000000'                                        06780000
L59      DC    BL2'001100000000'                                        06800000
L60      DC    BL2'110000000001'                                        06820000
         END                                                            06840000
